{"context": "\n\nProcessing \u3067\u7d75\u3092\u63cf\u3053\u3046\n\u3061\u3087\u3063\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f7f\u3063\u3066\u56f3\u5f62\u63cf\u753b\u3092\u3057\u305f\u304f\u306a\u3063\u305f\u306e\u3067\u3001\u7c21\u5358\u306b\u304b\u3051\u308b\u4ed5\u7d44\u307f\u306f\u306a\u3044\u304b\u3068\u63a2\u3057\u3066\u3001Processing\u306b\u884c\u304d\u7740\u3044\u305f\u3002\n\u6614\u8a71\u3067\u6050\u7e2e\u3060\u304c\u3001\u5927\u6614\u307e\u3060BASIC(Visual Basic\u3058\u3083\u306a\u3044\u3088\uff09\u304c\u73fe\u5f79\u3060\u3063\u305f\u3053\u308d\u3001\u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f7f\u3063\u3066\u306e\u753b\u50cf\u63cf\u753b\u306f\u3001BASIC\u3067\u306f\u304a\u624b\u306e\u7269\u3060\u3063\u305f\u3002\u30d1\u30e9\u30e1\u30bf\u3092\u4f7f\u3063\u3066\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3067\u898f\u5247\u7684\u306b\u63cf\u304f\u3001\u3068\u304b\u306d\u3002\n\u52c9\u5f37\u304c\u3066\u3089\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u3063\u305f\u306e\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002Processing\u3067\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u57fa\u672c\u7684\u306a\u3068\u3053\u308d\u304c\u78ba\u8a8d\u3067\u304d\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\nProcessing3 \u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u306e\u524d\u63d0\u3067\u9032\u3081\u307e\u3059\u3002\n\uff08\u53c2\u8003\uff09\nProcessing \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\n\n\"Hello, World!\"\nJavascript\u3067\u3044\u3046\u3068\u3053\u308d\u306econsole.log\u306b\u5f53\u305f\u308b\u306e\u304cprint\u3068println\u3002println\u3060\u3068\u81ea\u52d5\u7684\u306b\u6539\u884c\u304c\u5165\u308b\u3002\u7d50\u679c\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u30fb\u30a8\u30ea\u30a2\u306b\u51fa\u529b\u3055\u308c\u308b\u3002\u30c7\u30d0\u30c3\u30b0\u306b\u3069\u3046\u305e\u3002\nprintln(\"Hello, World!!\");\n\n\n\u57fa\u672c\u8a2d\u5b9a\nsize(int,int)\u3067\u51fa\u529b\u30a8\u30ea\u30a2\u306e\u30d4\u30af\u30bb\u30eb\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u3002\u306a\u304a\u3001size()\u306b\u5909\u6570\u306f\u6e21\u305b\u306a\u3044\u3002\uff08reference\uff09\ncolorMode()\u3067\u8272\u7a7a\u9593\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3002\u7b2c\u4e00\u5f15\u6570\u3067\u5b9a\u6570RGB\u304bHSV\u3092\u6307\u5b9a\u3057\u3066\u3069\u3061\u3089\u304b\u306e\u8272\u7a7a\u9593\u3092\u9078\u3076 1\u3002\u7b2c\u4e8c\u5f15\u6570\u4ee5\u964d\u3067\u5024\u306e\u7bc4\u56f2\u3092\u6307\u5b9a\u3067\u304d\u308b\u30021.0\u3067\u3042\u308c\u3070\u3001\u5024\u304c\u306f0.0~1.0\u306e\u5b9f\u6570\u3092\u53d6\u308a\u3001100\u3084255\u3067\u3042\u308c\u30700~100\u30010~255\u306e\u5024\u3092\u3068\u308b\u3002\uff08reference\uff09\n\n2D\u30d7\u30ed\u30b0\u30e9\u30e0\u30b5\u30f3\u30d7\u30eb\n\u5143\u304cJava\u306e\u305f\u3081\u3001Java\u65b9\u5f0f\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u304b\u3051\u308b\u3002\u305d\u3057\u3066\u9762\u5012\u306a\u30af\u30e9\u30b9\u5ba3\u8a00\u3068\u304b\u306f\u4e0d\u8981\u3002\n\u5909\u6570\u306b\u306f\u3044\u304f\u3064\u304b\u578b\u304c\u3042\u308b\u3002Java \u65b9\u5f0f\u3067\u5024\u3092\u5ba3\u8a00\u30fb\u4ee3\u5165\u3067\u304d\u3001\u914d\u5217\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002,\u6f14\u7b97\u5b50\u3092\u4f7f\u3063\u3066\u540c\u6642\u306b\u4ee3\u5165\u3082\u53ef\u80fd\u3002\n\u57fa\u672c\u7684\u306a\u578b\uff08int, float, boolean, String\uff09\u3001\u6f14\u7b97\u5b50\u3001if\u3084for\u3084while\u306a\u3069\u306e\u5f0f\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u4f5c\u3063\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3053\u3061\u3089\u3002\n/* initializing screen size */\nsize(640,480);\ncolorMode(RGB,255);\n\ncolor yellow = color(241, 181,   0);      // Type color\ncolor blue   = color( 26,  84, 165, 64);  // specifying alpha\ncolor red    = color(185,  31,  87);\ncolor green  = color(  0, 116, 136);\n\nbackground(yellow);  // fulfill background\n\n/* drawing title */\nString title = \"Sample\";\ntextSize(20);\nfill(green);\ntext(title, 20,20);\n\n/* drawing graphs */\nboolean draw_line = second()%2 == 1 ? true:false;  // Change logic by second\n\nif ( draw_line ){\n\n  /* lines */\n  int[] x= { 100, 540 };  // Array declering and substitution \n  int[] y= { 100, 380 };\n\n  stroke(blue);  // decide line color\n  for ( int i=0; i<=10; i++ ){\n    line(x[0]          , y[0]+i*28, x[0]+i*44, y[1]);\n    line(x[1]-(10-i)*44, y[0]     , x[1]     , y[0]+i*28);\n  }\n\n} else {\n\n  /* circles */\n  for ( int i=0; i<10; i++ ){\n    float alpha = random(0, 256);  // alpha is relative to color mode.\n    fill(red, alpha);  // decide fulfill color\n    noStroke();        // and without line\n    ellipse( random(440)+100, random(280)+100, 100, 100 );\n  }\n}\n\n\n\n\n\n\n\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306e\u8272\u7a7a\u9593\u306f\u306a\u3044\u306e\u3067\u3001HSV\u3067\u4ee3\u7528\u3059\u308b\u3068\u3088\u3044\u3060\u308d\u3046\u3002\u00a0\u21a9\n\n\n\n# Processing \u3067\u7d75\u3092\u63cf\u3053\u3046\n\n\u3061\u3087\u3063\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f7f\u3063\u3066\u56f3\u5f62\u63cf\u753b\u3092\u3057\u305f\u304f\u306a\u3063\u305f\u306e\u3067\u3001\u7c21\u5358\u306b\u304b\u3051\u308b\u4ed5\u7d44\u307f\u306f\u306a\u3044\u304b\u3068\u63a2\u3057\u3066\u3001Processing\u306b\u884c\u304d\u7740\u3044\u305f\u3002\n\n\u6614\u8a71\u3067\u6050\u7e2e\u3060\u304c\u3001\u5927\u6614\u307e\u3060BASIC(Visual Basic\u3058\u3083\u306a\u3044\u3088\uff09\u304c\u73fe\u5f79\u3060\u3063\u305f\u3053\u308d\u3001\u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f7f\u3063\u3066\u306e\u753b\u50cf\u63cf\u753b\u306f\u3001BASIC\u3067\u306f\u304a\u624b\u306e\u7269\u3060\u3063\u305f\u3002\u30d1\u30e9\u30e1\u30bf\u3092\u4f7f\u3063\u3066\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3067\u898f\u5247\u7684\u306b\u63cf\u304f\u3001\u3068\u304b\u306d\u3002\n\n\u52c9\u5f37\u304c\u3066\u3089\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u3063\u305f\u306e\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002Processing\u3067\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u57fa\u672c\u7684\u306a\u3068\u3053\u308d\u304c\u78ba\u8a8d\u3067\u304d\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\nProcessing3 \u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u306e\u524d\u63d0\u3067\u9032\u3081\u307e\u3059\u3002\n\n\uff08\u53c2\u8003\uff09\n[Processing \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](https://processing.org/reference/)\n\n## \"Hello, World!\"\n\nJavascript\u3067\u3044\u3046\u3068\u3053\u308d\u306e`console.log`\u306b\u5f53\u305f\u308b\u306e\u304c`print`\u3068`println`\u3002`println`\u3060\u3068\u81ea\u52d5\u7684\u306b\u6539\u884c\u304c\u5165\u308b\u3002\u7d50\u679c\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u30fb\u30a8\u30ea\u30a2\u306b\u51fa\u529b\u3055\u308c\u308b\u3002\u30c7\u30d0\u30c3\u30b0\u306b\u3069\u3046\u305e\u3002\n\n```\nprintln(\"Hello, World!!\");\n```\n\n## \u57fa\u672c\u8a2d\u5b9a\n\n`size(int,int)`\u3067\u51fa\u529b\u30a8\u30ea\u30a2\u306e\u30d4\u30af\u30bb\u30eb\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u3002\u306a\u304a\u3001`size()`\u306b\u5909\u6570\u306f\u6e21\u305b\u306a\u3044\u3002\uff08[reference](https://processing.org/reference/size_.html)\uff09\n`colorMode()`\u3067\u8272\u7a7a\u9593\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3002\u7b2c\u4e00\u5f15\u6570\u3067\u5b9a\u6570`RGB`\u304b`HSV`\u3092\u6307\u5b9a\u3057\u3066\u3069\u3061\u3089\u304b\u306e\u8272\u7a7a\u9593\u3092\u9078\u3076 [^1]\u3002\u7b2c\u4e8c\u5f15\u6570\u4ee5\u964d\u3067\u5024\u306e\u7bc4\u56f2\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002`1.0`\u3067\u3042\u308c\u3070\u3001\u5024\u304c\u306f0.0~1.0\u306e\u5b9f\u6570\u3092\u53d6\u308a\u3001100\u3084255\u3067\u3042\u308c\u30700~100\u30010~255\u306e\u5024\u3092\u3068\u308b\u3002\uff08[reference](https://processing.org/reference/colorMode_.html)\uff09\n\n## 2D\u30d7\u30ed\u30b0\u30e9\u30e0\u30b5\u30f3\u30d7\u30eb\n\n\u5143\u304cJava\u306e\u305f\u3081\u3001Java\u65b9\u5f0f\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u304b\u3051\u308b\u3002\u305d\u3057\u3066\u9762\u5012\u306a\u30af\u30e9\u30b9\u5ba3\u8a00\u3068\u304b\u306f\u4e0d\u8981\u3002\n\n\u5909\u6570\u306b\u306f\u3044\u304f\u3064\u304b\u578b\u304c\u3042\u308b\u3002Java \u65b9\u5f0f\u3067\u5024\u3092\u5ba3\u8a00\u30fb\u4ee3\u5165\u3067\u304d\u3001\u914d\u5217\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002`,`\u6f14\u7b97\u5b50\u3092\u4f7f\u3063\u3066\u540c\u6642\u306b\u4ee3\u5165\u3082\u53ef\u80fd\u3002\n\n\u57fa\u672c\u7684\u306a\u578b\uff08`int`, `float`, `boolean`, `String`\uff09\u3001\u6f14\u7b97\u5b50\u3001`if`\u3084`for`\u3084`while`\u306a\u3069\u306e\u5f0f\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\n\u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u4f5c\u3063\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3053\u3061\u3089\u3002\n\n```java\n/* initializing screen size */\nsize(640,480);\ncolorMode(RGB,255);\n  \ncolor yellow = color(241, 181,   0);      // Type color\ncolor blue   = color( 26,  84, 165, 64);  // specifying alpha\ncolor red    = color(185,  31,  87);\ncolor green  = color(  0, 116, 136);\n\nbackground(yellow);  // fulfill background\n\n/* drawing title */\nString title = \"Sample\";\ntextSize(20);\nfill(green);\ntext(title, 20,20);\n\n/* drawing graphs */\nboolean draw_line = second()%2 == 1 ? true:false;  // Change logic by second\n  \nif ( draw_line ){\n\n  /* lines */\n  int[] x= { 100, 540 };  // Array declering and substitution \n  int[] y= { 100, 380 };\n  \n  stroke(blue);  // decide line color\n  for ( int i=0; i<=10; i++ ){\n    line(x[0]          , y[0]+i*28, x[0]+i*44, y[1]);\n    line(x[1]-(10-i)*44, y[0]     , x[1]     , y[0]+i*28);\n  }\n\n} else {\n\n  /* circles */\n  for ( int i=0; i<10; i++ ){\n    float alpha = random(0, 256);  // alpha is relative to color mode.\n    fill(red, alpha);  // decide fulfill color\n    noStroke();        // and without line\n    ellipse( random(440)+100, random(280)+100, 100, 100 );\n  }\n}\n```\n\n\n----\n[^1]: \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306e\u8272\u7a7a\u9593\u306f\u306a\u3044\u306e\u3067\u3001HSV\u3067\u4ee3\u7528\u3059\u308b\u3068\u3088\u3044\u3060\u308d\u3046\u3002\n", "tags": ["processing"]}