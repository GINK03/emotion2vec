{"context": "ISO8601\u62e1\u5f35\u8868\u8a18(UTC)\u306e\u6642\u523b\u306e\u6587\u5b57\u5217\u3092\u7aef\u672b\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u3002\n\u7aef\u672b\u306e\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u304c\u6a19\u6e96\u3067\u3042\u308b\u304b\u306a\u3068\u601d\u3063\u305f\u3051\u3069\u3001\u898b\u3064\u3051\u3089\u308c\u306a\u304b\u3063\u305f\u306e\u3067JNI\u3092\u4f7f\u3063\u305f\u3002\n\n\u60f3\u5b9a\u3059\u308b\u5834\u9762\nWebAPI\u306a\u3069\u304b\u3089\u53d7\u3051\u53d6\u308b\u6642\u523b\u306e\u5f62\u5f0f\u304c\u3001\"2016-02-05T04:29:30Z\"\u3068\u306a\u3063\u3066\u3044\u308b\u304c\u3001\n\u753b\u9762\u4e0a\u306b\u8868\u793a\u3059\u308b\u5f62\u5f0f\u306f\u7aef\u672b\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u306b\u5909\u63db\u3057\u305f\u4e0a\u3067\n\"2016-02-05 13:29:30\"\u3068\u306a\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\n\n\u5171\u901a\u30d8\u30c3\u30c0\n\nClasses/native/TimeHelper.h\n#ifndef ___native_TimeHelper___\n#define ___native_TimeHelper___\n\nnamespace native {\n\n    class TimeHelper {\n    public:\n        /**\n         * ISO8601\u62e1\u5f35\u8868\u8a18\u306e\u6587\u5b57\u5217\u3092\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u306e\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\n         *\n         * \u5909\u63db\u4f8b: \u7aef\u672b\u306e\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u304c\u65e5\u672c\u6a19\u6e96\u6642(+09:00)\u306e\u5834\u5408\n         * \"2016-02-05T04:29:30Z\" => \"2016-02-05 13:29:30\"\n         *\n         * @param iso8601TimeString ISO8601\u62e1\u5f35\u8868\u8a18\u306e\u6587\u5b57\u5217 \"yyyy-MM-dd'T'HH:mm:ss'Z'\"\n         * @return \"yyyy-mm-dd HH:MM:SS\"\u306e\u5f62\u5f0f\n         */\n        static std::string convertToLocalTimeForDisplay(std::string iso8601TimeString);\n    };\n}\n\n#endif\n\n\n\nAndroid\u7528\n\nClasses/native/TimeHelper.cpp\n#include \"native/TimeHelper.h\"\n#include \"cocos2d.h\"\n#include \"platform/android/jni/JniHelper.h\"\n\nUSING_NS_CC;\nusing namespace native;\n\nstd::string TimeHelper::convertToLocalTimeForDisplay(std::string iso8601TimeString) {\n    cocos2d::JniMethodInfo methodInfo;\n\n    auto className = \"org.cocos2dx.cpp.util.TimeHelper\";\n    auto methodName = \"convertToLocalTimeForDisplay\";\n    if (!cocos2d::JniHelper::getStaticMethodInfo(methodInfo, className, methodName, \"(Ljava/lang/String;)Ljava/lang/String;\")) {\n        log(\"Failed to find static method of %s#%s\", className, methodName);\n        return iso8601TimeString;\n    }\n\n    jstring jstrTimeString = methodInfo.env->NewStringUTF(iso8601TimeString.c_str());\n    jobject objResult = methodInfo.env->CallStaticObjectMethod(methodInfo.classID, methodInfo.methodID, jstrTimeString);\n    std::string ret = JniHelper::jstring2string((jstring)objResult);\n    log(\"convert to local time: %s\", ret.c_str());\n\n    methodInfo.env->DeleteLocalRef(methodInfo.classID);\n\n    return ret;\n}\n\n\n\niOS\u7528\n\nClasses/native/TimeHelper.mm\n#include \"../native/TimeHelper.h\"\n#include \"cocos2d.h\"\n\nUSING_NS_CC;\nusing namespace native;\n\nstd::string TimeHelper::convertToLocalTimeForDisplay(std::string iso8601TimeString) {\n    // ISO8601\u5f62\u5f0f\u306e\u6587\u5b57\u5217\u3092NSDate\u306b\u5909\u63db\n    // formatter\u306b\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\n    // \u30ed\u30fc\u30ab\u30eb\u306e\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u304c\u9069\u7528\u3055\u308c\u305fNSDate\u304c\u53d6\u5f97\u3067\u304d\u308b\u306f\u305a\n    NSString *utcIso8601String = [NSString stringWithUTF8String:iso8601TimeString.c_str()];\n    NSDateFormatter* formatter = [[NSDateFormatter alloc] init];\n    [formatter setDateFormat:@\"yyyy-MM-dd'T'HH:mm:ssZ\"];\n    NSDate* date = [formatter dateFromString:utcIso8601String];\n    [formatter release];\n\n    // \u76ee\u7684\u306e\u66f8\u5f0f\u306b\u5909\u63db\u3059\u308b\n    formatter = [[NSDateFormatter alloc] init];\n    [formatter setDateFormat:@\"yyyy-MM-dd HH:mm:ss\"];\n    NSString* localDateString = [formatter stringFromDate:date];\n    [formatter release];\n\n    return [localDateString UTF8String];\n}\n\n\n\n\n\u30cd\u30a4\u30c6\u30a3\u30d6\u5074(Android)\n\norg/cocos2dx/cpp/util/TimeHelper.java\npackage org.cocos2dx.cpp.util;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.Locale;\nimport java.util.TimeZone;\n\npublic class TimeHelper {\n\n    /**\n     * ISO8601\u62e1\u5f35\u8868\u8a18\u306e\u6587\u5b57\u5217\u3092\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u3067\u8fd4\u3059\n     *\n     * @param iso8601UTCString ISO8601\u62e1\u5f35\u8868\u8a18\u306e\u4e16\u754c\u6a19\u6e96\u6642\u523b\u306e\u6587\u5b57\u5217\n     * @return \"yyyy-mm-dd HH:MM:SS\"\u5f62\u5f0f\u306e\u30ed\u30fc\u30ab\u30eb\u6642\u523b\n     */\n    public static String convertToLocalTimeForDisplay(String iso8601UTCString) {\n        try {\n            // \u30ed\u30fc\u30ab\u30eb\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u306b\u5909\u63db\n            SimpleDateFormat iso8601Format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ENGLISH);\n            iso8601Format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n            Date date = iso8601Format.parse(iso8601UTCString);\n\n            // \u66f8\u5f0f\u3092\u6307\u5b9a\u3057\u3066\u8fd4\u3059\n            SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n            sdf.setTimeZone(TimeZone.getDefault());\n\n            return sdf.format(date);\n        }catch(Exception e) {\n            return null;\n        }\n    }\n}\n\n\n\n\nAndroid.mk\nLOCAL_SRC_FILES\u306bTimeHelper.cpp\u3092\u8ffd\u52a0\u3059\u308b\n\nproj.android-studio/app/jni/Android.mk\n...\nLOCAL_SRC_FILES := hellocpp/main.cpp \\\n...\n                   ../../../Classes/native/TimeHelper.cpp \\\n...\n\n\n\niOS\u306e\u6ce8\u610f\u70b9\nXCode\u3067\u306f\u3001TimeHelper.h\u3068TimeHelper.mm\u306e\u307f\u3092\u8ffd\u52a0\u3059\u308b\u3002\nISO8601\u62e1\u5f35\u8868\u8a18(UTC)\u306e\u6642\u523b\u306e\u6587\u5b57\u5217\u3092\u7aef\u672b\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u3002\n\u7aef\u672b\u306e\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u304c\u6a19\u6e96\u3067\u3042\u308b\u304b\u306a\u3068\u601d\u3063\u305f\u3051\u3069\u3001\u898b\u3064\u3051\u3089\u308c\u306a\u304b\u3063\u305f\u306e\u3067JNI\u3092\u4f7f\u3063\u305f\u3002\n\n## \u60f3\u5b9a\u3059\u308b\u5834\u9762\nWebAPI\u306a\u3069\u304b\u3089\u53d7\u3051\u53d6\u308b\u6642\u523b\u306e\u5f62\u5f0f\u304c\u3001\"2016-02-05T04:29:30Z\"\u3068\u306a\u3063\u3066\u3044\u308b\u304c\u3001\n\u753b\u9762\u4e0a\u306b\u8868\u793a\u3059\u308b\u5f62\u5f0f\u306f\u7aef\u672b\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u306b\u5909\u63db\u3057\u305f\u4e0a\u3067\n\"2016-02-05 13:29:30\"\u3068\u306a\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\n\n## \u5171\u901a\u30d8\u30c3\u30c0\n\n```cpp:Classes/native/TimeHelper.h\n#ifndef ___native_TimeHelper___\n#define ___native_TimeHelper___\n\nnamespace native {\n\n    class TimeHelper {\n    public:\n        /**\n         * ISO8601\u62e1\u5f35\u8868\u8a18\u306e\u6587\u5b57\u5217\u3092\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u306e\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\n         *\n         * \u5909\u63db\u4f8b: \u7aef\u672b\u306e\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u304c\u65e5\u672c\u6a19\u6e96\u6642(+09:00)\u306e\u5834\u5408\n         * \"2016-02-05T04:29:30Z\" => \"2016-02-05 13:29:30\"\n         *\n         * @param iso8601TimeString ISO8601\u62e1\u5f35\u8868\u8a18\u306e\u6587\u5b57\u5217 \"yyyy-MM-dd'T'HH:mm:ss'Z'\"\n         * @return \"yyyy-mm-dd HH:MM:SS\"\u306e\u5f62\u5f0f\n         */\n        static std::string convertToLocalTimeForDisplay(std::string iso8601TimeString);\n    };\n}\n\n#endif\n```\n\n## Android\u7528\n\n```cpp:Classes/native/TimeHelper.cpp\n#include \"native/TimeHelper.h\"\n#include \"cocos2d.h\"\n#include \"platform/android/jni/JniHelper.h\"\n\nUSING_NS_CC;\nusing namespace native;\n\nstd::string TimeHelper::convertToLocalTimeForDisplay(std::string iso8601TimeString) {\n    cocos2d::JniMethodInfo methodInfo;\n\n    auto className = \"org.cocos2dx.cpp.util.TimeHelper\";\n    auto methodName = \"convertToLocalTimeForDisplay\";\n    if (!cocos2d::JniHelper::getStaticMethodInfo(methodInfo, className, methodName, \"(Ljava/lang/String;)Ljava/lang/String;\")) {\n        log(\"Failed to find static method of %s#%s\", className, methodName);\n        return iso8601TimeString;\n    }\n\n    jstring jstrTimeString = methodInfo.env->NewStringUTF(iso8601TimeString.c_str());\n    jobject objResult = methodInfo.env->CallStaticObjectMethod(methodInfo.classID, methodInfo.methodID, jstrTimeString);\n    std::string ret = JniHelper::jstring2string((jstring)objResult);\n    log(\"convert to local time: %s\", ret.c_str());\n\n    methodInfo.env->DeleteLocalRef(methodInfo.classID);\n\n    return ret;\n}\n```\n\n## iOS\u7528\n\n```cpp:Classes/native/TimeHelper.mm\n#include \"../native/TimeHelper.h\"\n#include \"cocos2d.h\"\n\nUSING_NS_CC;\nusing namespace native;\n\nstd::string TimeHelper::convertToLocalTimeForDisplay(std::string iso8601TimeString) {\n    // ISO8601\u5f62\u5f0f\u306e\u6587\u5b57\u5217\u3092NSDate\u306b\u5909\u63db\n    // formatter\u306b\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\n    // \u30ed\u30fc\u30ab\u30eb\u306e\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u304c\u9069\u7528\u3055\u308c\u305fNSDate\u304c\u53d6\u5f97\u3067\u304d\u308b\u306f\u305a\n    NSString *utcIso8601String = [NSString stringWithUTF8String:iso8601TimeString.c_str()];\n    NSDateFormatter* formatter = [[NSDateFormatter alloc] init];\n    [formatter setDateFormat:@\"yyyy-MM-dd'T'HH:mm:ssZ\"];\n    NSDate* date = [formatter dateFromString:utcIso8601String];\n    [formatter release];\n\n    // \u76ee\u7684\u306e\u66f8\u5f0f\u306b\u5909\u63db\u3059\u308b\n    formatter = [[NSDateFormatter alloc] init];\n    [formatter setDateFormat:@\"yyyy-MM-dd HH:mm:ss\"];\n    NSString* localDateString = [formatter stringFromDate:date];\n    [formatter release];\n\n    return [localDateString UTF8String];\n}\n```\n***\n\n## \u30cd\u30a4\u30c6\u30a3\u30d6\u5074(Android)\n\n```java:org/cocos2dx/cpp/util/TimeHelper.java\npackage org.cocos2dx.cpp.util;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.Locale;\nimport java.util.TimeZone;\n\npublic class TimeHelper {\n\n    /**\n     * ISO8601\u62e1\u5f35\u8868\u8a18\u306e\u6587\u5b57\u5217\u3092\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u3067\u8fd4\u3059\n     *\n     * @param iso8601UTCString ISO8601\u62e1\u5f35\u8868\u8a18\u306e\u4e16\u754c\u6a19\u6e96\u6642\u523b\u306e\u6587\u5b57\u5217\n     * @return \"yyyy-mm-dd HH:MM:SS\"\u5f62\u5f0f\u306e\u30ed\u30fc\u30ab\u30eb\u6642\u523b\n     */\n    public static String convertToLocalTimeForDisplay(String iso8601UTCString) {\n        try {\n            // \u30ed\u30fc\u30ab\u30eb\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u306b\u5909\u63db\n            SimpleDateFormat iso8601Format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ENGLISH);\n            iso8601Format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n            Date date = iso8601Format.parse(iso8601UTCString);\n\n            // \u66f8\u5f0f\u3092\u6307\u5b9a\u3057\u3066\u8fd4\u3059\n            SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n            sdf.setTimeZone(TimeZone.getDefault());\n\n            return sdf.format(date);\n        }catch(Exception e) {\n            return null;\n        }\n    }\n}\n\n```\n\n## Android.mk\n\nLOCAL_SRC_FILES\u306bTimeHelper.cpp\u3092\u8ffd\u52a0\u3059\u308b\n\n```mf:proj.android-studio/app/jni/Android.mk\n...\nLOCAL_SRC_FILES := hellocpp/main.cpp \\\n...\n                   ../../../Classes/native/TimeHelper.cpp \\\n...\n```\n\n## iOS\u306e\u6ce8\u610f\u70b9\nXCode\u3067\u306f\u3001TimeHelper.h\u3068TimeHelper.mm\u306e\u307f\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n\n\n", "tags": ["cocos2d-x", "C++"]}