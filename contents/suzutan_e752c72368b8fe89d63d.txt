{"context": "\u304a\u4e45\u3057\u3076\u308a\u3067\u3059\u3002\u4eca\u56de\u306fFuelPHP\u3067Twitter\u8a8d\u8a3c\u3092\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u74b0\u5883\nFuelPHP 1.7.2\nhttp://fuel_app/auth/login/twitter \u3067Twitter\u30ed\u30b0\u30a4\u30f3\u3059\u308b\n\nOpauth\u306e\u5b9f\u88c5\u65b9\u6cd5\u306f2\u7a2e\u985e\u3042\u308b\uff01\n\nComposer\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\nPackages\u30d5\u30a9\u30eb\u30c0\u306b\u76f4\u63a5clone\u3059\u308b\u65b9\u6cd5\n\n\u4eca\u56de\u306f\u3001Packages\u306b\u76f4\u63a5clone\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n\u624b\u9806\n\n1. \u30ea\u30dd\u30b8\u30c8\u30ea\u3092Clone\u3059\u308b\nhttps://github.com/andreoav/fuel-opauth.git \u3092\u5229\u7528\u3059\u308b\u306e\u3067\u3059\u304c\u3001Clone\u3057\u305f\u3060\u3051\u3067\u306f\u305d\u306e\u307e\u307e\u4f7f\u3048\u306a\u3044\u305f\u3081\u3001Fork\u3057\u3066\u4fee\u6b63\u3057\u305f\u3082\u306e\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u203b\u4fee\u6b63\u70b9\u306f\u3001TwitterAPI\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7(1\u21921.1)\u306b\u5bfe\u5fdc, namespace\u306e\u8a2d\u5b9a\ncd fuel/packages\ngit clone git://github.com/suzutan/fuel-opauth.git opauth\ncd ../../\n\n\n2. opauth.php\u306e\u8a2d\u5b9a\nopauth\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30d4\u30fc\ncp fuel/packages/auth/config/opauth.php fuel/app/config\nTwitter\u8a2d\u5b9a\u3092\u7de8\u96c6\nvim fuel/app/config/opauth.php\n\nfuel/app/config/opauth.php\n'Strategy' => array(\n        \"Twitter\" => array(\n            \"key\" => \"CONSUMER_KEY_HERE\",\n            \"secret\" => \"CONSUMER_SECRET_HERE\",\n        ),\n        //Facebook\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3061\u3089\n        //'Facebook' => array(\n            //'app_id' => 'APP_ID_HERE',\n            //'app_secret' => 'APP_SECRET_HERE'\n        //),        \n    ),\n\n\n\n3.\u30d1\u30c3\u30b1\u30fc\u30b8\u8aad\u307f\u8fbc\u307f\u306e\u8a2d\u5b9a\nvim fuel/app/config/config.php\n\nfuel/app/config/config.php\n'always_load' => array(\n    'packages' => array(\n        'opauth', //opauth\u3092\u8ffd\u52a0(auth\u3068\u304borm\u3042\u3063\u3066\u3082OK)\n    ),\n),\n\n\n\n4. Controller\u306e\u8a2d\u5b9a\nvim fuel/app/classes/controller/auth.php\n\nfuel/app/classes/controller/auth.php\n<?php\n\nclass Controller_Auth extends Controller\n{\n\n    private $_config = null;\n\n    public function before()\n    {\n        if(!isset($this->_config))\n        {\n            $this->_config = Config::load('opauth', 'opauth');\n        }\n    }\n\n\n    public function action_login($_provider = null)\n    {\n        if(array_key_exists(Inflector::humanize($_provider), Arr::get($this->_config, 'Strategy')))\n        {\n            $_oauth = new Opauth($this->_config, true);\n        }\n        else\n        {\n            return Response::forge('Strategy not supported');\n        }\n    }\n\n    public function action_callback()\n    {\n\n        $_opauth = new Opauth($this->_config, false);\n\n        switch($_opauth->env['callback_transport'])\n        {\n            case 'session':\n                session_start();\n                $response = $_SESSION['opauth'];\n                unset($_SESSION['opauth']);\n                break;\n        }\n\n        $reason = null;\n        if (array_key_exists('error', $response))\n        {\n            echo '<strong style=\"color: red;\">Authentication error: </strong> Opauth returns error auth response.'.\"\\n\";\n        }\n        else\n        {\n            if (empty($response['auth']) || empty($response['timestamp']) || empty($response['signature']) || empty($response['auth']['provider']) || empty($response['auth']['uid']))\n            {\n                echo '<strong style=\"color: red;\">Invalid auth response: </strong>Missing key auth response components.'.\"\\n\";\n            }\n            elseif (!$_opauth->validate(sha1(print_r($response['auth'], true)), $response['timestamp'], $response['signature'], $reason))\n            {\n                echo '<strong style=\"color: red;\">Invalid auth response: </strong>'.$reason.\".\\n\";\n            }\n            else\n            {\n                echo '<strong style=\"color: green;\">OK: </strong>Auth response is validated.'.\"\\n\";\n\n                /**\n                 * It's all good. Go ahead with your application-specific authentication logic\n                 */\n            }\n        }\n\n        return Response::forge(var_dump($response));\n    }\n\n}\n\n\n\u4ee5\u4e0a\u3067\u8a2d\u5b9a\u306f\u5b8c\u4e86\u3067\u3059\u3002\nhttp://fuel_app/auth/login/twitter \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001\u8a8d\u8a3c\u5f8c\u3001OK\u306e\u6587\u5b57\u304c\u51fa\u308c\u3070\u7121\u4e8b\u6210\u529f\u3067\u3059\u3002\n$response\u306b\u306f\u914d\u5217\u3067\u8a8d\u8a3c\u60c5\u5831\u304c\u306f\u3044\u3063\u3066\u3044\u308b\u306e\u3067\u3001DB\u306b\u767b\u9332\u3059\u308c\u3070\u30e6\u30fc\u30b6\u7ba1\u7406\u304c\u53ef\u80fd\u3067\u3059\u306d\u3002\n\n\u304a\u4e45\u3057\u3076\u308a\u3067\u3059\u3002\u4eca\u56de\u306fFuelPHP\u3067Twitter\u8a8d\u8a3c\u3092\u3057\u307e\u3057\u3087\u3046\u3002\n\n## \u74b0\u5883\nFuelPHP 1.7.2\nhttp://fuel_app/auth/login/twitter \u3067Twitter\u30ed\u30b0\u30a4\u30f3\u3059\u308b\n\n\n\n## Opauth\u306e\u5b9f\u88c5\u65b9\u6cd5\u306f2\u7a2e\u985e\u3042\u308b\uff01\n* Composer\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\n* Packages\u30d5\u30a9\u30eb\u30c0\u306b\u76f4\u63a5clone\u3059\u308b\u65b9\u6cd5\n\n\u4eca\u56de\u306f\u3001Packages\u306b\u76f4\u63a5clone\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n## \u624b\u9806\n### 1. \u30ea\u30dd\u30b8\u30c8\u30ea\u3092Clone\u3059\u308b\nhttps://github.com/andreoav/fuel-opauth.git \u3092\u5229\u7528\u3059\u308b\u306e\u3067\u3059\u304c\u3001Clone\u3057\u305f\u3060\u3051\u3067\u306f\u305d\u306e\u307e\u307e\u4f7f\u3048\u306a\u3044\u305f\u3081\u3001Fork\u3057\u3066\u4fee\u6b63\u3057\u305f\u3082\u306e\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u203b\u4fee\u6b63\u70b9\u306f\u3001TwitterAPI\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7(1\u21921.1)\u306b\u5bfe\u5fdc, namespace\u306e\u8a2d\u5b9a\n\n```bash\ncd fuel/packages\ngit clone git://github.com/suzutan/fuel-opauth.git opauth\ncd ../../\n```\n### 2. opauth.php\u306e\u8a2d\u5b9a\nopauth\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30d4\u30fc\n\n`cp fuel/packages/auth/config/opauth.php fuel/app/config`\n\nTwitter\u8a2d\u5b9a\u3092\u7de8\u96c6\n\n`vim fuel/app/config/opauth.php`\n\n```php:fuel/app/config/opauth.php\n'Strategy' => array(\n\t\t\"Twitter\" => array(\n\t\t\t\"key\" => \"CONSUMER_KEY_HERE\",\n\t\t\t\"secret\" => \"CONSUMER_SECRET_HERE\",\n\t\t),\n\t\t//Facebook\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3061\u3089\n\t\t//'Facebook' => array(\n\t\t\t//'app_id' => 'APP_ID_HERE',\n\t\t\t//'app_secret' => 'APP_SECRET_HERE'\n\t\t//),\t\t\n\t),\n```\n### 3.\u30d1\u30c3\u30b1\u30fc\u30b8\u8aad\u307f\u8fbc\u307f\u306e\u8a2d\u5b9a\n`vim fuel/app/config/config.php`\n\n```php:fuel/app/config/config.php\n'always_load' => array(\n    'packages' => array(\n        'opauth', //opauth\u3092\u8ffd\u52a0(auth\u3068\u304borm\u3042\u3063\u3066\u3082OK)\n    ),\n),\n```\n\n### 4. Controller\u306e\u8a2d\u5b9a\n`vim fuel/app/classes/controller/auth.php`\n\n```php:fuel/app/classes/controller/auth.php\n<?php\n\nclass Controller_Auth extends Controller\n{\n\n\tprivate $_config = null;\n\n\tpublic function before()\n\t{\n\t\tif(!isset($this->_config))\n\t\t{\n\t\t\t$this->_config = Config::load('opauth', 'opauth');\n\t\t}\n\t}\n\n\n\tpublic function action_login($_provider = null)\n\t{\n\t\tif(array_key_exists(Inflector::humanize($_provider), Arr::get($this->_config, 'Strategy')))\n\t\t{\n\t\t\t$_oauth = new Opauth($this->_config, true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn Response::forge('Strategy not supported');\n\t\t}\n\t}\n\n\tpublic function action_callback()\n\t{\n\n\t\t$_opauth = new Opauth($this->_config, false);\n\n\t\tswitch($_opauth->env['callback_transport'])\n\t\t{\n\t\t\tcase 'session':\n\t\t\t\tsession_start();\n\t\t\t\t$response = $_SESSION['opauth'];\n\t\t\t\tunset($_SESSION['opauth']);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$reason = null;\n\t\tif (array_key_exists('error', $response))\n\t\t{\n\t\t\techo '<strong style=\"color: red;\">Authentication error: </strong> Opauth returns error auth response.'.\"\\n\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (empty($response['auth']) || empty($response['timestamp']) || empty($response['signature']) || empty($response['auth']['provider']) || empty($response['auth']['uid']))\n\t\t\t{\n\t\t\t\techo '<strong style=\"color: red;\">Invalid auth response: </strong>Missing key auth response components.'.\"\\n\";\n\t\t\t}\n\t\t\telseif (!$_opauth->validate(sha1(print_r($response['auth'], true)), $response['timestamp'], $response['signature'], $reason))\n\t\t\t{\n\t\t\t\techo '<strong style=\"color: red;\">Invalid auth response: </strong>'.$reason.\".\\n\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\techo '<strong style=\"color: green;\">OK: </strong>Auth response is validated.'.\"\\n\";\n\n\t\t\t\t/**\n\t\t\t\t * It's all good. Go ahead with your application-specific authentication logic\n\t\t\t\t */\n\t\t\t}\n\t\t}\n\n\t\treturn Response::forge(var_dump($response));\n\t}\n\n}\n```\n\u4ee5\u4e0a\u3067\u8a2d\u5b9a\u306f\u5b8c\u4e86\u3067\u3059\u3002\nhttp://fuel_app/auth/login/twitter \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001\u8a8d\u8a3c\u5f8c\u3001OK\u306e\u6587\u5b57\u304c\u51fa\u308c\u3070\u7121\u4e8b\u6210\u529f\u3067\u3059\u3002\n$response\u306b\u306f\u914d\u5217\u3067\u8a8d\u8a3c\u60c5\u5831\u304c\u306f\u3044\u3063\u3066\u3044\u308b\u306e\u3067\u3001DB\u306b\u767b\u9332\u3059\u308c\u3070\u30e6\u30fc\u30b6\u7ba1\u7406\u304c\u53ef\u80fd\u3067\u3059\u306d\u3002\n\n", "tags": ["FuelPHP", "PHP", "opauth"]}