{"context": " More than 1 year has passed since last update.C++\u3067\u958b\u767a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u304d\u306b\u3001\u56f0\u3063\u3066\u3044\u308b\u306e\u304c\u3044\u3044\u30b0\u30e9\u30d5\u3092\u66f8\u304f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\nWindows,Linux\u3067\u3082\u540c\u3058\u3088\u3046\u306b\u52d5\u4f5c\u3057\u3066\u3001MATLAB\u4e26\u307f\u306e\u64cd\u4f5c\u6027\u3068\u3001\u306a\u308b\u3079\u304f\u306a\u3089MATLAB\u985e\u4f3c\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f53\u7cfb\u3092\u6301\u3063\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002OpenCV\u3068\u3082\u89aa\u548c\u6027\u304c\u3088\u3044\u306e\u3092\u671b\u3093\u3067\u3044\u307e\u3059\u3002\n\u3069\u306a\u305f\u304b\u3001\u305d\u306e\u3088\u3046\u306a\u3044\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u60c5\u5831\u3092\u304a\u6301\u3061\u3067\u3057\u305f\u3089\u3001\u304a\u77e5\u3089\u305b\u304f\u3060\u3055\u3044\u3002\nC++\u3067\u4f7f\u3048\u308b\u3068\u3044\u3046\u6761\u4ef6\u3092\u5916\u3059\u3068\u3001python\u306e\u30e9\u30a4\u30d6\u30e9\u30ea,matplotlib\u304c\u3042\u308b\u3002\n\u3057\u304b\u305f\u304c\u306a\u3044\u306e\u3067\u3001C++\u304b\u3089\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u751f\u6210\u3057\u3066\u3001python\u3067matplotlib\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\u96db\u5f62\u3092\u66f8\u3044\u3066\u307f\u305f\u3002\n\u5b9f\u884c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306blena.jpg\u304c\u3042\u308b\u3053\u3068\u3092\u4eee\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\nexPlot.cpp\n#include <iostream>\n#include <fstream>\n#include <opencv2/opencv.hpp>\n\n// \u6587\u5b57\u5217\u3092\u7f6e\u63db\u3059\u308b\n// \u3069\u306a\u305f\u304b\u304c\u66f8\u3044\u305f\u95a2\u6570\nstd::string Replace(std::string String1, std::string String2, std::string String3){\n    std::string::size_type  Pos(String1.find(String2));\n\n    while (Pos != std::string::npos){\n        String1.replace(Pos, String2.length(), String3);\n        Pos = String1.find(String2, Pos + String3.length());\n    }\n    return String1;\n}\n\nvoid dataByPylab(double x0, double xn){\n    std::ofstream ofs(\"dataByPylab.py\");\n    ofs << \"import numpy as np\" << std::endl;\n    ofs << \"import pylab\" << std::endl;\n    ofs << cv::format(\"x = np.linspace(%f, %f, 100)\", x0, xn) << std::endl;\n    ofs << \"y = np.sin(x)\" << std::endl;\n    ofs << \"pylab.figure(1)\" << std::endl;\n    ofs << \"pylab.plot(x, y)\" << std::endl;\n    ofs << \"pylab.savefig('dataByPylab.png')\" << std::endl;\n}\n\nvoid dataByOpenCV(cv::Mat mat){\n    // cv::format(mat, \"numpy\")\u306fOpenCV2.4\u7cfb\u7d71\u306b\u306f\u3042\u308b\u304c\u3001\u4eca\u306e\u3068\u3053\u308dOpenCV3\u7cfb\u7d71\u306b\u306f\u898b\u304b\u3051\u306a\u304b\u3063\u305f\u3002 \n    // \u51fa\u529b\u4e2d\u306b\u3042\u308b\"type=\"\u306f\u3001\"dtype=\"\u3067\u306a\u3044\u3068\u3001numpy\u304c\u89e3\u91c8\u306b\u5931\u6557\u3059\u308b\u3002\n    // \u3057\u304b\u305f\u304c\u306a\u3044\u306e\u3067\u3001\u3082\u3046\u4e00\u5ea6\u8aad\u307f\u76f4\u3057\u3066\u3001\u6587\u5b57\u5217\u306e\u7f6e\u63db\u3092\u3057\u3066\u3044\u308b\u3002\n    std::ofstream ofs(\"dataByOpenCV_bug.py\");\n\n    ofs << \"import cv2\" << std::endl;\n    ofs << \"from numpy import *\" << std::endl;\n    ofs << \"import pylab\" << std::endl;\n    ofs << \"gray = \" << cv::format(mat, \"numpy\") << std::endl;\n    ofs << \"pylab.figure(1)\" << std::endl;\n    ofs << \"pylab.subplot(2,2,1)\" << std::endl;\n    ofs << \"pylab.imshow(gray)\" << std::endl;\n    ofs << \"pylab.subplot(2,2,2)\" << std::endl;\n    ofs << \"pylab.hist(gray)\" << std::endl;\n    ofs << \"pylab.savefig('dataByOpenCV.png')\" << std::endl;\n\n    std::ifstream ifs(\"dataByOpenCV_bug.py\");\n    std::ofstream ofs2(\"dataByOpenCV.py\");\n    std::string str;\n    while (getline(ifs, str)){\n        str = Replace(str, \"type=\", \"dtype=\");\n        ofs2 << str << std::endl;\n    }\n}\n\nint main(int argc, char* arcv[]){\n    dataByPylab(-10.0, 20.0);//add parametr to plot script\n    system(\"python dataByPylab.py\");\n\n    cv::Mat img = cv::imread(\"lena.jpg\",0);//read as grayscale\n    dataByOpenCV(img);\n    system(\"python dataByOpenCV.py\");\n    exit(1);\n}\n\n\n\u7d50\u679c\u306f\u3001\u30ec\u30ca\u306e\u753b\u50cf\u3068\u3001\u753b\u50cf\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306e\u8868\u793a\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u8ffd\u8a18\n\nPython\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092system()\u95a2\u6570\u3067\u5225\u30d7\u30ed\u30bb\u30b9\u306b\u3059\u308b\u3053\u3068\u306a\u3057\u306b\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u3092\u30cd\u30c3\u30c8\u304b\u3089\u898b\u3064\u3051\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u308c\u3092\u5143\u306b\u66f8\u3044\u305f\u7248\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\u307e\u3060\u3001\u81ea\u5206\u306e\u3084\u308a\u305f\u3044\u3088\u3046\u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u3002\ncpp:callPython.cpp\n#include <Python.h>\n#include <stdio.h>\n\nint main()\n{\n    double x0 = -10.0;\n    double xn = 20.0;\n    char line[256];\n    sprintf(line, \"x = np.linspace(%f, %f, 100)\", x0, xn);\n\n    Py_Initialize();\n    PyRun_SimpleString(\"import numpy as np\");\n    PyRun_SimpleString(\"import pylab\");\n    PyRun_SimpleString(line);\n    PyRun_SimpleString(\"y = np.sin(x)\");\n    PyRun_SimpleString(\"pylab.figure(1)\");\n    PyRun_SimpleString(\"pylab.plot(x, y)\");\n    PyRun_SimpleString(\"pylab.savefig('dataByPylab.png')\");\n    PyRun_SimpleString(\"pylab.show()\");\n    Py_Exit(0);\n    return 0;\n\n}\n\n\n\u3055\u3089\u306b\u8ffd\u8a18\n\n\u3053\u3046\u3059\u308b\u3068\u3001\u3082\u3046\u5c11\u3057\u4e00\u822c\u5316\u3067\u304d\u308b\u3002\n\ncallpython.cpp\n#include <Python.h>\n#include <stdio.h>\n#include <vector>\n#include <iostream>\n#include <string>\n\n/**\n* @brief python\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3002\n* @pram[in] lines\n*/\nvoid runPythonLines(const std::vector<std::string> &lines){\n    Py_Initialize();\n    for (unsigned int i = 0; i < lines.size(); i++){\n        std::cout << lines[i] << std::endl;\n        PyRun_SimpleString(lines[i].c_str());\n    }\n    Py_Exit(0);\n}\n\nint main()\n{\n    double x0 = -10.0;\n    double xn = 20.0;\n    char line[256];\n    sprintf(line, \"x = np.linspace(%f, %f, 100)\", x0, xn);\n\n    std::vector<std::string> lines{\n        \"import numpy as np\",\n        \"import pylab\",\n        line,\n        \"y = np.sin(x)\",\n        \"pylab.figure(1)\",\n        \"pylab.plot(x, y)\",\n        \"pylab.savefig('dataByPylab.png')\",\n        \"pylab.show()\"\n    };\n    runPythonLines(lines);\n    return 0;\n}\n\n\nC++\u3067\u958b\u767a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u304d\u306b\u3001\u56f0\u3063\u3066\u3044\u308b\u306e\u304c\u3044\u3044\u30b0\u30e9\u30d5\u3092\u66f8\u304f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\nWindows,Linux\u3067\u3082\u540c\u3058\u3088\u3046\u306b\u52d5\u4f5c\u3057\u3066\u3001MATLAB\u4e26\u307f\u306e\u64cd\u4f5c\u6027\u3068\u3001\u306a\u308b\u3079\u304f\u306a\u3089MATLAB\u985e\u4f3c\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f53\u7cfb\u3092\u6301\u3063\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002OpenCV\u3068\u3082\u89aa\u548c\u6027\u304c\u3088\u3044\u306e\u3092\u671b\u3093\u3067\u3044\u307e\u3059\u3002\n\u3069\u306a\u305f\u304b\u3001\u305d\u306e\u3088\u3046\u306a\u3044\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u60c5\u5831\u3092\u304a\u6301\u3061\u3067\u3057\u305f\u3089\u3001\u304a\u77e5\u3089\u305b\u304f\u3060\u3055\u3044\u3002\n\nC++\u3067\u4f7f\u3048\u308b\u3068\u3044\u3046\u6761\u4ef6\u3092\u5916\u3059\u3068\u3001python\u306e\u30e9\u30a4\u30d6\u30e9\u30ea,matplotlib\u304c\u3042\u308b\u3002\n\u3057\u304b\u305f\u304c\u306a\u3044\u306e\u3067\u3001C++\u304b\u3089\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u751f\u6210\u3057\u3066\u3001python\u3067matplotlib\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\u96db\u5f62\u3092\u66f8\u3044\u3066\u307f\u305f\u3002\n\n\u5b9f\u884c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306blena.jpg\u304c\u3042\u308b\u3053\u3068\u3092\u4eee\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```cpp:exPlot.cpp\n#include <iostream>\n#include <fstream>\n#include <opencv2/opencv.hpp>\n\n// \u6587\u5b57\u5217\u3092\u7f6e\u63db\u3059\u308b\n// \u3069\u306a\u305f\u304b\u304c\u66f8\u3044\u305f\u95a2\u6570\nstd::string Replace(std::string String1, std::string String2, std::string String3){\n\tstd::string::size_type  Pos(String1.find(String2));\n\n\twhile (Pos != std::string::npos){\n\t\tString1.replace(Pos, String2.length(), String3);\n\t\tPos = String1.find(String2, Pos + String3.length());\n\t}\n\treturn String1;\n}\n\nvoid dataByPylab(double x0, double xn){\n\tstd::ofstream ofs(\"dataByPylab.py\");\n\tofs << \"import numpy as np\" << std::endl;\n\tofs << \"import pylab\" << std::endl;\n\tofs << cv::format(\"x = np.linspace(%f, %f, 100)\", x0, xn) << std::endl;\n\tofs << \"y = np.sin(x)\" << std::endl;\n\tofs << \"pylab.figure(1)\" << std::endl;\n\tofs << \"pylab.plot(x, y)\" << std::endl;\n\tofs << \"pylab.savefig('dataByPylab.png')\" << std::endl;\n}\n\nvoid dataByOpenCV(cv::Mat mat){\n\t// cv::format(mat, \"numpy\")\u306fOpenCV2.4\u7cfb\u7d71\u306b\u306f\u3042\u308b\u304c\u3001\u4eca\u306e\u3068\u3053\u308dOpenCV3\u7cfb\u7d71\u306b\u306f\u898b\u304b\u3051\u306a\u304b\u3063\u305f\u3002 \n\t// \u51fa\u529b\u4e2d\u306b\u3042\u308b\"type=\"\u306f\u3001\"dtype=\"\u3067\u306a\u3044\u3068\u3001numpy\u304c\u89e3\u91c8\u306b\u5931\u6557\u3059\u308b\u3002\n\t// \u3057\u304b\u305f\u304c\u306a\u3044\u306e\u3067\u3001\u3082\u3046\u4e00\u5ea6\u8aad\u307f\u76f4\u3057\u3066\u3001\u6587\u5b57\u5217\u306e\u7f6e\u63db\u3092\u3057\u3066\u3044\u308b\u3002\n\tstd::ofstream ofs(\"dataByOpenCV_bug.py\");\n\n\tofs << \"import cv2\" << std::endl;\n\tofs << \"from numpy import *\" << std::endl;\n\tofs << \"import pylab\" << std::endl;\n\tofs << \"gray = \" << cv::format(mat, \"numpy\") << std::endl;\n\tofs << \"pylab.figure(1)\" << std::endl;\n\tofs << \"pylab.subplot(2,2,1)\" << std::endl;\n\tofs << \"pylab.imshow(gray)\" << std::endl;\n\tofs << \"pylab.subplot(2,2,2)\" << std::endl;\n\tofs << \"pylab.hist(gray)\" << std::endl;\n\tofs << \"pylab.savefig('dataByOpenCV.png')\" << std::endl;\n\n\tstd::ifstream ifs(\"dataByOpenCV_bug.py\");\n\tstd::ofstream ofs2(\"dataByOpenCV.py\");\n\tstd::string str;\n\twhile (getline(ifs, str)){\n\t\tstr = Replace(str, \"type=\", \"dtype=\");\n\t\tofs2 << str << std::endl;\n\t}\n}\n\nint main(int argc, char* arcv[]){\n\tdataByPylab(-10.0, 20.0);//add parametr to plot script\n\tsystem(\"python dataByPylab.py\");\n\n\tcv::Mat img = cv::imread(\"lena.jpg\",0);//read as grayscale\n\tdataByOpenCV(img);\n\tsystem(\"python dataByOpenCV.py\");\n\texit(1);\n}\n```\n\n\n\u7d50\u679c\u306f\u3001\u30ec\u30ca\u306e\u753b\u50cf\u3068\u3001\u753b\u50cf\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306e\u8868\u793a\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n####**\u8ffd\u8a18**\nPython\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092system()\u95a2\u6570\u3067\u5225\u30d7\u30ed\u30bb\u30b9\u306b\u3059\u308b\u3053\u3068\u306a\u3057\u306b\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u3092\u30cd\u30c3\u30c8\u304b\u3089\u898b\u3064\u3051\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u308c\u3092\u5143\u306b\u66f8\u3044\u305f\u7248\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\u307e\u3060\u3001\u81ea\u5206\u306e\u3084\u308a\u305f\u3044\u3088\u3046\u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u3002\n\n\n```\ncpp:callPython.cpp\n#include <Python.h>\n#include <stdio.h>\n\nint main()\n{\n\tdouble x0 = -10.0;\n\tdouble xn = 20.0;\n\tchar line[256];\n\tsprintf(line, \"x = np.linspace(%f, %f, 100)\", x0, xn);\n\n\tPy_Initialize();\n\tPyRun_SimpleString(\"import numpy as np\");\n\tPyRun_SimpleString(\"import pylab\");\n\tPyRun_SimpleString(line);\n\tPyRun_SimpleString(\"y = np.sin(x)\");\n\tPyRun_SimpleString(\"pylab.figure(1)\");\n\tPyRun_SimpleString(\"pylab.plot(x, y)\");\n\tPyRun_SimpleString(\"pylab.savefig('dataByPylab.png')\");\n\tPyRun_SimpleString(\"pylab.show()\");\n\tPy_Exit(0);\n\treturn 0;\n\n}\n```\n\n####**\u3055\u3089\u306b\u8ffd\u8a18**\n\u3053\u3046\u3059\u308b\u3068\u3001\u3082\u3046\u5c11\u3057\u4e00\u822c\u5316\u3067\u304d\u308b\u3002\n\n```cpp:callpython.cpp\n#include <Python.h>\n#include <stdio.h>\n#include <vector>\n#include <iostream>\n#include <string>\n\n/**\n* @brief python\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3002\n* @pram[in] lines\n*/\nvoid runPythonLines(const std::vector<std::string> &lines){\n\tPy_Initialize();\n\tfor (unsigned int i = 0; i < lines.size(); i++){\n\t\tstd::cout << lines[i] << std::endl;\n\t\tPyRun_SimpleString(lines[i].c_str());\n\t}\n\tPy_Exit(0);\n}\n\nint main()\n{\n\tdouble x0 = -10.0;\n\tdouble xn = 20.0;\n\tchar line[256];\n\tsprintf(line, \"x = np.linspace(%f, %f, 100)\", x0, xn);\n\n\tstd::vector<std::string> lines{\n\t\t\"import numpy as np\",\n\t\t\"import pylab\",\n\t\tline,\n\t\t\"y = np.sin(x)\",\n\t\t\"pylab.figure(1)\",\n\t\t\"pylab.plot(x, y)\",\n\t\t\"pylab.savefig('dataByPylab.png')\",\n\t\t\"pylab.show()\"\n\t};\n\trunPythonLines(lines);\n\treturn 0;\n}\n```\n\n", "tags": ["C++", "matplotlib", "numpy"]}