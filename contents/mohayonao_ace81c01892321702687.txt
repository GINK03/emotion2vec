{"context": " More than 1 year has passed since last update.Web Audio API \u306e\u4ed5\u69d8\u306f\u65e5\u3005 GitHub\u4e0a\u3067\u8b70\u8ad6 \u3055\u308c\u3066\u3044\u3066\u3001\u3042\u308b\u7a0b\u5ea6\u540c\u610f\u304c\u5f97\u3089\u308c\u305f\u3082\u306e\u306f \u30c9\u30e9\u30d5\u30c8\u30da\u30fc\u30b8 \u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4ed5\u69d8\u306e\u30d6\u30e9\u30c3\u30b7\u30e5\u30a2\u30c3\u30d7\u306e\u307b\u304b\u306b\u8ffd\u52a0\u3055\u308c\u308b API \u3084\u5909\u66f4\u306e\u3042\u308b API \u304c\u3042\u308a\u3001\u305d\u308c\u3089\u306f\u3061\u3089\u307b\u3089\u3068\u30d6\u30e9\u30a6\u30b6\u306b\u5b9f\u88c5\u3082\u3055\u308c\u3066\u304d\u3066\u3044\u308b\u306e\u3067\u3001\u7c21\u5358\u306a\u8aac\u660e\u3068\u30b5\u30dd\u30fc\u30c8\u72b6\u6cc1\u3001\u30dd\u30ea\u30d5\u30a3\u30eb\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\u3053\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u3066\u3042\u308b\u30dd\u30ea\u30d5\u30a3\u30eb\u306f\u4e0b\u8a18\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u307e\u3068\u3081\u3066\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/mohayonao/web-audio-api-shim/\n\u307e\u305f\u3001\u5404API\u5bfe\u5fdc\u72b6\u6cc1\u306f\u4e0b\u8a18\u306e\u30da\u30fc\u30b8\u3067\u3082\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\nhttp://mohayonao.github.io/web-audio-api-shim/test/impl.html\nhttp://compatibility.shwups-cms.ch/en/home\n Microsoft Edge / Safari 9 \u306e\u5bfe\u5fdc\u72b6\u6cc1\u304c\u8abf\u3079\u3089\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u3069\u306a\u305f\u304b\u60c5\u5831\u304f\u3060\u3055\u3044\uff01\uff01  \n\n\u65b0\u3057\u304f\u8ffd\u52a0\u3055\u308c\u308bAPI\n\nAnalyserNode#getFloatTimeDomainData\n\u4fe1\u53f7\u30c7\u30fc\u30bf\u3092 Float32Array \u3067\u53d6\u5f97\u3059\u308b\u3002\u3053\u308c\u307e\u3067\u6ce2\u5f62\u30c7\u30fc\u30bf\u306f getByteTimeDomainData \u3092\u4f7f\u3063\u3066 Uint8Array \u3067\u53d6\u5f97\u3059\u308b\u3057\u304b\u3067\u304d\u306a\u304b\u3063\u305f\u3002\n\nInterface\nAnalyserNode : AudioNode {\n  getFloatTimeDomainData(\n    array: Float32Array\n  ): void;\n}\n\n\n\narray \u7d50\u679c\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\n\n\nSupport\n\n\n\nChrome\nOpera\nFirefox\nSafari\nEdge\n\n\n\n\n\n 37\n\n 22\n\n 30\n\n 8\n\n\n\n\n\nPolyfill\ngetByteTimeDomainData \u3067 uint8 \u578b\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u5909\u63db\u3057\u305f\u5024\u3092 array \u306b\u4ee3\u5165\u3059\u308b\u3002\nvar uint8 = new Uint8Array(2048);\n\nfunction getFloatTimeDomainData(array) {\n  this.getByteTimeDomainData(uint8);\n\n  for (var i = 0, imax = array.length; i < imax; i++) {\n    array[i] = (uint8[i] - 128) * 0.0078125;\n  }\n}\n\nif (!AnalyserNode.prototype.hasOwnProperty(\"getFloatTimeDomainData\")) {\n  AnalyserNode.prototype.getFloatTimeDomainData = getFloatTimeDomainData;\n}\n\n\nAudioBuffer#copyFromChannel / copyToChannel\nAudioBuffer \u306e\u30c7\u30fc\u30bf\u3092\u90e8\u5206\u7684\u306b\u8aad\u307f\u66f8\u304d\u3059\u308b\u3002\n\u4ee5\u524d\u306e Firefox \u3067\u306f getChannelData \u3092\u4f7f\u3046\u3068\u30d0\u30c3\u30d5\u30a1\u306e\u5168\u30c7\u30fc\u30bf\u3092\u30aa\u30fc\u30c7\u30a3\u30aa\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u30b3\u30d4\u30fc\u3059\u308b\u305f\u3081\u3001\u4f8b\u3048\u3070 1\u5206 \u306e\u30d0\u30c3\u30d5\u30a1\u306e\u5834\u5408 105864000 (= 44100 * 60 * 4) \u30d0\u30a4\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u308a\u52b9\u7387\u304c\u60aa\u304b\u3063\u305f\u306e\u3067\u3053\u3046\u3044\u3046API\u3092\u4f5c\u3063\u305f (\u3068\u3044\u3046\u8a18\u61b6\u304c\u3042\u308b) \u306e\u3060\u3051\u3069\u3001\u4eca\u78ba\u8a8d\u3057\u305f\u3089\u305d\u3046\u3067\u3082\u306a\u3055\u305d\u3046\u3067\u826f\u304f\u5206\u304b\u3089\u306a\u3044\u3067\u3059\u3002\n\u3068\u306f\u3044\u3048\u3001AudioBuffer \u306e\u30c7\u30fc\u30bf\u3092\u90e8\u5206\u7684\u306b\u8aad\u307f\u66f8\u304d\u3057\u305f\u3044\u30b1\u30fc\u30b9\u306f\u3042\u307e\u308a\u306a\u3044\u3068\u601d\u3046\u3002\n\nInterface\nAudioBuffer {\n  copyFromChannel(\n    destination: Float32Array,\n    channelNumber: number,\n    startInChannel: number = 0\n  ): void;\n}\n\n\n\ndestination \u30b3\u30d4\u30fc\u3057\u305f\u7d50\u679c\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\n\nchannelNumber \u30b3\u30d4\u30fc\u5bfe\u8c61\u306e\u30c1\u30e3\u30cd\u30eb\n\nstartInChannel \u30b3\u30d4\u30fc\u5143\u306e\u958b\u59cb\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n\nAudioBuffer {\n  copyToChannel(\n    source: Float32Array, \n    channelNumber: number, \n    startInChannel: number = 0\n  ): void;\n}\n\n\n\nsource \u30b3\u30d4\u30fc\u3059\u308b\u914d\u5217\n\nchannelNumber \u30b3\u30d4\u30fc\u5bfe\u8c61\u306e\u30c1\u30e3\u30cd\u30eb\n\nstartInChannel \u30b3\u30d4\u30fc\u5148\u306e\u958b\u59cb\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n\n\nSupport\n\n\n\nChrome\nOpera\nFirefox\nSafari\nEdge\n\n\n\n\n\n 43\n\n 30\n\n 27\n\n 8\n\n\n\n\n\nPolyfill\nfunction copyFromChannel(destination, channelNumber, startInChannel) {\n  var source = this.getChannelData(channelNumber|0).subarray(startInChannel|0);\n  var minLength = Math.min(source.length, destination.length);\n\n  destination.set(source.subarray(0, minLength));\n}\n\nfunction copyToChannel(source, channelNumber, startInChannel) {\n  var minLength= Math.min(source.length, this.length - (startInChannel|0));\n  var clipped = source.subarray(0, minLength);\n\n  this.getChannelData(channelNumber|0).set(source, startInChannel|0);\n}\n\nif (!AudioBuffer.prototype.hasOwnProperty(\"copyFromChannel\")) {\n  AudioBuffer.prototype.copyFromChannel = copyFromChannel;\n}\nif (!AudioBuffer.prototype.hasOwnProperty(\"copyToChannel\")) {\n  AudioBuffer.prototype.copyToChannel = copyToChannel;\n}\n\n\nAudioContext#createStereoPanner\n\u30b9\u30c6\u30ec\u30aa\u30d1\u30f3\u30ca\u30fc\u3002pan \u5c5e\u6027\u3067\u5de6\u53f3\u306e\u4f4d\u7f6e\u3092\u8a2d\u5b9a\u3057\u305f\u308a\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3057\u305f\u308a\u3001OscillatorNode \u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u30aa\u30fc\u30c8\u30d1\u30f3\u306a\u3069\u304c\u7c21\u5358\u306b\u3067\u304d\u308b\u3002\n\u3044\u307e\u307e\u3067\u306f\u306a\u305c\u304b 3D\u7a7a\u9593\u4e0a\u306e\u5b9a\u4f4d (\u7a7a\u9593\u306e\u3069\u3053\u306b\u97f3\u6e90\u304c\u3042\u3063\u3066\u3001\u8074\u304f\u4eba\u306f\u3069\u3053\u306b\u3044\u308b\u306e\u304b\u3001\u3069\u3063\u3061\u3092\u5411\u3044\u3066\u3044\u308b\u306e\u304b) \u3057\u304b\u306a\u304b\u3063\u305f\u3002\n\nInterface\nAudioContext {\n  createStereoPanner(): StereoPannerNode;\n}\n\nStereoPannerNode : AudioNode {\n  pan: AudioParam;\n}\n\n\nSupport\n\n\n\nChrome\nOpera\nFirefox\nSafari\nEdge\n\n\n\n\n\n 41\n\n 28\n\n 37\n\n 8\n\n\n\n\n\nPolyfill\nhttps://github.com/mohayonao/stereo-panner-node\nvar StereoPannerNode = require(\"stereo-panner-node\");\n\nfunction createStereoPanner() {\n  return new StereoPannerNode(this);\n}\n\nif (!AudioContext.prototype.hasOwnProperty(\"createStereoPanner\")) {\n  AudioContext.prototype.createStereoPanner = createStereoPanner;\n}\n\n\nAudioContext#suspend / resume / close\n\u30aa\u30fc\u30c7\u30a3\u30aa\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e \u505c\u6b62 / \u518d\u958b / \u7d42\u4e86 \u3092\u3059\u308b\u3002\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u73fe\u5728\u306e\u72b6\u614b\u306f state \u5c5e\u6027\u3067\u53d6\u5f97\u3067\u304d\u3001\u5909\u66f4\u304c\u3042\u3063\u305f\u5834\u5408\u306f onstatechange \u304c\u547c\u3070\u308c\u308b\u3002\n\u5404\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u72b6\u614b\u9077\u79fb\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\nnew AudioContext()\n      |\n      V\n+------------+                 +------------+\n| state:     | -- suspend() -> | state:     |\n|  running   | <- resume() --- |  suspended |\n+------------+                 +------------+\n      |                              |\n      | close()                      | close()\n      +------------------------------+\n      |\n      V\n+-----------+\n| state:    |\n|  closed   |\n+-----------+\n\nnew OfflineAudioContext(...args);\n      |\n      V\n+------------+\n| state:     |\n|  suspended |\n+------------+\n      |\n      | startRendering()\n      V\n+------------+\n| state:     |\n|  running   |\n+------------+\n      |\n      | < rendering completed >\n      V\n+------------+\n| state:     |\n|  closed    |\n+------------+\n\n\nInterface\nAudioContext {\n  state: string;\n  onstatechange: EventHandler;\n\n  suspend(): Promise<void>;\n  resume(): Promise<void>;\n  close(): Promise<void>;\n}\n\n\nSupport\n\n\n\nAPI\nChrome\nOpera\nFirefox\nSafari\nEdge\n\n\n\n\nsuspend\n\n 41\n\n 28\n\n 38\n\n 8\n\n\n\nresume\n\n 41\n\n 28\n\n 38\n\n 8\n\n\n\nclose\n\n 42\n\n 29\n\n 38\n\n 8\n\n\n\n\n\nPolyfill\n\u8907\u96d1\u306a\u305f\u3081\u7701\u7565\n\n\u5909\u66f4\u306e\u3042\u3063\u305fAPI\n\nAudioContext#decodeAudioData\nPromise \u30d9\u30fc\u30b9\u306b\u306a\u308b\u3002\u4eca\u307e\u3067\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30d9\u30fc\u30b9\u3068\u306e\u4e92\u63db\u6027\u306f\u3042\u308b\u3002\nAPI \u306e\u5909\u66f4\u3068\u306f\u95a2\u4fc2\u306a\u3044\u3051\u3069 Firefox \u306e\u5834\u5408\u3001audioData \u306f transferred \u3055\u308c\u3066\u7a7a\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\nInterface\nAudioContext {\n  decodeAudioData(\n    audioData: ArrayBuffer,\n    successCallback: function = null,\n    errorCallback: function = null\n  ): Promise<AudioBuffer>;\n}\n\n\n\naudioData \u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30fc\u30bf\n\nsuccessCallback \u6210\u529f\u3057\u305f\u3068\u304d\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af (\u5f8c\u65b9\u4e92\u63db\u7528)\n\nerrorCallback \u5931\u6557\u3057\u305f\u3068\u304d\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af (\u5f8c\u65b9\u4e92\u63db\u7528)\n\n\nSupport\n\n\n\nChrome\nOpera\nFirefox\nSafari\nEdge\n\n\n\n\n\n 43\n\n 30\n\n 36\n\n 8\n\n\n\n\n\nPolyfill\nvar originalDecodeAudioData = AudioContext.prototype.decodeAudioData;\nvar isPromiseBased = (function() {\n  var audioContext = new OfflineAudioContext(1, 2, 44100);\n\n  return !!audioContext.decodeAudioData(new Uint8Array(0).buffer, function() {});\n})();\n\nfunction decodeAudioData(audioData, successCallback, errorCallback) {\n  var _this = this;\n  var promise = new Promise(function(resolve, reject) {\n    originalDecodeAudioData.call(_this, audioData, resolve, reject);\n  });\n\n  promise.then(successCallback, errorCallback);\n\n  return promise;\n};\n\nif (!isPromiseBased) {\n  AudioContext.prototype.decodeAudioData = decodeAudioData;\n}\n\n\nOfflineAudioContext#startRendering\nPromise \u30d9\u30fc\u30b9\u306b\u306a\u308b\u3002\u4eca\u307e\u3067\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30d9\u30fc\u30b9\u3068\u306e\u4e92\u63db\u6027\u306f\u3042\u308b\u3002\n\nInterface\nOfflineAudioContext {\n  startRendering(): Promise<AudioBuffer>;\n}\n\n\nSupport\n\n\n\nChrome\nOpera\nFirefox\nSafari\nEdge\n\n\n\n\n\n 42\n\n 29\n\n 37\n\n 8\n\n\n\n\n\nPolyfill\nvar originalStartRendering = OfflineAudioContext.prototype.startRendering;\nvar isPromiseBased = (function() {\n  var audioContext = new OfflineAudioContext(1, 2, 44100);\n\n  return !!audioContext.startRendering();\n})();\n\nfunction startRendering () {\n  var _this = this;\n\n  return new Promise(function(resolve, reject) {\n    var oncomplete = _this.oncomplete;\n\n    _this.oncomplete = function(e) {\n      resolve(e.renderedBuffer);\n      if (typeof oncomplete === \"function\") {\n        oncomplete.call(_this, e);\n      }\n    };\n\n    originalStartRendering.call(_this);\n  });\n}\n\nif (!isPromiseBased) {\n  OfflineAudioContext.prototype.startRendering = startRendering;\n}\n\n\nAudioNode#disconnect\n\u3053\u308c\u307e\u3067\u306f\u6307\u5b9a\u3057\u305f\u51fa\u529b\u30c1\u30e3\u30cd\u30eb\u306e\u5168\u30ce\u30fc\u30c9\u3092\u5207\u65ad\u3059\u308b\u3057\u304b\u3067\u304d\u306a\u304b\u3063\u305f\u3051\u3069\u3001\u7279\u5b9a\u306e\u30ce\u30fc\u30c9\u3060\u3051\u5207\u65ad\u3059\u308b\u306a\u3069\u3001\u3088\u308a\u7d30\u304b\u3044\u5236\u5fa1\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\n\nInterface\nAudioNode {\n  // \u5168\u30c1\u30e3\u30cd\u30eb\u306e\u5168\u30ce\u30fc\u30c9\u3092\u5207\u65ad (\u4eca\u307e\u3067\u306e disconenct() \u3068\u306f\u7570\u306a\u308b)\n  disconnect(): void; \n\n  // \u6307\u5b9a\u3057\u305f\u51fa\u529b\u30c1\u30e3\u30cd\u30eb\u306e\u5168\u30ce\u30fc\u30c9\u3092\u5207\u65ad (\u4eca\u307e\u3067\u3068\u540c\u3058)\n  disconnect(output: number): void;\n\n  // \u6307\u5b9a\u3057\u305f\u30ce\u30fc\u30c9\u3092\u5207\u65ad\n  disconnect(destination: AudioNode|AudioParam): void;\n\n  // \u6307\u5b9a\u3057\u305f\u51fa\u529b\u30c1\u30e3\u30cd\u30eb\u306e\u6307\u5b9a\u3057\u305f\u30ce\u30fc\u30c9\u3092\u5207\u65ad\n  disconnect(destination: AudioNode|AudioParam, output: number): void;\n\n  // \u6307\u5b9a\u3057\u305f\u51fa\u529b\u30c1\u30e3\u30cd\u30eb\u306e\u6307\u5b9a\u3057\u305f\u30ce\u30fc\u30c9\u306e\u6307\u5b9a\u3057\u305f\u5165\u529b\u30c1\u30e3\u30cd\u30eb\u3092\u5207\u65ad\n  disconnect(destination: AudioNode, output: number, input: number): void;\n}\n\n\nSupport\n\n\n\nChrome\nOpera\nFirefox\nSafari\nEdge\n\n\n\n\n\n 43\n\n 30\n\n 38\n\n 8\n\n\n\n\n\nPolyfill\n\u8907\u96d1\u306a\u305f\u3081\u7701\u7565\n\n\u305d\u306e\u4ed6\n\n\nAudioBufferSource \u3084 ConvolverNode \u3067 buffer \u306e\u518d\u4ee3\u5165\u304c\u3067\u304d\u306a\u304f\u306a\u308b\n\n\n\u4eca\u306f chrome \u3060\u3068 warning \u304c\u51fa\u308b\u3060\u3051 (Convolver\u3067\u306f\u51fa\u306a\u3044\u3051\u3069)\n\n\n\nScriptProcessorNode \u304c\u5ec3\u6b62\u3055\u308c Worker \u30d9\u30fc\u30b9\u306e AudioWorkerNode \u304c\u5c0e\u5165\u3055\u308c\u308b\n\n\n\u666e\u901a\u306e AudioNode \u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u308b\u30ab\u30b9\u30bf\u30e0\u30ce\u30fc\u30c9\u304c\u751f\u6210\u3067\u304d\u308b\n\n\n\nWeb Audio API \u306e\u4ed5\u69d8\u306f\u65e5\u3005 [GitHub\u4e0a\u3067\u8b70\u8ad6](https://github.com/WebAudio/web-audio-api/issues) \u3055\u308c\u3066\u3044\u3066\u3001\u3042\u308b\u7a0b\u5ea6\u540c\u610f\u304c\u5f97\u3089\u308c\u305f\u3082\u306e\u306f [\u30c9\u30e9\u30d5\u30c8\u30da\u30fc\u30b8](http://webaudio.github.io/web-audio-api/) \u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4ed5\u69d8\u306e\u30d6\u30e9\u30c3\u30b7\u30e5\u30a2\u30c3\u30d7\u306e\u307b\u304b\u306b\u8ffd\u52a0\u3055\u308c\u308b API \u3084\u5909\u66f4\u306e\u3042\u308b API \u304c\u3042\u308a\u3001\u305d\u308c\u3089\u306f\u3061\u3089\u307b\u3089\u3068\u30d6\u30e9\u30a6\u30b6\u306b\u5b9f\u88c5\u3082\u3055\u308c\u3066\u304d\u3066\u3044\u308b\u306e\u3067\u3001\u7c21\u5358\u306a\u8aac\u660e\u3068\u30b5\u30dd\u30fc\u30c8\u72b6\u6cc1\u3001\u30dd\u30ea\u30d5\u30a3\u30eb\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\u3053\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u3066\u3042\u308b\u30dd\u30ea\u30d5\u30a3\u30eb\u306f\u4e0b\u8a18\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u307e\u3068\u3081\u3066\u3042\u308a\u307e\u3059\u3002\n\nhttps://github.com/mohayonao/web-audio-api-shim/\n\n\u307e\u305f\u3001\u5404API\u5bfe\u5fdc\u72b6\u6cc1\u306f\u4e0b\u8a18\u306e\u30da\u30fc\u30b8\u3067\u3082\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\nhttp://mohayonao.github.io/web-audio-api-shim/test/impl.html\nhttp://compatibility.shwups-cms.ch/en/home\n\n:feelsgood: Microsoft Edge / Safari 9 \u306e\u5bfe\u5fdc\u72b6\u6cc1\u304c\u8abf\u3079\u3089\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u3069\u306a\u305f\u304b\u60c5\u5831\u304f\u3060\u3055\u3044\uff01\uff01  \n\n# \u65b0\u3057\u304f\u8ffd\u52a0\u3055\u308c\u308bAPI\n\n## AnalyserNode#getFloatTimeDomainData\n\u4fe1\u53f7\u30c7\u30fc\u30bf\u3092 Float32Array \u3067\u53d6\u5f97\u3059\u308b\u3002\u3053\u308c\u307e\u3067\u6ce2\u5f62\u30c7\u30fc\u30bf\u306f `getByteTimeDomainData` \u3092\u4f7f\u3063\u3066 Uint8Array \u3067\u53d6\u5f97\u3059\u308b\u3057\u304b\u3067\u304d\u306a\u304b\u3063\u305f\u3002\n\n### Interface\n```js\nAnalyserNode : AudioNode {\n  getFloatTimeDomainData(\n    array: Float32Array\n  ): void;\n}\n```\n\n- `array` \u7d50\u679c\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\n\n### Support\n| Chrome  | Opera   | Firefox | Safari | Edge |\n|:-------:|:-------:|:-------:|:------:|:----:|\n| :ok: 37 | :ok: 22 | :ok: 30 | :x: 8  | :ok: |\n\n### Polyfill\n`getByteTimeDomainData` \u3067 uint8 \u578b\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u5909\u63db\u3057\u305f\u5024\u3092 array \u306b\u4ee3\u5165\u3059\u308b\u3002\n\n```js\nvar uint8 = new Uint8Array(2048);\n\nfunction getFloatTimeDomainData(array) {\n  this.getByteTimeDomainData(uint8);\n    \n  for (var i = 0, imax = array.length; i < imax; i++) {\n    array[i] = (uint8[i] - 128) * 0.0078125;\n  }\n}\n\nif (!AnalyserNode.prototype.hasOwnProperty(\"getFloatTimeDomainData\")) {\n  AnalyserNode.prototype.getFloatTimeDomainData = getFloatTimeDomainData;\n}\n```\n\n## AudioBuffer#copyFromChannel / copyToChannel\n\nAudioBuffer \u306e\u30c7\u30fc\u30bf\u3092\u90e8\u5206\u7684\u306b\u8aad\u307f\u66f8\u304d\u3059\u308b\u3002\n\n\n\u4ee5\u524d\u306e Firefox \u3067\u306f `getChannelData` \u3092\u4f7f\u3046\u3068\u30d0\u30c3\u30d5\u30a1\u306e\u5168\u30c7\u30fc\u30bf\u3092\u30aa\u30fc\u30c7\u30a3\u30aa\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u30b3\u30d4\u30fc\u3059\u308b\u305f\u3081\u3001\u4f8b\u3048\u3070 1\u5206 \u306e\u30d0\u30c3\u30d5\u30a1\u306e\u5834\u5408 105864000 (= 44100 * 60 * 4) \u30d0\u30a4\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u308a\u52b9\u7387\u304c\u60aa\u304b\u3063\u305f\u306e\u3067\u3053\u3046\u3044\u3046API\u3092\u4f5c\u3063\u305f (\u3068\u3044\u3046\u8a18\u61b6\u304c\u3042\u308b) \u306e\u3060\u3051\u3069\u3001\u4eca\u78ba\u8a8d\u3057\u305f\u3089\u305d\u3046\u3067\u3082\u306a\u3055\u305d\u3046\u3067\u826f\u304f\u5206\u304b\u3089\u306a\u3044\u3067\u3059\u3002\n\n\u3068\u306f\u3044\u3048\u3001AudioBuffer \u306e\u30c7\u30fc\u30bf\u3092\u90e8\u5206\u7684\u306b\u8aad\u307f\u66f8\u304d\u3057\u305f\u3044\u30b1\u30fc\u30b9\u306f\u3042\u307e\u308a\u306a\u3044\u3068\u601d\u3046\u3002\n\n### Interface\n```\nAudioBuffer {\n  copyFromChannel(\n    destination: Float32Array,\n    channelNumber: number,\n    startInChannel: number = 0\n  ): void;\n}\n```\n\n- `destination` \u30b3\u30d4\u30fc\u3057\u305f\u7d50\u679c\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\n- `channelNumber` \u30b3\u30d4\u30fc\u5bfe\u8c61\u306e\u30c1\u30e3\u30cd\u30eb\n- `startInChannel` \u30b3\u30d4\u30fc\u5143\u306e\u958b\u59cb\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n\n```\nAudioBuffer {\n  copyToChannel(\n    source: Float32Array, \n    channelNumber: number, \n    startInChannel: number = 0\n  ): void;\n}\n```\n\n- `source` \u30b3\u30d4\u30fc\u3059\u308b\u914d\u5217\n- `channelNumber` \u30b3\u30d4\u30fc\u5bfe\u8c61\u306e\u30c1\u30e3\u30cd\u30eb\n- `startInChannel` \u30b3\u30d4\u30fc\u5148\u306e\u958b\u59cb\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n\n### Support\n| Chrome  | Opera   | Firefox | Safari | Edge |\n|:-------:|:-------:|:-------:|:------:|:----:|\n| :ok: 43 | :ok: 30 | :ok: 27 | :x: 8  | :x:  |\n\n### Polyfill\n```js\nfunction copyFromChannel(destination, channelNumber, startInChannel) {\n  var source = this.getChannelData(channelNumber|0).subarray(startInChannel|0);\n  var minLength = Math.min(source.length, destination.length);\n\n  destination.set(source.subarray(0, minLength));\n}\n\nfunction copyToChannel(source, channelNumber, startInChannel) {\n  var minLength= Math.min(source.length, this.length - (startInChannel|0));\n  var clipped = source.subarray(0, minLength);\n\n  this.getChannelData(channelNumber|0).set(source, startInChannel|0);\n}\n\nif (!AudioBuffer.prototype.hasOwnProperty(\"copyFromChannel\")) {\n  AudioBuffer.prototype.copyFromChannel = copyFromChannel;\n}\nif (!AudioBuffer.prototype.hasOwnProperty(\"copyToChannel\")) {\n  AudioBuffer.prototype.copyToChannel = copyToChannel;\n}\n```\n\n## AudioContext#createStereoPanner\n\u30b9\u30c6\u30ec\u30aa\u30d1\u30f3\u30ca\u30fc\u3002`pan` \u5c5e\u6027\u3067\u5de6\u53f3\u306e\u4f4d\u7f6e\u3092\u8a2d\u5b9a\u3057\u305f\u308a\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3057\u305f\u308a\u3001OscillatorNode \u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u30aa\u30fc\u30c8\u30d1\u30f3\u306a\u3069\u304c\u7c21\u5358\u306b\u3067\u304d\u308b\u3002\n\u3044\u307e\u307e\u3067\u306f\u306a\u305c\u304b 3D\u7a7a\u9593\u4e0a\u306e\u5b9a\u4f4d (\u7a7a\u9593\u306e\u3069\u3053\u306b\u97f3\u6e90\u304c\u3042\u3063\u3066\u3001\u8074\u304f\u4eba\u306f\u3069\u3053\u306b\u3044\u308b\u306e\u304b\u3001\u3069\u3063\u3061\u3092\u5411\u3044\u3066\u3044\u308b\u306e\u304b) \u3057\u304b\u306a\u304b\u3063\u305f\u3002\n\n### Interface\n```\nAudioContext {\n  createStereoPanner(): StereoPannerNode;\n}\n\nStereoPannerNode : AudioNode {\n  pan: AudioParam;\n}\n```\n\n### Support\n| Chrome  | Opera   | Firefox | Safari | Edge |\n|:-------:|:-------:|:-------:|:------:|:----:|\n| :ok: 41 | :ok: 28 | :ok: 37 | :x: 8  | :ok: |\n\n### Polyfill\nhttps://github.com/mohayonao/stereo-panner-node\n\n```js\nvar StereoPannerNode = require(\"stereo-panner-node\");\n\nfunction createStereoPanner() {\n  return new StereoPannerNode(this);\n}\n\nif (!AudioContext.prototype.hasOwnProperty(\"createStereoPanner\")) {\n  AudioContext.prototype.createStereoPanner = createStereoPanner;\n}\n```\n\n## AudioContext#suspend / resume / close\n\u30aa\u30fc\u30c7\u30a3\u30aa\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e \u505c\u6b62 / \u518d\u958b / \u7d42\u4e86 \u3092\u3059\u308b\u3002\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u73fe\u5728\u306e\u72b6\u614b\u306f `state` \u5c5e\u6027\u3067\u53d6\u5f97\u3067\u304d\u3001\u5909\u66f4\u304c\u3042\u3063\u305f\u5834\u5408\u306f `onstatechange` \u304c\u547c\u3070\u308c\u308b\u3002\n\u5404\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u72b6\u614b\u9077\u79fb\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\n\n```\nnew AudioContext()\n      |\n      V\n+------------+                 +------------+\n| state:     | -- suspend() -> | state:     |\n|  running   | <- resume() --- |  suspended |\n+------------+                 +------------+\n      |                              |\n      | close()                      | close()\n      +------------------------------+\n      |\n      V\n+-----------+\n| state:    |\n|  closed   |\n+-----------+\n```\n\n```\nnew OfflineAudioContext(...args);\n      |\n      V\n+------------+\n| state:     |\n|  suspended |\n+------------+\n      |\n      | startRendering()\n      V\n+------------+\n| state:     |\n|  running   |\n+------------+\n      |\n      | < rendering completed >\n      V\n+------------+\n| state:     |\n|  closed    |\n+------------+\n```\n\n### Interface\n```\nAudioContext {\n  state: string;\n  onstatechange: EventHandler;\n\n  suspend(): Promise<void>;\n  resume(): Promise<void>;\n  close(): Promise<void>;\n}\n```\n\n### Support\n\n| API     | Chrome  | Opera   | Firefox | Safari | Edge |\n|:--------|:-------:|:-------:|:-------:|:------:|:----:|\n| suspend | :ok: 41 | :ok: 28 | :x: 38  | :x: 8  | :x:  |\n| resume  | :ok: 41 | :ok: 28 | :x: 38  | :x: 8  | :x:  |\n| close   | :ok: 42 | :ok: 29 | :x: 38  | :x: 8  | :x:  |\n\n### Polyfill\n\u8907\u96d1\u306a\u305f\u3081\u7701\u7565\n\n# \u5909\u66f4\u306e\u3042\u3063\u305fAPI\n\n## AudioContext#decodeAudioData\nPromise \u30d9\u30fc\u30b9\u306b\u306a\u308b\u3002\u4eca\u307e\u3067\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30d9\u30fc\u30b9\u3068\u306e\u4e92\u63db\u6027\u306f\u3042\u308b\u3002\nAPI \u306e\u5909\u66f4\u3068\u306f\u95a2\u4fc2\u306a\u3044\u3051\u3069 Firefox \u306e\u5834\u5408\u3001audioData \u306f transferred \u3055\u308c\u3066\u7a7a\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n### Interface\n```\nAudioContext {\n  decodeAudioData(\n    audioData: ArrayBuffer,\n    successCallback: function = null,\n    errorCallback: function = null\n  ): Promise<AudioBuffer>;\n}\n```\n\n- `audioData` \u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30fc\u30bf\n- `successCallback` \u6210\u529f\u3057\u305f\u3068\u304d\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af (\u5f8c\u65b9\u4e92\u63db\u7528)\n- `errorCallback` \u5931\u6557\u3057\u305f\u3068\u304d\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af (\u5f8c\u65b9\u4e92\u63db\u7528)\n\n### Support\n| Chrome  | Opera   | Firefox | Safari | Edge            |\n|:-------:|:-------:|:-------:|:------:|:---------------:|\n| :x: 43  | :x: 30  | :ok: 36 | :x: 8  | :grey_question: |\n\n### Polyfill\n```js\nvar originalDecodeAudioData = AudioContext.prototype.decodeAudioData;\nvar isPromiseBased = (function() {\n  var audioContext = new OfflineAudioContext(1, 2, 44100);\n\n  return !!audioContext.decodeAudioData(new Uint8Array(0).buffer, function() {});\n})();\n\nfunction decodeAudioData(audioData, successCallback, errorCallback) {\n  var _this = this;\n  var promise = new Promise(function(resolve, reject) {\n    originalDecodeAudioData.call(_this, audioData, resolve, reject);\n  });\n\n  promise.then(successCallback, errorCallback);\n\n  return promise;\n};\n\nif (!isPromiseBased) {\n  AudioContext.prototype.decodeAudioData = decodeAudioData;\n}\n```\n\n## OfflineAudioContext#startRendering\nPromise \u30d9\u30fc\u30b9\u306b\u306a\u308b\u3002\u4eca\u307e\u3067\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30d9\u30fc\u30b9\u3068\u306e\u4e92\u63db\u6027\u306f\u3042\u308b\u3002\n\n### Interface\n```\nOfflineAudioContext {\n  startRendering(): Promise<AudioBuffer>;\n}\n```\n\n### Support\n| Chrome  | Opera   | Firefox | Safari | Edge            |\n|:-------:|:-------:|:-------:|:------:|:---------------:|\n| :ok: 42 | :ok: 29 | :ok: 37 | :x: 8  | :grey_question: |\n\n## Polyfill\n```js\nvar originalStartRendering = OfflineAudioContext.prototype.startRendering;\nvar isPromiseBased = (function() {\n  var audioContext = new OfflineAudioContext(1, 2, 44100);\n  \n  return !!audioContext.startRendering();\n})();\n\nfunction startRendering () {\n  var _this = this;\n  \n  return new Promise(function(resolve, reject) {\n    var oncomplete = _this.oncomplete;\n\n    _this.oncomplete = function(e) {\n      resolve(e.renderedBuffer);\n      if (typeof oncomplete === \"function\") {\n        oncomplete.call(_this, e);\n      }\n    };\n\n    originalStartRendering.call(_this);\n  });\n}\n\nif (!isPromiseBased) {\n  OfflineAudioContext.prototype.startRendering = startRendering;\n}\n```\n\n## AudioNode#disconnect\n\u3053\u308c\u307e\u3067\u306f\u6307\u5b9a\u3057\u305f\u51fa\u529b\u30c1\u30e3\u30cd\u30eb\u306e\u5168\u30ce\u30fc\u30c9\u3092\u5207\u65ad\u3059\u308b\u3057\u304b\u3067\u304d\u306a\u304b\u3063\u305f\u3051\u3069\u3001\u7279\u5b9a\u306e\u30ce\u30fc\u30c9\u3060\u3051\u5207\u65ad\u3059\u308b\u306a\u3069\u3001\u3088\u308a\u7d30\u304b\u3044\u5236\u5fa1\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\n\n### Interface\n```js\nAudioNode {\n  // \u5168\u30c1\u30e3\u30cd\u30eb\u306e\u5168\u30ce\u30fc\u30c9\u3092\u5207\u65ad (\u4eca\u307e\u3067\u306e disconenct() \u3068\u306f\u7570\u306a\u308b)\n  disconnect(): void; \n  \n  // \u6307\u5b9a\u3057\u305f\u51fa\u529b\u30c1\u30e3\u30cd\u30eb\u306e\u5168\u30ce\u30fc\u30c9\u3092\u5207\u65ad (\u4eca\u307e\u3067\u3068\u540c\u3058)\n  disconnect(output: number): void;\n  \n  // \u6307\u5b9a\u3057\u305f\u30ce\u30fc\u30c9\u3092\u5207\u65ad\n  disconnect(destination: AudioNode|AudioParam): void;\n  \n  // \u6307\u5b9a\u3057\u305f\u51fa\u529b\u30c1\u30e3\u30cd\u30eb\u306e\u6307\u5b9a\u3057\u305f\u30ce\u30fc\u30c9\u3092\u5207\u65ad\n  disconnect(destination: AudioNode|AudioParam, output: number): void;\n  \n  // \u6307\u5b9a\u3057\u305f\u51fa\u529b\u30c1\u30e3\u30cd\u30eb\u306e\u6307\u5b9a\u3057\u305f\u30ce\u30fc\u30c9\u306e\u6307\u5b9a\u3057\u305f\u5165\u529b\u30c1\u30e3\u30cd\u30eb\u3092\u5207\u65ad\n  disconnect(destination: AudioNode, output: number, input: number): void;\n}\n```\n\n### Support\n| Chrome  | Opera   | Firefox | Safari | Edge            |\n|:-------:|:-------:|:-------:|:------:|:---------------:|\n| :ok: 43 | :ok: 30 | :x: 38  | :x: 8  | :grey_question: |\n\n### Polyfill\n\u8907\u96d1\u306a\u305f\u3081\u7701\u7565\n\n# \u305d\u306e\u4ed6\n- `AudioBufferSource` \u3084 `ConvolverNode` \u3067 `buffer` \u306e\u518d\u4ee3\u5165\u304c\u3067\u304d\u306a\u304f\u306a\u308b\n  - \u4eca\u306f chrome \u3060\u3068 warning \u304c\u51fa\u308b\u3060\u3051 (Convolver\u3067\u306f\u51fa\u306a\u3044\u3051\u3069)\n- `ScriptProcessorNode` \u304c\u5ec3\u6b62\u3055\u308c Worker \u30d9\u30fc\u30b9\u306e `AudioWorkerNode` \u304c\u5c0e\u5165\u3055\u308c\u308b\n  - \u666e\u901a\u306e `AudioNode` \u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u308b\u30ab\u30b9\u30bf\u30e0\u30ce\u30fc\u30c9\u304c\u751f\u6210\u3067\u304d\u308b\n", "tags": ["JavaScript", "WebAudioAPI"]}