{"context": "In the c++11, there is a new feature auto. With auto we could avoid type names that are clutter. The basic usage of auto just like this.\nvector<ClutterName> data; \nauto a = data[0];\n\nUsually we use auto to initialize a variable by copying as described before. But if we want to bind a reference. We can do something like this:\nconst auto& a = data[0];\n\nIn the c++11, there is a new feature `auto`. With `auto` we could avoid type names that are clutter. The basic usage of `auto` just like this.\n\n```cpp\nvector<ClutterName> data; \nauto a = data[0];\n```\n\nUsually we use `auto` to initialize a variable by copying as described before. But if we want to bind a reference. We can do something like this:\n\n```cpp\nconst auto& a = data[0];\n```   \n", "tags": ["auto", "C++11"]}