{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u7d76\u5bfe\u30d1\u30b9(UNC)\u306b\u5909\u63db\u3057\u3066\u3001\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u306b\u51fa\u529b\u3059\u308b\u8a71\u3002\n\u305f\u3068\u3048\u3070\u3001Z:\\test\u3068\u3044\u3063\u305f\u30d1\u30b9\u3092\u305d\u306e\u307e\u307e\u4ed6\u306e\u4eba\u306b\u9023\u7d61\u3057\u3066\u3082\u3001\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u3002\n\u6bce\u5ea6\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u30d1\u30b9\u3092\u8abf\u3079\u308b\u306e\u306f\u9762\u5012\u304f\u3055\u3044\u3002\n\u52c9\u5f37\u3092\u517c\u306d\u3066C#\u3067\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u304c\u306a\u3044\u304b\u8abf\u3079\u3001\u81ea\u5206\u306e\u8981\u671b\u3092\u6e80\u305f\u3059\u30c4\u30fc\u30eb\u3092\u4f5c\u3063\u305f\u3002\n\n\u7d50\u8ad6\n\nC#\u304b\u3089Win32API\u3000WNetGetUniversalName\u3092\u547c\u3073\u51fa\u3057\u3066\u4f7f\u3063\u3066UNC\u5909\u63db\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u305f\u3002\n\u300c\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u64cd\u4f5c\u300d\u3001\u300c\u9001\u308b(SendTo)\u300d\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u53f3\u30af\u30ea\u30c3\u30af\u3067\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\u753b\u9762\u304c\u51fa\u308b\u3068\u6c17\u306b\u306a\u308b\u306e\u3067\u3001\u4f55\u3082\u30d5\u30a9\u30fc\u30e0\u3092\u4f5c\u3089\u306a\u3044\u30d5\u30a9\u30fc\u30e0\u30a2\u30d7\u30ea\u3068\u3057\u305f\u3002\n\n\n\u7d4c\u7def\n\n.NetFramework\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u306a\u3044\uff1f\n\u300c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6 UNC\u5909\u63db\u300d\u3067\u691c\u7d22\u3059\u308b\u3068\u3001VBScript\u306e\u4f8b1\u3068\u304b\u3001VBScript\u306e\u4f8b2\u7b49\u7d50\u69cb\u51fa\u3066\u304f\u308b\u304c\u3001C#(\u2252.NetFramework\u30af\u30e9\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea)\u306e\u60c5\u5831\u304c\u306a\u3044\u3002\n\u3058\u3083\u3093\u306c\u306d\u3063\u3068\u3055\u3093(Microsoft MVP for C#)\u306e\u30b3\u30e1\u30f3\u30c8\n\n> \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u306e\u7d76\u5bfe\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3069\u3046\u3057\u305f\u3089\u3088\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n.NET Framework \u306b\u306f\u305d\u3046\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u306f\u306a\u3044\u306e\u304b\u306a\u3041...\nGoogle \u3067\u3001\u5c0f1\u6642\u9593\u8abf\u3079\u3066\u307f\u305f\u3093\u3067\u3059\u304c\u898b\u5f53\u305f\u308a\u307e\u305b\u3093\u3067\u3057\u305f...\u3002\n\n\u3068\u306e\u3053\u3068\u3002\u3053\u3053\u3067\u306f\u3001WNetGetConnection\u3092\u4f7f\u3046\u65b9\u6cd5\u304c\u793a\u3055\u308c\u3066\u304a\u308a\u3001\u8cea\u554f\u8005\u300cC#\u52d5\u3044\u305f\u300d\u305d\u3046\u3067\u3059\u3002\n\n.NetFramework\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u3063\u305f\uff1f\nNativeMethods.WNetGetUniversalName \u30e1\u30bd\u30c3\u30c9\u3068\u3044\u3046\u306e\u3092\u898b\u3064\u3051\u305f\u304c\u3001\n\n\u3053\u306e\u578b\u306f SecurityCriticalAttribute \u5c5e\u6027\u3092\u6301\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u4f7f\u7528\u306f .NET Framework for Silverlight \u30af\u30e9\u30b9 \u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306e\u5185\u90e8\u7528\u306b\u9650\u5b9a\u3055\u308c\u307e\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30b3\u30fc\u30c9\u3067\u3053\u306e\u578b\u306e\u4efb\u610f\u306e\u30e1\u30f3\u30d0\u30fc\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001MethodAccessException \u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u307e\u3059\u3002\n\n\u3068\u308f\u3051\u306e\u308f\u304b\u3089\u306a\u3044\u3053\u3068\u3092\u8a00\u3063\u3066\u3044\u308b\u306e\u3067\u3068\u308a\u3042\u3048\u305a\u9664\u5916\u3002\n\n\u305d\u306e\u5f8c\nWin32API\u3001UNC\u3001C#\u3067\u3082\u3046\u5c11\u3057\u691c\u7d22\u3057\u305f\u3068\u3053\u308d\u3001\u3082\u3046\u5c11\u3057\u30b3\u30fc\u30c9\u304c\u8a73\u7d30\u306b\u793a\u3055\u308c\u3066\u3044\u308b\u56de\u7b54\u304c\u3042\u3063\u305fConvert path to UNC path - Stack Overflow\u306e\u3067\u3001\u3053\u308c\u3092\u30d9\u30fc\u30b9\u3068\u3057\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u3053\u3061\u3089\u306f\u3001WNetGetUniversalName\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3002\n\n\u30b3\u30fc\u30c9\n\u4e00\u901a\u308a\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u305f\u3002\n\nProgram.cs\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Windows.Forms;\nusing System.Runtime.InteropServices;//Marshal\u306e\u305f\u3081\u306b\u8ffd\u52a0\nusing System.Text; //StringBuiler\u306e\u305f\u3081\u306b\u8ffd\u52a0\n\nnamespace WindowsFormsApplication1\n{\n   static class Program\n   {\n       /// <summary>\n       /// \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e1\u30a4\u30f3 \u30a8\u30f3\u30c8\u30ea \u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\n       /// </summary>\n       [STAThread]\n       static void Main(string[] args)\n       {\n           //\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b3\u30fc\u30c9\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n           //Application.EnableVisualStyles();\n           //Application.SetCompatibleTextRenderingDefault(false);\n           //Application.Run(new Form1());\n\n           //\u30bd\u30fc\u30c8\u3057\u3066\u304a\u304f - \u6587\u5b57\u5217\u306e\u6bd4\u8f03\u306a\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u3068\u30d5\u30a9\u30eb\u30c0\u304c\u6df7\u5728\u3057\u3066\u3044\u308b\u5f15\u6570\u304c\u4e0e\u3048\u3089\u308c\u308b\u3068\u671f\u5f85\u3057\u3066\u3044\u308b\u9806\u306b\u306a\u3089\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n           Array.Sort<string>(args);\n\n           StringBuilder unc_path = new StringBuilder();\n           foreach(string path in args) \n           {\n               unc_path.AppendLine(GetUniversalName(path));\n           }\n           Clipboard.SetText(unc_path.ToString());\n\n       }\n\n       /* \n        * WNetGetUniversalName\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\n        */\n       [DllImport(\"mpr.dll\", CharSet = CharSet.Unicode)]\n       [return: MarshalAs(UnmanagedType.U4)] static extern int\n       WNetGetUniversalName(\n           string lpLocalPath,                                 // \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8cc7\u6e90\u306e\u30d1\u30b9 \n           [MarshalAs(UnmanagedType.U4)] int dwInfoLevel,      // \u60c5\u5831\u306e\u30ec\u30d9\u30eb\n           IntPtr lpBuffer,                                    // \u540d\u524d\u30d0\u30c3\u30d5\u30a1\n           [MarshalAs(UnmanagedType.U4)] ref int lpBufferSize  // \u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\n       );\n\n\n       /*\n        * dwInfoLevel\u306b\u6307\u5b9a\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\n        *  lpBuffer \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6307\u3059\u30d0\u30c3\u30d5\u30a1\u3067\u53d7\u3051\u53d6\u308b\u69cb\u9020\u4f53\u306e\u7a2e\u985e\u3092\u6b21\u306e\u3044\u305a\u308c\u304b\u3067\u6307\u5b9a\n        */\n       const int UNIVERSAL_NAME_INFO_LEVEL = 0x00000001;\n       const int REMOTE_NAME_INFO_LEVEL    = 0x00000002; //\u3053\u3061\u3089\u306f\u3001\u30c6\u30b9\u30c8\u3057\u3066\u3044\u306a\u3044\n\n\n       /*\n        * lpBuffer\u3067\u53d7\u3051\u53d6\u308b\u69cb\u9020\u4f53\n        */\n       [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]\n       struct UNIVERSAL_NAME_INFO\n       {\n           public string lpUniversalName;\n       }\n\n       [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]\n       struct _REMOTE_NAME_INFO  //\u3053\u3061\u3089\u306f\u3001\u30c6\u30b9\u30c8\u3057\u3066\u3044\u306a\u3044\n       {\n           string lpUniversalName;\n           string lpConnectionName;\n           string lpRemainingPath;\n       }\n\n       /* \u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u4e00\u89a7\n        * WNetGetUniversalName\u56fa\u6709\u306e\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\n        *   http://msdn.microsoft.com/ja-jp/library/cc447067.aspx\n        * System Error Codes (0-499)\n        *   http://msdn.microsoft.com/en-us/library/windows/desktop/ms681382(v=vs.85).aspx\n        */\n       const int NO_ERROR                 = 0;\n       const int ERROR_NOT_SUPPORTED      = 50;\n       const int ERROR_MORE_DATA          = 234;\n       const int ERROR_BAD_DEVICE         = 1200;\n       const int ERROR_CONNECTION_UNAVAIL = 1201;\n       const int ERROR_NO_NET_OR_BAD_PATH = 1203;\n       const int ERROR_EXTENDED_ERROR     = 1208;\n       const int ERROR_NO_NETWORK         = 1222;\n       const int ERROR_NOT_CONNECTED      = 2250;\n\n\n       /*\n        * UNC\u5909\u63db\u30ed\u30b8\u30c3\u30af\u672c\u4f53\n        */\n       static string GetUniversalName(string path_src)\n       {\n           string unc_path_dest = path_src; //\u89e3\u6c7a\u3067\u304d\u306a\u3044\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f\u3001\u5165\u529b\u3055\u308c\u305f\u30d1\u30b9\u3092\u305d\u306e\u307e\u307e\u623b\u3059\n           int size = 1;\n\n           /*\n            * \u524d\u51e6\u7406\n            *   \u610f\u56f3\u7684\u306b\u3001ERROR_MORE_DATA\u3092\u767a\u751f\u3055\u305b\u3066\u3001\u5fc5\u8981\u306a\u30d0\u30c3\u30d5\u30a1\u30fb\u30b5\u30a4\u30ba(size)\u3092\u53d6\u5f97\u3059\u308b\u3002\n            */\n           //1\u30d0\u30a4\u30c8\u306a\u3089\u3070\u3001\u78ba\u5b9f\u306bERROR_MORE_DATA\u304c\u767a\u751f\u3059\u308b\u3060\u308d\u3046\u3068\u3044\u3046\u671f\u5f85\u3002\n           IntPtr lp_dummy = Marshal.AllocCoTaskMem(size);\n\n           //\u30b5\u30a4\u30ba\u53d6\u5f97\u3092\u30c8\u30e9\u30a4\n           int apiRetVal = WNetGetUniversalName(path_src, UNIVERSAL_NAME_INFO_LEVEL, lp_dummy, ref size);\n\n           //\u30c0\u30df\u30fc\u3092\u89e3\u653e\n           Marshal.FreeCoTaskMem(lp_dummy);\n\n\n           /*\n            * UNC\u5909\u63db\u51e6\u7406\n            */ \n           switch(apiRetVal)\n           {\n               case ERROR_MORE_DATA :\n                   //\u53d7\u3051\u53d6\u3063\u305f\u30d0\u30c3\u30d5\u30a1\u30fb\u30b5\u30a4\u30ba(size)\u3067\u518d\u5ea6\u30e1\u30e2\u30ea\u78ba\u4fdd\n                   IntPtr lpBufUniversalNameInfo = Marshal.AllocCoTaskMem(size);\n\n                   //UNC\u30d1\u30b9\u3078\u306e\u5909\u63db\u3092\u5b9f\u65bd\u3059\u308b\u3002\n                   apiRetVal = WNetGetUniversalName(path_src, UNIVERSAL_NAME_INFO_LEVEL, lpBufUniversalNameInfo, ref size);\n\n                   //UNIVERSAL_NAME_INFO\u3092\u53d6\u308a\u51fa\u3059\u3002\n                   UNIVERSAL_NAME_INFO a = (UNIVERSAL_NAME_INFO)Marshal.PtrToStructure(lpBufUniversalNameInfo, typeof(UNIVERSAL_NAME_INFO));\n\n                   //\u30d0\u30c3\u30d5\u30a1\u3092\u89e3\u653e\u3059\u308b\n                   Marshal.FreeCoTaskMem(lpBufUniversalNameInfo);\n\n                   if (apiRetVal == NO_ERROR)\n                   {\n                       //UNC\u306b\u5909\u63db\u3057\u305f\u30d1\u30b9\u3092\u8fd4\u3059\n                       unc_path_dest = a.lpUniversalName;\n                   }\n                   else\n                   {\n                       //MessageBox.Show(path_src +\"ErrorCode:\" + apiRetVal.ToString());\n                   }\n                   break;\n\n               case ERROR_BAD_DEVICE   : //\u3059\u3067\u306bUNC\u540d(\\\\servername\\test)\n               case ERROR_NOT_CONNECTED: //\u30ed\u30fc\u30ab\u30eb\u30fb\u30c9\u30e9\u30a4\u30d6\u306e\u30d1\u30b9(C:\\test)\n                   //MessageBox.Show(path_src +\"\\nErrorCode:\" + apiRetVal.ToString());\n                   break;\n               default:\n                   //MessageBox.Show(path_src + \"\\nErrorCode:\" + apiRetVal.ToString());\n                   break;\n\n           }\n\n           return unc_path_dest;\n       }\n\n   }\n\n}  \n\n\n\n\u53c2\u8003\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u4e0a\u306e\u30d1\u30b9\u3092UNC\u306b\u3059\u308b - \u30c1\u30e9\u30b7\u306e\u88cf\n\u8cea\u554f\uff1a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u304b\u3089\uff35\uff2e\uff23\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5 - Microsoft Visual Studio\nConvert path to UNC path - Stack Overflow\nWNetGetUniversalName - Microsoft\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u30bb\u30f3\u30bf\u30fc\nWNetGetConnection - Microsoft\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u30bb\u30f3\u30bf\u30fc\nSystem Error Codes - Microsoft\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u30bb\u30f3\u30bf\u30fc\nNativeMethods.WNetGetUniversalName \u30e1\u30bd\u30c3\u30c9 - Microsoft\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u30bb\u30f3\u30bf\u30fc\nC#\u5165\u9580- \u7b2c20\u56de \u5b9f\u884c\u6642\u306b\u53c2\u7167\u53ef\u80fd\u306a\u5c5e\u6027 - @IT\nVista\u3068Windows 7\u306e\u9001\u308b\uff08send to)\u30d5\u30a9\u30eb\u30c0\u3092\u7c21\u5358\u306b\u8868\u793a\u3055\u305b\u308b\u65b9\u6cd5 - \u3068\u3042\u308b\u30bd\u30cb\u30fc\u597d\u304d\u306a\u30a8\u30f3\u30b8\u30cb\u30a2\u306e\u65e5\u8a18\n# \u6982\u8981\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u7d76\u5bfe\u30d1\u30b9(UNC)\u306b\u5909\u63db\u3057\u3066\u3001\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u306b\u51fa\u529b\u3059\u308b\u8a71\u3002\n\u305f\u3068\u3048\u3070\u3001Z:\\\\test\u3068\u3044\u3063\u305f\u30d1\u30b9\u3092\u305d\u306e\u307e\u307e\u4ed6\u306e\u4eba\u306b\u9023\u7d61\u3057\u3066\u3082\u3001\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u3002\n\n\u6bce\u5ea6\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u30d1\u30b9\u3092\u8abf\u3079\u308b\u306e\u306f\u9762\u5012\u304f\u3055\u3044\u3002\n\u52c9\u5f37\u3092\u517c\u306d\u3066C#\u3067\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u304c\u306a\u3044\u304b\u8abf\u3079\u3001\u81ea\u5206\u306e\u8981\u671b\u3092\u6e80\u305f\u3059\u30c4\u30fc\u30eb\u3092\u4f5c\u3063\u305f\u3002\n\n\n## \u7d50\u8ad6\n- C#\u304b\u3089Win32API\u3000[WNetGetUniversalName][WNetGetUniversalName]\u3092\u547c\u3073\u51fa\u3057\u3066\u4f7f\u3063\u3066UNC\u5909\u63db\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u305f\u3002\n- \u300c\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u64cd\u4f5c\u300d\u3001\u300c\u9001\u308b(SendTo)\u300d\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u53f3\u30af\u30ea\u30c3\u30af\u3067\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002  \n- \u30b3\u30f3\u30bd\u30fc\u30eb\u753b\u9762\u304c\u51fa\u308b\u3068\u6c17\u306b\u306a\u308b\u306e\u3067\u3001\u4f55\u3082\u30d5\u30a9\u30fc\u30e0\u3092\u4f5c\u3089\u306a\u3044\u30d5\u30a9\u30fc\u30e0\u30a2\u30d7\u30ea\u3068\u3057\u305f\u3002\n\n\n# \u7d4c\u7def\n##.NetFramework\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u306a\u3044\uff1f\n\u300c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6 UNC\u5909\u63db\u300d\u3067\u691c\u7d22\u3059\u308b\u3068\u3001[VBScript\u306e\u4f8b1][\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u4e0a\u306e\u30d1\u30b9\u3092UNC\u306b\u3059\u308b]\u3068\u304b\u3001[VBScript\u306e\u4f8b2][micrsoft support]\u7b49\u7d50\u69cb\u51fa\u3066\u304f\u308b\u304c\u3001C#(\u2252.NetFramework\u30af\u30e9\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea)\u306e\u60c5\u5831\u304c\u306a\u3044\u3002\n\n[\u3058\u3083\u3093\u306c\u306d\u3063\u3068\u3055\u3093(Microsoft MVP for C#)\u306e\u30b3\u30e1\u30f3\u30c8][\u3058\u3083\u3093\u306c\u306d\u3063\u3068\u3055\u3093\u30b3\u30e1\u30f3\u30c8]\n\n>\\> \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u306e\u7d76\u5bfe\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3069\u3046\u3057\u305f\u3089\u3088\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n>.NET Framework \u306b\u306f\u305d\u3046\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u306f\u306a\u3044\u306e\u304b\u306a\u3041...\n>Google \u3067\u3001\u5c0f1\u6642\u9593\u8abf\u3079\u3066\u307f\u305f\u3093\u3067\u3059\u304c\u898b\u5f53\u305f\u308a\u307e\u305b\u3093\u3067\u3057\u305f...\u3002\n\n\u3068\u306e\u3053\u3068\u3002\u3053\u3053\u3067\u306f\u3001[WNetGetConnection][WNetGetConnection]\u3092\u4f7f\u3046\u65b9\u6cd5\u304c\u793a\u3055\u308c\u3066\u304a\u308a\u3001[\u8cea\u554f\u8005][\u8cea\u554f\uff1a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u304b\u3089\uff35\uff2e\uff23\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5]\u300cC#\u52d5\u3044\u305f\u300d\u305d\u3046\u3067\u3059\u3002\n\n##.NetFramework\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u3063\u305f\uff1f\n[NativeMethods.WNetGetUniversalName \u30e1\u30bd\u30c3\u30c9][NativeMethods.WNetGetUniversalName]\u3068\u3044\u3046\u306e\u3092\u898b\u3064\u3051\u305f\u304c\u3001\n\n> \u3053\u306e\u578b\u306f SecurityCriticalAttribute \u5c5e\u6027\u3092\u6301\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u4f7f\u7528\u306f .NET Framework for Silverlight \u30af\u30e9\u30b9 \u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306e\u5185\u90e8\u7528\u306b\u9650\u5b9a\u3055\u308c\u307e\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u30b3\u30fc\u30c9\u3067\u3053\u306e\u578b\u306e\u4efb\u610f\u306e\u30e1\u30f3\u30d0\u30fc\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001MethodAccessException \u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u307e\u3059\u3002\n\n\u3068\u308f\u3051\u306e\u308f\u304b\u3089\u306a\u3044\u3053\u3068\u3092\u8a00\u3063\u3066\u3044\u308b\u306e\u3067\u3068\u308a\u3042\u3048\u305a\u9664\u5916\u3002\n\n##\u305d\u306e\u5f8c\nWin32API\u3001UNC\u3001C#\u3067\u3082\u3046\u5c11\u3057\u691c\u7d22\u3057\u305f\u3068\u3053\u308d\u3001\u3082\u3046\u5c11\u3057\u30b3\u30fc\u30c9\u304c\u8a73\u7d30\u306b\u793a\u3055\u308c\u3066\u3044\u308b\u56de\u7b54\u304c\u3042\u3063\u305f[Convert path to UNC path - Stack Overflow][Convert path to UNC path]\u306e\u3067\u3001\u3053\u308c\u3092\u30d9\u30fc\u30b9\u3068\u3057\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u3053\u3061\u3089\u306f\u3001[WNetGetUniversalName][WNetGetUniversalName]\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3002\n\n\n# \u30b3\u30fc\u30c9\n\u4e00\u901a\u308a\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u305f\u3002\n\n```C#:Program.cs\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Windows.Forms;\nusing System.Runtime.InteropServices;//Marshal\u306e\u305f\u3081\u306b\u8ffd\u52a0\nusing System.Text; //StringBuiler\u306e\u305f\u3081\u306b\u8ffd\u52a0\n\nnamespace WindowsFormsApplication1\n{\n   static class Program\n   {\n       /// <summary>\n       /// \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e1\u30a4\u30f3 \u30a8\u30f3\u30c8\u30ea \u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\n       /// </summary>\n       [STAThread]\n       static void Main(string[] args)\n       {\n           //\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b3\u30fc\u30c9\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n           //Application.EnableVisualStyles();\n           //Application.SetCompatibleTextRenderingDefault(false);\n           //Application.Run(new Form1());\n\n           //\u30bd\u30fc\u30c8\u3057\u3066\u304a\u304f - \u6587\u5b57\u5217\u306e\u6bd4\u8f03\u306a\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u3068\u30d5\u30a9\u30eb\u30c0\u304c\u6df7\u5728\u3057\u3066\u3044\u308b\u5f15\u6570\u304c\u4e0e\u3048\u3089\u308c\u308b\u3068\u671f\u5f85\u3057\u3066\u3044\u308b\u9806\u306b\u306a\u3089\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n           Array.Sort<string>(args);\n\n           StringBuilder unc_path = new StringBuilder();\n           foreach(string path in args) \n           {\n               unc_path.AppendLine(GetUniversalName(path));\n           }\n           Clipboard.SetText(unc_path.ToString());\n\n       }\n\n       /* \n        * WNetGetUniversalName\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\n        */\n       [DllImport(\"mpr.dll\", CharSet = CharSet.Unicode)]\n       [return: MarshalAs(UnmanagedType.U4)] static extern int\n       WNetGetUniversalName(\n           string lpLocalPath,                                 // \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8cc7\u6e90\u306e\u30d1\u30b9 \n           [MarshalAs(UnmanagedType.U4)] int dwInfoLevel,      // \u60c5\u5831\u306e\u30ec\u30d9\u30eb\n           IntPtr lpBuffer,                                    // \u540d\u524d\u30d0\u30c3\u30d5\u30a1\n           [MarshalAs(UnmanagedType.U4)] ref int lpBufferSize  // \u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\n       );\n\n\n       /*\n        * dwInfoLevel\u306b\u6307\u5b9a\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\n        *  lpBuffer \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6307\u3059\u30d0\u30c3\u30d5\u30a1\u3067\u53d7\u3051\u53d6\u308b\u69cb\u9020\u4f53\u306e\u7a2e\u985e\u3092\u6b21\u306e\u3044\u305a\u308c\u304b\u3067\u6307\u5b9a\n        */\n       const int UNIVERSAL_NAME_INFO_LEVEL = 0x00000001;\n       const int REMOTE_NAME_INFO_LEVEL    = 0x00000002; //\u3053\u3061\u3089\u306f\u3001\u30c6\u30b9\u30c8\u3057\u3066\u3044\u306a\u3044\n\n\n       /*\n        * lpBuffer\u3067\u53d7\u3051\u53d6\u308b\u69cb\u9020\u4f53\n        */\n       [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]\n       struct UNIVERSAL_NAME_INFO\n       {\n           public string lpUniversalName;\n       }\n\n       [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]\n       struct _REMOTE_NAME_INFO  //\u3053\u3061\u3089\u306f\u3001\u30c6\u30b9\u30c8\u3057\u3066\u3044\u306a\u3044\n       {\n           string lpUniversalName;\n           string lpConnectionName;\n           string lpRemainingPath;\n       }\n\n       /* \u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u4e00\u89a7\n        * WNetGetUniversalName\u56fa\u6709\u306e\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\n        *   http://msdn.microsoft.com/ja-jp/library/cc447067.aspx\n        * System Error Codes (0-499)\n        *   http://msdn.microsoft.com/en-us/library/windows/desktop/ms681382(v=vs.85).aspx\n        */\n       const int NO_ERROR                 = 0;\n       const int ERROR_NOT_SUPPORTED      = 50;\n       const int ERROR_MORE_DATA          = 234;\n       const int ERROR_BAD_DEVICE         = 1200;\n       const int ERROR_CONNECTION_UNAVAIL = 1201;\n       const int ERROR_NO_NET_OR_BAD_PATH = 1203;\n       const int ERROR_EXTENDED_ERROR     = 1208;\n       const int ERROR_NO_NETWORK         = 1222;\n       const int ERROR_NOT_CONNECTED      = 2250;\n\n\n       /*\n        * UNC\u5909\u63db\u30ed\u30b8\u30c3\u30af\u672c\u4f53\n        */\n       static string GetUniversalName(string path_src)\n       {\n           string unc_path_dest = path_src; //\u89e3\u6c7a\u3067\u304d\u306a\u3044\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f\u3001\u5165\u529b\u3055\u308c\u305f\u30d1\u30b9\u3092\u305d\u306e\u307e\u307e\u623b\u3059\n           int size = 1;\n\n           /*\n            * \u524d\u51e6\u7406\n            *   \u610f\u56f3\u7684\u306b\u3001ERROR_MORE_DATA\u3092\u767a\u751f\u3055\u305b\u3066\u3001\u5fc5\u8981\u306a\u30d0\u30c3\u30d5\u30a1\u30fb\u30b5\u30a4\u30ba(size)\u3092\u53d6\u5f97\u3059\u308b\u3002\n            */\n           //1\u30d0\u30a4\u30c8\u306a\u3089\u3070\u3001\u78ba\u5b9f\u306bERROR_MORE_DATA\u304c\u767a\u751f\u3059\u308b\u3060\u308d\u3046\u3068\u3044\u3046\u671f\u5f85\u3002\n           IntPtr lp_dummy = Marshal.AllocCoTaskMem(size);\n\n           //\u30b5\u30a4\u30ba\u53d6\u5f97\u3092\u30c8\u30e9\u30a4\n           int apiRetVal = WNetGetUniversalName(path_src, UNIVERSAL_NAME_INFO_LEVEL, lp_dummy, ref size);\n\n           //\u30c0\u30df\u30fc\u3092\u89e3\u653e\n           Marshal.FreeCoTaskMem(lp_dummy);\n\n\n           /*\n            * UNC\u5909\u63db\u51e6\u7406\n            */ \n           switch(apiRetVal)\n           {\n               case ERROR_MORE_DATA :\n                   //\u53d7\u3051\u53d6\u3063\u305f\u30d0\u30c3\u30d5\u30a1\u30fb\u30b5\u30a4\u30ba(size)\u3067\u518d\u5ea6\u30e1\u30e2\u30ea\u78ba\u4fdd\n                   IntPtr lpBufUniversalNameInfo = Marshal.AllocCoTaskMem(size);\n\n                   //UNC\u30d1\u30b9\u3078\u306e\u5909\u63db\u3092\u5b9f\u65bd\u3059\u308b\u3002\n                   apiRetVal = WNetGetUniversalName(path_src, UNIVERSAL_NAME_INFO_LEVEL, lpBufUniversalNameInfo, ref size);\n\n                   //UNIVERSAL_NAME_INFO\u3092\u53d6\u308a\u51fa\u3059\u3002\n                   UNIVERSAL_NAME_INFO a = (UNIVERSAL_NAME_INFO)Marshal.PtrToStructure(lpBufUniversalNameInfo, typeof(UNIVERSAL_NAME_INFO));\n\n                   //\u30d0\u30c3\u30d5\u30a1\u3092\u89e3\u653e\u3059\u308b\n                   Marshal.FreeCoTaskMem(lpBufUniversalNameInfo);\n\n                   if (apiRetVal == NO_ERROR)\n                   {\n                       //UNC\u306b\u5909\u63db\u3057\u305f\u30d1\u30b9\u3092\u8fd4\u3059\n                       unc_path_dest = a.lpUniversalName;\n                   }\n                   else\n                   {\n                       //MessageBox.Show(path_src +\"ErrorCode:\" + apiRetVal.ToString());\n                   }\n                   break;\n\n               case ERROR_BAD_DEVICE   : //\u3059\u3067\u306bUNC\u540d(\\\\servername\\test)\n               case ERROR_NOT_CONNECTED: //\u30ed\u30fc\u30ab\u30eb\u30fb\u30c9\u30e9\u30a4\u30d6\u306e\u30d1\u30b9(C:\\test)\n                   //MessageBox.Show(path_src +\"\\nErrorCode:\" + apiRetVal.ToString());\n                   break;\n               default:\n                   //MessageBox.Show(path_src + \"\\nErrorCode:\" + apiRetVal.ToString());\n                   break;\n\n           }\n\n           return unc_path_dest;\n       }\n\n   }\n\n}  \n```\n\n\n#\u53c2\u8003\n[\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u4e0a\u306e\u30d1\u30b9\u3092UNC\u306b\u3059\u308b - \u30c1\u30e9\u30b7\u306e\u88cf][\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u4e0a\u306e\u30d1\u30b9\u3092UNC\u306b\u3059\u308b]\n[\u8cea\u554f\uff1a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u304b\u3089\uff35\uff2e\uff23\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5 - Microsoft Visual Studio][\u8cea\u554f\uff1a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u304b\u3089\uff35\uff2e\uff23\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5]\n[Convert path to UNC path - Stack Overflow][Convert path to UNC path]\n[WNetGetUniversalName - Microsoft\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u30bb\u30f3\u30bf\u30fc][WNetGetUniversalName]\n[WNetGetConnection - Microsoft\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u30bb\u30f3\u30bf\u30fc][WNetGetConnection]\n[System Error Codes - Microsoft\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u30bb\u30f3\u30bf\u30fc][System Error Codes]\n[NativeMethods.WNetGetUniversalName \u30e1\u30bd\u30c3\u30c9 - Microsoft\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u30bb\u30f3\u30bf\u30fc][NativeMethods.WNetGetUniversalName]\n[C#\u5165\u9580- \u7b2c20\u56de \u5b9f\u884c\u6642\u306b\u53c2\u7167\u53ef\u80fd\u306a\u5c5e\u6027 - @IT][C#\u5165\u9580- \u7b2c20\u56de]\n[Vista\u3068Windows 7\u306e\u9001\u308b\uff08send to)\u30d5\u30a9\u30eb\u30c0\u3092\u7c21\u5358\u306b\u8868\u793a\u3055\u305b\u308b\u65b9\u6cd5 - \u3068\u3042\u308b\u30bd\u30cb\u30fc\u597d\u304d\u306a\u30a8\u30f3\u30b8\u30cb\u30a2\u306e\u65e5\u8a18][send to]\n\n[\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u4e0a\u306e\u30d1\u30b9\u3092UNC\u306b\u3059\u308b]:http://blog.livedoor.jp/shingo555jp/archives/1819741.html\n[micrsoft support]:http://support.microsoft.com/kb/151027/ja\n[\u8cea\u554f\uff1a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c9\u30e9\u30a4\u30d6\u304b\u3089\uff35\uff2e\uff23\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5]:\nhttp://social.msdn.microsoft.com/Forums/vstudio/ja-JP/b33ff797-be1e-4a3b-9cd7-d4565529783f?forum=csharpgeneralja]\n[\u3058\u3083\u3093\u306c\u306d\u3063\u3068\u3055\u3093\u30b3\u30e1\u30f3\u30c8]:http://dobon.net/vb/bbs/log3-14/8196.html\n\n[WNetGetUniversalName]:http://msdn.microsoft.com/ja-jp/library/cc447067.aspx\n[WNetGetConnection]:http://msdn.microsoft.com/ja-jp/library/cc447035.aspx\n[NativeMethods.WNetGetUniversalName]:http://msdn.microsoft.com/ja-jp/library/microsoft.teamfoundation.common.internal.nativemethods.wnetgetuniversalname(v=vs.110).aspx\n[System Error Codes]:http://msdn.microsoft.com/en-us/library/windows/desktop/ms681382(v=vs.85).aspx\n\n[Convert path to UNC path]:http://stackoverflow.com/questions/8472558/convert-path-to-unc-path\n\n[send to]:[http://taiseiko.blog.so-net.ne.jp/2009-05-24]\n\n[C#\u5165\u9580- \u7b2c20\u56de]:http://www.atmarkit.co.jp/fdotnet/csharp_abc/csharp_abc_020/csharp_abc04.html\n", "tags": ["Win32API", "C#"]}