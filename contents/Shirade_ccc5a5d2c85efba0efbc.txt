{"context": " More than 1 year has passed since last update.\n\nWhat is promise?\n\u975e\u540c\u671f\u51e6\u7406\u3092\u62bd\u8c61\u5316\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u305d\u308c\u3092\u64cd\u4f5c\u3059\u308b\u4ed5\u7d44\u307f\u306e\u3053\u3068\uff0e\n\u8907\u96d1\u306a\u975e\u540c\u671f\u51e6\u7406\u7b49\u3092\u3046\u307e\u304f\u30d1\u30bf\u30fc\u30f3\u5316\u3067\u304d\u308b\u3068\u3044\u3046\u306e\u304cPromise\u306e\u5f79\u5272\n\npromise-workflow.js\nvar Promise = require('promise');\n\nfunction asyncFunction () {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      resolve('Async Hello World');\n    }, 10000);\n  });\n}\n\nasyncFunction().then(function (value) {\n  console.log(value);\n}).catch(function (error) {\n  console.log(error);\n});\n\n\n\nMemo\nJavascript\u306b\u304a\u3051\u308b\u975e\u540c\u671f\u51e6\u7406\u3068\u3044\u3048\u3070\uff0c\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u304c\u591a\u3044\uff0e\n\nSample\n\nsample.js\nvar Promise = require('promise');\n\nfunction taskA() {\n  console.log(\"Task A\");\n  return 2;\n}\nfunction taskB(value) {\n  console.log(\"Task B\");\n  return value * 2;\n}\nfunction onRejected(error) {\n  console.log(\"Catch Error: A or B\", error);\n}\nfunction finalTask() {\n  console.log(\"Final Task\");\n}\nfunction output (value) {\n  console.log(value);\n}\nvar promise = Promise.resolve();\npromise\n  .then(taskA)\n  .then(taskB)\n  .then(output)\n  .catch(onRejected)\n  .then(finalTask, onRejected);\n\n\n\nPromise.all and Promise.race\nPromise.all: Promise \u306e and\n\u6e21\u3057\u305f\u5168\u3066\u306epromise\u304b\u3099FulFilled \u307e\u305f\u306f Rejected\u306b\u306a\u308b\u307e\u3066\u3099\u6b21\u306e\u51e6\u7406\u3092\u5f85\u3064\uff0e\nPromise.race: Promise \u306e or\n\u3068\u3099\u308c\u304b\u4e00\u3064\u3066\u3099\u3082promise\u304b\u3099FulFilled \u307e\u305f\u306f Rejected\u306b\u306a\u3063\u305f\u3089\u6b21\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\n\nsample.js\nvar Promise = require('promise');\n\nvar winnerPromise = new Promise(function (resolve) {\n  setTimeout(function () {\n    console.log('this is winner');\n    resolve('this is winner');\n  }, 4);\n});\nvar loserPromise = new Promise(function (resolve) {\n  setTimeout(function () {\n    console.log('this is loser');\n    resolve('this is loser');\n  }, 1000); });\n// \u4e00\u756a\u6700\u521d\u306e\u3082\u306e\u304b\u3099resolve\u3055\u308c\u305f\u6642\u70b9\u3066\u3099\u7d42\u4e86\nPromise.race([winnerPromise, loserPromise]).then(function (value) {\nconsole.log(value);    // => 'this is winner'\n});\n\n\n## What is \bpromise?\n\u975e\u540c\u671f\u51e6\u7406\u3092\u62bd\u8c61\u5316\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u305d\u308c\u3092\u64cd\u4f5c\u3059\u308b\u4ed5\u7d44\u307f\u306e\u3053\u3068\uff0e\n\u8907\u96d1\u306a\u975e\u540c\u671f\u51e6\u7406\u7b49\u3092\u3046\u307e\u304f\u30d1\u30bf\u30fc\u30f3\u5316\u3067\u304d\u308b\u3068\u3044\u3046\u306e\u304cPromise\u306e\u5f79\u5272\n\n```javascript:promise-workflow.js\nvar Promise = require('promise');\n\nfunction asyncFunction () {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      resolve('Async Hello World');\n    }, 10000);\n  });\n}\n\nasyncFunction().then(function (value) {\n  console.log(value);\n}).catch(function (error) {\n  console.log(error);\n});\n```\n\n###Memo\nJavascript\u306b\u304a\u3051\u308b\u975e\u540c\u671f\u51e6\u7406\u3068\u3044\u3048\u3070\uff0c\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u304c\u591a\u3044\uff0e\n\n## Sample\n```javascript:sample.js\nvar Promise = require('promise');\n\nfunction taskA() {\n  console.log(\"Task A\");\n  return 2;\n}\nfunction taskB(value) {\n  console.log(\"Task B\");\n  return value * 2;\n}\nfunction onRejected(error) {\n  console.log(\"Catch Error: A or B\", error);\n}\nfunction finalTask() {\n  console.log(\"Final Task\");\n}\nfunction output (value) {\n  console.log(value);\n}\nvar promise = Promise.resolve();\npromise\n  .then(taskA)\n  .then(taskB)\n  .then(output)\n  .catch(onRejected)\n  .then(finalTask, onRejected);\n```\n\n###Promise.all and Promise.race\nPromise.all: Promise \u306e and\n\u6e21\u3057\u305f\u5168\u3066\u306epromise\u304b\u3099FulFilled \u307e\u305f\u306f Rejected\u306b\u306a\u308b\u307e\u3066\u3099\u6b21\u306e\u51e6\u7406\u3092\u5f85\u3064\uff0e\n\nPromise.race: Promise \u306e or\n\u3068\u3099\u308c\u304b\u4e00\u3064\u3066\u3099\u3082promise\u304b\u3099FulFilled \u307e\u305f\u306f Rejected\u306b\u306a\u3063\u305f\u3089\u6b21\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\n\n```javascript:sample.js\nvar Promise = require('promise');\n\nvar winnerPromise = new Promise(function (resolve) {\n  setTimeout(function () {\n    console.log('this is winner');\n    resolve('this is winner');\n  }, 4);\n});\nvar loserPromise = new Promise(function (resolve) {\n  setTimeout(function () {\n    console.log('this is loser');\n    resolve('this is loser');\n  }, 1000); });\n// \u4e00\u756a\u6700\u521d\u306e\u3082\u306e\u304b\u3099resolve\u3055\u308c\u305f\u6642\u70b9\u3066\u3099\u7d42\u4e86\nPromise.race([winnerPromise, loserPromise]).then(function (value) {\nconsole.log(value);    // => 'this is winner'\n});\n```\n\n\n\n\n\n\n\n", "tags": ["JavaScript", "promise"]}