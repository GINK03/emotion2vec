{"context": " More than 1 year has passed since last update.\n\nGUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u304c\u4fdd\u6301\u3059\u308bmruby\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eGC\u5bfe\u7b56\nCode on Rmake\u306b\u3066mruby\u3092\u30b2\u30fc\u30e0\u3092\u8a18\u8ff0\u3059\u308b\u8a00\u8a9e\u3068\u3057\u3066\u7d44\u307f\u8fbc\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\u305d\u306e\u3068\u304d\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5834\u9762\u306b\u3088\u304f\u906d\u9047\u3057\u307e\u3057\u305f\u3002\n\u30de\u30a6\u30b9\u5165\u529b\u3092\u53d7\u3051\u53d6\u308bProc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8p\u3092C++\u5074\u306e\u5909\u6570\u306b\u4fdd\u5b58\u3059\u308b\u95a2\u6570\u3092\u547c\u3076\n\u2193\n\u307b\u304b\u306emruby\u306e\u51e6\u7406\u3092\u304a\u3053\u306a\u3046\u3002\n\uff08\u3053\u306e\u3068\u304dgc\u304c\u767a\u751f\u3057\u3066p\u306e\u30e1\u30e2\u30ea\u30fc\u304c\u89e3\u653e\u3055\u308c\u3066\u3057\u307e\u3046\uff09\n\u2193\n\u30de\u30a6\u30b9\u5165\u529b\u3092\u304a\u3053\u306a\u3046\n\u2193\np\u3092\u547c\u307c\u3046\u3068\u3059\u308b\u304c\u30e1\u30e2\u30ea\u30fc\u304c\u89e3\u653e\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u843d\u3061\u308b\n\n\u3053\u308c\u3060\u3068\u56f0\u308b\u306e\u3067\u3001p\u3092gc\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u306f\u3069\u3046\u3057\u305f\u3089\u3044\u3044\u304b\u306a\u3068\u8003\u3048\u307e\u3057\u305f\u3002\nCode on Rmake\u3067\u306fC++\u304b\u3089mruby\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u3092\u8d85\u3048\u3066\n\u751f\u5b58\u3059\u308b\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u308bobject(\u4e0a\u306e\u4f8b\u3060\u3068p)\u306f\u3001\u5b9a\u6570Hash\u3092\u7528\u610f\u3057\u3066\n\u305d\u3053\u306b\u5165\u308c\u308b\u3053\u3068\u3067gc\u306e\u5bfe\u8c61\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u3067\u30b3\u30fc\u30c9\u306e\u89e3\u8aac\u3092\u3057\u307e\u3059\u304c\u3001\nc\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u8a18\u4e8b\u306e\u6700\u5f8c\u306b\u914d\u7f6e\u3057\u307e\u3057\u305f\u3002\n#\n\nmy_print \"root begin\"\n\nH = {}\n\ndef init\n  my_print \"init begin\"\n  set_proc do\n    my_print \"call back proc\"\n  end\n  my_print \"init end\"\nend\n\ndef gc_trigger\n  my_print \"gc_trigger begin\"\n  GC.start\n  my_print \"gc_trigger end\"\nend\n\nmy_print \"root end\"\n\n\n\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nroot begin\nroot end\ninit begin\ninit end\ngc_trigger begin\ngc_trigger end\ncall back proc\n\n\u4eee\u306bc\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4ee5\u4e0b\u306e\u90e8\u5206\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3068\n    // if don't set proc to 'H', proc will delete by gc.\n    mrb_hash_set(mrb, h, mrb_symbol_value(mrb_intern(mrb, \"proc\")), proc);\n\n\"call back proc\"\u3068\u51fa\u529b\u3055\u308c\u308b\u3068\u3053\u308d\u307e\u3067\u306f\u5b9f\u884c\u3055\u308c\u305a\u3001\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u843d\u3061\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u5358\u306bmrb_value\u578b\u306e\u5909\u6570\u306b\u4ee3\u5165\u3057\u3066\u304a\u3044\u305f\u3060\u3051\u3067\u306f\u3001\n\u305d\u306e\u5909\u6570\u304c\u89e3\u653e\u3055\u308c\u306a\u304f\u3066\u3082\u3001\u305d\u308c\u304c\u53c2\u7167\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u89e3\u653e\u3055\u308c\u3046\u308a\u307e\u3059\u3002\n\u51e6\u7406\u306e\u5185\u5bb9\u3092\u3088\u308a\u8a73\u3057\u304f\u898b\u3066\u307f\u307e\u3059\u3002\n\u6700\u521d\u306bmruby\u306einit\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073proc\u5909\u6570\u306b\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u53c2\u7167\u3092\u4ee3\u5165\u3057\u307e\u3059\u3002\n    // call set_proc in init.\n    {\n        call_method(mrb, mrb_obj_value(mrb->top_self), mrb_intern(mrb, \"init\"));\n    }\n\ndef init\n  my_print \"init begin\"\n  set_proc do\n    my_print \"call back proc\"\n  end\n  my_print \"init end\"\nend\n\n// set callback function\nmrb_value set_proc(mrb_state *mrb, mrb_value self)\n{\n    mrb_get_args(mrb, \"&\", &proc);\n\n    mrb_value h = mrb_const_get(mrb, mrb_obj_value(mrb->object_class), mrb_intern(mrb, \"H\"));\n\n    // if don't set proc to 'H', proc will delete by gc.\n    mrb_hash_set(mrb, h, mrb_symbol_value(mrb_intern(mrb, \"proc\")), proc);\n\n    return self;\n}\n\n\u3053\u3053\u3067\u5b9a\u6570H\u306b\u3042\u308bHash\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306bproc\u3092\u52a0\u3048\u3066\u304a\u304b\u306a\u3044\u3068\u5f8c\u3067\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u843d\u3061\u307e\u3059\u3002\nProc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3060\u3051\u3067\u306a\u304fHash, Array, \u6587\u5b57\u5217, class\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306a\u3069\u53c2\u7167\u578b\u306e\u3082\u306e\u3067\n\u547c\u3073\u51fa\u3057\u305f\u95a2\u6570\u3088\u308a\u5916\u3067\u4f7f\u3046\u5834\u5408\u306f\u3001\u3059\u3079\u3066H\u306b\u52a0\u3048\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u6570\u5024\u3001\u30b7\u30f3\u30dc\u30eb\u306a\u3069\u5024\u578b\u306e\u5834\u5408\u306f\u52a0\u3048\u308b\u5fc5\u8981\u306f\u306a\u3044\u3067\u3059\u3002\nH\u306b\u5bfe\u3057\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u52a0\u3048\u308b\u51e6\u7406\u306f\nmruby\u3067\u8a18\u8ff0\u3057\u3066\u3082\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u6b21\u306bgc\u3092\u547c\u3076\u3088\u3046\u306a\u51e6\u7406\u3092\u304a\u3053\u306a\u3044\u307e\u3059\u3002\n    // do gc.\n    {\n        call_method(mrb, mrb_obj_value(mrb->top_self), mrb_intern(mrb, \"gc_trigger\"));\n    }\n\ndef gc_trigger\n  my_print \"gc_trigger begin\"\n  GC.start\n  my_print \"gc_trigger end\"\nend\n\n\u3053\u3053\u3067\u306f\u78ba\u5b9f\u306bgc\u304c\u8d77\u3053\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u304c\u3001\n\u4e00\u822c\u7684\u306a\u51e6\u7406\u3067\u306f\u5fc5\u305a\u3057\u3082gc\u306f\u8d77\u3053\u3089\u306a\u3044\u305f\u3081\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u843d\u3061\u305f\u308a\u843d\u3061\u306a\u304b\u3063\u305f\u308a\u3068\u3044\u3046\u3053\u3068\u3082\u3042\u308a\u3001\n\u4e00\u898b\u3059\u308b\u3068\u539f\u56e0\u304c\u308f\u304b\u308a\u306b\u304f\u3044\u3053\u3068\u3082\u3042\u308a\u307e\u3057\u305f\u3002\n\u3082\u3061\u308d\u3093gc\u304c\u767a\u751f\u3057\u305f\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u540c\u3058\u30a2\u30c9\u30ec\u30b9\u306b\u5225\u306e\u30e1\u30e2\u30ea\u30fc\u304c\u78ba\u4fdd\u3055\u308c\u3066\naccess violation\u306f\u8d77\u3053\u3089\u306a\u3044\u304c\u3001\n\u306a\u3093\u3060\u304b\u3093\u3060\u3067\u51e6\u7406\u304c\u304a\u304b\u3057\u304f\u306a\u308b\u3068\u3044\u3046\u3053\u3068\u3082\u3042\u308a\u307e\u3057\u305f\u3002\n\u6700\u521d\u306b\u52a0\u3048\u305fproc\u3092\u3053\u3053\u3067\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n// call proc.\n    {\n        call_method(mrb, proc, mrb_intern(mrb, \"call\"));\n    }\n\ngc\u3055\u308c\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3068\u591a\u304f\u306e\u5834\u5408\u3053\u3053\u3067access violation\u304c\u8d77\u3053\u308a\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u843d\u3061\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u4ee5\u4e0a\u3001GUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306a\u3069mruby\u3092\u6271\u3046\u5074\u3067\u3001mruby\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u6301\u3059\u308b\u969b\u306e\ngc\u4ed8\u8fd1\u306e\u5f15\u3063\u304b\u304b\u308a\u3084\u3059\u3044\u30dd\u30a4\u30f3\u30c8\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\nGUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306a\u304f\u3066\u3082mruby\u306e\u5916\u5074\u3067mruby\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6301\u3064\u5834\u5408\u306b\u306f\n\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u306b\u906d\u9047\u3057\u3046\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\uff08\u30b5\u30f3\u30d7\u30eb\u306fGUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u306a\u3044\u3067\u3059\u3057\u3002\uff09\n\u3054\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\u6700\u5f8c\u306b\u30b5\u30f3\u30d7\u30eb\u306e\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u7f6e\u304d\u307e\u3059\u3002\n#include \"mruby.h\"\n#include \"mruby/proc.h\"\n#include \"mruby/string.h\"\n#include \"mruby/variable.h\"\n#include \"mruby/value.h\"\n#include \"mruby/class.h\"\n#include \"mruby/hash.h\"\n#include \"mruby/compile.h\"\n#include <stdio.h>\n#include <stdlib.h>\n\nchar* read_text_file(const char* file_name)\n{\n    FILE* f = fopen(file_name, \"rt\");\n    if (!f)\n    {\n        return NULL;\n    }\n    char* buf;\n    int len;\n    fseek(f, 0, SEEK_END);\n    len = ftell(f);\n    fseek(f, 0, SEEK_SET);\n    buf = (char*)malloc(len + 1);\n    fread(buf, len, 1, f);\n    buf[len] = '\\0';\n    return buf;\n}\n\nvoid error_check(mrb_state* mrb)\n{\n    mrb_value obj;\n    if(mrb->exc)\n    {\n        obj = mrb_obj_value(mrb->exc);\n        obj = mrb_funcall(mrb, obj, \"inspect\", 0);\n        printf(\"error: %s\\n\", RSTRING_PTR(obj));\n    }\n}\n\nmrb_value proc;\n\n// set callback function\nmrb_value set_proc(mrb_state *mrb, mrb_value self)\n{\n    mrb_get_args(mrb, \"&\", &proc);\n\n    mrb_value h = mrb_const_get(mrb, mrb_obj_value(mrb->object_class), mrb_intern(mrb, \"H\"));\n\n    // if don't set proc to 'H', proc will delete by gc.\n    mrb_hash_set(mrb, h, mrb_symbol_value(mrb_intern(mrb, \"proc\")), proc);\n\n    return self;\n}\n\n// output for debug\nmrb_value my_print(mrb_state *mrb, mrb_value self)\n{\n    mrb_value s;\n    mrb_get_args(mrb, \"S\", &s);\n\n    printf(\"%s\\n\", mrb_string_value_ptr(mrb, s));\n\n    return self;\n}\n\n// call object's method.\nvoid call_method(mrb_state* mrb, mrb_value object, mrb_sym method){\n    int ai;\n    ai = mrb_gc_arena_save(mrb);\n    mrb_value args[] = {};\n    mrb_funcall_argv(mrb, object, method, 0, args);\n    error_check(mrb);\n    mrb_gc_arena_restore(mrb, ai);\n}\n\nint main()\n{\n    mrb_state* mrb;\n    mrb_parser_state* mrbst;\n\n    char* source = read_text_file(\"avoid_method_gc_sample.rb\");\n\n    mrb = mrb_open();\n    mrbst = mrb_parse_string(mrb, source, NULL);\n    free(source);\n\n    RProc* n;\n    n = mrb_generate_code(mrb, mrbst);\n    mrb_pool_close(mrbst->pool);\n\n    {\n    mrb_define_method(mrb, mrb->object_class, \"set_proc\", set_proc, ARGS_REQ(1));\n        mrb_define_method(mrb, mrb->object_class, \"my_print\", my_print, ARGS_REQ(1));\n    }\n\n    {\n        int ai;\n        mrb_value v;\n        ai = mrb_gc_arena_save(mrb);\n        v = mrb_run(mrb, n, mrb_nil_value());\n        error_check(mrb);\n        mrb_gc_arena_restore(mrb, ai);\n    }\n\n    // call set_proc in init.\n    {\n        call_method(mrb, mrb_obj_value(mrb->top_self), mrb_intern(mrb, \"init\"));\n    }\n\n    // do gc.\n    {\n        call_method(mrb, mrb_obj_value(mrb->top_self), mrb_intern(mrb, \"gc_trigger\"));\n    }\n\n    // call proc.\n    {\n        call_method(mrb, proc, mrb_intern(mrb, \"call\"));\n    }\n\n    mrb_close(mrb);\n\n    return 0;\n}\n\n\n# GUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u304c\u4fdd\u6301\u3059\u308bmruby\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eGC\u5bfe\u7b56\n\n[Code on Rmake](https://core.rmake.jp/ \"Code on Rmake\")\u306b\u3066mruby\u3092\u30b2\u30fc\u30e0\u3092\u8a18\u8ff0\u3059\u308b\u8a00\u8a9e\u3068\u3057\u3066\u7d44\u307f\u8fbc\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\u305d\u306e\u3068\u304d\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5834\u9762\u306b\u3088\u304f\u906d\u9047\u3057\u307e\u3057\u305f\u3002\n\n```\n\u30de\u30a6\u30b9\u5165\u529b\u3092\u53d7\u3051\u53d6\u308bProc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8p\u3092C++\u5074\u306e\u5909\u6570\u306b\u4fdd\u5b58\u3059\u308b\u95a2\u6570\u3092\u547c\u3076\n\u2193\n\u307b\u304b\u306emruby\u306e\u51e6\u7406\u3092\u304a\u3053\u306a\u3046\u3002\n\uff08\u3053\u306e\u3068\u304dgc\u304c\u767a\u751f\u3057\u3066p\u306e\u30e1\u30e2\u30ea\u30fc\u304c\u89e3\u653e\u3055\u308c\u3066\u3057\u307e\u3046\uff09\n\u2193\n\u30de\u30a6\u30b9\u5165\u529b\u3092\u304a\u3053\u306a\u3046\n\u2193\np\u3092\u547c\u307c\u3046\u3068\u3059\u308b\u304c\u30e1\u30e2\u30ea\u30fc\u304c\u89e3\u653e\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u843d\u3061\u308b\n```\n\n\u3053\u308c\u3060\u3068\u56f0\u308b\u306e\u3067\u3001p\u3092gc\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u306f\u3069\u3046\u3057\u305f\u3089\u3044\u3044\u304b\u306a\u3068\u8003\u3048\u307e\u3057\u305f\u3002\n[Code on Rmake](https://core.rmake.jp/ \"Code on Rmake\")\u3067\u306fC++\u304b\u3089mruby\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u3092\u8d85\u3048\u3066\n\u751f\u5b58\u3059\u308b\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u308bobject(\u4e0a\u306e\u4f8b\u3060\u3068p)\u306f\u3001\u5b9a\u6570Hash\u3092\u7528\u610f\u3057\u3066\n\u305d\u3053\u306b\u5165\u308c\u308b\u3053\u3068\u3067gc\u306e\u5bfe\u8c61\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u3067\u30b3\u30fc\u30c9\u306e\u89e3\u8aac\u3092\u3057\u307e\u3059\u304c\u3001\nc\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u8a18\u4e8b\u306e\u6700\u5f8c\u306b\u914d\u7f6e\u3057\u307e\u3057\u305f\u3002\n\n```ruby\n#\n\nmy_print \"root begin\"\n\nH = {}\n\ndef init\n  my_print \"init begin\"\n  set_proc do\n    my_print \"call back proc\"\n  end\n  my_print \"init end\"\nend\n\ndef gc_trigger\n  my_print \"gc_trigger begin\"\n  GC.start\n  my_print \"gc_trigger end\"\nend\n\nmy_print \"root end\"\n\n```\n\n\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\nroot begin\nroot end\ninit begin\ninit end\ngc_trigger begin\ngc_trigger end\ncall back proc\n```\n\n\u4eee\u306bc\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4ee5\u4e0b\u306e\u90e8\u5206\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3068\n\n```cpp\n    // if don't set proc to 'H', proc will delete by gc.\n    mrb_hash_set(mrb, h, mrb_symbol_value(mrb_intern(mrb, \"proc\")), proc);\n```\n\"call back proc\"\u3068\u51fa\u529b\u3055\u308c\u308b\u3068\u3053\u308d\u307e\u3067\u306f\u5b9f\u884c\u3055\u308c\u305a\u3001\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u843d\u3061\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u5358\u306bmrb_value\u578b\u306e\u5909\u6570\u306b\u4ee3\u5165\u3057\u3066\u304a\u3044\u305f\u3060\u3051\u3067\u306f\u3001\n\u305d\u306e\u5909\u6570\u304c\u89e3\u653e\u3055\u308c\u306a\u304f\u3066\u3082\u3001\u305d\u308c\u304c\u53c2\u7167\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u89e3\u653e\u3055\u308c\u3046\u308a\u307e\u3059\u3002\n\n\u51e6\u7406\u306e\u5185\u5bb9\u3092\u3088\u308a\u8a73\u3057\u304f\u898b\u3066\u307f\u307e\u3059\u3002\n\n\u6700\u521d\u306bmruby\u306einit\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073proc\u5909\u6570\u306b\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u53c2\u7167\u3092\u4ee3\u5165\u3057\u307e\u3059\u3002\n\n```cpp \n    // call set_proc in init.\n    {\n        call_method(mrb, mrb_obj_value(mrb->top_self), mrb_intern(mrb, \"init\"));\n    }\n```\n\n```ruby\ndef init\n  my_print \"init begin\"\n  set_proc do\n    my_print \"call back proc\"\n  end\n  my_print \"init end\"\nend\n```\n\n```cpp\n// set callback function\nmrb_value set_proc(mrb_state *mrb, mrb_value self)\n{\n    mrb_get_args(mrb, \"&\", &proc);\n    \n    mrb_value h = mrb_const_get(mrb, mrb_obj_value(mrb->object_class), mrb_intern(mrb, \"H\"));\n    \n    // if don't set proc to 'H', proc will delete by gc.\n    mrb_hash_set(mrb, h, mrb_symbol_value(mrb_intern(mrb, \"proc\")), proc);\n    \n    return self;\n}\n```\n\u3053\u3053\u3067\u5b9a\u6570H\u306b\u3042\u308bHash\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306bproc\u3092\u52a0\u3048\u3066\u304a\u304b\u306a\u3044\u3068\u5f8c\u3067\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u843d\u3061\u307e\u3059\u3002\nProc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3060\u3051\u3067\u306a\u304fHash, Array, \u6587\u5b57\u5217, class\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306a\u3069\u53c2\u7167\u578b\u306e\u3082\u306e\u3067\n\u547c\u3073\u51fa\u3057\u305f\u95a2\u6570\u3088\u308a\u5916\u3067\u4f7f\u3046\u5834\u5408\u306f\u3001\u3059\u3079\u3066H\u306b\u52a0\u3048\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u6570\u5024\u3001\u30b7\u30f3\u30dc\u30eb\u306a\u3069\u5024\u578b\u306e\u5834\u5408\u306f\u52a0\u3048\u308b\u5fc5\u8981\u306f\u306a\u3044\u3067\u3059\u3002\nH\u306b\u5bfe\u3057\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u52a0\u3048\u308b\u51e6\u7406\u306f\nmruby\u3067\u8a18\u8ff0\u3057\u3066\u3082\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u6b21\u306bgc\u3092\u547c\u3076\u3088\u3046\u306a\u51e6\u7406\u3092\u304a\u3053\u306a\u3044\u307e\u3059\u3002\n\n```cpp\n    // do gc.\n    {\n        call_method(mrb, mrb_obj_value(mrb->top_self), mrb_intern(mrb, \"gc_trigger\"));\n    }\n```\n\n```ruby\ndef gc_trigger\n  my_print \"gc_trigger begin\"\n  GC.start\n  my_print \"gc_trigger end\"\nend\n```\n\n\u3053\u3053\u3067\u306f\u78ba\u5b9f\u306bgc\u304c\u8d77\u3053\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u304c\u3001\n\u4e00\u822c\u7684\u306a\u51e6\u7406\u3067\u306f\u5fc5\u305a\u3057\u3082gc\u306f\u8d77\u3053\u3089\u306a\u3044\u305f\u3081\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u843d\u3061\u305f\u308a\u843d\u3061\u306a\u304b\u3063\u305f\u308a\u3068\u3044\u3046\u3053\u3068\u3082\u3042\u308a\u3001\n\u4e00\u898b\u3059\u308b\u3068\u539f\u56e0\u304c\u308f\u304b\u308a\u306b\u304f\u3044\u3053\u3068\u3082\u3042\u308a\u307e\u3057\u305f\u3002\n\u3082\u3061\u308d\u3093gc\u304c\u767a\u751f\u3057\u305f\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u540c\u3058\u30a2\u30c9\u30ec\u30b9\u306b\u5225\u306e\u30e1\u30e2\u30ea\u30fc\u304c\u78ba\u4fdd\u3055\u308c\u3066\naccess violation\u306f\u8d77\u3053\u3089\u306a\u3044\u304c\u3001\n\u306a\u3093\u3060\u304b\u3093\u3060\u3067\u51e6\u7406\u304c\u304a\u304b\u3057\u304f\u306a\u308b\u3068\u3044\u3046\u3053\u3068\u3082\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u6700\u521d\u306b\u52a0\u3048\u305fproc\u3092\u3053\u3053\u3067\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n```cpp\n// call proc.\n    {\n        call_method(mrb, proc, mrb_intern(mrb, \"call\"));\n    }\n```\ngc\u3055\u308c\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3068\u591a\u304f\u306e\u5834\u5408\u3053\u3053\u3067access violation\u304c\u8d77\u3053\u308a\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u843d\u3061\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u3001GUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306a\u3069mruby\u3092\u6271\u3046\u5074\u3067\u3001mruby\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u6301\u3059\u308b\u969b\u306e\ngc\u4ed8\u8fd1\u306e\u5f15\u3063\u304b\u304b\u308a\u3084\u3059\u3044\u30dd\u30a4\u30f3\u30c8\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\nGUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306a\u304f\u3066\u3082mruby\u306e\u5916\u5074\u3067mruby\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6301\u3064\u5834\u5408\u306b\u306f\n\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u306b\u906d\u9047\u3057\u3046\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\uff08\u30b5\u30f3\u30d7\u30eb\u306fGUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u306a\u3044\u3067\u3059\u3057\u3002\uff09\n\u3054\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\u6700\u5f8c\u306b\u30b5\u30f3\u30d7\u30eb\u306e\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u7f6e\u304d\u307e\u3059\u3002\n\n```cpp\n#include \"mruby.h\"\n#include \"mruby/proc.h\"\n#include \"mruby/string.h\"\n#include \"mruby/variable.h\"\n#include \"mruby/value.h\"\n#include \"mruby/class.h\"\n#include \"mruby/hash.h\"\n#include \"mruby/compile.h\"\n#include <stdio.h>\n#include <stdlib.h>\n\nchar* read_text_file(const char* file_name)\n{\n    FILE* f = fopen(file_name, \"rt\");\n    if (!f)\n    {\n        return NULL;\n    }\n    char* buf;\n    int len;\n    fseek(f, 0, SEEK_END);\n    len = ftell(f);\n    fseek(f, 0, SEEK_SET);\n    buf = (char*)malloc(len + 1);\n    fread(buf, len, 1, f);\n    buf[len] = '\\0';\n    return buf;\n}\n\nvoid error_check(mrb_state* mrb)\n{\n    mrb_value obj;\n    if(mrb->exc)\n    {\n        obj = mrb_obj_value(mrb->exc);\n        obj = mrb_funcall(mrb, obj, \"inspect\", 0);\n        printf(\"error: %s\\n\", RSTRING_PTR(obj));\n    }\n}\n\nmrb_value proc;\n\n// set callback function\nmrb_value set_proc(mrb_state *mrb, mrb_value self)\n{\n    mrb_get_args(mrb, \"&\", &proc);\n    \n    mrb_value h = mrb_const_get(mrb, mrb_obj_value(mrb->object_class), mrb_intern(mrb, \"H\"));\n    \n    // if don't set proc to 'H', proc will delete by gc.\n    mrb_hash_set(mrb, h, mrb_symbol_value(mrb_intern(mrb, \"proc\")), proc);\n    \n    return self;\n}\n\n// output for debug\nmrb_value my_print(mrb_state *mrb, mrb_value self)\n{\n    mrb_value s;\n    mrb_get_args(mrb, \"S\", &s);\n    \n    printf(\"%s\\n\", mrb_string_value_ptr(mrb, s));\n    \n    return self;\n}\n\n// call object's method.\nvoid call_method(mrb_state* mrb, mrb_value object, mrb_sym method){\n    int ai;\n    ai = mrb_gc_arena_save(mrb);\n    mrb_value args[] = {};\n    mrb_funcall_argv(mrb, object, method, 0, args);\n    error_check(mrb);\n    mrb_gc_arena_restore(mrb, ai);\n}\n\nint main()\n{\n    mrb_state* mrb;\n    mrb_parser_state* mrbst;\n    \n    char* source = read_text_file(\"avoid_method_gc_sample.rb\");\n    \n    mrb = mrb_open();\n    mrbst = mrb_parse_string(mrb, source, NULL);\n    free(source);\n\n    RProc* n;\n    n = mrb_generate_code(mrb, mrbst);\n    mrb_pool_close(mrbst->pool);\n    \n    {\n\tmrb_define_method(mrb, mrb->object_class, \"set_proc\", set_proc, ARGS_REQ(1));\n        mrb_define_method(mrb, mrb->object_class, \"my_print\", my_print, ARGS_REQ(1));\n    }\n\n    {\n        int ai;\n        mrb_value v;\n        ai = mrb_gc_arena_save(mrb);\n        v = mrb_run(mrb, n, mrb_nil_value());\n        error_check(mrb);\n        mrb_gc_arena_restore(mrb, ai);\n    }\n    \n    // call set_proc in init.\n    {\n        call_method(mrb, mrb_obj_value(mrb->top_self), mrb_intern(mrb, \"init\"));\n    }\n    \n    // do gc.\n    {\n        call_method(mrb, mrb_obj_value(mrb->top_self), mrb_intern(mrb, \"gc_trigger\"));\n    }\n    \n    // call proc.\n    {\n        call_method(mrb, proc, mrb_intern(mrb, \"call\"));\n    }\n\n    mrb_close(mrb);\n\n    return 0;\n}\n```\n", "tags": ["Ruby", "C", "mruby"]}