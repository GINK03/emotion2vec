{"context": "\n\n\u6982\u8981\nWindows\u30de\u30b7\u30f3\u4e0a\u306bDocker Toolbox\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u500b\u4eba\u7528\u306e\u30a2\u30d7\u30ea\u958b\u767a\u74b0\u5883\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002Windows\u30de\u30b7\u30f3\u305d\u306e\u3082\u306e\u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30c4\u30fc\u30eb\u306f\u6700\u5c0f\u9650\u306b\u3057\u3066\u3001Docker Toolbox\u306b\u542b\u307e\u308c\u308b\u4eee\u60f3\u30de\u30b7\u30f3\u4e0a\u306bDocker\u3092\u4f7f\u3063\u3066SonarQube\u306a\u3069\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u307f\u307e\u3059\u3002\n2016.3.29 \u65b0\u3057\u3044\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9(DockerToolbox-1.10.3.exe)\u3067\u3084\u308a\u76f4\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u524d\u63d0\u3068\u3057\u3066\u3044\u308b\u74b0\u5883\n\nWindows 10 (7\u4ee5\u4e0a\u3060\u3063\u305f\u3089\u3044\u3051\u308b\u306f\u305a)\nIntel VT\u5bfe\u5fdc (\u305d\u308c\u76f8\u5f53\u306e\u4eee\u60f3\u5316\u30c6\u30af\u30ce\u30ed\u30b8\u304c\u4f7f\u3048\u308c\u3070\u3088\u3044\u3002\u6700\u8fd1\u306ePC\u306f\u307b\u3068\u3093\u3069\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306f\u305a\u3002 )\n\n\n\u76ee\u6307\u3059\u3053\u3068\nJava\u3067\u306eWeb\u30a2\u30d7\u30ea\u958b\u767a\u3067\u4f7f\u3046\u3060\u308d\u3046\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002\u69cb\u7bc9\u3059\u308b\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3001\u30c4\u30fc\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\n\u5c0e\u5165\u3059\u308bDocker\u30b3\u30f3\u30c6\u30ca\n\nJenkins\nMySQL\nSonarQube\nSelenium\nGlassfish\n\n\nyml\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u306e\u7f6e\u304d\u5834\u6240\nhttps://github.com/osuo/DevelopEnvironment\n\nDocker\u74b0\u5883\u306e\u6e96\u5099\n\nDocker Toolbox\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nDocker\u306e\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30b5\u30a4\u30c8\u306eDocker Toolbox\u304b\u3089Docker Toolbox\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u5165\u624b\u3057\u307e\u3059\u3002\u3053\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u306b\u306fVirtualBox\u3084Git for Windows\u304c\u540c\u68b1\u3055\u308c\u3066\u307e\u3059\u3002\n\u6b21\u306b\u3001Docker Toolbox\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u8d77\u52d5\u3057\u3066Docker\u95a2\u9023\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n\u91cd\u8981!\n\u4e00\u756a\u4e0b\u306e\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u300cInstall VirtualBox with NDIS5 driver[default NDIS6]\u300d\u306b\u30c1\u30a7\u30c3\u30af\u5165\u308c\u308b\u306e\u3092\u5fd8\u308c\u305a\u306b\uff01\n\n\u7406\u7531\u306a\u3069\u3053\u3061\u3089\u304c\u53c2\u8003\u306b\u306a\u308b\u304b\u3068\u3002\nFailed to open/create the internal network Vagrant on Windows10\n\nDocker\u7528\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u69cb\u7bc9\nDocker Quickstart Terminal\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u521d\u56de\u306e\u307fVirtualBox\u4e0a\u306bDocker\u7528\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u4f5c\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001\u4eee\u60f3\u30de\u30b7\u30f3\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u3057\u3070\u3089\u304f\u3059\u308b\u3068...Docker\u30a8\u30f3\u30b8\u30f3\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308bDocker\u30db\u30b9\u30c8\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u306b\u63a5\u7d9a\u3059\u308b\u3002\n\nVirtualBox\u306b\u306fdefault\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u3067\u304d\u3066\u308b\u3002\n\n\nWindows\u30de\u30b7\u30f3\u304b\u3089Dcoker\u306e\u52d5\u4f5c\u78ba\u8a8d\nDocker\u306e\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30b5\u30a4\u30c8\u306e\u4f8b\u3092\u8a66\u3059\u3002\n$ docker run hello-world\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308c\u3070OK\u3002\n\ndocker-machine\u3067\u3082\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n$ docker-machine ls\nNAME      ACTIVE   DRIVER       STATE     URL                         SWARM   ERRORS\ndefault   *        virtualbox   Running   tcp://192.168.99.101:2376\n\ndefault\u3068\u3044\u3046\u540d\u524d\u306eDocker\u30db\u30b9\u30c8\u304c\u8d77\u52d5\u72b6\u614b\u306b\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\ndocker-machine stop default\u3067default\u3092\u6b62\u3081\u305f\u308a\u3001docker-machine start default\u3067\u958b\u59cb\u3057\u305f\u308a\u3067\u304d\u308b\u3002\n\nDocker\u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\u3068\u5229\u7528\nDocker\u30b3\u30f3\u30c6\u30ca\u306e\u5236\u5fa1\u306bdocker-compoise\u3092\u4f7f\u3046\u3002\u7d20\u306edocker\u3060\u3068\u8d77\u52d5\u6642\u306b\u6307\u5b9a\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6bce\u56de\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3059\u304c\u3001docker-compose\u3060\u3068yml\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3067\u304d\u3059\u3063\u304d\u308a\u3059\u308b\u304b\u3089\u3001\u3067\u3059\u3002\n\u9069\u5f53\u306a\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u308a\u3001\u305d\u306e\u4e2d\u306bdocker-compose.yml\u306a\u3069\u3092\u7f6e\u3044\u3066\u8a66\u3057\u307e\u3059\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001work\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u3063\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n$ mkdir work\n$ cd work\n\n\nJenkins\u3092\u52d5\u304b\u3059\ndocker-compose.yml\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\njenkins:\n  image: jenkins\n  ports:\n    - \"8080:8080\"\n\ndocker-compose.yml\u3092\u4f5c\u6210\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067docker-compose\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u521d\u56de\u306fjenkins\u306eDocker\u30a4\u30e1\u30fc\u30b8\u3092DockerHub\u304b\u3089\u5165\u624b\u3057\u3066\u304b\u3089\u8d77\u52d5\u3057\u307e\u3059\u3002\n$ docker-compose up -d\n...\nStatus: Downloaded newer image for jenkins:latest\nCreating work_jenkins_1\n\nDocker\u30b3\u30f3\u30c6\u30ca\u306e\u72b6\u614b\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n$ docker-compose ls\n     Name                   Command               State                 Ports \n-------------------------------------------------------------------------------------------\nwork_jenkins_1   /bin/tini -- /usr/local/bi ...   Up      50000/tcp, 0.0.0.0:8080->8080/tcp\n\nPorts\u6b04\u306e0.0.0.0:8080->8080/tcp\u3068\u3044\u3046\u306e\u306f\u3001Docker\u30db\u30b9\u30c8\u306e8080\u30dd\u30fc\u30c8\u3092Docker\u30b3\u30f3\u30c6\u30ca\u306e8080\u30dd\u30fc\u30c8\u306b\u30dd\u30fc\u30c8\u30d5\u30a9\u30ef\u30fc\u30c9\u3057\u307e\u3059\u3088\u3001\u3063\u3066\u3053\u3068\u3067\u3059\u3002\n\u306a\u306e\u3067\u30d6\u30e9\u30a6\u30b6\u3067Docker\u30db\u30b9\u30c8\u306e8080\u30dd\u30fc\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308c\u3070jenkins\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u304c\u958b\u304d\u307e\u3059\u3002Docker\u30db\u30b9\u30c8\u306eIP\u30a2\u30c9\u30ec\u30b9\u306fdocker-machine\u3067\u308f\u304b\u308a\u307e\u3059\u3002\n$ docker-machine ls\nNAME      ACTIVE   DRIVER       STATE     URL                         SWARM   ERRORS\ndefault   *        virtualbox   Running   tcp://192.168.99.101:2376\n\n\u3053\u3093\u306a\u753b\u9762\u304c\u3067\u308b\u306f\u305a\u3002\n\n\nJenkins\u3092\u52d5\u304b\u3059(Data Volumes \u30b3\u30f3\u30c6\u30ca\u3068\u3068\u3082\u306b)\njenkins\u306e\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u306fDocker\u30b3\u30f3\u30c6\u30ca\u5185\u306e/var/jenkins_home\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\uff08\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u3001\u5404\u7a2e\u8a2d\u5b9a\u3084Plugin\u306a\u3069\uff09\u3002\u3053\u308c\u3092Data Volumes\u30b3\u30f3\u30c6\u30ca\u3068\u3057\u3066\u72ec\u7acb\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Jenkins\u672c\u4f53\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3068\u305d\u306e\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u5206\u3051\u308b\u3053\u3068\u3067\u3001Jenkins\u672c\u4f53\u3092\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3059\u308b\u3053\u3068\u304c\u697d\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3088\u308a\u5b9f\u8df5\u7684\u306a\u4f7f\u3044\u65b9\u3067\u3059\u3002\n\n1. Jenkins\u306eDocker\u30b3\u30f3\u30c6\u30ca\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3059\u308b\n\u5ff5\u306e\u305f\u3081\u3002\u4e2d\u8eab\u304c\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u8abf\u3079\u3066\u304a\u304d\u307e\u3059\u3002docker exec\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002Jenkins\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3057\u3066\u3082\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u304c\u5f71\u97ff\u3092\u53d7\u3051\u306a\u3044\u304b\uff08\u6b8b\u3063\u3066\u3044\u308b\u304b\uff09\u306e\u78ba\u8a8d\u306e\u305f\u3081\u3067\u3059\u3002\ndocker inspect\u3067\u78ba\u8a8d\u3002\n$ docker inspect -f \"{{ .HostConfig.VolumesFrom }} \" work_jenkins_1\n[]\n\nDataVolume\u30b3\u30f3\u30c6\u30ca\u30fc\u306e\u6709\u308a\u7121\u3057\u3092df\u3067\u78ba\u8a8d\u3067\u304d\u308b\u304b\u3068\u601d\u3063\u305f\u3051\u3069\u3067\u304d\u305a\u3002\u306a\u3093\u3067\u3060\u308d\u3046\uff1f\u307e\u305f\u8abf\u3079\u3088\u3046\u3002\uff08/proc/mounts \u3067\u3082\u9055\u3044\u304c\u308f\u304b\u3089\u305a\u3002\uff09\n$ docker exec -it work_jenkins_1 df -h\nFilesystem      Size  Used Avail Use% Mounted on\nnone             19G 1007M   17G   6% /\ntmpfs           499M     0  499M   0% /dev\ntmpfs           499M     0  499M   0% /sys/fs/cgroup\n/dev/sda1        19G 1007M   17G   6% /etc/hosts\nshm              64M     0   64M   0% /dev/shm\n\n\n2. \u5148\u307b\u3069\u4f5c\u6210\u3057\u305fJenkins\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3059\u308b\ndocker-compose stop jenkins\u3067Jenkins\u3092\u505c\u6b62\u3057\u3066\u3001docker-compose rm jenkins\u3067Jenkins\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3057\u307e\u3059\u3002\u5f8c\u306f\u3001Docker\u30b3\u30f3\u30c6\u30ca\u306e\u72b6\u614b\u3092docker-compose ps\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ docker-compose stop jenkins\nStopping work_jenkins_1 ...\n[1Bping work_jenkins_1 ... done\n\n$ docker-compose ps\n     Name                   Command                State     Ports\n------------------------------------------------------------------\nwork_jenkins_1   /bin/tini -- /usr/local/bi ...   Exit 143\n\n$ docker-compose rm jenkins\nGoing to remove work_jenkins_1\nAre you sure? [yN] y\nRemoving work_jenkins_1 ...\n[1Bving work_jenkins_1 ... done\n\n$ docker-compose ps\nName   Command   State   Ports\n------------------------------\n\nJenkins\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3067\u304d\u307e\u3057\u305f\u3002\n\n3. docker-compose.yml\u3092\u4fee\u6b63\u3057\u3066\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u683c\u7d0d\u7528\u306eDataVolumes\u30b3\u30f3\u30c6\u30ca\u3092\u8ffd\u8a18\u3059\u308b\ndocker-compose.yml\u3092\u6b21\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3059\u3002\n# jenkins container\njenkins:\n  image: jenkins\n  ports:\n    - \"8080:8080\"\n  volumes_from:\n    - jenkins_data\n\n# jenkins data volume container\njenkins_data:\n  image: jenkins\n  command: echo \"jenkins data volume container.\"\n\n\n4. \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\ndocker-compose up -d\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002\n$ docker-compose up -d\n...\nStatus: Downloaded newer image for busybox:latest\nCreating work_jenkins_data_1\nCreating work_jenkins_1\n\n$ docker-compose ps\n       Name                      Command               State\nPorts\n-------------------------------------------------------------------------------------------------\nwork_jenkins_1        /bin/tini -- /usr/local/bi ...   Up       50000/tcp, 0.0.0.0:8080->8080/tcp\nwork_jenkins_data_1   /bin/tini -- /usr/local/bi ...   Exit 0\n\n\n5. \u78ba\u8a8d\u3059\u308b\n$ docker inspect -f \"{{ .HostConfig.VolumesFrom }} \" work_jenkins_1\n[6f65fc53675392163fc090be8ceeaa0e7ced5f757a17ec59cf92258fc1d66a3f:rw]\n\n\u304a\uff01\u3053\u306e6f65fc536753...\u3068\u3044\u3046\u306e\u304cDataVolume\u30b3\u30f3\u30c6\u30ca\u3067\u3042\u308bwork_jenkins_data_1 \u306e\u3053\u3068\u3067\u3059\u3002docker ps -a\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS                               NAMES\n452d31f1400d        jenkins             \"/bin/tini -- /usr/lo\"   7 minutes ago       Up 7 minutes               0.0.0.0:8080->8080/tcp, 50000/tcp   work_jenkins_1\n6f65fc536753        jenkins             \"/bin/tini -- /usr/lo\"   About an hour ago   Exited (0) 7 minutes ago                                       work_jenkins_data_1\n\n\u6b21\u306b\u3001Jenkins\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3057\u3066\u3082\u3001DataVolume\u30b3\u30f3\u30c6\u30ca\u306b\u3042\u308b\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u304c\u6b8b\u3063\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\u624b\u9806\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\nJenkins\u306ePlugin\u3092\u66f4\u65b0\u3059\u308b\nJenkins\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u308a\u76f4\u3059\nPlugin\u304c\u66f4\u65b0\u6e08\u307f\u3067\u3042\u308b\u304b\u3092\u78ba\u8a8d\u3059\u308b\n\n\n1. Jenkins\u306ePlugin\u3092\u66f4\u65b0\u3059\u308b\n\u66f4\u65b0\u524d\uff1a\n(\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3042\u308a)\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u66f4\u65b0\uff1a\n\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n\n\n2. Jenkins\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u308a\u76f4\u3059\n\u6b62\u3081\u3066\u3001\n$ docker-compose stop jenkins\nStopping work_jenkins_1 ...\n[1Bping work_jenkins_1 ... done\n\n\u524a\u9664\u3057\u3066\u3001\n$ docker-compose rm jenkins\nGoing to remove work_jenkins_1\nAre you sure? [yN] y\nRemoving work_jenkins_1 ...\n[1Bving work_jenkins_1 ... done\n\n\u78ba\u8a8d\u3057\u307e\u3059\u3002DataVolume\u30b3\u30f3\u30c6\u30ca\u306e\u307f\u6b8b\u3063\u3066\u307e\u3059\u3002\n$ docker-compose ps\n       Name                      Command               State    Ports\n---------------------------------------------------------------------\nwork_jenkins_data_1   /bin/tini -- /usr/local/bi ...   Exit 0\n\n\u8d77\u52d5\u3059\u308b\u3002\n$ docker-compose up -d\nStarting work_jenkins_data_1\nCreating work_jenkins_1\n\n\n3. Plugin\u304c\u66f4\u65b0\u6e08\u307f\u3067\u3042\u308b\u304b\u3092\u78ba\u8a8d\u3059\u308b\n\u5148\u307b\u3069\u306ePlugin\u753b\u9762\u3092\u898b\u3066\u307f\u308b\u3002(\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3042\u308a)\u304c\u306a\u3044\u3002\n\n\u610f\u56f3\u901a\u308a\u306b\u52d5\u4f5c\u3057\u307e\u3057\u305f\u3002DataVolume\u30b3\u30f3\u30c6\u30ca\u3092\u901a\u5e38\u306e\u30b3\u30f3\u30c6\u30ca\u3068\u5225\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u306a\u3069\u306e\u4fdd\u6301\u304c\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\nMySQL\u3092\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u3057\u3066SonarQube\u3092\u52d5\u304b\u3059\ndocker-compose.yml\u306b\u6b21\u306e\u5185\u5bb9\u3092\u8ffd\u8a18\u3059\u308b\u3002\n# mysql container\nmysql:\n  image: mysql\n  environment:\n    - MYSQL_ROOT_PASSWORD=hogehoge\n  ports:\n    - \"3306:3306\"\n  volumes_from:\n    - mysql_data\n\n# mysql container\nmysql_data:\n  image: mysql\n  command: echo \"sonarqube data volume container.\"\n\n# sonarqube container\nsonarqube:\n  image: sonarqube\n  environment:\n    - SONARQUBE_JDBC_USERNAME=sonar\n    - SONARQUBE_JDBC_PASSWORD=sonar\n    - SONARQUBE_JDBC_URL=jdbc:mysql://mysql/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true\n  links:\n    - mysql:mysql\n  ports:\n    - \"9000:9000\"\n  volumes_from:\n    - sonarqube_data\n\n# sonarqube data volume container\nsonarqube_data:\n  image: sonarqube\n  command: echo \"sonarqube data volume container.\"\n\nsonarqube\u7528\u306eDatabase\u4f5c\u6210\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u610f\u3059\u308b\u3002\n\u307e\u305a\u3001create_sonar_db.sql\u3002\n\ncreate_sonar_db.sql\nCREATE DATABASE sonar CHARACTER SET utf8;\n\nCREATE USER 'sonar' IDENTIFIED BY 'sonar';\nGRANT ALL ON sonar.* TO 'sonar'@'%' IDENTIFIED BY 'sonar';\nGRANT ALL ON sonar.* TO 'sonar'@'localhost' IDENTIFIED BY 'sonar';\nFLUSH PRIVILEGES;\n\n\n\u6b21\u306b\u3001create_sonar_db.sh\u3002\n\ncreate_sonar_db.sh\n#!/bin/bash\n\n#\nDIRNAME=${0%/*}\nMYSQL_CONTAINER=work_mysql_1\nMYSQL_PASSWORD=hogehoge\n\n# docker\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3059\u308b\ndocker run -i --link $MYSQL_CONTAINER:mysql --rm mysql mysql -h mysql -uroot -p$MYSQL_PASSWORD < ./$DIRNAME/create_sonar_db.sql\n\n\n\u8d77\u52d5\u306f\u6b21\u306e\u3088\u3046\u306b\u3084\u308a\u307e\u3059\u3002\n1. mysql\u306e\u307f\u3092\u8d77\u52d5\u3057\u3066sonarqube\u7528\u306eDatabase\u3092\u4f5c\u6210\u3059\u308b\n2. sonarqube\u3092\u8d77\u52d5\u3059\u308b\n\n1. mysql\u306e\u307f\u3092\u8d77\u52d5\u3059\u308b\n$ docker-compose up -d mysql\nStarting work_mysql_data_1\nCreating work_mysql_1\n\n$ docker-compose ps\n        Name                       Command               State                  Ports\n---------------------------------------------------------------------------------------------------\nwork_jenkins_1          /bin/tini -- /usr/local/bi ...   Up       50000/tcp, 0.0.0.0:8080->8080/tcp\nwork_jenkins_data_1     /bin/tini -- /usr/local/bi ...   Exit 0                 \nwork_mysql_1            /entrypoint.sh mysqld            Up       0.0.0.0:3306->3306/tcp\nwork_mysql_data_1       /entrypoint.sh echo sonarq ...   Exit 0\n\n\n2. sonarqube\u7528\u306eDatabase\u3092\u4f5c\u6210\u3059\u308b\n$ bash ./create_sonar_db.sh\nmysql: [Warning] Using a password on the command line interface can be insecure.\n\n\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ docker run --rm -it --link work_mysql_1:mysql mysql mysql -h mysql -uroot -\nphogehoge\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 3\nServer version: 5.7.9 MySQL Community Server (GPL)\n\nCopyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> show tables;\nERROR 1046 (3D000): No database selected\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| sonar              |\n| sys                |\n+--------------------+\n5 rows in set (0.00 sec)\n\n\n3. sonarqube\u3092\u8d77\u52d5\u3059\u308b\n$ docker-compose up -d sonarqube\nStarting work_sonarqube_data_1\nStarting work_mysql_data_1\nwork_mysql_1 is up-to-date\nCreating work_sonarqube_1\n\n$ docker-compose ps\n        Name                       Command               State                  Ports\n---------------------------------------------------------------------------------------------------\nwork_jenkins_1          /bin/tini -- /usr/local/bi ...   Up       50000/tcp, 0.0.0.0:8080->8080/tcp\nwork_jenkins_data_1     /bin/tini -- /usr/local/bi ...   Exit 0                 \nwork_mysql_1            /entrypoint.sh mysqld            Up       0.0.0.0:3306->3306/tcp\nwork_mysql_data_1       /entrypoint.sh echo sonarq ...   Exit 0                 \nwork_sonarqube_1        ./bin/run.sh                     Up       0.0.0.0:9000->9000/tcp\nwork_sonarqube_data_1   ./bin/run.sh echo sonarqub ...   Exit 0\n\n\u30d6\u30e9\u30a6\u30b6\u3067Docker\u30db\u30b9\u30c8\u306e9000\u756a\u30dd\u30fc\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u7ba1\u7406\u8005\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3001\u30e1\u30cb\u30e5\u30fc\u3088\u308aAdministration\u2192System\u2192System Info\u3092\u53c2\u7167\u3059\u308b\u3068\u3001Database\u304cMySQL\u3068\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\u306a\u304a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7ba1\u7406\u8005\u30a2\u30ab\u30a6\u30f3\u30c8/\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u3001admin/admin\u3067\u3059\u3002\n\n\n\n\nSelenium\u3092\u52d5\u304b\u3059\ndocker-compose.yml\u306b\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n# sonarqube data volume container\nsonarqube_data:\n  image: sonarqube\n  command: echo \"sonarqube data volume container.\"\n\n# selenium hub container\nselenium-hub:\n  image: selenium/hub\n  ports:\n    - \"4444:4444\"\n\n# selenium node chrome container\nchrome:\n  image: selenium/node-chrome-debug\n  ports:\n    - \"5900:5900\"\n  links:\n    - selenium-hub:hub\n\n# selenium node firefox container\nfirefox:\n  image: selenium/node-firefox-debug\n  ports:\n    - \"5901:5900\"\n  links:\n    - selenium-hub:hub\n\n\u8d77\u52d5\u3057\u307e\u3059\u3002\n$ docker-compose up -d\n\n$ docker-compose ps\n        Name                       Command               State                  Ports\n---------------------------------------------------------------------------------------------------\nwork_chrome_1           /opt/bin/entry_point.sh          Up       0.0.0.0:5900->5900/tcp\nwork_firefox_1          /opt/bin/entry_point.sh          Up       0.0.0.0:5901->5900/tcp\n\u30fb\u30fb\u30fb\nwork_selenium-hub_1     /opt/bin/entry_point.sh          Up       0.0.0.0:4444->4444/tcp\n\u30fb\u30fb\u30fb\n\nhub\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u8997\u3044\u3066\u307f\u307e\u3059\u3002Docker\u30db\u30b9\u30c8\u306e4444\u756a\u30dd\u30fc\u30c8\u3067\u3059\u3002\n\nUltraVNCViewer\u306a\u3069\u3067Docker\u30db\u30b9\u30c8\u306e5900\u306b\u63a5\u7d9a\u3059\u308b\u3068Chrome\u7528\u306eSeleniumNode\u306b\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002\n\n\nGlassFish\u3092\u52d5\u304b\u3059\ndocker-compose.yml\u306b\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n# glassfish\nglassfish:\n  image: glassfish\n  ports:\n    - \"14848:4848\"\n    - \"18080:8080\"\n    - \"18181:8181\"\n\n\u8d77\u52d5\u3059\u308b\u3002\n$ docker-compose up -d glassfish\n\n\u30d6\u30e9\u30a6\u30b6\u3067\u63a5\u7d9a\u3059\u308b\u3002Docker\u30db\u30b9\u30c8\u306e14848\u756a\u30dd\u30fc\u30c8\u3002\n\n\u30ea\u30e2\u30fc\u30c8\u304b\u3089\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3002\n\u203b\u305d\u306e\u3046\u3061\u30b9\u30af\u30ea\u30d7\u30c8\u5316\u3057\u3088\u3046\u3002\n1. asadmin change-admin-password\n2. asadmin login\n3. asadmin enable-secure-admin\n\u4f5c\u6210\u3057\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u306f\u3001admin/12345678\u3067\u3059\u3002\n$ docker exec -it work_glassfish_1 bash\nroot@0512d1444d81:/usr/local/glassfish4# asadmin change-admin-password\nEnter admin user name [default: admin]>\nEnter the admin password>\nEnter the new admin password>\nEnter the new admin password again>\nCommand change-admin-password executed successfully.\nroot@0512d1444d81:/usr/local/glassfish4#\nroot@0512d1444d81:/usr/local/glassfish4# asadmin login\nEnter admin user name [Enter to accept default]> admin\nEnter admin password>\nLogin information relevant to admin user name [admin] for host [localhost] and admin port [4848] stored at [/root/.gfclient/pass] successfully.\nMake sure that this file remains protected. Information stored in this file will be used by administration commands to manage associated domain.\nCommand login executed successfully.\nroot@0512d1444d81:/usr/local/glassfish4#\nroot@0512d1444d81:/usr/local/glassfish4# asadmin enable-secure-admin\nYou must restart all running servers for the change in secure admin to take effect.\nCommand enable-secure-admin executed successfully.\nroot@0512d1444d81:/usr/local/glassfish4# exit\nexit\n\nglassfish\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u518d\u8d77\u52d5\u3059\u308b\u3002\n$ docker-compose restart glassfish\n\n\u6539\u3081\u3066Glassfish\u306e\u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u63a5\u7d9a\u3059\u308b\u3002\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u8b66\u544a\u3092\u7121\u8996\u3057\u3066\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u9032\u3080\u3002\n\n\u5148\u307b\u3069\u8a2d\u5b9a\u3057\u305f\u30e6\u30fc\u30b6/\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3002\n\n\u3044\u3064\u3082\u306e\u753b\u9762\u3067\u3059\u3002\n\nDocker\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\nDocker\u30b3\u30f3\u30c6\u30ca\u3067Data Volumes \u30b3\u30f3\u30c6\u30ca\u3092\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308b\u4ed5\u639b\u3051\u3092\u7528\u610f\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u53c2\u8003\u306b\u306a\u308c\u3070\u3046\u308c\u3057\u3044\u3067\u3059\u3002\ndocker-backup\nData Volumes\u30b3\u30f3\u30c6\u30ca\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u306b\u3064\u3044\u3066\u306f \u3053\u3053\u304c\u53c2\u8003\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002\n\nWindows\u3067\u306e\u6ce8\u610f\u70b9\nwindows10\u3067docker\u3092\u64cd\u4f5c\u3057\u3066\u3044\u3066\u6c17\u4ed8\u3044\u305f\u3053\u3068\u3092\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nexec\u3067ls /\u3068\u3059\u308b\u3068Windows\u5074\u306e\u30d1\u30b9\u3092\u898b\u3061\u3083\u3046\n$ docker exec -it work_jenkins_1 ls /var/jenkins_home\nls: cannot access D:/Apps/Git/var/jenkins_home: No such file or directory\n\nDocker\u30b3\u30f3\u30c6\u30ca\u306e/var/jenkins_home\u3092\u898b\u305f\u3044\u306e\u3060\u3051\u3069\u3001\u5909\u306b\u306a\u308b\u3002\u76f8\u5bfe\u30d1\u30b9\u306b\u3057\u3066\u3084\u308c\u3070\u3068\u308a\u3042\u3048\u305a\u898b\u3048\u308b\u3002\n$ docker exec -it work_jenkins_1 ls var/jenkins_home\nDownload metadata.log          jobs                      secrets\nWorkspace clean-up.log         nodeMonitors.xml          updates\ncopy_reference_file.log        nodes                     userContent\nhudson.model.UpdateCenter.xml  plugins                   war\nidentity.key.enc               secret.key\ninit.groovy.d                  secret.key.not-so-secret\n\n\n\u6700\u5f8c\u306b\nDocker\u3092\u4f7f\u3063\u305f\u958b\u767a\u74b0\u5883\u3065\u304f\u308a\u306e\u30e1\u30e2\u3092\u66f8\u304d\u307e\u3057\u305f\u3002Windows10\u306e\u306f\u307e\u308a\u3069\u3053\u308d\u3092\u77e5\u308c\u3066\u826f\u304b\u3063\u305f\u3067\u3059\uff08VirtualBox\u306e\u3068\u3053\u308d\uff09\u3002\u305d\u306e\u3046\u3061\u3082\u3063\u3068\u7c21\u5358\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u306d\u3002\n\n\u53c2\u8003\n\nDocker Toolbox\nInstallation on Windows\nWindows 10 + VirtualBox 5.0 + Vagrant 1.7.4 + VCCW 2.18.0 \u3067\u306e\u30a8\u30e9\u30fc\u56de\u907f\nFailed to open/create the internal network Vagrant on Windows10\nVirtualBox\nDocker\u306b\u304a\u3051\u308b\u30c7\u30fc\u30bf\u5c02\u7528\u30b3\u30f3\u30c6\u30ca\u3001KVM\u4eee\u60f3\u5316\u74b0\u5883\u304b\u3089\u306e\u79fb\u884c\ndocker-backup\n\n\n\n\n# \u6982\u8981\nWindows\u30de\u30b7\u30f3\u4e0a\u306bDocker Toolbox\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u500b\u4eba\u7528\u306e\u30a2\u30d7\u30ea\u958b\u767a\u74b0\u5883\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002Windows\u30de\u30b7\u30f3\u305d\u306e\u3082\u306e\u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30c4\u30fc\u30eb\u306f\u6700\u5c0f\u9650\u306b\u3057\u3066\u3001Docker Toolbox\u306b\u542b\u307e\u308c\u308b\u4eee\u60f3\u30de\u30b7\u30f3\u4e0a\u306bDocker\u3092\u4f7f\u3063\u3066SonarQube\u306a\u3069\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u307f\u307e\u3059\u3002\n\n__2016.3.29 \u65b0\u3057\u3044\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9(DockerToolbox-1.10.3.exe)\u3067\u3084\u308a\u76f4\u3057\u3066\u307f\u307e\u3057\u305f\u3002__\n\n\n\n## \u524d\u63d0\u3068\u3057\u3066\u3044\u308b\u74b0\u5883\n* Windows 10 (7\u4ee5\u4e0a\u3060\u3063\u305f\u3089\u3044\u3051\u308b\u306f\u305a)\n* Intel VT\u5bfe\u5fdc (\u305d\u308c\u76f8\u5f53\u306e\u4eee\u60f3\u5316\u30c6\u30af\u30ce\u30ed\u30b8\u304c\u4f7f\u3048\u308c\u3070\u3088\u3044\u3002\u6700\u8fd1\u306ePC\u306f\u307b\u3068\u3093\u3069\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306f\u305a\u3002 )\n\n## \u76ee\u6307\u3059\u3053\u3068\nJava\u3067\u306eWeb\u30a2\u30d7\u30ea\u958b\u767a\u3067\u4f7f\u3046\u3060\u308d\u3046\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002\u69cb\u7bc9\u3059\u308b\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3001\u30c4\u30fc\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\n### \u5c0e\u5165\u3059\u308bDocker\u30b3\u30f3\u30c6\u30ca\n* Jenkins\n* MySQL\n* SonarQube\n* Selenium\n* Glassfish\n\n### yml\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u306e\u7f6e\u304d\u5834\u6240\nhttps://github.com/osuo/DevelopEnvironment\n\n\n# Docker\u74b0\u5883\u306e\u6e96\u5099\n## Docker Toolbox\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nDocker\u306e\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30b5\u30a4\u30c8\u306e[Docker Toolbox](https://www.docker.com/docker-toolbox)\u304b\u3089Docker Toolbox\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u5165\u624b\u3057\u307e\u3059\u3002\u3053\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u306b\u306fVirtualBox\u3084Git for Windows\u304c\u540c\u68b1\u3055\u308c\u3066\u307e\u3059\u3002\n\n\u6b21\u306b\u3001Docker Toolbox\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u8d77\u52d5\u3057\u3066Docker\u95a2\u9023\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n![WS000038.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/23a956cf-5c2d-8337-d613-8e3c545596ce.jpeg)\n\n__\u91cd\u8981!__\n\u4e00\u756a\u4e0b\u306e\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u300cInstall VirtualBox with NDIS5 driver[default NDIS6]\u300d\u306b\u30c1\u30a7\u30c3\u30af\u5165\u308c\u308b\u306e\u3092\u5fd8\u308c\u305a\u306b\uff01\n![WS000042.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/48226739-30cd-fc66-50d3-416036d7625b.jpeg)\n\n\u7406\u7531\u306a\u3069\u3053\u3061\u3089\u304c\u53c2\u8003\u306b\u306a\u308b\u304b\u3068\u3002\n[Failed to open/create the internal network Vagrant on Windows10](http://stackoverflow.com/questions/33725779/failed-to-open-create-the-internal-network-vagrant-on-windows10)\n\n\n## Docker\u7528\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u69cb\u7bc9\n__Docker Quickstart Terminal__\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u521d\u56de\u306e\u307fVirtualBox\u4e0a\u306bDocker\u7528\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u4f5c\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001\u4eee\u60f3\u30de\u30b7\u30f3\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n![WS000015.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/9971c39b-a115-8644-5108-9d202ffeb38b.jpeg)\n\n\u3057\u3070\u3089\u304f\u3059\u308b\u3068...Docker\u30a8\u30f3\u30b8\u30f3\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308bDocker\u30db\u30b9\u30c8\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u306b\u63a5\u7d9a\u3059\u308b\u3002\n![WS000016.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/46df438c-4c67-fe3b-a01f-4b7b6c5d97cb.jpeg)\n\nVirtualBox\u306b\u306f__default__\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u3067\u304d\u3066\u308b\u3002\n![WS000017.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/d07c1288-bb7f-1149-c5c4-43cd5cded083.jpeg)\n\n\n\n\n## Windows\u30de\u30b7\u30f3\u304b\u3089Dcoker\u306e\u52d5\u4f5c\u78ba\u8a8d\nDocker\u306e\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30b5\u30a4\u30c8\u306e\u4f8b\u3092\u8a66\u3059\u3002\n\n```bash\n$ docker run hello-world\n```\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308c\u3070OK\u3002\n![WS000018.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/89f64608-737c-2a25-fdae-be15ebd55b27.jpeg)\n\ndocker-machine\u3067\u3082\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n```bash\n$ docker-machine ls\nNAME      ACTIVE   DRIVER       STATE     URL                         SWARM   ERRORS\ndefault   *        virtualbox   Running   tcp://192.168.99.101:2376\n```\n\ndefault\u3068\u3044\u3046\u540d\u524d\u306eDocker\u30db\u30b9\u30c8\u304c\u8d77\u52d5\u72b6\u614b\u306b\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n\n`docker-machine stop default`\u3067default\u3092\u6b62\u3081\u305f\u308a\u3001`docker-machine start default`\u3067\u958b\u59cb\u3057\u305f\u308a\u3067\u304d\u308b\u3002\n\n\n# Docker\u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\u3068\u5229\u7528\nDocker\u30b3\u30f3\u30c6\u30ca\u306e\u5236\u5fa1\u306b__docker-compoise__\u3092\u4f7f\u3046\u3002\u7d20\u306edocker\u3060\u3068\u8d77\u52d5\u6642\u306b\u6307\u5b9a\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6bce\u56de\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3059\u304c\u3001docker-compose\u3060\u3068__yml__\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3067\u304d\u3059\u3063\u304d\u308a\u3059\u308b\u304b\u3089\u3001\u3067\u3059\u3002\n\n\u9069\u5f53\u306a\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u308a\u3001\u305d\u306e\u4e2d\u306bdocker-compose.yml\u306a\u3069\u3092\u7f6e\u3044\u3066\u8a66\u3057\u307e\u3059\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001__work__\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u3063\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n```bash\n$ mkdir work\n$ cd work\n```\n\n\n\n## Jenkins\u3092\u52d5\u304b\u3059\ndocker-compose.yml\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```yaml\njenkins:\n  image: jenkins\n  ports:\n    - \"8080:8080\"\n```\n\ndocker-compose.yml\u3092\u4f5c\u6210\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067`docker-compose`\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u521d\u56de\u306fjenkins\u306eDocker\u30a4\u30e1\u30fc\u30b8\u3092DockerHub\u304b\u3089\u5165\u624b\u3057\u3066\u304b\u3089\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```bash\n$ docker-compose up -d\n...\nStatus: Downloaded newer image for jenkins:latest\nCreating work_jenkins_1\n```\n\nDocker\u30b3\u30f3\u30c6\u30ca\u306e\u72b6\u614b\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\n```bash\n$ docker-compose ls\n     Name                   Command               State                 Ports \n-------------------------------------------------------------------------------------------\nwork_jenkins_1   /bin/tini -- /usr/local/bi ...   Up      50000/tcp, 0.0.0.0:8080->8080/tcp\n```\n\nPorts\u6b04\u306e__0.0.0.0:8080->8080/tcp__\u3068\u3044\u3046\u306e\u306f\u3001Docker\u30db\u30b9\u30c8\u306e8080\u30dd\u30fc\u30c8\u3092Docker\u30b3\u30f3\u30c6\u30ca\u306e8080\u30dd\u30fc\u30c8\u306b\u30dd\u30fc\u30c8\u30d5\u30a9\u30ef\u30fc\u30c9\u3057\u307e\u3059\u3088\u3001\u3063\u3066\u3053\u3068\u3067\u3059\u3002\n\u306a\u306e\u3067\u30d6\u30e9\u30a6\u30b6\u3067Docker\u30db\u30b9\u30c8\u306e8080\u30dd\u30fc\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308c\u3070jenkins\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u304c\u958b\u304d\u307e\u3059\u3002Docker\u30db\u30b9\u30c8\u306eIP\u30a2\u30c9\u30ec\u30b9\u306f`docker-machine`\u3067\u308f\u304b\u308a\u307e\u3059\u3002\n\n```bash\n$ docker-machine ls\nNAME      ACTIVE   DRIVER       STATE     URL                         SWARM   ERRORS\ndefault   *        virtualbox   Running   tcp://192.168.99.101:2376\n```\n\u3053\u3093\u306a\u753b\u9762\u304c\u3067\u308b\u306f\u305a\u3002\n![WS000021.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/a651b557-17e7-01bd-9b7c-56c143a99035.jpeg)\n\n\n## Jenkins\u3092\u52d5\u304b\u3059(Data Volumes \u30b3\u30f3\u30c6\u30ca\u3068\u3068\u3082\u306b)\njenkins\u306e\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u306fDocker\u30b3\u30f3\u30c6\u30ca\u5185\u306e__/var/jenkins_home__\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\uff08\u30ef\u30fc\u30af\u30b9\u30da\u30fc\u30b9\u3001\u5404\u7a2e\u8a2d\u5b9a\u3084Plugin\u306a\u3069\uff09\u3002\u3053\u308c\u3092__Data Volumes\u30b3\u30f3\u30c6\u30ca__\u3068\u3057\u3066\u72ec\u7acb\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Jenkins\u672c\u4f53\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3068\u305d\u306e\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u5206\u3051\u308b\u3053\u3068\u3067\u3001Jenkins\u672c\u4f53\u3092\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3059\u308b\u3053\u3068\u304c\u697d\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3088\u308a\u5b9f\u8df5\u7684\u306a\u4f7f\u3044\u65b9\u3067\u3059\u3002\n\n### 1. Jenkins\u306eDocker\u30b3\u30f3\u30c6\u30ca\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3059\u308b\n\u5ff5\u306e\u305f\u3081\u3002\u4e2d\u8eab\u304c\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u8abf\u3079\u3066\u304a\u304d\u307e\u3059\u3002`docker exec`\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002Jenkins\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3057\u3066\u3082\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u304c\u5f71\u97ff\u3092\u53d7\u3051\u306a\u3044\u304b\uff08\u6b8b\u3063\u3066\u3044\u308b\u304b\uff09\u306e\u78ba\u8a8d\u306e\u305f\u3081\u3067\u3059\u3002\n\n`docker inspect`\u3067\u78ba\u8a8d\u3002\n\n```bash\n$ docker inspect -f \"{{ .HostConfig.VolumesFrom }} \" work_jenkins_1\n[]\n```\n\n\nDataVolume\u30b3\u30f3\u30c6\u30ca\u30fc\u306e\u6709\u308a\u7121\u3057\u3092`df`\u3067\u78ba\u8a8d\u3067\u304d\u308b\u304b\u3068\u601d\u3063\u305f\u3051\u3069\u3067\u304d\u305a\u3002\u306a\u3093\u3067\u3060\u308d\u3046\uff1f\u307e\u305f\u8abf\u3079\u3088\u3046\u3002\uff08/proc/mounts \u3067\u3082\u9055\u3044\u304c\u308f\u304b\u3089\u305a\u3002\uff09\n\n```bash\n$ docker exec -it work_jenkins_1 df -h\nFilesystem      Size  Used Avail Use% Mounted on\nnone             19G 1007M   17G   6% /\ntmpfs           499M     0  499M   0% /dev\ntmpfs           499M     0  499M   0% /sys/fs/cgroup\n/dev/sda1        19G 1007M   17G   6% /etc/hosts\nshm              64M     0   64M   0% /dev/shm\n```\n\n\n\n\n\n### 2. \u5148\u307b\u3069\u4f5c\u6210\u3057\u305fJenkins\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3059\u308b\n`docker-compose stop jenkins`\u3067Jenkins\u3092\u505c\u6b62\u3057\u3066\u3001`docker-compose rm jenkins`\u3067Jenkins\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3057\u307e\u3059\u3002\u5f8c\u306f\u3001Docker\u30b3\u30f3\u30c6\u30ca\u306e\u72b6\u614b\u3092`docker-compose ps`\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash\n$ docker-compose stop jenkins\nStopping work_jenkins_1 ...\n\u001b[1Bping work_jenkins_1 ... done\n```\n\n```bash\n$ docker-compose ps\n     Name                   Command                State     Ports\n------------------------------------------------------------------\nwork_jenkins_1   /bin/tini -- /usr/local/bi ...   Exit 143\n```\n\n```bash\n$ docker-compose rm jenkins\nGoing to remove work_jenkins_1\nAre you sure? [yN] y\nRemoving work_jenkins_1 ...\n\u001b[1Bving work_jenkins_1 ... done\n```\n\n```bash\n$ docker-compose ps\nName   Command   State   Ports\n------------------------------\n```\n\nJenkins\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n\n\n### 3. docker-compose.yml\u3092\u4fee\u6b63\u3057\u3066\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u683c\u7d0d\u7528\u306eDataVolumes\u30b3\u30f3\u30c6\u30ca\u3092\u8ffd\u8a18\u3059\u308b\ndocker-compose.yml\u3092\u6b21\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n```yaml\n# jenkins container\njenkins:\n  image: jenkins\n  ports:\n    - \"8080:8080\"\n  volumes_from:\n    - jenkins_data\n\n# jenkins data volume container\njenkins_data:\n  image: jenkins\n  command: echo \"jenkins data volume container.\"\n```\n\n\n### 4. \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\n`docker-compose up -d`\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```bash\n$ docker-compose up -d\n...\nStatus: Downloaded newer image for busybox:latest\nCreating work_jenkins_data_1\nCreating work_jenkins_1\n```\n\n```bash\n$ docker-compose ps\n       Name                      Command               State\nPorts\n-------------------------------------------------------------------------------------------------\nwork_jenkins_1        /bin/tini -- /usr/local/bi ...   Up       50000/tcp, 0.0.0.0:8080->8080/tcp\nwork_jenkins_data_1   /bin/tini -- /usr/local/bi ...   Exit 0\n```\n\n### 5. \u78ba\u8a8d\u3059\u308b\n\n```bash\n$ docker inspect -f \"{{ .HostConfig.VolumesFrom }} \" work_jenkins_1\n[6f65fc53675392163fc090be8ceeaa0e7ced5f757a17ec59cf92258fc1d66a3f:rw]\n```\n\n\u304a\uff01\u3053\u306e__6f65fc536753...__\u3068\u3044\u3046\u306e\u304cDataVolume\u30b3\u30f3\u30c6\u30ca\u3067\u3042\u308b__work_jenkins_data_1__ \u306e\u3053\u3068\u3067\u3059\u3002`docker ps -a`\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash\n$ docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS                               NAMES\n452d31f1400d        jenkins             \"/bin/tini -- /usr/lo\"   7 minutes ago       Up 7 minutes               0.0.0.0:8080->8080/tcp, 50000/tcp   work_jenkins_1\n6f65fc536753        jenkins             \"/bin/tini -- /usr/lo\"   About an hour ago   Exited (0) 7 minutes ago                                       work_jenkins_data_1\n```\n\n\u6b21\u306b\u3001Jenkins\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u524a\u9664\u3057\u3066\u3082\u3001DataVolume\u30b3\u30f3\u30c6\u30ca\u306b\u3042\u308b\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u304c\u6b8b\u3063\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\u624b\u9806\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n1. Jenkins\u306ePlugin\u3092\u66f4\u65b0\u3059\u308b\n2. Jenkins\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u308a\u76f4\u3059\n3. Plugin\u304c\u66f4\u65b0\u6e08\u307f\u3067\u3042\u308b\u304b\u3092\u78ba\u8a8d\u3059\u308b\n\n#### 1. Jenkins\u306ePlugin\u3092\u66f4\u65b0\u3059\u308b\n\u66f4\u65b0\u524d\uff1a\n__(\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3042\u308a)__\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n![WS000023.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/c1f61bf4-7562-bc2b-7d56-1e6cba90717b.jpeg)\n\n\u66f4\u65b0\uff1a\n\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n![WS000026.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/774400d4-5f7d-7011-dd79-44282b69552d.jpeg)\n\n#### 2. Jenkins\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u308a\u76f4\u3059\n\u6b62\u3081\u3066\u3001\n\n```bash\n$ docker-compose stop jenkins\nStopping work_jenkins_1 ...\n\u001b[1Bping work_jenkins_1 ... done\n```\n\n\u524a\u9664\u3057\u3066\u3001\n\n```bash\n$ docker-compose rm jenkins\nGoing to remove work_jenkins_1\nAre you sure? [yN] y\nRemoving work_jenkins_1 ...\n\u001b[1Bving work_jenkins_1 ... done\n```\n\n\u78ba\u8a8d\u3057\u307e\u3059\u3002DataVolume\u30b3\u30f3\u30c6\u30ca\u306e\u307f\u6b8b\u3063\u3066\u307e\u3059\u3002\n\n```bash\n$ docker-compose ps\n       Name                      Command               State    Ports\n---------------------------------------------------------------------\nwork_jenkins_data_1   /bin/tini -- /usr/local/bi ...   Exit 0\n```\n\n\u8d77\u52d5\u3059\u308b\u3002\n\n```bash\n$ docker-compose up -d\nStarting work_jenkins_data_1\nCreating work_jenkins_1\n```\n\n\n#### 3. Plugin\u304c\u66f4\u65b0\u6e08\u307f\u3067\u3042\u308b\u304b\u3092\u78ba\u8a8d\u3059\u308b\n\u5148\u307b\u3069\u306ePlugin\u753b\u9762\u3092\u898b\u3066\u307f\u308b\u3002__(\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3042\u308a)__\u304c\u306a\u3044\u3002\n![WS000025.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/198ca988-215e-f8e8-024e-d505c0a565d1.jpeg)\n\n\n\u610f\u56f3\u901a\u308a\u306b\u52d5\u4f5c\u3057\u307e\u3057\u305f\u3002DataVolume\u30b3\u30f3\u30c6\u30ca\u3092\u901a\u5e38\u306e\u30b3\u30f3\u30c6\u30ca\u3068\u5225\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u306a\u3069\u306e\u4fdd\u6301\u304c\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\n\n\n\n## MySQL\u3092\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u3057\u3066SonarQube\u3092\u52d5\u304b\u3059\ndocker-compose.yml\u306b\u6b21\u306e\u5185\u5bb9\u3092\u8ffd\u8a18\u3059\u308b\u3002\n\n```yaml\n# mysql container\nmysql:\n  image: mysql\n  environment:\n    - MYSQL_ROOT_PASSWORD=hogehoge\n  ports:\n    - \"3306:3306\"\n  volumes_from:\n    - mysql_data\n\n# mysql container\nmysql_data:\n  image: mysql\n  command: echo \"sonarqube data volume container.\"\n\n# sonarqube container\nsonarqube:\n  image: sonarqube\n  environment:\n    - SONARQUBE_JDBC_USERNAME=sonar\n    - SONARQUBE_JDBC_PASSWORD=sonar\n    - SONARQUBE_JDBC_URL=jdbc:mysql://mysql/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true\n  links:\n    - mysql:mysql\n  ports:\n    - \"9000:9000\"\n  volumes_from:\n    - sonarqube_data\n\n# sonarqube data volume container\nsonarqube_data:\n  image: sonarqube\n  command: echo \"sonarqube data volume container.\"\n```\n\nsonarqube\u7528\u306eDatabase\u4f5c\u6210\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u610f\u3059\u308b\u3002\n\u307e\u305a\u3001create_sonar_db.sql\u3002\n\n```sql:create_sonar_db.sql\nCREATE DATABASE sonar CHARACTER SET utf8;\n\nCREATE USER 'sonar' IDENTIFIED BY 'sonar';\nGRANT ALL ON sonar.* TO 'sonar'@'%' IDENTIFIED BY 'sonar';\nGRANT ALL ON sonar.* TO 'sonar'@'localhost' IDENTIFIED BY 'sonar';\nFLUSH PRIVILEGES;\n```\n\n\u6b21\u306b\u3001create_sonar_db.sh\u3002\n\n```bash:create_sonar_db.sh\n#!/bin/bash\n\n#\nDIRNAME=${0%/*}\nMYSQL_CONTAINER=work_mysql_1\nMYSQL_PASSWORD=hogehoge\n\n# docker\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3059\u308b\ndocker run -i --link $MYSQL_CONTAINER:mysql --rm mysql mysql -h mysql -uroot -p$MYSQL_PASSWORD < ./$DIRNAME/create_sonar_db.sql\n```\n\n\u8d77\u52d5\u306f\u6b21\u306e\u3088\u3046\u306b\u3084\u308a\u307e\u3059\u3002\n1. mysql\u306e\u307f\u3092\u8d77\u52d5\u3057\u3066sonarqube\u7528\u306eDatabase\u3092\u4f5c\u6210\u3059\u308b\n2. sonarqube\u3092\u8d77\u52d5\u3059\u308b\n\n### 1. mysql\u306e\u307f\u3092\u8d77\u52d5\u3059\u308b\n\n```bash\n$ docker-compose up -d mysql\nStarting work_mysql_data_1\nCreating work_mysql_1\n```\n\n```bash\n$ docker-compose ps\n        Name                       Command               State                  Ports\n---------------------------------------------------------------------------------------------------\nwork_jenkins_1          /bin/tini -- /usr/local/bi ...   Up       50000/tcp, 0.0.0.0:8080->8080/tcp\nwork_jenkins_data_1     /bin/tini -- /usr/local/bi ...   Exit 0                 \nwork_mysql_1            /entrypoint.sh mysqld            Up       0.0.0.0:3306->3306/tcp\nwork_mysql_data_1       /entrypoint.sh echo sonarq ...   Exit 0\n```\n\n### 2. sonarqube\u7528\u306eDatabase\u3092\u4f5c\u6210\u3059\u308b\n\n```bash\n$ bash ./create_sonar_db.sh\nmysql: [Warning] Using a password on the command line interface can be insecure.\n```\n\n\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash\n$ docker run --rm -it --link work_mysql_1:mysql mysql mysql -h mysql -uroot -\nphogehoge\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 3\nServer version: 5.7.9 MySQL Community Server (GPL)\n\nCopyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> show tables;\nERROR 1046 (3D000): No database selected\nmysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| sonar              |\n| sys                |\n+--------------------+\n5 rows in set (0.00 sec)\n```\n\n\n### 3. sonarqube\u3092\u8d77\u52d5\u3059\u308b\n\n```bash\n$ docker-compose up -d sonarqube\nStarting work_sonarqube_data_1\nStarting work_mysql_data_1\nwork_mysql_1 is up-to-date\nCreating work_sonarqube_1\n```\n\n```bash\n$ docker-compose ps\n        Name                       Command               State                  Ports\n---------------------------------------------------------------------------------------------------\nwork_jenkins_1          /bin/tini -- /usr/local/bi ...   Up       50000/tcp, 0.0.0.0:8080->8080/tcp\nwork_jenkins_data_1     /bin/tini -- /usr/local/bi ...   Exit 0                 \nwork_mysql_1            /entrypoint.sh mysqld            Up       0.0.0.0:3306->3306/tcp\nwork_mysql_data_1       /entrypoint.sh echo sonarq ...   Exit 0                 \nwork_sonarqube_1        ./bin/run.sh                     Up       0.0.0.0:9000->9000/tcp\nwork_sonarqube_data_1   ./bin/run.sh echo sonarqub ...   Exit 0\n```\n\n\u30d6\u30e9\u30a6\u30b6\u3067Docker\u30db\u30b9\u30c8\u306e9000\u756a\u30dd\u30fc\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n![WS000028.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/159b085d-4b66-2d22-507c-3c4b51e9c049.jpeg)\n\n\u7ba1\u7406\u8005\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3001\u30e1\u30cb\u30e5\u30fc\u3088\u308aAdministration\u2192System\u2192System Info\u3092\u53c2\u7167\u3059\u308b\u3068\u3001Database\u304cMySQL\u3068\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\u306a\u304a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7ba1\u7406\u8005\u30a2\u30ab\u30a6\u30f3\u30c8/\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u3001admin/admin\u3067\u3059\u3002\n\n![WS000028.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/ad04f817-ed12-70e5-2423-f25e9649d17d.jpeg)\n\n![WS000029.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/f8ffcfe3-c4a4-1636-7865-5d23c700ede9.jpeg)\n\n![WS000030.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/3ae80412-1b5e-ab1b-4a17-847a8ae27cb6.jpeg)\n\n\n## Selenium\u3092\u52d5\u304b\u3059\n\ndocker-compose.yml\u306b\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```yaml\n# sonarqube data volume container\nsonarqube_data:\n  image: sonarqube\n  command: echo \"sonarqube data volume container.\"\n\n# selenium hub container\nselenium-hub:\n  image: selenium/hub\n  ports:\n    - \"4444:4444\"\n\n# selenium node chrome container\nchrome:\n  image: selenium/node-chrome-debug\n  ports:\n    - \"5900:5900\"\n  links:\n    - selenium-hub:hub\n\n# selenium node firefox container\nfirefox:\n  image: selenium/node-firefox-debug\n  ports:\n    - \"5901:5900\"\n  links:\n    - selenium-hub:hub\n```\n\n\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```bash\n$ docker-compose up -d\n```\n\n```bash\n$ docker-compose ps\n        Name                       Command               State                  Ports\n---------------------------------------------------------------------------------------------------\nwork_chrome_1           /opt/bin/entry_point.sh          Up       0.0.0.0:5900->5900/tcp\nwork_firefox_1          /opt/bin/entry_point.sh          Up       0.0.0.0:5901->5900/tcp\n\u30fb\u30fb\u30fb\nwork_selenium-hub_1     /opt/bin/entry_point.sh          Up       0.0.0.0:4444->4444/tcp\n\u30fb\u30fb\u30fb\n```\n\nhub\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u8997\u3044\u3066\u307f\u307e\u3059\u3002Docker\u30db\u30b9\u30c8\u306e4444\u756a\u30dd\u30fc\u30c8\u3067\u3059\u3002\n\n![WS000031.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/dc36276f-7795-cf1d-9397-db06f63e20c2.jpeg)\n\nUltraVNCViewer\u306a\u3069\u3067Docker\u30db\u30b9\u30c8\u306e5900\u306b\u63a5\u7d9a\u3059\u308b\u3068Chrome\u7528\u306eSeleniumNode\u306b\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002\n![WS000032.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/f2cf7abf-647e-1142-cbe3-adc9eda784db.jpeg)\n\n\n\n\n## GlassFish\u3092\u52d5\u304b\u3059\ndocker-compose.yml\u306b\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```yaml\n# glassfish\nglassfish:\n  image: glassfish\n  ports:\n    - \"14848:4848\"\n    - \"18080:8080\"\n    - \"18181:8181\"\n```\n\n\u8d77\u52d5\u3059\u308b\u3002\n\n```bash\n$ docker-compose up -d glassfish\n```\n\n\u30d6\u30e9\u30a6\u30b6\u3067\u63a5\u7d9a\u3059\u308b\u3002Docker\u30db\u30b9\u30c8\u306e14848\u756a\u30dd\u30fc\u30c8\u3002\n\n![WS000033.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/6580bbd2-b92a-1a48-9775-c8e2643f603e.jpeg)\n\n\u30ea\u30e2\u30fc\u30c8\u304b\u3089\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3002\n\u203b\u305d\u306e\u3046\u3061\u30b9\u30af\u30ea\u30d7\u30c8\u5316\u3057\u3088\u3046\u3002\n1. asadmin change-admin-password\n2. asadmin login\n3. asadmin enable-secure-admin\n\n\u4f5c\u6210\u3057\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u306f\u3001admin/12345678\u3067\u3059\u3002\n\n```bash\n$ docker exec -it work_glassfish_1 bash\nroot@0512d1444d81:/usr/local/glassfish4# asadmin change-admin-password\nEnter admin user name [default: admin]>\nEnter the admin password>\nEnter the new admin password>\nEnter the new admin password again>\nCommand change-admin-password executed successfully.\nroot@0512d1444d81:/usr/local/glassfish4#\nroot@0512d1444d81:/usr/local/glassfish4# asadmin login\nEnter admin user name [Enter to accept default]> admin\nEnter admin password>\nLogin information relevant to admin user name [admin] for host [localhost] and admin port [4848] stored at [/root/.gfclient/pass] successfully.\nMake sure that this file remains protected. Information stored in this file will be used by administration commands to manage associated domain.\nCommand login executed successfully.\nroot@0512d1444d81:/usr/local/glassfish4#\nroot@0512d1444d81:/usr/local/glassfish4# asadmin enable-secure-admin\nYou must restart all running servers for the change in secure admin to take effect.\nCommand enable-secure-admin executed successfully.\nroot@0512d1444d81:/usr/local/glassfish4# exit\nexit\n```\n\nglassfish\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u518d\u8d77\u52d5\u3059\u308b\u3002\n\n```bash\n$ docker-compose restart glassfish\n```\n\n\u6539\u3081\u3066Glassfish\u306e\u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u63a5\u7d9a\u3059\u308b\u3002\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u8b66\u544a\u3092\u7121\u8996\u3057\u3066\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u9032\u3080\u3002\n\n![WS000034.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/4a9f5b31-6820-70e1-fac4-e7593ab25228.jpeg)\n\n\u5148\u307b\u3069\u8a2d\u5b9a\u3057\u305f\u30e6\u30fc\u30b6/\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3002\n\n![WS000035.JPG](https://qiita-image-store.s3.amazonaws.com/0/79341/80b3046b-137c-6304-cca2-2b435d356d9e.jpeg)\n\n\u3044\u3064\u3082\u306e\u753b\u9762\u3067\u3059\u3002\n\n\n\n\n# Docker\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\nDocker\u30b3\u30f3\u30c6\u30ca\u3067Data Volumes \u30b3\u30f3\u30c6\u30ca\u3092\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308b\u4ed5\u639b\u3051\u3092\u7528\u610f\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u53c2\u8003\u306b\u306a\u308c\u3070\u3046\u308c\u3057\u3044\u3067\u3059\u3002\n[docker-backup](https://github.com/osuo/docker-backup)\n\nData Volumes\u30b3\u30f3\u30c6\u30ca\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u306b\u3064\u3044\u3066\u306f [\u3053\u3053](https://thinkit.co.jp/story/2015/09/29/6385)\u304c\u53c2\u8003\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002\n\n# Windows\u3067\u306e\u6ce8\u610f\u70b9\nwindows10\u3067docker\u3092\u64cd\u4f5c\u3057\u3066\u3044\u3066\u6c17\u4ed8\u3044\u305f\u3053\u3068\u3092\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n## exec\u3067ls /\u3068\u3059\u308b\u3068Windows\u5074\u306e\u30d1\u30b9\u3092\u898b\u3061\u3083\u3046\n\n```bash\n$ docker exec -it work_jenkins_1 ls /var/jenkins_home\nls: cannot access D:/Apps/Git/var/jenkins_home: No such file or directory\n```\n\nDocker\u30b3\u30f3\u30c6\u30ca\u306e/var/jenkins_home\u3092\u898b\u305f\u3044\u306e\u3060\u3051\u3069\u3001\u5909\u306b\u306a\u308b\u3002\u76f8\u5bfe\u30d1\u30b9\u306b\u3057\u3066\u3084\u308c\u3070\u3068\u308a\u3042\u3048\u305a\u898b\u3048\u308b\u3002\n\n```bash\n$ docker exec -it work_jenkins_1 ls var/jenkins_home\nDownload metadata.log          jobs                      secrets\nWorkspace clean-up.log         nodeMonitors.xml          updates\ncopy_reference_file.log        nodes                     userContent\nhudson.model.UpdateCenter.xml  plugins                   war\nidentity.key.enc               secret.key\ninit.groovy.d                  secret.key.not-so-secret\n```\n\n\n\n# \u6700\u5f8c\u306b\nDocker\u3092\u4f7f\u3063\u305f\u958b\u767a\u74b0\u5883\u3065\u304f\u308a\u306e\u30e1\u30e2\u3092\u66f8\u304d\u307e\u3057\u305f\u3002Windows10\u306e\u306f\u307e\u308a\u3069\u3053\u308d\u3092\u77e5\u308c\u3066\u826f\u304b\u3063\u305f\u3067\u3059\uff08VirtualBox\u306e\u3068\u3053\u308d\uff09\u3002\u305d\u306e\u3046\u3061\u3082\u3063\u3068\u7c21\u5358\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u306d\u3002\n\n\n\n# \u53c2\u8003\n* [Docker Toolbox](https://www.docker.com/docker-toolbox)\n* [Installation on Windows](http://docs.docker.com/engine/installation/windows/)\n* [Windows 10 + VirtualBox 5.0 + Vagrant 1.7.4 + VCCW 2.18.0 \u3067\u306e\u30a8\u30e9\u30fc\u56de\u907f](http://atachibana.hatenablog.jp/entry/2015/11/28/164944)\n* [Failed to open/create the internal network Vagrant on Windows10](http://stackoverflow.com/questions/33725779/failed-to-open-create-the-internal-network-vagrant-on-windows10)\n* [VirtualBox](https://www.virtualbox.org/wiki/Downloads)\n* [Docker\u306b\u304a\u3051\u308b\u30c7\u30fc\u30bf\u5c02\u7528\u30b3\u30f3\u30c6\u30ca\u3001KVM\u4eee\u60f3\u5316\u74b0\u5883\u304b\u3089\u306e\u79fb\u884c](https://thinkit.co.jp/story/2015/09/29/6385)\n* [docker-backup](https://github.com/osuo/docker-backup)\n", "tags": ["docker", "docker-compose", "docker-machine", "Jenkins"]}