{"context": " More than 1 year has passed since last update.\u203b 3/18 arda 0.13\u5411\u3051\u306b\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\n\n\u30b3\u30fc\u30d2\u30fc\u306f\u3042\u307e\u308a\u597d\u304d\u3067\u306f\u2026\nReact\u306eTutorial\u3092Arda\u3067\u5199\u7d4c\u3057\u3066\u307f\u308b\n\u2191\u524d\u3005\u56de\u306e\u8a18\u4e8b\u3067CoffeeScript\u3092\u4f7f\u3063\u305f\u3051\u3069\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u958b\u767a\u3067JavaScript\u3092\u4f7f\u3044\u3064\u3064\u3001\u66f4\u306bCoffeeScript\u3092\u4f7f\u3046\u306e\u306f\u3061\u3087\u3063\u3068\u2026\u306a\u4eba\u3082\u591a\u3044\u304b\u601d\u3044Babel(ES6)\u3067\u66f8\u304d\u76f4\u3057\u3066\u307f\u305f\u3002\u500b\u4eba\u7684\u306b\u306fCoffeeScript\u3067\u30b5\u30af\u30b5\u30af\u66f8\u304f\u306e\u3082\u60aa\u304f\u306f\u306a\u3044\u3068\u601d\u3046\u3093\u3060\u3051\u3069\u306d\u3002\n\nBabel\u3063\u3066\u306a\u306b\uff1f\n\n\u306a\u3093\u304bPC88\u30b2\u30fc\u30e0\u306e\u30ed\u30b4\u307f\u305f\u3044\u3060\u3002\n\nECMAScript 6\u306e\u30b3\u30fc\u30c9\u3092\u3001ECMAScript 5\u306b\u5909\u63db\u3059\u308bJavaScript\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30e9\n\n\u4ee5\u524d\u306f6to5\u3068\u3044\u3046\u540d\u524d\u3060\u3063\u305f\u3051\u3069\u6700\u8fd1\u5909\u308f\u3063\u305f\u3089\u3057\u3044\u3002\u3053\u308c\u3092\u4f7f\u3048\u3070ES6\u306e\u6587\u6cd5\u3092\u4f7f\u3044\u3064\u3064\u3001\u73fe\u72b6\u306e\u74b0\u5883\u3067\u52d5\u4f5c\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3084\u3063\u3071=>\u3068\u304bclass\u306f\u4f7f\u3044\u305f\u3044\u304b\u3089\u306d\u3002\n\n\u74b0\u5883\u8a2d\u5b9a\ngulp\u3092\u4f7f\u3046\u306e\u3067\u51fa\u756a\u306f\u306a\u3044\u3051\u3069\u3001Babel\u306eCLI\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n> npm install -g babel\n\n\u958b\u767a\u8a00\u8a9e\u3092CoffeeScript\u304b\u3089ES6(Babel)\u3078\u5909\u66f4\u3059\u308b\u306e\u3067gulpfile.js\u3092\u4fee\u6b63\u3059\u308b\u3002\nvar gulp = require('gulp');\nvar babelify = require('babelify');\nvar browserify = require('browserify');\nvar source = require('vinyl-source-stream');\n\ngulp.task('build', function() { \n    return browserify({ \n        entries:['./src/App.jsx'],\n        extensions:['js', 'jsx']\n    })\n    .transform(babelify)\n    .bundle() \n    .pipe(source('bundle.js')) \n    .pipe(gulp.dest('./public'));\n});\n\ngulp.task('default', ['build']);\n\n\u5909\u66f4\u7b87\u6240\u3092\u307f\u3066\u307f\u3088\u3046\u3002\n    return browserify({ \n        entries:['./src/App.jsx'],\n        extensions:['js', 'jsx']\n    })\n\n\u62e1\u5f35\u5b50\u304c.jsx\u306b\u306a\u3063\u3066\u3044\u308b\u306d\u3002\u8a00\u3044\u5fd8\u308c\u3066\u305f\u3051\u3069\u3001Babel\u306fJSX\u3092\u89e3\u91c8\u3067\u304d\u308b\u306e\u3067\u30b3\u30fc\u30c9\u4e2d\u306b\u57cb\u3081\u8fbc\u307f\u307e\u304f\u3063\u305f\u3002\n    .transform(babelify)\n\nBabel(ES6)->ES5\u5909\u63db\u306bbabelify\u3092\u4f7f\u3046\u3002\n> npm install babelify babel --save-dev\n\n\u5fd8\u308c\u305a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002(\u3064\u3044\u3067\u306bbabel\u3082)\n\u6e96\u5099\u306f\u3053\u3093\u306a\u3068\u3053\u308d\u3002\n\nBabel\u3067\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u958b\u59cb\n\u3084\u3063\u3066\u308b\u3053\u3068\u306f\u524d\u56de\u3068\u540c\u3058\u306a\u306e\u3067\u3001\u3071\u3063\u3071\u3068\u30b3\u30fc\u30c9\u3092\u8cbc\u3063\u3066\u3044\u3053\u3046\u3002\n// Comment.jsx\nimport {mixin} from 'arda';\nimport md2react from 'md2react';\n\nvar Comment = React.createClass({\n    mixins: [mixin],\n    render() {\n        return (\n            <div className='comment'>\n                <h2 className='commentAuthor'> \n                    {this.props.author} \n                </h2>\n                { md2react(this.props.children.toString()) }\n            </div>\n        );\n    }\n});\n\nmodule.exports = Comment;\n\narda 0.13\u3067\u306f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f5c\u6210\u306bReact.createClass\u3092\u4f7f\u3046\u3088\u3046\u306b\u306a\u3063\u305f\u3002ES6\u306e\u30af\u30e9\u30b9\u306f\u4f7f\u308f\u306a\u3044\u3002\u89e3\u8aac\u3082\u30d0\u30c3\u30b5\u30ea\u30ab\u30c3\u30c8\nReact.createElement\u3060\u3063\u305f\u7b87\u6240\u306fJSX\u306b\u306a\u3063\u3066\u308b\u3002React\u672c\u5bb6\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u898b\u3066\u3044\u308c\u3070\u3001\u3053\u3063\u3061\u306e\u65b9\u304c\u99b4\u67d3\u3093\u3066\u3044\u308b\u304b\u3082\uff1f\n// CommentList.jsx\nimport {mixin} from 'arda';\nimport Comment from './Comment.jsx';\n\nvar CommentList = React.createClass({\n    mixins: [mixin],\n\n    render() {\n        let commentNodes = this.props.data.map((comment) => (\n                    <Comment author={comment.author}>\n                        {comment.text}\n                    </Comment>\n                )\n        ); \n\n        return (\n                <div className='commentList'> \n                    {commentNodes} \n                </div>\n        );\n    }\n});\n\nmodule.exports = CommentList;\n\n\u89e3\u8aac\u304c\u5fc5\u8981\u306a\u3068\u3053\u308d\u306f\u306a\u3044\u304b\u306a\u3002\n/// CommentForm.jsx\nimport {mixin} from 'arda';\n\nvar CommentForm = React.createClass({\n    mixins: [mixin],\n    render() {\n        return (\n                <form className='commentForm' onSubmit={this.handleSubmit.bind(this)}>\n                    <input type='text' placeholder='Your name' ref='author'/>\n                    <input type='text' placeholder='Say something...' ref='text'/>\n                    <input type='submit' value='Post'/>\n               </form>\n        );\n    },\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let author = React.findDOMNode(this.refs.author).value.trim();\n        let text = React.findDOMNode(this.refs.text).value.trim();\n        if (!author || !text)\n            return;\n\n        this.dispatch('commentSubmit', {author, text});\n\n        React.findDOMNode(this.refs.author).value = '';\n        React.findDOMNode(this.refs.text).value = '';\n    }\n\n});\n\nmodule.exports = CommentForm;\n\n\u3053\u308c\u3082\u3042\u307e\u308a\u5909\u308f\u3089\u305a\u3002\u305f\u3060\u3001\u3053\u3053\u306b\u6ce8\u76ee\u3002\n{author, text}\n\nES6\u3067\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304b\u306a\u304f\u3066\u3082\u3088\u304f\u306a\u3063\u305f\u3002\n{\n    author: author,\n    text: text\n}\n\n// CommentBox.jsx\nimport {mixin} from 'arda';\nimport CommentList from './CommentList.jsx';\nimport CommentForm from './CommentForm.jsx';\n\nvar CommentBox = React.createClass({\n    mixins: [mixin],\n    render() {\n        return (\n            <div className='commentBox'>\n                <h1>Comments</h1>\n                <CommentList data={this.props.data} />\n                <CommentForm />\n            </div>\n      );\n    }\n\n});\n\nmodule.exports = CommentBox;\n\n\u8aac\u660e\u306f\u3044\u3089\u306a\u3044\u304b\u306a\u3002\n// App.jsx\nwindow.React = require('react');\nwindow.Promise = require('bluebird');\nwindow.ReactBootstrap = require('react-bootstrap');\nimport {Context, Router, DefaultLayout, mixin} from 'arda';\nimport CommentBox from './CommentBox.jsx';\nimport request from 'superagent';\n\nvar App = React.createClass({\n    mixins: [mixin],\n    render() {\n        return (\n                <div>\n                    <CommentBox data={ this.props.data } />\n                </div>\n        );\n    }\n});\n\nclass AppContext extends Context {\n    get component() {\n        return App;\n    }\n\n    initState() { return { data:[] }; }\n\n    expandComponentProps(props, state) { return { data: state.data}; }\n\n    loadCommentsFromServer() {\n        request\n            .get(this.props.url)\n            .set({Accept:'application/json'})\n            .end((res)=> this.update( ()=> { return {data:res.body}; }) );\n    }\n\n    delegate(subscribe) {\n        super.delegate();\n\n        subscribe('context:started', ()=> {\n            this.loadCommentsFromServer();\n            setInterval(()=>this.loadCommentsFromServer(), this.props.pollInterval);\n        });\n\n        subscribe('commentSubmit', (comment) => {\n            request\n                .post(this.props.url)\n                .send(comment)\n                .set({Accept:'application/json'})\n                .end((err, res) => { /* \u6700\u65b0\u306esuperagent\u3067\u306f\u7b2c\u4e00\u5f15\u6570\u306berr\u304c\u5fc5\u8981 */\n                    if (res.ok) {\n                        this.update( (s)=> { \n                            return {data:s.data.concat([res.body])};\n                        });\n                    } else {\n                        console.log(res.text);\n                    }\n                });\n        });\n    }\n}\n\nwindow.addEventListener('DOMContentLoaded', ()=> {\n    let router = new Router(DefaultLayout, document.body);\n    router.pushContext(AppContext, {url:'/comments.json', pollInterval:2000});\n});\n\n\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306fclass\u3092\u4f7f\u3048\u308b\u306e\u3067Context\u304b\u3089\u7d99\u627f\u3002\n\u3053\u308c\u3067\u5b8c\u6210\u3002\n> gulp\n\n\u3092\u53e9\u3044\u3066\u3001json-server\u3092\u8d77\u52d5\u3059\u308c\u3070\u52d5\u304f\u306f\u305a\u3002\n\n\u307e\u3068\u3081\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u30b3\u30fc\u30c9\u3092\u30b5\u30af\u30b5\u30af\u66f8\u304d\u305f\u3044\u3051\u3069\u3001\u305d\u306e\u305f\u3081\u306b\u5225\u306e\u8a00\u8a9e\u3092\u4f7f\u3046\u306e\u306f\u3061\u3087\u3063\u3068\u2026\u306a\u3089\u3001Babel\u3092\u4f7f\u3063\u3066\u307f\u308b\u306e\u3082\u3042\u308a\u304b\u3082\u3002\nTypeScript\u3092\u4f7f\u3063\u3066\u3082\u3088\u3044\u3068\u306f\u601d\u3046\u3093\u3060\u3051\u3069\u3001\u753b\u9762\u56de\u308a\u306f\u578b\u3088\u308a\u3082\u624b\u8efd\u3055\u306e\u65b9\u304c\u5b09\u3057\u3044\u304b\u306a\u3063\u3068\u3002\n\u203b 3/18 arda 0.13\u5411\u3051\u306b\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\n\n# \u30b3\u30fc\u30d2\u30fc\u306f\u3042\u307e\u308a\u597d\u304d\u3067\u306f\u2026\n[React\u306eTutorial\u3092Arda\u3067\u5199\u7d4c\u3057\u3066\u307f\u308b](http://qiita.com/akiramei/items/c4a0397c3aadd81f47aa)\n\u2191\u524d\u3005\u56de\u306e\u8a18\u4e8b\u3067CoffeeScript\u3092\u4f7f\u3063\u305f\u3051\u3069\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u958b\u767a\u3067JavaScript\u3092\u4f7f\u3044\u3064\u3064\u3001\u66f4\u306bCoffeeScript\u3092\u4f7f\u3046\u306e\u306f\u3061\u3087\u3063\u3068\u2026\u306a\u4eba\u3082\u591a\u3044\u304b\u601d\u3044Babel(ES6)\u3067\u66f8\u304d\u76f4\u3057\u3066\u307f\u305f\u3002\u500b\u4eba\u7684\u306b\u306fCoffeeScript\u3067\u30b5\u30af\u30b5\u30af\u66f8\u304f\u306e\u3082\u60aa\u304f\u306f\u306a\u3044\u3068\u601d\u3046\u3093\u3060\u3051\u3069\u306d\u3002\n\n# [Babel](https://babeljs.io/)\u3063\u3066\u306a\u306b\uff1f\n![Babel](https://raw.githubusercontent.com/babel/logo/master/logo.png)\n\u306a\u3093\u304bPC88\u30b2\u30fc\u30e0\u306e\u30ed\u30b4\u307f\u305f\u3044\u3060\u3002\n\n>ECMAScript 6\u306e\u30b3\u30fc\u30c9\u3092\u3001ECMAScript 5\u306b\u5909\u63db\u3059\u308bJavaScript\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30e9\n\n\u4ee5\u524d\u306f6to5\u3068\u3044\u3046\u540d\u524d\u3060\u3063\u305f\u3051\u3069\u6700\u8fd1\u5909\u308f\u3063\u305f\u3089\u3057\u3044\u3002\u3053\u308c\u3092\u4f7f\u3048\u3070ES6\u306e\u6587\u6cd5\u3092\u4f7f\u3044\u3064\u3064\u3001\u73fe\u72b6\u306e\u74b0\u5883\u3067\u52d5\u4f5c\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3084\u3063\u3071**=>**\u3068\u304b**class**\u306f\u4f7f\u3044\u305f\u3044\u304b\u3089\u306d\u3002\n\n# \u74b0\u5883\u8a2d\u5b9a\n\ngulp\u3092\u4f7f\u3046\u306e\u3067\u51fa\u756a\u306f\u306a\u3044\u3051\u3069\u3001Babel\u306eCLI\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n```\n> npm install -g babel\n```\n\n\u958b\u767a\u8a00\u8a9e\u3092CoffeeScript\u304b\u3089ES6(Babel)\u3078\u5909\u66f4\u3059\u308b\u306e\u3067gulpfile.js\u3092\u4fee\u6b63\u3059\u308b\u3002\n\n```js\nvar gulp = require('gulp');\nvar babelify = require('babelify');\nvar browserify = require('browserify');\nvar source = require('vinyl-source-stream');\n\ngulp.task('build', function() { \n    return browserify({ \n        entries:['./src/App.jsx'],\n        extensions:['js', 'jsx']\n    })\n    .transform(babelify)\n    .bundle() \n    .pipe(source('bundle.js')) \n    .pipe(gulp.dest('./public'));\n});\n\ngulp.task('default', ['build']);\n```\n\n\u5909\u66f4\u7b87\u6240\u3092\u307f\u3066\u307f\u3088\u3046\u3002\n\n```js\n    return browserify({ \n        entries:['./src/App.jsx'],\n        extensions:['js', 'jsx']\n    })\n```\n\n\u62e1\u5f35\u5b50\u304c.jsx\u306b\u306a\u3063\u3066\u3044\u308b\u306d\u3002\u8a00\u3044\u5fd8\u308c\u3066\u305f\u3051\u3069\u3001Babel\u306fJSX\u3092\u89e3\u91c8\u3067\u304d\u308b\u306e\u3067\u30b3\u30fc\u30c9\u4e2d\u306b\u57cb\u3081\u8fbc\u307f\u307e\u304f\u3063\u305f\u3002\n\n```js\n    .transform(babelify)\n```\n\nBabel(ES6)->ES5\u5909\u63db\u306bbabelify\u3092\u4f7f\u3046\u3002\n\n```\n> npm install babelify babel --save-dev\n```\n\n\u5fd8\u308c\u305a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002(\u3064\u3044\u3067\u306bbabel\u3082)\n\n\u6e96\u5099\u306f\u3053\u3093\u306a\u3068\u3053\u308d\u3002\n\n# Babel\u3067\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u958b\u59cb\n\u3084\u3063\u3066\u308b\u3053\u3068\u306f\u524d\u56de\u3068\u540c\u3058\u306a\u306e\u3067\u3001\u3071\u3063\u3071\u3068\u30b3\u30fc\u30c9\u3092\u8cbc\u3063\u3066\u3044\u3053\u3046\u3002\n\n```js\n// Comment.jsx\nimport {mixin} from 'arda';\nimport md2react from 'md2react';\n\nvar Comment = React.createClass({\n    mixins: [mixin],\n    render() {\n        return (\n            <div className='comment'>\n                <h2 className='commentAuthor'> \n                    {this.props.author} \n                </h2>\n                { md2react(this.props.children.toString()) }\n            </div>\n        );\n    }\n});\n\nmodule.exports = Comment;\n```\n\narda 0.13\u3067\u306f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4f5c\u6210\u306bReact.createClass\u3092\u4f7f\u3046\u3088\u3046\u306b\u306a\u3063\u305f\u3002ES6\u306e\u30af\u30e9\u30b9\u306f\u4f7f\u308f\u306a\u3044\u3002~~\u89e3\u8aac\u3082\u30d0\u30c3\u30b5\u30ea\u30ab\u30c3\u30c8~~\n\nReact.createElement\u3060\u3063\u305f\u7b87\u6240\u306fJSX\u306b\u306a\u3063\u3066\u308b\u3002React\u672c\u5bb6\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u898b\u3066\u3044\u308c\u3070\u3001\u3053\u3063\u3061\u306e\u65b9\u304c\u99b4\u67d3\u3093\u3066\u3044\u308b\u304b\u3082\uff1f\n\n```js\n// CommentList.jsx\nimport {mixin} from 'arda';\nimport Comment from './Comment.jsx';\n\nvar CommentList = React.createClass({\n    mixins: [mixin],\n\n    render() {\n        let commentNodes = this.props.data.map((comment) => (\n                    <Comment author={comment.author}>\n                        {comment.text}\n                    </Comment>\n                )\n        ); \n\n        return (\n                <div className='commentList'> \n                    {commentNodes} \n                </div>\n        );\n    }\n});\n\nmodule.exports = CommentList;\n```\n\n\u89e3\u8aac\u304c\u5fc5\u8981\u306a\u3068\u3053\u308d\u306f\u306a\u3044\u304b\u306a\u3002\n\n```js\n/// CommentForm.jsx\nimport {mixin} from 'arda';\n\nvar CommentForm = React.createClass({\n    mixins: [mixin],\n    render() {\n        return (\n                <form className='commentForm' onSubmit={this.handleSubmit.bind(this)}>\n                    <input type='text' placeholder='Your name' ref='author'/>\n                    <input type='text' placeholder='Say something...' ref='text'/>\n                    <input type='submit' value='Post'/>\n               </form>\n        );\n    },\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let author = React.findDOMNode(this.refs.author).value.trim();\n        let text = React.findDOMNode(this.refs.text).value.trim();\n        if (!author || !text)\n            return;\n\n        this.dispatch('commentSubmit', {author, text});\n\n        React.findDOMNode(this.refs.author).value = '';\n        React.findDOMNode(this.refs.text).value = '';\n    }\n\n});\n\nmodule.exports = CommentForm;\n```\n\n\u3053\u308c\u3082\u3042\u307e\u308a\u5909\u308f\u3089\u305a\u3002\u305f\u3060\u3001\u3053\u3053\u306b\u6ce8\u76ee\u3002\n\n``` js\n{author, text}\n```\n\nES6\u3067\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304b\u306a\u304f\u3066\u3082\u3088\u304f\u306a\u3063\u305f\u3002\n\n```js\n{\n    author: author,\n    text: text\n}\n```\n\n```js\n// CommentBox.jsx\nimport {mixin} from 'arda';\nimport CommentList from './CommentList.jsx';\nimport CommentForm from './CommentForm.jsx';\n\nvar CommentBox = React.createClass({\n    mixins: [mixin],\n    render() {\n        return (\n            <div className='commentBox'>\n                <h1>Comments</h1>\n                <CommentList data={this.props.data} />\n                <CommentForm />\n            </div>\n      );\n    }\n\n});\n\nmodule.exports = CommentBox;\n```\n\n\u8aac\u660e\u306f\u3044\u3089\u306a\u3044\u304b\u306a\u3002\n\n```js\n// App.jsx\nwindow.React = require('react');\nwindow.Promise = require('bluebird');\nwindow.ReactBootstrap = require('react-bootstrap');\nimport {Context, Router, DefaultLayout, mixin} from 'arda';\nimport CommentBox from './CommentBox.jsx';\nimport request from 'superagent';\n\nvar App = React.createClass({\n    mixins: [mixin],\n    render() {\n        return (\n                <div>\n                    <CommentBox data={ this.props.data } />\n                </div>\n        );\n    }\n});\n\nclass AppContext extends Context {\n    get component() {\n        return App;\n    }\n\n    initState() { return { data:[] }; }\n\n    expandComponentProps(props, state) { return { data: state.data}; }\n\n    loadCommentsFromServer() {\n        request\n            .get(this.props.url)\n            .set({Accept:'application/json'})\n            .end((res)=> this.update( ()=> { return {data:res.body}; }) );\n    }\n\n    delegate(subscribe) {\n        super.delegate();\n\n        subscribe('context:started', ()=> {\n            this.loadCommentsFromServer();\n            setInterval(()=>this.loadCommentsFromServer(), this.props.pollInterval);\n        });\n\n        subscribe('commentSubmit', (comment) => {\n            request\n                .post(this.props.url)\n                .send(comment)\n                .set({Accept:'application/json'})\n                .end((err, res) => { /* \u6700\u65b0\u306esuperagent\u3067\u306f\u7b2c\u4e00\u5f15\u6570\u306berr\u304c\u5fc5\u8981 */\n                    if (res.ok) {\n                        this.update( (s)=> { \n                            return {data:s.data.concat([res.body])};\n                        });\n                    } else {\n                        console.log(res.text);\n                    }\n                });\n        });\n    }\n}\n\nwindow.addEventListener('DOMContentLoaded', ()=> {\n    let router = new Router(DefaultLayout, document.body);\n    router.pushContext(AppContext, {url:'/comments.json', pollInterval:2000});\n});\n```\n\n\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306fclass\u3092\u4f7f\u3048\u308b\u306e\u3067Context\u304b\u3089\u7d99\u627f\u3002\n\n\u3053\u308c\u3067\u5b8c\u6210\u3002\n\n```\n> gulp\n```\n\n\u3092\u53e9\u3044\u3066\u3001json-server\u3092\u8d77\u52d5\u3059\u308c\u3070\u52d5\u304f\u306f\u305a\u3002\n\n# \u307e\u3068\u3081\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u30b3\u30fc\u30c9\u3092\u30b5\u30af\u30b5\u30af\u66f8\u304d\u305f\u3044\u3051\u3069\u3001\u305d\u306e\u305f\u3081\u306b\u5225\u306e\u8a00\u8a9e\u3092\u4f7f\u3046\u306e\u306f\u3061\u3087\u3063\u3068\u2026\u306a\u3089\u3001Babel\u3092\u4f7f\u3063\u3066\u307f\u308b\u306e\u3082\u3042\u308a\u304b\u3082\u3002\n\nTypeScript\u3092\u4f7f\u3063\u3066\u3082\u3088\u3044\u3068\u306f\u601d\u3046\u3093\u3060\u3051\u3069\u3001\u753b\u9762\u56de\u308a\u306f\u578b\u3088\u308a\u3082\u624b\u8efd\u3055\u306e\u65b9\u304c\u5b09\u3057\u3044\u304b\u306a\u3063\u3068\u3002\n", "tags": ["es6", "JavaScript", "arda0.13", "reactjs0.13.0"]}