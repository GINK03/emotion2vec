{"context": "\n\n\u307f\u3058\u304b\u304f\u307e\u3068\u3081\nRxJava\u3068Android Data Binding\u3092\u9023\u643a\u3057\u3066MVVM\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u308a\u307e\u3057\u305f\u2192RxProperty Android\n\uff082017/02/09 v3.0.0\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u306b\u4f34\u3044\u7de8\u96c6\uff09\n\n\u306f\u3058\u3081\u306b\nAndroid\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u306e\u9762\u5012\u3055\u304b\u3089\u3001Android\u958b\u767a\u306bRxJava\u3092\u5c0e\u5165\u3059\u308b\u65b9\u304c\u5897\u3048\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u969b\u306bRxJava\u3092\u4f7f\u7528\u3057\u3066\u307f\u308b\u3068\u3001\u975e\u540c\u671f\u51e6\u7406\u306e\u307f\u306a\u3089\u305a\u30a4\u30d9\u30f3\u30c8\u3084\u5404\u5c64\u306eI/F\u306a\u3069\u3001\u3042\u308a\u3068\u3042\u3089\u3086\u308b\u3082\u306e\u3092\u30b9\u30c8\u30ea\u30fc\u30e0\u3068\u3057\u3066\u8868\u73fe\u3057\u305f\u304f\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u306e\u7d50\u679c\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u672b\u5c3e\u306esubscribe\u306f\u307b\u3068\u3093\u3069\u304cView\u64cd\u4f5c\u3068\u306a\u308a\u3001\u30a8\u30df\u30c3\u30c8\u3055\u308c\u305f\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3060\u3051\u306e\u3088\u3046\u306a\u5358\u7d14\u306a\u51e6\u7406\u3092\u7e70\u308a\u8fd4\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u5f53\u7136\u300cio.reactivex.Observable\u306b\u6d41\u308c\u3066\u304d\u305f\u5024\u304c\u305d\u306e\u307e\u307eView\u306b\u53cd\u6620\u3055\u308c\u306a\u3044\u304b\u306a\u300d\u3068\u306e\u767a\u60f3\u304c\u751f\u3058\u307e\u3059\u304c\u3001Android Data Binding\u3067\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u3046\u306b\u306fObservableField\u3092\u4ecb\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001io.reactivex.Observable\u3068ObservableField\u3092\u3088\u3057\u306a\u306b\u7e4b\u304e\u3001\u53cc\u65b9\u5411\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u5b9f\u73fe\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3001RxProperty Android\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\nRx.NET\u306e\u4f7f\u3044\u624b\u306a\u3089\u3070\u4e00\u5ea6\u306f\u805e\u3044\u305f\u3053\u3068\u306e\u3042\u308bMVVM\u30e9\u30a4\u30d6\u30e9\u30ea\u3001ReactiveProperty\u3068\u540c\u69d8\u306e\u6a5f\u80fd\u30fb\u4f7f\u3044\u52dd\u624b\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3092\u76ee\u6a19\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4f7f\u3044\u65b9\nbuild.gradle\u306e\u8a18\u8ff0\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3002\n\napp/build.gradle\nrepositories {\n    maven { url \"https://jitpack.io\" }\n}\n\ndependencies {\n    // \u672c\u4f53\n    compile 'com.github.k-kagurazaka.rx-property-android:rx-property:3.0.0'\n\n    // Kotlin\u3067\u3059\u3063\u304d\u308a\u66f8\u304f\u305f\u3081\u306e\u62e1\u5f35\u95a2\u6570\u96c6\n    compile 'com.github.k-kagurazaka.rx-property-android:rx-property-kotlin:3.0.0'\n}\n\n\n\u307e\u305a\u306fViewModel\u7528\u306e\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nView\u306e\u72b6\u614b\u3092\u53cd\u6620\u3059\u308b\u5909\u6570\u304cRxProperty\u3067\u3001\u30e6\u30fc\u30b6\u64cd\u4f5c\u3092\u62bd\u8c61\u5316\u3057\u305f\u30b3\u30de\u30f3\u30c9\u304cRxCommand\u306b\u306a\u308a\u307e\u3059\u3002\n\nViewModel.java\npublic class ViewModel {\n  public final RxProperty<String> input; // \u53cc\u65b9\u5411 (RxProperty <-> View)\n  public final ReadOnlyRxProperty<String> output; // \u5358\u65b9\u5411 (RxProperty -> View)\n  public final RxCommand<Nothing> command; // \u30b3\u30de\u30f3\u30c9\n\n  public JavaViewModel() {\n    // \u521d\u671f\u5024\u304c\u7a7a\u6587\u5b57\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3002\u7a7a\u6587\u5b57\u7981\u6b62\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u4ed8\u304d\u3002\n    input = new RxProperty<>(\"\")\n        .setValidator(it -> TextUtils.isEmpty(it) ? \"Text must not be empty!\" : null);\n\n    // input\u306b\u5165\u3063\u3066\u3044\u308b\u6587\u5b57\u5217\u3092\u5927\u6587\u5b57\u5316\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\n    output = new ReadOnlyRxProperty<>(\n        input.map(it -> it == null ? \"\" : it.toUpperCase())\n    );\n\n    // input\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u30d1\u30b9\u3057\u3066\u3044\u308b\u5834\u5408\u306e\u307f\u6709\u52b9\u306b\u306a\u308b\u30b3\u30de\u30f3\u30c9\n    command = new RxCommand<>(input.onHasErrorsChanged().map(it -> !it));\n    // \u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u3089input\u306e\u6587\u5b57\u3092\u5909\u3048\u308b\n    command.subscribe(it -> { input.set(\"clicked!\"); });\n  }\n\n\n\u6b21\u306b\u3053\u306eViewModel\u30af\u30e9\u30b9\u3068\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308bView\u7528\u306eXML\u3092\u4f5c\u308a\u307e\u3059\u3002\n@={}\u8a18\u6cd5\u306b\u3088\u308b\u53cc\u65b9\u5411\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3068\u3001@{}\u8a18\u6cd5\u306b\u3088\u308b\u5358\u65b9\u5411\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306e\u4e21\u65b9\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\nactivity_main.xml\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n    <data>\n        <variable name=\"viewModel\" type=\"ViewModel\" />\n    </data>\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\">\n\n        <EditText\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:inputType=\"text\"\n            android:text=\"@={viewModel.input.value}\" /> <!-- \u53cc\u65b9\u5411\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0 -->\n\n        <TextView\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"@{viewModel.output.value}\" /> <!-- \u5358\u65b9\u5411\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0 -->\n\n        <Button\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Is not empty?\"\n            app:rxCommandOnClick=\"@{viewModel.command}\" /> <!-- \u30b3\u30de\u30f3\u30c9\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0 -->\n    </LinearLayout>\n</layout>\n\n\n\u6700\u5f8c\u306bDataBindingUtil\u3092\u4f7f\u3063\u3066\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\nMainActivity.java\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    ActivityMainBinding binding = DataBindingUtil.setContentView(this, R.layout.activity_main);\n    binding.setViewModel(new ViewModel());\n  }\n\n\n\n\u52d5\u4f5c\u3055\u305b\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u51fa\u529b\u7528\u306eTextView\u306e\u4e2d\u8eab\u3068Button\u306eenabled\u304c\u5165\u529b\u7528\u306eEditText\u306e\u5909\u5316\u306b\u8ffd\u5f93\u3057\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n\u524d\u8ff0\u306e\u4f8b\u306b\u3082\u51fa\u3066\u304d\u307e\u3057\u305f\u304c\u3001RxProperty#setValidator\u306b\u3088\u3063\u3066\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u6a5f\u80fd\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\npublic final RxProperty<String> input = new RxProperty<>(\"\")\n        .setValidator(it -> TextUtils.isEmpty(it) ? \"Text must not be empty!\" : null);\n\n\u307e\u305f\u3001TextInputLayout\u3092\u4f7f\u7528\u3057\u305f\u30a8\u30e9\u30fc\u8868\u793a\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n<android.support.design.widget.TextInputLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    app:error=\"@{viewModel.input.error}\"\n    app:errorEnabled=\"@{viewModel.input.hasError}\">\n\n    <EditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:inputType=\"text\"\n        android:text=\"@={viewModel.input.value}\"/>\n</android.support.design.widget.TextInputLayout>\n\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306fObservable\u3067\u53d6\u5f97\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u308c\u3092RxProperty\u5316\u3059\u308c\u3070\u3088\u308a\u67d4\u8edf\u306a\u30a8\u30e9\u30fc\u8868\u793a\u3082\u53ef\u80fd\u3067\u3059\u3002\n\nRxCommand\u3068\u30c8\u30ea\u30ac\u30fc\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\nRxCommand\u306f\u6a19\u6e96\u3060\u3068View#onClick\u3068\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3057\u304b\u63d0\u4f9b\u3057\u3066\u3044\u307e\u305b\u3093\uff08app:rxCommandOnClick\uff09\u3002\n\u4efb\u610f\u306e\u30d3\u30e5\u30fc\u30a4\u30d9\u30f3\u30c8\u3092RxCommand\u306b\u7d10\u4ed8\u3051\u308b\u306b\u306f\u3001\u30ab\u30b9\u30bf\u30e0BindingAdapter\u3092\u8a18\u8ff0\u3059\u308b\u304b\u3001\u30c8\u30ea\u30ac\u30fc\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\nRxCommand#bindTrigger\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u30b3\u30de\u30f3\u30c9\u3092\u30ad\u30c3\u30af\u3059\u308bObservable\u3092\u6307\u5b9a\u3067\u304d\u308b\u306e\u3067\u3001RxBinding\u3092\u4f75\u7528\u3059\u308b\u3053\u3068\u3067\u30a4\u30d9\u30f3\u30c8Observable\u3092RxCommand\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002\n// R.id.some_menu\u306e\u30e1\u30cb\u30e5\u30fc\u30a2\u30a4\u30c6\u30e0\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u6642\u306bsomeMenuCommand\u3092\u5b9f\u884c\nviewModel.someMenuCommand.bindTrigger(RxMenuItem.clicks(menu.findItem(R.id.some_menu)));\n\n\nKotlin\u3067\u66f8\u3053\u3046\nKotlin\u7528\u306e\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u30e2\u30b8\u30e5\u30fc\u30eb\u3082\u5225\u9014\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u306e\u304a\u304b\u3052\u3067\u672c\u5bb6ReactiveProperty\u3068\u540c\u3058\u3088\u3046\u306a\u8a18\u8ff0\u304c\u53ef\u80fd\u3067\u3059\u3002\n\nViewModel.kt\nclass ViewModel {\n    val input = RxProperty(\"\")\n            .setValidator { if (TextUtils.isEmpty(it)) \"Text must not be empty!\" else null }\n\n    val output = input.map { it?.toUpperCase() ?: \"\" }\n            .toReadOnlyRxProperty()\n\n    val command = input.onHasErrorsChanged()\n            .map { !it }\n            .toRxCommand<Nothing>()\n}\n\n\n\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u306d\uff01\n\nFat Activity\u3092\u3076\u3063\u6f70\u305b\uff01\nMVVM\u306e\u826f\u3044\u3068\u3053\u308d\u306f\u3001\u30d3\u30e5\u30fc\u81ea\u8eab\u3068\u305d\u306e\u72b6\u614b\u3092\u5207\u308a\u96e2\u3057\u3066\u7ba1\u7406\u3067\u304d\u308b\u3053\u3068\u304b\u3089\u3001\u30d3\u30e5\u30fc\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u3042\u308bActivity\u306e\u80a5\u5927\u5316\u3092\u9632\u3052\u308b\u70b9\u306b\u3042\u308a\u307e\u3059\u3002\nTodoMVC\u3092\u5b9f\u88c5\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u306eActivity\u306f\u4ee5\u4e0b\u3067\u5168\u3066\u3067\u3059\u3002\n\nTodoActivity.kt\nclass TodoActivity : AppCompatActivity() {\n    private lateinit var viewModel: TodoViewModel\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        viewModel = TodoViewModel()\n        val binding = DataBindingUtil.setContentView<ActivityTodoBinding>(this, R.layout.activity_todo)\n        binding.setVariable(BR.todoVM, viewModel)\n    }\n\n    override fun onDestroy() {\n        viewModel.unsubscribe()\n        super.onDestroy()\n    }\n\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\n        menuInflater.inflate(R.menu.menu_todo, menu)\n        viewModel.deleteDoneCommand.bindTrigger(RxMenuItem.clicks(menu.findItem(R.id.clear_done)))\n        return true\n    }\n}\n\n\nView\u3068ViewModel\u306e\u751f\u6210\u304a\u3088\u3073\u4e00\u90e8\u30b3\u30de\u30f3\u30c9\u306e\u30c8\u30ea\u30ac\u30fc\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u610f\u5916\u306b\u5fc5\u8981\u306a\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u304a\u308f\u308a\u306b\nRxProperty Android\u3092\u4f7f\u3048\u3070\u3001RxJava\u306e\u4e16\u754c\u304b\u3089Android Data Binding\u306e\u4e16\u754c\u3078\u306e\u6a4b\u6e21\u3057\u3092\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u306a\u3069\u3092\u3061\u3083\u3093\u3068\u3084\u3063\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u3082\u3042\u308b\u306e\u3067\u3001\u662f\u975e\u4e00\u5ea6\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002\n## \u307f\u3058\u304b\u304f\u307e\u3068\u3081\n\nRxJava\u3068Android Data Binding\u3092\u9023\u643a\u3057\u3066MVVM\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u308a\u307e\u3057\u305f\u2192[RxProperty Android](https://github.com/k-kagurazaka/rx-property-android)\n\uff082017/02/09 v3.0.0\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u306b\u4f34\u3044\u7de8\u96c6\uff09\n\n\n## \u306f\u3058\u3081\u306b\n\nAndroid\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u306e\u9762\u5012\u3055\u304b\u3089\u3001Android\u958b\u767a\u306bRxJava\u3092\u5c0e\u5165\u3059\u308b\u65b9\u304c\u5897\u3048\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u969b\u306bRxJava\u3092\u4f7f\u7528\u3057\u3066\u307f\u308b\u3068\u3001\u975e\u540c\u671f\u51e6\u7406\u306e\u307f\u306a\u3089\u305a\u30a4\u30d9\u30f3\u30c8\u3084\u5404\u5c64\u306eI/F\u306a\u3069\u3001\u3042\u308a\u3068\u3042\u3089\u3086\u308b\u3082\u306e\u3092\u30b9\u30c8\u30ea\u30fc\u30e0\u3068\u3057\u3066\u8868\u73fe\u3057\u305f\u304f\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u306e\u7d50\u679c\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u672b\u5c3e\u306e`subscribe`\u306f\u307b\u3068\u3093\u3069\u304cView\u64cd\u4f5c\u3068\u306a\u308a\u3001\u30a8\u30df\u30c3\u30c8\u3055\u308c\u305f\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3060\u3051\u306e\u3088\u3046\u306a\u5358\u7d14\u306a\u51e6\u7406\u3092\u7e70\u308a\u8fd4\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5f53\u7136\u300c`io.reactivex.Observable`\u306b\u6d41\u308c\u3066\u304d\u305f\u5024\u304c\u305d\u306e\u307e\u307eView\u306b\u53cd\u6620\u3055\u308c\u306a\u3044\u304b\u306a\u300d\u3068\u306e\u767a\u60f3\u304c\u751f\u3058\u307e\u3059\u304c\u3001Android Data Binding\u3067\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u3046\u306b\u306f`ObservableField`\u3092\u4ecb\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001`io.reactivex.Observable`\u3068`ObservableField`\u3092\u3088\u3057\u306a\u306b\u7e4b\u304e\u3001\u53cc\u65b9\u5411\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u5b9f\u73fe\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3001[RxProperty Android](https://github.com/k-kagurazaka/rx-property-android)\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\nRx.NET\u306e\u4f7f\u3044\u624b\u306a\u3089\u3070\u4e00\u5ea6\u306f\u805e\u3044\u305f\u3053\u3068\u306e\u3042\u308bMVVM\u30e9\u30a4\u30d6\u30e9\u30ea\u3001[ReactiveProperty](https://github.com/runceel/ReactiveProperty)\u3068\u540c\u69d8\u306e\u6a5f\u80fd\u30fb\u4f7f\u3044\u52dd\u624b\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3092\u76ee\u6a19\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n## \u4f7f\u3044\u65b9\n\nbuild.gradle\u306e\u8a18\u8ff0\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3002\n\n```groovy:app/build.gradle\nrepositories {\n    maven { url \"https://jitpack.io\" }\n}\n\ndependencies {\n    // \u672c\u4f53\n    compile 'com.github.k-kagurazaka.rx-property-android:rx-property:3.0.0'\n\n    // Kotlin\u3067\u3059\u3063\u304d\u308a\u66f8\u304f\u305f\u3081\u306e\u62e1\u5f35\u95a2\u6570\u96c6\n    compile 'com.github.k-kagurazaka.rx-property-android:rx-property-kotlin:3.0.0'\n}\n```\n\n\u307e\u305a\u306fViewModel\u7528\u306e\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nView\u306e\u72b6\u614b\u3092\u53cd\u6620\u3059\u308b\u5909\u6570\u304c`RxProperty`\u3067\u3001\u30e6\u30fc\u30b6\u64cd\u4f5c\u3092\u62bd\u8c61\u5316\u3057\u305f\u30b3\u30de\u30f3\u30c9\u304c`RxCommand`\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java:ViewModel.java\npublic class ViewModel {\n  public final RxProperty<String> input; // \u53cc\u65b9\u5411 (RxProperty <-> View)\n  public final ReadOnlyRxProperty<String> output; // \u5358\u65b9\u5411 (RxProperty -> View)\n  public final RxCommand<Nothing> command; // \u30b3\u30de\u30f3\u30c9\n\n  public JavaViewModel() {\n    // \u521d\u671f\u5024\u304c\u7a7a\u6587\u5b57\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3002\u7a7a\u6587\u5b57\u7981\u6b62\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u4ed8\u304d\u3002\n    input = new RxProperty<>(\"\")\n        .setValidator(it -> TextUtils.isEmpty(it) ? \"Text must not be empty!\" : null);\n\n    // input\u306b\u5165\u3063\u3066\u3044\u308b\u6587\u5b57\u5217\u3092\u5927\u6587\u5b57\u5316\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\n    output = new ReadOnlyRxProperty<>(\n        input.map(it -> it == null ? \"\" : it.toUpperCase())\n    );\n\n    // input\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u30d1\u30b9\u3057\u3066\u3044\u308b\u5834\u5408\u306e\u307f\u6709\u52b9\u306b\u306a\u308b\u30b3\u30de\u30f3\u30c9\n    command = new RxCommand<>(input.onHasErrorsChanged().map(it -> !it));\n    // \u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u3089input\u306e\u6587\u5b57\u3092\u5909\u3048\u308b\n    command.subscribe(it -> { input.set(\"clicked!\"); });\n  }\n```\n\n\u6b21\u306b\u3053\u306eViewModel\u30af\u30e9\u30b9\u3068\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308bView\u7528\u306eXML\u3092\u4f5c\u308a\u307e\u3059\u3002\n`@={}`\u8a18\u6cd5\u306b\u3088\u308b\u53cc\u65b9\u5411\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3068\u3001`@{}`\u8a18\u6cd5\u306b\u3088\u308b\u5358\u65b9\u5411\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306e\u4e21\u65b9\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n```xml:activity_main.xml\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n    <data>\n        <variable name=\"viewModel\" type=\"ViewModel\" />\n    </data>\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\">\n\n        <EditText\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:inputType=\"text\"\n            android:text=\"@={viewModel.input.value}\" /> <!-- \u53cc\u65b9\u5411\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0 -->\n\n        <TextView\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"@{viewModel.output.value}\" /> <!-- \u5358\u65b9\u5411\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0 -->\n\n        <Button\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Is not empty?\"\n            app:rxCommandOnClick=\"@{viewModel.command}\" /> <!-- \u30b3\u30de\u30f3\u30c9\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0 -->\n    </LinearLayout>\n</layout>\n```\n\n\u6700\u5f8c\u306b`DataBindingUtil`\u3092\u4f7f\u3063\u3066\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```java:MainActivity.java\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    ActivityMainBinding binding = DataBindingUtil.setContentView(this, R.layout.activity_main);\n    binding.setViewModel(new ViewModel());\n  }\n\n```\n\n\u52d5\u4f5c\u3055\u305b\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n![Demo](https://raw.githubusercontent.com/k-kagurazaka/rx-property-android/master/images/demo.gif)\n\n\u51fa\u529b\u7528\u306e`TextView`\u306e\u4e2d\u8eab\u3068`Button`\u306e`enabled`\u304c\u5165\u529b\u7528\u306e`EditText`\u306e\u5909\u5316\u306b\u8ffd\u5f93\u3057\u3066\u3044\u307e\u3059\u306d\u3002\n\n\n## \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n\n\u524d\u8ff0\u306e\u4f8b\u306b\u3082\u51fa\u3066\u304d\u307e\u3057\u305f\u304c\u3001`RxProperty#setValidator`\u306b\u3088\u3063\u3066\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u6a5f\u80fd\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java\npublic final RxProperty<String> input = new RxProperty<>(\"\")\n        .setValidator(it -> TextUtils.isEmpty(it) ? \"Text must not be empty!\" : null);\n```\n\n\u307e\u305f\u3001`TextInputLayout`\u3092\u4f7f\u7528\u3057\u305f\u30a8\u30e9\u30fc\u8868\u793a\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n```xml\n<android.support.design.widget.TextInputLayout\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    app:error=\"@{viewModel.input.error}\"\n    app:errorEnabled=\"@{viewModel.input.hasError}\">\n\n    <EditText\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:inputType=\"text\"\n        android:text=\"@={viewModel.input.value}\"/>\n</android.support.design.widget.TextInputLayout>\n```\n\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306f`Observable`\u3067\u53d6\u5f97\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u308c\u3092`RxProperty`\u5316\u3059\u308c\u3070\u3088\u308a\u67d4\u8edf\u306a\u30a8\u30e9\u30fc\u8868\u793a\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n\n## `RxCommand`\u3068\u30c8\u30ea\u30ac\u30fc\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\n\n`RxCommand`\u306f\u6a19\u6e96\u3060\u3068`View#onClick`\u3068\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3057\u304b\u63d0\u4f9b\u3057\u3066\u3044\u307e\u305b\u3093\uff08`app:rxCommandOnClick`\uff09\u3002\n\u4efb\u610f\u306e\u30d3\u30e5\u30fc\u30a4\u30d9\u30f3\u30c8\u3092`RxCommand`\u306b\u7d10\u4ed8\u3051\u308b\u306b\u306f\u3001\u30ab\u30b9\u30bf\u30e0`BindingAdapter`\u3092\u8a18\u8ff0\u3059\u308b\u304b\u3001\u30c8\u30ea\u30ac\u30fc\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n`RxCommand#bindTrigger`\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u30b3\u30de\u30f3\u30c9\u3092\u30ad\u30c3\u30af\u3059\u308b`Observable`\u3092\u6307\u5b9a\u3067\u304d\u308b\u306e\u3067\u3001[RxBinding](https://github.com/JakeWharton/RxBinding)\u3092\u4f75\u7528\u3059\u308b\u3053\u3068\u3067\u30a4\u30d9\u30f3\u30c8`Observable`\u3092`RxCommand`\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002\n\n```java\n// R.id.some_menu\u306e\u30e1\u30cb\u30e5\u30fc\u30a2\u30a4\u30c6\u30e0\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u6642\u306bsomeMenuCommand\u3092\u5b9f\u884c\nviewModel.someMenuCommand.bindTrigger(RxMenuItem.clicks(menu.findItem(R.id.some_menu)));\n```\n\n\n## Kotlin\u3067\u66f8\u3053\u3046\n\nKotlin\u7528\u306e\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u30e2\u30b8\u30e5\u30fc\u30eb\u3082\u5225\u9014\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u306e\u304a\u304b\u3052\u3067\u672c\u5bb6[ReactiveProperty](https://github.com/runceel/ReactiveProperty)\u3068\u540c\u3058\u3088\u3046\u306a\u8a18\u8ff0\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n```kotlin:ViewModel.kt\nclass ViewModel {\n    val input = RxProperty(\"\")\n            .setValidator { if (TextUtils.isEmpty(it)) \"Text must not be empty!\" else null }\n\n    val output = input.map { it?.toUpperCase() ?: \"\" }\n            .toReadOnlyRxProperty()\n\n    val command = input.onHasErrorsChanged()\n            .map { !it }\n            .toRxCommand<Nothing>()\n}\n```\n\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u306d\uff01\n\n\n## Fat Activity\u3092\u3076\u3063\u6f70\u305b\uff01\n\nMVVM\u306e\u826f\u3044\u3068\u3053\u308d\u306f\u3001\u30d3\u30e5\u30fc\u81ea\u8eab\u3068\u305d\u306e\u72b6\u614b\u3092\u5207\u308a\u96e2\u3057\u3066\u7ba1\u7406\u3067\u304d\u308b\u3053\u3068\u304b\u3089\u3001\u30d3\u30e5\u30fc\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u3042\u308bActivity\u306e\u80a5\u5927\u5316\u3092\u9632\u3052\u308b\u70b9\u306b\u3042\u308a\u307e\u3059\u3002\n[TodoMVC](http://todomvc.com/)\u3092\u5b9f\u88c5\u3057\u305f[\u30b5\u30f3\u30d7\u30eb](https://github.com/k-kagurazaka/rx-property-android/tree/master/sample/src/main/kotlin/jp/keita/kagurazaka/rxproperty/sample/todo)\u306e`Activity`\u306f\u4ee5\u4e0b\u3067\u5168\u3066\u3067\u3059\u3002\n\n```kotlin:TodoActivity.kt\nclass TodoActivity : AppCompatActivity() {\n    private lateinit var viewModel: TodoViewModel\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        viewModel = TodoViewModel()\n        val binding = DataBindingUtil.setContentView<ActivityTodoBinding>(this, R.layout.activity_todo)\n        binding.setVariable(BR.todoVM, viewModel)\n    }\n\n    override fun onDestroy() {\n        viewModel.unsubscribe()\n        super.onDestroy()\n    }\n\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\n        menuInflater.inflate(R.menu.menu_todo, menu)\n        viewModel.deleteDoneCommand.bindTrigger(RxMenuItem.clicks(menu.findItem(R.id.clear_done)))\n        return true\n    }\n}\n````\n\nView\u3068ViewModel\u306e\u751f\u6210\u304a\u3088\u3073\u4e00\u90e8\u30b3\u30de\u30f3\u30c9\u306e\u30c8\u30ea\u30ac\u30fc\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u610f\u5916\u306b\u5fc5\u8981\u306a\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\n## \u304a\u308f\u308a\u306b\n\n[RxProperty Android](https://github.com/k-kagurazaka/rx-property-android)\u3092\u4f7f\u3048\u3070\u3001RxJava\u306e\u4e16\u754c\u304b\u3089Android Data Binding\u306e\u4e16\u754c\u3078\u306e\u6a4b\u6e21\u3057\u3092\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u306a\u3069\u3092\u3061\u3083\u3093\u3068\u3084\u3063\u3066\u3044\u308b[\u30b5\u30f3\u30d7\u30eb](https://github.com/k-kagurazaka/rx-property-android/tree/master/sample)\u3082\u3042\u308b\u306e\u3067\u3001\u662f\u975e\u4e00\u5ea6\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002\n", "tags": ["Android", "RxJava", "DataBinding"]}