{"context": "\n\n\u4f5c\u3063\u305f\u3082\u306e\n\nhttps://itunes.apple.com/jp/app/ikasukoa/id1097968132?l=ja&ls=1&mt=8\n\u3053\u3093\u306a\u611f\u3058\u3067\u8a66\u5408\u7d42\u4e86\u6642\u306b\u8a66\u5408\u7d50\u679c\u3092\u5224\u5b9a\u3057\u3066\u8a18\u9332\u3057\u3066\u304f\u308c\u308b\u30a2\u30d7\u30ea\n\niPhone\u3092\uff13\u811a\u306b\u56fa\u5b9a\u3057\u3066\u30ab\u30e1\u30e9\u3067\u30b2\u30fc\u30e0\u753b\u9762\u3092\u64ae\u5f71\u3057\u3066\u3044\u307e\u3059\n\n\n\u306a\u3093\u3067\u4f5c\u3063\u305f\u304b\n\u3061\u3087\u3046\u3069OpenCV\u306e\u52c9\u5f37\u3092\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u3044\u308d\u3044\u308d\u8abf\u3079\u3066\u307f\u308b\u3068\nHDMI\u30ad\u30e3\u30d7\u30c1\u30e3\uff08 https://github.com/hasegaw/IkaLog/blob/master/doc/IkaUI.md \uff09\nRaspberry Pi\uff08 http://hogesuke.hateblo.jp/entry/ikashot \uff09\n\u306a\u3069\u3001OpenCV\u3067\u30b9\u30d7\u30e9\u30c8\u30a5\u30fc\u30f3\u306e\u8a66\u5408\u7d50\u679c\u3092\u8a18\u9332\u3059\u308b\u3082\u306e\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\n\u3067\u3082\u6b63\u76f4\u6a5f\u6750\u7528\u610f\u3059\u308b\u306e\u9762\u5012\u3060\u3057\u3001\u30b9\u30de\u30db\u3067\u3044\u3044\u3068\u601d\u3063\u305f\u306e\u3068\u3001\u5e38\u306b\u30b9\u30c8\u30a2\u306b\u3042\u308b\u3082\u306e\u306f\u624b\u66f8\u304d\u3067\u8a18\u9332\u3059\u308b\u7cfb\u306e\u30a2\u30d7\u30ea\u3057\u304b\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\n\u30b9\u30d7\u30e9\u30c8\u30a5\u30fc\u30f3\u306e\u65ec\u3092\u9003\u3057\u3061\u3083\u3063\u3066\u308b\u611f\u306f\u3042\u308b\u3051\u3069\u3001\u3064\u3044\u3067\u306a\u306e\u3067\u3002\n\n\u4ed5\u7d44\u307f\n\n\n\u4f5c\u308a\u65b9\nRaspberry Pi\u7248\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3001\u4f5c\u308b\u306e\u5927\u5909\u306acascade xml\u3082github\u306b\u516c\u958b\u3055\u308c\u3066\u305f\u306e\u3067\u4f7f\u308f\u305b\u3066\u3082\u3089\u3063\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/hogesuke/ika-camera/tree/master/cascade\n\nSwift\u304b\u3089OpenCV\u3092\u6271\u3046\u65b9\u6cd5\nCocoaPods\u3067OpenCV\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\npodfile\nplatform :ios, '8.0'\npod 'OpenCV'\n\n\nSwift\u304b\u3089\u76f4\u63a5OpenCV\u306f\u52d5\u304b\u305b\u305a\u3001C++\u3067\u66f8\u304b\u306a\u304d\u3083\u3060\u3081\u306a\u306e\u3067\u3059\n\u306a\u306e\u3067header\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u307e\u3059\n#import <Foundation/Foundation.h>\n#import <UIKit/UIKit.h>\n\n@interface Detector: NSObject\n\n- (id)init;\n- (NSString *)recognize:(UIImage *)image;\n\n@end\n\n\u305d\u3057\u3066\u3053\u3063\u3061\u304cOpenCV\u3092\u6271\u3046\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\nUIImage\u3092\u6e21\u3057\u3066\u3001OpenCV\u3067\u6271\u3046\u30c7\u30fc\u30bf\u69cb\u9020\u306ecv::Mat\u306b\u5909\u63db\u3002\n\u305d\u3057\u3066ika_result_win\u3068ika_result_lose\u305d\u308c\u305e\u308c\u3067\u691c\u51fa\u3055\u305b\u307e\u3059\u3002\n\u52dd\u6557\u3092\u6587\u5b57\u5217\u3001\u8a8d\u8b58\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u7a7a\u6587\u5b57\u3067\u8fd4\u3059\u3088\u3046\u306b\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\n#import <Foundation/Foundation.h>\n#import \"ikascore-Bridging-Header.h\"\n#import <opencv2/opencv.hpp>\n\n@interface Detector()\n{\n    cv::CascadeClassifier cascadeWin;\n    cv::CascadeClassifier cascadeLose;\n}\n@end\n\n@implementation Detector: NSObject\n\n- (id)init {\n    self = [super init];\n\n    // \u5206\u985e\u5668\u306e\u8aad\u307f\u8fbc\u307f\n    NSBundle *bundle = [NSBundle mainBundle];\n    NSString *pathWin = [bundle pathForResource:@\"ika_result_win\" ofType:@\"xml\"];\n    NSString *pathLose = [bundle pathForResource:@\"ika_result_lose\" ofType:@\"xml\"];\n    std::string cascadeNameWin = (char *)[pathWin UTF8String];\n    std::string cascadeNameLose = (char *)[pathLose UTF8String];\n\n    if(!cascadeWin.load(cascadeNameWin) || !cascadeLose.load(cascadeNameLose)) {\n        return nil;\n    }\n\n    return self;\n}\n\n- (NSString *)recognize:(UIImage *)image {\n    // UIImage -> cv::Mat\u5909\u63db\n    CGColorSpaceRef colorSpace = CGImageGetColorSpace(image.CGImage);\n    CGFloat cols = image.size.width;\n    CGFloat rows = image.size.height;\n\n    cv::Mat mat(rows, cols, CV_8UC4);\n\n    CGContextRef contextRef = CGBitmapContextCreate(mat.data,\n                                                    cols,\n                                                    rows,\n                                                    8,\n                                                    mat.step[0],\n                                                    colorSpace,\n                                                    kCGImageAlphaNoneSkipLast |\n                                                    kCGBitmapByteOrderDefault);\n\n    CGContextDrawImage(contextRef, CGRectMake(0, 0, cols, rows), image.CGImage);\n    CGContextRelease(contextRef);\n\n\n    std::vector<cv::Rect> res;\n\n    // Win\u691c\u51fa\n    cascadeWin.detectMultiScale(mat, res,\n                             1.1, 2,\n                             CV_HAAR_SCALE_IMAGE,\n                             cv::Size(50, 50));\n    std::vector<cv::Rect>::const_iterator w = res.begin();\n    if (w != res.end()) {\n        return @\"win\";\n    }\n\n    // Lose\u691c\u51fa\n    cascadeLose.detectMultiScale(mat, res,\n                             1.1, 2,\n                             CV_HAAR_SCALE_IMAGE,\n                             cv::Size(50, 50));\n    std::vector<cv::Rect>::const_iterator r = res.begin();\n    if (r != res.end()) {\n        return @\"lose\";\n    }\n\n    // \u691c\u51fa\u3055\u308c\u306a\u3044\n    return @\"\";\n}\n\n@end\n\n\u3042\u3068\u306fSwift\u5074\u3067\u30ab\u30e1\u30e9\u304b\u3089\u4f5c\u3063\u305fUIImage\u3092\u968f\u6642\u6e21\u3059\u611f\u3058\u3067\u3059\u3002\n// \u9854\u691c\u51fa\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\nlet detector:Detector = Detector()\nlet res:NSString = detector.recognize(image)\n\nif (res == \"win\") {\n  // \u52dd\u3061\n} else if (res == \"lose\") {\n  // \u8ca0\u3051\n} else {\n  // \u8a66\u5408\u4e2d\n}\n\n\n\u6c17\u3092\u3064\u3051\u308b\u3053\u3068\u308d\n\u304b\u306a\u308a\u9ad8\u8ca0\u8377\u3067\u52d5\u304b\u3057\u3063\u3071\u306a\u3057\u306b\u306a\u308b\u306e\u3067\u7aef\u672b\u304c\u71b1\u304f\u306a\u308a\u307e\u3059\u3002\n\u6700\u521d\u3084\u3063\u305f\u6642\u306b\u71b1\u3067\u96fb\u6e90\u843d\u3061\u305f\u306e\u3067\u5c11\u3057\u5bfe\u7b56\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u30ab\u30e1\u30e9\u306e\u89e3\u50cf\u5ea6\u304c\u9ad8\u3044\u3068\u691c\u51fa\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u5c11\u3057\u843d\u3068\u3057\u3066\u304a\u304f\nmySession = AVCaptureSession()\nmySession.sessionPreset = AVCaptureSessionPresetMedium\n\n\u9045\u308c\u3066\u304d\u305f\u30d5\u30ec\u30fc\u30e0\u306f\u7121\u8996\u3059\u308b\nmyOutput = AVCaptureVideoDataOutput()\nmyOutput.alwaysDiscardsLateVideoFrames = true\n\n\u8a66\u5408\u7d42\u4e86\u5f8c\u3057\u3070\u3089\u304f\u306f\u30a4\u30f3\u30bf\u30fc\u30d0\u30eb\u306a\u306e\u3067\u7aef\u672b\u3092\u4f11\u307e\u305b\u308b\nNSTimer.scheduledTimerWithTimeInterval(60.0, target: self, selector:#selector(restore), userInfo: nil, repeats: false)\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u51fa\u6765\u4e0a\u304c\u3063\u305f\u3082\u306e\u306f\u3053\u3061\u3089\nhttps://github.com/narikei/ikascore\n\n\u304a\u308f\u308a\n\u53f0\u5f62\u88dc\u6b63\u304c\u306a\u3044\u306e\u3067\u3001\u30ab\u30e1\u30e9\u3092\u771f\u6b63\u9762\u306b\u5411\u3051\u306a\u3044\u3068\u8a8d\u8b58\u3057\u3066\u304f\u308c\u306a\u3044\u3067\u3059\u3002\u4f4d\u7f6e\u5408\u308f\u305b\u306f\u6163\u308c\u308b\u307e\u3067\u30b7\u30d3\u30a2\u3002\n\u4eca\u306fTwitter\u306b\u5410\u304d\u51fa\u3059\u3060\u3051\u3060\u3051\u3069\u3001\u3061\u3083\u3093\u3068\u30a2\u30d7\u30ea\u306e\u65b9\u306b\u30c7\u30fc\u30bf\u8a18\u9332\u3057\u305f\u3044\u3067\u3059\u306d\u3002\n\u30b3\u30fc\u30c9\u3082\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3001\u3068\u3044\u3046\u304b\u9069\u5f53\u306b\u66f8\u304d\u6bb4\u3063\u3066\u308b\u306e\u3067\u66f8\u304d\u76f4\u3055\u306a\u3044\u3068\n\u30d7\u30eb\u30ea\u30af\u304f\u3060\u3055\u3044\u3002\n\n\u53c2\u8003\u306b\u3055\u305b\u3066\u3082\u3089\u3063\u305fURL\nhttp://hogesuke.hateblo.jp/entry/ikashot\nhttp://giveitashot.hatenadiary.jp/entry/2014/10/23/080930\n## \u4f5c\u3063\u305f\u3082\u306e\n[![ikascore](https://qiita-image-store.s3.amazonaws.com/0/7132/75c47628-2628-f6d3-24b3-fdc24cc41eb8.png)](https://itunes.apple.com/jp/app/ikasukoa/id1097968132?l=ja&ls=1&mt=8)\nhttps://itunes.apple.com/jp/app/ikasukoa/id1097968132?l=ja&ls=1&mt=8\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u8a66\u5408\u7d42\u4e86\u6642\u306b\u8a66\u5408\u7d50\u679c\u3092\u5224\u5b9a\u3057\u3066\u8a18\u9332\u3057\u3066\u304f\u308c\u308b\u30a2\u30d7\u30ea\n[![aaa-compressor.gif](http://img.gifmagazine.net/gifmagazine/images/868573/original.gif?1461170686)](http://gifmagazine.net/post_images/868573)\n\niPhone\u3092\uff13\u811a\u306b\u56fa\u5b9a\u3057\u3066\u30ab\u30e1\u30e9\u3067\u30b2\u30fc\u30e0\u753b\u9762\u3092\u64ae\u5f71\u3057\u3066\u3044\u307e\u3059\n<img src=\"https://qiita-image-store.s3.amazonaws.com/0/7132/1e5a8fe4-cc16-e543-771f-09f845382fa0.png\" width=400>\n\n## \u306a\u3093\u3067\u4f5c\u3063\u305f\u304b\n\u3061\u3087\u3046\u3069OpenCV\u306e\u52c9\u5f37\u3092\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u3044\u308d\u3044\u308d\u8abf\u3079\u3066\u307f\u308b\u3068\n\nHDMI\u30ad\u30e3\u30d7\u30c1\u30e3\uff08 https://github.com/hasegaw/IkaLog/blob/master/doc/IkaUI.md \uff09\nRaspberry Pi\uff08 http://hogesuke.hateblo.jp/entry/ikashot \uff09\n\n\u306a\u3069\u3001OpenCV\u3067\u30b9\u30d7\u30e9\u30c8\u30a5\u30fc\u30f3\u306e\u8a66\u5408\u7d50\u679c\u3092\u8a18\u9332\u3059\u308b\u3082\u306e\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\n\u3067\u3082\u6b63\u76f4\u6a5f\u6750\u7528\u610f\u3059\u308b\u306e\u9762\u5012\u3060\u3057\u3001\u30b9\u30de\u30db\u3067\u3044\u3044\u3068\u601d\u3063\u305f\u306e\u3068\u3001\u5e38\u306b\u30b9\u30c8\u30a2\u306b\u3042\u308b\u3082\u306e\u306f\u624b\u66f8\u304d\u3067\u8a18\u9332\u3059\u308b\u7cfb\u306e\u30a2\u30d7\u30ea\u3057\u304b\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\n\n\u30b9\u30d7\u30e9\u30c8\u30a5\u30fc\u30f3\u306e\u65ec\u3092\u9003\u3057\u3061\u3083\u3063\u3066\u308b\u611f\u306f\u3042\u308b\u3051\u3069\u3001\u3064\u3044\u3067\u306a\u306e\u3067\u3002\n\n## \u4ed5\u7d44\u307f\n![Artboard 1.png](https://qiita-image-store.s3.amazonaws.com/0/7132/10a937d8-605a-f750-5319-270f078fbdbe.png)\n\n## \u4f5c\u308a\u65b9\n\nRaspberry Pi\u7248\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3001\u4f5c\u308b\u306e\u5927\u5909\u306acascade xml\u3082github\u306b\u516c\u958b\u3055\u308c\u3066\u305f\u306e\u3067\u4f7f\u308f\u305b\u3066\u3082\u3089\u3063\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/hogesuke/ika-camera/tree/master/cascade\n\n\n### Swift\u304b\u3089OpenCV\u3092\u6271\u3046\u65b9\u6cd5\n\nCocoaPods\u3067OpenCV\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```rb:podfile\nplatform :ios, '8.0'\npod 'OpenCV'\n```\n\nSwift\u304b\u3089\u76f4\u63a5OpenCV\u306f\u52d5\u304b\u305b\u305a\u3001C++\u3067\u66f8\u304b\u306a\u304d\u3083\u3060\u3081\u306a\u306e\u3067\u3059\n\u306a\u306e\u3067header\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u307e\u3059\n\n```objc\n#import <Foundation/Foundation.h>\n#import <UIKit/UIKit.h>\n\n@interface Detector: NSObject\n\n- (id)init;\n- (NSString *)recognize:(UIImage *)image;\n\n@end\n```\n\n\u305d\u3057\u3066\u3053\u3063\u3061\u304cOpenCV\u3092\u6271\u3046\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\nUIImage\u3092\u6e21\u3057\u3066\u3001OpenCV\u3067\u6271\u3046\u30c7\u30fc\u30bf\u69cb\u9020\u306ecv::Mat\u306b\u5909\u63db\u3002\n\u305d\u3057\u3066ika_result_win\u3068ika_result_lose\u305d\u308c\u305e\u308c\u3067\u691c\u51fa\u3055\u305b\u307e\u3059\u3002\n\u52dd\u6557\u3092\u6587\u5b57\u5217\u3001\u8a8d\u8b58\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u7a7a\u6587\u5b57\u3067\u8fd4\u3059\u3088\u3046\u306b\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\n\n```objc\n#import <Foundation/Foundation.h>\n#import \"ikascore-Bridging-Header.h\"\n#import <opencv2/opencv.hpp>\n\n@interface Detector()\n{\n    cv::CascadeClassifier cascadeWin;\n    cv::CascadeClassifier cascadeLose;\n}\n@end\n\n@implementation Detector: NSObject\n\n- (id)init {\n    self = [super init];\n    \n    // \u5206\u985e\u5668\u306e\u8aad\u307f\u8fbc\u307f\n    NSBundle *bundle = [NSBundle mainBundle];\n    NSString *pathWin = [bundle pathForResource:@\"ika_result_win\" ofType:@\"xml\"];\n    NSString *pathLose = [bundle pathForResource:@\"ika_result_lose\" ofType:@\"xml\"];\n    std::string cascadeNameWin = (char *)[pathWin UTF8String];\n    std::string cascadeNameLose = (char *)[pathLose UTF8String];\n    \n    if(!cascadeWin.load(cascadeNameWin) || !cascadeLose.load(cascadeNameLose)) {\n        return nil;\n    }\n    \n    return self;\n}\n\n- (NSString *)recognize:(UIImage *)image {\n    // UIImage -> cv::Mat\u5909\u63db\n    CGColorSpaceRef colorSpace = CGImageGetColorSpace(image.CGImage);\n    CGFloat cols = image.size.width;\n    CGFloat rows = image.size.height;\n    \n    cv::Mat mat(rows, cols, CV_8UC4);\n    \n    CGContextRef contextRef = CGBitmapContextCreate(mat.data,\n                                                    cols,\n                                                    rows,\n                                                    8,\n                                                    mat.step[0],\n                                                    colorSpace,\n                                                    kCGImageAlphaNoneSkipLast |\n                                                    kCGBitmapByteOrderDefault);\n    \n    CGContextDrawImage(contextRef, CGRectMake(0, 0, cols, rows), image.CGImage);\n    CGContextRelease(contextRef);\n    \n    \n    std::vector<cv::Rect> res;\n\n    // Win\u691c\u51fa\n    cascadeWin.detectMultiScale(mat, res,\n                             1.1, 2,\n                             CV_HAAR_SCALE_IMAGE,\n                             cv::Size(50, 50));\n    std::vector<cv::Rect>::const_iterator w = res.begin();\n    if (w != res.end()) {\n        return @\"win\";\n    }\n    \n    // Lose\u691c\u51fa\n    cascadeLose.detectMultiScale(mat, res,\n                             1.1, 2,\n                             CV_HAAR_SCALE_IMAGE,\n                             cv::Size(50, 50));\n    std::vector<cv::Rect>::const_iterator r = res.begin();\n    if (r != res.end()) {\n        return @\"lose\";\n    }\n    \n    // \u691c\u51fa\u3055\u308c\u306a\u3044\n    return @\"\";\n}\n\n@end\n```\n\n\u3042\u3068\u306fSwift\u5074\u3067\u30ab\u30e1\u30e9\u304b\u3089\u4f5c\u3063\u305fUIImage\u3092\u968f\u6642\u6e21\u3059\u611f\u3058\u3067\u3059\u3002\n\n```swift\n// \u9854\u691c\u51fa\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\nlet detector:Detector = Detector()\nlet res:NSString = detector.recognize(image)\n\nif (res == \"win\") {\n  // \u52dd\u3061\n} else if (res == \"lose\") {\n  // \u8ca0\u3051\n} else {\n  // \u8a66\u5408\u4e2d\n}\n```\n\n\n### \u6c17\u3092\u3064\u3051\u308b\u3053\u3068\u308d\n\n\u304b\u306a\u308a\u9ad8\u8ca0\u8377\u3067\u52d5\u304b\u3057\u3063\u3071\u306a\u3057\u306b\u306a\u308b\u306e\u3067\u7aef\u672b\u304c\u71b1\u304f\u306a\u308a\u307e\u3059\u3002\n\u6700\u521d\u3084\u3063\u305f\u6642\u306b\u71b1\u3067\u96fb\u6e90\u843d\u3061\u305f\u306e\u3067\u5c11\u3057\u5bfe\u7b56\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u30ab\u30e1\u30e9\u306e\u89e3\u50cf\u5ea6\u304c\u9ad8\u3044\u3068\u691c\u51fa\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u5c11\u3057\u843d\u3068\u3057\u3066\u304a\u304f\n\n```swift\nmySession = AVCaptureSession()\nmySession.sessionPreset = AVCaptureSessionPresetMedium\n```\n\n\u9045\u308c\u3066\u304d\u305f\u30d5\u30ec\u30fc\u30e0\u306f\u7121\u8996\u3059\u308b\n\n```swift\nmyOutput = AVCaptureVideoDataOutput()\nmyOutput.alwaysDiscardsLateVideoFrames = true\n```\n\n\n\u8a66\u5408\u7d42\u4e86\u5f8c\u3057\u3070\u3089\u304f\u306f\u30a4\u30f3\u30bf\u30fc\u30d0\u30eb\u306a\u306e\u3067\u7aef\u672b\u3092\u4f11\u307e\u305b\u308b\n\n```swift\nNSTimer.scheduledTimerWithTimeInterval(60.0, target: self, selector:#selector(restore), userInfo: nil, repeats: false)\n```\n\n\n## \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u51fa\u6765\u4e0a\u304c\u3063\u305f\u3082\u306e\u306f\u3053\u3061\u3089\nhttps://github.com/narikei/ikascore\n\n## \u304a\u308f\u308a\n\u53f0\u5f62\u88dc\u6b63\u304c\u306a\u3044\u306e\u3067\u3001\u30ab\u30e1\u30e9\u3092\u771f\u6b63\u9762\u306b\u5411\u3051\u306a\u3044\u3068\u8a8d\u8b58\u3057\u3066\u304f\u308c\u306a\u3044\u3067\u3059\u3002\u4f4d\u7f6e\u5408\u308f\u305b\u306f\u6163\u308c\u308b\u307e\u3067\u30b7\u30d3\u30a2\u3002\n\n\u4eca\u306fTwitter\u306b\u5410\u304d\u51fa\u3059\u3060\u3051\u3060\u3051\u3069\u3001\u3061\u3083\u3093\u3068\u30a2\u30d7\u30ea\u306e\u65b9\u306b\u30c7\u30fc\u30bf\u8a18\u9332\u3057\u305f\u3044\u3067\u3059\u306d\u3002\n\u30b3\u30fc\u30c9\u3082\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3001\u3068\u3044\u3046\u304b\u9069\u5f53\u306b\u66f8\u304d\u6bb4\u3063\u3066\u308b\u306e\u3067\u66f8\u304d\u76f4\u3055\u306a\u3044\u3068\n\n\u30d7\u30eb\u30ea\u30af\u304f\u3060\u3055\u3044\u3002\n\n\n### \u53c2\u8003\u306b\u3055\u305b\u3066\u3082\u3089\u3063\u305fURL\nhttp://hogesuke.hateblo.jp/entry/ikashot\nhttp://giveitashot.hatenadiary.jp/entry/2014/10/23/080930\n", "tags": ["Swift", "OpenCV", "\u753b\u50cf\u8a8d\u8b58", "iOS", "\u753b\u50cf\u51e6\u7406"]}