{"context": "\n\nVagrant \u3067\u4f5c\u308b Rancher HA \u69cb\u6210\nRancher Meetup #4 \u3067\u89e3\u8aac\u3059\u308b Rancher HA\u69cb\u6210\u3092\u3064\u304f\u308bVagrant\u306e\u89e3\u8aac\u30da\u30fc\u30b8\u3067\u3059\u3002\nWork in progress....\n2017/02/15 14:48\u6642\u70b9\u3067\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\u500b\u5225\u306e\u89e3\u8aac\u306f\u3001\u5225\u9014\u8ffd\u52a0\u4e88\u5b9a\n\nruby\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n# All Vagrant configuration is done below. The \"2\" in Vagrant.configure\n# configures the configuration version (we support older styles for\n# backwards compatibility). Please don't change it unless you know what\n# you're doing.\nVagrant.configure(\"2\") do |config|\n  config.vm.define \"rancher_mariadb\" do |v|\n     v.vm.box = \"ubuntu/xenial64\"\n     v.vm.network :public_network, ip: \"172.16.202.130\", bridge: \"eno2\"\n\n     # delete default gw on eth0\n     v.vm.provision \"shell\",\n       run: \"always\",\n       inline: \"eval `route -n | awk '{ if ($8 ==\\\"enp0s3\\\" && $2 != \\\"0.0.0.0\\\") print \\\"route del default gw \\\" $2; }'`\"\n\n     # default router\n     v.vm.provision \"shell\",\n       run: \"always\",\n       inline: \"route add default gw 172.16.202.10\"\n\n     v.vm.provision \"shell\", inline: <<-SHELL\n        apt-get update\n        sudo apt-get install -y software-properties-common\n        sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8\n        sudo add-apt-repository 'deb [arch=amd64,i386,ppc64el] http://ftp.yz.yamagata-u.ac.jp/pub/dbms/mariadb/repo/10.0/ubuntu xenial main'\n        export DEBIAN_FRONTEND=noninteractive\n        sudo apt update\n        sudo -E apt install -y -qq mariadb-server\n        sudo -E apt install -y -qq mariadb-client\n        sudo -E apt upgrade -y\n        echo \"CREATE DATABASE IF NOT EXISTS cattle COLLATE = 'utf8_general_ci' CHARACTER SET = 'utf8';\" | mysql -uroot\n        echo \"GRANT ALL ON cattle.* TO 'cattle'@'%' IDENTIFIED BY 'cattle';\" | mysql -uroot\n        echo \"GRANT ALL ON cattle.* TO 'cattle'@'localhost' IDENTIFIED BY 'cattle';\" | mysql -uroot\n        sudo sed -i -e 's/bind-address/#bind-address/g' /etc/mysql/my.cnf\n        sudo service mysql restart\n     SHELL\n  end\n\n\n  config.vm.define \"rancher_serverha_01\" do |v|\n     v.vm.box = \"ubuntu/xenial64\"\n     v.vm.network :public_network, ip: \"172.16.202.131\", bridge: \"eno2\"\n\n     # delete default gw on eth0\n     v.vm.provision \"shell\",\n       run: \"always\",\n       inline: \"eval `route -n | awk '{ if ($8 ==\\\"enp0s3\\\" && $2 != \\\"0.0.0.0\\\") print \\\"route del default gw \\\" $2; }'`\"\n\n     # default router\n     v.vm.provision \"shell\",\n       run: \"always\",\n       inline: \"route add default gw 172.16.202.10\"\n\n     v.vm.provision \"shell\", inline: <<-SHELL\n        export DEBIAN_FRONTEND=noninteractive\n        sudo -E apt update\n        sudo -E apt install -y\n        sudo apt-get install -y --no-install-recommends \\\n            apt-transport-https \\\n            ca-certificates \\\n            curl \\\n            software-properties-common\n        curl -fsSL https://apt.dockerproject.org/gpg | sudo apt-key add -\n        apt-key fingerprint 58118E89F3A912897C070ADBF76221572C52609D\n        sudo add-apt-repository \\\n            \"deb https://apt.dockerproject.org/repo/ \\\n            ubuntu-$(lsb_release -cs) \\\n            main\"\n        sudo apt-get update\n        sudo apt-get -y install docker-engine\n        sudo docker run -d \\\n          --restart=unless-stopped \\\n          -p 8080:8080 \\\n          -p 9345:9345 \\\n          rancher/server \\\n          --db-host 172.16.202.130 \\\n          --db-port 3306 \\\n          --db-user cattle \\\n          --db-pass cattle \\\n          --db-name cattle \\\n          --advertise-address 172.16.202.131\n     SHELL\n  end\n\n  config.vm.define \"rancher_serverha_02\" do |v|\n     v.vm.box = \"ubuntu/xenial64\"\n     v.vm.network :public_network, ip: \"172.16.202.132\", bridge: \"eno2\"\n\n     # delete default gw on eth0\n     v.vm.provision \"shell\",\n       run: \"always\",\n       inline: \"eval `route -n | awk '{ if ($8 ==\\\"enp0s3\\\" && $2 != \\\"0.0.0.0\\\") print \\\"route del default gw \\\" $2; }'`\"\n\n     # default router\n     v.vm.provision \"shell\",\n       run: \"always\",\n       inline: \"route add default gw 172.16.202.10\"\n\n     v.vm.provision \"shell\", inline: <<-SHELL\n        export DEBIAN_FRONTEND=noninteractive\n        sudo -E apt update\n        sudo -E apt install -y\n        sudo apt-get install -y --no-install-recommends \\\n            apt-transport-https \\\n            ca-certificates \\\n            curl \\\n            software-properties-common\n        curl -fsSL https://apt.dockerproject.org/gpg | sudo apt-key add -\n        apt-key fingerprint 58118E89F3A912897C070ADBF76221572C52609D\n        sudo add-apt-repository \\\n            \"deb https://apt.dockerproject.org/repo/ \\\n            ubuntu-$(lsb_release -cs) \\\n            main\"\n        sudo apt-get update\n        sudo apt-get -y install docker-engine\n        sudo docker run -d \\\n          --restart=unless-stopped \\\n          -p 8080:8080 \\\n          -p 9345:9345 \\\n          rancher/server \\\n          --db-host 172.16.202.130 \\\n          --db-port 3306 \\\n          --db-user cattle \\\n          --db-pass cattle \\\n          --db-name cattle \\\n          --advertise-address 172.16.202.131\n     SHELL\n  end\nend\n\n\n# Vagrant \u3067\u4f5c\u308b Rancher HA \u69cb\u6210\n\nRancher Meetup #4 \u3067\u89e3\u8aac\u3059\u308b Rancher HA\u69cb\u6210\u3092\u3064\u304f\u308bVagrant\u306e\u89e3\u8aac\u30da\u30fc\u30b8\u3067\u3059\u3002\n\nWork in progress....\n\n2017/02/15 14:48\u6642\u70b9\u3067\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u500b\u5225\u306e\u89e3\u8aac\u306f\u3001\u5225\u9014\u8ffd\u52a0\u4e88\u5b9a\n\n```rb:ruby\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n# All Vagrant configuration is done below. The \"2\" in Vagrant.configure\n# configures the configuration version (we support older styles for\n# backwards compatibility). Please don't change it unless you know what\n# you're doing.\nVagrant.configure(\"2\") do |config|\n  config.vm.define \"rancher_mariadb\" do |v|\n     v.vm.box = \"ubuntu/xenial64\"\n     v.vm.network :public_network, ip: \"172.16.202.130\", bridge: \"eno2\"\n\n     # delete default gw on eth0\n     v.vm.provision \"shell\",\n       run: \"always\",\n       inline: \"eval `route -n | awk '{ if ($8 ==\\\"enp0s3\\\" && $2 != \\\"0.0.0.0\\\") print \\\"route del default gw \\\" $2; }'`\"\n\n     # default router\n     v.vm.provision \"shell\",\n       run: \"always\",\n       inline: \"route add default gw 172.16.202.10\"\n\n     v.vm.provision \"shell\", inline: <<-SHELL\n        apt-get update\n        sudo apt-get install -y software-properties-common\n        sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8\n        sudo add-apt-repository 'deb [arch=amd64,i386,ppc64el] http://ftp.yz.yamagata-u.ac.jp/pub/dbms/mariadb/repo/10.0/ubuntu xenial main'\n        export DEBIAN_FRONTEND=noninteractive\n        sudo apt update\n        sudo -E apt install -y -qq mariadb-server\n        sudo -E apt install -y -qq mariadb-client\n        sudo -E apt upgrade -y\n        echo \"CREATE DATABASE IF NOT EXISTS cattle COLLATE = 'utf8_general_ci' CHARACTER SET = 'utf8';\" | mysql -uroot\n        echo \"GRANT ALL ON cattle.* TO 'cattle'@'%' IDENTIFIED BY 'cattle';\" | mysql -uroot\n        echo \"GRANT ALL ON cattle.* TO 'cattle'@'localhost' IDENTIFIED BY 'cattle';\" | mysql -uroot\n        sudo sed -i -e 's/bind-address/#bind-address/g' /etc/mysql/my.cnf\n        sudo service mysql restart\n     SHELL\n  end\n\n\n  config.vm.define \"rancher_serverha_01\" do |v|\n     v.vm.box = \"ubuntu/xenial64\"\n     v.vm.network :public_network, ip: \"172.16.202.131\", bridge: \"eno2\"\n\n     # delete default gw on eth0\n     v.vm.provision \"shell\",\n       run: \"always\",\n       inline: \"eval `route -n | awk '{ if ($8 ==\\\"enp0s3\\\" && $2 != \\\"0.0.0.0\\\") print \\\"route del default gw \\\" $2; }'`\"\n\n     # default router\n     v.vm.provision \"shell\",\n       run: \"always\",\n       inline: \"route add default gw 172.16.202.10\"\n\n     v.vm.provision \"shell\", inline: <<-SHELL\n        export DEBIAN_FRONTEND=noninteractive\n        sudo -E apt update\n        sudo -E apt install -y\n        sudo apt-get install -y --no-install-recommends \\\n            apt-transport-https \\\n            ca-certificates \\\n            curl \\\n            software-properties-common\n        curl -fsSL https://apt.dockerproject.org/gpg | sudo apt-key add -\n        apt-key fingerprint 58118E89F3A912897C070ADBF76221572C52609D\n        sudo add-apt-repository \\\n            \"deb https://apt.dockerproject.org/repo/ \\\n            ubuntu-$(lsb_release -cs) \\\n            main\"\n        sudo apt-get update\n        sudo apt-get -y install docker-engine\n        sudo docker run -d \\\n          --restart=unless-stopped \\\n          -p 8080:8080 \\\n          -p 9345:9345 \\\n          rancher/server \\\n          --db-host 172.16.202.130 \\\n          --db-port 3306 \\\n          --db-user cattle \\\n          --db-pass cattle \\\n          --db-name cattle \\\n          --advertise-address 172.16.202.131\n     SHELL\n  end\n\n  config.vm.define \"rancher_serverha_02\" do |v|\n     v.vm.box = \"ubuntu/xenial64\"\n     v.vm.network :public_network, ip: \"172.16.202.132\", bridge: \"eno2\"\n\n     # delete default gw on eth0\n     v.vm.provision \"shell\",\n       run: \"always\",\n       inline: \"eval `route -n | awk '{ if ($8 ==\\\"enp0s3\\\" && $2 != \\\"0.0.0.0\\\") print \\\"route del default gw \\\" $2; }'`\"\n\n     # default router\n     v.vm.provision \"shell\",\n       run: \"always\",\n       inline: \"route add default gw 172.16.202.10\"\n\n     v.vm.provision \"shell\", inline: <<-SHELL\n        export DEBIAN_FRONTEND=noninteractive\n        sudo -E apt update\n        sudo -E apt install -y\n        sudo apt-get install -y --no-install-recommends \\\n            apt-transport-https \\\n            ca-certificates \\\n            curl \\\n            software-properties-common\n        curl -fsSL https://apt.dockerproject.org/gpg | sudo apt-key add -\n        apt-key fingerprint 58118E89F3A912897C070ADBF76221572C52609D\n        sudo add-apt-repository \\\n            \"deb https://apt.dockerproject.org/repo/ \\\n            ubuntu-$(lsb_release -cs) \\\n            main\"\n        sudo apt-get update\n        sudo apt-get -y install docker-engine\n        sudo docker run -d \\\n          --restart=unless-stopped \\\n          -p 8080:8080 \\\n          -p 9345:9345 \\\n          rancher/server \\\n          --db-host 172.16.202.130 \\\n          --db-port 3306 \\\n          --db-user cattle \\\n          --db-pass cattle \\\n          --db-name cattle \\\n          --advertise-address 172.16.202.131\n     SHELL\n  end\nend\n```\n", "tags": ["rancher", "vagrant", "HA", "docker"]}