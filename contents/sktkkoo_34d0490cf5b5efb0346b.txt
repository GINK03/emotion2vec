{"context": "\n\n\u6982\u8981\n\u3053\u3053\u3067\u306f\u300c\u306f\u304c\u304d\u306b\u8a18\u5165\u3055\u308c\u305f\u624b\u66f8\u304d\u306e\u90f5\u4fbf\u756a\u53f7\u3092\u81ea\u52d5\u3067\u8b58\u5225\u3057\u3066\u307f\u3088\u3046\u300d\u3068\u3044\u3046\u4f8b\u984c\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\u521d\u5fc3\u8005\u5411\u3051\u306e\u8a18\u4e8b\u3067\u3059\u3002\u57fa\u672c\u7684\u306b\u306f\u3001scikit-learn\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3084Document\u3092\u307e\u3068\u3081\u305f\u5185\u5bb9\u3067\u3059\u304c\u3001\u305d\u308c\u4ee5\u5916\u306e\u5185\u5bb9\u3082\u542b\u307f\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306fdigits\u3092\u3001\u6a5f\u68b0\u5b66\u7fd2\u306e\u624b\u6cd5\u306fSVM(\u6b63\u78ba\u306b\u306fSVC)\u3092\u7528\u3044\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\ndigits : \u624b\u66f8\u304d\u306e\u6570\u5b57\u6587\u5b57\u753b\u50cf\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\nSVC : \u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306e\u4e00\u7a2e\n\n\uff08\u6ce8\uff09\u7b46\u8005\u306f\u5b66\u751f\u6642\u4ee3\u3001\u6a5f\u68b0\u5b66\u7fd2\u3084\u30c7\u30fc\u30bf\u30de\u30a4\u30cb\u30f3\u30b0\u306e\u7814\u7a76\u5ba4\u306b\u6240\u5c5e\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u305d\u306e\u3068\u304d\u306fR\u3092\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u3002\u672c\u6587\u306b\u9593\u9055\u3044\u7b49\u3042\u308a\u307e\u3057\u305f\u3089\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8:digits\ndigits\u306f\u6570\u5b57\u30e9\u30d9\u30eb\u3068\u6570\u5b57\u753b\u50cf\u30c7\u30fc\u30bf\u304c\u7d44\u3068\u306a\u3063\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002\u3053\u306e\u30e9\u30d9\u30eb\u3068\u753b\u50cf\u306e\u7d44\u3092\u3001\u5f8c\u307b\u3069\u5b66\u7fd2\u3057\u3066\u3044\u304f\u308f\u3051\u3067\u3059\u306d\u3002scikit-learn\u306b\u3088\u308a\u3042\u3089\u304b\u3058\u3081\u30c7\u30fc\u30bf\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u8ab0\u3067\u3082\u7c21\u5358\u306b\u8a66\u3057\u3066\u307f\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\ndatasets.load_digits()\u3067\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8digits\u304c\u8aad\u307f\u8fbc\u3081\u307e\u3059\u3002\nfrom sklearn import datasets\nfrom matplotlib import pyplot as plt\n# from sklearn import datasets\n\ndigits = datasets.load_digits()\n\n\n\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u898b\u308b\n\u5404\u753b\u50cf\u306f0~9\u307e\u3067\u306e\u624b\u66f8\u304d\u6587\u5b57\u753b\u50cf\u3067\u3059\u3002\u3053\u308c\u3089\u306e\u753b\u50cf\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u4e0a\u3067\u306f0~255\u306e\u5024\u3092\u3082\u3064\u4e8c\u6b21\u5143\u914d\u5217\u3067\u8868\u3055\u308c\u307e\u3059\u3002\n# \u753b\u50cf\u306e\u914d\u5217\u30c7\u30fc\u30bf\nprint(digits.data)\n\n[[  0.   0.   5. ...,   0.   0.   0.]\n [  0.   0.   0. ...,  10.   0.   0.]\n [  0.   0.   0. ...,  16.   9.   0.]\n ..., \n [  0.   0.   1. ...,   6.   0.   0.]\n [  0.   0.   2. ...,  12.   0.   0.]\n [  0.   0.  10. ...,  12.   1.   0.]]\n\n\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u914d\u5217\u306e\u307e\u307e\u773a\u3081\u3066\u3082\u308f\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u3001\u753b\u50cf\u3068\u3057\u3066\u8868\u793a\u3055\u305b\u3066\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\u753b\u50cf\u3092\u8868\u793a\u3055\u305b\u308b\u524d\u306b\u3001\u307e\u305a\u306f\u3001\u30e9\u30d9\u30eb\u30c7\u30fc\u30bf\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\u4e0b\u306e\u3088\u3046\u306b\u3001\u3042\u3089\u304b\u3058\u30810~9\u306e\u30e9\u30d9\u30eb\u304c\u6b63\u3057\u304f\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n# \u30e9\u30d9\u30eb\nprint(digits.target)\n\n[0 1 2 ..., 8 9 8]\n\n\u4e0a\u306e\u7d50\u679c\u3092\u898b\u3066\u307f\u308b\u3068\u3001\u4f8b\u3048\u3070\u5148\u982d\u304b\u30890, 1, 2\u756a\u76ee\u306e\u753b\u50cf\u306b\u306f\u30e9\u30d9\u30eb0, 1, 2\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u307e\u3059\u3057\u3001\u5f8c\u308d\u304b\u30892\u756a\u76ee\u306e\u753b\u50cf\u306b\u306f\u30e9\u30d9\u30eb9\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u306e\u306b\u306f\u3001matplotlib\u304c\u4f7f\u3048\u307e\u3059\u3002\n#  \u753b\u50cf\u306e\u8868\u793a\n# number 0\nplt.subplot(141), plt.imshow(digits.images[0], cmap = 'gray')\nplt.title('number 0'), plt.xticks([]), plt.yticks([])\n\n# number 1\nplt.subplot(142), plt.imshow(digits.images[1], cmap = 'gray')\nplt.title('numbert 1'), plt.xticks([]), plt.yticks([])\n\n# number 2\nplt.subplot(143), plt.imshow(digits.images[2], cmap = 'gray')\nplt.title('numbert 2'), plt.xticks([]), plt.yticks([])\n\n# number 9\nplt.subplot(144), plt.imshow(digits.images[-2], cmap = 'gray')\nplt.title('numbert 9'), plt.xticks([]), plt.yticks([])\n\nplt.show()\n\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u5404\u753b\u50cf\u306b\u6b63\u3057\u3044\u30e9\u30d9\u30eb\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u308b\u3089\u3057\u3044\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\nSVM\u306b\u3088\u308b\u753b\u50cf\u5206\u985e\n\nSVM\u3068\u306f\nSVM(Support Vector Machine)\u306f\u3001\u975e\u5e38\u306b\u512a\u308c\u305f\u8a8d\u8b58\u6027\u80fd\u3092\u6301\u3064\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u624b\u6cd5\u306e\u3072\u3068\u3064\u3067\u3059\u3002\u57fa\u672c\u7684\u306b\u306f\u30012\u30af\u30e9\u30b9\u5206\u985e\u3092\u30de\u30fc\u30b8\u30f3\u6700\u5927\u5316\u3092\u57fa\u6e96\u3068\u3057\u3066\u884c\u3044\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001(2\u30af\u30e9\u30b9\u5206\u985e\u3092\u8907\u6570\u56de\u884c\u3046\u3053\u3068\u3067)\u591a\u30af\u30e9\u30b9\u5206\u985e\u306b\u3082\u9069\u7528\u3067\u304d\u307e\u3059\u3002\n\u53b3\u5bc6\u306aSVM\u3067\u306f\u3001\u5206\u985e\u3059\u308b\u30c7\u30fc\u30bf\u306b\u91cd\u306a\u308a\u304c\u3042\u308b\u5834\u5408(\u3064\u307e\u308a\u3001\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u5b8c\u5168\u306b\u5207\u308a\u308f\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u5834\u5408)\u306f\u3001\u304d\u3061\u3093\u3068\u3057\u305f\u5206\u985e\u5883\u754c\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u4e00\u65b9\u3001\u30a8\u30e9\u30fc\u3092\u8a31\u5bb9\u3059\u308bSVM\u306f\u30bd\u30d5\u30c8\u30de\u30fc\u30b8\u30f3SVM\u3068\u547c\u3070\u308c\u307e\u3059\u3002\u8aa4\u5206\u985e\u306b\u30da\u30ca\u30eb\u30c6\u30a3C\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u3001\u5b8c\u5168\u306b\u5206\u3051\u3089\u308c\u306a\u3044\u30c7\u30fc\u30bf\u306e\u5834\u5408\u3067\u3082\u3001\u3067\u304d\u308b\u3060\u3051\u8aa4\u5206\u985e\u3092\u5c11\u306a\u304f\u3059\u308b\u3088\u3046\u306a\u5206\u985e\u5883\u754c\u3092\u5f15\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30da\u30ca\u30eb\u30c6\u30a3C\u304c\u5927\u304d\u3044\u307b\u3069\u8aa4\u308a\u306b\u53b3\u3057\u304f\u306a\u308b\u3068\u540c\u6642\u306b\u3001\u904e\u5b66\u7fd2(Overfitting)\u3092\u8d77\u3053\u3057\u3084\u3059\u304f\u306a\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\uff08\u6ce8\uff09\u904e\u5b66\u7fd2\u3068\u306f\u3001\u5b66\u7fd2\u30e2\u30c7\u30eb\u304c\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u7279\u5b9a\u306e\u30e9\u30f3\u30c0\u30e0\u306a\uff08\u672c\u6765\u5b66\u7fd2\u3055\u305b\u305f\u3044\u7279\u5fb4\u3068\u306f\u7121\u95a2\u4fc2\u306a\uff09\u7279\u5fb4\u306b\u307e\u3067\u9069\u5408\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u3059\u3002\u904e\u5b66\u7fd2\u304c\u8d77\u3053\u3063\u305f\u5834\u5408\u3001\u8a13\u7df4\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u306e\u6027\u80fd\u306f\u5411\u4e0a\u3057\u307e\u3059\u304c\u3001\u305d\u308c\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u3067\u306f\u9006\u306b\u7d50\u679c\u304c\u60aa\u304f\u306a\u308a\u307e\u3059\u3002\uff08\u53c2\u8003\uff1a\u904e\u5270\u9069\u5408 - Wikipedia\uff09\n\nscikit-learn\u3067\u306eSVM\n\u5b9f\u306f\u3001scikit-learn\u3067\u306fSVC\u3001NuSVC\u3001LinearSVC\u3068\u3044\u3063\u305f\u3084\u3084\u7a2e\u985e\u306e\u7570\u306a\u308bSVM\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002NuSVC\u3068SVC\u306f\u826f\u304f\u4f3c\u305f\u624b\u6cd5\u3067\u3059\u304c\u3001\u308f\u305a\u304b\u306b\u7570\u306a\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u6301\u3061\u3001\u6570\u5b66\u7684\u306b\u306f\u7570\u306a\u308b\u5b9a\u5f0f\u5316\u3067\u8868\u3055\u308c\u307e\u3059\u3002LinearSVC\u306f\u7dda\u5f62\u30ab\u30fc\u30cd\u30eb\u3092\u7528\u3044\u305fSVM\u3067\u3042\u308a\u3001\u305d\u306e\u307b\u304b\u306e\u30ab\u30fc\u30cd\u30eb\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u4eca\u56de\u306fSVC\u3092\u7528\u3044\u3001\u30bd\u30d5\u30c8\u30de\u30fc\u30b8\u30f3\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\u3084\u308b\u3053\u3068\u306f\u3001(1)\u8b58\u5225\u5668\u3092\u4f5c\u6210\u3057\u3001(2)\u30c7\u30fc\u30bf\u306b\u9069\u7528\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n\uff081\uff09\u8b58\u5225\u5668\u306e\u4f5c\u6210\n\n\u6700\u5f8c\u306e\uff110\u4ef6\u4ee5\u5916\u3067\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\n\nfrom sklearn import svm\n\n# SVM\nclf = svm.SVC(gamma=0.001, C=100.)\nclf.fit(digits.data[:-10], digits.target[:-10])\n\nSVC(C=100.0, cache_size=200, class_weight=None, coef0=0.0,\n  decision_function_shape=None, degree=3, gamma=0.001, kernel='rbf',\n  max_iter=-1, probability=False, random_state=None, shrinking=True,\n  tol=0.001, verbose=False)\n\n\u3053\u3053\u3067\u306f\u307b\u3068\u3093\u3069\u6307\u5b9a\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u4e0a\u306e\u3088\u3046\u306bSVC\u306b\u306f\u304b\u306a\u308a\u591a\u304f\u306e\u30d1\u30e9\u30e1\u30fc\u30bf(C, cache_size, class_weight, coef0, ...)\u304c\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u6700\u521d\u306f\u3042\u307e\u308a\u6c17\u306b\u305b\u305a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u3067\u5927\u4e08\u592b\u3067\u3059\u3002\n\n\uff082\uff09\u8b58\u5225\u5668\u306b\u3088\u308b\u753b\u50cf\u5206\u985e\n\n\u5b66\u7fd2\u30e2\u30c7\u30eb\u304b\u3089\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u6700\u5f8c\u306e10\u4ef6\u3092\u63a8\u5b9a\n\n\u4f5c\u6210\u3057\u305f\u8b58\u5225\u5668\u3092\u7528\u3044\u3066\u3001\u5b9f\u969b\u306b\u753b\u50cf\u304b\u3089\u30e9\u30d9\u30eb\u3092\u63a8\u5b9a\u3057\u307e\u3059\u3002\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u4f5c\u6210\u306b\u7528\u3044\u3066\u3044\u306a\u3044\u3001\u6700\u5f8c\u306e10\u4ef6\u306e\u30c7\u30fc\u30bf\u3067\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\nclf.predict(digits.data[-10:])\n\narray([5, 4, 8, 8, 4, 9, 0, 8, 9, 8])\n\n\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u3092\u898b\u3066\u307f\u308b\u3068\u3001\nprint(digits.target[-10:])\n\n[5 4 8 8 4 9 0 8 9 8]\n\n\u3067\u3042\u308a\u3001\u63a8\u5b9a\u7d50\u679c\u3068\u4e00\u81f4\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3067\u3001\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u304b\u3089\u304a\u304a\u3088\u305d\u6b63\u3057\u3044\u63a8\u5b9a\u304c\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u304c\u78ba\u304b\u3081\u3089\u308c\u307e\u3057\u305f\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u3044\u308d\u3044\u308d\u3068\u5909\u3048\u3066\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u8b58\u5225\u5668\u306e\u7cbe\u5ea6\u8a55\u4fa1\n\n\u8b58\u5225\u5668\u306e\u8a55\u4fa1\u6307\u6a19\n\u8b58\u5225\u5668\u306e\u5206\u985e\u7cbe\u5ea6\u306e\u8a55\u4fa1\u6307\u6a19\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6307\u6a19\u306b\u3088\u3063\u3066\u6e2c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\u6b63\u89e3\u7387(Accuracy)\n\n\u4e88\u6e2c\u306e\u3046\u3061\u3001\u6b63\u3057\u304f\u5206\u985e\u3055\u308c\u305f\u3082\u306e\u306e\u5272\u5408\n\n\n\n\u9069\u5408\u7387(Precision)\n\n\u6b63\u3068\u4e88\u6e2c\u3057\u305f\u30c7\u30fc\u30bf\u306e\u3046\u3061\uff0c\u5b9f\u969b\u306b\u6b63\u3067\u3042\u308b\u3082\u306e\u306e\u5272\u5408\n\n\n\n\u518d\u73fe\u7387(Recall)\n\n\u5b9f\u969b\u306b\u6b63\u3067\u3042\u308b\u3082\u306e\u306e\u3046\u3061\uff0c\u6b63\u3067\u3042\u308b\u3068\u4e88\u6e2c\u3055\u308c\u305f\u3082\u306e\u306e\u5272\u5408\n\n\n\nF\u5024(F-measure)\n\n\u7cbe\u5ea6\u3068\u518d\u73fe\u7387\u306e\u8abf\u548c\u5e73\u5747\n\n\n\n\u901a\u5e38\u306f\u8b58\u5225\u5668\u306e\u7cbe\u5ea6\u306fF\u5024\u3067\u8a55\u4fa1\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u5b9f\u7528\u4e0a\u306f\u9069\u5408\u7387\u3068\u518d\u73fe\u7387\u306e\u3069\u3061\u3089\u3092\u91cd\u8996\u3059\u308b\u304b\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u3005\u3042\u308a\u307e\u3059\u3002\n\n\u9069\u5408\u7387\u3068\u518d\u73fe\u7387\n\u4f8b\u3048\u3070\u3001\u5de5\u5834\u3067\u306e\u90e8\u54c1\u691c\u67fb\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3069\u3053\u3082\u58ca\u308c\u3066\u3044\u306a\u3044\u90e8\u54c1\u3092\u9593\u9055\u3063\u3066\u300c\u58ca\u308c\u3066\u3044\u308b\uff08\u30a8\u30e9\u30fc\uff09\u300d\u306b\u5206\u985e\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u5927\u3057\u305f\u554f\u984c\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002\u3068\u3053\u308d\u304c\u3001\u58ca\u308c\u3066\u3044\u308b\u90e8\u54c1\u3092\u9593\u9055\u3063\u3066\u300c\u58ca\u308c\u3066\u3044\u306a\u3044\uff08\u6b63\uff09\u300d\u3068\u5206\u985e\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u30af\u30ec\u30fc\u30e0\u3084\u30ea\u30b3\u30fc\u30eb\u306e\u539f\u56e0\u306b\u306a\u3063\u305f\u308a\u3001\u5546\u54c1\u306b\u3088\u3063\u3066\u306f\u4eba\u547d\u306b\u304b\u304b\u308f\u308b\u3053\u3068\u3055\u3048\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u3001\u518d\u73fe\u7387\u3088\u308a\u3082\u9069\u5408\u7387\u306e\u65b9\u304c\u91cd\u8996\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u300c\u9069\u5408\u738799%+\u518d\u73fe\u738750%\u300d\u3068\u300c\u9069\u5408\u738780%+\u518d\u73fe\u738799%\u300d\u3067\u306f\u3001\u5f8c\u8005\u306e\u65b9\u304cF\u5024\u306f\u9ad8\u3044\u3067\u3059\u304c\u3001\u5b9f\u7528\u6027\u306f\u5727\u5012\u7684\u306b\u524d\u8005\u304c\u9ad8\u3044\u3068\u3044\u3046\u5834\u5408\u304c\u3042\u308a\u5f97\u308b\u306e\u3067\u3059\u3002\n\u4e00\u65b9\u3067\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u691c\u7d22\u306a\u3069\u306e\u5834\u5408\u306f\u3001\u9069\u5408\u7387\u3088\u308a\u3082\u518d\u73fe\u7387\u304c\u91cd\u8996\u3055\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3057\u3087\u3046\u3002\u591a\u5c11\u9593\u9055\u3063\u305f\u691c\u7d22\u7d50\u679c\u304c\u591a\u304f\u51fa\u3066\u3082\u3001\u691c\u7d22\u3057\u3066\u3082\u898b\u3064\u304b\u3089\u306a\u3044\u30c7\u30fc\u30bf\u304c\u591a\u3044\u3088\u308a\u306f\u306f\u308b\u304b\u306b\u307e\u3057\u3060\u304b\u3089\u3067\u3059\u3002\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u6700\u9069\u5316\n\u3053\u308c\u307e\u3067\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u306a\u3093\u3068\u306a\u304f\u3067\u9069\u5f53\u306a\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3057\u305f\u3002 \u3057\u304b\u3057\u3001\u3053\u308c\u3067\u306f\u8981\u6c42\u3055\u308c\u308b\u5206\u985e\u7cbe\u5ea6\u304c\u5f97\u3089\u308c\u306a\u3044\u3053\u3068\u3082\u591a\u304f\u3001\u5b9f\u969b\u306b\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6700\u9069\u5316\u304c\u5fc5\u9808\u3068\u306a\u308a\u307e\u3059\u3002\u3067\u306f\u3001\u8b58\u5225\u5668\u306e\u5206\u985e\u7cbe\u5ea6\u3092\u9ad8\u3081\u308b\u305f\u3081\u306b\u3069\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u3069\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308c\u3070\u3088\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u3072\u3068\u3064\u305a\u3064\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u624b\u3067\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3057\u3066\u3044\u3063\u3066\u3082\u826f\u3044\u3067\u3059\u304c\u3001\u3053\u308c\u306f\u975e\u5e38\u306b\u5927\u5909\u3067\u3059\u3002\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3084\u624b\u6cd5\u306b\u3088\u3063\u3066\u306f\u6163\u7fd2\u7684\u306b\u3053\u308c\u304f\u3089\u3044\u306e\u5024\u304c\u826f\u3044\u3001\u306a\u3069\u306e\u77e5\u898b\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u672a\u77e5\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u5834\u5408\u306b\u306f\u4f7f\u3048\u307e\u305b\u3093\u3002\n\u305d\u3053\u3067\u3001\u3088\u304f\u7528\u3044\u3089\u308c\u308b\u306e\u304c\u3001\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3059\u3002\u7c21\u5358\u306b\u8aac\u660e\u3059\u308c\u3070\u3001\u63a2\u7d22\u7bc4\u56f2\u306e\u306a\u304b\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u5316\u3055\u305b\u306a\u304c\u3089\u5b9f\u969b\u306b\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3057\u3001\u305d\u306e\u7d50\u679c\u306e\u7cbe\u5ea6\u304c\u6700\u3082\u826f\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u63a2\u3059\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3059\u3002\n\u307e\u305f\u3001\u6c42\u3081\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u306e\u5b66\u7fd2\u30e2\u30c7\u30eb\u304c\u904e\u5b66\u7fd2\u3092\u8d77\u3053\u3057\u3066\u3044\u306a\u3044\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4ea4\u5dee\u691c\u8a3c\u6cd5\uff08Cross-validation\uff09\u3092\u7528\u3044\u307e\u3059\u3002k-\u4ea4\u5dee\u691c\u8a3c\u6cd5\u3067\u306f\u3001\u307e\u305a\u3001\u30c7\u30fc\u30bf\u3092k\u500b\u306b\u5206\u5272\u3057\u307e\u3059\u3002\u305d\u306e\u3046\u3061\u306ek-1\u500b\u3067\u5b66\u7fd2\u3001\u6b8b\u3063\u305f1\u500b\u3067\u8a55\u4fa1\u3059\u308b\u3068\u3044\u3046\u306e\u3092\uff08\u8a13\u7df4\u30c7\u30fc\u30bf\u30fb\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5909\u3048\u306a\u304c\u3089\uff09k\u56de\u7e70\u308a\u8fd4\u3057\u3001\u305d\u306e\u5e73\u5747\u5024\u3067\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u8a55\u4fa1\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u6c4e\u5316\u6027\u80fd\u3092\u8a55\u4fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\uff08\u6ce8\uff09\u6c4e\u5316\u6027\u80fd\u304c\u826f\u3044\u3068\u306f\u3001\u7c21\u5358\u306b\u8a00\u3048\u3070\u672a\u77e5\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u3082\u5b66\u7fd2\u30e2\u30c7\u30eb\u304c\u9069\u5207\u306a\u8b58\u5225\u3092\u884c\u3048\u308b\u80fd\u529b\u306e\u3053\u3068\u3067\u3059\u3002\u904e\u5b66\u7fd2\u3092\u8d77\u3053\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u8a13\u7df4\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u306f\u9ad8\u3044\u7cbe\u5ea6\u3067\u8b58\u5225\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u672a\u77e5\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u306f\u8b58\u5225\u306e\u7cbe\u5ea6\u304c\u4f4e\u4e0b\u3059\u308b\u3053\u3068\u3092\u601d\u3044\u51fa\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nscikit-learn\u3067\u306f\u3001GridSearchCV()\u3092\u7528\u3044\u3066\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u3068\u4ea4\u5dee\u691c\u8a3c\u6cd5\u3092\u7c21\u5358\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\nscoring\n\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u6700\u9069\u5316\u306b\u304a\u3051\u308b\u8a55\u4fa1\u5024\u3002\u4eca\u56de\u306f'precision'\u3068'recall'\u3092\u6307\u5b9a\n\n\ncv\n\n\n\u4ea4\u5dee\u691c\u8a3c\u306e\u5206\u5272\u6570\u300210\u7a0b\u5ea6\u306e\u3053\u3068\u304c\u591a\u3044\u3002\u8a08\u7b97\u91cf\u304c\u5927\u304d\u304f\u306a\u308a\u3059\u304e\u308b\u5834\u5408\u3084\u3001\u9006\u306b\u30c7\u30fc\u30bf\u6570\u304c\u5c11\u306a\u3059\u304e\u308b\u5834\u5408\u306f\u5206\u5272\u6570\u3092\u5c11\u306a\u304f\u6307\u5b9a\n\n\n\n\n\u6e96\u5099\n\u30d1\u30e9\u30e1\u30fc\u30bf\u6700\u9069\u5316\u3092\u884c\u3046\u524d\u306b\u3001\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u306e\u5f62\u5f0f\u3092\u5909\u63db\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nfrom sklearn import datasets\nfrom sklearn.cross_validation import train_test_split\nfrom sklearn.grid_search import GridSearchCV\nfrom sklearn.metrics import classification_report\nfrom sklearn.svm import SVC\n\n# Digits\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30ed\u30fc\u30c9\ndigits = datasets.load_digits()\nprint(len(digits.images))\nprint(digits.images.shape)\n\n1797\n(1797, 8, 8)\n\n# To apply an classifier on this data, we need to flatten the image, to\n# turn the data in a (samples, feature) matrix:\nn_samples = len(digits.images)\nX = digits.images.reshape((n_samples, -1))  # reshape(cols, rows)\u3067cols\u884crows\u5217\u306b\u5909\u63db(\u5f15\u6570\u306e\u4e00\u65b9\u304c-1\u3060\u3068\u81ea\u52d5\u8a08\u7b97)\ny = digits.target\nprint(X.shape)\nprint(y)\n\n(1797, 64)\n[0 1 2 ..., 8 9 8]\n\n\n\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u3068\u4ea4\u5dee\u691c\u8a3c\u6cd5\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u4e00\u898b\u96e3\u3057\u305d\u3046\u3067\u3059\u304c\u3001\u5b9f\u969b\u306b\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u5358\u7d14\u3067\u3059\u3002\n\nkernel = \"rbf\", gamma = 0.001 or 0.0001, C = 1 or 10 or 100 or 1000\nkernel = \"linear\", C = 1 or 10 or 100 or 1000\n\n\u4e0a\u306e\u3088\u3046\u306a\u5834\u5408\u308f\u3051\u306b\u3088\u308b\u7d44\u307f\u5408\u308f\u305b\u3092\u3059\u3079\u3066\u8a66\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306eprecision\u3068recall\u304c\u6700\u5927\u3068\u306a\u308b\u30d1\u30e9\u30e1\u30fc\u30bf(best_params_)\u3092\u6c42\u3081\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u306d\u3002\uff08\u306a\u304a\u3001gamma\u306fkernel\u304crbf\u306e\u5834\u5408\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u306e\u3067\u3001kernel\u304clinear\u306e\u5834\u5408\u306f\u7121\u95a2\u4fc2\u3067\u3059\uff09\n\u5f8c\u306f\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306e\u7d50\u679c\u3092\u7d30\u304b\u304f\u8868\u793a\u3055\u305b\u305f\u308a\u3001classification_report()\u3067\u7d50\u679c\u306e\u8a73\u7d30\u306a\u30ec\u30dd\u30fc\u30c8\u3092\u8868\u793a\u3055\u305b\u305f\u308a\u3057\u3066\u3044\u307e\u3059\u3002   \n# \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u8a13\u7df4\u7528\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u306b\u5206\u5272\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.5, random_state=0)\n\n# \u30af\u30ed\u30b9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u6700\u9069\u5316\u3057\u305f\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30bb\u30c3\u30c8\ntuned_parameters = [{'kernel': ['rbf'], 'gamma': [1e-3, 1e-4],\n                     'C': [1, 10, 100, 1000]},\n                    {'kernel': ['linear'], 'C': [1, 10, 100, 1000]}]\n\nscores = ['precision', 'recall']\n\nfor score in scores:\n    print(\"# Tuning hyper-parameters for %s\" % score)\n    print()\n\n    # \u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u3068\u4ea4\u5dee\u691c\u8a3c\u6cd5\n    clf = GridSearchCV(SVC(C=1), tuned_parameters, cv=5,\n                       scoring='%s_weighted' % score)\n    clf.fit(X_train, y_train)\n\n    print(\"Best parameters set found on development set:\")\n    print()\n    print(clf.best_params_)\n    print()\n    print(\"Grid scores on development set:\")\n    print()\n    for params, mean_score, scores in clf.grid_scores_:\n        print(\"%0.3f (+/-%0.03f) for %r\"\n              % (mean_score, scores.std() * 2, params))\n    print()\n    print(\"Detailed classification report:\")\n    print()\n    print(\"The model is trained on the full development set.\")\n    print(\"The scores are computed on the full evaluation set.\")\n    print()\n    y_true, y_pred = y_test, clf.predict(X_test)\n    print(classification_report(y_true, y_pred))\n    print()  \n\n# Tuning hyper-parameters for precision\n\nBest parameters set found on development set:\n\n{'gamma': 0.001, 'kernel': 'rbf', 'C': 10}\n\nGrid scores on development set:\n\n0.987 (+/-0.018) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 1}\n0.959 (+/-0.030) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 1}\n0.988 (+/-0.018) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 10}\n0.982 (+/-0.027) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 10}\n0.988 (+/-0.018) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 100}\n0.982 (+/-0.026) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 100}\n0.988 (+/-0.018) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 1000}\n0.982 (+/-0.026) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 1000}\n0.974 (+/-0.014) for {'kernel': 'linear', 'C': 1}\n0.974 (+/-0.014) for {'kernel': 'linear', 'C': 10}\n0.974 (+/-0.014) for {'kernel': 'linear', 'C': 100}\n0.974 (+/-0.014) for {'kernel': 'linear', 'C': 1000}\n\nDetailed classification report:\n\nThe model is trained on the full development set.\nThe scores are computed on the full evaluation set.\n\n             precision    recall  f1-score   support\n\n          0       1.00      1.00      1.00        89\n          1       0.97      1.00      0.98        90\n          2       0.99      0.98      0.98        92\n          3       1.00      0.99      0.99        93\n          4       1.00      1.00      1.00        76\n          5       0.99      0.98      0.99       108\n          6       0.99      1.00      0.99        89\n          7       0.99      1.00      0.99        78\n          8       1.00      0.98      0.99        92\n          9       0.99      0.99      0.99        92\n\navg / total       0.99      0.99      0.99       899\n\n\n# Tuning hyper-parameters for recall\n\nBest parameters set found on development set:\n\n{'gamma': 0.001, 'kernel': 'rbf', 'C': 10}\n\nGrid scores on development set:\n\n0.986 (+/-0.021) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 1}\n0.958 (+/-0.029) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 1}\n0.987 (+/-0.021) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 10}\n0.981 (+/-0.029) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 10}\n0.987 (+/-0.021) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 100}\n0.981 (+/-0.027) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 100}\n0.987 (+/-0.021) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 1000}\n0.981 (+/-0.027) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 1000}\n0.973 (+/-0.015) for {'kernel': 'linear', 'C': 1}\n0.973 (+/-0.015) for {'kernel': 'linear', 'C': 10}\n0.973 (+/-0.015) for {'kernel': 'linear', 'C': 100}\n0.973 (+/-0.015) for {'kernel': 'linear', 'C': 1000}\n\nDetailed classification report:\n\nThe model is trained on the full development set.\nThe scores are computed on the full evaluation set.\n\n             precision    recall  f1-score   support\n\n          0       1.00      1.00      1.00        89\n          1       0.97      1.00      0.98        90\n          2       0.99      0.98      0.98        92\n          3       1.00      0.99      0.99        93\n          4       1.00      1.00      1.00        76\n          5       0.99      0.98      0.99       108\n          6       0.99      1.00      0.99        89\n          7       0.99      1.00      0.99        78\n          8       1.00      0.98      0.99        92\n          9       0.99      0.99      0.99        92\n\navg / total       0.99      0.99      0.99       899\n\n\u3055\u3066\u3001print(clf.best_params_)\u306e\u7d50\u679c\u304b\u3089\u3001precision/recall\u306e\u3069\u3061\u3089\u306e\u89b3\u70b9\u304b\u3089\u898b\u3066\u3082'gamma': 0.001, 'kernel': 'rbf', 'C': 10\u304c\u6700\u826f\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u3053\u308c\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6700\u9069\u5316\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u5fc5\u8981\u306a\u3089\u3001\u3055\u3089\u306b\u5225\u306ekernel\u3092\u4f7f\u3063\u305f\u5834\u5408\u3084SVM\u4ee5\u5916\u306e\u5b66\u7fd2\u624b\u6cd5\u3068\u6bd4\u8f03\u3057\u305f\u5834\u5408\u306e\u6700\u9069\u5316\u3082\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u53c2\u8003\n[1]An introduction to machine learning with scikit-learn \u2014 scikit-learn 0.18.1 documentation\nhttp://scikit-learn.org/stable/tutorial/basic/tutorial.html#introduction\n[2]Parameter estimation using grid search with cross-validation \u2014 scikit-learn 0.18.1 documentation\nhttp://scikit-learn.org/stable/auto_examples/model_selection/grid_search_digits.html#example-model-selection-grid-search-digits-py\n[3]1.4. Support Vector Machines \u2014 scikit-learn 0.18.1 documentation\nhttp://scikit-learn.org/stable/modules/svm.html\n[4]F\u5024 - \u6a5f\u68b0\u5b66\u7fd2\u306e\u300c\u6731\u9dfa\u306e\u675cWiki\u300d\nhttp://ibisforest.org/index.php?F%E5%80%A4\n[5]SVM\u3092\u4f7f\u3044\u3053\u306a\u3059\uff01\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c88\u3064 - Qiita\nhttp://qiita.com/pika_shi/items/5e59bcf69e85fdd9edb2\n[6]Scikit learn\u3088\u308a\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306b\u3088\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u6700\u9069\u5316\nhttp://qiita.com/SE96UoC5AfUt7uY/items/c81f7cea72a44a7bfd3a\n[7]\u6a5f\u68b0\u5b66\u7fd2\u306e\u305f\u3081\u306e\u30d9\u30a4\u30ba\u6700\u9069\u5316\u5165\u9580\uff5cTech Book Zone Manatee\nhttps://book.mynavi.jp/manatee/detail/id=59393\n[8]3.3. Model evaluation: quantifying the quality of predictions \u2014 scikit-learn 0.18.1 documentation\nhttp://scikit-learn.org/stable/modules/model_evaluation.html#scoring-parameter\n[9]\u904e\u5270\u9069\u5408 - Wikipedia\nhttps://ja.wikipedia.org/wiki/%E9%81%8E%E5%89%B0%E9%81%A9%E5%90%88\n## \u6982\u8981\n\u3053\u3053\u3067\u306f**\u300c\u306f\u304c\u304d\u306b\u8a18\u5165\u3055\u308c\u305f\u624b\u66f8\u304d\u306e\u90f5\u4fbf\u756a\u53f7\u3092\u81ea\u52d5\u3067\u8b58\u5225\u3057\u3066\u307f\u3088\u3046\u300d**\u3068\u3044\u3046\u4f8b\u984c\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\n\u521d\u5fc3\u8005\u5411\u3051\u306e\u8a18\u4e8b\u3067\u3059\u3002\u57fa\u672c\u7684\u306b\u306f\u3001scikit-learn\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3084Document\u3092\u307e\u3068\u3081\u305f\u5185\u5bb9\u3067\u3059\u304c\u3001\u305d\u308c\u4ee5\u5916\u306e\u5185\u5bb9\u3082\u542b\u307f\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306fdigits\u3092\u3001\u6a5f\u68b0\u5b66\u7fd2\u306e\u624b\u6cd5\u306fSVM(\u6b63\u78ba\u306b\u306fSVC)\u3092\u7528\u3044\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n+ digits : \u624b\u66f8\u304d\u306e\u6570\u5b57\u6587\u5b57\u753b\u50cf\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\n+ SVC : \u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306e\u4e00\u7a2e\n\n\uff08\u6ce8\uff09\u7b46\u8005\u306f\u5b66\u751f\u6642\u4ee3\u3001\u6a5f\u68b0\u5b66\u7fd2\u3084\u30c7\u30fc\u30bf\u30de\u30a4\u30cb\u30f3\u30b0\u306e\u7814\u7a76\u5ba4\u306b\u6240\u5c5e\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u305d\u306e\u3068\u304d\u306fR\u3092\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u3002\u672c\u6587\u306b\u9593\u9055\u3044\u7b49\u3042\u308a\u307e\u3057\u305f\u3089\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\n## \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8:digits\ndigits\u306f\u6570\u5b57\u30e9\u30d9\u30eb\u3068\u6570\u5b57\u753b\u50cf\u30c7\u30fc\u30bf\u304c\u7d44\u3068\u306a\u3063\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002\u3053\u306e\u30e9\u30d9\u30eb\u3068\u753b\u50cf\u306e\u7d44\u3092\u3001\u5f8c\u307b\u3069\u5b66\u7fd2\u3057\u3066\u3044\u304f\u308f\u3051\u3067\u3059\u306d\u3002scikit-learn\u306b\u3088\u308a\u3042\u3089\u304b\u3058\u3081\u30c7\u30fc\u30bf\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u8ab0\u3067\u3082\u7c21\u5358\u306b\u8a66\u3057\u3066\u307f\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\ndatasets.load_digits()\u3067\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8digits\u304c\u8aad\u307f\u8fbc\u3081\u307e\u3059\u3002\n\n\n```python\nfrom sklearn import datasets\nfrom matplotlib import pyplot as plt\n# from sklearn import datasets\n\ndigits = datasets.load_digits()\n```\n\n### \u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u898b\u308b\n\u5404\u753b\u50cf\u306f0~9\u307e\u3067\u306e\u624b\u66f8\u304d\u6587\u5b57\u753b\u50cf\u3067\u3059\u3002\u3053\u308c\u3089\u306e\u753b\u50cf\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u4e0a\u3067\u306f0~255\u306e\u5024\u3092\u3082\u3064\u4e8c\u6b21\u5143\u914d\u5217\u3067\u8868\u3055\u308c\u307e\u3059\u3002\n\n\n```python\n# \u753b\u50cf\u306e\u914d\u5217\u30c7\u30fc\u30bf\nprint(digits.data)\n```\n\n    [[  0.   0.   5. ...,   0.   0.   0.]\n     [  0.   0.   0. ...,  10.   0.   0.]\n     [  0.   0.   0. ...,  16.   9.   0.]\n     ..., \n     [  0.   0.   1. ...,   6.   0.   0.]\n     [  0.   0.   2. ...,  12.   0.   0.]\n     [  0.   0.  10. ...,  12.   1.   0.]]\n    \n\n\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u914d\u5217\u306e\u307e\u307e\u773a\u3081\u3066\u3082\u308f\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u3001\u753b\u50cf\u3068\u3057\u3066\u8868\u793a\u3055\u305b\u3066\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\n\u753b\u50cf\u3092\u8868\u793a\u3055\u305b\u308b\u524d\u306b\u3001\u307e\u305a\u306f\u3001\u30e9\u30d9\u30eb\u30c7\u30fc\u30bf\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\u4e0b\u306e\u3088\u3046\u306b\u3001\u3042\u3089\u304b\u3058\u30810~9\u306e\u30e9\u30d9\u30eb\u304c\u6b63\u3057\u304f\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n```python\n# \u30e9\u30d9\u30eb\nprint(digits.target)\n```\n\n    [0 1 2 ..., 8 9 8]\n    \n\n\u4e0a\u306e\u7d50\u679c\u3092\u898b\u3066\u307f\u308b\u3068\u3001\u4f8b\u3048\u3070\u5148\u982d\u304b\u30890, 1, 2\u756a\u76ee\u306e\u753b\u50cf\u306b\u306f\u30e9\u30d9\u30eb0, 1, 2\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u307e\u3059\u3057\u3001\u5f8c\u308d\u304b\u30892\u756a\u76ee\u306e\u753b\u50cf\u306b\u306f\u30e9\u30d9\u30eb9\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u306e\u306b\u306f\u3001matplotlib\u304c\u4f7f\u3048\u307e\u3059\u3002\n\n\n```python\n#  \u753b\u50cf\u306e\u8868\u793a\n# number 0\nplt.subplot(141), plt.imshow(digits.images[0], cmap = 'gray')\nplt.title('number 0'), plt.xticks([]), plt.yticks([])\n\n# number 1\nplt.subplot(142), plt.imshow(digits.images[1], cmap = 'gray')\nplt.title('numbert 1'), plt.xticks([]), plt.yticks([])\n\n# number 2\nplt.subplot(143), plt.imshow(digits.images[2], cmap = 'gray')\nplt.title('numbert 2'), plt.xticks([]), plt.yticks([])\n\n# number 9\nplt.subplot(144), plt.imshow(digits.images[-2], cmap = 'gray')\nplt.title('numbert 9'), plt.xticks([]), plt.yticks([])\n\nplt.show()\n```\n\n![output_7_0.png](https://qiita-image-store.s3.amazonaws.com/0/133967/81c4b39d-e8d2-c0b4-1753-93810ccf59e9.png)\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u5404\u753b\u50cf\u306b\u6b63\u3057\u3044\u30e9\u30d9\u30eb\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u308b\u3089\u3057\u3044\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n## SVM\u306b\u3088\u308b\u753b\u50cf\u5206\u985e\n### SVM\u3068\u306f\n**SVM(Support Vector Machine)**\u306f\u3001\u975e\u5e38\u306b\u512a\u308c\u305f\u8a8d\u8b58\u6027\u80fd\u3092\u6301\u3064\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u624b\u6cd5\u306e\u3072\u3068\u3064\u3067\u3059\u3002\u57fa\u672c\u7684\u306b\u306f\u30012\u30af\u30e9\u30b9\u5206\u985e\u3092\u30de\u30fc\u30b8\u30f3\u6700\u5927\u5316\u3092\u57fa\u6e96\u3068\u3057\u3066\u884c\u3044\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001(2\u30af\u30e9\u30b9\u5206\u985e\u3092\u8907\u6570\u56de\u884c\u3046\u3053\u3068\u3067)\u591a\u30af\u30e9\u30b9\u5206\u985e\u306b\u3082\u9069\u7528\u3067\u304d\u307e\u3059\u3002\n\n\u53b3\u5bc6\u306aSVM\u3067\u306f\u3001\u5206\u985e\u3059\u308b\u30c7\u30fc\u30bf\u306b\u91cd\u306a\u308a\u304c\u3042\u308b\u5834\u5408(\u3064\u307e\u308a\u3001\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u5b8c\u5168\u306b\u5207\u308a\u308f\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u5834\u5408)\u306f\u3001\u304d\u3061\u3093\u3068\u3057\u305f\u5206\u985e\u5883\u754c\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u4e00\u65b9\u3001\u30a8\u30e9\u30fc\u3092\u8a31\u5bb9\u3059\u308bSVM\u306f**\u30bd\u30d5\u30c8\u30de\u30fc\u30b8\u30f3SVM**\u3068\u547c\u3070\u308c\u307e\u3059\u3002\u8aa4\u5206\u985e\u306b\u30da\u30ca\u30eb\u30c6\u30a3C\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u3001\u5b8c\u5168\u306b\u5206\u3051\u3089\u308c\u306a\u3044\u30c7\u30fc\u30bf\u306e\u5834\u5408\u3067\u3082\u3001\u3067\u304d\u308b\u3060\u3051\u8aa4\u5206\u985e\u3092\u5c11\u306a\u304f\u3059\u308b\u3088\u3046\u306a\u5206\u985e\u5883\u754c\u3092\u5f15\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30da\u30ca\u30eb\u30c6\u30a3C\u304c\u5927\u304d\u3044\u307b\u3069\u8aa4\u308a\u306b\u53b3\u3057\u304f\u306a\u308b\u3068\u540c\u6642\u306b\u3001**\u904e\u5b66\u7fd2(Overfitting)**\u3092\u8d77\u3053\u3057\u3084\u3059\u304f\u306a\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\uff08\u6ce8\uff09\u904e\u5b66\u7fd2\u3068\u306f\u3001\u5b66\u7fd2\u30e2\u30c7\u30eb\u304c\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u7279\u5b9a\u306e\u30e9\u30f3\u30c0\u30e0\u306a\uff08\u672c\u6765\u5b66\u7fd2\u3055\u305b\u305f\u3044\u7279\u5fb4\u3068\u306f\u7121\u95a2\u4fc2\u306a\uff09\u7279\u5fb4\u306b\u307e\u3067\u9069\u5408\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u3059\u3002\u904e\u5b66\u7fd2\u304c\u8d77\u3053\u3063\u305f\u5834\u5408\u3001\u8a13\u7df4\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u306e\u6027\u80fd\u306f\u5411\u4e0a\u3057\u307e\u3059\u304c\u3001\u305d\u308c\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u3067\u306f\u9006\u306b\u7d50\u679c\u304c\u60aa\u304f\u306a\u308a\u307e\u3059\u3002\uff08\u53c2\u8003\uff1a\u904e\u5270\u9069\u5408 - Wikipedia\uff09\n\n### scikit-learn\u3067\u306eSVM\n\u5b9f\u306f\u3001scikit-learn\u3067\u306fSVC\u3001NuSVC\u3001LinearSVC\u3068\u3044\u3063\u305f\u3084\u3084\u7a2e\u985e\u306e\u7570\u306a\u308bSVM\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002NuSVC\u3068SVC\u306f\u826f\u304f\u4f3c\u305f\u624b\u6cd5\u3067\u3059\u304c\u3001\u308f\u305a\u304b\u306b\u7570\u306a\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u6301\u3061\u3001\u6570\u5b66\u7684\u306b\u306f\u7570\u306a\u308b\u5b9a\u5f0f\u5316\u3067\u8868\u3055\u308c\u307e\u3059\u3002LinearSVC\u306f\u7dda\u5f62\u30ab\u30fc\u30cd\u30eb\u3092\u7528\u3044\u305fSVM\u3067\u3042\u308a\u3001\u305d\u306e\u307b\u304b\u306e\u30ab\u30fc\u30cd\u30eb\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u4eca\u56de\u306fSVC\u3092\u7528\u3044\u3001\u30bd\u30d5\u30c8\u30de\u30fc\u30b8\u30f3\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\u3084\u308b\u3053\u3068\u306f\u3001**(1)\u8b58\u5225\u5668\u3092\u4f5c\u6210\u3057\u3001(2)\u30c7\u30fc\u30bf\u306b\u9069\u7528\u3059\u308b**\u3060\u3051\u3067\u3059\u3002\n\n### \uff081\uff09\u8b58\u5225\u5668\u306e\u4f5c\u6210\n+ \u6700\u5f8c\u306e\uff110\u4ef6\u4ee5\u5916\u3067\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\n\n\n```python\nfrom sklearn import svm\n\n# SVM\nclf = svm.SVC(gamma=0.001, C=100.)\nclf.fit(digits.data[:-10], digits.target[:-10])\n```\n\n\n\n\n    SVC(C=100.0, cache_size=200, class_weight=None, coef0=0.0,\n      decision_function_shape=None, degree=3, gamma=0.001, kernel='rbf',\n      max_iter=-1, probability=False, random_state=None, shrinking=True,\n      tol=0.001, verbose=False)\n\n\n\n\u3053\u3053\u3067\u306f\u307b\u3068\u3093\u3069\u6307\u5b9a\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u4e0a\u306e\u3088\u3046\u306bSVC\u306b\u306f\u304b\u306a\u308a\u591a\u304f\u306e\u30d1\u30e9\u30e1\u30fc\u30bf(C, cache_size, class_weight, coef0, ...)\u304c\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u6700\u521d\u306f\u3042\u307e\u308a\u6c17\u306b\u305b\u305a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u3067\u5927\u4e08\u592b\u3067\u3059\u3002\n\n### \uff082\uff09\u8b58\u5225\u5668\u306b\u3088\u308b\u753b\u50cf\u5206\u985e\n+ \u5b66\u7fd2\u30e2\u30c7\u30eb\u304b\u3089\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u6700\u5f8c\u306e10\u4ef6\u3092\u63a8\u5b9a\n\n\u4f5c\u6210\u3057\u305f\u8b58\u5225\u5668\u3092\u7528\u3044\u3066\u3001\u5b9f\u969b\u306b\u753b\u50cf\u304b\u3089\u30e9\u30d9\u30eb\u3092\u63a8\u5b9a\u3057\u307e\u3059\u3002\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u4f5c\u6210\u306b\u7528\u3044\u3066\u3044\u306a\u3044\u3001\u6700\u5f8c\u306e10\u4ef6\u306e\u30c7\u30fc\u30bf\u3067\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n```python\nclf.predict(digits.data[-10:])\n```\n\n\n\n\n    array([5, 4, 8, 8, 4, 9, 0, 8, 9, 8])\n\n\n\n\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u3092\u898b\u3066\u307f\u308b\u3068\u3001\n\n\n```python\nprint(digits.target[-10:])\n```\n\n    [5 4 8 8 4 9 0 8 9 8]\n    \n\n\u3067\u3042\u308a\u3001\u63a8\u5b9a\u7d50\u679c\u3068\u4e00\u81f4\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u3067\u3001\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u304b\u3089\u304a\u304a\u3088\u305d\u6b63\u3057\u3044\u63a8\u5b9a\u304c\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u304c\u78ba\u304b\u3081\u3089\u308c\u307e\u3057\u305f\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u3044\u308d\u3044\u308d\u3068\u5909\u3048\u3066\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## \u8b58\u5225\u5668\u306e\u7cbe\u5ea6\u8a55\u4fa1\n### \u8b58\u5225\u5668\u306e\u8a55\u4fa1\u6307\u6a19\n\u8b58\u5225\u5668\u306e\u5206\u985e\u7cbe\u5ea6\u306e\u8a55\u4fa1\u6307\u6a19\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6307\u6a19\u306b\u3088\u3063\u3066\u6e2c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n+ **\u6b63\u89e3\u7387(Accuracy)**\n  + \u4e88\u6e2c\u306e\u3046\u3061\u3001\u6b63\u3057\u304f\u5206\u985e\u3055\u308c\u305f\u3082\u306e\u306e\u5272\u5408\n+ **\u9069\u5408\u7387(Precision)**\n  + \u6b63\u3068\u4e88\u6e2c\u3057\u305f\u30c7\u30fc\u30bf\u306e\u3046\u3061\uff0c\u5b9f\u969b\u306b\u6b63\u3067\u3042\u308b\u3082\u306e\u306e\u5272\u5408\n+ **\u518d\u73fe\u7387(Recall)**\n  + \u5b9f\u969b\u306b\u6b63\u3067\u3042\u308b\u3082\u306e\u306e\u3046\u3061\uff0c\u6b63\u3067\u3042\u308b\u3068\u4e88\u6e2c\u3055\u308c\u305f\u3082\u306e\u306e\u5272\u5408\n+ **F\u5024(F-measure)**\n  + \u7cbe\u5ea6\u3068\u518d\u73fe\u7387\u306e\u8abf\u548c\u5e73\u5747\n\n\u901a\u5e38\u306f\u8b58\u5225\u5668\u306e\u7cbe\u5ea6\u306fF\u5024\u3067\u8a55\u4fa1\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u5b9f\u7528\u4e0a\u306f\u9069\u5408\u7387\u3068\u518d\u73fe\u7387\u306e\u3069\u3061\u3089\u3092\u91cd\u8996\u3059\u308b\u304b\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u3005\u3042\u308a\u307e\u3059\u3002\n\n### \u9069\u5408\u7387\u3068\u518d\u73fe\u7387\n\u4f8b\u3048\u3070\u3001\u5de5\u5834\u3067\u306e\u90e8\u54c1\u691c\u67fb\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3069\u3053\u3082\u58ca\u308c\u3066\u3044\u306a\u3044\u90e8\u54c1\u3092\u9593\u9055\u3063\u3066\u300c\u58ca\u308c\u3066\u3044\u308b\uff08\u30a8\u30e9\u30fc\uff09\u300d\u306b\u5206\u985e\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u5927\u3057\u305f\u554f\u984c\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002\u3068\u3053\u308d\u304c\u3001\u58ca\u308c\u3066\u3044\u308b\u90e8\u54c1\u3092\u9593\u9055\u3063\u3066\u300c\u58ca\u308c\u3066\u3044\u306a\u3044\uff08\u6b63\uff09\u300d\u3068\u5206\u985e\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u30af\u30ec\u30fc\u30e0\u3084\u30ea\u30b3\u30fc\u30eb\u306e\u539f\u56e0\u306b\u306a\u3063\u305f\u308a\u3001\u5546\u54c1\u306b\u3088\u3063\u3066\u306f\u4eba\u547d\u306b\u304b\u304b\u308f\u308b\u3053\u3068\u3055\u3048\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u3001\u518d\u73fe\u7387\u3088\u308a\u3082\u9069\u5408\u7387\u306e\u65b9\u304c\u91cd\u8996\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u300c\u9069\u5408\u738799%+\u518d\u73fe\u738750%\u300d\u3068\u300c\u9069\u5408\u738780%+\u518d\u73fe\u738799%\u300d\u3067\u306f\u3001\u5f8c\u8005\u306e\u65b9\u304cF\u5024\u306f\u9ad8\u3044\u3067\u3059\u304c\u3001\u5b9f\u7528\u6027\u306f\u5727\u5012\u7684\u306b\u524d\u8005\u304c\u9ad8\u3044\u3068\u3044\u3046\u5834\u5408\u304c\u3042\u308a\u5f97\u308b\u306e\u3067\u3059\u3002\n\u4e00\u65b9\u3067\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u691c\u7d22\u306a\u3069\u306e\u5834\u5408\u306f\u3001\u9069\u5408\u7387\u3088\u308a\u3082\u518d\u73fe\u7387\u304c\u91cd\u8996\u3055\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3057\u3087\u3046\u3002\u591a\u5c11\u9593\u9055\u3063\u305f\u691c\u7d22\u7d50\u679c\u304c\u591a\u304f\u51fa\u3066\u3082\u3001\u691c\u7d22\u3057\u3066\u3082\u898b\u3064\u304b\u3089\u306a\u3044\u30c7\u30fc\u30bf\u304c\u591a\u3044\u3088\u308a\u306f\u306f\u308b\u304b\u306b\u307e\u3057\u3060\u304b\u3089\u3067\u3059\u3002\n\n## \u30d1\u30e9\u30e1\u30fc\u30bf\u6700\u9069\u5316\n\u3053\u308c\u307e\u3067\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u306a\u3093\u3068\u306a\u304f\u3067\u9069\u5f53\u306a\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3057\u305f\u3002 \u3057\u304b\u3057\u3001\u3053\u308c\u3067\u306f\u8981\u6c42\u3055\u308c\u308b\u5206\u985e\u7cbe\u5ea6\u304c\u5f97\u3089\u308c\u306a\u3044\u3053\u3068\u3082\u591a\u304f\u3001\u5b9f\u969b\u306b\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6700\u9069\u5316\u304c\u5fc5\u9808\u3068\u306a\u308a\u307e\u3059\u3002\u3067\u306f\u3001\u8b58\u5225\u5668\u306e\u5206\u985e\u7cbe\u5ea6\u3092\u9ad8\u3081\u308b\u305f\u3081\u306b\u3069\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u3069\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308c\u3070\u3088\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u3072\u3068\u3064\u305a\u3064\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u624b\u3067\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3057\u3066\u3044\u3063\u3066\u3082\u826f\u3044\u3067\u3059\u304c\u3001\u3053\u308c\u306f\u975e\u5e38\u306b\u5927\u5909\u3067\u3059\u3002\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3084\u624b\u6cd5\u306b\u3088\u3063\u3066\u306f\u6163\u7fd2\u7684\u306b\u3053\u308c\u304f\u3089\u3044\u306e\u5024\u304c\u826f\u3044\u3001\u306a\u3069\u306e\u77e5\u898b\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u672a\u77e5\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u5834\u5408\u306b\u306f\u4f7f\u3048\u307e\u305b\u3093\u3002\n\u305d\u3053\u3067\u3001\u3088\u304f\u7528\u3044\u3089\u308c\u308b\u306e\u304c\u3001**\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1**\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3059\u3002\u7c21\u5358\u306b\u8aac\u660e\u3059\u308c\u3070\u3001\u63a2\u7d22\u7bc4\u56f2\u306e\u306a\u304b\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u5316\u3055\u305b\u306a\u304c\u3089\u5b9f\u969b\u306b\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3057\u3001\u305d\u306e\u7d50\u679c\u306e\u7cbe\u5ea6\u304c\u6700\u3082\u826f\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u63a2\u3059\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3059\u3002\n\u307e\u305f\u3001\u6c42\u3081\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u306e\u5b66\u7fd2\u30e2\u30c7\u30eb\u304c\u904e\u5b66\u7fd2\u3092\u8d77\u3053\u3057\u3066\u3044\u306a\u3044\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u306f\u3001**\u4ea4\u5dee\u691c\u8a3c\u6cd5\uff08Cross-validation\uff09**\u3092\u7528\u3044\u307e\u3059\u3002k-\u4ea4\u5dee\u691c\u8a3c\u6cd5\u3067\u306f\u3001\u307e\u305a\u3001\u30c7\u30fc\u30bf\u3092k\u500b\u306b\u5206\u5272\u3057\u307e\u3059\u3002\u305d\u306e\u3046\u3061\u306ek-1\u500b\u3067\u5b66\u7fd2\u3001\u6b8b\u3063\u305f1\u500b\u3067\u8a55\u4fa1\u3059\u308b\u3068\u3044\u3046\u306e\u3092\uff08\u8a13\u7df4\u30c7\u30fc\u30bf\u30fb\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5909\u3048\u306a\u304c\u3089\uff09k\u56de\u7e70\u308a\u8fd4\u3057\u3001\u305d\u306e\u5e73\u5747\u5024\u3067\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u8a55\u4fa1\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e**\u6c4e\u5316\u6027\u80fd**\u3092\u8a55\u4fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\uff08\u6ce8\uff09\u6c4e\u5316\u6027\u80fd\u304c\u826f\u3044\u3068\u306f\u3001\u7c21\u5358\u306b\u8a00\u3048\u3070\u672a\u77e5\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u3082\u5b66\u7fd2\u30e2\u30c7\u30eb\u304c\u9069\u5207\u306a\u8b58\u5225\u3092\u884c\u3048\u308b\u80fd\u529b\u306e\u3053\u3068\u3067\u3059\u3002\u904e\u5b66\u7fd2\u3092\u8d77\u3053\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u8a13\u7df4\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u306f\u9ad8\u3044\u7cbe\u5ea6\u3067\u8b58\u5225\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u672a\u77e5\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u306f\u8b58\u5225\u306e\u7cbe\u5ea6\u304c\u4f4e\u4e0b\u3059\u308b\u3053\u3068\u3092\u601d\u3044\u51fa\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nscikit-learn\u3067\u306f\u3001GridSearchCV()\u3092\u7528\u3044\u3066\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u3068\u4ea4\u5dee\u691c\u8a3c\u6cd5\u3092\u7c21\u5358\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n+ scoring\n  + \u30d1\u30e9\u30e1\u30fc\u30bf\u6700\u9069\u5316\u306b\u304a\u3051\u308b\u8a55\u4fa1\u5024\u3002\u4eca\u56de\u306f'precision'\u3068'recall'\u3092\u6307\u5b9a\n+ cv\n  + \u4ea4\u5dee\u691c\u8a3c\u306e\u5206\u5272\u6570\u300210\u7a0b\u5ea6\u306e\u3053\u3068\u304c\u591a\u3044\u3002\u8a08\u7b97\u91cf\u304c\u5927\u304d\u304f\u306a\u308a\u3059\u304e\u308b\u5834\u5408\u3084\u3001\u9006\u306b\u30c7\u30fc\u30bf\u6570\u304c\u5c11\u306a\u3059\u304e\u308b\u5834\u5408\u306f\u5206\u5272\u6570\u3092\u5c11\u306a\u304f\u6307\u5b9a\n\n### \u6e96\u5099\n\u30d1\u30e9\u30e1\u30fc\u30bf\u6700\u9069\u5316\u3092\u884c\u3046\u524d\u306b\u3001\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u306e\u5f62\u5f0f\u3092\u5909\u63db\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```python\nfrom sklearn import datasets\nfrom sklearn.cross_validation import train_test_split\nfrom sklearn.grid_search import GridSearchCV\nfrom sklearn.metrics import classification_report\nfrom sklearn.svm import SVC\n\n# Digits\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30ed\u30fc\u30c9\ndigits = datasets.load_digits()\nprint(len(digits.images))\nprint(digits.images.shape)\n```\n\n    1797\n    (1797, 8, 8)\n    \n\n\n```python\n# To apply an classifier on this data, we need to flatten the image, to\n# turn the data in a (samples, feature) matrix:\nn_samples = len(digits.images)\nX = digits.images.reshape((n_samples, -1))  # reshape(cols, rows)\u3067cols\u884crows\u5217\u306b\u5909\u63db(\u5f15\u6570\u306e\u4e00\u65b9\u304c-1\u3060\u3068\u81ea\u52d5\u8a08\u7b97)\ny = digits.target\nprint(X.shape)\nprint(y)\n```\n\n    (1797, 64)\n    [0 1 2 ..., 8 9 8]\n    \n\n### \u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u3068\u4ea4\u5dee\u691c\u8a3c\u6cd5\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u4e00\u898b\u96e3\u3057\u305d\u3046\u3067\u3059\u304c\u3001\u5b9f\u969b\u306b\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u5358\u7d14\u3067\u3059\u3002\n\n+ kernel = \"rbf\", gamma = 0.001 or 0.0001, C = 1 or 10 or 100 or 1000\n+ kernel = \"linear\", C = 1 or 10 or 100 or 1000\n\n\u4e0a\u306e\u3088\u3046\u306a\u5834\u5408\u308f\u3051\u306b\u3088\u308b\u7d44\u307f\u5408\u308f\u305b\u3092\u3059\u3079\u3066\u8a66\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306eprecision\u3068recall\u304c\u6700\u5927\u3068\u306a\u308b\u30d1\u30e9\u30e1\u30fc\u30bf(best\\_params\\_)\u3092\u6c42\u3081\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u306d\u3002\uff08\u306a\u304a\u3001gamma\u306fkernel\u304crbf\u306e\u5834\u5408\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u306e\u3067\u3001kernel\u304clinear\u306e\u5834\u5408\u306f\u7121\u95a2\u4fc2\u3067\u3059\uff09\n\n\u5f8c\u306f\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306e\u7d50\u679c\u3092\u7d30\u304b\u304f\u8868\u793a\u3055\u305b\u305f\u308a\u3001classification_report()\u3067\u7d50\u679c\u306e\u8a73\u7d30\u306a\u30ec\u30dd\u30fc\u30c8\u3092\u8868\u793a\u3055\u305b\u305f\u308a\u3057\u3066\u3044\u307e\u3059\u3002   \n\n```python\n# \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u8a13\u7df4\u7528\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u306b\u5206\u5272\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.5, random_state=0)\n\n# \u30af\u30ed\u30b9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3067\u6700\u9069\u5316\u3057\u305f\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30bb\u30c3\u30c8\ntuned_parameters = [{'kernel': ['rbf'], 'gamma': [1e-3, 1e-4],\n                     'C': [1, 10, 100, 1000]},\n                    {'kernel': ['linear'], 'C': [1, 10, 100, 1000]}]\n\nscores = ['precision', 'recall']\n\nfor score in scores:\n    print(\"# Tuning hyper-parameters for %s\" % score)\n    print()\n\n    # \u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u3068\u4ea4\u5dee\u691c\u8a3c\u6cd5\n    clf = GridSearchCV(SVC(C=1), tuned_parameters, cv=5,\n                       scoring='%s_weighted' % score)\n    clf.fit(X_train, y_train)\n\n    print(\"Best parameters set found on development set:\")\n    print()\n    print(clf.best_params_)\n    print()\n    print(\"Grid scores on development set:\")\n    print()\n    for params, mean_score, scores in clf.grid_scores_:\n        print(\"%0.3f (+/-%0.03f) for %r\"\n              % (mean_score, scores.std() * 2, params))\n    print()\n    print(\"Detailed classification report:\")\n    print()\n    print(\"The model is trained on the full development set.\")\n    print(\"The scores are computed on the full evaluation set.\")\n    print()\n    y_true, y_pred = y_test, clf.predict(X_test)\n    print(classification_report(y_true, y_pred))\n    print()  \n```\n\n    # Tuning hyper-parameters for precision\n    \n    Best parameters set found on development set:\n    \n    {'gamma': 0.001, 'kernel': 'rbf', 'C': 10}\n    \n    Grid scores on development set:\n    \n    0.987 (+/-0.018) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 1}\n    0.959 (+/-0.030) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 1}\n    0.988 (+/-0.018) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 10}\n    0.982 (+/-0.027) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 10}\n    0.988 (+/-0.018) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 100}\n    0.982 (+/-0.026) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 100}\n    0.988 (+/-0.018) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 1000}\n    0.982 (+/-0.026) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 1000}\n    0.974 (+/-0.014) for {'kernel': 'linear', 'C': 1}\n    0.974 (+/-0.014) for {'kernel': 'linear', 'C': 10}\n    0.974 (+/-0.014) for {'kernel': 'linear', 'C': 100}\n    0.974 (+/-0.014) for {'kernel': 'linear', 'C': 1000}\n    \n    Detailed classification report:\n    \n    The model is trained on the full development set.\n    The scores are computed on the full evaluation set.\n    \n                 precision    recall  f1-score   support\n    \n              0       1.00      1.00      1.00        89\n              1       0.97      1.00      0.98        90\n              2       0.99      0.98      0.98        92\n              3       1.00      0.99      0.99        93\n              4       1.00      1.00      1.00        76\n              5       0.99      0.98      0.99       108\n              6       0.99      1.00      0.99        89\n              7       0.99      1.00      0.99        78\n              8       1.00      0.98      0.99        92\n              9       0.99      0.99      0.99        92\n    \n    avg / total       0.99      0.99      0.99       899\n    \n    \n    # Tuning hyper-parameters for recall\n    \n    Best parameters set found on development set:\n    \n    {'gamma': 0.001, 'kernel': 'rbf', 'C': 10}\n    \n    Grid scores on development set:\n    \n    0.986 (+/-0.021) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 1}\n    0.958 (+/-0.029) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 1}\n    0.987 (+/-0.021) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 10}\n    0.981 (+/-0.029) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 10}\n    0.987 (+/-0.021) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 100}\n    0.981 (+/-0.027) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 100}\n    0.987 (+/-0.021) for {'gamma': 0.001, 'kernel': 'rbf', 'C': 1000}\n    0.981 (+/-0.027) for {'gamma': 0.0001, 'kernel': 'rbf', 'C': 1000}\n    0.973 (+/-0.015) for {'kernel': 'linear', 'C': 1}\n    0.973 (+/-0.015) for {'kernel': 'linear', 'C': 10}\n    0.973 (+/-0.015) for {'kernel': 'linear', 'C': 100}\n    0.973 (+/-0.015) for {'kernel': 'linear', 'C': 1000}\n    \n    Detailed classification report:\n    \n    The model is trained on the full development set.\n    The scores are computed on the full evaluation set.\n    \n                 precision    recall  f1-score   support\n    \n              0       1.00      1.00      1.00        89\n              1       0.97      1.00      0.98        90\n              2       0.99      0.98      0.98        92\n              3       1.00      0.99      0.99        93\n              4       1.00      1.00      1.00        76\n              5       0.99      0.98      0.99       108\n              6       0.99      1.00      0.99        89\n              7       0.99      1.00      0.99        78\n              8       1.00      0.98      0.99        92\n              9       0.99      0.99      0.99        92\n    \n    avg / total       0.99      0.99      0.99       899\n    \n   \n\u3055\u3066\u3001print(clf.best\\_params\\_)\u306e\u7d50\u679c\u304b\u3089\u3001precision/recall\u306e\u3069\u3061\u3089\u306e\u89b3\u70b9\u304b\u3089\u898b\u3066\u3082'gamma': 0.001, 'kernel': 'rbf', 'C': 10\u304c\u6700\u826f\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u3053\u308c\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6700\u9069\u5316\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u5fc5\u8981\u306a\u3089\u3001\u3055\u3089\u306b\u5225\u306ekernel\u3092\u4f7f\u3063\u305f\u5834\u5408\u3084SVM\u4ee5\u5916\u306e\u5b66\u7fd2\u624b\u6cd5\u3068\u6bd4\u8f03\u3057\u305f\u5834\u5408\u306e\u6700\u9069\u5316\u3082\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## \u53c2\u8003\n[1]An introduction to machine learning with scikit-learn \u2014 scikit-learn 0.18.1 documentation\nhttp://scikit-learn.org/stable/tutorial/basic/tutorial.html#introduction\n[2]Parameter estimation using grid search with cross-validation \u2014 scikit-learn 0.18.1 documentation\nhttp://scikit-learn.org/stable/auto_examples/model_selection/grid_search_digits.html#example-model-selection-grid-search-digits-py\n[3]1.4. Support Vector Machines \u2014 scikit-learn 0.18.1 documentation\nhttp://scikit-learn.org/stable/modules/svm.html\n[4]F\u5024 - \u6a5f\u68b0\u5b66\u7fd2\u306e\u300c\u6731\u9dfa\u306e\u675cWiki\u300d\nhttp://ibisforest.org/index.php?F%E5%80%A4\n[5]SVM\u3092\u4f7f\u3044\u3053\u306a\u3059\uff01\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c88\u3064 - Qiita\nhttp://qiita.com/pika_shi/items/5e59bcf69e85fdd9edb2\n[6]Scikit learn\u3088\u308a\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306b\u3088\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u6700\u9069\u5316\nhttp://qiita.com/SE96UoC5AfUt7uY/items/c81f7cea72a44a7bfd3a\n[7]\u6a5f\u68b0\u5b66\u7fd2\u306e\u305f\u3081\u306e\u30d9\u30a4\u30ba\u6700\u9069\u5316\u5165\u9580\uff5cTech Book Zone Manatee\nhttps://book.mynavi.jp/manatee/detail/id=59393\n[8]3.3. Model evaluation: quantifying the quality of predictions \u2014 scikit-learn 0.18.1 documentation\nhttp://scikit-learn.org/stable/modules/model_evaluation.html#scoring-parameter\n[9]\u904e\u5270\u9069\u5408 - Wikipedia\nhttps://ja.wikipedia.org/wiki/%E9%81%8E%E5%89%B0%E9%81%A9%E5%90%88\n", "tags": ["\u6a5f\u68b0\u5b66\u7fd2", "scikit-learn", "Python", "\u5165\u9580"]}