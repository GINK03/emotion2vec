{"context": "\n\n\u306f\u3058\u3081\u306b\nsupervisor\u3092\u904b\u7528\u3057\u3066\u3044\u3066\u3001\u307e\u308c\u306b\u30d7\u30ed\u30bb\u30b9\u304c\u843d\u3061\u3066\u3044\u308b\u3068\u304d\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\u5916\u90e8\u76e3\u8996\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3082\u3042\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u4ee5\u524d\u304b\u3089\u6c17\u306b\u306a\u3063\u3066\u3044\u305fSupervisor\u306eEventListener\u3092\u4f7f\u3063\u3066\u30d7\u30ed\u30bb\u30b9\u306e\u72b6\u614b\u5909\u5316\u3092Slack\u306b\u901a\u77e5\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u3084\u3063\u305f\u3053\u3068\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n/etc/supervisord.d/process_state_event_listener.conf\n[eventlistener:process_state_event_listener]\ncommand=python /path/to/process_state_event_listener.py\nevents=PROCESS_STATE\nredirect_stderr=false\nstdout_logfile=/var/log/supervisor/event_listener_stdout.log\nstdout_logfile_maxbytes=1MB\nstdout_logfile_backups=5\nstderr_logfile=/var/log/supervisor/event_listener_stderr.log\nstderr_logfile_maxbytes=1MB\nstderr_logfile_backups=5\nenvironment=SLACK_WEB_HOOK_URL=\"https://hooks.slack.com/services/xxxxxxx/xxxxxxx/xxxxxxxxxx\"\n\n\n\nevents\n\u30d7\u30ed\u30bb\u30b9\u306e\u72b6\u614b\u5909\u5316\u3092\u3059\u3079\u3066\u901a\u77e5\u3057\u305f\u3044\u306e\u3067\u3001PROCESS_STATE\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\nenvironment\nSlack\u306b\u901a\u77e5\u3059\u308b\u305f\u3081\u306b\u3001Incoming WebHook\u7528\u306eURL\u3092\u74b0\u5883\u5909\u6570\u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\n\u53c2\u8003URL\n\nhttp://supervisord.org/events.html#configuring-an-event-listener\n\n\n\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u306e\u4f5c\u6210\n\u6700\u7d42\u7684\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n/path/to/process_state_event_listener.py\nimport sys\nimport os\nfrom supervisor import childutils\nfrom datetime import datetime\nimport slackweb\n\n\ndef main():\n    while True:\n        run_forever()\n\n\ndef run_forever():\n\n    headers, payload = childutils.listener.wait(sys.stdin, sys.stdout)\n    eventname = headers['eventname']\n\n    payload_header, data = childutils.eventdata(payload+'\\n')\n\n    childutils.listener.ok(sys.stdout)\n\n    color = \"good\"\n    if eventname in ['PROCESS_STATE_BACKOFF', 'PROCESS_STATE_EXITED', 'PROCESS_STATE_FATAL', 'PROCESS_STATE_UNKNOWN']:\n        color = \"danger\"\n\n    attachment = {\n        \"title\": \"event\",\n        \"text\": eventname,\n        \"color\": color,\n        \"fields\": [{\n            \"title\": \"datetime\",\n            \"value\": datetime.now().strftime(\"%Y/%m/%d %H:%M:%S\")\n        }, {\n            \"title\": \"hostname\",\n            \"value\": os.uname()[1]\n        }]\n    }\n\n    if 'processname' in payload_header:\n        attachment[\"fields\"].append({\n            \"title\": \"process\",\n            \"value\": payload_header['processname']\n        })\n\n    if 'expected' in payload_header:\n        attachment[\"fields\"].append({\n            \"title\": \"expected\",\n            \"value\": payload_header['expected']\n        })\n\n    if 'SLACK_WEB_HOOK_URL' in os.environ:\n        slack_url = os.environ['SLACK_WEB_HOOK_URL']\n        slack = slackweb.Slack(url=slack_url)\n        slack.notify(attachments=[attachment])\n\n\nif __name__ == '__main__':\n    main()\n\n\n\n\u901a\u77e5\u30a4\u30e1\u30fc\u30b8\n\n\n\u53c2\u8003URL\n\nSlack\u306bincoming webhook\u7d4c\u7531\u3067python\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092POST\u3059\u308b - Qiita\n\n\n\u304a\u308f\u308a\u306b\n\u30e1\u30fc\u30eb\u901a\u77e5\u3067\u3088\u3051\u308c\u3070superlance\u3068\u3044\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001OP25B\u554f\u984c\u3067gmail\u306b\u30e1\u30fc\u30eb\u304c\u5c4a\u304b\u306a\u304b\u3063\u305f\u308a\u3057\u305f\u306e\u3067\u3001Slack\u306b\u901a\u77e5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nSupervisor\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u5897\u3048\u3066\u304d\u305f\u306e\u3067\u3001\u4eca\u5f8c\u3082\u3044\u308d\u3044\u308d\u5fdc\u7528\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u306f\u3058\u3081\u306b\nsupervisor\u3092\u904b\u7528\u3057\u3066\u3044\u3066\u3001\u307e\u308c\u306b\u30d7\u30ed\u30bb\u30b9\u304c\u843d\u3061\u3066\u3044\u308b\u3068\u304d\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\u5916\u90e8\u76e3\u8996\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3082\u3042\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u4ee5\u524d\u304b\u3089\u6c17\u306b\u306a\u3063\u3066\u3044\u305fSupervisor\u306eEventListener\u3092\u4f7f\u3063\u3066\u30d7\u30ed\u30bb\u30b9\u306e\u72b6\u614b\u5909\u5316\u3092Slack\u306b\u901a\u77e5\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u3084\u3063\u305f\u3053\u3068\n### \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```/etc/supervisord.d/process_state_event_listener.conf\n[eventlistener:process_state_event_listener]\ncommand=python /path/to/process_state_event_listener.py\nevents=PROCESS_STATE\nredirect_stderr=false\nstdout_logfile=/var/log/supervisor/event_listener_stdout.log\nstdout_logfile_maxbytes=1MB\nstdout_logfile_backups=5\nstderr_logfile=/var/log/supervisor/event_listener_stderr.log\nstderr_logfile_maxbytes=1MB\nstderr_logfile_backups=5\nenvironment=SLACK_WEB_HOOK_URL=\"https://hooks.slack.com/services/xxxxxxx/xxxxxxx/xxxxxxxxxx\"\n```\n\n#### events\n\u30d7\u30ed\u30bb\u30b9\u306e\u72b6\u614b\u5909\u5316\u3092\u3059\u3079\u3066\u901a\u77e5\u3057\u305f\u3044\u306e\u3067\u3001`PROCESS_STATE`\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n#### environment\nSlack\u306b\u901a\u77e5\u3059\u308b\u305f\u3081\u306b\u3001Incoming WebHook\u7528\u306eURL\u3092\u74b0\u5883\u5909\u6570\u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\n#### \u53c2\u8003URL\n- http://supervisord.org/events.html#configuring-an-event-listener\n\n### \u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u306e\u4f5c\u6210\n\u6700\u7d42\u7684\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```/path/to/process_state_event_listener.py\nimport sys\nimport os\nfrom supervisor import childutils\nfrom datetime import datetime\nimport slackweb\n\n\ndef main():\n    while True:\n        run_forever()\n\n\ndef run_forever():\n\n    headers, payload = childutils.listener.wait(sys.stdin, sys.stdout)\n    eventname = headers['eventname']\n\n    payload_header, data = childutils.eventdata(payload+'\\n')\n\n    childutils.listener.ok(sys.stdout)\n\n    color = \"good\"\n    if eventname in ['PROCESS_STATE_BACKOFF', 'PROCESS_STATE_EXITED', 'PROCESS_STATE_FATAL', 'PROCESS_STATE_UNKNOWN']:\n        color = \"danger\"\n\n    attachment = {\n        \"title\": \"event\",\n        \"text\": eventname,\n        \"color\": color,\n        \"fields\": [{\n            \"title\": \"datetime\",\n            \"value\": datetime.now().strftime(\"%Y/%m/%d %H:%M:%S\")\n        }, {\n            \"title\": \"hostname\",\n            \"value\": os.uname()[1]\n        }]\n    }\n\n    if 'processname' in payload_header:\n        attachment[\"fields\"].append({\n            \"title\": \"process\",\n            \"value\": payload_header['processname']\n        })\n\n    if 'expected' in payload_header:\n        attachment[\"fields\"].append({\n            \"title\": \"expected\",\n            \"value\": payload_header['expected']\n        })\n\n    if 'SLACK_WEB_HOOK_URL' in os.environ:\n        slack_url = os.environ['SLACK_WEB_HOOK_URL']\n        slack = slackweb.Slack(url=slack_url)\n        slack.notify(attachments=[attachment])\n\n\nif __name__ == '__main__':\n    main()\n```\n\n#### \u901a\u77e5\u30a4\u30e1\u30fc\u30b8\n![supervisor_slack.png](https://qiita-image-store.s3.amazonaws.com/0/26422/c1087864-f461-beb2-cf24-9d624370ec8c.png \"supervisor_slack.png\")\n\n\n#### \u53c2\u8003URL\n- [Slack\u306bincoming webhook\u7d4c\u7531\u3067python\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092POST\u3059\u308b - Qiita](http://qiita.com/satoshi03/items/14495bf431b1932cb90b)\n\n## \u304a\u308f\u308a\u306b\n\u30e1\u30fc\u30eb\u901a\u77e5\u3067\u3088\u3051\u308c\u3070[superlance](https://pypi.python.org/pypi/superlance)\u3068\u3044\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001[OP25B](https://ja.wikipedia.org/wiki/Outbound_Port_25_Blocking)\u554f\u984c\u3067gmail\u306b\u30e1\u30fc\u30eb\u304c\u5c4a\u304b\u306a\u304b\u3063\u305f\u308a\u3057\u305f\u306e\u3067\u3001Slack\u306b\u901a\u77e5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nSupervisor\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u5897\u3048\u3066\u304d\u305f\u306e\u3067\u3001\u4eca\u5f8c\u3082\u3044\u308d\u3044\u308d\u5fdc\u7528\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["supervisor", "Slack", "Python"]}