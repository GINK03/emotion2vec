{"context": " More than 1 year has passed since last update.\n\n\uff08 \u4e8b\u4f8b \uff09\n\n\n\u5834\u9762 \u3068 \u3084\u308a\u305f\u3044\u3053\u3068\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 \u3068\u3057\u3066\u3001'name'\u3068\u3044\u3046\u5909\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u305f Person \u30af\u30e9\u30b9 \u304c\u3042\u308b\u3068\u3059\u308b\u3002\n\"\u307e\u3055\u308b\" \u3092\u3000name\u5024\u306b\u6301\u3064\u3001Person \u30af\u30e9\u30b9 \u306e \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 \u304c\u683c\u7d0d\u3055\u308c\u305f\u5909\u6570\u306e\u540d\u524d\uff08\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540d\uff09\u3092\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u5185\u90e8\u3067\u81ea\u52d5\u53d6\u5f97\u3055\u305b\u305f\u3044\u3002\n\n\n\nlocals() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3001\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n\n\u300c\\\u300d\u8a18\u53f7\u306f\u3001Python \u5bfe\u8a71\u30b7\u30a7\u30eb \u306e\u4e2d\u3067\u3001\u30b3\u30fc\u30c9\u306e\u9014\u4e2d\u3067\u6539\u884c\u3059\u308b\u305f\u3081\u306b\u633f\u5165\u3057\u305f\u5358\u306a\u308b\u6539\u884c\u8a18\u53f7\u3067\u3059\u3002\n\uff08\u30b9\u30af\u30ea\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3059\u308b\u969b\u306f\u53d6\u308a\u9664\u304f\u5fc5\u8981\u3042\u308a\uff09\n\n\nPython3\ndef get_instance_name_by_name_property(locals_dict):\n    searched_key_string = \"\"\n    for k, v in locals_dict.items():\n        if ('= Person(\"\u307e\u3055\u308b\")' in str(v)) and ('In' not in str(k)) and ('Out' not in str(k))\\\n            and not(isinstance(v, list)) and ('locals' not in str(k)\\\n            and \"for k, v in locals_3.items():\" not in str(v)):\n                searched_key_string = k\n    return searched_key_string\n\n\n\n\n\n\u3010 \u52d5\u4f5c\u78ba\u8a8d \u3011\n\n\n\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30af\u30e9\u30b9\u3092\u7528\u610f\u3057\u3066\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u6e96\u5099\n\n\u30af\u30e9\u30b9\u5b9a\u7fa9\u306e\u4e2d\u8eab\u306f\u3001\u306a\u3093\u3067\u3082\u826f\u3044\u3067\u3059\u3002\n\n\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30af\u30e9\u30b9\uff08\u4f55\u3067\u3082\u826f\u3044\uff09\nclass Person:\n    count = 0\n    alive_person_name_list = []\n\n    def __init__(self, name):\n        from datetime import datetime as dt\n        if str(name) in Person.alive_person_name_list:\n            message_string_1 = \"\u540c\u3058\u540d\u524d\u306e\u4eba\u304c\u3059\u3067\u306b\u3044\u307e\u3059\u3002\\n\\\u5225\u306e\u540d\u524d\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\n            print(message_string_1)\n            pass\n        else:\n            Person.count += 1\n            Person.alive_person_name_list.append(str(name))\n            self.name=str(name)\n            self.create_time=dt.now().strftime(\"%Y/%m/%d %H:%M:%S\")\n            message_string_2 = \"\u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\\n\uff08 \u540d\u524d \uff09{name_property}\".format(name_property=self.name)\n            print(message_string_2)\n\n\n    def __str__(self):\n        instance_info_text = \"\"\"\u3053\u306e\u4eba\u7269\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6982\u8981\u3000\uff1a\\n\\\n---\u540d\u524d: {name_property}\\n\\\n---\u8a95\u751f\u6642\u523b:  + {birth_timestamp_property}\\n\"\"\".format(name_property=self.name, birth_timestamp_property=self.create_time)\n        return instance_info_text\n\n    def get_name(self):\n        return self.name\n\n    def get_birthday(self):\n        return self.create_time\n\n    def set_name(self, new_name):\n        self.name=str(new_name)\n\n\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\n\n\nPython3\nmasaru = Person(\"\u307e\u3055\u308b\")\n# \u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\n#\uff08 \u540d\u524d \uff09\u307e\u3055\u308b\n\nmoemoe = Person(\"\u3082\u3048\u3082\u3048\")\n# \u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\n# \uff08 \u540d\u524d \uff09\u3082\u3048\u3082\u3048\n\nbonanza = Person(\"\u30dc\u30ca\u30f3\u30b6\")\n# \u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\n# \uff08 \u540d\u524d \uff09\u30dc\u30ca\u30f3\u30b6\n\n\n\n\n\u30ed\u30fc\u30ab\u30eb\u540d\u524d\u7a7a\u9593\u306b\u3042\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\u540d\u524d\u3068\u5024\uff08\u4e2d\u8eab\uff09\uff09\u3092\u8f9e\u66f8\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u3001\u7d44\u307f\u8fbc\u307f\u30e1\u30bd\u30c3\u30c9 locals() \u3067\u53d6\u5f97\n\n\nPython3\nlocal_dict = locals()\n\n\n\n\u5192\u982d\u3067\u7528\u610f\u3057\u305f\u3001get_instance_name_by_name_property\u3000\u306e\u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u3066\u3001\u5b9f\u884c\n\n\nPython3\nprint(get_instance_name_by_name_property(local_dict))\n\n\n\uff08 \u7d50\u679c \uff09\n_i3\n\n\nPython3\nprint(local_dict['_i3'])\n\n\nmasaru = Person(\"\u307e\u3055\u308b\")\n\n\n\n\u610f\u56f3\u3057\u305f\u901a\u308a\u306e\u7d50\u679c\u304c\u5f97\u3089\u308c\u305f\u3002\n\n\n\u304c\u3001\u4e0a\u3067\u5f97\u3089\u308c\u305f\u306e\u306f\u3001\u300c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540d\uff08'masaru'\uff09\u300d\u3067\u306f\u306a\u3044\u3002\n\u5f97\u3089\u308c\u308b\u306e\u306f\u3001\u300c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540d\uff08'masaru'\uff09\u306e\u6587\u5b57\u5217\u3092\u542b\u3080\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u6587\u300d\u3092\u3001locals() \u304b\u3089\u8fd4\u3055\u308c\u308b\u8f9e\u66f8\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306e\u306a\u304b\u3067\u3001value\u5024 \u3068\u3057\u3066\u6301\u3064\u8981\u7d20\u306e key\u306e\u540d\u524d \u3067\u3042\u308b\u3002__\n\n\u30e1\u30bd\u30c3\u30c9\u8fd4\u308a\u5024 \u304c \u4e0a\u8a18\u3067\u3042\u308b\u3053\u3068 \u304c\u308f\u304b\u308b\u3088\u3046\u3001\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u3092\u4fee\u6b63\u3002\n\nPython3\ndef get_instance_obj_key_name(person_name_instance_variable, locals_method_result):\n    instance_object_key_name = \"\"\n    target_pattern_1 = '=Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    target_pattern_2 = ' =Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    target_pattern_3 = ' = Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n\n    for k, v in locals_method_result.items():\n        if ((target_pattern_1 in str(v)) or (target_pattern_2 in str(v)) or (target_pattern_3 in str(v)))\\\n            and ('In' not in str(k)) and ('Out' not in str(k))\\\n            and not(isinstance(v, list)) and ('locals' not in str(k)\\\n            and \"for k, v in locals_3.items():\" not in str(v)):\n                instance_key_object_name = k\n    return instance_key_object_name\n\n\n\uff08 \u5b9f\u884c \uff09\n\nPython3\nprint(get_instance_obj_key_name(\"\u307e\u3055\u308b\", local_dict))\n\n\n_i3\n\n\nPython3\nprint(get_instance_obj_key_name(\"\u3082\u3048\u3082\u3048\", local_dict))\n\n\n_i4\n\n\nPython3\nprint(local_dict['_i4'])\n\n\nmoemoe = Person(\"\u3082\u3048\u3082\u3048\")\n\n\nPython3\nprint(get_instance_obj_key_name(\"\u30dc\u30ca\u30f3\u30b6\", local_dict))\n\n\n_i5\n\n\nPython3\nprint(local_dict['_i5'])\n\n\nbonanza = Person(\"\u30dc\u30ca\u30f3\u30b6\")\n\n\nlocals() \u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\u306e\u8f9e\u66f8\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u3067\u3001\u300c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540d\u306e\u5ba3\u8a00\u6587\u300d \u304c \u683c\u7d0d\u3055\u308c\u305fkeu\u306e\u540d\u524d\u3092\u53d7\u3051\u53d6\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210\u6587\u3092\u53d6\u308a\u51fa\u3059\u3088\u3046\u306b\u4fee\u6b63\n\n\nPython3\ndef get_instance_obj_name(person_name_instance_variable, locals_method_result):\n    key_name = \"\"\n    target_pattern_1 = '=Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    target_pattern_2 = ' =Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    target_pattern_3 = ' = Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n\n    for k, v in locals_method_result.items():\n        if ((target_pattern_1 in str(v)) or (target_pattern_2 in str(v)) or (target_pattern_3 in str(v)))\\\n            and ('In' not in str(k)) and ('Out' not in str(k))\\\n            and not(isinstance(v, list)) and ('locals' not in str(k)\\\n            and \"for k, v in locals_3.items():\" not in str(v)):\n                key_name = k\n    return str(locals_method_result[key_name])\n\n\n\nPython3\nprint(get_instance_obj_name(\"\u307e\u3055\u308b\", local_dict))\n\n\n\uff08 \u5b9f\u884c\u7d50\u679c \uff09\nmasaru = Person(\"\u307e\u3055\u308b\")\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u6587 \u304b\u3089\u3001\u751f\u6210\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4ee3\u5165\u5148\u306e\u5909\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540d\u3092\u53d6\u308a\u51fa\u3059\u3088\u3046\u4fee\u6b63\n\n\nPython3\ninstance_declaration_statement = get_instance_obj_name(\"\u307e\u3055\u308b\", local_dict)\n\n\n['masaru ', ' Person(\"\u307e\u3055\u308b\")']\n\n\nPython3\nprint(instance_declaration_statement.split(\"=\")[0])\n\n\nmasaru \n\n\n\u4ee5\u4e0a\u3092\u30e1\u30bd\u30c3\u30c9\u5316\u3059\u308b\n\n\nPython3\ndef get_instance_obj_name2(person_name_instance_variable, locals_method_result):\n    key_name = \"\"\n    target_pattern_1 = '=Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    target_pattern_2 = ' =Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    target_pattern_3 = ' = Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n\n    for k, v in locals_method_result.items():\n        if ((target_pattern_1 in str(v)) or (target_pattern_2 in str(v)) or (target_pattern_3 in str(v)))\\\n            and ('In' not in str(k)) and ('Out' not in str(k))\\\n            and not(isinstance(v, list)) and ('locals' not in str(k)\\\n            and \"for k, v in locals_3.items():\" not in str(v)):\n                key_name = k\n    return str(locals_method_result[key_name]).split(\"=\")[0]\n\n\n\n\uff08 \u52d5\u4f5c\u78ba\u8a8d \uff09\n\n\nPython3\nprint(get_instance_obj_name2(\"\u307e\u3055\u308b\", local_dict))\n\n\nmasaru \n\n\nPython3\nprint(get_instance_obj_name2(\"\u3082\u3048\u3082\u3048\", local_dict))\n\n\nmoemoe\n\nprint(get_instance_obj_name2(\"\u30dc\u30ca\u30f3\u30b6\", local_dict))\nprint(get_instance_obj_name2(\"\u30dc\u30ca\u30f3\u30b6\", local_dict))\n\nbonanza \n\n\n\n\uff08 \u53c2\u8003 \uff09\n\n\uff08 Anaconda Python \u3092\u7acb\u3061\u4e0a\u3052\u305f\u76f4\u5f8c\u306e\u74b0\u5883 \u3067\u3001locals() \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u53d6\u5f97\u3057\u305f \u30ed\u30fc\u30ab\u30eb\u540d\u524d\u7a7a\u9593\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4e00\u89a7\u8f9e\u66f8\u306e\u4e2d\u8eab \uff09\n\nPython3\nlocals()\n\n\n{'In': ['', 'locals()'],\n 'Out': {},\n '_': '',\n '__': '',\n '___': '',\n '__builtin__': <module 'builtins' (built-in)>,\n '__builtins__': <module 'builtins' (built-in)>,\n '__doc__': 'Automatically created module for IPython interactive environment',\n '__loader__': None,\n '__name__': '__main__',\n '__package__': None,\n '__spec__': None,\n '_dh': ['/Users/hirofumi.yashima'],\n '_i': '',\n '_i1': 'locals()',\n '_ih': ['', 'locals()'],\n '_ii': '',\n '_iii': '',\n '_oh': {},\n '_sh': <module 'IPython.core.shadowns' from '/Users/hirofumi.yashima/anaconda/lib/python3.5/site-packages/IPython/core/shadowns.py'>,\n 'exit': <IPython.core.autocall.ZMQExitAutocall at 0x104120898>,\n 'get_ipython': <bound method InteractiveShell.get_ipython of <ipykernel.zmqshell.ZMQInteractiveShell object at 0x103ff1b38>>,\n 'quit': <IPython.core.autocall.ZMQExitAutocall at 0x104120898>}\n\n\n\u6b21\u306b\u3001Person\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u3055\u305b\u305f\u76f4\u5f8c\u306e\u74b0\u5883\u306b\u304a\u3051\u308b locals() \u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\n\n\nPython3\nclass Person:\n    count = 0\n    alive_person_name_list = []\n\n    def __init__(self, name):\n        from datetime import datetime as dt\n        if str(name) in Person.alive_person_name_list:\n            message_string_1 = \"\u540c\u3058\u540d\u524d\u306e\u4eba\u304c\u3059\u3067\u306b\u3044\u307e\u3059\u3002\\n\\\u5225\u306e\u540d\u524d\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\n            print(message_string_1)\n            pass\n        else:\n            Person.count += 1\n            Person.alive_person_name_list.append(str(name))\n            self.name=str(name)\n            self.create_time=dt.now().strftime(\"%Y/%m/%d %H:%M:%S\")\n            message_string_2 = \"\u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\\n\uff08 \u540d\u524d \uff09{name_property}\".format(name_property=self.name)\n            print(message_string_2)\n\n\n    def __str__(self):\n        instance_info_text = \"\"\"\u3053\u306e\u4eba\u7269\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6982\u8981\u3000\uff1a\\n\\\n---\u540d\u524d: {name_property}\\n\\\n---\u8a95\u751f\u6642\u523b:  + {birth_timestamp_property}\\n\"\"\".format(name_property=self.name, birth_timestamp_property=self.create_time)\n        return instance_info_text\n\n    def get_name(self):\n        return self.name\n\n    def get_birthday(self):\n        return self.create_time\n\n    def set_name(self, new_name):\n        self.name=str(new_name)\n\n\n\nPython3\nmasaru = Person(\"\u307e\u3055\u308b\")\n\n# \u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\n# \uff08 \u540d\u524d \uff09\u307e\u3055\u308b\n\n\n\nPython3\nlocals()\n\n\n\n\u8fd4\u3055\u308c\u308b\u8f9e\u66f8\u306e\u4e2d\u306b\u306f\u3001key\u540d\u300c'In'\u300d\u306evalue\u3068\u3057\u3066\u3001\u5ba3\u8a00\u3057\u305f\u30af\u30e9\u30b9\u5b9a\u7fa9\u5168\u6587\u3092\u542b\u3081\u3066\u3001\u591a\u304f\u304c\u542b\u307e\u308c\u308b\u3002\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u306b\u3088\u3063\u3066\u3001\u8f9e\u66f8\u306b\u767b\u9332\u3055\u308c\u305f\u8981\u7d20\u306f\u3001\u4ee5\u4e0b\u3067\u3059\u3002\n\n{'In': [... 'masaru = Person(\"\u307e\u3055\u308b\")', ...]\n\n'Person': __main__.Person,\n\n'_i': 'masaru = Person(\"\u307e\u3055\u308b\")',\n\n'_i3': 'masaru = Person(\"\u307e\u3055\u308b\")',\n\n'masaru': <__main__.Person at 0x104353e48>,\n\n\n\u51fa\u529b\u7d50\u679c\u306e\u5168\u4f53\u306f\u3001\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n*\uff08\u74b0\u5883\uff09 MacBook Anaconda IPython (Python 3.5.1)\n\u2013\u2013\u2013\n{'In': ['',\n  'locals()',\n  'class Person:\\n    count = 0\\n    alive_person_name_list = []\\n\\n    def __init__(self, name):\\n        from datetime import datetime as dt\\n        if str(name) in Person.alive_person_name_list:\\n            message_string_1 = \"\u540c\u3058\u540d\u524d\u306e\u4eba\u304c\u3059\u3067\u306b\u3044\u307e\u3059\u3002\\\\n\\\\\u5225\u306e\u540d\u524d\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\\n            print(message_string_1)\\n            pass\\n        else:\\n            Person.count += 1\\n            Person.alive_person_name_list.append(str(name))\\n            self.name=str(name)\\n            self.create_time=dt.now().strftime(\"%Y/%m/%d %H:%M:%S\")\\n            message_string_2 = \"\u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\\\\n\uff08 \u540d\u524d \uff09{name_property}\".format(name_property=self.name)\\n            print(message_string_2)\\n\\n\\n    def __str__(self):\\n        instance_info_text = \"\"\"\u3053\u306e\u4eba\u7269\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6982\u8981\\u3000\uff1a\\\\n---\u540d\u524d: {name_property}\\\\n---\u8a95\u751f\u6642\u523b:  + {birth_timestamp_property}\\\\n\"\"\".format(name_property=self.name, birth_timestamp_property=self.create_time)\\n        return instance_info_text\\n\\n    def get_name(self):\\n        return self.name\\n\\n    def get_birthday(self):\\n        return self.create_time\\n\\n    def set_name(self, new_name):\\n        self.name=str(new_name)',\n  'masaru = Person(\"\u307e\u3055\u308b\")',\n  'locals()'],\n 'Out': {1: {...}},\n 'Person': __main__.Person,\n '_': {...},\n '_1': {...},\n '__': '',\n '___': '',\n '__builtin__': <module 'builtins' (built-in)>,\n '__builtins__': <module 'builtins' (built-in)>,\n '__doc__': 'Automatically created module for IPython interactive environment',\n '__loader__': None,\n '__name__': '__main__',\n '__package__': None,\n '__spec__': None,\n '_dh': ['/Users/hirofumi.yashima'],\n '_i': 'masaru = Person(\"\u307e\u3055\u308b\")',\n '_i1': 'locals()',\n '_i2': 'class Person:\\n    count = 0\\n    alive_person_name_list = []\\n\\n    def __init__(self, name):\\n        from datetime import datetime as dt\\n        if str(name) in Person.alive_person_name_list:\\n            message_string_1 = \"\u540c\u3058\u540d\u524d\u306e\u4eba\u304c\u3059\u3067\u306b\u3044\u307e\u3059\u3002\\\\n\\\\\u5225\u306e\u540d\u524d\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\\n            print(message_string_1)\\n            pass\\n        else:\\n            Person.count += 1\\n            Person.alive_person_name_list.append(str(name))\\n            self.name=str(name)\\n            self.create_time=dt.now().strftime(\"%Y/%m/%d %H:%M:%S\")\\n            message_string_2 = \"\u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\\\\n\uff08 \u540d\u524d \uff09{name_property}\".format(name_property=self.name)\\n            print(message_string_2)\\n\\n\\n    def __str__(self):\\n        instance_info_text = \"\"\"\u3053\u306e\u4eba\u7269\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6982\u8981\\u3000\uff1a\\\\n\\\\\\n---\u540d\u524d: {name_property}\\\\n\\\\\\n---\u8a95\u751f\u6642\u523b:  + {birth_timestamp_property}\\\\n\"\"\".format(name_property=self.name, birth_timestamp_property=self.create_time)\\n        return instance_info_text\\n\\n    def get_name(self):\\n        return self.name\\n\\n    def get_birthday(self):\\n        return self.create_time\\n\\n    def set_name(self, new_name):\\n        self.name=str(new_name)',\n '_i3': 'masaru = Person(\"\u307e\u3055\u308b\")',\n '_i4': 'locals()',\n '_ih': ['',\n  'locals()',\n  'class Person:\\n    count = 0\\n    alive_person_name_list = []\\n\\n    def __init__(self, name):\\n        from datetime import datetime as dt\\n        if str(name) in Person.alive_person_name_list:\\n            message_string_1 = \"\u540c\u3058\u540d\u524d\u306e\u4eba\u304c\u3059\u3067\u306b\u3044\u307e\u3059\u3002\\\\n\\\\\u5225\u306e\u540d\u524d\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\\n            print(message_string_1)\\n            pass\\n        else:\\n            Person.count += 1\\n            Person.alive_person_name_list.append(str(name))\\n            self.name=str(name)\\n            self.create_time=dt.now().strftime(\"%Y/%m/%d %H:%M:%S\")\\n            message_string_2 = \"\u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\\\\n\uff08 \u540d\u524d \uff09{name_property}\".format(name_property=self.name)\\n            print(message_string_2)\\n\\n\\n    def __str__(self):\\n        instance_info_text = \"\"\"\u3053\u306e\u4eba\u7269\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6982\u8981\\u3000\uff1a\\\\n---\u540d\u524d: {name_property}\\\\n---\u8a95\u751f\u6642\u523b:  + {birth_timestamp_property}\\\\n\"\"\".format(name_property=self.name, birth_timestamp_property=self.create_time)\\n        return instance_info_text\\n\\n    def get_name(self):\\n        return self.name\\n\\n    def get_birthday(self):\\n        return self.create_time\\n\\n    def set_name(self, new_name):\\n        self.name=str(new_name)',\n  'masaru = Person(\"\u307e\u3055\u308b\")',\n  'locals()'],\n '_ii': 'class Person:\\n    count = 0\\n    alive_person_name_list = []\\n\\n    def __init__(self, name):\\n        from datetime import datetime as dt\\n        if str(name) in Person.alive_person_name_list:\\n            message_string_1 = \"\u540c\u3058\u540d\u524d\u306e\u4eba\u304c\u3059\u3067\u306b\u3044\u307e\u3059\u3002\\\\n\\\\\u5225\u306e\u540d\u524d\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\\n            print(message_string_1)\\n            pass\\n        else:\\n            Person.count += 1\\n            Person.alive_person_name_list.append(str(name))\\n            self.name=str(name)\\n            self.create_time=dt.now().strftime(\"%Y/%m/%d %H:%M:%S\")\\n            message_string_2 = \"\u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\\\\n\uff08 \u540d\u524d \uff09{name_property}\".format(name_property=self.name)\\n            print(message_string_2)\\n\\n\\n    def __str__(self):\\n        instance_info_text = \"\"\"\u3053\u306e\u4eba\u7269\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6982\u8981\\u3000\uff1a\\\\n\\\\\\n---\u540d\u524d: {name_property}\\\\n\\\\\\n---\u8a95\u751f\u6642\u523b:  + {birth_timestamp_property}\\\\n\"\"\".format(name_property=self.name, birth_timestamp_property=self.create_time)\\n        return instance_info_text\\n\\n    def get_name(self):\\n        return self.name\\n\\n    def get_birthday(self):\\n        return self.create_time\\n\\n    def set_name(self, new_name):\\n        self.name=str(new_name)',\n '_iii': 'locals()',\n '_oh': {1: {...}},\n '_sh': <module 'IPython.core.shadowns' from '/Users/hirofumi.yashima/anaconda/lib/python3.5/site-packages/IPython/core/shadowns.py'>,\n 'exit': <IPython.core.autocall.ZMQExitAutocall at 0x104120898>,\n 'get_ipython': <bound method InteractiveShell.get_ipython of <ipykernel.zmqshell.ZMQInteractiveShell object at 0x103ff1b38>>,\n 'masaru': <__main__.Person at 0x104353e48>,\n 'quit': <IPython.core.autocall.ZMQExitAutocall at 0x104120898>}\n\n##__\uff08 \u4e8b\u4f8b \uff09__\n\n####__\u5834\u9762 \u3068 \u3084\u308a\u305f\u3044\u3053\u3068__\n\n* \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 \u3068\u3057\u3066\u3001'name'\u3068\u3044\u3046\u5909\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u305f Person \u30af\u30e9\u30b9 \u304c\u3042\u308b\u3068\u3059\u308b\u3002\n* \"\u307e\u3055\u308b\" \u3092\u3000name\u5024\u306b\u6301\u3064\u3001Person \u30af\u30e9\u30b9 \u306e \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 \u304c\u683c\u7d0d\u3055\u308c\u305f\u5909\u6570\u306e\u540d\u524d\uff08\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540d\uff09\u3092\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u5185\u90e8\u3067\u81ea\u52d5\u53d6\u5f97\u3055\u305b\u305f\u3044\u3002\n\n___\n\n####__locals() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3001\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u53d6\u5f97\u3067\u304d\u308b\u3002__\n\n* \u300c\\\u300d\u8a18\u53f7\u306f\u3001Python \u5bfe\u8a71\u30b7\u30a7\u30eb \u306e\u4e2d\u3067\u3001\u30b3\u30fc\u30c9\u306e\u9014\u4e2d\u3067\u6539\u884c\u3059\u308b\u305f\u3081\u306b\u633f\u5165\u3057\u305f\u5358\u306a\u308b\u6539\u884c\u8a18\u53f7\u3067\u3059\u3002\n\uff08\u30b9\u30af\u30ea\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3059\u308b\u969b\u306f\u53d6\u308a\u9664\u304f\u5fc5\u8981\u3042\u308a\uff09\n\n```{Python3:Python3}\ndef get_instance_name_by_name_property(locals_dict):\n    searched_key_string = \"\"\n    for k, v in locals_dict.items():\n        if ('= Person(\"\u307e\u3055\u308b\")' in str(v)) and ('In' not in str(k)) and ('Out' not in str(k))\\\n            and not(isinstance(v, list)) and ('locals' not in str(k)\\\n            and \"for k, v in locals_3.items():\" not in str(v)):\n                searched_key_string = k\n    return searched_key_string\n\n```\n\n___\n\n###__\u3010 \u52d5\u4f5c\u78ba\u8a8d \u3011__\n\n####__\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30af\u30e9\u30b9\u3092\u7528\u610f\u3057\u3066\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u6e96\u5099__\n\n__\u30af\u30e9\u30b9\u5b9a\u7fa9\u306e\u4e2d\u8eab\u306f\u3001\u306a\u3093\u3067\u3082\u826f\u3044\u3067\u3059\u3002__\n\n```{Python3:\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30af\u30e9\u30b9\uff08\u4f55\u3067\u3082\u826f\u3044\uff09}\nclass Person:\n    count = 0\n    alive_person_name_list = []\n\n    def __init__(self, name):\n        from datetime import datetime as dt\n        if str(name) in Person.alive_person_name_list:\n            message_string_1 = \"\u540c\u3058\u540d\u524d\u306e\u4eba\u304c\u3059\u3067\u306b\u3044\u307e\u3059\u3002\\n\\\u5225\u306e\u540d\u524d\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\n            print(message_string_1)\n            pass\n        else:\n            Person.count += 1\n            Person.alive_person_name_list.append(str(name))\n            self.name=str(name)\n            self.create_time=dt.now().strftime(\"%Y/%m/%d %H:%M:%S\")\n            message_string_2 = \"\u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\\n\uff08 \u540d\u524d \uff09{name_property}\".format(name_property=self.name)\n            print(message_string_2)\n\n\n    def __str__(self):\n        instance_info_text = \"\"\"\u3053\u306e\u4eba\u7269\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6982\u8981\u3000\uff1a\\n\\\n---\u540d\u524d: {name_property}\\n\\\n---\u8a95\u751f\u6642\u523b:  + {birth_timestamp_property}\\n\"\"\".format(name_property=self.name, birth_timestamp_property=self.create_time)\n        return instance_info_text\n\n    def get_name(self):\n        return self.name\n\n    def get_birthday(self):\n        return self.create_time\n\n    def set_name(self, new_name):\n        self.name=str(new_name)\n```\n\n___\n\n####__\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210__\n\n```{Python3:Python3}\nmasaru = Person(\"\u307e\u3055\u308b\")\n# \u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\n#\uff08 \u540d\u524d \uff09\u307e\u3055\u308b\n\nmoemoe = Person(\"\u3082\u3048\u3082\u3048\")\n# \u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\n# \uff08 \u540d\u524d \uff09\u3082\u3048\u3082\u3048\n\nbonanza = Person(\"\u30dc\u30ca\u30f3\u30b6\")\n# \u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\n# \uff08 \u540d\u524d \uff09\u30dc\u30ca\u30f3\u30b6\n```\n\n___\n\n####__\u30ed\u30fc\u30ab\u30eb\u540d\u524d\u7a7a\u9593\u306b\u3042\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\u540d\u524d\u3068\u5024\uff08\u4e2d\u8eab\uff09\uff09\u3092\u8f9e\u66f8\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u3001\u7d44\u307f\u8fbc\u307f\u30e1\u30bd\u30c3\u30c9 locals() \u3067\u53d6\u5f97__\n\n```{Python3:Python3}\nlocal_dict = locals()\n```\n\n####__\u5192\u982d\u3067\u7528\u610f\u3057\u305f\u3001get_instance_name_by_name_property\u3000\u306e\u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u3066\u3001\u5b9f\u884c__\n\n\n```{Python3:Python3}\nprint(get_instance_name_by_name_property(local_dict))\n```\n\n__\uff08 \u7d50\u679c \uff09__\n\n```\n_i3\n```\n\n```{Python3:Python3}\nprint(local_dict['_i3'])\n```\n\n```\nmasaru = Person(\"\u307e\u3055\u308b\")\n```\n\n___\n\n####__\u610f\u56f3\u3057\u305f\u901a\u308a\u306e\u7d50\u679c\u304c\u5f97\u3089\u308c\u305f\u3002__\n\n* \u304c\u3001\u4e0a\u3067\u5f97\u3089\u308c\u305f\u306e\u306f\u3001\u300c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540d\uff08'masaru'\uff09\u300d\u3067\u306f\u306a\u3044\u3002\n* \u5f97\u3089\u308c\u308b\u306e\u306f\u3001\u300c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540d\uff08'masaru'\uff09\u306e\u6587\u5b57\u5217\u3092\u542b\u3080\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u6587\u300d\u3092\u3001locals() \u304b\u3089\u8fd4\u3055\u308c\u308b\u8f9e\u66f8\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306e\u306a\u304b\u3067\u3001value\u5024 \u3068\u3057\u3066\u6301\u3064\u8981\u7d20\u306e key\u306e\u540d\u524d \u3067\u3042\u308b\u3002__\n\n__\u30e1\u30bd\u30c3\u30c9\u8fd4\u308a\u5024 \u304c \u4e0a\u8a18\u3067\u3042\u308b\u3053\u3068 \u304c\u308f\u304b\u308b\u3088\u3046\u3001\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u3092\u4fee\u6b63\u3002__\n\n```{Python3:Python3}\ndef get_instance_obj_key_name(person_name_instance_variable, locals_method_result):\n    instance_object_key_name = \"\"\n    target_pattern_1 = '=Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    target_pattern_2 = ' =Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    target_pattern_3 = ' = Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    \n    for k, v in locals_method_result.items():\n        if ((target_pattern_1 in str(v)) or (target_pattern_2 in str(v)) or (target_pattern_3 in str(v)))\\\n            and ('In' not in str(k)) and ('Out' not in str(k))\\\n            and not(isinstance(v, list)) and ('locals' not in str(k)\\\n            and \"for k, v in locals_3.items():\" not in str(v)):\n                instance_key_object_name = k\n    return instance_key_object_name\n```\n\n\n__\uff08 \u5b9f\u884c \uff09__\n\n```{Python3:Python3}\nprint(get_instance_obj_key_name(\"\u307e\u3055\u308b\", local_dict))\n```\n\n```\n_i3\n```\n\n```{Python3:Python3}\nprint(get_instance_obj_key_name(\"\u3082\u3048\u3082\u3048\", local_dict))\n```\n\n```\n_i4\n```\n\n```{Python3:Python3}\nprint(local_dict['_i4'])\n```\n\n```\nmoemoe = Person(\"\u3082\u3048\u3082\u3048\")\n```\n\n```{Python3:Python3}\nprint(get_instance_obj_key_name(\"\u30dc\u30ca\u30f3\u30b6\", local_dict))\n```\n\n```\n_i5\n```\n\n```{Python3:Python3}\nprint(local_dict['_i5'])\n```\n\n```\nbonanza = Person(\"\u30dc\u30ca\u30f3\u30b6\")\n```\n\n####__locals() \u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\u306e\u8f9e\u66f8\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u3067\u3001\u300c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540d\u306e\u5ba3\u8a00\u6587\u300d \u304c \u683c\u7d0d\u3055\u308c\u305fkeu\u306e\u540d\u524d\u3092\u53d7\u3051\u53d6\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210\u6587\u3092\u53d6\u308a\u51fa\u3059\u3088\u3046\u306b\u4fee\u6b63__\n\n```{Python3:Python3}\ndef get_instance_obj_name(person_name_instance_variable, locals_method_result):\n    key_name = \"\"\n    target_pattern_1 = '=Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    target_pattern_2 = ' =Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    target_pattern_3 = ' = Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    \n    for k, v in locals_method_result.items():\n        if ((target_pattern_1 in str(v)) or (target_pattern_2 in str(v)) or (target_pattern_3 in str(v)))\\\n            and ('In' not in str(k)) and ('Out' not in str(k))\\\n            and not(isinstance(v, list)) and ('locals' not in str(k)\\\n            and \"for k, v in locals_3.items():\" not in str(v)):\n                key_name = k\n    return str(locals_method_result[key_name])\n```\n\n\n```{Python3:Python3}\nprint(get_instance_obj_name(\"\u307e\u3055\u308b\", local_dict))\n```\n\n__\uff08 \u5b9f\u884c\u7d50\u679c \uff09__\n\n```\nmasaru = Person(\"\u307e\u3055\u308b\")\n```\n\n\n####__\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u6587 \u304b\u3089\u3001\u751f\u6210\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4ee3\u5165\u5148\u306e\u5909\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540d\u3092\u53d6\u308a\u51fa\u3059\u3088\u3046\u4fee\u6b63__\n\n```{Python3:Python3}\ninstance_declaration_statement = get_instance_obj_name(\"\u307e\u3055\u308b\", local_dict)\n```\n\n```\n['masaru ', ' Person(\"\u307e\u3055\u308b\")']\n```\n\n```{Python3:Python3}\nprint(instance_declaration_statement.split(\"=\")[0])\n```\n\n```\nmasaru \n```\n\n####__\u4ee5\u4e0a\u3092\u30e1\u30bd\u30c3\u30c9\u5316\u3059\u308b__\n\n```{Python3:Python3}\ndef get_instance_obj_name2(person_name_instance_variable, locals_method_result):\n    key_name = \"\"\n    target_pattern_1 = '=Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    target_pattern_2 = ' =Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    target_pattern_3 = ' = Person(\"{name_property}\")'.format(name_property = person_name_instance_variable)\n    \n    for k, v in locals_method_result.items():\n        if ((target_pattern_1 in str(v)) or (target_pattern_2 in str(v)) or (target_pattern_3 in str(v)))\\\n            and ('In' not in str(k)) and ('Out' not in str(k))\\\n            and not(isinstance(v, list)) and ('locals' not in str(k)\\\n            and \"for k, v in locals_3.items():\" not in str(v)):\n                key_name = k\n    return str(locals_method_result[key_name]).split(\"=\")[0]\n```\n\n###__\uff08 \u52d5\u4f5c\u78ba\u8a8d \uff09__\n\n```{Python3:Python3}\nprint(get_instance_obj_name2(\"\u307e\u3055\u308b\", local_dict))\n```\n\n```\nmasaru \n```\n\n```{Python3:Python3}\nprint(get_instance_obj_name2(\"\u3082\u3048\u3082\u3048\", local_dict))\n```\n\n```\nmoemoe\n```\n\n```print(get_instance_obj_name2(\"\u30dc\u30ca\u30f3\u30b6\", local_dict))\nprint(get_instance_obj_name2(\"\u30dc\u30ca\u30f3\u30b6\", local_dict))\n```\n\n```\nbonanza \n```\n\n___\n\n##__\uff08 \u53c2\u8003 \uff09__\n\n\uff08 Anaconda Python \u3092\u7acb\u3061\u4e0a\u3052\u305f\u76f4\u5f8c\u306e\u74b0\u5883 \u3067\u3001locals() \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u53d6\u5f97\u3057\u305f \u30ed\u30fc\u30ab\u30eb\u540d\u524d\u7a7a\u9593\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4e00\u89a7\u8f9e\u66f8\u306e\u4e2d\u8eab \uff09\n\n```{Python3:Python3}\nlocals()\n```\n\n```\n{'In': ['', 'locals()'],\n 'Out': {},\n '_': '',\n '__': '',\n '___': '',\n '__builtin__': <module 'builtins' (built-in)>,\n '__builtins__': <module 'builtins' (built-in)>,\n '__doc__': 'Automatically created module for IPython interactive environment',\n '__loader__': None,\n '__name__': '__main__',\n '__package__': None,\n '__spec__': None,\n '_dh': ['/Users/hirofumi.yashima'],\n '_i': '',\n '_i1': 'locals()',\n '_ih': ['', 'locals()'],\n '_ii': '',\n '_iii': '',\n '_oh': {},\n '_sh': <module 'IPython.core.shadowns' from '/Users/hirofumi.yashima/anaconda/lib/python3.5/site-packages/IPython/core/shadowns.py'>,\n 'exit': <IPython.core.autocall.ZMQExitAutocall at 0x104120898>,\n 'get_ipython': <bound method InteractiveShell.get_ipython of <ipykernel.zmqshell.ZMQInteractiveShell object at 0x103ff1b38>>,\n 'quit': <IPython.core.autocall.ZMQExitAutocall at 0x104120898>}\n```\n\n####__\u6b21\u306b\u3001Person\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u3055\u305b\u305f\u76f4\u5f8c\u306e\u74b0\u5883\u306b\u304a\u3051\u308b locals() \u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024__\n\n```{Python3:Python3}\nclass Person:\n    count = 0\n    alive_person_name_list = []\n\n    def __init__(self, name):\n        from datetime import datetime as dt\n        if str(name) in Person.alive_person_name_list:\n            message_string_1 = \"\u540c\u3058\u540d\u524d\u306e\u4eba\u304c\u3059\u3067\u306b\u3044\u307e\u3059\u3002\\n\\\u5225\u306e\u540d\u524d\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\n            print(message_string_1)\n            pass\n        else:\n            Person.count += 1\n            Person.alive_person_name_list.append(str(name))\n            self.name=str(name)\n            self.create_time=dt.now().strftime(\"%Y/%m/%d %H:%M:%S\")\n            message_string_2 = \"\u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\\n\uff08 \u540d\u524d \uff09{name_property}\".format(name_property=self.name)\n            print(message_string_2)\n\n\n    def __str__(self):\n        instance_info_text = \"\"\"\u3053\u306e\u4eba\u7269\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6982\u8981\u3000\uff1a\\n\\\n---\u540d\u524d: {name_property}\\n\\\n---\u8a95\u751f\u6642\u523b:  + {birth_timestamp_property}\\n\"\"\".format(name_property=self.name, birth_timestamp_property=self.create_time)\n        return instance_info_text\n\n    def get_name(self):\n        return self.name\n\n    def get_birthday(self):\n        return self.create_time\n\n    def set_name(self, new_name):\n        self.name=str(new_name)\n```\n\n```{Python3:Python3}\nmasaru = Person(\"\u307e\u3055\u308b\")\n\n# \u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\n# \uff08 \u540d\u524d \uff09\u307e\u3055\u308b\n```\n\n```{Python3:Python3}\nlocals()\n```\n\n####__\u8fd4\u3055\u308c\u308b\u8f9e\u66f8\u306e\u4e2d\u306b\u306f\u3001key\u540d\u300c'In'\u300d\u306evalue\u3068\u3057\u3066\u3001\u5ba3\u8a00\u3057\u305f\u30af\u30e9\u30b9\u5b9a\u7fa9\u5168\u6587\u3092\u542b\u3081\u3066\u3001\u591a\u304f\u304c\u542b\u307e\u308c\u308b\u3002\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u306b\u3088\u3063\u3066\u3001\u8f9e\u66f8\u306b\u767b\u9332\u3055\u308c\u305f\u8981\u7d20\u306f\u3001\u4ee5\u4e0b\u3067\u3059\u3002__\n\n```\n{'In': [... 'masaru = Person(\"\u307e\u3055\u308b\")', ...]\n```\n\n```\n'Person': __main__.Person,\n```\n\n```\n'_i': 'masaru = Person(\"\u307e\u3055\u308b\")',\n```\n\n```\n'_i3': 'masaru = Person(\"\u307e\u3055\u308b\")',\n```\n\n```\n'masaru': <__main__.Person at 0x104353e48>,\n```\n\n\n####__\u51fa\u529b\u7d50\u679c\u306e\u5168\u4f53\u306f\u3001\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002__\n\n*\uff08\u74b0\u5883\uff09 MacBook Anaconda IPython (Python 3.5.1)\n\n\u2013\u2013\u2013\n\n```\n{'In': ['',\n  'locals()',\n  'class Person:\\n    count = 0\\n    alive_person_name_list = []\\n\\n    def __init__(self, name):\\n        from datetime import datetime as dt\\n        if str(name) in Person.alive_person_name_list:\\n            message_string_1 = \"\u540c\u3058\u540d\u524d\u306e\u4eba\u304c\u3059\u3067\u306b\u3044\u307e\u3059\u3002\\\\n\\\\\u5225\u306e\u540d\u524d\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\\n            print(message_string_1)\\n            pass\\n        else:\\n            Person.count += 1\\n            Person.alive_person_name_list.append(str(name))\\n            self.name=str(name)\\n            self.create_time=dt.now().strftime(\"%Y/%m/%d %H:%M:%S\")\\n            message_string_2 = \"\u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\\\\n\uff08 \u540d\u524d \uff09{name_property}\".format(name_property=self.name)\\n            print(message_string_2)\\n\\n\\n    def __str__(self):\\n        instance_info_text = \"\"\"\u3053\u306e\u4eba\u7269\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6982\u8981\\u3000\uff1a\\\\n---\u540d\u524d: {name_property}\\\\n---\u8a95\u751f\u6642\u523b:  + {birth_timestamp_property}\\\\n\"\"\".format(name_property=self.name, birth_timestamp_property=self.create_time)\\n        return instance_info_text\\n\\n    def get_name(self):\\n        return self.name\\n\\n    def get_birthday(self):\\n        return self.create_time\\n\\n    def set_name(self, new_name):\\n        self.name=str(new_name)',\n  'masaru = Person(\"\u307e\u3055\u308b\")',\n  'locals()'],\n 'Out': {1: {...}},\n 'Person': __main__.Person,\n '_': {...},\n '_1': {...},\n '__': '',\n '___': '',\n '__builtin__': <module 'builtins' (built-in)>,\n '__builtins__': <module 'builtins' (built-in)>,\n '__doc__': 'Automatically created module for IPython interactive environment',\n '__loader__': None,\n '__name__': '__main__',\n '__package__': None,\n '__spec__': None,\n '_dh': ['/Users/hirofumi.yashima'],\n '_i': 'masaru = Person(\"\u307e\u3055\u308b\")',\n '_i1': 'locals()',\n '_i2': 'class Person:\\n    count = 0\\n    alive_person_name_list = []\\n\\n    def __init__(self, name):\\n        from datetime import datetime as dt\\n        if str(name) in Person.alive_person_name_list:\\n            message_string_1 = \"\u540c\u3058\u540d\u524d\u306e\u4eba\u304c\u3059\u3067\u306b\u3044\u307e\u3059\u3002\\\\n\\\\\u5225\u306e\u540d\u524d\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\\n            print(message_string_1)\\n            pass\\n        else:\\n            Person.count += 1\\n            Person.alive_person_name_list.append(str(name))\\n            self.name=str(name)\\n            self.create_time=dt.now().strftime(\"%Y/%m/%d %H:%M:%S\")\\n            message_string_2 = \"\u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\\\\n\uff08 \u540d\u524d \uff09{name_property}\".format(name_property=self.name)\\n            print(message_string_2)\\n\\n\\n    def __str__(self):\\n        instance_info_text = \"\"\"\u3053\u306e\u4eba\u7269\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6982\u8981\\u3000\uff1a\\\\n\\\\\\n---\u540d\u524d: {name_property}\\\\n\\\\\\n---\u8a95\u751f\u6642\u523b:  + {birth_timestamp_property}\\\\n\"\"\".format(name_property=self.name, birth_timestamp_property=self.create_time)\\n        return instance_info_text\\n\\n    def get_name(self):\\n        return self.name\\n\\n    def get_birthday(self):\\n        return self.create_time\\n\\n    def set_name(self, new_name):\\n        self.name=str(new_name)',\n '_i3': 'masaru = Person(\"\u307e\u3055\u308b\")',\n '_i4': 'locals()',\n '_ih': ['',\n  'locals()',\n  'class Person:\\n    count = 0\\n    alive_person_name_list = []\\n\\n    def __init__(self, name):\\n        from datetime import datetime as dt\\n        if str(name) in Person.alive_person_name_list:\\n            message_string_1 = \"\u540c\u3058\u540d\u524d\u306e\u4eba\u304c\u3059\u3067\u306b\u3044\u307e\u3059\u3002\\\\n\\\\\u5225\u306e\u540d\u524d\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\\n            print(message_string_1)\\n            pass\\n        else:\\n            Person.count += 1\\n            Person.alive_person_name_list.append(str(name))\\n            self.name=str(name)\\n            self.create_time=dt.now().strftime(\"%Y/%m/%d %H:%M:%S\")\\n            message_string_2 = \"\u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\\\\n\uff08 \u540d\u524d \uff09{name_property}\".format(name_property=self.name)\\n            print(message_string_2)\\n\\n\\n    def __str__(self):\\n        instance_info_text = \"\"\"\u3053\u306e\u4eba\u7269\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6982\u8981\\u3000\uff1a\\\\n---\u540d\u524d: {name_property}\\\\n---\u8a95\u751f\u6642\u523b:  + {birth_timestamp_property}\\\\n\"\"\".format(name_property=self.name, birth_timestamp_property=self.create_time)\\n        return instance_info_text\\n\\n    def get_name(self):\\n        return self.name\\n\\n    def get_birthday(self):\\n        return self.create_time\\n\\n    def set_name(self, new_name):\\n        self.name=str(new_name)',\n  'masaru = Person(\"\u307e\u3055\u308b\")',\n  'locals()'],\n '_ii': 'class Person:\\n    count = 0\\n    alive_person_name_list = []\\n\\n    def __init__(self, name):\\n        from datetime import datetime as dt\\n        if str(name) in Person.alive_person_name_list:\\n            message_string_1 = \"\u540c\u3058\u540d\u524d\u306e\u4eba\u304c\u3059\u3067\u306b\u3044\u307e\u3059\u3002\\\\n\\\\\u5225\u306e\u540d\u524d\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\\n            print(message_string_1)\\n            pass\\n        else:\\n            Person.count += 1\\n            Person.alive_person_name_list.append(str(name))\\n            self.name=str(name)\\n            self.create_time=dt.now().strftime(\"%Y/%m/%d %H:%M:%S\")\\n            message_string_2 = \"\u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\\\\n\uff08 \u540d\u524d \uff09{name_property}\".format(name_property=self.name)\\n            print(message_string_2)\\n\\n\\n    def __str__(self):\\n        instance_info_text = \"\"\"\u3053\u306e\u4eba\u7269\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6982\u8981\\u3000\uff1a\\\\n\\\\\\n---\u540d\u524d: {name_property}\\\\n\\\\\\n---\u8a95\u751f\u6642\u523b:  + {birth_timestamp_property}\\\\n\"\"\".format(name_property=self.name, birth_timestamp_property=self.create_time)\\n        return instance_info_text\\n\\n    def get_name(self):\\n        return self.name\\n\\n    def get_birthday(self):\\n        return self.create_time\\n\\n    def set_name(self, new_name):\\n        self.name=str(new_name)',\n '_iii': 'locals()',\n '_oh': {1: {...}},\n '_sh': <module 'IPython.core.shadowns' from '/Users/hirofumi.yashima/anaconda/lib/python3.5/site-packages/IPython/core/shadowns.py'>,\n 'exit': <IPython.core.autocall.ZMQExitAutocall at 0x104120898>,\n 'get_ipython': <bound method InteractiveShell.get_ipython of <ipykernel.zmqshell.ZMQInteractiveShell object at 0x103ff1b38>>,\n 'masaru': <__main__.Person at 0x104353e48>,\n 'quit': <IPython.core.autocall.ZMQExitAutocall at 0x104120898>}\n```\n", "tags": ["Python", "python3", "\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411", "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"]}