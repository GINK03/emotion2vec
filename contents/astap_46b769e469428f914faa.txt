{"context": " More than 1 year has passed since last update.http://www.padrinorb.com/blog/padrino-and-omniauth-overview\n\u4e0a\u8a18\u3092\u53c2\u8003\u306b\u3057\u3066\u884c\u3044\u307e\u3057\u305f\u3002\n\n\u5bfe\u8c61\u8aad\u8005\npadrino \u3067 CRUD \u958b\u767a\u304c\u51fa\u6765\u308b\u65b9\u3002\n\ngithub \u5074\n\u307e\u305a github \u4e0a\u3067 application \u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\nhttps://github.com/settings/applications/\n\u2192 Register new application\nAuthorization callback URL \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nhttp://******/auth/github/callback\n\u8a2d\u5b9a\u304c\u7d42\u308f\u308b\u3068\u3001\nClient ID \u3068 Client Secret \u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\npadrino \u5074\nGemfile \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\ngem 'omniauth-github'\n\nbundele \u3057\u307e\u3059\u3002\n\napp.rb\nmodule AuthProject\n  class App < Padrino::Application\n    use ConnectionPoolManagement\n    register Padrino::Mailer\n    register Padrino::Helpers\n    use OmniAuth::Builder do\n      provider :github, ENV['GITHUB_KEY'], ENV['GITHUB_SECRET']\n    end\n\n\ngithub \u3067\u53d6\u5f97\u3057\u305f Client ID \u3092 ENV['GITHUB_KEY'] \u306b\nClient Secret \u3092 ENV['GITHUB_SECRET'] \u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u306e\u8a2d\u5b9a\u3092\u5272\u611b\u3057\u307e\u3059\u3002\n\ncontrollers/auth.rb\nAuthProject::App.controllers :auth do\n  get :index do\n    render :index\n  end\n\n  get :destroy do\n    set_current_account(nil)\n    redirect url(:auth, :index)\n  end\n\n  get :callback, :map => '/auth/:provider/callback' do\n    auth = request.env['omniauth.auth']\n    account = Account.find_by_provider_and_uid(auth['provider'], auth['uid']) ||\n    Account.create_with_omniauth(auth)\n    set_current_account(account)\n    redirect 'http://' + request.env['HTTP_HOST'] + url(:account, :profile)\n  end\nend\n\n\n\n\ncontrollers/account.rb\nAuthProject::App.controllers :account do\n  get :profile do\n    content_type :text\n    current_account.to_yaml\n  end\nend\n\n\n\nviews/auth/index.erb\n<!DOCTYPE html>\n<html>\n<head>\n  <title>github\u8a8d\u8a3c</title>\n</head>\n<body>\n  <% if logged_in? %>\n    <%= link_to 'sign out', '/auth/destroy/' %>\n  <% else %>\n    <%= link_to 'sign in with github', '/auth/github/' %>\n  <% end %>\n</body>\n</html>\n\n\n\nmodel \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ padrino g model Account name:string email:string role:string uid:string provider:string\n$ padrino rake ar:migrate\n\n\nmodels/account.rb\nclass Account < ActiveRecord::Base\n  def self.create_with_omniauth(auth)\n    create!(\n      provider: auth['provider'],\n      uid: auth['uid'],\n      name: auth['name'],\n      role: 'users'\n    )\n  end\nend\n\n\n\ngithub\u30e6\u30fc\u30b6\u306e\u60c5\u5831\u3067\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u3053\u308c\u3067\u8a8d\u8a3c\u304c\u884c\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u8a8d\u8a3c\u3067\u306e\u30a2\u30af\u30bb\u30b9\u5236\u9650\u3092\u884c\u3046\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\napp.rb\nregister Padrino::Admin::AccessControl\n\nset :login_page, '/auth'\naccess_control.roles_for :any do |role|\n  role.protect \"/account\"\nend\n\n# now we add a role for users\naccess_control.roles_for :users do |role|\n  role.allow \"/account/profile\"\nend\n\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n\nhttp://www.padrinorb.com/blog/padrino-and-omniauth-overview\n\u4e0a\u8a18\u3092\u53c2\u8003\u306b\u3057\u3066\u884c\u3044\u307e\u3057\u305f\u3002\n\n### \u5bfe\u8c61\u8aad\u8005\npadrino \u3067 CRUD \u958b\u767a\u304c\u51fa\u6765\u308b\u65b9\u3002\n\n## github \u5074\n\u307e\u305a github \u4e0a\u3067 application \u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\nhttps://github.com/settings/applications/\n\u2192 Register new application\n\nAuthorization callback URL \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nhttp://******/auth/github/callback\n\n\u8a2d\u5b9a\u304c\u7d42\u308f\u308b\u3068\u3001\nClient ID \u3068 Client Secret \u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n\n## padrino \u5074\nGemfile \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```Gemfile\ngem 'omniauth-github'\n```\n\nbundele \u3057\u307e\u3059\u3002\n\n```app.rb\nmodule AuthProject\n  class App < Padrino::Application\n    use ConnectionPoolManagement\n    register Padrino::Mailer\n    register Padrino::Helpers\n    use OmniAuth::Builder do\n      provider :github, ENV['GITHUB_KEY'], ENV['GITHUB_SECRET']\n    end\n```\n\ngithub \u3067\u53d6\u5f97\u3057\u305f Client ID \u3092 ENV['GITHUB_KEY'] \u306b\nClient Secret \u3092 ENV['GITHUB_SECRET'] \u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u306e\u8a2d\u5b9a\u3092\u5272\u611b\u3057\u307e\u3059\u3002\n\n\n```controllers/auth.rb\nAuthProject::App.controllers :auth do\n  get :index do\n    render :index\n  end\n\n  get :destroy do\n    set_current_account(nil)\n    redirect url(:auth, :index)\n  end\n\n  get :callback, :map => '/auth/:provider/callback' do\n    auth = request.env['omniauth.auth']\n    account = Account.find_by_provider_and_uid(auth['provider'], auth['uid']) ||\n    Account.create_with_omniauth(auth)\n    set_current_account(account)\n    redirect 'http://' + request.env['HTTP_HOST'] + url(:account, :profile)\n  end\nend\n\n```\n\n```controllers/account.rb\nAuthProject::App.controllers :account do\n  get :profile do\n    content_type :text\n    current_account.to_yaml\n  end\nend\n```\n\n```views/auth/index.erb\n<!DOCTYPE html>\n<html>\n<head>\n  <title>github\u8a8d\u8a3c</title>\n</head>\n<body>\n  <% if logged_in? %>\n    <%= link_to 'sign out', '/auth/destroy/' %>\n  <% else %>\n    <%= link_to 'sign in with github', '/auth/github/' %>\n  <% end %>\n</body>\n</html>\n```\n\n### model \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n```sh\n$ padrino g model Account name:string email:string role:string uid:string provider:string\n$ padrino rake ar:migrate\n```\n\n```models/account.rb\nclass Account < ActiveRecord::Base\n  def self.create_with_omniauth(auth)\n    create!(\n      provider: auth['provider'],\n      uid: auth['uid'],\n      name: auth['name'],\n      role: 'users'\n    )\n  end\nend\n\n```\ngithub\u30e6\u30fc\u30b6\u306e\u60c5\u5831\u3067\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3067\u8a8d\u8a3c\u304c\u884c\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u8a8d\u8a3c\u3067\u306e\u30a2\u30af\u30bb\u30b9\u5236\u9650\u3092\u884c\u3046\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```app.rb\nregister Padrino::Admin::AccessControl\n\nset :login_page, '/auth'\naccess_control.roles_for :any do |role|\n  role.protect \"/account\"\nend\n\n# now we add a role for users\naccess_control.roles_for :users do |role|\n  role.allow \"/account/profile\"\nend\n```\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n", "tags": ["Padrino", "OmniAuth", "Ruby"]}