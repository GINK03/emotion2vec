{"context": "\u6df7\u4e71\u304c\u591a\u3044\u306e\u3067\u89e3\u8aac\u3002\u81ea\u5206\u3082\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u304b\u3063\u305f\u30fb\u30fb\u3002\n\u30b3\u30fc\u30c9\u53c2\u7167\u5143\nhttps://github.com/slockit/DAO/blob/master/DAO.sol\n\nDAO.sol\n\n625-698\u884c\u76ee\u3092\u629c\u7c8b\n\nfunction splitDAO(\n        uint _proposalID,\n        address _newCurator\n    ) noEther onlyTokenholders returns (bool _success) {\n\n        Proposal p = proposals[_proposalID];\n\n        // Sanity check\n\n        if (now < p.votingDeadline  // has the voting deadline arrived?\n            //The request for a split expires XX days after the voting deadline\n            || now > p.votingDeadline + splitExecutionPeriod\n            // Does the new Curator address match?\n            || p.recipient != _newCurator\n            // Is it a new curator proposal?\n            || !p.newCurator\n            // Have you voted for this split?\n            || !p.votedYes[msg.sender]\n            // Did you already vote on another proposal?\n            || (blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0) )  {\n\n            throw;\n        }\n\n        // If the new DAO doesn't exist yet, create the new DAO and store the\n        // current split data\n        if (address(p.splitData[0].newDAO) == 0) {\n            p.splitData[0].newDAO = createNewDAO(_newCurator);\n            // Call depth limit reached, etc.\n            if (address(p.splitData[0].newDAO) == 0)\n                throw;\n            // should never happen\n            if (this.balance < sumOfProposalDeposits)\n                throw;\n            p.splitData[0].splitBalance = actualBalance();\n            p.splitData[0].rewardToken = rewardToken[address(this)];\n            p.splitData[0].totalSupply = totalSupply;\n            p.proposalPassed = true;\n        }\n\n        // Move ether and assign new Tokens\n        uint fundsToBeMoved =\n            (balances[msg.sender] * p.splitData[0].splitBalance) /\n            p.splitData[0].totalSupply;\n        if (p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender) == false)\n            throw;\n\n\n        // Assign reward rights to new DAO\n        uint rewardTokenToBeMoved =\n            (balances[msg.sender] * p.splitData[0].rewardToken) /\n            p.splitData[0].totalSupply;\n\n        uint paidOutToBeMoved = DAOpaidOut[address(this)] * rewardTokenToBeMoved /\n            rewardToken[address(this)];\n\n        rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved;\n        if (rewardToken[address(this)] < rewardTokenToBeMoved)\n            throw;\n        rewardToken[address(this)] -= rewardTokenToBeMoved;\n\n        DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved;\n        if (DAOpaidOut[address(this)] < paidOutToBeMoved)\n            throw;\n        DAOpaidOut[address(this)] -= paidOutToBeMoved;\n\n        // Burn DAO Tokens\n        Transfer(msg.sender, 0, balances[msg.sender]);\n        withdrawRewardFor(msg.sender); // be nice, and get his rewards\n        totalSupply -= balances[msg.sender];\n        balances[msg.sender] = 0;\n        paidOut[msg.sender] = 0;\n        return true;\n    }\n\n\n\n\n\nSanity check\u304c\u5b9f\u884c\u6a29\u9650\u30c1\u30a7\u30c3\u30af\u306e\u3068\u3053\u308d\u3067\u3059\n // Sanity check\n\n        if (now < p.votingDeadline  // has the voting deadline arrived?\n            //The request for a split expires XX days after the voting deadline\n            || now > p.votingDeadline + splitExecutionPeriod\n            // Does the new Curator address match?\n            || p.recipient != _newCurator\n            // Is it a new curator proposal?\n            || !p.newCurator\n            // Have you voted for this split?\n            || !p.votedYes[msg.sender]\n            // Did you already vote on another proposal?\n            || (blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0) )  {\n\n            throw;\n        }\n\n\u3053\u3053\u3067\u3001if()\u306e\u4e2d\u3067\u8907\u6570\u306e\u6761\u4ef6\u304c\u3042\u308a\u307e\u3059\u3002||\u306for\u306e\u610f\u5473\u3067\u3001\u305d\u308c\u3089\u306e\u6761\u4ef6\u306e\u3069\u308c\u304b\u4e00\u3064\u3067\u3082true\u306a\u308b\u3068\u3001\nthrow;\n\u3055\u308c\u3066(\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u5b9f\u884c\u505c\u6b62\uff09\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u6761\u4ef6\u3092\u898b\u3066\u307f\u308b\n1.\u3053\u306esplit\u306e\u6295\u7968\u306f\u7d42\u4e86\u3057\u305f\u304b: now < p.votingDeadline\n\nnow\u306f\u73fe\u5728\u6642\u523b\u3092\u8868\u3059\n\u3044\u307e\u304c\u6295\u7968\u7d42\u4e86\u65e5\u6642\u3088\u308a\u524d\u306e\u6642\u306f\u3001true\u3001\u6295\u7968\u7d42\u4e86\u5f8c\u306a\u3089false\n\n2.split\u53ef\u80fd\u671f\u9593\u3092\u904e\u304e\u3066\u3044\u308b\u304b\u3069\u3046\u304b : now > p.votingDeadline + splitExecutionPeriod\n\nsplit\u671f\u9650\u3092\u904e\u304e\u305f\u3089true\u306b\u306a\u308asplit\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\n\n\n\u30ad\u30e5\u30ec\u30fc\u30bf\u30fc\u3068\u53d7\u53d6\u4eba\u306f\u540c\u3058\u304b\u3069\u3046\u304b\uff1a p.recipient != _newCurator\n\n\u65b0\u3057\u3044\u30ad\u30e5\u30ec\u30fc\u30bf\u30fc\u306b\u3088\u308bproposal\u304b\u3069\u3046\u304b\u3000\uff1a!p.newCurator\n\nnewCurator=true\u306eproposal\u3067\u3057\u304bsplit\u306f\u6709\u52b9\u3067\u306f\u306a\u3044\n\n\n\nYES\u306b\u6295\u7968\u3057\u305f\u304b\u3069\u3046\u304b\uff1a!p.votedYes[msg.sender]\n\nmsg.sender\u306f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u9001\u3063\u305f\u4eba\u306e\u30a2\u30c9\u30ec\u30b9\u3002\nsplitDAO\u306e\u5b9f\u884c\u8005\uff08\u5404\u30c8\u30fc\u30af\u30f3\u30db\u30eb\u30c0\u30fc\uff09\np.votedYes[msg.sender]\u306f\u3001YES\u306b\u6295\u7968\u3057\u305f\u4eba\u306ftrue\u306e\u5024\u304c\u5165\u3063\u3066\u3044\u308b\u3002\n!p.votedYes[msg.sender]\u306a\u306e\u3067\u6295\u7968\u3057\u305f\u4eba\u306ffalse\u306b\u306a\u308b\u3002\u6295\u7968\u3057\u3066\u306a\u3044\u4eba\u3001No\u3060\u3063\u305f\u4eba\u306ftrue\u306b\u306a\u308asplit\u5b9f\u884c\u3067\u304d\u306a\u3044\n\n\n\u4ed6\u306eproposal\u306b\u3088\u3063\u3066block\u72b6\u614b\u304b\u3069\u3046\u304b\uff1a\u3000(blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0)\n\n\n\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u4ed6\u306e\u6295\u7968\u53c2\u52a0\u4e2d\u3067block\u3055\u308c\u3066\u308b\u3068splitDAO\u304c\u5b9f\u884c\u3067\u304d\u306a\u3044\u3002\n\n\n\u4ee5\u4e0a\uff16\u3064\u306e\u6761\u4ef6\u3067\u3059\u3002\n\n\u4e0b\u624b\u306b\u540c\u4e00\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u6295\u7968\u3057\u307e\u304f\u3063\u305f\u308a\u3059\u308b\u3068\u6295\u7968\u671f\u9593\u4e2dblock\u3055\u308c\u308b\u306e\u3067\u30a2\u30ab\u30a6\u30f3\u30c8\u5206\u3051\u3066\u6295\u7968\u3059\u308b\u306e\u304c\u3044\u3044\u306e\u3067\u3057\u3087\u3046\u3002split\u306f\u4e00\u500b\u306b\u5bfe\u3057\u3066\u3057\u304b\u3067\u304d\u307e\u305b\u3093\u3057\u30fb\u30fb\u30fb\u3002\nYES\u306b\u6295\u3058\u3066\u306a\u3044\u4eba\u306f\u53ef\u6c7a\u3055\u308c\u305fsplit\u306b\u53c2\u52a0\u3067\u304d\u306a\u3044\uff01\uff01\u3068\u3044\u3046\u3053\u3068\u3092\u77e5\u3063\u305f\u306e\u3067\u3001\u3061\u3083\u3093\u3068\u6295\u7968\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u304b\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\n\n\n\u6df7\u4e71\u304c\u591a\u3044\u306e\u3067\u89e3\u8aac\u3002\u81ea\u5206\u3082\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u304b\u3063\u305f\u30fb\u30fb\u3002\n\n\n\u30b3\u30fc\u30c9\u53c2\u7167\u5143\nhttps://github.com/slockit/DAO/blob/master/DAO.sol\n\n```DAO.sol\n\n625-698\u884c\u76ee\u3092\u629c\u7c8b\n\nfunction splitDAO(\n        uint _proposalID,\n        address _newCurator\n    ) noEther onlyTokenholders returns (bool _success) {\n\n        Proposal p = proposals[_proposalID];\n\n        // Sanity check\n\n        if (now < p.votingDeadline  // has the voting deadline arrived?\n            //The request for a split expires XX days after the voting deadline\n            || now > p.votingDeadline + splitExecutionPeriod\n            // Does the new Curator address match?\n            || p.recipient != _newCurator\n            // Is it a new curator proposal?\n            || !p.newCurator\n            // Have you voted for this split?\n            || !p.votedYes[msg.sender]\n            // Did you already vote on another proposal?\n            || (blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0) )  {\n\n            throw;\n        }\n\n        // If the new DAO doesn't exist yet, create the new DAO and store the\n        // current split data\n        if (address(p.splitData[0].newDAO) == 0) {\n            p.splitData[0].newDAO = createNewDAO(_newCurator);\n            // Call depth limit reached, etc.\n            if (address(p.splitData[0].newDAO) == 0)\n                throw;\n            // should never happen\n            if (this.balance < sumOfProposalDeposits)\n                throw;\n            p.splitData[0].splitBalance = actualBalance();\n            p.splitData[0].rewardToken = rewardToken[address(this)];\n            p.splitData[0].totalSupply = totalSupply;\n            p.proposalPassed = true;\n        }\n\n        // Move ether and assign new Tokens\n        uint fundsToBeMoved =\n            (balances[msg.sender] * p.splitData[0].splitBalance) /\n            p.splitData[0].totalSupply;\n        if (p.splitData[0].newDAO.createTokenProxy.value(fundsToBeMoved)(msg.sender) == false)\n            throw;\n\n\n        // Assign reward rights to new DAO\n        uint rewardTokenToBeMoved =\n            (balances[msg.sender] * p.splitData[0].rewardToken) /\n            p.splitData[0].totalSupply;\n\n        uint paidOutToBeMoved = DAOpaidOut[address(this)] * rewardTokenToBeMoved /\n            rewardToken[address(this)];\n\n        rewardToken[address(p.splitData[0].newDAO)] += rewardTokenToBeMoved;\n        if (rewardToken[address(this)] < rewardTokenToBeMoved)\n            throw;\n        rewardToken[address(this)] -= rewardTokenToBeMoved;\n\n        DAOpaidOut[address(p.splitData[0].newDAO)] += paidOutToBeMoved;\n        if (DAOpaidOut[address(this)] < paidOutToBeMoved)\n            throw;\n        DAOpaidOut[address(this)] -= paidOutToBeMoved;\n\n        // Burn DAO Tokens\n        Transfer(msg.sender, 0, balances[msg.sender]);\n        withdrawRewardFor(msg.sender); // be nice, and get his rewards\n        totalSupply -= balances[msg.sender];\n        balances[msg.sender] = 0;\n        paidOut[msg.sender] = 0;\n        return true;\n    }\n\n\n```\n\n\n\n\n##Sanity check\u304c\u5b9f\u884c\u6a29\u9650\u30c1\u30a7\u30c3\u30af\u306e\u3068\u3053\u308d\u3067\u3059\n\n```\n // Sanity check\n\n        if (now < p.votingDeadline  // has the voting deadline arrived?\n            //The request for a split expires XX days after the voting deadline\n            || now > p.votingDeadline + splitExecutionPeriod\n            // Does the new Curator address match?\n            || p.recipient != _newCurator\n            // Is it a new curator proposal?\n            || !p.newCurator\n            // Have you voted for this split?\n            || !p.votedYes[msg.sender]\n            // Did you already vote on another proposal?\n            || (blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0) )  {\n\n            throw;\n        }\n```\n\n\u3053\u3053\u3067\u3001if()\u306e\u4e2d\u3067\u8907\u6570\u306e\u6761\u4ef6\u304c\u3042\u308a\u307e\u3059\u3002||\u306for\u306e\u610f\u5473\u3067\u3001\u305d\u308c\u3089\u306e\u6761\u4ef6\u306e\u3069\u308c\u304b\u4e00\u3064\u3067\u3082true\u306a\u308b\u3068\u3001\n\nthrow;\n\n\u3055\u308c\u3066(\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u30b3\u30f3\u30c8\u30e9\u30af\u30c8\u5b9f\u884c\u505c\u6b62\uff09\u3057\u307e\u3044\u307e\u3059\u3002\n\n\n\n##\u6761\u4ef6\u3092\u898b\u3066\u307f\u308b\n\n1.\u3053\u306esplit\u306e\u6295\u7968\u306f\u7d42\u4e86\u3057\u305f\u304b: now < p.votingDeadline\n\n * now\u306f\u73fe\u5728\u6642\u523b\u3092\u8868\u3059\n * \u3044\u307e\u304c\u6295\u7968\u7d42\u4e86\u65e5\u6642\u3088\u308a\u524d\u306e\u6642\u306f\u3001true\u3001\u6295\u7968\u7d42\u4e86\u5f8c\u306a\u3089false\n\n2.split\u53ef\u80fd\u671f\u9593\u3092\u904e\u304e\u3066\u3044\u308b\u304b\u3069\u3046\u304b : now > p.votingDeadline + splitExecutionPeriod\n\n* split\u671f\u9650\u3092\u904e\u304e\u305f\u3089true\u306b\u306a\u308asplit\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\n\n3. \u30ad\u30e5\u30ec\u30fc\u30bf\u30fc\u3068\u53d7\u53d6\u4eba\u306f\u540c\u3058\u304b\u3069\u3046\u304b\uff1a p.recipient != _newCurator\n\n\n4. \u65b0\u3057\u3044\u30ad\u30e5\u30ec\u30fc\u30bf\u30fc\u306b\u3088\u308bproposal\u304b\u3069\u3046\u304b\u3000\uff1a!p.newCurator\n * newCurator=true\u306eproposal\u3067\u3057\u304bsplit\u306f\u6709\u52b9\u3067\u306f\u306a\u3044\n\n5. YES\u306b\u6295\u7968\u3057\u305f\u304b\u3069\u3046\u304b\uff1a!p.votedYes[msg.sender]\n  * msg.sender\u306f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u9001\u3063\u305f\u4eba\u306e\u30a2\u30c9\u30ec\u30b9\u3002\n  * splitDAO\u306e\u5b9f\u884c\u8005\uff08\u5404\u30c8\u30fc\u30af\u30f3\u30db\u30eb\u30c0\u30fc\uff09\n  * p.votedYes[msg.sender]\u306f\u3001YES\u306b\u6295\u7968\u3057\u305f\u4eba\u306ftrue\u306e\u5024\u304c\u5165\u3063\u3066\u3044\u308b\u3002\n  * !p.votedYes[msg.sender]\u306a\u306e\u3067\u6295\u7968\u3057\u305f\u4eba\u306ffalse\u306b\u306a\u308b\u3002\u6295\u7968\u3057\u3066\u306a\u3044\u4eba\u3001No\u3060\u3063\u305f\u4eba\u306ftrue\u306b\u306a\u308asplit\u5b9f\u884c\u3067\u304d\u306a\u3044\n\n6. \u4ed6\u306eproposal\u306b\u3088\u3063\u3066block\u72b6\u614b\u304b\u3069\u3046\u304b\uff1a\u3000(blocked[msg.sender] != _proposalID && blocked[msg.sender] != 0)\n\n * \u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u4ed6\u306e\u6295\u7968\u53c2\u52a0\u4e2d\u3067block\u3055\u308c\u3066\u308b\u3068splitDAO\u304c\u5b9f\u884c\u3067\u304d\u306a\u3044\u3002\n\n\n\n##\u4ee5\u4e0a\uff16\u3064\u306e\u6761\u4ef6\u3067\u3059\u3002\n\n* \u4e0b\u624b\u306b\u540c\u4e00\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u6295\u7968\u3057\u307e\u304f\u3063\u305f\u308a\u3059\u308b\u3068\u6295\u7968\u671f\u9593\u4e2dblock\u3055\u308c\u308b\u306e\u3067\u30a2\u30ab\u30a6\u30f3\u30c8\u5206\u3051\u3066\u6295\u7968\u3059\u308b\u306e\u304c\u3044\u3044\u306e\u3067\u3057\u3087\u3046\u3002split\u306f\u4e00\u500b\u306b\u5bfe\u3057\u3066\u3057\u304b\u3067\u304d\u307e\u305b\u3093\u3057\u30fb\u30fb\u30fb\u3002\n\n* YES\u306b\u6295\u3058\u3066\u306a\u3044\u4eba\u306f\u53ef\u6c7a\u3055\u308c\u305fsplit\u306b\u53c2\u52a0\u3067\u304d\u306a\u3044\uff01\uff01\u3068\u3044\u3046\u3053\u3068\u3092\u77e5\u3063\u305f\u306e\u3067\u3001\u3061\u3083\u3093\u3068\u6295\u7968\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u304b\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\n\n", "tags": ["DAO", "Ethereum"]}