{"tags": ["ReactiveExtensions", "RxJava"], "context": " More than 1 year has passed since last update.RxJava\u3067\u306f\u975e\u540c\u671f\u51e6\u7406\u306a\u3069\u3067\u975e\u5e38\u306b\u4fbf\u5229\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u304c\u3001\u305d\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3082\u3068\u3066\u3082\u30b9\u30de\u30fc\u30c8\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306fRxJava\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nsubscribe\u3067\u306e\u30a8\u30e9\u30fc\u51e6\u7406\n\u901a\u5e38\u306fsubscribe()\u3067\u30a8\u30e9\u30fc\u3092\u53d7\u3051\u53d6\u3063\u3066\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u3068\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nsubscribe\u3067\u306e\u30a8\u30e9\u30fc\u51e6\u7406\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\u3092\u3053\u3053\u3067\u53d7\u3051\u53d6\u308b\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> error:java.lang.Throwable\n\n\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u306e\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306bonNext()\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3060\u3051\u3092\u884c\u3046\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3068\u3001onError()\u767a\u706b\u6642\u306b\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .subscribe(new Action1<String>() {\n                    @Override\n                    public void call(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\nCrash!! \nby rx.exceptions.OnErrorNotImplementedException\n\n\u306e\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u5834\u5408\u306f\u304d\u3061\u3093\u3068\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u307e\u3057\u3087\u3046\u3002\n\nError\u3092\u30ad\u30e3\u30c3\u30c1\u3059\u308b\n\nonErrorReturn\nObservable\u30c1\u30a7\u30a4\u30f3\u306e\u306a\u304b\u3067\u767a\u751f\u3057\u305fError\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066\u3001\u5927\u4f53\u306eObject\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3067subscriber\u306bError\u304c\u6e21\u3055\u308c\u308b\u306e\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .onErrorReturn(new Func1<Throwable, String>() {\n                    @Override\n                    public String call(Throwable throwable) {\n                        return \"return\";\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> on next: return\n> completed\n\n\u30a8\u30e9\u30fc\u6642\u306b\u7121\u4e8breturn\u6587\u5b57\u5217\u306b\u5909\u63db\u3055\u308c\u307e\u3057\u305f\u3002\n\nonErrorResumeNext\nObservable\u30c1\u30a7\u30a4\u30f3\u306e\u306a\u304b\u3067\u767a\u751f\u3057\u305fError\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066\u3001\u305d\u306e\u4e2d\u3067\u518d\u5ea6Observable\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u3001\u30a8\u30e9\u30fc\u6642\u306b\u4ee3\u66ff\u306eStream\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .onErrorResumeNext(new Func1<Throwable, Observable<? extends String>>() {\n                    @Override\n                    public Observable<? extends String> call(Throwable throwable) {\n                        return Observable.from(new String[]{ \"resume 1\", \"resume 2\"});\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> on next: resume 1\n> on next: resume 2\n> completed\n\n\u30a8\u30e9\u30fc\u6642\u306bresume 1,resume 2\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u5909\u63db\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u30a8\u30e9\u30fc\u6642\u306b\u30ea\u30c8\u30e9\u30a4\u3059\u308b\n\nretry\nretry()\u30e1\u30bd\u30c3\u30c9\u306fError\u304c\u8d77\u3053\u3063\u305f\u6642\u306b\u3001\u81ea\u52d5\u7684\u306bsubscribe\u3057\u306a\u304a\u3057\u3066\u304f\u308c\u308b\u3001\u975e\u5e38\u306b\u4fbf\u5229\u306a\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retry()\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n...\u6210\u529f\u3059\u308b\u307e\u3067\u30ea\u30c8\u30e9\u30a4\u3057\u7d9a\u3051\u308b\u3002\u3002\u3002\n\n\u5f15\u6570\u306a\u3057\u306eretry()\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u305d\u308c\u307e\u3067\u306e\u51e6\u7406\u3092\u6210\u529f\u3059\u308b\u307e\u3067\u30ea\u30c8\u30e9\u30a4\u3057\u7d9a\u3051\u307e\u3059\u3002\n\u3053\u308c\u3067\u306f\u5fa9\u65e7\u3067\u304d\u306a\u3044\u554f\u984c\u304c\u8d77\u3053\u3063\u305f\u6642\u306b\u7121\u9650\u30eb\u30fc\u30d7\u306b\u306a\u308a\u304b\u306d\u306a\u3044\u306e\u3067\u3001\u30ea\u30c8\u30e9\u30a4\u306e\u56de\u6570\u3092\u5236\u9650\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308a\u307e\u3059\u3002\n// count: \u30ea\u30c8\u30e9\u30a4\u56de\u6570\npublic final Observable<T> retry(long count);\n\n\u307e\u305f\u3001Error\u306e\u72b6\u6cc1\u3092\u307f\u3066\u30ea\u30c8\u30e9\u30a4\u3059\u308b\u304b\u3069\u3046\u304b\u3082\u5224\u65ad\u3067\u304d\u307e\u3059\u3002\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retry(new Func2<Integer, Throwable, Boolean>() {\n                    @Override\n                    public Boolean call(Integer count, Throwable throwable) {\n                    // \uff12\u56de\u307e\u3067\u306f\u7121\u6761\u4ef6\u306b\u30ea\u30c8\u30e9\u30a4\u3059\u308b\n                        if(count < 3){\n                            return true;\n                        }\n                    // \u305d\u308c\u4ee5\u964d\u306fIllegalStateException\u306e\u5834\u5408\u3060\u3051\u30ea\u30c8\u30e9\u30a4\u3059\u308b\n                        return throwable instanceof IllegalStateException;\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> error:java.lang.Throwable\n\n\nretryWhen\nretryWhen()\u30e1\u30bd\u30c3\u30c9\u306f\u3061\u3087\u3063\u3068\u8907\u96d1\u3067\u308f\u304b\u308a\u306b\u304f\u3044\u3067\u3059\u304c\u3001\u3088\u308a\u7d30\u304b\u304f\u30ea\u30c8\u30e9\u30a4\u51e6\u7406\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002retryWhen()\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306f\u521d\u56de\u304b\u3089\u30ea\u30c8\u30e9\u30a4\u5f8c\u306b\u8d77\u3053\u308bError\u3092Observable\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\u3001\u305d\u308c\u3092\u5909\u63db\u3057\u3066\u4f55\u3089\u304b\u306eObservable\u3068\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3053\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u8fd4\u3057\u305fObservable\u3067\u4f55\u3089\u304b\u306e\u5024\u304conNext()\u3055\u308c\u308b\u3068\u3001\u305d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ea\u30c8\u30e9\u30a4\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u3053\u306eObservable\u3067onComplete()\u3082\u3057\u304f\u306fonError()\u3092\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\u3001\u3082\u3068\u306eObservable\u304conComplete()\u3082\u3057\u304f\u306fonError()\u7d42\u4e86\u3057\u307e\u3059\u3002\n\u3061\u3087\u3063\u3068\u308f\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u7c21\u5358\u306b\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\n3\u79d2\u5f8c\u306b\u30ea\u30c8\u30e9\u30a4\n3\u79d2\u5f8c\u306b\u30ea\u30c8\u30e9\u30a4\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n\u30a8\u30e9\u30fc\u767a\u751f\u5f8c3\u79d2\u5f85\u3063\u3066\u304b\u3089\u30ea\u30c8\u30e9\u30a4\u3059\u308b\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retryWhen(new Func1<Observable<? extends Throwable>, Observable<?>>() {\n                    @Override\n                    public Observable<?> call(final Observable<? extends Throwable> observable) {\n                        return observable.flatMap(new Func1<Throwable, Observable<?>>() {\n                            @Override\n                            public Observable<?> call(Throwable throwable) {\n                                return Observable.timer(3, TimeUnit.SECONDS);\n                            }\n                        });\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n// 3\u79d2\u5f8c\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n// 3\u79d2\u5f8c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n// 3\u79d2\u5f8c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n// 3\u79d2\u5f8c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n....\u7e70\u308a\u8fd4\u3057\n\n\nError\u306e\u307e\u307e\u7d42\u4e86\nError\u306e\u307e\u307e\u7d42\u4e86\u3059\u308b\u306b\u306f\n\nError\u306e\u307e\u307e\u7d42\u4e86\u3059\u308b\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retryWhen(new Func1<Observable<? extends Throwable>, Observable<?>>() {\n                    @Override\n                    public Observable<?> call(final Observable<? extends Throwable> observable) {\n                        return observable.flatMap(new Func1<Throwable, Observable<?>>() {\n                            @Override\n                            public Observable<?> call(Throwable throwable) {\n                                return Observable.error(throwable);\n                            }\n                        });\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> error:java.lang.Throwable\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306f\u3061\u3087\u3046\u3069retryWhen\u30e1\u30bd\u30c3\u30c9\u3092\u9069\u7528\u305b\u305a\u306b\u3001Error\u3092\u53d7\u3051\u53d6\u3063\u305f\u306e\u3068\u540c\u3058\u52d5\u4f5c\u3068\u306a\u308a\u307e\u3059\u3002\n\nError\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u305b\u305a\u306bComplete\nError\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u305b\u305a\u306b\u305d\u306e\u5834\u3067Complete\u3059\u308b\u306b\u306f\u4e00\u898b\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u826f\u3055\u305d\u3046\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u306f\u5b9f\u306f\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002\n\nError\u304c\u6765\u305f\u3089empty()\u3067complete\u3057\u305f\u3044\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retryWhen(new Func1<Observable<? extends Throwable>, Observable<?>>() {\n                    @Override\n                    public Observable<?> call(final Observable<? extends Throwable> observable) {\n                        return observable.flatMap(new Func1<Throwable, Observable<?>>() {\n                            @Override\n                            public Observable<?> call(Throwable throwable) {\n                                return Observable.empty();\n                            }\n                        });\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n\u8a73\u3057\u304f\u306f\u3053\u3053\u306e\u3084\u308a\u53d6\u308a\u306b\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067flatMap\u3057\u3066empty()\u3067\u8fd4\u3057\u3066\u3082\u3001\u3082\u3068\u3082\u3068Observable<Throwable>\u306e\u6d41\u308c\u3092complete\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u7121\u8996\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u5b9f\u969b\u3001Error\u304c\u8d77\u3053\u3063\u305f\u3089\u3044\u304d\u306a\u308acomplete\u3057\u305f\u3044\u51e6\u7406\u3092\u66f8\u304d\u305f\u3044\u5834\u5408\u306b\u306f\u3001\u5b9f\u969b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001error\u306estream\u3092\u6700\u521d\u306e\u4e00\u3064\u3060\u3051\u53d7\u3051\u53d6\u3063\u3066\u3001\u305d\u308c\u3092\u7121\u8996\u3059\u308b\u3001\u3068\u3044\u3046\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u96e3\u3057\u3044\u3067\u3059\u306d\u3002\n\nError\u304c\u6765\u305f\u3089empty()\u3067complete\u3057\u305f\u3044\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retryWhen(new Func1<Observable<? extends Throwable>, Observable<?>>() {\n                    @Override\n                    public Observable<?> call(final Observable<? extends Throwable> observable) {\n                        return observable.take(1).ignoreElements();\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> completed\n\n\n\u3061\u3083\u3093\u3068Complete\u3067\u304d\u305f\uff01\uff01\n\u3061\u306a\u307f\u306btake(0)\u3060\u3068error\u304c\u8d77\u3053\u308b\u524d\u306b\u3044\u304d\u306a\u308a\u5168\u4f53\u306eObservable\u304c\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u4f59\u8ac7\u3067\u3059\u304c\u3001\u30a8\u30e9\u30fc\u6642\u306b\u4f55\u3082\u305b\u305acompleted\u306b\u3057\u305f\u3044\u5834\u5408\u306fonErrorResumeNext()\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u30b9\u30de\u30fc\u30c8\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\n                .onErrorResumeNext(new Func1<Throwable, Observable<? extends String>>() {\n                    @Override\n                    public Observable<? extends String> call(Throwable throwable) {\n                        return Observable.empty();\n                    }\n                })\n\n\n3\u56de\u30ea\u30c8\u30e9\u30a4\u3057\u305f\u3089\u7d42\u4e86\n\u4e0a\u8a18\u306e\u4f8b\u3092\u3082\u3068\u306b3\u56de\u30ea\u30c8\u30e9\u30a4\u3059\u308b\u5834\u5408\u306f\u3001\n\n3\u56de\u30ea\u30c8\u30e9\u30a4\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retryWhen(new Func1<Observable<? extends Throwable>, Observable<?>>() {\n                    @Override\n                    public Observable<?> call(final Observable<? extends Throwable> observable) {\n                        return observable.take(3);\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n\n\n\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> completed\n\n\u3061\u3083\u3093\u30683\u56de\u30ea\u30c8\u30e9\u30a4\u3057\u3066\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002\n\u3053\u306e\u5834\u5408\u306f\u5148\u7a0b\u306eretry(count)\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u306e\u9055\u3044\u306f\u3001retry(count)\u3067\u306f\u30ea\u30c8\u30e9\u30a4\u56de\u6570\u304c\u4e0a\u9650\u306b\u9054\u3057\u305f\u5f8c\u306berror\u3067\u7d42\u4e86\u3059\u308b\u304c\u3001\u3053\u306e\u30b1\u30fc\u30b9\u3067\u306fcompleted\u3067\u7d42\u4e86\u3059\u308b\u3001\u3068\u3044\u3046\u70b9\u306b\u3042\u308a\u307e\u3059\u3002\n\n3\u79d2\u5f8c\u306b\u30ea\u30c8\u30e9\u30a4\u3001\u30923\u56de\u8a66\u3057\u3066\u7d42\u4e86\n\u4e0a\u8a18\u306e\u4f8b\u3068\u3001retryWhen\u306e\u4e00\u756a\u6700\u521d\u306e\u4f8b\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u30013\u79d2\u5f8c\u306b\u30ea\u30c8\u30e9\u30a4\u3001\u30923\u56de\u8a66\u3057\u3066\u7d42\u4e86\u3001\u3068\u3044\u3046\u51e6\u7406\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\n3\u79d2\u5f8c\u306b\u30ea\u30c8\u30e9\u30a4\u3001\u30923\u56de\u8a66\u3057\u3066\u7d42\u4e86\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retryWhen(new Func1<Observable<? extends Throwable>, Observable<?>>() {\n                    @Override\n                    public Observable<?> call(final Observable<? extends Throwable> observable) {\n                        return observable.take(3).flatMap(new Func1<Throwable, Observable<?>>() {\n                            @Override\n                            public Observable<?> call(Throwable throwable) {\n                                return Observable.timer(3, TimeUnit.SECONDS);\n                            }\n                        });\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n\n\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n// 3\u79d2\u5f8c\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n// 3\u79d2\u5f8c\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> completed\n\n\u4ee5\u4e0a\u3067\u3059\u3002retryWhen()\u3092\u99c6\u4f7f\u3059\u308c\u3070\u3082\u3063\u3068\u7d30\u304b\u306a\u30ea\u30c8\u30e9\u30a4\u51e6\u7406\u3092\u66f8\u3051\u305d\u3046\u3067\u3059\u306d\uff01\n\n\u3042\u3068\u304c\u304d\nAdvent Calendar\u306e4\u65e5\u76ee\u3068\u3057\u3066\u30a8\u30f3\u30c8\u30ea\u3055\u305b\u3066\u9802\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u3044\u304d\u306a\u308a\u671f\u65e5\u306b\u9593\u306b\u5408\u308f\u305a\u3001\u7a74\u3092\u958b\u3051\u308b\u5f62\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u5927\u5909\u7533\u3057\u8a33\u3042\u308a\u307e\u305b\u3093\u3002\n\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u66f8\u304f\u969b\u306b\u975e\u5e38\u306b\u56f0\u3063\u305f\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u521d\u3081\u306f\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3059\u3079\u3066Kotlin\u3067\u66f8\u304f\u4e88\u5b9a\u3060\u3063\u305f\u3093\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u5b9f\u969b\u306b\u305f\u3081\u3057\u3066\u307f\u308b\u3068Kotlin\u3067\u306fretryWhen\u306e\u30b3\u30fc\u30c9\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u901a\u3089\u306a\u3044\uff01\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u3068\u304a\u3089\u306a\u3044\nObservable\n            .just(\"hoge\")\n            .retryWhen { it.flatMap{ Observable.timer(3, TimeUnit.SECONDS) } }\n\n\u3044\u308d\u3044\u308d\u8abf\u3079\u305f\u306e\u3067\u3059\u304c\u3001\u7d50\u5c40\u89e3\u6c7a\u81f3\u3089\u305a\u3001Kotlin\u3067\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u306e\u306f\u8ae6\u3081\u307e\u3057\u305f\u3002 orz\n\nRxJava\u3067\u306f\u975e\u540c\u671f\u51e6\u7406\u306a\u3069\u3067\u975e\u5e38\u306b\u4fbf\u5229\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u304c\u3001\u305d\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3082\u3068\u3066\u3082\u30b9\u30de\u30fc\u30c8\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306fRxJava\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# subscribe\u3067\u306e\u30a8\u30e9\u30fc\u51e6\u7406\n\n\u901a\u5e38\u306f`subscribe()`\u3067\u30a8\u30e9\u30fc\u3092\u53d7\u3051\u53d6\u3063\u3066\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u3068\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```java:subscribe\u3067\u306e\u30a8\u30e9\u30fc\u51e6\u7406\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\u3092\u3053\u3053\u3067\u53d7\u3051\u53d6\u308b\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n```\n\n```\u7d50\u679c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> error:java.lang.Throwable\n```\n\n\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u306e\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306bonNext()\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3060\u3051\u3092\u884c\u3046\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3068\u3001onError()\u767a\u706b\u6642\u306b\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002\n\n```\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .subscribe(new Action1<String>() {\n                    @Override\n                    public void call(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n```\n\n```\u7d50\u679c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\nCrash!! \nby rx.exceptions.OnErrorNotImplementedException\n```\n\n\n\n\u306e\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u5834\u5408\u306f\u304d\u3061\u3093\u3068\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u307e\u3057\u3087\u3046\u3002\n\n\n# Error\u3092\u30ad\u30e3\u30c3\u30c1\u3059\u308b\n\n\n## onErrorReturn\n\nObservable\u30c1\u30a7\u30a4\u30f3\u306e\u306a\u304b\u3067\u767a\u751f\u3057\u305fError\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066\u3001\u5927\u4f53\u306eObject\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3067subscriber\u306bError\u304c\u6e21\u3055\u308c\u308b\u306e\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .onErrorReturn(new Func1<Throwable, String>() {\n                    @Override\n                    public String call(Throwable throwable) {\n                        return \"return\";\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n```\n\n```\u7d50\u679c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> on next: return\n> completed\n```\n\n\u30a8\u30e9\u30fc\u6642\u306b\u7121\u4e8breturn\u6587\u5b57\u5217\u306b\u5909\u63db\u3055\u308c\u307e\u3057\u305f\u3002\n\n## onErrorResumeNext\n\nObservable\u30c1\u30a7\u30a4\u30f3\u306e\u306a\u304b\u3067\u767a\u751f\u3057\u305fError\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066\u3001\u305d\u306e\u4e2d\u3067\u518d\u5ea6Observable\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u3001\u30a8\u30e9\u30fc\u6642\u306b\u4ee3\u66ff\u306eStream\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .onErrorResumeNext(new Func1<Throwable, Observable<? extends String>>() {\n                    @Override\n                    public Observable<? extends String> call(Throwable throwable) {\n                        return Observable.from(new String[]{ \"resume 1\", \"resume 2\"});\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n```\n\n\n```\u7d50\u679c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> on next: resume 1\n> on next: resume 2\n> completed\n```\n\n\u30a8\u30e9\u30fc\u6642\u306b`resume 1`,`resume 2`\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u5909\u63db\u3055\u308c\u307e\u3057\u305f\u3002\n\n# \u30a8\u30e9\u30fc\u6642\u306b\u30ea\u30c8\u30e9\u30a4\u3059\u308b\n\n## retry\n\n`retry()`\u30e1\u30bd\u30c3\u30c9\u306fError\u304c\u8d77\u3053\u3063\u305f\u6642\u306b\u3001\u81ea\u52d5\u7684\u306bsubscribe\u3057\u306a\u304a\u3057\u3066\u304f\u308c\u308b\u3001\u975e\u5e38\u306b\u4fbf\u5229\u306a\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\n```\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retry()\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n```\n\n```\u7d50\u679c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n...\u6210\u529f\u3059\u308b\u307e\u3067\u30ea\u30c8\u30e9\u30a4\u3057\u7d9a\u3051\u308b\u3002\u3002\u3002\n```\n\n\n\u5f15\u6570\u306a\u3057\u306e`retry()`\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u305d\u308c\u307e\u3067\u306e\u51e6\u7406\u3092\u6210\u529f\u3059\u308b\u307e\u3067\u30ea\u30c8\u30e9\u30a4\u3057\u7d9a\u3051\u307e\u3059\u3002\n\u3053\u308c\u3067\u306f\u5fa9\u65e7\u3067\u304d\u306a\u3044\u554f\u984c\u304c\u8d77\u3053\u3063\u305f\u6642\u306b\u7121\u9650\u30eb\u30fc\u30d7\u306b\u306a\u308a\u304b\u306d\u306a\u3044\u306e\u3067\u3001\u30ea\u30c8\u30e9\u30a4\u306e\u56de\u6570\u3092\u5236\u9650\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308a\u307e\u3059\u3002\n\n```\n// count: \u30ea\u30c8\u30e9\u30a4\u56de\u6570\npublic final Observable<T> retry(long count);\n```\n\n\u307e\u305f\u3001Error\u306e\u72b6\u6cc1\u3092\u307f\u3066\u30ea\u30c8\u30e9\u30a4\u3059\u308b\u304b\u3069\u3046\u304b\u3082\u5224\u65ad\u3067\u304d\u307e\u3059\u3002\n\n```\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retry(new Func2<Integer, Throwable, Boolean>() {\n                    @Override\n                    public Boolean call(Integer count, Throwable throwable) {\n                    // \uff12\u56de\u307e\u3067\u306f\u7121\u6761\u4ef6\u306b\u30ea\u30c8\u30e9\u30a4\u3059\u308b\n                        if(count < 3){\n                            return true;\n                        }\n                    // \u305d\u308c\u4ee5\u964d\u306fIllegalStateException\u306e\u5834\u5408\u3060\u3051\u30ea\u30c8\u30e9\u30a4\u3059\u308b\n                        return throwable instanceof IllegalStateException;\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n```\n\n```\u7d50\u679c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> error:java.lang.Throwable\n```\n\n## retryWhen\n\n`retryWhen()`\u30e1\u30bd\u30c3\u30c9\u306f\u3061\u3087\u3063\u3068\u8907\u96d1\u3067\u308f\u304b\u308a\u306b\u304f\u3044\u3067\u3059\u304c\u3001\u3088\u308a\u7d30\u304b\u304f\u30ea\u30c8\u30e9\u30a4\u51e6\u7406\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002`retryWhen()`\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306f\u521d\u56de\u304b\u3089\u30ea\u30c8\u30e9\u30a4\u5f8c\u306b\u8d77\u3053\u308bError\u3092Observable\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\u3001\u305d\u308c\u3092\u5909\u63db\u3057\u3066\u4f55\u3089\u304b\u306eObservable\u3068\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3053\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u8fd4\u3057\u305fObservable\u3067\u4f55\u3089\u304b\u306e\u5024\u304c`onNext()`\u3055\u308c\u308b\u3068\u3001\u305d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ea\u30c8\u30e9\u30a4\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u3053\u306eObservable\u3067`onComplete()`\u3082\u3057\u304f\u306f`onError()`\u3092\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\u3001\u3082\u3068\u306eObservable\u304c`onComplete()`\u3082\u3057\u304f\u306f`onError()`\u7d42\u4e86\u3057\u307e\u3059\u3002\n\n\u3061\u3087\u3063\u3068\u308f\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u7c21\u5358\u306b\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\n### 3\u79d2\u5f8c\u306b\u30ea\u30c8\u30e9\u30a4\n\n3\u79d2\u5f8c\u306b\u30ea\u30c8\u30e9\u30a4\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```kotlin:\u30a8\u30e9\u30fc\u767a\u751f\u5f8c3\u79d2\u5f85\u3063\u3066\u304b\u3089\u30ea\u30c8\u30e9\u30a4\u3059\u308b\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retryWhen(new Func1<Observable<? extends Throwable>, Observable<?>>() {\n                    @Override\n                    public Observable<?> call(final Observable<? extends Throwable> observable) {\n                        return observable.flatMap(new Func1<Throwable, Observable<?>>() {\n                            @Override\n                            public Observable<?> call(Throwable throwable) {\n                                return Observable.timer(3, TimeUnit.SECONDS);\n                            }\n                        });\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n```\n\n\n```\u7d50\u679c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n// 3\u79d2\u5f8c\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n// 3\u79d2\u5f8c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n// 3\u79d2\u5f8c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n// 3\u79d2\u5f8c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n....\u7e70\u308a\u8fd4\u3057\n```\n\n\n### Error\u306e\u307e\u307e\u7d42\u4e86\n\nError\u306e\u307e\u307e\u7d42\u4e86\u3059\u308b\u306b\u306f\n\n```java:Error\u306e\u307e\u307e\u7d42\u4e86\u3059\u308b\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retryWhen(new Func1<Observable<? extends Throwable>, Observable<?>>() {\n                    @Override\n                    public Observable<?> call(final Observable<? extends Throwable> observable) {\n                        return observable.flatMap(new Func1<Throwable, Observable<?>>() {\n                            @Override\n                            public Observable<?> call(Throwable throwable) {\n                                return Observable.error(throwable);\n                            }\n                        });\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n```\n\n```\u7d50\u679c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> error:java.lang.Throwable\n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306f\u3061\u3087\u3046\u3069retryWhen\u30e1\u30bd\u30c3\u30c9\u3092\u9069\u7528\u305b\u305a\u306b\u3001Error\u3092\u53d7\u3051\u53d6\u3063\u305f\u306e\u3068\u540c\u3058\u52d5\u4f5c\u3068\u306a\u308a\u307e\u3059\u3002\n\n### Error\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u305b\u305a\u306bComplete\n\nError\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u305b\u305a\u306b\u305d\u306e\u5834\u3067Complete\u3059\u308b\u306b\u306f\u4e00\u898b\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u826f\u3055\u305d\u3046\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u306f\u5b9f\u306f\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002\n\n```java:Error\u304c\u6765\u305f\u3089empty()\u3067complete\u3057\u305f\u3044\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retryWhen(new Func1<Observable<? extends Throwable>, Observable<?>>() {\n                    @Override\n                    public Observable<?> call(final Observable<? extends Throwable> observable) {\n                        return observable.flatMap(new Func1<Throwable, Observable<?>>() {\n                            @Override\n                            public Observable<?> call(Throwable throwable) {\n                                return Observable.empty();\n                            }\n                        });\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n```\n\n\n\n```\u7d50\u679c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n```\n\n\u8a73\u3057\u304f\u306f[\u3053\u3053](https://github.com/ReactiveX/RxJava/issues/3540)\u306e\u3084\u308a\u53d6\u308a\u306b\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067flatMap\u3057\u3066empty()\u3067\u8fd4\u3057\u3066\u3082\u3001\u3082\u3068\u3082\u3068`Observable<Throwable>`\u306e\u6d41\u308c\u3092complete\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u7121\u8996\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u5b9f\u969b\u3001Error\u304c\u8d77\u3053\u3063\u305f\u3089\u3044\u304d\u306a\u308a`complete`\u3057\u305f\u3044\u51e6\u7406\u3092\u66f8\u304d\u305f\u3044\u5834\u5408\u306b\u306f\u3001\u5b9f\u969b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001error\u306estream\u3092\u6700\u521d\u306e\u4e00\u3064\u3060\u3051\u53d7\u3051\u53d6\u3063\u3066\u3001\u305d\u308c\u3092\u7121\u8996\u3059\u308b\u3001\u3068\u3044\u3046\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u96e3\u3057\u3044\u3067\u3059\u306d\u3002\n\n```kotlin:Error\u304c\u6765\u305f\u3089empty()\u3067complete\u3057\u305f\u3044\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retryWhen(new Func1<Observable<? extends Throwable>, Observable<?>>() {\n                    @Override\n                    public Observable<?> call(final Observable<? extends Throwable> observable) {\n                        return observable.take(1).ignoreElements();\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n```\n\n```\u7d50\u679c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> completed\n\n```\n\u3061\u3083\u3093\u3068Complete\u3067\u304d\u305f\uff01\uff01\n\n\u3061\u306a\u307f\u306b`take(0)`\u3060\u3068error\u304c\u8d77\u3053\u308b\u524d\u306b\u3044\u304d\u306a\u308a\u5168\u4f53\u306eObservable\u304c\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u4f59\u8ac7\u3067\u3059\u304c\u3001\u30a8\u30e9\u30fc\u6642\u306b\u4f55\u3082\u305b\u305acompleted\u306b\u3057\u305f\u3044\u5834\u5408\u306f`onErrorResumeNext()`\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u30b9\u30de\u30fc\u30c8\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\n\n```\n                .onErrorResumeNext(new Func1<Throwable, Observable<? extends String>>() {\n                    @Override\n                    public Observable<? extends String> call(Throwable throwable) {\n                        return Observable.empty();\n                    }\n                })\n```                \n\n\n### 3\u56de\u30ea\u30c8\u30e9\u30a4\u3057\u305f\u3089\u7d42\u4e86\n\n\u4e0a\u8a18\u306e\u4f8b\u3092\u3082\u3068\u306b3\u56de\u30ea\u30c8\u30e9\u30a4\u3059\u308b\u5834\u5408\u306f\u3001\n\n```java:3\u56de\u30ea\u30c8\u30e9\u30a4\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retryWhen(new Func1<Observable<? extends Throwable>, Observable<?>>() {\n                    @Override\n                    public Observable<?> call(final Observable<? extends Throwable> observable) {\n                        return observable.take(3);\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n```\n\n\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002\n\n```\u7d50\u679c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> completed\n```\n\n\u3061\u3083\u3093\u30683\u56de\u30ea\u30c8\u30e9\u30a4\u3057\u3066\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002\n\u3053\u306e\u5834\u5408\u306f\u5148\u7a0b\u306e`retry(count)`\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u306e\u9055\u3044\u306f\u3001`retry(count)`\u3067\u306f\u30ea\u30c8\u30e9\u30a4\u56de\u6570\u304c\u4e0a\u9650\u306b\u9054\u3057\u305f\u5f8c\u306berror\u3067\u7d42\u4e86\u3059\u308b\u304c\u3001\u3053\u306e\u30b1\u30fc\u30b9\u3067\u306fcompleted\u3067\u7d42\u4e86\u3059\u308b\u3001\u3068\u3044\u3046\u70b9\u306b\u3042\u308a\u307e\u3059\u3002\n\n\n\n### 3\u79d2\u5f8c\u306b\u30ea\u30c8\u30e9\u30a4\u3001\u30923\u56de\u8a66\u3057\u3066\u7d42\u4e86\n\n\u4e0a\u8a18\u306e\u4f8b\u3068\u3001retryWhen\u306e\u4e00\u756a\u6700\u521d\u306e\u4f8b\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u30013\u79d2\u5f8c\u306b\u30ea\u30c8\u30e9\u30a4\u3001\u30923\u56de\u8a66\u3057\u3066\u7d42\u4e86\u3001\u3068\u3044\u3046\u51e6\u7406\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\n```java:3\u79d2\u5f8c\u306b\u30ea\u30c8\u30e9\u30a4\u3001\u30923\u56de\u8a66\u3057\u3066\u7d42\u4e86\n        Observable\n                .create(new Observable.OnSubscribe<String>() {\n                    @Override\n                    public void call(Subscriber<? super String> subscriber) {\n                        log(\"subscribe\");\n                        subscriber.onNext(\"emit 1\");\n                        subscriber.onNext(\"emit 2\");\n                        subscriber.onError(new Throwable());\n                    }\n                })\n                .retryWhen(new Func1<Observable<? extends Throwable>, Observable<?>>() {\n                    @Override\n                    public Observable<?> call(final Observable<? extends Throwable> observable) {\n                        return observable.take(3).flatMap(new Func1<Throwable, Observable<?>>() {\n                            @Override\n                            public Observable<?> call(Throwable throwable) {\n                                return Observable.timer(3, TimeUnit.SECONDS);\n                            }\n                        });\n                    }\n                })\n                .subscribe(new Subscriber<String>() {\n                    @Override\n                    public void onCompleted() {\n                        log(\"completed\");\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        log(\"error:\" + e);\n                    }\n\n                    @Override\n                    public void onNext(String s) {\n                        log(\"on next: \" + s);\n                    }\n                });\n\n\n```\n\n```\u7d50\u679c\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n// 3\u79d2\u5f8c\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n\n// 3\u79d2\u5f8c\n\n> subscribe\n> on next: emit 1\n> on next: emit 2\n> completed\n```\n\n\n\u4ee5\u4e0a\u3067\u3059\u3002`retryWhen()`\u3092\u99c6\u4f7f\u3059\u308c\u3070\u3082\u3063\u3068\u7d30\u304b\u306a\u30ea\u30c8\u30e9\u30a4\u51e6\u7406\u3092\u66f8\u3051\u305d\u3046\u3067\u3059\u306d\uff01\n\n\n# \u3042\u3068\u304c\u304d\n\nAdvent Calendar\u306e4\u65e5\u76ee\u3068\u3057\u3066\u30a8\u30f3\u30c8\u30ea\u3055\u305b\u3066\u9802\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u3044\u304d\u306a\u308a\u671f\u65e5\u306b\u9593\u306b\u5408\u308f\u305a\u3001\u7a74\u3092\u958b\u3051\u308b\u5f62\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u5927\u5909\u7533\u3057\u8a33\u3042\u308a\u307e\u305b\u3093\u3002\n\n\n\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u66f8\u304f\u969b\u306b\u975e\u5e38\u306b\u56f0\u3063\u305f\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u521d\u3081\u306f\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3059\u3079\u3066Kotlin\u3067\u66f8\u304f\u4e88\u5b9a\u3060\u3063\u305f\u3093\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u5b9f\u969b\u306b\u305f\u3081\u3057\u3066\u307f\u308b\u3068Kotlin\u3067\u306fretryWhen\u306e\u30b3\u30fc\u30c9\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u901a\u3089\u306a\u3044\uff01\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u3068\u304a\u3089\u306a\u3044\n\n```\nObservable\n            .just(\"hoge\")\n            .retryWhen { it.flatMap{ Observable.timer(3, TimeUnit.SECONDS) } }\n```\n\n\u3044\u308d\u3044\u308d\u8abf\u3079\u305f\u306e\u3067\u3059\u304c\u3001\u7d50\u5c40\u89e3\u6c7a\u81f3\u3089\u305a\u3001Kotlin\u3067\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u306e\u306f\u8ae6\u3081\u307e\u3057\u305f\u3002 orz\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}