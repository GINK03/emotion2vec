{"context": " More than 1 year has passed since last update.\n\nQML\u304b\u3089C++\u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u3092\u53c2\u7167\u3059\u308b\n\n\u8981\u70b9\n\nQList\u306b\u5909\u63db\u3059\u308b\u3068QML\u5185\u3067\u914d\u5217\u3068\u3057\u3066\u6271\u3048\u308b\nstd::copy\u304c\u3068\u3066\u3082\u4fbf\u5229\n\n\u8a73\u7d30\u306f\u4ee5\u4e0b\u306eURL\u304b\u3089\nQt Project : Data Type Conversion Between QML and C++\n\n\n\u5b9f\u884c\u74b0\u5883\nQt Creator 3.2.1\nQt 5.3.2\n\n\n\u5bfe\u8c61\u3068\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\n\nstd::array\nstd::list\nstd::vector\nQVector\n\n\n\u307e\u305a, QML\u5074\u306bC++\u306e\u62e1\u5f35\u30af\u30e9\u30b9\u3092\u767b\u9332\u3059\u308b\u3002\n\nmain.cpp\n#include <QtQml>\n#include <QGuiApplication>\n#include <QQmlApplicationEngine>\n#include <QObject>\n#include <containertranslate.h>   //\u767b\u9332\u3059\u308bC++\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n\nint main(int argc, char *argv[]){\n    QGuiApplication app(argc,argv);\n    //QML\u306b\u767b\u9332\u3059\u308bC++\u30af\u30e9\u30b9\u306e\u5ba3\u8a00\n    //(engine.load\u306e\u5f8c\u306b\u5ba3\u8a00\u3059\u308b\u3068\u6012\u3089\u308c\u308b)\n      qmlRegisterType<ContainerTranslate>(\"containertranslate\",1,0,\"ContainerTranslate\");\n    QQmlApplicationEngine engine;\n    //\u8aad\u307f\u8fbc\u3080QML\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\n    engine.load(QUrl(QStringLiteral(\"qrc:///main.qml\")));\n\n    return app.exec();\n}\n\n\n\n\nmain.cpp\u3067\u91cd\u8981\u306a\u306e\u306f\n* \u767b\u9332\u3059\u308b\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n*  qmlRegisterType \u3092\u4f7f\u3063\u305f\u30af\u30e9\u30b9\u306e\u767b\u9332\n\u306e2\u3064. qmlResisterType \u306f\nqmlRegisterType<C++\u30af\u30e9\u30b9\u540d>(\"\u30a4\u30f3\u30dd\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u540d\",\u30e1\u30b8\u30e3\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3,\u30de\u30a4\u30ca\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3,\"QML\u5185\u306e\u30a8\u30ec\u30e1\u30f3\u30c8\u5ba3\u8a00\u540d\")\n\n\u3068\u3044\u3063\u305f\u5177\u5408\u306b\u66f8\u304f\u3002\n\u3053\u308c\u3092engine.load(...)\u306e\u5f8c\u306b\u66f8\u304f\u3068, QML\u8d77\u52d5\u6642\u306b\u6012\u3089\u308c\u308b\u306e\u3067\u5fc5\u305a\u524d\u306b\u66f8\u3053\u3046\u3002\n\n\u6b21\u306b, C++\u306e\u62e1\u5f35\u30af\u30e9\u30b9\u3092\u66f8\u304f\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3059\u308b\u3068\u304d\u3001\"C++\u30af\u30e9\u30b9\u3092\u8ffd\u52a0\"\u3092\u9078\u629e\u3059\u308b\u3002\n\u3053\u306e\u3068\u304d\u306b,  \"\u578b\u60c5\u5831\" -> \"QQuickItem\" \u3092\u9078\u3076\u3053\u3068\u3092\u304a\u5fd8\u308c\u306a\u304f\u3002\n\u3053\u308c\u3092\u3057\u306a\u3044\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u8f9b\u3044\u601d\u3044\u3092\u3059\u308b\u3002\n\u3053\u308c\u306e\u30af\u30e9\u30b9\u3067\u306f, \n* \u30e1\u30f3\u30d0\u5909\u6570\u306e\u5ba3\u8a00\n* QML\u304b\u3089\u306e\u30a2\u30af\u30bb\u30c3\u30b5\n\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\ncontainertranslate.h\n// /////////////// \u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb //////////////////////\n\n#ifndef CONTAINERTRANSLATE_H\n#define CONTAINERTRANSLATE_H\n\n// -------------------------------------\n//         include \u3092\u304a\u5fd8\u308c\u306a\u304f\n// -------------------------------------\n#include <QQuickItem>\n#include <QVector>\n#include <vector>\n#include <list>\n#include <array>\n// -------------------------------------\nclass ContainerTranslate : public QQuickItem\n{\n    Q_OBJECT          \npublic:\n    //\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    explicit ContainerTranslate(QQuickItem *parent = 0);\n    // C++\u30b3\u30f3\u30c6\u30ca -> QList\u5909\u63db\u3057,  QList \u3092QML\u306b\u6e21\u3059\u30e1\u30bd\u30c3\u30c9\n    //Q_INVOKABLE\u3092\u3064\u3051\u308b\u3053\u3068\u3067QML\u304b\u3089\u547c\u3073\u51fa\u3057\u53ef\u80fd\u306b\u3059\u308b\n      Q_INVOKABLE QList<qreal> getContainer();    \n\n//-----------\u30e1\u30f3\u30d0\u5909\u6570\u5b9a\u7fa9------------------\nprivate:\n      //\u691c\u8a3c\u306b\u4f7f\u3046\u30b3\u30f3\u30c6\u30ca\u9054\n      std::vector<double> vec;\n      std::array<int,10> ary;\n      std::list<double> list;\n      QVector<double> qvec;\n      //\u307f\u3093\u306a\u6700\u7d42\u7684\u306b\u306f\u3053\u308c\u306b\u5909\u63db\n      QList<qreal> qlist;\n};\n\n#endif // CONTAINERTRANSLATE_H\n\n\n\n\n\u7d9a\u3044\u3066\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\n\ncontainertranslate.cpp\n// /////////////// \u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb //////////////////////\n#include \"containertranslate.h\"\n\nContainerTranslate::ContainerTranslate(QQuickItem *parent) :\n    QQuickItem(parent)\n{\n    //\u30b3\u30f3\u30c6\u30ca\u3092\u521d\u671f\u5316\n    for(int i=0; i<10; i++){\n        vec.push_back(i);\n        ary[i] = i;\n        list.push_back(i);\n        qvec.push_back(i);\n    }\n}\n// C++\u6a19\u6e96\u30b3\u30f3\u30c6\u30ca\u3092QList\u306b\u5909\u63db\nQList<qreal> ContainerTranslate::getContainer(){\n\n            qlist.clear();              //\u30e1\u30e2\u30ea\u89e3\u653e\n\n            //\u3053\u3053\u3067 std::** -> QList\u306b\u5909\u63db\u3057\u3066\u3044\u308b\n            std::copy(vec.begin(),vec.end(),std::back_inserter(qlist));\n//          std::copy(ary.begin(),ary.end(),std::back_inserter(qlist));\n//          std::copy(list.begin(),list.end(),std::back_inserter(qlist));\n//          std::copy(qvec.begin(),qvec.end(),std::back_inserter(qlist));\n            return qlist;\n}\n\n\n\n\u3053\u3053\u3067\u767b\u5834\u3059\u308b std::copy \u304c\u975e\u5e38\u306bcool\u3067, std::vector, list, array, QVector \u306e\u3059\u3079\u3066\u306b\u5bfe\u3057\u3066\u540c\u3058\u6587\u6cd5\u3067\u30b3\u30d4\u30fc\u304c\u884c\u3048\u308b.\nx.begin() , x.end() \u3067\u30b3\u30f3\u30c6\u30ca\u306e\u5148\u982d/\u672b\u5c3e\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u53c2\u7167\u3059\u308b.\nstd::back_inserter(Container &y) \u306f y \u306e\u672b\u5c3e\u306b, \u6307\u5b9a\u3057\u305f x \u306e\u8981\u7d20\u3092\u633f\u5165\u3059\u308b\u3002\n\u3053\u306e\u30b3\u30d4\u30fc\u306f\u53c2\u7167\u6e21\u3057\u3067\u52d5\u3044\u3066\u3044\u308b\u3089\u3057\u304f, \u8907\u6570\u56de\u30b3\u30d4\u30fc\u3092\u884c\u3063\u3066\u3082\u975e\u5e38\u306b\u9ad8\u901f\u306b\u52d5\u4f5c\u3059\u308b\u3002\n\n\u3053\u308c\u3067, QML\u306b\u30b3\u30f3\u30c6\u30ca\u3092\u6e21\u3059\u6a5f\u80fd\u306f\u63c3\u3063\u305f\u306e\u3067, \u6b21\u306fQML\u3092\u66f8\u3053\u3046\u3002\n//----------------------main.qml------------------------\nimport QtQuick 2.0\nimport QtQuick.Window 2.0\nimport containertranslate 1.0  //\u3053\u3053\u3067C++\u62e1\u5f35\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n\nWindow{\n        visible: true\n        width: 100\n        height: 62\n\n        ContainerTranslate{id: container}  //C++\u62e1\u5f35\u30af\u30e9\u30b9\u3092\u30a8\u30ec\u30e1\u30f3\u30c8\u3068\u3057\u3066\u5ba3\u8a00\n\n        //QML\u304c\u7121\u4e8b\u8d77\u52d5\u3057\u305f\u3068\u304d\u306b\u9001\u3089\u308c\u308b\u30b7\u30b0\u30ca\u30eb\n        Component.onCompleted: {\n            var ctnr = container.getContainer()  //\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\n            for(var i=0; i<10; i++)\n                    console.debug(ctnr[i])       //\u30b3\u30f3\u30c6\u30ca\u306e\u53c2\u7167\n        }\n}\n\n\nQML\u304b\u3089C++\u62e1\u5f35\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u304d\u306b\u5fc5\u8981\u306a\u3053\u3068\u306f2\u3064\u3002\n* qmlRegisterType \u3067\u5ba3\u8a00\u3057\u305f\u30a4\u30f3\u30dd\u30fc\u30c8\u540d\u3067\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n* qmlRegisterType \u3067\u5ba3\u8a00\u3057\u305f\u30a8\u30ec\u30e1\u30f3\u30c8\u540d\u3067\u30a8\u30ec\u30e1\u30f3\u30c8\u3092\u4f5c\u308b\u3002\u307e\u305fid\u3082\u5fc5\u305a\u632f\u308b\u3002\n\u3053\u308c\u3055\u3048\u3084\u308c\u3070, QML\u306e\u4ed6\u306e\u30a8\u30ec\u30e1\u30f3\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3088\u3046\u306bC++\u62e1\u5f35\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u4e0a\u8a18QML\u306e\u5b9f\u884c\u7d50\u679c\u306f, ContainerTranlate::getContainer()\u306e\u3069\u306e\u5909\u63db\u5f0f\u3092\u4f7f\u3063\u3066\u3082\nqml:0\nqml:1\nqml:2\nqml:3\nqml:4\nqml:5\nqml:6\nqml:7\nqml:8\nqml:9\n\n\u3068\u8868\u793a\u3055\u308c\u308b\u3002\n\nQList\u3092QML\u3078\u30e1\u30bd\u30c3\u30c9\u3067\u6e21\u3059\u5834\u5408\u53c2\u7167\u6e21\u3057\u3067\u6e21\u3055\u308c\u308b\u305f\u3081, \u9ad8\u901f\u306b\u52d5\u4f5c\u3059\u308b\u3002\n\u4e0a\u8a18\u306e\u65b9\u6cd5\u3092\u7528\u3044\u308c\u3070, \u30b3\u30d4\u30fc\u304b\u3089\u53c2\u7167\u307e\u3067\u3092\u9ad8\u901f\u306b, \u304b\u3064, \u3068\u3066\u3082\u7c21\u5358\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nQML\u304c\u8a8d\u8b58\u3067\u304d\u308bQList\u306e\u578b\u306f int, qreal(double), bool, QUrl, QString \u3068, \u57fa\u672c\u578b\u3092\u6271\u3046\u306a\u3089\u3070, \u307b\u3068\u3093\u3069\u304c\u3053\u306e\u65b9\u6cd5\u3067\u9593\u306b\u3042\u3046\u3002\n\u3082\u3046\u751f\u306e\u914d\u5217\u306b\u306f\u623b\u308c\u306a\u3044\u306d .... orz\n# QML\u304b\u3089C++\u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u3092\u53c2\u7167\u3059\u308b\n##\u8981\u70b9\n* QList\u306b\u5909\u63db\u3059\u308b\u3068QML\u5185\u3067\u914d\u5217\u3068\u3057\u3066\u6271\u3048\u308b\n* std::copy\u304c\u3068\u3066\u3082\u4fbf\u5229\n\n\u8a73\u7d30\u306f\u4ee5\u4e0b\u306eURL\u304b\u3089\n[Qt Project : Data Type Conversion Between QML and C++](http://qt-project.org/doc/qt-5/qtqml-cppintegration-data.html)\n\n---\n###\u5b9f\u884c\u74b0\u5883\nQt Creator 3.2.1\nQt 5.3.2\n\n---\n\n### \u5bfe\u8c61\u3068\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\n * std::array\n * std::list\n * std::vector\n * QVector\n\n---\n\u307e\u305a, QML\u5074\u306bC++\u306e\u62e1\u5f35\u30af\u30e9\u30b9\u3092\u767b\u9332\u3059\u308b\u3002\n\n```cpp:main.cpp\n#include <QtQml>\n#include <QGuiApplication>\n#include <QQmlApplicationEngine>\n#include <QObject>\n#include <containertranslate.h>   //\u767b\u9332\u3059\u308bC++\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n\nint main(int argc, char *argv[]){\n    QGuiApplication app(argc,argv);\n    //QML\u306b\u767b\u9332\u3059\u308bC++\u30af\u30e9\u30b9\u306e\u5ba3\u8a00\n    //(engine.load\u306e\u5f8c\u306b\u5ba3\u8a00\u3059\u308b\u3068\u6012\u3089\u308c\u308b)\n      qmlRegisterType<ContainerTranslate>(\"containertranslate\",1,0,\"ContainerTranslate\");\n    QQmlApplicationEngine engine;\n    //\u8aad\u307f\u8fbc\u3080QML\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\n    engine.load(QUrl(QStringLiteral(\"qrc:///main.qml\")));\n\n    return app.exec();\n}\n\n\n```\n\nmain.cpp\u3067\u91cd\u8981\u306a\u306e\u306f\n* \u767b\u9332\u3059\u308b\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n*  _qmlRegisterType_ \u3092\u4f7f\u3063\u305f\u30af\u30e9\u30b9\u306e\u767b\u9332\n\n\u306e2\u3064. _qmlResisterType_ \u306f\n\n```cpp:\nqmlRegisterType<C++\u30af\u30e9\u30b9\u540d>(\"\u30a4\u30f3\u30dd\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u540d\",\u30e1\u30b8\u30e3\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3,\u30de\u30a4\u30ca\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3,\"QML\u5185\u306e\u30a8\u30ec\u30e1\u30f3\u30c8\u5ba3\u8a00\u540d\")\n```\n\n\u3068\u3044\u3063\u305f\u5177\u5408\u306b\u66f8\u304f\u3002\n\u3053\u308c\u3092engine.load(...)\u306e\u5f8c\u306b\u66f8\u304f\u3068, QML\u8d77\u52d5\u6642\u306b\u6012\u3089\u308c\u308b\u306e\u3067\u5fc5\u305a\u524d\u306b\u66f8\u3053\u3046\u3002\n\n---\n\u6b21\u306b, C++\u306e\u62e1\u5f35\u30af\u30e9\u30b9\u3092\u66f8\u304f\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3059\u308b\u3068\u304d\u3001\"C++\u30af\u30e9\u30b9\u3092\u8ffd\u52a0\"\u3092\u9078\u629e\u3059\u308b\u3002\n\u3053\u306e\u3068\u304d\u306b,  **\"\u578b\u60c5\u5831\" -> \"QQuickItem\"** \u3092\u9078\u3076\u3053\u3068\u3092\u304a\u5fd8\u308c\u306a\u304f\u3002\n\u3053\u308c\u3092\u3057\u306a\u3044\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u8f9b\u3044\u601d\u3044\u3092\u3059\u308b\u3002\n\n\u3053\u308c\u306e\u30af\u30e9\u30b9\u3067\u306f, \n* \u30e1\u30f3\u30d0\u5909\u6570\u306e\u5ba3\u8a00\n* QML\u304b\u3089\u306e\u30a2\u30af\u30bb\u30c3\u30b5\n\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```cpp:containertranslate.h\n// /////////////// \u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb //////////////////////\n\n#ifndef CONTAINERTRANSLATE_H\n#define CONTAINERTRANSLATE_H\n\n// -------------------------------------\n//         include \u3092\u304a\u5fd8\u308c\u306a\u304f\n// -------------------------------------\n#include <QQuickItem>\n#include <QVector>\n#include <vector>\n#include <list>\n#include <array>\n// -------------------------------------\nclass ContainerTranslate : public QQuickItem\n{\n    Q_OBJECT          \npublic:\n    //\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    explicit ContainerTranslate(QQuickItem *parent = 0);\n    // C++\u30b3\u30f3\u30c6\u30ca -> QList\u5909\u63db\u3057,  QList \u3092QML\u306b\u6e21\u3059\u30e1\u30bd\u30c3\u30c9\n    //Q_INVOKABLE\u3092\u3064\u3051\u308b\u3053\u3068\u3067QML\u304b\u3089\u547c\u3073\u51fa\u3057\u53ef\u80fd\u306b\u3059\u308b\n      Q_INVOKABLE QList<qreal> getContainer();    \n\n//-----------\u30e1\u30f3\u30d0\u5909\u6570\u5b9a\u7fa9------------------\nprivate:\n      //\u691c\u8a3c\u306b\u4f7f\u3046\u30b3\u30f3\u30c6\u30ca\u9054\n      std::vector<double> vec;\n      std::array<int,10> ary;\n      std::list<double> list;\n      QVector<double> qvec;\n      //\u307f\u3093\u306a\u6700\u7d42\u7684\u306b\u306f\u3053\u308c\u306b\u5909\u63db\n      QList<qreal> qlist;\n};\n\n#endif // CONTAINERTRANSLATE_H\n\n```\n---\n\u7d9a\u3044\u3066\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\n\n```cpp:containertranslate.cpp\n// /////////////// \u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb //////////////////////\n#include \"containertranslate.h\"\n\nContainerTranslate::ContainerTranslate(QQuickItem *parent) :\n    QQuickItem(parent)\n{\n    //\u30b3\u30f3\u30c6\u30ca\u3092\u521d\u671f\u5316\n    for(int i=0; i<10; i++){\n        vec.push_back(i);\n        ary[i] = i;\n        list.push_back(i);\n        qvec.push_back(i);\n    }\n}\n// C++\u6a19\u6e96\u30b3\u30f3\u30c6\u30ca\u3092QList\u306b\u5909\u63db\nQList<qreal> ContainerTranslate::getContainer(){\n\n            qlist.clear();              //\u30e1\u30e2\u30ea\u89e3\u653e\n\n            //\u3053\u3053\u3067 std::** -> QList\u306b\u5909\u63db\u3057\u3066\u3044\u308b\n            std::copy(vec.begin(),vec.end(),std::back_inserter(qlist));\n//          std::copy(ary.begin(),ary.end(),std::back_inserter(qlist));\n//          std::copy(list.begin(),list.end(),std::back_inserter(qlist));\n//          std::copy(qvec.begin(),qvec.end(),std::back_inserter(qlist));\n            return qlist;\n}\n\n```\n\n\u3053\u3053\u3067\u767b\u5834\u3059\u308b `std::copy` \u304c\u975e\u5e38\u306bcool\u3067, _std::vector, list, array, QVector_ \u306e\u3059\u3079\u3066\u306b\u5bfe\u3057\u3066\u540c\u3058\u6587\u6cd5\u3067\u30b3\u30d4\u30fc\u304c\u884c\u3048\u308b.\n\n `x.begin()` , `x.end()` \u3067\u30b3\u30f3\u30c6\u30ca\u306e\u5148\u982d/\u672b\u5c3e\u306e[\u30a4\u30c6\u30ec\u30fc\u30bf](http://www.cppll.jp/cppreference/iterators.html)\u3092\u53c2\u7167\u3059\u308b.\n` std::back_inserter(Container &y)` \u306f _y_ \u306e\u672b\u5c3e\u306b, \u6307\u5b9a\u3057\u305f _x_ \u306e\u8981\u7d20\u3092\u633f\u5165\u3059\u308b\u3002\n\n\u3053\u306e\u30b3\u30d4\u30fc\u306f\u53c2\u7167\u6e21\u3057\u3067\u52d5\u3044\u3066\u3044\u308b\u3089\u3057\u304f, \u8907\u6570\u56de\u30b3\u30d4\u30fc\u3092\u884c\u3063\u3066\u3082\u975e\u5e38\u306b\u9ad8\u901f\u306b\u52d5\u4f5c\u3059\u308b\u3002\n\n---\n\u3053\u308c\u3067, QML\u306b\u30b3\u30f3\u30c6\u30ca\u3092\u6e21\u3059\u6a5f\u80fd\u306f\u63c3\u3063\u305f\u306e\u3067, \u6b21\u306fQML\u3092\u66f8\u3053\u3046\u3002\n\n\n\n``` qml\n//----------------------main.qml------------------------\nimport QtQuick 2.0\nimport QtQuick.Window 2.0\nimport containertranslate 1.0  //\u3053\u3053\u3067C++\u62e1\u5f35\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n\nWindow{\n        visible: true\n        width: 100\n        height: 62\n\n        ContainerTranslate{id: container}  //C++\u62e1\u5f35\u30af\u30e9\u30b9\u3092\u30a8\u30ec\u30e1\u30f3\u30c8\u3068\u3057\u3066\u5ba3\u8a00\n\n        //QML\u304c\u7121\u4e8b\u8d77\u52d5\u3057\u305f\u3068\u304d\u306b\u9001\u3089\u308c\u308b\u30b7\u30b0\u30ca\u30eb\n        Component.onCompleted: {\n            var ctnr = container.getContainer()  //\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\n            for(var i=0; i<10; i++)\n                    console.debug(ctnr[i])       //\u30b3\u30f3\u30c6\u30ca\u306e\u53c2\u7167\n        }\n}\n\n```\n\nQML\u304b\u3089C++\u62e1\u5f35\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u304d\u306b\u5fc5\u8981\u306a\u3053\u3068\u306f2\u3064\u3002\n* `qmlRegisterType` \u3067\u5ba3\u8a00\u3057\u305f\u30a4\u30f3\u30dd\u30fc\u30c8\u540d\u3067\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n* `qmlRegisterType` \u3067\u5ba3\u8a00\u3057\u305f\u30a8\u30ec\u30e1\u30f3\u30c8\u540d\u3067\u30a8\u30ec\u30e1\u30f3\u30c8\u3092\u4f5c\u308b\u3002\u307e\u305fid\u3082\u5fc5\u305a\u632f\u308b\u3002\n\n\u3053\u308c\u3055\u3048\u3084\u308c\u3070, QML\u306e\u4ed6\u306e\u30a8\u30ec\u30e1\u30f3\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3088\u3046\u306bC++\u62e1\u5f35\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u4e0a\u8a18QML\u306e\u5b9f\u884c\u7d50\u679c\u306f, `ContainerTranlate::getContainer()`\u306e\u3069\u306e\u5909\u63db\u5f0f\u3092\u4f7f\u3063\u3066\u3082\n\n```\nqml:0\nqml:1\nqml:2\nqml:3\nqml:4\nqml:5\nqml:6\nqml:7\nqml:8\nqml:9\n```\n\n\u3068\u8868\u793a\u3055\u308c\u308b\u3002\n\n---\nQList\u3092QML\u3078\u30e1\u30bd\u30c3\u30c9\u3067\u6e21\u3059\u5834\u5408\u53c2\u7167\u6e21\u3057\u3067\u6e21\u3055\u308c\u308b\u305f\u3081, \u9ad8\u901f\u306b\u52d5\u4f5c\u3059\u308b\u3002\n\u4e0a\u8a18\u306e\u65b9\u6cd5\u3092\u7528\u3044\u308c\u3070, \u30b3\u30d4\u30fc\u304b\u3089\u53c2\u7167\u307e\u3067\u3092\u9ad8\u901f\u306b, \u304b\u3064, \u3068\u3066\u3082\u7c21\u5358\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nQML\u304c\u8a8d\u8b58\u3067\u304d\u308bQList\u306e\u578b\u306f `int, qreal(double), bool, QUrl, QString` \u3068, \u57fa\u672c\u578b\u3092\u6271\u3046\u306a\u3089\u3070, \u307b\u3068\u3093\u3069\u304c\u3053\u306e\u65b9\u6cd5\u3067\u9593\u306b\u3042\u3046\u3002\n\n\u3082\u3046\u751f\u306e\u914d\u5217\u306b\u306f\u623b\u308c\u306a\u3044\u306d .... orz\n\n", "tags": ["Qt5.3", "QtQuick22.3"]}