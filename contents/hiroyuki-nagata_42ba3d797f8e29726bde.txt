{"context": "\u81ea\u4f5cOS Advent Calendar 2016 12\u65e5\u76ee\u306e @Hiroyuki-Nagata \u3067\u3059\uff0e\n\u524d\u306e\u4eba\u306f \u81ea\u5206\u3067\u3057\u305f\uff0c\u6b21\u306e\u4eba\u306f Yuma Ohgami\u3055\u3093\u3067\u3059\uff0e\n\u524d\u56de\u307e\u3067\u3067\u3001\u57fa\u672c\u7684\u306a\u4ed5\u69d8\u306f\u66f8\u3051\u305f\u306e\u3067\u4ee5\u4e0b\u306e\u9805\u76ee\u306b\u3064\u3044\u3066\u8ff0\u3079\u3066\u7d42\u308f\u308a\u306b\u3057\u307e\u3059\u3002\n\n\u81ea\u5206\u306e\u30a2\u30bb\u30f3\u30d6\u30e9\u5b9f\u88c5\u4f8b\n\nYacc\u3084Peg\u3092\u7528\u3044\u305f\u5b9f\u88c5\u306e\u53ef\u80fd\u6027\n\u5b9f\u88c5\u306e\u96e3\u6240 ModR/M \u3068 \u30a4\u30f3\u30c6\u30eb\u306e\u4ed5\u69d8\u66f8\u306e\u8a18\u53f7\u306e\u610f\u5473\n\n\n\u30a2\u30bb\u30f3\u30d6\u30e9\u5b9f\u88c5\u4f8b\n\u62d9\u4f5c opennask \u306f\u3001\u30a2\u30bb\u30f3\u30d6\u30e9\u306e\u69cb\u6587\u89e3\u6790\u306b\u306f\u307b\u3068\u3093\u3069Parasol\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u304b\u306a\u304b\u3053\u308c\u304c\u30a2\u30bb\u30f3\u30d6\u30e9\u306e\u69cb\u6587\u89e3\u6790\u306b\u306f\u4f7f\u3044\u3084\u3059\u304b\u3063\u305f\u3067\u3059\u3002\u3068\u3044\u3046\u306e\u306f\u3001\u30a2\u30bb\u30f3\u30d6\u30e9\u306f\u6628\u4eca\u306e\u666e\u901a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u69cb\u6587\u3068\u306f\u9055\u3063\u3066\u3001\u57fa\u672c\u7684\u306b\uff11\u884c\u5358\u4f4d\u3067\u610f\u5473\u3084\u51e6\u7406\u304c\u533a\u5207\u308c\u308b\u304b\u3089\u3067\u3059\u3002\n\nParasol\u306e\u4f7f\u7528\u4f8b\n\u307e\u305a\u306f\u3001TParaTokenizer\u3092\u5ba3\u8a00\u3057\u3066\u304a\u3044\u3066\u3001\u305d\u308c\u306b\u5bfe\u3057\u3066std::istringstream\u3092\u6e21\u3057\u307e\u3059\n     // \u30aa\u30da\u30b3\u30fc\u30c9\u51e6\u7406\u7528\u306e\u30af\u30e9\u30b9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n     nask_utility::Instructions inst;\n     // \u51fa\u529b\u5148\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u3063\u3066\u304a\u304f\n     std::vector<uint8_t> test;\n\n     // \u30c6\u30b9\u30c8\u7528\u306e\u6587\u5b57\u5217\u3092std::array\u3067\u7528\u610f\n     std::array<std::string, 2> naskfunc_src = {\n      \"CYLS EQU 0x0ff0               \\r\\n\", //  0\n      \"MOV  CL,BYTE [CYLS]           \\r\\n\"  //  1\n     };\n\n     // std::array<std::string, x>\n     // \uff11\u884c\uff11\u884c\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u98df\u308f\u305b\u307e\u3059\uff08\u5b9f\u969b\u306ffor\u6587\u3067\u66f8\u304f)\n     std::istringstream input_stream1(naskfunc_src.at(0));\n     std::istringstream input_stream2(naskfunc_src.at(1));\n\n     // TParaTokenizer\u3092\u5ba3\u8a00\u3057\u3066\u6e21\u3059\uff08\u3053\u308c\u304cParasol\u306e\u6a5f\u80fd\u306e\u4e00\u90e8\uff09\n     TParaTokenizer tokenizer1(input_stream1, &inst.token_table);\n     TParaTokenizer tokenizer2(input_stream2, &inst.token_table);\n     // \uff11\u884c\u76ee\u3092\u51e6\u7406\n     inst.process_token_EQU(tokenizer1, test);\n     // \uff12\u884c\u76ee\u3092\u51e6\u7406\n     inst.process_token_MOV(tokenizer2, test);\n\n\n\u6b21\u306b\u3001\u30c8\u30fc\u30ab\u30ca\u30a4\u30b6\u30fc\u3092\u4f5c\u3063\u305f\u5f8c\u306e\u51e6\u7406\n\n\u4f55\u3082\u8a2d\u5b9a\u305b\u305a\u306b \"MOV  CL,BYTE [CYLS]           \\r\\n\" \u3092\u98df\u308f\u305b\u308b\u3068\n\n\ntoken.AsString() == \"MOV\"\ntokenizer.LookAhead(1).AsString() == \"CL\"\ntokenizer.LookAhead(2).AsString() == \",\"\ntokenizer.LookAhead(3).AsString() == \"BYTE\"\ntokenizer.LookAhead(4).AsString() == \"[\"\ntokenizer.LookAhead(5).AsString() == \"CYLS\"\ntokenizer.LookAhead(6).AsString() == \"]\"\n\n\u3067\u5165\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3001\u9069\u5f53\u306a\u3068\u3053\u308d\u3067\u533a\u5207\u3089\u308c\u3066\u3044\u307e\u3059\u306d\uff1f Parasol\u5074\u306e\u8a2d\u5b9a\u3092\u3044\u3058\u308b\u3068\u3001\u3082\u3046\u3061\u3087\u3044\u30c8\u30fc\u30af\u30f3\u306e\u533a\u5207\u308a\u65b9\u3092\u8ce2\u304f\u3067\u304d\u305d\u3046\u306a\u3093\u3067\u3059\u304c\u305d\u3053\u307e\u3067\u3084\u3063\u3066\u307e\u305b\u3093\u3002\n\u3042\u3068\u306f\u305d\u308c\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30eb\u30fc\u30d7\u3067\u56de\u305b\u3070\u8a00\u8a9e\u51e6\u7406\u3088\u304f\u308f\u304b\u3089\u3093\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u3067\u3082\u4f55\u304b\u4f5c\u308c\u308b\u308f\u3051\u3067\u3059\u3002\n\n\u30eb\u30fc\u30d7\u51e6\u7406\u306e\u4f8b\n\n     // inst.process_token_MOV(tokenizer2, test);\n     for (TParaToken token = tokenizer.Next(); ; token = tokenizer.Next()) {\n\n     }\n\n\u3042\u3068\u306f\u3001\u30c8\u30fc\u30af\u30f3\u81ea\u4f53\u306b\u751f\u3048\u3066\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u7d50\u69cb\u4fbf\u5229\n\n\u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\u306e\u5909\u63db\u3068\u304b\u3001\u30c8\u30fc\u30af\u30f3\u306e\u6642\u70b9\u3067\u578b\u3092\u5224\u5b9a\u3057\u305f\u308a\n\n// token\u306b\"MOV\"\u304c\u5165\u3063\u3066\u3044\u308b\u6642\ntoken.AsString() == \"MOV\"\n\ntoken.Is(\"MOV\")    == true;  // virtual bool Is(const std::string& String) const;\ntoken.IsNot(\"LIE\") == true;  // virtual bool IsNot(const std::string& String) const;\ntoken.AsString()   == \"MOV\"; // virtual std::string AsString(void) const;\n\n// token\u306b\"0x0ff0\" \u304c\u5165\u3063\u3066\u3044\u308b\u6642\ntoken.AsLong(\"0x0ff0\") == 0x0ff0;  // virtual long AsLong(void) const throw(TScriptException);\n\n\u305d\u308c\u4ee5\u5916\u306b\u3082\u307e\u3060\u4f7f\u3063\u3066\u306a\u3044\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\n\nYacc\u3084Peg\u3092\u7528\u3044\u305f\u5b9f\u88c5\u306e\u53ef\u80fd\u6027\n\u3068\u306f\u8a00\u3048\u3001\u8a00\u8a9e\u4f5c\u3063\u3066\u308b\u65b9\u304b\u3089\u3059\u308b\u3068\u4e0a\u8a18\u306e\u65b9\u6cd5\u306f\u5168\u7136\u30a8\u30ec\u30ac\u30f3\u30c8\u306a\u65b9\u6cd5\u3067\u306f\u7121\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3063\u3066\u307e\u3059\u3002\n\u30a2\u30bb\u30f3\u30d6\u30e9\u3092\uff11\u884c\uff11\u884c\u51e6\u7406\u3057\u3066\u3066\u601d\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u300c\u3053\u308c\u3063\u3066\u3082\u3063\u3068\u5171\u901a\u51e6\u7406\u306b\u62ec\u308a\u3060\u305b\u306d\uff1f\u300d \u3063\u3066\u611f\u3058\u306a\u3093\u3067\u3059\u3002\n\u306a\u306e\u3067\u3001Yacc\u3068Peg\u306b\u3064\u3044\u3066\u89e6\u308a\u3060\u3051\u7d39\u4ecb\u3057\u305f\u3044\n\nWikipedia - Yacc\n\nYacc\uff08\u82f1: yet another compiler compiler\u3001\u30e4\u30c3\u30af\uff09\u306f\u30d1\u30fc\u30b5\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u4e00\u3064\u3067\u3042\u308b\u3002\n1970\u5e74\u4ee3\u306bAT&T\u3067UNIX\u7528\u306b\u30b9\u30c6\u30d5\u30a1\u30f3\uff08\u30b9\u30c6\u30a3\u30fc\u30d6\uff09\u30fb\u30b8\u30e7\u30f3\u30bd\u30f3\uff08\u82f1\u8a9e\u7248\uff09\u304c\u958b\u767a\u3057\u305f\u3002\n\n\u3053\u3093\u306a\u6614\u304b\u3089\u3042\u308b\u306a\u3089\u4f7f\u308f\u3093\u3068\u640d\u3067\u3059\u3060\u3088\u3002\u65e5\u672c\u8a9e\u306e\u30b5\u30a4\u30c8\u3060\u3068\u5fb3\u4e38\u3055\u3093\u306eyacc\u5165\u9580\u304c\u5206\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3002\n\u305d\u3053\u306e\u6587\u7ae0\u306b\u3088\u308b\u3068\u6700\u4f4e\u9650\u5fc5\u8981\u306a\u624b\u6570\u306f\u4ee5\u4e0b\uff1a\nyacc\u3092\u5229\u7528\u3059\u308b\u4e0a\u3067\u306f\u3001\u6700\u4f4e\u9650\u4ee5\u4e0b\u3092\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n1. YACC\u6587\u6cd5\u30d5\u30a1\u30a4\u30eb\uff1a\u62e1\u5f35\u5b50\u304c .y\u3067\u3042\u308b\u30d5\u30a1\u30a4\u30eb\n2. \u5b57\u53e5\u89e3\u6790\u95a2\u6570\uff1ayylex()\n3. \u30a8\u30e9\u30fc\u8868\u793a\u95a2\u6570\uff1ayyerror()\n4. \u30d1\u30fc\u30b5\u306e\u547c\u3073\u51fa\u3057\uff1ayyparse()\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\n\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u3001\u5c11\u306a\u304f\u3068\u3082\u30a2\u30bb\u30f3\u30d6\u30e9\u306e\u51e6\u7406\u306e\u5206\u5c90\u5224\u5b9a\u3092 .y \u30d5\u30a1\u30a4\u30eb\u306b\u4efb\u305b\u3089\u308c\u308b\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u305f\u3060\u3057\u3001Yacc \u306b\u306f\u69cb\u6587\u89e3\u6790\u5668\u306e\u6a5f\u80fd\u3057\u304b\u306a\u3044\u3001\u5b57\u53e5\u89e3\u6790\u5668\u306b\u306fLex\u306a\u3069\u3092\u4f7f\u3046\u3088\u3046\u3060\u3002\n\nWikipedia - Peg\n\nParsing Expression Grammar (PEG, Parsing Expression Grammar) \u306f\u3001\n\u5206\u6790\u7684\u5f62\u5f0f\u6587\u6cd5\u306e\u4e00\u7a2e\u3067\u3042\u308a\u3001\u5f62\u5f0f\u8a00\u8a9e\u3092\u305d\u306e\u8a00\u8a9e\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u5217\u3092\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306e\u4e00\u9023\u306e\u898f\u5247\u3092\u4f7f\u3063\u3066\u8868\u3057\u305f\u3082\u306e\u3067\u3042\u308b\u3002\n\n\nPeg\u3067\u306f\u3001\u5f93\u6765\u5fc5\u8981\u3060\u3063\u305f\u5b57\u53e5\u89e3\u6790\u5668\u3068\u69cb\u6587\u89e3\u6790\u5668\u306e2\u3064\u3092\u307e\u3068\u3081\u3066\u8a18\u8ff0\u3067\u304d\u308b\u3001\u3089\u3057\u3044\u3002\u697d\u3057\u305d\u3046\u3067\u3059\u306d\u3002 1\n\n\n\n\u5b9f\u88c5\u306e\u96e3\u6240 ModR/M \u3068 \u30a4\u30f3\u30c6\u30eb\u306e\u4ed5\u69d8\u66f8\u306e\u8a18\u53f7\u306e\u610f\u5473\n\u6700\u5f8c\u306b ModR/M \u306e\u610f\u5473\u3068\u304b\u3001\nQiita\u306b\u66f8\u3053\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u524d\u306b\u30d6\u30ed\u30b0\u306b\u66f8\u3044\u305f\u5185\u5bb9\u3068\u304b\u3076\u308b\u306e\u3067\u30ea\u30f3\u30af\u3060\u3051\u5f35\u3063\u3066\u304a\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\nModR/M\nx86 \u6c4e\u7528\u547d\u4ee4 - ModR/M \u306e\u89e3\u8aac\n\n\u305d\u306e\u4ed6\u4ed5\u69d8\u66f8\u306e\u8a18\u53f7\u306e\u610f\u5473\n\u30aa\u30da\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u304f\u308b\u3044\u308d\u3044\u308d\u306a\u8a18\u53f7\u3001\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u304c\u8a73\u3057\u3044\u3067\u3059\nx86-64 \u547d\u4ee4\u306e\u6982\u8981\n\n\n\n\n\u3053\u308c\u3067\u52dd\u3064\u308b! PEG\u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u30b3\u30f3\u30d1\u30a4\u30e9pacc\u306b\u89e6\u308c\u308b\u00a0\u21a9\n\n\n\n[\u81ea\u4f5cOS Advent Calendar 2016](http://www.adventar.org/calendars/1666) 12\u65e5\u76ee\u306e @Hiroyuki-Nagata \u3067\u3059\uff0e\n\u524d\u306e\u4eba\u306f \u81ea\u5206\u3067\u3057\u305f\uff0c\u6b21\u306e\u4eba\u306f Yuma Ohgami\u3055\u3093\u3067\u3059\uff0e\n\n\u524d\u56de\u307e\u3067\u3067\u3001\u57fa\u672c\u7684\u306a\u4ed5\u69d8\u306f\u66f8\u3051\u305f\u306e\u3067\u4ee5\u4e0b\u306e\u9805\u76ee\u306b\u3064\u3044\u3066\u8ff0\u3079\u3066\u7d42\u308f\u308a\u306b\u3057\u307e\u3059\u3002\n\n* \u81ea\u5206\u306e\u30a2\u30bb\u30f3\u30d6\u30e9\u5b9f\u88c5\u4f8b\n* `Yacc`\u3084`Peg`\u3092\u7528\u3044\u305f\u5b9f\u88c5\u306e\u53ef\u80fd\u6027\n* \u5b9f\u88c5\u306e\u96e3\u6240 `ModR/M` \u3068 \u30a4\u30f3\u30c6\u30eb\u306e\u4ed5\u69d8\u66f8\u306e\u8a18\u53f7\u306e\u610f\u5473\n\n# \u30a2\u30bb\u30f3\u30d6\u30e9\u5b9f\u88c5\u4f8b\n\n\u62d9\u4f5c [opennask](https://github.com/HobbyOSs/opennask) \u306f\u3001\u30a2\u30bb\u30f3\u30d6\u30e9\u306e\u69cb\u6587\u89e3\u6790\u306b\u306f\u307b\u3068\u3093\u3069`Parasol`\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u304b\u306a\u304b\u3053\u308c\u304c\u30a2\u30bb\u30f3\u30d6\u30e9\u306e\u69cb\u6587\u89e3\u6790\u306b\u306f\u4f7f\u3044\u3084\u3059\u304b\u3063\u305f\u3067\u3059\u3002\u3068\u3044\u3046\u306e\u306f\u3001\u30a2\u30bb\u30f3\u30d6\u30e9\u306f\u6628\u4eca\u306e\u666e\u901a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u69cb\u6587\u3068\u306f\u9055\u3063\u3066\u3001\u57fa\u672c\u7684\u306b\uff11\u884c\u5358\u4f4d\u3067\u610f\u5473\u3084\u51e6\u7406\u304c\u533a\u5207\u308c\u308b\u304b\u3089\u3067\u3059\u3002\n\n#### Parasol\u306e\u4f7f\u7528\u4f8b\n\n\u307e\u305a\u306f\u3001`TParaTokenizer`\u3092\u5ba3\u8a00\u3057\u3066\u304a\u3044\u3066\u3001\u305d\u308c\u306b\u5bfe\u3057\u3066`std::istringstream`\u3092\u6e21\u3057\u307e\u3059\n\n```cpp\n     // \u30aa\u30da\u30b3\u30fc\u30c9\u51e6\u7406\u7528\u306e\u30af\u30e9\u30b9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n     nask_utility::Instructions inst;\n     // \u51fa\u529b\u5148\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u3063\u3066\u304a\u304f\n     std::vector<uint8_t> test;\n\n     // \u30c6\u30b9\u30c8\u7528\u306e\u6587\u5b57\u5217\u3092std::array\u3067\u7528\u610f\n     std::array<std::string, 2> naskfunc_src = {\n\t  \"CYLS\tEQU 0x0ff0               \\r\\n\", //  0\n\t  \"MOV  CL,BYTE [CYLS]           \\r\\n\"\t//  1\n     };\n\n     // std::array<std::string, x>\n     // \uff11\u884c\uff11\u884c\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u98df\u308f\u305b\u307e\u3059\uff08\u5b9f\u969b\u306ffor\u6587\u3067\u66f8\u304f)\n     std::istringstream input_stream1(naskfunc_src.at(0));\n     std::istringstream input_stream2(naskfunc_src.at(1));\n\n     // TParaTokenizer\u3092\u5ba3\u8a00\u3057\u3066\u6e21\u3059\uff08\u3053\u308c\u304cParasol\u306e\u6a5f\u80fd\u306e\u4e00\u90e8\uff09\n     TParaTokenizer tokenizer1(input_stream1, &inst.token_table);\n     TParaTokenizer tokenizer2(input_stream2, &inst.token_table);\n     // \uff11\u884c\u76ee\u3092\u51e6\u7406\n     inst.process_token_EQU(tokenizer1, test);\n     // \uff12\u884c\u76ee\u3092\u51e6\u7406\n     inst.process_token_MOV(tokenizer2, test);\n\n```\n\n\u6b21\u306b\u3001\u30c8\u30fc\u30ab\u30ca\u30a4\u30b6\u30fc\u3092\u4f5c\u3063\u305f\u5f8c\u306e\u51e6\u7406\n\n* \u4f55\u3082\u8a2d\u5b9a\u305b\u305a\u306b `\"MOV  CL,BYTE [CYLS]           \\r\\n\"` \u3092\u98df\u308f\u305b\u308b\u3068\n\n```cpp\n\ntoken.AsString() == \"MOV\"\ntokenizer.LookAhead(1).AsString() == \"CL\"\ntokenizer.LookAhead(2).AsString() == \",\"\ntokenizer.LookAhead(3).AsString() == \"BYTE\"\ntokenizer.LookAhead(4).AsString() == \"[\"\ntokenizer.LookAhead(5).AsString() == \"CYLS\"\ntokenizer.LookAhead(6).AsString() == \"]\"\n```\n\n\u3067\u5165\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3001\u9069\u5f53\u306a\u3068\u3053\u308d\u3067\u533a\u5207\u3089\u308c\u3066\u3044\u307e\u3059\u306d\uff1f Parasol\u5074\u306e\u8a2d\u5b9a\u3092\u3044\u3058\u308b\u3068\u3001\u3082\u3046\u3061\u3087\u3044\u30c8\u30fc\u30af\u30f3\u306e\u533a\u5207\u308a\u65b9\u3092\u8ce2\u304f\u3067\u304d\u305d\u3046\u306a\u3093\u3067\u3059\u304c\u305d\u3053\u307e\u3067\u3084\u3063\u3066\u307e\u305b\u3093\u3002\n\n\u3042\u3068\u306f\u305d\u308c\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30eb\u30fc\u30d7\u3067\u56de\u305b\u3070\u8a00\u8a9e\u51e6\u7406\u3088\u304f\u308f\u304b\u3089\u3093\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u3067\u3082\u4f55\u304b\u4f5c\u308c\u308b\u308f\u3051\u3067\u3059\u3002\n\n* \u30eb\u30fc\u30d7\u51e6\u7406\u306e\u4f8b\n\n```cpp\n     // inst.process_token_MOV(tokenizer2, test);\n     for (TParaToken token = tokenizer.Next(); ; token = tokenizer.Next()) {\n\n     }\n```\n\n\u3042\u3068\u306f\u3001\u30c8\u30fc\u30af\u30f3\u81ea\u4f53\u306b\u751f\u3048\u3066\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u7d50\u69cb\u4fbf\u5229\n\n* \u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\u306e\u5909\u63db\u3068\u304b\u3001\u30c8\u30fc\u30af\u30f3\u306e\u6642\u70b9\u3067\u578b\u3092\u5224\u5b9a\u3057\u305f\u308a\n\n```cpp\n// token\u306b\"MOV\"\u304c\u5165\u3063\u3066\u3044\u308b\u6642\ntoken.AsString() == \"MOV\"\n\ntoken.Is(\"MOV\")    == true;  // virtual bool Is(const std::string& String) const;\ntoken.IsNot(\"LIE\") == true;  // virtual bool IsNot(const std::string& String) const;\ntoken.AsString()   == \"MOV\"; // virtual std::string AsString(void) const;\n\n// token\u306b\"0x0ff0\" \u304c\u5165\u3063\u3066\u3044\u308b\u6642\ntoken.AsLong(\"0x0ff0\") == 0x0ff0;  // virtual long AsLong(void) const throw(TScriptException);\n```\n\n\u305d\u308c\u4ee5\u5916\u306b\u3082\u307e\u3060\u4f7f\u3063\u3066\u306a\u3044\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\n\n# `Yacc`\u3084`Peg`\u3092\u7528\u3044\u305f\u5b9f\u88c5\u306e\u53ef\u80fd\u6027\n\n\u3068\u306f\u8a00\u3048\u3001\u8a00\u8a9e\u4f5c\u3063\u3066\u308b\u65b9\u304b\u3089\u3059\u308b\u3068\u4e0a\u8a18\u306e\u65b9\u6cd5\u306f\u5168\u7136\u30a8\u30ec\u30ac\u30f3\u30c8\u306a\u65b9\u6cd5\u3067\u306f\u7121\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3063\u3066\u307e\u3059\u3002\n\u30a2\u30bb\u30f3\u30d6\u30e9\u3092\uff11\u884c\uff11\u884c\u51e6\u7406\u3057\u3066\u3066\u601d\u3063\u305f\u3093\u3067\u3059\u304c\u3001***\u300c\u3053\u308c\u3063\u3066\u3082\u3063\u3068\u5171\u901a\u51e6\u7406\u306b\u62ec\u308a\u3060\u305b\u306d\uff1f\u300d*** \u3063\u3066\u611f\u3058\u306a\u3093\u3067\u3059\u3002\n\n\u306a\u306e\u3067\u3001`Yacc`\u3068`Peg`\u306b\u3064\u3044\u3066\u89e6\u308a\u3060\u3051\u7d39\u4ecb\u3057\u305f\u3044\n\n### [`Wikipedia - Yacc`](https://ja.wikipedia.org/wiki/Yacc)\n\n```\nYacc\uff08\u82f1: yet another compiler compiler\u3001\u30e4\u30c3\u30af\uff09\u306f\u30d1\u30fc\u30b5\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u4e00\u3064\u3067\u3042\u308b\u3002\n1970\u5e74\u4ee3\u306bAT&T\u3067UNIX\u7528\u306b\u30b9\u30c6\u30d5\u30a1\u30f3\uff08\u30b9\u30c6\u30a3\u30fc\u30d6\uff09\u30fb\u30b8\u30e7\u30f3\u30bd\u30f3\uff08\u82f1\u8a9e\u7248\uff09\u304c\u958b\u767a\u3057\u305f\u3002\n```\n\n\u3053\u3093\u306a\u6614\u304b\u3089\u3042\u308b\u306a\u3089\u4f7f\u308f\u3093\u3068\u640d\u3067\u3059\u3060\u3088\u3002\u65e5\u672c\u8a9e\u306e\u30b5\u30a4\u30c8\u3060\u3068\u5fb3\u4e38\u3055\u3093\u306e[yacc\u5165\u9580](http://www.tokumaru.org/yacc/)\u304c\u5206\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3002\n\n\u305d\u3053\u306e\u6587\u7ae0\u306b\u3088\u308b\u3068\u6700\u4f4e\u9650\u5fc5\u8981\u306a\u624b\u6570\u306f\u4ee5\u4e0b\uff1a\n\n```\nyacc\u3092\u5229\u7528\u3059\u308b\u4e0a\u3067\u306f\u3001\u6700\u4f4e\u9650\u4ee5\u4e0b\u3092\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n1. YACC\u6587\u6cd5\u30d5\u30a1\u30a4\u30eb\uff1a\u62e1\u5f35\u5b50\u304c .y\u3067\u3042\u308b\u30d5\u30a1\u30a4\u30eb\n2. \u5b57\u53e5\u89e3\u6790\u95a2\u6570\uff1ayylex()\n3. \u30a8\u30e9\u30fc\u8868\u793a\u95a2\u6570\uff1ayyerror()\n4. \u30d1\u30fc\u30b5\u306e\u547c\u3073\u51fa\u3057\uff1ayyparse()\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\n```\n\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u3001\u5c11\u306a\u304f\u3068\u3082\u30a2\u30bb\u30f3\u30d6\u30e9\u306e\u51e6\u7406\u306e\u5206\u5c90\u5224\u5b9a\u3092 `.y` \u30d5\u30a1\u30a4\u30eb\u306b\u4efb\u305b\u3089\u308c\u308b\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u305f\u3060\u3057\u3001**Yacc \u306b\u306f\u69cb\u6587\u89e3\u6790\u5668\u306e\u6a5f\u80fd\u3057\u304b\u306a\u3044**\u3001\u5b57\u53e5\u89e3\u6790\u5668\u306b\u306f[Lex](https://ja.wikipedia.org/wiki/Lex)\u306a\u3069\u3092\u4f7f\u3046\u3088\u3046\u3060\u3002\n\n### [`Wikipedia - Peg`](https://ja.wikipedia.org/wiki/Parsing_Expression_Grammar-^)\n\n```\nParsing Expression Grammar (PEG, Parsing Expression Grammar) \u306f\u3001\n\u5206\u6790\u7684\u5f62\u5f0f\u6587\u6cd5\u306e\u4e00\u7a2e\u3067\u3042\u308a\u3001\u5f62\u5f0f\u8a00\u8a9e\u3092\u305d\u306e\u8a00\u8a9e\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u5217\u3092\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306e\u4e00\u9023\u306e\u898f\u5247\u3092\u4f7f\u3063\u3066\u8868\u3057\u305f\u3082\u306e\u3067\u3042\u308b\u3002\n```\n\n* Peg\u3067\u306f\u3001\u5f93\u6765\u5fc5\u8981\u3060\u3063\u305f**\u5b57\u53e5\u89e3\u6790\u5668\u3068\u69cb\u6587\u89e3\u6790\u5668\u306e2\u3064\u3092\u307e\u3068\u3081\u3066\u8a18\u8ff0\u3067\u304d\u308b**\u3001\u3089\u3057\u3044\u3002\u697d\u3057\u305d\u3046\u3067\u3059\u306d\u3002 [^1]\n\n# \u5b9f\u88c5\u306e\u96e3\u6240 `ModR/M` \u3068 \u30a4\u30f3\u30c6\u30eb\u306e\u4ed5\u69d8\u66f8\u306e\u8a18\u53f7\u306e\u610f\u5473\n\n\u6700\u5f8c\u306b `ModR/M` \u306e\u610f\u5473\u3068\u304b\u3001\nQiita\u306b\u66f8\u3053\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u524d\u306b\u30d6\u30ed\u30b0\u306b\u66f8\u3044\u305f\u5185\u5bb9\u3068\u304b\u3076\u308b\u306e\u3067\u30ea\u30f3\u30af\u3060\u3051\u5f35\u3063\u3066\u304a\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n## ModR/M\n\n[x86 \u6c4e\u7528\u547d\u4ee4 - ModR/M \u306e\u89e3\u8aac](http://nantonaku-shiawase.hatenablog.com/entry/2016/10/25/231833)\n\n## \u305d\u306e\u4ed6\u4ed5\u69d8\u66f8\u306e\u8a18\u53f7\u306e\u610f\u5473\n\n\u30aa\u30da\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u304f\u308b\u3044\u308d\u3044\u308d\u306a\u8a18\u53f7\u3001\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u304c\u8a73\u3057\u3044\u3067\u3059\n[x86-64 \u547d\u4ee4\u306e\u6982\u8981](http://www.mztn.org/lxasm64/amd06_sum.html)\n\n\n\n[^1]: [\u3053\u308c\u3067\u52dd\u3064\u308b! PEG\u30d9\u30fc\u30b9\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u30b3\u30f3\u30d1\u30a4\u30e9pacc\u306b\u89e6\u308c\u308b](http://blog.anatoo.jp/entry/20120624/1340473495)\n", "tags": ["\u81ea\u4f5cOS", "\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e", "\u30a2\u30bb\u30f3\u30d6\u30e9", "C++"]}