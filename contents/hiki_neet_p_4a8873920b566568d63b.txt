{"context": "Rx\u306f\u4fbf\u5229\u3059\u304e\u308b\u306e\u3067\u3059\u304c\u3001\u307e\u3060\u4e0d\u6163\u308c\u306a\u79c1\u3067\u3059\u3002\nReactiveProperty\u3092\u7528\u3044\u3066MVVM\u30d1\u30bf\u30fc\u30f3\u3092\u7d44\u307f\u7acb\u3066\u3066\u3044\u305f\u3068\u3053\u308d\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b7\u30fc\u30f3\u306b\u906d\u9047\u3057\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u3001\u5358\u7d14\u5316\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\nexample.cs\nusing System;\nusing System.Linq;\nusing System.Reactive.Linq;\nusing System.Threading;\nusing Prism.Mvvm;\nusing Reactive.Bindings;\nusing Reactive.Bindings.Extensions;\n\nnamespace ConsoleExample\n{\n    class Model1 : BindableBase\n    {\n        private int _number = 0;\n        public int Number\n        {\n            get { return _number; }\n            set { SetProperty(ref _number, value); }\n        }\n    }\n\n    class Model2 : BindableBase\n    {\n        private Model1 _model1 = null;\n        public Model1 Model1\n        {\n            get { return _model1; }\n            set { SetProperty(ref _model1, value); }\n        }\n    }\n\n    class ViewModel\n    {\n        public Model2 Model2 { get; }\n        public ReactiveProperty<int> Number { get; }\n\n        public ViewModel()\n        {\n            Model2 = new Model2();\n            Number = Model2\n                .ToReactivePropertyAsSynchronized(m2 => m2.Model1)\n                .Where(m1 => m1 != null)\n                // \u3053\u3053\u306eSelectMany\n                .SelectMany(m1 => m1.ToReactivePropertyAsSynchronized(x => x.Number))\n                .ToReactiveProperty(0);\n        }\n    }\n\n    class View\n    {\n        private ViewModel _viewModel;\n\n        public View(ViewModel viewModel)\n        {\n            _viewModel = viewModel;\n            _viewModel.Number.Subscribe(x => Console.WriteLine(x));\n        }\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var viewModel = new ViewModel();\n            var view = new View(viewModel);\n\n            var model1_1 = new Model1();\n            var model1_2 = new Model1();\n            Observable.Timer(TimeSpan.FromSeconds(0), TimeSpan.FromSeconds(1)).Subscribe(x => model1_1.Number = (int)x);\n            Observable.Timer(TimeSpan.FromSeconds(0), TimeSpan.FromSeconds(1)).Subscribe(x => model1_2.Number = (int)(x * 10));\n            viewModel.Model2.Model1 = model1_1; // 1, 2, 3...\n            Thread.Sleep(5500); // 5.5\u79d2\u5f85\u3064\n            viewModel.Model2.Model1 = model1_2; // 10, 20, 30...\n\n            Console.ReadLine();\n        }\n    }\n}\n\n\n\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n0\n1\n2\n3\n4\n5\n50\n60\n6\n70\n7\n80\n8\n90\n9\n100\n10\n\n\u3053\u306e\u3088\u3046\u306b\u3001model1_1\u3068model1_2\u306e\u5185\u5bb9\u304c\u6df7\u3056\u308a\u5408\u3063\u3066\u3044\u307e\u3059\u3002\n\u79c1\u306f\u5f53\u521d\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bmodel1_1\u304b\u3089model1_2\u3078\u5207\u308a\u66ff\u308f\u308b\u3068\u601d\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n0\n1\n2\n3\n4\n5\n50\n60\n70\n80\n90\n100\n\n\u3057\u304b\u3057\u3001\u305d\u3046\u306f\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\nSelectMany\u306f\u3001\u4ee5\u4e0b\u306e\u51e6\u7406\u3068\u540c\u3058\u3060\u3063\u305f\u306e\u3067\u3059\u3002\n\nexample.cs\nSelect(m1 => m1.ToReactivePropertyAsSynchronized(x => x.Number)).Merge()\n// \u2191SelectMany(m1 => m1.ToReactivePropertyAsSynchronized(x => x.Number))\u3068\u540c\u3058\u7d50\u679c\n\n\nmodel1_1\u3068model1_2\u304c\u6df7\u3056\u308a\u5408\u308f\u305a\u306b\u5207\u308a\u66ff\u308f\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nexample.cs\nSelect(m1 => m1.ToReactivePropertyAsSynchronized(x => x.Number)).Switch()\n\n\nRx\u306f\u4fbf\u5229\u3059\u304e\u308b\u306e\u3067\u3059\u304c\u3001\u307e\u3060\u4e0d\u6163\u308c\u306a\u79c1\u3067\u3059\u3002\nReactiveProperty\u3092\u7528\u3044\u3066MVVM\u30d1\u30bf\u30fc\u30f3\u3092\u7d44\u307f\u7acb\u3066\u3066\u3044\u305f\u3068\u3053\u308d\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b7\u30fc\u30f3\u306b\u906d\u9047\u3057\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u3001\u5358\u7d14\u5316\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n```example.cs\nusing System;\nusing System.Linq;\nusing System.Reactive.Linq;\nusing System.Threading;\nusing Prism.Mvvm;\nusing Reactive.Bindings;\nusing Reactive.Bindings.Extensions;\n\nnamespace ConsoleExample\n{\n    class Model1 : BindableBase\n    {\n        private int _number = 0;\n        public int Number\n        {\n            get { return _number; }\n            set { SetProperty(ref _number, value); }\n        }\n    }\n\n    class Model2 : BindableBase\n    {\n        private Model1 _model1 = null;\n        public Model1 Model1\n        {\n            get { return _model1; }\n            set { SetProperty(ref _model1, value); }\n        }\n    }\n\n    class ViewModel\n    {\n        public Model2 Model2 { get; }\n        public ReactiveProperty<int> Number { get; }\n\n        public ViewModel()\n        {\n            Model2 = new Model2();\n            Number = Model2\n                .ToReactivePropertyAsSynchronized(m2 => m2.Model1)\n                .Where(m1 => m1 != null)\n                // \u3053\u3053\u306eSelectMany\n                .SelectMany(m1 => m1.ToReactivePropertyAsSynchronized(x => x.Number))\n                .ToReactiveProperty(0);\n        }\n    }\n\n    class View\n    {\n        private ViewModel _viewModel;\n\n        public View(ViewModel viewModel)\n        {\n            _viewModel = viewModel;\n            _viewModel.Number.Subscribe(x => Console.WriteLine(x));\n        }\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var viewModel = new ViewModel();\n            var view = new View(viewModel);\n            \n            var model1_1 = new Model1();\n            var model1_2 = new Model1();\n            Observable.Timer(TimeSpan.FromSeconds(0), TimeSpan.FromSeconds(1)).Subscribe(x => model1_1.Number = (int)x);\n            Observable.Timer(TimeSpan.FromSeconds(0), TimeSpan.FromSeconds(1)).Subscribe(x => model1_2.Number = (int)(x * 10));\n            viewModel.Model2.Model1 = model1_1; // 1, 2, 3...\n            Thread.Sleep(5500); // 5.5\u79d2\u5f85\u3064\n            viewModel.Model2.Model1 = model1_2; // 10, 20, 30...\n\n            Console.ReadLine();\n        }\n    }\n}\n```\n\n\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n0\n1\n2\n3\n4\n5\n50\n60\n6\n70\n7\n80\n8\n90\n9\n100\n10\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3001model1_1\u3068model1_2\u306e\u5185\u5bb9\u304c\u6df7\u3056\u308a\u5408\u3063\u3066\u3044\u307e\u3059\u3002\n\u79c1\u306f\u5f53\u521d\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bmodel1_1\u304b\u3089model1_2\u3078\u5207\u308a\u66ff\u308f\u308b\u3068\u601d\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\n```\n0\n1\n2\n3\n4\n5\n50\n60\n70\n80\n90\n100\n```\n\n\u3057\u304b\u3057\u3001\u305d\u3046\u306f\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\nSelectMany\u306f\u3001\u4ee5\u4e0b\u306e\u51e6\u7406\u3068\u540c\u3058\u3060\u3063\u305f\u306e\u3067\u3059\u3002\n\n```example.cs\nSelect(m1 => m1.ToReactivePropertyAsSynchronized(x => x.Number)).Merge()\n// \u2191SelectMany(m1 => m1.ToReactivePropertyAsSynchronized(x => x.Number))\u3068\u540c\u3058\u7d50\u679c\n```\n\nmodel1_1\u3068model1_2\u304c\u6df7\u3056\u308a\u5408\u308f\u305a\u306b\u5207\u308a\u66ff\u308f\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```example.cs\nSelect(m1 => m1.ToReactivePropertyAsSynchronized(x => x.Number)).Switch()\n```\n", "tags": ["C#", "Rx"]}