{"context": "\n\nTL;DR\nlibc\u306e\u3088\u3046\u306b\u5b9f\u884c\u3082\u3067\u304d\u308b\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u307e\u3068\u3081\n\u57fa\u672c\u7684\u306b\u306f\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d3\u30eb\u30c9\u306b -pie -rdynamic \u3092\u4ed8\u52a0\u3059\u308c\u3070\u826f\u3044\u3002\n\nlibc\u5b9f\u884c\u7d50\u679c\u4f8b\n$ /lib/x86_64-linux-gnu/libc-2.19.so \nGNU C Library (Ubuntu EGLIBC 2.19-0ubuntu6.6) stable release version 2.19, by Roland McGrath et al.\nCopyright (C) 2014 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.\nCompiled by GNU CC version 4.8.2.\nCompiled on a Linux 3.13.11 system on 2015-02-25.\nAvailable extensions:\n        crypt add-on version 2.1 by Michael Glad and others\n        GNU Libidn by Simon Josefsson\n        Native POSIX Threads Library by Ulrich Drepper et al\n        BIND-8.2.3-T5B\nlibc ABIs: UNIQUE IFUNC\nFor bug reporting instructions, please see:\n<https://bugs.launchpad.net/ubuntu/+source/eglibc/+bugs>.\n\n\n\n\u4f5c\u6210\u65b9\u6cd5\n\u5b9f\u884c\u53ef\u80fd\u306a\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u6210\u3059\u308b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8(_start)\u304b\u3089\u547c\u3070\u308c\u308b\u95a2\u6570 main \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\nexcutable_shared_lib.c\n#include <stdio.h>\n\nextern int hoge(const char *s) {\n    printf(\"hoge: %s\\n\", s);\n}\n\nint main(int argc, char const* argv[])\n{\n    printf(\"in %s %s:%d\\n\", __func__, __FILE__, __LINE__);\n    return hoge(\"aaa\");\n}\n\n\n\u52d5\u7684\u30ea\u30f3\u30af\u3067\u3082\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3088\u3046\u306e\u9069\u5f53\u306a\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3082\u4f5c\u6210\u3059\u308b\n\nmain.c\n#include <stdio.h>\n\nint main(int argc, char const* argv[])\n{\n    printf(\"in %s %s:%d\\n\", __func__, __FILE__, __LINE__);\n    return hoge(\"main\");\n}\n\n\n\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\u57fa\u672c\u7684\u306a\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u6210\u306b -pie -rdynamic \u3092\u4ed8\u52a0\u3059\u308b\u3002\n\n\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u7d50\u679c\n$ gcc -shared -fPIC -pie -rdynamic excutable_shared_lib.c -o libesl.so\n$ ./libesl.so \nin main excutable_shared_lib.c:9\nhoge: aaa\n\n$ gcc main.c ./libesl.so\n$ ldd a.out \n        linux-vdso.so.1 =>  (0x00007ffcf8a99000)\n        ./libesl.so (0x00007f8cb92a1000)\n        libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8cb8ec0000)\n        /lib64/ld-linux-x86-64.so.2 (0x00007f8cb94a5000)\n$ ./a.out \nin main main.c:5\nhoge: main\n\n\n\u4ee5\u4e0a\u3067\u5b9f\u884c\u53ef\u80fd\u306a\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3001\u305d\u308c\u3092\u30ea\u30f3\u30af\u3057\u305f\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u304c\u4f5c\u6210\u3067\u304d\u305f\u3002\n\n\u53c2\u8003\nlinux - Why and how are some shared libraries runnable, as though they are executables? - Unix & Linux Stack Exchange\nc - building a .so that is also an executable - Stack Overflow\nMake your own executable shared library on Linux | [Po]lentino's blog\n\u5b9f\u884c\u53ef\u80fd\u306a\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea - Okiraku Programming\nPIE (\u4f4d\u7f6e\u72ec\u7acb\u5b9f\u884c\u5f62\u5f0f) \u3092\u4f5c\u6210\u3059\u308b - bk\u30d6\u30ed\u30b0\n#TL;DR\n\nlibc\u306e\u3088\u3046\u306b\u5b9f\u884c\u3082\u3067\u304d\u308b\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u307e\u3068\u3081\n\n\u57fa\u672c\u7684\u306b\u306f\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d3\u30eb\u30c9\u306b `-pie -rdynamic` \u3092\u4ed8\u52a0\u3059\u308c\u3070\u826f\u3044\u3002\n\n```shell-session:libc\u5b9f\u884c\u7d50\u679c\u4f8b\n$ /lib/x86_64-linux-gnu/libc-2.19.so \nGNU C Library (Ubuntu EGLIBC 2.19-0ubuntu6.6) stable release version 2.19, by Roland McGrath et al.\nCopyright (C) 2014 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.\nThere is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.\nCompiled by GNU CC version 4.8.2.\nCompiled on a Linux 3.13.11 system on 2015-02-25.\nAvailable extensions:\n        crypt add-on version 2.1 by Michael Glad and others\n        GNU Libidn by Simon Josefsson\n        Native POSIX Threads Library by Ulrich Drepper et al\n        BIND-8.2.3-T5B\nlibc ABIs: UNIQUE IFUNC\nFor bug reporting instructions, please see:\n<https://bugs.launchpad.net/ubuntu/+source/eglibc/+bugs>.\n```\n\n# \u4f5c\u6210\u65b9\u6cd5\n\n\u5b9f\u884c\u53ef\u80fd\u306a\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u6210\u3059\u308b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8(`_start`)\u304b\u3089\u547c\u3070\u308c\u308b\u95a2\u6570 `main` \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```c:excutable_shared_lib.c\n#include <stdio.h>\n\nextern int hoge(const char *s) {\n    printf(\"hoge: %s\\n\", s);\n}\n\nint main(int argc, char const* argv[])\n{\n    printf(\"in %s %s:%d\\n\", __func__, __FILE__, __LINE__);\n    return hoge(\"aaa\");\n}\n```\n\n\u52d5\u7684\u30ea\u30f3\u30af\u3067\u3082\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3088\u3046\u306e\u9069\u5f53\u306a\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3082\u4f5c\u6210\u3059\u308b\n\n```c:main.c\n#include <stdio.h>\n\nint main(int argc, char const* argv[])\n{\n    printf(\"in %s %s:%d\\n\", __func__, __FILE__, __LINE__);\n    return hoge(\"main\");\n}\n```\n\n\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\u57fa\u672c\u7684\u306a\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u6210\u306b `-pie -rdynamic` \u3092\u4ed8\u52a0\u3059\u308b\u3002\n\n```shell-session:\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u7d50\u679c\n$ gcc -shared -fPIC -pie -rdynamic excutable_shared_lib.c -o libesl.so\n$ ./libesl.so \nin main excutable_shared_lib.c:9\nhoge: aaa\n\n$ gcc main.c ./libesl.so\n$ ldd a.out \n        linux-vdso.so.1 =>  (0x00007ffcf8a99000)\n        ./libesl.so (0x00007f8cb92a1000)\n        libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8cb8ec0000)\n        /lib64/ld-linux-x86-64.so.2 (0x00007f8cb94a5000)\n$ ./a.out \nin main main.c:5\nhoge: main\n```\n\n\u4ee5\u4e0a\u3067\u5b9f\u884c\u53ef\u80fd\u306a\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3001\u305d\u308c\u3092\u30ea\u30f3\u30af\u3057\u305f\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u304c\u4f5c\u6210\u3067\u304d\u305f\u3002\n\n# \u53c2\u8003\n[linux - Why and how are some shared libraries runnable, as though they are executables? - Unix & Linux Stack Exchange](http://unix.stackexchange.com/questions/223385/why-and-how-are-some-shared-libraries-runnable-as-though-they-are-executables)\n[c - building a .so that is also an executable - Stack Overflow](http://stackoverflow.com/questions/1449987/building-a-so-that-is-also-an-executable/1451482#1451482)\n[Make your own executable shared library on Linux | [Po]lentino's blog](https://polentino911.wordpress.com/2013/08/08/make-your-own-executable-shared-library-on-linux/)\n[\u5b9f\u884c\u53ef\u80fd\u306a\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea - Okiraku Programming](http://d.hatena.ne.jp/NeoCat/20120627)\n[PIE (\u4f4d\u7f6e\u72ec\u7acb\u5b9f\u884c\u5f62\u5f0f) \u3092\u4f5c\u6210\u3059\u308b - bk\u30d6\u30ed\u30b0](http://0xcc.net/blog/archives/000109.html)\n", "tags": ["Linux", "\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea", "ELF", "GCC"]}