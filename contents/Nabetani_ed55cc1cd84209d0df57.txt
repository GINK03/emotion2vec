{"context": " More than 1 year has passed since last update.\u30a4\u30d9\u30f3\u30c8\u30da\u30fc\u30b8\u306f http://atnd.org/events/36783 \u3002\n\u554f\u984c\u306f http://nabetani.sakura.ne.jp/hena/ord8entco/ \u3002\n\u89e3\u7b54\u30ea\u30f3\u30af\u96c6\u306f http://qiita.com/items/24b9be4ee3bae4c89a95 \u3002\n\u3067\u3002\nC\u8a00\u8a9e\u3067\u66f8\u3044\u3066\u307f\u305f\u3002\n\nentco.c\n// compiled with \"clang -std=c11\"\n#include <stdio.h>\n#include <string.h>\n\nstruct read_state\n{\n    char const * src;\n    int pos;\n    _Bool ok;\n};\n\nint char_to_num( char c )\n{\n    return ( '0'<=c && c<='9' )\n        ? c-'0'\n        : c-'a'+10;\n}\n\n_Bool read( struct read_state * rs )\n{\n    if ( ! rs->ok ){\n        return 0;\n    }\n    int pos = rs->pos;\n    ++rs->pos;\n    char c = rs->src[ pos/4 ];\n    if ( ! c ){\n        rs->ok=0;\n        return 0;\n    }\n    return !( char_to_num(c) & (1 << ( pos%4 ) ) );\n}\n\n#define M( proc, zero, one )\\\nchar proc( struct read_state * rs ){  return read(rs) ? (zero) : (one);  }\n\nchar read_010110( struct read_state * rs )\n{\n    if ( read(rs) ){\n        rs->ok=0;\n        return 0;\n    } else {\n        return 'c';\n    }\n}\n\nM( read_01011, read_010110(rs), 'l' );\nM( read_0101, 'd', read_01011(rs));\nM( read_001, 's', 'n' );\nM( read_010, 'i', read_0101(rs) );\nM( read_011, 'o', 'a' );\nM( read_110, 'r', 'h' );\nM( read_00, 't', read_001(rs) );\nM( read_01, read_010(rs), read_011(rs) );\nM( read_11, read_110(rs), 0 );\nM( read_0, read_00(rs), read_01(rs) );\nM( read_1, 'e', read_11(rs) );\nM( read_char, read_0(rs), read_1(rs) );\n#undef M\n\nvoid solve( char const * src, char * actual )\n{\n    struct read_state rs={ src, 0, 1 };\n    for( int pos=0 ; ; ++pos ){\n        char c=read_char( &rs );\n        if ( ! rs.ok ){\n            strcpy( actual, \"*invalid*\" );\n            return;\n        }\n        if ( c==0 ){\n            char numtext[13]={0};\n            sprintf( numtext, \":%d\", rs.pos );\n            strcpy( actual+pos, numtext );\n            return;\n        }\n        actual[ pos ] = c;\n    }\n}\n\nvoid test( char const * src, char const * expected )\n{\n    int read=0;\n    char actual[ strlen( src )*2+13 ];\n    solve( src, actual );\n    printf( \"%s -> %s ( %s ) %s\\n\", \n        src, actual, expected, \n        strcmp( actual, expected ) ? \"***NG***\" : \"ok\" );\n}\n\nint main()\n{\n    /*0*/ test( \"16d9d4fbd\", \"ethanol:30\" );\n    // \u4e2d\u7565\n    /*36*/ test( \"6822dcb\", \"*invalid*\" );\n}\n\n\n\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u7b26\u53f7\u306a\u306e\u3067\u3001\u30d3\u30c3\u30c8\u304c\u30c4\u30ea\u30fc\u69cb\u9020\u3092\u306a\u3057\u3066\u3044\u308b\u3002\n\u30c4\u30ea\u30fc\u69cb\u9020\u3092\u305d\u306e\u307e\u307e\u95a2\u6570\u547c\u3073\u51fa\u3057\u306e\u30c4\u30ea\u30fc\u306b\u3057\u3066\u307f\u305f\u3002\n\u305d\u306e\u307e\u307e\u66f8\u304f\u3068\u81a8\u5927\u306a\u91cf\u306b\u306a\u308b\u306e\u3067\u3044\u3093\u3061\u304d\u81ed\u3044\u30de\u30af\u30ed\u3067\u884c\u6570\u3092\u6e1b\u3089\u3057\u3066\u307f\u305f\u3002\n\u5f53\u521d\u306f\u81a8\u5927\u306a if \u6587\u3092\u66f8\u3044\u3066\u3084\u308d\u3046\u304b\u3068\u601d\u3063\u3066\u9014\u4e2d\u307e\u3067\u66f8\u3044\u305f\u3093\u3060\u3051\u3069\u3001\u81a8\u5927\u306b\u306a\u308a\u3059\u304e\u308b\u306e\u3067\u3084\u3081\u305f\u3002\u81ea\u52d5\u751f\u6210\u3068\u3044\u3046\u6848\u3082\u3042\u3063\u305f\u3051\u3069\u3001\u4eca\u56de\u306f\u95a2\u6570\u547c\u3073\u51fa\u3057\uff0b\u30de\u30af\u30ed\u3067\u6211\u6162\u3002\nC11 \u7279\u6709\u306e\u6a5f\u80fd\u306f\u4f7f\u3063\u3066\u306a\u3044\u3068\u601d\u3046\u3051\u3069\u3001C99 \u306f\u5229\u7528\u3057\u3066\u3044\u308b\u3002\u53ef\u5909\u9577\u914d\u5217\u3068\u304b\u3002\n\u30a4\u30d9\u30f3\u30c8\u30da\u30fc\u30b8\u306f http://atnd.org/events/36783 \u3002\n\u554f\u984c\u306f http://nabetani.sakura.ne.jp/hena/ord8entco/ \u3002\n\u89e3\u7b54\u30ea\u30f3\u30af\u96c6\u306f http://qiita.com/items/24b9be4ee3bae4c89a95 \u3002\n\n\u3067\u3002\n\nC\u8a00\u8a9e\u3067\u66f8\u3044\u3066\u307f\u305f\u3002\n\n```c:entco.c\n// compiled with \"clang -std=c11\"\n#include <stdio.h>\n#include <string.h>\n\nstruct read_state\n{\n    char const * src;\n    int pos;\n    _Bool ok;\n};\n\nint char_to_num( char c )\n{\n    return ( '0'<=c && c<='9' )\n        ? c-'0'\n        : c-'a'+10;\n}\n\n_Bool read( struct read_state * rs )\n{\n    if ( ! rs->ok ){\n        return 0;\n    }\n    int pos = rs->pos;\n    ++rs->pos;\n    char c = rs->src[ pos/4 ];\n    if ( ! c ){\n        rs->ok=0;\n        return 0;\n    }\n    return !( char_to_num(c) & (1 << ( pos%4 ) ) );\n}\n\n#define M( proc, zero, one )\\\nchar proc( struct read_state * rs ){  return read(rs) ? (zero) : (one);  }\n\nchar read_010110( struct read_state * rs )\n{\n    if ( read(rs) ){\n        rs->ok=0;\n        return 0;\n    } else {\n        return 'c';\n    }\n}\n\nM( read_01011, read_010110(rs), 'l' );\nM( read_0101, 'd', read_01011(rs));\nM( read_001, 's', 'n' );\nM( read_010, 'i', read_0101(rs) );\nM( read_011, 'o', 'a' );\nM( read_110, 'r', 'h' );\nM( read_00, 't', read_001(rs) );\nM( read_01, read_010(rs), read_011(rs) );\nM( read_11, read_110(rs), 0 );\nM( read_0, read_00(rs), read_01(rs) );\nM( read_1, 'e', read_11(rs) );\nM( read_char, read_0(rs), read_1(rs) );\n#undef M\n\nvoid solve( char const * src, char * actual )\n{\n    struct read_state rs={ src, 0, 1 };\n    for( int pos=0 ; ; ++pos ){\n        char c=read_char( &rs );\n        if ( ! rs.ok ){\n            strcpy( actual, \"*invalid*\" );\n            return;\n        }\n        if ( c==0 ){\n            char numtext[13]={0};\n            sprintf( numtext, \":%d\", rs.pos );\n            strcpy( actual+pos, numtext );\n            return;\n        }\n        actual[ pos ] = c;\n    }\n}\n\nvoid test( char const * src, char const * expected )\n{\n    int read=0;\n    char actual[ strlen( src )*2+13 ];\n    solve( src, actual );\n    printf( \"%s -> %s ( %s ) %s\\n\", \n        src, actual, expected, \n        strcmp( actual, expected ) ? \"***NG***\" : \"ok\" );\n}\n\nint main()\n{\n    /*0*/ test( \"16d9d4fbd\", \"ethanol:30\" );\n\t// \u4e2d\u7565\n    /*36*/ test( \"6822dcb\", \"*invalid*\" );\n}\n```\n\n\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u7b26\u53f7\u306a\u306e\u3067\u3001\u30d3\u30c3\u30c8\u304c\u30c4\u30ea\u30fc\u69cb\u9020\u3092\u306a\u3057\u3066\u3044\u308b\u3002\n\u30c4\u30ea\u30fc\u69cb\u9020\u3092\u305d\u306e\u307e\u307e\u95a2\u6570\u547c\u3073\u51fa\u3057\u306e\u30c4\u30ea\u30fc\u306b\u3057\u3066\u307f\u305f\u3002\n\u305d\u306e\u307e\u307e\u66f8\u304f\u3068\u81a8\u5927\u306a\u91cf\u306b\u306a\u308b\u306e\u3067\u3044\u3093\u3061\u304d\u81ed\u3044\u30de\u30af\u30ed\u3067\u884c\u6570\u3092\u6e1b\u3089\u3057\u3066\u307f\u305f\u3002\n\n\u5f53\u521d\u306f\u81a8\u5927\u306a if \u6587\u3092\u66f8\u3044\u3066\u3084\u308d\u3046\u304b\u3068\u601d\u3063\u3066\u9014\u4e2d\u307e\u3067\u66f8\u3044\u305f\u3093\u3060\u3051\u3069\u3001\u81a8\u5927\u306b\u306a\u308a\u3059\u304e\u308b\u306e\u3067\u3084\u3081\u305f\u3002\u81ea\u52d5\u751f\u6210\u3068\u3044\u3046\u6848\u3082\u3042\u3063\u305f\u3051\u3069\u3001\u4eca\u56de\u306f\u95a2\u6570\u547c\u3073\u51fa\u3057\uff0b\u30de\u30af\u30ed\u3067\u6211\u6162\u3002\n\nC11 \u7279\u6709\u306e\u6a5f\u80fd\u306f\u4f7f\u3063\u3066\u306a\u3044\u3068\u601d\u3046\u3051\u3069\u3001C99 \u306f\u5229\u7528\u3057\u3066\u3044\u308b\u3002\u53ef\u5909\u9577\u914d\u5217\u3068\u304b\u3002", "tags": ["C", "\u3069\u3046\u66f8\u304f", "yhpg"]}