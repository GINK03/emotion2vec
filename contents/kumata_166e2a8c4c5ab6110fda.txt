{"context": "\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n\u904b\u7528\u3057\u3066\u3044\u308b\u30b5\u30a4\u30c8\u3067\u306fnginx\u306e\u30ed\u30b0\u306b\u30e6\u30cb\u30fc\u30af\u306a\u30e6\u30fc\u30b6ID(uid)\u3092\u6b8b\u3057\u3066\u3044\u3066elasticsearch\u306b\u3082\u30ed\u30b0\u3092\u6d41\u3057\u8fbc\u3093\u3067\u3044\u305f\u306e\u3067\u3001kibana\u3067DAU(\u4ed6\u306b\u3082HAU,WAU,MAU)\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u306f\u7c21\u5358\u306b\u3067\u304d\u3066\u3044\u305f\u3002\n\u305f\u3060DAU\u304c\u300c\u65b0\u898f\u53c2\u52a0\u8005\uff0b\u3053\u308c\u307e\u3067\u6765\u3066\u3044\u305f\u4eba\u300d\u3068\u3001\u307e\u3068\u307e\u308a\u3059\u304e\u3066\u3044\u308b\u611f\u3058\u304c\u3042\u308a\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3069\u306e\u304f\u3089\u3044\u306e\u983b\u5ea6\u3067\u30b5\u30a4\u30c8\u306b\u6765\u3066\u304f\u308c\u3066\u3044\u308b\u304b\u3067\u30e6\u30fc\u30b6\u3092\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3066DAU\u3092\u5206\u89e3\u3057\u305f\u3082\u306e\u3092\u898b\u305f\u304f\u306a\u3063\u305f\u3002\n\n\u307b\u307c\u6bce\u65e5\u304d\u3066\u304f\u308c\u308b\u4eba\n1\u65e5\u4f55\u56de\u3082\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u308b\u4eba\n\u521d\u56de\u53c2\u52a0\u306e\u307f\u306e\u4eba\n\n\n\u8a2d\u5b9a\u3059\u308b\u3082\u306e\n\nnginx\u306b\u30a2\u30af\u30bb\u30b9\u304c\u6765\u308b\u5ea6\u306bRedis\u306b\u7528\u610f\u3057\u305f\u30e6\u30fc\u30b6\u5225\u306e\u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u3092\u66f4\u65b0\u3059\u308b\u3002\nRedis\u304b\u3089\u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u3092\u8aad\u307f\u53d6\u308anginx\u306e\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u306b\u30ab\u30a6\u30f3\u30c8\u6570\u3092\u8a18\u9332\u3059\u308b\u3002\nElasticSearch\u306b\u30ed\u30b0\u3092\u53d6\u308a\u8fbc\u307fvisualization\u3067\u96c6\u8a08\u3057\u3066DAU\u3092\u7d30\u5206\u5316\u3057\u3066\u8868\u793a\u3059\u308b\u3002\n\nnginx\u3067\u51e6\u7406\u3059\u308b\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u30bf\u30a4\u30e0\u306e\u4f4e\u4e0b\u304c\u8003\u3048\u3089\u308c\u308b\u306e\u3067\u672c\u5f53\u306f\u30ed\u30b0\u3092ElasticSearch\u306b\u6d41\u3057\u8fbc\u3080\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u306e\u51e6\u7406\u3059\u308b\u307b\u3046\u304c\u826f\u3044\u3068\u306f\u601d\u3046\u304c\u3001\u4eca\u56de\u306f\u305d\u308c\u3092\u8a31\u5bb9\u3057\u305f\u3002\n\nnginx\u306e\u8a2d\u5b9a\nngx.location.capture\u3084redis\u3078\u306e\u63a5\u7d9a\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067openresty\u3092\u4f7f\u3046\u3002\n\nnginx.conf\uff08\u90e8\u5206\u629c\u7c8b\uff09\n\njson_log_fields main 'time_local'\n              'x-uid'\n              'cnt_hour'\n              'cnt_dow'\n              'cnt_day'\n              'cnt_sec'\n\nset $uid \"unknown\";\nif ($x-uid ~ ([0-9a-z]+)) {\n  set $uid $1;\n}\nstrftime hour \"%H\"; # \u6642\u30000-23\nstrftime dow \"%w\" # \u66dc\u65e5 0-6\nstrftime day \"%d\"; # \u65e5\u4ed8 01-31\nstrftime sec \"%S\"; # \u79d2 01-59\nset $cnt_hour \"0\";\nset $cnt_dow \"0\";\nset $cnt_day \"0\";\nset $cnt_sec \"0\";\nset $res \"-\";\n\nlocation /update_counter {\n  internal;\n  redis2_raw_queries 2 \"select 15\\r\\nevalsha 7d935b5da11543863d3de7e8af785052aebff453 1 $uid $sec $hour $dow $day\\r\\n\";\n  redis2_pass redis_server;\n}\n\nlocation /get_counter {\n  internal;\n  redis2_raw_queries 2 \"select 15\\r\\nevalsha b1c165f798a1a3df36bb5f513a7a59efde68d941 1 $uid\\r\\n\";\n  redis2_pass redis_server;\n}\n\nlocation / {\n  access_by_lua '\n    ngx.location.capture(\"/update_counter\")\n    local res = ngx.location.capture(\"/get_counter\")\n    ngx.var.res = res.body\n    local m, err = ngx.re.match(res.body, \"([0-9]+):([0-9]+):([0-9]+):([0-9]+)\")\n    if m then\n      ngx.var.cnt_sec = m[1]\n      ngx.var.cnt_hour = m[2]\n      ngx.var.cnt_dow = m[3]\n      ngx.var.cnt_day = m[4]\n    end\n  ';\n  limit_req zone=one burst=2;\n  proxy_pass http://puma-app;\n}\n\nevalsha\u3092\u4f7f\u3063\u3066\u5f8c\u8ff0\u306eredis\u306b\u767b\u9332\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3002\n\n\n/update_counter\n\nuid\u5225\u306b\u6301\u3063\u3066\u3044\u308b\u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u3092\u66f4\u65b0\u3059\u308b\u3002\n\n\n\n/get_counter\n\nuid\u5225\u306b\u6301\u3063\u3066\u3044\u308b\u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n\n\n/location\n\n/update_counter /get_counter\u3092\u5b9f\u884c\u3057\u3066\u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u3092$cnt_sec|hour|dow|day\u306b\u8a2d\u5b9a\u3059\u308b(\u30ed\u30b0\u306b\u305d\u306e\u307e\u307e\u51fa\u529b\u3055\u308c\u308b)\n\n\n\n\nredis\u306e\u30ab\u30a6\u30f3\u30bf\n\nTTL\u4ed8\u304d\u3067\u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u3092\u30bb\u30c3\u30c8\u3059\u308b\n\n\u76f4\u8fd1\u4e00\u5206\u306e\u30a2\u30af\u30bb\u30b9\u3000\u30ad\u30fc\u540d: \"$uid:sec:[0-59]\" \u5024: 1\n\u76f4\u8fd124\u6642\u9593\u306e\u30a2\u30af\u30bb\u30b9\u3000\u30ad\u30fc\u540d: \"$uid:hour:[0-23]\" \u5024: 1\n\u76f4\u8fd11\u9031\u9593\u306e\u30a2\u30af\u30bb\u30b9\u3000\u30ad\u30fc\u540d: \"$uid:dow:[0-6]\" \u5024: 1\n\u76f4\u8fd130\u65e5\u306e\u30a2\u30af\u30bb\u30b9\u3000\u30ad\u30fc\u540d: \"$uid:day:[01-31]\" \u5024: 1\n\nscript load \"\n redis.call('setex', KEYS[1] .. ':sec:' .. ARGV[1], 60, 1)\n redis.call('setex', KEYS[1] .. ':hour:' .. ARGV[2], 86400, 1)\n redis.call('setex', KEYS[1] .. ':dow:' .. ARGV[3], 604800, 1)\n redis.call('setex', KEYS[1] .. ':day:' .. ARGV[4],2592000, 1)\n\"\n7d935b5da11543863d3de7e8af785052aebff453\n\n\n\u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u3092\u8aad\u307f\u51fa\u3059\n\n\n\u30ab\u30a6\u30f3\u30bf\u3092\u8aad\u307f\u51fa\u3059\n\n\u623b\u308a\u5024\n\n\u76f4\u8fd11\u5206\u4ee5\u5185\u306e\u30a2\u30af\u30bb\u30b9\u6570:\u76f4\u8fd124\u6642\u9593\u4ee5\u5185\u306e\u30a2\u30af\u30bb\u30b9\u6570:\u76f4\u8fd17\u65e5\u4ee5\u5185\u306e\u30a2\u30af\u30bb\u30b9\u6570:\u76f4\u8fd130\u65e5\u4ee5\u5185\u306e\u30a2\u30af\u30bb\u30b9\u6570\n(\u30a2\u30af\u30bb\u30b9\u6570\u306f\u5408\u8a08\u5024\u3067\u306f\u306a\u304f\u3066\u5358\u4f4d\u3042\u305f\u308a\u306e\u30e6\u30cb\u30fc\u30af\u30ab\u30a6\u30f3\u30c8\u3068\u3059\u308b\u3002\u4f8b\u3048\u3070\u91d1\u66dc\u65e51\u56de\u3001\u571f\u66dc\u65e5100\u56de\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30821\u9031\u9593\u306e\u30a2\u30af\u30bb\u30b9\u306f2\uff09\n\n\nscript load \"\n local sec = 0\n local hour = 0\n local dow = 0\n local day = 0\n local ret = nil\n for i = 0,59 do\n   ret = redis.call('get', KEYS[1] .. ':sec:' .. string.format('%02d', i))\n   if ret then\n    sec = sec + 1\n   end\n end\n for i = 0,23 do\n   ret = redis.call('get', KEYS[1] .. ':hour:' .. string.format('%02d', i))\n   if ret then\n    hour = hour + 1\n   end\n end\n for i = 0,6 do\n   ret = redis.call('get', KEYS[1] .. ':dow:' .. string.format('%1d', i))\n   if ret then\n    dow = dow + 1\n   end\n end\n for i = 1,31 do\n   ret = redis.call('get', KEYS[1] .. ':day:' .. string.format('%02d', i))\n   if ret then\n    day = day + 1\n   end\n end\n return string.format('%d:%d:%d:%d', sec, hour, dow, day)\n\"\n\nb1c165f798a1a3df36bb5f513a7a59efde68d941\n\n\n\u30e6\u30fc\u30b61\u56de\u306e\u30a2\u30af\u30bb\u30b9\u3067redis\u306e\u64cd\u4f5c\u304c120\u56de\u4ee5\u4e0a\u767a\u751f\u3057\u3066\u3044\u308b\u306e\u306f\u307e\u305a\u3044\u304b\u3002\n\n\nkibana\u3067\u306evisualization\n\n\u4f8b) \u76f4\u8fd1\u4e00\u9031\u9593\u306e\u3046\u3061\u4f55\u56de\u304d\u3066\u308b\u304b\u3067DAU\u3092\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3066\u8868\u793a\u3059\u308b\n\n\nY-axis\u3000x-uid\u3067unique count\nX-axis\u3000\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\nsplit bars -> Histgram -> cnt_dow -> interval 1\n\n\n\n## \u3084\u308a\u305f\u3044\u3053\u3068\n\n\u904b\u7528\u3057\u3066\u3044\u308b\u30b5\u30a4\u30c8\u3067\u306fnginx\u306e\u30ed\u30b0\u306b\u30e6\u30cb\u30fc\u30af\u306a\u30e6\u30fc\u30b6ID(uid)\u3092\u6b8b\u3057\u3066\u3044\u3066elasticsearch\u306b\u3082\u30ed\u30b0\u3092\u6d41\u3057\u8fbc\u3093\u3067\u3044\u305f\u306e\u3067\u3001kibana\u3067DAU(\u4ed6\u306b\u3082HAU,WAU,MAU)\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u306f\u7c21\u5358\u306b\u3067\u304d\u3066\u3044\u305f\u3002\n\n\u305f\u3060DAU\u304c\u300c\u65b0\u898f\u53c2\u52a0\u8005\uff0b\u3053\u308c\u307e\u3067\u6765\u3066\u3044\u305f\u4eba\u300d\u3068\u3001\u307e\u3068\u307e\u308a\u3059\u304e\u3066\u3044\u308b\u611f\u3058\u304c\u3042\u308a\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3069\u306e\u304f\u3089\u3044\u306e\u983b\u5ea6\u3067\u30b5\u30a4\u30c8\u306b\u6765\u3066\u304f\u308c\u3066\u3044\u308b\u304b\u3067\u30e6\u30fc\u30b6\u3092\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3066DAU\u3092\u5206\u89e3\u3057\u305f\u3082\u306e\u3092\u898b\u305f\u304f\u306a\u3063\u305f\u3002\n\n* \u307b\u307c\u6bce\u65e5\u304d\u3066\u304f\u308c\u308b\u4eba\n* 1\u65e5\u4f55\u56de\u3082\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u308b\u4eba\n* \u521d\u56de\u53c2\u52a0\u306e\u307f\u306e\u4eba\n\n## \u8a2d\u5b9a\u3059\u308b\u3082\u306e\n\n1. nginx\u306b\u30a2\u30af\u30bb\u30b9\u304c\u6765\u308b\u5ea6\u306bRedis\u306b\u7528\u610f\u3057\u305f\u30e6\u30fc\u30b6\u5225\u306e\u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u3092\u66f4\u65b0\u3059\u308b\u3002\n1. Redis\u304b\u3089\u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u3092\u8aad\u307f\u53d6\u308anginx\u306e\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u306b\u30ab\u30a6\u30f3\u30c8\u6570\u3092\u8a18\u9332\u3059\u308b\u3002\n1. ElasticSearch\u306b\u30ed\u30b0\u3092\u53d6\u308a\u8fbc\u307fvisualization\u3067\u96c6\u8a08\u3057\u3066DAU\u3092\u7d30\u5206\u5316\u3057\u3066\u8868\u793a\u3059\u308b\u3002\n\nnginx\u3067\u51e6\u7406\u3059\u308b\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u30bf\u30a4\u30e0\u306e\u4f4e\u4e0b\u304c\u8003\u3048\u3089\u308c\u308b\u306e\u3067\u672c\u5f53\u306f\u30ed\u30b0\u3092ElasticSearch\u306b\u6d41\u3057\u8fbc\u3080\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u306e\u51e6\u7406\u3059\u308b\u307b\u3046\u304c\u826f\u3044\u3068\u306f\u601d\u3046\u304c\u3001\u4eca\u56de\u306f\u305d\u308c\u3092\u8a31\u5bb9\u3057\u305f\u3002\n\n### nginx\u306e\u8a2d\u5b9a\n\nngx.location.capture\u3084redis\u3078\u306e\u63a5\u7d9a\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067openresty\u3092\u4f7f\u3046\u3002\n\n* nginx.conf\uff08\u90e8\u5206\u629c\u7c8b\uff09\n\n```\njson_log_fields main 'time_local'\n              'x-uid'\n              'cnt_hour'\n              'cnt_dow'\n              'cnt_day'\n              'cnt_sec'\n              \nset $uid \"unknown\";\nif ($x-uid ~ ([0-9a-z]+)) {\n  set $uid $1;\n}\nstrftime hour \"%H\"; # \u6642\u30000-23\nstrftime dow \"%w\" # \u66dc\u65e5 0-6\nstrftime day \"%d\"; # \u65e5\u4ed8 01-31\nstrftime sec \"%S\"; # \u79d2 01-59\nset $cnt_hour \"0\";\nset $cnt_dow \"0\";\nset $cnt_day \"0\";\nset $cnt_sec \"0\";\nset $res \"-\";\n\nlocation /update_counter {\n  internal;\n  redis2_raw_queries 2 \"select 15\\r\\nevalsha 7d935b5da11543863d3de7e8af785052aebff453 1 $uid $sec $hour $dow $day\\r\\n\";\n  redis2_pass redis_server;\n}\n\nlocation /get_counter {\n  internal;\n  redis2_raw_queries 2 \"select 15\\r\\nevalsha b1c165f798a1a3df36bb5f513a7a59efde68d941 1 $uid\\r\\n\";\n  redis2_pass redis_server;\n}\n\nlocation / {\n  access_by_lua '\n    ngx.location.capture(\"/update_counter\")\n    local res = ngx.location.capture(\"/get_counter\")\n    ngx.var.res = res.body\n    local m, err = ngx.re.match(res.body, \"([0-9]+):([0-9]+):([0-9]+):([0-9]+)\")\n    if m then\n      ngx.var.cnt_sec = m[1]\n      ngx.var.cnt_hour = m[2]\n      ngx.var.cnt_dow = m[3]\n      ngx.var.cnt_day = m[4]\n    end\n  ';\n  limit_req zone=one burst=2;\n  proxy_pass http://puma-app;\n}\n```\n\nevalsha\u3092\u4f7f\u3063\u3066\u5f8c\u8ff0\u306eredis\u306b\u767b\u9332\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3002\n\n* /update_counter\n  * uid\u5225\u306b\u6301\u3063\u3066\u3044\u308b\u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u3092\u66f4\u65b0\u3059\u308b\u3002\n\n* /get_counter\n  * uid\u5225\u306b\u6301\u3063\u3066\u3044\u308b\u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n* /location\n  * /update_counter /get_counter\u3092\u5b9f\u884c\u3057\u3066\u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u3092$cnt_sec|hour|dow|day\u306b\u8a2d\u5b9a\u3059\u308b(\u30ed\u30b0\u306b\u305d\u306e\u307e\u307e\u51fa\u529b\u3055\u308c\u308b)\n\n### redis\u306e\u30ab\u30a6\u30f3\u30bf\n\n#### TTL\u4ed8\u304d\u3067\u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u3092\u30bb\u30c3\u30c8\u3059\u308b\n\n* \u76f4\u8fd1\u4e00\u5206\u306e\u30a2\u30af\u30bb\u30b9\u3000\u30ad\u30fc\u540d: \"$uid:sec:[0-59]\" \u5024: 1\n* \u76f4\u8fd124\u6642\u9593\u306e\u30a2\u30af\u30bb\u30b9\u3000\u30ad\u30fc\u540d: \"$uid:hour:[0-23]\" \u5024: 1\n* \u76f4\u8fd11\u9031\u9593\u306e\u30a2\u30af\u30bb\u30b9\u3000\u30ad\u30fc\u540d: \"$uid:dow:[0-6]\" \u5024: 1\n* \u76f4\u8fd130\u65e5\u306e\u30a2\u30af\u30bb\u30b9\u3000\u30ad\u30fc\u540d: \"$uid:day:[01-31]\" \u5024: 1\n\n```\nscript load \"\n redis.call('setex', KEYS[1] .. ':sec:' .. ARGV[1], 60, 1)\n redis.call('setex', KEYS[1] .. ':hour:' .. ARGV[2], 86400, 1)\n redis.call('setex', KEYS[1] .. ':dow:' .. ARGV[3], 604800, 1)\n redis.call('setex', KEYS[1] .. ':day:' .. ARGV[4],2592000, 1)\n\"\n7d935b5da11543863d3de7e8af785052aebff453\n```\n\n#### \u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u3092\u8aad\u307f\u51fa\u3059\n\n* \u30ab\u30a6\u30f3\u30bf\u3092\u8aad\u307f\u51fa\u3059\n\n  * \u623b\u308a\u5024\n  \n    \u76f4\u8fd11\u5206\u4ee5\u5185\u306e\u30a2\u30af\u30bb\u30b9\u6570:\u76f4\u8fd124\u6642\u9593\u4ee5\u5185\u306e\u30a2\u30af\u30bb\u30b9\u6570:\u76f4\u8fd17\u65e5\u4ee5\u5185\u306e\u30a2\u30af\u30bb\u30b9\u6570:\u76f4\u8fd130\u65e5\u4ee5\u5185\u306e\u30a2\u30af\u30bb\u30b9\u6570\n    (\u30a2\u30af\u30bb\u30b9\u6570\u306f\u5408\u8a08\u5024\u3067\u306f\u306a\u304f\u3066\u5358\u4f4d\u3042\u305f\u308a\u306e\u30e6\u30cb\u30fc\u30af\u30ab\u30a6\u30f3\u30c8\u3068\u3059\u308b\u3002\u4f8b\u3048\u3070\u91d1\u66dc\u65e51\u56de\u3001\u571f\u66dc\u65e5100\u56de\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30821\u9031\u9593\u306e\u30a2\u30af\u30bb\u30b9\u306f2\uff09\n\n```\nscript load \"\n local sec = 0\n local hour = 0\n local dow = 0\n local day = 0\n local ret = nil\n for i = 0,59 do\n   ret = redis.call('get', KEYS[1] .. ':sec:' .. string.format('%02d', i))\n   if ret then\n    sec = sec + 1\n   end\n end\n for i = 0,23 do\n   ret = redis.call('get', KEYS[1] .. ':hour:' .. string.format('%02d', i))\n   if ret then\n    hour = hour + 1\n   end\n end\n for i = 0,6 do\n   ret = redis.call('get', KEYS[1] .. ':dow:' .. string.format('%1d', i))\n   if ret then\n    dow = dow + 1\n   end\n end\n for i = 1,31 do\n   ret = redis.call('get', KEYS[1] .. ':day:' .. string.format('%02d', i))\n   if ret then\n    day = day + 1\n   end\n end\n return string.format('%d:%d:%d:%d', sec, hour, dow, day)\n\"\n\nb1c165f798a1a3df36bb5f513a7a59efde68d941\n```\n\n* \u30e6\u30fc\u30b61\u56de\u306e\u30a2\u30af\u30bb\u30b9\u3067redis\u306e\u64cd\u4f5c\u304c120\u56de\u4ee5\u4e0a\u767a\u751f\u3057\u3066\u3044\u308b\u306e\u306f\u307e\u305a\u3044\u304b\u3002\n\n### kibana\u3067\u306evisualization\n\n* \u4f8b) \u76f4\u8fd1\u4e00\u9031\u9593\u306e\u3046\u3061\u4f55\u56de\u304d\u3066\u308b\u304b\u3067DAU\u3092\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3066\u8868\u793a\u3059\u308b\n  * Y-axis\u3000x-uid\u3067unique count\n  * X-axis\u3000\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\n    * split bars -> Histgram -> cnt_dow -> interval 1\n\n", "tags": ["nginx", "Redis"]}