{"context": "\n\n\u7d4c\u7def\nArduino\u3067OSC\u3092\u4f7f\u3063\u3066Max\u3084oF\u3068\u306e\u9023\u643a\u3092\u56f3\u308d\u3046\u3068EthernetShield2\u3092\u8cfc\u5165\u3057\u305f\u304cEthernet2.h\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u3068\u30a8\u30e9\u30fc\u3092\u5410\u3044\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u901a\u3089\u306a\u3044\u3002\nArdOSC\u3084OSCuino\u3092\u8abf\u3079\u306a\u304c\u3089\u8a66\u3057\u3066\u307f\u305f\u304c\u3001Ethernet.h\u4f7f\u7528\u306e\u8a18\u4e8b\u306f\u898b\u3064\u304b\u3063\u305f\u304c2\u306e\u306f\u306a\u304b\u3063\u305f\u3002\n\n\u4f7f\u3063\u305f\u3082\u306e\n\nArduino IDE 1.7.9 (Arduino.org:\u3053\u306e\u30b5\u30a4\u30c8\u3058\u3083\u306a\u3044\u3068\u6700\u65b0\u7248DL\u3067\u304d\u306a\u3044)\nOSC\u30e9\u30a4\u30d6\u30e9\u30ea(github)\nArduino UNO\nArduino Ethernet Shield2\nMac osx10.10.5(DHCP\u624b\u5165\u529b\u3067IP\u8a2d\u5b9a\u3057\u307e\u3057\u305f)\n\n\n\u30b3\u30fc\u30c9\nsetup()\u524d\u306e\u8a2d\u5b9a\n#include <OSCMessage.h>\n\n#include <SPI.h>\n#include <Ethernet2.h>\n#include <EthernetUdp2.h>\n\nbyte mac[] = {\n  0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF //\u30b7\u30fc\u30eb\u30c9\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308bMac\u30a2\u30c9\u30ec\u30b9\n};\nIPAddress ip(192, 168, 1, 177);\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u8a2d\u5b9a\u3092\nIPAddress gateway(192, 168, 1, 1);   //\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u8a2d\u5b9a\u3092\nIPAddress subnet(255, 255, 0, 0);    //\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u8a2d\u5b9a\u3092\n\nunsigned int localPort = 8888;\nbyte destIP[] = {192, 168, 1, 10};\u3000\u3000\u3000\u3000\u3000//\u76f8\u624b\u306eIP\u30a2\u30c9\u30ec\u30b9\nint destPort = 9001;\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//send\u30dd\u30fc\u30c8\n\nEthernetUDP Udp;\nEthernetServer server(23);\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//Example\u3067\u3042\u3063\u305f\u306e\u3067\u66f8\u3044\u3066\u3042\u308b\u304c\u3088\u304f\u308f\u304b\uff52\n\nsetup\uff08\uff09\u3001loop()\u306e\u8a2d\u5b9a\nvoid setup() {\n  // UDP\u306a\u3069\u306e\u521d\u671f\u8a2d\u5b9a\n  Ethernet.begin(mac, ip, gateway, subnet);\n  Udp.begin(localPort);\n\n  Serial.begin(9600);\n\n  Serial.println(Ethernet.localIP());\u3000//IP\u53d6\u308c\u3066\u308b\u304b\u78ba\u8a8d\u7528\n}\n\nvoid loop() {\n  EthernetClient client = server.available(); //\u3069\u3063\u304b\u3067\u3053\u308c\u3084\u3063\u3066\u306a\u3044\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3063\u3066\u306e\u3092\u8aad\u3093\u3060\u6c17\u304c\u3059\u308b\n\n  OSCMessage meg(\"/test\"); //OSC\u9001\u4fe1\u5185\u5bb9\u521d\u671f\u8a2d\u5b9a\n\n  int a = 0;\n  meg.add(a);\u3000//Send\u3057\u305f\u3044\u5185\u5bb9\u3092\u8a2d\u5b9a\n  Udp.beginPacket(destIP, destPort);\u3000\n  meg.send(Udp);\n  Udp.endPacket();\n\n\u3000\u3000\u3000\u3000\u3000a++;\n\n  delay(10);\n\n}\n\n\u3053\u308c\u3067Max/msp\u5074\u3067\u53d7\u4fe1\u3092\u78ba\u8a8d\u3002Arduino\u304b\u3089Send\u3057\u305f\u304b\u3063\u305f\u306e\u3067Recieve\u306f\u307e\u3060\u8abf\u3079\u3066\u306a\u3044\u3067\u3059\u3002\n\u3068\u308a\u3042\u3048\u305a\u3053\u308c\u3067EthernetSheild2\u3067\u3082OSC\u4f7f\u3048\u305d\u3046\u306a\u3053\u3068\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\n\u4ed6\u306b\u3082\u3084\u308a\u65b9\u3042\u3063\u305f\u308a\u3001\u306a\u3093\u304b\u3053\u3053\u3053\u3046\u3057\u305f\u3089\u306a\u3069\u3042\u308c\u3070\u662f\u975e\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3055\u3044\u3002\n\n\u8ffd\u8a18\nOSC\u30a2\u30c9\u30ec\u30b9\u306e\u30eb\u30fc\u30c8\u5206\u3051\u308b\u65b9\u6cd5\nvoid loop() {\n  EthernetClient client = server.available(); //\u3069\u3063\u304b\u3067\u3053\u308c\u3084\u3063\u3066\u306a\u3044\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3063\u3066\u306e\u3092\u8aad\u3093\u3060\u6c17\u304c\u3059\u308b\n\n  OSCMessage meg(\"/{test0,test1,test2}\"); //OSC\u9001\u4fe1\u5185\u5bb9\u521d\u671f\u8a2d\u5b9a {}\u3067\u30a2\u30c9\u30ec\u30b9\u30d1\u30bf\u30fc\u30f3\u5206\u3051\n\n  int a = 0;\n  Udp.beginPacket(destIP, destPort);\u3000  \n  if(a>0){\n    meg.setAddress(\"/test0\");\n    meg.add(a);\u3000//Send\u3057\u305f\u3044\u5185\u5bb9\u3092\u8a2d\u5b9a\n  }\n  if(a>10){\n    meg.setAddress(\"/test1\");\n    meg.add(a);\u3000//Send\u3057\u305f\u3044\u5185\u5bb9\u3092\u8a2d\u5b9a\n  }\n  if(a>20){\n    meg.setAddress(\"/test2\");\n    meg.add(a);\u3000//Send\u3057\u305f\u3044\u5185\u5bb9\u3092\u8a2d\u5b9a\n  }\n  meg.send(Udp);\n  Udp.endPacket();\n\n\u3000\u3000\u3000\u3000\u3000a++;\n\n  delay(10);\n\n\u7684\u306a\u611f\u3058\u3067\u3068\u308a\u3042\u3048\u305a\u901a\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\nSend\u5185\u5bb9\u306b\u95a2\u3057\u3066\u306f\u7c21\u7565\u5316\u3057\u3066\u3044\u308b\u306e\u3067\u3061\u3087\u3063\u3068\u8a66\u3057\u3066\u306a\u3044\u3067\u3059\u3002\u3059\u307f\u307e\u305b\u3093\u3002\u305f\u3060\u30a2\u30c9\u30ec\u30b9\u306e\u632f\u308a\u5206\u3051\u65b9\u3001setAddress\u3067\u5207\u308a\u66ff\u3048\u3063\u3066\u3044\u3046\u306e\u306f\u554f\u984c\u306a\u304f\u4f7f\u3048\u307e\u3057\u305f\u3002\n# \u7d4c\u7def\n Arduino\u3067OSC\u3092\u4f7f\u3063\u3066Max\u3084oF\u3068\u306e\u9023\u643a\u3092\u56f3\u308d\u3046\u3068EthernetShield2\u3092\u8cfc\u5165\u3057\u305f\u304cEthernet2.h\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u3068\u30a8\u30e9\u30fc\u3092\u5410\u3044\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u901a\u3089\u306a\u3044\u3002\nArdOSC\u3084OSCuino\u3092\u8abf\u3079\u306a\u304c\u3089\u8a66\u3057\u3066\u307f\u305f\u304c\u3001Ethernet.h\u4f7f\u7528\u306e\u8a18\u4e8b\u306f\u898b\u3064\u304b\u3063\u305f\u304c2\u306e\u306f\u306a\u304b\u3063\u305f\u3002\n\n# \u4f7f\u3063\u305f\u3082\u306e\n* Arduino IDE 1.7.9 ([Arduino.org](http://www.arduino.org/):\u3053\u306e\u30b5\u30a4\u30c8\u3058\u3083\u306a\u3044\u3068\u6700\u65b0\u7248DL\u3067\u304d\u306a\u3044)\n* OSC\u30e9\u30a4\u30d6\u30e9\u30ea([github](https://github.com/CNMAT/OSC))\n* Arduino UNO\n* Arduino Ethernet Shield2\n* Mac osx10.10.5(DHCP\u624b\u5165\u529b\u3067IP\u8a2d\u5b9a\u3057\u307e\u3057\u305f)\n\n# \u30b3\u30fc\u30c9\n\nsetup()\u524d\u306e\u8a2d\u5b9a\n\n```java\n#include <OSCMessage.h>\n\n#include <SPI.h>\n#include <Ethernet2.h>\n#include <EthernetUdp2.h>\n\nbyte mac[] = {\n  0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF //\u30b7\u30fc\u30eb\u30c9\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308bMac\u30a2\u30c9\u30ec\u30b9\n};\nIPAddress ip(192, 168, 1, 177);\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u8a2d\u5b9a\u3092\nIPAddress gateway(192, 168, 1, 1);   //\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u8a2d\u5b9a\u3092\nIPAddress subnet(255, 255, 0, 0);    //\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u8a2d\u5b9a\u3092\n\nunsigned int localPort = 8888;\nbyte destIP[] = {192, 168, 1, 10};\u3000\u3000\u3000\u3000\u3000//\u76f8\u624b\u306eIP\u30a2\u30c9\u30ec\u30b9\nint destPort = 9001;\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//send\u30dd\u30fc\u30c8\n\nEthernetUDP Udp;\nEthernetServer server(23);\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//Example\u3067\u3042\u3063\u305f\u306e\u3067\u66f8\u3044\u3066\u3042\u308b\u304c\u3088\u304f\u308f\u304b\uff52\n```\n\nsetup\uff08\uff09\u3001loop()\u306e\u8a2d\u5b9a\n\n```java\nvoid setup() {\n  // UDP\u306a\u3069\u306e\u521d\u671f\u8a2d\u5b9a\n  Ethernet.begin(mac, ip, gateway, subnet);\n  Udp.begin(localPort);\n\n  Serial.begin(9600);\n\n  Serial.println(Ethernet.localIP());\u3000//IP\u53d6\u308c\u3066\u308b\u304b\u78ba\u8a8d\u7528\n}\n\nvoid loop() {\n  EthernetClient client = server.available(); //\u3069\u3063\u304b\u3067\u3053\u308c\u3084\u3063\u3066\u306a\u3044\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3063\u3066\u306e\u3092\u8aad\u3093\u3060\u6c17\u304c\u3059\u308b\n\n  OSCMessage meg(\"/test\"); //OSC\u9001\u4fe1\u5185\u5bb9\u521d\u671f\u8a2d\u5b9a\n  \n  int a = 0;\n  meg.add(a);\u3000//Send\u3057\u305f\u3044\u5185\u5bb9\u3092\u8a2d\u5b9a\n  Udp.beginPacket(destIP, destPort);\u3000\n  meg.send(Udp);\n  Udp.endPacket();\n  \n\u3000\u3000\u3000\u3000\u3000a++;\n\n  delay(10);\n\n}\n```\n\n\u3053\u308c\u3067Max/msp\u5074\u3067\u53d7\u4fe1\u3092\u78ba\u8a8d\u3002Arduino\u304b\u3089Send\u3057\u305f\u304b\u3063\u305f\u306e\u3067Recieve\u306f\u307e\u3060\u8abf\u3079\u3066\u306a\u3044\u3067\u3059\u3002\n\u3068\u308a\u3042\u3048\u305a\u3053\u308c\u3067EthernetSheild2\u3067\u3082OSC\u4f7f\u3048\u305d\u3046\u306a\u3053\u3068\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u4ed6\u306b\u3082\u3084\u308a\u65b9\u3042\u3063\u305f\u308a\u3001\u306a\u3093\u304b\u3053\u3053\u3053\u3046\u3057\u305f\u3089\u306a\u3069\u3042\u308c\u3070\u662f\u975e\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3055\u3044\u3002\n\n# \u8ffd\u8a18\nOSC\u30a2\u30c9\u30ec\u30b9\u306e\u30eb\u30fc\u30c8\u5206\u3051\u308b\u65b9\u6cd5\n\n```java\nvoid loop() {\n  EthernetClient client = server.available(); //\u3069\u3063\u304b\u3067\u3053\u308c\u3084\u3063\u3066\u306a\u3044\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3063\u3066\u306e\u3092\u8aad\u3093\u3060\u6c17\u304c\u3059\u308b\n\n  OSCMessage meg(\"/{test0,test1,test2}\"); //OSC\u9001\u4fe1\u5185\u5bb9\u521d\u671f\u8a2d\u5b9a {}\u3067\u30a2\u30c9\u30ec\u30b9\u30d1\u30bf\u30fc\u30f3\u5206\u3051\n\n  int a = 0;\n  Udp.beginPacket(destIP, destPort);\u3000  \n  if(a>0){\n    meg.setAddress(\"/test0\");\n    meg.add(a);\u3000//Send\u3057\u305f\u3044\u5185\u5bb9\u3092\u8a2d\u5b9a\n  }\n  if(a>10){\n    meg.setAddress(\"/test1\");\n    meg.add(a);\u3000//Send\u3057\u305f\u3044\u5185\u5bb9\u3092\u8a2d\u5b9a\n  }\n  if(a>20){\n    meg.setAddress(\"/test2\");\n    meg.add(a);\u3000//Send\u3057\u305f\u3044\u5185\u5bb9\u3092\u8a2d\u5b9a\n  }\n  meg.send(Udp);\n  Udp.endPacket();\n  \n\u3000\u3000\u3000\u3000\u3000a++;\n\n  delay(10);\n```\n\n\u7684\u306a\u611f\u3058\u3067\u3068\u308a\u3042\u3048\u305a\u901a\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\nSend\u5185\u5bb9\u306b\u95a2\u3057\u3066\u306f\u7c21\u7565\u5316\u3057\u3066\u3044\u308b\u306e\u3067\u3061\u3087\u3063\u3068\u8a66\u3057\u3066\u306a\u3044\u3067\u3059\u3002\u3059\u307f\u307e\u305b\u3093\u3002\u305f\u3060\u30a2\u30c9\u30ec\u30b9\u306e\u632f\u308a\u5206\u3051\u65b9\u3001setAddress\u3067\u5207\u308a\u66ff\u3048\u3063\u3066\u3044\u3046\u306e\u306f\u554f\u984c\u306a\u304f\u4f7f\u3048\u307e\u3057\u305f\u3002\n", "tags": ["Arduino", "OSC"]}