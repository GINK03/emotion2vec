{"tags": ["OpenCV", "\u753b\u50cf\u51e6\u7406", "C++"], "context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306fOpenCV Advent Calendar 2015\u306e5\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\u307e\u305f\uff0c\u524d\u56de\u306eOpenCV\u306e\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\uff0c\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u8868\u793a\u6a5f\u80fd\uff0c\u4f8b\u5916\u51e6\u7406\u6a5f\u80fd\u306e\u5185\u5bb9\u3068\n\u95a2\u9023\u304c\u3042\u308b\u306e\u3067\u4e8b\u524d\u306b\u4e00\u8aad\u9802\u304f\u3068\u7406\u89e3\u304c\u6df1\u307e\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff08\u30b9\u30c6\u30de\uff09\uff0e\n\n\u306f\u3058\u3081\u306b\nOpenCV\u306b\u306fAssert\u95a2\u9023\u306e\u95a2\u6570\u304c\u3044\u304f\u3064\u304b\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0cOpenCV\u304c\u63d0\u4f9b\u3059\u308bAssert\u95a2\u6570\u3068\u305d\u308c\u3089\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\nAssert\u3068\u306f\nAssert\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u5185\u306e\u77db\u76fe\u3092\u691c\u51fa\u3059\u308b\u305f\u3081\u306e\u30c7\u30d0\u30c3\u30b0\u6a5f\u80fd\u3067\u3059\uff0e\n\u307e\u305f\uff0cAssert\u3092\u4f7f\u3046\u3053\u3068\u3067\u300c\u3053\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3079\u304d\u300d\u3068\u3044\u3046\u5b9f\u88c5\u8005\u306e\u610f\u56f3\u3092\n\u30b3\u30fc\u30c9\u4e0a\u306b\u793a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u3053\u306eAssert\u6a5f\u80fd\u3092\u3046\u307e\u304f\u6d3b\u7528\u3059\u308b\u3053\u3068\u3067\u4e0d\u5177\u5408\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\n\u3069\u306e\u6642\u70b9\u3067\u610f\u56f3\u3057\u306a\u3044\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u898b\u4ed8\u3051\u308b\u304d\u3063\u304b\u3051\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\nOpenCV\u304c\u63d0\u4f9b\u3059\u308bAssert\u95a2\u9023\u30de\u30af\u30ed\nOpenCV\u304c\u63d0\u4f9b\u3059\u308bAssert\u95a2\u9023\u306e\u30de\u30af\u30ed\u306f\u4ee5\u4e0b\u306e3\u3064\u3067\u3059\uff0e\n\n\n\n\u30de\u30af\u30ed\u540d\n\u30de\u30af\u30ed\u306e\u632f\u308b\u821e\u3044\n\u30c1\u30a7\u30c3\u30af\u306e\u30bf\u30a4\u30df\u30f3\u30b0\n\n\n\n\nCV_Assert\n\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\uff08Release\uff0cDebug\uff09\n\u5b9f\u884c\u6642\uff08\u30e9\u30f3\u30bf\u30a4\u30e0\uff09\n\n\nCV_DbgAssert\n\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\uff08Debug\u6642\u306e\u307f\uff09\n\u5b9f\u884c\u6642\uff08\u30e9\u30f3\u30bf\u30a4\u30e0\uff09\n\n\nCV_StaticAssert\n\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\n\n\n\n\u4e00\u822c\u7684\u306b\u3088\u304f\u77e5\u3089\u308c\u3066\u3044\u308bassert\u95a2\u6570\uff08<assert.h>\u3084<cassert>\u3067\u5b9a\u7fa9\uff09\u306b\u51e6\u7406\u304c\u8fd1\u3044\u305f\u3081\uff0c\nCV_DbgAssert\u30de\u30af\u30ed\u306e\u65b9\u304c\u30a4\u30e1\u30fc\u30b8\u304c\u63b4\u307f\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\nCV_Assert\nCV_Assert\u30de\u30af\u30ed\u306fRelease\uff0cDebug\u554f\u308f\u305a\uff0c\u5b9f\u884c\u6642\u306b\u6761\u4ef6\u5f0f\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u307e\u3059\uff0e\nCV_Assert\u30de\u30af\u30ed\u306fcore/include/opencv2/core/base.hpp\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u30de\u30af\u30ed\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n#define CV_Assert( expr ) if(!!(expr)) ; else cv::error( cv::Error::StsAssert, #expr, CV_Func, FILE, LINE )\nCV_Assert\u30de\u30af\u30ed\u3067\u6307\u5b9a\u3057\u305f\u6761\u4ef6\u5f0f\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\uff08cv::Error::StsAssert\uff09\u3092\n\u6307\u5b9a\u3057\u3066cv::error\u95a2\u6570\u3092\u30b3\u30fc\u30eb\u3057\u307e\u3059\uff0e\u307e\u305f\uff0ccv::error\u95a2\u6570\u5185\u3067\u306f\uff0c\n\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\n\u4f8b\u5916\u3092\u6295\u3052\u308b\n\n\u3068\u3044\u3046\u51e6\u7406\u3092\u884c\u3063\u305f\u5f8c\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3055\u305b\u307e\u3059\uff0e\n\nCV_DbgAssert\nCV_DbgAssert\u30de\u30af\u30ed\u306fDebug\u6642\u306e\u307f\uff0c\u5b9f\u884c\u6642\u306b\u6761\u4ef6\u5f0f\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u307e\u3059\uff0e\nCV_DbgAssert\u30de\u30af\u30ed\u306fcore/include/opencv2/core/base.hpp\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u30de\u30af\u30ed\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n#ifdef _DEBUG\n#  define CV_DbgAssert(expr) CV_Assert(expr)\n#else\n#  define CV_DbgAssert(expr)\n#endif\n\n\u4e0a\u8a18\u30b3\u30fc\u30c9\u3092\u898b\u3066\u308f\u304b\u308b\u3088\u3046\u306b_DEBUG\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306fCV_Assert\u30de\u30af\u30ed\u3092\u5b9f\u884c\u3057\uff0c\n\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f\u4f55\u3082\u3057\u306a\u3044\u3068\u3044\u3046\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u306a\u5b9f\u88c5\u3067\u3059\uff0e\n\nCV_StaticAssert\nCV_StaticAssert\u30de\u30af\u30ed\u306f\u524d\u8ff0\u306e\u30de\u30af\u30ed\u3068\u306f\u5c11\u3057\u6bdb\u8272\u304c\u9055\u3044\uff0c\u5b9f\u884c\u6642\u3067\u306f\u306a\u304f\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3044\uff0c\u6761\u4ef6\u5f0f\u304c\u6e80\u305f\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u307e\u3059\uff0e\nCV_StaticAssert\u30de\u30af\u30ed\u306fcore/include/opencv2/core/base.hpp\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u30de\u30af\u30ed\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff08\u3053\u3053\u3067\u306fVisual Studio\u306e\u5834\u5408\u306e\u307f\u629c\u7c8b\uff09\uff0e\n#elif defined(_MSC_VER)\n#  if _MSC_VER >= 1600 /* MSVC 10 */\n#    define CV_StaticAssert(condition, reason)    static_assert((condition), reason \" \" #condition)\n#  endif\n#endif\n\n\nCV_StaticAssert\u4f7f\u7528\u6642\u306e\u6ce8\u610f\u70b9\n\u524d\u8ff0\u306eCV_StaticAssert\u30de\u30af\u30ed\u5b9f\u88c5\u3092\u8aad\u3080\u3068\u308f\u304b\u308b\u3088\u3046\u306bif _MSC_VER >= 1600 \u3068\u3042\u308b\u305f\u3081\uff0c\nVisual Studio\u306e\u5834\u5408\uff0cVisual Studio 2010\u4ee5\u964d\u3067\u306a\u3044\u3068CV_StaticAssert\u30de\u30af\u30ed\u304c\u6a5f\u80fd\u3057\u306a\u3044\u70b9\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\uff0e\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff08CV_Assert\uff09\nCV_Assert\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u753b\u50cf\u306e\u7bc4\u56f2\u5916\u3092\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u306a\u3044\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\uff0e\n\u3053\u306e\u4f8b\u3067\u306f\u753b\u50cf\u306e\u7bc4\u56f2\u5916\u306e\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u304a\u308a\uff0cRelease\uff0cDebug\u554f\u308f\u305a\n\u5b9f\u884c\u6642\u306b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u7d42\u4e86\u3057\u307e\u3059\uff0e\n\nassert_test.cpp\n#include <opencv2/core.hpp>\n#include <iostream>\n\nvoid testFunc(cv::InputArray src_, int x, int y)\n{\n    cv::Mat src = src_.getMat();\n\n    // \u7bc4\u56f2\u5916\u3092\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u306a\u3044\u304b\u306e\u691c\u8a3c\n    CV_Assert((x >= 0) && (x < src.cols));\n    CV_Assert((y >= 0) && (y < src.rows));\n\n    cv::Vec3b val = src.at<cv::Vec3b>(y, x);\n    std::cout << \"R:\" << (unsigned int)val[2] << std::endl;\n    std::cout << \"G:\" << (unsigned int)val[1] << std::endl;\n    std::cout << \"B:\" << (unsigned int)val[0] << std::endl;\n}\n\nint main(int argc, const char* argv[])\n{\n    // \u5e45512px\u3001\u9ad8\u3055512px\u30013\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\n    cv::Mat img(cv::Size(512, 512), CV_8UC3, cv::Scalar(0, 0, 255));\n\n    // testFunc\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\n    testFunc(img, 0, 512);\n\n    return 0;\n}\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff08CV_DbgAssert\uff09\nCV_DbgAssert\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u753b\u50cf\u306e\u7bc4\u56f2\u5916\u3092\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u306a\u3044\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\uff0e\n\u3053\u306e\u4f8b\u3067\u306f\u753b\u50cf\u306e\u7bc4\u56f2\u5916\u306e\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u304a\u308a\uff0cDebug\u6642\u306e\u307f\u5b9f\u884c\u6642\u306b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u7d42\u4e86\u3057\u307e\u3059\uff0e\n\ndbg_assert_test.cpp\n#include <opencv2/core.hpp>\n#include <iostream>\n\nvoid testFunc(cv::InputArray src_, int x, int y)\n{\n    cv::Mat src = src_.getMat();\n\n    // \u7bc4\u56f2\u5916\u3092\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u306a\u3044\u304b\u306e\u691c\u8a3c\n    CV_DbgAssert((x >= 0) && (x < src.cols));\n    CV_DbgAssert((y >= 0) && (y < src.rows));\n\n    cv::Vec3b val = src.at<cv::Vec3b>(y, x);\n    std::cout << \"R:\" << (unsigned int)val[2] << std::endl;\n    std::cout << \"G:\" << (unsigned int)val[1] << std::endl;\n    std::cout << \"B:\" << (unsigned int)val[0] << std::endl;\n}\n\nint main(int argc, const char* argv[])\n{\n    // \u5e45512px\u3001\u9ad8\u3055512px\u30013\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\n    cv::Mat img(cv::Size(512, 512), CV_8UC3, cv::Scalar(0, 0, 255));\n\n    // testFunc\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\n    testFunc(img, 0, 512);\n\n    return 0;\n}\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff08CV_StaticAssert\uff09\nCV_StaticAssert\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u6761\u4ef6\u5f0f\u3092\u6e80\u305f\u3059\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\uff0e\n\u3053\u306e\u4f8b\u3067\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306e\u578b\u304c\u6570\u5024\u3067\u3042\u308b\u304b\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u307e\u3059\uff0e\n\nstatic_assert_test.cpp\n#include <opencv2/core.hpp>\n#include <iostream>\n\ntemplate <typename T>\nstruct Test\n{\n    // \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306e\u578b\u304c\u6570\u5024\u578b\u3067\u3042\u308b\u304b\u30c1\u30a7\u30c3\u30af\n    CV_StaticAssert\n    (\n        std::_Is_numeric<T>::value,\n        \"T is a numeric type.\"\n    );\n    T value;\n};\n\nint main(int argc, const char* argv[])\n{\n    Test<int>         test1; // OK\n    Test<float>       test2; // OK\n    Test<int *>       test3; // NG\n    Test<std::string> test4; // NG\n}\n\n\nint *\u3068std::string\u306f\u6570\u5024\u578b\u3067\u306a\u3044\u306e\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a8\u30e9\u30fc\u3068\u306a\u308a\uff0c\n\u958b\u767a\u8005\u306f\u5b9f\u88c5\u30df\u30b9\u306b\u3059\u3050\u6c17\u4ed8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n\u304a\u308f\u308a\u306b\n\u4eca\u56de\uff0cOpenCV\u304c\u63d0\u4f9b\u3059\u308bAssert\u30de\u30af\u30ed\uff08CV_Assert\uff0cCV_DbgAssert\uff0cCV_StaticAssert\uff09\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\uff0e\n\u3053\u308c\u3089\u306e\u30de\u30af\u30ed\u3092\u3046\u307e\u304f\u6d3b\u7528\u3059\u308b\u3053\u3068\u3067\uff0c\u4e0d\u5177\u5408\u304c\u8d77\u304d\u305f\u969b\u306e\u539f\u56e0\u7279\u5b9a\u306b\u5f79\u7acb\u3066\u307e\u3057\u3087\u3046\uff01\n\n\u5099\u8003\n\u7b46\u8005\u306f\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u307e\u3057\u305f\uff0e\n\nOpenCV 3.0.0\nWindows 8.1 Pro\uff0864bit\uff09\nVisual Studio 2013 Update5\n\n\u3053\u306e\u8a18\u4e8b\u306f[OpenCV Advent Calendar 2015](http://qiita.com/advent-calendar/2015/opencv)\u306e5\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\n\u307e\u305f\uff0c\u524d\u56de\u306e[OpenCV\u306e\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\uff0c\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u8868\u793a\u6a5f\u80fd\uff0c\u4f8b\u5916\u51e6\u7406\u6a5f\u80fd](http://qiita.com/dandelion1124/items/2f92eb1ecca204ba33ed)\u306e\u5185\u5bb9\u3068\n\u95a2\u9023\u304c\u3042\u308b\u306e\u3067\u4e8b\u524d\u306b\u4e00\u8aad\u9802\u304f\u3068\u7406\u89e3\u304c\u6df1\u307e\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093~~\uff08\u30b9\u30c6\u30de\uff09~~\uff0e\n\n# \u306f\u3058\u3081\u306b\nOpenCV\u306b\u306fAssert\u95a2\u9023\u306e\u95a2\u6570\u304c\u3044\u304f\u3064\u304b\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0cOpenCV\u304c\u63d0\u4f9b\u3059\u308bAssert\u95a2\u6570\u3068\u305d\u308c\u3089\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n# Assert\u3068\u306f\nAssert\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u5185\u306e\u77db\u76fe\u3092\u691c\u51fa\u3059\u308b\u305f\u3081\u306e\u30c7\u30d0\u30c3\u30b0\u6a5f\u80fd\u3067\u3059\uff0e\n\u307e\u305f\uff0cAssert\u3092\u4f7f\u3046\u3053\u3068\u3067\u300c\u3053\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3079\u304d\u300d\u3068\u3044\u3046\u5b9f\u88c5\u8005\u306e\u610f\u56f3\u3092\n\u30b3\u30fc\u30c9\u4e0a\u306b\u793a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n\u3053\u306eAssert\u6a5f\u80fd\u3092\u3046\u307e\u304f\u6d3b\u7528\u3059\u308b\u3053\u3068\u3067\u4e0d\u5177\u5408\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\n\u3069\u306e\u6642\u70b9\u3067\u610f\u56f3\u3057\u306a\u3044\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u898b\u4ed8\u3051\u308b\u304d\u3063\u304b\u3051\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n# OpenCV\u304c\u63d0\u4f9b\u3059\u308bAssert\u95a2\u9023\u30de\u30af\u30ed\nOpenCV\u304c\u63d0\u4f9b\u3059\u308bAssert\u95a2\u9023\u306e\u30de\u30af\u30ed\u306f\u4ee5\u4e0b\u306e3\u3064\u3067\u3059\uff0e\n\n| \u30de\u30af\u30ed\u540d | \u30de\u30af\u30ed\u306e\u632f\u308b\u821e\u3044 | \u30c1\u30a7\u30c3\u30af\u306e\u30bf\u30a4\u30df\u30f3\u30b0 |\n|:--|:--|:--|\n| CV_Assert | \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86<br>\uff08Release\uff0cDebug\uff09 | \u5b9f\u884c\u6642\uff08\u30e9\u30f3\u30bf\u30a4\u30e0\uff09 |\n| CV_DbgAssert | \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86<br>\uff08Debug\u6642\u306e\u307f\uff09 | \u5b9f\u884c\u6642\uff08\u30e9\u30f3\u30bf\u30a4\u30e0\uff09|\n| CV_StaticAssert | \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc | \u30b3\u30f3\u30d1\u30a4\u30eb\u6642 |\n\n\u4e00\u822c\u7684\u306b\u3088\u304f\u77e5\u3089\u308c\u3066\u3044\u308b[assert\u95a2\u6570](https://msdn.microsoft.com/ja-jp/library/9sb57dw4.aspx)\uff08\\<assert.h\\>\u3084\\<cassert\\>\u3067\u5b9a\u7fa9\uff09\u306b\u51e6\u7406\u304c\u8fd1\u3044\u305f\u3081\uff0c\nCV_DbgAssert\u30de\u30af\u30ed\u306e\u65b9\u304c\u30a4\u30e1\u30fc\u30b8\u304c\u63b4\u307f\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\n# CV_Assert\nCV_Assert\u30de\u30af\u30ed\u306fRelease\uff0cDebug\u554f\u308f\u305a\uff0c\u5b9f\u884c\u6642\u306b\u6761\u4ef6\u5f0f\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u307e\u3059\uff0e\n\nCV_Assert\u30de\u30af\u30ed\u306f<code>core/include/opencv2/core/base.hpp</code>\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u30de\u30af\u30ed\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n<code>#define CV_Assert( expr ) if(!!(expr)) ; else cv::error( cv::Error::StsAssert, #expr, CV_Func, __FILE__, __LINE__ )</code>\n\nCV_Assert\u30de\u30af\u30ed\u3067\u6307\u5b9a\u3057\u305f\u6761\u4ef6\u5f0f\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\uff08<code>cv::Error::StsAssert</code>\uff09\u3092\n\u6307\u5b9a\u3057\u3066<code>cv::error</code>\u95a2\u6570\u3092\u30b3\u30fc\u30eb\u3057\u307e\u3059\uff0e\u307e\u305f\uff0c<code>cv::error</code>\u95a2\u6570\u5185\u3067\u306f\uff0c\n\n1. \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\n1. \u4f8b\u5916\u3092\u6295\u3052\u308b\n\n\u3068\u3044\u3046\u51e6\u7406\u3092\u884c\u3063\u305f\u5f8c\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3055\u305b\u307e\u3059\uff0e\n\n# CV_DbgAssert\nCV_DbgAssert\u30de\u30af\u30ed\u306fDebug\u6642\u306e\u307f\uff0c\u5b9f\u884c\u6642\u306b\u6761\u4ef6\u5f0f\u3092\u6e80\u305f\u3055\u306a\u3044\u5834\u5408\u306f\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u307e\u3059\uff0e\n\nCV_DbgAssert\u30de\u30af\u30ed\u306f<code>core/include/opencv2/core/base.hpp</code>\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u30de\u30af\u30ed\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n```cpp\n#ifdef _DEBUG\n#  define CV_DbgAssert(expr) CV_Assert(expr)\n#else\n#  define CV_DbgAssert(expr)\n#endif\n```\n\n\u4e0a\u8a18\u30b3\u30fc\u30c9\u3092\u898b\u3066\u308f\u304b\u308b\u3088\u3046\u306b<code>_DEBUG</code>\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306fCV_Assert\u30de\u30af\u30ed\u3092\u5b9f\u884c\u3057\uff0c\n\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f\u4f55\u3082\u3057\u306a\u3044\u3068\u3044\u3046\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u306a\u5b9f\u88c5\u3067\u3059\uff0e\n\n# CV_StaticAssert\nCV_StaticAssert\u30de\u30af\u30ed\u306f\u524d\u8ff0\u306e\u30de\u30af\u30ed\u3068\u306f\u5c11\u3057\u6bdb\u8272\u304c\u9055\u3044\uff0c\u5b9f\u884c\u6642\u3067\u306f\u306a\u304f\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3044\uff0c\u6761\u4ef6\u5f0f\u304c\u6e80\u305f\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u307e\u3059\uff0e\n\nCV\\_StaticAssert\u30de\u30af\u30ed\u306f<code>core/include/opencv2/core/base.hpp</code>\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u30de\u30af\u30ed\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff08\u3053\u3053\u3067\u306fVisual Studio\u306e\u5834\u5408\u306e\u307f\u629c\u7c8b\uff09\uff0e\n\n\n```cpp\n#elif defined(_MSC_VER)\n#  if _MSC_VER >= 1600 /* MSVC 10 */\n#    define CV_StaticAssert(condition, reason)    static_assert((condition), reason \" \" #condition)\n#  endif\n#endif\n```\n\n## CV_StaticAssert\u4f7f\u7528\u6642\u306e\u6ce8\u610f\u70b9\n\u524d\u8ff0\u306eCV\\_StaticAssert\u30de\u30af\u30ed\u5b9f\u88c5\u3092\u8aad\u3080\u3068\u308f\u304b\u308b\u3088\u3046\u306b<code>if _MSC_VER >= 1600 </code>\u3068\u3042\u308b\u305f\u3081\uff0c\nVisual Studio\u306e\u5834\u5408\uff0cVisual Studio 2010\u4ee5\u964d\u3067\u306a\u3044\u3068CV\\_StaticAssert\u30de\u30af\u30ed\u304c\u6a5f\u80fd\u3057\u306a\u3044\u70b9\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\uff0e\n\n# \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff08CV_Assert\uff09\nCV_Assert\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u753b\u50cf\u306e\u7bc4\u56f2\u5916\u3092\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u306a\u3044\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\uff0e\n\u3053\u306e\u4f8b\u3067\u306f\u753b\u50cf\u306e\u7bc4\u56f2\u5916\u306e\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u304a\u308a\uff0cRelease\uff0cDebug\u554f\u308f\u305a\n\u5b9f\u884c\u6642\u306b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u7d42\u4e86\u3057\u307e\u3059\uff0e\n\n```cpp:assert_test.cpp\n#include <opencv2/core.hpp>\n#include <iostream>\n\nvoid testFunc(cv::InputArray src_, int x, int y)\n{\n    cv::Mat src = src_.getMat();\n\n    // \u7bc4\u56f2\u5916\u3092\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u306a\u3044\u304b\u306e\u691c\u8a3c\n    CV_Assert((x >= 0) && (x < src.cols));\n    CV_Assert((y >= 0) && (y < src.rows));\n\n    cv::Vec3b val = src.at<cv::Vec3b>(y, x);\n    std::cout << \"R:\" << (unsigned int)val[2] << std::endl;\n    std::cout << \"G:\" << (unsigned int)val[1] << std::endl;\n    std::cout << \"B:\" << (unsigned int)val[0] << std::endl;\n}\n\nint main(int argc, const char* argv[])\n{\n    // \u5e45512px\u3001\u9ad8\u3055512px\u30013\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\n    cv::Mat img(cv::Size(512, 512), CV_8UC3, cv::Scalar(0, 0, 255));\n\n    // testFunc\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\n    testFunc(img, 0, 512);\n\n    return 0;\n}\n```\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff08CV_DbgAssert\uff09\nCV_DbgAssert\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u753b\u50cf\u306e\u7bc4\u56f2\u5916\u3092\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u306a\u3044\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\uff0e\n\u3053\u306e\u4f8b\u3067\u306f\u753b\u50cf\u306e\u7bc4\u56f2\u5916\u306e\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3066\u304a\u308a\uff0cDebug\u6642\u306e\u307f\u5b9f\u884c\u6642\u306b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u7d42\u4e86\u3057\u307e\u3059\uff0e\n\n```cpp:dbg_assert_test.cpp\n#include <opencv2/core.hpp>\n#include <iostream>\n\nvoid testFunc(cv::InputArray src_, int x, int y)\n{\n    cv::Mat src = src_.getMat();\n\n    // \u7bc4\u56f2\u5916\u3092\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u306a\u3044\u304b\u306e\u691c\u8a3c\n    CV_DbgAssert((x >= 0) && (x < src.cols));\n    CV_DbgAssert((y >= 0) && (y < src.rows));\n\n    cv::Vec3b val = src.at<cv::Vec3b>(y, x);\n    std::cout << \"R:\" << (unsigned int)val[2] << std::endl;\n    std::cout << \"G:\" << (unsigned int)val[1] << std::endl;\n    std::cout << \"B:\" << (unsigned int)val[0] << std::endl;\n}\n\nint main(int argc, const char* argv[])\n{\n    // \u5e45512px\u3001\u9ad8\u3055512px\u30013\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\n    cv::Mat img(cv::Size(512, 512), CV_8UC3, cv::Scalar(0, 0, 255));\n\n    // testFunc\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\n    testFunc(img, 0, 512);\n\n    return 0;\n}\n```\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff08CV_StaticAssert\uff09\nCV_StaticAssert\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u6761\u4ef6\u5f0f\u3092\u6e80\u305f\u3059\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\uff0e\n\u3053\u306e\u4f8b\u3067\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306e\u578b\u304c\u6570\u5024\u3067\u3042\u308b\u304b\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u307e\u3059\uff0e\n\n```cpp:static_assert_test.cpp\n#include <opencv2/core.hpp>\n#include <iostream>\n\ntemplate <typename T>\nstruct Test\n{\n    // \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306e\u578b\u304c\u6570\u5024\u578b\u3067\u3042\u308b\u304b\u30c1\u30a7\u30c3\u30af\n    CV_StaticAssert\n    (\n        std::_Is_numeric<T>::value,\n        \"T is a numeric type.\"\n    );\n    T value;\n};\n\nint main(int argc, const char* argv[])\n{\n    Test<int>         test1; // OK\n    Test<float>       test2; // OK\n    Test<int *>       test3; // NG\n    Test<std::string> test4; // NG\n}\n```\n\n<code>int *</code>\u3068<code>std::string</code>\u306f\u6570\u5024\u578b\u3067\u306a\u3044\u306e\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a8\u30e9\u30fc\u3068\u306a\u308a\uff0c\n\u958b\u767a\u8005\u306f\u5b9f\u88c5\u30df\u30b9\u306b\u3059\u3050\u6c17\u4ed8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n# \u304a\u308f\u308a\u306b\n\u4eca\u56de\uff0cOpenCV\u304c\u63d0\u4f9b\u3059\u308bAssert\u30de\u30af\u30ed\uff08CV_Assert\uff0cCV_DbgAssert\uff0cCV_StaticAssert\uff09\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\uff0e\n\u3053\u308c\u3089\u306e\u30de\u30af\u30ed\u3092\u3046\u307e\u304f\u6d3b\u7528\u3059\u308b\u3053\u3068\u3067\uff0c\u4e0d\u5177\u5408\u304c\u8d77\u304d\u305f\u969b\u306e\u539f\u56e0\u7279\u5b9a\u306b\u5f79\u7acb\u3066\u307e\u3057\u3087\u3046\uff01\n\n# \u5099\u8003\n\u7b46\u8005\u306f\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u307e\u3057\u305f\uff0e\n\n* [OpenCV 3.0.0](https://github.com/Itseez/opencv/releases/tag/3.0.0)\n* Windows 8.1 Pro\uff0864bit\uff09\n* Visual Studio 2013 Update5\n"}