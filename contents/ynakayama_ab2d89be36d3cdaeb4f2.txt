{"context": " More than 1 year has passed since last update.\n\n\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u610f\u7fa9\u3068\u76ee\u7684\n\u6628\u65e5\u306f\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u6982\u8981\u3068 scikit-learn \u3092\u4f7f\u3063\u3066\u5b9f\u969b\u306b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u3059\u308b\u6d41\u308c\u3092\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\nscikit-learn \u306b\u3088\u308b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 (1)\n\u3053\u3053\u3067\u57fa\u672c\u306b\u7acb\u3061\u8fd4\u308a\u305d\u3082\u305d\u3082\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3068\u306f\u4f55\u306a\u306e\u304b\u3092\u63a2\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u591a\u304f\u306e\u6a5f\u68b0\u5b66\u7fd2\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306f\u3001\u7279\u5fb4\u91cf (\u7d20\u6027) \u3092\u30d9\u30af\u30c8\u30eb\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\n\u7dda\u5f62\u4ee3\u6570\u3067\u306f\u548c\u3068\u30b9\u30ab\u30e9\u30fc\u7a4d\u304c\u5185\u90e8\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u96c6\u5408\u3092\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u3001\u305d\u306e\u8981\u7d20\u3092\u30d9\u30af\u30c8\u30eb\u3068\u8a00\u3044\u307e\u3059\u3002\n\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3068\u306f\u3059\u3054\u304f\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\u3001\u7279\u5fb4\u91cf\u540c\u58eb\u304c\u3069\u308c\u304f\u3089\u3044\u4f3c\u3066\u3044\u308b\u304b\u3092\u8a08\u7b97\u3001\u4f3c\u305f\u3082\u306e\u3092\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3088\u3046\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3059\u3002\n\u5143\u30c7\u30fc\u30bf\u304c\u6587\u5b57\u3060\u308d\u3046\u304c\u753b\u50cf\u3060\u308d\u3046\u304c\u3001\u30d1\u30bf\u30fc\u30f3\u3092\u8a8d\u8b58\u3057\u3066\u7279\u5fb4\u91cf\u306b\u843d\u3068\u3057\u305f\u6642\u70b9\u3067\u3001\u6559\u5e2b\u3068\u306a\u308b\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u308b\u3053\u3068\u306a\u304f\u3001\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u306d\u3002\n\u305f\u3068\u3048\u3070\u4e0d\u7279\u5b9a\u591a\u6570\u306e\u30a2\u30f3\u30b1\u30fc\u30c8\u56de\u7b54\u3092\u4f3c\u305f\u8005\u540c\u58eb\u3067\u5bc4\u305b\u96c6\u3081\u305f\u308a\u3001\u753b\u50cf\u306e\u808c\u8272\u90e8\u5206\u3092\u62bd\u51fa\u3057\u305f\u308a\u3001\u306a\u3069\u306a\u3069\u69d8\u3005\u306a\u6280\u8853\u306b\u5fdc\u7528\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u985e\u4f3c\u5ea6\u306e\u7b97\u51fa\n\u3053\u3053\u307e\u3067\u8aad\u3093\u3067\u3001\u96c6\u5408\u306e\u985e\u4f3c\u5ea6\u3092\u3044\u304b\u306b\u6c42\u3081\u308b\u304b\u304c\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u9375\u3067\u3042\u308b\u3053\u3068\u304c\u304a\u308f\u304b\u308a\u306b\u306a\u3063\u305f\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nscikit-learn \u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u6cbf\u3063\u3066\u30b3\u30fc\u30c9\u3067\u8aac\u660e\u3057\u3066\u304d\u307e\u3059\u3002\nClustering\n\nlabels_true = [0, 0, 0, 1, 1, 1]\nlabels_pred = [0, 0, 1, 1, 2, 2]\nprint ( metrics.adjusted_mutual_info_score(labels_true, labels_pred) )\n# => 0.225042310598\n\nlabels_true = [0, 1, 2, 0, 3, 4, 5, 1]\nlabels_pred = [1, 1, 0, 0, 2, 2, 2, 2]\nprint ( metrics.adjusted_mutual_info_score(labels_true, labels_pred) )\n# => -0.105263430575\n\nlabels_true = [0, 0, 0, 1, 1, 1]\nlabels_pred = [0, 0, 1, 1, 2, 2]\n\nprint ( metrics.homogeneity_score(labels_true, labels_pred) )\n# => 0.666666666667\n\nprint ( metrics.completeness_score(labels_true, labels_pred) )\n# => 0.420619835714\n\n\n\u3053\u306e\u3088\u3046\u306b scikit-learn \u3067\u306f\u3055\u307e\u3056\u307e\u306a\u985e\u4f3c\u5ea6\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n\u3067\u306f\u6628\u65e5\u306e\u30b3\u30fc\u30c9\u3092\u5229\u7528\u3057\u3066\u5b9f\u969b\u306b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\nscikit-learn \u306b\u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u4f7f\u3044\u307e\u3059\u3002\n\u307e\u305a\u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u7528\u610f\u3092\u3057\u307e\u3059\u3002\n\nfrom sklearn import metrics\nfrom sklearn.metrics import pairwise_distances\nfrom sklearn import datasets\n\ndataset = datasets.load_iris()\nX = dataset.data\ny = dataset.target\n\n# \u5185\u5bb9\u3092\u3061\u3087\u3063\u3068\u8997\u304d\u898b\u3057\u3066\u307f\u308b\nprint (X)\nprint (y)\n\n\n\u6628\u65e5\u306e\u30b3\u30fc\u30c9\u3067\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nimport numpy as np\nfrom sklearn.cluster import KMeans\n\nkmeans_model = KMeans(n_clusters=3, random_state=1).fit(X)\nlabels = kmeans_model.labels_\n\n# \u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u3092\u7b97\u51fa\u3057\u3066\u307f\u308b\nprint ( metrics.silhouette_score(X, labels, metric='euclidean') )\n\n# \u6628\u65e5\u306e\u30b3\u30fc\u30c9\u3092\u5229\u7528\u3057\u3066\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u304a\u3053\u306a\u3046\nclusters = make_cluster(X)\n\n# \u7d50\u679c\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3059\u308b\nwrite_cluster(clusters, 'out.txt')\n\n# \u751f\u6210\u3057\u305f\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u5185\u5bb9\u3092\u8997\u304d\u898b\u3059\u308b\nprint ( clusters )\n\n\n\n\u8003\u5bdf\n\u5f37\u529b\u306a\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u306b\u3088\u308a\u5bfe\u8c61\u306e\u7d20\u6027\u3055\u3048\u62bd\u51fa\u3057\u3066\u3057\u307e\u3048\u3070\u3001\u7c21\u5358\u306b\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u304c\u3067\u304d\u3001\u305d\u308c\u3092\u69d8\u3005\u306a\u5206\u91ce\u306b\u5fdc\u7528\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u8a00\u3048\u307e\u3059\u3002\n## \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u610f\u7fa9\u3068\u76ee\u7684\n\n\u6628\u65e5\u306f\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u6982\u8981\u3068 scikit-learn \u3092\u4f7f\u3063\u3066\u5b9f\u969b\u306b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u3059\u308b\u6d41\u308c\u3092\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\n\n[scikit-learn \u306b\u3088\u308b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 (1)](http://qiita.com/ynakayama/items/8bc9f3c7639f7251858a)\n\n\u3053\u3053\u3067\u57fa\u672c\u306b\u7acb\u3061\u8fd4\u308a\u305d\u3082\u305d\u3082\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3068\u306f\u4f55\u306a\u306e\u304b\u3092\u63a2\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u591a\u304f\u306e\u6a5f\u68b0\u5b66\u7fd2\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306f\u3001\u7279\u5fb4\u91cf (\u7d20\u6027) \u3092\u30d9\u30af\u30c8\u30eb\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\n\u7dda\u5f62\u4ee3\u6570\u3067\u306f\u548c\u3068\u30b9\u30ab\u30e9\u30fc\u7a4d\u304c\u5185\u90e8\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u96c6\u5408\u3092\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u3001\u305d\u306e\u8981\u7d20\u3092\u30d9\u30af\u30c8\u30eb\u3068\u8a00\u3044\u307e\u3059\u3002\n\n\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3068\u306f\u3059\u3054\u304f\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\u3001\u7279\u5fb4\u91cf\u540c\u58eb\u304c\u3069\u308c\u304f\u3089\u3044\u4f3c\u3066\u3044\u308b\u304b\u3092\u8a08\u7b97\u3001\u4f3c\u305f\u3082\u306e\u3092\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3088\u3046\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3059\u3002\n\n\u5143\u30c7\u30fc\u30bf\u304c\u6587\u5b57\u3060\u308d\u3046\u304c\u753b\u50cf\u3060\u308d\u3046\u304c\u3001\u30d1\u30bf\u30fc\u30f3\u3092\u8a8d\u8b58\u3057\u3066\u7279\u5fb4\u91cf\u306b\u843d\u3068\u3057\u305f\u6642\u70b9\u3067\u3001\u6559\u5e2b\u3068\u306a\u308b\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u308b\u3053\u3068\u306a\u304f\u3001\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u306d\u3002\n\n\u305f\u3068\u3048\u3070\u4e0d\u7279\u5b9a\u591a\u6570\u306e\u30a2\u30f3\u30b1\u30fc\u30c8\u56de\u7b54\u3092\u4f3c\u305f\u8005\u540c\u58eb\u3067\u5bc4\u305b\u96c6\u3081\u305f\u308a\u3001\u753b\u50cf\u306e\u808c\u8272\u90e8\u5206\u3092\u62bd\u51fa\u3057\u305f\u308a\u3001\u306a\u3069\u306a\u3069\u69d8\u3005\u306a\u6280\u8853\u306b\u5fdc\u7528\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u985e\u4f3c\u5ea6\u306e\u7b97\u51fa\n\n\u3053\u3053\u307e\u3067\u8aad\u3093\u3067\u3001\u96c6\u5408\u306e\u985e\u4f3c\u5ea6\u3092\u3044\u304b\u306b\u6c42\u3081\u308b\u304b\u304c\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u9375\u3067\u3042\u308b\u3053\u3068\u304c\u304a\u308f\u304b\u308a\u306b\u306a\u3063\u305f\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nscikit-learn \u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u6cbf\u3063\u3066\u30b3\u30fc\u30c9\u3067\u8aac\u660e\u3057\u3066\u304d\u307e\u3059\u3002\n[Clustering](http://scikit-learn.org/stable/modules/clustering.html#mini-batch-k-means)\n\n```py3\n\nlabels_true = [0, 0, 0, 1, 1, 1]\nlabels_pred = [0, 0, 1, 1, 2, 2]\nprint ( metrics.adjusted_mutual_info_score(labels_true, labels_pred) )\n# => 0.225042310598\n\nlabels_true = [0, 1, 2, 0, 3, 4, 5, 1]\nlabels_pred = [1, 1, 0, 0, 2, 2, 2, 2]\nprint ( metrics.adjusted_mutual_info_score(labels_true, labels_pred) )\n# => -0.105263430575\n\nlabels_true = [0, 0, 0, 1, 1, 1]\nlabels_pred = [0, 0, 1, 1, 2, 2]\n\nprint ( metrics.homogeneity_score(labels_true, labels_pred) )\n# => 0.666666666667\n\nprint ( metrics.completeness_score(labels_true, labels_pred) )\n# => 0.420619835714\n\n```\n\n\u3053\u306e\u3088\u3046\u306b scikit-learn \u3067\u306f\u3055\u307e\u3056\u307e\u306a\u985e\u4f3c\u5ea6\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\n### \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n\n\u3067\u306f\u6628\u65e5\u306e\u30b3\u30fc\u30c9\u3092\u5229\u7528\u3057\u3066\u5b9f\u969b\u306b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\nscikit-learn \u306b\u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u4f7f\u3044\u307e\u3059\u3002\n\u307e\u305a\u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u7528\u610f\u3092\u3057\u307e\u3059\u3002\n\n```py3\n\nfrom sklearn import metrics\nfrom sklearn.metrics import pairwise_distances\nfrom sklearn import datasets\n\ndataset = datasets.load_iris()\nX = dataset.data\ny = dataset.target\n\n# \u5185\u5bb9\u3092\u3061\u3087\u3063\u3068\u8997\u304d\u898b\u3057\u3066\u307f\u308b\nprint (X)\nprint (y)\n\n```\n\n\u6628\u65e5\u306e\u30b3\u30fc\u30c9\u3067\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```py3\n\nimport numpy as np\nfrom sklearn.cluster import KMeans\n\nkmeans_model = KMeans(n_clusters=3, random_state=1).fit(X)\nlabels = kmeans_model.labels_\n\n# \u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u3092\u7b97\u51fa\u3057\u3066\u307f\u308b\nprint ( metrics.silhouette_score(X, labels, metric='euclidean') )\n\n# \u6628\u65e5\u306e\u30b3\u30fc\u30c9\u3092\u5229\u7528\u3057\u3066\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u304a\u3053\u306a\u3046\nclusters = make_cluster(X)\n\n# \u7d50\u679c\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3059\u308b\nwrite_cluster(clusters, 'out.txt')\n\n# \u751f\u6210\u3057\u305f\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u5185\u5bb9\u3092\u8997\u304d\u898b\u3059\u308b\nprint ( clusters )\n\n```\n\n### \u8003\u5bdf\n\n\u5f37\u529b\u306a\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u306b\u3088\u308a\u5bfe\u8c61\u306e\u7d20\u6027\u3055\u3048\u62bd\u51fa\u3057\u3066\u3057\u307e\u3048\u3070\u3001\u7c21\u5358\u306b\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u304c\u3067\u304d\u3001\u305d\u308c\u3092\u69d8\u3005\u306a\u5206\u91ce\u306b\u5fdc\u7528\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u8a00\u3048\u307e\u3059\u3002\n\n\n", "tags": ["Python", "clustering", "scikit-learn", "MachineLearning"]}