{"context": " More than 1 year has passed since last update.WEB+DB Vol.86\u3067FlatBuffers\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u305f\u306e\u3067C#\u3067\u8a66\u3057\u305f\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\u8a18\u4e8b\u3092\u66f8\u3044\u305f\u6642\u70b9\u3067\u306eFlatBuffers\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 1.1.0 \u3067\u3059\u3002\n\nFlatBuffers\u3068\u306f\nFlatBuffers\u3068\u306fGoogle\u304c\u958b\u767a\u3057\u305f\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u3067\u3042\u308a\u3001\u30cf\u30a4\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u8981\u6c42\u3055\u308c\u308b\u3088\u3046\u306a\u30b2\u30fc\u30e0\u306b\u9069\u3057\u3066\u3044\u308b\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u7279\u5fb4\n\n\u30d1\u30fc\u30b9\u3084unpacking\u304c\u4e0d\u8981\u3067\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n\u30e1\u30e2\u30ea\u52b9\u7387\u304c\u826f\u304f\u3001\u9ad8\u901f\n\u30d5\u30ec\u30ad\u30b7\u30d6\u30eb - \u5f8c\u65b9\u4e92\u63db\u6027\u3092\u5099\u3048\u308b\n\u53b3\u5bc6\u306a\u578b\u6307\u5b9a\n\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0(C++11/Java/C#/Go)\n\n\n\u5229\u7528\u306e\u8981\u70b9\n\n\u30b9\u30ad\u30fc\u30de\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\nC#\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306bflatc(\u30b9\u30ad\u30fc\u30de\u30b3\u30f3\u30d1\u30a4\u30e9)\u3092\u4f7f\u3046\n\u30d5\u30e9\u30c3\u30c8\u306a\u30d0\u30a4\u30ca\u30ea\u30d0\u30c3\u30d5\u30a1\u30fc\u3092\u69cb\u6210\u3059\u308b\u305f\u3081\u306bFlatBufferBuilder\u3092\u4f7f\u3046\n\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u305f\u30d0\u30a4\u30ca\u30ea\u30d0\u30c3\u30d5\u30a1\u30fc\u3092\u4f55\u51e6\u304b\u3078\u9001\u4fe1\u307e\u305f\u306f\u4fdd\u5b58\u3059\u308b\n\u9006\u306b\u8aad\u307f\u8fbc\u3080\u3068\u304d\u306b\u306f\u30d0\u30a4\u30ca\u30ea\u30d0\u30c3\u30d5\u30a1\u30fc\u304b\u3089\u30eb\u30fc\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u5f97\u3057\u3001object.Filed()\u306e\u3088\u3046\u306b\u7c21\u5358\u306b\u53d6\u308a\u51fa\u305b\u308b\n\n\n1. IDL\u3092\u5b9a\u7fa9\n\u307e\u305a\u3001\u5229\u7528\u3059\u308b\u306b\u306f\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u5bfe\u8c61\u306e\u30c7\u30fc\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nsample.fbs\n// example IDL file\n\nnamespace MyGame;\n\nenum Color:byte { Red = 0, Green, Blue = 2 }\n\nunion Any { Monster }  // add more elements..\n\nstruct Vec3 {\n  x:float;\n  y:float;\n  z:float;\n}\n\ntable Monster {\n  pos:Vec3;\n  mana:short = 150;\n  hp:short = 100;\n  name:string;\n  friendly:bool = false (deprecated);\n  inventory:[ubyte];\n  color:Color = Blue;\n}\n\nroot_type Monster;\n\n\n\n2.\u30b9\u30ad\u30fc\u30de\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\n\u30b9\u30ad\u30fc\u30de\u30b3\u30f3\u30d1\u30a4\u30e9(flatc)\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3053\u3068\u3067\u30af\u30e9\u30b9\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308b\u3002\nflatc.exe\u306f\u3053\u3053\u304b\u3089ZIP\u53d6\u5f97\u3059\u308b\u304b\u81ea\u5206\u3067\u30d3\u30eb\u30c9\u3059\u308b\u3002\n\n$ flatc.exe -n sample.fbs\n\n\u203b\u300c-n\u300d\u30aa\u30d7\u30b7\u30e7\u30f3\u306f(.NET\u304b\u3089)C#\u306e\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u610f\u5473\u3002\u300c-j\u300d\u3067\u3042\u308c\u3070Java\u306e\u30af\u30e9\u30b9\u304c\u751f\u6210\u3055\u308c\u308b\u3002\u300c-c\u300d\u306fC++\u3002\n\n\u53c2\u8003\u307e\u3067\u306b\u751f\u6210\u3055\u308c\u305f\u30af\u30e9\u30b9\u306e\u4f8b\n\nMyGame/Monster.cs\n// automatically generated, do not modify\n\nnamespace MyGame\n{\n\nusing FlatBuffers;\n\npublic sealed class Monster : Table {\n  public static Monster GetRootAsMonster(ByteBuffer _bb) { return GetRootAsMonster(_bb, new Monster()); }\n  public static Monster GetRootAsMonster(ByteBuffer _bb, Monster obj) { return (obj.__init(_bb.GetInt(_bb.position()) + _bb.position(), _bb)); }\n  public Monster __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }\n\n  public Vec3 Pos() { return Pos(new Vec3()); }\n  public Vec3 Pos(Vec3 obj) { int o = __offset(4); return o != 0 ? obj.__init(o + bb_pos, bb) : null; }\n  public short Mana() { int o = __offset(6); return o != 0 ? bb.GetShort(o + bb_pos) : (short)150; }\n  public short Hp() { int o = __offset(8); return o != 0 ? bb.GetShort(o + bb_pos) : (short)100; }\n  public string Name() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }\n  public byte Inventory(int j) { int o = __offset(14); return o != 0 ? bb.Get(__vector(o) + j * 1) : (byte)0; }\n  public int InventoryLength() { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; }\n  public Color Color() { int o = __offset(16); return o != 0 ? (Color)bb.GetSbyte(o + bb_pos) : (Color)2; }\n\n  public static void StartMonster(FlatBufferBuilder builder) { builder.StartObject(7); }\n  public static void AddPos(FlatBufferBuilder builder, int posOffset) { builder.AddStruct(0, posOffset, 0); }\n  public static void AddMana(FlatBufferBuilder builder, short mana) { builder.AddShort(1, mana, 150); }\n  public static void AddHp(FlatBufferBuilder builder, short hp) { builder.AddShort(2, hp, 100); }\n  public static void AddName(FlatBufferBuilder builder, int nameOffset) { builder.AddOffset(3, nameOffset, 0); }\n  public static void AddInventory(FlatBufferBuilder builder, int inventoryOffset) { builder.AddOffset(5, inventoryOffset, 0); }\n  public static int CreateInventoryVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }\n  public static void StartInventoryVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }\n  public static void AddColor(FlatBufferBuilder builder, Color color) { builder.AddSbyte(6, (sbyte)(color), 2); }\n  public static int EndMonster(FlatBufferBuilder builder) {\n    int o = builder.EndObject();\n    return o;\n  }\n  public static void FinishMonsterBuffer(FlatBufferBuilder builder, int offset) { builder.Finish(offset); }\n};\n\n\n}\n\n\n\n\n3.FlatBuffers\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6e96\u5099\nVisualStudio\u3067\u4f55\u304b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u307e\u305anuget\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u306a\u3044\u304b\u691c\u7d22\u3059\u308b\u3082\u306e\u3067\u3059\u304c\u3001FlatBuffers\u306b\u306fnuget\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u3042\u308a\u307e\u305b\u3093\u3002(\u4e0d\u4fbf\u30fb\u30fb\u30fb)\n\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u306a\u3044\u306e\u3067GitHub\u304b\u3089ZIP\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3001\u307e\u305f\u306fgit\u3067clone\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30ed\u30fc\u30c9\u3059\u308b\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002(nuget\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u3092\u5e0c\u671b)\n\u53d6\u5f97\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e2d\u306b\u306fJava\u3084Go\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306fC#\u3067\u306e\u5229\u7528\u306a\u306e\u3067\u3001net/FlatBuffers\u4ee5\u4e0b\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u5229\u7528\u3057\u305f\u3044\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u306b\u653e\u308a\u8fbc\u3093\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n4.\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3068\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\n\nProgram.cs\nusing FlatBuffers;\n\ninternal class Program\n    {\n        private static void Main()\n        {\n            //\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\n            var fbb = new FlatBufferBuilder(1);\n            int str = fbb.CreateString(\"MyMonster\");\n            Monster.StartMonster(fbb);\n            Monster.AddName(fbb, str);\n            Monster.AddHp(fbb, 80);\n            Monster.AddPos(fbb, Vec3.CreateVec3(fbb, 1.0f, 2.0f, 3.0f));\n            int mon = Monster.EndMonster(fbb);\n            Monster.FinishMonsterBuffer(fbb, mon);\n            var buf = fbb.DataBuffer();\n\n            //\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\n            Monster monster = Monster.GetRootAsMonster(buf);\n            Console.WriteLine(monster.Name()); //-->MyMonster\n            Console.WriteLine(monster.Hp());   //-->80\n            Console.WriteLine(monster.Pos().Y()); //-->2\n        }\n    }\n\n\n\n4.\u30d9\u30f3\u30c1\u30de\u30fc\u30af / \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\n\u4ee5\u4e0b\u306e\u8868\u306f\u3053\u3053\u304b\u3089\u5f15\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n\nFlatBuffers (binary)\nProtocol Buffers LITE\nRapid JSON\nFlatBuffers (JSON)\npugixml\nRaw structs\n\n\n\n\nDecode + Traverse + Dealloc (1\u4e07\u56de, \u79d2)\n0.08\n302\n583\n105\n196\n0.02\n\n\nDecode / Traverse / Dealloc (\u5185\u8a33)\n0 / 0.08 / 0\n220 / 0.15 / 81\n294 / 0.9 / 287\n70 / 0.08 / 35\n41 / 3.9 / 150\n0 / 0.02 / 0\n\n\nEncode (1\u4e07\u56de, \u79d2)\n3.2\n185\n650\n169\n273\n0.15\n\n\n\u5272\u308a\u5f53\u3066\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30b5\u30a4\u30ba (\u901a\u5e38 / zlib\u5727\u7e2e, bytes)\n344 / 220\n228 / 174\n1475 / 322\n1029 / 298\n1137 / 341\n312 / 187\n\n\n\u30c7\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u30e1\u30e2\u30ea (bytes / blocks)\n0 / 0\n760 / 20\n65689 / 4\n328 / 1\n34194 / 3\n0 / 0\n\n\n\u30c7\u30b3\u30fc\u30c9\u6642\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u4e00\u6642\u7684\u306a\u30e1\u30e2\u30ea (KB)\n0\n1\n131\n4\n34\n0\n\n\n\u751f\u6210\u3055\u308c\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30b5\u30a4\u30ba (KB)\n4\n61\n0\n4\n0\n0\n\n\n\u624b\u66f8\u304d\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u30a2\u30af\u30bb\u30b9\n\u578b\u6307\u5b9a\u3055\u308c\u305f\u30a2\u30af\u30bb\u30b5\n\u578b\u6307\u5b9a\u3055\u308c\u305f\u30a2\u30af\u30bb\u30b5\n\u624b\u52d5\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\n\u578b\u6307\u5b9a\u3055\u308c\u305f\u30a2\u30af\u30bb\u30b5\n\u624b\u52d5\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\n\u578b\u6307\u5b9a\u3060\u304c\u5b89\u5168\u3067\u306f\u306a\u3044\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30b5\u30a4\u30ba (KB)\n15\nsome subset of 3800\n87\n43\n327\n0\n\n\n\n\nmsgpack\u3068\u306e\u6bd4\u8f03\u3082\u6b32\u3057\u3044\n\u305d\u3082\u305d\u3082\u30c7\u30b3\u30fc\u30c9\u3084\u30a8\u30f3\u30b3\u30fc\u30c9\u3092\u3057\u306a\u3044\u306e\u3067\u901f\u5ea6\u304c\u6841\u9055\u3044\n\n\n\u6240\u611f\nIDL\u4f5c\u6210\u3084\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u624b\u9806\u306e\u591a\u3055\u306a\u3069\u3001\u958b\u767a\u306b\u624b\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3001\u958b\u767a\u52b9\u7387\u4ee5\u4e0a\u306b\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u8981\u6c42\u3055\u308c\u308b\u3088\u3046\u306a\u5168\u4f53\u6700\u9069\u304c\u6c42\u3081\u3089\u308c\u308b\u90e8\u5206\u3067\u306f\u5229\u7528\u4fa1\u5024\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u306e\u3068\u3053\u308d\u65e2\u5b58\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u306b\u6bd4\u3079\u308b\u3068\u958b\u767a\u30b3\u30b9\u30c8\u304c\u9ad8\u3044\u306e\u3067\u3001\u305d\u3053\u304c\u6539\u5584\u3055\u308c\u308c\u3070\u63a1\u7528\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u5897\u3048\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\n\u6b63\u76f4\u6271\u3044\u3065\u3089\u3044\u3002\u304d\u3063\u3068\u8ab0\u304b\u304cGoogle\u7d14\u6b63\u306e\u5b9f\u88c5\u4ee5\u5916\u306bC#\u3089\u3057\u3044FlatBuffers\u3092\u5b9f\u88c5\u3057\u3066\u304f\u308c\u308b\u3060\u308d\u3046\u3068\u671f\u5f85\u3057\u3066\u3044\u307e\u3059\u3002\n[WEB+DB Vol.86](http://gihyo.jp/magazine/wdpress/archive/2015/vol86)\u3067FlatBuffers\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u305f\u306e\u3067C#\u3067\u8a66\u3057\u305f\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\u8a18\u4e8b\u3092\u66f8\u3044\u305f\u6642\u70b9\u3067\u306eFlatBuffers\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 1.1.0 \u3067\u3059\u3002\n\n# FlatBuffers\u3068\u306f\n[FlatBuffers](http://google.github.io/flatbuffers/)\u3068\u306fGoogle\u304c\u958b\u767a\u3057\u305f\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u3067\u3042\u308a\u3001\u30cf\u30a4\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u8981\u6c42\u3055\u308c\u308b\u3088\u3046\u306a\u30b2\u30fc\u30e0\u306b\u9069\u3057\u3066\u3044\u308b\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n##\u7279\u5fb4\n* \u30d1\u30fc\u30b9\u3084unpacking\u304c\u4e0d\u8981\u3067\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n* \u30e1\u30e2\u30ea\u52b9\u7387\u304c\u826f\u304f\u3001\u9ad8\u901f\n* \u30d5\u30ec\u30ad\u30b7\u30d6\u30eb - \u5f8c\u65b9\u4e92\u63db\u6027\u3092\u5099\u3048\u308b\n* \u53b3\u5bc6\u306a\u578b\u6307\u5b9a\n* \u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0(C++11/Java/C#/Go)\n\n##\u5229\u7528\u306e\u8981\u70b9\n1. \u30b9\u30ad\u30fc\u30de\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\n2. C#\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306bflatc(\u30b9\u30ad\u30fc\u30de\u30b3\u30f3\u30d1\u30a4\u30e9)\u3092\u4f7f\u3046\n3. \u30d5\u30e9\u30c3\u30c8\u306a\u30d0\u30a4\u30ca\u30ea\u30d0\u30c3\u30d5\u30a1\u30fc\u3092\u69cb\u6210\u3059\u308b\u305f\u3081\u306bFlatBufferBuilder\u3092\u4f7f\u3046\n4. \u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u305f\u30d0\u30a4\u30ca\u30ea\u30d0\u30c3\u30d5\u30a1\u30fc\u3092\u4f55\u51e6\u304b\u3078\u9001\u4fe1\u307e\u305f\u306f\u4fdd\u5b58\u3059\u308b\n5. \u9006\u306b\u8aad\u307f\u8fbc\u3080\u3068\u304d\u306b\u306f\u30d0\u30a4\u30ca\u30ea\u30d0\u30c3\u30d5\u30a1\u30fc\u304b\u3089\u30eb\u30fc\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u5f97\u3057\u3001object.Filed()\u306e\u3088\u3046\u306b\u7c21\u5358\u306b\u53d6\u308a\u51fa\u305b\u308b\n\n#1. IDL\u3092\u5b9a\u7fa9\n\u307e\u305a\u3001\u5229\u7528\u3059\u308b\u306b\u306f\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u5bfe\u8c61\u306e\u30c7\u30fc\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```idl:sample.fbs\n// example IDL file\n\nnamespace MyGame;\n\nenum Color:byte { Red = 0, Green, Blue = 2 }\n\nunion Any { Monster }  // add more elements..\n\nstruct Vec3 {\n  x:float;\n  y:float;\n  z:float;\n}\n\ntable Monster {\n  pos:Vec3;\n  mana:short = 150;\n  hp:short = 100;\n  name:string;\n  friendly:bool = false (deprecated);\n  inventory:[ubyte];\n  color:Color = Blue;\n}\n\nroot_type Monster;\n```\n\n# 2.\u30b9\u30ad\u30fc\u30de\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\n\u30b9\u30ad\u30fc\u30de\u30b3\u30f3\u30d1\u30a4\u30e9(flatc)\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3053\u3068\u3067\u30af\u30e9\u30b9\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308b\u3002\nflatc.exe\u306f[\u3053\u3053](https://github.com/google/flatbuffers/releases)\u304b\u3089ZIP\u53d6\u5f97\u3059\u308b\u304b\u81ea\u5206\u3067\u30d3\u30eb\u30c9\u3059\u308b\u3002\n```\n$ flatc.exe -n sample.fbs\n```\n\u203b\u300c-n\u300d\u30aa\u30d7\u30b7\u30e7\u30f3\u306f(.NET\u304b\u3089)C#\u306e\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u610f\u5473\u3002\u300c-j\u300d\u3067\u3042\u308c\u3070Java\u306e\u30af\u30e9\u30b9\u304c\u751f\u6210\u3055\u308c\u308b\u3002\u300c-c\u300d\u306fC++\u3002\n\n## \u53c2\u8003\u307e\u3067\u306b\u751f\u6210\u3055\u308c\u305f\u30af\u30e9\u30b9\u306e\u4f8b\n```csharp:MyGame/Monster.cs\n// automatically generated, do not modify\n\nnamespace MyGame\n{\n\nusing FlatBuffers;\n\npublic sealed class Monster : Table {\n  public static Monster GetRootAsMonster(ByteBuffer _bb) { return GetRootAsMonster(_bb, new Monster()); }\n  public static Monster GetRootAsMonster(ByteBuffer _bb, Monster obj) { return (obj.__init(_bb.GetInt(_bb.position()) + _bb.position(), _bb)); }\n  public Monster __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }\n\n  public Vec3 Pos() { return Pos(new Vec3()); }\n  public Vec3 Pos(Vec3 obj) { int o = __offset(4); return o != 0 ? obj.__init(o + bb_pos, bb) : null; }\n  public short Mana() { int o = __offset(6); return o != 0 ? bb.GetShort(o + bb_pos) : (short)150; }\n  public short Hp() { int o = __offset(8); return o != 0 ? bb.GetShort(o + bb_pos) : (short)100; }\n  public string Name() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }\n  public byte Inventory(int j) { int o = __offset(14); return o != 0 ? bb.Get(__vector(o) + j * 1) : (byte)0; }\n  public int InventoryLength() { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; }\n  public Color Color() { int o = __offset(16); return o != 0 ? (Color)bb.GetSbyte(o + bb_pos) : (Color)2; }\n\n  public static void StartMonster(FlatBufferBuilder builder) { builder.StartObject(7); }\n  public static void AddPos(FlatBufferBuilder builder, int posOffset) { builder.AddStruct(0, posOffset, 0); }\n  public static void AddMana(FlatBufferBuilder builder, short mana) { builder.AddShort(1, mana, 150); }\n  public static void AddHp(FlatBufferBuilder builder, short hp) { builder.AddShort(2, hp, 100); }\n  public static void AddName(FlatBufferBuilder builder, int nameOffset) { builder.AddOffset(3, nameOffset, 0); }\n  public static void AddInventory(FlatBufferBuilder builder, int inventoryOffset) { builder.AddOffset(5, inventoryOffset, 0); }\n  public static int CreateInventoryVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }\n  public static void StartInventoryVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }\n  public static void AddColor(FlatBufferBuilder builder, Color color) { builder.AddSbyte(6, (sbyte)(color), 2); }\n  public static int EndMonster(FlatBufferBuilder builder) {\n    int o = builder.EndObject();\n    return o;\n  }\n  public static void FinishMonsterBuffer(FlatBufferBuilder builder, int offset) { builder.Finish(offset); }\n};\n\n\n}\n\n```\n\n# 3.FlatBuffers\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6e96\u5099\nVisualStudio\u3067\u4f55\u304b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u307e\u305anuget\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u306a\u3044\u304b\u691c\u7d22\u3059\u308b\u3082\u306e\u3067\u3059\u304c\u3001FlatBuffers\u306b\u306fnuget\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u3042\u308a\u307e\u305b\u3093\u3002(\u4e0d\u4fbf\u30fb\u30fb\u30fb)\n\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u306a\u3044\u306e\u3067GitHub\u304b\u3089[ZIP\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9](https://github.com/google/flatbuffers/releases)\u3001\u307e\u305f\u306fgit\u3067clone\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30ed\u30fc\u30c9\u3059\u308b\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002(nuget\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u3092\u5e0c\u671b)\n\u53d6\u5f97\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e2d\u306b\u306fJava\u3084Go\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306fC#\u3067\u306e\u5229\u7528\u306a\u306e\u3067\u3001```net/FlatBuffers```\u4ee5\u4e0b\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u5229\u7528\u3057\u305f\u3044\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u306b\u653e\u308a\u8fbc\u3093\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n# 4.\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3068\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\n\n```csharp:Program.cs\nusing FlatBuffers;\n\ninternal class Program\n    {\n        private static void Main()\n        {\n            //\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\n            var fbb = new FlatBufferBuilder(1);\n            int str = fbb.CreateString(\"MyMonster\");\n            Monster.StartMonster(fbb);\n            Monster.AddName(fbb, str);\n            Monster.AddHp(fbb, 80);\n            Monster.AddPos(fbb, Vec3.CreateVec3(fbb, 1.0f, 2.0f, 3.0f));\n            int mon = Monster.EndMonster(fbb);\n            Monster.FinishMonsterBuffer(fbb, mon);\n            var buf = fbb.DataBuffer();\n\n            //\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\n            Monster monster = Monster.GetRootAsMonster(buf);\n            Console.WriteLine(monster.Name()); //-->MyMonster\n            Console.WriteLine(monster.Hp());   //-->80\n            Console.WriteLine(monster.Pos().Y()); //-->2\n        }\n    }\n```\n\n\n# 4.\u30d9\u30f3\u30c1\u30de\u30fc\u30af / \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\n\n\u4ee5\u4e0b\u306e\u8868\u306f[\u3053\u3053](https://google.github.io/flatbuffers/md__benchmarks.html)\u304b\u3089\u5f15\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n| |FlatBuffers (binary)|\tProtocol Buffers LITE|\tRapid JSON|\tFlatBuffers (JSON)|\tpugixml|\tRaw structs|\n|:-----------|:-----------|:-----------|:-----------|:-----------|:-----------|:-----------|\n|Decode + Traverse + Dealloc (1\u4e07\u56de, \u79d2)\t|0.08\t|302|\t583|\t105\t|196|\t0.02|\n|Decode / Traverse / Dealloc (\u5185\u8a33)|\t0 / 0.08 / 0|\t220 / 0.15 / 81|\t294 / 0.9 / 287|\t70 / 0.08 / 35|\t41 / 3.9 / 150|\t0 / 0.02 / 0|\n|Encode (1\u4e07\u56de, \u79d2)|\t3.2|\t185\t|650|\t169\t|273|\t0.15|\n|\u5272\u308a\u5f53\u3066\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30b5\u30a4\u30ba (\u901a\u5e38 / zlib\u5727\u7e2e, bytes)|\t344 / 220\t|228 / 174|\t1475 / 322|\t1029 / 298|\t1137 / 341|\t312 / 187|\n|\u30c7\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u30e1\u30e2\u30ea (bytes / blocks)|\t0 / 0\t|760 / 20|\t65689 / 4|\t328 / 1|\t34194 / 3|\t0 / 0|\n|\u30c7\u30b3\u30fc\u30c9\u6642\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u4e00\u6642\u7684\u306a\u30e1\u30e2\u30ea (KB)|\t0|\t1|\t131|\t4\t|34|\t0|\n|\u751f\u6210\u3055\u308c\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30b5\u30a4\u30ba (KB)|\t4|\t61|\t0|\t4|\t0|\t0|\n|\u624b\u66f8\u304d\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u30a2\u30af\u30bb\u30b9|\t\u578b\u6307\u5b9a\u3055\u308c\u305f\u30a2\u30af\u30bb\u30b5|\t\u578b\u6307\u5b9a\u3055\u308c\u305f\u30a2\u30af\u30bb\u30b5|\t\u624b\u52d5\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af|\t\u578b\u6307\u5b9a\u3055\u308c\u305f\u30a2\u30af\u30bb\u30b5|\t\u624b\u52d5\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af|\t\u578b\u6307\u5b9a\u3060\u304c\u5b89\u5168\u3067\u306f\u306a\u3044|\n|\u30e9\u30a4\u30d6\u30e9\u30ea\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30b5\u30a4\u30ba (KB)|\t15|\tsome subset of 3800|\t87|\t43\t|327|\t0|\n\n* msgpack\u3068\u306e\u6bd4\u8f03\u3082\u6b32\u3057\u3044\n* \u305d\u3082\u305d\u3082\u30c7\u30b3\u30fc\u30c9\u3084\u30a8\u30f3\u30b3\u30fc\u30c9\u3092\u3057\u306a\u3044\u306e\u3067\u901f\u5ea6\u304c\u6841\u9055\u3044\n\n\n# \u6240\u611f\nIDL\u4f5c\u6210\u3084\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u624b\u9806\u306e\u591a\u3055\u306a\u3069\u3001**\u958b\u767a\u306b\u624b\u9593\u304c\u304b\u304b\u308b**\u306e\u3067\u3001**\u958b\u767a\u52b9\u7387\u4ee5\u4e0a\u306b\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9**\u304c\u8981\u6c42\u3055\u308c\u308b\u3088\u3046\u306a\u5168\u4f53\u6700\u9069\u304c\u6c42\u3081\u3089\u308c\u308b\u90e8\u5206\u3067\u306f\u5229\u7528\u4fa1\u5024\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u306e\u3068\u3053\u308d\u65e2\u5b58\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30b6\u306b\u6bd4\u3079\u308b\u3068\u958b\u767a\u30b3\u30b9\u30c8\u304c\u9ad8\u3044\u306e\u3067\u3001\u305d\u3053\u304c\u6539\u5584\u3055\u308c\u308c\u3070\u63a1\u7528\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u5897\u3048\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\n\u6b63\u76f4\u6271\u3044\u3065\u3089\u3044\u3002\u304d\u3063\u3068\u8ab0\u304b\u304cGoogle\u7d14\u6b63\u306e\u5b9f\u88c5\u4ee5\u5916\u306bC#\u3089\u3057\u3044FlatBuffers\u3092\u5b9f\u88c5\u3057\u3066\u304f\u308c\u308b\u3060\u308d\u3046\u3068\u671f\u5f85\u3057\u3066\u3044\u307e\u3059\u3002\n", "tags": ["C#", "FlatBuffers1.1.0", "\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba", ".NET"]}