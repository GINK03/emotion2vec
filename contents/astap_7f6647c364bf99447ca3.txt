{"tags": ["Redis", "Elixir", "Phoenix"], "context": " More than 1 year has passed since last update.elixir\u306eWeb,API\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308bphoenix\u3068\u3001\nKVS\u306eRedis\u3092\u4f7f\u7528\u3057API\u3092\u4f5c\u6210\u3059\u308b\u3002\nmix phoenix.new api_sample\ncd api_sample\n\n\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u306bexredis\u3092\u8ffd\u52a0\n\nmix.exs\n  defp deps do\n    [{:phoenix, \"~> 1.0.3\"},\n     {:phoenix_ecto, \"~> 1.1\"},\n     {:postgrex, \">= 0.0.0\"},\n     {:phoenix_html, \"~> 2.1\"},\n     {:phoenix_live_reload, \"~> 1.0\", only: :dev},\n     {:cowboy, \"~> 1.0\"},\n     {:exredis, \">= 0.2.2\"}\n   ]\n  end\n\n\nmid deps.get\n\nredis\u306e\u63a5\u7d9a\u60c5\u5831\u3092\u8ffd\u52a0\n\nconfig.exs\nconfig :exredis,\n  host: \"127.0.0.1\",\n  port: 6379,\n  password: \"\",\n  db: 0,\n  reconnect: :no_reconnect,\n  max_queue: :infinity\n\n\npipe_through :browser\u3092:api\u306b\u5909\u66f4\nPageController\u306f\u4e00\u65e6\u3053\u306e\u307e\u307e\u3067\u3002\n\nrouter.ex\n  scope \"/\", ApiSample do\n    pipe_through :api # Use the default browser stack\n\n    get \"/\", PageController, :index\n  end\n\n\nindex\u306e\u623b\u308a\u5024\u3092json\u306b\u3057\u307e\u3059\u3002\n\npage_controller.ex\ndefmodule ApiSample.PageController do\n  use ApiSample.Web, :controller\n\n  def index(conn, _params) do\n    json conn, %{params: _params}\n  end\nend\n\n\n\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\nmix phoenix.server\n\nhttp://localhost:4000/?a=b\n\u7b49\u3078\u30a2\u30af\u30bb\u30b9\n\u4ee5\u4e0b\u306e\u7d50\u679c\u304c\u53d6\u308c\u307e\u3057\u305f\u3002\n{\n  params: {\n    a: \"b\"\n  }\n}\n\ntest\u3082\u66f8\u304d\u307e\u3059\u3002\n\npage_controller_test.ex\ndefmodule ApiSample.PageControllerTest do\n  use ApiSample.ConnCase\n\n  test \"GET /\" do\n    conn = get conn(), \"/?a=b\"\n\n    assert json_response(conn,200) == %{\"params\" => %{\"a\" => \"b\"}}\n  end\nend\n\n\nEcto\u306e\u8a2d\u5b9a\u3092\u8272\u3005\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u7b49\u3057\u306a\u3044\u3068\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3067\u304d\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nmix test\n\nFinished in 0.3 seconds (0.2s on load, 0.1s on tests)\n1 test, 0 failures\n\n\u7121\u4e8b\u30c6\u30b9\u30c8\u304c\u901a\u308a\u307e\u3057\u305f\u3002\n\u3067\u306f\u3001\u6b21\u306bRedis\u306b\u30c7\u30fc\u30bf\u3092\u30bb\u30c3\u30c8\u3057\u305f\u308a\u30b2\u30c3\u30c8\u3057\u305f\u308a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nrouter.ex\n  scope \"/\", ApiSample do\n    pipe_through :api # Use the default browser stack\n\n    get \"/\", PageController, :index\n    get \"/get\", PageController, :get \n  end\n\n\nrouter.ex\u306brouting\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n/get\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\u518d\u3073page_controller\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\npage_controller.ex\ndefmodule ApiSample.PageController do\n  use ApiSample.Web, :controller\n  import Exredis\n\n  def index(conn, _params) do\n    _params |> Enum.map fn {k, v} -> start_link |> elem(1) |> query [\"SET\", k, v] end\n    json conn, %{params: _params}\n  end\n\n  def get(conn, %{\"key\" => key}) do\n    json conn, %{ key: start_link |> elem(1) |> query [\"GET\", key] }\n  end\nend\n\n\n\u5358\u7d14\u306b\u3001set\u3057\u3066get\u3067\u304d\u308b\u3084\u3064\u3067\u3059\u3002\nindex\u306f\u53d7\u3051\u53d6\u3063\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092redis\u306bset\u3057\u307e\u3059\u3002\nget\u3067\u306f\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3067\u3001key\u3068\u3044\u3046\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d7\u3051\u3066\u3044\u307e\u3059\u3002\n\u53d7\u3051\u53d6\u3063\u305fkey\u3067redis\u304b\u3089\u30c7\u30fc\u30bf\u3092get\u3057\u307e\u3059\u3002\n\u7d9a\u3044\u3066\u30c6\u30b9\u30c8\u3082\u5408\u308f\u305b\u3066\u76f4\u3057\u307e\u3059\u3002\uff08\u672c\u5f53\u306f\u30c6\u30b9\u30c8\u304b\u3089\u4f5c\u308b\u3079\u304d\u3067\u3059\u306d\uff09\n\npage_controller_test.exs\ndefmodule ApiSample.PageControllerTest do\n  use ApiSample.ConnCase\n\n  test \"GET /\" do\n    conn = get conn(), \"/?a=b\"\n\n    assert json_response(conn,200) == %{\"status\" => \"ok\"}\n  end\n\n  test \"GET /get\" do\n    get conn(), \"/a=b\"\n    conn = get conn(), \"/get?key=a\"\n\n    assert json_response(conn,200) == %{\"status\" => \"ok\", \"key\" => \"b\"}\n  end\nend\n\n\n\u51fa\u6765\u307e\u3057\u305f\uff01\n\u307e\u3068\u3081\nRedis\u306e\u547c\u3073\u65b9\u304c\u3044\u307e\u3044\u3061\u3067\u3059\u304c\u3001\u76ee\u7684\u306f\u9054\u6210\u3067\u3059\u3002\nRedis\u306e\u3044\u3044\u547c\u3073\u65b9\u3092\u8003\u3048\u307e\u3059\u3002\n\nelixir\u306eWeb,API\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308bphoenix\u3068\u3001\nKVS\u306eRedis\u3092\u4f7f\u7528\u3057API\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n```\nmix phoenix.new api_sample\ncd api_sample\n```\n\n\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u306b`exredis`\u3092\u8ffd\u52a0\n\n```mix.exs\n  defp deps do\n    [{:phoenix, \"~> 1.0.3\"},\n     {:phoenix_ecto, \"~> 1.1\"},\n     {:postgrex, \">= 0.0.0\"},\n     {:phoenix_html, \"~> 2.1\"},\n     {:phoenix_live_reload, \"~> 1.0\", only: :dev},\n     {:cowboy, \"~> 1.0\"},\n     {:exredis, \">= 0.2.2\"}\n   ]\n  end\n```\n\n```\nmid deps.get\n```\n\nredis\u306e\u63a5\u7d9a\u60c5\u5831\u3092\u8ffd\u52a0\n\n```config.exs\nconfig :exredis,\n  host: \"127.0.0.1\",\n  port: 6379,\n  password: \"\",\n  db: 0,\n  reconnect: :no_reconnect,\n  max_queue: :infinity\n```\n\npipe_through :browser\u3092:api\u306b\u5909\u66f4\nPageController\u306f\u4e00\u65e6\u3053\u306e\u307e\u307e\u3067\u3002\n\n```router.ex\n  scope \"/\", ApiSample do\n    pipe_through :api # Use the default browser stack\n\n    get \"/\", PageController, :index\n  end\n```\n\nindex\u306e\u623b\u308a\u5024\u3092json\u306b\u3057\u307e\u3059\u3002\n\n```page_controller.ex\ndefmodule ApiSample.PageController do\n  use ApiSample.Web, :controller\n\n  def index(conn, _params) do\n    json conn, %{params: _params}\n  end\nend\n```\n\n\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```\nmix phoenix.server\n```\n\nhttp://localhost:4000/?a=b\n\u7b49\u3078\u30a2\u30af\u30bb\u30b9\n\n\u4ee5\u4e0b\u306e\u7d50\u679c\u304c\u53d6\u308c\u307e\u3057\u305f\u3002\n\n```\n{\n  params: {\n    a: \"b\"\n  }\n}\n```\n\ntest\u3082\u66f8\u304d\u307e\u3059\u3002\n\n```page_controller_test.ex\ndefmodule ApiSample.PageControllerTest do\n  use ApiSample.ConnCase\n\n  test \"GET /\" do\n    conn = get conn(), \"/?a=b\"\n\n    assert json_response(conn,200) == %{\"params\" => %{\"a\" => \"b\"}}\n  end\nend\n```\n\nEcto\u306e\u8a2d\u5b9a\u3092\u8272\u3005\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u7b49\u3057\u306a\u3044\u3068\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3067\u304d\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n```\nmix test\n\nFinished in 0.3 seconds (0.2s on load, 0.1s on tests)\n1 test, 0 failures\n```\n\n\u7121\u4e8b\u30c6\u30b9\u30c8\u304c\u901a\u308a\u307e\u3057\u305f\u3002\n\n\u3067\u306f\u3001\u6b21\u306bRedis\u306b\u30c7\u30fc\u30bf\u3092\u30bb\u30c3\u30c8\u3057\u305f\u308a\u30b2\u30c3\u30c8\u3057\u305f\u308a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n```router.ex\n  scope \"/\", ApiSample do\n    pipe_through :api # Use the default browser stack\n\n    get \"/\", PageController, :index\n    get \"/get\", PageController, :get \n  end\n```\n\nrouter.ex\u306brouting\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n/get\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n\u518d\u3073page_controller\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n```page_controller.ex\ndefmodule ApiSample.PageController do\n  use ApiSample.Web, :controller\n  import Exredis\n\n  def index(conn, _params) do\n    _params |> Enum.map fn {k, v} -> start_link |> elem(1) |> query [\"SET\", k, v] end\n    json conn, %{params: _params}\n  end\n\n  def get(conn, %{\"key\" => key}) do\n    json conn, %{ key: start_link |> elem(1) |> query [\"GET\", key] }\n  end\nend\n```\n\n\u5358\u7d14\u306b\u3001set\u3057\u3066get\u3067\u304d\u308b\u3084\u3064\u3067\u3059\u3002\nindex\u306f\u53d7\u3051\u53d6\u3063\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092redis\u306bset\u3057\u307e\u3059\u3002\nget\u3067\u306f\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3067\u3001key\u3068\u3044\u3046\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d7\u3051\u3066\u3044\u307e\u3059\u3002\n\u53d7\u3051\u53d6\u3063\u305fkey\u3067redis\u304b\u3089\u30c7\u30fc\u30bf\u3092get\u3057\u307e\u3059\u3002\n\n\u7d9a\u3044\u3066\u30c6\u30b9\u30c8\u3082\u5408\u308f\u305b\u3066\u76f4\u3057\u307e\u3059\u3002\uff08\u672c\u5f53\u306f\u30c6\u30b9\u30c8\u304b\u3089\u4f5c\u308b\u3079\u304d\u3067\u3059\u306d\uff09\n\n```page_controller_test.exs\ndefmodule ApiSample.PageControllerTest do\n  use ApiSample.ConnCase\n\n  test \"GET /\" do\n    conn = get conn(), \"/?a=b\"\n\n    assert json_response(conn,200) == %{\"status\" => \"ok\"}\n  end\n\n  test \"GET /get\" do\n    get conn(), \"/a=b\"\n    conn = get conn(), \"/get?key=a\"\n    \n    assert json_response(conn,200) == %{\"status\" => \"ok\", \"key\" => \"b\"}\n  end\nend\n```\n\n\u51fa\u6765\u307e\u3057\u305f\uff01\n\n\u307e\u3068\u3081\n\nRedis\u306e\u547c\u3073\u65b9\u304c\u3044\u307e\u3044\u3061\u3067\u3059\u304c\u3001\u76ee\u7684\u306f\u9054\u6210\u3067\u3059\u3002\nRedis\u306e\u3044\u3044\u547c\u3073\u65b9\u3092\u8003\u3048\u307e\u3059\u3002\n\n"}