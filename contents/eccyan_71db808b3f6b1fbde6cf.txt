{"context": " More than 1 year has passed since last update.\u4eca\u73fe\u5728 Lolipop \u3088\u308a\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u958b\u767a\u3092\u884c\u3063\u3066\u308b\u3068setElevation\u304c\u53cd\u6620\u3055\u308c\u307e\u305b\u3093\u3002\n\u30d5\u30e9\u30c3\u30c8\u3067\u3059\u304c\u3001\u968f\u5206\u3068\u30ce\u30c3\u30da\u30ea\u3068\u3057\u305f\u30c7\u30b6\u30a4\u30f3\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u306d\u3002\n\nView \u306b\u5f71\u3092\u4ed8\u3051\u308b\u65b9\u6cd5\u306f\u3001\u3053\u3053\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u69d8\u306b 9-patch \u3084 shape \u3092\u4f7f\u3046\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4e2d\u3067\u3082\u30ab\u30b9\u30bf\u30e0\u30d3\u30e5\u30fc\u5185\u3067onDraw\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u65b9\u6cd5\u304c\u4e00\u756a\u624b\u9803\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u4e0a\u8a18\u30b5\u30a4\u30c8\u3067\u3082\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b Shadow.java \u306f\u81ea\u5206\u306e\u5f71\u306e\u63cf\u753b\u3092\u884c\u3046\u306e\u3067\u3059\u304c\u3001\u63cf\u753b\u9806\u306b\u3088\u3063\u3066\u306f\u6298\u89d2\u63cf\u753b\u3057\u305f\u5f71\u304c\u4e0a\u66f8\u304d\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u306a\u306e\u3067\u3001\u63cf\u753b\u304c\u5f8c\u306e View \u304c\u524d\u306e View \u306e\u5f71\u3092\u63cf\u753b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nshadows.java\nimport android.content.res.Resources;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.Rect;\nimport android.graphics.drawable.GradientDrawable;\nimport android.os.Build;\nimport android.util.SparseArray;\nimport android.view.View;\n\nimport static android.graphics.drawable.GradientDrawable.Orientation;\nimport static android.graphics.drawable.GradientDrawable.Orientation.LEFT_RIGHT;\nimport static android.graphics.drawable.GradientDrawable.Orientation.TOP_BOTTOM;\n\n/**\n * Improved PeterAttardo/Shadow.java\n * @see{https://gist.github.com/PeterAttardo/cc722b7649d0e62274b2}\n */\npublic class Shadows {\n\n    private static final int START_COLOR = Color.parseColor(\"#55000000\");\n\n    private static final int END_COLOR = Color.parseColor(\"#00000000\");\n\n    private static final int SHADOW_LENGTH = (int) (5 * Resources.getSystem()\n            .getDisplayMetrics().density);\n\n    private static final Orientation[] shadowOrientations =\n            new Orientation[]{TOP_BOTTOM, LEFT_RIGHT};\n\n    private static int[] colors = new int[]{START_COLOR, END_COLOR};\n\n    private static SparseArray linearGradients = new SparseArray() {{\n        for (Orientation orientation : shadowOrientations) {\n            put(orientation.ordinal(), new GradientDrawable(orientation, colors));\n        }\n    }};\n\n    private static GradientDrawable radialGradient = new GradientDrawable() {{\n        setGradientType(RADIAL_GRADIENT);\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {\n            setColors(colors);\n        } else {\n            setColor(END_COLOR);\n        }\n        setGradientRadius(SHADOW_LENGTH);\n    }};\n\n\n    static public void bindShadow(Canvas canvas, View view) {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            return;\n        }\n\n        int height = view.getHeight();\n        int width = view.getWidth();\n\n        Rect bottomBounds = new Rect(SHADOW_LENGTH, height, width, height + SHADOW_LENGTH);\n        drawShadow(canvas, TOP_BOTTOM, bottomBounds);\n\n        Rect rightBounds = new Rect(width, SHADOW_LENGTH, width + SHADOW_LENGTH, height);\n        drawShadow(canvas, LEFT_RIGHT, rightBounds);\n\n        Rect cornerBLBounds = new Rect(0, height, SHADOW_LENGTH, height + SHADOW_LENGTH);\n        radialGradient.setBounds(cornerBLBounds);\n        radialGradient.setGradientCenter(1, 0);\n        radialGradient.draw(canvas);\n\n        Rect cornerBRBounds = new Rect(width, height, width + SHADOW_LENGTH,\n                height + SHADOW_LENGTH);\n        radialGradient.setBounds(cornerBRBounds);\n        radialGradient.setGradientCenter(0, 0);\n        radialGradient.draw(canvas);\n\n        Rect cornerTRBounds = new Rect(width, 0, width + SHADOW_LENGTH, SHADOW_LENGTH);\n        radialGradient.setBounds(cornerTRBounds);\n        radialGradient.setGradientCenter(0, 1);\n        radialGradient.draw(canvas);\n    }\n\n    static public void bindAboveShadow(Canvas canvas, View view) {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            return;\n        }\n\n        int height = 0;\n        int width = view.getWidth();\n\n        Rect bottomBounds = new Rect(SHADOW_LENGTH, height, width, height + SHADOW_LENGTH);\n        drawShadow(canvas, TOP_BOTTOM, bottomBounds);\n\n        Rect rightBounds = new Rect(width, SHADOW_LENGTH, width + SHADOW_LENGTH, height);\n        drawShadow(canvas, LEFT_RIGHT, rightBounds);\n\n        Rect cornerBLBounds = new Rect(0, height, SHADOW_LENGTH, height + SHADOW_LENGTH);\n        radialGradient.setBounds(cornerBLBounds);\n        radialGradient.setGradientCenter(1, 0);\n        radialGradient.draw(canvas);\n\n        Rect cornerBRBounds = new Rect(width, height, width + SHADOW_LENGTH,\n                height + SHADOW_LENGTH);\n        radialGradient.setBounds(cornerBRBounds);\n        radialGradient.setGradientCenter(0, 0);\n        radialGradient.draw(canvas);\n\n        Rect cornerTRBounds = new Rect(width, 0, width + SHADOW_LENGTH, SHADOW_LENGTH);\n        radialGradient.setBounds(cornerTRBounds);\n        radialGradient.setGradientCenter(0, 1);\n        radialGradient.draw(canvas);\n    }\n\n    static private void drawShadow(Canvas canvas, Orientation orientation,\n            Rect bounds) {\n        GradientDrawable linearGradient = (GradientDrawable) linearGradients\n                .get(orientation.ordinal());\n        linearGradient.setBounds(bounds);\n        linearGradient.draw(canvas);\n    }\n}\n\n\n\u65b0\u3057\u304f\u5b9a\u7fa9\u3057\u305fbindAboveShadow\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u3066\u3001onDraw\u5185\u3067\u63cf\u753b\u3092\u884c\u3044\u307e\u3059\u3002\n\u4e0b\u8a18\u306f Toolbar \u3068 PagerSlidingTabStrip\u3001ViewPager \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306e\u4f8b\u3067\u3059\u3002\n<AwesomeViewPagerView\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:clipChildren=\"false\"\n        android:clipToPadding=\"false\"\n        android:orientation=\"vertical\">\n\n    <include android:id=\"@+id/toolbar\"\n             layout=\"@layout/layout_toolbar\"/>\n\n    <!-- PagerSlidingTabStrip \u3092\u7d99\u627f\u3057\u3066 onDrow \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9 -->\n    <com.example.ShadowablePagerSlidingTabStrip\n            android:id=\"@+id/tab_strip\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"?attr/actionBarSize\"\n            android:background=\"?attr/colorPrimary\"/>\n\n    <android.support.v4.view.ViewPager\n            android:id=\"@+id/view_pager\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"1\"/>\n\n\n</AwesomeViewPagerView>\n\n\ncom.example.ShadowablePagerSlidingTabStrip.java\npublic class ShadowablePagerSlidingTabStrip extends PagerSlidingTabStrip {\n\n    public ShadowablePagerSlidingTabStrip(Context context) {\n        super(context);\n    }\n\n    public ShadowablePagerSlidingTabStrip(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public ShadowablePagerSlidingTabStrip(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        // getChildAt(0) \u3067\u30bf\u30d6\u672c\u4f53\u306e View \u306b\u8a2d\u5b9a\u3092\u304a\u3053\u306a\u3046\n        Shadows.bindAboveShadow(canvas, getChildAt(0));\n    }\n}\n\n\nViewPager \u306b\u30d0\u30a4\u30f3\u30c9\u3057\u305f View \u3082\u540c\u69d8\u306b PagerSlidingTabStrip \u306e\u5f71\u3092\u63cf\u753b\u3059\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u3001\u3057\u3063\u304b\u308a\u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\uff08onDraw\u5185\u3067\u306f\u306a\u304f\u3066dispatchDraw\u5185\u3067\u63cf\u753b\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\uff09\n\n\u30de\u30c6\u30ea\u30a2\u30eb\u30c7\u30b6\u30a4\u30f3\u3067\u3059\u304c\u3001\u3084\u306f\u308a\u5f71\u304c\u7121\u304f\u3066\u306f\u30de\u30c6\u30ea\u30a2\u30eb\u30c7\u30b6\u30a4\u30f3\u3089\u3057\u3055\u304c\u51fa\u306a\u3044\u306e\u3067\u3057\u3063\u304b\u308a\u3068\u4f5c\u308a\u3053\u3093\u3067\u884c\u304d\u305f\u3044\u3067\u3059\u306d\u3002\n\u4eca\u73fe\u5728 Lolipop \u3088\u308a\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u958b\u767a\u3092\u884c\u3063\u3066\u308b\u3068``setElevation``\u304c\u53cd\u6620\u3055\u308c\u307e\u305b\u3093\u3002\n\u30d5\u30e9\u30c3\u30c8\u3067\u3059\u304c\u3001\u968f\u5206\u3068\u30ce\u30c3\u30da\u30ea\u3068\u3057\u305f\u30c7\u30b6\u30a4\u30f3\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u306d\u3002\n\n![noshadow_1.jpg](https://qiita-image-store.s3.amazonaws.com/0/1897/573c39ad-8630-b0f5-a90d-60c721771eaa.jpeg)\n\n\nView \u306b\u5f71\u3092\u4ed8\u3051\u308b\u65b9\u6cd5\u306f\u3001[\u3053\u3053\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b](http://lexical.scopely.com/2014/08/15/backporting-android-shadows/)\u69d8\u306b 9-patch \u3084 shape \u3092\u4f7f\u3046\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4e2d\u3067\u3082\u30ab\u30b9\u30bf\u30e0\u30d3\u30e5\u30fc\u5185\u3067``onDraw``\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u65b9\u6cd5\u304c\u4e00\u756a\u624b\u9803\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4e0a\u8a18\u30b5\u30a4\u30c8\u3067\u3082\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b [Shadow.java](https://gist.github.com/PeterAttardo/cc722b7649d0e62274b2) \u306f\u81ea\u5206\u306e\u5f71\u306e\u63cf\u753b\u3092\u884c\u3046\u306e\u3067\u3059\u304c\u3001\u63cf\u753b\u9806\u306b\u3088\u3063\u3066\u306f\u6298\u89d2\u63cf\u753b\u3057\u305f\u5f71\u304c\u4e0a\u66f8\u304d\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n\u306a\u306e\u3067\u3001\u63cf\u753b\u304c\u5f8c\u306e View \u304c\u524d\u306e View \u306e\u5f71\u3092\u63cf\u753b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n```java:shadows.java\nimport android.content.res.Resources;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.Rect;\nimport android.graphics.drawable.GradientDrawable;\nimport android.os.Build;\nimport android.util.SparseArray;\nimport android.view.View;\n\nimport static android.graphics.drawable.GradientDrawable.Orientation;\nimport static android.graphics.drawable.GradientDrawable.Orientation.LEFT_RIGHT;\nimport static android.graphics.drawable.GradientDrawable.Orientation.TOP_BOTTOM;\n\n/**\n * Improved PeterAttardo/Shadow.java\n * @see{https://gist.github.com/PeterAttardo/cc722b7649d0e62274b2}\n */\npublic class Shadows {\n\n    private static final int START_COLOR = Color.parseColor(\"#55000000\");\n\n    private static final int END_COLOR = Color.parseColor(\"#00000000\");\n\n    private static final int SHADOW_LENGTH = (int) (5 * Resources.getSystem()\n            .getDisplayMetrics().density);\n\n    private static final Orientation[] shadowOrientations =\n            new Orientation[]{TOP_BOTTOM, LEFT_RIGHT};\n\n    private static int[] colors = new int[]{START_COLOR, END_COLOR};\n\n    private static SparseArray linearGradients = new SparseArray() {{\n        for (Orientation orientation : shadowOrientations) {\n            put(orientation.ordinal(), new GradientDrawable(orientation, colors));\n        }\n    }};\n\n    private static GradientDrawable radialGradient = new GradientDrawable() {{\n        setGradientType(RADIAL_GRADIENT);\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {\n            setColors(colors);\n        } else {\n            setColor(END_COLOR);\n        }\n        setGradientRadius(SHADOW_LENGTH);\n    }};\n\n\n    static public void bindShadow(Canvas canvas, View view) {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            return;\n        }\n\n        int height = view.getHeight();\n        int width = view.getWidth();\n\n        Rect bottomBounds = new Rect(SHADOW_LENGTH, height, width, height + SHADOW_LENGTH);\n        drawShadow(canvas, TOP_BOTTOM, bottomBounds);\n\n        Rect rightBounds = new Rect(width, SHADOW_LENGTH, width + SHADOW_LENGTH, height);\n        drawShadow(canvas, LEFT_RIGHT, rightBounds);\n\n        Rect cornerBLBounds = new Rect(0, height, SHADOW_LENGTH, height + SHADOW_LENGTH);\n        radialGradient.setBounds(cornerBLBounds);\n        radialGradient.setGradientCenter(1, 0);\n        radialGradient.draw(canvas);\n\n        Rect cornerBRBounds = new Rect(width, height, width + SHADOW_LENGTH,\n                height + SHADOW_LENGTH);\n        radialGradient.setBounds(cornerBRBounds);\n        radialGradient.setGradientCenter(0, 0);\n        radialGradient.draw(canvas);\n\n        Rect cornerTRBounds = new Rect(width, 0, width + SHADOW_LENGTH, SHADOW_LENGTH);\n        radialGradient.setBounds(cornerTRBounds);\n        radialGradient.setGradientCenter(0, 1);\n        radialGradient.draw(canvas);\n    }\n\n    static public void bindAboveShadow(Canvas canvas, View view) {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n            return;\n        }\n\n        int height = 0;\n        int width = view.getWidth();\n\n        Rect bottomBounds = new Rect(SHADOW_LENGTH, height, width, height + SHADOW_LENGTH);\n        drawShadow(canvas, TOP_BOTTOM, bottomBounds);\n\n        Rect rightBounds = new Rect(width, SHADOW_LENGTH, width + SHADOW_LENGTH, height);\n        drawShadow(canvas, LEFT_RIGHT, rightBounds);\n\n        Rect cornerBLBounds = new Rect(0, height, SHADOW_LENGTH, height + SHADOW_LENGTH);\n        radialGradient.setBounds(cornerBLBounds);\n        radialGradient.setGradientCenter(1, 0);\n        radialGradient.draw(canvas);\n\n        Rect cornerBRBounds = new Rect(width, height, width + SHADOW_LENGTH,\n                height + SHADOW_LENGTH);\n        radialGradient.setBounds(cornerBRBounds);\n        radialGradient.setGradientCenter(0, 0);\n        radialGradient.draw(canvas);\n\n        Rect cornerTRBounds = new Rect(width, 0, width + SHADOW_LENGTH, SHADOW_LENGTH);\n        radialGradient.setBounds(cornerTRBounds);\n        radialGradient.setGradientCenter(0, 1);\n        radialGradient.draw(canvas);\n    }\n\n    static private void drawShadow(Canvas canvas, Orientation orientation,\n            Rect bounds) {\n        GradientDrawable linearGradient = (GradientDrawable) linearGradients\n                .get(orientation.ordinal());\n        linearGradient.setBounds(bounds);\n        linearGradient.draw(canvas);\n    }\n}\n```\n\n\u65b0\u3057\u304f\u5b9a\u7fa9\u3057\u305f``bindAboveShadow``\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u3066\u3001``onDraw``\u5185\u3067\u63cf\u753b\u3092\u884c\u3044\u307e\u3059\u3002\n\u4e0b\u8a18\u306f Toolbar \u3068 PagerSlidingTabStrip\u3001ViewPager \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306e\u4f8b\u3067\u3059\u3002\n\n```xml\n<AwesomeViewPagerView\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:clipChildren=\"false\"\n        android:clipToPadding=\"false\"\n        android:orientation=\"vertical\">\n\n    <include android:id=\"@+id/toolbar\"\n             layout=\"@layout/layout_toolbar\"/>\n\n    <!-- PagerSlidingTabStrip \u3092\u7d99\u627f\u3057\u3066 onDrow \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9 -->\n    <com.example.ShadowablePagerSlidingTabStrip\n            android:id=\"@+id/tab_strip\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"?attr/actionBarSize\"\n            android:background=\"?attr/colorPrimary\"/>\n\n    <android.support.v4.view.ViewPager\n            android:id=\"@+id/view_pager\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"1\"/>\n\n\n</AwesomeViewPagerView>\n```\n\n```com.example.ShadowablePagerSlidingTabStrip.java\npublic class ShadowablePagerSlidingTabStrip extends PagerSlidingTabStrip {\n\n    public ShadowablePagerSlidingTabStrip(Context context) {\n        super(context);\n    }\n\n    public ShadowablePagerSlidingTabStrip(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public ShadowablePagerSlidingTabStrip(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        // getChildAt(0) \u3067\u30bf\u30d6\u672c\u4f53\u306e View \u306b\u8a2d\u5b9a\u3092\u304a\u3053\u306a\u3046\n        Shadows.bindAboveShadow(canvas, getChildAt(0));\n    }\n}\n```\n\nViewPager \u306b\u30d0\u30a4\u30f3\u30c9\u3057\u305f View \u3082\u540c\u69d8\u306b PagerSlidingTabStrip \u306e\u5f71\u3092\u63cf\u753b\u3059\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u3001\u3057\u3063\u304b\u308a\u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\uff08``onDraw``\u5185\u3067\u306f\u306a\u304f\u3066``dispatchDraw``\u5185\u3067\u63cf\u753b\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\uff09\n\n![shadow_1.jpg](https://qiita-image-store.s3.amazonaws.com/0/1897/a228f043-4b6c-d4ca-5d42-2eb3e3991f5b.jpeg)\n\n\n\u30de\u30c6\u30ea\u30a2\u30eb\u30c7\u30b6\u30a4\u30f3\u3067\u3059\u304c\u3001\u3084\u306f\u308a\u5f71\u304c\u7121\u304f\u3066\u306f\u30de\u30c6\u30ea\u30a2\u30eb\u30c7\u30b6\u30a4\u30f3\u3089\u3057\u3055\u304c\u51fa\u306a\u3044\u306e\u3067\u3057\u3063\u304b\u308a\u3068\u4f5c\u308a\u3053\u3093\u3067\u884c\u304d\u305f\u3044\u3067\u3059\u306d\u3002\n", "tags": ["Android4.0", "MaterialDesign"]}