{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306fVOYAGE GROUP \u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0 Advent Calendar 2014\u306e6\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u3053\u3093\u306b\u3061\u306f\u3001VOYAGE GROUP\u3067\u7247\u624b\u9593\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u696d\u306b\u5f93\u4e8b\u3057\u3066\u3044\u308b@hagino3000\u3067\u3059\u3002\n\u6628\u4eca\u306eBigQuery\u30e0\u30fc\u30d6\u30e1\u30f3\u30c8\u306b\u4e57\u3063\u3066\u3001\u5206\u6790\u7528\u306e\u30c7\u30fc\u30bf\u3092BigQuery\u306b\u6295\u5165\u3057\u306f\u3058\u3081\u305f\u65b9\u3082\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001BigQuery\u3092\u4f7f\u3044\u51fa\u3059\u3068\u3001\u96c6\u8a08\u30d0\u30c3\u30c1\u7b49\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u5b8c\u7d50\u3057\u306a\u304f\u306a\u308a\u3001BigQuery\u305d\u306e\u3082\u306e\u3092\u53c2\u7167\u3057\u305f\u304f\u306a\u308a\u307e\u3059\u3002\u672c\u8a18\u4e8b\u3067\u306f\u3044\u304f\u3064\u304b\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306fPython + nose + BigQuery-Python\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4f55\u304c\u554f\u984c\u304b\n\u4f55\u6545\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u60a9\u3080\u304b\u3068\u3044\u3046\u3068\u3001BigQuery\u306f\u6b21\u306e2\u3064\u306e\u7279\u5fb4\u3092\u6301\u3064\u304b\u3089\u3002\n\n\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u304c\u4f5c\u308c\u306a\u3044\n\u5c11\u91cf\u306e\u30c7\u30fc\u30bf\u3067\u3082\u30af\u30a8\u30ea\u306b5\u79d2\u7a0b\u5ea6\u304b\u304b\u308b\n\n\u7279\u306b\u30af\u30a8\u30ea\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u30c6\u30b9\u30c8\u3067\u306f\u3053\u308c\u3092\u77ed\u7e2e\u3057\u305f\u304f\u306a\u308b\u3002\n\n\u5168\u3066Mock\u5316\u3059\u308b\n\u4f8b\u3048\u3070BigQuery-Python\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u3001BigQuery\u306b\u4e00\u5207\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u306a\u3044\u3002\nhttps://github.com/tylertreat/BigQuery-Python/blob/master/bigquery/tests/test_client.py\n\u3068\u306b\u304b\u304f\u9ad8\u901f\u306b\u52d5\u4f5c\u3059\u308b\u30e1\u30ea\u30c3\u30c8\u306f\u3042\u308b\u304c\u3001INSERT\u51e6\u7406\u3001SELECT\u6587\u304c\u5b9f\u969b\u306b\u52d5\u4f5c\u3059\u308b\u306e\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\u3055\u3089\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304cMock\u3060\u3089\u3051\u306b\u306a\u308b\u3002\n\n\u30c6\u30b9\u30c8\u30e2\u30b8\u30e5\u30fc\u30eb\u6bce\u306b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u308b\n\u5358\u7d14\u306b\u8003\u3048\u308b\u3068\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u7528\u610f\u3057\u3066\u304a\u3051\u3070\u826f\u3055\u305d\u3046\u306a\u306e\u3060\u304c\u3001\u8907\u6570\u4eba\u3067\u540c\u6642\u306b\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u305f\u6642\u306b\u5e72\u6e09\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u308b\u6bce\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002Django\u304c\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u308b\u5ea6\u306bCreate Database\u3059\u308b\u306e\u3068\u540c\u3058\u4e8b\u3092\u3084\u3063\u3066\u307f\u308b\u3002\n\u307e\u305a\u306f\u4f7f\u3044\u6368\u3066\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8(+\u30c6\u30fc\u30d6\u30eb)\u3092\u4f5c\u308b\u305f\u3081\u306e\u51e6\u7406\u3002\n\ntests/helper.py\n# coding=utf-8\nfrom datetime import datetime\nimport glob\nimport json\nimport os\nimport random\nimport re\n\n\ndef setup_dataset(client, test_name):\n    \"\"\"\n    \u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u6e96\u5099\u3059\u308b\n\n    Parameters\n    ----------\n    client : bigquery.client\n        See https://github.com/tylertreat/BigQuery-Python\n\n    Returns\n    -------\n    dataset_id : string\n        \u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306eID (ex. ut_hoge_test_359103)\n\n    schemas : dict (key: string, value: list)\n        \u30ad\u30fc\u306f\u30c6\u30fc\u30d6\u30eb\u540d\u3001\u5024\u306f\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u306e\u306b\u5229\u7528\u3057\u305f\u30b9\u30ad\u30fc\u30de\u5b9a\u7fa9\u30ea\u30b9\u30c8\n    \"\"\"\n    # \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\n    dataset_id = 'ut_%s_%d' % (test_name ,int(random.random() * 1000000))\n    client.create_dataset(\n        dataset_id,\n        friendly_name='For unit test started at %s' % datetime.now())\n\n    # \u30b9\u30ad\u30fc\u30de\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\n    schemas = {}\n    BASE_DIR = os.path.normpath(os.path.join(os.path.dirname(__file__), '../'))\n    for schema_file in glob.glob(os.path.join(BASE_DIR, 'schema/*.json')):\n        table_name = re.search(r'([^/.]+).json$', schema_file).group(1)\n        schema = json.loads(open(schema_file).read())\n        schemas[table_name] = schema\n        client.create_table(dataset_id, table_name, schema)\n\n    return dataset_id, schemas\n\n\n\u30c6\u30b9\u30c8\u672c\u4f53\u3001setup\u3067\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\u3059\u308b\u3002\u3055\u3089\u306b\u30c6\u30b9\u30c8\u5bfe\u8c61\u51e6\u7406\u306b\u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5229\u7528\u3055\u305b\u308b\u305f\u3081\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8ID\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3092Mock\u5316\u3059\u308b\u3002\n\ntest_hoge.py\n# coding=utf-8\nimport time\n\nimport mock\nfrom nose.tools import eq_\nfrom nose.plugins.attrib import attr\n\nimport myapp.bq\nimport myapp.calc_daily_state\nfrom . import helper\n\ndataset_id = None\nbq_client = None\n\n# \u4e26\u5217\u5b9f\u884c\u3055\u305b\u308b\n_multiprocess_can_split_ = True\n\n\ndef setup():\n    global dataset_id\n    global bq_client\n    # BigQuery-Python\u306eclient\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u53d6\u5f97\n    bq_client = myapp.bq.get_client(readonly=False)\n    # \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\n    dataset_id, schemas = helper.setup_dataset(bq_client, 'test_hoge')\n    # \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8ID\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3092Mock\u5316\n    myapp.bq.get_dataset_id = mock.Mock(return_value=dataset_id)\n    # \u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u306eINSERT\n    bq_client.push_rows(dataset_id, 'events', [.... \u7565 ....])\n    # INSERT\u3057\u305f\u76f4\u5f8c\u3060\u3068\u30af\u30a8\u30ea\u3067\u304d\u306a\u3044\u4e8b\u304c\u3042\u308b\u306e\u3067sleep\u3059\u308b\n    time.sleep(10)\n\n\n@attr('slow')\ndef test_calc_dau():\n    # BigQuery\u3092\u53c2\u7167\u3059\u308b\u30c6\u30b9\u30c8\n    ret = myapp.calc_daily_state.calc_dau('2014/08/01')\n    eq_(ret, \"....\u7565....\")\n\n\n@attr('slow')\ndef test_calc_new_user():\n    # BigQuery\u3092\u53c2\u7167\u3059\u308b\u30c6\u30b9\u30c8\n    ret = myapp.calc_daily_state.calc_new_user('2014/08/01')\n    eq_(ret, \"....\u7565....\")\n\n\ndef teadown():\n    # \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u524a\u9664\u3001Fail\u3057\u305f\u30c6\u30b9\u30c8\u304c\u3042\u3063\u305f\u6642\u306b\u306f\u6b8b\u3059\u3068\u3057\u305f\u65b9\u304c\u826f\u3055\u305d\u3046\n    bq_client.delete_dataset(dataset_id)\n\n\n\u3053\u306e\u4f8b\u306f\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u51e6\u7406\u306fReadOnly\u3067\u3042\u308b\u3068\u60f3\u5b9a\u3057\u305f\u305f\u3081\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4f5c\u6210\u306f1\u5ea6\u3067\u6e08\u307e\u305b\u305f\u3042\u308b\u3002\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u6bce\u306b5\u79d2\u306f\u304b\u304b\u308b\u306e\u3067\u30011\u30c6\u30b9\u30c81\u30a2\u30b5\u30fc\u30c8\u3092\u9075\u5b88\u3057\u305f\u3044\u3002\nsetup\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4f5c\u6210\u3068\u30c7\u30fc\u30bf\u30ed\u30fc\u30c9\u306b\u304b\u304b\u308b\u6642\u9593\u306f1\u79d2\u7a0b\u5ea6\u3002\u5404\u30b1\u30fc\u30b9\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u305f\u3081\u4e26\u5217\u5316\u3059\u308b\u4e8b\u3067\u3042\u308b\u7a0b\u5ea6\u6642\u9593\u3092\u77ed\u7e2e\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\u3002\n# 5\u4e26\u5217\u3067\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u308b\nnosetests --processes=5 --process-timeout=30\n\nMultiprocess: parallel testing \u2014 nose 1.3.4 documentation\nhttp://nose.readthedocs.org/en/latest/plugins/multiprocess.html\n\n\u30c6\u30b9\u30c8\u95a2\u6570\u6bce\u306b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u308b\n\u4e0a\u306e\u4f8b\u3067\u306fmodule\u306esetup\u3067\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3044\u305f\u304c\u3001INSERT\u306e\u3042\u308b\u51e6\u7406\u306e\u30c6\u30b9\u30c8\u3068\u306a\u308b\u3068\u3001\u30c6\u30b9\u30c8\u9593\u3067\u306e\u5f71\u97ff\u3092\u6392\u9664\u3059\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304f\u308b\u3002\u3053\u308c\u306f\u3055\u3089\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u3002\u306a\u305c\u306a\u3089\u3001INSERT\u76f4\u5f8c\u306b\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u3088\u3046\u3068\u3057\u3066\u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3057\u3066\u3082\u7d50\u679c\u304c\u5f97\u3089\u308c\u306a\u3044\u304b\u3089\u3002INSERT\u5f8c\u3001\u6570\u79d2\u306esleep\u3092\u7f6e\u3044\u3066\u304b\u3089\u30af\u30a8\u30ea(\u304a\u3088\u305d5\u79d2\u304b\u304b\u308b)\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\ntest_fuga.py\n# \u4e26\u5217\u5b9f\u884c\u3055\u305b\u308b\n_multiprocess_can_split_ = True\n\n@attr('slow')\nclass TestFugaMethodsWhichHasInsert(object):\n    def setup(self):\n        # \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4f5c\u308b\n        (\u7565)\n        self.dataset_id = dataset_id\n        self.bq_client = bq_client\n\n    def test_insert_foo(self):\n        # INSERT\u3092\u5171\u306a\u3046\u51e6\u7406\u306e\u30c6\u30b9\u30c8\n\n    def test_insert_bar(self):\n        # INSERT\u3092\u5171\u306a\u3046\u51e6\u7406\u306e\u30c6\u30b9\u30c8\n\n    def teardown(self):\n        self.bq_client.delete_dataset(self.dataset_id)\n\n\n\u30c6\u30b9\u30c8\u304c\u7d42\u308b\u307e\u3067\u306b\u5bdd\u843d\u3061\u5fc5\u81f3\u306a\u306e\u3067\u3001\u5b9f\u884c\u306fCI\u30c4\u30fc\u30eb\u306b\u307e\u304b\u305b\u3088\u3046\u3002\u3053\u306e\u5834\u5408\u3001BigQuery\u306e\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u306f\u30c6\u30b9\u30c8\u9593\u306e\u5f71\u97ff\u3092\u9664\u53bb\u3067\u304d\u3066\u3044\u308b\u306e\u3067\u4e26\u5217\u5b9f\u884c\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\n\n\u30d0\u30e9\u30f3\u30b9\u3092\u53d6\u3063\u305f\u6298\u8877\u6848\n\u30af\u30a8\u30ea\u306e\u767a\u884c\u53ca\u3073\u30c7\u30fc\u30bf\u3092INSERT\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u307f\u5b9f\u969b\u306eBigQuery\u3092\u5229\u7528\u3057\u3001slow\u30c6\u30b9\u30c8\u3068\u3057\u3066\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5206\u3051\u3066\u304a\u304f\u3002\n\u305d\u308c\u4ee5\u5916\u306e\u51e6\u7406\u306f\u3001\u30af\u30a8\u30ea\u306e\u7d50\u679c\u3092\u8fd4\u3059\u90e8\u5206\u3092Mock\u5316\u3059\u308b\u3002\n\n\u904e\u6fc0\u6d3e\n\u5206\u6790\u30bf\u30b9\u30af\u306e\u30b3\u30fc\u30c9\u306b\u30c6\u30b9\u30c8\u306a\u3093\u3066\u66f8\u304b\u306a\u3044\n\n\u672a\u6765\u6d3e\nDynamoDB Local\u307f\u305f\u3044\u306a\u7269\u304c\u767b\u5834\u3059\u308b\u306e\u3092\u5f85\u3064\u3002\u3082\u3057\u304f\u306f\u4f5c\u308b\u3002\n\n\u307e\u3068\u3081\n\u3053\u308c\u304c\u30d9\u30b9\u30c8\u3068\u3044\u3063\u305f\u9078\u629e\u80a2\u306f\u4eca\u306e\u6240\u306a\u3044\u306e\u3067\u3001Mock\u3092\u6e1b\u3089\u3057\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u4fdd\u3061\u305f\u3044\u306a\u3089BigQuery\u3092\u76f4\u306b\u53c2\u7167\u3001\u9006\u306a\u3089Mock\u3092\u4f7f\u3046\u3068\u3044\u3063\u305f\u6240\u3067\u3057\u3087\u3046\u304b\u3002\u30c6\u30b9\u30c8\u306f\u4e26\u5217\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u30c6\u30b9\u30c8\u9593\u306e\u4f9d\u5b58\u306f\u9664\u53bb\u3057\u3066\u304a\u304f\u3002\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u30c6\u30b9\u30c8\u6bce\u306b\u4f5c\u3063\u3066\u3082\u554f\u984c\u7121\u3044\u3002\n\u3082\u3063\u3068\u826f\u3044\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u3082\u3089\u3048\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\u3002\n\u660e\u65e5\u306e\u62c5\u5f53\u306f@brtriver\u3055\u3093\u3067\u3059\u3001\u304a\u305f\u306e\u3057\u307f\u306b\u3002\n\n\u88dc\u8db3:google-bigquery-tools\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\nPython\u88fd\u3067\u3042\u308bbq\u30b3\u30de\u30f3\u30c9\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\u898b\u3066\u307f\u308b\u3002 bq query xxx \u3067\u30af\u30a8\u30ea\u3092\u767a\u884c\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u3046\u3044\u3063\u305f\u30c6\u30b9\u30c8\u304c\u3042\u3063\u3066\u3082\u826f\u3044\u306f\u305a\u3002\nhttps://code.google.com/p/google-bigquery-tools/source/browse/bq/bigquery_client_test.py\n\u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3059\u308b\u30c6\u30b9\u30c8\u306f\u7121\u3044\u3002(\u00b4\uff65\u03c9\uff65`)\n\n\u3053\u306e\u8a18\u4e8b\u306f[VOYAGE GROUP \u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0 Advent Calendar 2014](http://tech.voyagegroup.com/archives/7941760.html)\u306e6\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u3053\u3093\u306b\u3061\u306f\u3001VOYAGE GROUP\u3067\u7247\u624b\u9593\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u696d\u306b\u5f93\u4e8b\u3057\u3066\u3044\u308b[@hagino3000](https://twitter.com/hagino3000)\u3067\u3059\u3002\n\n\u6628\u4eca\u306eBigQuery\u30e0\u30fc\u30d6\u30e1\u30f3\u30c8\u306b\u4e57\u3063\u3066\u3001\u5206\u6790\u7528\u306e\u30c7\u30fc\u30bf\u3092BigQuery\u306b\u6295\u5165\u3057\u306f\u3058\u3081\u305f\u65b9\u3082\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001BigQuery\u3092\u4f7f\u3044\u51fa\u3059\u3068\u3001\u96c6\u8a08\u30d0\u30c3\u30c1\u7b49\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u5b8c\u7d50\u3057\u306a\u304f\u306a\u308a\u3001BigQuery\u305d\u306e\u3082\u306e\u3092\u53c2\u7167\u3057\u305f\u304f\u306a\u308a\u307e\u3059\u3002\u672c\u8a18\u4e8b\u3067\u306f\u3044\u304f\u3064\u304b\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306fPython + nose + [BigQuery-Python](https://github.com/tylertreat/BigQuery-Python)\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n## \u4f55\u304c\u554f\u984c\u304b\n\n\u4f55\u6545\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u60a9\u3080\u304b\u3068\u3044\u3046\u3068\u3001BigQuery\u306f\u6b21\u306e2\u3064\u306e\u7279\u5fb4\u3092\u6301\u3064\u304b\u3089\u3002\n\n1. \u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u304c\u4f5c\u308c\u306a\u3044\n1. \u5c11\u91cf\u306e\u30c7\u30fc\u30bf\u3067\u3082\u30af\u30a8\u30ea\u306b5\u79d2\u7a0b\u5ea6\u304b\u304b\u308b\n\n\u7279\u306b\u30af\u30a8\u30ea\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u30c6\u30b9\u30c8\u3067\u306f\u3053\u308c\u3092\u77ed\u7e2e\u3057\u305f\u304f\u306a\u308b\u3002\n\n## \u5168\u3066Mock\u5316\u3059\u308b\n\n\u4f8b\u3048\u3070BigQuery-Python\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u3001BigQuery\u306b\u4e00\u5207\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u306a\u3044\u3002\n\nhttps://github.com/tylertreat/BigQuery-Python/blob/master/bigquery/tests/test_client.py\n\n\u3068\u306b\u304b\u304f\u9ad8\u901f\u306b\u52d5\u4f5c\u3059\u308b\u30e1\u30ea\u30c3\u30c8\u306f\u3042\u308b\u304c\u3001INSERT\u51e6\u7406\u3001SELECT\u6587\u304c\u5b9f\u969b\u306b\u52d5\u4f5c\u3059\u308b\u306e\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3067\u304d\u306a\u3044\u3002\u3055\u3089\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304cMock\u3060\u3089\u3051\u306b\u306a\u308b\u3002\n\n## \u30c6\u30b9\u30c8\u30e2\u30b8\u30e5\u30fc\u30eb\u6bce\u306b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u308b\n\n\u5358\u7d14\u306b\u8003\u3048\u308b\u3068\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u7528\u610f\u3057\u3066\u304a\u3051\u3070\u826f\u3055\u305d\u3046\u306a\u306e\u3060\u304c\u3001\u8907\u6570\u4eba\u3067\u540c\u6642\u306b\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u305f\u6642\u306b\u5e72\u6e09\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u308b\u6bce\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002Django\u304c\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u308b\u5ea6\u306bCreate Database\u3059\u308b\u306e\u3068\u540c\u3058\u4e8b\u3092\u3084\u3063\u3066\u307f\u308b\u3002\n\n\u307e\u305a\u306f\u4f7f\u3044\u6368\u3066\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8(+\u30c6\u30fc\u30d6\u30eb)\u3092\u4f5c\u308b\u305f\u3081\u306e\u51e6\u7406\u3002\n\n```python:tests/helper.py\n# coding=utf-8\nfrom datetime import datetime\nimport glob\nimport json\nimport os\nimport random\nimport re\n\n\ndef setup_dataset(client, test_name):\n    \"\"\"\n    \u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u6e96\u5099\u3059\u308b\n\n    Parameters\n    ----------\n    client : bigquery.client\n        See https://github.com/tylertreat/BigQuery-Python\n\n    Returns\n    -------\n    dataset_id : string\n        \u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306eID (ex. ut_hoge_test_359103)\n\n    schemas : dict (key: string, value: list)\n        \u30ad\u30fc\u306f\u30c6\u30fc\u30d6\u30eb\u540d\u3001\u5024\u306f\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u306e\u306b\u5229\u7528\u3057\u305f\u30b9\u30ad\u30fc\u30de\u5b9a\u7fa9\u30ea\u30b9\u30c8\n    \"\"\"\n    # \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\n    dataset_id = 'ut_%s_%d' % (test_name ,int(random.random() * 1000000))\n    client.create_dataset(\n        dataset_id,\n        friendly_name='For unit test started at %s' % datetime.now())\n\n    # \u30b9\u30ad\u30fc\u30de\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\n    schemas = {}\n    BASE_DIR = os.path.normpath(os.path.join(os.path.dirname(__file__), '../'))\n    for schema_file in glob.glob(os.path.join(BASE_DIR, 'schema/*.json')):\n        table_name = re.search(r'([^/.]+).json$', schema_file).group(1)\n        schema = json.loads(open(schema_file).read())\n        schemas[table_name] = schema\n        client.create_table(dataset_id, table_name, schema)\n\n    return dataset_id, schemas\n```\n\n\u30c6\u30b9\u30c8\u672c\u4f53\u3001setup\u3067\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\u3059\u308b\u3002\u3055\u3089\u306b\u30c6\u30b9\u30c8\u5bfe\u8c61\u51e6\u7406\u306b\u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u5229\u7528\u3055\u305b\u308b\u305f\u3081\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8ID\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3092Mock\u5316\u3059\u308b\u3002\n\n```python:test_hoge.py\n# coding=utf-8\nimport time\n\nimport mock\nfrom nose.tools import eq_\nfrom nose.plugins.attrib import attr\n\nimport myapp.bq\nimport myapp.calc_daily_state\nfrom . import helper\n\ndataset_id = None\nbq_client = None\n\n# \u4e26\u5217\u5b9f\u884c\u3055\u305b\u308b\n_multiprocess_can_split_ = True\n\n\ndef setup():\n    global dataset_id\n    global bq_client\n    # BigQuery-Python\u306eclient\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u53d6\u5f97\n    bq_client = myapp.bq.get_client(readonly=False)\n    # \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\n    dataset_id, schemas = helper.setup_dataset(bq_client, 'test_hoge')\n    # \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8ID\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3092Mock\u5316\n    myapp.bq.get_dataset_id = mock.Mock(return_value=dataset_id)\n    # \u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u306eINSERT\n    bq_client.push_rows(dataset_id, 'events', [.... \u7565 ....])\n    # INSERT\u3057\u305f\u76f4\u5f8c\u3060\u3068\u30af\u30a8\u30ea\u3067\u304d\u306a\u3044\u4e8b\u304c\u3042\u308b\u306e\u3067sleep\u3059\u308b\n    time.sleep(10)\n\n\n@attr('slow')\ndef test_calc_dau():\n    # BigQuery\u3092\u53c2\u7167\u3059\u308b\u30c6\u30b9\u30c8\n    ret = myapp.calc_daily_state.calc_dau('2014/08/01')\n    eq_(ret, \"....\u7565....\")\n\n\n@attr('slow')\ndef test_calc_new_user():\n    # BigQuery\u3092\u53c2\u7167\u3059\u308b\u30c6\u30b9\u30c8\n    ret = myapp.calc_daily_state.calc_new_user('2014/08/01')\n    eq_(ret, \"....\u7565....\")\n\n\ndef teadown():\n    # \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u524a\u9664\u3001Fail\u3057\u305f\u30c6\u30b9\u30c8\u304c\u3042\u3063\u305f\u6642\u306b\u306f\u6b8b\u3059\u3068\u3057\u305f\u65b9\u304c\u826f\u3055\u305d\u3046\n    bq_client.delete_dataset(dataset_id)\n```\n\n\u3053\u306e\u4f8b\u306f\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u51e6\u7406\u306fReadOnly\u3067\u3042\u308b\u3068\u60f3\u5b9a\u3057\u305f\u305f\u3081\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4f5c\u6210\u306f1\u5ea6\u3067\u6e08\u307e\u305b\u305f\u3042\u308b\u3002\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u6bce\u306b5\u79d2\u306f\u304b\u304b\u308b\u306e\u3067\u30011\u30c6\u30b9\u30c81\u30a2\u30b5\u30fc\u30c8\u3092\u9075\u5b88\u3057\u305f\u3044\u3002\n\nsetup\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4f5c\u6210\u3068\u30c7\u30fc\u30bf\u30ed\u30fc\u30c9\u306b\u304b\u304b\u308b\u6642\u9593\u306f1\u79d2\u7a0b\u5ea6\u3002\u5404\u30b1\u30fc\u30b9\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u305f\u3081\u4e26\u5217\u5316\u3059\u308b\u4e8b\u3067\u3042\u308b\u7a0b\u5ea6\u6642\u9593\u3092\u77ed\u7e2e\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\u3002\n\n```bash\n# 5\u4e26\u5217\u3067\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u308b\nnosetests --processes=5 --process-timeout=30\n```\n\nMultiprocess: parallel testing \u2014 nose 1.3.4 documentation\nhttp://nose.readthedocs.org/en/latest/plugins/multiprocess.html\n\n## \u30c6\u30b9\u30c8\u95a2\u6570\u6bce\u306b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u308b\n\n\u4e0a\u306e\u4f8b\u3067\u306fmodule\u306esetup\u3067\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3044\u305f\u304c\u3001INSERT\u306e\u3042\u308b\u51e6\u7406\u306e\u30c6\u30b9\u30c8\u3068\u306a\u308b\u3068\u3001\u30c6\u30b9\u30c8\u9593\u3067\u306e\u5f71\u97ff\u3092\u6392\u9664\u3059\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304f\u308b\u3002\u3053\u308c\u306f\u3055\u3089\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u3002\u306a\u305c\u306a\u3089\u3001INSERT\u76f4\u5f8c\u306b\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u3088\u3046\u3068\u3057\u3066\u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3057\u3066\u3082\u7d50\u679c\u304c\u5f97\u3089\u308c\u306a\u3044\u304b\u3089\u3002INSERT\u5f8c\u3001\u6570\u79d2\u306esleep\u3092\u7f6e\u3044\u3066\u304b\u3089\u30af\u30a8\u30ea(\u304a\u3088\u305d5\u79d2\u304b\u304b\u308b)\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n```python:test_fuga.py\n# \u4e26\u5217\u5b9f\u884c\u3055\u305b\u308b\n_multiprocess_can_split_ = True\n\n@attr('slow')\nclass TestFugaMethodsWhichHasInsert(object):\n    def setup(self):\n        # \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4f5c\u308b\n        (\u7565)\n        self.dataset_id = dataset_id\n        self.bq_client = bq_client\n    \n    def test_insert_foo(self):\n        # INSERT\u3092\u5171\u306a\u3046\u51e6\u7406\u306e\u30c6\u30b9\u30c8\n\n    def test_insert_bar(self):\n        # INSERT\u3092\u5171\u306a\u3046\u51e6\u7406\u306e\u30c6\u30b9\u30c8\n\n    def teardown(self):\n        self.bq_client.delete_dataset(self.dataset_id)\n```\n\n\u30c6\u30b9\u30c8\u304c\u7d42\u308b\u307e\u3067\u306b\u5bdd\u843d\u3061\u5fc5\u81f3\u306a\u306e\u3067\u3001\u5b9f\u884c\u306fCI\u30c4\u30fc\u30eb\u306b\u307e\u304b\u305b\u3088\u3046\u3002\u3053\u306e\u5834\u5408\u3001BigQuery\u306e\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u306f\u30c6\u30b9\u30c8\u9593\u306e\u5f71\u97ff\u3092\u9664\u53bb\u3067\u304d\u3066\u3044\u308b\u306e\u3067\u4e26\u5217\u5b9f\u884c\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\n\n\n## \u30d0\u30e9\u30f3\u30b9\u3092\u53d6\u3063\u305f\u6298\u8877\u6848\n\n\u30af\u30a8\u30ea\u306e\u767a\u884c\u53ca\u3073\u30c7\u30fc\u30bf\u3092INSERT\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u307f\u5b9f\u969b\u306eBigQuery\u3092\u5229\u7528\u3057\u3001slow\u30c6\u30b9\u30c8\u3068\u3057\u3066\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5206\u3051\u3066\u304a\u304f\u3002\n\u305d\u308c\u4ee5\u5916\u306e\u51e6\u7406\u306f\u3001\u30af\u30a8\u30ea\u306e\u7d50\u679c\u3092\u8fd4\u3059\u90e8\u5206\u3092Mock\u5316\u3059\u308b\u3002\n\n## \u904e\u6fc0\u6d3e\n\n\u5206\u6790\u30bf\u30b9\u30af\u306e\u30b3\u30fc\u30c9\u306b\u30c6\u30b9\u30c8\u306a\u3093\u3066\u66f8\u304b\u306a\u3044\n\n## \u672a\u6765\u6d3e\n\n[DynamoDB Local](http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tools.DynamoDBLocal.html)\u307f\u305f\u3044\u306a\u7269\u304c\u767b\u5834\u3059\u308b\u306e\u3092\u5f85\u3064\u3002\u3082\u3057\u304f\u306f\u4f5c\u308b\u3002\n\n## \u307e\u3068\u3081\n\n\u3053\u308c\u304c\u30d9\u30b9\u30c8\u3068\u3044\u3063\u305f\u9078\u629e\u80a2\u306f\u4eca\u306e\u6240\u306a\u3044\u306e\u3067\u3001Mock\u3092\u6e1b\u3089\u3057\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u4fdd\u3061\u305f\u3044\u306a\u3089BigQuery\u3092\u76f4\u306b\u53c2\u7167\u3001\u9006\u306a\u3089Mock\u3092\u4f7f\u3046\u3068\u3044\u3063\u305f\u6240\u3067\u3057\u3087\u3046\u304b\u3002\u30c6\u30b9\u30c8\u306f\u4e26\u5217\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u30c6\u30b9\u30c8\u9593\u306e\u4f9d\u5b58\u306f\u9664\u53bb\u3057\u3066\u304a\u304f\u3002\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u30c6\u30b9\u30c8\u6bce\u306b\u4f5c\u3063\u3066\u3082\u554f\u984c\u7121\u3044\u3002\n\n\u3082\u3063\u3068\u826f\u3044\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u3082\u3089\u3048\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\u3002\n\n\n\u660e\u65e5\u306e\u62c5\u5f53\u306f[@brtriver](https://twitter.com/brtriver)\u3055\u3093\u3067\u3059\u3001\u304a\u305f\u306e\u3057\u307f\u306b\u3002\n\n## \u88dc\u8db3:google-bigquery-tools\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\n\nPython\u88fd\u3067\u3042\u308bbq\u30b3\u30de\u30f3\u30c9\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\u898b\u3066\u307f\u308b\u3002 ```bq query xxx``` \u3067\u30af\u30a8\u30ea\u3092\u767a\u884c\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u3046\u3044\u3063\u305f\u30c6\u30b9\u30c8\u304c\u3042\u3063\u3066\u3082\u826f\u3044\u306f\u305a\u3002\n\nhttps://code.google.com/p/google-bigquery-tools/source/browse/bq/bigquery_client_test.py\n\n\u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3059\u308b\u30c6\u30b9\u30c8\u306f\u7121\u3044\u3002(\u00b4\uff65\u03c9\uff65`)\n", "tags": ["Python", "bigquery", "GoogleCloudPlatform"]}