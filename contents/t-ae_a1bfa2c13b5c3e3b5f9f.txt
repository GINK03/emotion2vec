{"context": "RxSwift\u3067\u66f8\u3044\u3066\u3044\u308b\u30a2\u30d7\u30ea\u304c\u5b8c\u6210\u8fd1\u304f\u307e\u3067\u6765\u305f\u306e\u3067\u540c\u3058\u304f\u99c6\u3051\u51fa\u3057\u306e\u4eba\u306b\u5f79\u7acb\u3061\u305d\u3046\u306a\u3053\u3068\u3092\u30e1\u30e2\u66f8\u304d\u3057\u3066\u304a\u304f\u3002\n\n\u3042\u308b\u77ac\u9593\u306e\u5024\u306e\u53d6\u308a\u51fa\u3057\n\u3042\u308bObservable\u306e\u767a\u884c\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u5225\u306e\u30aa\u30d6\u30b6\u30fc\u30d0\u30d6\u30eb\u306e\u5024\u3092\u53d6\u308a\u51fa\u3059\u51e6\u7406\u3002\n\u4f8b\u3048\u3070\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068phoneNumber: Variable<String>\u304c\u4fdd\u6301\u3057\u3066\u3044\u308b\u96fb\u8a71\u756a\u53f7\u306b\u767a\u4fe1\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u305f\u3002\n\nViewController.swift#viewDidLoad\nvar phoneNumberDisposeBag: DisposeBag!\nphoneNumber.asObservable()\n    .subscribeNext { [weak self] number in\n        phoneNumberDisposeBag = DisposeBag()\n        self?.button.rx_tap.subscribeNext {\n            guard let url = NSURL(string: \"tel:\\(number)\") else {\n                return\n            }\n            if UIApplication.sharedApplication().canOpenURL(url) {\n                UIApplication.sharedApplication().openURL(url)\n            }\n        }.addDisposableTo(phoneNumberDisposeBag)\n    }.addDisposableTo(disposeBag)\n\n\n\u3053\u306e\u5b9f\u88c5\u306e\u554f\u984c\u70b9\u3068\u3057\u3066\u4ee5\u4e0b\u304c\u3042\u3063\u305f\u3002\n\n\u5faa\u74b0\u53c2\u7167\u306e\u56de\u907f\u306e\u305f\u3081self\u3092\u5f31\u53c2\u7167\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\nphoneNumber.value\u306e\u5909\u66f4\u3054\u3068\u306bbutton.rx_tap\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3057\u3066\u304a\u308a\u3001\u5909\u66f4\u6642\u306b\u4ee5\u524d\u306e\u8cfc\u8aad\u3092\u7834\u68c4\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff08\u4f59\u8a08\u306bDisposableorDisposeBag\u3092\u4fdd\u6301\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff09\u3002\n\nPlayground\u306b\u8f09\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u77e5\u3089\u306a\u304b\u3063\u305f\u304cwithLatestFrom\u3092\u4f7f\u3046\u3053\u3068\u3067\u4ee5\u4e0a\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3067\u304d\u308b\u3002\n\nViewController.swift#viewDidLoad\nbutton.rx_tap\n    .withLatestFrom(phoneNumber.asObservable())\n    .subscribeNext { number in\n        guard let url = NSURL(string: \"tel:\\(number)\") else {\n            return\n        }\n        if UIApplication.sharedApplication().canOpenURL(url) {\n            UIApplication.sharedApplication().openURL(url)\n        }\n    }.addDisposableTo(disposeBag)\n\n\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306b\u9650\u3063\u3066\u306fVariable#value\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u3001.Error\u3084.Completed\u304c\u6765\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u306a\u3044\u306e\u3067BehaviorSubject\u306b\u7f6e\u304d\u63db\u3048\u3066\u9577\u3063\u305f\u3089\u3057\u3044asObservable\u306e\u547c\u3073\u51fa\u3057\u3082\u524a\u6e1b\u3067\u304d\u308b\u3002\nRx\u306b\u6163\u308c\u59cb\u3081\u308b\u3068Variable\u304c\u6c17\u6301\u3061\u60aa\u304f\u306a\u3063\u3066\u304f\u308b\u306e\u3067\u3053\u3046\u3044\u3046\u306e\u3092\u899a\u3048\u3066\u3044\u304d\u305f\u304f\u306a\u308b\u3002\n\uff0a\u6ce8\u8a18\uff1a\u3053\u306e\u30b3\u30fc\u30c9\u306f\u3082\u3068\u3082\u3068\u5916\u90e8\u30af\u30e9\u30b9\u306eVariable\u3092\u8cfc\u8aad\u3057\u3066\u3044\u305f\u306e\u3092\u3001\u30a2\u30af\u30bb\u30b7\u30d3\u30ea\u30c6\u30a3\u306e\u89b3\u70b9\u304b\u3089Observable\u306b\u5909\u66f4\u3059\u3079\u304d\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\u3066\u3044\u305f\u3068\u3053\u308d\u304b\u3089\u6765\u3066\u3044\u308b\u3002\u306e\u3067\u5358\u7d14\u306brx_tap\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067phoneNumber.value\u3067\u53d6\u308a\u51fa\u3059\u306e\u304c\u6b63\u89e3\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\nOptional\u306enil\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\nObservable<T>\u3060\u3068\u5024\u304c\u4e0d\u5b9a\u306e\u969b\u306f\u4f55\u3082\u6d41\u308c\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u306b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u304c\u3001\u3042\u3068\u304b\u3089\u4e0d\u5b9a\u306b\u5909\u5316\u3055\u305b\u305f\u3044\u3088\u3046\u306a\u3068\u304d\u306b\u306f\u3084\u3063\u3071\u308aObservable<T?>\u3092\u3064\u304b\u3046\u3053\u3068\u306b\u306a\u308b\u3002\n\u6c7a\u5b9a\u5024\u3060\u3051\u3092\u53d6\u308a\u51fa\u3059\u305f\u3081\u306b\u306ffilter { $0 != nil }\u3067\u3044\u3044\u304c\u3001\u3053\u308c\u3060\u3051\u3060\u3068\u578b\u304cOptional\u306e\u307e\u307e\u3067\u30a2\u30f3\u30e9\u30c3\u30d7\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u4ee5\u4e0b\u306e\u69d8\u306aExtension\u3092\u8ffd\u52a0\u3057\u3066\u4f7f\u3063\u3066\u3044\u305f\u3002\nRxSwiftExt\u306bunwrap\u3068\u3044\u3046\u306e\u304c\u3042\u3063\u305f\u304c\u3053\u3046\u66f8\u304f\u307b\u3046\u304c\u7dba\u9e97\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3063\u305f\u3002\n\nExtension.swift\nprotocol OptionalType {\n    associatedtype Wrapped\n    func map<U>(@noescape f: (Wrapped) throws -> U) rethrows -> U?\n}\n\nextension Optional: OptionalType {\n\n}\n\nextension ObservableType where E: OptionalType {\n    func filterNil() -> Observable<E.Wrapped> {\n        return self.flatMap { $0.map { Observable.just($0) } ?? Observable.empty() }\n    }\n}\n\n\n\n\u30c7\u30fc\u30bf\u3092\u5024\u578b\u3067\u6301\u305f\u305b\u308b\n\u5148\u8f29\u306b\u6559\u3048\u3066\u3044\u305f\u3060\u3044\u305f\u5185\u5bb9\u3002\nvariable: Variable<SomeClass>\u306b\u5bfe\u3057\u3001variable.value.someVar = xxx\u3068\u5909\u66f4\u3057\u3066\u3082\u5909\u66f4\u304c\u901a\u77e5\u3055\u308c\u306a\u3044\u3002\u3053\u308c\u306fvariable\u304cvalue\u3092\u53c2\u7167\u578b\u3067\u6301\u3063\u3066\u3044\u308b\u305f\u3081\u3067\u3042\u308b\u3002\n\u4e00\u65b9Variable<SomeStruct>\u306e\u3088\u3046\u306b\u5024\u578b\u3067\u6301\u3063\u3066\u304a\u304f\u3068variable.value.someVar = xxx\u3068\u3059\u308b\u3060\u3051\u3067\u66f8\u304d\u63db\u3048\u3089\u308c\u305f\u30c7\u30fc\u30bf\u304c\u6d41\u308c\u308b\u3002\u3053\u308c\u306f\u69cb\u9020\u4f53\u306e\u6301\u3064var\u5909\u6570\u3078\u306e\u4ee3\u5165\u306b\u3088\u3063\u3066variable.value\u3078\u306e\u518d\u4ee3\u5165\u304c\u8d77\u3053\u308bSwift\u306e\u4ed5\u69d8\u306e\u305f\u3081\u3089\u3057\u3044\u3002\n\u540c\u69d8\u306bVariable<[SomeStruct]>\u3067\u3082variable.value[index].someVar = xxx\u3067\u914d\u5217\u5168\u4f53\u304c\u6d41\u308c\u3066\u304f\u308c\u308b\u3002\n\n16/5/30 \u4ef6\u306e\u5148\u8f29\u306e\u52a9\u8a00\u3092\u53d7\u3051\u4e00\u90e8\u66f8\u304d\u63db\u3048\u3002\nRxSwift\u3067\u66f8\u3044\u3066\u3044\u308b\u30a2\u30d7\u30ea\u304c\u5b8c\u6210\u8fd1\u304f\u307e\u3067\u6765\u305f\u306e\u3067\u540c\u3058\u304f\u99c6\u3051\u51fa\u3057\u306e\u4eba\u306b\u5f79\u7acb\u3061\u305d\u3046\u306a\u3053\u3068\u3092\u30e1\u30e2\u66f8\u304d\u3057\u3066\u304a\u304f\u3002\n\n# \u3042\u308b\u77ac\u9593\u306e\u5024\u306e\u53d6\u308a\u51fa\u3057\n\u3042\u308bObservable\u306e\u767a\u884c\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u5225\u306e\u30aa\u30d6\u30b6\u30fc\u30d0\u30d6\u30eb\u306e\u5024\u3092\u53d6\u308a\u51fa\u3059\u51e6\u7406\u3002\n\u4f8b\u3048\u3070\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068`phoneNumber: Variable<String>`\u304c\u4fdd\u6301\u3057\u3066\u3044\u308b\u96fb\u8a71\u756a\u53f7\u306b\u767a\u4fe1\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u305f\u3002\n\n```swift:ViewController.swift#viewDidLoad\nvar phoneNumberDisposeBag: DisposeBag!\nphoneNumber.asObservable()\n    .subscribeNext { [weak self] number in\n        phoneNumberDisposeBag = DisposeBag()\n        self?.button.rx_tap.subscribeNext {\n            guard let url = NSURL(string: \"tel:\\(number)\") else {\n                return\n            }\n            if UIApplication.sharedApplication().canOpenURL(url) {\n                UIApplication.sharedApplication().openURL(url)\n            }\n        }.addDisposableTo(phoneNumberDisposeBag)\n    }.addDisposableTo(disposeBag)\n```\n\n\u3053\u306e\u5b9f\u88c5\u306e\u554f\u984c\u70b9\u3068\u3057\u3066\u4ee5\u4e0b\u304c\u3042\u3063\u305f\u3002\n\n- \u5faa\u74b0\u53c2\u7167\u306e\u56de\u907f\u306e\u305f\u3081`self`\u3092\u5f31\u53c2\u7167\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n- `phoneNumber.value`\u306e\u5909\u66f4\u3054\u3068\u306b`button.rx_tap`\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3057\u3066\u304a\u308a\u3001\u5909\u66f4\u6642\u306b\u4ee5\u524d\u306e\u8cfc\u8aad\u3092\u7834\u68c4\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff08\u4f59\u8a08\u306b`Disposable`or`DisposeBag`\u3092\u4fdd\u6301\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff09\u3002\n\nPlayground\u306b\u8f09\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u77e5\u3089\u306a\u304b\u3063\u305f\u304c[`withLatestFrom`](http://rxmarbles.com/#withLatestFrom)\u3092\u4f7f\u3046\u3053\u3068\u3067\u4ee5\u4e0a\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3067\u304d\u308b\u3002\n\n```swift:ViewController.swift#viewDidLoad\nbutton.rx_tap\n    .withLatestFrom(phoneNumber.asObservable())\n    .subscribeNext { number in\n        guard let url = NSURL(string: \"tel:\\(number)\") else {\n            return\n        }\n        if UIApplication.sharedApplication().canOpenURL(url) {\n            UIApplication.sharedApplication().openURL(url)\n        }\n    }.addDisposableTo(disposeBag)\n\n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306b\u9650\u3063\u3066\u306f`Variable#value`\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u3001`.Error`\u3084`.Completed`\u304c\u6765\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u306a\u3044\u306e\u3067`BehaviorSubject`\u306b\u7f6e\u304d\u63db\u3048\u3066\u9577\u3063\u305f\u3089\u3057\u3044`asObservable`\u306e\u547c\u3073\u51fa\u3057\u3082\u524a\u6e1b\u3067\u304d\u308b\u3002\nRx\u306b\u6163\u308c\u59cb\u3081\u308b\u3068`Variable`\u304c\u6c17\u6301\u3061\u60aa\u304f\u306a\u3063\u3066\u304f\u308b\u306e\u3067\u3053\u3046\u3044\u3046\u306e\u3092\u899a\u3048\u3066\u3044\u304d\u305f\u304f\u306a\u308b\u3002\n\n\uff0a\u6ce8\u8a18\uff1a\u3053\u306e\u30b3\u30fc\u30c9\u306f\u3082\u3068\u3082\u3068\u5916\u90e8\u30af\u30e9\u30b9\u306e`Variable`\u3092\u8cfc\u8aad\u3057\u3066\u3044\u305f\u306e\u3092\u3001\u30a2\u30af\u30bb\u30b7\u30d3\u30ea\u30c6\u30a3\u306e\u89b3\u70b9\u304b\u3089`Observable`\u306b\u5909\u66f4\u3059\u3079\u304d\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\u3066\u3044\u305f\u3068\u3053\u308d\u304b\u3089\u6765\u3066\u3044\u308b\u3002\u306e\u3067\u5358\u7d14\u306b`rx_tap`\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067`phoneNumber.value`\u3067\u53d6\u308a\u51fa\u3059\u306e\u304c\u6b63\u89e3\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n# Optional\u306enil\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\n`Observable<T>`\u3060\u3068\u5024\u304c\u4e0d\u5b9a\u306e\u969b\u306f\u4f55\u3082\u6d41\u308c\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u306b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u304c\u3001\u3042\u3068\u304b\u3089\u4e0d\u5b9a\u306b\u5909\u5316\u3055\u305b\u305f\u3044\u3088\u3046\u306a\u3068\u304d\u306b\u306f\u3084\u3063\u3071\u308a`Observable<T?>`\u3092\u3064\u304b\u3046\u3053\u3068\u306b\u306a\u308b\u3002\n\u6c7a\u5b9a\u5024\u3060\u3051\u3092\u53d6\u308a\u51fa\u3059\u305f\u3081\u306b\u306f`filter { $0 != nil }`\u3067\u3044\u3044\u304c\u3001\u3053\u308c\u3060\u3051\u3060\u3068\u578b\u304c`Optional`\u306e\u307e\u307e\u3067\u30a2\u30f3\u30e9\u30c3\u30d7\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u4ee5\u4e0b\u306e\u69d8\u306aExtension\u3092\u8ffd\u52a0\u3057\u3066\u4f7f\u3063\u3066\u3044\u305f\u3002\n[RxSwiftExt](https://github.com/RxSwiftCommunity/RxSwiftExt)\u306bunwrap\u3068\u3044\u3046\u306e\u304c\u3042\u3063\u305f\u304c\u3053\u3046\u66f8\u304f\u307b\u3046\u304c\u7dba\u9e97\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3063\u305f\u3002\n\n```swift:Extension.swift\nprotocol OptionalType {\n    associatedtype Wrapped\n    func map<U>(@noescape f: (Wrapped) throws -> U) rethrows -> U?\n}\n\nextension Optional: OptionalType {\n    \n}\n\nextension ObservableType where E: OptionalType {\n    func filterNil() -> Observable<E.Wrapped> {\n        return self.flatMap { $0.map { Observable.just($0) } ?? Observable.empty() }\n    }\n}\n```\n\n# \u30c7\u30fc\u30bf\u3092\u5024\u578b\u3067\u6301\u305f\u305b\u308b\n\u5148\u8f29\u306b\u6559\u3048\u3066\u3044\u305f\u3060\u3044\u305f\u5185\u5bb9\u3002\n`variable: Variable<SomeClass>`\u306b\u5bfe\u3057\u3001`variable.value.someVar = xxx`\u3068\u5909\u66f4\u3057\u3066\u3082\u5909\u66f4\u304c\u901a\u77e5\u3055\u308c\u306a\u3044\u3002\u3053\u308c\u306f`variable`\u304c`value`\u3092\u53c2\u7167\u578b\u3067\u6301\u3063\u3066\u3044\u308b\u305f\u3081\u3067\u3042\u308b\u3002\n\u4e00\u65b9`Variable<SomeStruct>`\u306e\u3088\u3046\u306b\u5024\u578b\u3067\u6301\u3063\u3066\u304a\u304f\u3068`variable.value.someVar = xxx`\u3068\u3059\u308b\u3060\u3051\u3067\u66f8\u304d\u63db\u3048\u3089\u308c\u305f\u30c7\u30fc\u30bf\u304c\u6d41\u308c\u308b\u3002\u3053\u308c\u306f\u69cb\u9020\u4f53\u306e\u6301\u3064`var`\u5909\u6570\u3078\u306e\u4ee3\u5165\u306b\u3088\u3063\u3066`variable.value`\u3078\u306e\u518d\u4ee3\u5165\u304c\u8d77\u3053\u308bSwift\u306e\u4ed5\u69d8\u306e\u305f\u3081\u3089\u3057\u3044\u3002\n\u540c\u69d8\u306b`Variable<[SomeStruct]>`\u3067\u3082`variable.value[index].someVar = xxx`\u3067\u914d\u5217\u5168\u4f53\u304c\u6d41\u308c\u3066\u304f\u308c\u308b\u3002\n\n* * *\n16/5/30 \u4ef6\u306e\u5148\u8f29\u306e\u52a9\u8a00\u3092\u53d7\u3051\u4e00\u90e8\u66f8\u304d\u63db\u3048\u3002\n", "tags": ["iOS", "Swift", "RxSwift"]}