{"tags": ["yeoman1.0", "Jade"], "context": " More than 1 year has passed since last update.yeoman webapp\u306fSass\u3068CoffeeScript\u3092\u6a19\u6e96\u3067\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u304f\u308c\u3066\u307e\u3059\u304c\n\u3069\u3046\u305b\u306a\u306e\u3067Jade\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nGruntfile.js\n// Generated on 2013-06-01 using generator-webapp 0.2.2\n// Modified by 2k0ri\n'use strict';\nvar LIVERELOAD_PORT = 35729;\nvar lrSnippet = require('connect-livereload')({port: LIVERELOAD_PORT});\nvar mountFolder = function (connect, dir) {\n    return connect.static(require('path').resolve(dir));\n};\n\n// # Globbing\n// for performance reasons we're only matching one level down:\n// 'test/spec/{,*/}*.js'\n// use this if you want to recursively match all subfolders:\n// 'test/spec/**/*.js'\n\nmodule.exports = function (grunt) {\n    // load all grunt tasks\n    require('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);\n\n    // configurable paths\n    var yeomanConfig = {\n        app: 'app',\n        dist: 'dist'\n    };\n\n    grunt.initConfig({\n        yeoman: yeomanConfig,\n        watch: {\n            options: {\n                nospawn: true\n            },\n            coffee: {\n                files: ['<%= yeoman.app %>/scripts/{,*/}*.coffee'],\n                tasks: ['coffee:dist']\n            },\n            coffeeTest: {\n                files: ['test/spec/{,*/}*.coffee'],\n                tasks: ['coffee:test']\n            },\n            compass: {\n                files: ['<%= yeoman.app %>/styles/{,*/}*.{scss,sass}'],\n                tasks: ['compass:server']\n            },\n            jade: {\n                files: ['<%= yeoman.app %>/{,*/}*.jade'],\n                tasks: ['jade:dev']\n            },\n            livereload: {\n                options: {\n                    livereload: LIVERELOAD_PORT\n                },\n                files: [\n                    '<%= yeoman.app %>/*.html',\n                    '{.tmp,<%= yeoman.app %>}/styles/{,*/}*.css',\n                    '{.tmp,<%= yeoman.app %>}/scripts/{,*/}*.js',\n                    '<%= yeoman.app %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}'\n                ]\n            }\n        },\n        connect: {\n            options: {\n                port: 9000,\n                // change this to '0.0.0.0' to access the server from outside\n                hostname: 'localhost'\n            },\n            livereload: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, '.tmp'),\n                            mountFolder(connect, yeomanConfig.app),\n                            lrSnippet\n                        ];\n                    }\n                }\n            },\n            test: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, '.tmp'),\n                            mountFolder(connect, 'test')\n                        ];\n                    }\n                }\n            },\n            dist: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, yeomanConfig.dist)\n                        ];\n                    }\n                }\n            }\n        },\n        open: {\n            server: {\n                path: 'http://localhost:<%= connect.options.port %>'\n            }\n        },\n        clean: {\n            dist: {\n                files: [{\n                    dot: true,\n                    src: [\n                        '.tmp',\n                        '<%= yeoman.dist %>/*',\n                        '!<%= yeoman.dist %>/.git*'\n                    ]\n                }]\n            },\n            server: '.tmp'\n        },\n        jade: {\n            dev: {\n                options: {\n                    pretty: true\n                },\n                files: [{\n                    expand: true,\n                    src: '{,*/}[^_]*.jade',\n                    ext: '.html'\n                }]\n            }\n        },\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc'\n            },\n            all: [\n                'Gruntfile.js',\n                '<%= yeoman.app %>/scripts/{,*/}*.js',\n                '!<%= yeoman.app %>/scripts/vendor/*',\n                'test/spec/{,*/}*.js'\n            ]\n        },\n        mocha: {\n            all: {\n                options: {\n                    run: true,\n                    urls: ['http://localhost:<%= connect.options.port %>/index.html']\n                }\n            }\n        },\n        coffee: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/scripts',\n                    src: '{,*/}*.coffee',\n                    dest: '.tmp/scripts',\n                    ext: '.js'\n                }]\n            },\n            test: {\n                files: [{\n                    expand: true,\n                    cwd: 'test/spec',\n                    src: '{,*/}*.coffee',\n                    dest: '.tmp/spec',\n                    ext: '.js'\n                }]\n            }\n        },\n        compass: {\n            options: {\n                sassDir: '<%= yeoman.app %>/styles',\n                cssDir: '.tmp/styles',\n                generatedImagesDir: '.tmp/images/generated',\n                imagesDir: '<%= yeoman.app %>/images',\n                javascriptsDir: '<%= yeoman.app %>/scripts',\n                fontsDir: '<%= yeoman.app %>/styles/fonts',\n                importPath: '<%= yeoman.app %>/bower_components',\n                httpImagesPath: '/images',\n                httpGeneratedImagesPath: '/images/generated',\n                relativeAssets: false\n            },\n            dist: {},\n            server: {\n                options: {\n                    debugInfo: true\n                }\n            }\n        },\n        // not used since Uglify task does concat,\n        // but still available if needed\n        /*concat: {\n            dist: {}\n        },*/\n        // not enabled since usemin task does concat and uglify\n        // check index.html to edit your build targets\n        // enable this task if you prefer defining your build targets here\n        /*uglify: {\n            dist: {}\n        },*/\n        rev: {\n            dist: {\n                files: {\n                    src: [\n                        '<%= yeoman.dist %>/scripts/{,*/}*.js',\n                        '<%= yeoman.dist %>/styles/{,*/}*.css',\n                        '<%= yeoman.dist %>/images/{,*/}*.{png,jpg,jpeg,gif,webp}',\n                        '<%= yeoman.dist %>/styles/fonts/*'\n                    ]\n                }\n            }\n        },\n        useminPrepare: {\n            options: {\n                dest: '<%= yeoman.dist %>'\n            },\n            html: '<%= yeoman.app %>/index.html'\n        },\n        usemin: {\n            options: {\n                dirs: ['<%= yeoman.dist %>']\n            },\n            html: ['<%= yeoman.dist %>/{,*/}*.html'],\n            css: ['<%= yeoman.dist %>/styles/{,*/}*.css']\n        },\n        imagemin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/images',\n                    src: '{,*/}*.{png,jpg,jpeg}',\n                    dest: '<%= yeoman.dist %>/images'\n                }]\n            }\n        },\n        svgmin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/images',\n                    src: '{,*/}*.svg',\n                    dest: '<%= yeoman.dist %>/images'\n                }]\n            }\n        },\n        cssmin: {\n            dist: {\n                files: {\n                    '<%= yeoman.dist %>/styles/main.css': [\n                        '.tmp/styles/{,*/}*.css',\n                        '<%= yeoman.app %>/styles/{,*/}*.css'\n                    ]\n                }\n            }\n        },\n        htmlmin: {\n            dist: {\n                options: {\n                    /*removeCommentsFromCDATA: true,\n                    // https://github.com/yeoman/grunt-usemin/issues/44\n                    //collapseWhitespace: true,\n                    collapseBooleanAttributes: true,\n                    removeAttributeQuotes: true,\n                    removeRedundantAttributes: true,\n                    useShortDoctype: true,\n                    removeEmptyAttributes: true,\n                    removeOptionalTags: true*/\n                },\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>',\n                    src: '*.html',\n                    dest: '<%= yeoman.dist %>'\n                }]\n            }\n        },\n        // Put files not handled in other tasks here\n        copy: {\n            dist: {\n                files: [{\n                    expand: true,\n                    dot: true,\n                    cwd: '<%= yeoman.app %>',\n                    dest: '<%= yeoman.dist %>',\n                    src: [\n                        '*.{ico,txt}',\n                        '.htaccess',\n                        'images/{,*/}*.{webp,gif}',\n                        'styles/fonts/*'\n                    ]\n                }, {\n                    expand: true,\n                    cwd: '.tmp/images',\n                    dest: '<%= yeoman.dist %>/images',\n                    src: [\n                        'generated/*'\n                    ]\n                }]\n            }\n        },\n        concurrent: {\n            server: [\n                'jade:dev',\n                'coffee:dist',\n                'compass:server'\n            ],\n            test: [\n                'coffee',\n                'compass'\n            ],\n            dist: [\n                'jade:dev',\n                'coffee',\n                'compass:dist',\n                'imagemin',\n                'svgmin',\n                'htmlmin'\n            ]\n        }\n    });\n\n    grunt.registerTask('server', function (target) {\n        if (target === 'dist') {\n            return grunt.task.run(['build', 'open', 'connect:dist:keepalive']);\n        }\n\n        grunt.task.run([\n            'clean:server',\n            'concurrent:server',\n            'connect:livereload',\n            'open',\n            'watch'\n        ]);\n    });\n\n    grunt.registerTask('test', [\n        'clean:server',\n        'concurrent:test',\n        'connect:test',\n        'mocha'\n    ]);\n\n    grunt.registerTask('build', [\n        'clean:dist',\n        'useminPrepare',\n        'concurrent:dist',\n        'cssmin',\n        'concat',\n        'uglify',\n        'copy',\n        'rev',\n        'usemin'\n    ]);\n\n    grunt.registerTask('default', [\n        'jshint',\n        'test',\n        'build'\n    ]);\n};\n\n\n\u305a\u307c\u3089\u3057\u3066\u307e\u3059\u3002\nwatch\u4ee5\u4e0b\u306bjade\u3001jade:dev\u30bf\u30b9\u30af\u3001concurrent:server\u3068dist\u306bjade:dev\u30bf\u30b9\u30af\u3092\u8db3\u3057\u307e\u3057\u305f\u3002\nhtml5 boilerplate\u306e\u90e8\u5206\u3082\u3053\u306e\u969b\u5206\u96e2\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u306f\u3058\u307e\u308b_***.jade\u30d5\u30a1\u30a4\u30eb\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u898b\u306a\u3057\u3066\u898b\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nindex.jade\nextend _h5bp\nblock title\n    //- ...\nblock body\n    //- ...\n\n\n\n_h5bp.jade\n!!! 5\n//if lt IE 7\n  <html class=\"no-js lt-ie9 lt-ie8 lt-ie7\">\n//if IE 7\n  <html class=\"no-js lt-ie9 lt-ie8\">\n//if IE 8\n  <html class=\"no-js lt-ie9\">\n//[if gt IE 8]><!\nhtml(class='no-js')\n  //<![endif]\n  head\n    meta(charset='utf-8')\n    meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')\n    title\n      block title\n    meta(name='description', content='')\n    meta(name='viewport', content='width=device-width')\n    // Place favicon.ico and apple-touch-icon.png in the root directory \n    link(rel='stylesheet', href='styles/main.css')\n    // build:js scripts/vendor/modernizr.js \n    script(src='bower_components/modernizr/modernizr.js')\n    // endbuild \n  body\n    block body\n    //- .container\n    //-   .hero-unit\n    //-     h1 'Allo, 'Allo!\n    //-     p You now have\n    //-     ul\n    //-       li HTML5 Boilerplate\n    //-       li Twitter Bootstrap\n    //-     p installed.\n    //-     h3 Enjoy coding! - Yeoman\n    //if lt IE 7\n        p.chromeframe\n          | You are using an\n          strong outdated\n          | browser. Please\n          a(href='http://browsehappy.com/') upgrade your browser\n          | or\n          a(href='http://www.google.com/chromeframe/?redirect=true') activate Google Chrome Frame\n          | to improve your experience.\n\n    // Google Analytics: change UA-XXXXX-X to be your site's ID. \n    script\n      var _gaq=[['_setAccount','UA-XXXXX-X'],['_trackPageview']];\n      (function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];\n      g.src='//www.google-analytics.com/ga.js';\n      s.parentNode.insertBefore(g,s)}(document,'script'));\n    // build:js scripts/main.js \n    script(src='bower_components/jquery/jquery.js')\n    script(src='scripts/main.js')\n    // endbuild \n    // build:js(.tmp) scripts/coffee.js \n    script(src='scripts/hello.js')\n    // endbuild \n\n\n`yeoman webapp`\u306fSass\u3068CoffeeScript\u3092\u6a19\u6e96\u3067\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u304f\u308c\u3066\u307e\u3059\u304c\n\u3069\u3046\u305b\u306a\u306e\u3067Jade\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```js:Gruntfile.js\n// Generated on 2013-06-01 using generator-webapp 0.2.2\n// Modified by 2k0ri\n'use strict';\nvar LIVERELOAD_PORT = 35729;\nvar lrSnippet = require('connect-livereload')({port: LIVERELOAD_PORT});\nvar mountFolder = function (connect, dir) {\n    return connect.static(require('path').resolve(dir));\n};\n\n// # Globbing\n// for performance reasons we're only matching one level down:\n// 'test/spec/{,*/}*.js'\n// use this if you want to recursively match all subfolders:\n// 'test/spec/**/*.js'\n\nmodule.exports = function (grunt) {\n    // load all grunt tasks\n    require('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);\n\n    // configurable paths\n    var yeomanConfig = {\n        app: 'app',\n        dist: 'dist'\n    };\n\n    grunt.initConfig({\n        yeoman: yeomanConfig,\n        watch: {\n            options: {\n                nospawn: true\n            },\n            coffee: {\n                files: ['<%= yeoman.app %>/scripts/{,*/}*.coffee'],\n                tasks: ['coffee:dist']\n            },\n            coffeeTest: {\n                files: ['test/spec/{,*/}*.coffee'],\n                tasks: ['coffee:test']\n            },\n            compass: {\n                files: ['<%= yeoman.app %>/styles/{,*/}*.{scss,sass}'],\n                tasks: ['compass:server']\n            },\n            jade: {\n                files: ['<%= yeoman.app %>/{,*/}*.jade'],\n                tasks: ['jade:dev']\n            },\n            livereload: {\n                options: {\n                    livereload: LIVERELOAD_PORT\n                },\n                files: [\n                    '<%= yeoman.app %>/*.html',\n                    '{.tmp,<%= yeoman.app %>}/styles/{,*/}*.css',\n                    '{.tmp,<%= yeoman.app %>}/scripts/{,*/}*.js',\n                    '<%= yeoman.app %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}'\n                ]\n            }\n        },\n        connect: {\n            options: {\n                port: 9000,\n                // change this to '0.0.0.0' to access the server from outside\n                hostname: 'localhost'\n            },\n            livereload: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, '.tmp'),\n                            mountFolder(connect, yeomanConfig.app),\n                            lrSnippet\n                        ];\n                    }\n                }\n            },\n            test: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, '.tmp'),\n                            mountFolder(connect, 'test')\n                        ];\n                    }\n                }\n            },\n            dist: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, yeomanConfig.dist)\n                        ];\n                    }\n                }\n            }\n        },\n        open: {\n            server: {\n                path: 'http://localhost:<%= connect.options.port %>'\n            }\n        },\n        clean: {\n            dist: {\n                files: [{\n                    dot: true,\n                    src: [\n                        '.tmp',\n                        '<%= yeoman.dist %>/*',\n                        '!<%= yeoman.dist %>/.git*'\n                    ]\n                }]\n            },\n            server: '.tmp'\n        },\n        jade: {\n            dev: {\n                options: {\n                    pretty: true\n                },\n                files: [{\n                    expand: true,\n                    src: '{,*/}[^_]*.jade',\n                    ext: '.html'\n                }]\n            }\n        },\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc'\n            },\n            all: [\n                'Gruntfile.js',\n                '<%= yeoman.app %>/scripts/{,*/}*.js',\n                '!<%= yeoman.app %>/scripts/vendor/*',\n                'test/spec/{,*/}*.js'\n            ]\n        },\n        mocha: {\n            all: {\n                options: {\n                    run: true,\n                    urls: ['http://localhost:<%= connect.options.port %>/index.html']\n                }\n            }\n        },\n        coffee: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/scripts',\n                    src: '{,*/}*.coffee',\n                    dest: '.tmp/scripts',\n                    ext: '.js'\n                }]\n            },\n            test: {\n                files: [{\n                    expand: true,\n                    cwd: 'test/spec',\n                    src: '{,*/}*.coffee',\n                    dest: '.tmp/spec',\n                    ext: '.js'\n                }]\n            }\n        },\n        compass: {\n            options: {\n                sassDir: '<%= yeoman.app %>/styles',\n                cssDir: '.tmp/styles',\n                generatedImagesDir: '.tmp/images/generated',\n                imagesDir: '<%= yeoman.app %>/images',\n                javascriptsDir: '<%= yeoman.app %>/scripts',\n                fontsDir: '<%= yeoman.app %>/styles/fonts',\n                importPath: '<%= yeoman.app %>/bower_components',\n                httpImagesPath: '/images',\n                httpGeneratedImagesPath: '/images/generated',\n                relativeAssets: false\n            },\n            dist: {},\n            server: {\n                options: {\n                    debugInfo: true\n                }\n            }\n        },\n        // not used since Uglify task does concat,\n        // but still available if needed\n        /*concat: {\n            dist: {}\n        },*/\n        // not enabled since usemin task does concat and uglify\n        // check index.html to edit your build targets\n        // enable this task if you prefer defining your build targets here\n        /*uglify: {\n            dist: {}\n        },*/\n        rev: {\n            dist: {\n                files: {\n                    src: [\n                        '<%= yeoman.dist %>/scripts/{,*/}*.js',\n                        '<%= yeoman.dist %>/styles/{,*/}*.css',\n                        '<%= yeoman.dist %>/images/{,*/}*.{png,jpg,jpeg,gif,webp}',\n                        '<%= yeoman.dist %>/styles/fonts/*'\n                    ]\n                }\n            }\n        },\n        useminPrepare: {\n            options: {\n                dest: '<%= yeoman.dist %>'\n            },\n            html: '<%= yeoman.app %>/index.html'\n        },\n        usemin: {\n            options: {\n                dirs: ['<%= yeoman.dist %>']\n            },\n            html: ['<%= yeoman.dist %>/{,*/}*.html'],\n            css: ['<%= yeoman.dist %>/styles/{,*/}*.css']\n        },\n        imagemin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/images',\n                    src: '{,*/}*.{png,jpg,jpeg}',\n                    dest: '<%= yeoman.dist %>/images'\n                }]\n            }\n        },\n        svgmin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/images',\n                    src: '{,*/}*.svg',\n                    dest: '<%= yeoman.dist %>/images'\n                }]\n            }\n        },\n        cssmin: {\n            dist: {\n                files: {\n                    '<%= yeoman.dist %>/styles/main.css': [\n                        '.tmp/styles/{,*/}*.css',\n                        '<%= yeoman.app %>/styles/{,*/}*.css'\n                    ]\n                }\n            }\n        },\n        htmlmin: {\n            dist: {\n                options: {\n                    /*removeCommentsFromCDATA: true,\n                    // https://github.com/yeoman/grunt-usemin/issues/44\n                    //collapseWhitespace: true,\n                    collapseBooleanAttributes: true,\n                    removeAttributeQuotes: true,\n                    removeRedundantAttributes: true,\n                    useShortDoctype: true,\n                    removeEmptyAttributes: true,\n                    removeOptionalTags: true*/\n                },\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>',\n                    src: '*.html',\n                    dest: '<%= yeoman.dist %>'\n                }]\n            }\n        },\n        // Put files not handled in other tasks here\n        copy: {\n            dist: {\n                files: [{\n                    expand: true,\n                    dot: true,\n                    cwd: '<%= yeoman.app %>',\n                    dest: '<%= yeoman.dist %>',\n                    src: [\n                        '*.{ico,txt}',\n                        '.htaccess',\n                        'images/{,*/}*.{webp,gif}',\n                        'styles/fonts/*'\n                    ]\n                }, {\n                    expand: true,\n                    cwd: '.tmp/images',\n                    dest: '<%= yeoman.dist %>/images',\n                    src: [\n                        'generated/*'\n                    ]\n                }]\n            }\n        },\n        concurrent: {\n            server: [\n                'jade:dev',\n                'coffee:dist',\n                'compass:server'\n            ],\n            test: [\n                'coffee',\n                'compass'\n            ],\n            dist: [\n                'jade:dev',\n                'coffee',\n                'compass:dist',\n                'imagemin',\n                'svgmin',\n                'htmlmin'\n            ]\n        }\n    });\n\n    grunt.registerTask('server', function (target) {\n        if (target === 'dist') {\n            return grunt.task.run(['build', 'open', 'connect:dist:keepalive']);\n        }\n\n        grunt.task.run([\n            'clean:server',\n            'concurrent:server',\n            'connect:livereload',\n            'open',\n            'watch'\n        ]);\n    });\n\n    grunt.registerTask('test', [\n        'clean:server',\n        'concurrent:test',\n        'connect:test',\n        'mocha'\n    ]);\n\n    grunt.registerTask('build', [\n        'clean:dist',\n        'useminPrepare',\n        'concurrent:dist',\n        'cssmin',\n        'concat',\n        'uglify',\n        'copy',\n        'rev',\n        'usemin'\n    ]);\n\n    grunt.registerTask('default', [\n        'jshint',\n        'test',\n        'build'\n    ]);\n};\n```\n\n\u305a\u307c\u3089\u3057\u3066\u307e\u3059\u3002\nwatch\u4ee5\u4e0b\u306bjade\u3001jade:dev\u30bf\u30b9\u30af\u3001concurrent:server\u3068dist\u306bjade:dev\u30bf\u30b9\u30af\u3092\u8db3\u3057\u307e\u3057\u305f\u3002\n\nhtml5 boilerplate\u306e\u90e8\u5206\u3082\u3053\u306e\u969b\u5206\u96e2\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u306f\u3058\u307e\u308b`_***.jade`\u30d5\u30a1\u30a4\u30eb\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u898b\u306a\u3057\u3066\u898b\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```jade:index.jade\nextend _h5bp\nblock title\n\t//- ...\nblock body\n\t//- ...\n```\n\n\n```jade:_h5bp.jade\n!!! 5\n//if lt IE 7\n  <html class=\"no-js lt-ie9 lt-ie8 lt-ie7\">\n//if IE 7\n  <html class=\"no-js lt-ie9 lt-ie8\">\n//if IE 8\n  <html class=\"no-js lt-ie9\">\n//[if gt IE 8]><!\nhtml(class='no-js')\n  //<![endif]\n  head\n    meta(charset='utf-8')\n    meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')\n    title\n      block title\n    meta(name='description', content='')\n    meta(name='viewport', content='width=device-width')\n    // Place favicon.ico and apple-touch-icon.png in the root directory \n    link(rel='stylesheet', href='styles/main.css')\n    // build:js scripts/vendor/modernizr.js \n    script(src='bower_components/modernizr/modernizr.js')\n    // endbuild \n  body\n    block body\n    //- .container\n    //-   .hero-unit\n    //-     h1 'Allo, 'Allo!\n    //-     p You now have\n    //-     ul\n    //-       li HTML5 Boilerplate\n    //-       li Twitter Bootstrap\n    //-     p installed.\n    //-     h3 Enjoy coding! - Yeoman\n    //if lt IE 7\n        p.chromeframe\n          | You are using an\n          strong outdated\n          | browser. Please\n          a(href='http://browsehappy.com/') upgrade your browser\n          | or\n          a(href='http://www.google.com/chromeframe/?redirect=true') activate Google Chrome Frame\n          | to improve your experience.\n\n    // Google Analytics: change UA-XXXXX-X to be your site's ID. \n    script\n      var _gaq=[['_setAccount','UA-XXXXX-X'],['_trackPageview']];\n      (function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];\n      g.src='//www.google-analytics.com/ga.js';\n      s.parentNode.insertBefore(g,s)}(document,'script'));\n    // build:js scripts/main.js \n    script(src='bower_components/jquery/jquery.js')\n    script(src='scripts/main.js')\n    // endbuild \n    // build:js(.tmp) scripts/coffee.js \n    script(src='scripts/hello.js')\n    // endbuild \n```"}