{"context": " More than 1 year has passed since last update.\u5165\u529b\u7cfb\u3084\u9078\u629e\u7cfb\u3067 required \u3067\u3082\u30a8\u30e9\u30fc\u6587\u8a00\u306f\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308b\u3002\n\u5165\u529b\u7cfb\u2192\u300c:label\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u300d\n\u9078\u629e\u7cfb\u2192\u300c:label\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u300d\n\u4e0b\u306e\u3084\u308a\u65b9\u3092\u8003\u3048\u3066\u307f\u305f\u3051\u3069\u3001\u3069\u3046\u3060\u308d\u3046\u3002\ncallback \u304c\u30eb\u30fc\u30eb\u306b\u6307\u5b9a\u3055\u308c\u3066\u3082\u3044\u3051\u308b\u3002\u306f\u305a\n\nAPPPATH/classes/validation/error.php\n<?php\nclass Validation_Error extends \\Fuel\\Core\\Validation_Error\n{\n    /**\n     * Get Message\n     *\n     * Shows the error message which can be taken from loaded language file.\n     *\n     * @param   string  HTML to prefix error message\n     * @param   string  HTML to postfix error message\n     * @param   string  Message to use, or false to try and load it from Lang class\n     * @return  string\n     */\n    public function get_message($msg = false, $open = '', $close = '')\n    {\n        $open   = empty($open)  ? \\Config::get('validation.open_single_error', '')  : $open;\n        $close  = empty($close) ? \\Config::get('validation.close_single_error', '') : $close;\n\n        if ($msg === false and ! ($msg = $this->field->get_error_message($this->rule)))\n        {\n            if (is_null($msg))\n            {\n                $msg = $this->field->fieldset()->validation()->get_message($this->rule);\n            }\n\n            // \u8ffd\u52a0\u90e8\u5206\n            if ($msg === false)\n            {\n                $rule  = $this->rule;\n                $line  = 'validation.'.$this->field->name;\n                $group = \\Lang::get($line);\n                if (is_array($group) && isset($group[$rule]))\n                {\n                    $msg = $group[$rule];\n                }\n                else\n                {\n                    $msg = \\Lang::get($line.':'.$rule) ?: false;\n                }\n            }\n\n            if ($msg === false)\n            {\n                $msg = \\Lang::get('validation.'.$this->rule) ?: \\Lang::get('validation.'.\\Arr::get(explode(':', $this->rule), 0));\n            }\n        }\n        if ($msg == false)\n        {\n            return $open.'Validation rule '.$this->rule.' failed for '.$this->field->label.$close;\n        }\n\n        // only parse when there's tags in the message\n        return $open.(strpos($msg, ':') === false ? $msg : $this->_replace_tags($msg)).$close;\n    }\n}\n\n\n\nAPPPATH/bootstrap.php\n<?php\n\n// Load in the Autoloader\nrequire COREPATH.'classes'.DIRECTORY_SEPARATOR.'autoloader.php';\nclass_alias('Fuel\\\\Core\\\\Autoloader', 'Autoloader');\n\n// Bootstrap the framework DO NOT edit this\nrequire COREPATH.'bootstrap.php';\n\n\nAutoloader::add_classes(array(\n    // Add classes you want to override here\n    // Example: 'View' => APPPATH.'classes/view.php',\n    'Validation_Error' => APPPATH.'classes/validation/error.php',\n));\n\n// Register the autoloader\nAutoloader::register();\n\n/**\n * Your environment.  Can be set to any of the following:\n *\n * Fuel::DEVELOPMENT\n * Fuel::TEST\n * Fuel::STAGE\n * Fuel::PRODUCTION\n */\nFuel::$env = (isset($_SERVER['FUEL_ENV']) ? $_SERVER['FUEL_ENV'] : Fuel::DEVELOPMENT);\n\n// Initialize the framework with the config file.\nFuel::init('config.php');\n\n\n\nAPPPATH/classes/controller/welcome.php\n<?php\nclass Controller_Welcome extends Controller_Template\n{\n    public $template = 'welcome/index';\n\n    public function action_index()\n    {\n        $post = array(\n            'name'   => '',\n            'gender' => '',\n            'email'  => 'abc',\n        );\n\n        $val = \\Validation::forge();\n\n        $val->add('name', '\u540d\u524d')\n            ->add_rule('required');\n\n        $val->add('gender', '\u6027\u5225')\n            ->add_rule('required');\n\n        $val->add('email', '\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9')\n            ->add_rule('required')\n            ->add_rule('valid_email');\n\n        $errors = !$val->run($post) ? $val->error() : array();\n        $values = $val->validated();\n\n        foreach ($errors as $key => &$error)\n        {\n            $values[$key] = $error->value;\n            $error = ''.$error;\n        }\n        var_dump($errors, $values);\n    }\n}\n\n\n\nAPPPATH/lang/ja/validation.php\n<?php\nreturn array(\n    'required'        => ':label\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044',\n    'gender:required' => ':label\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044',\n    'email' => array(\n        'required'    => ':label\u306f\u5fc5\u9808\u9805\u76ee\u3067\u3059',\n        'valid_email' => ':label\u3092\u6b63\u3057\u304f\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044',\n    ),\n);\n\n\n\n\u7d50\u679c\narray(3) {\n  [\"name\"]=>\n  string(33) \"\u540d\u524d\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\"\n  [\"gender\"]=>\n  string(33) \"\u6027\u5225\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\"\n  [\"email\"]=>\n  &string(57) \"\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u6b63\u3057\u304f\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\"\n}\narray(3) {\n  [\"name\"]=>\n  string(0) \"\"\n  [\"gender\"]=>\n  string(0) \"\"\n  [\"email\"]=>\n  string(3) \"abc\"\n}\n\n\n\u5165\u529b\u7cfb\u3084\u9078\u629e\u7cfb\u3067 required \u3067\u3082\u30a8\u30e9\u30fc\u6587\u8a00\u306f\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308b\u3002\n\u5165\u529b\u7cfb\u2192\u300c:label\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u300d\n\u9078\u629e\u7cfb\u2192\u300c:label\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u300d\n\n\u4e0b\u306e\u3084\u308a\u65b9\u3092\u8003\u3048\u3066\u307f\u305f\u3051\u3069\u3001\u3069\u3046\u3060\u308d\u3046\u3002\ncallback \u304c\u30eb\u30fc\u30eb\u306b\u6307\u5b9a\u3055\u308c\u3066\u3082\u3044\u3051\u308b\u3002\u306f\u305a\n\n\n```php:APPPATH/classes/validation/error.php\n<?php\nclass Validation_Error extends \\Fuel\\Core\\Validation_Error\n{\n\t/**\n\t * Get Message\n\t *\n\t * Shows the error message which can be taken from loaded language file.\n\t *\n\t * @param   string  HTML to prefix error message\n\t * @param   string  HTML to postfix error message\n\t * @param   string  Message to use, or false to try and load it from Lang class\n\t * @return  string\n\t */\n\tpublic function get_message($msg = false, $open = '', $close = '')\n\t{\n\t\t$open   = empty($open)  ? \\Config::get('validation.open_single_error', '')  : $open;\n\t\t$close  = empty($close) ? \\Config::get('validation.close_single_error', '') : $close;\n\n\t\tif ($msg === false and ! ($msg = $this->field->get_error_message($this->rule)))\n\t\t{\n\t\t\tif (is_null($msg))\n\t\t\t{\n\t\t\t\t$msg = $this->field->fieldset()->validation()->get_message($this->rule);\n\t\t\t}\n\n\t\t\t// \u8ffd\u52a0\u90e8\u5206\n\t\t\tif ($msg === false)\n\t\t\t{\n\t\t\t\t$rule  = $this->rule;\n\t\t\t\t$line  = 'validation.'.$this->field->name;\n\t\t\t\t$group = \\Lang::get($line);\n\t\t\t\tif (is_array($group) && isset($group[$rule]))\n\t\t\t\t{\n\t\t\t\t\t$msg = $group[$rule];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$msg = \\Lang::get($line.':'.$rule) ?: false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($msg === false)\n\t\t\t{\n\t\t\t\t$msg = \\Lang::get('validation.'.$this->rule) ?: \\Lang::get('validation.'.\\Arr::get(explode(':', $this->rule), 0));\n\t\t\t}\n\t\t}\n\t\tif ($msg == false)\n\t\t{\n\t\t\treturn $open.'Validation rule '.$this->rule.' failed for '.$this->field->label.$close;\n\t\t}\n\n\t\t// only parse when there's tags in the message\n\t\treturn $open.(strpos($msg, ':') === false ? $msg : $this->_replace_tags($msg)).$close;\n\t}\n}\n```\n\n```php:APPPATH/bootstrap.php\n<?php\n\n// Load in the Autoloader\nrequire COREPATH.'classes'.DIRECTORY_SEPARATOR.'autoloader.php';\nclass_alias('Fuel\\\\Core\\\\Autoloader', 'Autoloader');\n\n// Bootstrap the framework DO NOT edit this\nrequire COREPATH.'bootstrap.php';\n\n\nAutoloader::add_classes(array(\n\t// Add classes you want to override here\n\t// Example: 'View' => APPPATH.'classes/view.php',\n\t'Validation_Error' => APPPATH.'classes/validation/error.php',\n));\n\n// Register the autoloader\nAutoloader::register();\n\n/**\n * Your environment.  Can be set to any of the following:\n *\n * Fuel::DEVELOPMENT\n * Fuel::TEST\n * Fuel::STAGE\n * Fuel::PRODUCTION\n */\nFuel::$env = (isset($_SERVER['FUEL_ENV']) ? $_SERVER['FUEL_ENV'] : Fuel::DEVELOPMENT);\n\n// Initialize the framework with the config file.\nFuel::init('config.php');\n```\n\n```php:APPPATH/classes/controller/welcome.php\n<?php\nclass Controller_Welcome extends Controller_Template\n{\n\tpublic $template = 'welcome/index';\n\n\tpublic function action_index()\n\t{\n\t\t$post = array(\n\t\t\t'name'   => '',\n\t\t\t'gender' => '',\n\t\t\t'email'  => 'abc',\n\t\t);\n\n\t\t$val = \\Validation::forge();\n\n\t\t$val->add('name', '\u540d\u524d')\n\t\t\t->add_rule('required');\n\n\t\t$val->add('gender', '\u6027\u5225')\n\t\t\t->add_rule('required');\n\n\t\t$val->add('email', '\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9')\n\t\t\t->add_rule('required')\n\t\t\t->add_rule('valid_email');\n\n\t\t$errors = !$val->run($post) ? $val->error() : array();\n\t\t$values = $val->validated();\n\n\t\tforeach ($errors as $key => &$error)\n\t\t{\n\t\t\t$values[$key] = $error->value;\n\t\t\t$error = ''.$error;\n\t\t}\n\t\tvar_dump($errors, $values);\n\t}\n}\n```\n\n```php:APPPATH/lang/ja/validation.php\n<?php\nreturn array(\n\t'required'        => ':label\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044',\n\t'gender:required' => ':label\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044',\n\t'email' => array(\n\t\t'required'    => ':label\u306f\u5fc5\u9808\u9805\u76ee\u3067\u3059',\n\t\t'valid_email' => ':label\u3092\u6b63\u3057\u304f\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044',\n\t),\n);\n```\n\n```php:\u7d50\u679c\narray(3) {\n  [\"name\"]=>\n  string(33) \"\u540d\u524d\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\"\n  [\"gender\"]=>\n  string(33) \"\u6027\u5225\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\"\n  [\"email\"]=>\n  &string(57) \"\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u6b63\u3057\u304f\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\"\n}\narray(3) {\n  [\"name\"]=>\n  string(0) \"\"\n  [\"gender\"]=>\n  string(0) \"\"\n  [\"email\"]=>\n  string(3) \"abc\"\n}\n```", "tags": ["PHP", "FuelPHP"]}