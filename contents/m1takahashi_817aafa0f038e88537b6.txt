{"context": " More than 1 year has passed since last update.\n\n'init()' was deprecated in iOS 9.0: Use -initWithConcurrencyType: instead\nNSManagedObjectContext\nManaging Concurrency\n\nsample.swift\n// iOS8\nvar managedObjectContext = NSManagedObjectContext()\n\n// iOS9\nvar managedObjectContext = NSManagedObjectContext(concurrencyType: .MainQueueConcurrencyType)\n\n\n\u8a2d\u5b9a\u3067\u304d\u308bconcurrencyType\u306f\u3001\n\nConfinementConcurrencyType\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3051\u3069\u3001\u30aa\u30b9\u30b9\u30e1\u3055\u308c\u3066\u3044\u306a\u3044\u3002\uff08\u4e0b\u4f4d\u4e92\u63db\uff09\nMainQueue\u304b\u3001PrivateQueue\u3092\u9078\u629e\u3057\u308d\u3068\u2026\u2026\u3002\n\n\nMainQueueConcurrencyType\n\n\n\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c \n\n\nPrivateQueueConcurrencyType\n\n\n\u5c02\u7528\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c \n\n\n\n\u79c1\u304c\u5229\u7528\u3057\u3066\u3044\u308b\u30d1\u30bf\u30fc\u30f3\u306f\u3001\nAppDelegate\u3067\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u751f\u6210\u3057\u3066\u3001\u305d\u308c\u3092DAO\uff1f\u7684\u306a\u30de\u30cd\u30fc\u30b8\u30e3\u3092\u901a\u3057\u3066ViewController()\u304b\u3089\u5229\u7528\u3059\u308b\u3068\u3044\u3063\u305f\u3082\u306e\u306a\u306e\u3067\u3001\u300eMainQueueConcurrencyType\u300f\u3092\u9078\u629e\u3057\u307e\u3057\u305f\u3002\nViewController()\u5185\u3067\u5b8c\u7d50\u3059\u308b\u5834\u5408\u3084\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u306e\u5b9f\u884c\u306e\u5834\u5408\u306b\u306f\u3001\u300ePrivateQueueConcurrencyType\u300f\u306e\u65b9\u304c\u3088\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nAppDelegate.swift\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n    ~~~\n\n    // MARK: - Core Data stack\n    lazy var applicationDocumentsDirectory: NSURL = {\n        let urls = NSFileManager.defaultManager().URLsForDirectory(.DocumentDirectory, inDomains: .UserDomainMask)\n        return urls[urls.count-1] \n        }()\n\n    lazy var managedObjectModel: NSManagedObjectModel = {\n        let modelURL = NSBundle.mainBundle().URLForResource(\"Hoge\", withExtension: \"momd\")!\n        return NSManagedObjectModel(contentsOfURL: modelURL)!\n        }()\n\n    lazy var persistentStoreCoordinator: NSPersistentStoreCoordinator? = {\n        var coordinator: NSPersistentStoreCoordinator? = NSPersistentStoreCoordinator(managedObjectModel: self.managedObjectModel)\n        let url = self.applicationDocumentsDirectory.URLByAppendingPathComponent(\"*****.sqlite\")\n        var error: NSError? = nil\n        var failureReason = \"There was an error creating or loading the application's saved data.\"\n        do {\n            try coordinator!.addPersistentStoreWithType(NSSQLiteStoreType, configuration: nil, URL: url, options: nil)\n        } catch var error1 as NSError {\n            error = error1\n            coordinator = nil\n\n            var dict = [String: AnyObject]()\n            dict[NSLocalizedDescriptionKey] = \"Failed to initialize the application's saved data\"\n            dict[NSLocalizedFailureReasonErrorKey] = failureReason\n            dict[NSUnderlyingErrorKey] = error\n            error = NSError(domain: \"YOUR_ERROR_DOMAIN\", code: 9999, userInfo: dict)\n\n            NSLog(\"Unresolved error \\(error), \\(error!.userInfo)\")\n            abort()\n        } catch {\n            fatalError()\n        }\n\n        return coordinator\n        }()\n\n    lazy var managedObjectContext: NSManagedObjectContext? = {\n        let coordinator = self.persistentStoreCoordinator\n        if coordinator == nil {\n            return nil\n        }\n        // \u30b3\u30b3\n        var managedObjectContext = NSManagedObjectContext(concurrencyType: .MainQueueConcurrencyType)\n        managedObjectContext.persistentStoreCoordinator = coordinator\n        return managedObjectContext\n        }()\n\n    // MARK: - Core Data Saving support\n    func saveContext () {\n        if let moc = self.managedObjectContext {\n            var error: NSError? = nil\n            if moc.hasChanges {\n                do {\n                    try moc.save()\n                } catch let error1 as NSError {\n                    error = error1\n                    NSLog(\"Unresolved error \\(error), \\(error!.userInfo)\")\n                    abort()\n                }\n            }\n        }\n    }\n}\n\n\n\nHogeStoreManager.swift\nclass HogeStoreManager {\n    let appDelegate:AppDelegate!\n    let context:NSManagedObjectContext!\n    let entity: NSEntityDescription!\n    let entityName:String = \"HogeStore\"\n\n    init() {\n        appDelegate = UIApplication.sharedApplication().delegate as! AppDelegate\n        context     = appDelegate.managedObjectContext!\n        entity      = NSEntityDescription.entityForName(entityName, inManagedObjectContext: context)\n    }\n\n    func add(title:String, body:String, noteId:NSNumber) {\n        let param = PageStore(entity: entity, insertIntoManagedObjectContext: context)\n        param.title         = title\n        param.body          = body\n        param.note_id       = noteId\n        param.submit_date   = NSDate()\n        param.update_date   = NSDate()\n        param.seq           = NSNumber(integer: 0)\n        appDelegate.saveContext()\n    }\n\n    ~~~\n}\n\n\n\u5143\u3005\u3001\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u9078\u629e\u3057\u305f\u7406\u7531\u306f\u3001\u5185\u90e8\u306eSQLite\u30b9\u30c8\u30ec\u30fc\u30b8\u304b\u3089\u3001iCloud\u3078\u306e\u79fb\u884c\u304c\u697d\u305d\u3046\u3060\u3063\u305f\u304b\u3089\u306a\u306e\u3067\u3059\u304c\u3001\u6570\u30f6\u6708\u7d4c\u3063\u3066\u3082\u9032\u307e\u305a\u3002\n\u30b3\u30fc\u30c9\u306f\u66f8\u3044\u3066\u3042\u308b\u3051\u3069\u3001\u3044\u307e\u3044\u3061\u30e6\u30d3\u30ad\u30c6\u30a3\u30b3\u30f3\u30c6\u30ca\u3092\u4fe1\u7528\u3057\u304d\u308c\u306a\u3044\u3002\n\u30b3\u30f3\u30c6\u30ca\u306b\u653e\u308a\u8fbc\u3093\u3067\u3084\u308c\u3070\u3001iCloud\u304c\u3088\u308d\u3057\u304f\u3084\u3063\u3066\u304f\u308c\u3066\u3001\u540c\u671f\u3055\u308c\u308b\u3093\u3060\u3051\u3069\u306d\u3002\n\n## 'init()' was deprecated in iOS 9.0: Use -initWithConcurrencyType: instead\n\n[NSManagedObjectContext](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/CoreDataFramework/Classes/NSManagedObjectContext_Class/)\n[Managing Concurrency](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/CoreDataFramework/Classes/NSManagedObjectContext_Class/#//apple_ref/occ/instm/NSManagedObjectContext/initWithConcurrencyType:)\n\n```Swift:sample.swift\n// iOS8\nvar managedObjectContext = NSManagedObjectContext()\n\n// iOS9\nvar managedObjectContext = NSManagedObjectContext(concurrencyType: .MainQueueConcurrencyType)\n```\n\n\u8a2d\u5b9a\u3067\u304d\u308bconcurrencyType\u306f\u3001\n\n* ConfinementConcurrencyType\n * \u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3051\u3069\u3001\u30aa\u30b9\u30b9\u30e1\u3055\u308c\u3066\u3044\u306a\u3044\u3002\uff08\u4e0b\u4f4d\u4e92\u63db\uff09\n * MainQueue\u304b\u3001PrivateQueue\u3092\u9078\u629e\u3057\u308d\u3068\u2026\u2026\u3002\n* MainQueueConcurrencyType\n * \u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c \n* PrivateQueueConcurrencyType\n * \u5c02\u7528\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c \n\n\n\u79c1\u304c\u5229\u7528\u3057\u3066\u3044\u308b\u30d1\u30bf\u30fc\u30f3\u306f\u3001\nAppDelegate\u3067\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u751f\u6210\u3057\u3066\u3001\u305d\u308c\u3092DAO\uff1f\u7684\u306a\u30de\u30cd\u30fc\u30b8\u30e3\u3092\u901a\u3057\u3066ViewController()\u304b\u3089\u5229\u7528\u3059\u308b\u3068\u3044\u3063\u305f\u3082\u306e\u306a\u306e\u3067\u3001\u300eMainQueueConcurrencyType\u300f\u3092\u9078\u629e\u3057\u307e\u3057\u305f\u3002\nViewController()\u5185\u3067\u5b8c\u7d50\u3059\u308b\u5834\u5408\u3084\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u306e\u5b9f\u884c\u306e\u5834\u5408\u306b\u306f\u3001\u300ePrivateQueueConcurrencyType\u300f\u306e\u65b9\u304c\u3088\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\n\n\n```Swift:AppDelegate.swift\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n\t~~~\n\n    // MARK: - Core Data stack\n    lazy var applicationDocumentsDirectory: NSURL = {\n        let urls = NSFileManager.defaultManager().URLsForDirectory(.DocumentDirectory, inDomains: .UserDomainMask)\n        return urls[urls.count-1] \n        }()\n    \n    lazy var managedObjectModel: NSManagedObjectModel = {\n        let modelURL = NSBundle.mainBundle().URLForResource(\"Hoge\", withExtension: \"momd\")!\n        return NSManagedObjectModel(contentsOfURL: modelURL)!\n        }()\n    \n    lazy var persistentStoreCoordinator: NSPersistentStoreCoordinator? = {\n        var coordinator: NSPersistentStoreCoordinator? = NSPersistentStoreCoordinator(managedObjectModel: self.managedObjectModel)\n        let url = self.applicationDocumentsDirectory.URLByAppendingPathComponent(\"*****.sqlite\")\n        var error: NSError? = nil\n        var failureReason = \"There was an error creating or loading the application's saved data.\"\n        do {\n            try coordinator!.addPersistentStoreWithType(NSSQLiteStoreType, configuration: nil, URL: url, options: nil)\n        } catch var error1 as NSError {\n            error = error1\n            coordinator = nil\n\n            var dict = [String: AnyObject]()\n            dict[NSLocalizedDescriptionKey] = \"Failed to initialize the application's saved data\"\n            dict[NSLocalizedFailureReasonErrorKey] = failureReason\n            dict[NSUnderlyingErrorKey] = error\n            error = NSError(domain: \"YOUR_ERROR_DOMAIN\", code: 9999, userInfo: dict)\n\n            NSLog(\"Unresolved error \\(error), \\(error!.userInfo)\")\n            abort()\n        } catch {\n            fatalError()\n        }\n        \n        return coordinator\n        }()\n    \n    lazy var managedObjectContext: NSManagedObjectContext? = {\n        let coordinator = self.persistentStoreCoordinator\n        if coordinator == nil {\n            return nil\n        }\n        // \u30b3\u30b3\n        var managedObjectContext = NSManagedObjectContext(concurrencyType: .MainQueueConcurrencyType)\n        managedObjectContext.persistentStoreCoordinator = coordinator\n        return managedObjectContext\n        }()\n    \n    // MARK: - Core Data Saving support\n    func saveContext () {\n        if let moc = self.managedObjectContext {\n            var error: NSError? = nil\n            if moc.hasChanges {\n                do {\n                    try moc.save()\n                } catch let error1 as NSError {\n                    error = error1\n                    NSLog(\"Unresolved error \\(error), \\(error!.userInfo)\")\n                    abort()\n                }\n            }\n        }\n    }\n}\n```\n\n```Swift:HogeStoreManager.swift\nclass HogeStoreManager {\n    let appDelegate:AppDelegate!\n    let context:NSManagedObjectContext!\n    let entity: NSEntityDescription!\n    let entityName:String = \"HogeStore\"\n    \n    init() {\n        appDelegate = UIApplication.sharedApplication().delegate as! AppDelegate\n        context     = appDelegate.managedObjectContext!\n        entity      = NSEntityDescription.entityForName(entityName, inManagedObjectContext: context)\n    }\n    \n    func add(title:String, body:String, noteId:NSNumber) {\n        let param = PageStore(entity: entity, insertIntoManagedObjectContext: context)\n        param.title         = title\n        param.body          = body\n        param.note_id       = noteId\n        param.submit_date   = NSDate()\n        param.update_date   = NSDate()\n        param.seq           = NSNumber(integer: 0)\n        appDelegate.saveContext()\n    }\n\n\t~~~\n}\n```\n\n\u5143\u3005\u3001\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u9078\u629e\u3057\u305f\u7406\u7531\u306f\u3001\u5185\u90e8\u306eSQLite\u30b9\u30c8\u30ec\u30fc\u30b8\u304b\u3089\u3001iCloud\u3078\u306e\u79fb\u884c\u304c\u697d\u305d\u3046\u3060\u3063\u305f\u304b\u3089\u306a\u306e\u3067\u3059\u304c\u3001\u6570\u30f6\u6708\u7d4c\u3063\u3066\u3082\u9032\u307e\u305a\u3002\n\u30b3\u30fc\u30c9\u306f\u66f8\u3044\u3066\u3042\u308b\u3051\u3069\u3001\u3044\u307e\u3044\u3061\u30e6\u30d3\u30ad\u30c6\u30a3\u30b3\u30f3\u30c6\u30ca\u3092\u4fe1\u7528\u3057\u304d\u308c\u306a\u3044\u3002\n\u30b3\u30f3\u30c6\u30ca\u306b\u653e\u308a\u8fbc\u3093\u3067\u3084\u308c\u3070\u3001iCloud\u304c\u3088\u308d\u3057\u304f\u3084\u3063\u3066\u304f\u308c\u3066\u3001\u540c\u671f\u3055\u308c\u308b\u3093\u3060\u3051\u3069\u306d\u3002\n\n", "tags": ["CoreData", "Swift", "iOS9"]}