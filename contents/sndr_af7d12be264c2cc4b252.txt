{"context": "Spring Data JPA\u306b\u306f\u3001Repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5ba3\u8a00\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u3001\u305d\u306e\u540d\u524d\u304b\u3089\u30af\u30a8\u30ea\u3092\u751f\u6210\u3057\u3066\u81ea\u52d5\u7684\u306b\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u304a\u4fbf\u5229\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\u3069\u3093\u306a\u547d\u540d\u898f\u5247\u304c\u3042\u308b\u306e\u304b\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\u57fa\u672c\u7684\u306b\u306f\u30de\u30cb\u30e5\u30a2\u30eb\u306e\u8981\u7d04\u3067\u3059\u3002\n\n\u74b0\u5883\n\nJava \u30fb\u30fb\u30fb jdk1.8\nSpring Boot \u30fb\u30fb\u30fb 1.3.5-RELEASE\nDB \u30fb\u30fb\u30fb MySQL 5.7\n\n\n\u69cb\u6587\n\u4ee5\u4e0b\u306e\uff13\u3064\u306e\u8981\u7d20\u3092\u898f\u5247\u306b\u5f93\u3063\u3066\u7d44\u307f\u5408\u308f\u305b\u305f\u30e1\u30bd\u30c3\u30c9\u540d\u3092Repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067\u3001\u81ea\u52d5\u5b9f\u88c5\u304c\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\uff08find...By read...By query...By count...By get...By\uff09\n\u30ad\u30fc\u30ef\u30fc\u30c9\n\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\n\n\u4ee5\u4e0b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f8b\u306b\u4f7f\u3044\u307e\u3059\u3002\n\nEmployee.java\n@Entity\npublic class Employee implements Serializable {\n\n    private static final long serialVersionUID = 3453583737318640866L;\n    @Id\n    @GeneratedValue(strategy=GenerationType.IDENTITY)\n    private Long id;\n    private String firstname;\n    private String lastname;\n    private int age;\n    @Temporal(TemporalType.DATE)\n    private Date hiredAt;\n    private Boolean active;\n    @ManyToOne\n    @JoinTable(\n            name=\"department_employee\",\n            joinColumns=@JoinColumn(name=\"employee_id\"),\n            inverseJoinColumns=@JoinColumn(name=\"department_code\")\n        )\n    private Department department;\n\n    //\u4ee5\u4e0bGetter/Setter...\n\n\n\nDepartment.java\n@Entity\npublic class Department implements Serializable {\n\n    private static final long serialVersionUID = -6771704436232452390L;\n    @Id\n    private String code;\n    private String name;\n    private boolean flg;\n    @OneToMany(fetch=FetchType.LAZY, mappedBy=\"department\")\n    private transient List<Employee> employeeList;\n\n    //\u4ee5\u4e0bGetter/Setter...\n\n\n\n\u4f7f\u7528\u53ef\u80fd\u30ad\u30fc\u30ef\u30fc\u30c9\n\n\n\n\u30ad\u30fc\u30ef\u30fc\u30c9\n\u30b5\u30f3\u30d7\u30eb\nJPQL\u8868\u73fe\n\n\n\n\nAnd\nfindByLastnameAndFirstname\n\u2026 where e.lastname = ?1 and e.firstname = ?2\n\n\nOr\nfindByLastnameOrFirstname\n\u2026 where e.lastname = ?1 or e.firstname = ?2\n\n\nIs,Equals\nfindByFirstname,findByFirstnameIs,findByFirstnameEquals\n\u2026 where e.firstname = ?1\n\n\nBetween\nfindByHiredAtBetween\n\u2026 where e.hiredAt between ?1 and ?2\n\n\nLessThan\nfindByAgeLessThan\n\u2026 where e.age < ?1\n\n\nLessThanEqual\nfindByAgeLessThanEqual\n\u2026 where e.age <= ?1\n\n\nGreaterThan\nfindByAgeGreaterThan\n\u2026 where e.age > ?1\n\n\nGreaterThanEqual\nfindByAgeGreaterThanEqual\n\u2026 where e.age >= ?1\n\n\nAfter\nfindByHiredAtAfter\n\u2026 where e.hiredAt > ?1\n\n\nBefore\nfindByStartDateBefore\n\u2026 where e.hiredAt < ?1\n\n\nIsNull\nfindByAgeIsNull\n\u2026 where x.age is null\n\n\nIsNotNull,NotNull\nfindByAge(Is)NotNull\n\u2026 where e.age not null\n\n\nLike\nfindByFirstnameLike\n\u2026 where e.firstname like ?1\n\n\nNotLike\nfindByFirstnameNotLike\n\u2026 where e.firstname not like ?1\n\n\nStartingWith\nfindByFirstnameStartingWith\n\u2026 where e.firstname like ?1\n\n\nEndingWith\nfindByFirstnameEndingWith\n\u2026 where e.firstname like ?1\n\n\nContaining\nfindByFirstnameContaining\n\u2026 where e.firstname like ?1\n\n\nOrderBy\nfindByAgeOrderByLastnameDesc\n\u2026 where e.age = ?1 order by e.lastname desc\n\n\nNot\nfindByLastnameNot\n\u2026 where e.lastname <> ?1\n\n\nIn\nfindByAgeIn(Collection ages)\n\u2026 where e.age in ?1\n\n\nNotIn\nfindByAgeNotIn(Collection age)\n\u2026 where e.age not in ?1\n\n\nTrue\nfindByActiveTrue()\n\u2026 where e.active = true\n\n\nFalse\nfindByActiveFalse()\n\u2026 where e.active = false\n\n\nIgnoreCase\nfindByFirstnameIgnoreCase\n\u2026 where UPPER(e.firstame) = UPPER(?1)\n\n\n\n\n\u30b5\u30f3\u30d7\u30eb\n\nIs / Equals / Not\n\nEmployeeRepository.java\n    // SELECT e FROM Employee e\n    Employee findById(Long id);\n\n    // SELECT e FROM Employee e WHERE e.firstname = ?1 \n    List<Employee> findByFirstnameEquals(String firstname);\n\n    // SELECT e FROM Employee e WHERE e.age = ?1\n    List<Employee> findByAgeIs(int age);\n\n    // SELECT e FROM Employee e WHERE e.lastname != ?1\n    List<Employee> findByLastnameNot(String lastname);\n\n    // SELECT e FROM Employee e WHERE e.department = ?1\n    List<Employee> findByDepartment(Department department);\n\n\n\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u3042\u3068\u306bEquals/Is\u3092\u3064\u3051\u308b\u3068\u5b8c\u5168\u4e00\u81f4\u3001Not\u3092\u3064\u3051\u308b\u3068\u4e0d\u4e00\u81f4\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u63a2\u7d22\u3057\u307e\u3059\u3002\n\u5927\u6587\u5b57\u5c0f\u6587\u5b57\u304c\u533a\u5225\u3055\u308c\u308b\u304b\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u7167\u5408\u9806\u5e8f\u306a\u3069\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002\n\nLessThan / GreaterThan\n\u4f7f\u7528\u3059\u308b\u30ad\u30fc\u30ef\u30fc\u30c9\u306fLessThan GreaterThan\u3067\u3059\u3002\n\nEmployeeRepository.java\n    // SELECT e FROM Employee e WHERE e.age < ?1\n    List<Employee> findByAgeLessThan(int age);\n\n    // SELECT e FROM Employee e WHERE e.age > ?1\n    List<Employee> findByAgeGreaterThan(String firstname);\n\n    // SELECT e FROM Employee e WHERE e.hiredAt > ?1\n    List<Employee> findByHiredAtGreaterThan(Date date);\n\n\n\u5883\u754c\u5024\u3092\u542b\u3080\u5834\u5408\u306f\u4e0a\u8ff0\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u300cEquals\u300d\u3092\u8db3\u3057\u3066 GreaterThanEquals LessThanEquals\u3068\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001 Between \u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u5883\u754c\u5024\u3092\u542b\u3093\u3060\u7bc4\u56f2\u691c\u7d22\u304c\u53ef\u80fd\u3067\u3059\u3002\n\nEmployeeRepository.java\n    // SELECT e FROM Employee WHERE e.age <= ?1\n    List<Employee> findByAgeLessThanEqual(int age);\n\n    // SELECT e FROM Employee WHERE e.age >= ?1\n    List<Employee> findByAgeGreaterThanEqual(int age);\n\n    // SELECT e FROM Employee WHERE e.hiredAt BETWEEN ?1 AND ?2\n    List<Employee> findByHiredAtBetween(Date since, Date until);\n\n\n\u3061\u306a\u307f\u306b\u3001findByFirstnameLessThan(String name) \u306e\u3088\u3046\u306b\u3001String\u578b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306bLessThan, GreaterThan\u3092\u3064\u3051\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u7d50\u679c\u306fDBMS\u4f9d\u5b58\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3002\u3002\n\nLike / NotLike / StartingWith / EndingWith / Containing\n\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u305f\u90e8\u5206\u4e00\u81f4\u691c\u7d22\u306f\u3001Like NotLike StartingWith EndingWith Containing \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nEmployeeRepository.java\n    // SELECT e FROM Employee WHERE e.firstname LIKE ?1\n    List<Employee> findByFirstnameLike(int age);\n\n    // SELECT e FROM Employee WHERE e.firstname NOT LIKE ?1\n    List<Employee> findByFirstnameNotLike(String firstname);\n\n    // SELECT e FROM Employee WHERE e.lastname LIKE ?1 \uff08\u524d\u65b9\u4e00\u81f4\uff09\n    List<Employee> findByLastnameStartingWith(String lastname);\n\n    // SELECT e FROM Employee WHERE e.lastname LIKE ?1 \uff08\u5f8c\u65b9\u4e00\u81f4\uff09\n    List<Employee> findByLastnameEndingWith(String lastname);\n\n    // SELECT e FROM Employee WHERE e.lastname LIKE ?1 \uff08\u90e8\u5206\u4e00\u81f4\uff09\n    List<Employee> findByLastnameContaining(String lastname);\n\n\n\u3053\u306e\u3046\u3061\u3001StartingWith EndingWith Containing \u306b\u3064\u3044\u3066\u306f\u3001\u305d\u308c\u305e\u308c\u9806\u756a\u306b\u3001\u524d\u65b9\u4e00\u81f4\u3001\u5f8c\u65b9\u4e00\u81f4\u3001\u90e8\u5206\u4e00\u81f4\u3068\u306a\u308a\u307e\u3059\u3002\n\u4efb\u610f\u306e\u4f4d\u7f6e\u306b\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3092\u633f\u5165\u3057\u305f\u5834\u5408\u306fLike NotLike \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nBetween\n\nEmployeeRepository.java\n    // SELECT e FROM Employee e WHERE e.age BETWEEN ?1 AND ?2\n    List<Employee> findByAgeBetween(int olderThan, int youngerThan);\n\n    // SELECT e FROM Employee e WHERE e.hiredAt BETWEEN ?1 AND ?2\n    List<Employee> findByHiredAtBetween(Date since, Date until);\n\n\n\nIsNull / (Is)NotNull\n\nEmployeeRepository.java\n    // SELECT e FROM Employee WHERE e.hiredAt IS NULL\n    List<Employee> findByHiredAtIsNull();\n\n    // SELECT e FROM Employee WHERE e.hiredAt IS NOT NULL\n    List<Employee> findByHiredAtIsNotNull();\n\n    // SELECT e FROM Employee WHERE e.hiredAt IS NOT NULL\n    List<Employee> findByHiredAtNotNull();\n\n\n\nTrue / False\n\nEmployeeRepository.java\n    // SELECT e FROM Employee WHERE e.active = true\n    List<Employee> findByActiveTrue();\n\n    // SELECT e FROM Employee WHERE e.active = false\n    List<Employee> findByActiveFalse();\n\n\n\nIN\n\u8907\u6570\u306e\u5019\u88dc\u5024\u3067\u691c\u7d22\u3059\u308b\u5834\u5408\u306fSQL\u3068\u540c\u3058\u304fIn\u3092\u4f7f\u3044\u307e\u3059\u3002\n\nEmployeeRepository.java\n    // SELECT e FROM Employee WHERE e.lastname in ?1\n    List<Employee> findByLastnameIn(List<String> lastname);\n\n\n\nAfter / Before\n\u65e5\u4ed8\u306e\u6bd4\u8f03\u306b\u306fLessThan(Equal) GreaterThan(Equal)\u304c\u4f7f\u3048\u307e\u3059\u304c\u3001After Before\u3067\u3082\u8868\u73fe\u53ef\u80fd\u3067\u3059\u3002\n\nEmployeeRepository.java\n    // SELECT e FROM Employee WHERE e.lastname > ?1\n    List<Employee> findByHiredAtAfter(Date date);\n\n    // SELECT e FROM Employee WHERE e.lastname < ?1\n    List<Employee> findByHiredAtBefore(Date date);\n\n\n\nOrderBy\n\u62bd\u51fa\u7d50\u679c\u3092\u30bd\u30fc\u30c8\u3057\u305f\u3044\u5834\u5408\u306fOrderBy\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u306fOrderBy\u306e\u3046\u3057\u308d\u306b\u7f6e\u304d\u307e\u3059\u3002\u6607\u9806\u964d\u9806\u306f\u3055\u3089\u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u306e\u3046\u3057\u308d\u306b\u7f6e\u304f\u306e\u3067\u3001OrderBy+\u30d5\u30a3\u30fc\u30eb\u30c9\u540d+Asc(Desc)\u3068\u306a\u308a\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001By\u53e5\u3067\u6761\u4ef6\u306e\u6307\u5b9a\u304c\u306a\u3044\u3068OrderBy\u306f\u4f7f\u3048\u306a\u3044\u3088\u3046\u3067\u3059\u3002\uff08\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u66f8\u3044\u3066\u306a\u3044\u306e\u3067\u3001\u5358\u306b\u81ea\u5206\u304c\u77e5\u3089\u306a\u3044\u3060\u3051\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff09\n\nEmployeeRepository.java\n    // SELECT e FROM Employee e WHERE e.lastname = ?1 ORDER BY e.age\n    List<Employee> findByLastnameOrderByAge(String lastname);\n\n    // SELECT e FROM Employee e WHERE e.firstname = ?1 ORDER BY e.firstname ASC\n    List<Employee> findByFirstnameOrderByHiredAtAsc(String firstname);\n\n\n\n\u8907\u6570\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u30bd\u30fc\u30c8\u3059\u308b\u5834\u5408\u306f\u3001Asc Desc\u3092\u6307\u5b9a\u3057\u3066\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3064\u306a\u3052\u308c\u3070OK\u3067\u3059\u3002\n\nEmployeeRepository.java\n    // SELECT e FROM Employee e WHERE e.lastname = ?1 ORDER BY e.age ASC, e.firstname DESC\n    List<Employee> findByLastnameOrderByAgeAscFirstnameDesc(String lastname);\n\n\n\nTop / First\nfind\u306e\u76f4\u5f8c\u306bFirst\u304bTop\u3092\u3064\u3051\u308b\u3053\u3068\u3067\u4ef6\u6570\u3092\u7d5e\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nEmployeeRepository.java\n    Employee findFirstByLastname(String lastname);\n\n    Employee findTopByLastname(String lastname);\n\n    List<Employee> findFirst3ByActiveTrueOrderByAgeDesc();\n\n    List<Employee> findTop5ByHiredAtIs(Date date);\n\n\n\n\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\nAnd Or\u3067\u6761\u4ef6\u306e\u7d44\u307f\u5408\u308f\u305b\u304c\u3067\u304d\u307e\u3059\u3002\n\nEmployeeRepository.java\n    // SELECT e FROM Employee e WHERE e.age = ?1, e.active = true\n    List<Employee> findByAgeIsAndActiveTrue(int age);\n\n    // SELECT e FROM Employee e WHERE e.lastname LIKE ?1 OR e.lastname LIKE ?2\n    List<Employee> findByLastnameStartingWithOrFirstnameEndingWith(String lastname, String firstname);\n\n    // SELECT e FROM Employee e WHERE e.age BETWEEN ?1 AND ?2 AND e.department = ?3\n    List<Employee> findByAgeBetweenAndDepartmentIs(int startAge, int endAge, Department department);\n\n\n\n\u4ed6\u306b\u3082\u30fb\u30fb\u30fb\nDistinct read...By query...By count...By get...By \u3068\u304b\u8272\u3005\u3042\u308b\u307f\u305f\u3044\u3067\u3059\u304c\u3001\u529b\u5c3d\u304d\u305f\u306e\u3067\u6c17\u304c\u5411\u3044\u305f\u3089\u66f8\u304d\u8db3\u3057\u307e\u3059\u3002\u3002\n\n\u53c2\u8003\nSpring Data JPA - Reference Documentation\nSpring Data JPA \u3067\u306e\u30af\u30a8\u30ea\u30fc\u5b9f\u88c5\u65b9\u6cd5\u307e\u3068\u3081\nSpring Data JPA\u306b\u306f\u3001Repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5ba3\u8a00\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u3001\u305d\u306e\u540d\u524d\u304b\u3089\u30af\u30a8\u30ea\u3092\u751f\u6210\u3057\u3066\u81ea\u52d5\u7684\u306b\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u304a\u4fbf\u5229\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\u3069\u3093\u306a\u547d\u540d\u898f\u5247\u304c\u3042\u308b\u306e\u304b\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n\u57fa\u672c\u7684\u306b\u306f[\u30de\u30cb\u30e5\u30a2\u30eb](http://docs.spring.io/spring-data/data-jpa/docs/current/reference/html/)\u306e\u8981\u7d04\u3067\u3059\u3002\n\n# \u74b0\u5883\n\n* Java \u30fb\u30fb\u30fb jdk1.8\n* Spring Boot \u30fb\u30fb\u30fb 1.3.5-RELEASE\n* DB \u30fb\u30fb\u30fb MySQL 5.7\n\n# \u69cb\u6587\n\n\u4ee5\u4e0b\u306e\uff13\u3064\u306e\u8981\u7d20\u3092\u898f\u5247\u306b\u5f93\u3063\u3066\u7d44\u307f\u5408\u308f\u305b\u305f\u30e1\u30bd\u30c3\u30c9\u540d\u3092Repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067\u3001\u81ea\u52d5\u5b9f\u88c5\u304c\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n* \u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\uff08`find...By` `read...By` `query...By` `count...By` `get...By`\uff09\n* \u30ad\u30fc\u30ef\u30fc\u30c9\n* \u30d5\u30a3\u30fc\u30eb\u30c9\u540d\n\n\u4ee5\u4e0b\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f8b\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n```java:Employee.java\n@Entity\npublic class Employee implements Serializable {\n\t\n\tprivate static final long serialVersionUID = 3453583737318640866L;\n\t@Id\n\t@GeneratedValue(strategy=GenerationType.IDENTITY)\n\tprivate Long id;\n\tprivate String firstname;\n\tprivate String lastname;\n\tprivate int age;\n\t@Temporal(TemporalType.DATE)\n\tprivate Date hiredAt;\n\tprivate Boolean active;\n\t@ManyToOne\n\t@JoinTable(\n\t\t\tname=\"department_employee\",\n\t\t\tjoinColumns=@JoinColumn(name=\"employee_id\"),\n\t\t\tinverseJoinColumns=@JoinColumn(name=\"department_code\")\n\t\t)\n\tprivate Department department;\n\n\t//\u4ee5\u4e0bGetter/Setter...\n```\n```java:Department.java\n@Entity\npublic class Department implements Serializable {\n\n\tprivate static final long serialVersionUID = -6771704436232452390L;\n\t@Id\n\tprivate String code;\n\tprivate String name;\n\tprivate boolean flg;\n\t@OneToMany(fetch=FetchType.LAZY, mappedBy=\"department\")\n\tprivate transient List<Employee> employeeList;\n\n\t//\u4ee5\u4e0bGetter/Setter...\n```\n\n\n\n# \u4f7f\u7528\u53ef\u80fd\u30ad\u30fc\u30ef\u30fc\u30c9\n\n|\u30ad\u30fc\u30ef\u30fc\u30c9|\u30b5\u30f3\u30d7\u30eb|JPQL\u8868\u73fe|\n|-------|-----|------------|\n|And|findByLastnameAndFirstname|\u2026 where e.lastname = ?1 and e.firstname = ?2|\n|Or|findByLastnameOrFirstname|\u2026 where e.lastname = ?1 or e.firstname = ?2|\n|Is,Equals|findByFirstname,findByFirstnameIs,findByFirstnameEquals|\u2026 where e.firstname = ?1|\n|Between|findByHiredAtBetween|\u2026 where e.hiredAt between ?1 and ?2|\n|LessThan|findByAgeLessThan|\u2026 where e.age < ?1|\n|LessThanEqual|findByAgeLessThanEqual|\u2026 where e.age <= ?1|\n|GreaterThan|findByAgeGreaterThan|\u2026 where e.age > ?1|\n|GreaterThanEqual|findByAgeGreaterThanEqual|\u2026 where e.age >= ?1|\n|After|findByHiredAtAfter|\u2026 where e.hiredAt > ?1|\n|Before|findByStartDateBefore|\u2026 where e.hiredAt < ?1|\n|IsNull|findByAgeIsNull|\u2026 where x.age is null|\n|IsNotNull,NotNull|findByAge(Is)NotNull|\u2026 where e.age not null|\n|Like|findByFirstnameLike|\u2026 where e.firstname like ?1|\n|NotLike|findByFirstnameNotLike|\u2026 where e.firstname not like ?1|\n|StartingWith|findByFirstnameStartingWith|\u2026 where e.firstname like ?1|\n|EndingWith|findByFirstnameEndingWith|\u2026 where e.firstname like ?1|\n|Containing|findByFirstnameContaining|\u2026 where e.firstname like ?1|\n|OrderBy|findByAgeOrderByLastnameDesc|\u2026 where e.age = ?1 order by e.lastname desc|\n|Not|findByLastnameNot|\u2026 where e.lastname <> ?1|\n|In|findByAgeIn(Collection<Age> ages)|\u2026 where e.age in ?1|\n|NotIn|findByAgeNotIn(Collection<Age> age)|\u2026 where e.age not in ?1|\n|True|findByActiveTrue()|\u2026 where e.active = true|\n|False|findByActiveFalse()|\u2026 where e.active = false|\n|IgnoreCase|findByFirstnameIgnoreCase|\u2026 where UPPER(e.firstame) = UPPER(?1)|\n\n\n# \u30b5\u30f3\u30d7\u30eb\n\n## Is / Equals / Not\n\n```java:EmployeeRepository.java\n\t// SELECT e FROM Employee e\n\tEmployee findById(Long id);\n\t\n\t// SELECT e FROM Employee e WHERE e.firstname = ?1 \n\tList<Employee> findByFirstnameEquals(String firstname);\n\n\t// SELECT e FROM Employee e WHERE e.age = ?1\n\tList<Employee> findByAgeIs(int age);\n\t\n\t// SELECT e FROM Employee e WHERE e.lastname != ?1\n\tList<Employee> findByLastnameNot(String lastname);\n\n\t// SELECT e FROM Employee e WHERE e.department = ?1\n\tList<Employee> findByDepartment(Department department);\n```\n\n\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u3042\u3068\u306bEquals/Is\u3092\u3064\u3051\u308b\u3068\u5b8c\u5168\u4e00\u81f4\u3001Not\u3092\u3064\u3051\u308b\u3068\u4e0d\u4e00\u81f4\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u63a2\u7d22\u3057\u307e\u3059\u3002\n\u5927\u6587\u5b57\u5c0f\u6587\u5b57\u304c\u533a\u5225\u3055\u308c\u308b\u304b\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u7167\u5408\u9806\u5e8f\u306a\u3069\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002\n\n## LessThan / GreaterThan\n\n\u4f7f\u7528\u3059\u308b\u30ad\u30fc\u30ef\u30fc\u30c9\u306f`LessThan` `GreaterThan`\u3067\u3059\u3002\n\n```java:EmployeeRepository.java\n\t// SELECT e FROM Employee e WHERE e.age < ?1\n\tList<Employee> findByAgeLessThan(int age);\n\t\n\t// SELECT e FROM Employee e WHERE e.age > ?1\n\tList<Employee> findByAgeGreaterThan(String firstname);\n\t\n\t// SELECT e FROM Employee e WHERE e.hiredAt > ?1\n\tList<Employee> findByHiredAtGreaterThan(Date date);\n```\n\n\u5883\u754c\u5024\u3092\u542b\u3080\u5834\u5408\u306f\u4e0a\u8ff0\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u300cEquals\u300d\u3092\u8db3\u3057\u3066 `GreaterThanEquals` `LessThanEquals`\u3068\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001 `Between` \u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u5883\u754c\u5024\u3092\u542b\u3093\u3060\u7bc4\u56f2\u691c\u7d22\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n```java:EmployeeRepository.java\n\t// SELECT e FROM Employee WHERE e.age <= ?1\n\tList<Employee> findByAgeLessThanEqual(int age);\n\t\n\t// SELECT e FROM Employee WHERE e.age >= ?1\n\tList<Employee> findByAgeGreaterThanEqual(int age);\n\t\n\t// SELECT e FROM Employee WHERE e.hiredAt BETWEEN ?1 AND ?2\n\tList<Employee> findByHiredAtBetween(Date since, Date until);\n```\n\n\u3061\u306a\u307f\u306b\u3001`findByFirstnameLessThan(String name)` \u306e\u3088\u3046\u306b\u3001String\u578b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306bLessThan, GreaterThan\u3092\u3064\u3051\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u7d50\u679c\u306fDBMS\u4f9d\u5b58\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3002\u3002\n\n\n## Like / NotLike / StartingWith / EndingWith / Containing\n\n\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u305f\u90e8\u5206\u4e00\u81f4\u691c\u7d22\u306f\u3001`Like` `NotLike` `StartingWith` `EndingWith` `Containing` \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```java:EmployeeRepository.java\n\t// SELECT e FROM Employee WHERE e.firstname LIKE ?1\n\tList<Employee> findByFirstnameLike(int age);\n\t\n\t// SELECT e FROM Employee WHERE e.firstname NOT LIKE ?1\n\tList<Employee> findByFirstnameNotLike(String firstname);\n\t\n\t// SELECT e FROM Employee WHERE e.lastname LIKE ?1 \uff08\u524d\u65b9\u4e00\u81f4\uff09\n\tList<Employee> findByLastnameStartingWith(String lastname);\n\n\t// SELECT e FROM Employee WHERE e.lastname LIKE ?1 \uff08\u5f8c\u65b9\u4e00\u81f4\uff09\n\tList<Employee> findByLastnameEndingWith(String lastname);\n\n\t// SELECT e FROM Employee WHERE e.lastname LIKE ?1 \uff08\u90e8\u5206\u4e00\u81f4\uff09\n\tList<Employee> findByLastnameContaining(String lastname);\n```\n\n\u3053\u306e\u3046\u3061\u3001`StartingWith` `EndingWith` `Containing` \u306b\u3064\u3044\u3066\u306f\u3001\u305d\u308c\u305e\u308c\u9806\u756a\u306b\u3001\u524d\u65b9\u4e00\u81f4\u3001\u5f8c\u65b9\u4e00\u81f4\u3001\u90e8\u5206\u4e00\u81f4\u3068\u306a\u308a\u307e\u3059\u3002\n\u4efb\u610f\u306e\u4f4d\u7f6e\u306b\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3092\u633f\u5165\u3057\u305f\u5834\u5408\u306f`Like` `NotLike` \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## Between\n\n```java:EmployeeRepository.java\n\t// SELECT e FROM Employee e WHERE e.age BETWEEN ?1 AND ?2\n\tList<Employee> findByAgeBetween(int olderThan, int youngerThan);\n\t\n\t// SELECT e FROM Employee e WHERE e.hiredAt BETWEEN ?1 AND ?2\n\tList<Employee> findByHiredAtBetween(Date since, Date until);\n```\n\n## IsNull / (Is)NotNull\n\n```java:EmployeeRepository.java\n\t// SELECT e FROM Employee WHERE e.hiredAt IS NULL\n\tList<Employee> findByHiredAtIsNull();\n\t\n\t// SELECT e FROM Employee WHERE e.hiredAt IS NOT NULL\n\tList<Employee> findByHiredAtIsNotNull();\n\t\n\t// SELECT e FROM Employee WHERE e.hiredAt IS NOT NULL\n\tList<Employee> findByHiredAtNotNull();\n```\n\n## True / False\n\n```java:EmployeeRepository.java\n\t// SELECT e FROM Employee WHERE e.active = true\n\tList<Employee> findByActiveTrue();\n\t\n\t// SELECT e FROM Employee WHERE e.active = false\n\tList<Employee> findByActiveFalse();\n```\n\n## IN\n\n\u8907\u6570\u306e\u5019\u88dc\u5024\u3067\u691c\u7d22\u3059\u308b\u5834\u5408\u306fSQL\u3068\u540c\u3058\u304f`In`\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```java:EmployeeRepository.java\n\t// SELECT e FROM Employee WHERE e.lastname in ?1\n\tList<Employee> findByLastnameIn(List<String> lastname);\n```\n\n## After / Before\n\n\u65e5\u4ed8\u306e\u6bd4\u8f03\u306b\u306f`LessThan(Equal)` `GreaterThan(Equal)`\u304c\u4f7f\u3048\u307e\u3059\u304c\u3001`After` `Before`\u3067\u3082\u8868\u73fe\u53ef\u80fd\u3067\u3059\u3002\n\n```java:EmployeeRepository.java\n\t// SELECT e FROM Employee WHERE e.lastname > ?1\n\tList<Employee> findByHiredAtAfter(Date date);\n\n\t// SELECT e FROM Employee WHERE e.lastname < ?1\n\tList<Employee> findByHiredAtBefore(Date date);\n```\n\n## OrderBy\n\n\u62bd\u51fa\u7d50\u679c\u3092\u30bd\u30fc\u30c8\u3057\u305f\u3044\u5834\u5408\u306f`OrderBy`\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u306f`OrderBy`\u306e\u3046\u3057\u308d\u306b\u7f6e\u304d\u307e\u3059\u3002\u6607\u9806\u964d\u9806\u306f\u3055\u3089\u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u306e\u3046\u3057\u308d\u306b\u7f6e\u304f\u306e\u3067\u3001`OrderBy`+\u30d5\u30a3\u30fc\u30eb\u30c9\u540d+`Asc(Desc)`\u3068\u306a\u308a\u307e\u3059\u3002\n**\u305f\u3060\u3057\u3001`By`\u53e5\u3067\u6761\u4ef6\u306e\u6307\u5b9a\u304c\u306a\u3044\u3068`OrderBy`\u306f\u4f7f\u3048\u306a\u3044\u3088\u3046\u3067\u3059\u3002\uff08\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u66f8\u3044\u3066\u306a\u3044\u306e\u3067\u3001\u5358\u306b\u81ea\u5206\u304c\u77e5\u3089\u306a\u3044\u3060\u3051\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff09**\n\n```java:EmployeeRepository.java\n\t// SELECT e FROM Employee e WHERE e.lastname = ?1 ORDER BY e.age\n\tList<Employee> findByLastnameOrderByAge(String lastname);\n\n\t// SELECT e FROM Employee e WHERE e.firstname = ?1 ORDER BY e.firstname ASC\n\tList<Employee> findByFirstnameOrderByHiredAtAsc(String firstname);\n\n```\n\n\u8907\u6570\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u30bd\u30fc\u30c8\u3059\u308b\u5834\u5408\u306f\u3001`Asc` `Desc`\u3092\u6307\u5b9a\u3057\u3066\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3064\u306a\u3052\u308c\u3070OK\u3067\u3059\u3002\n\n```java:EmployeeRepository.java\n\t// SELECT e FROM Employee e WHERE e.lastname = ?1 ORDER BY e.age ASC, e.firstname DESC\n\tList<Employee> findByLastnameOrderByAgeAscFirstnameDesc(String lastname);\n```\n\n## Top / First\n\n`find`\u306e\u76f4\u5f8c\u306b`First`\u304b`Top`\u3092\u3064\u3051\u308b\u3053\u3068\u3067\u4ef6\u6570\u3092\u7d5e\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java:EmployeeRepository.java\n\tEmployee findFirstByLastname(String lastname);\n\n\tEmployee findTopByLastname(String lastname);\n\n\tList<Employee> findFirst3ByActiveTrueOrderByAgeDesc();\n\n\tList<Employee> findTop5ByHiredAtIs(Date date);\n```\n\n# \u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\n\n`And` `Or`\u3067\u6761\u4ef6\u306e\u7d44\u307f\u5408\u308f\u305b\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java:EmployeeRepository.java\n\t// SELECT e FROM Employee e WHERE e.age = ?1, e.active = true\n\tList<Employee> findByAgeIsAndActiveTrue(int age);\n\t\n\t// SELECT e FROM Employee e WHERE e.lastname LIKE ?1 OR e.lastname LIKE ?2\n\tList<Employee> findByLastnameStartingWithOrFirstnameEndingWith(String lastname, String firstname);\n\t\n\t// SELECT e FROM Employee e WHERE e.age BETWEEN ?1 AND ?2 AND e.department = ?3\n\tList<Employee> findByAgeBetweenAndDepartmentIs(int startAge, int endAge, Department department);\n```\n\n# \u4ed6\u306b\u3082\u30fb\u30fb\u30fb\n\n`Distinct` `read...By` `query...By` `count...By` `get...By` \u3068\u304b\u8272\u3005\u3042\u308b\u307f\u305f\u3044\u3067\u3059\u304c\u3001\u529b\u5c3d\u304d\u305f\u306e\u3067\u6c17\u304c\u5411\u3044\u305f\u3089\u66f8\u304d\u8db3\u3057\u307e\u3059\u3002\u3002\n\n# \u53c2\u8003\n[Spring Data JPA - Reference Documentation](http://docs.spring.io/spring-data/data-jpa/docs/current/reference/html/)\n[Spring Data JPA \u3067\u306e\u30af\u30a8\u30ea\u30fc\u5b9f\u88c5\u65b9\u6cd5\u307e\u3068\u3081](http://qiita.com/tag1216/items/55742fdb442e5617f727)\n", "tags": ["Java", "spring", "spring-data-jpa"]}