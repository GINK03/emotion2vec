{"context": "\n\n\u306f\u3058\u3081\u306b\n\u524d\u56debrainf*ck\u306e\u8a18\u4e8b\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u307f\u305f\u308f\u3051\u3060\u304c\n\u6587\u5b57\u3060\u3051\u3060\u3068\u308f\u304b\u3089\u306a\u3044\u3068\u601d\u3046\u306e\u3067\n\u30d3\u30b8\u30e5\u30a2\u30eb\u7684\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u52d5\u3044\u3066\u3044\u308b\u69d8\u5b50\u304c\u308f\u304b\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3064\u3044\u3067\u306bRuby/Tk\u306b\u3064\u3044\u3066\u52c9\u5f37\u3057\u3066\u307f\u305f\n\nRuby/Tk\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nWindows\u306e\u74b0\u5883\u306b\u3064\u3044\u3066\u3060\u3051\u8aac\u660e\u3057\u307e\u3059(\u4ed6\u306eOS\u306f\u307b\u304b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044)\n\u4eca\u56de\u78ba\u8a8d\u3057\u305fruby\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f2.3\u3067\u3059\n1. ActiveTcl\u3092\u3053\u306e\u30b5\u30a4\u30c8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9,\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059(\u3053\u306e\u3068\u304d\u6700\u65b0\u7248\u306e8.6\u3067\u306f\u306a\u304f,8.5.18.0\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044)\n2. Ruby\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059,\u65e2\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u4eba\u3082\u305d\u3046\u3067\u306a\u3044\u4eba\u3082Ruby\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u8d77\u52d5\u3057\u3066\u300cTcl/Tk\u30b5\u30dd\u30fc\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u300d\u306b\u30c1\u30a7\u30c3\u30af\u3092\u4ed8\u3051\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308c\u3070OK\u307f\u305f\u3044\u3067\u3059\n\n\u5b9f\u969b\u306b\u52d5\u304b\u3057\u3066\u307f\u308b\n\ntest.rb\n# 1\nrequire 'tk'\n\n# 2\ntest_btn = TkButton.new{\n  text 'test'\n  command { exit }\n  pack\n}\n\n# 3.\nTk.mainloop\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\n\u3053\u306e\u3088\u3046\u306a\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u3067\u3066\u304d\u3066,\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u6d88\u3048\u307e\u3059\n\n\u8efd\u304f\u89e3\u8aac\n\nruby/tk\u3092\u52d5\u304b\u3059\u305f\u3081\u306b\u306ftk\u3092require\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\u3053\u3053\u3067\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u914d\u7f6e\u3057\u3066\u3044\u304d\u307e\u3059.\u3053\u3053\u3067\u306ftest_btn\u3068\u3044\u3046\u30dc\u30bf\u30f3\u3092\u300c\"test\"\u3068\u3044\u3046\u6587\u5b57\u300d\u3067\u300c\u62bc\u3059\u3068\u7d42\u4e86\u3059\u308b\u300d\u3088\u3046\u306b\u4f5c\u3063\u3066\u307e\u3059.\u6700\u5f8c\u306bpack\u3067\u914d\u7f6e\u3057\u307e\u3059\n\u6700\u7d42\u884c\u306bTk.mainloop\u3068\u66f8\u304f\u3053\u3068\u3067\u6bce\u30eb\u30fc\u30d7\u52d5\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\n\n\n\u305d\u3093\u306a\u611f\u3058\u3067\u4f5c\u3063\u305f\u306e\u304c\u3053\u3061\u3089\n\nbrainfuck.rb\nrequire 'tk'\n\n#### SUMMARY ###############################################\n##                                                         #\n## array a is the stack values in i th command             #\n## and let p denote the pointer where the operating stack, #\n## which is shown with red background in the GUI           #\n## str written in sourcel is a command in \"main.bf\"        #\n## and str2 shows the point which is p visibly             #\n##                                                         #\n############################################################\n\na=[0,0,0,0,0,0,0,0]\nstr =\"+++-->>+<+++[>+<-]>>>[>+<-]x\"\nstr2=\"^                           \"\ni=0\np=0\nbranket_stack=[]\n\n\n#### Winodow area ####\n\nwindow = TkRoot.new{\n  title 'Brainf*ck Visualizer'\n  resizable [0,0]\n\n}\n\n#### Registers area ####\n\nregf = TkFrame.new{\n  relief 'sunken'\n  borderwidth 3\n  padx 15\n  pady 20\n  pack('side' => 'top')  \n}\n\n\nf=[]\nl=[]\n8.times do |n|\n  f << TkFrame.new(regf){\n    relief 'sunken'\n    borderwidth 2\n    background ((p==n)?\"red\":\"gray\")\n    padx 10\n    pady 10\n    pack('side' => 'left')\n  }\n  l << TkLabel.new(f[n]){\n  text a[n]\n  pack\n  }\nend\n\n#### Script Area ####\n\nscriptf = TkFrame.new(){\n  pack('side' => 'top')\n\n}\n\nsourcel = TkLabel.new(scriptf){\n  text str + \"\\n\" + str2\n  font TkFont.new(\"family\"=>\"MS Mincho\", \"size\"=>10)\n  pack('side' => 'left')\n}\n\nload_btn = TkButton.new{\n  text 'load'\n  command {\n    a.map!{0}\n    p=0\n    i=0\n    str=IO.read('main.bf')\n    str+='x'\n    str2=(str.size).times.map{\" \"}.join\n    str2[0]='^'\n    sourcel.text = str + \"\\n\" + str2\n    8.times do |n|\n      l[n].text=a[n]\n      f[n].background ((p==n)?\"red\":\"gray\")\n    end\n  }\n  pack\n}\n\nnext_btn = TkButton.new{\n  text 'next'\n  command proc{\n    if i==str.size\n      exit\n    else\n      case str[i]\n\n        when '+'\n          a[p]+=1\n          str2[i]=' '\n          i+=1\n          str2[i]='^'\n          sourcel.text = str + \"\\n\" + str2\n          8.times do |i|\n            l[i].text = a[i]\n          end\n\n        when '-'\n          a[p]-=1\n          str2[i]=' '\n          i+=1\n          str2[i]='^'\n          sourcel.text = str + \"\\n\" + str2\n          8.times do |i|\n            l[i].text = a[i]\n          end\n\n        when '>'\n          f[p].background=\"gray\"\n          p+=1\n          f[p].background=\"red\"\n          str2[i]=' '\n          i+=1\n          str2[i]='^'\n          sourcel.text = str + \"\\n\" + str2\n          8.times do |i|\n            l[i].text = a[i]\n          end\n\n        when '<'\n          f[p].background=\"gray\"\n          p-=1\n          f[p].background=\"red\"\n          str2[i]=' '\n          i+=1\n          str2[i]='^'\n          sourcel.text = str + \"\\n\" + str2\n          8.times do |i|\n            l[i].text = a[i]\n          end\n\n        when '['\n          if a[p] == 0\n            while str[i]!=']'\n              i+=1\n            end\n          else\n            branket_stack << i\n            i+=1\n          end\n          str2=(str.size).times.map{\" \"}.join\n          str2[i]='^'\n          sourcel.text = str + \"\\n\" + str2\n\n        when ']'\n          if a[p] == 0\n            branket_stack.pop\n            i+=1\n          else\n            i=branket_stack.pop\n          end\n          str2=(str.size).times.map{\" \"}.join\n          str2[i]='^'\n          sourcel.text = str + \"\\n\" + str2\n      end\n\n    end\n }\n  pack\n}\n\nTk.mainloop\n\n\n\n\u5b9f\u884c\u30a4\u30e1\u30fc\u30b8\n\n\u3053\u306e\u3088\u3046\u306b\u4eca\u3042\u308b\u30dd\u30a4\u30f3\u30bf\u3068\u30e1\u30e2\u30ea\u5185\u306e\u6570\u5b57\u3092\u898b\u306a\u304c\u3089\u30ef\u30f3\u30b9\u30c6\u30c3\u30d7\u305a\u3064\u5b9f\u884c\u3067\u304d\u307e\u3059\n\u307e\u305f,load\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3053\u3068\u306b\u3088\u308a\u540c\u3058\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3057\u305fbrainf*ck\u306e\u30d5\u30a1\u30a4\u30eb\"main.bf\"\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n\u3044\u3064\u3082\u306e\u3053\u3068\u306a\u304c\u3089\u9069\u5f53\u306b\u3057\u304b\u4f5c\u3063\u3066\u306a\u3044\u306e\u3067,\u30e1\u30e2\u30ea\u306f8\u500b\u3068\u3044\u3046\u524d\u63d0\u3067[ ]\u306e\u6570\u5408\u308f\u305b\u3082\u78ba\u8a8d\u3057\u307e\u305b\u3093,\".\"\u3084\",\"\u306b\u3082\u5bfe\u5fdc\u3057\u307e\u305b\u3093...\n\u6c17\u304c\u5411\u3044\u305f\u3089\u8a02\u6b63\u3057\u307e\u3059\n#\u306f\u3058\u3081\u306b\n\u524d\u56de[brainf*ck\u306e\u8a18\u4e8b](http://qiita.com/sugunisu/items/cd93b849dc1dfe21ce52)\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u307f\u305f\u308f\u3051\u3060\u304c\n\u6587\u5b57\u3060\u3051\u3060\u3068\u308f\u304b\u3089\u306a\u3044\u3068\u601d\u3046\u306e\u3067\n\u30d3\u30b8\u30e5\u30a2\u30eb\u7684\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u52d5\u3044\u3066\u3044\u308b\u69d8\u5b50\u304c\u308f\u304b\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3064\u3044\u3067\u306bRuby/Tk\u306b\u3064\u3044\u3066\u52c9\u5f37\u3057\u3066\u307f\u305f\n\n#Ruby/Tk\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nWindows\u306e\u74b0\u5883\u306b\u3064\u3044\u3066\u3060\u3051\u8aac\u660e\u3057\u307e\u3059(\u4ed6\u306eOS\u306f\u307b\u304b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044)\n\u4eca\u56de\u78ba\u8a8d\u3057\u305fruby\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f2.3\u3067\u3059\n1. ActiveTcl\u3092[\u3053\u306e\u30b5\u30a4\u30c8](http://www.activestate.com/activetcl)\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9,\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059**(\u3053\u306e\u3068\u304d\u6700\u65b0\u7248\u306e8.6\u3067\u306f\u306a\u304f,8.5.18.0\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044)**\n2. Ruby\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059,\u65e2\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u4eba\u3082\u305d\u3046\u3067\u306a\u3044\u4eba\u3082Ruby\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u8d77\u52d5\u3057\u3066**\u300cTcl/Tk\u30b5\u30dd\u30fc\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u300d\u306b\u30c1\u30a7\u30c3\u30af\u3092\u4ed8\u3051\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308c\u3070OK**\u307f\u305f\u3044\u3067\u3059\n\n#\u5b9f\u969b\u306b\u52d5\u304b\u3057\u3066\u307f\u308b\n```ruby:test.rb\n# 1\nrequire 'tk'\n\n# 2\ntest_btn = TkButton.new{\n  text 'test'\n  command { exit }\n  pack\n}\n\n# 3.\nTk.mainloop\n```\n##\u5b9f\u884c\u7d50\u679c\n![testwindow.png](https://qiita-image-store.s3.amazonaws.com/0/152328/84a85cfd-295b-58a5-aabf-b8cf3e4d0736.png)\n\u3053\u306e\u3088\u3046\u306a\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u3067\u3066\u304d\u3066,\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u6d88\u3048\u307e\u3059\n##\u8efd\u304f\u89e3\u8aac\n1. ruby/tk\u3092\u52d5\u304b\u3059\u305f\u3081\u306b\u306ftk\u3092require\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n2. \u3053\u3053\u3067\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u914d\u7f6e\u3057\u3066\u3044\u304d\u307e\u3059.\u3053\u3053\u3067\u306ftest_btn\u3068\u3044\u3046\u30dc\u30bf\u30f3\u3092\u300c\"test\"\u3068\u3044\u3046\u6587\u5b57\u300d\u3067\u300c\u62bc\u3059\u3068\u7d42\u4e86\u3059\u308b\u300d\u3088\u3046\u306b\u4f5c\u3063\u3066\u307e\u3059.\u6700\u5f8c\u306bpack\u3067\u914d\u7f6e\u3057\u307e\u3059\n3. \u6700\u7d42\u884c\u306bTk.mainloop\u3068\u66f8\u304f\u3053\u3068\u3067\u6bce\u30eb\u30fc\u30d7\u52d5\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\n\n#\u305d\u3093\u306a\u611f\u3058\u3067\u4f5c\u3063\u305f\u306e\u304c\u3053\u3061\u3089\n```ruby:brainfuck.rb\nrequire 'tk'\n\n#### SUMMARY ###############################################\n##                                                         #\n## array a is the stack values in i th command             #\n## and let p denote the pointer where the operating stack, #\n## which is shown with red background in the GUI           #\n## str written in sourcel is a command in \"main.bf\"        #\n## and str2 shows the point which is p visibly             #\n##                                                         #\n############################################################\n\na=[0,0,0,0,0,0,0,0]\nstr =\"+++-->>+<+++[>+<-]>>>[>+<-]x\"\nstr2=\"^                           \"\ni=0\np=0\nbranket_stack=[]\n\n\n#### Winodow area ####\n\nwindow = TkRoot.new{\n  title 'Brainf*ck Visualizer'\n  resizable [0,0]\n\n}\n\n#### Registers area ####\n\nregf = TkFrame.new{\n  relief 'sunken'\n  borderwidth 3\n  padx 15\n  pady 20\n  pack('side' => 'top')  \n}\n\n\nf=[]\nl=[]\n8.times do |n|\n  f << TkFrame.new(regf){\n    relief 'sunken'\n    borderwidth 2\n    background ((p==n)?\"red\":\"gray\")\n    padx 10\n    pady 10\n    pack('side' => 'left')\n  }\n  l << TkLabel.new(f[n]){\n  text a[n]\n  pack\n  }\nend\n\n#### Script Area ####\n\nscriptf = TkFrame.new(){\n  pack('side' => 'top')\n\n}\n\nsourcel = TkLabel.new(scriptf){\n  text str + \"\\n\" + str2\n  font TkFont.new(\"family\"=>\"MS Mincho\", \"size\"=>10)\n  pack('side' => 'left')\n}\n\nload_btn = TkButton.new{\n  text 'load'\n  command {\n    a.map!{0}\n    p=0\n    i=0\n    str=IO.read('main.bf')\n    str+='x'\n    str2=(str.size).times.map{\" \"}.join\n    str2[0]='^'\n    sourcel.text = str + \"\\n\" + str2\n    8.times do |n|\n      l[n].text=a[n]\n      f[n].background ((p==n)?\"red\":\"gray\")\n    end\n  }\n  pack\n}\n\nnext_btn = TkButton.new{\n  text 'next'\n  command proc{\n    if i==str.size\n      exit\n    else\n      case str[i]\n\n        when '+'\n          a[p]+=1\n          str2[i]=' '\n          i+=1\n          str2[i]='^'\n          sourcel.text = str + \"\\n\" + str2\n          8.times do |i|\n            l[i].text = a[i]\n          end\n\n        when '-'\n          a[p]-=1\n          str2[i]=' '\n          i+=1\n          str2[i]='^'\n          sourcel.text = str + \"\\n\" + str2\n          8.times do |i|\n            l[i].text = a[i]\n          end\n\n        when '>'\n          f[p].background=\"gray\"\n          p+=1\n          f[p].background=\"red\"\n          str2[i]=' '\n          i+=1\n          str2[i]='^'\n          sourcel.text = str + \"\\n\" + str2\n          8.times do |i|\n            l[i].text = a[i]\n          end\n\n        when '<'\n          f[p].background=\"gray\"\n          p-=1\n          f[p].background=\"red\"\n          str2[i]=' '\n          i+=1\n          str2[i]='^'\n          sourcel.text = str + \"\\n\" + str2\n          8.times do |i|\n            l[i].text = a[i]\n          end\n\n        when '['\n          if a[p] == 0\n            while str[i]!=']'\n              i+=1\n            end\n          else\n            branket_stack << i\n            i+=1\n          end\n          str2=(str.size).times.map{\" \"}.join\n          str2[i]='^'\n          sourcel.text = str + \"\\n\" + str2\n\n        when ']'\n          if a[p] == 0\n            branket_stack.pop\n            i+=1\n          else\n            i=branket_stack.pop\n          end\n          str2=(str.size).times.map{\" \"}.join\n          str2[i]='^'\n          sourcel.text = str + \"\\n\" + str2\n      end\n      \n    end\n }\n  pack\n}\n\nTk.mainloop\n```\n##\u5b9f\u884c\u30a4\u30e1\u30fc\u30b8\n![bfv.png](https://qiita-image-store.s3.amazonaws.com/0/152328/7eea21bf-3ff9-6f05-6bd9-e67917f4bf28.png)\n\u3053\u306e\u3088\u3046\u306b\u4eca\u3042\u308b\u30dd\u30a4\u30f3\u30bf\u3068\u30e1\u30e2\u30ea\u5185\u306e\u6570\u5b57\u3092\u898b\u306a\u304c\u3089\u30ef\u30f3\u30b9\u30c6\u30c3\u30d7\u305a\u3064\u5b9f\u884c\u3067\u304d\u307e\u3059\n\u307e\u305f,load\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3053\u3068\u306b\u3088\u308a\u540c\u3058\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3057\u305fbrainf*ck\u306e\u30d5\u30a1\u30a4\u30eb\"main.bf\"\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n\u3044\u3064\u3082\u306e\u3053\u3068\u306a\u304c\u3089\u9069\u5f53\u306b\u3057\u304b\u4f5c\u3063\u3066\u306a\u3044\u306e\u3067,\u30e1\u30e2\u30ea\u306f8\u500b\u3068\u3044\u3046\u524d\u63d0\u3067[ ]\u306e\u6570\u5408\u308f\u305b\u3082\u78ba\u8a8d\u3057\u307e\u305b\u3093,\".\"\u3084\",\"\u306b\u3082\u5bfe\u5fdc\u3057\u307e\u305b\u3093...\n\u6c17\u304c\u5411\u3044\u305f\u3089\u8a02\u6b63\u3057\u307e\u3059\n", "tags": ["Ruby", "RubyTk", "Brainf*ck"]}