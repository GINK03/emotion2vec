{"context": "Elixir\u3067\u8a66\u3057\u306b\u4f55\u304b\u66f8\u3044\u3066\u307f\u308b(\u305d\u306e2)\u3067\u66f8\u3044\u305f\u3082\u306e\u304c\u300c\u3061\u3083\u3093\u3068\u3057\u305f\u66f8\u304d\u65b9\u3067\u306f\u306a\u304b\u3063\u305f\u300d\u306e\u3067\u66f8\u304d\u76f4\u3057\u307e\u3057\u305f\u3002\u3055\u3089\u306b\u5b9f\u884c\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\nGitHub\u30bd\u30fc\u30b9\u3082\u4fee\u6b63\u6e08\u307f\u3067\u3059\u3002\n\u307e\u3060\u307e\u3060\u3053\u306e\u3042\u305f\u308a\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u3044\u306e\u3067\u6709\u8b58\u8005\u306e\u65b9\u30b3\u30e1\u30f3\u30c8\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\u3084\u308a\u65b9\u63a2\u3057\u3066\u307f\u3066\u3082\u672c\u5bb6\u306eSupervisor and Application\u3082\u4ed6\u306e\u77e5\u8b58\u304c\u5341\u5206\u3042\u308b\u3053\u3068\u304c\u524d\u63d0\u306b\u306a\u3063\u3066\u3044\u3066\u3068\u3063\u3064\u304d\u306b\u304f\u3044\u3002\u3053\u3061\u3089niku\u3055\u3093\u306e\u8a18\u4e8b\u304c\u4e00\u756a\u5f79\u306b\u7acb\u3063\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u7d9a\u304d\u306f\nElixir\u3067\u8a66\u3057\u306b\u4f55\u304b\u66f8\u3044\u3066\u307f\u308b(\u305d\u306e4) - Task\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306b\u3059\u308b\nElixir\u3067\u8a66\u3057\u306b\u4f55\u304b\u66f8\u3044\u3066\u307f\u308b(\u305d\u306e5) - \u5931\u6557\u3057\u305f\u3089\u3084\u308a\u76f4\u3059\n\n\n\u767a\u7aef\n\u300c\u305d\u3046\u3044\u3048\u3070$ mix new vewcheckex\u3067\u306a\u3093\u3067vercheckex/lib/vewcheckex.ex\u304c\u4f5c\u3089\u308c\u308b\u306e\u306b\u305d\u3053\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u66f8\u304f\u3068\u306a\u3093\u304b\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3093\u3060\u308d\u3046\u300d\n\u6c17\u306b\u306f\u306a\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u4eca\u307e\u3067vewcheckex/vewcheckex.ex\u3092\u66f8\u3044\u3066\n$ mix run vewcheckex.ex\n\n\u3067\u52d5\u304f\u304b\u3089\u305d\u306e\u307e\u307e\u306b\u3057\u3066\u307e\u3057\u305f\u3002\u3082\u3057lib/\u306e\u4e0b\u306bvercheck.ex\u3092\u7f6e\u304f\u3068\n== Compilation error on file lib/vercheckex.ex ==\n** (exit) exited in: :gen_server.call(:hackney_manager, {:new_request, #PID<0.420.0>, #Reference<0.0.1.8689>, {:client, :undefined, :hackney_dummy_metrics, :hackney_ssl_transport, 'github.com', 443, \"github.com\", [connect_timeout: 5000, recv_timeout: :infinity], nil, nil, nil, true, :hackney_pool, :infinity, false, 5, false, 5, nil, nil, nil, :undefined, :start, nil, :normal, false, false, false, false, nil, :waiting, nil, 4096, \"\", [], :undefined, nil, nil, nil, nil, :undefined, nil}}, :infinity)\n    ** (EXIT) no process\n\n\n\u306a\u3093\u3060\u3053\u308c\u3001\u3055\u3063\u3071\u308a\u308f\u304b\u3089\u306a\u3044\u305e\uff1fgen_server\u306a\u3093\u304b\u547c\u3093\u3067\u306a\u3044\u306e\u306b\uff1f\n\n\u305d\u3082\u305d\u3082Elixir\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u306f\nElixir\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u305d\u308c\u81ea\u4f53\u304c1\u500b\u306e(Elixir/Erlang\u306e)\u30d7\u30ed\u30bb\u30b9\u3067\u3001\u3069\u3053\u304b\u304b\u3089\u8d77\u52d5\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070$iex -S mix\u3067\u8d77\u52d5\u3055\u308c\u308b\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d7\u30ed\u30bb\u30b9\u3082\u7acb\u3061\u4e0a\u304c\u3063\u3066\u30b3\u30de\u30f3\u30c9\u5f85\u3061\u306b\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u305d\u3053\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5fc5\u8981\u306a\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u6b63\u3057\u304f\u5148\u306b\u8d77\u52d5\u3055\u305b\u3066\u3044\u306a\u3044\u3068\u4e0a\u8a18\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u30021\n\u3067\u306f\u3001\u3069\u3046\u3084\u3063\u3066\u305d\u306e\u3042\u305f\u308a\u3092\u8a2d\u5b9a\u3059\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u8a8d\u8b58\u3055\u305b\u308b\n\u307e\u305a\u3001mix\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u3068\u304d\u306b--sup\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u307e\u3059\u3002sup\u306fSupervisor\u304b\u3089\u6765\u3066\u304a\u308a\u81ea\u52d5\u7684\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Application\u30d3\u30d8\u30a4\u30d3\u30a2\u3092\u4f7f\u3046\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u30d3\u30d8\u30a4\u30d3\u30a2\u306fErlang/OTP\u7528\u8a9e\u3067\u3001\u4ed6\u306e\u8a00\u8a9e\u3067\u8a00\u3046\u3068\u300c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u300d\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\n\u3067\u306f\u524d\u56de\u306e\u6295\u7a3f\u306e\u300c\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u306b\u30ad\u30e3\u30e1\u30eb\u30b1\u30fc\u30b9\u3092\u4f7f\u3044\u305f\u3044\u300d\u3068\u3053\u308d\u3092\u53c2\u8003\u306b\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n$ mix new vercheckex --sup --module VercheckEx\n\n\u751f\u6210\u3055\u308c\u308bvercheckex/lib/vercheckex.ex\u306f\ndefmodule VercheckEx do\n  use Application\n\n  # See http://elixir-lang.org/docs/stable/elixir/Application.html\n  # for more information on OTP Applications\n  def start(_type, _args) do\n    import Supervisor.Spec, warn: false\n\n    children = [\n      # Define workers and child supervisors to be supervised\n      # worker(VercheckEx.Worker, [arg1, arg2, arg3])\n    ]\n\n    # See http://elixir-lang.org/docs/stable/elixir/Supervisor.html\n    # for other strategies and supported options\n    opts = [strategy: :one_for_one, name: VercheckEx.Supervisor]\n    Supervisor.start_link(children, opts)\n  end\nend\n\nuse Application\u3067Application \u30d3\u30d8\u30a4\u30d3\u30a2\u3092\u4f7f\u3046\u3088\u3046\u306b\u6307\u5b9a\u3055\u308cdef start(_type, _args) do\u3067\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u540c\u3058\u304fmix.exs\u3082\ndefmodule VercheckEx.Mixfile do\n  use Mix.Project\n\n  def project do\n    [app: :vercheckex,\n     version: \"0.0.1\",\n     elixir: \"~> 1.0\",\n     build_embedded: Mix.env == :prod,\n     start_permanent: Mix.env == :prod,\n     deps: deps]\n  end\n\n  # Configuration for the OTP application\n  #\n  # Type `mix help compile.app` for more information\n  def application do\n    [applications: [:logger],\n     mod: {VercheckEx, []}]\n  end\n\n  # Dependencies can be Hex packages:\n  #\n  #   {:mydep, \"~> 0.3.0\"}\n  #\n  # Or git/path repositories:\n  #\n  #   {:mydep, git: \"https://github.com/elixir-lang/mydep.git\", tag: \"0.1.0\"}\n  #\n  # Type `mix help deps` for more examples and options\n  defp deps do\n    []\n  end\nend\n\n\ndef application do\u306e\u3068\u3053\u308d\u306b\nmod: {VercheckEx, []}\n\n\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u8d77\u52d5\u3059\u3079\u304d\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u7b87\u6240\u3067\u3059\u3002\n\n\u3053\u308c\u307e\u3067\u306e\u30a2\u30d7\u30ea\u3092\u66f8\u304d\u63db\u3048\u308b\n\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\u6700\u4f4e\u9650\u306e\u66f8\u304d\u63db\u3048\u3092\u3057\u307e\u3059\u3002\n\nlib/vercheckex.ex\u3067\u306f\u4eca\u307e\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5916\u304b\u3089\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u95a2\u6570\u3092\n\nVercheckEx.receiver(result_list, length(urls))\n\n\u306e\u3088\u3046\u306b\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u3053\u308c\u3092Application\u30d3\u30d8\u30a4\u30d3\u30a2\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3067\u3042\u308b`main/1'\u306b\u6301\u3063\u3066\u304d\u307e\u3059\u2026\ndef main(args) do\n   urls = [ #{ URL, type, index}\n      {\"https://github.com/jquery/jquery/releases\", :type1},\n# (\u9577\u3044\u306e\u3067\u7565)\n      {\"https://github.com/philss/floki/releases\", :type1},\n      {\"https://github.com/takscape/elixir-array/releases\", :type2},\n    ]\n\n    # Spawn processes upto the number of URLs\n    fetchers = for _ <- 0..length(urls), do: spawn_link fn -> VercheckEx.fetch_content() end\n\n    Enum.with_index(urls)|>Enum.each( fn(x) ->\n      {{u,t},i} = x\n      send Enum.at(fetchers,i), {self, u, t, i}\n    end)\n\n    result_list = []\n    VercheckEx.receiver(result_list, length(urls))\nend\n\n\u3053\u308c\u3067\n$ mix deps.get\n...\n$ iex -S mix\n\n\u3067\u3001iex\u306e\u4e2d\u304b\u3089VercheckEx.main/1\u3092\u547c\u3073\u51fa\u3057\u3066\u3042\u3052\u308b\u3068\u30a2\u30d7\u30ea\u304c\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nCompiled lib/vercheckex.ex\nGenerated vercheckex app\nInteractive Elixir (1.0.5) - press Ctrl+C to exit (type h() ENTER for help)\niex(1)> VercheckEx.main []\njquery          3.0.0-alpha1    2015.07.14      <<<<< updated at 7 day(s) ago.\nangular         2.0.0-alpha.31  2015.07.15      <<<<< updated at 6 day(s) ago.\n...\nNim             v0.11.2         2015.05.05\nelixir          v1.0.5          2015.06.29\nfloki           v0.3.2          2015.06.28\nelixir-array    1.0.1           2014.09.23\n:ok\niex(2)>\n\n\n\u6b21\u306b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u8d77\u52d5\u3067\u304d\u308b\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308c\u308b\u3088\u3046\u306bmix.exs\u306b\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n#(\u524d\u7565)#\n  def project do\n    [app: :vercheckex,\n     version: \"0.0.1\",\n     elixir: \"~> 1.0\",\n     build_embedded: Mix.env == :prod,\n     start_permanent: Mix.env == :prod,\n     escript: escript, # <<<<<<<\u3053\u3053\u8ffd\u52a0\n     deps: deps]\n  end\n\n  def escript do               # <<<< escript\u8a18\u8ff0\u8ffd\u52a0\n    [main_module: VercheckEx]  # <<<<\n  end                          # <<<<\n#(\u5f8c\u7565)#\n\n\u3053\u308c\u3067\n$ mix escript.build\nGenerated escript vercheckex with MIX_ENV=dev\n\n\u3059\u308b\u3068./vercheckex(\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb)\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u6b8b\u308b\u8ab2\u984c\n\n\nmix\u30b3\u30de\u30f3\u30c9\u306a\u3069\u304b\u3089main\u306e\u95a2\u6570\u3092\u81ea\u52d5\u7684\u306b\u547c\u3073\u51fa\u305b\u306a\u3044\u304b(\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u304c\u3067\u304d\u305f\u306e\u3067\u89e3\u6c7a\u306f\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u2026)\n\u672c\u984c\u306e\u30a8\u30e9\u30fc\u51e6\u7406\u3001\u300c\u6307\u5b9a\u306eURL\u304b\u3089\u7d50\u679c\u304c\u53d6\u308c\u305f\u30b5\u30a4\u30c8\u306b\u3064\u3044\u3066\u306f\u7d50\u679c\u3092\u8868\u793a\u3057\u3001\u30a2\u30af\u30bb\u30b9\u306b\u5931\u6557\u3059\u308b\u306a\u3069\u3057\u3066\u30a8\u30e9\u30fc\u306b\u306a\u3063\u305f\u5834\u5408\u306f\u305d\u306e\u65e8\u8868\u793a\u3057\u3066\u6b8b\u308a\u306e\u30b5\u30a4\u30c8\u306b\u3064\u3044\u3066\u306f\u5b9f\u884c\u3092\u7d9a\u3051\u308b\u300d\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\n\n\n\n\n\n\u5b9f\u306fvercheckex/lib/vercheckex.ex\u3067\u306f\u306a\u304fvercheckex/vercheckex.ex\u3092\u7f6e\u3044\u3066 $ mix run vercheckex.ex\u3059\u308b\u3068\u3001HTTPotion\u521d\u3081\u5fc5\u8981\u306a\u30d7\u30ed\u30bb\u30b9\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u3066\u5b9f\u884c\u3055\u308c\u307e\u3059\u304cvercheckex.ex\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305a\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u307e\u307e\u5f8c\u304b\u3089\u5b9f\u884c\u3055\u308c\u3066\u3044\u305f\u306e\u3067\u3057\u305f\u3002\u3067\u3059\u306e\u3067\u3053\u306e\u5834\u5408\u306f\u300c\u5fc5\u8981\u306a\u3042\u308c\u3053\u308c\u300d\u304c\u5148\u306b\u8d77\u52d5\u3057\u305f\u5f8c\u3067\u672c\u4f53\u304c\u52d5\u304f\u306e\u3067\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u3002\u00a0\u21a9\n\n\n\n[Elixir\u3067\u8a66\u3057\u306b\u4f55\u304b\u66f8\u3044\u3066\u307f\u308b(\u305d\u306e2)](http://qiita.com/HirofumiTamori/items/7936ed9c6f73f4c9b475)\u3067\u66f8\u3044\u305f\u3082\u306e\u304c\u300c\u3061\u3083\u3093\u3068\u3057\u305f\u66f8\u304d\u65b9\u3067\u306f\u306a\u304b\u3063\u305f\u300d\u306e\u3067\u66f8\u304d\u76f4\u3057\u307e\u3057\u305f\u3002\u3055\u3089\u306b\u5b9f\u884c\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n[GitHub\u30bd\u30fc\u30b9\u3082\u4fee\u6b63\u6e08\u307f](https://github.com/HirofumiTamori/vercheckex)\u3067\u3059\u3002\n\n**\u307e\u3060\u307e\u3060\u3053\u306e\u3042\u305f\u308a\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u3044\u306e\u3067\u6709\u8b58\u8005\u306e\u65b9\u30b3\u30e1\u30f3\u30c8\u304a\u9858\u3044\u3057\u307e\u3059\u3002**\n\n\u3084\u308a\u65b9\u63a2\u3057\u3066\u307f\u3066\u3082\u672c\u5bb6\u306e[Supervisor and Application](http://elixir-lang.org/getting-started/mix-otp/supervisor-and-application.html)\u3082\u4ed6\u306e\u77e5\u8b58\u304c\u5341\u5206\u3042\u308b\u3053\u3068\u304c\u524d\u63d0\u306b\u306a\u3063\u3066\u3044\u3066\u3068\u3063\u3064\u304d\u306b\u304f\u3044\u3002[\u3053\u3061\u3089niku\u3055\u3093\u306e\u8a18\u4e8b](http://niku.name/articles/2013/10/24/Elixir%20%E3%81%A7%20OTP%20%E3%81%AE%20Application%20%E3%82%92%E4%BD%BF%E3%81%86)\u304c\u4e00\u756a\u5f79\u306b\u7acb\u3063\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u7d9a\u304d\u306f\n[**Elixir\u3067\u8a66\u3057\u306b\u4f55\u304b\u66f8\u3044\u3066\u307f\u308b(\u305d\u306e4) - Task\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306b\u3059\u308b**](http://qiita.com/HirofumiTamori/items/ed131104494f4bd2f695)\n[**Elixir\u3067\u8a66\u3057\u306b\u4f55\u304b\u66f8\u3044\u3066\u307f\u308b(\u305d\u306e5) - \u5931\u6557\u3057\u305f\u3089\u3084\u308a\u76f4\u3059**](http://qiita.com/HirofumiTamori/items/dde5d95765c68f2fef3e)\n\n\n-----\n\n## \u767a\u7aef ##\n\n\u300c\u305d\u3046\u3044\u3048\u3070`$ mix new vewcheckex`\u3067\u306a\u3093\u3067`vercheckex/lib/vewcheckex.ex`\u304c\u4f5c\u3089\u308c\u308b\u306e\u306b\u305d\u3053\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u66f8\u304f\u3068\u306a\u3093\u304b\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3093\u3060\u308d\u3046\u300d\n\n\u6c17\u306b\u306f\u306a\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u4eca\u307e\u3067`vewcheckex/vewcheckex.ex`\u3092\u66f8\u3044\u3066\n\n```bash\n$ mix run vewcheckex.ex\n```\n\n\u3067\u52d5\u304f\u304b\u3089\u305d\u306e\u307e\u307e\u306b\u3057\u3066\u307e\u3057\u305f\u3002\u3082\u3057lib/\u306e\u4e0b\u306bvercheck.ex\u3092\u7f6e\u304f\u3068\n\n```iex\n== Compilation error on file lib/vercheckex.ex ==\n** (exit) exited in: :gen_server.call(:hackney_manager, {:new_request, #PID<0.420.0>, #Reference<0.0.1.8689>, {:client, :undefined, :hackney_dummy_metrics, :hackney_ssl_transport, 'github.com', 443, \"github.com\", [connect_timeout: 5000, recv_timeout: :infinity], nil, nil, nil, true, :hackney_pool, :infinity, false, 5, false, 5, nil, nil, nil, :undefined, :start, nil, :normal, false, false, false, false, nil, :waiting, nil, 4096, \"\", [], :undefined, nil, nil, nil, nil, :undefined, nil}}, :infinity)\n    ** (EXIT) no process\n\n```\n\n\u306a\u3093\u3060\u3053\u308c\u3001\u3055\u3063\u3071\u308a\u308f\u304b\u3089\u306a\u3044\u305e\uff1fgen_server\u306a\u3093\u304b\u547c\u3093\u3067\u306a\u3044\u306e\u306b\uff1f\n\n## \u305d\u3082\u305d\u3082Elixir\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u306f ##\n\nElixir\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u305d\u308c\u81ea\u4f53\u304c1\u500b\u306e(Elixir/Erlang\u306e)**\u30d7\u30ed\u30bb\u30b9**\u3067\u3001\u3069\u3053\u304b\u304b\u3089\u8d77\u52d5\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070`$iex -S mix`\u3067\u8d77\u52d5\u3055\u308c\u308b\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d7\u30ed\u30bb\u30b9\u3082\u7acb\u3061\u4e0a\u304c\u3063\u3066\u30b3\u30de\u30f3\u30c9\u5f85\u3061\u306b\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u305d\u3053\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5fc5\u8981\u306a\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u6b63\u3057\u304f\u5148\u306b\u8d77\u52d5\u3055\u305b\u3066\u3044\u306a\u3044\u3068\u4e0a\u8a18\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002[^1]\n[^1]: \u5b9f\u306fvercheckex/lib/vercheckex.ex\u3067\u306f\u306a\u304fvercheckex/vercheckex.ex\u3092\u7f6e\u3044\u3066 $ mix run vercheckex.ex\u3059\u308b\u3068\u3001HTTPotion\u521d\u3081\u5fc5\u8981\u306a\u30d7\u30ed\u30bb\u30b9\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u3066\u5b9f\u884c\u3055\u308c\u307e\u3059\u304cvercheckex.ex\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305a\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u307e\u307e\u5f8c\u304b\u3089\u5b9f\u884c\u3055\u308c\u3066\u3044\u305f\u306e\u3067\u3057\u305f\u3002\u3067\u3059\u306e\u3067\u3053\u306e\u5834\u5408\u306f\u300c\u5fc5\u8981\u306a\u3042\u308c\u3053\u308c\u300d\u304c\u5148\u306b\u8d77\u52d5\u3057\u305f\u5f8c\u3067\u672c\u4f53\u304c\u52d5\u304f\u306e\u3067\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u3002\n\n\u3067\u306f\u3001\u3069\u3046\u3084\u3063\u3066\u305d\u306e\u3042\u305f\u308a\u3092\u8a2d\u5b9a\u3059\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n## \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u8a8d\u8b58\u3055\u305b\u308b ##\n\n\u307e\u305a\u3001mix\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u3068\u304d\u306b`--sup`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u307e\u3059\u3002sup\u306f[Supervisor](http://elixir-lang.org/getting-started/mix-otp/supervisor-and-application.html)\u304b\u3089\u6765\u3066\u304a\u308a\u81ea\u52d5\u7684\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Application\u30d3\u30d8\u30a4\u30d3\u30a2\u3092\u4f7f\u3046\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u30d3\u30d8\u30a4\u30d3\u30a2\u306fErlang/OTP\u7528\u8a9e\u3067\u3001\u4ed6\u306e\u8a00\u8a9e\u3067\u8a00\u3046\u3068\u300c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u300d\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\n\n\u3067\u306f[\u524d\u56de\u306e\u6295\u7a3f](http://qiita.com/HirofumiTamori/items/b72ad232dc3b26e87a03#genserver%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9Ffizzbuzz%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC)\u306e\u300c\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u306b\u30ad\u30e3\u30e1\u30eb\u30b1\u30fc\u30b9\u3092\u4f7f\u3044\u305f\u3044\u300d\u3068\u3053\u308d\u3092\u53c2\u8003\u306b\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```bash\n$ mix new vercheckex --sup --module VercheckEx\n```\n\n\u751f\u6210\u3055\u308c\u308bvercheckex/lib/vercheckex.ex\u306f\n\n```ex\ndefmodule VercheckEx do\n  use Application\n\n  # See http://elixir-lang.org/docs/stable/elixir/Application.html\n  # for more information on OTP Applications\n  def start(_type, _args) do\n    import Supervisor.Spec, warn: false\n\n    children = [\n      # Define workers and child supervisors to be supervised\n      # worker(VercheckEx.Worker, [arg1, arg2, arg3])\n    ]\n\n    # See http://elixir-lang.org/docs/stable/elixir/Supervisor.html\n    # for other strategies and supported options\n    opts = [strategy: :one_for_one, name: VercheckEx.Supervisor]\n    Supervisor.start_link(children, opts)\n  end\nend\n```\n\n`use Application`\u3067Application \u30d3\u30d8\u30a4\u30d3\u30a2\u3092\u4f7f\u3046\u3088\u3046\u306b\u6307\u5b9a\u3055\u308c`def start(_type, _args) do`\u3067\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u540c\u3058\u304fmix.exs\u3082\n\n```ex\ndefmodule VercheckEx.Mixfile do\n  use Mix.Project\n\n  def project do\n    [app: :vercheckex,\n     version: \"0.0.1\",\n     elixir: \"~> 1.0\",\n     build_embedded: Mix.env == :prod,\n     start_permanent: Mix.env == :prod,\n     deps: deps]\n  end\n\n  # Configuration for the OTP application\n  #\n  # Type `mix help compile.app` for more information\n  def application do\n    [applications: [:logger],\n     mod: {VercheckEx, []}]\n  end\n\n  # Dependencies can be Hex packages:\n  #\n  #   {:mydep, \"~> 0.3.0\"}\n  #\n  # Or git/path repositories:\n  #\n  #   {:mydep, git: \"https://github.com/elixir-lang/mydep.git\", tag: \"0.1.0\"}\n  #\n  # Type `mix help deps` for more examples and options\n  defp deps do\n    []\n  end\nend\n\n```\n\n`def application do`\u306e\u3068\u3053\u308d\u306b\n\n```ex\nmod: {VercheckEx, []}\n```\n\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u8d77\u52d5\u3059\u3079\u304d\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u7b87\u6240\u3067\u3059\u3002\n\n## \u3053\u308c\u307e\u3067\u306e\u30a2\u30d7\u30ea\u3092\u66f8\u304d\u63db\u3048\u308b ##\n\n\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\u6700\u4f4e\u9650\u306e\u66f8\u304d\u63db\u3048\u3092\u3057\u307e\u3059\u3002\n\n* lib/vercheckex.ex\u3067\u306f\u4eca\u307e\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5916\u304b\u3089\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u95a2\u6570\u3092\n\n```ex\nVercheckEx.receiver(result_list, length(urls))\n```\n\n\u306e\u3088\u3046\u306b\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u3053\u308c\u3092Application\u30d3\u30d8\u30a4\u30d3\u30a2\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3067\u3042\u308b`main/1'\u306b\u6301\u3063\u3066\u304d\u307e\u3059\u2026\n\n```ex\ndef main(args) do\n   urls = [ #{ URL, type, index}\n      {\"https://github.com/jquery/jquery/releases\", :type1},\n# (\u9577\u3044\u306e\u3067\u7565)\n      {\"https://github.com/philss/floki/releases\", :type1},\n      {\"https://github.com/takscape/elixir-array/releases\", :type2},\n    ]\n\n    # Spawn processes upto the number of URLs\n    fetchers = for _ <- 0..length(urls), do: spawn_link fn -> VercheckEx.fetch_content() end\n\n    Enum.with_index(urls)|>Enum.each( fn(x) ->\n      {{u,t},i} = x\n      send Enum.at(fetchers,i), {self, u, t, i}\n    end)\n\n    result_list = []\n    VercheckEx.receiver(result_list, length(urls))\nend\n```\n\n\u3053\u308c\u3067\n\n```bash\n$ mix deps.get\n...\n$ iex -S mix\n```\n\n\u3067\u3001`iex`\u306e\u4e2d\u304b\u3089VercheckEx.main/1\u3092\u547c\u3073\u51fa\u3057\u3066\u3042\u3052\u308b\u3068\u30a2\u30d7\u30ea\u304c\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```iex\nCompiled lib/vercheckex.ex\nGenerated vercheckex app\nInteractive Elixir (1.0.5) - press Ctrl+C to exit (type h() ENTER for help)\niex(1)> VercheckEx.main []\njquery          3.0.0-alpha1    2015.07.14      <<<<< updated at 7 day(s) ago.\nangular         2.0.0-alpha.31  2015.07.15      <<<<< updated at 6 day(s) ago.\n...\nNim             v0.11.2         2015.05.05\nelixir          v1.0.5          2015.06.29\nfloki           v0.3.2          2015.06.28\nelixir-array    1.0.1           2014.09.23\n:ok\niex(2)>\n```\n\n* \u6b21\u306b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u8d77\u52d5\u3067\u304d\u308b\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308c\u308b\u3088\u3046\u306bmix.exs\u306b\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```ex\n#(\u524d\u7565)#\n  def project do\n    [app: :vercheckex,\n     version: \"0.0.1\",\n     elixir: \"~> 1.0\",\n     build_embedded: Mix.env == :prod,\n     start_permanent: Mix.env == :prod,\n     escript: escript, # <<<<<<<\u3053\u3053\u8ffd\u52a0\n     deps: deps]\n  end\n\n  def escript do               # <<<< escript\u8a18\u8ff0\u8ffd\u52a0\n    [main_module: VercheckEx]  # <<<<\n  end                          # <<<<\n#(\u5f8c\u7565)#\n```\n\n\u3053\u308c\u3067\n\n```bash\n$ mix escript.build\nGenerated escript vercheckex with MIX_ENV=dev\n```\n\n\u3059\u308b\u3068./vercheckex(\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb)\u304c\u3067\u304d\u307e\u3059\u3002\n\n## \u6b8b\u308b\u8ab2\u984c ##\n\n1. `mix`\u30b3\u30de\u30f3\u30c9\u306a\u3069\u304b\u3089main\u306e\u95a2\u6570\u3092\u81ea\u52d5\u7684\u306b\u547c\u3073\u51fa\u305b\u306a\u3044\u304b(\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u304c\u3067\u304d\u305f\u306e\u3067\u89e3\u6c7a\u306f\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u2026)\n2. \u672c\u984c\u306e\u30a8\u30e9\u30fc\u51e6\u7406\u3001\u300c\u6307\u5b9a\u306eURL\u304b\u3089\u7d50\u679c\u304c\u53d6\u308c\u305f\u30b5\u30a4\u30c8\u306b\u3064\u3044\u3066\u306f\u7d50\u679c\u3092\u8868\u793a\u3057\u3001\u30a2\u30af\u30bb\u30b9\u306b\u5931\u6557\u3059\u308b\u306a\u3069\u3057\u3066\u30a8\u30e9\u30fc\u306b\u306a\u3063\u305f\u5834\u5408\u306f\u305d\u306e\u65e8\u8868\u793a\u3057\u3066\u6b8b\u308a\u306e\u30b5\u30a4\u30c8\u306b\u3064\u3044\u3066\u306f\u5b9f\u884c\u3092\u7d9a\u3051\u308b\u300d\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\n-----\n\n", "tags": ["Elixir", "\u95a2\u6570\u578b\u8a00\u8a9e", "Web\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0"]}