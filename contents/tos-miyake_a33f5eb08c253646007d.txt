{"tags": ["newrelic", "Ruby"], "context": "\n\n\u305d\u3082\u305d\u3082\u6d88\u3055\u306a\u304f\u3066\u3044\u3044\n\u5225\u306b\u3058\u3083\u307e\u306b\u306a\u3089\u306a\u3044\u3057\u3001\u691c\u7d22\u306e\u3068\u304d\u306b\u5f15\u3063\u304b\u304b\u308b\u6570\u304c\u3059\u304f\u306a\u308b\u304f\u3089\u3044\u306e\u30e1\u30ea\u30c3\u30c8\u3057\u304b\u306a\u3044\u3067\u3059\u3002\n\u76e3\u67fb\u7684\u306a\u3082\u306e\u304c\u3042\u308b\u306a\u3089\u3001\u3080\u3057\u308d\u6d88\u3057\u3066\u306f\u3060\u3081\u304b\u3082\u3002\n\u5229\u7528\u3059\u308b\u6642\u306f\u81ea\u5df1\u8cac\u4efb\u3067\u3002\n\n\u7d4c\u7def\n\u6570\u5e74\u304f\u3089\u3044\u307e\u3048\u306b\u3001\u3053\u308c\u304d\u306b\u306a\u308b\u304b\u3089\u6d88\u3059\u65b9\u6cd5\u306a\u3044\u304b\u306a\uff1f\u3063\u3066\u8a00\u308f\u308c\u3066\u66f8\u6368\u3066\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u305f\u306e\u304c\u3001\nPC\u6574\u7406\u3057\u3066\u3044\u305f\u3089\u3067\u3066\u304d\u305f\u306e\u3067\u3001\u5171\u6709\u3057\u3068\u3053\u3046\u3068\u3002\nruby clean_newrelic.rb\u3067\u5b9f\u884c\u3067\u304d\u308b\u3002(\u81ea\u5df1\u8cac\u4efb\u3067\uff01\uff01)\n\nclean_newrelic.rb\nrequire 'net/http'\nrequire 'uri'\nrequire 'json'\n\nBASE_URI = 'https://api.newrelic.com/v2/servers.json'.freeze\nAPI_KEY = 'user_api_key'.freeze\n\n\ndef get_json(uri)\n  req = Net::HTTP::Get.new uri\n  req['X-Api-Key'] = API_KEY\n  response =\n    Net::HTTP.start(uri.host, uri.port, use_ssl: uri.scheme == 'https') do |http|\n      http.open_timeout = 5\n      http.read_timeout = 10\n      http.request req\n    end\n  json = response.body\n  JSON.parse(json)\nend\n\ndef delete_server(server_id)\n  %x(curl -s -X DELETE \"https://api.newrelic.com/v2/servers/#{server_id}.json\" -H \"X-Api-Key:#{API_KEY}\" -i)\nend\n\n# \u4e00\u56de\u306b\u53d6\u5f97\u3067\u304d\u308b\u30b5\u30fc\u30d0\u30fc\u60c5\u5831\u304c200\u3067,\n# limit\u3092\u5897\u3084\u3059\u3084\u308a\u65b9\u304c\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001loop\u3057\u3066\u307e\u3059\u3002\n# filter\u7684\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u7d5e\u3063\u3066\u3082\u52b9\u304b\u306a\u304b\u3063\u305f\u3002\n# \u53c2\u8003 https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/new-relic-rest-api-v2-getting-started\n2.times do\n  results = get_json(URI.parse(BASE_URI))\n  Array(results['servers']).each do |server|\n    if !server['reporting'] && server['id']\n      delete_server server['id']\n      print '.'\n    else\n      print 'F'\n    end\n  end\nend\n\n\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/31015/e5a9ef4f-03ab-69e2-3bff-2d441facac53.png)\n\n\n## \u305d\u3082\u305d\u3082\u6d88\u3055\u306a\u304f\u3066\u3044\u3044\n\u5225\u306b\u3058\u3083\u307e\u306b\u306a\u3089\u306a\u3044\u3057\u3001\u691c\u7d22\u306e\u3068\u304d\u306b\u5f15\u3063\u304b\u304b\u308b\u6570\u304c\u3059\u304f\u306a\u308b\u304f\u3089\u3044\u306e\u30e1\u30ea\u30c3\u30c8\u3057\u304b\u306a\u3044\u3067\u3059\u3002\n\u76e3\u67fb\u7684\u306a\u3082\u306e\u304c\u3042\u308b\u306a\u3089\u3001\u3080\u3057\u308d\u6d88\u3057\u3066\u306f\u3060\u3081\u304b\u3082\u3002\n\u5229\u7528\u3059\u308b\u6642\u306f\u81ea\u5df1\u8cac\u4efb\u3067\u3002\n\n## \u7d4c\u7def\n\u6570\u5e74\u304f\u3089\u3044\u307e\u3048\u306b\u3001\u3053\u308c\u304d\u306b\u306a\u308b\u304b\u3089\u6d88\u3059\u65b9\u6cd5\u306a\u3044\u304b\u306a\uff1f\u3063\u3066\u8a00\u308f\u308c\u3066\u66f8\u6368\u3066\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u305f\u306e\u304c\u3001\nPC\u6574\u7406\u3057\u3066\u3044\u305f\u3089\u3067\u3066\u304d\u305f\u306e\u3067\u3001\u5171\u6709\u3057\u3068\u3053\u3046\u3068\u3002\n\n`ruby clean_newrelic.rb`\u3067\u5b9f\u884c\u3067\u304d\u308b\u3002(\u81ea\u5df1\u8cac\u4efb\u3067\uff01\uff01)\n\n```clean_newrelic.rb\nrequire 'net/http'\nrequire 'uri'\nrequire 'json'\n\nBASE_URI = 'https://api.newrelic.com/v2/servers.json'.freeze\nAPI_KEY = 'user_api_key'.freeze\n\n\ndef get_json(uri)\n  req = Net::HTTP::Get.new uri\n  req['X-Api-Key'] = API_KEY\n  response =\n    Net::HTTP.start(uri.host, uri.port, use_ssl: uri.scheme == 'https') do |http|\n      http.open_timeout = 5\n      http.read_timeout = 10\n      http.request req\n    end\n  json = response.body\n  JSON.parse(json)\nend\n\ndef delete_server(server_id)\n  %x(curl -s -X DELETE \"https://api.newrelic.com/v2/servers/#{server_id}.json\" -H \"X-Api-Key:#{API_KEY}\" -i)\nend\n\n# \u4e00\u56de\u306b\u53d6\u5f97\u3067\u304d\u308b\u30b5\u30fc\u30d0\u30fc\u60c5\u5831\u304c200\u3067,\n# limit\u3092\u5897\u3084\u3059\u3084\u308a\u65b9\u304c\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001loop\u3057\u3066\u307e\u3059\u3002\n# filter\u7684\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u7d5e\u3063\u3066\u3082\u52b9\u304b\u306a\u304b\u3063\u305f\u3002\n# \u53c2\u8003 https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/new-relic-rest-api-v2-getting-started\n2.times do\n  results = get_json(URI.parse(BASE_URI))\n  Array(results['servers']).each do |server|\n    if !server['reporting'] && server['id']\n      delete_server server['id']\n      print '.'\n    else\n      print 'F'\n    end\n  end\nend\n\n```\n"}