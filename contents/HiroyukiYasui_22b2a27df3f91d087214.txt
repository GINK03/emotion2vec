{"context": "RoBoHoN\u306e\u958b\u767a\u30e1\u30e2\u3067\u3059\u3002\n\u4eca\u56deSlack\u306b\u6295\u7a3f\u3059\u308b\u6a5f\u80fd\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nRoBoHoN\u3068\u304a\u51fa\u304b\u3051\u306e\u969b\u306b\u304a\u5f79\u306b\u7acb\u3066\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\nSlack\u306eWebAPI\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002Slack\u306e\u30c1\u30fc\u30e0\u767b\u9332\u3001token\u306e\u53d6\u5f97\u65b9\u6cd5\u7b49\u306f\u7701\u7565\u3057\u307e\u3059\u3002\n\n\u53c2\u8003\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\nOkHttp\u8abf\u3079\u3066\u307f\u305f\nOkHttp 2.0 \u3092\u4f7f\u3063\u3066\u307f\u305f\nAndroid \u304b\u3089 Slack \u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\n\n\u74b0\u5883\u3067\u3059\n\u4f7f\u7528\u3057\u305f\u74b0\u5883\u3067\u3059\u3002\nMacOS Sierria 10.12.1\nAndroidStudio 2.1.2\nRoBoHoN SDK 1.0.1\n\uff08\u306a\u305c\u304bAndroidStudio2.2.2+SDK1.0.2\u306f\u30d7\u30e9\u30b0\u30a4\u30f3\u304b\u3089\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u304c\u3046\u307e\u304f\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f\uff09\n\nOkHttp\u4f7f\u3044\u307e\u3057\u305f\nSlack\u306eWebAPI\u3068\u306e\u901a\u4fe1\u306f\u3001OkHttp\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u30013.4.2\u3067\u3059\u3002\nhttp://square.github.io/okhttp/\nokhttp\u306e\u30b5\u30a4\u30c8\u3092\u3088\u304f\u8aad\u307e\u306a\u304b\u3063\u305f\u306e\u3067\uff08\u3061\u3083\u3093\u3068\u66f8\u3044\u3066\u3042\u308b\uff09\u30cf\u30de\u3063\u305f\u306e\u3067\u3059\u304c\u3001Okio\u3082\u5fc5\u8981\u3067\u3059\u3002\n\ngradle(app)\ndependencies {\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\uff1a\n    compile 'com.squareup.okhttp3:okhttp:3.4.2'\n    compile 'com.squareup.okio:okio:1.11.0'\n}\n\n\n\n\u304a\u307e\u3058\u306a\u3044\n\nAndroidManifast.xml\n<uses-permission android:name=\"android.permission.INTERNET\"/>\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u305d\u306e\uff11\ndoInBackground()\u3067Slack\u306eWebAPI\u3092post\u3057\u3001onPostExecute()\u3067\u7d50\u679c\u306eJSON\u3092\u89e3\u6790\u3057\u307e\u3059\u3002\nOK\u3068NG\u3067\u305d\u308c\u305e\u308c\u5225\u3005\u306eaccost\u3092\u547c\u3073\u51fa\u3057\u3066\u3001RoBoHoN\u304b\u3089\u767a\u8a71\u3057\u307e\u3059\u3002\n\nAsyncSlack.java\npackage jp.co.robohon.sample;\n\nimport android.os.AsyncTask;\nimport android.util.Log;\n\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.IOException;\n\nimport jp.co.sharp.android.voiceui.VoiceUIManager;\nimport jp.co.robohon.sample.customize.ScenarioDefinitions;\nimport jp.co.robohon.sample.util.VoiceUIManagerUtil;\nimport jp.co.robohon.sample.util.VoiceUIVariableUtil;\nimport okhttp3.FormBody;\nimport okhttp3.OkHttpClient;\nimport okhttp3.Request;\nimport okhttp3.RequestBody;\nimport okhttp3.Response;\n\n/**\n * Slack\u3078\u306e\u6295\u7a3f\n */\npublic class AsyncSlack extends AsyncTask<String, Void, String > {\n\n    public static final String TAG = AsyncSlack.class.getSimpleName();\n\n    /**\n     * Slack WebAPI Token\n     */\n    private static final String SLACK_TOKEN = \"\uff0a\u3053\u3053\u306b\u30c8\u30fc\u30af\u30f3\u3092\u66f8\u3044\u3066\u306d\uff0a\";\n    /**\n     * Slack URL\n     */\n    private static final String SLACK_URL = \"https://slack.com/api/chat.postMessage\";\n    /**\n     * \u97f3\u58f0UI\u5236\u5fa1.\n     */\n    private VoiceUIManager mainVoiceUIManager = null;\n\n    /**\n     * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n     */\n    public AsyncSlack(VoiceUIManager mVoiceUIManager) {\n        super();\n        mainVoiceUIManager = mVoiceUIManager;\n    }\n\n    /**\n     * \u540c\u4e00\u30b9\u30ec\u30c3\u30c9\u3067\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308b\u305f\u3081\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u3067Slack\u306b\u6295\u7a3f\u3059\u308b\n     */\n    @Override\n    protected String doInBackground(String... params) {\n        Log.v(TAG, \"doInBackground()\");\n\n        String message = params[0];     // Message\n        String username = params[1];    // Bot name\n        String channel = param[2];      // channel\n\n        String result = \"\";\n\n        FormBody.Builder formBodyBuilder = new FormBody.Builder()\n            .add(\"token\", SLACK_TOKEN)  // Token\n            .add(\"channel\",channel)     // channel\n            .add(\"text\", message)       // Message\n            .add(\"username\", username); // Bot name\n\n        RequestBody requestBody = formBodyBuilder.build();\n\n        Request request = new Request.Builder()\n                .url(SLACK_URL)\n                .post(requestBody)\n                .build();\n\n        OkHttpClient client = new OkHttpClient();\n\n        try{\n            Response response = client.newCall(request).execute();\n            result = response.body().string();\n        } catch (IOException ex){\n            Log.e(TAG, \"OkHttpClient [\"+ex.getMessage()+\"]\");\n        }\n\n        return result;\n    }\n\n    /**\n     * \u5b9f\u884c\u5f8c\u306e\u7d50\u679c\u89e3\u6790.\u30ed\u30dc\u30db\u30f3\u767a\u8a71.\n     */\n    @Override\n    protected void onPostExecute(String result) {\n        Log.v(TAG, \"onPostExecute()\");\n\n        boolean isOk = false;\n\n        try {\n            if (result.length() > 0) {\n                JSONObject json = new JSONObject(result);\n                String tagOk = json.getString(\"ok\");\n                if (tagOk.equals(\"true\")){\n                    isOk = true;\n                }else{\n                    Log.e(TAG, \"SlackResultError:\" + result);\n                }\n            }\n        } catch (JSONException ex){\n            Log.e(TAG, \"Failed JSONObject[\" + ex.getMessage() + \"]\");\n        }\n\n        // \u30ed\u30dc\u30db\u30f3\u767a\u8a71\n        if (isOk){\n            if (mainVoiceUIManager != null) {\n                VoiceUIVariableUtil.VoiceUIVariableListHelper helper = new VoiceUIVariableUtil.VoiceUIVariableListHelper().addAccost(ScenarioDefinitions.ACC_SLACK_SUCCESS);\n                VoiceUIManagerUtil.updateAppInfo(mainVoiceUIManager, helper.getVariableList(), true);\n            }\n        }else{\n            if (mainVoiceUIManager != null) {\n                VoiceUIVariableUtil.VoiceUIVariableListHelper helper = new VoiceUIVariableUtil.VoiceUIVariableListHelper().addAccost(ScenarioDefinitions.ACC_SLACK_ERROR);\n                VoiceUIManagerUtil.updateAppInfo(mainVoiceUIManager, helper.getVariableList(), true);\n            }\n        }\n\n    }\n}\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u305d\u306e\uff12\nRoBoHoN\u306e\u30b7\u30ca\u30ea\u30aa\u5074\u3067\u805e\u304d\u53d6\u308a\u3092\u884c\u3044\u3001\u30b3\u30de\u30f3\u30c9\u306b\u805e\u304d\u53d6\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30c7\u30fc\u30bf\u3068\u3057\u3066\u6e21\u3057\u3066\u3001\u305d\u306e\u307e\u307eSlack\u306b\u6295\u7a3f\u3057\u307e\u3059\u3002\uff08\u30b7\u30ca\u30ea\u30aa\u306f\u7701\u7565\u3057\u307e\u3059\uff09\n\nMainActivity.java\n    /**\n     * VoiceUIListener\u30af\u30e9\u30b9\u304b\u3089\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9f\u88c5\u3059\u308b.\n     */\n    @Override\n    public void onExecCommand(String command, List<VoiceUIVariable> variables) {\n        Log.v(TAG, \"onExecCommand() : \" + command);\n        switch (command) {\n            case ScenarioDefinitions.FUNC_END_APP:\n                finish();\n                break;\n            case ScenarioDefinitions.FUNC_POST_SLACK:\n                //\u30b7\u30ca\u30ea\u30aa\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\n                final String m_message = VoiceUIVariableUtil.getVariableData(variables, ScenarioDefinitions.KEY_M_MESSAGE);\n                // Slack\u306b\u6295\u7a3f\u3092\u884c\u3046\n                AsyncSlack task = new AsyncSlack(mVoiceUIManager);\n                String params[] = {m_message, mOwnerName, \"testchannel\"};\n                task.execute(params);\n                break;\n            :\n\n\nRoBoHoN\u306e\u958b\u767a\u30e1\u30e2\u3067\u3059\u3002\n\u4eca\u56deSlack\u306b\u6295\u7a3f\u3059\u308b\u6a5f\u80fd\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nRoBoHoN\u3068\u304a\u51fa\u304b\u3051\u306e\u969b\u306b\u304a\u5f79\u306b\u7acb\u3066\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n#\u306f\u3058\u3081\u306b\nSlack\u306eWebAPI\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002Slack\u306e\u30c1\u30fc\u30e0\u767b\u9332\u3001token\u306e\u53d6\u5f97\u65b9\u6cd5\u7b49\u306f\u7701\u7565\u3057\u307e\u3059\u3002\n\n#\u53c2\u8003\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n[OkHttp\u8abf\u3079\u3066\u307f\u305f](http://qiita.com/hymmr/items/5d87277b44892e7b690b)\n[OkHttp 2.0 \u3092\u4f7f\u3063\u3066\u307f\u305f](http://qiita.com/ryugoo/items/478ba23cda0f57bd21e8)\n[Android \u304b\u3089 Slack \u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1](http://haraki.jp/blog/blog.cgi?id=155)\n\n#\u74b0\u5883\u3067\u3059\n\u4f7f\u7528\u3057\u305f\u74b0\u5883\u3067\u3059\u3002\nMacOS Sierria 10.12.1\nAndroidStudio 2.1.2\nRoBoHoN SDK 1.0.1\n\uff08\u306a\u305c\u304bAndroidStudio2.2.2+SDK1.0.2\u306f\u30d7\u30e9\u30b0\u30a4\u30f3\u304b\u3089\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u304c\u3046\u307e\u304f\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f\uff09\n\n#OkHttp\u4f7f\u3044\u307e\u3057\u305f\nSlack\u306eWebAPI\u3068\u306e\u901a\u4fe1\u306f\u3001OkHttp\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u30013.4.2\u3067\u3059\u3002\nhttp://square.github.io/okhttp/\nokhttp\u306e\u30b5\u30a4\u30c8\u3092\u3088\u304f\u8aad\u307e\u306a\u304b\u3063\u305f\u306e\u3067\uff08[\u3061\u3083\u3093\u3068\u66f8\u3044\u3066\u3042\u308b](http://square.github.io/okhttp/#download)\uff09\u30cf\u30de\u3063\u305f\u306e\u3067\u3059\u304c\u3001[Okio](https://github.com/square/okio)\u3082\u5fc5\u8981\u3067\u3059\u3002\n\n```:gradle(app)\ndependencies {\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\uff1a\n    compile 'com.squareup.okhttp3:okhttp:3.4.2'\n    compile 'com.squareup.okio:okio:1.11.0'\n}\n```\n\n#\u304a\u307e\u3058\u306a\u3044\n```:AndroidManifast.xml\n<uses-permission android:name=\"android.permission.INTERNET\"/>\n```\n\n#\u30b5\u30f3\u30d7\u30eb\u305d\u306e\uff11\ndoInBackground()\u3067Slack\u306eWebAPI\u3092post\u3057\u3001onPostExecute()\u3067\u7d50\u679c\u306eJSON\u3092\u89e3\u6790\u3057\u307e\u3059\u3002\nOK\u3068NG\u3067\u305d\u308c\u305e\u308c\u5225\u3005\u306eaccost\u3092\u547c\u3073\u51fa\u3057\u3066\u3001RoBoHoN\u304b\u3089\u767a\u8a71\u3057\u307e\u3059\u3002\n\n```java:AsyncSlack.java\npackage jp.co.robohon.sample;\n\nimport android.os.AsyncTask;\nimport android.util.Log;\n\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.IOException;\n\nimport jp.co.sharp.android.voiceui.VoiceUIManager;\nimport jp.co.robohon.sample.customize.ScenarioDefinitions;\nimport jp.co.robohon.sample.util.VoiceUIManagerUtil;\nimport jp.co.robohon.sample.util.VoiceUIVariableUtil;\nimport okhttp3.FormBody;\nimport okhttp3.OkHttpClient;\nimport okhttp3.Request;\nimport okhttp3.RequestBody;\nimport okhttp3.Response;\n\n/**\n * Slack\u3078\u306e\u6295\u7a3f\n */\npublic class AsyncSlack extends AsyncTask<String, Void, String > {\n\n    public static final String TAG = AsyncSlack.class.getSimpleName();\n\n    /**\n     * Slack WebAPI Token\n     */\n    private static final String SLACK_TOKEN = \"\uff0a\u3053\u3053\u306b\u30c8\u30fc\u30af\u30f3\u3092\u66f8\u3044\u3066\u306d\uff0a\";\n    /**\n     * Slack URL\n     */\n    private static final String SLACK_URL = \"https://slack.com/api/chat.postMessage\";\n    /**\n     * \u97f3\u58f0UI\u5236\u5fa1.\n     */\n    private VoiceUIManager mainVoiceUIManager = null;\n\n    /**\n     * \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n     */\n    public AsyncSlack(VoiceUIManager mVoiceUIManager) {\n        super();\n        mainVoiceUIManager = mVoiceUIManager;\n    }\n\n    /**\n     * \u540c\u4e00\u30b9\u30ec\u30c3\u30c9\u3067\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308b\u305f\u3081\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u3067Slack\u306b\u6295\u7a3f\u3059\u308b\n     */\n    @Override\n    protected String doInBackground(String... params) {\n        Log.v(TAG, \"doInBackground()\");\n\n        String message = params[0];     // Message\n        String username = params[1];    // Bot name\n        String channel = param[2];      // channel\n\n        String result = \"\";\n\n        FormBody.Builder formBodyBuilder = new FormBody.Builder()\n            .add(\"token\", SLACK_TOKEN)  // Token\n            .add(\"channel\",channel)     // channel\n            .add(\"text\", message)       // Message\n            .add(\"username\", username); // Bot name\n\n        RequestBody requestBody = formBodyBuilder.build();\n\n        Request request = new Request.Builder()\n                .url(SLACK_URL)\n                .post(requestBody)\n                .build();\n\n        OkHttpClient client = new OkHttpClient();\n\n        try{\n            Response response = client.newCall(request).execute();\n            result = response.body().string();\n        } catch (IOException ex){\n            Log.e(TAG, \"OkHttpClient [\"+ex.getMessage()+\"]\");\n        }\n\n        return result;\n    }\n\n    /**\n     * \u5b9f\u884c\u5f8c\u306e\u7d50\u679c\u89e3\u6790.\u30ed\u30dc\u30db\u30f3\u767a\u8a71.\n     */\n    @Override\n    protected void onPostExecute(String result) {\n        Log.v(TAG, \"onPostExecute()\");\n\n        boolean isOk = false;\n\n        try {\n            if (result.length() > 0) {\n                JSONObject json = new JSONObject(result);\n                String tagOk = json.getString(\"ok\");\n                if (tagOk.equals(\"true\")){\n                    isOk = true;\n                }else{\n                    Log.e(TAG, \"SlackResultError:\" + result);\n                }\n            }\n        } catch (JSONException ex){\n            Log.e(TAG, \"Failed JSONObject[\" + ex.getMessage() + \"]\");\n        }\n\n        // \u30ed\u30dc\u30db\u30f3\u767a\u8a71\n        if (isOk){\n            if (mainVoiceUIManager != null) {\n                VoiceUIVariableUtil.VoiceUIVariableListHelper helper = new VoiceUIVariableUtil.VoiceUIVariableListHelper().addAccost(ScenarioDefinitions.ACC_SLACK_SUCCESS);\n                VoiceUIManagerUtil.updateAppInfo(mainVoiceUIManager, helper.getVariableList(), true);\n            }\n        }else{\n            if (mainVoiceUIManager != null) {\n                VoiceUIVariableUtil.VoiceUIVariableListHelper helper = new VoiceUIVariableUtil.VoiceUIVariableListHelper().addAccost(ScenarioDefinitions.ACC_SLACK_ERROR);\n                VoiceUIManagerUtil.updateAppInfo(mainVoiceUIManager, helper.getVariableList(), true);\n            }\n        }\n\n    }\n}\n```\n\n#\u30b5\u30f3\u30d7\u30eb\u305d\u306e\uff12\nRoBoHoN\u306e\u30b7\u30ca\u30ea\u30aa\u5074\u3067\u805e\u304d\u53d6\u308a\u3092\u884c\u3044\u3001\u30b3\u30de\u30f3\u30c9\u306b\u805e\u304d\u53d6\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30c7\u30fc\u30bf\u3068\u3057\u3066\u6e21\u3057\u3066\u3001\u305d\u306e\u307e\u307eSlack\u306b\u6295\u7a3f\u3057\u307e\u3059\u3002\uff08\u30b7\u30ca\u30ea\u30aa\u306f\u7701\u7565\u3057\u307e\u3059\uff09\n\n```java:MainActivity.java\n    /**\n     * VoiceUIListener\u30af\u30e9\u30b9\u304b\u3089\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9f\u88c5\u3059\u308b.\n     */\n    @Override\n    public void onExecCommand(String command, List<VoiceUIVariable> variables) {\n        Log.v(TAG, \"onExecCommand() : \" + command);\n        switch (command) {\n            case ScenarioDefinitions.FUNC_END_APP:\n                finish();\n                break;\n            case ScenarioDefinitions.FUNC_POST_SLACK:\n                //\u30b7\u30ca\u30ea\u30aa\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\n                final String m_message = VoiceUIVariableUtil.getVariableData(variables, ScenarioDefinitions.KEY_M_MESSAGE);\n                // Slack\u306b\u6295\u7a3f\u3092\u884c\u3046\n                AsyncSlack task = new AsyncSlack(mVoiceUIManager);\n                String params[] = {m_message, mOwnerName, \"testchannel\"};\n                task.execute(params);\n                break;\n            :\n```\n", "tags": ["RoBoHoN", "Slack", "OkHttp"]}