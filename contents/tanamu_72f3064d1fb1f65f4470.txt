{"context": "\n\n\u306f\u3058\u3081\u306b\n\u3000\u5148\u65e5\u3001\u63b2\u984c\u306e\u4f5c\u696d\u3092\u884c\u3063\u305f\u969b\u3001\u611a\u304b\u306b\u3082\u81ea\u524d\u3067\u7b97\u51fa\u3057\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3088\u304f\u3088\u304f\u8abf\u3079\u308b\u3068golang\u306f\u6a19\u6e96\u3067\u5909\u63db\u3067\u304d\u308b\u3058\u3083\u3042\u308a\u307e\u305b\u3093\u304b\uff01\n\u3000\u79c1\u306e\u3088\u3046\u306b\u30d0\u30ab\u306a\u771f\u4f3c\u3092\u3059\u308b\u4eba\u304c\u4e00\u4eba\u3067\u3082\u6e1b\u308a\u307e\u3059\u3088\u3046\u3001\u3053\u3053\u306b\u3084\u308a\u65b9\u3092\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059 (\u30a8\u30e9\u30fc\u51e6\u7406\u306f\u4e00\u5207\u884c\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044)\n\n\u74b0\u5883\nmacOS 10.12.3\u3001golang 1.8\n\n\u30bd\u30fc\u30b9\n\nmain.go\npackage main\n\nimport (\n    \"fmt\"\n    \"strconv\"\n    \"strings\"\n    \"unicode/utf16\"\n    \"unicode/utf8\"\n)\n\nfunc main() {\n    // \u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u6587\u5b57\u5217\u306e\u914d\u5217\u3002\u305d\u308c\u305e\u308c\u30019, \u00a2, \u3042, \ud840\udc0b, \ud83d\udea9(\u7d75\u6587\u5b57\u306e\u65d7)\n    codepoints := []string{\"39\", \"00A2\", \"3042\", \"2000B\", \"1F6A9\"}\n\n    // byte\u914d\u5217\u3092\u300116\u9032\u6570\u306e\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\n    bytesToStr := func(bytes []byte) string {\n        var str string\n        for _, b := range bytes {\n            str += fmt.Sprintf(\"%02X \", b)\n        }\n        return strings.TrimSuffix(str, \" \")\n    }\n\n    // 2byte\u914d\u5217\u3092\u300116\u9032\u6570\u306e\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\n    wordsToStr := func(words []uint16) string {\n        var str string\n        for _, w := range words {\n            str += fmt.Sprintf(\"%04X \", w)\n        }\n        return strings.TrimSuffix(str, \" \")\n    }\n\n    for _, code := range codepoints {\n        char, _ := strconv.ParseUint(code, 16, 32)\n        r := rune(char)\n\n        // codepoint -> utf8\u3078\n        bytes := make([]byte, 4)\n        size := utf8.EncodeRune(bytes, r)\n\n        // codepoint -> utf16\u3078\n        words := utf16.Encode([]rune{r})\n\n        // byte\u914d\u5217\u3092\u300116\u9032\u6570\u6587\u5b57\u5217\u5316\u3057\u3066\u8868\u793a\n        fmt.Println(\"char =\", string(r), \", utf8 =\", bytesToStr(bytes[:size]), \", utf16 =\", wordsToStr(words))\n    }\n}\n\n\n\n\n\u51fa\u529b\nchar = 9 , utf8 = 39 , utf16 = 0039\nchar = \u00a2 , utf8 = C2 A2 , utf16 = 00A2\nchar = \u3042 , utf8 = E3 81 82 , utf16 = 3042\nchar = \ud840\udc0b , utf8 = F0 A0 80 8B , utf16 = D840 DC0B\nchar = \ud83d\udea9 , utf8 = F0 9F 9A A9 , utf16 = D83D DEA9\n\n## \u306f\u3058\u3081\u306b\n\u3000\u5148\u65e5\u3001\u63b2\u984c\u306e\u4f5c\u696d\u3092\u884c\u3063\u305f\u969b\u3001\u611a\u304b\u306b\u3082\u81ea\u524d\u3067\u7b97\u51fa\u3057\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3088\u304f\u3088\u304f\u8abf\u3079\u308b\u3068golang\u306f\u6a19\u6e96\u3067\u5909\u63db\u3067\u304d\u308b\u3058\u3083\u3042\u308a\u307e\u305b\u3093\u304b\uff01\n\u3000\u79c1\u306e\u3088\u3046\u306b\u30d0\u30ab\u306a\u771f\u4f3c\u3092\u3059\u308b\u4eba\u304c\u4e00\u4eba\u3067\u3082\u6e1b\u308a\u307e\u3059\u3088\u3046\u3001\u3053\u3053\u306b\u3084\u308a\u65b9\u3092\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059 (\u30a8\u30e9\u30fc\u51e6\u7406\u306f\u4e00\u5207\u884c\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044)\n\n\n## \u74b0\u5883\nmacOS 10.12.3\u3001golang 1.8\n\n## \u30bd\u30fc\u30b9\n```go:main.go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n\t\"strings\"\n\t\"unicode/utf16\"\n\t\"unicode/utf8\"\n)\n\nfunc main() {\n\t// \u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u6587\u5b57\u5217\u306e\u914d\u5217\u3002\u305d\u308c\u305e\u308c\u30019, \u00a2, \u3042, \ud840\udc0b, \ud83d\udea9(\u7d75\u6587\u5b57\u306e\u65d7)\n\tcodepoints := []string{\"39\", \"00A2\", \"3042\", \"2000B\", \"1F6A9\"}\n\n\t// byte\u914d\u5217\u3092\u300116\u9032\u6570\u306e\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\n\tbytesToStr := func(bytes []byte) string {\n\t\tvar str string\n\t\tfor _, b := range bytes {\n\t\t\tstr += fmt.Sprintf(\"%02X \", b)\n\t\t}\n\t\treturn strings.TrimSuffix(str, \" \")\n\t}\n\n\t// 2byte\u914d\u5217\u3092\u300116\u9032\u6570\u306e\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\n\twordsToStr := func(words []uint16) string {\n\t\tvar str string\n\t\tfor _, w := range words {\n\t\t\tstr += fmt.Sprintf(\"%04X \", w)\n\t\t}\n\t\treturn strings.TrimSuffix(str, \" \")\n\t}\n\n\tfor _, code := range codepoints {\n\t\tchar, _ := strconv.ParseUint(code, 16, 32)\n\t\tr := rune(char)\n\n\t\t// codepoint -> utf8\u3078\n\t\tbytes := make([]byte, 4)\n\t\tsize := utf8.EncodeRune(bytes, r)\n\n\t\t// codepoint -> utf16\u3078\n\t\twords := utf16.Encode([]rune{r})\n\n\t\t// byte\u914d\u5217\u3092\u300116\u9032\u6570\u6587\u5b57\u5217\u5316\u3057\u3066\u8868\u793a\n\t\tfmt.Println(\"char =\", string(r), \", utf8 =\", bytesToStr(bytes[:size]), \", utf16 =\", wordsToStr(words))\n\t}\n}\n\n```\n\n## \u51fa\u529b\n```\nchar = 9 , utf8 = 39 , utf16 = 0039\nchar = \u00a2 , utf8 = C2 A2 , utf16 = 00A2\nchar = \u3042 , utf8 = E3 81 82 , utf16 = 3042\nchar = \ud840\udc0b , utf8 = F0 A0 80 8B , utf16 = D840 DC0B\nchar = \ud83d\udea9 , utf8 = F0 9F 9A A9 , utf16 = D83D DEA9\n```\n\n\n", "tags": ["Go", "golang", "unicode"]}