{"context": "\n\n\u306f\u3058\u3081\u306b\n\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089PowerPoint\u306e\u56f3\u5f62\u8ffd\u52a0\u3092\u3059\u308b\u969b\u3001\u65e5\u672c\u8a9e\u306e\u7c21\u6613\u306a\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u304c\u898b\u3064\u3051\u3089\u308c\u305a\u6642\u9593\u3092\u596a\u308f\u308c\u305f\u306e\u3067\u3001\u8ab0\u304b\u304c\u540c\u3058\u82e6\u52b4\u3092\u3057\u306a\u3044\u3088\u3046\u306b\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u3092\u8f09\u305b\u307e\u3059\u3002\u4f7f\u7528\u8a00\u8a9e\u306fC#\u3067\u3059\u3002Visual Studio 2015\u3092\u4f7f\u3044\u307e\u3059\u3002\n\nPowerPoint\u306e\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\uff1aOpenXML\nC#\u304b\u3089\u306eOffice\u306e\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u306b\u306f\u3001OpenXML SDK\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\nOpenXML\nOffice 2007\u4ee5\u964d\u306ePowerPoint\u30d5\u30a1\u30a4\u30eb\u306f\u3001OpenXML\u3068\u3044\u3046\u4ed5\u69d8\u306b\u6e96\u62e0\u3057\u3066\u3044\u307e\u3059\u3002OpenXML\u306e\u4e2d\u3067\u3082PowerPoint\u30d5\u30a1\u30a4\u30eb\u3092\u69cb\u6210\u3059\u308b\u8a00\u8a9e\u3092PresentationML\u3068\u8a00\u3044\u307e\u3059\u3002\u5b9f\u4f53\u306f\u3044\u304f\u3064\u304b\u306eXML\u30d5\u30a1\u30a4\u30eb\uff08\u3068\u3001\u753b\u50cf\u306a\u3069\u306e\u30d5\u30a1\u30a4\u30eb\uff09\u3092zip\u5727\u7e2e\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u8a66\u3057\u306bpptx\u30d5\u30a1\u30a4\u30eb\u3092zip\u89e3\u51cd\u3059\u308b\u3068\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u5bfe\u8c61\u3068\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\u4f8b\u3048\u3070PowerPoint\u306e\u30b9\u30e9\u30a4\u30c9\u30de\u30b9\u30bf\u30fc\uff09\u306b\u5bfe\u5fdc\u3057\u305fXML\u30d5\u30a1\u30a4\u30eb\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nOpenXML SDK\nOpenXML SDK\u306f\u3001OpenXML\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u66f8\u304d\u3092\u652f\u63f4\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\nOpenXML SDK\u3067\u306f\u3001XML\u306e\u5404\u8981\u7d20\u306b\u5bfe\u5fdc\u3057\u305f\u30af\u30e9\u30b9\u304c\u3042\u308a\u3001\u8981\u7d20\u306e\u5c5e\u6027\u306b\u5bfe\u5fdc\u3057\u305f\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u3042\u308a\u307e\u3059\u3002\n\u4f8b\u3048\u3070PowerPoint\u3067\u306f\u3001\u30b9\u30e9\u30a4\u30c9\u3092\u8868\u3059Slide\u30af\u30e9\u30b9\u3001\u56f3\u5f62\u3092\u8868\u3059Shape\u30af\u30e9\u30b9\u3001\u56f3\u5f62\u306e\u5916\u7dda\u3092\u8868\u3059Outline\u304c\u3042\u308a\u3001\u7dda\u5e45\u3092\u8868\u3059Outline\u306e\u30e1\u30f3\u30d0\u5909\u6570\u3067\u3042\u308bWidth\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001Microsoft \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30bb\u30f3\u30bf\u30fc\u3067\u306f\u3001OpenXMLSDKToolV25.msi\u3068\u3044\u3046\u30c4\u30fc\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\nOpenXML\u306e\u69cb\u9020\u3092\u30b0\u30e9\u30d5\u30a3\u30ab\u30eb\u306b\u8868\u793a\u3067\u304d\u308b\u3060\u3051\u3067\u306a\u304f\u3001XML\u306e\u4e0d\u6b63\u306a\u70b9\u3092\u691c\u51fa\u3057\u305f\u308a\uff08Validate\uff09\u30012 \u3064\u306e OpenXML \u30d5\u30a1\u30a4\u30eb\u3092\u6bd4\u8f03\uff08Compare Files\uff09\u3057\u305f\u308a\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u6e96\u5099\uff1aOpenXML SDK\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u6e96\u5099\u3068\u3057\u3066\u3001Nuget\u3067OpenXML SDK\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u3067\u3042\u308bnuget.org\u304b\u3089\u306f\u5f97\u3089\u308c\u306a\u3044\u306e\u3067\u3001\u307e\u305a\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u306e\u8a2d\u5b9a\nOpenXML SDK\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u884c\u3063\u3066\u3001Table 1: The latest builds are available via a MyGet feed\u304b\u3089\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u306eFeed URL\u3092\u5f97\u307e\u3059\u3002Nuget V3\u3067\u3042\u308c\u3070https://dotnet.myget.org/F/open-xml-sdk/api/v3/index.json \u306b\u306a\u308a\u307e\u3059\u3002\n\u6b21\u306e\u624b\u9806\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u3092Visual Studio Nuget\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306e\u8a2d\u5b9a\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nVisual Studio \u306e\u30c4\u30fc\u30eb -> Nuget\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc -> \u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u8a2d\u5b9a \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u958b\u304f\nNuget\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc/\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u306e\u9805\u76ee\u3092\u958b\u304d\u3001\u5229\u7528\u53ef\u80fd\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u306b\u9805\u76ee\u3092\u8ffd\u52a0\n\u9069\u5f53\u306a\u540d\u524d\uff08\u3053\u3053\u3067\u306fdotnetopenxml\uff09\u3092\u3064\u3051\u3001\u30bd\u30fc\u30b9\u306b\u5148\u307b\u3069\u306eURL\u3092\u8a18\u5165\u3057\u3066\u66f4\u65b0\u3002\n\n\u53c2\u8003\uff1amyget\u304b\u3089\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u53d6\u5f97\u3001github.com/OfficeDev/Open-XML-SDK\n\nOpenXML SDK\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306eNuget\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3092\u958b\u3044\u3066\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u3092\u5148\u307b\u3069\u52a0\u3048\u305f\u3082\u306e\uff08dotnetopenxml\uff09\u306b\u5909\u66f4\u3059\u308b\u3068\u3001DocumentFormat.OpenXML\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u691c\u51fa\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\n\u3053\u3053\u304b\u3089\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\u3059\u3067\u306b\u30b9\u30e9\u30a4\u30c9\u304c\u751f\u6210\u3055\u308c\u305fpptx\u30d5\u30a1\u30a4\u30eb\uff08hoge.pptx\uff09\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\nShapeTree\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u53d6\u5f97\n\u56f3\u5f62\u3092\u52a0\u3048\u305f\u308a\u3001\u671b\u307f\u306e\u56f3\u5f62\u3092\u5f97\u308b\u305f\u3081\u306b\u306f\u3001\u307e\u305ahoge.pptx\u306e\u9069\u5f53\u306a\u30b9\u30e9\u30a4\u30c9\u304b\u3089\u3001\u56f3\u5f62\u3092\u307e\u3068\u3081\u3066\u7ba1\u7406\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308bShapeTree\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u3053\u306e\u8fba\u308a\u306e\u3061\u3083\u3093\u3068\u3057\u305f\u8aac\u660e\u306f[\u65b9\u6cd5] \u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u5185\u306e\u56f3\u5f62\u306e\u5857\u308a\u3064\u3076\u3057\u306e\u8272\u3092\u5909\u66f4\u3059\u308b (Open XML SDK)\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\n\u3067\u306f\u3001\u30b3\u30fc\u30c9\u306e\u5168\u4f53\u50cf\u3092\u793a\u3057\u307e\u3059\u3002\u6d41\u308c\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nPresentationDocument.Open\u3092\u4f7f\u3063\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u540dfileName\u304b\u3089PresentationDocument\u3092\u53d6\u5f97\n\u6700\u521d\u306e\u30b9\u30e9\u30a4\u30c9\u306e\u30b9\u30e9\u30a4\u30c9\u756a\u53f7\uff08relId\uff09\u3092\u53d6\u5f97\nrelId\u304c\u793a\u3059\u30b9\u30e9\u30a4\u30c9\u306eShapeTree\u3092\u53d6\u5f97\uff08ppshapeTree\uff09\ngenerateShapes()\uff08\u5f8c\u8ff0\uff09\u3067ppshapeTree\u306b\u56f3\u5f62\u3092\u8ffd\u52a0\n\u5909\u66f4\u306e\u4fdd\u5b58\u3092\u3057\u3066\u7d42\u308f\u308a\n\nusing DocumentFormat.OpenXml.Presentation;\nusing DocumentFormat.OpenXml.Packaging;\nusing DocumentFormat.OpenXml;\nusing D = DocumentFormat.OpenXml.Drawing;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        ShapeTree ppshapeTree;\n        string fileName = \"hoge.pptx\";\n        PresentationDocument ppt = null;\n        using (ppt = PresentationDocument.Open(fileName, true))\n        {\n            Console.WriteLine(\"\\\"\" + fileName + \"\\\" has opened.\");\n\n            // Get the relationship ID of the first slide.\n            PresentationPart part = ppt.PresentationPart;\n            OpenXmlElementList slideIds = part.Presentation.SlideIdList.ChildElements;\n            string relId = (slideIds[0] as SlideId).RelationshipId;\n\n            // Get the slide part from the relationship ID.\n            SlidePart ppslide = (SlidePart)part.GetPartById(relId);\n            if (ppslide != null)\n            {\n                ppshapeTree = ppslide.Slide.CommonSlideData.ShapeTree;\n                generateShapes(ppshapeTree);\n\n                ppslide.Slide.Save();\n                Console.WriteLine(\"\\\"\" + fileName + \"\\\" has been changed.\");\n            }\n        }   \n    }\n}\n\n\n\u56f3\u5f62\u3092\u751f\u6210\u3057\u3066\u30b9\u30e9\u30a4\u30c9\u306b\u52a0\u3048\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u4f5c\u6210\ngenerateShapes()\u306e\u4e2d\u3067\u4f7f\u7528\u3059\u308b\u6c4e\u7528\u7684\u306a\u56f3\u5f62\u751f\u6210\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u540d\u524d\u306fAddShape_()\u3068\u3057\u307e\u3059\u3002\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8ffd\u52a0\u306f\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u89aa\u306eAppend\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u56f3\u5f62\u306e\u8ffd\u52a0\u3067\u3042\u308c\u3070\u3001Shape\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u3001ppshapeTree\u306b\u5bfe\u3057\u3066Append\u3059\u308c\u3070\u3044\u3044\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\nShape\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\nShape\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8ffd\u52a0\u3057\u305f\u3044\u56f3\u5f62\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001\u305d\u306e\u30e1\u30f3\u30d0\u5909\u6570\u3067\u6307\u5b9a\u3059\u308c\u3070\u3044\u3044\u3068\u3044\u3046\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u7279\u5fb4\u3092\u8868\u3059\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092Append\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nShape\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306f\u3001\u6b21\u306e4\u3064\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092Append\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nNonVisualShapeProperties\nShapeProperties\nShapeStyle\nTextBody\n\n\u3057\u305f\u304c\u3063\u3066\u3001AddShape_\u30e1\u30bd\u30c3\u30c9\u306f\u6b21\u306e\u624b\u9806\u3067\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\nShape\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9shape1\u3092\u751f\u6210\nNonVisualShapeProperties\u3092\u751f\u6210\u3057\u3066shape1\u306bAppend\nShapeProperties\u306b\u5f15\u6570\u3092\u6e21\u3057\u3066\u751f\u6210\u3057\u3066shape1\u306bAppend\nShapeStyle\u3092\u751f\u6210\u3057\u3066shape1\u306bAppend\nTextBody\u3092\u751f\u6210\u3057\u3066shape1\u306bAppend\nshape1\u3092\u5f15\u6570ShapeTree ppshapeTree\u306bAppend\n\nShape\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306bAppend\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306fmakeProperties\uff08\u5f8c\u8ff0\uff09\u3092\u306f\u3058\u3081\u3068\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3082\u307e\u305f\u3001\u305d\u306e\u5b50\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092Append\u3057\u3066\u3044\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u8db3\u3089\u306a\u3044\u3068\u30d5\u30a1\u30a4\u30eb\u304c\u958b\u3051\u306a\u304b\u3063\u305f\u308a\u3001PowerPoint\u3092\u958b\u3044\u305f\u3068\u304d\u306b\u6b63\u3057\u304f\u56f3\u5f62\u304c\u8868\u793a\u3067\u304d\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002\nShape\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8ffd\u52a0\u3057\u305f\u3044\u56f3\u5f62\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001ShapeProperties\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4ee5\u4e0b\u3092\u6307\u5b9a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u3060\u304b\u3089\u3001AddShape_\u30e1\u30bd\u30c3\u30c9\u306eppshapeTree\u4ee5\u5916\u306e\u5f15\u6570\u306fmakeShapeProperties()\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002makeShapeProperties()\u3060\u3051\u304c\u95a2\u5fc3\u4e8b\u306a\u306e\u3067\u3001\u4ee5\u964d\u3067makeShapeProperties()\u3068\u305d\u308c\u4ee5\u5916\u306f\u5206\u3051\u3066\u8868\u793a\u3057\u307e\u3059\u3002\n    static class AddShape\n    {\n        private const int cm2shapescale = 360000;\n        private const int degree2shapescale = 60000;\n\n        static void AddShape_(\n                ShapeTree ppshapeTree,\n                D.ShapeTypeValues shapeType = D.ShapeTypeValues.Rectangle,// Any of the built-in shapes (ellipse, rectangle, etc)\n                string fill_rgbColorHex = \"EEECE1\", // Hexadecimal RGB color code to fill the shape.\n                bool isnooutline = false,\n                D.SchemeColorValues outlineSchemeColor = D.SchemeColorValues.Text1,\n                float x = 1, // Represents the shape x position in 1 cm.\n                float y = 2, // Represents the shape y position in 2 cm.\n                float width = 2, // Shapw width in in 2 cm.\n                float height = 2, // Shapw height in in 2 cm.\n                bool horizontalFlip = false,\n                bool verticalFlip = false,\n                int angle = 0,   //degree\n                bool isdashline = false,\n                bool isTailEndArrow = false,\n                bool isHeadEndArrow = false\n            )\n        {\n            Shape shape1 = new Shape();\n            shape1.Append(makeNonVisualShapeProperties());\n            shape1.Append(makeShapeProperties(\n                shapeType: shapeType,\n                fill_rgbColorHex: fill_rgbColorHex,\n                isnooutline: isnooutline,\n                outlineSchemeColor: outlineSchemeColor,\n                x: getcm2shapescale(x),\n                y: getcm2shapescale(y),\n                width: getcm2shapescale(width),\n                height: getcm2shapescale(height),\n                horizontalFlip: horizontalFlip, verticalFlip: verticalFlip,\n                angle: getDegree2shapescale(angle),\n                isdashline: isdashline,\n                isTailEndArrow: isTailEndArrow,\n                isHeadEndArrow: isHeadEndArrow)\n                );\n            shape1.Append(makeShapeStyle());\n            shape1.Append(makeTextBody());\n            ppshapeTree.Append(shape1);\n\n        }\n\n        static long getcm2shapescale(float cm_val)\n        {\n            return (long)(cm_val * cm2shapescale);\n        }\n\n        static int getDegree2shapescale(int angle)\n        {\n            return angle * degree2shapescale;\n        }\n\n        .\n        .\n        .\n\n    }\n\nAddShape_\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306f\u6b21\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\n\n\n\n\nshapeType\n\n\n\n\n\n\u56f3\u306e\u5916\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\u7dda\uff08Line\uff09\u306b\u3057\u305f\u308a\u56db\u89d2\u5f62\uff08Rectangle\uff09\u306b\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002ShapeTypeValues\u306b\u6307\u5b9a\u3067\u304d\u308b\u56f3\u306e\u7a2e\u985e\u304c\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n\nfill_rgbColorHex\n\n\n\n\n\n\u56f3\u5f62\u306e\u5857\u308a\u3064\u3076\u3057\u306e\u8272\u306b\u306a\u308a\u307e\u3059\u300216\u9032\u6570RGB\u30ab\u30e9\u30fc\u30b3\u30fc\u30c9\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\n\n\n\n\noutlineSchemeColor\n\n\n\n\n\n\u56f3\u5f62\u306e\u5916\u7dda\u306e\u7dda\u7a2e\u30fb\u7dda\u8272\u306b\u306a\u308a\u307e\u3059\u3002SchemeColorValues\u306b\u6307\u5b9a\u3067\u304d\u308b\u5024\u304c\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n\nx\u3068y\n\n\n\n\n\n\u305d\u308c\u305e\u308c\u6a2a\u65b9\u5411\u3001\u7e26\u65b9\u5411\u306e\u5ea7\u6a19\u3092\u8868\u3057\u307e\u3059\u3002PowerPoint\u30b9\u30e9\u30a4\u30c9\u306e\u5de6\u4e0a\u304c(x=0, y=0)\u3067\u3059\u3002cm\u5358\u4f4d\u3067\u3059\u3002\n\n\n\n\n\u3042\u3068\u306f\u3060\u3044\u305f\u3044\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002getcm2shapescale()\u3084getDegree2shapescale()\u3067ShapeProperties\u4ee5\u4e0b\u3067\u306e\u5ea7\u6a19\u3084\u89d2\u5ea6\u306e\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\u3057\u3066\u304b\u3089makeShapeProperties\u306b\u5024\u3092\u6e21\u3057\u307e\u3059\u3002\n\nShapeProperties\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\nmakeShapeProperties()\u3067\u306f\u3001\u5f15\u6570\u3092\u8a72\u5f53\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30e1\u30f3\u30d0\u5909\u6570\u306b\u4ee3\u5165\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nstatic private ShapeProperties makeShapeProperties(\n            D.ShapeTypeValues shapeType = D.ShapeTypeValues.Rectangle,// Any of the built-in shapes (ellipse, rectangle, etc)\n            string fill_rgbColorHex = \"EEECE1\", // Hexadecimal RGB color code to fill the shape.\n            bool isnooutline = false,  //no outline\n            D.SchemeColorValues outlineSchemeColor = D.SchemeColorValues.Text1,\n            long x = 360000, // Represents the shape x position in 1/36000 cm.\n            long y = 720000, // Represents the shape y position in 1/36000 cm.\n            long width = 720000, // Shapw width in in 1/36000 cm.\n            long height = 720000, // Shapw height in in 1/36000 cm.\n            bool horizontalFlip = false,\n            bool verticalFlip = false,\n            int angle = 0,  //2700000 * 4 = 180 degree\n            bool isdashline = false,\n            bool isTailEndArrow = false,\n            bool isHeadEndArrow = false\n            )\n        {\n            ShapeProperties shapeProperties1 = new ShapeProperties();\n\n            D.Transform2D transform2D1 = new D.Transform2D();\n            D.Offset offset1 = new D.Offset() { X = x, Y = y };\n            D.Extents extents1 = new D.Extents() { Cx = width, Cy = height };\n\n            transform2D1.HorizontalFlip = horizontalFlip;\n            transform2D1.VerticalFlip = verticalFlip;\n            transform2D1.Rotation = angle;\n\n            transform2D1.Append(offset1);\n            transform2D1.Append(extents1);\n\n            D.PresetGeometry presetGeometry1 = new D.PresetGeometry() { Preset = shapeType };\n            D.AdjustValueList adjustValueList1 = new D.AdjustValueList();\n\n            presetGeometry1.Append(adjustValueList1);\n\n            D.SolidFill solidFill1 = new D.SolidFill();\n            D.RgbColorModelHex rgbColorModelHex1 = new D.RgbColorModelHex() { Val = fill_rgbColorHex };\n\n            solidFill1.Append(rgbColorModelHex1);\n\n            D.Outline outline1 = new D.Outline() { Width = 12700 };\n            if (isnooutline)\n            {\n                D.NoFill nofill = new D.NoFill();\n                outline1.Append(nofill);\n            }\n            else\n            {\n                D.SolidFill solidFill2 = new D.SolidFill();\n                D.SchemeColor schemeColor1 = new D.SchemeColor() { Val = outlineSchemeColor };\n                solidFill2.Append(schemeColor1);\n                outline1.Append(solidFill2);\n\n                //dash\n                if (isdashline)\n                {\n                    D.PresetDash presetDash = new D.PresetDash() { Val = D.PresetLineDashValues.Dash };\n                    outline1.Append(presetDash);\n                }\n\n                //arrow\n                if (isTailEndArrow)\n                {\n                    D.TailEnd tailend = new D.TailEnd() { Type = D.LineEndValues.Arrow };\n                    outline1.Append(tailend);\n                }\n                if (isHeadEndArrow)\n                {\n                    D.HeadEnd headend = new D.HeadEnd() { Type = D.LineEndValues.Arrow };\n                    outline1.Append(headend);\n                }\n            }\n\n            shapeProperties1.Append(transform2D1);\n            shapeProperties1.Append(presetGeometry1);\n            shapeProperties1.Append(solidFill1);\n            shapeProperties1.Append(outline1);\n            return shapeProperties1;\n        }\n\n\n\n\u305d\u306e\u4ed6\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\n\u304a\u307e\u3058\u306a\u3044\u3092\u66f8\u304d\u307e\u3059\u3002\u3053\u3053\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n        static private ShapeStyle makeShapeStyle()\n        {\n            ShapeStyle shapeStyle1 = new ShapeStyle();\n\n            D.LineReference lineReference1 = new D.LineReference() { Index = (UInt32Value)2U };\n\n            D.SchemeColor schemeColor2 = new D.SchemeColor() { Val = D.SchemeColorValues.Accent1 };\n            D.Shade shade1 = new D.Shade() { Val = 50000 };\n\n            schemeColor2.Append(shade1);\n\n            lineReference1.Append(schemeColor2);\n\n            D.FillReference fillReference1 = new D.FillReference() { Index = (UInt32Value)1U };\n            D.SchemeColor schemeColor3 = new D.SchemeColor() { Val = D.SchemeColorValues.Accent1 };\n\n            fillReference1.Append(schemeColor3);\n\n            D.EffectReference effectReference1 = new D.EffectReference() { Index = (UInt32Value)0U };\n            D.SchemeColor schemeColor4 = new D.SchemeColor() { Val = D.SchemeColorValues.Accent1 };\n\n            effectReference1.Append(schemeColor4);\n\n            D.FontReference fontReference1 = new D.FontReference() { Index = D.FontCollectionIndexValues.Minor };\n            D.SchemeColor schemeColor5 = new D.SchemeColor() { Val = D.SchemeColorValues.Light1 };\n\n            fontReference1.Append(schemeColor5);\n\n            shapeStyle1.Append(lineReference1);\n            shapeStyle1.Append(fillReference1);\n            shapeStyle1.Append(effectReference1);\n            shapeStyle1.Append(fontReference1);\n            return shapeStyle1;\n\n        }\n\n\n\n        static private TextBody makeTextBody()\n        {\n            TextBody textBody1 = new TextBody();\n            D.BodyProperties bodyProperties1 = new D.BodyProperties() { RightToLeftColumns = false, Anchor = D.TextAnchoringTypeValues.Center };\n            D.ListStyle listStyle1 = new D.ListStyle();\n\n            D.Paragraph paragraph1 = new D.Paragraph();\n            D.ParagraphProperties paragraphProperties1 = new D.ParagraphProperties() { Alignment = D.TextAlignmentTypeValues.Center };\n            D.EndParagraphRunProperties endParagraphRunProperties1 = new D.EndParagraphRunProperties() { Language = \"es-ES\" };\n\n            paragraph1.Append(paragraphProperties1);\n            paragraph1.Append(endParagraphRunProperties1);\n\n            textBody1.Append(bodyProperties1);\n            textBody1.Append(listStyle1);\n            textBody1.Append(paragraph1);\n            return textBody1;\n        }\n\n\n        static private NonVisualShapeProperties makeNonVisualShapeProperties()\n        {\n            NonVisualShapeProperties nonVisualShapeProperties1 = new NonVisualShapeProperties();\n            NonVisualDrawingProperties nonVisualDrawingProperties1 = new NonVisualDrawingProperties() { Id = (UInt32Value)4U, Name = \"1 Shape Name\" };\n            NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties1 = new NonVisualShapeDrawingProperties();\n            ApplicationNonVisualDrawingProperties applicationNonVisualDrawingProperties1 = new ApplicationNonVisualDrawingProperties();\n\n            nonVisualShapeProperties1.Append(nonVisualDrawingProperties1);\n            nonVisualShapeProperties1.Append(nonVisualShapeDrawingProperties1);\n            nonVisualShapeProperties1.Append(applicationNonVisualDrawingProperties1);\n            return nonVisualShapeProperties1;\n        }\n\n\n\n\u56f3\u5f62\u306e\u751f\u6210\u4f8b\ngenerateShapes()\u306e\u4e2d\u3067\u4ee5\u964d\u3092\u547c\u3073\u51fa\u305b\u3070\u3001\u8a72\u5f53\u306e\u56f3\u5f62\u304c\u751f\u6210\u3067\u304d\u307e\u3059\u3002\n\n\u7dda\n(x1,y1)\u304b\u3089(x2,y2)\u3078\u306e\u6ce2\u7dda\u77e2\u5370\n\nAddShape_(\n    ppShapeTree,\n    D.ShapeTypeValues.Line,\n    outlineSchemeColor: D.SchemeColorValues.Text1,\n    x: (x1),\n    y: (y1),\n    width: (x2 - x1),\n    height: (y2 - y1),\n    isdashline: true,\n    isTailEndArrow: true,\n    isHeadEndArrow: false\n    );\n\n\n\u56db\u89d2\u5f62\nAddShape_(\n    ppShapeTree,\n    D.ShapeTypeValues.Rectangle, \n    x: (x),\n    y: (y),\n    width: (w),\n    height: (h)\n    );\n\n\n\u56de\u8ee2\u3001\u53cd\u8ee2\u3059\u308b\nAddShape_\u306ehorizontalFlip\u306btrue\u3092\u6e21\u305b\u3070\u6c34\u5e73\u65b9\u5411\u306b\u53cd\u8ee2\u3002\nangle\u306b\u89d2\u5ea6\u3092\u6e21\u305b\u3070\u56de\u8ee2\u3002\n# \u306f\u3058\u3081\u306b\n\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089PowerPoint\u306e\u56f3\u5f62\u8ffd\u52a0\u3092\u3059\u308b\u969b\u3001\u65e5\u672c\u8a9e\u306e\u7c21\u6613\u306a\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u304c\u898b\u3064\u3051\u3089\u308c\u305a\u6642\u9593\u3092\u596a\u308f\u308c\u305f\u306e\u3067\u3001\u8ab0\u304b\u304c\u540c\u3058\u82e6\u52b4\u3092\u3057\u306a\u3044\u3088\u3046\u306b\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u3092\u8f09\u305b\u307e\u3059\u3002\u4f7f\u7528\u8a00\u8a9e\u306fC#\u3067\u3059\u3002Visual Studio 2015\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n# PowerPoint\u306e\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\uff1aOpenXML\nC#\u304b\u3089\u306eOffice\u306e\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u306b\u306f\u3001[OpenXML SDK](https://msdn.microsoft.com/ja-jp/library/office/bb448854.aspx)\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n### OpenXML\nOffice 2007\u4ee5\u964d\u306ePowerPoint\u30d5\u30a1\u30a4\u30eb\u306f\u3001[OpenXML](https://msdn.microsoft.com/ja-jp/library/office/gg278325.aspx)\u3068\u3044\u3046\u4ed5\u69d8\u306b\u6e96\u62e0\u3057\u3066\u3044\u307e\u3059\u3002OpenXML\u306e\u4e2d\u3067\u3082PowerPoint\u30d5\u30a1\u30a4\u30eb\u3092\u69cb\u6210\u3059\u308b\u8a00\u8a9e\u3092[PresentationML](https://msdn.microsoft.com/ja-jp/library/office/gg278318.aspx)\u3068\u8a00\u3044\u307e\u3059\u3002\u5b9f\u4f53\u306f\u3044\u304f\u3064\u304b\u306eXML\u30d5\u30a1\u30a4\u30eb\uff08\u3068\u3001\u753b\u50cf\u306a\u3069\u306e\u30d5\u30a1\u30a4\u30eb\uff09\u3092zip\u5727\u7e2e\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u8a66\u3057\u306bpptx\u30d5\u30a1\u30a4\u30eb\u3092zip\u89e3\u51cd\u3059\u308b\u3068\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u5bfe\u8c61\u3068\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\u4f8b\u3048\u3070PowerPoint\u306e\u30b9\u30e9\u30a4\u30c9\u30de\u30b9\u30bf\u30fc\uff09\u306b\u5bfe\u5fdc\u3057\u305fXML\u30d5\u30a1\u30a4\u30eb\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n### OpenXML SDK\nOpenXML SDK\u306f\u3001OpenXML\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u66f8\u304d\u3092\u652f\u63f4\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\nOpenXML SDK\u3067\u306f\u3001XML\u306e\u5404\u8981\u7d20\u306b\u5bfe\u5fdc\u3057\u305f\u30af\u30e9\u30b9\u304c\u3042\u308a\u3001\u8981\u7d20\u306e\u5c5e\u6027\u306b\u5bfe\u5fdc\u3057\u305f\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u3042\u308a\u307e\u3059\u3002\n\u4f8b\u3048\u3070PowerPoint\u3067\u306f\u3001\u30b9\u30e9\u30a4\u30c9\u3092\u8868\u3059Slide\u30af\u30e9\u30b9\u3001\u56f3\u5f62\u3092\u8868\u3059Shape\u30af\u30e9\u30b9\u3001\u56f3\u5f62\u306e\u5916\u7dda\u3092\u8868\u3059Outline\u304c\u3042\u308a\u3001\u7dda\u5e45\u3092\u8868\u3059Outline\u306e\u30e1\u30f3\u30d0\u5909\u6570\u3067\u3042\u308bWidth\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u307e\u305f\u3001Microsoft \u306e[\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u30bb\u30f3\u30bf\u30fc](https://www.microsoft.com/en-us/download/details.aspx?id=30425)\u3067\u306f\u3001OpenXMLSDKToolV25.msi\u3068\u3044\u3046\u30c4\u30fc\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\nOpenXML\u306e\u69cb\u9020\u3092\u30b0\u30e9\u30d5\u30a3\u30ab\u30eb\u306b\u8868\u793a\u3067\u304d\u308b\u3060\u3051\u3067\u306a\u304f\u3001XML\u306e\u4e0d\u6b63\u306a\u70b9\u3092\u691c\u51fa\u3057\u305f\u308a\uff08Validate\uff09\u30012 \u3064\u306e OpenXML \u30d5\u30a1\u30a4\u30eb\u3092\u6bd4\u8f03\uff08Compare Files\uff09\u3057\u305f\u308a\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n\n# \u6e96\u5099\uff1aOpenXML SDK\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u6e96\u5099\u3068\u3057\u3066\u3001[Nuget](https://www.nuget.org/)\u3067[OpenXML SDK\u306e\u30d1\u30c3\u30b1\u30fc\u30b8](https://github.com/OfficeDev/Open-XML-SDK)\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u3067\u3042\u308bnuget.org\u304b\u3089\u306f\u5f97\u3089\u308c\u306a\u3044\u306e\u3067\u3001\u307e\u305a\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\n### \u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u306e\u8a2d\u5b9a\n[OpenXML SDK\u306e\u30d1\u30c3\u30b1\u30fc\u30b8](https://github.com/OfficeDev/Open-XML-SDK)\u306b\u884c\u3063\u3066\u3001Table 1: The latest builds are available via a MyGet feed\u304b\u3089\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u306eFeed URL\u3092\u5f97\u307e\u3059\u3002Nuget V3\u3067\u3042\u308c\u3070https://dotnet.myget.org/F/open-xml-sdk/api/v3/index.json \u306b\u306a\u308a\u307e\u3059\u3002\n\n\u6b21\u306e\u624b\u9806\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u3092Visual Studio Nuget\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306e\u8a2d\u5b9a\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n- Visual Studio \u306e\u30c4\u30fc\u30eb -> Nuget\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc -> \u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u8a2d\u5b9a \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u958b\u304f\n- Nuget\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc/\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u306e\u9805\u76ee\u3092\u958b\u304d\u3001\u5229\u7528\u53ef\u80fd\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u306b\u9805\u76ee\u3092\u8ffd\u52a0\n- \u9069\u5f53\u306a\u540d\u524d\uff08\u3053\u3053\u3067\u306fdotnetopenxml\uff09\u3092\u3064\u3051\u3001\u30bd\u30fc\u30b9\u306b\u5148\u307b\u3069\u306eURL\u3092\u8a18\u5165\u3057\u3066\u66f4\u65b0\u3002\n\n\n\u53c2\u8003\uff1a[myget\u304b\u3089\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u53d6\u5f97] (https://ufcpp.wordpress.com/2015/04/12/myget-%E3%81%8B%E3%82%89%E3%81%AE%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E5%8F%96%E5%BE%97/)\u3001[github.com/OfficeDev/Open-XML-SDK] (https://github.com/OfficeDev/Open-XML-SDK)\n\n### OpenXML SDK\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306eNuget\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3092\u958b\u3044\u3066\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u3092\u5148\u307b\u3069\u52a0\u3048\u305f\u3082\u306e\uff08dotnetopenxml\uff09\u306b\u5909\u66f4\u3059\u308b\u3068\u3001DocumentFormat.OpenXML\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u691c\u51fa\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n\n# \u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\n\u3053\u3053\u304b\u3089\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\u3059\u3067\u306b\u30b9\u30e9\u30a4\u30c9\u304c\u751f\u6210\u3055\u308c\u305fpptx\u30d5\u30a1\u30a4\u30eb\uff08hoge.pptx\uff09\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\n\n## ShapeTree\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u53d6\u5f97\n\u56f3\u5f62\u3092\u52a0\u3048\u305f\u308a\u3001\u671b\u307f\u306e\u56f3\u5f62\u3092\u5f97\u308b\u305f\u3081\u306b\u306f\u3001\u307e\u305ahoge.pptx\u306e\u9069\u5f53\u306a\u30b9\u30e9\u30a4\u30c9\u304b\u3089\u3001\u56f3\u5f62\u3092\u307e\u3068\u3081\u3066\u7ba1\u7406\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308b[ShapeTree](https://msdn.microsoft.com/ja-jp/library/documentformat.openxml.presentation.shapetree(v=office.14).aspx)\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u3053\u306e\u8fba\u308a\u306e\u3061\u3083\u3093\u3068\u3057\u305f\u8aac\u660e\u306f[\\[\u65b9\u6cd5\\] \u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u5185\u306e\u56f3\u5f62\u306e\u5857\u308a\u3064\u3076\u3057\u306e\u8272\u3092\u5909\u66f4\u3059\u308b (Open XML SDK)]\n(https://msdn.microsoft.com/ja-jp/library/office/cc850847.aspx)\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\n\n\u3067\u306f\u3001\u30b3\u30fc\u30c9\u306e\u5168\u4f53\u50cf\u3092\u793a\u3057\u307e\u3059\u3002\u6d41\u308c\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n1. PresentationDocument.Open\u3092\u4f7f\u3063\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u540dfileName\u304b\u3089PresentationDocument\u3092\u53d6\u5f97\n1. \u6700\u521d\u306e\u30b9\u30e9\u30a4\u30c9\u306e\u30b9\u30e9\u30a4\u30c9\u756a\u53f7\uff08relId\uff09\u3092\u53d6\u5f97\n1. relId\u304c\u793a\u3059\u30b9\u30e9\u30a4\u30c9\u306eShapeTree\u3092\u53d6\u5f97\uff08ppshapeTree\uff09\n1. generateShapes()\uff08\u5f8c\u8ff0\uff09\u3067ppshapeTree\u306b\u56f3\u5f62\u3092\u8ffd\u52a0\n1. \u5909\u66f4\u306e\u4fdd\u5b58\u3092\u3057\u3066\u7d42\u308f\u308a\n\n\n```csharp\nusing DocumentFormat.OpenXml.Presentation;\nusing DocumentFormat.OpenXml.Packaging;\nusing DocumentFormat.OpenXml;\nusing D = DocumentFormat.OpenXml.Drawing;\n\nclass Program\n{\n\tstatic void Main(string[] args)\n\t{\n\t\tShapeTree ppshapeTree;\n\t\tstring fileName = \"hoge.pptx\";\n\t\tPresentationDocument ppt = null;\n\t\tusing (ppt = PresentationDocument.Open(fileName, true))\n\t\t{\n\t\t\tConsole.WriteLine(\"\\\"\" + fileName + \"\\\" has opened.\");\n\t\n\t\t\t// Get the relationship ID of the first slide.\n\t\t\tPresentationPart part = ppt.PresentationPart;\n\t\t\tOpenXmlElementList slideIds = part.Presentation.SlideIdList.ChildElements;\n\t\t\tstring relId = (slideIds[0] as SlideId).RelationshipId;\n\t\t\n\t\t\t// Get the slide part from the relationship ID.\n\t\t\tSlidePart ppslide = (SlidePart)part.GetPartById(relId);\n\t\t\tif (ppslide != null)\n\t\t\t{\n\t\t\t\tppshapeTree = ppslide.Slide.CommonSlideData.ShapeTree;\n\t\t\t\tgenerateShapes(ppshapeTree);\n\t\t\n\t\t\t\tppslide.Slide.Save();\n\t\t\t\tConsole.WriteLine(\"\\\"\" + fileName + \"\\\" has been changed.\");\n\t\t\t}\n\t\t}\t\n\t}\n}\n```\n\n## \u56f3\u5f62\u3092\u751f\u6210\u3057\u3066\u30b9\u30e9\u30a4\u30c9\u306b\u52a0\u3048\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u4f5c\u6210\ngenerateShapes()\u306e\u4e2d\u3067\u4f7f\u7528\u3059\u308b\u6c4e\u7528\u7684\u306a\u56f3\u5f62\u751f\u6210\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u540d\u524d\u306fAddShape_()\u3068\u3057\u307e\u3059\u3002\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8ffd\u52a0\u306f\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u89aa\u306eAppend\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u56f3\u5f62\u306e\u8ffd\u52a0\u3067\u3042\u308c\u3070\u3001Shape\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u3001ppshapeTree\u306b\u5bfe\u3057\u3066Append\u3059\u308c\u3070\u3044\u3044\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n### Shape\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\n\nShape\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8ffd\u52a0\u3057\u305f\u3044\u56f3\u5f62\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001\u305d\u306e\u30e1\u30f3\u30d0\u5909\u6570\u3067\u6307\u5b9a\u3059\u308c\u3070\u3044\u3044\u3068\u3044\u3046\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u7279\u5fb4\u3092\u8868\u3059\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092Append\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nShape\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306f\u3001\u6b21\u306e4\u3064\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092Append\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n- NonVisualShapeProperties\n- ShapeProperties\n- ShapeStyle\n- TextBody\n\n\u3057\u305f\u304c\u3063\u3066\u3001AddShape_\u30e1\u30bd\u30c3\u30c9\u306f\u6b21\u306e\u624b\u9806\u3067\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n1. Shape\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9shape1\u3092\u751f\u6210\n1. NonVisualShapeProperties\u3092\u751f\u6210\u3057\u3066shape1\u306bAppend\n1. ShapeProperties\u306b\u5f15\u6570\u3092\u6e21\u3057\u3066\u751f\u6210\u3057\u3066shape1\u306bAppend\n1. ShapeStyle\u3092\u751f\u6210\u3057\u3066shape1\u306bAppend\n1. TextBody\u3092\u751f\u6210\u3057\u3066shape1\u306bAppend\n1. shape1\u3092\u5f15\u6570ShapeTree ppshapeTree\u306bAppend\n\nShape\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306bAppend\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306fmakeProperties\uff08\u5f8c\u8ff0\uff09\u3092\u306f\u3058\u3081\u3068\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3082\u307e\u305f\u3001\u305d\u306e\u5b50\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092Append\u3057\u3066\u3044\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u8db3\u3089\u306a\u3044\u3068\u30d5\u30a1\u30a4\u30eb\u304c\u958b\u3051\u306a\u304b\u3063\u305f\u308a\u3001PowerPoint\u3092\u958b\u3044\u305f\u3068\u304d\u306b\u6b63\u3057\u304f\u56f3\u5f62\u304c\u8868\u793a\u3067\u304d\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\nShape\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8ffd\u52a0\u3057\u305f\u3044\u56f3\u5f62\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001ShapeProperties\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4ee5\u4e0b\u3092\u6307\u5b9a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u3060\u304b\u3089\u3001AddShape_\u30e1\u30bd\u30c3\u30c9\u306eppshapeTree\u4ee5\u5916\u306e\u5f15\u6570\u306fmakeShapeProperties()\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002makeShapeProperties()\u3060\u3051\u304c\u95a2\u5fc3\u4e8b\u306a\u306e\u3067\u3001\u4ee5\u964d\u3067makeShapeProperties()\u3068\u305d\u308c\u4ee5\u5916\u306f\u5206\u3051\u3066\u8868\u793a\u3057\u307e\u3059\u3002\n\n\n```csharp\n    static class AddShape\n    {\n        private const int cm2shapescale = 360000;\n        private const int degree2shapescale = 60000;\n\n        static void AddShape_(\n                ShapeTree ppshapeTree,\n                D.ShapeTypeValues shapeType = D.ShapeTypeValues.Rectangle,// Any of the built-in shapes (ellipse, rectangle, etc)\n                string fill_rgbColorHex = \"EEECE1\", // Hexadecimal RGB color code to fill the shape.\n                bool isnooutline = false,\n                D.SchemeColorValues outlineSchemeColor = D.SchemeColorValues.Text1,\n                float x = 1, // Represents the shape x position in 1 cm.\n                float y = 2, // Represents the shape y position in 2 cm.\n                float width = 2, // Shapw width in in 2 cm.\n                float height = 2, // Shapw height in in 2 cm.\n                bool horizontalFlip = false,\n                bool verticalFlip = false,\n                int angle = 0,   //degree\n                bool isdashline = false,\n                bool isTailEndArrow = false,\n                bool isHeadEndArrow = false\n            )\n        {\n            Shape shape1 = new Shape();\n            shape1.Append(makeNonVisualShapeProperties());\n            shape1.Append(makeShapeProperties(\n                shapeType: shapeType,\n                fill_rgbColorHex: fill_rgbColorHex,\n                isnooutline: isnooutline,\n                outlineSchemeColor: outlineSchemeColor,\n                x: getcm2shapescale(x),\n                y: getcm2shapescale(y),\n                width: getcm2shapescale(width),\n                height: getcm2shapescale(height),\n                horizontalFlip: horizontalFlip, verticalFlip: verticalFlip,\n                angle: getDegree2shapescale(angle),\n                isdashline: isdashline,\n                isTailEndArrow: isTailEndArrow,\n                isHeadEndArrow: isHeadEndArrow)\n                );\n            shape1.Append(makeShapeStyle());\n            shape1.Append(makeTextBody());\n            ppshapeTree.Append(shape1);\n\n        }\n\n        static long getcm2shapescale(float cm_val)\n        {\n            return (long)(cm_val * cm2shapescale);\n        }\n\n        static int getDegree2shapescale(int angle)\n        {\n            return angle * degree2shapescale;\n        }\n\n        .\n        .\n        .\n\n    }\n```\n\n\nAddShape_\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306f\u6b21\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\n<dl>\n<dt>\nshapeType\n<dt>\n<dd>\n\u56f3\u306e\u5916\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\u7dda\uff08Line\uff09\u306b\u3057\u305f\u308a\u56db\u89d2\u5f62\uff08Rectangle\uff09\u306b\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002[ShapeTypeValues](https://msdn.microsoft.com/ja-jp/library/documentformat.openxml.drawing.shapetypevalues(v=office.14).aspx)\u306b\u6307\u5b9a\u3067\u304d\u308b\u56f3\u306e\u7a2e\u985e\u304c\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n<dd>\n<dt>\nfill_rgbColorHex\n<dt>\n<dd>\n\u56f3\u5f62\u306e\u5857\u308a\u3064\u3076\u3057\u306e\u8272\u306b\u306a\u308a\u307e\u3059\u300216\u9032\u6570RGB\u30ab\u30e9\u30fc\u30b3\u30fc\u30c9\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n<dd>\n<dt>\noutlineSchemeColor\n<dt>\n<dd>\n\u56f3\u5f62\u306e\u5916\u7dda\u306e\u7dda\u7a2e\u30fb\u7dda\u8272\u306b\u306a\u308a\u307e\u3059\u3002[SchemeColorValues](https://msdn.microsoft.com/ja-jp/library/documentformat.openxml.drawing.schemecolorvalues(v=office.14).aspx)\u306b\u6307\u5b9a\u3067\u304d\u308b\u5024\u304c\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n<dd>\n<dt>\nx\u3068y\n<dt>\n<dd>\n\u305d\u308c\u305e\u308c\u6a2a\u65b9\u5411\u3001\u7e26\u65b9\u5411\u306e\u5ea7\u6a19\u3092\u8868\u3057\u307e\u3059\u3002PowerPoint\u30b9\u30e9\u30a4\u30c9\u306e\u5de6\u4e0a\u304c(x=0, y=0)\u3067\u3059\u3002cm\u5358\u4f4d\u3067\u3059\u3002\n<dd>\n</dl>\n\n\n\u3042\u3068\u306f\u3060\u3044\u305f\u3044\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002getcm2shapescale()\u3084getDegree2shapescale()\u3067ShapeProperties\u4ee5\u4e0b\u3067\u306e\u5ea7\u6a19\u3084\u89d2\u5ea6\u306e\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\u3057\u3066\u304b\u3089makeShapeProperties\u306b\u5024\u3092\u6e21\u3057\u307e\u3059\u3002\n\n\n\n### ShapeProperties\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\nmakeShapeProperties()\u3067\u306f\u3001\u5f15\u6570\u3092\u8a72\u5f53\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30e1\u30f3\u30d0\u5909\u6570\u306b\u4ee3\u5165\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n```charp\nstatic private ShapeProperties makeShapeProperties(\n            D.ShapeTypeValues shapeType = D.ShapeTypeValues.Rectangle,// Any of the built-in shapes (ellipse, rectangle, etc)\n            string fill_rgbColorHex = \"EEECE1\", // Hexadecimal RGB color code to fill the shape.\n            bool isnooutline = false,  //no outline\n            D.SchemeColorValues outlineSchemeColor = D.SchemeColorValues.Text1,\n            long x = 360000, // Represents the shape x position in 1/36000 cm.\n            long y = 720000, // Represents the shape y position in 1/36000 cm.\n            long width = 720000, // Shapw width in in 1/36000 cm.\n            long height = 720000, // Shapw height in in 1/36000 cm.\n            bool horizontalFlip = false,\n            bool verticalFlip = false,\n            int angle = 0,  //2700000 * 4 = 180 degree\n            bool isdashline = false,\n            bool isTailEndArrow = false,\n            bool isHeadEndArrow = false\n            )\n        {\n            ShapeProperties shapeProperties1 = new ShapeProperties();\n\n            D.Transform2D transform2D1 = new D.Transform2D();\n            D.Offset offset1 = new D.Offset() { X = x, Y = y };\n            D.Extents extents1 = new D.Extents() { Cx = width, Cy = height };\n\n            transform2D1.HorizontalFlip = horizontalFlip;\n            transform2D1.VerticalFlip = verticalFlip;\n            transform2D1.Rotation = angle;\n\n            transform2D1.Append(offset1);\n            transform2D1.Append(extents1);\n\n            D.PresetGeometry presetGeometry1 = new D.PresetGeometry() { Preset = shapeType };\n            D.AdjustValueList adjustValueList1 = new D.AdjustValueList();\n\n            presetGeometry1.Append(adjustValueList1);\n\n            D.SolidFill solidFill1 = new D.SolidFill();\n            D.RgbColorModelHex rgbColorModelHex1 = new D.RgbColorModelHex() { Val = fill_rgbColorHex };\n\n            solidFill1.Append(rgbColorModelHex1);\n\n            D.Outline outline1 = new D.Outline() { Width = 12700 };\n            if (isnooutline)\n            {\n                D.NoFill nofill = new D.NoFill();\n                outline1.Append(nofill);\n            }\n            else\n            {\n                D.SolidFill solidFill2 = new D.SolidFill();\n                D.SchemeColor schemeColor1 = new D.SchemeColor() { Val = outlineSchemeColor };\n                solidFill2.Append(schemeColor1);\n                outline1.Append(solidFill2);\n\n                //dash\n                if (isdashline)\n                {\n                    D.PresetDash presetDash = new D.PresetDash() { Val = D.PresetLineDashValues.Dash };\n                    outline1.Append(presetDash);\n                }\n\n                //arrow\n                if (isTailEndArrow)\n                {\n                    D.TailEnd tailend = new D.TailEnd() { Type = D.LineEndValues.Arrow };\n                    outline1.Append(tailend);\n                }\n                if (isHeadEndArrow)\n                {\n                    D.HeadEnd headend = new D.HeadEnd() { Type = D.LineEndValues.Arrow };\n                    outline1.Append(headend);\n                }\n            }\n\n            shapeProperties1.Append(transform2D1);\n            shapeProperties1.Append(presetGeometry1);\n            shapeProperties1.Append(solidFill1);\n            shapeProperties1.Append(outline1);\n            return shapeProperties1;\n        }\n\n```\n\n\n### \u305d\u306e\u4ed6\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\n\u304a\u307e\u3058\u306a\u3044\u3092\u66f8\u304d\u307e\u3059\u3002[\u3053\u3053](http://stackoverflow.com/questions/18810001/how-to-insert-a-shape-in-a-powerpoint-slide)\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n```charp\n        static private ShapeStyle makeShapeStyle()\n        {\n            ShapeStyle shapeStyle1 = new ShapeStyle();\n\n            D.LineReference lineReference1 = new D.LineReference() { Index = (UInt32Value)2U };\n\n            D.SchemeColor schemeColor2 = new D.SchemeColor() { Val = D.SchemeColorValues.Accent1 };\n            D.Shade shade1 = new D.Shade() { Val = 50000 };\n\n            schemeColor2.Append(shade1);\n\n            lineReference1.Append(schemeColor2);\n\n            D.FillReference fillReference1 = new D.FillReference() { Index = (UInt32Value)1U };\n            D.SchemeColor schemeColor3 = new D.SchemeColor() { Val = D.SchemeColorValues.Accent1 };\n\n            fillReference1.Append(schemeColor3);\n\n            D.EffectReference effectReference1 = new D.EffectReference() { Index = (UInt32Value)0U };\n            D.SchemeColor schemeColor4 = new D.SchemeColor() { Val = D.SchemeColorValues.Accent1 };\n\n            effectReference1.Append(schemeColor4);\n\n            D.FontReference fontReference1 = new D.FontReference() { Index = D.FontCollectionIndexValues.Minor };\n            D.SchemeColor schemeColor5 = new D.SchemeColor() { Val = D.SchemeColorValues.Light1 };\n\n            fontReference1.Append(schemeColor5);\n\n            shapeStyle1.Append(lineReference1);\n            shapeStyle1.Append(fillReference1);\n            shapeStyle1.Append(effectReference1);\n            shapeStyle1.Append(fontReference1);\n            return shapeStyle1;\n\n        }\n\n\n\n        static private TextBody makeTextBody()\n        {\n            TextBody textBody1 = new TextBody();\n            D.BodyProperties bodyProperties1 = new D.BodyProperties() { RightToLeftColumns = false, Anchor = D.TextAnchoringTypeValues.Center };\n            D.ListStyle listStyle1 = new D.ListStyle();\n\n            D.Paragraph paragraph1 = new D.Paragraph();\n            D.ParagraphProperties paragraphProperties1 = new D.ParagraphProperties() { Alignment = D.TextAlignmentTypeValues.Center };\n            D.EndParagraphRunProperties endParagraphRunProperties1 = new D.EndParagraphRunProperties() { Language = \"es-ES\" };\n\n            paragraph1.Append(paragraphProperties1);\n            paragraph1.Append(endParagraphRunProperties1);\n\n            textBody1.Append(bodyProperties1);\n            textBody1.Append(listStyle1);\n            textBody1.Append(paragraph1);\n            return textBody1;\n        }\n\n\n        static private NonVisualShapeProperties makeNonVisualShapeProperties()\n        {\n            NonVisualShapeProperties nonVisualShapeProperties1 = new NonVisualShapeProperties();\n            NonVisualDrawingProperties nonVisualDrawingProperties1 = new NonVisualDrawingProperties() { Id = (UInt32Value)4U, Name = \"1 Shape Name\" };\n            NonVisualShapeDrawingProperties nonVisualShapeDrawingProperties1 = new NonVisualShapeDrawingProperties();\n            ApplicationNonVisualDrawingProperties applicationNonVisualDrawingProperties1 = new ApplicationNonVisualDrawingProperties();\n\n            nonVisualShapeProperties1.Append(nonVisualDrawingProperties1);\n            nonVisualShapeProperties1.Append(nonVisualShapeDrawingProperties1);\n            nonVisualShapeProperties1.Append(applicationNonVisualDrawingProperties1);\n            return nonVisualShapeProperties1;\n        }\n\n```\n\n\n## \u56f3\u5f62\u306e\u751f\u6210\u4f8b\ngenerateShapes()\u306e\u4e2d\u3067\u4ee5\u964d\u3092\u547c\u3073\u51fa\u305b\u3070\u3001\u8a72\u5f53\u306e\u56f3\u5f62\u304c\u751f\u6210\u3067\u304d\u307e\u3059\u3002\n\n### \u7dda\n(x1,y1)\u304b\u3089(x2,y2)\u3078\u306e\u6ce2\u7dda\u77e2\u5370\n\n```csharp\n\nAddShape_(\n\tppShapeTree,\n\tD.ShapeTypeValues.Line,\n\toutlineSchemeColor: D.SchemeColorValues.Text1,\n\tx: (x1),\n\ty: (y1),\n\twidth: (x2 - x1),\n\theight: (y2 - y1),\n\tisdashline: true,\n\tisTailEndArrow: true,\n\tisHeadEndArrow: false\n\t);\n```\n\n\n\n\n### \u56db\u89d2\u5f62\n\n\n```csharp\nAddShape_(\n\tppShapeTree,\n\tD.ShapeTypeValues.Rectangle, \n\tx: (x),\n\ty: (y),\n\twidth: (w),\n\theight: (h)\n\t);\n```\n\n\n### \u56de\u8ee2\u3001\u53cd\u8ee2\u3059\u308b\nAddShape_\u306ehorizontalFlip\u306btrue\u3092\u6e21\u305b\u3070\u6c34\u5e73\u65b9\u5411\u306b\u53cd\u8ee2\u3002\nangle\u306b\u89d2\u5ea6\u3092\u6e21\u305b\u3070\u56de\u8ee2\u3002\n\n", "tags": ["C#", "PowerPoint", "OpenXML", "\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3", "\u56f3\u5f62"]}