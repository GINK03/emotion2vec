{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nForce Layout\u3092\u4f7f\u3044\u305f\u3044\u304c\u305f\u3081\u3060\u3051\u306b\u4f7f\u3044\u65b9\u3092\u899a\u3048\u308b\u3002\nD3\u3068\u306fData Driven Docuement\u3002\n\u30c7\u30fc\u30bf\u3092\u8996\u899a\u5316\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\n\u516c\u5f0f\u30b5\u30a4\u30c8\nAPI\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\n\n\n\u30b5\u30f3\u30d7\u30eb\n\nHello D3.js\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <p>Hello 1</p>\n    <p>Hello 2</p>\n    <p>Hello 3</p>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        d3.select('body').selectAll('p').text('hello from d3!');\n    </script>\n</body>\n</html>\n\n\n\u8981\u7d20\u306e\u53d6\u5f97\u3001\u30c6\u30ad\u30b9\u30c8/\u30b9\u30bf\u30a4\u30eb\u306e\u5909\u66f4\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <p>Hello 1</p>\n    <p>Hello 2</p>\n    <p>Hello 3</p>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var p = d3.select('body').selectAll('p')\n        p.text('hello from d3!');\n        p.style('font-size', '28px');\n\n        p.text('hello from d3!')\n            .style('font-size', '28px')\n            .style('font-weight', 'bold');\n\n        p.text('hello from d3!')\n            .style({\n                'font-size': '28px',\n                'font-weight': 'bold'\n            });\n\n        // alert(p.style('font-size'));\n\n        p.style('font-size', function() {\n            return Math.floor(Math.random() * 32) + 'px';\n        });\n    </script>\n</body>\n</html>\n\n\n\u8981\u7d20\u306e\u524a\u9664\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <p>Hello 1</p>\n    <p>Hello 2</p>\n    <p>Hello 3</p>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var obj = d3.select('body').append('p').text('hello 4');\n        obj.remove();\n    </script>\n</body>\n</html>\n\n\ndata\u3092\u4f7f\u3063\u3066\u307f\u308b\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <p>Hello 1</p>\n    <p>Hello 2</p>\n    <p>Hello 3</p>\n    <span></span>\n    <span></span>\n    <span></span>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var dataset = [12, 24, 36];\n        var p = d3.select('body').selectAll('p');\n        p.data(dataset).text(function(d) {\n            return d;\n        });\n        p.data(dataset).text(function(d, index) {\n            return index + \"\u756a\u76ee\u306f\" + d;\n        });\n\n        var dataset2 = [{name: 'aki', age: 1},{name: 'mii', age: 2},{name: 'akiton', age: 3}];\n        var span = d3.select('body').selectAll('span');\n        span.data(dataset2).text(function(d, index) {\n            return d.name + '(' + d.age + ')';\n        });\n    </script>\n</body>\n</html>\n\n\nupdate, enter, exit\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <p>Hello 1</p>\n    <p>Hello 2</p>\n    <p>Hello 3</p>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var dataset = [12, 24, 36, 48];\n        var p = d3.select('body').selectAll('p');\n\n        var update = p.data(dataset);\n        var enter = update.enter();\n        var exit = update.exit();\n\n        update.text(function(d, index) {\n            return \"update: \" + d;\n        });\n        enter.append('p').text(function(d, index) {\n            return \"enter: \" + d;\n        });\n        exit.style('color', 'red').remove();\n    </script>\n</body>\n</html>\n\n\n\u30c7\u30fc\u30bf\u304b\u3089\u56f3\u5f62\u3092\u63cf\u753b\u3059\u308b\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var dataset = [12, 24, 36, 48, 33];\n        var w = 640;\n        var h = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: w,\n            height: h\n        });\n\n        svg.selectAll('circle')\n            .data(dataset)\n            .enter()\n            .append('circle')\n            .attr({\n                cx: function(d, i) { return 50 + (i * 100); },\n                cy: h / 2,\n                r: function(d) { return d; },\n                fill: 'red'\n            });\n    </script>\n</body>\n</html>\n\n\n\u56f3\u5f62\u63cf\u753b\u6642\u306b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3055\u305b\u3066\u307f\u308b\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var dataset = [12, 24, 36, 48, 33];\n        var w = 640;\n        var h = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: w,\n            height: h\n        });\n\n        svg.selectAll('circle')\n            .data(dataset)\n            .enter()\n            .append('circle')\n            .attr({\n                cx: function(d, i) { return 50 + (i * 100); },\n                cy: h / 2,\n                r: 0,\n                fill: 'red'\n            })\n            .transition()\n            .delay(function(d, i) {\n                return 300 * i;\n            })\n            .duration(1000)\n            .ease('bounce')\n            .attr({\n                r: function(d) { return d; }\n            });\n    </script>\n</body>\n</html>\n\n\neach\u3092\u4f7f\u3063\u3066\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u5236\u5fa1\u3057\u3066\u307f\u308b\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var dataset = [12, 24, 36, 48, 33];\n        var w = 640;\n        var h = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: w,\n            height: h\n        });\n\n        svg.selectAll('circle')\n            .data(dataset)\n            .enter()\n            .append('circle')\n            .transition()\n            .delay(function(d, i) {\n                return 300 * i;\n            })\n            .duration(1000)\n            .ease('bounce')\n            .each('start', function() {\n                d3.select(this).attr({\n                    fill: 'green',\n                    r: 0,\n                    cy: h\n                });\n            })\n            .attr({\n                cx: function(d, i) { return 50 + (i * 100); },\n                cy: h / 2,\n                r: function(d) { return d; },\n                fill: 'red'\n            })\n            .each('end', function() {\n                d3.select(this)\n                    .transition()\n                    .duration(800)\n                    .attr({\n                        fill: 'pink',\n                        cy: 0,\n                        r: 0\n                    });\n            });\n    </script>\n</body>\n</html>\n\n\n\u30a4\u30d9\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var dataset = [12, 24, 36, 48, 33];\n        var w = 640;\n        var h = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: w,\n            height: h\n        });\n\n        svg.selectAll('circle')\n            .data(dataset)\n            .enter()\n            .append('circle')\n            .on('mouseover', function(d) {\n                d3.select(this).attr('fill', 'orange');\n            })\n            .on('mouseout', function(d) {\n                d3.select(this).attr('fill', 'red');\n            })\n            .on('mousedown', function(d) {\n                var rs = d3.select(this).attr('r');\n                alert(d + ':' + rs);\n            })\n            .attr({\n                cx: function(d, i) { return 50 + (i * 100); },\n                cy: h / 2,\n                r: function(d) { return d; },\n                fill: 'red'\n            })\n    </script>\n</body>\n</html>\n\n\n\u68d2\u30b0\u30e9\u30d5\u3092\u66f8\u304f\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n    <style>\n        .axis path, .axis line {\n            fill: none;\n            stroke: black;\n        }\n        .axis text {\n            font-size: 11px;\n        }\n    </style>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var dataset = [12, 24, 36, 48, 33];\n        var w = 640;\n        var h = 480;\n        var padding = 20;\n\n        var xScale = d3.scale.linear()\n            .domain([0, d3.max(dataset)])\n            .range([padding, w - padding])\n            .nice();\n\n        var svg = d3.select('body').append('svg').attr({\n            width: w,\n            height: h\n        });\n\n        var xAxis = d3.svg.axis()\n            .scale(xScale)\n            .orient('bottom');\n\n        svg.append('g')\n            .attr({\n                class: 'axis',\n                transform: 'translate(0, 180)'\n            })\n            .call(xAxis);\n\n        svg.selectAll('rect')\n            .data(dataset)\n            .enter()\n            .append('rect')\n            .attr({\n                x: padding,\n                y: function(d, i) { return i * 25; },\n                width: function(d) { return xScale(d) - padding; },\n                height: 20,\n                fill: 'red'\n            });\n    </script>\n</body>\n</html>\n\n\n\u5f8c\u304b\u3089\u30ce\u30fc\u30c9\u8ffd\u52a0\u3057\u3066\u52d5\u304b\u3057\u305f\u308a\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Force Layout</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var width = 640;\n        var height = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: width,\n            height: height\n        });\n\n        var data = {\n            nodes: [\n                { name: 'aki' },\n                { name: 'mii' },\n                { name: 'akiton' }\n            ],\n            links: [\n                { source: 0, target: 2 },\n                { source: 1, target: 2 }\n            ]\n        };\n\n        var force = d3.layout.force()\n            .nodes(data.nodes)\n            .links(data.links)\n            .size([width, height])\n            .gravity(0.1)\n            .charge([-100])\n            .friction(0.95)\n            .linkDistance([100])\n            .linkStrength(1);\n\n        // \u30ec\u30a4\u30a2\u30a6\u30c8\u8a08\u7b97\u958b\u59cb\n        force.start();\n        for (var i = 0; i < 10000; i++) {\n            force.tick();\n        }\n        force.stop();\n\n        // line\u3092\u751f\u6210\n        var line = svg.selectAll('line')\n            .data(data.links)\n            .enter()\n            .append('line')\n            .attr({\n                'stroke': 'black',\n                'x1': function(d, i) { return d.source.x; },\n                'y1': function(d, i) { return d.source.y; },\n                'x2': function(d, i) { return d.target.x; },\n                'y2': function(d, i) { return d.target.y; }\n            })\n            .style({\n            });\n\n        var circle = svg.selectAll('circle')\n            .data(data.nodes)\n            .enter()\n            .append('circle')\n            .attr({\n                'r': 8,\n                'fill': 'black',\n                'cx': function(d, i) { return d.x; },\n                'cy': function(d, i) { return d.y; }\n            })\n            .style({\n            });\n            // .call(force.drag);\n\n        var moveTarget = null;\n        circle\n            .on('mousedown', function(d, i) {\n                console.log(d.name + '(' + d.x + ',' + d.y + ')');\n                moveTarget = d;\n            })\n            .on('mouseup', function(d, i) {\n                moveTarget = null;\n            });\n\n        svg.on('mousemove', function(e) {\n            if (moveTarget != null) {\n                var mousePos = d3.mouse(this);\n                console.log('moveTarget = ' + moveTarget.name + ' (' + mousePos[0] + ',' + mousePos[1] + ')');\n                moveTarget.x = mousePos[0];\n                moveTarget.y = mousePos[1];\n\n                d3.selectAll('line')\n                    .attr({\n                        'x1': function(d) { return d.source.x; },\n                        'y1': function(d) { return d.source.y; },\n                        'x2': function(d) { return d.target.x; },\n                        'y2': function(d) { return d.target.y; }\n                    });\n                d3.selectAll('circle')\n                    .attr({\n                        'cx': function(d) { return d.x; },\n                        'cy': function(d) { return d.y; }\n                    });\n            }\n        });\n\n        svg.on('mousedown', function() {\n            if (moveTarget != null) return;\n            var newCircle = svg.append('circle');\n            var mousePos = d3.mouse(this);\n            var newData = {\n                name: 'super',\n                age: 10,\n                x: mousePos[0],\n                y: mousePos[1]\n            };\n            data.nodes.push(newData);\n            console.log('add circle: ' + newData.x + ',' + newData.y);\n            newCircle\n                .datum(newData)\n                .attr({\n                    'cx': function(d, i) { console.log(d);return d.x; },\n                    'cy': function(d, i) { return d.y; },\n                    'r': 10,\n                    'fill': 'red'\n                })\n                .on('mousedown', function(d) {\n                    moveTarget = d;\n                })\n                .on('mouseup', function(d) {\n                    moveTarget = null;\n                });\n        });\n\n        function randomMove() {\n            for (var i = 0; i < data.nodes.length; i++) {\n                var d = data.nodes[i];\n                d.x += Math.random() * 2 <= 1 ? Math.random()*10 : -Math.random()*10;\n                d.y += Math.random() * 2 <= 1 ? Math.random()*10 : -Math.random()*10;\n\n                d3.selectAll('line')\n                    .attr({\n                        'x1': function(d) { return d.source.x; },\n                        'y1': function(d) { return d.source.y; },\n                        'x2': function(d) { return d.target.x; },\n                        'y2': function(d) { return d.target.y; }\n                    });\n                d3.selectAll('circle')\n                    .attr({\n                        'cx': function(d) { return d.x; },\n                        'cy': function(d) { return d.y; }\n                    });\n            }\n        }\n    </script>\n    <input type=\"button\" value=\"randomMove\" onClick=\"randomMove()\"/>\n</body>\n</html>\n\n\n\u53c2\u8003\n\n\n## \u6982\u8981\n\nForce Layout\u3092\u4f7f\u3044\u305f\u3044\u304c\u305f\u3081\u3060\u3051\u306b\u4f7f\u3044\u65b9\u3092\u899a\u3048\u308b\u3002\nD3\u3068\u306fData Driven Docuement\u3002\n\u30c7\u30fc\u30bf\u3092\u8996\u899a\u5316\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\n- [\u516c\u5f0f\u30b5\u30a4\u30c8](http://d3js.org/)\n- [API\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](https://github.com/mbostock/d3/wiki/API-Reference)\n\n\n## \u30b5\u30f3\u30d7\u30eb\n\n### Hello D3.js\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <p>Hello 1</p>\n    <p>Hello 2</p>\n    <p>Hello 3</p>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        d3.select('body').selectAll('p').text('hello from d3!');\n    </script>\n</body>\n</html>\n```\n\n### \u8981\u7d20\u306e\u53d6\u5f97\u3001\u30c6\u30ad\u30b9\u30c8/\u30b9\u30bf\u30a4\u30eb\u306e\u5909\u66f4\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <p>Hello 1</p>\n    <p>Hello 2</p>\n    <p>Hello 3</p>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var p = d3.select('body').selectAll('p')\n        p.text('hello from d3!');\n        p.style('font-size', '28px');\n\n        p.text('hello from d3!')\n            .style('font-size', '28px')\n            .style('font-weight', 'bold');\n\n        p.text('hello from d3!')\n            .style({\n                'font-size': '28px',\n                'font-weight': 'bold'\n            });\n\n        // alert(p.style('font-size'));\n\n        p.style('font-size', function() {\n            return Math.floor(Math.random() * 32) + 'px';\n        });\n    </script>\n</body>\n</html>\n```\n\n### \u8981\u7d20\u306e\u524a\u9664\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <p>Hello 1</p>\n    <p>Hello 2</p>\n    <p>Hello 3</p>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var obj = d3.select('body').append('p').text('hello 4');\n        obj.remove();\n    </script>\n</body>\n</html>\n```\n\n### data\u3092\u4f7f\u3063\u3066\u307f\u308b\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <p>Hello 1</p>\n    <p>Hello 2</p>\n    <p>Hello 3</p>\n    <span></span>\n    <span></span>\n    <span></span>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var dataset = [12, 24, 36];\n        var p = d3.select('body').selectAll('p');\n        p.data(dataset).text(function(d) {\n            return d;\n        });\n        p.data(dataset).text(function(d, index) {\n            return index + \"\u756a\u76ee\u306f\" + d;\n        });\n\n        var dataset2 = [{name: 'aki', age: 1},{name: 'mii', age: 2},{name: 'akiton', age: 3}];\n        var span = d3.select('body').selectAll('span');\n        span.data(dataset2).text(function(d, index) {\n            return d.name + '(' + d.age + ')';\n        });\n    </script>\n</body>\n</html>\n```\n\n### update, enter, exit\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <p>Hello 1</p>\n    <p>Hello 2</p>\n    <p>Hello 3</p>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var dataset = [12, 24, 36, 48];\n        var p = d3.select('body').selectAll('p');\n\n        var update = p.data(dataset);\n        var enter = update.enter();\n        var exit = update.exit();\n\n        update.text(function(d, index) {\n            return \"update: \" + d;\n        });\n        enter.append('p').text(function(d, index) {\n            return \"enter: \" + d;\n        });\n        exit.style('color', 'red').remove();\n    </script>\n</body>\n</html>\n```\n\n### \u30c7\u30fc\u30bf\u304b\u3089\u56f3\u5f62\u3092\u63cf\u753b\u3059\u308b\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var dataset = [12, 24, 36, 48, 33];\n        var w = 640;\n        var h = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: w,\n            height: h\n        });\n\n        svg.selectAll('circle')\n            .data(dataset)\n            .enter()\n            .append('circle')\n            .attr({\n                cx: function(d, i) { return 50 + (i * 100); },\n                cy: h / 2,\n                r: function(d) { return d; },\n                fill: 'red'\n            });\n    </script>\n</body>\n</html>\n```\n\n### \u56f3\u5f62\u63cf\u753b\u6642\u306b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3055\u305b\u3066\u307f\u308b\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var dataset = [12, 24, 36, 48, 33];\n        var w = 640;\n        var h = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: w,\n            height: h\n        });\n\n        svg.selectAll('circle')\n            .data(dataset)\n            .enter()\n            .append('circle')\n            .attr({\n                cx: function(d, i) { return 50 + (i * 100); },\n                cy: h / 2,\n                r: 0,\n                fill: 'red'\n            })\n            .transition()\n            .delay(function(d, i) {\n                return 300 * i;\n            })\n            .duration(1000)\n            .ease('bounce')\n            .attr({\n                r: function(d) { return d; }\n            });\n    </script>\n</body>\n</html>\n```\n\n### each\u3092\u4f7f\u3063\u3066\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u5236\u5fa1\u3057\u3066\u307f\u308b\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var dataset = [12, 24, 36, 48, 33];\n        var w = 640;\n        var h = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: w,\n            height: h\n        });\n\n        svg.selectAll('circle')\n            .data(dataset)\n            .enter()\n            .append('circle')\n            .transition()\n            .delay(function(d, i) {\n                return 300 * i;\n            })\n            .duration(1000)\n            .ease('bounce')\n            .each('start', function() {\n                d3.select(this).attr({\n                    fill: 'green',\n                    r: 0,\n                    cy: h\n                });\n            })\n            .attr({\n                cx: function(d, i) { return 50 + (i * 100); },\n                cy: h / 2,\n                r: function(d) { return d; },\n                fill: 'red'\n            })\n            .each('end', function() {\n                d3.select(this)\n                    .transition()\n                    .duration(800)\n                    .attr({\n                        fill: 'pink',\n                        cy: 0,\n                        r: 0\n                    });\n            });\n    </script>\n</body>\n</html>\n```\n\n### \u30a4\u30d9\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var dataset = [12, 24, 36, 48, 33];\n        var w = 640;\n        var h = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: w,\n            height: h\n        });\n\n        svg.selectAll('circle')\n            .data(dataset)\n            .enter()\n            .append('circle')\n            .on('mouseover', function(d) {\n                d3.select(this).attr('fill', 'orange');\n            })\n            .on('mouseout', function(d) {\n                d3.select(this).attr('fill', 'red');\n            })\n            .on('mousedown', function(d) {\n                var rs = d3.select(this).attr('r');\n                alert(d + ':' + rs);\n            })\n            .attr({\n                cx: function(d, i) { return 50 + (i * 100); },\n                cy: h / 2,\n                r: function(d) { return d; },\n                fill: 'red'\n            })\n    </script>\n</body>\n</html>\n```\n\n### \u68d2\u30b0\u30e9\u30d5\u3092\u66f8\u304f\n\n```bash\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Test</title>\n    <style>\n        .axis path, .axis line {\n            fill: none;\n            stroke: black;\n        }\n        .axis text {\n            font-size: 11px;\n        }\n    </style>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var dataset = [12, 24, 36, 48, 33];\n        var w = 640;\n        var h = 480;\n        var padding = 20;\n\n        var xScale = d3.scale.linear()\n            .domain([0, d3.max(dataset)])\n            .range([padding, w - padding])\n            .nice();\n\n        var svg = d3.select('body').append('svg').attr({\n            width: w,\n            height: h\n        });\n\n        var xAxis = d3.svg.axis()\n            .scale(xScale)\n            .orient('bottom');\n\n        svg.append('g')\n            .attr({\n                class: 'axis',\n                transform: 'translate(0, 180)'\n            })\n            .call(xAxis);\n\n        svg.selectAll('rect')\n            .data(dataset)\n            .enter()\n            .append('rect')\n            .attr({\n                x: padding,\n                y: function(d, i) { return i * 25; },\n                width: function(d) { return xScale(d) - padding; },\n                height: 20,\n                fill: 'red'\n            });\n    </script>\n</body>\n</html>\n```\n\n### \u5f8c\u304b\u3089\u30ce\u30fc\u30c9\u8ffd\u52a0\u3057\u3066\u52d5\u304b\u3057\u305f\u308a\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Force Layout</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var width = 640;\n        var height = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: width,\n            height: height\n        });\n\n        var data = {\n            nodes: [\n                { name: 'aki' },\n                { name: 'mii' },\n                { name: 'akiton' }\n            ],\n            links: [\n                { source: 0, target: 2 },\n                { source: 1, target: 2 }\n            ]\n        };\n\n        var force = d3.layout.force()\n            .nodes(data.nodes)\n            .links(data.links)\n            .size([width, height])\n            .gravity(0.1)\n            .charge([-100])\n            .friction(0.95)\n            .linkDistance([100])\n            .linkStrength(1);\n\n        // \u30ec\u30a4\u30a2\u30a6\u30c8\u8a08\u7b97\u958b\u59cb\n        force.start();\n        for (var i = 0; i < 10000; i++) {\n            force.tick();\n        }\n        force.stop();\n\n        // line\u3092\u751f\u6210\n        var line = svg.selectAll('line')\n            .data(data.links)\n            .enter()\n            .append('line')\n            .attr({\n                'stroke': 'black',\n                'x1': function(d, i) { return d.source.x; },\n                'y1': function(d, i) { return d.source.y; },\n                'x2': function(d, i) { return d.target.x; },\n                'y2': function(d, i) { return d.target.y; }\n            })\n            .style({\n            });\n\n        var circle = svg.selectAll('circle')\n            .data(data.nodes)\n            .enter()\n            .append('circle')\n            .attr({\n                'r': 8,\n                'fill': 'black',\n                'cx': function(d, i) { return d.x; },\n                'cy': function(d, i) { return d.y; }\n            })\n            .style({\n            });\n            // .call(force.drag);\n\n        var moveTarget = null;\n        circle\n            .on('mousedown', function(d, i) {\n                console.log(d.name + '(' + d.x + ',' + d.y + ')');\n                moveTarget = d;\n            })\n            .on('mouseup', function(d, i) {\n                moveTarget = null;\n            });\n\n        svg.on('mousemove', function(e) {\n            if (moveTarget != null) {\n                var mousePos = d3.mouse(this);\n                console.log('moveTarget = ' + moveTarget.name + ' (' + mousePos[0] + ',' + mousePos[1] + ')');\n                moveTarget.x = mousePos[0];\n                moveTarget.y = mousePos[1];\n\n                d3.selectAll('line')\n                    .attr({\n                        'x1': function(d) { return d.source.x; },\n                        'y1': function(d) { return d.source.y; },\n                        'x2': function(d) { return d.target.x; },\n                        'y2': function(d) { return d.target.y; }\n                    });\n                d3.selectAll('circle')\n                    .attr({\n                        'cx': function(d) { return d.x; },\n                        'cy': function(d) { return d.y; }\n                    });\n            }\n        });\n\n        svg.on('mousedown', function() {\n            if (moveTarget != null) return;\n            var newCircle = svg.append('circle');\n            var mousePos = d3.mouse(this);\n            var newData = {\n                name: 'super',\n                age: 10,\n                x: mousePos[0],\n                y: mousePos[1]\n            };\n            data.nodes.push(newData);\n            console.log('add circle: ' + newData.x + ',' + newData.y);\n            newCircle\n                .datum(newData)\n                .attr({\n                    'cx': function(d, i) { console.log(d);return d.x; },\n                    'cy': function(d, i) { return d.y; },\n                    'r': 10,\n                    'fill': 'red'\n                })\n                .on('mousedown', function(d) {\n                    moveTarget = d;\n                })\n                .on('mouseup', function(d) {\n                    moveTarget = null;\n                });\n        });\n\n        function randomMove() {\n            for (var i = 0; i < data.nodes.length; i++) {\n                var d = data.nodes[i];\n                d.x += Math.random() * 2 <= 1 ? Math.random()*10 : -Math.random()*10;\n                d.y += Math.random() * 2 <= 1 ? Math.random()*10 : -Math.random()*10;\n\n                d3.selectAll('line')\n                    .attr({\n                        'x1': function(d) { return d.source.x; },\n                        'y1': function(d) { return d.source.y; },\n                        'x2': function(d) { return d.target.x; },\n                        'y2': function(d) { return d.target.y; }\n                    });\n                d3.selectAll('circle')\n                    .attr({\n                        'cx': function(d) { return d.x; },\n                        'cy': function(d) { return d.y; }\n                    });\n            }\n        }\n    </script>\n    <input type=\"button\" value=\"randomMove\" onClick=\"randomMove()\"/>\n</body>\n</html>\n```\n\n## \u53c2\u8003\n\n", "tags": ["d3.js"]}