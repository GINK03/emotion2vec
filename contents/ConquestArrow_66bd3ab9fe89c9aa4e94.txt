{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\nES2015(ES6)\u3067\u8ffd\u52a0\u3055\u308c\u305f\u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8(tagged template strings)\n\n\n\u53c2\u8003\uff1aJavaScript \u306e \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30ea\u30c6\u30e9\u30eb \u3092\u6975\u3081\u308b\uff01\n\n\n\n\u305d\u306e\u5b9f\u4f53\u306f\u7279\u6b8a\u306a\u95a2\u6570\n\n\n\u3071\u3063\u3068\u898b\u306f\u95a2\u6570\u306b\u898b\u3048\u306a\u3044\n\n\n\u305d\u308c\u3092\u3064\u304b\u3063\u3066\u201d\u306a\u3093\u3061\u3083\u3063\u3066\u201d\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u3084\u3063\u3066\u307f\u3088\u3046\u3068\u3044\u3046\u8a18\u4e8b\n\n\n\u203b\u6ce8\uff1a\u5b9f\u7528\u6027\u306f\u4f4e\u3044\u3067\u3059\n\n\n\n\n\u524d\u63d0\uff1a\u300c\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u300d\u3068\u306f\nJavaScript(ECMAScript)\u306b\u306f\u7121\u3044\u6982\u5ff5\u3002\n\n\u53c2\u8003: wikipedia\n\n\nJS\u3067\u8a00\u3048\u3070\u3001+\u3068\u304b-\u306e\u6f14\u7b97\u5b50(operator)\u306fnumber\uff08+\u306fstring\uff09\u306b\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u6240\u3092\u3001\u4f8b\u3048\u3070\u914d\u5217\u540c\u58eb\u306b\u3082\u5bfe\u5fdc\u3055\u305b\u3088\u3046\u3068\u3044\u3046\u3082\u306e\u3002\n\n\u5b9f\u969b\u306b\u306f\u201d1,2,34,5,6\u201d\u3068\u3044\u3046\u7d50\u679c\u306b\u306a\u308b\nvar sum = [1,2,3] + [4,5,6]\nconsole.log(sum)    //[5,7,9]\n\n\n\n\u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30ea\u30c6\u30e9\u30eb\n\u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30ea\u30c6\u30e9\u30eb\uff08tagged template strings\uff09\u3068\u306f\u3001\u901a\u5e38\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u6587\u5b57\u5217\u306e\u524d\u306b\u30bf\u30b0\u306e\u6587\u5b57\u5217\u304c\u3064\u3044\u305f\u3082\u306e\u3060\u3002\n\n\u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u4f8b\nvar str = tag`\u6587\u5b57\u5217${\u5909\u6570}`\n\n\n\u6587\u5b57\u5217\u3068\u547c\u3070\u308c\u3066\u3044\u308b\u304c\u3001\u5b9f\u306f\u4e2d\u8eab\u306f\u95a2\u6570\u3078\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u306b\u306a\u3063\u3066\u304a\u308a\u3001return\u3059\u308b\u4e2d\u8eab\u3082string\u3067\u3042\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002\n\n\u6587\u5b57\u6570(number)\u3092\u8fd4\u3059\u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\"use strict\";\n\nfunction count(a,...args){\n  let aSum = 0;\n  a.map((v,i,a)=> aSum += v.length)\n  let argSum = 0;\n  args.map((v,i,a)=>{argSum += v.length})\n  return aSum + argSum\n}\n\nvar str = \"\u304a\u7c73\"\nconsole.log( count`\u304a\u3044\u3057\u3044${str}` )  //6\n\n\n\n\u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u306a\u308b\u95a2\u6570\u306e\u7279\u5fb4\n\n\u7b2c\u4e00\u5f15\u6570\u306fraw\u3068\u3044\u3046\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3063\u305f\u7279\u5225\u306a\u914d\u5217\n\n\nTypeScript\u3067\u306fTemplateStringsArray\n\n\u305d\u308c\u81ea\u4f53\u3001\u304a\u3088\u3073raw\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u6587\u5b57\u5217\u306e\u914d\u5217\n\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u308b\n\n\n\u7b2c\u4e8c\u5f15\u6570\u4ee5\u964d\u306f\u3001${}\u3067\u62ec\u3063\u305f\u5909\u6570\u306e\u5024\u304c\u305d\u306e\u307e\u307e\u5165\u308b\n\n\n\u6587\u5b57\u5217\u306b\u9650\u3089\u306a\u3044\n\n\n\n\n\u30d1\u30c3\u3068\u898b\u3001\u95a2\u6570\u306b\u898b\u3048\u306a\u3044\u306e\u3067\u2026\n\u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u7279\u5fb4\u3092\u4f7f\u3063\u3066\u306a\u3093\u3061\u3083\u3063\u3066\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u3084\u3063\u3066\u307f\u308b\u3002\n\n\u914d\u5217\u540c\u58eb\u306e\u52a0\u7b97\n\nvar sum = A`${[1,2,3]} + ${[4,5,6]}`\n\nconsole.log(sum) //[5,7,9]\n\n\n\n\nA\u306e\u4e2d\u8eab\n\nfunction A(arr, a1, a2){\n  const op = arr[1].replace(/[\\s]/g,\"\");\n  switch(op){\n    case \"+\":\n      const longer = (a1.length >= a2.length)? a1 : a2\n      const shorter = (a1.length < a2.length)? a1 : a2\n      const l = shorter.length\n      for(let i=0;i<l;i++){\n        longer[i] = longer[i] + shorter[i]\n      }\n      return longer;\n      break;\n    default:\n      throw Error();\n  }\n}\n\n\n\n\n\u5236\u9650\n\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u52a0\u7b97\u306e\u307f\n\u9805\u76ee\u304c\uff12\u3064\u307e\u3067\n\n\n\u305f\u3060\u3057\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u4e8b\u306f\u3067\u304d\u308b:\n\n\n\nA`${[0,1]} + ${ A`${[1,1]} + ${[5,5]}` }`\n\n\n\u8a18\u53f7\u304c\u591a\u3044\n\n\n\nA([0,1,2],\"+\",[3,4,5])\u306e\u65b9\u304c\u898b\u3084\u3059\u3044\uff01\uff1f\n\n\n\n\n\u4e00\u5fdc\u30e1\u30ea\u30c3\u30c8\n\n\u6587\u5b57\u5217\u306a\u306e\u3067\u3069\u3093\u306a\u6f14\u7b97\u5b50\u3067\u3082\u81ea\u7531\u306b\u5b9a\u7fa9\u3067\u304d\u308b\n\n\n\n|>\u3068\u304b\n\n\nTypeScript\u306e\u5834\u5408\u3001valueOf\u3092\u4f7f\u3063\u305f\u7591\u4f3c\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308b\u304c\u3001\u3053\u306e\u65b9\u6cd5\u3060\u3068\u306a\u3089\u306a\u3044\n\n\n\nvalueOf\u306e\u8fd4\u3059\u578b\u60c5\u5831\u3092\u53c2\u7167\u3057\u306a\u3044\u305f\u3081\n\u53c2\u8003\uff1aSIMD\u578b\u306e\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u4f8b1\n\n\n\n\n\n\u88dc\u8db3\n\nvalueOf\u3092\u4f7f\u3063\u305f\u7591\u4f3c\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\n\n\u3088\u308a\u5b9f\u7528\u7684\u306a\u65b9\nFake operator overloading for JavaScript\n\n\nReflect.defineOperator\n\n\n\u63d0\u6848\n\u307e\u3060ES.next\u306estage0\u306b\u3059\u3089\u306a\u3063\u3066\u306a\u3044\n\n\n\n\n\n\u30a8\u30e9\u30fc\u306fSIMD\u578b\u306e\u5b9a\u7fa9\u304c\u7121\u3044\u304b\u3089\u3002simd.d.ts\u3092DL\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u00a0\u21a9\n\n\n\n# \u306f\u3058\u3081\u306b\n\n * ES2015(ES6)\u3067\u8ffd\u52a0\u3055\u308c\u305f\u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8(tagged template strings)\n  * \u53c2\u8003\uff1a[JavaScript \u306e \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30ea\u30c6\u30e9\u30eb \u3092\u6975\u3081\u308b\uff01](http://qiita.com/kura07/items/c9fa858870ad56dfec12)\n * \u305d\u306e\u5b9f\u4f53\u306f\u7279\u6b8a\u306a\u95a2\u6570\n  * \u3071\u3063\u3068\u898b\u306f\u95a2\u6570\u306b\u898b\u3048\u306a\u3044\n * \u305d\u308c\u3092\u3064\u304b\u3063\u3066\u201d\u306a\u3093\u3061\u3083\u3063\u3066\u201d\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u3084\u3063\u3066\u307f\u3088\u3046\u3068\u3044\u3046\u8a18\u4e8b\n  * __\u203b\u6ce8\uff1a\u5b9f\u7528\u6027\u306f\u4f4e\u3044\u3067\u3059__\n\n# \u524d\u63d0\uff1a\u300c\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u300d\u3068\u306f\n\nJavaScript(ECMAScript)\u306b\u306f\u7121\u3044\u6982\u5ff5\u3002\n\n * \u53c2\u8003: [wikipedia](https://ja.wikipedia.org/wiki/%E5%A4%9A%E9%87%8D%E5%AE%9A%E7%BE%A9#.E6.BC.94.E7.AE.97.E5.AD.90.E3.81.AE.E5.A4.9A.E9.87.8D.E5.AE.9A.E7.BE.A9)\n\nJS\u3067\u8a00\u3048\u3070\u3001`+`\u3068\u304b`-`\u306e\u6f14\u7b97\u5b50(operator)\u306f`number`\uff08`+`\u306f`string`\uff09\u306b\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u6240\u3092\u3001\u4f8b\u3048\u3070\u914d\u5217\u540c\u58eb\u306b\u3082\u5bfe\u5fdc\u3055\u305b\u3088\u3046\u3068\u3044\u3046\u3082\u306e\u3002\n\n```js:\u5b9f\u969b\u306b\u306f\u201d1,2,34,5,6\u201d\u3068\u3044\u3046\u7d50\u679c\u306b\u306a\u308b\nvar sum = [1,2,3] + [4,5,6]\nconsole.log(sum)\t//[5,7,9]\n```\n\n# \u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30ea\u30c6\u30e9\u30eb\n\n\u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30ea\u30c6\u30e9\u30eb\uff08tagged template strings\uff09\u3068\u306f\u3001\u901a\u5e38\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u6587\u5b57\u5217\u306e\u524d\u306b\u30bf\u30b0\u306e\u6587\u5b57\u5217\u304c\u3064\u3044\u305f\u3082\u306e\u3060\u3002\n\n```js:\u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u4f8b\nvar str = tag`\u6587\u5b57\u5217${\u5909\u6570}`\n```\n\n\u6587\u5b57\u5217\u3068\u547c\u3070\u308c\u3066\u3044\u308b\u304c\u3001\u5b9f\u306f\u4e2d\u8eab\u306f\u95a2\u6570\u3078\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u306b\u306a\u3063\u3066\u304a\u308a\u3001return\u3059\u308b\u4e2d\u8eab\u3082`string`\u3067\u3042\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002\n\n\n```js:\u6587\u5b57\u6570(number)\u3092\u8fd4\u3059\u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\"use strict\";\n\nfunction count(a,...args){\n  let aSum = 0;\n  a.map((v,i,a)=> aSum += v.length)\n  let argSum = 0;\n  args.map((v,i,a)=>{argSum += v.length})\n  return aSum + argSum\n}\n\nvar str = \"\u304a\u7c73\"\nconsole.log( count`\u304a\u3044\u3057\u3044${str}` )  //6\n```\n\n## \u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u306a\u308b\u95a2\u6570\u306e\u7279\u5fb4\n\n * \u7b2c\u4e00\u5f15\u6570\u306f`raw`\u3068\u3044\u3046\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3063\u305f\u7279\u5225\u306a\u914d\u5217\n  * TypeScript\u3067\u306f`TemplateStringsArray`\n  * \u305d\u308c\u81ea\u4f53\u3001\u304a\u3088\u3073`raw`\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u6587\u5b57\u5217\u306e\u914d\u5217\n  * \u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u308b\n * \u7b2c\u4e8c\u5f15\u6570\u4ee5\u964d\u306f\u3001`${}`\u3067\u62ec\u3063\u305f\u5909\u6570\u306e\u5024\u304c\u305d\u306e\u307e\u307e\u5165\u308b\n  * \u6587\u5b57\u5217\u306b\u9650\u3089\u306a\u3044\n\n# \u30d1\u30c3\u3068\u898b\u3001\u95a2\u6570\u306b\u898b\u3048\u306a\u3044\u306e\u3067\u2026\n\n\u30bf\u30b0\u4ed8\u304d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u7279\u5fb4\u3092\u4f7f\u3063\u3066\u306a\u3093\u3061\u3083\u3063\u3066\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u3084\u3063\u3066\u307f\u308b\u3002\n\n```js:\u914d\u5217\u540c\u58eb\u306e\u52a0\u7b97\n\nvar sum = A`${[1,2,3]} + ${[4,5,6]}`\n\nconsole.log(sum) //[5,7,9]\n\n```\n\n```js:A\u306e\u4e2d\u8eab\n\nfunction A(arr, a1, a2){\n  const op = arr[1].replace(/[\\s]/g,\"\");\n  switch(op){\n    case \"+\":\n      const longer = (a1.length >= a2.length)? a1 : a2\n      const shorter = (a1.length < a2.length)? a1 : a2\n      const l = shorter.length\n      for(let i=0;i<l;i++){\n        longer[i] = longer[i] + shorter[i]\n      }\n      return longer;\n      break;\n    default:\n      throw Error();\n  }\n}\n\n```\n\n## \u5236\u9650\n\n * \u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u52a0\u7b97\u306e\u307f\n * \u9805\u76ee\u304c\uff12\u3064\u307e\u3067\n  * \u305f\u3060\u3057\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u4e8b\u306f\u3067\u304d\u308b:\n\n```\nA`${[0,1]} + ${ A`${[1,1]} + ${[5,5]}` }`\n```\n * \u8a18\u53f7\u304c\u591a\u3044\n  * `A([0,1,2],\"+\",[3,4,5])`\u306e\u65b9\u304c\u898b\u3084\u3059\u3044\uff01\uff1f\n\n## \u4e00\u5fdc\u30e1\u30ea\u30c3\u30c8\n\n * \u6587\u5b57\u5217\u306a\u306e\u3067\u3069\u3093\u306a\u6f14\u7b97\u5b50\u3067\u3082\u81ea\u7531\u306b\u5b9a\u7fa9\u3067\u304d\u308b\n  * `|>`\u3068\u304b\n * TypeScript\u306e\u5834\u5408\u3001[`valueOf`\u3092\u4f7f\u3063\u305f\u7591\u4f3c\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9](https://github.com/rauschma/op_overload)\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308b\u304c\u3001\u3053\u306e\u65b9\u6cd5\u3060\u3068\u306a\u3089\u306a\u3044\n  * `valueOf`\u306e\u8fd4\u3059\u578b\u60c5\u5831\u3092\u53c2\u7167\u3057\u306a\u3044\u305f\u3081\n  * \u53c2\u8003\uff1a[SIMD\u578b\u306e\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u4f8b](http://www.typescriptlang.org/Playground#src=%2F%2F%2F%20%3Creference%20path%3D%22simd.d.ts%22%20%2F%3E%0Atype%20SIMDData%20%3D%20SIMD.Float32x4%20%7C%20SIMD.Int32x4%20%7C%20SIMD.Int16x8%20%7C%20SIMD.Int8x16%20%7C%20SIMD.Uint32x4%20%7C%20SIMD.Uint16x8%20%7C%20SIMD.Uint8x16%0A%0Afunction%20m%3CT%20extends%20SIMDData%3E(str%3ATemplateStringsArray%2C%20a%3AT%2C%20b%3AT)%3AT%7B%09%09%0A%09%09const%20ctor%20%3D%20a.constructor%3B%09%09%0A%09%09switch(str%5B1%5D.replace(%22%20%22%2C%22%22))%7B%0A%09%09%09%2F*%20basic%20arithmatic%20operator%20*%2F%0A%09%09%09case%20%22%2B%22%3A%0A%09%09%09%09return%20%3CT%3E(%3Cany%3Ector).add(a%2C%20b)%3B%0A%09%09%09case%20%22-%22%3A%0A%09%09%09%09return%20%3CT%3E(%3Cany%3Ector).sub(a%2C%20b)%3B%0A%09%09%09case%20%22*%22%3A%0A%09%09%09%09return%20%3CT%3E(%3Cany%3Ector).mul(a%2C%20b)%3B%0A%09%09%09case%20%22%2F%22%3A%0A%09%09%09%09return%20%3CT%3E(%3Cany%3Ector).div(a%2C%20b)%3B%0A%09%09%09%2F*%20compare%20operator%20%20*%2F%0A%09%09%09case%20%22%3D%3D%22%3A%0A%09%09%09%09return%20%3CT%3E(%3Cany%3Ector).equal(a%2C%20b)%3B%0A%09%09%09case%20%22!%3D%22%3A%0A%09%09%09%09return%20%3CT%3E(%3Cany%3Ector).notEqual(a%2C%20b)%3B%0A%09%09%09case%20%22%3C%22%3A%0A%09%09%09%09return%20%3CT%3E(%3Cany%3Ector).lessThan(a%2C%20b)%3B%0A%09%09%09case%20%22%3C%3D%22%3A%0A%09%09%09case%20%22%3E%22%3A%0A%09%09%09case%20%22%3E%3D%22%3A%0A%09%09%09case%20%22%3E%3E%22%3A%0A%09%09%09case%20%22%3E%3E%3E%22%3A%0A%09%09%09case%20%22%3C%3C%22%3A%0A%09%09%09default%3A%0A%09%09%09%09throw%20SyntaxError(%22unknown%20or%20unsupported%20operator%22)%0A%09%09%7D%0A%09%7D%0A%09%0A%09let%20a%20%3D%20SIMD.Int32x4.splat(1)%3B%0A%09let%20b%20%3D%20SIMD.Int32x4.splat(2)%3B%0A%09%0A%09let%20c%20%3D%20m%60%24%7Ba%7D%20-%20%24%7Bb%7D%60)[^1]\n\n# \u88dc\u8db3\n\n## `valueOf`\u3092\u4f7f\u3063\u305f\u7591\u4f3c\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\n\n * \u3088\u308a\u5b9f\u7528\u7684\u306a\u65b9\n * [Fake operator overloading for JavaScript](https://github.com/rauschma/op_overload)\n\n## `Reflect.defineOperator`\n\n * [\u63d0\u6848](http://www.slideshare.net/BrendanEich/extensible-operators-and-literals-for-javascript)\n * \u307e\u3060[ES.next\u306estage0](https://github.com/tc39/ecma262/blob/master/stage0.md)\u306b\u3059\u3089\u306a\u3063\u3066\u306a\u3044\n\n\n[^1]: \u30a8\u30e9\u30fc\u306f`SIMD`\u578b\u306e\u5b9a\u7fa9\u304c\u7121\u3044\u304b\u3089\u3002[simd.d.ts](https://github.com/ConquestArrow/simd.d.ts/blob/master/simd.d.ts)\u3092DL\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n", "tags": ["JavaScript", "ECMAScript2015, 6", "TypeScript1.7.5"]}