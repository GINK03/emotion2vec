{"context": "(2016/12/15\u8ffd\u8a18)\n\u3053\u306e\u8a18\u4e8b\u306fDeprecated\u3067\u3059\u3002 \nRedux\u306e\u6982\u5ff5\u3092RxJS\u3068TypeScript\u3067\u7406\u89e3\u3059\u308b ver.2 \u304c\u6700\u65b0\u7248\u306b\u306a\u308a\u307e\u3059\u3002\n\nGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3061\u3089 \u2192 ovrmrw/understanding-redux-with-rxjs\ngit clone\u3057\u305f\u3089npm install\u3057\u3066num run ts\u3067\u3059\u3050\u306b\u52d5\u304b\u305b\u307e\u3059\u3002\n(\u6ce8: React\u306e\u8a71\u306f\u4e00\u5207\u51fa\u3066\u304d\u307e\u305b\u3093)\n\nRedux\u3068\u306f\nRedux\u516c\u5f0f\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3067\u72b6\u614b(state)\u3092\u4e00\u3064\u306eJSON\u30c4\u30ea\u30fc\u306e\u69cb\u9020\u3067\u6301\u3061\u3001\u305d\u308c\u3092Action\u304c\u30ad\u30c3\u30af\u3055\u308c\u308b\u5ea6\u306b\u5168\u4f53\u66f4\u65b0\u3057\u3066\u914d\u4fe1\u3059\u308b\u3068\u3044\u3046\u6982\u5ff5\u3002\n\u50d5\u306f\u6700\u521dFlux\u3068\u304bRedux\u3068\u304b\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3051\u3069\u3001\u8272\u3005\u53c2\u8003\u306b\u3057\u306a\u304c\u3089\u81ea\u5206\u3067\u66f8\u3044\u3066\u307f\u305f\u3089\u3088\u3046\u3084\u304f\u7406\u89e3\u3067\u304d\u307e\u3057\u305f\u3002\nMiddleware\u3068\u3044\u3046\u6982\u5ff5\u306f\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3057\u4eca\u3067\u3082\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\u30ed\u30ac\u30fc\u3068\u304b\u4fbf\u5229\u306a\u3082\u306e\u3082\u3042\u308b\u3089\u3057\u3044\u306e\u3067\u3059\u304c\u305d\u3082\u305d\u3082\u672c\u5bb6Redux\u3092\u52d5\u304b\u3057\u3066\u307f\u305f\u3053\u3068\u304c\u306a\u3044\u3002\u81f4\u547d\u7684\u306a\u554f\u984c\u3068\u3057\u3066Redux\u306fReducer\u306e\u4e2d\u3067\u975e\u540c\u671f\u51e6\u7406\u3092\u6271\u3048\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u3092\u3069\u3046\u6271\u3046\u304b\u3067Middleware\u6226\u4e89\u304c\u8d77\u304d\u3066\u3044\u308b\u3050\u3089\u3044\u3067\u3059\u3002\n\nRedux\u3092\u7406\u89e3\u3059\u308b\n\u300c\u3057\u304b\u3057Angular\u6d3e\u3067\u3042\u308b\u4ffa\u9054\u306b\u306f\u6700\u521d\u304b\u3089RxJS\u304c\u3042\u308b\u3002\u3060\u304b\u3089RxJS\u3092\u30d5\u30eb\u306b\u4f7f\u3063\u3066\u975e\u540c\u671f\u3082\u6271\u3048\u308bRedux\u3063\u307d\u3044\u306e\u66f8\u3044\u3061\u3083\u304a\u30fc\u3088\uff01\u300d\u3068\u3044\u3046\u5143\u30cd\u30bf\u304c\u3053\u3061\u3089\u3002\u2192\"Tackling State\" by Victor Savkin\n(Victor Savkin\u306fAngular\u30c1\u30fc\u30e0\u306e\u4e2d\u5fc3\u30e1\u30f3\u30d0\u30fc\u3067\u3059\u3002\u5f7c\u306e\u30d6\u30ed\u30b0\u306f\u8cfc\u8aad\u3059\u308b\u4fa1\u5024\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u3002)\n\u3067\u3001\u5f53\u6642RxJS\u306e\u7406\u89e3\u304c\u6d45\u304b\u3063\u305f(JS\u306e\u7406\u89e3\u3082\u6d45\u304b\u3063\u305f)\u50d5\u306f\u3053\u308c\u3092\u7406\u89e3\u3059\u308b\u306e\u306b\u3059\u3054\u304f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3057\u305f\u3002Savkin\u6d41Redux\u3092\u81ea\u5206\u306a\u308a\u306b\u4f55\u56de\u3082\u66f8\u304d\u76f4\u3057\u3066\u66f8\u304d\u76f4\u3057\u3066\u3001\u305d\u3057\u3066\u3088\u3046\u3084\u304f\u8fbf\u308a\u7740\u3044\u305f\u2026\n\u5b9f\u306f\u4e00\u679a\u306e\u7c21\u5358\u306a\u77ed\u3044\u30b3\u30fc\u30c9\u3067\u5168\u3066\u3092\u8aac\u660e\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u3001GitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u3042\u308b\u30b3\u30fc\u30c9\u305d\u306e\u307e\u307e\u3002\u521d\u5fc3\u8005\u3067\u3082\u7c21\u5358\u306bRedux\u306e\u30b3\u30f3\u30bb\u30d7\u30c8\u3092\u7406\u89e3\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n(RxJS\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3068\u3044\u3046\u65b9\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3080\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u304b\u3068\u601d\u3044\u307e\u3059)\n\nredux-rxjs.ts\nimport 'babel-polyfill';\nimport 'zone.js/dist/zone-node';\nimport * as lodash from 'lodash';\nimport { Observable, Subject, BehaviorSubject } from 'rxjs/Rx';\ndeclare const Zone: any;\n\n\nclass IncrementAction {\n  constructor(public num: number) { }\n}\n\nclass OtherAction {\n  constructor() { }\n}\n\ntype Action = IncrementAction | OtherAction;\n\n\ninterface IncrementState {\n  counter: number;\n}\n\ninterface OtherState {\n  foo: string;\n  bar: number;\n}\n\ninterface AppState {\n  increment: Promise<IncrementState>;\n  other?: OtherState;\n}\n\n\nZone.current.fork({ name: 'myZone' }).runGuarded(() => {\n\n  console.log('zone name:', Zone.current.name); /* OUTPUT> zone name: myZone */\n\n  const initialState: AppState = {\n    increment: Promise.resolve<IncrementState>({\n      counter: 0\n    })\n  };\n\n  let counter: number;\n\n\n  const dispatcher$ = new Subject<Action>(); // Dispatcher\n  const provider$ = new BehaviorSubject<AppState>(initialState); // Provider\n\n\n  Observable // ReducerContainer\n    .zip<AppState>(...[\n      dispatcher$.scan<Promise<IncrementState>>((state, action) => { // Reducer\n        if (action instanceof IncrementAction) {\n          return new Promise<IncrementState>(resolve => {\n            setTimeout(() => {\n              state.then(s => resolve({ counter: s.counter + action.num }));\n            }, 10);\n          });\n        } else {\n          return state;\n        }\n      }, initialState.increment),\n      (increment): AppState => { // projection\n        return Object.assign<{}, AppState, {}>({}, initialState, { increment });\n      }\n    ])\n    .subscribe(appState => {\n      provider$.next(appState);\n    });\n\n\n  provider$\n    .map<Promise<IncrementState>>(appState => appState.increment)\n    .mergeMap<IncrementState>(state => {\n      return Observable.fromPromise(state); // resolve async states.\n    })\n    .map<IncrementState>(state => lodash.cloneDeep(state)) // make states immutable.\n    .distinctUntilChanged((oldValue, newValue) => lodash.isEqual(oldValue, newValue))\n    .subscribe(state => {\n      counter = state.counter;\n      console.log('counter:', counter);  /* (First time) OUTPUT> counter: 0 */\n    });\n\n\n  dispatcher$.next(new IncrementAction(1));  /* OUTPUT> counter: 1 */\n  dispatcher$.next(new IncrementAction(1));  /* OUTPUT> counter: 2 */\n  dispatcher$.next(new IncrementAction(0));  /* OUTPUT> (restricted) */\n  dispatcher$.next(new IncrementAction(1));  /* OUTPUT> counter: 3 */\n  dispatcher$.next(new IncrementAction(-1)); /* OUTPUT> counter: 2 */\n\n});\n\n\n\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\u8d85\u7c21\u5358\u3058\u3083\u306a\u3044\u3067\u3059\u304b\uff1f\n\u3061\u306a\u307f\u306b\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u3067zone.js\u3092\u4f7f\u3046\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u5f8c\u3005Angular\u4e0a\u3067\u52d5\u304b\u3059\u4e88\u5b9a\u306e\u3042\u308b\u30b3\u30fc\u30c9\u306f\u306a\u308b\u3079\u304fNode.js\u74b0\u5883\u3067\u3082Zone\u3092\u4f7f\u3063\u3066\u66f8\u3044\u305f\u65b9\u304c\u3044\u3044\u3067\u3059\u3002\n\u305d\u3046\u3057\u306a\u3044\u3068Node.js\u74b0\u5883\u3067\u52d5\u3044\u305f\u30b3\u30fc\u30c9\u304cAngular\u3067\u52d5\u304b\u306a\u3044\u3068\u304b\u3001\u305d\u3046\u3044\u3046\u73fe\u8c61\u306b\u906d\u9047\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u304b\u3089\u3067\u3059\u3002(\u50d5\u306f\u5b9f\u969b\u306b\u3042\u3063\u305f)\n\n\u8981\u70b91 - Subject\n  dispatcher$.next(new IncrementAction(1));\n\n\u3053\u308c\u304cAction\u306e\u8d77\u70b9\u3067\u3059\u3002\u3061\u306a\u307f\u306bdispatcher$\u306fSubject\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3059\u3002\n\u3053\u306e\u6b21\u306b\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u3069\u3053\u306b\u6d41\u308c\u3066\u3044\u308b\u304b\u308f\u304b\u308b\u3067\u3057\u3087\u3046\u304b\u3002\ndispatcher$.scan<Promise<IncrementState>>((state, action) => { // Reducer\n  /* \u7701\u7565 */\n})\n\n\u3053\u3053\u3067\u3059\u3002\u305d\u3057\u3066\u305d\u306e\u5148\u306esubscribe\u306e\u4e2d\u3067Provider(BehaviorSubject)\u3092next\u3057\u3066\u3001\u3068\u3044\u3046\u5177\u5408\u306b\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u3069\u3093\u3069\u3093\u6b21\u306b\u6d41\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n\u3068\u3053\u308d\u3067Action\u304c{type: 'ADD', payload: 1}\u306e\u5f62\u3067\u306f\u306a\u304fnew IncrementAction(1)\u3067\u3042\u308b\u3053\u3068\u306b\u304a\u6c17\u4ed8\u304d\u3067\u3057\u3087\u3046\u304b\u3002\u3053\u306e\u70b9\u306b\u95a2\u3057\u3066Victor Savkin\u306fTypeScript\u306eUnion Types\u3092\u4f7f\u3063\u3066type-safe\u306a\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u308b\u3053\u3068\u3092\u5f37\u8abf\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u8981\u70b92 - BehaviorSubject\nconst provider$ = new BehaviorSubject<AppState>(initialState);\n\n\u3053\u3053\u306fSubject\u3067\u306f\u306a\u304fBehaviorSubject\u3067\u3042\u308b\u3053\u3068\u306b\u610f\u5473\u304c\u3042\u308a\u307e\u3059\u3002\u3082\u3057\u3053\u308c\u3092Subject\u306b\u5909\u3048\u308b\u3068\u6700\u521d\u306e\"counter: 0\"\u304c\u51fa\u529b\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u521d\u671f\u5024\u304c\u3059\u3050\u306b\u914d\u4fe1\u3055\u308c\u308b\u69d8\u5b50\u306f\u30de\u30fc\u30d6\u30eb\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\u3067\u898b\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\nSubject\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\n\n\u8981\u70b93 - scan\n      dispatcher$.scan<Promise<IncrementState>>((state, action) => {\n        if (action instanceof IncrementAction) {\n          return new Promise<IncrementState>(resolve => {\n            setTimeout(() => {\n              state.then(s => resolve({ counter: s.counter + action.num }));\n            }, 10);\n          });\n        } else {\n          return state;\n        }\n      }, initialState.increment)\n\n\u3044\u308f\u3086\u308bReducer\u3002\nscan\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306fStore(Reducer)\u3092\u69cb\u7bc9\u3059\u308b\u8981\u3067\u3059\u3002\u3053\u308c\u306f\u6642\u9593\u3092\u307e\u305f\u3050reduce\u3067\u3042\u308b\u3068\u7406\u89e3\u3067\u304d\u308c\u3070\u3001\u305d\u308c\u3067\u5927\u4f53OK\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306escan\u3068\u4e8b\u9805\u306ezip\u3092\u3057\u3063\u304b\u308a\u7406\u89e3\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u304c\u672c\u8a18\u4e8b\u7406\u89e3\u306e\u5206\u304b\u308c\u76ee\u3068\u306a\u308a\u307e\u3059\u3002\nscan\u306e\u30de\u30fc\u30d6\u30eb\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\nReducer\u306e\u4e2d\u3067\u975e\u540c\u671f(Promise)\u3092\u6271\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u9055\u548c\u611f\u3092\u611f\u3058\u307e\u3059\u304b\uff1f RxJS\u306a\u3089\u4f55\u306e\u554f\u984c\u3082\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u8981\u70b94 - zip, projection\n      (increment): AppState => { // projection\n        return Object.assign<{}, AppState, {}>({}, initialState, { increment });\n      }\n\nzip\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306e\u6700\u5f8c\u306e\u5f15\u6570\u306bprojection\u3068\u547c\u3070\u308c\u308b\u95a2\u6570\u3092\u5165\u308c\u3066\u623b\u308a\u5024\u3092\u6574\u3048\u307e\u3059\u3002\n\u3061\u306a\u307f\u306bzip\u306e\u4e2d\u304c\u3044\u304f\u3064\u3082\u3042\u308b\u3068\u304d\u306f\u3053\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002\n    .zip<AppState>(...[\n      dispatcher$.scan(/* \u7701\u7565 */), // state1\n      dispatcher$.scan(/* \u7701\u7565 */), // state2\n      dispatcher$.scan(/* \u7701\u7565 */), // state3\n\n      (state1, state2, state3): AppState => { // projection\n        return Object.assign<{}, AppState, {}>({}, initialState, { state1, state2, state3 });\n      }\n    ])\n\nzip\u306e\u30de\u30fc\u30d6\u30eb\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\nzip\u3068\u4f3c\u305f\u3082\u306e\u306bcombineLatest\u3068\u3044\u3046\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u304c\u3042\u308a\u307e\u3059\u304c\u3001zip\u306f\u5185\u5305\u3059\u308b\u5168\u3066\u306eObservable\u306enext\u3092\u5f85\u3064\u306e\u306b\u5bfe\u3057\u3001combineLatest\u306f\u3069\u308c\u304b\u304cnext\u3059\u308b\u5ea6\u306b\u5404\u3005\u306eObservable\u306e\u6700\u65b0\u306e\u5024\u3092\u6b21\u306b\u6d41\u3057\u307e\u3059\u3002\n\u3053\u306e\u305f\u3081Redux\u306e\u6982\u5ff5\u306b\u306fzip\u304c\u9069\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\ncombineLatest\u306e\u30de\u30fc\u30d6\u30eb\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\n\n\u8981\u70b95 - mergeMap, fromPromise\n    .mergeMap<IncrementState>(state => {\n      return Observable.fromPromise(state);\n    })\n\nmergeMap\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306f\u300c\u6d41\u308c\u3066\u304d\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u5225\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u7f6e\u304d\u63db\u3048\u3066\u6b21\u306b\u6d41\u3059\u300d\u3068\u3044\u3046\u30df\u30e9\u30af\u30eb\u306a\u6a5f\u80fd\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002(switchMap\u3068\u3044\u3046\u4f3c\u305f\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u304c\u3053\u3061\u3089\u306f\u76f4\u524d\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3067\u304d\u307e\u3059)\nObservable.fromPromise\u3067\u3001\u6d41\u308c\u3066\u304d\u305fPromise\u3092then\u3057\u3066\u4e2d\u8eab\u3092\u6b21\u306b\u6d41\u3057\u3066\u3044\u308b\u3093\u3067\u3059\u306d\u3002\u3064\u307e\u308a\u3001\u3010Observable<Promise<IncrementState>> \u2192 Observable<IncrementState>\u3011\u306e\u3088\u3046\u306b\u7f6e\u304d\u63db\u3048\u3066\u3044\u307e\u3059\u3002\nReducer\u3067\u975e\u540c\u671f\u3092\u6271\u3048\u308b\u3068\u3044\u3063\u3066\u3082\u7d50\u5c40\u306f\u3069\u3053\u304b\u306e\u6bb5\u968e\u3067Promise\u306e\u89e3\u6c7a\u3092\u5f85\u305f\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306fmergeMap\u306e\u4e2d\u306eObservable.fromPromise\u304c\u305d\u308c\u3092\u62c5\u5f53\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u306d\u3002\nmergeMap\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nswitchMap\u3067\u66f8\u3044\u305fver.\u3082\u7528\u610f\u3057\u307e\u3057\u305f\u3002\u4e0b\u306e\u65b9\u306b\u30b3\u30e1\u30f3\u30c8\u3067\u51fa\u529b\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002 \u2192 redux-rxjs.switchMap.ts\n\u5b9f\u969b\u306b\u52d5\u304b\u3057\u3066\u307f\u308b\u3068\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u308c\u308b\u69d8\u5b50\u304c\u308f\u304b\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306eCancellation\u3068\u547c\u3070\u308c\u308b\u6a5f\u69cb\u306fRxJS\u304c\u30a6\u30ea\u306b\u3057\u3066\u3044\u308b\u3082\u306e\u306e\u4e00\u3064\u3067\u3059\u3002\n\n\u8981\u70b96 - immutability\n    .map<IncrementState>(state => lodash.cloneDeep(state))\n\nPromise\u89e3\u6c7a\u5f8c\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u305d\u306e\u307e\u307e\u6d41\u3059\u3068\u3001.subscribe()\u5185\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u8eab\u3092\u5909\u66f4\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5024\u304c\u6e21\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30e1\u30e2\u30ea\u53c2\u7167\u304c\u6e21\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\nRedux\u306e\u539f\u5247\u306b\u3088\u308b\u3068\"Action\u306e\u767a\u884c\u4ee5\u5916\u3067\u72b6\u614b\u3092\u5909\u66f4\u3067\u304d\u3066\u306f\u306a\u3089\u306a\u3044\"\u306e\u3067\u3001lodash.cloneDeep()\u306b\u3088\u308a\u526f\u4f5c\u7528\u3092\u751f\u3058\u3055\u305b\u306a\u3044\u5024\u3092\u6b21\u306b\u6d41\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nlodash.cloneDeep\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\n\u8981\u70b97 - distinctUntilChanged\n    .distinctUntilChanged((oldValue, newValue) => lodash.isEqual(oldValue, newValue))\n\ndistinctUntilChanged\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306f\u901a\u904e\u3059\u308b\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u540c\u3058\u5024\u306e\u5834\u5408\u306b\u6291\u5236\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\u305f\u3060\u3057\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306f\u524d\u8ff0\u306eprojection\u306e\u3068\u3053\u308d\u3067\nreturn Object.assign<{}, AppState, {}>({}, initialState, { increment });\n\n\u3053\u3046\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u5358\u7d14\u306b.distinctUntilChanged()\u3068\u66f8\u3044\u3066\u3057\u307e\u3046\u3068\u6d41\u308c\u3066\u304d\u305f\u30c7\u30fc\u30bf\u304c{counter: 2}\u2192{counter: 2}\u306e\u3088\u3046\u306b\u540c\u3058\u5024\u304c\u7d9a\u3044\u305f\u3068\u3057\u3066\u3082\u4e21\u65b9\u901a\u904e\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u8eab\u3092\u898b\u3066\u3044\u306a\u3044\u304b\u3089\u3067\u3059\u3002\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u8eab\u3067\u30c1\u30a7\u30c3\u30af\u3059\u308b\u305f\u3081\u306b\u306f\u3044\u308f\u3086\u308bdeepEqual\u306e\u6bd4\u8f03\u3092\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u305f\u3081\u3001comparer\u3068\u547c\u3070\u308c\u308b\u95a2\u6570\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n(oldValue, newValue) => lodash.isEqual(oldValue, newValue)\n\ndistinctUntilChanged\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nlodash.isEqual\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\nAngular\u3067\u4f7f\u3046\u306b\u306f\nDispatcher\u3092DI\u30b3\u30f3\u30c6\u30ca\u306b\u5165\u308c\u3066Component\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3059\u308c\u3070\u3001Component\u304b\u3089Action\u3092\u30ad\u30c3\u30af\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u307e\u305fProvider\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u6700\u5f8c\u306e\u65b9\u3092\u306a\u3093\u3068\u304b\u3057\u3066Component\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3059\u308c\u3070\u3001Component\u3067\u66f4\u65b0\u3055\u308c\u305f\u72b6\u614b(state)\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057Observable<Promise<any>>\u306e\u30c7\u30fc\u30bf\u3092Angular\u6a19\u6e96\u306eAsyncPipe\u3067\u53d7\u3051\u3088\u3046\u3068\u3059\u308b\u3068\u30d6\u30e9\u30a6\u30b6\u304c\u7121\u9650\u30eb\u30fc\u30d7\u306b\u5165\u3063\u3066\u30d5\u30ea\u30fc\u30ba\u3057\u307e\u3059\u3002(ver 2.0.0\u73fe\u5728)\nAsyncPipe\u306fObservable, Promise, EventEmitter\u306e\u3044\u305a\u308c\u3082\u53d7\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u3066\u3001Observable\u306e\u4e2d\u306bPromise\u306e\u3088\u3046\u306a\u9045\u5ef6\u51e6\u7406\u304c\u5165\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u60f3\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u3082\u3057Pipe\u3067\u53d7\u3051\u305f\u3044\u306e\u306a\u3089\u81ea\u4f5c\u3057\u305f\u65b9\u304c\u5b89\u5fc3\u5b89\u5168\u3067\u3059\u3002\u50d5\u306e\u5834\u5408\u306f\u3053\u3046\u3002 \u2192 async-state.pipe.ts\n\n\u307e\u3068\u3081\nRedux\u306eReducers\u306b\u76f8\u5f53\u3059\u308b\u306e\u306fscan\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306e\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u30aa\u30ea\u30b8\u30ca\u30ebRedux\u3068\u9055\u3063\u3066RxJS\u306a\u3089\u975e\u540c\u671f\u306e\u72b6\u614b(Promise)\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nReducer\u3092\u5897\u3084\u3057\u305f\u3051\u308c\u3070zip\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306e\u4e2d\u306b\u3069\u3093\u3069\u3093dispatcher$.scan\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u3084\u308b\u3053\u3068\u306f\u305d\u308c\u3060\u3051\u3067\u3059\u3002\u7c21\u5358\u3067\u3059\u306d\u3002\n\n(\u8ffd\u8a18)\n\u3088\u304f\u898b\u305f\u3089Redux\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3053\u3093\u306a\u3053\u3068\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3057\u305f\u3002\n\nThe question is: do you really need Redux if you already use Rx? Maybe not. It's not hard to re-implement Redux in Rx. Some say it's a two-liner using Rx .scan() method. It may very well be!\n(\u8a33: RxJS\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3088\u3002)\n\n(2016/12/15\u8ffd\u8a18)\n**\u3053\u306e\u8a18\u4e8b\u306fDeprecated\u3067\u3059\u3002** \n[Redux\u306e\u6982\u5ff5\u3092RxJS\u3068TypeScript\u3067\u7406\u89e3\u3059\u308b ver.2](http://qiita.com/ovrmrw/items/8cca6f40d5f78909a3dc) \u304c\u6700\u65b0\u7248\u306b\u306a\u308a\u307e\u3059\u3002\n\n---\n\nGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3061\u3089 \u2192 [ovrmrw/understanding-redux-with-rxjs](https://github.com/ovrmrw/understanding-redux-with-rxjs)\n`git clone`\u3057\u305f\u3089`npm install`\u3057\u3066`num run ts`\u3067\u3059\u3050\u306b\u52d5\u304b\u305b\u307e\u3059\u3002\n\n(\u6ce8: React\u306e\u8a71\u306f\u4e00\u5207\u51fa\u3066\u304d\u307e\u305b\u3093)\n\n## Redux\u3068\u306f\n[Redux\u516c\u5f0f](http://redux.js.org/)\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3067**\u72b6\u614b(state)\u3092\u4e00\u3064\u306eJSON\u30c4\u30ea\u30fc\u306e\u69cb\u9020**\u3067\u6301\u3061\u3001\u305d\u308c\u3092Action\u304c\u30ad\u30c3\u30af\u3055\u308c\u308b\u5ea6\u306b\u5168\u4f53\u66f4\u65b0\u3057\u3066\u914d\u4fe1\u3059\u308b\u3068\u3044\u3046\u6982\u5ff5\u3002\n\u50d5\u306f\u6700\u521dFlux\u3068\u304bRedux\u3068\u304b\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3051\u3069\u3001\u8272\u3005\u53c2\u8003\u306b\u3057\u306a\u304c\u3089\u81ea\u5206\u3067\u66f8\u3044\u3066\u307f\u305f\u3089\u3088\u3046\u3084\u304f\u7406\u89e3\u3067\u304d\u307e\u3057\u305f\u3002\n\nMiddleware\u3068\u3044\u3046\u6982\u5ff5\u306f\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3057\u4eca\u3067\u3082\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\u30ed\u30ac\u30fc\u3068\u304b\u4fbf\u5229\u306a\u3082\u306e\u3082\u3042\u308b\u3089\u3057\u3044\u306e\u3067\u3059\u304c\u305d\u3082\u305d\u3082\u672c\u5bb6Redux\u3092\u52d5\u304b\u3057\u3066\u307f\u305f\u3053\u3068\u304c\u306a\u3044\u3002\u81f4\u547d\u7684\u306a\u554f\u984c\u3068\u3057\u3066Redux\u306fReducer\u306e\u4e2d\u3067\u975e\u540c\u671f\u51e6\u7406\u3092\u6271\u3048\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u3092\u3069\u3046\u6271\u3046\u304b\u3067Middleware\u6226\u4e89\u304c\u8d77\u304d\u3066\u3044\u308b\u3050\u3089\u3044\u3067\u3059\u3002\n\n\n## Redux\u3092\u7406\u89e3\u3059\u308b\n\u300c\u3057\u304b\u3057Angular\u6d3e\u3067\u3042\u308b\u4ffa\u9054\u306b\u306f\u6700\u521d\u304b\u3089RxJS\u304c\u3042\u308b\u3002\u3060\u304b\u3089RxJS\u3092\u30d5\u30eb\u306b\u4f7f\u3063\u3066\u975e\u540c\u671f\u3082\u6271\u3048\u308bRedux\u3063\u307d\u3044\u306e\u66f8\u3044\u3061\u3083\u304a\u30fc\u3088\uff01\u300d\u3068\u3044\u3046\u5143\u30cd\u30bf\u304c\u3053\u3061\u3089\u3002\u2192[\"Tackling State\" by Victor Savkin](https://vsavkin.com/managing-state-in-angular-2-applications-caf78d123d02#.7zwj38sy1)\n(Victor Savkin\u306fAngular\u30c1\u30fc\u30e0\u306e\u4e2d\u5fc3\u30e1\u30f3\u30d0\u30fc\u3067\u3059\u3002\u5f7c\u306e\u30d6\u30ed\u30b0\u306f\u8cfc\u8aad\u3059\u308b\u4fa1\u5024\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u3002)\n\n\u3067\u3001\u5f53\u6642RxJS\u306e\u7406\u89e3\u304c\u6d45\u304b\u3063\u305f(JS\u306e\u7406\u89e3\u3082\u6d45\u304b\u3063\u305f)\u50d5\u306f\u3053\u308c\u3092\u7406\u89e3\u3059\u308b\u306e\u306b\u3059\u3054\u304f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3057\u305f\u3002Savkin\u6d41Redux\u3092\u81ea\u5206\u306a\u308a\u306b\u4f55\u56de\u3082\u66f8\u304d\u76f4\u3057\u3066\u66f8\u304d\u76f4\u3057\u3066\u3001\u305d\u3057\u3066\u3088\u3046\u3084\u304f\u8fbf\u308a\u7740\u3044\u305f\u2026\n\u5b9f\u306f\u4e00\u679a\u306e\u7c21\u5358\u306a\u77ed\u3044\u30b3\u30fc\u30c9\u3067\u5168\u3066\u3092\u8aac\u660e\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u3059\u3002\n\n![687474703a2f2f692e696d6775722e636f6d2f4149696d5138432e6a7067.jpeg](https://qiita-image-store.s3.amazonaws.com/0/74793/6c582eff-0424-3f65-c421-8dcbc931db4d.jpeg)\n\n\u4ee5\u4e0b\u3001GitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u3042\u308b\u30b3\u30fc\u30c9\u305d\u306e\u307e\u307e\u3002\u521d\u5fc3\u8005\u3067\u3082\u7c21\u5358\u306bRedux\u306e\u30b3\u30f3\u30bb\u30d7\u30c8\u3092\u7406\u89e3\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n(RxJS\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3068\u3044\u3046\u65b9\u306f[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://reactivex.io/rxjs/manual/overview.html)\u3092\u8aad\u3080\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u304b\u3068\u601d\u3044\u307e\u3059)\n\n```ts:redux-rxjs.ts\nimport 'babel-polyfill';\nimport 'zone.js/dist/zone-node';\nimport * as lodash from 'lodash';\nimport { Observable, Subject, BehaviorSubject } from 'rxjs/Rx';\ndeclare const Zone: any;\n\n\nclass IncrementAction {\n  constructor(public num: number) { }\n}\n\nclass OtherAction {\n  constructor() { }\n}\n\ntype Action = IncrementAction | OtherAction;\n\n\ninterface IncrementState {\n  counter: number;\n}\n\ninterface OtherState {\n  foo: string;\n  bar: number;\n}\n\ninterface AppState {\n  increment: Promise<IncrementState>;\n  other?: OtherState;\n}\n\n\nZone.current.fork({ name: 'myZone' }).runGuarded(() => {\n\n  console.log('zone name:', Zone.current.name); /* OUTPUT> zone name: myZone */\n\n  const initialState: AppState = {\n    increment: Promise.resolve<IncrementState>({\n      counter: 0\n    })\n  };\n\n  let counter: number;\n\n\n  const dispatcher$ = new Subject<Action>(); // Dispatcher\n  const provider$ = new BehaviorSubject<AppState>(initialState); // Provider\n\n\n  Observable // ReducerContainer\n    .zip<AppState>(...[\n      dispatcher$.scan<Promise<IncrementState>>((state, action) => { // Reducer\n        if (action instanceof IncrementAction) {\n          return new Promise<IncrementState>(resolve => {\n            setTimeout(() => {\n              state.then(s => resolve({ counter: s.counter + action.num }));\n            }, 10);\n          });\n        } else {\n          return state;\n        }\n      }, initialState.increment),\n      (increment): AppState => { // projection\n        return Object.assign<{}, AppState, {}>({}, initialState, { increment });\n      }\n    ])\n    .subscribe(appState => {\n      provider$.next(appState);\n    });\n\n\n  provider$\n    .map<Promise<IncrementState>>(appState => appState.increment)\n    .mergeMap<IncrementState>(state => {\n      return Observable.fromPromise(state); // resolve async states.\n    })\n    .map<IncrementState>(state => lodash.cloneDeep(state)) // make states immutable.\n    .distinctUntilChanged((oldValue, newValue) => lodash.isEqual(oldValue, newValue))\n    .subscribe(state => {\n      counter = state.counter;\n      console.log('counter:', counter);  /* (First time) OUTPUT> counter: 0 */\n    });\n\n\n  dispatcher$.next(new IncrementAction(1));  /* OUTPUT> counter: 1 */\n  dispatcher$.next(new IncrementAction(1));  /* OUTPUT> counter: 2 */\n  dispatcher$.next(new IncrementAction(0));  /* OUTPUT> (restricted) */\n  dispatcher$.next(new IncrementAction(1));  /* OUTPUT> counter: 3 */\n  dispatcher$.next(new IncrementAction(-1)); /* OUTPUT> counter: 2 */\n\n});\n```\n\n\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\u8d85\u7c21\u5358\u3058\u3083\u306a\u3044\u3067\u3059\u304b\uff1f\n\n\u3061\u306a\u307f\u306b\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u3067[zone.js](https://github.com/angular/zone.js/)\u3092\u4f7f\u3046\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u5f8c\u3005Angular\u4e0a\u3067\u52d5\u304b\u3059\u4e88\u5b9a\u306e\u3042\u308b\u30b3\u30fc\u30c9\u306f\u306a\u308b\u3079\u304fNode.js\u74b0\u5883\u3067\u3082`Zone`\u3092\u4f7f\u3063\u3066\u66f8\u3044\u305f\u65b9\u304c\u3044\u3044\u3067\u3059\u3002\n\u305d\u3046\u3057\u306a\u3044\u3068Node.js\u74b0\u5883\u3067\u52d5\u3044\u305f\u30b3\u30fc\u30c9\u304cAngular\u3067\u52d5\u304b\u306a\u3044\u3068\u304b\u3001\u305d\u3046\u3044\u3046\u73fe\u8c61\u306b\u906d\u9047\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u304b\u3089\u3067\u3059\u3002(\u50d5\u306f\u5b9f\u969b\u306b\u3042\u3063\u305f)\n\n## \u8981\u70b91 - Subject\n```\n  dispatcher$.next(new IncrementAction(1));\n```\n\u3053\u308c\u304cAction\u306e\u8d77\u70b9\u3067\u3059\u3002\u3061\u306a\u307f\u306b`dispatcher$`\u306f`Subject`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3059\u3002\n\u3053\u306e\u6b21\u306b\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u3069\u3053\u306b\u6d41\u308c\u3066\u3044\u308b\u304b\u308f\u304b\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\n```\ndispatcher$.scan<Promise<IncrementState>>((state, action) => { // Reducer\n  /* \u7701\u7565 */\n})\n```\n\u3053\u3053\u3067\u3059\u3002\u305d\u3057\u3066\u305d\u306e\u5148\u306e`subscribe`\u306e\u4e2d\u3067Provider(BehaviorSubject)\u3092`next`\u3057\u3066\u3001\u3068\u3044\u3046\u5177\u5408\u306b\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u3069\u3093\u3069\u3093\u6b21\u306b\u6d41\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n\u3068\u3053\u308d\u3067Action\u304c`{type: 'ADD', payload: 1}`\u306e\u5f62\u3067\u306f\u306a\u304f`new IncrementAction(1)`\u3067\u3042\u308b\u3053\u3068\u306b\u304a\u6c17\u4ed8\u304d\u3067\u3057\u3087\u3046\u304b\u3002\u3053\u306e\u70b9\u306b\u95a2\u3057\u3066Victor Savkin\u306fTypeScript\u306eUnion Types\u3092\u4f7f\u3063\u3066type-safe\u306a\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u308b\u3053\u3068\u3092\u5f37\u8abf\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u8981\u70b92 - BehaviorSubject\n```ts\nconst provider$ = new BehaviorSubject<AppState>(initialState);\n```\n\u3053\u3053\u306f`Subject`\u3067\u306f\u306a\u304f`BehaviorSubject`\u3067\u3042\u308b\u3053\u3068\u306b\u610f\u5473\u304c\u3042\u308a\u307e\u3059\u3002\u3082\u3057\u3053\u308c\u3092`Subject`\u306b\u5909\u3048\u308b\u3068\u6700\u521d\u306e`\"counter: 0\"`\u304c\u51fa\u529b\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u521d\u671f\u5024\u304c\u3059\u3050\u306b\u914d\u4fe1\u3055\u308c\u308b\u69d8\u5b50\u306f\u30de\u30fc\u30d6\u30eb\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\u3067\u898b\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\n[Subject\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://reactivex.io/documentation/subject.html)\n<img width=\"640\" alt=\"S.BehaviorSubject.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/74793/ddbaa374-6810-129b-5ba1-d1162bd6902d.png\">\n\n\n## \u8981\u70b93 - scan\n```ts\n      dispatcher$.scan<Promise<IncrementState>>((state, action) => {\n        if (action instanceof IncrementAction) {\n          return new Promise<IncrementState>(resolve => {\n            setTimeout(() => {\n              state.then(s => resolve({ counter: s.counter + action.num }));\n            }, 10);\n          });\n        } else {\n          return state;\n        }\n      }, initialState.increment)\n```\n\u3044\u308f\u3086\u308bReducer\u3002\n`scan`\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306fStore(Reducer)\u3092\u69cb\u7bc9\u3059\u308b\u8981\u3067\u3059\u3002\u3053\u308c\u306f\u6642\u9593\u3092\u307e\u305f\u3050reduce\u3067\u3042\u308b\u3068\u7406\u89e3\u3067\u304d\u308c\u3070\u3001\u305d\u308c\u3067\u5927\u4f53OK\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e`scan`\u3068\u4e8b\u9805\u306e`zip`\u3092\u3057\u3063\u304b\u308a\u7406\u89e3\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u304c\u672c\u8a18\u4e8b\u7406\u89e3\u306e\u5206\u304b\u308c\u76ee\u3068\u306a\u308a\u307e\u3059\u3002\n[scan\u306e\u30de\u30fc\u30d6\u30eb\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0](http://rxmarbles.com/#scan)\n\nReducer\u306e\u4e2d\u3067\u975e\u540c\u671f(Promise)\u3092\u6271\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u9055\u548c\u611f\u3092\u611f\u3058\u307e\u3059\u304b\uff1f RxJS\u306a\u3089\u4f55\u306e\u554f\u984c\u3082\u3042\u308a\u307e\u305b\u3093\u3002\n\n## \u8981\u70b94 - zip, projection\n```ts\n      (increment): AppState => { // projection\n        return Object.assign<{}, AppState, {}>({}, initialState, { increment });\n      }\n```\n`zip`\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306e\u6700\u5f8c\u306e\u5f15\u6570\u306bprojection\u3068\u547c\u3070\u308c\u308b\u95a2\u6570\u3092\u5165\u308c\u3066\u623b\u308a\u5024\u3092\u6574\u3048\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b`zip`\u306e\u4e2d\u304c\u3044\u304f\u3064\u3082\u3042\u308b\u3068\u304d\u306f\u3053\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002\n\n```ts\n    .zip<AppState>(...[\n      dispatcher$.scan(/* \u7701\u7565 */), // state1\n      dispatcher$.scan(/* \u7701\u7565 */), // state2\n      dispatcher$.scan(/* \u7701\u7565 */), // state3\n\n      (state1, state2, state3): AppState => { // projection\n        return Object.assign<{}, AppState, {}>({}, initialState, { state1, state2, state3 });\n      }\n    ])\n```\n[zip\u306e\u30de\u30fc\u30d6\u30eb\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0](http://rxmarbles.com/#zip)\n`zip`\u3068\u4f3c\u305f\u3082\u306e\u306b`combineLatest`\u3068\u3044\u3046\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u304c\u3042\u308a\u307e\u3059\u304c\u3001`zip`\u306f\u5185\u5305\u3059\u308b\u5168\u3066\u306eObservable\u306enext\u3092\u5f85\u3064\u306e\u306b\u5bfe\u3057\u3001`combineLatest`\u306f\u3069\u308c\u304b\u304cnext\u3059\u308b\u5ea6\u306b\u5404\u3005\u306eObservable\u306e\u6700\u65b0\u306e\u5024\u3092\u6b21\u306b\u6d41\u3057\u307e\u3059\u3002\n\u3053\u306e\u305f\u3081Redux\u306e\u6982\u5ff5\u306b\u306f`zip`\u304c\u9069\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n[combineLatest\u306e\u30de\u30fc\u30d6\u30eb\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0](http://rxmarbles.com/#combineLatest)\n\n## \u8981\u70b95 - mergeMap, fromPromise\n```ts\n    .mergeMap<IncrementState>(state => {\n      return Observable.fromPromise(state);\n    })\n```\n`mergeMap`\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306f\u300c\u6d41\u308c\u3066\u304d\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u5225\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u7f6e\u304d\u63db\u3048\u3066\u6b21\u306b\u6d41\u3059\u300d\u3068\u3044\u3046\u30df\u30e9\u30af\u30eb\u306a\u6a5f\u80fd\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002(`switchMap`\u3068\u3044\u3046\u4f3c\u305f\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u304c\u3053\u3061\u3089\u306f\u76f4\u524d\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3067\u304d\u307e\u3059)\n`Observable.fromPromise`\u3067\u3001\u6d41\u308c\u3066\u304d\u305fPromise\u3092then\u3057\u3066\u4e2d\u8eab\u3092\u6b21\u306b\u6d41\u3057\u3066\u3044\u308b\u3093\u3067\u3059\u306d\u3002\u3064\u307e\u308a\u3001\u3010`Observable<Promise<IncrementState>>` \u2192 `Observable<IncrementState>`\u3011\u306e\u3088\u3046\u306b\u7f6e\u304d\u63db\u3048\u3066\u3044\u307e\u3059\u3002\nReducer\u3067\u975e\u540c\u671f\u3092\u6271\u3048\u308b\u3068\u3044\u3063\u3066\u3082\u7d50\u5c40\u306f\u3069\u3053\u304b\u306e\u6bb5\u968e\u3067Promise\u306e\u89e3\u6c7a\u3092\u5f85\u305f\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306f`mergeMap`\u306e\u4e2d\u306e`Observable.fromPromise`\u304c\u305d\u308c\u3092\u62c5\u5f53\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u306d\u3002\n[mergeMap\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://reactivex.io/rxjs/class/es6/Observable.js~Observable.html#instance-method-mergeMap)\n\nswitchMap\u3067\u66f8\u3044\u305fver.\u3082\u7528\u610f\u3057\u307e\u3057\u305f\u3002\u4e0b\u306e\u65b9\u306b\u30b3\u30e1\u30f3\u30c8\u3067\u51fa\u529b\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002 \u2192 [redux-rxjs.switchMap.ts](https://github.com/ovrmrw/understanding-redux-with-rxjs/blob/master/redux-rxjs.switchMap.ts)\n\u5b9f\u969b\u306b\u52d5\u304b\u3057\u3066\u307f\u308b\u3068\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u308c\u308b\u69d8\u5b50\u304c\u308f\u304b\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e**Cancellation**\u3068\u547c\u3070\u308c\u308b\u6a5f\u69cb\u306fRxJS\u304c\u30a6\u30ea\u306b\u3057\u3066\u3044\u308b\u3082\u306e\u306e\u4e00\u3064\u3067\u3059\u3002\n\n## \u8981\u70b96 - immutability\n```ts\n    .map<IncrementState>(state => lodash.cloneDeep(state))\n```\nPromise\u89e3\u6c7a\u5f8c\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u305d\u306e\u307e\u307e\u6d41\u3059\u3068\u3001`.subscribe()`\u5185\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u8eab\u3092\u5909\u66f4\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5024\u304c\u6e21\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30e1\u30e2\u30ea\u53c2\u7167\u304c\u6e21\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\nRedux\u306e\u539f\u5247\u306b\u3088\u308b\u3068**\"Action\u306e\u767a\u884c\u4ee5\u5916\u3067\u72b6\u614b\u3092\u5909\u66f4\u3067\u304d\u3066\u306f\u306a\u3089\u306a\u3044\"**\u306e\u3067\u3001`lodash.cloneDeep()`\u306b\u3088\u308a\u526f\u4f5c\u7528\u3092\u751f\u3058\u3055\u305b\u306a\u3044\u5024\u3092\u6b21\u306b\u6d41\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n[lodash.cloneDeep\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://lodash.com/docs/#cloneDeep)\n\n## \u8981\u70b97 - distinctUntilChanged\n```ts\n    .distinctUntilChanged((oldValue, newValue) => lodash.isEqual(oldValue, newValue))\n```\n`distinctUntilChanged`\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306f\u901a\u904e\u3059\u308b\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u540c\u3058\u5024\u306e\u5834\u5408\u306b\u6291\u5236\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\u305f\u3060\u3057\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306f\u524d\u8ff0\u306eprojection\u306e\u3068\u3053\u308d\u3067\n\n```ts\nreturn Object.assign<{}, AppState, {}>({}, initialState, { increment });\n```\n\u3053\u3046\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u5358\u7d14\u306b`.distinctUntilChanged()`\u3068\u66f8\u3044\u3066\u3057\u307e\u3046\u3068\u6d41\u308c\u3066\u304d\u305f\u30c7\u30fc\u30bf\u304c`{counter: 2}`\u2192`{counter: 2}`\u306e\u3088\u3046\u306b\u540c\u3058\u5024\u304c\u7d9a\u3044\u305f\u3068\u3057\u3066\u3082\u4e21\u65b9\u901a\u904e\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u8eab\u3092\u898b\u3066\u3044\u306a\u3044\u304b\u3089\u3067\u3059\u3002\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u8eab\u3067\u30c1\u30a7\u30c3\u30af\u3059\u308b\u305f\u3081\u306b\u306f\u3044\u308f\u3086\u308bdeepEqual\u306e\u6bd4\u8f03\u3092\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u305f\u3081\u3001comparer\u3068\u547c\u3070\u308c\u308b\u95a2\u6570\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```ts\n(oldValue, newValue) => lodash.isEqual(oldValue, newValue)\n```\n[distinctUntilChanged\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://reactivex.io/documentation/operators/distinct.html)\n[lodash.isEqual\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://lodash.com/docs/#isEqual)\n\n## Angular\u3067\u4f7f\u3046\u306b\u306f\nDispatcher\u3092DI\u30b3\u30f3\u30c6\u30ca\u306b\u5165\u308c\u3066Component\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3059\u308c\u3070\u3001Component\u304b\u3089Action\u3092\u30ad\u30c3\u30af\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u307e\u305fProvider\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u6700\u5f8c\u306e\u65b9\u3092\u306a\u3093\u3068\u304b\u3057\u3066Component\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3059\u308c\u3070\u3001Component\u3067\u66f4\u65b0\u3055\u308c\u305f\u72b6\u614b(state)\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057`Observable<Promise<any>>`\u306e\u30c7\u30fc\u30bf\u3092Angular\u6a19\u6e96\u306eAsyncPipe\u3067\u53d7\u3051\u3088\u3046\u3068\u3059\u308b\u3068\u30d6\u30e9\u30a6\u30b6\u304c\u7121\u9650\u30eb\u30fc\u30d7\u306b\u5165\u3063\u3066\u30d5\u30ea\u30fc\u30ba\u3057\u307e\u3059\u3002(ver 2.0.0\u73fe\u5728)\nAsyncPipe\u306fObservable, Promise, EventEmitter\u306e\u3044\u305a\u308c\u3082\u53d7\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u3066\u3001Observable\u306e\u4e2d\u306bPromise\u306e\u3088\u3046\u306a\u9045\u5ef6\u51e6\u7406\u304c\u5165\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u60f3\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u3082\u3057Pipe\u3067\u53d7\u3051\u305f\u3044\u306e\u306a\u3089\u81ea\u4f5c\u3057\u305f\u65b9\u304c\u5b89\u5fc3\u5b89\u5168\u3067\u3059\u3002\u50d5\u306e\u5834\u5408\u306f\u3053\u3046\u3002 \u2192 [async-state.pipe.ts](https://github.com/ovrmrw/understanding-redux-with-rxjs/blob/master/async-state.pipe.ts)\n\n## \u307e\u3068\u3081\nRedux\u306eReducers\u306b\u76f8\u5f53\u3059\u308b\u306e\u306f`scan`\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306e\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u30aa\u30ea\u30b8\u30ca\u30ebRedux\u3068\u9055\u3063\u3066RxJS\u306a\u3089\u975e\u540c\u671f\u306e\u72b6\u614b(Promise)\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nReducer\u3092\u5897\u3084\u3057\u305f\u3051\u308c\u3070`zip`\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u306e\u4e2d\u306b\u3069\u3093\u3069\u3093`dispatcher$.scan`\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u3084\u308b\u3053\u3068\u306f\u305d\u308c\u3060\u3051\u3067\u3059\u3002\u7c21\u5358\u3067\u3059\u306d\u3002\n\n---\n\n(\u8ffd\u8a18)\n\u3088\u304f\u898b\u305f\u3089[Redux\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://redux.js.org/docs/introduction/PriorArt.html)\u306b\u3053\u3093\u306a\u3053\u3068\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3057\u305f\u3002\n>The question is: do you really need Redux if you already use Rx? Maybe not. It's not hard to re-implement Redux in Rx. Some say it's a two-liner using Rx .scan() method. It may very well be!\n>(\u8a33: RxJS\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3088\u3002)\n", "tags": ["RxJS", "redux", "TypeScript"]}