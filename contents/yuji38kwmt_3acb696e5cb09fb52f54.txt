{"context": "\n\n\u554f\u984c\n\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3067Exception\u304c\u767a\u751f\u3059\u308b\u3068\u3001Terasoluna\u306e\u30ed\u30b0\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf\u304cException\u306e\u5185\u5bb9\u3092\u51fa\u529b\u3057\u307e\u3059\u304c\u3001stackTrace\u3092\u51fa\u529b\u3057\u307e\u305b\u3093\u3002\n\u3053\u308c\u3067\u306f\u30a8\u30e9\u30fc\u306e\u539f\u56e0\u8abf\u67fb\u304c\u3057\u3065\u3089\u3044\u3067\u3059\u3002\n\u3053\u308c\u306f\u3001Terasoluna\u306e\u30ed\u30b0\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bfBLogicLogInterceptor\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3001error(Object message)\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002error(Object message, Throwable t)\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308c\u3070\u3001stackTrace\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\njp.terasoluna.fw.ex.aop.log.BLogicLogInterceptor.java\n\n    /**\n    * BLogic\u30af\u30e9\u30b9\u306e\u5404\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u524d\u5f8c\u306b\u3001\u30c7\u30d0\u30c3\u30b0\u30ed\u30b0\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n    * \u307e\u305f\u3001\u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\u4e2d\u306b\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n    *\n    * @param invocation \u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n    * @return \u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u9069\u7528\u5f8c\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n    * @throws Throwable \u5b9f\u884c\u4f8b\u5916\n    *\n    * @see org.aopalliance.intercept.MethodInterceptor#\n    *      invoke(org.aopalliance.intercept.MethodInvocation)\n    */\n    public Object invoke(MethodInvocation invocation) throws Throwable {\n        Class<? extends Object> blogicClass = null;\n        if (logger.isDebugEnabled()) {\n            blogicClass = invocation.getThis().getClass();\n            logger.debug(blogicClass.getSimpleName().concat(\n                    \" is being executed...\"));\n            logger.debug(createParamsInfo(invocation.getArguments()));\n        }\n        Object result = null;\n        try {\n            result = invocation.proceed();\n        } catch (Throwable e) {\n            if (checkException(e)) {\n                logger.error(e); //\u3010exception\u51fa\u529b\u3011\n                throw e;\n            } else {\n                logger.debug(e); //\u3010exception\u51fa\u529b\u3011\n                throw e;\n            }\n        }\n        if (logger.isDebugEnabled()) {\n            logger.debug(createResultInfo(result));\n            logger.debug(blogicClass.getSimpleName().concat(\n                    \" was executed completely.\"));\n        }\n        return result;\n    }\n\n\n\n\u5bfe\u5fdc\n\u30ab\u30b9\u30bf\u30e0\u30ed\u30b0\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf\u306f\u4f5c\u6210\u3057\u3066\u3001\u300c\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u7d42\u4e86\u21d2\u30ab\u30b9\u30bf\u30e0\u30ed\u30b0\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf\u21d2BLogicLogInterceptor\u300d\u3068\u547c\u3070\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u30ab\u30b9\u30bf\u30e0\u30ed\u30b0\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf\u3067\u306f\u3001error(Object message, Throwable t)\u3092\u5b9f\u884c\u3057\u3066\u3001stackTrace\u3092\u51fa\u529b\u3057\u3066\u3044\u307e\u3059\u3002\n\napplicationContext.xml\n  <!-- Terasoluna\u306e\u30ed\u30b0\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u306e\u5b9a\u7fa9 -->\n  <bean id=\"blogicLogInterceptor\"\n        class=\"jp.terasoluna.fw.ex.aop.log.BLogicLogInterceptor\" >\n    <property name=\"noErrorLogExceptionLists\">\n      <list>\n        <value>jp.terasoluna.fw.web.thin.UnauthenticatedException</value>\n      </list>\n    </property>\n  </bean>\n\n  <aop:config>\n    <aop:pointcut id=\"blogicBeans\" expression=\"bean(*BLogic)\" />\n    <aop:advisor pointcut-ref=\"blogicBeans\" advice-ref=\"blogicLogInterceptor\" />\n  </aop:config>\n\n  <!-- \u30ab\u30b9\u30bf\u30e0\u30ed\u30b0\u51fa\u529b\u7528\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u306e\u5b9a\u7fa9 -->\n  <bean id=\"myBlogicLogInterceptor\"\n        class=\"jp.co.sample.common.interceptor.MyBLogicLogInterceptor\" />\n  <aop:config>\n    <aop:pointcut id=\"myBlogicLogBeans\" expression=\"bean(*BLogic)\" />\n    <aop:advisor pointcut-ref=\"myBlogicLogBeans\" advice-ref=\"myBlogicLogInterceptor\" />\n  </aop:config>\n\n\n\njp.co.sample.common.interceptor.MyBLogicLogInterceptor.java\n    public Object invoke(MethodInvocation invocation) throws Throwable {\n        Object result = null;\n        try {\n            result = invocation.proceed();\n        } catch (Throwable e) {\n            logger.error(\"\", e); //message\u3092\u7a7a\u6587\u5b57\u306b\u3059\u308b\n            throw e;\n        }\n        return result;\n    }\n\n\n\n\u4f59\u8ac7\n\u4fee\u6b63\u9858\u3044\u3092\u51fa\u3057\u305f\u3044\u3093\u3060\u3051\u3069\u3001GitHub\u306e\u4f7f\u3044\u65b9\u304c\u5206\u304b\u3089\u306a\u3044...\n\n\u74b0\u5883\nTERASOLUNA Server Framework for Java 2.0.5.3\nhttps://osdn.jp/projects/terasoluna/releases/63023\n# \u554f\u984c\n\n\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3067Exception\u304c\u767a\u751f\u3059\u308b\u3068\u3001Terasoluna\u306e\u30ed\u30b0\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf\u304cException\u306e\u5185\u5bb9\u3092\u51fa\u529b\u3057\u307e\u3059\u304c\u3001stackTrace\u3092\u51fa\u529b\u3057\u307e\u305b\u3093\u3002\n\u3053\u308c\u3067\u306f\u30a8\u30e9\u30fc\u306e\u539f\u56e0\u8abf\u67fb\u304c\u3057\u3065\u3089\u3044\u3067\u3059\u3002\n\n\u3053\u308c\u306f\u3001Terasoluna\u306e\u30ed\u30b0\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf`BLogicLogInterceptor`\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3001`error(Object message)`\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002`error(Object message, Throwable t)`\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308c\u3070\u3001stackTrace\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```java:jp.terasoluna.fw.ex.aop.log.BLogicLogInterceptor.java\n\n    /**\n    * BLogic\u30af\u30e9\u30b9\u306e\u5404\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u884c\u524d\u5f8c\u306b\u3001\u30c7\u30d0\u30c3\u30b0\u30ed\u30b0\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n    * \u307e\u305f\u3001\u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\u4e2d\u306b\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n    *\n    * @param invocation \u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n    * @return \u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u9069\u7528\u5f8c\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n    * @throws Throwable \u5b9f\u884c\u4f8b\u5916\n    *\n    * @see org.aopalliance.intercept.MethodInterceptor#\n    *      invoke(org.aopalliance.intercept.MethodInvocation)\n    */\n    public Object invoke(MethodInvocation invocation) throws Throwable {\n        Class<? extends Object> blogicClass = null;\n        if (logger.isDebugEnabled()) {\n            blogicClass = invocation.getThis().getClass();\n            logger.debug(blogicClass.getSimpleName().concat(\n                    \" is being executed...\"));\n            logger.debug(createParamsInfo(invocation.getArguments()));\n        }\n        Object result = null;\n        try {\n            result = invocation.proceed();\n        } catch (Throwable e) {\n            if (checkException(e)) {\n                logger.error(e); //\u3010exception\u51fa\u529b\u3011\n                throw e;\n            } else {\n                logger.debug(e); //\u3010exception\u51fa\u529b\u3011\n                throw e;\n            }\n        }\n        if (logger.isDebugEnabled()) {\n            logger.debug(createResultInfo(result));\n            logger.debug(blogicClass.getSimpleName().concat(\n                    \" was executed completely.\"));\n        }\n        return result;\n    }\n```\n\n# \u5bfe\u5fdc\n\n\u30ab\u30b9\u30bf\u30e0\u30ed\u30b0\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf\u306f\u4f5c\u6210\u3057\u3066\u3001\u300c\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u7d42\u4e86\u21d2\u30ab\u30b9\u30bf\u30e0\u30ed\u30b0\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf\u21d2BLogicLogInterceptor\u300d\u3068\u547c\u3070\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u30ab\u30b9\u30bf\u30e0\u30ed\u30b0\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30bf\u3067\u306f\u3001`error(Object message, Throwable t)`\u3092\u5b9f\u884c\u3057\u3066\u3001stackTrace\u3092\u51fa\u529b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```xml:applicationContext.xml\n  <!-- Terasoluna\u306e\u30ed\u30b0\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u306e\u5b9a\u7fa9 -->\n  <bean id=\"blogicLogInterceptor\"\n        class=\"jp.terasoluna.fw.ex.aop.log.BLogicLogInterceptor\" >\n    <property name=\"noErrorLogExceptionLists\">\n      <list>\n        <value>jp.terasoluna.fw.web.thin.UnauthenticatedException</value>\n      </list>\n    </property>\n  </bean>\n\n  <aop:config>\n    <aop:pointcut id=\"blogicBeans\" expression=\"bean(*BLogic)\" />\n    <aop:advisor pointcut-ref=\"blogicBeans\" advice-ref=\"blogicLogInterceptor\" />\n  </aop:config>\n\n  <!-- \u30ab\u30b9\u30bf\u30e0\u30ed\u30b0\u51fa\u529b\u7528\u30a4\u30f3\u30bf\u30bb\u30d7\u30bf\u306e\u5b9a\u7fa9 -->\n  <bean id=\"myBlogicLogInterceptor\"\n        class=\"jp.co.sample.common.interceptor.MyBLogicLogInterceptor\" />\n  <aop:config>\n    <aop:pointcut id=\"myBlogicLogBeans\" expression=\"bean(*BLogic)\" />\n    <aop:advisor pointcut-ref=\"myBlogicLogBeans\" advice-ref=\"myBlogicLogInterceptor\" />\n  </aop:config>\n```\n\n\n```java:jp.co.sample.common.interceptor.MyBLogicLogInterceptor.java\n    public Object invoke(MethodInvocation invocation) throws Throwable {\n        Object result = null;\n        try {\n            result = invocation.proceed();\n        } catch (Throwable e) {\n            logger.error(\"\", e); //message\u3092\u7a7a\u6587\u5b57\u306b\u3059\u308b\n            throw e;\n        }\n        return result;\n    }\n```\n\n# \u4f59\u8ac7\n\u4fee\u6b63\u9858\u3044\u3092\u51fa\u3057\u305f\u3044\u3093\u3060\u3051\u3069\u3001GitHub\u306e\u4f7f\u3044\u65b9\u304c\u5206\u304b\u3089\u306a\u3044...\n\n# \u74b0\u5883\nTERASOLUNA Server Framework for Java 2.0.5.3\nhttps://osdn.jp/projects/terasoluna/releases/63023\n", "tags": ["terasoluna", "Java", "spring"]}