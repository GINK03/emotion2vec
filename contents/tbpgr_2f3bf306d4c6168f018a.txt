{"context": "Crystal\u6a19\u6e96spec\u3068spec2 library\u3067\u66f8\u3044\u305f\u30c6\u30b9\u30c8\u306e\u6bd4\u8f03\u3092\u3057\u307e\u3059\n\n \u5bfe\u8c61\u30b3\u30fc\u30c9\nFizzBuzz\u3067\u3059\nrequire \"./sample_test/*\"\n\nmodule SampleTest\n  class FizzBuzz\n    def initialize(@limit : Int32)\n    end\n\n    def fizzbuzz\n      ary = Array(String).new\n      @limit.times {|i|\n        i+=1\n        ary << case\n        when i%15==0 then \"FizzBuzz\"\n        when i%5==0 then \"Buzz\"\n        when i%3==0 then \"Fizz\"\n        else i.to_s\n        end\n      }\n      ary\n    end\n  end\nend\n\n\n spec\n\u6a19\u6e96\u306e spec \u306b\u3088\u308b\u30c6\u30b9\u30c8\u3067\u3059\u3002\n\u6210\u529f\u3059\u308b\u30c6\u30b9\u30c8\u3068\u5931\u6557\u3059\u308b\u30c6\u30b9\u30c8\u30921\u30b1\u30fc\u30b9\u305a\u3064\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\n \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\nrequire \"./spec_helper\"\n\ndescribe SampleTest do\n  describe SampleTest::FizzBuzz do\n    describe \"fizzbuzz1\" do\n      it \"valid\" do\n        actual = SampleTest::FizzBuzz.new(15).fizzbuzz\n        actual.should eq([\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\"])\n      end\n\n      it \"invalid\" do\n        actual = SampleTest::FizzBuzz.new(16).fizzbuzz\n        actual.should eq([\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\", \"Fizz\"])\n      end\n    end\n  end\nend\n\n\n \u5b9f\u884c\u7d50\u679c\ncrystal spec\n.F\n\nFailures:\n\n  1) SampleTest SampleTest::FizzBuzz fizzbuzz1 invalid\n     Failure/Error: actual.should eq([\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\", \"Fizz\"])\n\n       expected: [\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\", \"Fizz\"]\n            got: [\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\", \"16\"]\n\n     # ./spec/sample_test_spec.cr:13\n\nFinished in 0.74 milliseconds\n2 examples, 1 failures, 0 errors, 0 pending\n\nFailed examples:\n\n\n\n spec2\nspec2 library\u306b\u3088\u308b\u30c6\u30b9\u30c8\u3067\u3059\u3002\n\u6210\u529f\u3059\u308b\u30c6\u30b9\u30c8\u3068\u5931\u6557\u3059\u308b\u30c6\u30b9\u30c8\u30921\u30b1\u30fc\u30b9\u305a\u3064\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\nspec2 \u306f spec \u306b\u52a0\u3048\u3066\n\nlet / subject \u306e\u8ffd\u52a0\nexpect \u8a18\u6cd5\nbefore / after \u306e\u8ffd\u52a0\n\n\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\n\n \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\nrequire \"./spec_helper\"\n\nSpec2.describe SampleTestSpec2 do\n  describe SampleTestSpec2::FizzBuzz do\n    subject { SampleTestSpec2::FizzBuzz }\n    let (base_array) {\n      [\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\"]\n    }\n\n    describe \"fizzbuzz1\" do\n      it \"valid\" do\n        actual = subject.new(15).fizzbuzz\n        expect(base_array).to eq(actual)\n      end\n\n      it \"invalid\" do\n        actual = subject.new(16).fizzbuzz\n        base_array << \"Fizz\"\n        expect(base_array).to eq(actual)\n      end\n    end\n  end\nend\n\n\n spec_helper\nrequire \"spec\"\nrequire \"spec2\"\nrequire \"../src/sample_test_spec2\"\n\n\n \u5b9f\u884c\u7d50\u679c\n$ crystal spec\n.F\n\nIn example: SampleTestSpec2 SampleTestSpec2::FizzBuzz fizzbuzz1 invalid\n  Failure: Expected to be equal:\n    Expected:  [\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\", \"16\"]\n    Actual:    [\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\", \"Fizz\"]\n\n\n \u30c6\u30b9\u30c8\u95a2\u9023\u30e9\u30a4\u30d6\u30e9\u30ea\u5099\u5fd8\u9332\n\n power_assert\nCrystal \u306b\u3082 power_assert library \u304c\u3042\u308b\u306e\u3060\u304c\u3001 Crystal version 0.16.0 \u306e\u5909\u66f4\u306b\u3088\u3063\u3066\n\u73fe\u5728\uff082016/05/26\uff09\u306f\u52d5\u4f5c\u3057\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3002\nversion 0.15 \u7cfb\u3067\u306f\u52d5\u4f5c\u3057\u307e\u3059\u3002\nhttp://qiita.com/rosylilly/items/4c1e120ee9b82c2ed250\nhttps://github.com/rosylilly/power_assert.cr\nCrystal\u6a19\u6e96spec\u3068spec2 library\u3067\u66f8\u3044\u305f\u30c6\u30b9\u30c8\u306e\u6bd4\u8f03\u3092\u3057\u307e\u3059\n\n## <i class=\"fa fa-code\" style=\"font-size:1em;\"></i> \u5bfe\u8c61\u30b3\u30fc\u30c9\nFizzBuzz\u3067\u3059\n\n```ruby\nrequire \"./sample_test/*\"\n\nmodule SampleTest\n  class FizzBuzz\n    def initialize(@limit : Int32)\n    end\n\n    def fizzbuzz\n      ary = Array(String).new\n      @limit.times {|i|\n        i+=1\n        ary << case\n        when i%15==0 then \"FizzBuzz\"\n        when i%5==0 then \"Buzz\"\n        when i%3==0 then \"Fizz\"\n        else i.to_s\n        end\n      }\n      ary\n    end\n  end\nend\n```\n\n## <i class=\"fa fa-flask\" style=\"font-size:1em;\"></i> spec\n\u6a19\u6e96\u306e spec \u306b\u3088\u308b\u30c6\u30b9\u30c8\u3067\u3059\u3002\n\u6210\u529f\u3059\u308b\u30c6\u30b9\u30c8\u3068\u5931\u6557\u3059\u308b\u30c6\u30b9\u30c8\u30921\u30b1\u30fc\u30b9\u305a\u3064\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\n### <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n```ruby\nrequire \"./spec_helper\"\n\ndescribe SampleTest do\n  describe SampleTest::FizzBuzz do\n    describe \"fizzbuzz1\" do\n      it \"valid\" do\n        actual = SampleTest::FizzBuzz.new(15).fizzbuzz\n        actual.should eq([\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\"])\n      end\n\n      it \"invalid\" do\n        actual = SampleTest::FizzBuzz.new(16).fizzbuzz\n        actual.should eq([\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\", \"Fizz\"])\n      end\n    end\n  end\nend\n```\n\n### <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> \u5b9f\u884c\u7d50\u679c\n\n```bash\ncrystal spec\n.F\n\nFailures:\n\n  1) SampleTest SampleTest::FizzBuzz fizzbuzz1 invalid\n     Failure/Error: actual.should eq([\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\", \"Fizz\"])\n\n       expected: [\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\", \"Fizz\"]\n            got: [\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\", \"16\"]\n\n     # ./spec/sample_test_spec.cr:13\n\nFinished in 0.74 milliseconds\n2 examples, 1 failures, 0 errors, 0 pending\n\nFailed examples:\n\n```\n\n## <i class=\"fa fa-flask\" style=\"font-size:1em;\"></i> spec2\n[spec2 library](https://github.com/waterlink/spec2.cr)\u306b\u3088\u308b\u30c6\u30b9\u30c8\u3067\u3059\u3002\n\u6210\u529f\u3059\u308b\u30c6\u30b9\u30c8\u3068\u5931\u6557\u3059\u308b\u30c6\u30b9\u30c8\u30921\u30b1\u30fc\u30b9\u305a\u3064\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\nspec2 \u306f spec \u306b\u52a0\u3048\u3066\n\n* let / subject \u306e\u8ffd\u52a0\n* expect \u8a18\u6cd5\n* before / after \u306e\u8ffd\u52a0\n\n\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\n\n### <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n```ruby\nrequire \"./spec_helper\"\n\nSpec2.describe SampleTestSpec2 do\n  describe SampleTestSpec2::FizzBuzz do\n    subject { SampleTestSpec2::FizzBuzz }\n    let (base_array) {\n      [\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\"]\n    }\n\n    describe \"fizzbuzz1\" do\n      it \"valid\" do\n        actual = subject.new(15).fizzbuzz\n        expect(base_array).to eq(actual)\n      end\n\n      it \"invalid\" do\n        actual = subject.new(16).fizzbuzz\n        base_array << \"Fizz\"\n        expect(base_array).to eq(actual)\n      end\n    end\n  end\nend\n```\n\n### <i class=\"fa fa-code\" style=\"font-size:1em;\"></i> spec_helper\n```ruby\nrequire \"spec\"\nrequire \"spec2\"\nrequire \"../src/sample_test_spec2\"\n```\n\n### <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> \u5b9f\u884c\u7d50\u679c\n\n```bash\n$ crystal spec\n.F\n\nIn example: SampleTestSpec2 SampleTestSpec2::FizzBuzz fizzbuzz1 invalid\n  Failure: Expected to be equal:\n    Expected:  [\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\", \"16\"]\n    Actual:    [\"1\", \"2\", \"Fizz\", \"4\", \"Buzz\", \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\", \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\", \"Fizz\"]\n```\n\n## <i class=\"fa fa-flask\" style=\"font-size:1em;\"></i> \u30c6\u30b9\u30c8\u95a2\u9023\u30e9\u30a4\u30d6\u30e9\u30ea\u5099\u5fd8\u9332\n### <i class=\"fa fa-pencil-square\" style=\"font-size:1em;\"></i> power_assert\nCrystal \u306b\u3082 power_assert library \u304c\u3042\u308b\u306e\u3060\u304c\u3001 Crystal version 0.16.0 \u306e\u5909\u66f4\u306b\u3088\u3063\u3066\n\u73fe\u5728\uff082016/05/26\uff09\u306f\u52d5\u4f5c\u3057\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3002\nversion 0.15 \u7cfb\u3067\u306f\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\nhttp://qiita.com/rosylilly/items/4c1e120ee9b82c2ed250\nhttps://github.com/rosylilly/power_assert.cr\n", "tags": ["crystal"]}