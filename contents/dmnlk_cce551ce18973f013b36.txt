{"context": "\n\n\u6982\u8981\nSpringBoot\u3067\u69cb\u7bc9\u3057\u3066\u3044\u308bWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3001Controller\u306b\u5bfe\u3057\u3066\u5171\u901a\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u3002\n\u4e3b\u306b\u7c21\u5358\u306a\u8a8d\u8a3c\u51e6\u7406\u3067\u3001\u30ed\u30b0\u30a4\u30f3\u72b6\u614b\u3067\u3042\u308c\u3070Controller\u3067\u306e\u51e6\u7406\u3001\u30ed\u30b0\u30a4\u30f3\u72b6\u614b\u3067\u306a\u3051\u308c\u3070\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3078\u9077\u79fb\u3055\u305b\u305f\u3044\u3002\nURL\u30d1\u30b9\u3084\u30d1\u30c3\u30b1\u30fc\u30b8\u30d9\u30fc\u30b9\u3067\u306a\u304f\u3001Annotation\u3067\u7ba1\u7406\u3057\u305f\u3044\u3002\n\n\u65b9\u6cd5\nHandlerInterceptor \u3092\u4f7f\u3046\u3053\u3068\u3067\u5b9f\u88c5\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\nHandlerInterceptor\u3092implement\u3057\u305f\u30af\u30e9\u30b9\u3067\u306f preHandle postHandle afterCompletion \u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u305d\u308c\u305e\u308c\u3001\n- preHandle \u2192 Controller\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u884c\u304f\u524d\u306b\u547c\u3070\u308c\u308b\n- postHandle \u2192\u3000\u30d3\u30e5\u30fc\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u524d\u306b\u547c\u3070\u308c\u308b\u3002RestController\u3067\u306f\u547c\u3070\u308c\u306a\u3044\u3002\n- afterCompletion \u2192 \u30d3\u30e5\u30fc\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u5f8c\u306b\u547c\u3070\u308c\u308b\u3002RestController\u3067\u3082\u547c\u3070\u308c\u308b\u3002\n\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3001@Configuration \u3092\u4ed8\u4e0e\u3057\u3001\u5168\u3066\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u304a\u3044\u3066\u6709\u52b9\u306b\u3057\u3066\u304a\u304f\u3002\n\nInterceptor\n\n\n\n/**\n * login check\n */\n@Log4j\npublic class SampleInterceptor implements HandlerInterceptor {\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        // true\u3067\u3042\u308c\u3070\u901a\u3059\n        return true;\n    }\n\n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n\n    }\n\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n\n    }\n}\n\n\n\n\n\nConfiguraiton\n\n\n/**\n * configuration for app\n */\n@Configuration\npublic class WebApplicationConfiguration {\n    @Bean\n    public SampleInterceptor sampleInterceptor() {\n        return new SampleInterceptor();\n    }\n\n    @Bean\n    public MappedInterceptor interceptor() {\n        return new MappedInterceptor(new String[]{\"/**\"}, sampleInterceptor());\n    }\n}\n\n\n\n\n\u6709\u52b9\u7bc4\u56f2\u3092Contoroller\u306eAnnotation\u3067\u5236\u5fa1\u3059\u308b\npreHandle\u3067\u30ed\u30b0\u30a4\u30f3\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u304c\u3001\u3053\u306e\u307e\u307e\u3067\u306f \u5f15\u6570\u306e HttpServletRequest \u304b\u3089requestURL\u3092\u53d6\u308a\u51fa\u3057\u3001\u7279\u5b9a\u306eURL\u3067\u306f\u8a8d\u8a3c\u30c1\u30a7\u30c3\u30af\u3092\u9664\u5916\u3059\u308b\u3001\u3068\u3044\u3063\u305f\u51e6\u7406\u306b\u306a\u308b\u304c\u7169\u96d1\u306a\u306e\u3067Annotation\u3092\u81ea\u4f5c\u3059\u308b\u3002\n\u4eee\u306b@NonAuth\u3068\u3059\u308b\u3002method\u5358\u4f4d\u306b\u3064\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u3001@Target(ElementType.METHOD) \u3068\u3057\u3066\u304a\u304f\u3002\n\nAnnotation\n\n/**\n * non require auth\n */\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.METHOD)\npublic @interface NonAuth {\n}\n\n\n\n\u3053\u306eAnnotation\u304c\u3064\u3044\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001\u8a8d\u8a3c\u30c1\u30a7\u30c3\u30af\u3092\u8d70\u3089\u305b\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3002\nHandleIntercepter\u5185\u3067\u3001\u5b9f\u884c\u3055\u308c\u308bContorollerClass\u306e\u30e1\u30bd\u30c3\u30c9\u306eAnnotation\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001preHandle\u306e\u5f15\u6570\u306e Object handler\u3092org.springframework.web.method.HandlerMethod;\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u304b\u3089getMethod\u3092\u547c\u3073\u51fa\u3059\u3002\n\u305d\u306e\u5f8c\u3001org.springframework.core.annotation.AnnotationUtils \u3067\u3001\u5f53\u8a72Annotation\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3042\u3052\u308c\u3070\u3088\u3044\u3002\n\nInterceptor\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n\n        HandlerMethod hm = (HandlerMethod) handler;\n        Method method = hm.getMethod();\n        NonAuth annotation = AnnotationUtils.findAnnotation(method, NonAuth.class);\n        if (annotation != null) {\n            log.info(String.format(\"exclude login check %s\", requestURI));\n            return true;\n        }\n}\n\n\n\n\u3057\u304b\u3057\u3001\u3053\u306e\u307e\u307e\u3060\u3068\u3001\u9759\u7684\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6642\u306b\u3082\u547c\u3073\u51fa\u3057\u304c\u884c\u308f\u308c\u3001\u305d\u306e\u6642\u306fHandlerMethod\u3078\u306e\u30ad\u30e3\u30b9\u30c8\u6642\u306bClassCastException\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001js/css\u304c\u542b\u307e\u308c\u3066\u3044\u305f\u3089\u9664\u5916\u3057\u3066\u3044\u308b\u3002\n\u591a\u5206\u3053\u3053\u306f\u3082\u3063\u3068\u30de\u30b7\u306a\u65b9\u6cd5\u304c\u3042\u308b\u3002\n\nInterceptor\n\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        String requestURI = request.getRequestURI();\n        if (isLoginCheckPath(requestURI) == false) {\n            return true;\n        }\n\n        HandlerMethod hm = (HandlerMethod) handler;\n        Method method = hm.getMethod();\n        NonAuth annotation = AnnotationUtils.findAnnotation(method, NonAuth.class);\n        if (annotation != null) {\n            log.info(String.format(\"exclude login check %s\", requestURI));\n            return true;\n        }\n        private boolean isLoginCheckPath(String requestUri) {\n            return requestUri.contains(\"js/\") == false && requestUri.contains(\"css/\") == false;\n        }\n}\n\n\n\n\u2191\u4e0a\u8a18\u306f\u3084\u306f\u308a\u30a4\u30de\u30a4\u30c1\u3060\u3063\u305f\u3002\n\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306e\u5834\u5408\u306f\u3001handler\u304c\u3000org.springframework.web.servlet.resource.ResourceHttpRequestHandler\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306a\u308b\u306e\u3067\u3001\u305d\u306e\u5834\u5408\u3082\u901a\u3057\u3066\u3042\u3052\u308c\u3070\u3088\u3044\u3002\n\ninterceptor\n\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n\n        //\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306e\u5834\u5408\u306f\u8a8d\u8a3c\u4e0d\u8981\n        if (handler instanceof ResourceHttpRequestHandler) {\n              return true;\n        }\n\n        // @NonAuth\u304c\u3064\u3044\u3066\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u8a8d\u8a3c\u4e0d\u8981\n        HandlerMethod hm = (HandlerMethod) handler;\n        Method method = hm.getMethod();\n        NonAuth annotation = AnnotationUtils.findAnnotation(method, NonAuth.class);\n        if (annotation != null) {\n            log.info(String.format(\"exclude login check %s\", requestURI));\n            return true;\n        }\n\n\u3000\u3000\u3000\u3000//\u8a8d\u8a3c\u6e08\u307f\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u51e6\u7406\n}\n\n\n#\u6982\u8981\nSpringBoot\u3067\u69cb\u7bc9\u3057\u3066\u3044\u308bWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3001Controller\u306b\u5bfe\u3057\u3066\u5171\u901a\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u3002\n\u4e3b\u306b\u7c21\u5358\u306a\u8a8d\u8a3c\u51e6\u7406\u3067\u3001\u30ed\u30b0\u30a4\u30f3\u72b6\u614b\u3067\u3042\u308c\u3070Controller\u3067\u306e\u51e6\u7406\u3001\u30ed\u30b0\u30a4\u30f3\u72b6\u614b\u3067\u306a\u3051\u308c\u3070\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3078\u9077\u79fb\u3055\u305b\u305f\u3044\u3002\nURL\u30d1\u30b9\u3084\u30d1\u30c3\u30b1\u30fc\u30b8\u30d9\u30fc\u30b9\u3067\u306a\u304f\u3001Annotation\u3067\u7ba1\u7406\u3057\u305f\u3044\u3002\n\n## \u65b9\u6cd5\n`HandlerInterceptor ` \u3092\u4f7f\u3046\u3053\u3068\u3067\u5b9f\u88c5\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\n\n`HandlerInterceptor`\u3092implement\u3057\u305f\u30af\u30e9\u30b9\u3067\u306f `preHandle ` `postHandle` ` afterCompletion` \u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u305d\u308c\u305e\u308c\u3001\n- `preHandle` \u2192 Controller\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u884c\u304f\u524d\u306b\u547c\u3070\u308c\u308b\n- `postHandle` \u2192\u3000\u30d3\u30e5\u30fc\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u524d\u306b\u547c\u3070\u308c\u308b\u3002RestController\u3067\u306f\u547c\u3070\u308c\u306a\u3044\u3002\n- `afterCompletion` \u2192 \u30d3\u30e5\u30fc\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u5f8c\u306b\u547c\u3070\u308c\u308b\u3002RestController\u3067\u3082\u547c\u3070\u308c\u308b\u3002\n\n\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3001`@Configuration` \u3092\u4ed8\u4e0e\u3057\u3001\u5168\u3066\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u304a\u3044\u3066\u6709\u52b9\u306b\u3057\u3066\u304a\u304f\u3002\n\n```java:Interceptor\n\n\n\n/**\n * login check\n */\n@Log4j\npublic class SampleInterceptor implements HandlerInterceptor {\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        // true\u3067\u3042\u308c\u3070\u901a\u3059\n        return true;\n    }\n\n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n\n    }\n\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n\n    }\n}\n\n\n```\n\n\n\n```java:Configuraiton\n\n\n/**\n * configuration for app\n */\n@Configuration\npublic class WebApplicationConfiguration {\n    @Bean\n    public SampleInterceptor sampleInterceptor() {\n        return new SampleInterceptor();\n    }\n\n    @Bean\n    public MappedInterceptor interceptor() {\n        return new MappedInterceptor(new String[]{\"/**\"}, sampleInterceptor());\n    }\n}\n\n```\n\n\n\n## \u6709\u52b9\u7bc4\u56f2\u3092Contoroller\u306eAnnotation\u3067\u5236\u5fa1\u3059\u308b\n\npreHandle\u3067\u30ed\u30b0\u30a4\u30f3\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u304c\u3001\u3053\u306e\u307e\u307e\u3067\u306f \u5f15\u6570\u306e `HttpServletRequest` \u304b\u3089requestURL\u3092\u53d6\u308a\u51fa\u3057\u3001\u7279\u5b9a\u306eURL\u3067\u306f\u8a8d\u8a3c\u30c1\u30a7\u30c3\u30af\u3092\u9664\u5916\u3059\u308b\u3001\u3068\u3044\u3063\u305f\u51e6\u7406\u306b\u306a\u308b\u304c\u7169\u96d1\u306a\u306e\u3067Annotation\u3092\u81ea\u4f5c\u3059\u308b\u3002\n\u4eee\u306b@NonAuth\u3068\u3059\u308b\u3002method\u5358\u4f4d\u306b\u3064\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u3001`@Target(ElementType.METHOD)` \u3068\u3057\u3066\u304a\u304f\u3002\n\n```java:Annotation\n\n/**\n * non require auth\n */\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.METHOD)\npublic @interface NonAuth {\n}\n\n```\n\n\u3053\u306eAnnotation\u304c\u3064\u3044\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001\u8a8d\u8a3c\u30c1\u30a7\u30c3\u30af\u3092\u8d70\u3089\u305b\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3002\nHandleIntercepter\u5185\u3067\u3001\u5b9f\u884c\u3055\u308c\u308bContorollerClass\u306e\u30e1\u30bd\u30c3\u30c9\u306eAnnotation\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001preHandle\u306e\u5f15\u6570\u306e `Object handler `\u3092`org.springframework.web.method.HandlerMethod; `\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u304b\u3089getMethod\u3092\u547c\u3073\u51fa\u3059\u3002\n\u305d\u306e\u5f8c\u3001` org.springframework.core.annotation.AnnotationUtils ` \u3067\u3001\u5f53\u8a72Annotation\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3042\u3052\u308c\u3070\u3088\u3044\u3002\n\n\n```java:Interceptor\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n\n        HandlerMethod hm = (HandlerMethod) handler;\n        Method method = hm.getMethod();\n        NonAuth annotation = AnnotationUtils.findAnnotation(method, NonAuth.class);\n        if (annotation != null) {\n            log.info(String.format(\"exclude login check %s\", requestURI));\n            return true;\n        }\n}\n\n```\n\n\n\u3057\u304b\u3057\u3001\u3053\u306e\u307e\u307e\u3060\u3068\u3001\u9759\u7684\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6642\u306b\u3082\u547c\u3073\u51fa\u3057\u304c\u884c\u308f\u308c\u3001\u305d\u306e\u6642\u306f`HandlerMethod`\u3078\u306e\u30ad\u30e3\u30b9\u30c8\u6642\u306b`ClassCastException`\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001`js/css`\u304c\u542b\u307e\u308c\u3066\u3044\u305f\u3089\u9664\u5916\u3057\u3066\u3044\u308b\u3002\n\u591a\u5206\u3053\u3053\u306f\u3082\u3063\u3068\u30de\u30b7\u306a\u65b9\u6cd5\u304c\u3042\u308b\u3002\n\n```java:Interceptor\n\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        String requestURI = request.getRequestURI();\n        if (isLoginCheckPath(requestURI) == false) {\n            return true;\n        }\n\n        HandlerMethod hm = (HandlerMethod) handler;\n        Method method = hm.getMethod();\n        NonAuth annotation = AnnotationUtils.findAnnotation(method, NonAuth.class);\n        if (annotation != null) {\n            log.info(String.format(\"exclude login check %s\", requestURI));\n            return true;\n        }\n        private boolean isLoginCheckPath(String requestUri) {\n            return requestUri.contains(\"js/\") == false && requestUri.contains(\"css/\") == false;\n        }\n}\n\n```\n\n\n\u2191\u4e0a\u8a18\u306f\u3084\u306f\u308a\u30a4\u30de\u30a4\u30c1\u3060\u3063\u305f\u3002\n\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306e\u5834\u5408\u306f\u3001`handler`\u304c\u3000`org.springframework.web.servlet.resource.ResourceHttpRequestHandler `\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306a\u308b\u306e\u3067\u3001\u305d\u306e\u5834\u5408\u3082\u901a\u3057\u3066\u3042\u3052\u308c\u3070\u3088\u3044\u3002\n\n\n```java:interceptor\n\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n       \n        //\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306e\u5834\u5408\u306f\u8a8d\u8a3c\u4e0d\u8981\n        if (handler instanceof ResourceHttpRequestHandler) {\n              return true;\n        }\n        \n        // @NonAuth\u304c\u3064\u3044\u3066\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u8a8d\u8a3c\u4e0d\u8981\n        HandlerMethod hm = (HandlerMethod) handler;\n        Method method = hm.getMethod();\n        NonAuth annotation = AnnotationUtils.findAnnotation(method, NonAuth.class);\n        if (annotation != null) {\n            log.info(String.format(\"exclude login check %s\", requestURI));\n            return true;\n        }\n\n\u3000\u3000\u3000\u3000//\u8a8d\u8a3c\u6e08\u307f\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u51e6\u7406\n}\n```\n", "tags": ["Java", "spring-boot"]}