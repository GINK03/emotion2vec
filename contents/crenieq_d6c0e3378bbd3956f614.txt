{"context": "\n\n\u306f\u3058\u3081\u306b\n\u500b\u4eba\u7684\u610f\u898b\u3067\u3059\u304c\u3001Slider\u306f\u306a\u3093\u3068\u306a\u304f\u4f7f\u3044\u306b\u304f\u3044\u5370\u8c61\u304c\u3042\u308a\u307e\u3059\u3002\n10keys\u30ad\u30fc\u30dc\u30fc\u30c9\u3088\u308a \u65ad\u7136\u7701\u30b9\u30da\u30fc\u30b9\u3067\u3059\u3057\u3001UI\u306e\u5370\u8c61\u304c\u30bd\u30d5\u30c8\u306b\u306a\u308b\u6c17\u304c\u3057\u3066\u4f55\u5ea6\u304b\u691c\u8a0e\u3059\u308b\u3053\u3068\u306f\u3042\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u7d50\u5c40\u63a1\u7528\u306b\u81f3\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\u305d\u306e\u539f\u56e0\u306e\u3072\u3068\u3064\u3068\u3057\u3066\u3001Slider\u306f\u5de6\u53f3\u306e\u4e00\u6b21\u5143\u7684\u64cd\u4f5c\u3057\u304b\u306a\u3044\u306e\u3067\u3001\u5165\u529b\u3067\u304d\u308b\u5024\u306e\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30ec\u30f3\u30b8\u304c\u72ed\u3044\u3053\u3068\u304c\u3042\u308b\u306e\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n\u3084\u308a\u305f\u3044UX\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4e8c\u6b21\u5143\u7684\u64cd\u4f5c\u3067\u3001\u5024\u3092\u5165\u529b\u3067\u304d\u308bUI\u90e8\u54c1\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nTap\u3059\u308b\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6570\u5b57\u304c\u5165\u529b\u3067\u304d\u3001Slider\u306e\u3088\u3046\u306bDrag\u3059\u308b\u3068\u30b5\u30a4\u30ba\u304c\u5927\u304d\u304f\u306a\u308a\u3064\u3064\u3001\u5165\u529b\u3067\u304d\u308b\u5024\u3082\u5927\u304d\u304f\u306a\u308b\u3068\u3044\u3046\u4ed5\u69d8\u306b\u3057\u307e\u3057\u305f\u3002\n\u4e0b\u56f3\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u304c1\u5206\u306eButton\u304c\u3001Drag\u306b\u3088\u308a\u5165\u529b\u5024\u304c15\u5206\u306b\u5927\u304d\u304f\u306a\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30ec\u30f3\u30b8\u3092\u7a3c\u3050\u305f\u3081\u306b\u300110\u79d2\u30011\u5206\u30013\u5206\u3068 \u3053\u3053\u3067\u7d39\u4ecb\u3057\u3066\u3044\u308b\u30dc\u30bf\u30f3\u3092\uff13\u3064\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n\u30dc\u30bf\u30f3\u9818\u57df\u5185\u3067\u306etouchDown,Drag,touchUp\u306e\u30a4\u30d9\u30f3\u30c8\u3092 buttonDown(), buttonUp(), buttonDrag()\u3067\u51e6\u7406\u3057\u3066\u3044\u307e\u3059\u3002\nbuttonUp()\u3067\u306f\u3001\u5143\u306e\u30b5\u30a4\u30ba\u306b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3067\u623b\u3057\u3066\u3044\u307e\u3059\u3002\u3000\u5024(value)\u3092\u4f7f\u3046\u306e\u306f\u540c\u3058\u30a4\u30d9\u30f3\u30c8\u3092\u51e6\u7406\u3059\u308b\u5916\u90e8\u30b3\u30fc\u30c9\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\uff08title\u30e9\u30d9\u30eb\u306f\u30a4\u30d9\u30f3\u30c8\u51e6\u7406\u306e\u524d\u5f8c\u95a2\u4fc2\u3067\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001value\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f7f\u3063\u3066\u3082\u3089\u3046\u5f62\u3067\u3059\u3002\uff09\nbuttonDown()\u3067\u306f\u3001\u4e0a\u56f3\u306e\u3088\u3046\u306b\u30dc\u30bf\u30f3\u3092\u900f\u904e\u3059\u308b\u3053\u3068\u3082\u3042\u308b\u306e\u3067\u3001 \u81ea\u8eab\u3092\u6700\u524d\u9762\u306b\u3082\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\u3000\u307e\u305f\u3001value\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u521d\u671f\u5024(rate)\u306b\u623b\u3057\u3066\u3044\u307e\u3059\u3002\nbuttonDrag()\u3067\u306f\u3001\u30dc\u30bf\u30f3\u306e\u30b5\u30a4\u30ba\u3068\u30e9\u30d9\u30eb\u3092\u5909\u66f4\u3092\u3057\u307e\u3059\u3002\u3000value\u306frate\u306e\u6574\u6570\u500d\u306b\u306a\u308a\u307e\u3059\u3002\n\n\nslideAreaButton.swift\nimport UIKit\n\nclass slideAreaButton: UIButton { // \u30af\u30e9\u30b9\u540d\u304c\u5c0f\u6587\u5b57\u59cb\u307e\u308a\u306a\u306e\u306f\u3054\u611b\u5b0c\uff57\n    var value:Int = 1\n    var rate:Int = 1\n    private var size:CGSize = CGSize.zero\n    private var origin:CGPoint = CGPoint.zero\n\n    private func init_sub() {\n        setOriginSize()\n        self.addTarget(self, action:#selector(buttonUp) ,   for: .touchUpInside)\n        self.addTarget(self, action:#selector(buttonDown) , for: .touchDown)\n        self.addTarget(self, action:#selector(buttonDrag) , for: .touchDragInside)\n        self.addTarget(self, action:#selector(buttonCancel),for: [.touchUpOutside, .touchCancel])\n        self.setTitle(\"\\(rate)\", for: .normal)\n    }\n\n    override init(frame:CGRect) {\n        super.init(frame:frame)\n        init_sub()\n    }\n\n    init( _ rate:Int = 1 ) {\n        super.init(frame:CGRect.zero)\n        init_sub()\n    }\n\n    required init?(coder aDecoder: NSCoder) {\n        super.init(coder: aDecoder)\n    }\n\n    func setOriginSize() {\n        origin = self.frame.origin\n        size   = self.frame.size\n    }\n\n    func buttonResize(_ delay:Double = 0) {\n        UIView.animate(withDuration: 0.1, delay: delay, usingSpringWithDamping: 0.3, initialSpringVelocity: 0.2, options: .curveEaseInOut, animations: {()->Void in\n            self.frame.origin = self.origin\n            self.frame.size   = self.size\n        }, completion:{(BOOL)->Void in\n            self.isHighlighted = false\n        } )\n\n    }\n\n    func buttonUp(bt:UIButton) {\n        buttonResize()\n    }\n    func buttonDown(bt:UIButton, forEvent: UIEvent) {\n        self.superview?.bringSubview(toFront: self)\n        setOriginSize()\n        value = rate\n    }\n    func buttonDrag(bt:UIButton, forEvent: UIEvent) {\n        let p = forEvent.allTouches!.first!.location(in: self.superview)\n        let w = origin.x + size.width  - p.x\n        let h = origin.y + size.height - p.y\n        self.frame = CGRect(x:p.x, y:p.y, width:w , height:h )\n\n        value = Int(w*h/size.width/size.height)*rate\n        self.setTitle(\"\\(value)\", for: .highlighted)\n    }\n    func buttonCancel() {\n        buttonResize()\n    }\n\n}\n\nclass ViewController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n\n        let bt = slideAreaButton()\n        bt.frame = CGRect(x: 200, y: 400, width: 60, height: 60)\n        bt.backgroundColor = .black\n        bt.addTarget(self, action: #selector(printValue(bt:)), for: .touchUpInside)\n        self.view.addSubview(bt)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n\n    func printValue(bt:slideAreaButton) {\n        print(bt.value)\n    }\n\n}\n\n\n\n\n\u8aad\u3093\u3067\u3044\u305f\u3060\u304d\u3001\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\u3053\u306e\u30dc\u30bf\u30f3\u3092\u4f7f\u3063\u305f\u30bf\u30a4\u30de\u30fc\u30a2\u30d7\u30ea\u3092\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\u3088\u308d\u3057\u3051\u308c\u3070\u662f\u975e\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002\niTunes\u3067 Adjustable Timer\u3092\u898b\u3066\u307f\u308b\n##\u306f\u3058\u3081\u306b\n\n\u500b\u4eba\u7684\u610f\u898b\u3067\u3059\u304c\u3001Slider\u306f\u306a\u3093\u3068\u306a\u304f\u4f7f\u3044\u306b\u304f\u3044\u5370\u8c61\u304c\u3042\u308a\u307e\u3059\u3002\n10keys\u30ad\u30fc\u30dc\u30fc\u30c9\u3088\u308a \u65ad\u7136\u7701\u30b9\u30da\u30fc\u30b9\u3067\u3059\u3057\u3001UI\u306e\u5370\u8c61\u304c\u30bd\u30d5\u30c8\u306b\u306a\u308b\u6c17\u304c\u3057\u3066\u4f55\u5ea6\u304b\u691c\u8a0e\u3059\u308b\u3053\u3068\u306f\u3042\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u7d50\u5c40\u63a1\u7528\u306b\u81f3\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\u305d\u306e\u539f\u56e0\u306e\u3072\u3068\u3064\u3068\u3057\u3066\u3001Slider\u306f\u5de6\u53f3\u306e\u4e00\u6b21\u5143\u7684\u64cd\u4f5c\u3057\u304b\u306a\u3044\u306e\u3067\u3001\u5165\u529b\u3067\u304d\u308b\u5024\u306e\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30ec\u30f3\u30b8\u304c\u72ed\u3044\u3053\u3068\u304c\u3042\u308b\u306e\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n##\u3084\u308a\u305f\u3044UX\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4e8c\u6b21\u5143\u7684\u64cd\u4f5c\u3067\u3001\u5024\u3092\u5165\u529b\u3067\u304d\u308bUI\u90e8\u54c1\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\nTap\u3059\u308b\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6570\u5b57\u304c\u5165\u529b\u3067\u304d\u3001Slider\u306e\u3088\u3046\u306bDrag\u3059\u308b\u3068\u30b5\u30a4\u30ba\u304c\u5927\u304d\u304f\u306a\u308a\u3064\u3064\u3001\u5165\u529b\u3067\u304d\u308b\u5024\u3082\u5927\u304d\u304f\u306a\u308b\u3068\u3044\u3046\u4ed5\u69d8\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u4e0b\u56f3\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u304c1\u5206\u306eButton\u304c\u3001Drag\u306b\u3088\u308a\u5165\u529b\u5024\u304c15\u5206\u306b\u5927\u304d\u304f\u306a\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30ec\u30f3\u30b8\u3092\u7a3c\u3050\u305f\u3081\u306b\u300110\u79d2\u30011\u5206\u30013\u5206\u3068 \u3053\u3053\u3067\u7d39\u4ecb\u3057\u3066\u3044\u308b\u30dc\u30bf\u30f3\u3092\uff13\u3064\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n![\u753b\u9762\u30a4\u30e1\u30fc\u30b8](https://qiita-image-store.s3.amazonaws.com/0/140025/1862934f-52ba-4d86-026b-696205554b9f.jpeg \"\u753b\u9762\u30a4\u30e1\u30fc\u30b8\")\n\n\n\n##\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\n- \u30dc\u30bf\u30f3\u9818\u57df\u5185\u3067\u306etouchDown,Drag,touchUp\u306e\u30a4\u30d9\u30f3\u30c8\u3092 buttonDown(), buttonUp(), buttonDrag()\u3067\u51e6\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n- buttonUp()\u3067\u306f\u3001\u5143\u306e\u30b5\u30a4\u30ba\u306b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3067\u623b\u3057\u3066\u3044\u307e\u3059\u3002\u3000\u5024(value)\u3092\u4f7f\u3046\u306e\u306f\u540c\u3058\u30a4\u30d9\u30f3\u30c8\u3092\u51e6\u7406\u3059\u308b\u5916\u90e8\u30b3\u30fc\u30c9\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\uff08title\u30e9\u30d9\u30eb\u306f\u30a4\u30d9\u30f3\u30c8\u51e6\u7406\u306e\u524d\u5f8c\u95a2\u4fc2\u3067\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001value\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f7f\u3063\u3066\u3082\u3089\u3046\u5f62\u3067\u3059\u3002\uff09\n- buttonDown()\u3067\u306f\u3001\u4e0a\u56f3\u306e\u3088\u3046\u306b\u30dc\u30bf\u30f3\u3092\u900f\u904e\u3059\u308b\u3053\u3068\u3082\u3042\u308b\u306e\u3067\u3001 \u81ea\u8eab\u3092\u6700\u524d\u9762\u306b\u3082\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\u3000\u307e\u305f\u3001value\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u521d\u671f\u5024(rate)\u306b\u623b\u3057\u3066\u3044\u307e\u3059\u3002\n- buttonDrag()\u3067\u306f\u3001\u30dc\u30bf\u30f3\u306e\u30b5\u30a4\u30ba\u3068\u30e9\u30d9\u30eb\u3092\u5909\u66f4\u3092\u3057\u307e\u3059\u3002\u3000value\u306frate\u306e\u6574\u6570\u500d\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n```swift:slideAreaButton.swift\nimport UIKit\n\nclass slideAreaButton: UIButton { // \u30af\u30e9\u30b9\u540d\u304c\u5c0f\u6587\u5b57\u59cb\u307e\u308a\u306a\u306e\u306f\u3054\u611b\u5b0c\uff57\n    var value:Int = 1\n    var rate:Int = 1\n    private var size:CGSize = CGSize.zero\n    private var origin:CGPoint = CGPoint.zero\n    \n    private func init_sub() {\n        setOriginSize()\n        self.addTarget(self, action:#selector(buttonUp) ,   for: .touchUpInside)\n        self.addTarget(self, action:#selector(buttonDown) , for: .touchDown)\n        self.addTarget(self, action:#selector(buttonDrag) , for: .touchDragInside)\n        self.addTarget(self, action:#selector(buttonCancel),for: [.touchUpOutside, .touchCancel])\n        self.setTitle(\"\\(rate)\", for: .normal)\n    }\n    \n    override init(frame:CGRect) {\n        super.init(frame:frame)\n        init_sub()\n    }\n    \n    init( _ rate:Int = 1 ) {\n        super.init(frame:CGRect.zero)\n        init_sub()\n    }\n    \n    required init?(coder aDecoder: NSCoder) {\n        super.init(coder: aDecoder)\n    }\n    \n    func setOriginSize() {\n        origin = self.frame.origin\n        size   = self.frame.size\n    }\n    \n    func buttonResize(_ delay:Double = 0) {\n        UIView.animate(withDuration: 0.1, delay: delay, usingSpringWithDamping: 0.3, initialSpringVelocity: 0.2, options: .curveEaseInOut, animations: {()->Void in\n            self.frame.origin = self.origin\n            self.frame.size   = self.size\n        }, completion:{(BOOL)->Void in\n            self.isHighlighted = false\n        } )\n        \n    }\n    \n    func buttonUp(bt:UIButton) {\n        buttonResize()\n    }\n    func buttonDown(bt:UIButton, forEvent: UIEvent) {\n        self.superview?.bringSubview(toFront: self)\n        setOriginSize()\n        value = rate\n    }\n    func buttonDrag(bt:UIButton, forEvent: UIEvent) {\n        let p = forEvent.allTouches!.first!.location(in: self.superview)\n        let w = origin.x + size.width  - p.x\n        let h = origin.y + size.height - p.y\n        self.frame = CGRect(x:p.x, y:p.y, width:w , height:h )\n        \n        value = Int(w*h/size.width/size.height)*rate\n        self.setTitle(\"\\(value)\", for: .highlighted)\n    }\n    func buttonCancel() {\n        buttonResize()\n    }\n    \n}\n\nclass ViewController: UIViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n        \n        let bt = slideAreaButton()\n        bt.frame = CGRect(x: 200, y: 400, width: 60, height: 60)\n        bt.backgroundColor = .black\n        bt.addTarget(self, action: #selector(printValue(bt:)), for: .touchUpInside)\n        self.view.addSubview(bt)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n\n    func printValue(bt:slideAreaButton) {\n        print(bt.value)\n    }\n    \n}\n\n\n```\n\n\n\u8aad\u3093\u3067\u3044\u305f\u3060\u304d\u3001\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\n\n\u3053\u306e\u30dc\u30bf\u30f3\u3092\u4f7f\u3063\u305f\u30bf\u30a4\u30de\u30fc\u30a2\u30d7\u30ea\u3092\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\u3088\u308d\u3057\u3051\u308c\u3070\u662f\u975e\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002\n[iTunes\u3067 Adjustable Timer\u3092\u898b\u3066\u307f\u308b](https://itunes.apple.com/jp/app/itsudemo-diao-zhengdekirutaima/id1164383876)\n\n\n", "tags": ["Swift", "UIKit"]}