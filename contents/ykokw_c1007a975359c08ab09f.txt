{"tags": ["Choregraphe", "NCMB"], "context": "\n\n\u6e96\u5099\u3059\u308b\u3082\u306e\n\u3044\u304f\u3064\u304b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092Choregraphe\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306elib\u30d5\u30a9\u30eb\u30c0\uff08\u306a\u304b\u3063\u305f\u3089\u4f5c\u6210)\u306b\u30b3\u30d4\u30fc\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\n\npetitviolet/py_nifty_cloud: Python wrapper for Nifty Cloud Mobile Backend\n\nZIP\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001py_nifty_cloud\u30d5\u30a9\u30eb\u30c0\u3092\u8ffd\u52a0\n\n\n\nkennethreitz/requests: Python HTTP Requests for Humans\u2122\n\nZIP\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001requests\u30d5\u30a9\u30eb\u30c0\u3092\u8ffd\u52a0\n\n\n\nPyYAML \u2013 PyYAML\n\nZIP\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001lib\u914d\u4e0b\u306eyaml\u3092\u8ffd\u52a0\n\n\n\n\u30cb\u30d5\u30c6\u30a3\u30af\u30e9\u30a6\u30c9 mobile backend\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\n\n\u7121\u6599ID\u3092\u4f5c\u6210\u3057\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\nAPI\u30ad\u30fc\u3092\u3042\u3068\u3067\u4f7f\u3044\u307e\u3059\n\n\n\n\nsetup.yml\u306e\u7528\u610f\nAPI\u30ad\u30fc\u3092\u30e1\u30e2\u3057\u305fsetup.yml\u3092\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u76f4\u4e0b\uff08manifest.xml\u3068\u540c\u3058\u3068\u3053\u308d\uff09\u306b\u914d\u7f6e\nAPPLICATION_KEY: YOUR_APP_KEY\nCLIENT_KEY: YOUR_CLIENT_KEY\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\n\npython\u306ebox\u3092\u4f5c\u6210\n\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001post\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u3066\u30c7\u30fc\u30bf\u3092mobile backend\u306b\u9001\u4fe1\u3057\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u884c\u3057\u305f\u3042\u3068\u306bmobile backend\u306e\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u3092\u958b\u3044\u3066\u3001\u30c7\u30fc\u30bf\u304c\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self)\n\n    def onLoad(self):\n        self.framemanager = ALProxy(\"ALFrameManager\")\n        self.folderName = None\n\n    def onUnload(self):\n        import sys\n        if self.folderName and self.folderName in sys.path:\n            sys.path.remove(self.folderName)\n        self.folderName = None\n\n    def onInput_onStart(self):\n        import sys, os\n        self.folderName = os.path.join(self.framemanager.getBehaviorPath(self.behaviorId), \"../lib\")\n        if self.folderName not in sys.path:\n            sys.path.append(self.folderName)\n        #import\n        from py_nifty_cloud.nifty_cloud_request import NiftyCloudRequest\n\n        # instanciate with yaml file contains APPLICATION KEY and CLIENT KEY\n        ncr = NiftyCloudRequest(os.path.join(self.framemanager.getBehaviorPath(self.behaviorId), \"../setup.yml\"))\n        path = '/classes/TestClass'\n        method = 'POST'\n\n        # post a new recode\n        values = {'key': 'test'}\n        response = ncr.post(path=path, query=values)\n        print(response.status_code)\n\n\n    def onInput_onStop(self):\n        self.onUnload()\n        self.onStopped()\n\n## \u6e96\u5099\u3059\u308b\u3082\u306e\n\n\u3044\u304f\u3064\u304b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092Choregraphe\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306elib\u30d5\u30a9\u30eb\u30c0\uff08\u306a\u304b\u3063\u305f\u3089\u4f5c\u6210)\u306b\u30b3\u30d4\u30fc\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\n- [petitviolet/py\\_nifty\\_cloud: Python wrapper for Nifty Cloud Mobile Backend](https://github.com/petitviolet/py_nifty_cloud)\n - ZIP\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001py_nifty_cloud\u30d5\u30a9\u30eb\u30c0\u3092\u8ffd\u52a0\n- [kennethreitz/requests: Python HTTP Requests for Humans\u2122](https://github.com/kennethreitz/requests)\n - ZIP\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001requests\u30d5\u30a9\u30eb\u30c0\u3092\u8ffd\u52a0\n- [PyYAML \u2013 PyYAML](http://pyyaml.org/wiki/PyYAML)\n - ZIP\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001lib\u914d\u4e0b\u306eyaml\u3092\u8ffd\u52a0\n- [\u30cb\u30d5\u30c6\u30a3\u30af\u30e9\u30a6\u30c9 mobile backend](http://mb.cloud.nifty.com/)\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n - \u7121\u6599ID\u3092\u4f5c\u6210\u3057\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\n - API\u30ad\u30fc\u3092\u3042\u3068\u3067\u4f7f\u3044\u307e\u3059\n\n### setup.yml\u306e\u7528\u610f\n\nAPI\u30ad\u30fc\u3092\u30e1\u30e2\u3057\u305fsetup.yml\u3092\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u76f4\u4e0b\uff08manifest.xml\u3068\u540c\u3058\u3068\u3053\u308d\uff09\u306b\u914d\u7f6e\n\n```yaml\nAPPLICATION_KEY: YOUR_APP_KEY\nCLIENT_KEY: YOUR_CLIENT_KEY\n```\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n![pj_structure.png](https://qiita-image-store.s3.amazonaws.com/0/38157/71501b66-3260-c619-b92d-833137bdb167.png)\n\n\n## python\u306ebox\u3092\u4f5c\u6210\n\n\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001post\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u3066\u30c7\u30fc\u30bf\u3092mobile backend\u306b\u9001\u4fe1\u3057\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u884c\u3057\u305f\u3042\u3068\u306bmobile backend\u306e\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u3092\u958b\u3044\u3066\u3001\u30c7\u30fc\u30bf\u304c\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```python\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self)\n\n    def onLoad(self):\n        self.framemanager = ALProxy(\"ALFrameManager\")\n        self.folderName = None\n\n    def onUnload(self):\n        import sys\n        if self.folderName and self.folderName in sys.path:\n            sys.path.remove(self.folderName)\n        self.folderName = None\n\n    def onInput_onStart(self):\n        import sys, os\n        self.folderName = os.path.join(self.framemanager.getBehaviorPath(self.behaviorId), \"../lib\")\n        if self.folderName not in sys.path:\n            sys.path.append(self.folderName)\n        #import\n        from py_nifty_cloud.nifty_cloud_request import NiftyCloudRequest\n        \n        # instanciate with yaml file contains APPLICATION KEY and CLIENT KEY\n        ncr = NiftyCloudRequest(os.path.join(self.framemanager.getBehaviorPath(self.behaviorId), \"../setup.yml\"))\n        path = '/classes/TestClass'\n        method = 'POST'\n        \n        # post a new recode\n        values = {'key': 'test'}\n        response = ncr.post(path=path, query=values)\n        print(response.status_code)\n\n\n    def onInput_onStop(self):\n        self.onUnload()\n        self.onStopped()\n```\n\n"}