{"context": "\n\n\u6982\u8981\n\u5148\u65e5\u300cAmazon Dash Button\u300d\u304c\u3064\u3044\u306b\u65e5\u672c\u3067\u3082\u767a\u58f2\u306b\u306a\u308a\u307e\u3057\u305f\u306d\u3002\n\u3053\u308c\u3001\u8981\u306f\u30dc\u30bf\u30f3\u3092\u30dd\u30c1\u30c3\u3068\u62bc\u3059\u3068\u5bfe\u8c61\u306e\u5546\u54c1\u304cAmazon\u3067\u81ea\u52d5\u6ce8\u6587\u3055\u308c\u3066\u81ea\u5b85\u306b\u5c4a\u304f\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u4eca\u56de\u306f\u3053\u308c\u3092\u81ea\u4f5c\u3057\u3061\u3083\u304a\u3046\uff01\u3068\u3044\u3046\u65e8\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u308f\u304b\u308b\u4eba\u306f\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u6b63\u78ba\u306b\u306f\u300cAmazon Dash Button\u300d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u53ef\u80fd\u7248\u3068\u306a\u308b\u300cAWS IoT Button\u300d\u3068\u3044\u3046\u65b9\u304c\u8fd1\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u203b\u8a71\u984c\u306b\u306e\u3063\u3066\u30bf\u30a4\u30c8\u30eb\u306f\u300cAmazon Dash Button\u300d\u3068\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u5168\u4f53\u69cb\u6210\n\u5168\u4f53\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\n\nRaspberry Pi Zero\u306b\u53d6\u308a\u4ed8\u3051\u305f\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068MQTT\u7d4c\u7531\u3067AWS IoT\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\nAWS IoT\u306e\u30eb\u30fc\u30eb\u30a8\u30f3\u30b8\u30f3\u306b\u3088\u308aAWS Lambda\u3078\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\nLambda\u95a2\u6570\u3067\u306fSelenium + PhantomJS\u3088\u308aAmazon\u306eWeb\u30b5\u30a4\u30c8\u3092\u30af\u30ed\u30fc\u30ea\u30f3\u30b0\u3057\u3001\u6307\u5b9a\u306e\u5546\u54c1\u3092\u8cfc\u5165\u3057\u307e\u3059\u3002\n\n\u51e6\u7406\u306e\u5f8c\u308d\u304b\u3089\uff083 -> 2 -> 1\u306e\u9806\u306b\uff09\u8a73\u7d30\u306b\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n1. Amazon\u3067\u81ea\u52d5\u8cfc\u5165\u3092\u884c\u3046Lambda\u95a2\u6570\u306e\u4f5c\u6210\n\u3053\u306e\u7ae0\u3067\u306fSelenium\u3068PhantomJS\u3092\u5229\u7528\u3057\u3066Amazon\u306eWeb\u30b5\u30a4\u30c8\u3092\u30af\u30ed\u30fc\u30ea\u30f3\u30b0\u3057\u3001\u6307\u5b9a\u306e\u5546\u54c1\u3092\u81ea\u52d5\u8cfc\u5165\u3059\u308bLambda\u95a2\u6570\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nAWS Lambda\u3068\u306f?\nhttp://docs.aws.amazon.com/ja_jp/lambda/latest/dg/welcome.html\nAWS Lambda\u306f\u30b3\u30fc\u30c9\u3092AWS Lambda\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d3\u30b9\u304cAWS\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u4f7f\u7528\u3057\u3066\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\u3092\u4ee3\u884c\u3059\u308b\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30b5\u30fc\u30d3\u30b9\u3068\u306a\u308a\u307e\u3059\u3002\n\u30e9\u30f3\u30bf\u30a4\u30e0\u306b\u306fJava, Node.js, Python, C#\u304c\u9078\u3079\u307e\u3059\u304c\u3001\u4eca\u56de\u306fPython\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u69cb\u6210\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u76f4\u4e0b\u306bLambda\u95a2\u6570\u672c\u4f53\u53ca\u3073\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u914d\u7f6e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n$ tree -L 1\n.\n\u251c\u2500\u2500 amzorderer.py             # Lambda\u95a2\u6570\u672c\u4f53\n\u251c\u2500\u2500 phantomjs                 # PhantomJS\u30d0\u30a4\u30ca\u30ea\n\u251c\u2500\u2500 selenium                  # Python\u7528Selenium\u30e9\u30a4\u30d6\u30e9\u30ea\n\u2514\u2500\u2500 selenium-3.0.2.dist-info\n\n\u53c2\u8003: https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/lambda-python-how-to-create-deployment-package.html\n\nSelenium \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npip\u3092\u5229\u7528\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u76f4\u4e0b\u306bSelenium\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\npip install selenium -t /path/to/project-dir\n\n\nPhantomJS \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nPhantomJS\u306e\u516c\u5f0f\u3088\u308aLinux 64bit\u7248\u306etar\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001bin\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306ephantomjs\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u76f4\u4e0b\u306b\u914d\u7f6e\u3057\u307e\u3059\u3002\n\nLambda\u95a2\u6570\u306e\u4f5c\u6210\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3067\u3082\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\uff08\u8ffd\u3063\u3066\u516c\u958b\u4e88\u5b9a\uff09\n\namzorderer.py\n# -*- coding:utf-8 -*-\n\n__author__ = 'H.Takeda'\n__version__ = '1.0.0'\n\nimport os\nimport boto3\n\nfrom argparse import ArgumentParser\nfrom base64 import b64decode\nfrom selenium import webdriver\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n\n# Amazon top page url.\nAMAZON_URL = \"https://www.amazon.co.jp\"\n# Amazon user id (email).\nAMAZON_USER = boto3.client('kms').decrypt(\n    CiphertextBlob=b64decode(os.environ['user']))['Plaintext']\n# Amazon user password.\nAMAZON_PASS = boto3.client('kms').decrypt(\n    CiphertextBlob=b64decode(os.environ['password']))['Plaintext']\n# User agent.\nUSER_AGENT = \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/53 (KHTML, like Gecko) Chrome/15.0.87\"\n# Item dictionary.\nITEMS = {\n    \"01\": \"1fLhF7q\",    # Toilet Paper\n    \"02\": \"fhYcbp7\"     # Saran Wrap\n}\n\n\ndef lambda_handler(event, context):\n    # Create web driver for PhantomJS.\n    dcap = dict(DesiredCapabilities.PHANTOMJS)\n    dcap[\"phantomjs.page.settings.userAgent\"] = USER_AGENT\n    driver = webdriver.PhantomJS(desired_capabilities=dcap,\n                                 service_log_path=os.path.devnull,\n                                 executable_path=\"/var/task/phantomjs\")\n\n    # Get amazon top page.\n    driver.get(AMAZON_URL)\n    # Transition to sign in page.\n    driver.find_element_by_id(\"nav-link-yourAccount\").click()\n    # Input user id.\n    driver.find_element_by_id(\"ap_email\").send_keys(AMAZON_USER)\n    # Input user password.\n    driver.find_element_by_id(\"ap_password\").send_keys(AMAZON_PASS)\n    # Sign in.\n    driver.find_element_by_id(\"signInSubmit\").click()\n    # Select item.\n    driver.get(\"http://amzn.asia/\" + ITEMS[event[\"item\"]])\n    # Add to cart.\n    driver.find_element_by_id(\"add-to-cart-button\").click()\n    # Proceed to checkout.\n    driver.find_element_by_id(\"hlb-ptc-btn-native\").click()\n    # Order.\n    # driver.find_element_by_name(\"placeYourOrder1\")[0].click()\n    driver.save_screenshot(\"hoge.png\")\n    driver.quit()\n\n\n\n\u57fa\u672c\u7684\u306b\u30b7\u30f3\u30d7\u30eb\u306aSelenium\u306e\u64cd\u4f5c\u3092\u884c\u306a\u3063\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u304c\u3001\u30dd\u30a4\u30f3\u30c8\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\n\n\u95a2\u6570\u306e\u30a4\u30f3\u30d7\u30c3\u30c8\uff08event\uff09\u3068\u3057\u3066\u8cfc\u5165\u3059\u308b\u5546\u54c1\u306e\u533a\u5206\u5024\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\n\n\u533a\u5206\u5024\u300c01\u300d\u306e\u5834\u5408\u306f\u30c8\u30a4\u30ec\u30c3\u30c8\u30da\u30fc\u30d1\u30fc\n\n\u533a\u5206\u5024\u300c02\u300d\u306e\u5834\u5408\u306f\u30b5\u30e9\u30f3\u30e9\u30c3\u30d7\n\n\n\n\u30ed\u30b0\u30a4\u30f3ID\uff08Email\uff09\u3001\u30ed\u30b0\u30a4\u30f3\u30d1\u30b9\u30ef\u30fc\u30c9\u306fLambda\u306e\u74b0\u5883\u5909\u6570\u304b\u3089\u8907\u5408\u5316\u3057\u3066\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u30e6\u30fc\u30b6\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u8a2d\u5b9a\u3057\u306a\u3044\u3068Cookie\u3092\u6709\u52b9\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3068\u3044\u3046\u65e8\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u307e\u305b\u3093\u3002\nPhantomJS\u306e\u30ed\u30b0\uff08 ghostdriver.log \uff09\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4f5c\u6210\u3055\u308c\u308b\u306e\u3067\u51fa\u529b\u3057\u306a\u3044\uff08/dev/null\uff09\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u203bLambda\u4e0a\u3067\u52d5\u304b\u3059\u3068\u6a29\u9650\u30a8\u30e9\u30fc\u3067\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\u3067\u304d\u306a\u3044\u305f\u3081\u3002\n\n\nLambda\u95a2\u6570\u306e\u30c7\u30d7\u30ed\u30a4\n\n\u30a2\u30fc\u30ab\u30a4\u30d6\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092zip\u5316\u3057\u307e\u3059\u3002\nzip\u30d5\u30a1\u30a4\u30eb\u306e\u540d\u79f0\u306f\u9069\u5f53\u3067\u69cb\u3044\u307e\u305b\u3093\u3002\n$ zip -r upload.zip /path/to/project-dir/*\n\n\nLambda\u95a2\u6570\u8a2d\u5b9a\nAWS\u306e\u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u30dd\u30c1\u30dd\u30c1Lambda\u95a2\u6570\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\u4f5c\u6210\u3057\u305fzip\u30d5\u30a1\u30a4\u30eb\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3082\u3053\u3053\u3067\u884c\u3044\u307e\u3059\u3002\n\n\n\u74b0\u5883\u5909\u6570\u306b\u300cuser\u300d\u3068\u300cpassword\u300d\u3092\u5b9a\u7fa9\u3057\u3001IAM\u306b\u3066\u3042\u3089\u304b\u3058\u3081\u4f5c\u6210\u3057\u3066\u304a\u3044\u305f\u6697\u53f7\u9375\uff08lambda/amzorderer\uff09\u3067\u6697\u53f7\u5316\u3057\u307e\u3059\u3002\nIAM\u306b\u3066Lambda\u95a2\u6570\u306b\u4ed8\u4e0e\u3059\u308b\u30ed\u30fc\u30eb\u306f\u3042\u3089\u304b\u3058\u3081\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u30e1\u30e2\u30ea\u306f128MB\u3060\u3068\u82e6\u3057\u304b\u3063\u305f\u306e\u3067256MB\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nLambda\u95a2\u6570\u30c6\u30b9\u30c8\nActions > Configure test event\u3088\u308a\u30c6\u30b9\u30c8\u30a4\u30d9\u30f3\u30c8\uff08Lambda\u95a2\u6570\u306b\u5f15\u304d\u6e21\u3059\u30d1\u30e9\u30e1\u30fc\u30bf\uff09\u3092\u8a2d\u5b9a\u3057\u3001\nTest\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u3066Lambda\u95a2\u6570\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\u6b63\u5e38\u306b\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308c\u3070OK\u3067\u3059\u3002\n\u3053\u3053\u307e\u3067\u3067Amazon\u3067\u81ea\u52d5\u8cfc\u5165\u3092\u884c\u3046Lambda\u95a2\u6570\u306e\u4f5c\u6210\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n2. AWS IoT\u306e\u8a2d\u5b9a\n\u3053\u306e\u7ae0\u3067\u306fAWS IoT\u3092\u5229\u7528\u3057\u3066\u3001MQTT\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u4ed8\u3051\u3001\u4e0a\u3067\u4f5c\u6210\u3057\u305fLambda\u95a2\u6570\u3092\u547c\u51fa\u3059\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\nAWS IoT\u3068\u306f?\nhttps://aws.amazon.com/jp/iot/how-it-works/\nAWS IoT\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3055\u307e\u3056\u307e\u306a\u30c7\u30d0\u30a4\u30b9\u3092AWS\u306e\u5404\u7a2e\u30b5\u30fc\u30d3\u30b9\u306b\u63a5\u7d9a\u3057\u3001\u30c7\u30fc\u30bf\u3068\u901a\u4fe1\u3092\u4fdd\u8b77\u3057\u3001\u30c7\u30d0\u30a4\u30b9\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u51e6\u7406\u3084\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30c7\u30d0\u30a4\u30b9\u306e\u767b\u9332\nAWS IoT\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u753b\u9762\u3088\u308aAWS IoT\u306b\u63a5\u7d9a\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u306e\u767b\u9332\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u300cGet started\u300d\u3088\u308a\u767b\u9332\u753b\u9762\u3078\u9032\u307f\u307e\u3059\u3002\n\n\n\u3000\n2. \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30c7\u30d0\u30a4\u30b9\u306e\u74b0\u5883\u60c5\u5831\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u4eca\u56de\u306fRaspberry Pi Zero\uff08OS:Raspbian\uff09\u304b\u3089Python SDK\u3092\u5229\u7528\u3057\u3066AWS IoT\u3078\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n\u3000\n3. \u4efb\u610f\u306e\u30c7\u30d0\u30a4\u30b9\u540d\uff08\u3053\u3053\u3067\u306fraspi0\uff09\u3092\u5165\u529b\u3057\u300cNext step\u300d\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002\n\n\u3000\n4. \u300cLiux/OSX\u300d\u3092\u62bc\u4e0b\u3057\u3066\u3001\u516c\u958b\u9375\u3001\u79d8\u5bc6\u9375\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u304d\u307e\u3059\uff08\u5f8c\u3067\u4f7f\u3044\u307e\u3059\uff09\u3002\u300cNext step\u300d\u3092\u62bc\u4e0b\u3057\u3066\u6b21\u753b\u9762\u3078\u9032\u307f\u307e\u3059\u3002\n\n\u3000\n5. \u30c7\u30d0\u30a4\u30b9\u306e\u8a2d\u5b9a\u624b\u9806\u304c\u51fa\u3066\u304f\u308b\u306e\u3067\u3001\u300cDone\u300d\u3092\u62bc\u4e0b\u3057\u3066\u5b8c\u4e86\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u30eb\u30fc\u30eb\u306e\u767b\u9332\n\u7279\u5b9a\u306e\u30c8\u30d4\u30c3\u30af\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304cPublish\u3055\u308c\u305f\u3089\u3001Lambda\u95a2\u6570\u3092\u547c\u51fa\u3059\u3088\u3046\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\u300cCreate a rule\u300d\u3088\u308a\u767b\u9332\u753b\u9762\u3078\u9032\u307f\u307e\u3059\u3002\n\n\n\u3000\n2. \u4efb\u610f\u306e\u30eb\u30fc\u30eb\u540d\uff08\u3053\u3053\u3067\u306famzorderer\uff09\u3092\u5165\u529b\u3057\u3001\u30eb\u30fc\u30eb\u30af\u30a8\u30ea\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u300camzordere\u300d\u30c8\u30d4\u30c3\u30af\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304cPublish\u3055\u308c\u305f\u5834\u5408\u3001item\u5c5e\u6027\u306e\u5024\u3092\u62bd\u51fa\u3057\u3001Action\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\u3000\n3. Action\u3068\u3057\u3066Lambda\u95a2\u6570\u306e\u547c\u51fa\u3057\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n\u3000\n4. \u547c\u3073\u51fa\u3059\u95a2\u6570\u306f\u5148\u307b\u3069\u4f5c\u6210\u3057\u305f\u300camzorderer\u300d\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u3000\n5. \u300cCreate rule\u300d\u3092\u62bc\u4e0b\u3057\u3066\u4f5c\u6210\u5b8c\u4e86\u3068\u306a\u308a\u307e\u3059\u3002\n\n\n3. \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30c7\u30d0\u30a4\u30b9\u306e\u4f5c\u6210\n\u3053\u306e\u7ae0\u3067\u306fRaspberry Pi\u3092\u5229\u7528\u3057\u3066\u30dc\u30bf\u30f3\u3092\u6301\u3064\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30c7\u30d0\u30a4\u30b9\u306e\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nRaspberry Pi Zero\u3068\u306f\n\u8a00\u308f\u305a\u3068\u77e5\u308c\u305f\u30e9\u30ba\u30d1\u30a4\u306e\u5c0f\u578b\u30e2\u30c7\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\nCPU\u30af\u30ed\u30c3\u30af1GHz\u3001\u30e1\u30e2\u30ea512MB\u3067\u7d045\u30c9\u30eb\u3068\u7834\u683c\u306e\u4fa1\u683c\u8a2d\u5b9a\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3053\u306eRaspberry Pi Zero\u3092\u5229\u7528\u3057\u3066\u3001\n\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3089AWS IoT\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308b\u30c7\u30d0\u30a4\u30b9\u3092\u4f5c\u3063\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5fc5\u8981\u306a\u3082\u306e\n\u3069\u306e\u3054\u5bb6\u5ead\u306b\u3082\u3042\u308b\u57fa\u672c\u7684\u306a\u96fb\u5b50\u5de5\u4f5c\u90e8\u54c1\u3092\u3064\u304b\u3063\u3066\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n\nRaspberry Pi Zero\nGPIO\u30d4\u30f3\n\u30d6\u30ec\u30c3\u30c8\u30dc\u30fc\u30c9\n\u62b5\u6297\uff0810K\u03a9\uff09\n\u30bf\u30af\u30c8\u30b9\u30a4\u30c3\u30c1\n\u30b8\u30e3\u30f3\u30d1\u30ef\u30a4\u30e4\uff08\u30aa\u30b9-\u30e1\u30b9\uff09\u00d7 3\n\u7121\u7ddaLAN\u5b50\u6a5f\n\u306f\u3093\u3060\uff080.6mm\u63a8\u5968\uff09\nminiUSB\u5909\u63db\u30b1\u30fc\u30d6\u30eb\n\nminiUSB \u306e\u7aef\u5b50\u304c\u4e00\u3064\u3057\u304b\u306a\u3044\u306e\u3067USB\u30cf\u30d6\u304c\u3042\u308b\u3068\u521d\u671f\u8a2d\u5b9a\u6642\u306f\u4fbf\u5229\u3067\u3059\u3002\n\nRaspberry Pi \u306e\u521d\u671f\u8a2d\u5b9a\uff08OS\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff09\n\u3053\u3053\u3089\u8fba\u3092\u53c2\u8003\u306bRaspbian(Jessie)\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n\u7121\u7ddaLAN\u63a5\u7d9a\n\u4eca\u56de\u306fBuffalo\u306e\u7121\u7dda\u5b50\u6a5f\u3092\u5229\u7528\u3057\u3066Raspberry Pi Zero\u3092\u7121\u7ddaLAN\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\nUSB\u306b\u7121\u7ddaLAN\u5b50\u6a5f\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002\nlsusb \u30b3\u30de\u30f3\u30c9\u3092\u6253\u3064\u3068\u5b50\u6a5f\u3092\u8a8d\u8b58\u3057\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u306d\u3002\n$ lsusb\nBus 001 Device 002: ID 0411:01a2 BUFFALO INC. (formerly MelCo., Inc.) WLI-UC-GNM Wireless LAN Adapter [Ralink RT8070]\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n\nwpa_passphrase \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3044\u3001\u7121\u7ddaLAN\u63a5\u7d9a\u306b\u5fc5\u8981\u306aSSID\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n$ wpa_passphrase [SSID] [\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba]\nnetwork={\n        ssid=[SSID]\n        #psk=[\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba] <- \u3053\u306e\u884c\u306f\u524a\u9664\u3057\u3066\u69cb\u3044\u307e\u305b\u3093\n        psk=[\u6697\u53f7\u5316\u3055\u308c\u305f\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba]\n}\n\n\u4e0a\u8a18\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u3001/etc/wpa_supplicant/wpa_supplicant.conf \u306b\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n/etc/wpa_supplicant/wpa_supplicant.conf\ncountry=GB\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\nnetwork={\n        ssid=[SSID]\n        psk=[\u6697\u53f7\u5316\u3055\u308c\u305f\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba]\n}\n\n\n/etc/dhcpcd.conf \u3092\u7de8\u96c6\u3057\u3001\u56fa\u5b9aIP\u5316\u3082\u884c\u306a\u3063\u3066\u304a\u304d\u307e\u3059\u3002\nIP\u30a2\u30c9\u30ec\u30b9\u3001\u30eb\u30fc\u30bf\u30fc\u3001DNS\u306f\u9069\u5b9c\u81ea\u5206\u306e\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\ninterface wlan0\nstatic ip_address=192.168.11.30/24\nstatic routers=192.168.11.1\nstatic domain_name_servers=192.168.11.1\n\n\u518d\u8d77\u52d5\u3057\u3066\u3001\u6bcd\u8266\u304b\u3089SSH\u63a5\u7d9a\u3067\u304d\u308c\u3070\u8a2d\u5b9a\u5b8c\u4e86\u3067\u3059\u3002\n$ sudo shutdown -r now\n\n\nGPIO\u306e\u30cf\u30f3\u30c0\u4ed8\u3051\n\u4ed6\u306e\u30e2\u30c7\u30eb\u3068\u9055\u3044Raspberry Pi Zero\u3067GPIO\u3092\u4f7f\u3046\u5834\u5408\u306f\u30cf\u30f3\u30c0\u4ed8\u3051\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002\n\u601d\u3063\u305f\u3088\u308a\u7d30\u304b\u3044\u4f5c\u696d\u306b\u306a\u308b\u306e\u3067\u30cf\u30f3\u30c0\u306e\u7dda\u5f62\u306f\u03c60.6mm\u306e\u3082\u306e\u3092\u4f7f\u3046\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\n\u56de\u8def\u3092\u7d44\u3080\n\u6b63\u76f4\u96fb\u5b50\u5de5\u4f5c\u306f\u3069\u7d20\u4eba\u3067\u3059\u304c\u3001\u30cd\u30c3\u30c8\u3067\u8abf\u3079\u305f\u60c5\u5831\u3092\u53c2\u8003\u306b\u7d44\u3093\u3067\u3044\u304d\u307e\u3059\u3002\nRaspberry Pi Zero\u306eGPIO\u306e\u914d\u7f6e\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n1\u756a\u304b\u30893.3V\u306e\u96fb\u6e90\u3092\u3068\u308a\u3001GPIO25\u30bf\u30af\u30c8\u30b9\u30a4\u30c3\u30c1\u306eON/OFF\u306fGPIO9\u756a\u3067\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\nGPIO25\u3068GND\u306e\u9593\u306b10k\u30aa\u30fc\u30e0\u306e\u62b5\u6297\u3092\u5165\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u30d7\u30eb\u30c0\u30a6\u30f3\u62b5\u6297\u3068\u547c\u3070\u308cHIGH(3.3V)\u304bLOW(0V)\u4fe1\u53f7\u3092\u78ba\u5b9f\u306b\u4f1d\u3048\u308b\u5f79\u5272\u3092\u62c5\u3044\u307e\u3059\u3002\n\u753b\u50cf\u304c\u5206\u304b\u308a\u3065\u3089\u304f\u3066\u3059\u307f\u307e\u305b\u3093\u3002\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3059\u308b\n\u56de\u8def\u304c\u7d44\u3081\u305f\u306e\u3067\u30bf\u30af\u30c8\u30b9\u30a4\u30c3\u30c1\u306e\u5165\u529b\u3092\u53d7\u53d6\u308a\u3001AWS IoT\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092Publish\u3059\u308b\u30d7\u30ed\u30d5\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30e9\u30f3\u30bf\u30a4\u30e0\nRaspbian(Jessie)\u306b\u306fPython2.7\u304c\u30a4\u30f3\u30b9\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001Python\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n$ python -V\nPython 2.7.9\n\n\n\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nAWS IoT\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306ePythonSDK\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u5229\u7528\u3057\u307e\u3059\u3002\n$ sudo pip install AWSIoTPythonSDK\n\n\n\u5b9f\u88c5\n\npublisher.py\n# -*- coding:utf-8 -*-\n\n__author__ = 'H.Takeda'\n__version__ = '1.0.0'\n\n\nfrom AWSIoTPythonSDK.MQTTLib import AWSIoTMQTTClient\nfrom argparse import ArgumentParser\nimport json\nimport logging\nimport RPi.GPIO as GPIO\nimport signal\nimport sys\nimport time\n\n\ndef configure_logging():\n    # Configure logging\n    logger = logging.getLogger(\"AWSIoTPythonSDK.core\")\n    logger.setLevel(logging.DEBUG)\n    streamHandler = logging.StreamHandler()\n    formatter = logging.Formatter(\n        '%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    streamHandler.setFormatter(formatter)\n    logger.addHandler(streamHandler)\n\n\ndef parse():\n    argparser = ArgumentParser()\n    argparser.add_argument(\"-e\", \"--endpoint\", type=str, required=True)\n    argparser.add_argument(\"-r\", \"--rootCA\", type=str, required=True)\n    argparser.add_argument(\"-c\", \"--cert\", type=str, required=True)\n    argparser.add_argument(\"-k\", \"--key\", type=str, required=True)\n    args = argparser.parse_args()\n    return vars(args)\n\n\ndef careate_client(endpoint, root_ca, cert, private_pey):\n    # For certificate based connection.\n    client = AWSIoTMQTTClient(\"raspi0\")\n    # Configurations\n    client.configureEndpoint(endpoint, 8883)\n    client.configureCredentials(root_ca, private_pey, cert)\n    client.configureOfflinePublishQueueing(1)\n    client.configureConnectDisconnectTimeout(10)    # 10 sec\n    client.configureMQTTOperationTimeout(5)         # 5 sec\n    return client\n\n\ndef handler(signum, frame):\n    print \"Signal handler called with signal\", signum\n    client.disconnect()\n    GPIO.cleanup()\n    sys.exit(0)\n\n\nif __name__ == '__main__':\n    # Parse command-line arguments.\n    args = parse()\n    # Configure logging\n    configure_logging()\n    # Create mqtt client.\n    client = careate_client(\n        args[\"endpoint\"], args[\"rootCA\"], args[\"cert\"], args[\"key\"])\n    # Connect.\n    client.connect()\n\n    signal.signal(signal.SIGINT, handler)\n    GPIO.setmode(GPIO.BCM)\n    GPIO.setup(9, GPIO.IN)\n    before = 0\n    while True:\n        now = GPIO.input(9)\n        if before == 0 and now == 1:\n            # Create message.\n            message = {\"item\": \"01\"}\n            # Publish.\n            client.publish(\"amzorderer\", json.dumps(message), 0)\n            print \"message published.\"\n        time.sleep(0.1)\n        before = now\n\n\n\nRPi.GPIO \u3092\u5229\u7528\u3057\u3066GPIO9\u756a\u306b\u5165\u529b\u304c\u3042\u3063\u305f\u5834\u5408\u306bAWS IoT\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\uff08\u30c8\u30a4\u30ec\u30c3\u30c8\u30da\u30fc\u30d1\u30fc\u3092\u8cfc\u5165\u3059\u308b\u305f\u3081\u306e\u30a2\u30a4\u30c6\u30e0\u533a\u5206\u5024\u300c01\u300d\uff09\u3092Publish\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u52d5\u4f5c\u78ba\u8a8d\nRapsberry Pi Zero\u4e0a\u3067\u4e0a\u8a18\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3057\u3001\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5f15\u6570\u306bAWS IoT\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3001\u30eb\u30fc\u30c8CA\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u3001\u79d8\u5bc6\u9375\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nAWS IoT SDK\u306eREADME\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u30eb\u30fc\u30c8CA\u306f\u3053\u3061\u3089\u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u3068\u306f\u79d8\u5bc6\u9375\u306fAWS IoT\u306e\u8a2d\u5b9a\u6642\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fzip\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n$ python test.py -e <endpoint> -r <rootCA path> -c <certificate path> -k <private key path>\n2016-12-11 08:15:31,661 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Paho MQTT Client init.\n2016-12-11 08:15:31,664 - AWSIoTPythonSDK.core.protocol.mqttCore - INFO - ClientID: raspi0\n2016-12-11 08:15:31,667 - AWSIoTPythonSDK.core.protocol.mqttCore - INFO - Protocol: MQTTv3.1.1\n2016-12-11 08:15:31,672 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Register Paho MQTT Client callbacks.\n2016-12-11 08:15:31,675 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - mqttCore init.\n2016-12-11 08:15:31,680 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Load CAFile from: root-CA.crt\n2016-12-11 08:15:31,683 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Load Key from: raspi0.private.key\n2016-12-11 08:15:31,687 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Load Cert from: raspi0.cert.pem\n2016-12-11 08:15:31,691 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Custom setting for publish queueing: queueSize = 1\n2016-12-11 08:15:31,696 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Custom setting for publish queueing: dropBehavior = Drop Newest\n2016-12-11 08:15:31,699 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Set maximum connect/disconnect timeout to be 10 second.\n2016-12-11 08:15:31,704 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Set maximum MQTT operation timeout to be 5 second\n2016-12-11 08:15:31,710 - AWSIoTPythonSDK.core.protocol.mqttCore - INFO - Connection type: TLSv1.2 Mutual Authentication\n2016-12-11 08:15:32,384 - AWSIoTPythonSDK.core.protocol.mqttCore - INFO - Connected to AWS IoT.\n2016-12-11 08:15:32,386 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Connect time consumption: 70.0ms.\n\n\u30bf\u30af\u30c8\u30b9\u30a4\u30c3\u30c1\u3092\u62bc\u3059\u3068\u3001AWS IoT\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304cPublish\u3055\u308c\u7121\u4e8b\u306bAmazon\u3067\u300c\u30c8\u30a4\u30ec\u30c3\u30c8\u30da\u30fc\u30d1\u30fc\u300d\u306e\u8cfc\u5165\u304c\u5b8c\u4e86\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\n\u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30c7\u30d0\u30a4\u30b9\u306e\u5c0f\u578b\u5316\n\u4eca\u56de\u96fb\u6e90\u306f\u30e2\u30d0\u30a4\u30eb\u30d0\u30c3\u30c6\u30ea\u30fc\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30ea\u30c1\u30a6\u30e0\u30dd\u30ea\u30de\u30fc\u3092\u5229\u7528\u3057\u3066\u5c0f\u578b\u5316\u3057\u305f\u3044\u3002\u30d6\u30ec\u30c3\u30c8\u30dc\u30fc\u30c9\u3082\u5c0f\u3055\u3044\u3082\u306e\u3092\u5229\u7528\u3057\u305f\u3044\u3002\n\u8907\u6570\u30dc\u30bf\u30f3\u5bfe\u5fdc\n\u30dc\u30bf\u30f3\u2460\u3092\u62bc\u3057\u305f\u3068\u304d\u306f\u30c8\u30a4\u30ec\u30c3\u30c8\u30da\u30fc\u30d1\u30fc\u3001\u30dc\u30bf\u30f3\u2461\u3092\u62bc\u3057\u305f\u3068\u304d\u306f\u30b5\u30e9\u30f3\u30e9\u30c3\u30d7\u3092\u8cfc\u5165\u3068\u3044\u3046\u3088\u3046\u306b\u3001\u8907\u6570\u30dc\u30bf\u30f3\u8a2d\u3051\u305f\u3044\u3002\n\u30dc\u30bf\u30f3\u306e\u30b1\u30fc\u30b9\u4f5c\u6210\n\n![DashButtonCover.jpg](https://qiita-image-store.s3.amazonaws.com/0/42275/09328d52-d34d-0454-731b-aecea5f21210.jpeg \"DashButtonCover.jpg\")\n\n# \u6982\u8981\n\n\u5148\u65e5\u300c[Amazon Dash Button](https://www.amazon.co.jp/b?ie=UTF8&node=4752863051)\u300d\u304c\u3064\u3044\u306b\u65e5\u672c\u3067\u3082\u767a\u58f2\u306b\u306a\u308a\u307e\u3057\u305f\u306d\u3002\n\u3053\u308c\u3001\u8981\u306f\u30dc\u30bf\u30f3\u3092\u30dd\u30c1\u30c3\u3068\u62bc\u3059\u3068\u5bfe\u8c61\u306e\u5546\u54c1\u304cAmazon\u3067\u81ea\u52d5\u6ce8\u6587\u3055\u308c\u3066\u81ea\u5b85\u306b\u5c4a\u304f\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u4eca\u56de\u306f\u3053\u308c\u3092\u81ea\u4f5c\u3057\u3061\u3083\u304a\u3046\uff01\u3068\u3044\u3046\u65e8\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u308f\u304b\u308b\u4eba\u306f\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u6b63\u78ba\u306b\u306f\u300cAmazon Dash Button\u300d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u53ef\u80fd\u7248\u3068\u306a\u308b\u300c[AWS IoT Button](https://aws.amazon.com/jp/iot/button/)\u300d\u3068\u3044\u3046\u65b9\u304c\u8fd1\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u203b\u8a71\u984c\u306b\u306e\u3063\u3066\u30bf\u30a4\u30c8\u30eb\u306f\u300cAmazon Dash Button\u300d\u3068\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n# \u5168\u4f53\u69cb\u6210\n\n\u5168\u4f53\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\n![\u5168\u4f53\u69cb\u6210.png](https://qiita-image-store.s3.amazonaws.com/0/42275/bffbdbb9-55d9-facb-9ce6-da01d32071ff.png)\n\n\n1. Raspberry Pi Zero\u306b\u53d6\u308a\u4ed8\u3051\u305f\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068MQTT\u7d4c\u7531\u3067AWS IoT\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\n2. AWS IoT\u306e\u30eb\u30fc\u30eb\u30a8\u30f3\u30b8\u30f3\u306b\u3088\u308aAWS Lambda\u3078\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\n3. Lambda\u95a2\u6570\u3067\u306fSelenium + PhantomJS\u3088\u308aAmazon\u306eWeb\u30b5\u30a4\u30c8\u3092\u30af\u30ed\u30fc\u30ea\u30f3\u30b0\u3057\u3001\u6307\u5b9a\u306e\u5546\u54c1\u3092\u8cfc\u5165\u3057\u307e\u3059\u3002\n\n\u51e6\u7406\u306e\u5f8c\u308d\u304b\u3089\uff083 -> 2 -> 1\u306e\u9806\u306b\uff09\u8a73\u7d30\u306b\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n# 1. Amazon\u3067\u81ea\u52d5\u8cfc\u5165\u3092\u884c\u3046Lambda\u95a2\u6570\u306e\u4f5c\u6210\n\n\u3053\u306e\u7ae0\u3067\u306fSelenium\u3068PhantomJS\u3092\u5229\u7528\u3057\u3066Amazon\u306eWeb\u30b5\u30a4\u30c8\u3092\u30af\u30ed\u30fc\u30ea\u30f3\u30b0\u3057\u3001\u6307\u5b9a\u306e\u5546\u54c1\u3092\u81ea\u52d5\u8cfc\u5165\u3059\u308bLambda\u95a2\u6570\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n## AWS Lambda\u3068\u306f?\n\nhttp://docs.aws.amazon.com/ja_jp/lambda/latest/dg/welcome.html\nAWS Lambda\u306f\u30b3\u30fc\u30c9\u3092AWS Lambda\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d3\u30b9\u304cAWS\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u3092\u4f7f\u7528\u3057\u3066\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\u3092\u4ee3\u884c\u3059\u308b\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30b5\u30fc\u30d3\u30b9\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u30e9\u30f3\u30bf\u30a4\u30e0\u306b\u306fJava, Node.js, Python, C#\u304c\u9078\u3079\u307e\u3059\u304c\u3001\u4eca\u56de\u306fPython\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n## \u30d1\u30c3\u30b1\u30fc\u30b8\u69cb\u6210\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u76f4\u4e0b\u306bLambda\u95a2\u6570\u672c\u4f53\u53ca\u3073\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u914d\u7f6e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n```\n$ tree -L 1\n.\n\u251c\u2500\u2500 amzorderer.py\t\t\t\t# Lambda\u95a2\u6570\u672c\u4f53\n\u251c\u2500\u2500 phantomjs\t\t\t\t\t# PhantomJS\u30d0\u30a4\u30ca\u30ea\n\u251c\u2500\u2500 selenium\t\t\t\t\t# Python\u7528Selenium\u30e9\u30a4\u30d6\u30e9\u30ea\n\u2514\u2500\u2500 selenium-3.0.2.dist-info\n```\n\n\u53c2\u8003: https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/lambda-python-how-to-create-deployment-package.html\n\n## Selenium \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\npip\u3092\u5229\u7528\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u76f4\u4e0b\u306bSelenium\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```\npip install selenium -t /path/to/project-dir\n```\n\n## PhantomJS \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nPhantomJS\u306e[\u516c\u5f0f](http://phantomjs.org/download.html)\u3088\u308aLinux 64bit\u7248\u306etar\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001bin\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306ephantomjs\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u76f4\u4e0b\u306b\u914d\u7f6e\u3057\u307e\u3059\u3002\n\n## Lambda\u95a2\u6570\u306e\u4f5c\u6210\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3067\u3082\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\uff08\u8ffd\u3063\u3066\u516c\u958b\u4e88\u5b9a\uff09\n\n```python:amzorderer.py\n# -*- coding:utf-8 -*-\n\n__author__ = 'H.Takeda'\n__version__ = '1.0.0'\n\nimport os\nimport boto3\n\nfrom argparse import ArgumentParser\nfrom base64 import b64decode\nfrom selenium import webdriver\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n\n# Amazon top page url.\nAMAZON_URL = \"https://www.amazon.co.jp\"\n# Amazon user id (email).\nAMAZON_USER = boto3.client('kms').decrypt(\n    CiphertextBlob=b64decode(os.environ['user']))['Plaintext']\n# Amazon user password.\nAMAZON_PASS = boto3.client('kms').decrypt(\n    CiphertextBlob=b64decode(os.environ['password']))['Plaintext']\n# User agent.\nUSER_AGENT = \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/53 (KHTML, like Gecko) Chrome/15.0.87\"\n# Item dictionary.\nITEMS = {\n    \"01\": \"1fLhF7q\",    # Toilet Paper\n    \"02\": \"fhYcbp7\"     # Saran Wrap\n}\n\n\ndef lambda_handler(event, context):\n    # Create web driver for PhantomJS.\n    dcap = dict(DesiredCapabilities.PHANTOMJS)\n    dcap[\"phantomjs.page.settings.userAgent\"] = USER_AGENT\n    driver = webdriver.PhantomJS(desired_capabilities=dcap,\n                                 service_log_path=os.path.devnull,\n                                 executable_path=\"/var/task/phantomjs\")\n\n    # Get amazon top page.\n    driver.get(AMAZON_URL)\n    # Transition to sign in page.\n    driver.find_element_by_id(\"nav-link-yourAccount\").click()\n    # Input user id.\n    driver.find_element_by_id(\"ap_email\").send_keys(AMAZON_USER)\n    # Input user password.\n    driver.find_element_by_id(\"ap_password\").send_keys(AMAZON_PASS)\n    # Sign in.\n    driver.find_element_by_id(\"signInSubmit\").click()\n    # Select item.\n    driver.get(\"http://amzn.asia/\" + ITEMS[event[\"item\"]])\n    # Add to cart.\n    driver.find_element_by_id(\"add-to-cart-button\").click()\n    # Proceed to checkout.\n    driver.find_element_by_id(\"hlb-ptc-btn-native\").click()\n    # Order.\n    # driver.find_element_by_name(\"placeYourOrder1\")[0].click()\n    driver.save_screenshot(\"hoge.png\")\n    driver.quit()\n\n```\n\n\u57fa\u672c\u7684\u306b\u30b7\u30f3\u30d7\u30eb\u306aSelenium\u306e\u64cd\u4f5c\u3092\u884c\u306a\u3063\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u304c\u3001\u30dd\u30a4\u30f3\u30c8\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\n\n* \u95a2\u6570\u306e\u30a4\u30f3\u30d7\u30c3\u30c8\uff08event\uff09\u3068\u3057\u3066\u8cfc\u5165\u3059\u308b\u5546\u54c1\u306e\u533a\u5206\u5024\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n    * \u533a\u5206\u5024\u300c01\u300d\u306e\u5834\u5408\u306f[\u30c8\u30a4\u30ec\u30c3\u30c8\u30da\u30fc\u30d1\u30fc](http://amzn.asia/j6S0lwI)\n    * \u533a\u5206\u5024\u300c02\u300d\u306e\u5834\u5408\u306f[\u30b5\u30e9\u30f3\u30e9\u30c3\u30d7](http://amzn.asia/fhYcbp7)\n* \u30ed\u30b0\u30a4\u30f3ID\uff08Email\uff09\u3001\u30ed\u30b0\u30a4\u30f3\u30d1\u30b9\u30ef\u30fc\u30c9\u306fLambda\u306e\u74b0\u5883\u5909\u6570\u304b\u3089\u8907\u5408\u5316\u3057\u3066\u53d6\u5f97\u3057\u307e\u3059\u3002\n* \u30e6\u30fc\u30b6\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u8a2d\u5b9a\u3057\u306a\u3044\u3068Cookie\u3092\u6709\u52b9\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3068\u3044\u3046\u65e8\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u307e\u305b\u3093\u3002\n* PhantomJS\u306e\u30ed\u30b0\uff08 `ghostdriver.log` \uff09\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4f5c\u6210\u3055\u308c\u308b\u306e\u3067\u51fa\u529b\u3057\u306a\u3044\uff08/dev/null\uff09\u3088\u3046\u306b\u3057\u307e\u3059\u3002  \n\u203bLambda\u4e0a\u3067\u52d5\u304b\u3059\u3068\u6a29\u9650\u30a8\u30e9\u30fc\u3067\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\u3067\u304d\u306a\u3044\u305f\u3081\u3002\n\n## Lambda\u95a2\u6570\u306e\u30c7\u30d7\u30ed\u30a4\n\n### \u30a2\u30fc\u30ab\u30a4\u30d6\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092zip\u5316\u3057\u307e\u3059\u3002\nzip\u30d5\u30a1\u30a4\u30eb\u306e\u540d\u79f0\u306f\u9069\u5f53\u3067\u69cb\u3044\u307e\u305b\u3093\u3002\n\n```bash\n$ zip -r upload.zip /path/to/project-dir/*\n```\n\n### Lambda\u95a2\u6570\u8a2d\u5b9a\n\nAWS\u306e\u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u30dd\u30c1\u30dd\u30c1Lambda\u95a2\u6570\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\u4f5c\u6210\u3057\u305fzip\u30d5\u30a1\u30a4\u30eb\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3082\u3053\u3053\u3067\u884c\u3044\u307e\u3059\u3002\n\n![Lambda Management Console.png](https://qiita-image-store.s3.amazonaws.com/0/42275/6543fa89-5e13-7e28-98c1-46dbcdfa063e.png \"Lambda Management Console.png\")\n\n* \u74b0\u5883\u5909\u6570\u306b\u300cuser\u300d\u3068\u300cpassword\u300d\u3092\u5b9a\u7fa9\u3057\u3001IAM\u306b\u3066\u3042\u3089\u304b\u3058\u3081\u4f5c\u6210\u3057\u3066\u304a\u3044\u305f\u6697\u53f7\u9375\uff08lambda/amzorderer\uff09\u3067\u6697\u53f7\u5316\u3057\u307e\u3059\u3002\n* IAM\u306b\u3066Lambda\u95a2\u6570\u306b\u4ed8\u4e0e\u3059\u308b\u30ed\u30fc\u30eb\u306f\u3042\u3089\u304b\u3058\u3081\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n* \u30e1\u30e2\u30ea\u306f128MB\u3060\u3068\u82e6\u3057\u304b\u3063\u305f\u306e\u3067256MB\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n## Lambda\u95a2\u6570\u30c6\u30b9\u30c8\n\nActions > Configure test event\u3088\u308a\u30c6\u30b9\u30c8\u30a4\u30d9\u30f3\u30c8\uff08Lambda\u95a2\u6570\u306b\u5f15\u304d\u6e21\u3059\u30d1\u30e9\u30e1\u30fc\u30bf\uff09\u3092\u8a2d\u5b9a\u3057\u3001\nTest\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u3066Lambda\u95a2\u6570\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n![Lambda Management Console2.png](https://qiita-image-store.s3.amazonaws.com/0/42275/45cb94f4-69f6-6e4d-607d-ce7e96aefad3.png \"Lambda Management Console2.png\")\n\n\u6b63\u5e38\u306b\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308c\u3070OK\u3067\u3059\u3002\n\u3053\u3053\u307e\u3067\u3067Amazon\u3067\u81ea\u52d5\u8cfc\u5165\u3092\u884c\u3046Lambda\u95a2\u6570\u306e\u4f5c\u6210\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n# 2. AWS IoT\u306e\u8a2d\u5b9a\n\n\u3053\u306e\u7ae0\u3067\u306fAWS IoT\u3092\u5229\u7528\u3057\u3066\u3001MQTT\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u4ed8\u3051\u3001\u4e0a\u3067\u4f5c\u6210\u3057\u305fLambda\u95a2\u6570\u3092\u547c\u51fa\u3059\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\n## AWS IoT\u3068\u306f?\n\nhttps://aws.amazon.com/jp/iot/how-it-works/\nAWS IoT\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3055\u307e\u3056\u307e\u306a\u30c7\u30d0\u30a4\u30b9\u3092AWS\u306e\u5404\u7a2e\u30b5\u30fc\u30d3\u30b9\u306b\u63a5\u7d9a\u3057\u3001\u30c7\u30fc\u30bf\u3068\u901a\u4fe1\u3092\u4fdd\u8b77\u3057\u3001\u30c7\u30d0\u30a4\u30b9\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u51e6\u7406\u3084\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u30c7\u30d0\u30a4\u30b9\u306e\u767b\u9332\n\nAWS IoT\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u753b\u9762\u3088\u308aAWS IoT\u306b\u63a5\u7d9a\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u306e\u767b\u9332\u3092\u884c\u3044\u307e\u3059\u3002\n\n1. \u300cGet started\u300d\u3088\u308a\u767b\u9332\u753b\u9762\u3078\u9032\u307f\u307e\u3059\u3002\n\n![AWS IoT0.png](https://qiita-image-store.s3.amazonaws.com/0/42275/8311e395-561d-7361-ee0f-7d37e3e65d56.png \"AWS IoT0.png\")\n\u3000\n2. \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30c7\u30d0\u30a4\u30b9\u306e\u74b0\u5883\u60c5\u5831\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u4eca\u56de\u306fRaspberry Pi Zero\uff08OS:Raspbian\uff09\u304b\u3089Python SDK\u3092\u5229\u7528\u3057\u3066AWS IoT\u3078\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n![AWS IoT4.png](https://qiita-image-store.s3.amazonaws.com/0/42275/d4f5caf2-332a-c14e-f74c-4b69df8e1ed7.png \"AWS IoT4.png\")\n\u3000\n3. \u4efb\u610f\u306e\u30c7\u30d0\u30a4\u30b9\u540d\uff08\u3053\u3053\u3067\u306fraspi0\uff09\u3092\u5165\u529b\u3057\u300cNext step\u300d\u3092\u62bc\u4e0b\u3057\u307e\u3059\u3002\n\n![AWS IoT5.png](https://qiita-image-store.s3.amazonaws.com/0/42275/9f0202c2-791c-889c-f2de-ecc8904f921f.png \"AWS IoT5.png\")\n\u3000\n4. \u300cLiux/OSX\u300d\u3092\u62bc\u4e0b\u3057\u3066\u3001\u516c\u958b\u9375\u3001\u79d8\u5bc6\u9375\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u304d\u307e\u3059\uff08\u5f8c\u3067\u4f7f\u3044\u307e\u3059\uff09\u3002\u300cNext step\u300d\u3092\u62bc\u4e0b\u3057\u3066\u6b21\u753b\u9762\u3078\u9032\u307f\u307e\u3059\u3002\n\n![AWS IoT7.png](https://qiita-image-store.s3.amazonaws.com/0/42275/09e7858d-7891-077d-ed7c-188694286c32.png \"AWS IoT7.png\")\n\u3000\n5. \u30c7\u30d0\u30a4\u30b9\u306e\u8a2d\u5b9a\u624b\u9806\u304c\u51fa\u3066\u304f\u308b\u306e\u3067\u3001\u300cDone\u300d\u3092\u62bc\u4e0b\u3057\u3066\u5b8c\u4e86\u3068\u306a\u308a\u307e\u3059\u3002\n\n## \u30eb\u30fc\u30eb\u306e\u767b\u9332\n\n\u7279\u5b9a\u306e\u30c8\u30d4\u30c3\u30af\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304cPublish\u3055\u308c\u305f\u3089\u3001Lambda\u95a2\u6570\u3092\u547c\u51fa\u3059\u3088\u3046\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n1. \u300cCreate a rule\u300d\u3088\u308a\u767b\u9332\u753b\u9762\u3078\u9032\u307f\u307e\u3059\u3002\n\n![AWS IoT R1.png](https://qiita-image-store.s3.amazonaws.com/0/42275/3592009e-3646-0792-4da2-a889e2e5b0e3.png)\n\u3000\n2. \u4efb\u610f\u306e\u30eb\u30fc\u30eb\u540d\uff08\u3053\u3053\u3067\u306famzorderer\uff09\u3092\u5165\u529b\u3057\u3001\u30eb\u30fc\u30eb\u30af\u30a8\u30ea\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u300camzordere\u300d\u30c8\u30d4\u30c3\u30af\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304cPublish\u3055\u308c\u305f\u5834\u5408\u3001item\u5c5e\u6027\u306e\u5024\u3092\u62bd\u51fa\u3057\u3001Action\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n![AWS IoT R2.png](https://qiita-image-store.s3.amazonaws.com/0/42275/a5296275-29ba-522f-065c-0377910b0f46.png)\n\u3000\n3. Action\u3068\u3057\u3066Lambda\u95a2\u6570\u306e\u547c\u51fa\u3057\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n![AWS IoT3.png](https://qiita-image-store.s3.amazonaws.com/0/42275/85ea535d-dfa9-f246-746d-25c29263cbba.png)\n\u3000\n4. \u547c\u3073\u51fa\u3059\u95a2\u6570\u306f\u5148\u307b\u3069\u4f5c\u6210\u3057\u305f\u300camzorderer\u300d\u3068\u306a\u308a\u307e\u3059\u3002\n\n![AWS IoT R4.png](https://qiita-image-store.s3.amazonaws.com/0/42275/25329867-a7f7-2af9-d1dc-9d3ca0f11653.png)\n\u3000\n5. \u300cCreate rule\u300d\u3092\u62bc\u4e0b\u3057\u3066\u4f5c\u6210\u5b8c\u4e86\u3068\u306a\u308a\u307e\u3059\u3002\n\n![AWS IoT R.png](https://qiita-image-store.s3.amazonaws.com/0/42275/d2abba6f-7b58-4cbf-ca2c-e853540f0cc2.png)\n\n# 3. \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30c7\u30d0\u30a4\u30b9\u306e\u4f5c\u6210\n\n\u3053\u306e\u7ae0\u3067\u306fRaspberry Pi\u3092\u5229\u7528\u3057\u3066\u30dc\u30bf\u30f3\u3092\u6301\u3064\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30c7\u30d0\u30a4\u30b9\u306e\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n## Raspberry Pi Zero\u3068\u306f\n\n\u8a00\u308f\u305a\u3068\u77e5\u308c\u305f\u30e9\u30ba\u30d1\u30a4\u306e\u5c0f\u578b\u30e2\u30c7\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\nCPU\u30af\u30ed\u30c3\u30af1GHz\u3001\u30e1\u30e2\u30ea512MB\u3067\u7d045\u30c9\u30eb\u3068\u7834\u683c\u306e\u4fa1\u683c\u8a2d\u5b9a\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3053\u306eRaspberry Pi Zero\u3092\u5229\u7528\u3057\u3066\u3001\n\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3089AWS IoT\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308b\u30c7\u30d0\u30a4\u30b9\u3092\u4f5c\u3063\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u5fc5\u8981\u306a\u3082\u306e\n\n\u3069\u306e\u3054\u5bb6\u5ead\u306b\u3082\u3042\u308b\u57fa\u672c\u7684\u306a\u96fb\u5b50\u5de5\u4f5c\u90e8\u54c1\u3092\u3064\u304b\u3063\u3066\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n![IMG_0307.JPG](https://qiita-image-store.s3.amazonaws.com/0/42275/bbfa0c8d-e369-8988-1bd6-291bac7f6523.jpeg \"IMG_0307.JPG\")\n\n\n* Raspberry Pi Zero\n* GPIO\u30d4\u30f3\n* \u30d6\u30ec\u30c3\u30c8\u30dc\u30fc\u30c9\n* \u62b5\u6297\uff0810K\u03a9\uff09\n* \u30bf\u30af\u30c8\u30b9\u30a4\u30c3\u30c1\n* \u30b8\u30e3\u30f3\u30d1\u30ef\u30a4\u30e4\uff08\u30aa\u30b9-\u30e1\u30b9\uff09\u00d7 3\n* \u7121\u7ddaLAN\u5b50\u6a5f\n* \u306f\u3093\u3060\uff080.6mm\u63a8\u5968\uff09\n* miniUSB\u5909\u63db\u30b1\u30fc\u30d6\u30eb\n\nminiUSB \u306e\u7aef\u5b50\u304c\u4e00\u3064\u3057\u304b\u306a\u3044\u306e\u3067USB\u30cf\u30d6\u304c\u3042\u308b\u3068\u521d\u671f\u8a2d\u5b9a\u6642\u306f\u4fbf\u5229\u3067\u3059\u3002\n\n## Raspberry Pi \u306e\u521d\u671f\u8a2d\u5b9a\uff08OS\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff09\n\n[\u3053\u3053\u3089\u8fba](https://liginc.co.jp/261317)\u3092\u53c2\u8003\u306bRaspbian(Jessie)\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n## \u7121\u7ddaLAN\u63a5\u7d9a\n\n\u4eca\u56de\u306fBuffalo\u306e\u7121\u7dda\u5b50\u6a5f\u3092\u5229\u7528\u3057\u3066Raspberry Pi Zero\u3092\u7121\u7ddaLAN\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\nUSB\u306b\u7121\u7ddaLAN\u5b50\u6a5f\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002\n`lsusb` \u30b3\u30de\u30f3\u30c9\u3092\u6253\u3064\u3068\u5b50\u6a5f\u3092\u8a8d\u8b58\u3057\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u306d\u3002\n\n```\n$ lsusb\nBus 001 Device 002: ID 0411:01a2 BUFFALO INC. (formerly MelCo., Inc.) WLI-UC-GNM Wireless LAN Adapter [Ralink RT8070]\nBus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub\n```\n\n`wpa_passphrase` \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3044\u3001\u7121\u7ddaLAN\u63a5\u7d9a\u306b\u5fc5\u8981\u306aSSID\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```\n$ wpa_passphrase [SSID] [\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba]\nnetwork={\n        ssid=[SSID]\n        #psk=[\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba] <- \u3053\u306e\u884c\u306f\u524a\u9664\u3057\u3066\u69cb\u3044\u307e\u305b\u3093\n        psk=[\u6697\u53f7\u5316\u3055\u308c\u305f\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba]\n}\n```\n\n\u4e0a\u8a18\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u3001`/etc/wpa_supplicant/wpa_supplicant.conf` \u306b\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```/etc/wpa_supplicant/wpa_supplicant.conf\ncountry=GB\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\nnetwork={\n        ssid=[SSID]\n        psk=[\u6697\u53f7\u5316\u3055\u308c\u305f\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba]\n}\n```\n\n`/etc/dhcpcd.conf` \u3092\u7de8\u96c6\u3057\u3001\u56fa\u5b9aIP\u5316\u3082\u884c\u306a\u3063\u3066\u304a\u304d\u307e\u3059\u3002\nIP\u30a2\u30c9\u30ec\u30b9\u3001\u30eb\u30fc\u30bf\u30fc\u3001DNS\u306f\u9069\u5b9c\u81ea\u5206\u306e\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\ninterface wlan0\nstatic ip_address=192.168.11.30/24\nstatic routers=192.168.11.1\nstatic domain_name_servers=192.168.11.1\n```\n\n\u518d\u8d77\u52d5\u3057\u3066\u3001\u6bcd\u8266\u304b\u3089SSH\u63a5\u7d9a\u3067\u304d\u308c\u3070\u8a2d\u5b9a\u5b8c\u4e86\u3067\u3059\u3002\n\n```\n$ sudo shutdown -r now\n```\n\n## GPIO\u306e\u30cf\u30f3\u30c0\u4ed8\u3051\n\n\u4ed6\u306e\u30e2\u30c7\u30eb\u3068\u9055\u3044Raspberry Pi Zero\u3067GPIO\u3092\u4f7f\u3046\u5834\u5408\u306f\u30cf\u30f3\u30c0\u4ed8\u3051\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002\n\u601d\u3063\u305f\u3088\u308a\u7d30\u304b\u3044\u4f5c\u696d\u306b\u306a\u308b\u306e\u3067\u30cf\u30f3\u30c0\u306e\u7dda\u5f62\u306f\u03c60.6mm\u306e\u3082\u306e\u3092\u4f7f\u3046\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n![IMG_0309.JPG](https://qiita-image-store.s3.amazonaws.com/0/42275/28a1576a-facb-12e5-d7bb-ea33f9357c2f.jpeg \"IMG_0309.JPG\")\n\n\n## \u56de\u8def\u3092\u7d44\u3080\n\n\u6b63\u76f4\u96fb\u5b50\u5de5\u4f5c\u306f\u3069\u7d20\u4eba\u3067\u3059\u304c\u3001\u30cd\u30c3\u30c8\u3067\u8abf\u3079\u305f\u60c5\u5831\u3092\u53c2\u8003\u306b\u7d44\u3093\u3067\u3044\u304d\u307e\u3059\u3002\nRaspberry Pi Zero\u306eGPIO\u306e\u914d\u7f6e\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n![Raspberry-Pi-Model-Zero-Mini-PC.jpg](https://qiita-image-store.s3.amazonaws.com/0/42275/e5ac3724-9558-6d62-3ec9-18aff1fcc77e.jpeg \"Raspberry-Pi-Model-Zero-Mini-PC.jpg\")\n\n\n1\u756a\u304b\u30893.3V\u306e\u96fb\u6e90\u3092\u3068\u308a\u3001GPIO25\u30bf\u30af\u30c8\u30b9\u30a4\u30c3\u30c1\u306eON/OFF\u306fGPIO9\u756a\u3067\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\nGPIO25\u3068GND\u306e\u9593\u306b10k\u30aa\u30fc\u30e0\u306e\u62b5\u6297\u3092\u5165\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u30d7\u30eb\u30c0\u30a6\u30f3\u62b5\u6297\u3068\u547c\u3070\u308cHIGH(3.3V)\u304bLOW(0V)\u4fe1\u53f7\u3092\u78ba\u5b9f\u306b\u4f1d\u3048\u308b\u5f79\u5272\u3092\u62c5\u3044\u307e\u3059\u3002\n\u753b\u50cf\u304c\u5206\u304b\u308a\u3065\u3089\u304f\u3066\u3059\u307f\u307e\u305b\u3093\u3002\n\n![S__2564101.jpg](https://qiita-image-store.s3.amazonaws.com/0/42275/d94f1ed4-e245-15f9-b553-372b066ae84e.jpeg \"S__2564101.jpg\")\n\n\n## \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3059\u308b\n\n\u56de\u8def\u304c\u7d44\u3081\u305f\u306e\u3067\u30bf\u30af\u30c8\u30b9\u30a4\u30c3\u30c1\u306e\u5165\u529b\u3092\u53d7\u53d6\u308a\u3001AWS IoT\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092Publish\u3059\u308b\u30d7\u30ed\u30d5\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n### \u30e9\u30f3\u30bf\u30a4\u30e0\n\nRaspbian(Jessie)\u306b\u306fPython2.7\u304c\u30a4\u30f3\u30b9\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001Python\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n```\n$ python -V\nPython 2.7.9\n```\n\n### \u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nAWS IoT\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e[PythonSDK](https://github.com/aws/aws-iot-device-sdk-python)\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u5229\u7528\u3057\u307e\u3059\u3002\n\n```\n$ sudo pip install AWSIoTPythonSDK\n```\n\n\n### \u5b9f\u88c5\n\n```python:publisher.py\n# -*- coding:utf-8 -*-\n\n__author__ = 'H.Takeda'\n__version__ = '1.0.0'\n\n\nfrom AWSIoTPythonSDK.MQTTLib import AWSIoTMQTTClient\nfrom argparse import ArgumentParser\nimport json\nimport logging\nimport RPi.GPIO as GPIO\nimport signal\nimport sys\nimport time\n\n\ndef configure_logging():\n    # Configure logging\n    logger = logging.getLogger(\"AWSIoTPythonSDK.core\")\n    logger.setLevel(logging.DEBUG)\n    streamHandler = logging.StreamHandler()\n    formatter = logging.Formatter(\n        '%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    streamHandler.setFormatter(formatter)\n    logger.addHandler(streamHandler)\n\n\ndef parse():\n    argparser = ArgumentParser()\n    argparser.add_argument(\"-e\", \"--endpoint\", type=str, required=True)\n    argparser.add_argument(\"-r\", \"--rootCA\", type=str, required=True)\n    argparser.add_argument(\"-c\", \"--cert\", type=str, required=True)\n    argparser.add_argument(\"-k\", \"--key\", type=str, required=True)\n    args = argparser.parse_args()\n    return vars(args)\n\n\ndef careate_client(endpoint, root_ca, cert, private_pey):\n    # For certificate based connection.\n    client = AWSIoTMQTTClient(\"raspi0\")\n    # Configurations\n    client.configureEndpoint(endpoint, 8883)\n    client.configureCredentials(root_ca, private_pey, cert)\n    client.configureOfflinePublishQueueing(1)\n    client.configureConnectDisconnectTimeout(10)    # 10 sec\n    client.configureMQTTOperationTimeout(5)         # 5 sec\n    return client\n\n\ndef handler(signum, frame):\n    print \"Signal handler called with signal\", signum\n    client.disconnect()\n    GPIO.cleanup()\n    sys.exit(0)\n\n\nif __name__ == '__main__':\n    # Parse command-line arguments.\n    args = parse()\n    # Configure logging\n    configure_logging()\n    # Create mqtt client.\n    client = careate_client(\n        args[\"endpoint\"], args[\"rootCA\"], args[\"cert\"], args[\"key\"])\n    # Connect.\n    client.connect()\n\n    signal.signal(signal.SIGINT, handler)\n    GPIO.setmode(GPIO.BCM)\n    GPIO.setup(9, GPIO.IN)\n    before = 0\n    while True:\n        now = GPIO.input(9)\n        if before == 0 and now == 1:\n            # Create message.\n            message = {\"item\": \"01\"}\n            # Publish.\n            client.publish(\"amzorderer\", json.dumps(message), 0)\n            print \"message published.\"\n        time.sleep(0.1)\n        before = now\n\n```\n\n\n`RPi.GPIO` \u3092\u5229\u7528\u3057\u3066GPIO9\u756a\u306b\u5165\u529b\u304c\u3042\u3063\u305f\u5834\u5408\u306bAWS IoT\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\uff08\u30c8\u30a4\u30ec\u30c3\u30c8\u30da\u30fc\u30d1\u30fc\u3092\u8cfc\u5165\u3059\u308b\u305f\u3081\u306e\u30a2\u30a4\u30c6\u30e0\u533a\u5206\u5024\u300c01\u300d\uff09\u3092Publish\u3057\u3066\u3044\u307e\u3059\u3002\n \n# \u52d5\u4f5c\u78ba\u8a8d\n\nRapsberry Pi Zero\u4e0a\u3067\u4e0a\u8a18\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3057\u3001\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5f15\u6570\u306bAWS IoT\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3001\u30eb\u30fc\u30c8CA\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u3001\u79d8\u5bc6\u9375\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n[AWS IoT SDK](https://github.com/aws/aws-iot-device-sdk-python)\u306eREADME\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u30eb\u30fc\u30c8CA\u306f[\u3053\u3061\u3089](https://www.symantec.com/content/en/us/enterprise/verisign/roots/VeriSign-Class%203-Public-Primary-Certification-Authority-G5.pem)\u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u3068\u306f\u79d8\u5bc6\u9375\u306fAWS IoT\u306e\u8a2d\u5b9a\u6642\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fzip\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\n```\n$ python test.py -e <endpoint> -r <rootCA path> -c <certificate path> -k <private key path>\n2016-12-11 08:15:31,661 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Paho MQTT Client init.\n2016-12-11 08:15:31,664 - AWSIoTPythonSDK.core.protocol.mqttCore - INFO - ClientID: raspi0\n2016-12-11 08:15:31,667 - AWSIoTPythonSDK.core.protocol.mqttCore - INFO - Protocol: MQTTv3.1.1\n2016-12-11 08:15:31,672 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Register Paho MQTT Client callbacks.\n2016-12-11 08:15:31,675 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - mqttCore init.\n2016-12-11 08:15:31,680 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Load CAFile from: root-CA.crt\n2016-12-11 08:15:31,683 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Load Key from: raspi0.private.key\n2016-12-11 08:15:31,687 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Load Cert from: raspi0.cert.pem\n2016-12-11 08:15:31,691 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Custom setting for publish queueing: queueSize = 1\n2016-12-11 08:15:31,696 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Custom setting for publish queueing: dropBehavior = Drop Newest\n2016-12-11 08:15:31,699 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Set maximum connect/disconnect timeout to be 10 second.\n2016-12-11 08:15:31,704 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Set maximum MQTT operation timeout to be 5 second\n2016-12-11 08:15:31,710 - AWSIoTPythonSDK.core.protocol.mqttCore - INFO - Connection type: TLSv1.2 Mutual Authentication\n2016-12-11 08:15:32,384 - AWSIoTPythonSDK.core.protocol.mqttCore - INFO - Connected to AWS IoT.\n2016-12-11 08:15:32,386 - AWSIoTPythonSDK.core.protocol.mqttCore - DEBUG - Connect time consumption: 70.0ms.\n```\n\n\u30bf\u30af\u30c8\u30b9\u30a4\u30c3\u30c1\u3092\u62bc\u3059\u3068\u3001AWS IoT\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304cPublish\u3055\u308c\u7121\u4e8b\u306bAmazon\u3067\u300c\u30c8\u30a4\u30ec\u30c3\u30c8\u30da\u30fc\u30d1\u30fc\u300d\u306e\u8cfc\u5165\u304c\u5b8c\u4e86\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\n# \u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068\n\n* \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30c7\u30d0\u30a4\u30b9\u306e\u5c0f\u578b\u5316\n\u4eca\u56de\u96fb\u6e90\u306f\u30e2\u30d0\u30a4\u30eb\u30d0\u30c3\u30c6\u30ea\u30fc\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30ea\u30c1\u30a6\u30e0\u30dd\u30ea\u30de\u30fc\u3092\u5229\u7528\u3057\u3066\u5c0f\u578b\u5316\u3057\u305f\u3044\u3002\u30d6\u30ec\u30c3\u30c8\u30dc\u30fc\u30c9\u3082\u5c0f\u3055\u3044\u3082\u306e\u3092\u5229\u7528\u3057\u305f\u3044\u3002\n\n* \u8907\u6570\u30dc\u30bf\u30f3\u5bfe\u5fdc\n\u30dc\u30bf\u30f3\u2460\u3092\u62bc\u3057\u305f\u3068\u304d\u306f\u30c8\u30a4\u30ec\u30c3\u30c8\u30da\u30fc\u30d1\u30fc\u3001\u30dc\u30bf\u30f3\u2461\u3092\u62bc\u3057\u305f\u3068\u304d\u306f\u30b5\u30e9\u30f3\u30e9\u30c3\u30d7\u3092\u8cfc\u5165\u3068\u3044\u3046\u3088\u3046\u306b\u3001\u8907\u6570\u30dc\u30bf\u30f3\u8a2d\u3051\u305f\u3044\u3002\n\n* \u30dc\u30bf\u30f3\u306e\u30b1\u30fc\u30b9\u4f5c\u6210\n", "tags": ["AWS", "Python", "AmazonDashButton", "IoT", "RaspberryPi"]}