{"tags": ["Python", "mecab"], "context": " More than 1 year has passed since last update.\n\n\u5236\u7d04\u4ed8\u304d\u89e3\u6790(\u90e8\u5206\u89e3\u6790)\nMeCab \u306e\u5236\u7d04\u4ed8\u304d\u89e3\u6790(\u90e8\u5206\u89e3\u6790)\u6a5f\u80fd\u306f\u3001\u6587\u306e\u4e00\u90e8\u306e\u5f62\u614b\u7d20\u60c5\u5831\u304c\u65e2\u77e5\u3067\u3042\u308b\u3001\u3042\u308b\u3044\u306f\u5883\u754c\u304c\u5206\u304b\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u4f7f\u3046\u6a5f\u80fd\u3067\u3059\u3002Python \u3068 MeCab \u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306e natto-py \u306f\u3001\uff13\u3064\u306e\u5236\u7d04\u4ed8\u304d\u89e3\u6790\u65b9\u6cd5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n\n--partial / -p \u30aa\u30d7\u30b7\u30e7\u30f3\nboundary \u5236\u7d04\u306e\u6307\u5b9a\nfeature \u5236\u7d04\u306e\u6307\u5b9a \n\n\n--partial \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u90e8\u5206\u89e3\u6790\nMeCab \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u306b --partial \u307e\u305f\u306f -p \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nparse \u306b\u6e21\u3059\u5165\u529b\u6587\u306f\u6b21\u306e\u3088\u3046\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u5236\u7d04\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n\n\u6587\u65ad\u7247: \n\n\u6587\u306e\u65ad\u7247\u3002\u5236\u7d04\u304c\u306a\u3044\u3068\u304d\u3068\u540c\u3058\u3088\u3046\u306b\u901a\u5e38\u306e\u5f62\u614b\u7d20\u89e3\u6790\u304c\u884c\u308f\u308c\u308b\u3002\u305f\u3060\u3057\u6587\u65ad\u7247\u3092\u307e\u305f\u3050\u3088\u3046\u306a \u5f62\u614b\u7d20\u306f\u51fa\u529b\u3055\u308c\u306a\u3044\u3002\n\u5fc5\u305a \\n \uff08\u6539\u884c\uff09\u3092\u672b\u5c3e\u306b\u4ed8\u3051\u52a0\u3048\u308b\u3002\n\n\n\n\u5f62\u614b\u7d20\u65ad\u7247\n\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f \u8868\u5c64\\t\u7d20\u6027\u30d1\u30bf\u30fc\u30f3\\n \u3002\n\n\n\u6700\u5f8c\u306b\u3001\u5165\u529b\u6587\u306e\u672b\u5c3e\u306b \\n \u3092\u4ed8\u3051\u52a0\u3048\u308b\u3002\n\nfrom natto import MeCab\n\ntext = \"\"\"\u306b\u308f\\t\u307b\u3052\n\u306b\n\u306f\u306b\u308f\\t\u307b\u3052\n\u306b\u308f\u3068\u308a\\t\u307b\u3052\n\u304c\u3044\u308b\u3002\n\"\"\"\n\nwith MeCab(\"--partial\") as nm:\n    print(nm.parse(text))\n\n\u306b\u308f  \u307b\u3052\n\u306b \u52a9\u8a5e,\u683c\u52a9\u8a5e,\u4e00\u822c,*,*,*,\u306b,\u30cb,\u30cb\n\u306f\u306b\u308f   \u307b\u3052\n\u306b\u308f\u3068\u308a    \u307b\u3052\n\u304c \u52a9\u8a5e,\u683c\u52a9\u8a5e,\u4e00\u822c,*,*,*,\u304c,\u30ac,\u30ac\n\u3044\u308b  \u52d5\u8a5e,\u81ea\u7acb,*,*,\u4e00\u6bb5,\u57fa\u672c\u5f62,\u3044\u308b,\u30a4\u30eb,\u30a4\u30eb\n\u3002 \u8a18\u53f7,\u53e5\u70b9,*,*,*,*,\u3002,\u3002,\u3002\nEOS\n\n\n\u4e0a\u8a18\u306e\u4f8b\u306f\u89e3\u6790\u7d50\u679c\u3092\u6a19\u6e96\u51fa\u529b\u306b\u9001\u308a\u307e\u3059\u304c\u3001\u3088\u308a\u7d30\u304b\u3044\u5236\u7d04\u306a\u3089\u3070\u3001\u5f62\u614b\u7d20\u5883\u754c\u5236\u7d04\u6307\u5b9a (boundary) \u307e\u305f\u306f\u54c1\u8a5e\u5236\u7d04\u6307\u5b9a (feature) \u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u5f62\u614b\u7d20\u5883\u754c\u5236\u7d04\u306e\u6307\u5b9a (boundary constraints)\n\u5358\u8a9e\u5883\u754c\u304c\u3042\u3089\u304b\u3058\u3081\u5206\u304b\u3063\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070 boundary_constraints \u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3067\u305d\u306e\u5883\u754c\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u306e\u6b63\u898f\u8868\u73fe\u307e\u305f\u306f\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u6307\u5b9a\u3055\u308c\u305f\u5f62\u614b\u7d20\u5883\u754c\u306b\u30de\u30c3\u30c1\u3059\u308b\u3082\u306e\u306f\u3001\u4e00\u3064\u306e\u5f62\u614b\u7d20\u3068\u3057\u3066\u6271\u3063\u3066\u89e3\u6790\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\ntext = \"\u306b\u308f\u306b\u306f\u306b\u308f\u306b\u308f\u3068\u308a\u304c\u3044\u308b\u3002\"\n\npatt = \"\u306b\u308f\u3068\u308a|\u306f\u306b\u308f|\u306b\u308f\"\n\nwith MeCab() as nm:\n    # \u5f62\u614b\u7d20\u5883\u754c\u5236\u7d04\u3092\u6307\u5b9a\u3057\u3066\u3001\u5404 MeCabNode \u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n    for n in nm.parse(text, boundary_constraints=patt, as_nodes=True):\n        if not (n.is_bos() or n.is_eos()):\n            print(\"{}:\\t{}\". format(n.surface, n.feature))\n\n# BOS/EOS \u30ce\u30fc\u30c9\u306f\u7701\u7565\u3059\u308b\n\u306b\u308f: \u540d\u8a5e,\u4e00\u822c,*,*,*,*,*\n\u306b:    \u52a9\u8a5e,\u683c\u52a9\u8a5e,\u4e00\u822c,*,*,*,\u306b,\u30cb,\u30cb\n\u306f\u306b\u308f:  \u540d\u8a5e,\u4e00\u822c,*,*,*,*,\u306f\u306b\u308f,\u30cf\u30cb\u30ef,\u30cf\u30cb\u30ef\n\u306b\u308f\u3068\u308a:   \u540d\u8a5e,\u4e00\u822c,*,*,*,*,\u306b\u308f\u3068\u308a,\u30cb\u30ef\u30c8\u30ea,\u30cb\u30ef\u30c8\u30ea\n\u304c:    \u52a9\u8a5e,\u683c\u52a9\u8a5e,\u4e00\u822c,*,*,*,\u304c,\u30ac,\u30ac\n\u3044\u308b: \u52d5\u8a5e,\u81ea\u7acb,*,*,\u4e00\u6bb5,\u57fa\u672c\u5f62,\u3044\u308b,\u30a4\u30eb,\u30a4\u30eb\n\u3002:    \u8a18\u53f7,\u53e5\u70b9,*,*,*,*,\u3002,\u3002,\u3002  \n\n\u8a73\u3057\u304f\u306f 6.2. re \u2014 \u6b63\u898f\u8868\u73fe\u64cd\u4f5c \u3068 re.finditer \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u54c1\u8a5e\u5236\u7d04\u306e\u6307\u5b9a (feature constraints)\nfeature_constraints \u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u306b\u3088\u308a\u3001\u7279\u5b9a\u306e\u5f62\u614b\u7d20\u3054\u3068\u306b\u54c1\u8a5e\u5206\u985e\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5f62\u614b\u7d20\u306b\u5bfe\u3059\u308b\u54c1\u8a5e\u3092\u30da\u30a2\u3068\u3057\u3066\u3082\u3064\u30bf\u30d7\u30eb (tuple) \u3092\u3001\u305d\u308c\u3089\u306e\u5f62\u614b\u7d20\u30fb\u54c1\u8a5e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u66f4\u306b\u30bf\u30d7\u30eb\u306b\u683c\u7d0d\u3057\u3066\u304a\u3044\u3066\u3001\u6b21\u306e\u3088\u3046\u306b parse \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3057\u307e\u3059\u3002\nfeat = ((\"\u306b\u308f\u3068\u308a\",\"\u307b\u3052\"), (\"\u306f\u306b\u308f\",\"\u307b\u3052\u307b\u3052\"), (\"\u306b\u308f\",\"\u66f4\u306b\u307b\u3052\"))\n\nwith MeCab() as nm:\n    # \u4e00\u90e8\u306e\u5f62\u614b\u7d20\u306b\u5bfe\u3057\u3066\u54c1\u8a5e\u5236\u7d04\u3092\u6307\u5b9a\u3057\u3066\u3001\u5404 MeCabNode \u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n    for n in nm.parse(text, feature_constraints=feat, as_nodes=True):\n        if not (n.is_bos() or n.is_eos()):\n            print(\"{}:\\t{}\". format(n.surface, n.feature))\n\n# BOS/EOS \u30ce\u30fc\u30c9\u306f\u7701\u7565\u3059\u308b\n\u306b\u308f: \u66f4\u306b\u307b\u3052\n\u306b:    \u52a9\u8a5e,\u683c\u52a9\u8a5e,\u4e00\u822c,*,*,*,\u306b,\u30cb,\u30cb\n\u306f\u306b\u308f:  \u307b\u3052\u307b\u3052\n\u306b\u308f\u3068\u308a:   \u307b\u3052\n\u304c:    \u52a9\u8a5e,\u683c\u52a9\u8a5e,\u4e00\u822c,*,*,*,\u304c,\u30ac,\u30ac\n\u3044\u308b: \u52d5\u8a5e,\u81ea\u7acb,*,*,\u4e00\u6bb5,\u57fa\u672c\u5f62,\u3044\u308b,\u30a4\u30eb,\u30a4\u30eb\n\u3002:    \u8a18\u53f7,\u53e5\u70b9,*,*,*,*,\u3002,\u3002,\u3002\n\n\u4ee5\u4e0a\n\n\u53c2\u7167\n\n\u5236\u7d04\u4ed8\u304d\u89e3\u6790(\u90e8\u5206\u89e3\u6790)\nnatto-py @ PyPI\nnatto-py @ github\n\n# \u5236\u7d04\u4ed8\u304d\u89e3\u6790(\u90e8\u5206\u89e3\u6790)\n\nMeCab \u306e\u5236\u7d04\u4ed8\u304d\u89e3\u6790(\u90e8\u5206\u89e3\u6790)\u6a5f\u80fd\u306f\u3001\u6587\u306e\u4e00\u90e8\u306e\u5f62\u614b\u7d20\u60c5\u5831\u304c\u65e2\u77e5\u3067\u3042\u308b\u3001\u3042\u308b\u3044\u306f\u5883\u754c\u304c\u5206\u304b\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u4f7f\u3046\u6a5f\u80fd\u3067\u3059\u3002Python \u3068 MeCab \u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306e natto-py \u306f\u3001\uff13\u3064\u306e\u5236\u7d04\u4ed8\u304d\u89e3\u6790\u65b9\u6cd5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n1. `--partial` / `-p` \u30aa\u30d7\u30b7\u30e7\u30f3\n2. boundary \u5236\u7d04\u306e\u6307\u5b9a\n3. feature \u5236\u7d04\u306e\u6307\u5b9a \n\n# --partial \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u90e8\u5206\u89e3\u6790\n\nMeCab \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u306b `--partial` \u307e\u305f\u306f `-p` \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n`parse` \u306b\u6e21\u3059\u5165\u529b\u6587\u306f\u6b21\u306e\u3088\u3046\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u5236\u7d04\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n* \u6587\u65ad\u7247: \n    * \u6587\u306e\u65ad\u7247\u3002\u5236\u7d04\u304c\u306a\u3044\u3068\u304d\u3068\u540c\u3058\u3088\u3046\u306b\u901a\u5e38\u306e\u5f62\u614b\u7d20\u89e3\u6790\u304c\u884c\u308f\u308c\u308b\u3002\u305f\u3060\u3057\u6587\u65ad\u7247\u3092\u307e\u305f\u3050\u3088\u3046\u306a \u5f62\u614b\u7d20\u306f\u51fa\u529b\u3055\u308c\u306a\u3044\u3002\n    * \u5fc5\u305a `\\n` \uff08\u6539\u884c\uff09\u3092\u672b\u5c3e\u306b\u4ed8\u3051\u52a0\u3048\u308b\u3002\n\n* \u5f62\u614b\u7d20\u65ad\u7247\n    * \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f `\u8868\u5c64\\t\u7d20\u6027\u30d1\u30bf\u30fc\u30f3\\n` \u3002\n    \n* \u6700\u5f8c\u306b\u3001\u5165\u529b\u6587\u306e\u672b\u5c3e\u306b `\\n` \u3092\u4ed8\u3051\u52a0\u3048\u308b\u3002\n\n```\nfrom natto import MeCab\n\ntext = \"\"\"\u306b\u308f\\t\u307b\u3052\n\u306b\n\u306f\u306b\u308f\\t\u307b\u3052\n\u306b\u308f\u3068\u308a\\t\u307b\u3052\n\u304c\u3044\u308b\u3002\n\"\"\"\n\nwith MeCab(\"--partial\") as nm:\n    print(nm.parse(text))\n \n\u306b\u308f\t\u307b\u3052\n\u306b\t\u52a9\u8a5e,\u683c\u52a9\u8a5e,\u4e00\u822c,*,*,*,\u306b,\u30cb,\u30cb\n\u306f\u306b\u308f\t\u307b\u3052\n\u306b\u308f\u3068\u308a\t\u307b\u3052\n\u304c\t\u52a9\u8a5e,\u683c\u52a9\u8a5e,\u4e00\u822c,*,*,*,\u304c,\u30ac,\u30ac\n\u3044\u308b\t\u52d5\u8a5e,\u81ea\u7acb,*,*,\u4e00\u6bb5,\u57fa\u672c\u5f62,\u3044\u308b,\u30a4\u30eb,\u30a4\u30eb\n\u3002\t\u8a18\u53f7,\u53e5\u70b9,*,*,*,*,\u3002,\u3002,\u3002\nEOS\n    \n```\n\n\u4e0a\u8a18\u306e\u4f8b\u306f\u89e3\u6790\u7d50\u679c\u3092\u6a19\u6e96\u51fa\u529b\u306b\u9001\u308a\u307e\u3059\u304c\u3001\u3088\u308a\u7d30\u304b\u3044\u5236\u7d04\u306a\u3089\u3070\u3001\u5f62\u614b\u7d20\u5883\u754c\u5236\u7d04\u6307\u5b9a (boundary) \u307e\u305f\u306f\u54c1\u8a5e\u5236\u7d04\u6307\u5b9a (feature) \u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u5f62\u614b\u7d20\u5883\u754c\u5236\u7d04\u306e\u6307\u5b9a (boundary constraints)\n\n\u5358\u8a9e\u5883\u754c\u304c\u3042\u3089\u304b\u3058\u3081\u5206\u304b\u3063\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070 boundary_constraints \u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3067\u305d\u306e\u5883\u754c\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u306e\u6b63\u898f\u8868\u73fe\u307e\u305f\u306f\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u6307\u5b9a\u3055\u308c\u305f\u5f62\u614b\u7d20\u5883\u754c\u306b\u30de\u30c3\u30c1\u3059\u308b\u3082\u306e\u306f\u3001\u4e00\u3064\u306e\u5f62\u614b\u7d20\u3068\u3057\u3066\u6271\u3063\u3066\u89e3\u6790\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\ntext = \"\u306b\u308f\u306b\u306f\u306b\u308f\u306b\u308f\u3068\u308a\u304c\u3044\u308b\u3002\"\n\npatt = \"\u306b\u308f\u3068\u308a|\u306f\u306b\u308f|\u306b\u308f\"\n\nwith MeCab() as nm:\n    # \u5f62\u614b\u7d20\u5883\u754c\u5236\u7d04\u3092\u6307\u5b9a\u3057\u3066\u3001\u5404 MeCabNode \u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n    for n in nm.parse(text, boundary_constraints=patt, as_nodes=True):\n        if not (n.is_bos() or n.is_eos()):\n            print(\"{}:\\t{}\". format(n.surface, n.feature))\n\n# BOS/EOS \u30ce\u30fc\u30c9\u306f\u7701\u7565\u3059\u308b\n\u306b\u308f:\t\u540d\u8a5e,\u4e00\u822c,*,*,*,*,*\n\u306b:\t\u52a9\u8a5e,\u683c\u52a9\u8a5e,\u4e00\u822c,*,*,*,\u306b,\u30cb,\u30cb\n\u306f\u306b\u308f:\t\u540d\u8a5e,\u4e00\u822c,*,*,*,*,\u306f\u306b\u308f,\u30cf\u30cb\u30ef,\u30cf\u30cb\u30ef\n\u306b\u308f\u3068\u308a:\t\u540d\u8a5e,\u4e00\u822c,*,*,*,*,\u306b\u308f\u3068\u308a,\u30cb\u30ef\u30c8\u30ea,\u30cb\u30ef\u30c8\u30ea\n\u304c:\t\u52a9\u8a5e,\u683c\u52a9\u8a5e,\u4e00\u822c,*,*,*,\u304c,\u30ac,\u30ac\n\u3044\u308b:\t\u52d5\u8a5e,\u81ea\u7acb,*,*,\u4e00\u6bb5,\u57fa\u672c\u5f62,\u3044\u308b,\u30a4\u30eb,\u30a4\u30eb\n\u3002:\t\u8a18\u53f7,\u53e5\u70b9,*,*,*,*,\u3002,\u3002,\u3002  \n```\n\n\u8a73\u3057\u304f\u306f [6.2. re \u2014 \u6b63\u898f\u8868\u73fe\u64cd\u4f5c](http://docs.python.jp/3.4/library/re.html) \u3068 [re.finditer](http://docs.python.jp/3.3/library/re.html#re.finditer) \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n# \u54c1\u8a5e\u5236\u7d04\u306e\u6307\u5b9a (feature constraints)\n\nfeature_constraints \u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u306b\u3088\u308a\u3001\u7279\u5b9a\u306e\u5f62\u614b\u7d20\u3054\u3068\u306b\u54c1\u8a5e\u5206\u985e\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5f62\u614b\u7d20\u306b\u5bfe\u3059\u308b\u54c1\u8a5e\u3092\u30da\u30a2\u3068\u3057\u3066\u3082\u3064[\u30bf\u30d7\u30eb (tuple)](http://docs.python.jp/3.3/library/stdtypes.html#tuple) \u3092\u3001\u305d\u308c\u3089\u306e\u5f62\u614b\u7d20\u30fb\u54c1\u8a5e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u66f4\u306b\u30bf\u30d7\u30eb\u306b\u683c\u7d0d\u3057\u3066\u304a\u3044\u3066\u3001\u6b21\u306e\u3088\u3046\u306b [parse \u30e1\u30bd\u30c3\u30c9](http://natto-py.readthedocs.org/en/master/code.html#natto.MeCab.parse)\u306b\u6e21\u3057\u307e\u3059\u3002\n\n```\nfeat = ((\"\u306b\u308f\u3068\u308a\",\"\u307b\u3052\"), (\"\u306f\u306b\u308f\",\"\u307b\u3052\u307b\u3052\"), (\"\u306b\u308f\",\"\u66f4\u306b\u307b\u3052\"))\n\nwith MeCab() as nm:\n    # \u4e00\u90e8\u306e\u5f62\u614b\u7d20\u306b\u5bfe\u3057\u3066\u54c1\u8a5e\u5236\u7d04\u3092\u6307\u5b9a\u3057\u3066\u3001\u5404 MeCabNode \u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n    for n in nm.parse(text, feature_constraints=feat, as_nodes=True):\n        if not (n.is_bos() or n.is_eos()):\n            print(\"{}:\\t{}\". format(n.surface, n.feature))\n\n# BOS/EOS \u30ce\u30fc\u30c9\u306f\u7701\u7565\u3059\u308b\n\u306b\u308f:\t\u66f4\u306b\u307b\u3052\n\u306b:\t\u52a9\u8a5e,\u683c\u52a9\u8a5e,\u4e00\u822c,*,*,*,\u306b,\u30cb,\u30cb\n\u306f\u306b\u308f:\t\u307b\u3052\u307b\u3052\n\u306b\u308f\u3068\u308a:\t\u307b\u3052\n\u304c:\t\u52a9\u8a5e,\u683c\u52a9\u8a5e,\u4e00\u822c,*,*,*,\u304c,\u30ac,\u30ac\n\u3044\u308b:\t\u52d5\u8a5e,\u81ea\u7acb,*,*,\u4e00\u6bb5,\u57fa\u672c\u5f62,\u3044\u308b,\u30a4\u30eb,\u30a4\u30eb\n\u3002:\t\u8a18\u53f7,\u53e5\u70b9,*,*,*,*,\u3002,\u3002,\u3002\n```\n\n\u4ee5\u4e0a\n\n# \u53c2\u7167\n\n* [\u5236\u7d04\u4ed8\u304d\u89e3\u6790(\u90e8\u5206\u89e3\u6790)](http://taku910.github.io/mecab/partial.html)\n* [natto-py @ PyPI](https://pypi.python.org/pypi/natto-py/)\n* [natto-py @ github](https://github.com/buruzaemon/natto-py)\n"}