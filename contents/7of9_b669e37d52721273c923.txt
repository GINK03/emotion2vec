{"context": "\n\u52d5\u4f5c\u74b0\u5883\nVivado 2015.4 on Windows 8.1 pro (64bit)\n\n\nVHDL\u3067\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u3044\u304f\u3082\u306e\u3092\u4f5c\u6210\u3057\u3066\u307f\u308b\u3002\nVHDL\u306e\u30b3\u30fc\u30c9\u3068\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u306e\u4f5c\u6210\u306e\u624b\u9806\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\nhttp://qiita.com/7of9/items/ec1a0048e69e74adc39a\nVHDL\u30b3\u30fc\u30c9\u3068\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u306f\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u305f\u3002\nhttp://www.asic-world.com/vhdl/first1.html\n\ncode\n\nclockCounter.vhd\nlibrary IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\nuse IEEE.STD_LOGIC_UNSIGNED.ALL;\n\nentity counter is\nport(   Clk : in std_logic;\n        Reset : in std_logic;\n        OUT_D : out std_logic_vector (3 downto 0)\n        );\nend counter;\n\narchitecture Behavior of counter is\nsignal DFF_8 : std_logic_vector (3 downto 0);\n\nbegin\n\nprocess(Clk, Reset)\nbegin\n    OUT_D <= DFF_8;\n    if (Reset = '1') then\n        DFF_8 <= (others => '0');\n    elsif ( clk'event and clk = '1') then    \n        if (DFF_8 = \"1111\") then\n            DFF_8 <= (others => '0');\n        end if;\n        DFF_8 <= DFF_8 + 1;\n    end if;\nend process;\nend Behavior;\n\n\n\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u3002\nclk_process\u3068\u3044\u3046\u30d7\u30ed\u30bb\u30b9\u4ee5\u5916\u306b\u30ea\u30bb\u30c3\u30c8\u306e\u5468\u671f\u3092\u6c7a\u3081\u308bstimulus(\u540d\u524d\u306f\u4efb\u610f)\u30d7\u30ed\u30bb\u30b9\u3092\u7528\u610f\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3089\u3057\u3044\u3002\u6570\u9031\u9593\u524d\u306b\u8aad\u3093\u3060\u672c\u306b\u3082\u304a\u305d\u3089\u304f\u63b2\u8f09\u3055\u308c\u3066\u3044\u305f\u304c\u3001\u5fd8\u308c\u3066\u3044\u305f\u3002\n\nclockCounter.tv\nlibrary IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\n\nentity testbench is\nend testbench;\n\narchitecture behavior of testbench is\nsignal clk : std_logic;\nsignal reset : std_logic;\nsignal out_d : std_logic_vector (3 downto 0);\nconstant clk_period : time := 10 ns;\n\nbegin\nuut: entity work.counter PORT MAP (\n    clk => clk,\n    reset => reset,\n    out_d => out_d);\n\nstimulus : process\nbegin\n    wait for 5 ns;\n    reset <= '1';\n    wait for 5 ns;\n    reset <= '0';\n    wait for 300 ns;\nend process;\n\nclk_process : process\nbegin\n    clk <= '0';\n    wait for clk_period / 2;\n    clk <= '1';\n    wait for clk_period / 2;\nend process;\n\nend behavior;\n\n\n\n\u7d50\u679c\nRun Simulation\u306e\u7d50\u679c\nreset, clk\u306e\u5165\u529b\u306b\u5bfe\u3057\u3066\u3001out_d\u304c\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u3044\u304f\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n\u3053\u308c\u3092\u767a\u5c55\u3055\u305b\u3066\u30d1\u30eb\u30b9\u30ab\u30a6\u30f3\u30c8\u3057\u305f\u3082\u306e\u3092UART\u51fa\u529b\u3059\u308b\u4e88\u5b9a\u3002\n```txt:\u52d5\u4f5c\u74b0\u5883\nVivado 2015.4 on Windows 8.1 pro (64bit)\n```\n\nVHDL\u3067\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u3044\u304f\u3082\u306e\u3092\u4f5c\u6210\u3057\u3066\u307f\u308b\u3002\n\nVHDL\u306e\u30b3\u30fc\u30c9\u3068\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u306e\u4f5c\u6210\u306e\u624b\u9806\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\nhttp://qiita.com/7of9/items/ec1a0048e69e74adc39a\n\nVHDL\u30b3\u30fc\u30c9\u3068\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u306f\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u305f\u3002\nhttp://www.asic-world.com/vhdl/first1.html\n\n## code\n\n```clockCounter.vhd\nlibrary IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\nuse IEEE.STD_LOGIC_UNSIGNED.ALL;\n\nentity counter is\nport(   Clk : in std_logic;\n        Reset : in std_logic;\n        OUT_D : out std_logic_vector (3 downto 0)\n        );\nend counter;\n\narchitecture Behavior of counter is\nsignal DFF_8 : std_logic_vector (3 downto 0);\n\nbegin\n\nprocess(Clk, Reset)\nbegin\n    OUT_D <= DFF_8;\n    if (Reset = '1') then\n        DFF_8 <= (others => '0');\n    elsif ( clk'event and clk = '1') then    \n        if (DFF_8 = \"1111\") then\n            DFF_8 <= (others => '0');\n        end if;\n        DFF_8 <= DFF_8 + 1;\n    end if;\nend process;\nend Behavior;\n```\n\n\u30c6\u30b9\u30c8\u30d9\u30f3\u30c1\u3002\nclk_process\u3068\u3044\u3046\u30d7\u30ed\u30bb\u30b9\u4ee5\u5916\u306b\u30ea\u30bb\u30c3\u30c8\u306e\u5468\u671f\u3092\u6c7a\u3081\u308bstimulus(\u540d\u524d\u306f\u4efb\u610f)\u30d7\u30ed\u30bb\u30b9\u3092\u7528\u610f\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3089\u3057\u3044\u3002\u6570\u9031\u9593\u524d\u306b\u8aad\u3093\u3060\u672c\u306b\u3082\u304a\u305d\u3089\u304f\u63b2\u8f09\u3055\u308c\u3066\u3044\u305f\u304c\u3001\u5fd8\u308c\u3066\u3044\u305f\u3002\n\n```clockCounter.tv\nlibrary IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\n\nentity testbench is\nend testbench;\n\narchitecture behavior of testbench is\nsignal clk : std_logic;\nsignal reset : std_logic;\nsignal out_d : std_logic_vector (3 downto 0);\nconstant clk_period : time := 10 ns;\n\nbegin\nuut: entity work.counter PORT MAP (\n    clk => clk,\n    reset => reset,\n    out_d => out_d);\n  \nstimulus : process\nbegin\n    wait for 5 ns;\n    reset <= '1';\n    wait for 5 ns;\n    reset <= '0';\n    wait for 300 ns;\nend process;\n\nclk_process : process\nbegin\n    clk <= '0';\n    wait for clk_period / 2;\n    clk <= '1';\n    wait for clk_period / 2;\nend process;\n\nend behavior;\n```\n\n## \u7d50\u679c\n\nRun Simulation\u306e\u7d50\u679c\n\nreset, clk\u306e\u5165\u529b\u306b\u5bfe\u3057\u3066\u3001out_d\u304c\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u3044\u304f\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n![qiita.png](https://qiita-image-store.s3.amazonaws.com/0/32870/4371b95b-bbcf-09be-18b8-65f03a2d9a57.png)\n\n\u3053\u308c\u3092\u767a\u5c55\u3055\u305b\u3066\u30d1\u30eb\u30b9\u30ab\u30a6\u30f3\u30c8\u3057\u305f\u3082\u306e\u3092UART\u51fa\u529b\u3059\u308b\u4e88\u5b9a\u3002\n\n", "tags": ["zybo", "VHDL"]}