{"context": " More than 1 year has passed since last update.\u683c\u597d\u826f\u3044\u5b9f\u88c5: http://qiita.com/cielavenir/items/8622dcd3ef14b2cfa85a\n\n\u7e01\u53d6\u308a\nlambda\u3092map\u3059\u308b\u3053\u3068\u3067\u3001\u30d5\u30a3\u30eb\u30bf\u3063\u307d\u3044\u611f\u3058\u306f\u793a\u305b\u305f\u3068\u601d\u3046\u3002\n\u3057\u304b\u3057\u3001\u300c\u5bbf\u984c\u300d\u306e\u65b9\u306f\u3001transpose\u3092\u4f7f\u3063\u305f\u306e\u3067\u8ca0\u3051\u3060\u3068\u601d\u3063\u3066\u3044\u308b\u3002\n\nmathgirl104.rb\n#!/usr/bin/ruby\n\n#\u3053\u3046\u3044\u3046\u6642\u306b\u30b4\u30eb\u30fc\u30c1\u30f3\u3063\u3066\u4fbf\u5229\u3063\u307d\u3044\u3088\u306d\u30fc\u3068\u611f\u3058\u308b\u2026\nfilter_right=lambda{|m|\n    m.map{|e|(e>>1)&0xffff}\n}\nfilter_left=lambda{|m|\n    m.map{|e|(e<<1)&0xffff}\n}\nfilter_up=lambda{|m|\n    [0]+m[0..14]\n}\nfilter_down=lambda{|m|\n    m[1..15]+[0]\n}\n\n#Q1\nm=DATA.map{|e|e.to_i(2)}\n[filter_right,filter_left,filter_up,filter_down].map{|e|\n    e.call(m)\n}.transpose.map{|e|\n    e.reduce(:&)^0xffff\n}.zip(m).map{|x,y|\n    x&y\n}.each{|e|\n    puts '%016b'%e\n}\n\n#Q2\nputs m.map{|e|\n    '%016b'%e\n}.map{|e|\n    e.reverse.each_char.to_a\n}.transpose.map{|e|\n    e.reverse.join\n}\n\n__END__\n0000000000000000\n0000000000000000\n0011111111111100\n0011111111111100\n0011111111111100\n0011100000000000\n0011100000000000\n0011111111100000\n0011111111100000\n0011111111100000\n0011100000000000\n0011100000000000\n0011100000000000\n0011100000000000\n0000000000000000\n0000000000000000\n\n\n\n\u53cd\u8ee2(\u30d3\u30c3\u30c8\u30b9\u30ef\u30c3\u30d7/\u30d0\u30a4\u30c8\u30b9\u30ef\u30c3\u30d7)\n\u666e\u901a\u306b\u5b9f\u52d9\u3067\u3082\u4f7f\u3048\u305d\u3046\u306a\u901f\u3044\u30b3\u30fc\u30c9\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u76ee\u304b\u3089\u3046\u308d\u3053\u3002\u305f\u3060\u3001unsigned\u304c\u4f7f\u3048\u306a\u3044\u8a00\u8a9e\u3060\u3068\u3042\u308c\u3060\u3063\u305f\u308a\u3059\u308b\u3093\u3060\u308d\u3046\u304b\u3002\n\nmathgirls104.c\n#include <stdio.h>\n\nunsigned long long bitswap64(unsigned long long n){\n    const unsigned long long m1=0x5555555555555555ULL;\n    const unsigned long long m2=0x3333333333333333ULL;\n    const unsigned long long m4=0x0f0f0f0f0f0f0f0fULL;\n    const unsigned long long m8=0x00ff00ff00ff00ffULL;\n    const unsigned long long m16=0x0000ffff0000ffffULL;\n    const unsigned long long m32=0x00000000ffffffffULL;\n    n=((n&m1)<<1)|((n>>1)&m1);\n    n=((n&m2)<<2)|((n>>2)&m2);\n    n=((n&m4)<<4)|((n>>4)&m4);\n    n=((n&m8)<<8)|((n>>8)&m8);\n    n=((n&m16)<<16)|((n>>16)&m16);\n    n=((n&m32)<<32)|((n>>32)&m32);\n    return n;\n}\nunsigned int bitswap32(unsigned int n){\n    const unsigned int m1=0x55555555;\n    const unsigned int m2=0x33333333;\n    const unsigned int m4=0x0f0f0f0f;\n    const unsigned int m8=0x00ff00ff;\n    const unsigned int m16=0x0000ffff;\n    n=((n&m1)<<1)|((n>>1)&m1);\n    n=((n&m2)<<2)|((n>>2)&m2);\n    n=((n&m4)<<4)|((n>>4)&m4);\n    n=((n&m8)<<8)|((n>>8)&m8);\n    n=((n&m16)<<16)|((n>>16)&m16);\n    return n;\n}\nunsigned short bitswap16(unsigned short n){\n    const unsigned short m1=0x5555;\n    const unsigned short m2=0x3333;\n    const unsigned short m4=0x0f0f;\n    const unsigned short m8=0x00ff;\n    n=((n&m1)<<1)|((n>>1)&m1);\n    n=((n&m2)<<2)|((n>>2)&m2);\n    n=((n&m4)<<4)|((n>>4)&m4);\n    n=((n&m8)<<8)|((n>>8)&m8);\n    return n;\n}\nunsigned char bitswap8(unsigned char n){\n    const unsigned char m1=0x55;\n    const unsigned char m2=0x33;\n    const unsigned char m4=0x0f;\n    n=((n&m1)<<1)|((n>>1)&m1);\n    n=((n&m2)<<2)|((n>>2)&m2);\n    n=((n&m4)<<4)|((n>>4)&m4);\n    return n;\n}\n\nunsigned long long byteswap64(unsigned long long n){\n    const unsigned long long m8=0x00ff00ff00ff00ffULL;\n    const unsigned long long m16=0x0000ffff0000ffffULL;\n    const unsigned long long m32=0x00000000ffffffffULL;\n    n=((n&m8)<<8)|((n>>8)&m8);\n    n=((n&m16)<<16)|((n>>16)&m16);\n    n=((n&m32)<<32)|((n>>32)&m32);\n    return n;\n}\nunsigned int byteswap32(unsigned int n){\n    const unsigned int m8=0x00ff00ff;\n    const unsigned int m16=0x0000ffff;\n    n=((n&m8)<<8)|((n>>8)&m8);\n    n=((n&m16)<<16)|((n>>16)&m16);\n    return n;\n}\nunsigned short byteswap16(unsigned short n){\n    const unsigned short m8=0x00ff;\n    n=((n&m8)<<8)|((n>>8)&m8);\n    return n;\n}\n\nunsigned long long popcnt64(unsigned long long n){\n    const unsigned long long m1=0x5555555555555555ULL;\n    const unsigned long long m2=0x3333333333333333ULL;\n    const unsigned long long m4=0x0f0f0f0f0f0f0f0fULL;\n    const unsigned long long m8=0x00ff00ff00ff00ffULL;\n    const unsigned long long m16=0x0000ffff0000ffffULL;\n    const unsigned long long m32=0x00000000ffffffffULL;\n    n=((n>>1)&m1)+(n&m1);\n    n=((n>>2)&m2)+(n&m2);\n    n=((n>>4)&m4)+(n&m4);\n    n=((n>>8)&m8)+(n&m8);\n    n=((n>>16)&m16)+(n&m16);\n    n=((n>>32)&m32)+(n&m32);\n    return n;\n}\nunsigned int popcnt32(unsigned int n){\n    const unsigned int m1=0x55555555;\n    const unsigned int m2=0x33333333;\n    const unsigned int m4=0x0f0f0f0f;\n    const unsigned int m8=0x00ff00ff;\n    const unsigned int m16=0x0000ffff;\n    n=((n>>1)&m1)+(n&m1);\n    n=((n>>2)&m2)+(n&m2);\n    n=((n>>4)&m4)+(n&m4);\n    n=((n>>8)&m8)+(n&m8);\n    n=((n>>16)&m16)+(n&m16);\n    return n;\n}\nunsigned short popcnt16(unsigned short n){\n    const unsigned short m1=0x5555;\n    const unsigned short m2=0x3333;\n    const unsigned short m4=0x0f0f;\n    const unsigned short m8=0x00ff;\n    n=((n>>1)&m1)+(n&m1);\n    n=((n>>2)&m2)+(n&m2);\n    n=((n>>4)&m4)+(n&m4);\n    n=((n>>8)&m8)+(n&m8);\n    return n;\n}\nunsigned char popcnt8(unsigned char n){\n    const unsigned char m1=0x55;\n    const unsigned char m2=0x33;\n    const unsigned char m4=0x0f;\n    n=((n>>1)&m1)+(n&m1);\n    n=((n>>2)&m2)+(n&m2);\n    n=((n>>4)&m4)+(n&m4);\n    return n;\n}\n\nint main(){\n    unsigned long long x=12345678901234567890ULL;\n    printf(\"%llu\\n\",bitswap64(x));\n    printf(\"%llu\\n\",byteswap64(x));\n    printf(\"%llu\\n\",popcnt64(x));\n}\n\n\n\npopcnt\n\u4e0a\u306e\u30b3\u30fc\u30c9\u3001popcnt\u3082\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u305f\u3002\u4eca\u307e\u3067popcnt\u306f\u9ed2\u9b54\u8853\u3060\u3068\u601d\u3063\u3066\u3044\u305f\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u4f55\u3092\u3084\u3063\u3066\u3044\u308b\u304b\u3060\u3051\u306f\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n\u683c\u597d\u826f\u3044\u5b9f\u88c5: http://qiita.com/cielavenir/items/8622dcd3ef14b2cfa85a\n\n##\u7e01\u53d6\u308a\n\nlambda\u3092map\u3059\u308b\u3053\u3068\u3067\u3001\u30d5\u30a3\u30eb\u30bf\u3063\u307d\u3044\u611f\u3058\u306f\u793a\u305b\u305f\u3068\u601d\u3046\u3002\n\u3057\u304b\u3057\u3001\u300c\u5bbf\u984c\u300d\u306e\u65b9\u306f\u3001transpose\u3092\u4f7f\u3063\u305f\u306e\u3067\u8ca0\u3051\u3060\u3068\u601d\u3063\u3066\u3044\u308b\u3002\n\n```rb:mathgirl104.rb\n#!/usr/bin/ruby\n\n#\u3053\u3046\u3044\u3046\u6642\u306b\u30b4\u30eb\u30fc\u30c1\u30f3\u3063\u3066\u4fbf\u5229\u3063\u307d\u3044\u3088\u306d\u30fc\u3068\u611f\u3058\u308b\u2026\nfilter_right=lambda{|m|\n\tm.map{|e|(e>>1)&0xffff}\n}\nfilter_left=lambda{|m|\n\tm.map{|e|(e<<1)&0xffff}\n}\nfilter_up=lambda{|m|\n\t[0]+m[0..14]\n}\nfilter_down=lambda{|m|\n\tm[1..15]+[0]\n}\n\n#Q1\nm=DATA.map{|e|e.to_i(2)}\n[filter_right,filter_left,filter_up,filter_down].map{|e|\n\te.call(m)\n}.transpose.map{|e|\n\te.reduce(:&)^0xffff\n}.zip(m).map{|x,y|\n\tx&y\n}.each{|e|\n\tputs '%016b'%e\n}\n\n#Q2\nputs m.map{|e|\n\t'%016b'%e\n}.map{|e|\n\te.reverse.each_char.to_a\n}.transpose.map{|e|\n\te.reverse.join\n}\n\n__END__\n0000000000000000\n0000000000000000\n0011111111111100\n0011111111111100\n0011111111111100\n0011100000000000\n0011100000000000\n0011111111100000\n0011111111100000\n0011111111100000\n0011100000000000\n0011100000000000\n0011100000000000\n0011100000000000\n0000000000000000\n0000000000000000\n```\n\n##\u53cd\u8ee2(\u30d3\u30c3\u30c8\u30b9\u30ef\u30c3\u30d7/\u30d0\u30a4\u30c8\u30b9\u30ef\u30c3\u30d7)\n\n\u666e\u901a\u306b\u5b9f\u52d9\u3067\u3082\u4f7f\u3048\u305d\u3046\u306a\u901f\u3044\u30b3\u30fc\u30c9\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u76ee\u304b\u3089\u3046\u308d\u3053\u3002\u305f\u3060\u3001unsigned\u304c\u4f7f\u3048\u306a\u3044\u8a00\u8a9e\u3060\u3068\u3042\u308c\u3060\u3063\u305f\u308a\u3059\u308b\u3093\u3060\u308d\u3046\u304b\u3002\n\n```c:mathgirls104.c\n#include <stdio.h>\n\nunsigned long long bitswap64(unsigned long long n){\n\tconst unsigned long long m1=0x5555555555555555ULL;\n\tconst unsigned long long m2=0x3333333333333333ULL;\n\tconst unsigned long long m4=0x0f0f0f0f0f0f0f0fULL;\n\tconst unsigned long long m8=0x00ff00ff00ff00ffULL;\n\tconst unsigned long long m16=0x0000ffff0000ffffULL;\n\tconst unsigned long long m32=0x00000000ffffffffULL;\n\tn=((n&m1)<<1)|((n>>1)&m1);\n\tn=((n&m2)<<2)|((n>>2)&m2);\n\tn=((n&m4)<<4)|((n>>4)&m4);\n\tn=((n&m8)<<8)|((n>>8)&m8);\n\tn=((n&m16)<<16)|((n>>16)&m16);\n\tn=((n&m32)<<32)|((n>>32)&m32);\n\treturn n;\n}\nunsigned int bitswap32(unsigned int n){\n\tconst unsigned int m1=0x55555555;\n\tconst unsigned int m2=0x33333333;\n\tconst unsigned int m4=0x0f0f0f0f;\n\tconst unsigned int m8=0x00ff00ff;\n\tconst unsigned int m16=0x0000ffff;\n\tn=((n&m1)<<1)|((n>>1)&m1);\n\tn=((n&m2)<<2)|((n>>2)&m2);\n\tn=((n&m4)<<4)|((n>>4)&m4);\n\tn=((n&m8)<<8)|((n>>8)&m8);\n\tn=((n&m16)<<16)|((n>>16)&m16);\n\treturn n;\n}\nunsigned short bitswap16(unsigned short n){\n\tconst unsigned short m1=0x5555;\n\tconst unsigned short m2=0x3333;\n\tconst unsigned short m4=0x0f0f;\n\tconst unsigned short m8=0x00ff;\n\tn=((n&m1)<<1)|((n>>1)&m1);\n\tn=((n&m2)<<2)|((n>>2)&m2);\n\tn=((n&m4)<<4)|((n>>4)&m4);\n\tn=((n&m8)<<8)|((n>>8)&m8);\n\treturn n;\n}\nunsigned char bitswap8(unsigned char n){\n\tconst unsigned char m1=0x55;\n\tconst unsigned char m2=0x33;\n\tconst unsigned char m4=0x0f;\n\tn=((n&m1)<<1)|((n>>1)&m1);\n\tn=((n&m2)<<2)|((n>>2)&m2);\n\tn=((n&m4)<<4)|((n>>4)&m4);\n\treturn n;\n}\n\nunsigned long long byteswap64(unsigned long long n){\n\tconst unsigned long long m8=0x00ff00ff00ff00ffULL;\n\tconst unsigned long long m16=0x0000ffff0000ffffULL;\n\tconst unsigned long long m32=0x00000000ffffffffULL;\n\tn=((n&m8)<<8)|((n>>8)&m8);\n\tn=((n&m16)<<16)|((n>>16)&m16);\n\tn=((n&m32)<<32)|((n>>32)&m32);\n\treturn n;\n}\nunsigned int byteswap32(unsigned int n){\n\tconst unsigned int m8=0x00ff00ff;\n\tconst unsigned int m16=0x0000ffff;\n\tn=((n&m8)<<8)|((n>>8)&m8);\n\tn=((n&m16)<<16)|((n>>16)&m16);\n\treturn n;\n}\nunsigned short byteswap16(unsigned short n){\n\tconst unsigned short m8=0x00ff;\n\tn=((n&m8)<<8)|((n>>8)&m8);\n\treturn n;\n}\n\nunsigned long long popcnt64(unsigned long long n){\n\tconst unsigned long long m1=0x5555555555555555ULL;\n\tconst unsigned long long m2=0x3333333333333333ULL;\n\tconst unsigned long long m4=0x0f0f0f0f0f0f0f0fULL;\n\tconst unsigned long long m8=0x00ff00ff00ff00ffULL;\n\tconst unsigned long long m16=0x0000ffff0000ffffULL;\n\tconst unsigned long long m32=0x00000000ffffffffULL;\n\tn=((n>>1)&m1)+(n&m1);\n\tn=((n>>2)&m2)+(n&m2);\n\tn=((n>>4)&m4)+(n&m4);\n\tn=((n>>8)&m8)+(n&m8);\n\tn=((n>>16)&m16)+(n&m16);\n\tn=((n>>32)&m32)+(n&m32);\n\treturn n;\n}\nunsigned int popcnt32(unsigned int n){\n\tconst unsigned int m1=0x55555555;\n\tconst unsigned int m2=0x33333333;\n\tconst unsigned int m4=0x0f0f0f0f;\n\tconst unsigned int m8=0x00ff00ff;\n\tconst unsigned int m16=0x0000ffff;\n\tn=((n>>1)&m1)+(n&m1);\n\tn=((n>>2)&m2)+(n&m2);\n\tn=((n>>4)&m4)+(n&m4);\n\tn=((n>>8)&m8)+(n&m8);\n\tn=((n>>16)&m16)+(n&m16);\n\treturn n;\n}\nunsigned short popcnt16(unsigned short n){\n\tconst unsigned short m1=0x5555;\n\tconst unsigned short m2=0x3333;\n\tconst unsigned short m4=0x0f0f;\n\tconst unsigned short m8=0x00ff;\n\tn=((n>>1)&m1)+(n&m1);\n\tn=((n>>2)&m2)+(n&m2);\n\tn=((n>>4)&m4)+(n&m4);\n\tn=((n>>8)&m8)+(n&m8);\n\treturn n;\n}\nunsigned char popcnt8(unsigned char n){\n\tconst unsigned char m1=0x55;\n\tconst unsigned char m2=0x33;\n\tconst unsigned char m4=0x0f;\n\tn=((n>>1)&m1)+(n&m1);\n\tn=((n>>2)&m2)+(n&m2);\n\tn=((n>>4)&m4)+(n&m4);\n\treturn n;\n}\n\nint main(){\n\tunsigned long long x=12345678901234567890ULL;\n\tprintf(\"%llu\\n\",bitswap64(x));\n\tprintf(\"%llu\\n\",byteswap64(x));\n\tprintf(\"%llu\\n\",popcnt64(x));\n}\n```\n\n## popcnt\n\n\u4e0a\u306e\u30b3\u30fc\u30c9\u3001popcnt\u3082\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u305f\u3002\u4eca\u307e\u3067popcnt\u306f\u9ed2\u9b54\u8853\u3060\u3068\u601d\u3063\u3066\u3044\u305f\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u4f55\u3092\u3084\u3063\u3066\u3044\u308b\u304b\u3060\u3051\u306f\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n", "tags": ["Ruby", "C\u8a00\u8a9e"]}