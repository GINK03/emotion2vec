{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\n\u666e\u6bb5\u4f5c\u3063\u3066\u3044\u308bGreen\u3068\u3044\u3046\u30b5\u30fc\u30d3\u30b9\u306b\u3066\u3001\u4f01\u696d\u540d\u306e\u5165\u529b\u88dc\u5b8c\u3092\u5b9f\u88c5\u3057\u305f\u3044\u3002\n\u305f\u3060MySQL\u3067\u5b9f\u88c5\u3059\u308b\u306e\u306f\u3001\u6027\u80fd\u7684\u306b\u3082\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u7684\u306b\u3082\u5fae\u5999\u3059\u304e\u308b\u306e\u3067\u3001webpay\u3055\u3093\u306e\u30d6\u30ed\u30b0\u3092\u53c2\u8003\u306bredis\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nRedis\u306e\u8aac\u660e\u306f\u6d41\u77f3\u306b\u4e0d\u8981\u3060\u3068\u601d\u3046\u306e\u3067\u3001\u5272\u611b\u3055\u305b\u3066\u9802\u304d\u307e\u3059w\n\n\u5b9f\u88c5\u65b9\u6cd5\n\n\u6982\u8981\n\njs\u5074\u3067\u5165\u529b\u3092\u30d5\u30c3\u30af\u306bapi\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u98db\u3070\u3059\napi\u5074\u3067redis\u306b\u5165\u308c\u305f\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\u3059\u308b\n\n\n\u30b3\u30fc\u30c9\n\nclass FluctuatedCompany\n  REDIS_KEY = \"fluctuated_company_names_inverted_index_v2\"\n\n  def initialize\n    @redis = Redis.new()\n  end \n\n  def search(query)\n    found = []\n    next_cursor = 0 \n    begin\n      next_cursor_resp, resp = @redis.hscan(REDIS_KEY, next_cursor, 'MATCH', '*%s*' % query, 'COUNT', 100)\n      next_cursor = next_cursor_resp.to_i\n      resp.each_slice(2) { |pair| found += decode(pair[1]) }\n    end while next_cursor > 0 \n    found.uniq\n  end \n\n  def add(company_id, *fluctuated_names)\n    fluctuated_names.reject{ |fluctuated_name| fluctuated_name.blank? }.each do |fluctuated_name|\n      ids = decode(@redis.hget(REDIS_KEY, [fluctuated_name]))\n      ids << company_id\n      @redis.hset(REDIS_KEY, fluctuated_name, ids.uniq.join(','))\n    end \n  end \n\n  private\n  def decode(value)\n    (value || '').split(',').map(&:to_i)\n  end \n\n  def encode(ids)\n    ids.join(',')\n  end \nend\n\n\n\n$(function() {\n  // \u4ee5\u4e0b\u4f01\u696d\u540d\u306e\u30aa\u30fc\u30c8\u30b3\u30f3\u30d7\u30ea\u30fc\u30c8\n  var suggestTimerID;\n  var suggestBoxManager = new SuggestBoxManager({\n    inputSelector: \".js-user_company_name_input\",\n    listSelector: \".js-suggest_company_box\",\n    eventSelector: \".js-user_company_name_box\"\n  }); \n  suggestBoxManager.generate();\n\n  $(document).on('keyup paste', 'input.js-user_company_name_input', function() {\n    var _self = $(this);\n    var index = $('.js-user_company_name_input').index(_self);\n    var suggestBox = suggestBoxManager.findByIndex(index);\n    var suggestClearTimer = clearTimeout(suggestTimerID);\n\n    suggestTimerID = setTimeout(function() {\n      suggestBox.show();\n      suggestBox.suggest(_self.val(), {\n        done: function(data) {\n          suggestBox.reset();\n          for(var i = 0, len = data.companies.length; i < len; i++) {\n            suggestBox.dom.append('\u203bhtml\u3092\u8ffd\u52a0');\n          }\n\n          // \u30ea\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u306eclick\u30a4\u30d9\u30f3\u30c8\u3092bind\n          $('.js-suggest_company_list').click(function() {\n            $(this).closest('td').find('.js-user_company_id').val($(this).data('id'));\n            suggestBox.inputDom.val($(this).data('name')).change();\n            suggestBox.hide();\n          }); \n        }   \n      }); \n    },300);\n\n  }); \n});\n\nvar SuggestBoxManager = function(customOptions) {                                                                                                                                              \n  this.container = [];\n  this.options = $.extend({}, {\n                   inputSelector: '.js-user_company_name_input',\n                   listSelector: \".js-suggest_company_box\",\n                   eventSelector: \".js-user_company_name_box\"\n                 }, customOptions);\n}\n\nSuggestBoxManager.prototype = {\n  add: function(suggestBox) {\n    this.container.push(suggestBox);\n  },\n  generate: function(){\n    var _self = this;\n    var target = $(_self.options.eventSelector);\n    target.each( function(){\n      var suggestBox = new SuggestBox($(this).find(_self.options.listSelector), $(this).find(_self.options.inputSelector));\n      _self.add(suggestBox);\n    });\n  },\n  regenere: function(){\n    this.generate();\n  },\n  findByIndex: function(index){\n     return this.container[index];\n  }\n}\n\nvar SuggestBox = function(dom, inputDom, customOptions){\n  if (customOptions === undefined) customOptions = {};\n  this.dom = dom;\n  this.inputDom = inputDom;\n  this.options = $.extend({}, {\n                   resourceUrl: '/apis/companies.json'\n                 }, customOptions);\n}\n\nSuggestBox.prototype = {\n  show: function() {\n    this.dom.show();\n  },\n  hide: function() {\n    this.dom.hide();\n  },\n  reset: function() {\n    this.dom.html('');\n  },\n  suggest: function(resourceName, callback) {\n    var callback = (callback === undefined) ? {} : callback;\n    $.ajax({\n      method: \"GET\",\n      data: { resource_name: resourceName },\n      url : this.options.resourceUrl,\n      context: this,\n      beforeSend: function(){\n        if(callback.beforeSend) callback.beforeSend();\n      }\n    }).done(function(data, textStatus, jqXHR){\n      if(callback.done) callback.done(data, textStatus, jqXHR);                                                                                                                                \n    }).fail(function(jqXHR, textStatus, errorThrown){\n      if(callback.fail) callback.fail(jqXHR, textStatus, errorThrown);\n    }).always(function(xhr,status){\n      if(callback.always) callback.always(xhr,status);\n    });\n  }\n}\n\n\n\u6e96\u5099\nadd\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u5165\u529b\u88dc\u5b8c\u306b\u4f7f\u3044\u305f\u3044\u5019\u88dc\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u8fbc\u3093\u3067\u4e0b\u3055\u3044\u3002\n\n\u7d50\u679c\nUI\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\u3044\u3044\u611f\u3058\u306b\u4ed5\u4e0a\u304c\u308a\u307e\u3057\u305f\u3002\n\u3055\u3059\u304credis\u826f\u3044\u4ed5\u4e8b\u3092\u3057\u3066\u304f\u308c\u307e\u3059\u306d\uff01\n\n\n## \u76ee\u7684\n\n\u666e\u6bb5\u4f5c\u3063\u3066\u3044\u308bGreen\u3068\u3044\u3046\u30b5\u30fc\u30d3\u30b9\u306b\u3066\u3001\u4f01\u696d\u540d\u306e\u5165\u529b\u88dc\u5b8c\u3092\u5b9f\u88c5\u3057\u305f\u3044\u3002\n\u305f\u3060MySQL\u3067\u5b9f\u88c5\u3059\u308b\u306e\u306f\u3001\u6027\u80fd\u7684\u306b\u3082\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u7684\u306b\u3082\u5fae\u5999\u3059\u304e\u308b\u306e\u3067\u3001[webpay\u3055\u3093\u306e\u30d6\u30ed\u30b0](http://engineering.webpay.co.jp/2014/09/29/redis-inverted-index/)\u3092\u53c2\u8003\u306bredis\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nRedis\u306e\u8aac\u660e\u306f\u6d41\u77f3\u306b\u4e0d\u8981\u3060\u3068\u601d\u3046\u306e\u3067\u3001\u5272\u611b\u3055\u305b\u3066\u9802\u304d\u307e\u3059w\n\n## \u5b9f\u88c5\u65b9\u6cd5\n\n### \u6982\u8981\n\n- js\u5074\u3067\u5165\u529b\u3092\u30d5\u30c3\u30af\u306bapi\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u98db\u3070\u3059\n- api\u5074\u3067redis\u306b\u5165\u308c\u305f\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\u3059\u308b\n\n### \u30b3\u30fc\u30c9\n\n```ruby\n\nclass FluctuatedCompany\n  REDIS_KEY = \"fluctuated_company_names_inverted_index_v2\"\n                                                                                                                                                                                               \n  def initialize\n    @redis = Redis.new()\n  end \n\n  def search(query)\n    found = []\n    next_cursor = 0 \n    begin\n      next_cursor_resp, resp = @redis.hscan(REDIS_KEY, next_cursor, 'MATCH', '*%s*' % query, 'COUNT', 100)\n      next_cursor = next_cursor_resp.to_i\n      resp.each_slice(2) { |pair| found += decode(pair[1]) }\n    end while next_cursor > 0 \n    found.uniq\n  end \n\n  def add(company_id, *fluctuated_names)\n    fluctuated_names.reject{ |fluctuated_name| fluctuated_name.blank? }.each do |fluctuated_name|\n      ids = decode(@redis.hget(REDIS_KEY, [fluctuated_name]))\n      ids << company_id\n      @redis.hset(REDIS_KEY, fluctuated_name, ids.uniq.join(','))\n    end \n  end \n\n  private\n  def decode(value)\n    (value || '').split(',').map(&:to_i)\n  end \n\n  def encode(ids)\n    ids.join(',')\n  end \nend\n\n```\n\n\n```javascript\n\n$(function() {\n  // \u4ee5\u4e0b\u4f01\u696d\u540d\u306e\u30aa\u30fc\u30c8\u30b3\u30f3\u30d7\u30ea\u30fc\u30c8\n  var suggestTimerID;\n  var suggestBoxManager = new SuggestBoxManager({\n    inputSelector: \".js-user_company_name_input\",\n    listSelector: \".js-suggest_company_box\",\n    eventSelector: \".js-user_company_name_box\"\n  }); \n  suggestBoxManager.generate();\n\n  $(document).on('keyup paste', 'input.js-user_company_name_input', function() {\n    var _self = $(this);\n    var index = $('.js-user_company_name_input').index(_self);\n    var suggestBox = suggestBoxManager.findByIndex(index);\n    var suggestClearTimer = clearTimeout(suggestTimerID);\n    \n    suggestTimerID = setTimeout(function() {\n      suggestBox.show();\n      suggestBox.suggest(_self.val(), {\n        done: function(data) {\n          suggestBox.reset();\n          for(var i = 0, len = data.companies.length; i < len; i++) {\n            suggestBox.dom.append('\u203bhtml\u3092\u8ffd\u52a0');\n          }\n\n          // \u30ea\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u306eclick\u30a4\u30d9\u30f3\u30c8\u3092bind\n          $('.js-suggest_company_list').click(function() {\n            $(this).closest('td').find('.js-user_company_id').val($(this).data('id'));\n            suggestBox.inputDom.val($(this).data('name')).change();\n            suggestBox.hide();\n          }); \n        }   \n      }); \n    },300);\n\n  }); \n});\n\nvar SuggestBoxManager = function(customOptions) {                                                                                                                                              \n  this.container = [];\n  this.options = $.extend({}, {\n                   inputSelector: '.js-user_company_name_input',\n                   listSelector: \".js-suggest_company_box\",\n                   eventSelector: \".js-user_company_name_box\"\n                 }, customOptions);\n}\n\nSuggestBoxManager.prototype = {\n  add: function(suggestBox) {\n    this.container.push(suggestBox);\n  },\n  generate: function(){\n    var _self = this;\n    var target = $(_self.options.eventSelector);\n    target.each( function(){\n      var suggestBox = new SuggestBox($(this).find(_self.options.listSelector), $(this).find(_self.options.inputSelector));\n      _self.add(suggestBox);\n    });\n  },\n  regenere: function(){\n    this.generate();\n  },\n  findByIndex: function(index){\n     return this.container[index];\n  }\n}\n\nvar SuggestBox = function(dom, inputDom, customOptions){\n  if (customOptions === undefined) customOptions = {};\n  this.dom = dom;\n  this.inputDom = inputDom;\n  this.options = $.extend({}, {\n                   resourceUrl: '/apis/companies.json'\n                 }, customOptions);\n}\n\nSuggestBox.prototype = {\n  show: function() {\n    this.dom.show();\n  },\n  hide: function() {\n    this.dom.hide();\n  },\n  reset: function() {\n    this.dom.html('');\n  },\n  suggest: function(resourceName, callback) {\n    var callback = (callback === undefined) ? {} : callback;\n    $.ajax({\n      method: \"GET\",\n      data: { resource_name: resourceName },\n      url : this.options.resourceUrl,\n      context: this,\n      beforeSend: function(){\n        if(callback.beforeSend) callback.beforeSend();\n      }\n    }).done(function(data, textStatus, jqXHR){\n      if(callback.done) callback.done(data, textStatus, jqXHR);                                                                                                                                \n    }).fail(function(jqXHR, textStatus, errorThrown){\n      if(callback.fail) callback.fail(jqXHR, textStatus, errorThrown);\n    }).always(function(xhr,status){\n      if(callback.always) callback.always(xhr,status);\n    });\n  }\n}\n```\n\n## \u6e96\u5099\n\nadd\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u5165\u529b\u88dc\u5b8c\u306b\u4f7f\u3044\u305f\u3044\u5019\u88dc\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u8fbc\u3093\u3067\u4e0b\u3055\u3044\u3002\n\n## \u7d50\u679c\n\nUI\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\u3044\u3044\u611f\u3058\u306b\u4ed5\u4e0a\u304c\u308a\u307e\u3057\u305f\u3002\n\u3055\u3059\u304credis\u826f\u3044\u4ed5\u4e8b\u3092\u3057\u3066\u304f\u308c\u307e\u3059\u306d\uff01\n\n![gif_m.gif](https://qiita-image-store.s3.amazonaws.com/0/5365/1d1fab44-8796-00df-0624-6f7f1184fb0e.gif \"gif_m.gif\")\n\n", "tags": ["Ruby", "Rails", "Redis"]}