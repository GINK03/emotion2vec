{"context": "\n\nMessage Buttons \u697d\u3057\u305d\u3046\u2026\n\u9762\u767d\u305d\u3046\u306a\u306e\u306b\u3042\u307e\u308a\u6d41\u884c\u3063\u3066\u3044\u306a\u3044\u3067\u304a\u306a\u3058\u307f\u3001Slack\u306eMessage Buttons\u3002\nslack\u65b0\u6a5f\u80fd\uff01message button\u3092\u4f7f\u3063\u3066botkit\u3092\u30ec\u30d9\u30eb\u30a2\u30c3\u30d7\u3055\u305b\u308b\uff01\n\u306b\u306a\u3089\u3063\u3066\u3001heroku\u306eFree\u30d7\u30e9\u30f3\u3067\u69cb\u7bc9\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u57fa\u672c\u7684\u306b\u306f\u4e0a\u8a18\u306e\u30ea\u30f3\u30af\u306e\u624b\u9806\u3067\u9032\u3081\u308c\u3070\u3001\u30dc\u30bf\u30f3\u306e\u8868\u793a\u2192\u304a\u8fd4\u4e8b\u307e\u3067\u306f\u3059\u3050\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u50d5\u306f\u9014\u4e2d\u3067SlackApp\u3078\u306e\u5404\u7a2eURL\u767b\u9332\u3092\u98db\u3070\u3057\u3066\u82e5\u5e72\u306f\u307e\u308a\u307e\u3057\u305f\u2026\u3002\n\n\u2026\u3042\u308c?\n\u4e00\u5ea6\u8a8d\u8a3c\u3057\u3066\u3044\u308b\u306f\u305a\u306a\u306e\u306b\u3001Dyno\u518d\u8d77\u52d5\u306e\u305f\u3073\u306b\u518d\u8a8d\u8a3c\u304c\u5fc5\u8981\u306b\u306a\u3063\u3061\u3083\u3046\u2026\u3002\n\u5143\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u3042\u3063\u305f\u30b3\u30fc\u30c9\u304c\u306a\u3044\u304b\u3089\u304b\u306a? \u3068\u601d\u3044\u3001\u8ffd\u52a0\u3057\u307e\u3057\u305f\u304c\u3084\u3063\u3071\u308a\u3060\u3081\u3002\n\u3069\u3046\u3084\u3089\u3001Botkit\u306f\u30ed\u30fc\u30ab\u30eb\u306edb_slackbutton_bot\u306a\u308b\u30d5\u30a9\u30eb\u30c0\u306b\u3001OAuth\u306e\u30c8\u30fc\u30af\u30f3\u3092\u4fdd\u5b58\u3057\u3066\u3044\u3066\u3001heroku\u306eFree\u30d7\u30e9\u30f3\u3060\u3068\u3053\u308c\u304c\u6d88\u3048\u3061\u3083\u3046\u3093\u3067\u3059\u306d\u3002\n\n(\u8ffd\u8a18)\n\u304a\u4e16\u8a71\u306b\u306a\u3063\u305f\u8a18\u4e8b\u306e@LOUIS_rui\u3055\u3093\u306b\u30b3\u30e1\u30f3\u30c8\u3057\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\nHeroku\u306emLab\u3068\u3044\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u6c38\u7d9a\u5316\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306e\u5b58\u5728\u610f\u7fa9\u3068\u306f\u3002\n\n\u3082\u3046\u3044\u3044\u3001EC2\u3067\u305f\u3066\u3088\u3046\n\u3053\u3053\u3067https\u30b5\u30fc\u30d0\u5fc5\u9808\u304c\u7acb\u3061\u306f\u3060\u304b\u308a\u307e\u3059\nnginx\u305f\u3066\u3066https\u3092\u30ed\u30fc\u30ab\u30eb\u306eNode\u3078\u6d41\u3057\u3066\u307f\u305f\u306e\u3067\u3059\u304c\u3001\u30aa\u30ec\u30aa\u30ec\u8a3c\u660e\u66f8\u3060\u3068\u3060\u3081\u3002(App\u30da\u30fc\u30b8\u306e Interactive Messages \u3067URL\u3092\u767b\u9332\u3067\u304d\u307e\u305b\u3093)\n\u8a3c\u660e\u66f8\u3092let's encrypt\u3067\u53d6\u5f97\u3057\u3088\u3046\u3068\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c9\u30e1\u30a4\u30f3(xxxxx.ap-northeast-1.compute.amazonaws.com\u7684\u306a\u3084\u3064)\u3060\u3068\u4f5c\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\n\nS3\u3092\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u3057\u3088\u3046!\n\u5446\u7136\u3068Botkit\u306e\u30bd\u30fc\u30b9\u3092\u773a\u3081\u3066\u3044\u305f\u3068\u3053\u308d\u3001\u3053\u3093\u306a\u30b3\u30fc\u30c9\u3092\u767a\u898b\u3002\n\u3053\u306e\u8fba\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5b9f\u88c5\u3059\u308c\u3070\u3001\u30ab\u30b9\u30bf\u30e0\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u4f7f\u3048\u308b\u3063\u3066\u3053\u3068\u3067\u3059\u306d!\n\u3068\u3044\u3046\u3053\u3068\u3067bot\u306fheroku\u4e0a\u3067\u52d5\u304b\u3057\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u3057\u3066S3\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u305f\u306e\u3067\u3057\u305f\u3002\n\u30b9\u30c8\u30ec\u30fc\u30b8\u30af\u30e9\u30b9\u306e\u30bd\u30fc\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306esimple_storage.js\u3092\u30d1\u30af\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nS3\u7528API\u306eAccessKey\u3068SecretKey\u306f\u4e8b\u524d\u306b\u53d6\u5f97\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\ns3_storage.js\n/*\nStorage module for bots.\nUsing AWS S3 storage.\n\nConfiguration:\n  accessKey: s3 access key\n  secretKey: s3 secret key\n  bucket: target bucket\n  path: path to s3 folder\n  region(optional): s3 region (default: us-east-1)\n*/\n\nvar aws = require('aws-sdk');\nvar async = require('async');\n\nmodule.exports = function (config) {\n\n  if (!config) {\n    return {};\n  }\n\n  var teams_db = config.path + '/teams/';\n  var users_db = config.path + '/users/';\n  var channels_db = config.path + '/channels/';\n  var bucket = config.bucket;\n\n  aws.config.update({\n    accessKeyId: config.accessKey,\n    secretAccessKey: config.secretKey,\n    region: config.region || 'us-east-1'\n  });\n\n  var objectsToList = function (cb) {\n    return function (err, data) {\n      if (err) {\n        cb(err, data);\n      } else {\n        cb(err, Object.keys(data).map(function (key) {\n          return data[key];\n        }));\n      }\n    };\n  };\n\n  var s3 = new aws.S3();\n  var put = function (id, data, cb) {\n    var param = {\n      Bucket: bucket,\n      Key: id,\n      Body: JSON.stringify(data)\n    };\n    // http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#putObject-property\n    s3.putObject(param, function (err, data) {\n      if (err) {\n        return cb ? cb(err) : err;\n      }\n      return cb ? cb(null, data) : data;\n    });\n  };\n  var get = function (id, cb) {\n    var param = {\n      Bucket: bucket,\n      Key: id\n    };\n    // http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n    s3.getObject(param, function (err, data) {\n      if (err) {\n        return cb ? cb(err) : err;\n      }\n      var obj = JSON.parse(data.Body.toString());\n      return cb ? cb(null, obj) : obj;\n    });\n  };\n  var list = function (prefix, cb) {\n    var param = {\n      Bucket: bucket,\n      Prefix: prefix\n    };\n    // http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#listObjects-property\n    s3.listObjects(param, function (err, data) {\n      if (err) {\n        return cb ? cb(err) : err;\n      }\n\n      var all = {};\n      var funcs = [];\n      data.Contents.forEach(function (content) {\n        funcs.push((function (_key) {\n          return function (callback) {\n            get(_key, function (e, obj) {\n              if (!e) {\n                all[obj.id] = obj;\n              }\n              callback(e);\n            });\n          };\n        })(content.Key));\n      });\n\n      return async.parallel(funcs, function (error) {\n        return cb ? cb(error, all) : all;\n      });\n    });\n  };\n\n  // teams, users, channels \u3068\n  // \u305d\u308c\u305e\u308c\u306b get, save, all \u304c\u3042\u308c\u3070Storage\u3068\u3057\u3066\u4f7f\u3048\u308b\n  var storage = {\n    teams: {\n      get: function (team_id, cb) {\n        get(teams_db + team_id, cb);\n      },\n      save: function (team_data, cb) {\n        put(teams_db + team_data.id, team_data, cb);\n      },\n      all: function (cb) {\n        list(teams_db, objectsToList(cb));\n      }\n    },\n    users: {\n      get: function (user_id, cb) {\n        get(users_db + user_id, cb);\n      },\n      save: function (user, cb) {\n        put(users_db + user.id, user, cb);\n      },\n      all: function (cb) {\n        list(users_db, objectsToList(cb));\n      }\n    },\n    channels: {\n      get: function (channel_id, cb) {\n        get(channels_db + channel_id, cb);\n      },\n      save: function (channel, cb) {\n        put(channels_db + channel.id, channel, cb);\n      },\n      all: function (cb) {\n        list(channels_db, objectsToList(cb));\n      }\n    }\n  };\n\n  return storage;\n};\n\n\n\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306ejs\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u4fee\u6b63\u3057\u307e\u3059\u3002\n\nindex.js\nvar s3Storage = require('./s3_storage');\n...\n\nvar controller = Botkit.slackbot({conversations\n  // json_file_store: './db_slackbutton_bot/',\n  storage: new s3Storage({\n    path: process.env.s3Path,\n    bucket: process.env.s3Bucket,\n    accessKey: process.env.s3AccessKey,\n    secretKey: process.env.s3SecretKey\n  })\n}).configureSlackApp({\n  clientId: process.env.clientId,\n  clientSecret: process.env.clientSecret,\n  scopes: ['bot'],\n});\n\n...\n\n\n\u3053\u308c\u3067\u3001Dyno\u518d\u8d77\u52d5\u6642\u3082\u8a8d\u8a3c\u60c5\u5831\u3092\u3082\u3068\u306bbot\u304c\u518d\u63a5\u7d9a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u3081\u3067\u305f\u3057\u3081\u3067\u305f\u3057\u3002\u7686\u3055\u3093\u3082 Message Buttons \u8a66\u3057\u307e\u3057\u3087\u3046!\n\u3042\u300130\u5206\u3067Sleep\u3057\u3061\u3083\u3046\u306e\u3082\u5bfe\u7b56\u3057\u306a\u304d\u3083\u2026\u3002\n## Message Buttons \u697d\u3057\u305d\u3046\u2026\n\u9762\u767d\u305d\u3046\u306a\u306e\u306b\u3042\u307e\u308a\u6d41\u884c\u3063\u3066\u3044\u306a\u3044\u3067\u304a\u306a\u3058\u307f\u3001Slack\u306e[Message Buttons](https://api.slack.com/docs/message-buttons)\u3002\n\n[slack\u65b0\u6a5f\u80fd\uff01message button\u3092\u4f7f\u3063\u3066botkit\u3092\u30ec\u30d9\u30eb\u30a2\u30c3\u30d7\u3055\u305b\u308b\uff01](http://qiita.com/LOUIS_rui/items/3692ddeab6c7773abd11)\n\u306b\u306a\u3089\u3063\u3066\u3001heroku\u306eFree\u30d7\u30e9\u30f3\u3067\u69cb\u7bc9\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u57fa\u672c\u7684\u306b\u306f\u4e0a\u8a18\u306e\u30ea\u30f3\u30af\u306e\u624b\u9806\u3067\u9032\u3081\u308c\u3070\u3001\u30dc\u30bf\u30f3\u306e\u8868\u793a\u2192\u304a\u8fd4\u4e8b\u307e\u3067\u306f\u3059\u3050\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u50d5\u306f\u9014\u4e2d\u3067SlackApp\u3078\u306e\u5404\u7a2eURL\u767b\u9332\u3092\u98db\u3070\u3057\u3066\u82e5\u5e72\u306f\u307e\u308a\u307e\u3057\u305f\u2026\u3002\n\n## \u2026\u3042\u308c?\n\u4e00\u5ea6\u8a8d\u8a3c\u3057\u3066\u3044\u308b\u306f\u305a\u306a\u306e\u306b\u3001Dyno\u518d\u8d77\u52d5\u306e\u305f\u3073\u306b\u518d\u8a8d\u8a3c\u304c\u5fc5\u8981\u306b\u306a\u3063\u3061\u3083\u3046\u2026\u3002\n[\u5143\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u3042\u3063\u305f\u30b3\u30fc\u30c9](https://github.com/howdyai/botkit/blob/master/examples/slackbutton_bot_interactivemsg.js#L313-L332)\u304c\u306a\u3044\u304b\u3089\u304b\u306a? \u3068\u601d\u3044\u3001\u8ffd\u52a0\u3057\u307e\u3057\u305f\u304c\u3084\u3063\u3071\u308a\u3060\u3081\u3002\n\n\u3069\u3046\u3084\u3089\u3001Botkit\u306f\u30ed\u30fc\u30ab\u30eb\u306e`db_slackbutton_bot`\u306a\u308b\u30d5\u30a9\u30eb\u30c0\u306b\u3001OAuth\u306e\u30c8\u30fc\u30af\u30f3\u3092\u4fdd\u5b58\u3057\u3066\u3044\u3066\u3001heroku\u306eFree\u30d7\u30e9\u30f3\u3060\u3068\u3053\u308c\u304c\u6d88\u3048\u3061\u3083\u3046\u3093\u3067\u3059\u306d\u3002\n\n### (\u8ffd\u8a18)\n\u304a\u4e16\u8a71\u306b\u306a\u3063\u305f\u8a18\u4e8b\u306e@LOUIS_rui\u3055\u3093\u306b\u30b3\u30e1\u30f3\u30c8\u3057\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\nHeroku\u306emLab\u3068\u3044\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u6c38\u7d9a\u5316\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306e\u5b58\u5728\u610f\u7fa9\u3068\u306f\u3002\n\n## \u3082\u3046\u3044\u3044\u3001EC2\u3067\u305f\u3066\u3088\u3046\n\u3053\u3053\u3067https\u30b5\u30fc\u30d0\u5fc5\u9808\u304c\u7acb\u3061\u306f\u3060\u304b\u308a\u307e\u3059\nnginx\u305f\u3066\u3066https\u3092\u30ed\u30fc\u30ab\u30eb\u306eNode\u3078\u6d41\u3057\u3066\u307f\u305f\u306e\u3067\u3059\u304c\u3001\u30aa\u30ec\u30aa\u30ec\u8a3c\u660e\u66f8\u3060\u3068\u3060\u3081\u3002(App\u30da\u30fc\u30b8\u306e Interactive Messages \u3067URL\u3092\u767b\u9332\u3067\u304d\u307e\u305b\u3093)\n\u8a3c\u660e\u66f8\u3092let's encrypt\u3067\u53d6\u5f97\u3057\u3088\u3046\u3068\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c9\u30e1\u30a4\u30f3(xxxxx.ap-northeast-1.compute.amazonaws.com\u7684\u306a\u3084\u3064)\u3060\u3068\u4f5c\u6210\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\n\n## S3\u3092\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u3057\u3088\u3046!\n\u5446\u7136\u3068Botkit\u306e\u30bd\u30fc\u30b9\u3092\u773a\u3081\u3066\u3044\u305f\u3068\u3053\u308d\u3001\u3053\u3093\u306a[\u30b3\u30fc\u30c9](https://github.com/howdyai/botkit/blob/master/lib/CoreBot.js#L950-L964)\u3092\u767a\u898b\u3002\n\u3053\u306e\u8fba\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5b9f\u88c5\u3059\u308c\u3070\u3001\u30ab\u30b9\u30bf\u30e0\u30b9\u30c8\u30ec\u30fc\u30b8\u304c\u4f7f\u3048\u308b\u3063\u3066\u3053\u3068\u3067\u3059\u306d!\n\u3068\u3044\u3046\u3053\u3068\u3067bot\u306fheroku\u4e0a\u3067\u52d5\u304b\u3057\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u3057\u3066S3\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u305f\u306e\u3067\u3057\u305f\u3002\n\n\u30b9\u30c8\u30ec\u30fc\u30b8\u30af\u30e9\u30b9\u306e\u30bd\u30fc\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e[simple_storage.js](https://github.com/howdyai/botkit/blob/master/lib/storage/simple_storage.js)\u3092~~\u30d1\u30af~~\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nS3\u7528API\u306eAccessKey\u3068SecretKey\u306f\u4e8b\u524d\u306b\u53d6\u5f97\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n```js:s3_storage.js\n/*\nStorage module for bots.\nUsing AWS S3 storage.\n\nConfiguration:\n  accessKey: s3 access key\n  secretKey: s3 secret key\n  bucket: target bucket\n  path: path to s3 folder\n  region(optional): s3 region (default: us-east-1)\n*/\n\nvar aws = require('aws-sdk');\nvar async = require('async');\n\nmodule.exports = function (config) {\n\n  if (!config) {\n    return {};\n  }\n\n  var teams_db = config.path + '/teams/';\n  var users_db = config.path + '/users/';\n  var channels_db = config.path + '/channels/';\n  var bucket = config.bucket;\n\n  aws.config.update({\n    accessKeyId: config.accessKey,\n    secretAccessKey: config.secretKey,\n    region: config.region || 'us-east-1'\n  });\n\n  var objectsToList = function (cb) {\n    return function (err, data) {\n      if (err) {\n        cb(err, data);\n      } else {\n        cb(err, Object.keys(data).map(function (key) {\n          return data[key];\n        }));\n      }\n    };\n  };\n\n  var s3 = new aws.S3();\n  var put = function (id, data, cb) {\n    var param = {\n      Bucket: bucket,\n      Key: id,\n      Body: JSON.stringify(data)\n    };\n    // http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#putObject-property\n    s3.putObject(param, function (err, data) {\n      if (err) {\n        return cb ? cb(err) : err;\n      }\n      return cb ? cb(null, data) : data;\n    });\n  };\n  var get = function (id, cb) {\n    var param = {\n      Bucket: bucket,\n      Key: id\n    };\n    // http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n    s3.getObject(param, function (err, data) {\n      if (err) {\n        return cb ? cb(err) : err;\n      }\n      var obj = JSON.parse(data.Body.toString());\n      return cb ? cb(null, obj) : obj;\n    });\n  };\n  var list = function (prefix, cb) {\n    var param = {\n      Bucket: bucket,\n      Prefix: prefix\n    };\n    // http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#listObjects-property\n    s3.listObjects(param, function (err, data) {\n      if (err) {\n        return cb ? cb(err) : err;\n      }\n\n      var all = {};\n      var funcs = [];\n      data.Contents.forEach(function (content) {\n        funcs.push((function (_key) {\n          return function (callback) {\n            get(_key, function (e, obj) {\n              if (!e) {\n                all[obj.id] = obj;\n              }\n              callback(e);\n            });\n          };\n        })(content.Key));\n      });\n\n      return async.parallel(funcs, function (error) {\n        return cb ? cb(error, all) : all;\n      });\n    });\n  };\n\n  // teams, users, channels \u3068\n  // \u305d\u308c\u305e\u308c\u306b get, save, all \u304c\u3042\u308c\u3070Storage\u3068\u3057\u3066\u4f7f\u3048\u308b\n  var storage = {\n    teams: {\n      get: function (team_id, cb) {\n        get(teams_db + team_id, cb);\n      },\n      save: function (team_data, cb) {\n        put(teams_db + team_data.id, team_data, cb);\n      },\n      all: function (cb) {\n        list(teams_db, objectsToList(cb));\n      }\n    },\n    users: {\n      get: function (user_id, cb) {\n        get(users_db + user_id, cb);\n      },\n      save: function (user, cb) {\n        put(users_db + user.id, user, cb);\n      },\n      all: function (cb) {\n        list(users_db, objectsToList(cb));\n      }\n    },\n    channels: {\n      get: function (channel_id, cb) {\n        get(channels_db + channel_id, cb);\n      },\n      save: function (channel, cb) {\n        put(channels_db + channel.id, channel, cb);\n      },\n      all: function (cb) {\n        list(channels_db, objectsToList(cb));\n      }\n    }\n  };\n\n  return storage;\n};\n```\n\n\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306ejs\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n```js:index.js\nvar s3Storage = require('./s3_storage');\n...\n\nvar controller = Botkit.slackbot({conversations\n  // json_file_store: './db_slackbutton_bot/',\n  storage: new s3Storage({\n    path: process.env.s3Path,\n    bucket: process.env.s3Bucket,\n    accessKey: process.env.s3AccessKey,\n    secretKey: process.env.s3SecretKey\n  })\n}).configureSlackApp({\n  clientId: process.env.clientId,\n  clientSecret: process.env.clientSecret,\n  scopes: ['bot'],\n});\n\n...\n```\n\n\u3053\u308c\u3067\u3001Dyno\u518d\u8d77\u52d5\u6642\u3082\u8a8d\u8a3c\u60c5\u5831\u3092\u3082\u3068\u306bbot\u304c\u518d\u63a5\u7d9a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u3081\u3067\u305f\u3057\u3081\u3067\u305f\u3057\u3002\u7686\u3055\u3093\u3082 Message Buttons \u8a66\u3057\u307e\u3057\u3087\u3046!\n\n\u3042\u300130\u5206\u3067Sleep\u3057\u3061\u3083\u3046\u306e\u3082\u5bfe\u7b56\u3057\u306a\u304d\u3083\u2026\u3002\n", "tags": ["Slack", "Botkit", "Heroku", "S3"]}