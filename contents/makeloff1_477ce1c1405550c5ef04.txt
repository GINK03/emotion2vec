{"context": "1\u5e74\u76ee\u30d7\u30ed\u30b0\u30e9\u30de\u3067\u3059\n\u30ec\u30ac\u30b7\u30fc\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306a\u308b\u306e\u3067\u3001\n\u4f7f\u3046\u969b\u306f\u6ce8\u610f\u3057\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u66ab\u5b9a\u7684\u306a\u5bfe\u51e6\u3092\u3057\u305f\u969b\u306e\u899a\u3048\u66f8\u304d\n** \u4fee\u6b63\u6e08\u307f **\n\n\u6982\u8981\nC \u8a00\u8a9e\u3067 old \u3068\u3044\u3046\u69cb\u9020\u4f53\u304c\u3082\u3068\u3082\u3068\u3042\u308a\u3001\n\u305d\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u5f15\u6570\u3068\u3057\u3066\u69d8\u3005\u306a\u95a2\u6570\u304c\u3042\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\nnew \u3068\u3044\u3046\u69cb\u9020\u4f53\u3092\u8ffd\u52a0\u3057\u3001\u4f7f\u3044\u5206\u3051\u305f\u3044\u5834\u5408\u3001\nWrapper \u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u3067\u5909\u66f4\u70b9\u3092\u5c11\u306a\u304f\u3059\u308b\u5bfe\u51e6\u6cd5\n\n\u30b3\u30fc\u30c9\n#include <stdio.h>\n\n/* \u5143\u304b\u3089\u3042\u308b\u69cb\u9020\u4f53 */\ntypedef struct oldbox oldbox_t;\ntypedef struct old1 old1_t; // \u30e1\u30f3\u30d0\u5909\u6570 mem \u3092\u6301\u3064\ntypedef struct old2 old2_t;\n\nstruct oldbox\n{\n  old1_t _old1;\n  old2_t _old2;\n};\n\nvoid print_struct( oldbox_t *ptr)\n{\n  printf(\"%d\\n\",ptr->old1.mem);\n}\n\nvoid main(void)\n{\n//\u7565\nprint_struct( ptr); /* ptr \u306f oldbox\u578b\u30dd\u30a4\u30f3\u30bf */ \n}\n\n\u3053\u308c\u306b struct new1 \u3068 struct new2 \u3092\u30e1\u30f3\u30d0\u3068\u3057\u3066\u6301\u3064\u3001struct newbox \u3092\u4f5c\u6210\u3057\u3001print_struct \u3092\u4f7f\u3044\u307e\u308f\u3059\u3002\n\n\u5171\u7528\u4f53\u3092\u5229\u7528\u3057\u305f wrapper \u51e6\u7406\n/* \u65b0\u3057\u3044\u69cb\u9020\u4f53 */\nstruct wrapper\n{\n  union{\n    oldbox_t oldbox;\n    newbox_t newbox; // struct new1 \u3068 struct new2 \u3092\u30e1\u30f3\u30d0\u3068\u3057\u3066\u6301\u3064\n  }box_type;\n};\n\n\u4e8c\u3064\u3092\u307e\u3068\u3081\u3066 wrapper \u3068\u3057\u305f\u3002\n\nprint_struct \u3092\u4f7f\u3044\u307e\u308f\u3057\n\u3053\u306e\u307e\u307e\u3060\u3068\u3001 oldbox_t \u3068 newbox_t \u306e\u69cb\u9020\u4f53\u306e\u30b5\u30a4\u30ba\u304c\u7570\u306a\u308b\u5834\u5408\u306b\u3001\nprint_struct \u95a2\u6570\u3092\u4e8c\u3064\u4f5c\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304c\u3001\u305d\u308c\u306f\u9762\u5012\n/* FLAG is (static) global variable */\n#define OLD 1\n#define NEW 2\n\nprint_struct ( wrapper *ptr)\n{\n  if( FLAG == OLD){\n    oldbox_t *p = &(ptr->box_type.oldbox);\n    printf(\"%d\\n\",p->old1.mem);\n  }\n  else if(FLAG == NEW){\n    newbox_t *p = &(ptr->box_type.newbox);\n    printf(\"%d\\n\",p->new1.mem2); // new1 \u306f mem2 \u3068\u3044\u3046\u30e1\u30f3\u30d0\u3092\u6301\u3063\u3066\u3044\u308b\n  }\n}\n\n\n\u307e\u3068\u3081\n\u3068\u308a\u3042\u3048\u305a\u66ab\u5b9a\u7684\u306b\u5bfe\u51e6\u3067\u304d\u305f\u3002\n\u672c\u5f53\u306f\u3001\u69cb\u6210\u304b\u3089\u8003\u3048\u76f4\u3059\u3079\u304d\u3060\u304c\u3001\u6642\u9593\u3068\u91cf\u7684\u306b\n\u4eca\u56de\u306f\u3053\u306e\u65b9\u6cd5\u306b\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001FLAG \u306b\u3088\u308b\u5206\u5c90\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u305f\u3081\n\u6839\u672c\u7684\u89e3\u6c7a\u6cd5\u306b\u306f\u306a\u3063\u3066\u3044\u306a\u3044\u3002\n\u3088\u308a\u3088\u3044\u65b9\u6cd5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u3044\u305f\u3060\u304d\u305f\u3044\u3067\u3059\u3002\n1\u5e74\u76ee\u30d7\u30ed\u30b0\u30e9\u30de\u3067\u3059\n\u30ec\u30ac\u30b7\u30fc\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306a\u308b\u306e\u3067\u3001\n\u4f7f\u3046\u969b\u306f\u6ce8\u610f\u3057\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u66ab\u5b9a\u7684\u306a\u5bfe\u51e6\u3092\u3057\u305f\u969b\u306e\u899a\u3048\u66f8\u304d\n\n** \u4fee\u6b63\u6e08\u307f **\n\n# \u6982\u8981\nC \u8a00\u8a9e\u3067 old \u3068\u3044\u3046\u69cb\u9020\u4f53\u304c\u3082\u3068\u3082\u3068\u3042\u308a\u3001\n\u305d\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u5f15\u6570\u3068\u3057\u3066\u69d8\u3005\u306a\u95a2\u6570\u304c\u3042\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\nnew \u3068\u3044\u3046\u69cb\u9020\u4f53\u3092\u8ffd\u52a0\u3057\u3001\u4f7f\u3044\u5206\u3051\u305f\u3044\u5834\u5408\u3001\nWrapper \u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u3067\u5909\u66f4\u70b9\u3092\u5c11\u306a\u304f\u3059\u308b\u5bfe\u51e6\u6cd5\n\n# \u30b3\u30fc\u30c9\n```\n#include <stdio.h>\n\n/* \u5143\u304b\u3089\u3042\u308b\u69cb\u9020\u4f53 */\ntypedef struct oldbox oldbox_t;\ntypedef struct old1 old1_t; // \u30e1\u30f3\u30d0\u5909\u6570 mem \u3092\u6301\u3064\ntypedef struct old2 old2_t;\n\nstruct oldbox\n{\n  old1_t _old1;\n  old2_t _old2;\n};\n\nvoid print_struct( oldbox_t *ptr)\n{\n  printf(\"%d\\n\",ptr->old1.mem);\n}\n\nvoid main(void)\n{\n//\u7565\nprint_struct( ptr); /* ptr \u306f oldbox\u578b\u30dd\u30a4\u30f3\u30bf */ \n}\n```\n\n\u3053\u308c\u306b struct new1 \u3068 struct new2 \u3092\u30e1\u30f3\u30d0\u3068\u3057\u3066\u6301\u3064\u3001struct newbox \u3092\u4f5c\u6210\u3057\u3001print_struct \u3092\u4f7f\u3044\u307e\u308f\u3059\u3002\n\n# \u5171\u7528\u4f53\u3092\u5229\u7528\u3057\u305f wrapper \u51e6\u7406\n```\n/* \u65b0\u3057\u3044\u69cb\u9020\u4f53 */\nstruct wrapper\n{\n  union{\n    oldbox_t oldbox;\n    newbox_t newbox; // struct new1 \u3068 struct new2 \u3092\u30e1\u30f3\u30d0\u3068\u3057\u3066\u6301\u3064\n  }box_type;\n};\n```\n\u4e8c\u3064\u3092\u307e\u3068\u3081\u3066 wrapper \u3068\u3057\u305f\u3002\n\n# print_struct \u3092\u4f7f\u3044\u307e\u308f\u3057\n\u3053\u306e\u307e\u307e\u3060\u3068\u3001 oldbox_t \u3068 newbox_t \u306e\u69cb\u9020\u4f53\u306e\u30b5\u30a4\u30ba\u304c\u7570\u306a\u308b\u5834\u5408\u306b\u3001\nprint_struct \u95a2\u6570\u3092\u4e8c\u3064\u4f5c\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304c\u3001\u305d\u308c\u306f\u9762\u5012\n\n```\n/* FLAG is (static) global variable */\n#define OLD 1\n#define NEW 2\n\nprint_struct ( wrapper *ptr)\n{\n  if( FLAG == OLD){\n    oldbox_t *p = &(ptr->box_type.oldbox);\n    printf(\"%d\\n\",p->old1.mem);\n  }\n  else if(FLAG == NEW){\n    newbox_t *p = &(ptr->box_type.newbox);\n    printf(\"%d\\n\",p->new1.mem2); // new1 \u306f mem2 \u3068\u3044\u3046\u30e1\u30f3\u30d0\u3092\u6301\u3063\u3066\u3044\u308b\n  }\n}\n```\n\n# \u307e\u3068\u3081\n\u3068\u308a\u3042\u3048\u305a\u66ab\u5b9a\u7684\u306b\u5bfe\u51e6\u3067\u304d\u305f\u3002\n\u672c\u5f53\u306f\u3001\u69cb\u6210\u304b\u3089\u8003\u3048\u76f4\u3059\u3079\u304d\u3060\u304c\u3001\u6642\u9593\u3068\u91cf\u7684\u306b\n\u4eca\u56de\u306f\u3053\u306e\u65b9\u6cd5\u306b\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001FLAG \u306b\u3088\u308b\u5206\u5c90\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u305f\u3081\n\u6839\u672c\u7684\u89e3\u6c7a\u6cd5\u306b\u306f\u306a\u3063\u3066\u3044\u306a\u3044\u3002\n\n\u3088\u308a\u3088\u3044\u65b9\u6cd5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u3044\u305f\u3060\u304d\u305f\u3044\u3067\u3059\u3002\n", "tags": ["C\u8a00\u8a9e", "\u69cb\u9020\u4f53", "\u5171\u7528\u4f53", "Wrapper"]}