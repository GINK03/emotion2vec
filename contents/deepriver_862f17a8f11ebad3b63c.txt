{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nRubyOnRails\u306enamed_scope\u307f\u305f\u3044\u306a\u3053\u3068\u3092Django\u3067\u3084\u3063\u3066\u307f\u305f\n\n\u30b3\u30fc\u30c9\nfrom django.db.models.query import QuerySet\nfrom django.db import models \n\nclass PlayerScopeMixin(object):\n    \"\"\"\n    Player Class Scope Chain Mixin\n    \"\"\"\n\n    @property\n    def newcomer_time(self):\n        \"\"\"\n        :return: \u65b0\u898f\u30d7\u30ec\u30a4\u30e4\u30fc\u671f\u9593\u306e\u30b9\u30bf\u30fc\u30c8\u6642\u9593(\u73fe\u5728\u304b\u3089\u4e00\u9031\u9593\u524d)\n        \"\"\"\n       date_obj = datetime.datetime.now(utc) - datetime.timedelta(7)\n       return date_obj\n\n    def by_active(self):\n        \"\"\"\n        \u30a2\u30af\u30c6\u30a3\u30d6\u72b6\u614b\u306e\u30ec\u30b3\u30fc\u30c9\u53d6\u5f97\n        :return: QuerySet\u306efilter\n        \"\"\"\n        return self.filter(active_flg = True)\n\n    def by_newcomer(self, newcomer_flg=True):\n        \"\"\"\n        \u65b0\u898f\u30d7\u30ec\u30a4\u30e4\u30fc\u5224\u5b9a\u306b\u3088\u308b\u30ec\u30b3\u30fc\u30c9\u62bd\u51fa\n         :param limit_flg: True(\u65b0\u898f\u30d7\u30ec\u30a4\u30e4\u30fc) / False(\u975e\u65b0\u898f\u30d7\u30ec\u30a4\u30e4\u30fc) \n        :return: QuerySet\u306efilter\n        \"\"\"\n        return self.filter(created_at__gt=self.active_limit_time)\n\n    def by_active_newcomer(self):\n        \"\"\"\n        \u65b0\u898f\u30a2\u30af\u30c6\u30a3\u30d6\u30e6\u30fc\u30b6\u30fc\n        \"\"\"\n        return self.by_active().by_newcomer()\n\n\n\n\nclass PlayerQuerySet(QuerySet, PlayerScopesMixin):\n    \"\"\"\n    PlayerQuerySet\n    \"\"\"\n    pass\n\n\nclass PlayerManager(models.Manager, PlayerScopeMixin):\n    \"\"\"\n    PlayerManager\n    \"\"\"\n    def get_query_set(self):\n        return PlayerQuerySet(self.model, using=self._db)\n\n\nclass Player(models.Model):\n    class Meta:\n        app_label = 'player'\n\n    active_flg = models.BooleanField(default=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n\n\n\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\u4f8b\n> Player.by_active_newcommer() == Player.by_active().by_newcomer()\n\n\n## \u6982\u8981\nRubyOnRails\u306enamed_scope\u307f\u305f\u3044\u306a\u3053\u3068\u3092Django\u3067\u3084\u3063\u3066\u307f\u305f\n\n## \u30b3\u30fc\u30c9\n\n```python\nfrom django.db.models.query import QuerySet\nfrom django.db import models \n\nclass PlayerScopeMixin(object):\n\t\"\"\"\n    Player Class Scope Chain Mixin\n\t\"\"\"\n\n    @property\n    def newcomer_time(self):\n\t\t\"\"\"\n\t\t:return: \u65b0\u898f\u30d7\u30ec\u30a4\u30e4\u30fc\u671f\u9593\u306e\u30b9\u30bf\u30fc\u30c8\u6642\u9593(\u73fe\u5728\u304b\u3089\u4e00\u9031\u9593\u524d)\n\t\t\"\"\"\n       date_obj = datetime.datetime.now(utc) - datetime.timedelta(7)\n       return date_obj\n\n\tdef by_active(self):\n\t\t\"\"\"\n\t\t\u30a2\u30af\u30c6\u30a3\u30d6\u72b6\u614b\u306e\u30ec\u30b3\u30fc\u30c9\u53d6\u5f97\n\t\t:return: QuerySet\u306efilter\n\t\t\"\"\"\n\t\treturn self.filter(active_flg = True)\n\n    def by_newcomer(self, newcomer_flg=True):\n        \"\"\"\n        \u65b0\u898f\u30d7\u30ec\u30a4\u30e4\u30fc\u5224\u5b9a\u306b\u3088\u308b\u30ec\u30b3\u30fc\u30c9\u62bd\u51fa\n\t\t :param limit_flg: True(\u65b0\u898f\u30d7\u30ec\u30a4\u30e4\u30fc) / False(\u975e\u65b0\u898f\u30d7\u30ec\u30a4\u30e4\u30fc) \n        :return: QuerySet\u306efilter\n        \"\"\"\n        return self.filter(created_at__gt=self.active_limit_time)\n\n\tdef by_active_newcomer(self):\n        \"\"\"\n        \u65b0\u898f\u30a2\u30af\u30c6\u30a3\u30d6\u30e6\u30fc\u30b6\u30fc\n        \"\"\"\n        return self.by_active().by_newcomer()\n\n\n\n\nclass PlayerQuerySet(QuerySet, PlayerScopesMixin):\n\t\"\"\"\n\tPlayerQuerySet\n\t\"\"\"\n\tpass\n\n\nclass PlayerManager(models.Manager, PlayerScopeMixin):\n\t\"\"\"\n\tPlayerManager\n\t\"\"\"\n\tdef get_query_set(self):\n        return PlayerQuerySet(self.model, using=self._db)\n\n\nclass Player(models.Model):\n\tclass Meta:\n\t\tapp_label = 'player'\n\t\n\tactive_flg = models.BooleanField(default=False)\n\tcreated_at = models.DateTimeField(auto_now_add=True)\n\tupdated_at = models.DateTimeField(auto_now=True)\n```\n\n## \u30b3\u30fc\u30c9\u306e\u5b9f\u884c\u4f8b\n``` python\n> Player.by_active_newcommer() == Player.by_active().by_newcomer()\n```\n", "tags": ["Django", "Python"]}