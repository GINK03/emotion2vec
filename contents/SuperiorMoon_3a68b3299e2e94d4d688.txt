{"context": " More than 1 year has passed since last update.\n\n\u30bd\u30fc\u30b9\n\u591a\u5206\u8272\u3005\u3068\u3074\u3088\u3074\u3088\u3057\u3066\u308b\u3002\n\nPipiru.java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Pipiru {\n\n    public static void main(String[] args) {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        try {\n            String line = br.readLine();\n            List<String> input = Arrays.asList(line.split(\"\"));\n            String output = \"\";\n            for (String s : input) {\n                if (s.equals(\"\u3074\")) {\n                    output += \"1\";\n                } else if (s.equals(\"\u308b\")) {\n                    output += \"0\";\n                }\n            }\n            System.out.println(output);\n            int decimal = Integer.parseInt(output, 2);\n            System.out.println(\"10\u9032\u6570: \" + decimal);\n            System.out.println(\"8\u9032\u6570: \" + Integer.toOctalString(decimal));\n            System.out.println(\"16\u9032\u6570: \" + Integer.toHexString(decimal));\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\u3074\u3074\u308b\u3074\u308b\u3074\u308b\u3074\u3074\u308b\u3074\u30fc\n11010101101\n10\u9032\u6570: 1709\n8\u9032\u6570: 3255\n16\u9032\u6570: 6ad\n\n\n\u306a\u306b\u3053\u308c\n\u30b1\u30f3\u30b7\u30ed\u30a6\u9032\u6570 \u3092\u30ea\u30b9\u30da\u30af\u30c8\u3057\u305f\u3084\u3064\u3002\u300c\u3074\u300d\u304c1\u3067\u3001\u300c\u308b\u300d\u304c0\u3002\n\u6025\u306b\u601d\u3044\u3064\u3044\u305f\u306e\u3092\u3064\u3076\u3084\u3044\u305f\u3089\u3075\u3041\u307c\u3089\u308c\u305f\u306e\u30675\u5206\u304f\u3089\u3044\u3067\u4f5c\u3063\u305f\u3002\n10\u9032\u30688\u9032\u306816\u9032\u6570\u306e\u5909\u63db\u306f\u304a\u307e\u3051\u3002\n\n\u307e\u3068\u3081\n\u3080\u3057\u3083\u304f\u3057\u3083\u3057\u3066\u3084\u3063\u305f\u3002\n\u4e00\u756a\u6163\u308c\u3066\u3044\u308b Java \u3067\u66f8\u3044\u305f\u304c\u7df4\u7fd2\u3082\u517c\u306d\u3066 Ruby \u3067\u3082\u3088\u304b\u3063\u305f\u3002\n\u4eca\u306f\u53cd\u7701\u3057\u3066\u3044\u308b\u3002\u5f8c\u6094\u306f\u3057\u3066\u3044\u306a\u3044\u3002\n# \u30bd\u30fc\u30b9\n\u591a\u5206\u8272\u3005\u3068\u3074\u3088\u3074\u3088\u3057\u3066\u308b\u3002\n\n\n```Java:Pipiru.java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Pipiru {\n\n\tpublic static void main(String[] args) {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\ttry {\n\t\t\tString line = br.readLine();\n\t\t\tList<String> input = Arrays.asList(line.split(\"\"));\n\t\t\tString output = \"\";\n\t\t\tfor (String s : input) {\n\t\t\t\tif (s.equals(\"\u3074\")) {\n\t\t\t\t\toutput += \"1\";\n\t\t\t\t} else if (s.equals(\"\u308b\")) {\n\t\t\t\t\toutput += \"0\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(output);\n\t\t\tint decimal = Integer.parseInt(output, 2);\n\t\t\tSystem.out.println(\"10\u9032\u6570: \" + decimal);\n\t\t\tSystem.out.println(\"8\u9032\u6570: \" + Integer.toOctalString(decimal));\n\t\t\tSystem.out.println(\"16\u9032\u6570: \" + Integer.toHexString(decimal));\n\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n\n```\n\n# \u5b9f\u884c\u7d50\u679c\n\n```\n\u3074\u3074\u308b\u3074\u308b\u3074\u308b\u3074\u3074\u308b\u3074\u30fc\n11010101101\n10\u9032\u6570: 1709\n8\u9032\u6570: 3255\n16\u9032\u6570: 6ad\n```\n\n# \u306a\u306b\u3053\u308c\n[\u30b1\u30f3\u30b7\u30ed\u30a6\u9032\u6570](http://www.asahi-net.or.jp/~rc4t-ishr/kensiro.html) \u3092\u30ea\u30b9\u30da\u30af\u30c8\u3057\u305f\u3084\u3064\u3002\u300c\u3074\u300d\u304c1\u3067\u3001\u300c\u308b\u300d\u304c0\u3002\n\u6025\u306b\u601d\u3044\u3064\u3044\u305f\u306e\u3092\u3064\u3076\u3084\u3044\u305f\u3089\u3075\u3041\u307c\u3089\u308c\u305f\u306e\u30675\u5206\u304f\u3089\u3044\u3067\u4f5c\u3063\u305f\u3002\n10\u9032\u30688\u9032\u306816\u9032\u6570\u306e\u5909\u63db\u306f\u304a\u307e\u3051\u3002\n\n# \u307e\u3068\u3081\n\u3080\u3057\u3083\u304f\u3057\u3083\u3057\u3066\u3084\u3063\u305f\u3002\n\u4e00\u756a\u6163\u308c\u3066\u3044\u308b Java \u3067\u66f8\u3044\u305f\u304c\u7df4\u7fd2\u3082\u517c\u306d\u3066 Ruby \u3067\u3082\u3088\u304b\u3063\u305f\u3002\n\u4eca\u306f\u53cd\u7701\u3057\u3066\u3044\u308b\u3002\u5f8c\u6094\u306f\u3057\u3066\u3044\u306a\u3044\u3002\n", "tags": ["Java1.8.0", "\u30cd\u30bf"]}