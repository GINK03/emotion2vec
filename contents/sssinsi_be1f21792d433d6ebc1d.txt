{"tags": ["cakephp3", "PHP", "SQL"], "context": "\n\n\u74b0\u5883\n\nPHP 7.0.9\nCakePHP 3.3.4\nMySQL 5.6.30\n\n\n\u554f\u984c\n\u30b3\u30fc\u30c9\u3068\u624b\u9593\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u3001select\u306eCase\u6587\u3067EXISTS\u3092\u4f7f\u3046SQL\u3092\u69cb\u7bc9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u516c\u5f0f\u306b\u306fCase\u6587\u3068EXISTS\u306e\u66f8\u304d\u65b9\u306f\u8a18\u8f09\u3055\u308c\u3066\u307e\u3059\u304c\u3001\u305d\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u66f8\u304d\u65b9\u306f\u8a18\u8f09\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u56db\u82e6\u516b\u82e6\u3057\u305f\u306e\u3067\u30e1\u30e2\u3092\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nCase\u6587\u306e\u4f5c\u308a\u65b9\n\u516c\u5f0f\u306eCase\u6587\u306b\u3082\u3042\u308b\u3088\u3046\u306b\u3001\u4f8b\u3048\u3070SELECT CASE WHEN status is null THEN 'red' ELSE 'green' END AS 'result' FROM cities;\u3068\u3044\u3046SQL\u3092\u4f5c\u308a\u305f\u3044\u5834\u5408\u306f\u3001\n# SELECT CASE WHEN status is null THEN 'red' ELSE 'green' END AS 'result';\n$query = $this->Countries->find()\n    ->select(['result' => function($q){\n      return $q->newExpr()->addCase(\n        [$q->newExpr)->add(['status is'=>null])],\n        ['red','green'],\n        ['string']\n      )\n    }]);\n\n\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\nEXISTS\u306e\u4f5c\u308a\u65b9\n\u516c\u5f0f\u306eEXISTS\u3067\u306f\u3001\u4e00\u5ea6\u30b5\u30d6\u30af\u30a8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u304b\u3089where\u53e5\u3067\u69cb\u7bc9\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n# SELECT id FROM Cities WHERE Countries.id = Cities.country_id AND Cities.population > 100; \n$subquery = $this->Cities->find()\n    ->select(['id'])\n    ->where(function($exp,$q){\n      return $exp->equalFields('Countries.id','Cities.country_id');\n    })\n    ->addWhere(['Cities.population >'=> 1000]);\n\n#where\u53e5\u3067subquery\u3092\u4f7f\u3046\n$query = $this->Countries->find()\n  ->where(fucntion($exp, $q) use ($subquery){\n    return $exp->exists($subquery);\n  });\n\n#WHERE EXISTS(SELECT id FROM Cities WHERE Countries.id = Cities.country_id AND Cities->population > 100)\n\n\nCASE WHEN EXISTS\u306e\u4f5c\u308a\u65b9\n\u516c\u5f0f\u306e\u4f8b\u3067\u306fwhere\u53e5\u3067exists\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306fselect\u53e5\u3067\u4f7f\u3044\u305f\u3044\u3001\u304b\u3064Case\u6587\u3082\u4f7f\u3046\u5fc5\u8981\u304c\u308a\u307e\u3059\u3002\n\u30cd\u30b9\u30c8\u304c\u6df1\u304f\u306a\u308b\u3068\u6df7\u4e71\u306e\u5143\u306a\u306e\u3067\u3001\u30b5\u30d6\u30af\u30a8\u30ea\u306f\u5225\u3067\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u30b5\u30d6\u30af\u30a8\u30ea\u306f\u4e0a\u8a18\u3068\u540c\u3058\u3082\u306e\u3092\u4f7f\u7528\u3057\u3066\u3001\n# SELECT id FROM Cities WHERE Countries.id = Cities.country_id AND Cities->population > 100; \n$subquery = $this->Cities->find()\n    ->select(['id'])\n    ->where(function($exp,$q){\n      return $exp->equalFields(''Countries.id',Cities.country_id');\n    })\n    ->addWhere(['Cities.population >'=> 1000]);\n\n#select\u53e5\u3067CASE\u3068EXISTS\u3092\u4f7f\u3046\n$query = $this->Countries->find()\n  ->select(function($q) use ($subquery){\n    return [\n      'id',\n      'name',\n      'result' => $q->newExpr()->addCase(\n          [$q->newExpr()->add([$q->newExpr()->exists($subquery)])],\n          ['red', 'blue'],\n          ['string']\n        )\n      ];\n  });\n\n\u3053\u306e\u30af\u30a8\u30ea\u30d3\u30eb\u30c0\u30fc\u3067\u4f5c\u3089\u308c\u308bSQL\u306f\u3001\u3053\u3093\u306a\u98a8\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\nSELECT\n id,\n name,\n CASE WHEN EXISTS(\n    SELECT id FROM Cities WHERE Countries.id=Cities.country_id AND Cities.population > 1000\n    ) THEN 'red'\n  ELSE 'green' END AS result\nFROM Countries;\n\n\n\u3082\u3084\u3082\u3084\u3059\u308b\u70b9\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306fCase\u6587\u306e\u5024\u306e\u578b\u3092string\u306b\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u771f\u507d\u5024(true|false)\u304c\u6b32\u3057\u3044\u5834\u5408boolean\u578b\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u306a\u305c\u304b\u6587\u5b57\u5217(\u4f8b\u3048\u3070\"1\")\u304c\u8fd4\u3063\u3066\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002integer\u3067\u3082\u6587\u5b57\u5217\u3068\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u3046\u307e\u304fCake\\Database\\Type\\BoolType\u3068\u3057\u3066\u5909\u63db\u3055\u308c\u3066\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\n\u53c2\u8003\u6587\u732e\n\n\u30af\u30a8\u30ea\u30d3\u30eb\u30c0 - CakePHP3\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\n\n#\u74b0\u5883\n- PHP 7.0.9\n- CakePHP 3.3.4\n- MySQL 5.6.30\n\n#\u554f\u984c\n\u30b3\u30fc\u30c9\u3068\u624b\u9593\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u3001select\u306eCase\u6587\u3067EXISTS\u3092\u4f7f\u3046SQL\u3092\u69cb\u7bc9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u516c\u5f0f\u306b\u306fCase\u6587\u3068EXISTS\u306e\u66f8\u304d\u65b9\u306f\u8a18\u8f09\u3055\u308c\u3066\u307e\u3059\u304c\u3001\u305d\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u66f8\u304d\u65b9\u306f\u8a18\u8f09\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u56db\u82e6\u516b\u82e6\u3057\u305f\u306e\u3067\u30e1\u30e2\u3092\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n## Case\u6587\u306e\u4f5c\u308a\u65b9\n[\u516c\u5f0f\u306eCase\u6587](http://book.cakephp.org/3.0/ja/orm/query-builder.html#case)\u306b\u3082\u3042\u308b\u3088\u3046\u306b\u3001\u4f8b\u3048\u3070`SELECT CASE WHEN status is null THEN 'red' ELSE 'green' END AS 'result' FROM cities;`\u3068\u3044\u3046SQL\u3092\u4f5c\u308a\u305f\u3044\u5834\u5408\u306f\u3001\n\n```php\n# SELECT CASE WHEN status is null THEN 'red' ELSE 'green' END AS 'result';\n$query = $this->Countries->find()\n    ->select(['result' => function($q){\n      return $q->newExpr()->addCase(\n        [$q->newExpr)->add(['status is'=>null])],\n        ['red','green'],\n        ['string']\n      )\n    }]);\n```\n\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\n\n## EXISTS\u306e\u4f5c\u308a\u65b9\n[\u516c\u5f0f\u306eEXISTS](http://book.cakephp.org/3.0/ja/orm/query-builder.html#advanced-query-conditions)\u3067\u306f\u3001\u4e00\u5ea6\u30b5\u30d6\u30af\u30a8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u304b\u3089where\u53e5\u3067\u69cb\u7bc9\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n```php\n# SELECT id FROM Cities WHERE Countries.id = Cities.country_id AND Cities.population > 100; \n$subquery = $this->Cities->find()\n    ->select(['id'])\n    ->where(function($exp,$q){\n      return $exp->equalFields('Countries.id','Cities.country_id');\n    })\n    ->addWhere(['Cities.population >'=> 1000]);\n    \n#where\u53e5\u3067subquery\u3092\u4f7f\u3046\n$query = $this->Countries->find()\n  ->where(fucntion($exp, $q) use ($subquery){\n    return $exp->exists($subquery);\n  });\n\n#WHERE EXISTS(SELECT id FROM Cities WHERE Countries.id = Cities.country_id AND Cities->population > 100)\n```\n\n## CASE WHEN EXISTS\u306e\u4f5c\u308a\u65b9\n\u516c\u5f0f\u306e\u4f8b\u3067\u306fwhere\u53e5\u3067exists\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306fselect\u53e5\u3067\u4f7f\u3044\u305f\u3044\u3001\u304b\u3064Case\u6587\u3082\u4f7f\u3046\u5fc5\u8981\u304c\u308a\u307e\u3059\u3002\n\u30cd\u30b9\u30c8\u304c\u6df1\u304f\u306a\u308b\u3068\u6df7\u4e71\u306e\u5143\u306a\u306e\u3067\u3001\u30b5\u30d6\u30af\u30a8\u30ea\u306f\u5225\u3067\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u30b5\u30d6\u30af\u30a8\u30ea\u306f\u4e0a\u8a18\u3068\u540c\u3058\u3082\u306e\u3092\u4f7f\u7528\u3057\u3066\u3001\n\n```\n# SELECT id FROM Cities WHERE Countries.id = Cities.country_id AND Cities->population > 100; \n$subquery = $this->Cities->find()\n    ->select(['id'])\n    ->where(function($exp,$q){\n      return $exp->equalFields(''Countries.id',Cities.country_id');\n    })\n    ->addWhere(['Cities.population >'=> 1000]);\n\n#select\u53e5\u3067CASE\u3068EXISTS\u3092\u4f7f\u3046\n$query = $this->Countries->find()\n  ->select(function($q) use ($subquery){\n    return [\n      'id',\n      'name',\n      'result' => $q->newExpr()->addCase(\n          [$q->newExpr()->add([$q->newExpr()->exists($subquery)])],\n          ['red', 'blue'],\n          ['string']\n        )\n      ];\n  });\n```\n\n\u3053\u306e\u30af\u30a8\u30ea\u30d3\u30eb\u30c0\u30fc\u3067\u4f5c\u3089\u308c\u308bSQL\u306f\u3001\u3053\u3093\u306a\u98a8\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n```sql\nSELECT\n id,\n name,\n CASE WHEN EXISTS(\n    SELECT id FROM Cities WHERE Countries.id=Cities.country_id AND Cities.population > 1000\n    ) THEN 'red'\n  ELSE 'green' END AS result\nFROM Countries;\n```\n\n\n#\u3082\u3084\u3082\u3084\u3059\u308b\u70b9\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306fCase\u6587\u306e\u5024\u306e\u578b\u3092`string`\u306b\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u771f\u507d\u5024(true|false)\u304c\u6b32\u3057\u3044\u5834\u5408`boolean`\u578b\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u306a\u305c\u304b\u6587\u5b57\u5217(\u4f8b\u3048\u3070`\"1\"`)\u304c\u8fd4\u3063\u3066\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002`integer`\u3067\u3082\u6587\u5b57\u5217\u3068\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u3046\u307e\u304f`Cake\\Database\\Type\\BoolType`\u3068\u3057\u3066\u5909\u63db\u3055\u308c\u3066\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\n#\u53c2\u8003\u6587\u732e\n- [\u30af\u30a8\u30ea\u30d3\u30eb\u30c0 - CakePHP3\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://book.cakephp.org/3.0/ja/orm/query-builder.html)\n"}