{"context": "\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u52b9\u304b\u306a\u3044\u3068\u304d\n# app/model/category.rb\nclass Category < ApplicationRecord\n  has_many :books\nend\n\n# app/model/book\nclass Book < ApplicationRecord\n  scope :published, -> { where(published: true) }\n  belongs_to :category\nend\n\n# app/controller/books_controller\n\ndef index\n  @category = Category.All.includes(:books)\nend\n\n\n# app/views/books/index.html.slim\n\n- @categories.each do |category|\n  h1\n    = category.name\n  table\n  - category.books.published.each do |book|\n    tr\n      td = book.name\n      td = book.author\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u305b\u3063\u304b\u304fincludes(:book)\u3092\u3057\u3066\u3082\u3001category.books.published\u3084\u3001category.books.where(published: true)category.books.order_by(id: :desc)\u306e\u3088\u3046\u306b\u3001\u5b50\u306e\u30e2\u30c7\u30eb\u306b\u30af\u30a8\u30ea\u3092\u4ed8\u3051\u8db3\u3057\u3066\u3057\u307e\u3046\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u52b9\u304b\u305a\u3001N+1\u554f\u984c\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u3002\n\n\u3069\u3046\u3059\u308b\u304b\n# app/model/category.rb\nclass Category < ApplicationRecord\n  has_many :books\n  has_many :published_books, -> { published }, class_name: 'Book'\nend\n\n# app/model/book\nclass Book < ApplicationRecord\n  scope :published, -> { where(published: true) }\n  belongs_to :category\nend\n\n# app/controller/books_controller\n\ndef index\n  @category = Category.All.includes(:published_books)\nend\n\n\n# app/views/books/index.html.slim\n\n- @categories.each do |category|\n  h1\n    = category.name\n  table\n  - category.published_books.each do |book|\n    tr\n      td = book.name\n      td = book.author\n\nhas_many :published_books, -> { published }, class_name: 'Book'\u306e\u3088\u3046\u306b\u3001has_many\u306b\u30b9\u30b3\u30fc\u30d7\u3092\u6e21\u3057\u3066\u3084\u308a\u3001\u305d\u308c\u3092includes\u306e\u5f15\u6570\u306b\u6e21\u3059\u3068\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u52b9\u3044\u3066\u304f\u308c\u308b\u3002\n\n\u5099\u8003\nActiveRecord::QueryMethods\u306e\u30b3\u30e1\u30f3\u30c8\u306b\u306f\u3001\n    # === conditions\n    #\n    # If you want to add conditions to your included models you'll have\n    # to explicitly reference them. For example:\n    #\n    #   User.includes(:posts).where('posts.name = ?', 'example')\n    #\n    # Will throw an error, but this will work:\n    #\n    #   User.includes(:posts).where('posts.name = ?', 'example').references(:posts)\n    #\n    # Note that +includes+ works with association names while +references+ needs\n    # the actual table name.\n\n\u3068\u3042\u308b\u306e\u3067\u3001\nCategory.includes(:books).merge(Book.published).references(:books)\u3068\u3057\u3066\u3082\u3088\u3044\u3002\n\u306a\u304a\u3001\u3069\u3061\u3089\u306e\u5834\u5408\u306b\u304a\u3044\u3066\u3082\u3001Book\u306e\u30b9\u30b3\u30fc\u30d7\u306e\u6761\u4ef6\u304c\u3001\u89aa\u306e\u30e2\u30c7\u30eb\uff08Category\uff09\u306b\u306a\u308b\u305f\u3081\u3001\u4e0a\u306e\u4f8b\u3067\u306fpublished\u306abook\u304c\u4e00\u3064\u3082\u306a\u3044category\u306f\u30af\u30a8\u30ea\u306e\u7d50\u679c\u3068\u3057\u3066\u51fa\u3066\u3053\u306a\u3044\u306e\u3067\u6ce8\u610f\u3002\n# \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u52b9\u304b\u306a\u3044\u3068\u304d\n``` ruby\n# app/model/category.rb\nclass Category < ApplicationRecord\n  has_many :books\nend\n\n# app/model/book\nclass Book < ApplicationRecord\n  scope :published, -> { where(published: true) }\n  belongs_to :category\nend\n```\n\n``` ruby\n# app/controller/books_controller\n\ndef index\n  @category = Category.All.includes(:books)\nend\n\n```\n\n``` slim\n# app/views/books/index.html.slim\n\n- @categories.each do |category|\n  h1\n    = category.name\n  table\n  - category.books.published.each do |book|\n    tr\n      td = book.name\n      td = book.author\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u305b\u3063\u304b\u304f`includes(:book)`\u3092\u3057\u3066\u3082\u3001`category.books.published`\u3084\u3001`category.books.where(published: true)``category.books.order_by(id: :desc)`\u306e\u3088\u3046\u306b\u3001\u5b50\u306e\u30e2\u30c7\u30eb\u306b\u30af\u30a8\u30ea\u3092\u4ed8\u3051\u8db3\u3057\u3066\u3057\u307e\u3046\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u52b9\u304b\u305a\u3001N+1\u554f\u984c\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u3002\n\n# \u3069\u3046\u3059\u308b\u304b\n\n``` ruby\n# app/model/category.rb\nclass Category < ApplicationRecord\n  has_many :books\n  has_many :published_books, -> { published }, class_name: 'Book'\nend\n\n# app/model/book\nclass Book < ApplicationRecord\n  scope :published, -> { where(published: true) }\n  belongs_to :category\nend\n```\n\n``` ruby\n# app/controller/books_controller\n\ndef index\n  @category = Category.All.includes(:published_books)\nend\n\n```\n\n``` slim\n# app/views/books/index.html.slim\n\n- @categories.each do |category|\n  h1\n    = category.name\n  table\n  - category.published_books.each do |book|\n    tr\n      td = book.name\n      td = book.author\n```\n\n` has_many :published_books, -> { published }, class_name: 'Book'`\u306e\u3088\u3046\u306b\u3001has_many\u306b\u30b9\u30b3\u30fc\u30d7\u3092\u6e21\u3057\u3066\u3084\u308a\u3001\u305d\u308c\u3092`includes`\u306e\u5f15\u6570\u306b\u6e21\u3059\u3068\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u52b9\u3044\u3066\u304f\u308c\u308b\u3002\n\n# \u5099\u8003\nActiveRecord::QueryMethods\u306e\u30b3\u30e1\u30f3\u30c8\u306b\u306f\u3001\n\n``` ruby\n    # === conditions\n    #\n    # If you want to add conditions to your included models you'll have\n    # to explicitly reference them. For example:\n    #\n    #   User.includes(:posts).where('posts.name = ?', 'example')\n    #\n    # Will throw an error, but this will work:\n    #\n    #   User.includes(:posts).where('posts.name = ?', 'example').references(:posts)\n    #\n    # Note that +includes+ works with association names while +references+ needs\n    # the actual table name.\n```\n\n\u3068\u3042\u308b\u306e\u3067\u3001\n`Category.includes(:books).merge(Book.published).references(:books)`\u3068\u3057\u3066\u3082\u3088\u3044\u3002\n\n\u306a\u304a\u3001\u3069\u3061\u3089\u306e\u5834\u5408\u306b\u304a\u3044\u3066\u3082\u3001Book\u306e\u30b9\u30b3\u30fc\u30d7\u306e\u6761\u4ef6\u304c\u3001\u89aa\u306e\u30e2\u30c7\u30eb\uff08Category\uff09\u306b\u306a\u308b\u305f\u3081\u3001\u4e0a\u306e\u4f8b\u3067\u306fpublished\u306abook\u304c\u4e00\u3064\u3082\u306a\u3044category\u306f\u30af\u30a8\u30ea\u306e\u7d50\u679c\u3068\u3057\u3066\u51fa\u3066\u3053\u306a\u3044\u306e\u3067\u6ce8\u610f\u3002\n", "tags": ["Rails", "ActiveRecord"]}