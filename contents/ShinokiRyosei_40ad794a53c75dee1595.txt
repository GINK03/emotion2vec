{"context": "\n\n\u306f\u3058\u3081\u306b\nTwitter\u306e\u901a\u77e5\u306e\u3088\u3046\u306b\u901a\u77e5\u304c\u3064\u304f\u3089\u308c\u305f\u6642\u523b\u3068\u73fe\u5728\u6642\u523b\u306e\u5dee\u5206\u3092\u53d6\u3063\u3066\u3001\u3044\u3044\u304b\u3093\u3058(\u25ef\u6642\u9593\u524d\u3001\u25ef\u65e5\u524d)\u306b\u8868\u793a\u3057\u3088\u3046\u3068\u3057\u3066\u8003\u3048\u3066\u3044\u305f\u3068\u304d\u306b\u3001stack over flow\u306b\u3059\u3070\u3089\u3057\u3044\u89e3\u7b54\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u5099\u5fd8\u9332\u306e\u610f\u5473\u3092\u8fbc\u3081\u3066\u30b7\u30a7\u30a2\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nLeo Dabus\u3055\u3093\u306b\u611f\u8b1d\nGetting the difference between two NSDates in (months/days/hours/minutes/seconds)\n\nNSDate Extension\n\nNSDateExtension.swift\nimport UIKit\nextension NSDate {\n    func yearsFrom(date:NSDate) -> Int{\n        return NSCalendar.currentCalendar().components(NSCalendarUnit.Year, fromDate: date, toDate: self, options: []).year\n    }\n    func monthsFrom(date:NSDate) -> Int{\n        return NSCalendar.currentCalendar().components(NSCalendarUnit.Month, fromDate: date, toDate: self, options: []).month\n    }\n    func weeksFrom(date:NSDate) -> Int{\n        return NSCalendar.currentCalendar().components(NSCalendarUnit.WeekOfYear, fromDate: date, toDate: self, options: []).weekOfYear\n    }\n    func daysFrom(date:NSDate) -> Int{\n        return NSCalendar.currentCalendar().components(NSCalendarUnit.Day, fromDate: date, toDate: self, options: []).day\n    }\n    func hoursFrom(date:NSDate) -> Int{\n        return NSCalendar.currentCalendar().components(NSCalendarUnit.Hour, fromDate: date, toDate: self, options: []).hour\n    }\n    func minutesFrom(date:NSDate) -> Int{\n        return NSCalendar.currentCalendar().components(NSCalendarUnit.Minute, fromDate: date, toDate: self, options: []).minute\n    }\n    func secondsFrom(date:NSDate) -> Int{\n        return NSCalendar.currentCalendar().components(NSCalendarUnit.Second, fromDate: date, toDate: self, options: []).second\n    }\n    func offsetFrom(date:NSDate) -> String {\n        if yearsFrom(date)   > 0 { return \"\\(yearsFrom(date))\u5e74\u524d\"   }\n        if monthsFrom(date)  > 0 { return \"\\(monthsFrom(date))\u30f6\u6708\u524d\"  }\n        if weeksFrom(date)   > 0 { return \"\\(weeksFrom(date))\u9031\u9593\u524d\"   }\n        if daysFrom(date)    > 0 { return \"\\(daysFrom(date))\u65e5\u524d\"    }\n        if hoursFrom(date)   > 0 { return \"\\(hoursFrom(date))\u6642\u9593\u524d\"   }\n        if minutesFrom(date) > 0 { return \"\\(minutesFrom(date))\u5206\u524d\" }\n        if secondsFrom(date) > 0 { return \"\\(secondsFrom(date))\u79d2\u524d\" }\n        return \"\"\n    }\n}\n\n\n\n\u4f7f\u3044\u65b9\n\u305f\u3068\u3048\u3070\u73fe\u5728\u6642\u523b\u3068\u306e\u5dee\u5206\u304b\u3089\u8868\u793a\u3057\u305f\u3044\u3068\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u8a18\u3057\u307e\u3059\u3002\n//time\u3068\u3044\u30462016/4/9 8:00:00 \u3068\u3044\u3046\u6642\u523b\u306eNSDate\u578b\u306e\u5909\u6570\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002\nlet now = NSDate() //2016/4/10 16:00:00 \u3068\u3057\u307e\u3059\n\nlet year = now.yearFrom(time) // -> 0\u5e74\nlet days = now.daysFrom(time) // 1\u65e5\nlet duration = now.offsetFrom(time) // -> 1\u65e5\u524d\n\n\n#\u306f\u3058\u3081\u306b\nTwitter\u306e\u901a\u77e5\u306e\u3088\u3046\u306b\u901a\u77e5\u304c\u3064\u304f\u3089\u308c\u305f\u6642\u523b\u3068\u73fe\u5728\u6642\u523b\u306e\u5dee\u5206\u3092\u53d6\u3063\u3066\u3001\u3044\u3044\u304b\u3093\u3058(\u25ef\u6642\u9593\u524d\u3001\u25ef\u65e5\u524d)\u306b\u8868\u793a\u3057\u3088\u3046\u3068\u3057\u3066\u8003\u3048\u3066\u3044\u305f\u3068\u304d\u306b\u3001stack over flow\u306b\u3059\u3070\u3089\u3057\u3044\u89e3\u7b54\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u5099\u5fd8\u9332\u306e\u610f\u5473\u3092\u8fbc\u3081\u3066\u30b7\u30a7\u30a2\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n[Leo Dabus](http://stackoverflow.com/users/2303865/leo-dabus)\u3055\u3093\u306b\u611f\u8b1d\n[Getting the difference between two NSDates in (months/days/hours/minutes/seconds)](http://stackoverflow.com/a/27184261/5941232)\n\n#NSDate Extension\n\n```NSDateExtension.swift:\nimport UIKit\nextension NSDate {\n    func yearsFrom(date:NSDate) -> Int{\n        return NSCalendar.currentCalendar().components(NSCalendarUnit.Year, fromDate: date, toDate: self, options: []).year\n    }\n    func monthsFrom(date:NSDate) -> Int{\n        return NSCalendar.currentCalendar().components(NSCalendarUnit.Month, fromDate: date, toDate: self, options: []).month\n    }\n    func weeksFrom(date:NSDate) -> Int{\n        return NSCalendar.currentCalendar().components(NSCalendarUnit.WeekOfYear, fromDate: date, toDate: self, options: []).weekOfYear\n    }\n    func daysFrom(date:NSDate) -> Int{\n        return NSCalendar.currentCalendar().components(NSCalendarUnit.Day, fromDate: date, toDate: self, options: []).day\n    }\n    func hoursFrom(date:NSDate) -> Int{\n        return NSCalendar.currentCalendar().components(NSCalendarUnit.Hour, fromDate: date, toDate: self, options: []).hour\n    }\n    func minutesFrom(date:NSDate) -> Int{\n        return NSCalendar.currentCalendar().components(NSCalendarUnit.Minute, fromDate: date, toDate: self, options: []).minute\n    }\n    func secondsFrom(date:NSDate) -> Int{\n        return NSCalendar.currentCalendar().components(NSCalendarUnit.Second, fromDate: date, toDate: self, options: []).second\n    }\n    func offsetFrom(date:NSDate) -> String {\n        if yearsFrom(date)   > 0 { return \"\\(yearsFrom(date))\u5e74\u524d\"   }\n        if monthsFrom(date)  > 0 { return \"\\(monthsFrom(date))\u30f6\u6708\u524d\"  }\n        if weeksFrom(date)   > 0 { return \"\\(weeksFrom(date))\u9031\u9593\u524d\"   }\n        if daysFrom(date)    > 0 { return \"\\(daysFrom(date))\u65e5\u524d\"    }\n        if hoursFrom(date)   > 0 { return \"\\(hoursFrom(date))\u6642\u9593\u524d\"   }\n        if minutesFrom(date) > 0 { return \"\\(minutesFrom(date))\u5206\u524d\" }\n        if secondsFrom(date) > 0 { return \"\\(secondsFrom(date))\u79d2\u524d\" }\n        return \"\"\n    }\n}\n```\n\n#\u4f7f\u3044\u65b9\n\n\u305f\u3068\u3048\u3070\u73fe\u5728\u6642\u523b\u3068\u306e\u5dee\u5206\u304b\u3089\u8868\u793a\u3057\u305f\u3044\u3068\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u8a18\u3057\u307e\u3059\u3002\n\n```swift\n//time\u3068\u3044\u30462016/4/9 8:00:00 \u3068\u3044\u3046\u6642\u523b\u306eNSDate\u578b\u306e\u5909\u6570\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002\nlet now = NSDate() //2016/4/10 16:00:00 \u3068\u3057\u307e\u3059\n\nlet year = now.yearFrom(time) // -> 0\u5e74\nlet days = now.daysFrom(time) // 1\u65e5\nlet duration = now.offsetFrom(time) // -> 1\u65e5\u524d\n\n```\n", "tags": ["Swift", "iOS9", "XCode7", "Swift2"]}