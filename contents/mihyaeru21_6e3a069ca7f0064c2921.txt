{"context": " More than 1 year has passed since last update.\u3053\u306e\u6295\u7a3f\u306f\u3001Crystal Advent Calendar 2015\u306e20\u65e5\u76ee\u306e\u3082\u306e\u3002\n\n\u3072\u3068\u307e\u305a 0.9.1\u3067\u52d5\u304f\u3088\u3046\u306b\u3059\u308b\nCrystal\u306f\u307e\u3060\u307e\u3060\u958b\u767a\u4e2d\u306e\u305f\u3081\u7834\u58ca\u7684\u5909\u66f4\u304c\u968f\u6240\u3067\u884c\u308f\u308c\u3066\u3044\u308b\u3002\u305d\u306e\u5f71\u97ff\u3067\u6614\u4f5c\u3063\u305f\u3053\u306ebot\u304c\u3044\u308d\u3044\u308d\u3068\u52d5\u304b\u306a\u304b\u3063\u305f\u305f\u3081\u3001\u52d5\u304f\u3068\u3053\u308d\u307e\u3067\u5909\u66f4\u306b\u8ffd\u5f93\u3057\u305f\u3002\n\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3078\u306e\u79fb\u884c\u4f8b\u3068\u3057\u3066\u3061\u3087\u3046\u3069\u826f\u3044\u984c\u6750\u3060\u3063\u305f\u304b\u3089\u6b8b\u3057\u3066\u304a\u304f\u3002\n\u5b9f\u884c\u7d50\u679c\n\nCrystal\u5074\u306e\u5909\u66f4\u70b9\n\n\u4fee\u6b63diff\n\n\u3068\u3044\u3046\u30b9\u30bf\u30a4\u30eb\u3067\u8a18\u8ff0\u3057\u3066\u3044\u304f\u3002\n\nCGI\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u7121\u304f\u306a\u3063\u3066\u3044\u305f\nError in ./src/main.cr:1: while requiring \"./crybot\"\n\nrequire \"./crybot\"\n^\n\nin ./src/crybot.cr:2: while requiring \"cgi\": can't find file 'cgi' relative to '/Users/mihyaeru/pj/crystal/crybot/src'\n\nrequire \"cgi\"\n^\n\n0.9.0\u3067\u5909\u308f\u3063\u305f\u3089\u3057\u3044\u3002\n\n(breaking change) The CGI module's funcionality has been moved to URI and HTTP::Params\n\n\u3053\u308c\u3067OK\u3002\ndiff --git a/src/crybot.cr b/src/crybot.cr\nindex 0fca99d..05487ae 100644\n--- a/src/crybot.cr\n+++ b/src/crybot.cr\n@@ -1,5 +1,5 @@\n require \"./crybot/*\"\n-require \"cgi\"\n+require \"uri\"\n\n class Crybot\n     def initialize\n@@ -26,7 +26,7 @@ class Crybot\n                         name = user[\"screen_name\"]?\n                         text = (text as String).gsub(\"@crybot21 \", \"\")\n                         tweet_test = \"@#{name} #{text}\"\n-                        p self.tweet(CGI.escape(tweet_test))\n+                        p self.tweet(URI.escape(tweet_test))\n                         p tweet_test\n                     end\n                 end\n\n\nTime\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u304c\u5909\u308f\u3063\u3066\u3044\u305f\nError in ./src/main.cr:6: instantiating 'Crybot#user_stream()'\n\nbot.user_stream\n    ^~~~~~~~~~~\n\nin ./src/crybot.cr:18: instantiating 'Client#start_stream(String, String)'\n\n        @client.start_stream \"GET\", \"/user.json\", do |body|\n                ^~~~~~~~~~~~\n\nin ./src/crybot/client.cr:32: instantiating 'make_request(String, String, String)'\n\n        request = make_request(method, STREAM_HOST, path)\n                  ^~~~~~~~~~~~\n\ninstantiating 'make_request(String, String, String, Nil)'\n\nin ./src/crybot/client.cr:68: undefined method 'to_i' for Time (did you mean 'to_s'?)\n\n        request.headers[\"Authorization\"] = @signature.authorization_header(request, true, Time.utc_now.to_i.to_s, SecureRandom.hex(32))\n                                                                                                       ^~~~\n\n================================================================================\n\nTime trace:\n\n  /Users/mihyaeru/.anyenv/envs/crenv/versions/0.9.1/src/time/time.cr:224\n\n      def self.utc_now\n               ^~~~~~~\n\n  /Users/mihyaeru/.anyenv/envs/crenv/versions/0.9.1/src/time/time.cr:225\n\n        new utc_ticks, Kind::Utc\n        ^~~\n\n0.7.6\u3067\u5909\u308f\u3063\u305f\u3089\u3057\u3044\u3002\n\n(breaking change) Renamed Time.at to Time.epoch, and Time#to_i and Time#to_f to Time#epoch and Time#epoch_f\n\n\u3053\u308c\u3067OK\u3002\ndiff --git a/src/crybot/client.cr b/src/crybot/client.cr\nindex 07a7799..c6d7868 100644\n--- a/src/crybot/client.cr\n+++ b/src/crybot/client.cr\n@@ -65,7 +65,7 @@ class Client\n         request = HTTP::Request.new(method, API_VERSION + path, body: body)\n         request.headers[\"Host\"]          = host\n         request.headers[\"Content-type\"]  = \"application/x-www-form-urlencoded\" if method == \"POST\"\n-        request.headers[\"Authorization\"] = @signature.authorization_header(request, true, Time.utc_now.to_i.to_s, SecureRandom.hex(32))\n+        request.headers[\"Authorization\"] = @signature.authorization_header(request, true, Time.utc_now.epoch.to_s, SecureRandom.hex(32))\n         return request\n     end\n\n\nIO\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u304c\u5909\u308f\u3063\u3066\u3044\u305f\nError in ./src/main.cr:6: instantiating 'Crybot#user_stream()'\n\nbot.user_stream\n    ^~~~~~~~~~~\n\nin ./src/crybot.cr:18: instantiating 'Client#start_stream(String, String)'\n\n        @client.start_stream \"GET\", \"/user.json\", do |body|\n                ^~~~~~~~~~~~\n\nin ./src/crybot/client.cr:47: no overload matches 'OpenSSL::SSL::Socket#read' with types Int32\nOverloads are:\n - OpenSSL::SSL::Socket#read(slice : Slice(UInt8))\n - OpenSSL::SSL::Socket#read(slice : Slice(UInt8))\n\n            line += io.read(chunk_size)\n                       ^~~~\n\n0.9.0\u3067\u5909\u308f\u3063\u305f\u3089\u3057\u3044\u3002\n\n(breaking change) IO#read() is now IO#gets_to_end. Removed IO#read(count), added IO#skip(count)\n\n\u3053\u308c\u3067OK...\ndiff --git a/src/crybot/client.cr b/src/crybot/client.cr\nindex c6d7868..94ae2a6 100644\n--- a/src/crybot/client.cr\n+++ b/src/crybot/client.cr\n@@ -44,7 +44,7 @@ class Client\n         # read body\n         line = \"\"\n         while (chunk_size = io.gets.not_nil!.to_i(16)) > 0\n-            line += io.read(chunk_size)\n+            line += io.gets(chunk_size) as String\n             io.gets # Read \\r\\n\n\n             if line =~ /^\\s+$/\n\n\u3068\u601d\u3044\u304d\u3084\u3001\u5b9f\u884c\u306f\u3067\u304d\u305f\u3051\u3069\u3082\u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u306b\u3002\n{\"friends\" => [198177363]}\ninvalid Int32:\n (ArgumentError)\n[4347956178] *CallStack::unwind:Array(Pointer(Void)) +82\n[4347956081] *CallStack#initialize<CallStack>:Array(Pointer(Void)) +17\n[4347956040] *CallStack::new:CallStack +40\n[4347955297] *Exception@Exception#initialize<ArgumentError, String>:CallStack +33\n[4347955229] *ArgumentError#initialize<ArgumentError, String>:CallStack +29\n[4347955169] *ArgumentError::new<String>:ArgumentError +97\n[4347945122] *String#to_i32<String, Int32, Bool, Bool, Bool, Bool>:Int32 +226\n[4347944885] *String#to_i<String, Int32, Bool, Bool, Bool, Bool>:Int32 +37\n[4347950319] *String#to_i<String, Int32>:Int32 +79\n[4348087281] *Crybot#user_stream<Crybot>:Nil +625\n[4347913599] __crystal_main +24159\n[4347923200] main +32\n\n\u3069\u3046\u3084\u3089read(count)\u3068gets(count)\u3067\u306f\u8aad\u307f\u53d6\u308a\u6642\u306e\u6319\u52d5\u304c\u82e5\u5e72\u9055\u3046\u3089\u3057\u304f\u3001io.gets\u3067\"\\r\\n\"\u3092\u8aad\u307f\u98db\u3070\u3059\u8fba\u308a\u3067\u8aad\u307f\u98db\u3070\u305b\u305a\u3001\u6b21\u306e\u30eb\u30fc\u30d7\u306eio.gets.not_nil!.to_i(16)\u306b\u3066\"\\r\\n\".to_i(16)\u306b\u306a\u308b\u3088\u3046\u306b\u5909\u308f\u3063\u305f\u3088\u3046\u3060\u3002\n\u3053\u308c\u3067\u4eca\u5ea6\u3053\u305d\u52d5\u3044\u305f\u3002\ndiff --git a/src/crybot/client.cr b/src/crybot/client.cr\nindex 94ae2a6..1fa6282 100644\n--- a/src/crybot/client.cr\n+++ b/src/crybot/client.cr\n@@ -43,9 +43,12 @@ class Client\n\n         # read body\n         line = \"\"\n-        while (chunk_size = io.gets.not_nil!.to_i(16)) > 0\n+        while true\n+            chunk_size_str = io.gets as String\n+            next if chunk_size_str == \"\\r\\n\"\n+            chunk_size = chunk_size_str.to_i(16)\n+\n             line += io.gets(chunk_size) as String\n-            io.gets # Read \\r\\n\n\n             if line =~ /^\\s+$/\n                 line = \"\"\n\n\nStreaming\u3092\u4f7f\u3046\n\u3053\u306ebot\u3092\u66f8\u3044\u305f2015\u5e747\u670829\u65e5\u6642\u70b9\u3067\u306fHTTP::Client\u306bStreaming\u6a5f\u80fd\u304c\u5b58\u5728\u3057\u3066\u304a\u3089\u305aSocket\u5468\u308a\u3092\u9811\u5f35\u3063\u3066\u81ea\u524d\u3067\u5b9f\u88c5\u3057\u305f\u3002\u6771\u4eac Crystal \u52c9\u5f37\u4f1a #1\u3067\u3053\u306ebot\u306e\u5236\u4f5c\u3092LT\u3057\u305f\u540c\u65e5\u30017\u670830\u65e5\u306b\u516c\u958b\u3055\u308c\u305f0.7.5\u3067Streaming\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u3068\u3044\u3046\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u60aa\u3055\u3092\u767a\u63ee\u3057\u305f\u3002\n\u767a\u8868\u4ee5\u964d\u3001\u3068\u304f\u306b\u4f55\u3082\u624b\u3092\u52a0\u3048\u3066\u3044\u306a\u304b\u3063\u305f\u304c\u3001Advent Calendar\u3092\u6a5f\u306bStreaming\u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u305f\u7248\u306b\u66f8\u304d\u63db\u3048\u3066\u307f\u305f\u3002\n\u9577\u3005\u3068\u81ea\u524d\u3067\u9811\u5f35\u3063\u3066\u3044\u305f\u8f9b\u3055\u3042\u3075\u308c\u308b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3001\ndef start_stream(method, path)\n    request = make_request(method, STREAM_HOST, path)\n    io = make_socket(request)\n    request.to_io(io)\n\n    # read header\n    headers = HTTP::Headers.new\n    while line = io.gets\n        break if line == \"\\r\\n\" || line == \"\\n\"\n        name, value = HTTP.parse_header(line)\n        headers.add(name, value)\n    end\n\n    # read body\n    line = \"\"\n    while true\n        chunk_size_str = io.gets as String\n        next if chunk_size_str == \"\\r\\n\"\n        chunk_size = chunk_size_str.to_i(16)\n\n        line += io.gets(chunk_size) as String\n\n        if line =~ /^\\s+$/\n            line = \"\"\n            next\n        end\n\n        begin\n            yield JSON.parse(line) as Hash\n            line = \"\"\n        rescue e\n            p e # FIXME: !!!\n        end\n    end\nend\n\nprivate def make_socket(request)\n    socket = TCPSocket.new(request.headers[\"Host\"], 443)\n    socket.sync = false\n    return OpenSSL::SSL::Socket.new(socket)\nend\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3063\u304d\u308a\u3068\u66f8\u3051\u305f\u3002\u3059\u3054\u3044\uff01\ndef start_stream(method, path)\n    request = make_request(method, STREAM_HOST, path)\n    @stream_client.exec(request) do |response|\n        while true\n            line = response.body_io.gets as String\n            next if line =~ /^\\s+$/\n            yield JSON.parse(line) as Hash\n        end\n    end\nend\n\n\n\u7d42\u308f\u308a\u306b\n\u5f53\u521d\u306e\u4e88\u5b9a\u3067\u306fStreaming\u306e\u6a5f\u80fd\u3092\u4f7f\u3046\u5909\u66f4\u3060\u3051\u3067\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u601d\u3063\u3066\u3044\u305f\u3051\u3069\u3082\u3001Crystal\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3067\u52d5\u304b\u306a\u304f\u306a\u3063\u305f\u90e8\u5206\u304c\u591a\u3005\u3042\u308a\u4f75\u8a18\u3059\u308b\u5f62\u306b\u3057\u305f\u3002\u65b0\u65e7\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u6bd4\u8f03\u304c\u3067\u304d\u3066\u826f\u3044\u611f\u3058\u306b\u53ce\u307e\u3063\u305f\u3068\u500b\u4eba\u7684\u306b\u601d\u3063\u3066\u3044\u308b\u3002\n\u660e\u65e5\u306e\u62c5\u5f53\u306f@5t111111\u3055\u3093\u306e\u4e88\u5b9a\u3002\n\n\u53c2\u8003\n\nCrystal\u306eChange Log: https://github.com/manastech/crystal/blob/master/CHANGELOG.md\n\n\n\u3053\u306e\u6295\u7a3f\u306f\u3001[Crystal Advent Calendar 2015](http://www.adventar.org/calendars/800)\u306e20\u65e5\u76ee\u306e\u3082\u306e\u3002\n\n## \u3072\u3068\u307e\u305a 0.9.1\u3067\u52d5\u304f\u3088\u3046\u306b\u3059\u308b\n\nCrystal\u306f\u307e\u3060\u307e\u3060\u958b\u767a\u4e2d\u306e\u305f\u3081\u7834\u58ca\u7684\u5909\u66f4\u304c\u968f\u6240\u3067\u884c\u308f\u308c\u3066\u3044\u308b\u3002\u305d\u306e\u5f71\u97ff\u3067\u6614\u4f5c\u3063\u305f[\u3053\u306ebot](https://github.com/mihyaeru21/crybot)\u304c\u3044\u308d\u3044\u308d\u3068\u52d5\u304b\u306a\u304b\u3063\u305f\u305f\u3081\u3001\u52d5\u304f\u3068\u3053\u308d\u307e\u3067\u5909\u66f4\u306b\u8ffd\u5f93\u3057\u305f\u3002\n\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3078\u306e\u79fb\u884c\u4f8b\u3068\u3057\u3066\u3061\u3087\u3046\u3069\u826f\u3044\u984c\u6750\u3060\u3063\u305f\u304b\u3089\u6b8b\u3057\u3066\u304a\u304f\u3002\n\n```\n\u5b9f\u884c\u7d50\u679c\n\nCrystal\u5074\u306e\u5909\u66f4\u70b9\n\n\u4fee\u6b63diff\n```\n\n\u3068\u3044\u3046\u30b9\u30bf\u30a4\u30eb\u3067\u8a18\u8ff0\u3057\u3066\u3044\u304f\u3002\n\n### CGI\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u7121\u304f\u306a\u3063\u3066\u3044\u305f\n\n```\nError in ./src/main.cr:1: while requiring \"./crybot\"\n\nrequire \"./crybot\"\n^\n\nin ./src/crybot.cr:2: while requiring \"cgi\": can't find file 'cgi' relative to '/Users/mihyaeru/pj/crystal/crybot/src'\n\nrequire \"cgi\"\n^\n```\n\n`0.9.0`\u3067\u5909\u308f\u3063\u305f\u3089\u3057\u3044\u3002\n\n> (breaking change) The CGI module's funcionality has been moved to URI and HTTP::Params\n\n\u3053\u308c\u3067OK\u3002\n\n```diff\ndiff --git a/src/crybot.cr b/src/crybot.cr\nindex 0fca99d..05487ae 100644\n--- a/src/crybot.cr\n+++ b/src/crybot.cr\n@@ -1,5 +1,5 @@\n require \"./crybot/*\"\n-require \"cgi\"\n+require \"uri\"\n\n class Crybot\n     def initialize\n@@ -26,7 +26,7 @@ class Crybot\n                         name = user[\"screen_name\"]?\n                         text = (text as String).gsub(\"@crybot21 \", \"\")\n                         tweet_test = \"@#{name} #{text}\"\n-                        p self.tweet(CGI.escape(tweet_test))\n+                        p self.tweet(URI.escape(tweet_test))\n                         p tweet_test\n                     end\n                 end\n```\n\n\n### Time\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u304c\u5909\u308f\u3063\u3066\u3044\u305f\n\n```\nError in ./src/main.cr:6: instantiating 'Crybot#user_stream()'\n\nbot.user_stream\n    ^~~~~~~~~~~\n\nin ./src/crybot.cr:18: instantiating 'Client#start_stream(String, String)'\n\n        @client.start_stream \"GET\", \"/user.json\", do |body|\n                ^~~~~~~~~~~~\n\nin ./src/crybot/client.cr:32: instantiating 'make_request(String, String, String)'\n\n        request = make_request(method, STREAM_HOST, path)\n                  ^~~~~~~~~~~~\n\ninstantiating 'make_request(String, String, String, Nil)'\n\nin ./src/crybot/client.cr:68: undefined method 'to_i' for Time (did you mean 'to_s'?)\n\n        request.headers[\"Authorization\"] = @signature.authorization_header(request, true, Time.utc_now.to_i.to_s, SecureRandom.hex(32))\n                                                                                                       ^~~~\n\n================================================================================\n\nTime trace:\n\n  /Users/mihyaeru/.anyenv/envs/crenv/versions/0.9.1/src/time/time.cr:224\n\n      def self.utc_now\n               ^~~~~~~\n\n  /Users/mihyaeru/.anyenv/envs/crenv/versions/0.9.1/src/time/time.cr:225\n\n        new utc_ticks, Kind::Utc\n        ^~~\n```\n\n`0.7.6`\u3067\u5909\u308f\u3063\u305f\u3089\u3057\u3044\u3002\n\n> (breaking change) Renamed Time.at to Time.epoch, and Time#to_i and Time#to_f to Time#epoch and Time#epoch_f\n\n\u3053\u308c\u3067OK\u3002\n\n```diff\ndiff --git a/src/crybot/client.cr b/src/crybot/client.cr\nindex 07a7799..c6d7868 100644\n--- a/src/crybot/client.cr\n+++ b/src/crybot/client.cr\n@@ -65,7 +65,7 @@ class Client\n         request = HTTP::Request.new(method, API_VERSION + path, body: body)\n         request.headers[\"Host\"]          = host\n         request.headers[\"Content-type\"]  = \"application/x-www-form-urlencoded\" if method == \"POST\"\n-        request.headers[\"Authorization\"] = @signature.authorization_header(request, true, Time.utc_now.to_i.to_s, SecureRandom.hex(32))\n+        request.headers[\"Authorization\"] = @signature.authorization_header(request, true, Time.utc_now.epoch.to_s, SecureRandom.hex(32))\n         return request\n     end\n```\n\n\n### IO\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u304c\u5909\u308f\u3063\u3066\u3044\u305f\n\n\n```\nError in ./src/main.cr:6: instantiating 'Crybot#user_stream()'\n\nbot.user_stream\n    ^~~~~~~~~~~\n\nin ./src/crybot.cr:18: instantiating 'Client#start_stream(String, String)'\n\n        @client.start_stream \"GET\", \"/user.json\", do |body|\n                ^~~~~~~~~~~~\n\nin ./src/crybot/client.cr:47: no overload matches 'OpenSSL::SSL::Socket#read' with types Int32\nOverloads are:\n - OpenSSL::SSL::Socket#read(slice : Slice(UInt8))\n - OpenSSL::SSL::Socket#read(slice : Slice(UInt8))\n\n            line += io.read(chunk_size)\n                       ^~~~\n```\n\n`0.9.0`\u3067\u5909\u308f\u3063\u305f\u3089\u3057\u3044\u3002\n\n> (breaking change) IO#read() is now IO#gets_to_end. Removed IO#read(count), added IO#skip(count)\n\n\u3053\u308c\u3067OK...\n\n```diff\ndiff --git a/src/crybot/client.cr b/src/crybot/client.cr\nindex c6d7868..94ae2a6 100644\n--- a/src/crybot/client.cr\n+++ b/src/crybot/client.cr\n@@ -44,7 +44,7 @@ class Client\n         # read body\n         line = \"\"\n         while (chunk_size = io.gets.not_nil!.to_i(16)) > 0\n-            line += io.read(chunk_size)\n+            line += io.gets(chunk_size) as String\n             io.gets # Read \\r\\n\n\n             if line =~ /^\\s+$/\n```\n\n\u3068\u601d\u3044\u304d\u3084\u3001\u5b9f\u884c\u306f\u3067\u304d\u305f\u3051\u3069\u3082\u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u306b\u3002\n\n```\n{\"friends\" => [198177363]}\ninvalid Int32:\n (ArgumentError)\n[4347956178] *CallStack::unwind:Array(Pointer(Void)) +82\n[4347956081] *CallStack#initialize<CallStack>:Array(Pointer(Void)) +17\n[4347956040] *CallStack::new:CallStack +40\n[4347955297] *Exception@Exception#initialize<ArgumentError, String>:CallStack +33\n[4347955229] *ArgumentError#initialize<ArgumentError, String>:CallStack +29\n[4347955169] *ArgumentError::new<String>:ArgumentError +97\n[4347945122] *String#to_i32<String, Int32, Bool, Bool, Bool, Bool>:Int32 +226\n[4347944885] *String#to_i<String, Int32, Bool, Bool, Bool, Bool>:Int32 +37\n[4347950319] *String#to_i<String, Int32>:Int32 +79\n[4348087281] *Crybot#user_stream<Crybot>:Nil +625\n[4347913599] __crystal_main +24159\n[4347923200] main +32\n```\n\n\u3069\u3046\u3084\u3089`read(count)`\u3068`gets(count)`\u3067\u306f\u8aad\u307f\u53d6\u308a\u6642\u306e\u6319\u52d5\u304c\u82e5\u5e72\u9055\u3046\u3089\u3057\u304f\u3001`io.gets`\u3067`\"\\r\\n\"`\u3092\u8aad\u307f\u98db\u3070\u3059\u8fba\u308a\u3067\u8aad\u307f\u98db\u3070\u305b\u305a\u3001\u6b21\u306e\u30eb\u30fc\u30d7\u306e`io.gets.not_nil!.to_i(16)`\u306b\u3066`\"\\r\\n\".to_i(16)`\u306b\u306a\u308b\u3088\u3046\u306b\u5909\u308f\u3063\u305f\u3088\u3046\u3060\u3002\n\n\u3053\u308c\u3067\u4eca\u5ea6\u3053\u305d\u52d5\u3044\u305f\u3002\n\n```diff\ndiff --git a/src/crybot/client.cr b/src/crybot/client.cr\nindex 94ae2a6..1fa6282 100644\n--- a/src/crybot/client.cr\n+++ b/src/crybot/client.cr\n@@ -43,9 +43,12 @@ class Client\n\n         # read body\n         line = \"\"\n-        while (chunk_size = io.gets.not_nil!.to_i(16)) > 0\n+        while true\n+            chunk_size_str = io.gets as String\n+            next if chunk_size_str == \"\\r\\n\"\n+            chunk_size = chunk_size_str.to_i(16)\n+\n             line += io.gets(chunk_size) as String\n-            io.gets # Read \\r\\n\n\n             if line =~ /^\\s+$/\n                 line = \"\"\n```\n\n\n## Streaming\u3092\u4f7f\u3046\n\n\u3053\u306ebot\u3092\u66f8\u3044\u305f2015\u5e747\u670829\u65e5\u6642\u70b9\u3067\u306f`HTTP::Client`\u306bStreaming\u6a5f\u80fd\u304c\u5b58\u5728\u3057\u3066\u304a\u3089\u305aSocket\u5468\u308a\u3092\u9811\u5f35\u3063\u3066\u81ea\u524d\u3067\u5b9f\u88c5\u3057\u305f\u3002[\u6771\u4eac Crystal \u52c9\u5f37\u4f1a #1](http://crystal.connpass.com/event/17496/)\u3067\u3053\u306ebot\u306e\u5236\u4f5c\u3092LT\u3057\u305f\u540c\u65e5\u30017\u670830\u65e5\u306b\u516c\u958b\u3055\u308c\u305f[0.7.5](http://crystal-lang.org/2015/07/30/crystal-0.7.5-released.html)\u3067Streaming\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u3068\u3044\u3046\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u60aa\u3055\u3092\u767a\u63ee\u3057\u305f\u3002\n\u767a\u8868\u4ee5\u964d\u3001\u3068\u304f\u306b\u4f55\u3082\u624b\u3092\u52a0\u3048\u3066\u3044\u306a\u304b\u3063\u305f\u304c\u3001Advent Calendar\u3092\u6a5f\u306bStreaming\u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u305f\u7248\u306b\u66f8\u304d\u63db\u3048\u3066\u307f\u305f\u3002\n\n\u9577\u3005\u3068\u81ea\u524d\u3067\u9811\u5f35\u3063\u3066\u3044\u305f\u8f9b\u3055\u3042\u3075\u308c\u308b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3001\n\n```ruby\ndef start_stream(method, path)\n    request = make_request(method, STREAM_HOST, path)\n    io = make_socket(request)\n    request.to_io(io)\n\n    # read header\n    headers = HTTP::Headers.new\n    while line = io.gets\n        break if line == \"\\r\\n\" || line == \"\\n\"\n        name, value = HTTP.parse_header(line)\n        headers.add(name, value)\n    end\n\n    # read body\n    line = \"\"\n    while true\n        chunk_size_str = io.gets as String\n        next if chunk_size_str == \"\\r\\n\"\n        chunk_size = chunk_size_str.to_i(16)\n\n        line += io.gets(chunk_size) as String\n\n        if line =~ /^\\s+$/\n            line = \"\"\n            next\n        end\n\n        begin\n            yield JSON.parse(line) as Hash\n            line = \"\"\n        rescue e\n            p e # FIXME: !!!\n        end\n    end\nend\n\nprivate def make_socket(request)\n    socket = TCPSocket.new(request.headers[\"Host\"], 443)\n    socket.sync = false\n    return OpenSSL::SSL::Socket.new(socket)\nend\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3063\u304d\u308a\u3068\u66f8\u3051\u305f\u3002\u3059\u3054\u3044\uff01\n\n```ruby\ndef start_stream(method, path)\n    request = make_request(method, STREAM_HOST, path)\n    @stream_client.exec(request) do |response|\n        while true\n            line = response.body_io.gets as String\n            next if line =~ /^\\s+$/\n            yield JSON.parse(line) as Hash\n        end\n    end\nend\n```\n\n\n## \u7d42\u308f\u308a\u306b\n\n\u5f53\u521d\u306e\u4e88\u5b9a\u3067\u306fStreaming\u306e\u6a5f\u80fd\u3092\u4f7f\u3046\u5909\u66f4\u3060\u3051\u3067\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u601d\u3063\u3066\u3044\u305f\u3051\u3069\u3082\u3001Crystal\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3067\u52d5\u304b\u306a\u304f\u306a\u3063\u305f\u90e8\u5206\u304c\u591a\u3005\u3042\u308a\u4f75\u8a18\u3059\u308b\u5f62\u306b\u3057\u305f\u3002\u65b0\u65e7\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u6bd4\u8f03\u304c\u3067\u304d\u3066\u826f\u3044\u611f\u3058\u306b\u53ce\u307e\u3063\u305f\u3068\u500b\u4eba\u7684\u306b\u601d\u3063\u3066\u3044\u308b\u3002\n\n\u660e\u65e5\u306e\u62c5\u5f53\u306f@5t111111\u3055\u3093\u306e\u4e88\u5b9a\u3002\n\n\n## \u53c2\u8003\n\n- Crystal\u306eChange Log: https://github.com/manastech/crystal/blob/master/CHANGELOG.md\n", "tags": ["crystal"]}