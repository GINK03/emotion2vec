{"context": "\n\n\u6982\u8981\nCodeIQ \u3067\u51fa\u984c\u3055\u308c\u3066\u3044\u305f\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u9762\u63a5\u304b\u3089\u306e\u554f\u984c\u306b\u5bfe\u3057\u3066, 4\u901a\u308a\u306e\u89e3\u7b54 (C++) \u3092\u8003\u3048\u305f\u306e\u306b\u52a0\u3048\u3066, \u30b3\u30e1\u30f3\u30c8\u3067\u6559\u3048\u3066\u3082\u3089\u3063\u305f\u65b9\u6cd5\u3092\u30b3\u30fc\u30c9\u306b\u3057\u305f\u8a18\u9332\u3067\u3059. \n\n\u554f\u984c\n\u304e\u3085\u3046\u304e\u3085\u3046\u30b7\u30fc\u30b1\u30f3\u30b9 (codeIQ, 2017\u5e743\u67087\u65e5\u3067\u89e3\u7b54\u306f\u7de0\u3081\u5207\u3089\u308c, \u4eca\u306f\u554f\u984c\u3092\u95b2\u89a7\u3067\u304d\u306a\u3044)\n\u51fa\u984c\u8005\u306e Ozy \u3055\u3093\u306b\u3088\u308b\u3068, \u66f8\u7c4d\u300e\u4e16\u754c\u3067\u95d8\u3046\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u529b\u3092\u935b\u3048\u308b\u672c \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u9762\u63a5189\u554f\u3068\u305d\u306e\u89e3\u6cd5\u300f\u3067\u89e3\u8aac\u3055\u308c\u3066\u3044\u308b\u554f\u984c\u306e\u7c21\u7565\u7248\u3068\u306e\u3053\u3068\u3067\u3059. \n\u5165\u529b: \u6b63\u306e\u6574\u6570\u304b\u3089\u306a\u308b\u6570\u5217 a1,\u2026,an(n\u22645000)a1,\u2026,an(n\u22645000)a_1, \\ldots , a_n (n \\leq 5000). \u3053\u306e\u6570\u5217\u306f 1, 2, 3 \u3092\u305d\u308c\u305e\u308c1\u3064\u4ee5\u4e0a\u542b\u3080\u3068\u3059\u308b. \n\u5165\u529b\u306e\u66f8\u5f0f: 1\u884c\u76ee\u306b\u6570\u5217\u306e\u9577\u3055 n, 2\u884c\u76ee\u306b\u6570\u5217\u306e\u5024 a1,\u2026,ana1,\u2026,ana_1, \\ldots , a_n.\n\u51fa\u529b: 1, 2, 3 \u306e\u6570\u5b57\u304c\u3059\u3079\u3066\u542b\u307e\u308c\u308b\u6570\u5217\u306e\u90e8\u5206\u5217 ai,\u2026,aj(1\u2264i<j\u2264n)ai,\u2026,aj(1\u2264i<j\u2264n)a_i,\\ldots , a_j (1\\leq i<j\\leq n) \u306e\u4e2d\u3067\u4e00\u756a\u77ed\u3044\u5217\u306e\u9577\u3055 (j\u2212i+1j\u2212i+1j-i+1). \n\u51fa\u529b\u306e\u66f8\u5f0f: 1\u884c\u76ee\u306b\u4e00\u756a\u77ed\u3044\u5217\u306e\u9577\u3055. \n\u5b9f\u884c\u6642\u9593: 2\u79d2\u4ee5\u5185\n\n\u89e3\u7b541\n(1\u306e\u3042\u308b\u4f4d\u7f6e, 2\u306e\u3042\u308b\u4f4d\u7f6e, 3 \u306e\u3042\u308b\u4f4d\u7f6e) \u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u4e00\u3064\u305a\u3064\u4f5c\u308a, \u305d\u308c\u3089\u306e\u4f4d\u7f6e\u306e (\u53f3\u7aef - \u5de6\u7aef + 1) \u306e\u4e00\u756a\u5c0f\u3055\u3044\u5024\u3092\u51fa\u529b\u3059\u308b. \u8a08\u7b97\u6642\u9593\u306f O(n3)O(n3)O(n^3). \u30b3\u30fc\u30c9\u306f\u6b21\u306e\u901a\u308a. \n\ngyu1.cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main(){\n  int n, res = 5001;\n  cin >> n;\n  vector<int> w;\n  vector<vector<int> > v;\n  for (int i = 0; i < 4; i++) { v.push_back(w); }\n  for (int i = 0; i < n; i++) {\n    int m;\n    cin >> m;\n    if ((m == 1) || (m == 2) || (m == 3)) { v[m].push_back(i); }\n  }\n\n  for (int i1 = 0; i1 < v[1].size(); i1++) {\n    for (int i2 = 0; i2 < v[2].size(); i2++) {\n      for (int i3 = 0; i3 < v[3].size(); i3++) {\n        int left = min(v[1][i1], min(v[2][i2], v[3][i3]));\n        int right = max(v[1][i1], max(v[2][i2], v[3][i3]));\n        res = min(res, right-left+1);\n        if (res == 3) { printf(\"3\\n\"); return 0;}\n      }\n    }\n  }\n  cout << res << endl;\n\n  return 0;\n}\n\n\n\n\u89e3\u7b542\ni=1i=1i = 1 \u3068\u3059\u308b. iii \u3067\u306a\u3044 (2 \u306e\u3042\u308b\u4f4d\u7f6e, 3 \u306e\u3042\u308b\u4f4d\u7f6e) \u306e\u7d44\u307f\u5408\u308f\u305b\u3092 1\u3064\u305a\u3064\u4f5c\u308a, 2 \u3068 3 \u306e\u9593\u306e\u90e8\u5206\u5217\u306b iii \u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3082\u306e\u306e\u3046\u3061, \u6700\u3082\u77ed\u3044\u90e8\u5206\u5217\u306e\u9577\u3055\u3092\u8a18\u9332\u3059\u308b. \ni=2,3i=2,3i = 2, 3 \u306b\u3064\u3044\u3066\u3082, \u540c\u69d8\u306b\u6700\u3082\u77ed\u3044\u90e8\u5206\u5217\u306e\u9577\u3055\u3092\u8a18\u9332\u3059\u308b. \u305d\u3057\u3066, i=1,2,3i=1,2,3i = 1, 2, 3 \u306e\u4e2d\u3067\u6700\u77ed\u306e\u9577\u3055\u3092\u51fa\u529b\u3059\u308b. \ni=1i=1i=1 \u306e\u3068\u304d, 2, 3 \u306e\u9593\u306b 1 \u304c\u3042\u308b\u304b\u3069\u3046\u304b\uff081 \u306e\u4f4d\u7f6e\u3092\u8868\u3059\u30bd\u30fc\u30c8\u3055\u308c\u305f\u6570\u5217\u306b\u5bfe\u3057\u3066, 2, 3 \u306e\u4f4d\u7f6e\u306f\u3069\u3053\u306b\u5165\u308b\u304b\uff09\u3092\u4e8c\u5206\u63a2\u7d22\u3067\u6c42\u3081\u308b\u3053\u3068\u3067, \u8a08\u7b97\u6642\u9593\u306f O(n2logn)O(n2log\u2061n)O(n^2\\log n). \u30b3\u30fc\u30c9\u306f\u7701\u7565. \n\n\u89e3\u7b543\n\u53c2\u8003\u6587\u732e\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b3\u30f3\u30c6\u30b9\u30c8\u30c1\u30e3\u30ec\u30f3\u30b8\u30d6\u30c3\u30af 3.3\u7bc0\u306b\u8aac\u660e\u3055\u308c\u3066\u3044\u308b, \u3057\u3083\u304f\u3068\u308a\u6cd5\u3092\u9069\u7528\u3059\u308b. \u8a08\u7b97\u6642\u9593\u306f O(n)O(n)O(n). \u30b3\u30fc\u30c9\u306f\u6b21\u306e\u901a\u308a. \n\ngyu3.cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main(){\n  int n, res = 5001;\n  cin >> n;\n  vector<int> v;\n  for (int i = 0; i < n; i++) {\n    int m;\n    cin >> m;\n    v.push_back(m);\n  }\n  int left = 0, right = 0;\n  int count[4] = {0, 0, 0, 0}; \n\n  while (right < n) {\n    bool flag = true;\n\n    while ((count[1] == 0) || (count[2] == 0) || (count[3] == 0)) { \n      if ((v[right] >= 1) && (v[right] <= 3)) { count[v[right]] += 1; }\n      right++;\n      if (right > n) { flag = false; right =n; break; }\n    }\n    while ((count[1] >= 1) && (count[2] >= 1) && (count[3] >= 1)) {\n      if ((v[left] >=1) && (v[left] <= 3)) { count[v[left]] -= 1; }\n      left++;\n    }\n\n    if (flag) { res = min(res, right-left+1); }\n  }\n\n  cout << res << endl;\n\n  return 0;\n}\n\n\n\n\u89e3\u7b544\n\u6570\u5217\u306b\u3042\u308b 1, 2, 3 \u306e\u5834\u6240 (pos) \u3068\u5024 (num) \u3092\u9806\u756a\u306b\u914d\u5217 vvv \u3078\u4ee3\u5165\u3059\u308b. \n\u5165\u529b\u304b\u3089\u306e\u4ee3\u5165\u3092\u3059\u3079\u3066\u7d42\u3048\u305f\u3089, v[i] \u3092 i=0 \u304b\u3089\u9806\u756a\u306b\u898b\u3066\u3044\u304d, v[i] \u306e\u5024 v[i].num \u2208{1,2,3}\u2208{1,2,3}\\in \\{1, 2, 3\\} \u4ee5\u5916\u306e\u5024 (v[i].num=1 \u306a\u3089\u3070 2, 3) \u304c v[i].pos \u3088\u308a\u4ee5\u524d\u306e\u5834\u6240\u306b\u73fe\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b. \u305d\u3057\u3066, \u305d\u308c\u3089\u306e\u5834\u6240 prev[j], prev[k] \u306e\u3046\u3061, \u3088\u308a\u4ee5\u524d\u306b\u73fe\u308c\u3066\u3044\u308b\u5834\u6240 left=min(prev[j], prev[k]) \u3092\u4f7f\u3063\u3066, \u90e8\u5206\u5217\u306e\u9577\u3055 v[i].pos - left + 1 \u3092\u6c42\u3081\u308b. \n\u3059\u3079\u3066\u306e v[i] \u306b\u5bfe\u3057\u3066\u4e0a\u3092\u884c\u3044, \u6700\u77ed\u306e\u90e8\u5206\u5217\u306e\u9577\u3055\u3092\u51fa\u529b\u3059\u308b. \u8a08\u7b97\u6642\u9593\u306f O(n)O(n)O(n). \u30b3\u30fc\u30c9\u306f\u6b21\u306e\u901a\u308a.\n\ngyu4.cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nstruct numpos {\n  int num, pos;\n};\n\nint main(){\n  int n, res = 5001;\n  cin >> n;\n\n  vector<numpos> v;\n  for (int i = 0; i < n; i++) {\n    int m;\n    cin >> m;\n    if ((m == 1) || (m == 2) || (m == 3)) {\n      numpos np; np.num = m; np.pos = i;\n      v.push_back(np);\n    }\n  }\n\n  int s = v.size();\n  int prev[4] = {-1, -1, -1, -1}; \n  for (int i = 0; i < s; i++) {\n    bool flag = true;\n    int left = 5001;\n    for (int j = 1; j <= 3; j++) {\n      if ((prev[j] == -1) && (v[i].num != j)) { flag = false; }\n      if ((prev[j] != -1) && (v[i].num != j)) { left = min(left, prev[j]); }\n    }\n    if ((flag) && (res > (v[i].pos - left + 1))) { res = v[i].pos - left + 1; }\n    prev[v[i].num] = v[i].pos;\n  }\n\n  cout << res << endl;\n\n  return 0;\n}\n\n\n\n\u89e3\u7b54A \uff08\u8ffd\u8a18\uff09\n\u30b3\u30e1\u30f3\u30c8\u3067 kota9 \u3055\u3093\u306b\u6559\u3048\u3066\u3082\u3089\u3063\u305f\u65b9\u6cd5. \u8a08\u7b97\u6642\u9593\u306f O(n)O(n)O(n). \u30b3\u30fc\u30c9\u306f\u6b21\u306e\u901a\u308a. \n\ngyu-kota9.cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nstruct numpos {\n  int num, pos;\n};\n\nint main(){\n  int n, res = 10000;\n  int next[10001][4];\n  for (int i = 1; i <= 3; i++) { next[10000][i] = 10000; }\n  cin >> n;\n  vector<numpos> v;\n  for (int i = 0; i < n; i++) {\n    int m;\n    cin >> m;\n    numpos a; a.num = m; a.pos = i;\n    v.push_back(a);\n  }\n\n  int numpos[4] = {10000, 10000, 10000, 10000};\n  for (int i = n-1; i >= 0; i--) {\n    int num = v[i].num;\n    if ((num == 1) || (num == 2) || (num == 3)) {\n      for (int j = 1; j <= 3; j++) { next[i][j] = numpos[j]; }\n      numpos[v[i].num] = v[i].pos;\n    }\n  }\n\n  int nextnum[4][2] = {{-1, -1}, {2, 3}, {1, 3}, {1, 2}};\n  for (int i = 0; i < n; i++) {\n    int num = v[i].num;\n    if ((num == 1) || (num == 2) || (num == 3)) {\n      int next2[2];\n      for (int j = 0; j < 2; j++) { next2[j] = nextnum[num][j]; }\n      int right = min(next[(next[i][next2[0]])][next2[1]],\n              next[(next[i][next2[1]])][next2[0]]);\n      res = min(res, right - i + 1);\n    }\n  }\n\n  cout << res << endl;\n\n  return 0;\n}\n\n\n\n\u89e3\u7b54\u3078\u306e\u305f\u3069\u308a\u7740\u304d\u65b9\n\u554f\u984c\u3092\u898b\u305f\u3068\u304d, \u53c2\u8003\u6587\u732e\u306b\u66f8\u3044\u3066\u3042\u3063\u305f\u3057\u3083\u304f\u3068\u308a\u6cd5\u3092\u601d\u3044\u51fa\u3057\u3066, \u89e3\u7b543 \u306e\u30b3\u30fc\u30c9\u3092\u307e\u305a\u66f8\u304d\u307e\u3057\u305f. \n\u305d\u306e\u5f8c, \u51fa\u984c\u8005\u306e\u89e3\u7b54\u307e\u3067\u306e\u60f3\u5b9a\u6642\u9593\u304c 20\u5206\u3060\u3063\u305f\u306b\u3082\u304b\u304b\u308f\u3089\u305a, \u89e3\u7b54 3 \u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u7d42\u3048\u305f\u306e\u306f, \u7720\u3063\u3066\u4e00\u6669\u660e\u3051\u3066\u304b\u3089\u3067\u3057\u305f. \u305d\u3053\u3067, \u60f3\u5b9a\u6642\u9593\u5185\u3067\u3082\u30b3\u30fc\u30c9\u3092\u66f8\u3051\u308b\uff08\u3067\u3042\u308d\u3046\uff09\u5358\u7d14\u306a\u65b9\u6cd5\u3068\u3057\u3066, \u89e3\u7b541 \u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u305f. \n\u3057\u304b\u3057\u554f\u984c\u3067\u306f n\u22645000n\u22645000n\\leq 5000 \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u305f\u3081, \u89e3\u7b541 \u3067\u306f n3n3n^3 \u304c\u5927\u304d\u3044\u3068\u304d\u306b\u306f 1011101110^{11} \u307b\u3069\u306b\u306a\u308a\u307e\u3059. \u3053\u308c\u3067\u306f2\u79d2\u306e\u5236\u9650\u6642\u9593\u3067\u7d42\u308f\u3089\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093. \u305d\u3053\u3067, \u8a08\u7b97\u6642\u9593\u3092\u6291\u3048\u308b\u305f\u3081\u306e\u65b9\u6cd5\u3068\u3057\u3066, \u89e3\u7b542 \u306e\u8003\u3048\u306b\u305f\u3069\u308a\u7740\u304d\u307e\u3057\u305f. \n\u6700\u5f8c\u306b, \u3053\u306e\u307e\u3068\u3081\u3092\u66f8\u3044\u3066\u3044\u308b\u3068\u304d\u306b, \u89e3\u7b544 \u306e\u65b9\u6cd5\u3067\u3082\u7b54\u3048\u304c\u51fa\u305b\u305d\u3046\u3060\u3063\u305f\u306e\u3067, \u89e3\u7b544 \u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u305f. \n\u3068\u3044\u3046\u3053\u3068\u3067\u6b8b\u5ff5\u306a\u304c\u3089, \u3044\u305a\u308c\u306e\u65b9\u6cd5\u3082\u60f3\u5b9a\u6642\u9593\u5185\u3067\u89e3\u7b54\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f.\n\n\u53c2\u8003\u6587\u732e\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b3\u30f3\u30c6\u30b9\u30c8\u30c1\u30e3\u30ec\u30f3\u30b8\u30d6\u30c3\u30af. \u79cb\u8449\u62d3\u54c9, \u5ca9\u7530\u967d\u4e00, \u5317\u5ddd\u5b9c\u7a14. \u6bce\u65e5\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u30ba. 2010.\n# \u6982\u8981\n\nCodeIQ \u3067\u51fa\u984c\u3055\u308c\u3066\u3044\u305f\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u9762\u63a5\u304b\u3089\u306e\u554f\u984c\u306b\u5bfe\u3057\u3066, 4\u901a\u308a\u306e\u89e3\u7b54 (C++) \u3092\u8003\u3048\u305f\u306e\u306b\u52a0\u3048\u3066, \u30b3\u30e1\u30f3\u30c8\u3067\u6559\u3048\u3066\u3082\u3089\u3063\u305f\u65b9\u6cd5\u3092\u30b3\u30fc\u30c9\u306b\u3057\u305f\u8a18\u9332\u3067\u3059. \n\n# \u554f\u984c\n\n[\u304e\u3085\u3046\u304e\u3085\u3046\u30b7\u30fc\u30b1\u30f3\u30b9](<https://codeiq.jp/q/3194>) (codeIQ, 2017\u5e743\u67087\u65e5\u3067\u89e3\u7b54\u306f\u7de0\u3081\u5207\u3089\u308c, \u4eca\u306f\u554f\u984c\u3092\u95b2\u89a7\u3067\u304d\u306a\u3044)\n\n\u51fa\u984c\u8005\u306e Ozy \u3055\u3093\u306b\u3088\u308b\u3068, \u66f8\u7c4d\u300e\u4e16\u754c\u3067\u95d8\u3046\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u529b\u3092\u935b\u3048\u308b\u672c \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u9762\u63a5189\u554f\u3068\u305d\u306e\u89e3\u6cd5\u300f\u3067\u89e3\u8aac\u3055\u308c\u3066\u3044\u308b\u554f\u984c\u306e\u7c21\u7565\u7248\u3068\u306e\u3053\u3068\u3067\u3059. \n\n\u5165\u529b: \u6b63\u306e\u6574\u6570\u304b\u3089\u306a\u308b\u6570\u5217 $a_1, \\ldots , a_n (n \\leq 5000)$. \u3053\u306e\u6570\u5217\u306f 1, 2, 3 \u3092\u305d\u308c\u305e\u308c1\u3064\u4ee5\u4e0a\u542b\u3080\u3068\u3059\u308b. \n\n\u5165\u529b\u306e\u66f8\u5f0f: 1\u884c\u76ee\u306b\u6570\u5217\u306e\u9577\u3055 n, 2\u884c\u76ee\u306b\u6570\u5217\u306e\u5024 $a_1, \\ldots , a_n$.\n\n\u51fa\u529b: 1, 2, 3 \u306e\u6570\u5b57\u304c\u3059\u3079\u3066\u542b\u307e\u308c\u308b\u6570\u5217\u306e\u90e8\u5206\u5217 $a_i,\\ldots , a_j (1\\leq i<j\\leq n)$ \u306e\u4e2d\u3067\u4e00\u756a\u77ed\u3044\u5217\u306e\u9577\u3055 ($j-i+1$). \n\n\u51fa\u529b\u306e\u66f8\u5f0f: 1\u884c\u76ee\u306b\u4e00\u756a\u77ed\u3044\u5217\u306e\u9577\u3055. \n\n\u5b9f\u884c\u6642\u9593: 2\u79d2\u4ee5\u5185\n\n## \u89e3\u7b541\n\n(1\u306e\u3042\u308b\u4f4d\u7f6e, 2\u306e\u3042\u308b\u4f4d\u7f6e, 3 \u306e\u3042\u308b\u4f4d\u7f6e) \u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u4e00\u3064\u305a\u3064\u4f5c\u308a, \u305d\u308c\u3089\u306e\u4f4d\u7f6e\u306e (\u53f3\u7aef - \u5de6\u7aef + 1) \u306e\u4e00\u756a\u5c0f\u3055\u3044\u5024\u3092\u51fa\u529b\u3059\u308b. \u8a08\u7b97\u6642\u9593\u306f $O(n^3)$. \u30b3\u30fc\u30c9\u306f\u6b21\u306e\u901a\u308a. \n\n```gyu1.cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main(){\n  int n, res = 5001;\n  cin >> n;\n  vector<int> w;\n  vector<vector<int> > v;\n  for (int i = 0; i < 4; i++) { v.push_back(w); }\n  for (int i = 0; i < n; i++) {\n    int m;\n    cin >> m;\n    if ((m == 1) || (m == 2) || (m == 3)) { v[m].push_back(i); }\n  }\n\n  for (int i1 = 0; i1 < v[1].size(); i1++) {\n    for (int i2 = 0; i2 < v[2].size(); i2++) {\n      for (int i3 = 0; i3 < v[3].size(); i3++) {\n        int left = min(v[1][i1], min(v[2][i2], v[3][i3]));\n        int right = max(v[1][i1], max(v[2][i2], v[3][i3]));\n        res = min(res, right-left+1);\n        if (res == 3) { printf(\"3\\n\"); return 0;}\n      }\n    }\n  }\n  cout << res << endl;\n\n  return 0;\n}\n```\n\n## \u89e3\u7b542\n\n$i = 1$ \u3068\u3059\u308b. $i$ \u3067\u306a\u3044 (2 \u306e\u3042\u308b\u4f4d\u7f6e, 3 \u306e\u3042\u308b\u4f4d\u7f6e) \u306e\u7d44\u307f\u5408\u308f\u305b\u3092 1\u3064\u305a\u3064\u4f5c\u308a, 2 \u3068 3 \u306e\u9593\u306e\u90e8\u5206\u5217\u306b $i$ \u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3082\u306e\u306e\u3046\u3061, \u6700\u3082\u77ed\u3044\u90e8\u5206\u5217\u306e\u9577\u3055\u3092\u8a18\u9332\u3059\u308b. \n\n$i = 2, 3$ \u306b\u3064\u3044\u3066\u3082, \u540c\u69d8\u306b\u6700\u3082\u77ed\u3044\u90e8\u5206\u5217\u306e\u9577\u3055\u3092\u8a18\u9332\u3059\u308b. \u305d\u3057\u3066, $i = 1, 2, 3$ \u306e\u4e2d\u3067\u6700\u77ed\u306e\u9577\u3055\u3092\u51fa\u529b\u3059\u308b. \n\n$i=1$ \u306e\u3068\u304d, 2, 3 \u306e\u9593\u306b 1 \u304c\u3042\u308b\u304b\u3069\u3046\u304b\uff081 \u306e\u4f4d\u7f6e\u3092\u8868\u3059\u30bd\u30fc\u30c8\u3055\u308c\u305f\u6570\u5217\u306b\u5bfe\u3057\u3066, 2, 3 \u306e\u4f4d\u7f6e\u306f\u3069\u3053\u306b\u5165\u308b\u304b\uff09\u3092\u4e8c\u5206\u63a2\u7d22\u3067\u6c42\u3081\u308b\u3053\u3068\u3067, \u8a08\u7b97\u6642\u9593\u306f $O(n^2\\log n)$. \u30b3\u30fc\u30c9\u306f\u7701\u7565. \n\n## \u89e3\u7b543\n\n\u53c2\u8003\u6587\u732e\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b3\u30f3\u30c6\u30b9\u30c8\u30c1\u30e3\u30ec\u30f3\u30b8\u30d6\u30c3\u30af 3.3\u7bc0\u306b\u8aac\u660e\u3055\u308c\u3066\u3044\u308b, \u3057\u3083\u304f\u3068\u308a\u6cd5\u3092\u9069\u7528\u3059\u308b. \u8a08\u7b97\u6642\u9593\u306f $O(n)$. \u30b3\u30fc\u30c9\u306f\u6b21\u306e\u901a\u308a. \n\n```gyu3.cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main(){\n  int n, res = 5001;\n  cin >> n;\n  vector<int> v;\n  for (int i = 0; i < n; i++) {\n    int m;\n    cin >> m;\n    v.push_back(m);\n  }\n  int left = 0, right = 0;\n  int count[4] = {0, 0, 0, 0}; \n\n  while (right < n) {\n    bool flag = true;\n\n    while ((count[1] == 0) || (count[2] == 0) || (count[3] == 0)) { \n      if ((v[right] >= 1) && (v[right] <= 3)) { count[v[right]] += 1; }\n      right++;\n      if (right > n) { flag = false; right =n; break; }\n    }\n    while ((count[1] >= 1) && (count[2] >= 1) && (count[3] >= 1)) {\n      if ((v[left] >=1) && (v[left] <= 3)) { count[v[left]] -= 1; }\n      left++;\n    }\n    \n    if (flag) { res = min(res, right-left+1); }\n  }\n\n  cout << res << endl;\n\n  return 0;\n}\n```\n\n## \u89e3\u7b544\n\n\u6570\u5217\u306b\u3042\u308b 1, 2, 3 \u306e\u5834\u6240 (`pos`) \u3068\u5024 (`num`) \u3092\u9806\u756a\u306b\u914d\u5217 $v$ \u3078\u4ee3\u5165\u3059\u308b. \n\u5165\u529b\u304b\u3089\u306e\u4ee3\u5165\u3092\u3059\u3079\u3066\u7d42\u3048\u305f\u3089, `v[i]` \u3092 `i=0` \u304b\u3089\u9806\u756a\u306b\u898b\u3066\u3044\u304d, `v[i]` \u306e\u5024 `v[i].num` $\\in \\\\{1, 2, 3\\\\}$ \u4ee5\u5916\u306e\u5024 (`v[i].num`=1 \u306a\u3089\u3070 2, 3) \u304c `v[i].pos` \u3088\u308a\u4ee5\u524d\u306e\u5834\u6240\u306b\u73fe\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b. \u305d\u3057\u3066, \u305d\u308c\u3089\u306e\u5834\u6240 `prev[j], prev[k]` \u306e\u3046\u3061, \u3088\u308a\u4ee5\u524d\u306b\u73fe\u308c\u3066\u3044\u308b\u5834\u6240 `left=min(prev[j], prev[k])` \u3092\u4f7f\u3063\u3066, \u90e8\u5206\u5217\u306e\u9577\u3055 `v[i].pos - left + 1` \u3092\u6c42\u3081\u308b. \n\u3059\u3079\u3066\u306e `v[i]` \u306b\u5bfe\u3057\u3066\u4e0a\u3092\u884c\u3044, \u6700\u77ed\u306e\u90e8\u5206\u5217\u306e\u9577\u3055\u3092\u51fa\u529b\u3059\u308b. \u8a08\u7b97\u6642\u9593\u306f $O(n)$. \u30b3\u30fc\u30c9\u306f\u6b21\u306e\u901a\u308a.\n\n```gyu4.cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nstruct numpos {\n  int num, pos;\n};\n\nint main(){\n  int n, res = 5001;\n  cin >> n;\n\n  vector<numpos> v;\n  for (int i = 0; i < n; i++) {\n    int m;\n    cin >> m;\n    if ((m == 1) || (m == 2) || (m == 3)) {\n      numpos np; np.num = m; np.pos = i;\n      v.push_back(np);\n    }\n  }\n\n  int s = v.size();\n  int prev[4] = {-1, -1, -1, -1}; \n  for (int i = 0; i < s; i++) {\n    bool flag = true;\n    int left = 5001;\n    for (int j = 1; j <= 3; j++) {\n      if ((prev[j] == -1) && (v[i].num != j)) { flag = false; }\n      if ((prev[j] != -1) && (v[i].num != j)) { left = min(left, prev[j]); }\n    }\n    if ((flag) && (res > (v[i].pos - left + 1))) { res = v[i].pos - left + 1; }\n    prev[v[i].num] = v[i].pos;\n  }\n\n  cout << res << endl;\n\n  return 0;\n}\n```\n\n## \u89e3\u7b54A \uff08\u8ffd\u8a18\uff09\n\n\u30b3\u30e1\u30f3\u30c8\u3067 kota9 \u3055\u3093\u306b\u6559\u3048\u3066\u3082\u3089\u3063\u305f\u65b9\u6cd5. \u8a08\u7b97\u6642\u9593\u306f $O(n)$. \u30b3\u30fc\u30c9\u306f\u6b21\u306e\u901a\u308a. \n\n```gyu-kota9.cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nstruct numpos {\n  int num, pos;\n};\n\nint main(){\n  int n, res = 10000;\n  int next[10001][4];\n  for (int i = 1; i <= 3; i++) { next[10000][i] = 10000; }\n  cin >> n;\n  vector<numpos> v;\n  for (int i = 0; i < n; i++) {\n    int m;\n    cin >> m;\n    numpos a; a.num = m; a.pos = i;\n    v.push_back(a);\n  }\n\n  int numpos[4] = {10000, 10000, 10000, 10000};\n  for (int i = n-1; i >= 0; i--) {\n    int num = v[i].num;\n    if ((num == 1) || (num == 2) || (num == 3)) {\n      for (int j = 1; j <= 3; j++) { next[i][j] = numpos[j]; }\n      numpos[v[i].num] = v[i].pos;\n    }\n  }\n\n  int nextnum[4][2] = {{-1, -1}, {2, 3}, {1, 3}, {1, 2}};\n  for (int i = 0; i < n; i++) {\n    int num = v[i].num;\n    if ((num == 1) || (num == 2) || (num == 3)) {\n      int next2[2];\n      for (int j = 0; j < 2; j++) { next2[j] = nextnum[num][j]; }\n      int right = min(next[(next[i][next2[0]])][next2[1]],\n\t\t      next[(next[i][next2[1]])][next2[0]]);\n      res = min(res, right - i + 1);\n    }\n  }\n\n  cout << res << endl;\n\n  return 0;\n}\n```\n\n## \u89e3\u7b54\u3078\u306e\u305f\u3069\u308a\u7740\u304d\u65b9\n\n\u554f\u984c\u3092\u898b\u305f\u3068\u304d, \u53c2\u8003\u6587\u732e\u306b\u66f8\u3044\u3066\u3042\u3063\u305f\u3057\u3083\u304f\u3068\u308a\u6cd5\u3092\u601d\u3044\u51fa\u3057\u3066, \u89e3\u7b543 \u306e\u30b3\u30fc\u30c9\u3092\u307e\u305a\u66f8\u304d\u307e\u3057\u305f. \n\n\u305d\u306e\u5f8c, \u51fa\u984c\u8005\u306e\u89e3\u7b54\u307e\u3067\u306e\u60f3\u5b9a\u6642\u9593\u304c 20\u5206\u3060\u3063\u305f\u306b\u3082\u304b\u304b\u308f\u3089\u305a, \u89e3\u7b54 3 \u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u7d42\u3048\u305f\u306e\u306f, \u7720\u3063\u3066\u4e00\u6669\u660e\u3051\u3066\u304b\u3089\u3067\u3057\u305f. \u305d\u3053\u3067, \u60f3\u5b9a\u6642\u9593\u5185\u3067\u3082\u30b3\u30fc\u30c9\u3092\u66f8\u3051\u308b\uff08\u3067\u3042\u308d\u3046\uff09\u5358\u7d14\u306a\u65b9\u6cd5\u3068\u3057\u3066, \u89e3\u7b541 \u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u305f. \n\n\u3057\u304b\u3057\u554f\u984c\u3067\u306f $n\\leq 5000$ \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u305f\u3081, \u89e3\u7b541 \u3067\u306f $n^3$ \u304c\u5927\u304d\u3044\u3068\u304d\u306b\u306f $10^{11}$ \u307b\u3069\u306b\u306a\u308a\u307e\u3059. \u3053\u308c\u3067\u306f2\u79d2\u306e\u5236\u9650\u6642\u9593\u3067\u7d42\u308f\u3089\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093. \u305d\u3053\u3067, \u8a08\u7b97\u6642\u9593\u3092\u6291\u3048\u308b\u305f\u3081\u306e\u65b9\u6cd5\u3068\u3057\u3066, \u89e3\u7b542 \u306e\u8003\u3048\u306b\u305f\u3069\u308a\u7740\u304d\u307e\u3057\u305f. \n\n\u6700\u5f8c\u306b, \u3053\u306e\u307e\u3068\u3081\u3092\u66f8\u3044\u3066\u3044\u308b\u3068\u304d\u306b, \u89e3\u7b544 \u306e\u65b9\u6cd5\u3067\u3082\u7b54\u3048\u304c\u51fa\u305b\u305d\u3046\u3060\u3063\u305f\u306e\u3067, \u89e3\u7b544 \u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u305f. \n\n\u3068\u3044\u3046\u3053\u3068\u3067\u6b8b\u5ff5\u306a\u304c\u3089, \u3044\u305a\u308c\u306e\u65b9\u6cd5\u3082\u60f3\u5b9a\u6642\u9593\u5185\u3067\u89e3\u7b54\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f.\n\n# \u53c2\u8003\u6587\u732e\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b3\u30f3\u30c6\u30b9\u30c8\u30c1\u30e3\u30ec\u30f3\u30b8\u30d6\u30c3\u30af. \u79cb\u8449\u62d3\u54c9, \u5ca9\u7530\u967d\u4e00, \u5317\u5ddd\u5b9c\u7a14. \u6bce\u65e5\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u30ba. 2010.\n", "tags": ["\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "C++", "\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u9762\u63a5", "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u9762\u63a5"]}