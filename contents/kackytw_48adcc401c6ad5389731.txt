{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\nhoundCI\u3092\u72ec\u81ea\u306b\u904b\u7528\u3059\u308b\u5834\u5408\u3001\u30c7\u30d7\u30ed\u30a4\u3092\u3055\u304f\u3063\u3068\u7d42\u308f\u3089\u305b\u305f\u3044\u3002houndCI\u306frails\u30a2\u30d7\u30ea\u306a\u306e\u3067capistrano\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u3002capistrano\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u8a18\u3059\u3002\n\nCapfile\n# Load DSL and set up stages\nrequire 'capistrano/setup'\n\n# Include default deployment tasks\nrequire 'capistrano/deploy'\n\nrequire 'capistrano/rbenv'\nrequire 'capistrano/bundler'\nrequire 'capistrano/console'\nrequire 'capistrano/rails/migrations'\nrequire 'capistrano-resque'\n\nrequire 'capistrano3/unicorn'\n\n# Include tasks from other gems included in your Gemfile\n#\n# For documentation on these, see for example:\n#\n#   https://github.com/capistrano/rvm\n#   https://github.com/capistrano/rbenv\n#   https://github.com/capistrano/chruby\n#   https://github.com/capistrano/bundler\n#   https://github.com/capistrano/rails\n#   https://github.com/capistrano/passenger\n#\n# require 'capistrano/rvm'\n# require 'capistrano/rbenv'\n# require 'capistrano/chruby'\n# require 'capistrano/bundler'\n# require 'capistrano/rails/assets'\n# require 'capistrano/rails/migrations'\n# require 'capistrano/passenger'\n\n# Load custom tasks from `lib/capistrano/tasks` if you have any defined\n\n# dotenv\u306f\u304a\u597d\u307f\u3067\nrequire 'dotenv'\n\nDotenv.load\n\n\nGemfile\ngem 'capistrano-rbenv'\ngem 'capistrano-bundler'\ngem 'capistrano-rails'\ngem 'capistrano3-unicorn'\ngem 'capistrano-resque'\n\n\nconfig/deploy.rb\n# \u30ec\u30dd\u30b8\u30c8\u30ea\u306eURL\u3002\u30d5\u30a9\u30fc\u30af\u3057\u305f\u5834\u5408\u306f\u305d\u306eURL\u3092\u5165\u308c\u308b\nset :repo_url, 'git@github.com:thoughtbot/hound.git'\nset :branch, -> { `git rev-parse --abbrev-ref HEAD`.chomp }.call\nset :deploy_to, '/hogehoge'\nset :linked_files, %w(.env)\nset :linked_dirs, %w(log tmp/pids tmp/cache tmp/sockets vendor/bundle public/system)\nset :keep_releases, 2\n\nset :rbenv_type, :system\nset :rbenv_ruby, '2.2.0'\n\nset :unicorn_rack_env, -> { fetch(:rails_env) }\n\n# hound\u3067\u4f7f\u3046resque worker\nset :workers, { \"high\" => 1, \"medium\" => 1, \"low\" => 1 }\n\n\nconfig/deploy/development.rb\nset :rails_env, :development\n\n# \u30c7\u30d7\u30ed\u30a4\u5148\u306e\u30b5\u30fc\u30d0\u30fc\u540d\u3092\u5165\u308c\u308b\nDEV_SERVER = 'hogehoge.com'\n\nserver DEV_SERVER\nset :branch, \"master\"\n\nrole :app, DEV_SERVER\nrole :resque_worker, DEV_SERVER\nrole :resque_scheduler, DEV_SERVER\n\n\nconfig/unicorn/development.rb\napp_path = \"/hogehoge/development/current\"\n\nlisten 3000, :tcp_nopush => true\ntimeout 60\npreload_app true\nworker_processes 2\npid \"#{app_path}/tmp/pids/unicorn.pid\"\n\nstdout_path \"log/unicorn.log\"\nstderr_path \"log/unicorn_error.log\"\n\nbefore_fork do |server, worker|\n  Signal.trap 'TERM' do\n    puts 'Unicorn master intercepting TERM and sending myself QUIT instead'\n    Process.kill 'QUIT', Process.pid\n  end\n\n  defined?(ActiveRecord::Base) and\n    ActiveRecord::Base.connection.disconnect!\nend\n\nafter_fork do |server, worker|\n  Signal.trap 'TERM' do\n    puts 'Unicorn worker intercepting TERM and doing nothing. Wait for master to send QUIT'\n  end\n\n  defined?(ActiveRecord::Base) and\n    ActiveRecord::Base.establish_connection\nend\n\n\n\u30c7\u30d7\u30ed\u30a4\u65b9\u6cd5\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u843d\u3068\u3057\u3066\u304f\u308b\n\ngem\u3092install\u3059\u308b\nbundle install\n\n\n\u30c7\u30d7\u30ed\u30a4\nbundle exec cap development deploy\n\n\n\u30b5\u30fc\u30d0\u30fc(unicorn,resque)\u518d\u8d77\u52d5\nbundle exec cap development unicorn:stop\nbundle exec cap development unicorn:start\nbundle exec cap development resque:stop\nbundle exec cap development resque:start\n\n\nTODO\n\u6700\u65b0\u306ehound\u306funicorn\u3058\u3083\u306a\u304f\u3066puma\u3092\u4f7f\u3063\u3066\u3044\u308b\u304c\u305d\u308c\u306e\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u3002\n\n# \u76ee\u7684\nhoundCI\u3092\u72ec\u81ea\u306b\u904b\u7528\u3059\u308b\u5834\u5408\u3001\u30c7\u30d7\u30ed\u30a4\u3092\u3055\u304f\u3063\u3068\u7d42\u308f\u3089\u305b\u305f\u3044\u3002houndCI\u306frails\u30a2\u30d7\u30ea\u306a\u306e\u3067capistrano\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u3002capistrano\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u8a18\u3059\u3002\n\n# Capfile\n```rb\n# Load DSL and set up stages\nrequire 'capistrano/setup'\n\n# Include default deployment tasks\nrequire 'capistrano/deploy'\n\nrequire 'capistrano/rbenv'\nrequire 'capistrano/bundler'\nrequire 'capistrano/console'\nrequire 'capistrano/rails/migrations'\nrequire 'capistrano-resque'\n\nrequire 'capistrano3/unicorn'\n\n# Include tasks from other gems included in your Gemfile\n#\n# For documentation on these, see for example:\n#\n#   https://github.com/capistrano/rvm\n#   https://github.com/capistrano/rbenv\n#   https://github.com/capistrano/chruby\n#   https://github.com/capistrano/bundler\n#   https://github.com/capistrano/rails\n#   https://github.com/capistrano/passenger\n#\n# require 'capistrano/rvm'\n# require 'capistrano/rbenv'\n# require 'capistrano/chruby'\n# require 'capistrano/bundler'\n# require 'capistrano/rails/assets'\n# require 'capistrano/rails/migrations'\n# require 'capistrano/passenger'\n\n# Load custom tasks from `lib/capistrano/tasks` if you have any defined\n\n# dotenv\u306f\u304a\u597d\u307f\u3067\nrequire 'dotenv'\n\nDotenv.load\n```\n\n# Gemfile\n```rb\ngem 'capistrano-rbenv'\ngem 'capistrano-bundler'\ngem 'capistrano-rails'\ngem 'capistrano3-unicorn'\ngem 'capistrano-resque'\n```\n\n# config/deploy.rb\n\n```rb\n# \u30ec\u30dd\u30b8\u30c8\u30ea\u306eURL\u3002\u30d5\u30a9\u30fc\u30af\u3057\u305f\u5834\u5408\u306f\u305d\u306eURL\u3092\u5165\u308c\u308b\nset :repo_url, 'git@github.com:thoughtbot/hound.git'\nset :branch, -> { `git rev-parse --abbrev-ref HEAD`.chomp }.call\nset :deploy_to, '/hogehoge'\nset :linked_files, %w(.env)\nset :linked_dirs, %w(log tmp/pids tmp/cache tmp/sockets vendor/bundle public/system)\nset :keep_releases, 2\n\nset :rbenv_type, :system\nset :rbenv_ruby, '2.2.0'\n\nset :unicorn_rack_env, -> { fetch(:rails_env) }\n\n# hound\u3067\u4f7f\u3046resque worker\nset :workers, { \"high\" => 1, \"medium\" => 1, \"low\" => 1 }\n```\n\n# config/deploy/development.rb\n```rb\nset :rails_env, :development\n\n# \u30c7\u30d7\u30ed\u30a4\u5148\u306e\u30b5\u30fc\u30d0\u30fc\u540d\u3092\u5165\u308c\u308b\nDEV_SERVER = 'hogehoge.com'\n\nserver DEV_SERVER\nset :branch, \"master\"\n\nrole :app, DEV_SERVER\nrole :resque_worker, DEV_SERVER\nrole :resque_scheduler, DEV_SERVER\n```\n\n# config/unicorn/development.rb\n\n```rb\napp_path = \"/hogehoge/development/current\"\n\nlisten 3000, :tcp_nopush => true\ntimeout 60\npreload_app true\nworker_processes 2\npid \"#{app_path}/tmp/pids/unicorn.pid\"\n\nstdout_path \"log/unicorn.log\"\nstderr_path \"log/unicorn_error.log\"\n\nbefore_fork do |server, worker|\n  Signal.trap 'TERM' do\n    puts 'Unicorn master intercepting TERM and sending myself QUIT instead'\n    Process.kill 'QUIT', Process.pid\n  end\n\n  defined?(ActiveRecord::Base) and\n    ActiveRecord::Base.connection.disconnect!\nend\n\nafter_fork do |server, worker|\n  Signal.trap 'TERM' do\n    puts 'Unicorn worker intercepting TERM and doing nothing. Wait for master to send QUIT'\n  end\n\n  defined?(ActiveRecord::Base) and\n    ActiveRecord::Base.establish_connection\nend\n```\n\n# \u30c7\u30d7\u30ed\u30a4\u65b9\u6cd5\n\n## \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u843d\u3068\u3057\u3066\u304f\u308b\n## gem\u3092install\u3059\u308b\n\n```shell-session\nbundle install\n```\n\n## \u30c7\u30d7\u30ed\u30a4\n```shell-session\nbundle exec cap development deploy\n```\n## \u30b5\u30fc\u30d0\u30fc(unicorn,resque)\u518d\u8d77\u52d5\n```shell-session\nbundle exec cap development unicorn:stop\nbundle exec cap development unicorn:start\nbundle exec cap development resque:stop\nbundle exec cap development resque:start\n```\n\n# TODO\n\u6700\u65b0\u306ehound\u306funicorn\u3058\u3083\u306a\u304f\u3066puma\u3092\u4f7f\u3063\u3066\u3044\u308b\u304c\u305d\u308c\u306e\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u3002\n", "tags": ["hound.ci", "capistrano"]}