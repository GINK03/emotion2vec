{"context": "\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u306e\u6311\u6226\u8a18\u9332\u3067\u3059\u3002\u74b0\u5883\u306fUbuntu 16.04 LTS \uff0b Python 3.5.2 :: Anaconda 4.1.1 (64-bit)\u3067\u3059\u3002\u904e\u53bb\u306e\u30ce\u30c3\u30af\u306e\u4e00\u89a7\u306f\u3053\u3061\u3089\u304b\u3089\u3069\u3046\u305e\u3002\n\n\u7b2c6\u7ae0: \u82f1\u8a9e\u30c6\u30ad\u30b9\u30c8\u306e\u51e6\u7406\n\n\u82f1\u8a9e\u306e\u30c6\u30ad\u30b9\u30c8\uff08nlp.txt\uff09\u306b\u5bfe\u3057\u3066\uff0c\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u5b9f\u884c\u305b\u3088\uff0e\n\n\n52. \u30b9\u30c6\u30df\u30f3\u30b0\n\n51\u306e\u51fa\u529b\u3092\u5165\u529b\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\uff0cPorter\u306e\u30b9\u30c6\u30df\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u9069\u7528\u3057\uff0c\u5358\u8a9e\u3068\u8a9e\u5e79\u3092\u30bf\u30d6\u533a\u5207\u308a\u5f62\u5f0f\u3067\u51fa\u529b\u305b\u3088\uff0e Python\u3067\u306f\uff0cPorter\u306e\u30b9\u30c6\u30df\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5b9f\u88c5\u3068\u3057\u3066stemming\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3059\u308b\u3068\u3088\u3044\uff0e\n\n\n\u51fa\u6765\u4e0a\u304c\u3063\u305f\u30b3\u30fc\u30c9\uff1a\n\nmain.py\n# coding: utf-8\nimport re\nimport snowballstemmer\n\nfname = 'nlp.txt'\n\n\ndef nlp_lines():\n    '''nlp.txt\u30921\u6587\u305a\u3064\u8aad\u307f\u8fbc\u3080\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\n    nlp.txt\u3092\u9806\u6b21\u8aad\u307f\u8fbc\u3093\u30671\u6587\u305a\u3064\u8fd4\u3059\n\n    \u623b\u308a\u5024\uff1a\n    1\u6587\u306e\u6587\u5b57\u5217\n    '''\n    with open(fname) as lines:\n\n        # \u6587\u5207\u308a\u51fa\u3057\u306e\u6b63\u898f\u8868\u73fe\u30b3\u30f3\u30d1\u30a4\u30eb\n        pattern = re.compile(r'''\n            (\n                ^                   # \u884c\u982d\n                .*?                 # \u4efb\u610f\u306en\u6587\u5b57\u3001\u6700\u5c11\u30de\u30c3\u30c1\n                [\\.|\\;|\\:|\\?|\\!]    # . or ; or : or ? or !\n            )\n            \\s                      # \u7a7a\u767d\u6587\u5b57\n            (\n                [A-Z].*             # \u82f1\u5927\u6587\u5b57\u4ee5\u964d\uff08\uff1d\u6b21\u306e\u6587\u4ee5\u964d)\n\n            )\n        ''', re.MULTILINE + re.VERBOSE + re.DOTALL)\n\n        for line in lines:\n\n            line = line.strip()     # \u524d\u5f8c\u306e\u7a7a\u767d\u6587\u5b57\u9664\u53bb\n            while len(line) > 0:\n\n                # \u884c\u304b\u30891\u6587\u3092\u53d6\u5f97\n                match = pattern.match(line)\n                if match:\n\n                    # \u5207\u308a\u51fa\u3057\u305f\u6587\u3092\u8fd4\u3059\n                    yield match.group(1)        # \u5148\u982d\u306e\u6587\n                    line = match.group(2)       # \u6b21\u306e\u6587\u4ee5\u964d\n\n                else:\n\n                    # \u533a\u5207\u308a\u304c\u306a\u3044\u306e\u3067\u3001\u6700\u5f8c\u307e\u3067\u304c1\u6587\n                    yield line\n                    line = ''\n\n\ndef nlp_words():\n    '''nlp.txt\u30921\u5358\u8a9e\u305a\u3064\u8fd4\u3059\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\n    \u6587\u306e\u7d42\u308f\u308a\u3067\u306f\u7a7a\u6587\u5b57\u3092\u8fd4\u3059\u3002\n\n    \u623b\u308a\u5024\uff1a\n    1\u5358\u8a9e\u3001\u305f\u3060\u3057\u6587\u306e\u7d42\u308f\u308a\u3067\u306f\u7a7a\u6587\u5b57\u3092\u8fd4\u3059\n    '''\n    for line in nlp_lines():\n\n        # \u5358\u8a9e\u306b\u5206\u89e3\u3001\u7d42\u7aef\u306e\u533a\u5207\u308a\u6587\u5b57\u306f\u9664\u53bb\u3057\u3066\u8fd4\u3059\n        for word in line.split(' '):\n            yield word.rstrip('.,;:?!')\n\n        # \u6587\u306e\u7d42\u308f\u308a\u306f\u7a7a\u6587\u5b57\n        yield ''\n\n\n# \u8aad\u307f\u8fbc\u307f\nstemmer = snowballstemmer.stemmer('english')\nfor word in nlp_words():\n\n    # \u5143\u306e\u7d50\u679c\u3068\u30b9\u30c6\u30df\u30f3\u30b0\u7d50\u679c\u3092\u51fa\u529b\n    print('{}\\t{}'.format(word, stemmer.stemWord(word)))\n\n\n\n\u5b9f\u884c\u7d50\u679c\uff1a\n\u9577\u3044\u306e\u3067\u5148\u982d\u90e8\u5206\u306e\u629c\u7c8b\u3067\u3059\u3002\n\n\u7aef\u672b\uff1a\u5148\u982d\u90e8\u5206\nNatural Natur\nlanguage    languag\nprocessing  process\n\nFrom    From\nWikipedia   Wikipedia\nthe the\nfree    free\nencyclopedia    encyclopedia\n\nNatural Natur\nlanguage    languag\nprocessing  process\n(NLP)   (NLP)\nis  is\na   a\nfield   field\nof  of\ncomputer    comput\nscience scienc\nartificial  artifici\nintelligence    intellig\nand and\nlinguistics linguist\nconcerned   concern\nwith    with\nthe the\ninteractions    interact\nbetween between\ncomputers   comput\nand and\nhuman   human\n(natural)   (natural)\nlanguages   languag\n\nAs  As\nsuch    such\nNLP NLP\nis  is\nrelated relat\nto  to\nthe the\narea    area\nof  of\nhumani-computer humani-comput\ninteraction interact\n\nMany    Mani\nchallenges  challeng\nin  in\nNLP NLP\ninvolve involv\nnatural natur\nlanguage    languag\nunderstanding   understand\nthat    that\nis  is\nenabling    enabl\ncomputers   comput\nto  to\nderive  deriv\nmeaning mean\nfrom    from\nhuman   human\nor  or\nnatural natur\nlanguage    languag\ninput   input\nand and\nothers  other\ninvolve involv\nnatural natur\nlanguage    languag\ngeneration  generat\n\n\n\u5168\u4f53\u306e\u7d50\u679c\u306fGitHub\u306b\u30a2\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30b9\u30c6\u30df\u30f3\u30b0\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u554f\u984c\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308bstemming\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001Python3.5\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3089\u3057\u3044\u306e\u3067\u3001\u5225\u306e\u3082\u306e\u3092\u63a2\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u307e\u305a\u306fconda\u3092\u300cstem\u300d\u3068\u3044\u3046\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u63a2\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u7aef\u672b\uff1aconda\u3067\u691c\u7d22\nsegavvy@ubuntu:~$ conda search stem\nFetching package metadata .......\nsnowballstemmer              1.2.0                    py26_0  defaults        \n                             1.2.0                    py27_0  defaults        \n                             1.2.0                    py33_0  defaults        \n                             1.2.0                    py34_0  defaults        \n                             1.2.0                    py35_0  defaults        \n                             1.2.1                    py27_0  defaults        \n                             1.2.1                    py34_0  defaults        \n                          *  1.2.1                    py35_0  defaults        \nsystem                       5.8                           0  defaults        \n                             5.8                           1  defaults        \n                             5.8                           2  defaults\n\n\n\u304a\u3001*\u304c\u4ed8\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u3059\u3067\u306b\u300csnowballstemmer\u300d\u3068\u3044\u3046\u306e\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u306d\u3002Anaconda\u3067\u5165\u3063\u305f\u3088\u3046\u3067\u3059\u3002\u8aac\u660e\u3092\u898b\u308b\u306816\u7a2e\u985e\u306e\u30b9\u30c6\u30df\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u30bb\u30c3\u30c8\u306b\u306a\u3063\u3066\u3044\u3066\u3001\u82f1\u8a9e\u306fPorter\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u3088\u3046\u3067\u3059\u3002\u3053\u308c\u306a\u3089\u554f\u984c\u6587\u306e\u6761\u4ef6\u3082\u6e80\u305f\u3057\u307e\u3059\u306e\u3067\u3001\u3053\u308c\u3067\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u8a9e\u5e79\u3068\u30b9\u30c6\u30df\u30f3\u30b0\n\u8a9e\u5e79\u3068\u306f\u3001\u8a9e\u5c3e\u304c\u5909\u5316\u3059\u308b\u5358\u8a9e\u306e\u3001\u5909\u5316\u3057\u306a\u3044\u524d\u65b9\u90e8\u5206\u3092\u6307\u3059\u305d\u3046\u3067\u3059\u3002\u305d\u3057\u3066\u3001\u5358\u8a9e\u304b\u3089\u8a9e\u5e79\u3092\u62bd\u51fa\u3059\u308b\u51e6\u7406\u304c\u30b9\u30c6\u30df\u30f3\u30b0\u3067\u3059\u3002\u4eca\u56de\u4f7f\u3063\u3066\u3044\u308bPorter\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u306f\u3001\u7d4c\u9a13\u5247\u306b\u3088\u308a\u8a9e\u5e79\u3092\u62bd\u51fa\u3059\u308b\u4ed5\u7d44\u307f\u3068\u306e\u3053\u3068\u3067\u3057\u305f\u3002\u8a73\u7d30\u306f\u30b0\u30b0\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u306a\u304a\u3001\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306f\u307b\u307c\u524d\u554f\u306e\u307e\u307e\u3067\u3001\u6700\u5f8c\u306b\u8a9e\u5e79\u306e\u62bd\u51fa\u3092\u52a0\u3048\u305f\u3060\u3051\u3067\u3059\u3002snowballstemmer\u306e\u4f7f\u3044\u65b9\u306f\u3001\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30b5\u30a4\u30c8\u306eHow to use library\u3092\u898b\u308b\u3068\u308f\u304b\u308a\u307e\u3059\u3002\u30b7\u30f3\u30d7\u30eb\u3067\u3044\u3044\u3067\u3059\u306d\u3002\n\u3000\n53\u672c\u76ee\u306e\u30ce\u30c3\u30af\u306f\u4ee5\u4e0a\u3067\u3059\u3002\u8aa4\u308a\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5e78\u3044\u3067\u3059\u3002\n\n\u5b9f\u884c\u7d50\u679c\u306b\u306f\u3001100\u672c\u30ce\u30c3\u30af\u3067\u7528\u3044\u308b\u30b3\u30fc\u30d1\u30b9\u30fb\u30c7\u30fc\u30bf\u3067\u914d\u5e03\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u304c\u542b\u307e\u308c\u307e\u3059\u3002\u3053\u306e\u7b2c6\u7ae0\u3067\u7528\u3044\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u306f\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u30fb\u30b3\u30e2\u30f3\u30ba \u8868\u793a-\u7d99\u627f 3.0 \u975e\u79fb\u690d\uff08\u65e5\u672c\u8a9e\u8a33\uff09\u3067\u3059\u3002\n\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015](http://www.cl.ecei.tohoku.ac.jp/nlp100/)\u306e\u6311\u6226\u8a18\u9332\u3067\u3059\u3002\u74b0\u5883\u306fUbuntu 16.04 LTS \uff0b Python 3.5.2 \\:\\: Anaconda 4.1.1 (64-bit)\u3067\u3059\u3002\u904e\u53bb\u306e\u30ce\u30c3\u30af\u306e\u4e00\u89a7\u306f[\u3053\u3061\u3089](http://qiita.com/segavvy/items)\u304b\u3089\u3069\u3046\u305e\u3002\n\n## \u7b2c6\u7ae0: \u82f1\u8a9e\u30c6\u30ad\u30b9\u30c8\u306e\u51e6\u7406\n>\u82f1\u8a9e\u306e\u30c6\u30ad\u30b9\u30c8\uff08nlp.txt\uff09\u306b\u5bfe\u3057\u3066\uff0c\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u5b9f\u884c\u305b\u3088\uff0e\n\n###52. \u30b9\u30c6\u30df\u30f3\u30b0\n>51\u306e\u51fa\u529b\u3092\u5165\u529b\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\uff0cPorter\u306e\u30b9\u30c6\u30df\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u9069\u7528\u3057\uff0c\u5358\u8a9e\u3068\u8a9e\u5e79\u3092\u30bf\u30d6\u533a\u5207\u308a\u5f62\u5f0f\u3067\u51fa\u529b\u305b\u3088\uff0e Python\u3067\u306f\uff0cPorter\u306e\u30b9\u30c6\u30df\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5b9f\u88c5\u3068\u3057\u3066[stemming](https://pypi.python.org/pypi/stemming)\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3059\u308b\u3068\u3088\u3044\uff0e\n\n####\u51fa\u6765\u4e0a\u304c\u3063\u305f\u30b3\u30fc\u30c9\uff1a\n\n```python:main.py\n# coding: utf-8\nimport re\nimport snowballstemmer\n\nfname = 'nlp.txt'\n\n\ndef nlp_lines():\n\t'''nlp.txt\u30921\u6587\u305a\u3064\u8aad\u307f\u8fbc\u3080\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\n\tnlp.txt\u3092\u9806\u6b21\u8aad\u307f\u8fbc\u3093\u30671\u6587\u305a\u3064\u8fd4\u3059\n\n\t\u623b\u308a\u5024\uff1a\n\t1\u6587\u306e\u6587\u5b57\u5217\n\t'''\n\twith open(fname) as lines:\n\n\t\t# \u6587\u5207\u308a\u51fa\u3057\u306e\u6b63\u898f\u8868\u73fe\u30b3\u30f3\u30d1\u30a4\u30eb\n\t\tpattern = re.compile(r'''\n\t\t\t(\n\t\t\t\t^\t\t\t\t\t# \u884c\u982d\n\t\t\t\t.*?\t\t\t\t\t# \u4efb\u610f\u306en\u6587\u5b57\u3001\u6700\u5c11\u30de\u30c3\u30c1\n\t\t\t\t[\\.|\\;|\\:|\\?|\\!]\t# . or ; or : or ? or !\n\t\t\t)\n\t\t\t\\s\t\t\t\t\t\t# \u7a7a\u767d\u6587\u5b57\n\t\t\t(\n\t\t\t\t[A-Z].*\t\t\t\t# \u82f1\u5927\u6587\u5b57\u4ee5\u964d\uff08\uff1d\u6b21\u306e\u6587\u4ee5\u964d)\n\n\t\t\t)\n\t\t''', re.MULTILINE + re.VERBOSE + re.DOTALL)\n\n\t\tfor line in lines:\n\n\t\t\tline = line.strip()\t\t# \u524d\u5f8c\u306e\u7a7a\u767d\u6587\u5b57\u9664\u53bb\n\t\t\twhile len(line) > 0:\n\n\t\t\t\t# \u884c\u304b\u30891\u6587\u3092\u53d6\u5f97\n\t\t\t\tmatch = pattern.match(line)\n\t\t\t\tif match:\n\n\t\t\t\t\t# \u5207\u308a\u51fa\u3057\u305f\u6587\u3092\u8fd4\u3059\n\t\t\t\t\tyield match.group(1)\t\t# \u5148\u982d\u306e\u6587\n\t\t\t\t\tline = match.group(2)\t\t# \u6b21\u306e\u6587\u4ee5\u964d\n\n\t\t\t\telse:\n\n\t\t\t\t\t# \u533a\u5207\u308a\u304c\u306a\u3044\u306e\u3067\u3001\u6700\u5f8c\u307e\u3067\u304c1\u6587\n\t\t\t\t\tyield line\n\t\t\t\t\tline = ''\n\n\ndef nlp_words():\n\t'''nlp.txt\u30921\u5358\u8a9e\u305a\u3064\u8fd4\u3059\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\n\t\u6587\u306e\u7d42\u308f\u308a\u3067\u306f\u7a7a\u6587\u5b57\u3092\u8fd4\u3059\u3002\n\n\t\u623b\u308a\u5024\uff1a\n\t1\u5358\u8a9e\u3001\u305f\u3060\u3057\u6587\u306e\u7d42\u308f\u308a\u3067\u306f\u7a7a\u6587\u5b57\u3092\u8fd4\u3059\n\t'''\n\tfor line in nlp_lines():\n\n\t\t# \u5358\u8a9e\u306b\u5206\u89e3\u3001\u7d42\u7aef\u306e\u533a\u5207\u308a\u6587\u5b57\u306f\u9664\u53bb\u3057\u3066\u8fd4\u3059\n\t\tfor word in line.split(' '):\n\t\t\tyield word.rstrip('.,;:?!')\n\n\t\t# \u6587\u306e\u7d42\u308f\u308a\u306f\u7a7a\u6587\u5b57\n\t\tyield ''\n\n\n# \u8aad\u307f\u8fbc\u307f\nstemmer = snowballstemmer.stemmer('english')\nfor word in nlp_words():\n\n\t# \u5143\u306e\u7d50\u679c\u3068\u30b9\u30c6\u30df\u30f3\u30b0\u7d50\u679c\u3092\u51fa\u529b\n\tprint('{}\\t{}'.format(word, stemmer.stemWord(word)))\n```\n\n####\u5b9f\u884c\u7d50\u679c\uff1a\n\n\u9577\u3044\u306e\u3067\u5148\u982d\u90e8\u5206\u306e\u629c\u7c8b\u3067\u3059\u3002\n\n```console:\u7aef\u672b\uff1a\u5148\u982d\u90e8\u5206\nNatural\tNatur\nlanguage\tlanguag\nprocessing\tprocess\n\t\nFrom\tFrom\nWikipedia\tWikipedia\nthe\tthe\nfree\tfree\nencyclopedia\tencyclopedia\n\t\nNatural\tNatur\nlanguage\tlanguag\nprocessing\tprocess\n(NLP)\t(NLP)\nis\tis\na\ta\nfield\tfield\nof\tof\ncomputer\tcomput\nscience\tscienc\nartificial\tartifici\nintelligence\tintellig\nand\tand\nlinguistics\tlinguist\nconcerned\tconcern\nwith\twith\nthe\tthe\ninteractions\tinteract\nbetween\tbetween\ncomputers\tcomput\nand\tand\nhuman\thuman\n(natural)\t(natural)\nlanguages\tlanguag\n\t\nAs\tAs\nsuch\tsuch\nNLP\tNLP\nis\tis\nrelated\trelat\nto\tto\nthe\tthe\narea\tarea\nof\tof\nhumani-computer\thumani-comput\ninteraction\tinteract\n\t\nMany\tMani\nchallenges\tchalleng\nin\tin\nNLP\tNLP\ninvolve\tinvolv\nnatural\tnatur\nlanguage\tlanguag\nunderstanding\tunderstand\nthat\tthat\nis\tis\nenabling\tenabl\ncomputers\tcomput\nto\tto\nderive\tderiv\nmeaning\tmean\nfrom\tfrom\nhuman\thuman\nor\tor\nnatural\tnatur\nlanguage\tlanguag\ninput\tinput\nand\tand\nothers\tother\ninvolve\tinvolv\nnatural\tnatur\nlanguage\tlanguag\ngeneration\tgenerat\n```\n\n\u5168\u4f53\u306e\u7d50\u679c\u306f[GitHub](https://github.com/segavvy/nlp100_Python/tree/master/52)\u306b\u30a2\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u3002\n\n###\u30b9\u30c6\u30df\u30f3\u30b0\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u554f\u984c\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b[stemming](https://pypi.python.org/pypi/stemming)\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001Python3.5\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3089\u3057\u3044\u306e\u3067\u3001\u5225\u306e\u3082\u306e\u3092\u63a2\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u307e\u305a\u306fconda\u3092\u300cstem\u300d\u3068\u3044\u3046\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u63a2\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```console:\u7aef\u672b\uff1aconda\u3067\u691c\u7d22\nsegavvy@ubuntu:~$ conda search stem\nFetching package metadata .......\nsnowballstemmer              1.2.0                    py26_0  defaults        \n                             1.2.0                    py27_0  defaults        \n                             1.2.0                    py33_0  defaults        \n                             1.2.0                    py34_0  defaults        \n                             1.2.0                    py35_0  defaults        \n                             1.2.1                    py27_0  defaults        \n                             1.2.1                    py34_0  defaults        \n                          *  1.2.1                    py35_0  defaults        \nsystem                       5.8                           0  defaults        \n                             5.8                           1  defaults        \n                             5.8                           2  defaults\n```\n\n\u304a\u3001`*`\u304c\u4ed8\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u3059\u3067\u306b\u300csnowballstemmer\u300d\u3068\u3044\u3046\u306e\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u306d\u3002Anaconda\u3067\u5165\u3063\u305f\u3088\u3046\u3067\u3059\u3002[\u8aac\u660e](https://pypi.python.org/pypi/snowballstemmer)\u3092\u898b\u308b\u306816\u7a2e\u985e\u306e\u30b9\u30c6\u30df\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u30bb\u30c3\u30c8\u306b\u306a\u3063\u3066\u3044\u3066\u3001\u82f1\u8a9e\u306fPorter\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u3088\u3046\u3067\u3059\u3002\u3053\u308c\u306a\u3089\u554f\u984c\u6587\u306e\u6761\u4ef6\u3082\u6e80\u305f\u3057\u307e\u3059\u306e\u3067\u3001\u3053\u308c\u3067\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n###\u8a9e\u5e79\u3068\u30b9\u30c6\u30df\u30f3\u30b0\n\u8a9e\u5e79\u3068\u306f\u3001\u8a9e\u5c3e\u304c\u5909\u5316\u3059\u308b\u5358\u8a9e\u306e\u3001\u5909\u5316\u3057\u306a\u3044\u524d\u65b9\u90e8\u5206\u3092\u6307\u3059\u305d\u3046\u3067\u3059\u3002\u305d\u3057\u3066\u3001\u5358\u8a9e\u304b\u3089\u8a9e\u5e79\u3092\u62bd\u51fa\u3059\u308b\u51e6\u7406\u304c\u30b9\u30c6\u30df\u30f3\u30b0\u3067\u3059\u3002\u4eca\u56de\u4f7f\u3063\u3066\u3044\u308bPorter\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u306f\u3001\u7d4c\u9a13\u5247\u306b\u3088\u308a\u8a9e\u5e79\u3092\u62bd\u51fa\u3059\u308b\u4ed5\u7d44\u307f\u3068\u306e\u3053\u3068\u3067\u3057\u305f\u3002\u8a73\u7d30\u306f\u30b0\u30b0\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u306a\u304a\u3001\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306f\u307b\u307c[\u524d\u554f](http://qiita.com/segavvy/items/f25fd2ff572cc8ec0534)\u306e\u307e\u307e\u3067\u3001\u6700\u5f8c\u306b\u8a9e\u5e79\u306e\u62bd\u51fa\u3092\u52a0\u3048\u305f\u3060\u3051\u3067\u3059\u3002snowballstemmer\u306e\u4f7f\u3044\u65b9\u306f\u3001\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30b5\u30a4\u30c8\u306e[How to use library](https://github.com/shibukawa/snowball_py#how-to-use-library)\u3092\u898b\u308b\u3068\u308f\u304b\u308a\u307e\u3059\u3002\u30b7\u30f3\u30d7\u30eb\u3067\u3044\u3044\u3067\u3059\u306d\u3002\n\n\u3000\n53\u672c\u76ee\u306e\u30ce\u30c3\u30af\u306f\u4ee5\u4e0a\u3067\u3059\u3002\u8aa4\u308a\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5e78\u3044\u3067\u3059\u3002\n<hr>\n\n*\u5b9f\u884c\u7d50\u679c\u306b\u306f\u3001[100\u672c\u30ce\u30c3\u30af\u3067\u7528\u3044\u308b\u30b3\u30fc\u30d1\u30b9\u30fb\u30c7\u30fc\u30bf](http://www.cl.ecei.tohoku.ac.jp/nlp100/#data)\u3067\u914d\u5e03\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u304c\u542b\u307e\u308c\u307e\u3059\u3002\u3053\u306e\u7b2c6\u7ae0\u3067\u7528\u3044\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u306f[\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u30fb\u30b3\u30e2\u30f3\u30ba \u8868\u793a-\u7d99\u627f 3.0 \u975e\u79fb\u690d](https://creativecommons.org/licenses/by-sa/3.0/legalcode)\uff08[\u65e5\u672c\u8a9e\u8a33](https://creativecommons.org/licenses/by-sa/3.0/deed.ja)\uff09\u3067\u3059\u3002*\n", "tags": ["Python", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406", "\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af"]}