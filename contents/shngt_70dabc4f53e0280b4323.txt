{"context": "\n\n\u30d3\u30fc\u30b3\u30f3\u9818\u57df\u306e\u89b3\u6e2c\n\n\u9818\u57df\u89b3\u6e2c\u6e96\u5099\nInfo.plist\u306eRequired device capabilities\u306blocation-services\u8ffd\u52a0\nInfo.plist\u306eInformation Property List\u306bNSLocationAlwaysUsageDescription\u3092\u8ffd\u52a0\u3057\u3066\u3001\u8a31\u53ef\u3092\u6c42\u3081\u308b\u30c0\u30a4\u30a2\u30ed\u30b0\u306b\u8868\u793a\u3059\u308b\u6587\u5b57\u5217\u3092\u8a2d\u5b9a\n\u753b\u9762\u5de6\u306e\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\u304b\u3089\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff08\u4e00\u756a\u4e0a\u306e\u30eb\u30fc\u30c8\uff09\u3092\u9078\u629e\u3057\u3001Capabilities\u30bf\u30d6->Background Modes\u3092ON\u306b\u3057\u3001Location updates\u3092\u30c1\u30a7\u30c3\u30af\n\nViewController.swift\nimport UIKit\nimport CoreLocation\n\nclass ViewController: UIViewController, CLLocationManagerDelegate {\n\n    var myLocationManager: CLLocationManager!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        if !CLLocationManager.isMonitoringAvailableForClass(CLCircularRegion) {\n            return\n        }\n\n        let status = CLLocationManager.authorizationStatus()\n        if status == CLAuthorizationStatus.Restricted || status == CLAuthorizationStatus.Denied {\n            return\n        }\n\n        myLocationManager = CLLocationManager()\n        myLocationManager.delegate = self\n\n        if status == CLAuthorizationStatus.NotDetermined {\n            myLocationManager.requestAlwaysAuthorization()\n        }\n\n        if !CLLocationManager.locationServicesEnabled() {\n            return\n        }\n\n        if UIApplication.sharedApplication().backgroundRefreshStatus != UIBackgroundRefreshStatus.Available {\n            return\n        }\n\n\n\n\u30d3\u30fc\u30b3\u30f3\u9818\u57df\u306e\u751f\u6210\u30fb\u767b\u9332\n\nViewController.swift\n        if UIApplication.sharedApplication().backgroundRefreshStatus != UIBackgroundRefreshStatus.Available {\n            return\n        }\n\n        let myProximityUUID = NSUUID.init(UUIDString: \"YourUUID\")\n        let beaconRegion = CLBeaconRegion.init(proximityUUID: myProximityUUID!, major: 0, minor: 0, identifier: \"YourUniqueIdentifier\")\n        beaconRegion.notifyOnEntry = true\n        beaconRegion.notifyOnExit = true\n\n        myLocationManager.startMonitoringForRegion(beaconRegion)\n\n        myLocationManager.requestStateForRegion(beaconRegion)\n\n\n\n\u72b6\u614b\u8868\u793a\u7528\u30e9\u30d9\u30eb\u4f5c\u6210\n\nViewController.swift\nclass ViewController: UIViewController, CLLocationManagerDelegate {\n\n    @IBOutlet weak var statusLabel: UILabel!\n\n\n\n\u5883\u754c\u6a2a\u65ad\u30a4\u30d9\u30f3\u30c8\u306e\u51e6\u7406\n\nViewController.swift\n        myLocationManager.requestStateForRegion(beaconRegion)\n\n    }\n\n    func locationManager(manager: CLLocationManager, didDetermineState state: CLRegionState, forRegion region: CLRegion) {\n        if state == CLRegionState.Inside {\n            statusLabel.text = \"\u7bc4\u56f2\u5185\"\n        } else {\n            statusLabel.text = \"\u7bc4\u56f2\u5916\"\n        }\n    }\n\n    func locationManager(manager: CLLocationManager, didEnterRegion region: CLRegion) {\n        statusLabel.text = \"\u4fb5\u5165\"\n    }\n\n    func locationManager(manager: CLLocationManager, didExitRegion region: CLRegion) {\n        statusLabel.text = \"\u96e2\u8131\"\n    }\n\n    func locationManager(manager: CLLocationManager, monitoringDidFailForRegion region: CLRegion?, withError error: NSError) {\n        statusLabel.text = \"\u5931\u6557\"\n    }\n\n\n\u30d3\u30fc\u30b3\u30f3\u9818\u57df\u306e\u767b\u9332\u6642\u306b\u3001\u30d3\u30fc\u30b3\u30f3\u9818\u57df\u306enotifyEntryStateOnDisplay\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u3092true\uff08\u305d\u3057\u3066notifyOnEntry\u30d7\u30ed\u30d1\u30c6\u30a3\u3092false\uff09\u306b\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u30e6\u30fc\u30b6\u304c\u30c7\u30d0\u30a4\u30b9\u306e\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3092\u30aa\u30f3\u306b\u3059\u308b\u307e\u3067\u3001\u9032\u5165\u306e\u901a\u77e5\u3092\u9045\u3089\u305b\u308b\n\u30e6\u30fc\u30b6\u306b\u901a\u77e5\u304c\u4f55\u56de\u3082\u9001\u4fe1\u3055\u308c\u308b\u306e\u3092\u9632\u6b62\u3059\u308b\u306b\u306f\u3001\u9818\u57df\u3078\u306e\u9032\u5165\u3054\u3068\u306b1\u56de\u3060\u3051\u4f4d\u7f6e\u306b\u95a2\u3059\u308b\u901a\u77e5\u3092\u914d\u4fe1\u3059\u308b\u3088\u3046\u306b\u3059\u308b\n\n\u53c2\u8003\u60c5\u5831\n\u4f4d\u7f6e\u60c5\u5831\u3068\u30de\u30c3\u30d7\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9\n# \u30d3\u30fc\u30b3\u30f3\u9818\u57df\u306e\u89b3\u6e2c\n\n## \u9818\u57df\u89b3\u6e2c\u6e96\u5099\n\nInfo.plist\u306eRequired device capabilities\u306blocation-services\u8ffd\u52a0\nInfo.plist\u306eInformation Property List\u306bNSLocationAlwaysUsageDescription\u3092\u8ffd\u52a0\u3057\u3066\u3001\u8a31\u53ef\u3092\u6c42\u3081\u308b\u30c0\u30a4\u30a2\u30ed\u30b0\u306b\u8868\u793a\u3059\u308b\u6587\u5b57\u5217\u3092\u8a2d\u5b9a\n\u753b\u9762\u5de6\u306e\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\u304b\u3089\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff08\u4e00\u756a\u4e0a\u306e\u30eb\u30fc\u30c8\uff09\u3092\u9078\u629e\u3057\u3001Capabilities\u30bf\u30d6->Background Modes\u3092ON\u306b\u3057\u3001Location updates\u3092\u30c1\u30a7\u30c3\u30af\n\n```swift:ViewController.swift\nimport UIKit\nimport CoreLocation\n\nclass ViewController: UIViewController, CLLocationManagerDelegate {\n\n    var myLocationManager: CLLocationManager!\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        if !CLLocationManager.isMonitoringAvailableForClass(CLCircularRegion) {\n            return\n        }\n        \n        let status = CLLocationManager.authorizationStatus()\n        if status == CLAuthorizationStatus.Restricted || status == CLAuthorizationStatus.Denied {\n            return\n        }\n        \n        myLocationManager = CLLocationManager()\n        myLocationManager.delegate = self\n        \n        if status == CLAuthorizationStatus.NotDetermined {\n            myLocationManager.requestAlwaysAuthorization()\n        }\n        \n        if !CLLocationManager.locationServicesEnabled() {\n            return\n        }\n        \n        if UIApplication.sharedApplication().backgroundRefreshStatus != UIBackgroundRefreshStatus.Available {\n            return\n        }\n```\n\n## \u30d3\u30fc\u30b3\u30f3\u9818\u57df\u306e\u751f\u6210\u30fb\u767b\u9332\n\n```swift:ViewController.swift\n        if UIApplication.sharedApplication().backgroundRefreshStatus != UIBackgroundRefreshStatus.Available {\n            return\n        }\n        \n        let myProximityUUID = NSUUID.init(UUIDString: \"YourUUID\")\n        let beaconRegion = CLBeaconRegion.init(proximityUUID: myProximityUUID!, major: 0, minor: 0, identifier: \"YourUniqueIdentifier\")\n        beaconRegion.notifyOnEntry = true\n        beaconRegion.notifyOnExit = true\n\n        myLocationManager.startMonitoringForRegion(beaconRegion)\n        \n        myLocationManager.requestStateForRegion(beaconRegion)\n```\n\n## \u72b6\u614b\u8868\u793a\u7528\u30e9\u30d9\u30eb\u4f5c\u6210\n\n```swift:ViewController.swift\nclass ViewController: UIViewController, CLLocationManagerDelegate {\n\n    @IBOutlet weak var statusLabel: UILabel!\n```\n\n## \u5883\u754c\u6a2a\u65ad\u30a4\u30d9\u30f3\u30c8\u306e\u51e6\u7406\n\n```swift:ViewController.swift\n        myLocationManager.requestStateForRegion(beaconRegion)\n        \n    }\n\n    func locationManager(manager: CLLocationManager, didDetermineState state: CLRegionState, forRegion region: CLRegion) {\n        if state == CLRegionState.Inside {\n            statusLabel.text = \"\u7bc4\u56f2\u5185\"\n        } else {\n            statusLabel.text = \"\u7bc4\u56f2\u5916\"\n        }\n    }\n    \n    func locationManager(manager: CLLocationManager, didEnterRegion region: CLRegion) {\n        statusLabel.text = \"\u4fb5\u5165\"\n    }\n    \n    func locationManager(manager: CLLocationManager, didExitRegion region: CLRegion) {\n        statusLabel.text = \"\u96e2\u8131\"\n    }\n    \n    func locationManager(manager: CLLocationManager, monitoringDidFailForRegion region: CLRegion?, withError error: NSError) {\n        statusLabel.text = \"\u5931\u6557\"\n    }\n```\n\n*\u30d3\u30fc\u30b3\u30f3\u9818\u57df\u306e\u767b\u9332\u6642\u306b\u3001\u30d3\u30fc\u30b3\u30f3\u9818\u57df\u306enotifyEntryStateOnDisplay\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u3092true\uff08\u305d\u3057\u3066notifyOnEntry\u30d7\u30ed\u30d1\u30c6\u30a3\u3092false\uff09\u306b\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u30e6\u30fc\u30b6\u304c\u30c7\u30d0\u30a4\u30b9\u306e\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3092\u30aa\u30f3\u306b\u3059\u308b\u307e\u3067\u3001\u9032\u5165\u306e\u901a\u77e5\u3092\u9045\u3089\u305b\u308b*\n\n*\u30e6\u30fc\u30b6\u306b\u901a\u77e5\u304c\u4f55\u56de\u3082\u9001\u4fe1\u3055\u308c\u308b\u306e\u3092\u9632\u6b62\u3059\u308b\u306b\u306f\u3001\u9818\u57df\u3078\u306e\u9032\u5165\u3054\u3068\u306b1\u56de\u3060\u3051\u4f4d\u7f6e\u306b\u95a2\u3059\u308b\u901a\u77e5\u3092\u914d\u4fe1\u3059\u308b\u3088\u3046\u306b\u3059\u308b*\n\n## \u53c2\u8003\u60c5\u5831\n\n[\u4f4d\u7f6e\u60c5\u5831\u3068\u30de\u30c3\u30d7\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9](https://developer.apple.com/jp/documentation/LocationAwarenessPG.pdf)\n", "tags": ["Swift2", "Xcode7.3", "iOS8.1"]}