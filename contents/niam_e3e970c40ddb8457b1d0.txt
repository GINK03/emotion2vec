{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u3069\u3046\u3082\uff0cMachine Learning Advent Calendar 2012\u306e3\u65e5\u76ee\u3092\u62c5\u5f53\u3055\u305b\u3066\u3044\u305f\u3060\u304f\uff0c@niam\u3067\u3059\uff0eAdvent Calendar\u306b\u53c2\u52a0\u3055\u305b\u3066\u3044\u305f\u3060\u304f\u306e\u306f\u521d\u3081\u3066\u306a\u306e\u3067\u6050\u7e2e\u3067\u3059\u304c\uff0c\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\uff0e\u672c\u65e5\u306e\u5185\u5bb9\u306f\uff0cgithub\u3067\u516c\u958b\u3057\u307e\u3057\u305f\uff0e\n\n\u672c\u65e5\u306e\u5185\u5bb9\n\u3055\u3066\uff0c\u672c\u65e5\u306e\u5185\u5bb9\u3067\u3059\u304c\uff0c\u30bf\u30a4\u30c8\u30eb\u306e\u901a\u308a\uff0cOpenMP\u3092\u4f7f\u3063\u3066LIBSVM\u3092\u30de\u30eb\u30c1\u30b3\u30a2\u74b0\u5883\u3067\u901f\u304f\u3059\u308b\u65b9\u6cd5\u3067\u3059\uff0eLIBSVM\u306f\uff0c\u591a\u5206\u7686\u3055\u3093\u3054\u5b58\u77e5\u3060\u3068\u601d\u3044\u307e\u3059\u304c\uff0cSupport Vector Machines (SVM)\u306e\u4ee3\u8868\u7684\u3067\u4fe1\u983c\u51fa\u6765\u308b\u5b9f\u88c5\u3067\u3059\uff0e\u53f0\u6e7e\u5927\u5b66\u306eChih-Chung Chang\uff0cChih-Jen Lin\u3089\u306b\u3088\u3063\u3066\u958b\u767a\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\uff08\u76f4\u63a5\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u304c\uff0c\u53f0\u6e7e\u306f\u4e2d\u56fd\u8a9e\u306e\u30ed\u30fc\u30de\u5b57\u8868\u8a18\u306b\uff0c\u6709\u540d\u306a\u30d4\u30f3\u30a4\u30f3\u3067\u306f\u306a\u304f\u30a6\u30a7\u30fc\u30c9\u5f0f\u3092\u7528\u3044\u3066\u3044\u308b\u305f\u3081\uff0c\"Chih\"\u306e\u3088\u3046\u306a\u666e\u901a\u306e\u30d4\u30f3\u30a4\u30f3\u8868\u8a18\u3067\u306f\u73fe\u308c\u306a\u3044\u7db4\u308a\u304c\u540d\u524d\u306e\u8868\u8a18\u306b\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\uff0e\uff09\nSVM\u306e\u7279\u5fb4\u306e\uff11\u3064\u306f\uff0c\u30ab\u30fc\u30cd\u30eb\u30c8\u30ea\u30c3\u30af\u3092\u4f7f\u3063\u3066\uff0c\u8907\u96d1\u306a\u8b58\u5225\u9762\u3092\u69cb\u6210\u3067\u304d\u308b\u3053\u3068\u3067\u3059\uff0e\u307e\u3041\uff0c\u8907\u96d1\u306a\u6570\u5f0f\u306f\u304a\u3044\u3066\u304a\u304f\u3068\u3057\u3066\uff0cLIBSVM\u3067\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b\u3060\u3051\u306a\u306e\u3067\u3059\u304c\uff0c\u5b9f\u7528\u4e0a\u306f\uff0c\u30ab\u30fc\u30cd\u30eb\u3092\u4f7f\u3046\u3068\uff08\u7279\u306b\u30c7\u30fc\u30bf\u304c\u591a\u3044\u5834\u5408\u306f\uff09\u5b66\u7fd2\u304c\u9045\u3044\uff0c\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308a\u307e\u3059\uff0e\n\u2026\u5b66\u7fd2\uff0c\u901f\u304f\u3057\u305f\u3044\u3067\u3059\u3088\u306d\uff1f\uff08\u7b11\uff09\u305b\u3063\u304b\u304f\uff0c\u30b3\u30a2\u304c\u6ca2\u5c71\u3042\u308b\u306e\u3067\u3059\u304b\u3089\uff0e\u5b9f\u306f\uff0c\u516c\u5f0f\u306eFAQ\u3067OpenMP\u3092\u4f7f\u3063\u3066\u4e26\u5217\u5316\u3059\u308b\u65b9\u6cd5\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3059\uff01\u65e9\u901f\uff0c\u3053\u306eLIBSVM FAQ\u3092\u898b\u3066\u307e\u3057\u3087\u3046\uff0e\n\u57fa\u672c\u7684\u306b\u306f\uff0cMakefile\u306b-fopenmp\u3092\u4ed8\u3051\u52a0\u3048\u3066\uff0csvm.cpp\u306b3\u884c\u4ed8\u3051\u52a0\u3048\u308b\u3060\u3051\u3067\u3059\uff0e\u4e00\u5fdc\uff0c\u73fe\u6642\u70b9\u3067\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f33.14\u7528\u306e\u30d1\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u304c\uff0c\u30d1\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u306fLIBSVM\u304c\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3057\u305f\u3089\u4f7f\u3048\u307e\u305b\u3093\uff0e\u3053\u306eFAQ\uff0c\u3061\u3083\u3093\u3068\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\uff0c\u3057\u3070\u3089\u304f\u7d4c\u3063\u3066\u304b\u3089\u3053\u306e\u30da\u30fc\u30b8\u3092\u898b\u308b\u65b9\u306f\uff0c\u76f4\u63a5\uff0cLIBSVM FAQ\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\uff0e\nwget 'http://www.csie.ntu.edu.tw/~cjlin/cgi-bin/libsvm.cgi?+http://www.csie.ntu.edu.tw/~cjlin/libsvm+tar.gz'\ngit clone https://github.com/niam/libsvm_openmp_patch\ntar zxvf libsvm-3.14.tar.gz\ncd libsvm-3.14\npatch < ../libsvm_openmp_patch/Makefile.diff\npatch < ../libsvm_openmp_patch/svm_cpp.diff\nmake\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u306f\uff0cOpenMP\u304c\u52d5\u4f5c\u3059\u308b\u74b0\u5883\u304c\u5fc5\u8981\u3067\u3059\uff0e\u78ba\u8a8d\u306f\uff0cgcc 4.7.2\u3067\u884c\u306a\u3063\u3066\u3044\u307e\u3059\uff0eOpenMP\u306b\u3064\u3044\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\uff0cfor\u6587\u306e\u524d\u306b#pragma omp parallel for\u3068\u66f8\u304f\u3068\uff0c\u305d\u306efor\u6587\u3092\u4e26\u5217\u306b\u3057\u3066\u304f\u308c\u308b\uff0c\u8d85\u304a\u624b\u8efd\u4e26\u5217\u5316\u3067\u3059\uff0e\u5b9f\u969b\u306b\u4f55\u4e26\u5217\u306b\u3059\u308b\u304b\u306f\uff0cOMP_NUM_THREADS\u74b0\u5883\u5909\u6570\u3067\u52d5\u7684\u306b\u8a2d\u5b9a\u3067\u304d\u307e\u3059\uff0e\u3069\u308c\u3050\u3089\u3044\u901f\u304f\u306a\u308b\u306e\u304b\uff0c\u5b9f\u9a13\u3057\u3066\u307f\u307e\u3057\u305f\uff0e\u30c6\u30b9\u30c8\u306e\u3084\u308a\u65b9\u3082\uff0c\u5148\u7a0b\u306eFAQ\u306b\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\uff0c\u305d\u308c\u306b\u5f93\u3044\u307e\u3059\uff0e\nwget 'http://www.csie.ntu.edu.tw/~cjlin/libsvmtools/datasets/binary/ijcnn1.bz2'\nbzip2 -d ijcnn1.bz2\n\n\u307e\u305a\u306f\uff0c1\u30b9\u30ec\u30c3\u30c9\u306e\u6642\uff0e\n\nexport OMP_NUM_THREADS=1\ntime svm-train -c 16 -g 4 -m 400 -t 2 ijcnn1\n\n\u3068\u3057\u307e\u3059\uff0eOMP_NUM_THREADS\u3067\uff0c\u30b9\u30ec\u30c3\u30c9\u6570\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e-m 400\u306f\uff0c\u30ab\u30fc\u30cd\u30eb\u306e\u5024\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u304a\u304f\u30b5\u30a4\u30ba\u3092MB\u5358\u4f4d\u3067\u6307\u5b9a\u3059\u308b\u3082\u306e\u3067\uff0c\u3053\u3053\u3067\u306f400MB\u4f7f\u3063\u3066\u3044\u307e\u3059\uff0e-t 2\u306f\uff0cRBF\u30ab\u30fc\u30cd\u30eb\u3092\u4f7f\u7528\u3059\u308b\u4e8b\u3092\u8868\u3057\uff0c-g 4\u306fRBF\u30ab\u30fc\u30cd\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3059\uff0e-c 16\u306f\u6b63\u5247\u5316\u306e\u5ea6\u5408\u3044\u3067\u3059\uff0e\u7cbe\u5ea6\u306e\u8a55\u4fa1\u3092\u3059\u308b\u6642\u306a\u3069\u306f\uff0c-g, -c\u306a\u3069\u306e\u5024\u3092\uff0c\u4ea4\u5dee\u691c\u5b9a\u306a\u3069\u3092\u7528\u3044\u3066\u6c7a\u3081\u3066\u3084\u3089\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u304c\uff0c\u3053\u3053\u3067\u306f\u901f\u5ea6\u3060\u3051\u3092\u898b\u305f\u3044\u306e\u3067\uff0c\u6c7a\u3081\u6253\u3061\u306b\u3057\u3066\u3044\u307e\u3059\uff0e\n...............*.........*.*\noptimization finished, #iter = 25062\nnu = 0.025946\nobj = -14014.950327, rho = -0.415715\nnSV = 3370, nBSV = 792\nTotal nSV = 3370\n./svm-train -c 16 -g 4 -t 2 -m 400 ijcnn1  38.67s user 0.21s system 99% cpu 38.889 total\n\n\u3067\u3057\u305f\uff0e\u4e00\u65b9\uff0c8\u30b9\u30ec\u30c3\u30c9\u306e\u6642\u306f\u2026\n\nexport OMP_NUM_THREADS=8\ntime svm-train -c 16 -g 4 -t 2 -m 400 ijcnn1\n\n\u3068\u3059\u308b\u3068\uff0c\n\n...............*.........*.*\noptimization finished, #iter = 25062\nnu = 0.025946\nobj = -14014.950327, rho = -0.415715\nnSV = 3370, nBSV = 792\nTotal nSV = 3370\n./svm-train -c 16 -g 4 -t 2 -m 400 ijcnn1  55.77s user 0.35s system 559% cpu 10.038 total\n\n38.889\u79d2\u219210.038\u79d2\u306a\u306e\u3067\uff0c\u7d044\u500d\u901f\u304f\u306a\u3063\u3066\u307e\u3059\u306d\uff01\n\u50d5\u306e\u7814\u7a76\u5ba4\u306e\u30de\u30b7\u30f3\u306e\uff11\u3064\u306f\uff0c24\u30b3\u30a2\u3042\u308a\u307e\u3059\uff0e\u3053\u308c\u3092\u30d5\u30eb\u306b\u4f7f\u3046\u3068\u2026\uff1f\n\nexport OMP_NUM_THREADS=24\ntime svm-train -c 16 -g 4 -t 2 -m 400 ijcnn1\n\n\u3068\u3059\u308b\u3068\uff0c\n\n...............*.........*.*\noptimization finished, #iter = 25062\nnu = 0.025946\nobj = -14014.950327, rho = -0.415715\nnSV = 3370, nBSV = 792\nTotal nSV = 3370\n./svm-train -c 16 -g 4 -t 2 -m 400 ijcnn1  131.44s user 0.97s system 1463% cpu 9.047 total\n\n\u3067\u3057\u305f\uff01\n\n\u304a\u307e\u3051\nLIBSVM\u306f\uff0c\u69d8\u3005\u306a\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u3092\u9078\u629e\u3059\u308b\u306e\u306b\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u3063\u305f\u52d5\u7684\u591a\u614b\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\uff0e\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u306f\uff0c\u30c7\u30fc\u30bf\u306e\u6570\u3092n\u3068\u3059\u308b\u3068\uff0cO(n^2)\u56de\u3082\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u3067\u3059\uff0eC++\u306b\u3061\u3087\u3063\u3068\u8a73\u3057\u3044\u4eba\u306f\uff0c\u300c\u3048\uff0c\u305d\u308c\uff0c\u547c\u3073\u51fa\u3057\u30b3\u30b9\u30c8\u9ad8\u304f\u306d\uff1f\u9759\u7684\u591a\u614b\u3092\u4f7f\u3063\u3066\u307f\u305f\u65b9\u304c\u826f\u304f\u306d\uff1f\u300d\u3068\u601d\u3046\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\uff0e\u306a\u306e\u3067\uff0c\u547c\u3073\u51fa\u3057\u30b3\u30b9\u30c8\u304c\u3069\u308c\u3050\u3089\u3044\u304b\uff0c\u3061\u3087\u3063\u3068\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\uff0e\n\nmykernel_test2.cpp\n#include <iostream>\n#include <functional>\n#include <memory>\n#include <chrono>\n#include <cmath>\n\nstruct rbf_t{\n  inline double operator()(int i, int j) const{\n    double tmp = i-j;\n    return 1.0;\n//    return std::exp(-tmp*tmp);\n  }\n};\nstruct kbase_t{\n  virtual double operator()(int i, int j) const =0;\n};\nstruct rbf_t2:kbase_t{\n  inline double operator()(int i, int j) const{\n    double tmp = i-j;\n    return 1.0;\n//    return std::exp(-tmp*tmp);\n  }\n};\n\ninline double dyn_rbf(int i, int j) {\n  double tmp = i-j;\n  return 1.0;\n//  return std::exp(-tmp*tmp);\n}\n\ntemplate<class K>\nvoid kernelsum(K k, int n, const std::string& str){\n  auto time_point_t1 = std::chrono::high_resolution_clock::now();\n  double sum = 0.;\n  for(int i=0;i<n;++i){\n    for(int j=0;j<n;++j){\n      sum += k(i,j);\n    }\n  }\n  auto duration1 = std::chrono::high_resolution_clock::now() - time_point_t1 ;\n  std::cout << str << \" time: \" << duration1.count() << std::endl;\n  std::cout << str << \" val : \" << sum << std::endl; \n  return;\n}\n\nvoid kernelsum2(const kbase_t& k, int n, const std::string& str){\n  auto time_point_t1 = std::chrono::high_resolution_clock::now();\n  double sum = 0.;\n  for(int i=0;i<n;++i){\n    for(int j=0;j<n;++j){\n      sum += k(i,j);\n    }\n  }\n  auto duration1 = std::chrono::high_resolution_clock::now() - time_point_t1 ;\n  std::cout << str << \" time: \" << duration1.count() << std::endl;\n  std::cout << str << \" val : \" << sum << std::endl; \n  return;\n}\n\n\nint main(int argc, char* argv[]){\n  int N = 100000;\n  kernelsum(rbf_t(), N, std::string(\"static polymorphism \"));\n\n  rbf_t2 rbf2;\n  kernelsum2(rbf2, N, std::string(\"dynamic polymorphism \"));\n\n  std::function<double ( int, int)> f = &dyn_rbf;\n  kernelsum(f, N, std::string(\"dynamic polymorphism using std::function \"));\n}\n\n\n\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u30b3\u30b9\u30c8\u3092\u8a08\u6e2c\u3059\u308b\u3060\u3051\u306a\u306e\u3067\uff0c\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u306f\uff0c\u5168\u3066\u306e\u5834\u5408\u306b1.0\u3092\u8fd4\u3059\u7c21\u5358\u306a\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0eC++11\u3067\u306f\uff0c\u95a2\u6570\u3084\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u307e\u3068\u3081\u3066std::function\u306b\u7a81\u3063\u8fbc\u3080\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\uff0e\u307e\u305f\uff0cstd::chrono\u3092\u4f7f\u3063\u3066\uff0c\u5b9f\u884c\u6642\u9593\u3092\u3092\u03bcs\u5358\u4f4d\u3067\u8a08\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\uff1a\n\ng++ -O3 --std=c++11 -o mykernel_test2 mykernel_test2.cpp \n\n\u5b9f\u884c\u3059\u308b\u3068\uff1a\n\nstatic polymorphism  time: 8749249\nstatic polymorphism  val : 1e+10\ndynamic polymorphism  time: 29043178\ndynamic polymorphism  val : 1e+10\ndynamic polymorphism using std::function  time: 26236452\ndynamic polymorphism using std::function  val : 1e+10\n\n\u5358\u4f4d\u306f\u03bcs\u3067\u3059\uff0e\u3068\u308a\u3042\u3048\u305a\uff0c\u30c7\u30fc\u30bf\u6570\u304c100,000\u306e\u5834\u5408\u3092\u60f3\u5b9a\u3059\u308b\u3068\uff0c\u9759\u7684\u591a\u614b\u304c8.7\u79d2\u3050\u3089\u3044\u95a2\u6570\u547c\u3073\u51fa\u3057\u306b\u304b\u304b\u3063\u3066\u3044\u308b\u306e\u306b\u5bfe\u3057\u3066\uff0c\u4eee\u60f3\u95a2\u6570\u3092\u4f7f\u3063\u305f\u52d5\u7684\u591a\u614b\u306f29\u79d2\uff0cstd::function\u3092\u4f7f\u3063\u305f\u52d5\u7684\u591a\u614b\u306f26\u79d2\u304b\u304b\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\u30c7\u30fc\u30bf\u6570\u304c100,000\u306e\u5834\u5408\u306b\uff0c\u73fe\u5b9f\u7684\u306a\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066RBF\u30ab\u30fc\u30cd\u30eb\u306eSVM\u3092\u5b66\u7fd2\u3057\u3088\u3046\u3068\u3059\u308b\u3068\uff0c\u666e\u901a\u306f\u6570\u6642\u9593\u4ee5\u4e0a\u306f\u304b\u304b\u308b\u306f\u305a\u3067\u3059\uff0e\u306a\u306e\u3067\uff0c\u7c21\u5358\u306b\u3044\u3048\u3070\uff0c\u5b66\u7fd2\u306b\u304b\u304b\u308b\u6642\u9593\u306e\u65b9\u304c\u305a\u3063\u3068\u591a\u3044\u305f\u3081\uff0c\u95a2\u6570\u547c\u3073\u51fa\u3057\u30b3\u30b9\u30c8\u3092\u305d\u3093\u306a\u306b\u6c17\u306b\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\uff0c\u3068\u3044\u3046\u7d50\u8ad6\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\n\u7d42\u308f\u308a\u306b\n\u672c\u5f53\u306f\uff0cSVM\u306e\u5f0f\u3092\u51fa\u3057\u3066\uff0c\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u306e\u90e8\u5206\u3092\u4e26\u5217\u5316\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u307e\u3067\u3061\u3083\u3093\u3068\u89e3\u8aac\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\uff0cgithub\u306bpush\u3067\u304d\u306a\u3044\u30a8\u30e9\u30fc\u306b\u30cf\u30de\u3063\u3066\uff08\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u304c\u89e3\u6c7a\u3057\u307e\u3057\u305f\uff09\u5fc3\u304c\u6298\u308c\u3066\u3057\u307e\u3063\u305f\u306e\u3067\uff0c\u3053\u306e\u8fba\u3067\u7d42\u308f\u308a\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\u6700\u5f8c\u306b\uff0c\u4e3b\u50ac\u8005\u3067\uff0c\u3053\u306eAdvent Calendar\u306e\u305f\u3081\u306bQiita\u3067TeX\u3092\u6271\u3046extension\u307e\u3067\u4f5c\u3063\u3066\u4e0b\u3055\u3063\u305fnaoya_t\u3055\u3093\u306b\u611f\u8b1d\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0eChrome\u3067\uff0c\u62e1\u5f35\u6a5f\u80fd\u8a2d\u5b9a\u753b\u9762\u306b.crx\u30d5\u30a1\u30a4\u30eb\u3092\u30c9\u30e9\u30c3\u30b0\uff06\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3068\uff0cextension\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u4e8b\u3092\u521d\u3081\u3066\u77e5\u308a\u307e\u3057\u305f\u2026\uff0e\n\n\u53c2\u8003\u6587\u732e\nLIBSVM FAQ\nC++ Reference\n#\u306f\u3058\u3081\u306b\n\u3069\u3046\u3082\uff0c[Machine Learning Advent Calendar 2012](http://qiita.com/advent-calendar/2012/machinelearning)\u306e3\u65e5\u76ee\u3092\u62c5\u5f53\u3055\u305b\u3066\u3044\u305f\u3060\u304f\uff0c[@niam](http://twitter.com/niam)\u3067\u3059\uff0eAdvent Calendar\u306b\u53c2\u52a0\u3055\u305b\u3066\u3044\u305f\u3060\u304f\u306e\u306f\u521d\u3081\u3066\u306a\u306e\u3067\u6050\u7e2e\u3067\u3059\u304c\uff0c\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\uff0e\u672c\u65e5\u306e\u5185\u5bb9\u306f\uff0c[github](https://github.com/niam/libsvm_openmp_patch)\u3067\u516c\u958b\u3057\u307e\u3057\u305f\uff0e\n\n#\u672c\u65e5\u306e\u5185\u5bb9\n\u3055\u3066\uff0c\u672c\u65e5\u306e\u5185\u5bb9\u3067\u3059\u304c\uff0c\u30bf\u30a4\u30c8\u30eb\u306e\u901a\u308a\uff0cOpenMP\u3092\u4f7f\u3063\u3066LIBSVM\u3092\u30de\u30eb\u30c1\u30b3\u30a2\u74b0\u5883\u3067\u901f\u304f\u3059\u308b\u65b9\u6cd5\u3067\u3059\uff0eLIBSVM\u306f\uff0c\u591a\u5206\u7686\u3055\u3093\u3054\u5b58\u77e5\u3060\u3068\u601d\u3044\u307e\u3059\u304c\uff0cSupport Vector Machines (SVM)\u306e\u4ee3\u8868\u7684\u3067\u4fe1\u983c\u51fa\u6765\u308b\u5b9f\u88c5\u3067\u3059\uff0e\u53f0\u6e7e\u5927\u5b66\u306eChih-Chung Chang\uff0cChih-Jen Lin\u3089\u306b\u3088\u3063\u3066\u958b\u767a\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\uff08\u76f4\u63a5\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u304c\uff0c\u53f0\u6e7e\u306f\u4e2d\u56fd\u8a9e\u306e\u30ed\u30fc\u30de\u5b57\u8868\u8a18\u306b\uff0c\u6709\u540d\u306a\u30d4\u30f3\u30a4\u30f3\u3067\u306f\u306a\u304f[\u30a6\u30a7\u30fc\u30c9\u5f0f](http://ja.wikipedia.org/wiki/%E3%82%A6%E3%82%A7%E3%83%BC%E3%83%89%E5%BC%8F)\u3092\u7528\u3044\u3066\u3044\u308b\u305f\u3081\uff0c\"Chih\"\u306e\u3088\u3046\u306a\u666e\u901a\u306e\u30d4\u30f3\u30a4\u30f3\u8868\u8a18\u3067\u306f\u73fe\u308c\u306a\u3044\u7db4\u308a\u304c\u540d\u524d\u306e\u8868\u8a18\u306b\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\uff0e\uff09\n\nSVM\u306e\u7279\u5fb4\u306e\uff11\u3064\u306f\uff0c\u30ab\u30fc\u30cd\u30eb\u30c8\u30ea\u30c3\u30af\u3092\u4f7f\u3063\u3066\uff0c\u8907\u96d1\u306a\u8b58\u5225\u9762\u3092\u69cb\u6210\u3067\u304d\u308b\u3053\u3068\u3067\u3059\uff0e\u307e\u3041\uff0c\u8907\u96d1\u306a\u6570\u5f0f\u306f\u304a\u3044\u3066\u304a\u304f\u3068\u3057\u3066\uff0cLIBSVM\u3067\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b\u3060\u3051\u306a\u306e\u3067\u3059\u304c\uff0c\u5b9f\u7528\u4e0a\u306f\uff0c\u30ab\u30fc\u30cd\u30eb\u3092\u4f7f\u3046\u3068\uff08\u7279\u306b\u30c7\u30fc\u30bf\u304c\u591a\u3044\u5834\u5408\u306f\uff09\u5b66\u7fd2\u304c\u9045\u3044\uff0c\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308a\u307e\u3059\uff0e\n\n\u2026\u5b66\u7fd2\uff0c\u901f\u304f\u3057\u305f\u3044\u3067\u3059\u3088\u306d\uff1f\uff08\u7b11\uff09\u305b\u3063\u304b\u304f\uff0c\u30b3\u30a2\u304c\u6ca2\u5c71\u3042\u308b\u306e\u3067\u3059\u304b\u3089\uff0e\u5b9f\u306f\uff0c\u516c\u5f0f\u306eFAQ\u3067OpenMP\u3092\u4f7f\u3063\u3066\u4e26\u5217\u5316\u3059\u308b\u65b9\u6cd5\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3059\uff01\u65e9\u901f\uff0c\u3053\u306e[LIBSVM FAQ](http://www.csie.ntu.edu.tw/~cjlin/libsvm/faq.html#f432)\u3092\u898b\u3066\u307e\u3057\u3087\u3046\uff0e\n\n\u57fa\u672c\u7684\u306b\u306f\uff0cMakefile\u306b-fopenmp\u3092\u4ed8\u3051\u52a0\u3048\u3066\uff0csvm.cpp\u306b3\u884c\u4ed8\u3051\u52a0\u3048\u308b\u3060\u3051\u3067\u3059\uff0e\u4e00\u5fdc\uff0c\u73fe\u6642\u70b9\u3067\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f33.14\u7528\u306e\u30d1\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u304c\uff0c\u30d1\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u306fLIBSVM\u304c\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3057\u305f\u3089\u4f7f\u3048\u307e\u305b\u3093\uff0e\u3053\u306eFAQ\uff0c\u3061\u3083\u3093\u3068\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\uff0c\u3057\u3070\u3089\u304f\u7d4c\u3063\u3066\u304b\u3089\u3053\u306e\u30da\u30fc\u30b8\u3092\u898b\u308b\u65b9\u306f\uff0c\u76f4\u63a5\uff0cLIBSVM FAQ\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\n```\nwget 'http://www.csie.ntu.edu.tw/~cjlin/cgi-bin/libsvm.cgi?+http://www.csie.ntu.edu.tw/~cjlin/libsvm+tar.gz'\ngit clone https://github.com/niam/libsvm_openmp_patch\ntar zxvf libsvm-3.14.tar.gz\ncd libsvm-3.14\npatch < ../libsvm_openmp_patch/Makefile.diff\npatch < ../libsvm_openmp_patch/svm_cpp.diff\nmake\n```\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u306f\uff0cOpenMP\u304c\u52d5\u4f5c\u3059\u308b\u74b0\u5883\u304c\u5fc5\u8981\u3067\u3059\uff0e\u78ba\u8a8d\u306f\uff0cgcc 4.7.2\u3067\u884c\u306a\u3063\u3066\u3044\u307e\u3059\uff0eOpenMP\u306b\u3064\u3044\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\uff0cfor\u6587\u306e\u524d\u306b`#pragma omp parallel for`\u3068\u66f8\u304f\u3068\uff0c\u305d\u306efor\u6587\u3092\u4e26\u5217\u306b\u3057\u3066\u304f\u308c\u308b\uff0c\u8d85\u304a\u624b\u8efd\u4e26\u5217\u5316\u3067\u3059\uff0e\u5b9f\u969b\u306b\u4f55\u4e26\u5217\u306b\u3059\u308b\u304b\u306f\uff0cOMP_NUM_THREADS\u74b0\u5883\u5909\u6570\u3067\u52d5\u7684\u306b\u8a2d\u5b9a\u3067\u304d\u307e\u3059\uff0e\u3069\u308c\u3050\u3089\u3044\u901f\u304f\u306a\u308b\u306e\u304b\uff0c\u5b9f\u9a13\u3057\u3066\u307f\u307e\u3057\u305f\uff0e\u30c6\u30b9\u30c8\u306e\u3084\u308a\u65b9\u3082\uff0c\u5148\u7a0b\u306eFAQ\u306b\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\uff0c\u305d\u308c\u306b\u5f93\u3044\u307e\u3059\uff0e\n\n```\nwget 'http://www.csie.ntu.edu.tw/~cjlin/libsvmtools/datasets/binary/ijcnn1.bz2'\nbzip2 -d ijcnn1.bz2\n```\n\n\u307e\u305a\u306f\uff0c1\u30b9\u30ec\u30c3\u30c9\u306e\u6642\uff0e\n```\nexport OMP_NUM_THREADS=1\ntime svm-train -c 16 -g 4 -m 400 -t 2 ijcnn1\n```\n\u3068\u3057\u307e\u3059\uff0eOMP_NUM_THREADS\u3067\uff0c\u30b9\u30ec\u30c3\u30c9\u6570\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e`-m 400`\u306f\uff0c\u30ab\u30fc\u30cd\u30eb\u306e\u5024\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u304a\u304f\u30b5\u30a4\u30ba\u3092MB\u5358\u4f4d\u3067\u6307\u5b9a\u3059\u308b\u3082\u306e\u3067\uff0c\u3053\u3053\u3067\u306f400MB\u4f7f\u3063\u3066\u3044\u307e\u3059\uff0e`-t 2`\u306f\uff0cRBF\u30ab\u30fc\u30cd\u30eb\u3092\u4f7f\u7528\u3059\u308b\u4e8b\u3092\u8868\u3057\uff0c`-g 4`\u306fRBF\u30ab\u30fc\u30cd\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3059\uff0e`-c 16`\u306f\u6b63\u5247\u5316\u306e\u5ea6\u5408\u3044\u3067\u3059\uff0e\u7cbe\u5ea6\u306e\u8a55\u4fa1\u3092\u3059\u308b\u6642\u306a\u3069\u306f\uff0c`-g`, `-c`\u306a\u3069\u306e\u5024\u3092\uff0c\u4ea4\u5dee\u691c\u5b9a\u306a\u3069\u3092\u7528\u3044\u3066\u6c7a\u3081\u3066\u3084\u3089\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u304c\uff0c\u3053\u3053\u3067\u306f\u901f\u5ea6\u3060\u3051\u3092\u898b\u305f\u3044\u306e\u3067\uff0c\u6c7a\u3081\u6253\u3061\u306b\u3057\u3066\u3044\u307e\u3059\uff0e\n\n```\n...............*.........*.*\noptimization finished, #iter = 25062\nnu = 0.025946\nobj = -14014.950327, rho = -0.415715\nnSV = 3370, nBSV = 792\nTotal nSV = 3370\n./svm-train -c 16 -g 4 -t 2 -m 400 ijcnn1  38.67s user 0.21s system 99% cpu 38.889 total\n```\n\u3067\u3057\u305f\uff0e\u4e00\u65b9\uff0c8\u30b9\u30ec\u30c3\u30c9\u306e\u6642\u306f\u2026\n```\nexport OMP_NUM_THREADS=8\ntime svm-train -c 16 -g 4 -t 2 -m 400 ijcnn1\n```\n\u3068\u3059\u308b\u3068\uff0c\n```\n...............*.........*.*\noptimization finished, #iter = 25062\nnu = 0.025946\nobj = -14014.950327, rho = -0.415715\nnSV = 3370, nBSV = 792\nTotal nSV = 3370\n./svm-train -c 16 -g 4 -t 2 -m 400 ijcnn1  55.77s user 0.35s system 559% cpu 10.038 total\n```\n38.889\u79d2\u219210.038\u79d2\u306a\u306e\u3067\uff0c\u7d044\u500d\u901f\u304f\u306a\u3063\u3066\u307e\u3059\u306d\uff01\n\n\u50d5\u306e\u7814\u7a76\u5ba4\u306e\u30de\u30b7\u30f3\u306e\uff11\u3064\u306f\uff0c24\u30b3\u30a2\u3042\u308a\u307e\u3059\uff0e\u3053\u308c\u3092\u30d5\u30eb\u306b\u4f7f\u3046\u3068\u2026\uff1f\n```\nexport OMP_NUM_THREADS=24\ntime svm-train -c 16 -g 4 -t 2 -m 400 ijcnn1\n```\n\u3068\u3059\u308b\u3068\uff0c\n```\n...............*.........*.*\noptimization finished, #iter = 25062\nnu = 0.025946\nobj = -14014.950327, rho = -0.415715\nnSV = 3370, nBSV = 792\nTotal nSV = 3370\n./svm-train -c 16 -g 4 -t 2 -m 400 ijcnn1  131.44s user 0.97s system 1463% cpu 9.047 total\n```\n\u3067\u3057\u305f\uff01\n\n\n#\u304a\u307e\u3051\nLIBSVM\u306f\uff0c\u69d8\u3005\u306a\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u3092\u9078\u629e\u3059\u308b\u306e\u306b\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u3063\u305f\u52d5\u7684\u591a\u614b\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\uff0e\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u306f\uff0c\u30c7\u30fc\u30bf\u306e\u6570\u3092n\u3068\u3059\u308b\u3068\uff0cO(n^2)\u56de\u3082\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u3067\u3059\uff0eC++\u306b\u3061\u3087\u3063\u3068\u8a73\u3057\u3044\u4eba\u306f\uff0c\u300c\u3048\uff0c\u305d\u308c\uff0c\u547c\u3073\u51fa\u3057\u30b3\u30b9\u30c8\u9ad8\u304f\u306d\uff1f\u9759\u7684\u591a\u614b\u3092\u4f7f\u3063\u3066\u307f\u305f\u65b9\u304c\u826f\u304f\u306d\uff1f\u300d\u3068\u601d\u3046\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\uff0e\u306a\u306e\u3067\uff0c\u547c\u3073\u51fa\u3057\u30b3\u30b9\u30c8\u304c\u3069\u308c\u3050\u3089\u3044\u304b\uff0c\u3061\u3087\u3063\u3068\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\uff0e\n\n```c++:mykernel_test2.cpp\n#include <iostream>\n#include <functional>\n#include <memory>\n#include <chrono>\n#include <cmath>\n\nstruct rbf_t{\n  inline double operator()(int i, int j) const{\n    double tmp = i-j;\n    return 1.0;\n//    return std::exp(-tmp*tmp);\n  }\n};\nstruct kbase_t{\n  virtual double operator()(int i, int j) const =0;\n};\nstruct rbf_t2:kbase_t{\n  inline double operator()(int i, int j) const{\n    double tmp = i-j;\n    return 1.0;\n//    return std::exp(-tmp*tmp);\n  }\n};\n\ninline double dyn_rbf(int i, int j) {\n  double tmp = i-j;\n  return 1.0;\n//  return std::exp(-tmp*tmp);\n}\n\ntemplate<class K>\nvoid kernelsum(K k, int n, const std::string& str){\n  auto time_point_t1 = std::chrono::high_resolution_clock::now();\n  double sum = 0.;\n  for(int i=0;i<n;++i){\n    for(int j=0;j<n;++j){\n      sum += k(i,j);\n    }\n  }\n  auto duration1 = std::chrono::high_resolution_clock::now() - time_point_t1 ;\n  std::cout << str << \" time: \" << duration1.count() << std::endl;\n  std::cout << str << \" val : \" << sum << std::endl; \n  return;\n}\n\nvoid kernelsum2(const kbase_t& k, int n, const std::string& str){\n  auto time_point_t1 = std::chrono::high_resolution_clock::now();\n  double sum = 0.;\n  for(int i=0;i<n;++i){\n    for(int j=0;j<n;++j){\n      sum += k(i,j);\n    }\n  }\n  auto duration1 = std::chrono::high_resolution_clock::now() - time_point_t1 ;\n  std::cout << str << \" time: \" << duration1.count() << std::endl;\n  std::cout << str << \" val : \" << sum << std::endl; \n  return;\n}\n\n\nint main(int argc, char* argv[]){\n  int N = 100000;\n  kernelsum(rbf_t(), N, std::string(\"static polymorphism \"));\n\n  rbf_t2 rbf2;\n  kernelsum2(rbf2, N, std::string(\"dynamic polymorphism \"));\n\n  std::function<double ( int, int)> f = &dyn_rbf;\n  kernelsum(f, N, std::string(\"dynamic polymorphism using std::function \"));\n}\n```\n\n\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u30b3\u30b9\u30c8\u3092\u8a08\u6e2c\u3059\u308b\u3060\u3051\u306a\u306e\u3067\uff0c\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u306f\uff0c\u5168\u3066\u306e\u5834\u5408\u306b1.0\u3092\u8fd4\u3059\u7c21\u5358\u306a\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0eC++11\u3067\u306f\uff0c\u95a2\u6570\u3084\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u307e\u3068\u3081\u3066std::function\u306b\u7a81\u3063\u8fbc\u3080\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\uff0e\u307e\u305f\uff0cstd::chrono\u3092\u4f7f\u3063\u3066\uff0c\u5b9f\u884c\u6642\u9593\u3092\u3092\u03bcs\u5358\u4f4d\u3067\u8a08\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\uff1a\n```\ng++ -O3 --std=c++11 -o mykernel_test2 mykernel_test2.cpp \n```\n\n\u5b9f\u884c\u3059\u308b\u3068\uff1a\n```\nstatic polymorphism  time: 8749249\nstatic polymorphism  val : 1e+10\ndynamic polymorphism  time: 29043178\ndynamic polymorphism  val : 1e+10\ndynamic polymorphism using std::function  time: 26236452\ndynamic polymorphism using std::function  val : 1e+10\n```\n\n\u5358\u4f4d\u306f\u03bcs\u3067\u3059\uff0e\u3068\u308a\u3042\u3048\u305a\uff0c\u30c7\u30fc\u30bf\u6570\u304c100,000\u306e\u5834\u5408\u3092\u60f3\u5b9a\u3059\u308b\u3068\uff0c\u9759\u7684\u591a\u614b\u304c8.7\u79d2\u3050\u3089\u3044\u95a2\u6570\u547c\u3073\u51fa\u3057\u306b\u304b\u304b\u3063\u3066\u3044\u308b\u306e\u306b\u5bfe\u3057\u3066\uff0c\u4eee\u60f3\u95a2\u6570\u3092\u4f7f\u3063\u305f\u52d5\u7684\u591a\u614b\u306f29\u79d2\uff0cstd::function\u3092\u4f7f\u3063\u305f\u52d5\u7684\u591a\u614b\u306f26\u79d2\u304b\u304b\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\u30c7\u30fc\u30bf\u6570\u304c100,000\u306e\u5834\u5408\u306b\uff0c\u73fe\u5b9f\u7684\u306a\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066RBF\u30ab\u30fc\u30cd\u30eb\u306eSVM\u3092\u5b66\u7fd2\u3057\u3088\u3046\u3068\u3059\u308b\u3068\uff0c\u666e\u901a\u306f\u6570\u6642\u9593\u4ee5\u4e0a\u306f\u304b\u304b\u308b\u306f\u305a\u3067\u3059\uff0e\u306a\u306e\u3067\uff0c\u7c21\u5358\u306b\u3044\u3048\u3070\uff0c\u5b66\u7fd2\u306b\u304b\u304b\u308b\u6642\u9593\u306e\u65b9\u304c\u305a\u3063\u3068\u591a\u3044\u305f\u3081\uff0c\u95a2\u6570\u547c\u3073\u51fa\u3057\u30b3\u30b9\u30c8\u3092\u305d\u3093\u306a\u306b\u6c17\u306b\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\uff0c\u3068\u3044\u3046\u7d50\u8ad6\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\n\n#\u7d42\u308f\u308a\u306b\n\n\n\u672c\u5f53\u306f\uff0cSVM\u306e\u5f0f\u3092\u51fa\u3057\u3066\uff0c\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u306e\u90e8\u5206\u3092\u4e26\u5217\u5316\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u307e\u3067\u3061\u3083\u3093\u3068\u89e3\u8aac\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\uff0cgithub\u306bpush\u3067\u304d\u306a\u3044\u30a8\u30e9\u30fc\u306b\u30cf\u30de\u3063\u3066\uff08\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u304c\u89e3\u6c7a\u3057\u307e\u3057\u305f\uff09\u5fc3\u304c\u6298\u308c\u3066\u3057\u307e\u3063\u305f\u306e\u3067\uff0c\u3053\u306e\u8fba\u3067\u7d42\u308f\u308a\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\u6700\u5f8c\u306b\uff0c\u4e3b\u50ac\u8005\u3067\uff0c\u3053\u306eAdvent Calendar\u306e\u305f\u3081\u306b[Qiita\u3067TeX\u3092\u6271\u3046](http://qiita.com/items/3d4cf1028b5c438642bc)extension\u307e\u3067\u4f5c\u3063\u3066\u4e0b\u3055\u3063\u305fnaoya_t\u3055\u3093\u306b\u611f\u8b1d\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0eChrome\u3067\uff0c\u62e1\u5f35\u6a5f\u80fd\u8a2d\u5b9a\u753b\u9762\u306b.crx\u30d5\u30a1\u30a4\u30eb\u3092\u30c9\u30e9\u30c3\u30b0\uff06\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3068\uff0cextension\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u4e8b\u3092\u521d\u3081\u3066\u77e5\u308a\u307e\u3057\u305f\u2026\uff0e\n\n\n#\u53c2\u8003\u6587\u732e\n[LIBSVM FAQ](http://www.csie.ntu.edu.tw/~cjlin/libsvm/faq.html#f432)\n[C++ Reference](http://en.cppreference.com)\n", "tags": ["LIBSVM", "C++11", "C++"]}