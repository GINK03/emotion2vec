{"context": "\u3053\u308c\u306e\u7d9a\u304d\u3067\u3059\uff1ahttp://qiita.com/syuhei/items/70fc971ce7ce40dee439\n\u524d\u56de\u306fHello World\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u5206\u6563\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u57fa\u672c\u3068\u306a\u308b\u3001rpc\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\nmyproject_app.erl\u306bhello\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002export\u306b\u8ffd\u52a0\u3059\u308b\u306e\u3082\u5fd8\u308c\u305a\u306b\u3002\n-export([start/2, stop/1, hello/1])\n.\n.\n.\n\nhello(Str) ->\n    \"Hello \"++Str.\n\ntest\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3057\u3001myproject_SUITE.erl\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u3053\u306e\u30c6\u30b9\u30c8\u3067\u306frunner@{host\u540d}\u304b\u3089cluster_test@{host\u540d}\u306ejoin\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002start_node\u95a2\u6570\u304c\u3001\u65b0\u3057\u304f\u30c6\u30b9\u30c8\u7528\u306e\u30ce\u30fc\u30c9\u3092\u8d77\u52d5\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n-module(myproject_SUITE).\n\n-compile(export_all).\n\nall() ->\n    [cluster_test].\n\ninit_per_suite(_Config) ->\n    {ok, Hostname} = inet:gethostname(),\n    case net_kernel:start([list_to_atom(\"runner@\"++Hostname), shortnames]) of\n        {ok, _} -> ok;\n        {error, {already_started, _}} -> ok\n    end,\n    _Config.\n\nend_per_suite(_Config) ->\n    application:stop(lager),\n    _Config.\n\ncluster_test(_Config) ->\n    Node = start_node(cluster_test),\n    R = rpc:call(Node, myproject_app, hello, [\"World\"]),\n    ct:log(\"Result:~p, \", [R]),\n    ct_slave:stop(Node).\n\n\n\n\nstart_node(Name) ->\n    CodePath = lists:filter(fun filelib:is_dir/1, code:get_path()),\n    NodeConfig = [\n            {monitor_master, true},\n            {startup_functions, [\n                    {code, set_path, [CodePath]}\n                    ]}],\n    case ct_slave:start(Name, NodeConfig) of\n        {ok, Node} ->\n            rpc:call(Node, application, ensure_all_started, [myproject_app]),\n            Node;\n        {error, already_started, Node} ->\n            ct_slave:stop(Name),\n            start_node(Name);\n        {error, Reason, Node} ->\n            io:format(\"error ~p~n\", [Reason])\n    end.\n\n\n\n\u30c6\u30b9\u30c8\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3061\u307e\u3059\u3002\n$ ./rebar3 ct\n===> Running Common Test suites...\n%%% myproject_SUITE ==> cluster_test: OK\nAll 1 tests passed.\n\n\u3061\u306a\u307f\u306b\u30ed\u30b0\u30d5\u30a9\u30eb\u30c0\u306b\u30c6\u30b9\u30c8\u7d50\u679c\u306eHTML\u3082\u3042\u308a\u307e\u3059\u3002./_build/test/logs/\nrunner@{host\u540d}\u304b\u3089\"World\"\u3092\u9001\u3063\u3066\u3001cluster_test@{host\u540d}\u3067\"Hello \"\u3068\u9023\u7d50\u3059\u3057\u3066\u3001\"Hello World\"\u3092runner@{host\u540d}\u306b\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u3001\u7c21\u5358\u306arpc\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f7f\u3044\u65b9\u3067\u3057\u305f\u3002\n\u3053\u308c\u306e\u7d9a\u304d\u3067\u3059\uff1ahttp://qiita.com/syuhei/items/70fc971ce7ce40dee439\n\n\u524d\u56de\u306fHello World\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u5206\u6563\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u57fa\u672c\u3068\u306a\u308b\u3001rpc\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\nmyproject_app.erl\u306bhello\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002export\u306b\u8ffd\u52a0\u3059\u308b\u306e\u3082\u5fd8\u308c\u305a\u306b\u3002\n\n```erlang\n-export([start/2, stop/1, hello/1])\n.\n.\n.\n\nhello(Str) ->\n\t\"Hello \"++Str.\n```\n\ntest\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3057\u3001myproject_SUITE.erl\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u30c6\u30b9\u30c8\u3067\u306frunner@{host\u540d}\u304b\u3089cluster_test@{host\u540d}\u306ejoin\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002start_node\u95a2\u6570\u304c\u3001\u65b0\u3057\u304f\u30c6\u30b9\u30c8\u7528\u306e\u30ce\u30fc\u30c9\u3092\u8d77\u52d5\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n\n\n```erlang\n-module(myproject_SUITE).\n\n-compile(export_all).\n\nall() ->\n\t[cluster_test].\n\ninit_per_suite(_Config) ->\n    {ok, Hostname} = inet:gethostname(),\n    case net_kernel:start([list_to_atom(\"runner@\"++Hostname), shortnames]) of\n        {ok, _} -> ok;\n        {error, {already_started, _}} -> ok\n    end,\n    _Config.\n\nend_per_suite(_Config) ->\n    application:stop(lager),\n    _Config.\n\ncluster_test(_Config) ->\n    Node = start_node(cluster_test),\n    R = rpc:call(Node, myproject_app, hello, [\"World\"]),\n    ct:log(\"Result:~p, \", [R]),\n    ct_slave:stop(Node).\n\n\n\n\nstart_node(Name) ->\n    CodePath = lists:filter(fun filelib:is_dir/1, code:get_path()),\n    NodeConfig = [\n            {monitor_master, true},\n            {startup_functions, [\n                    {code, set_path, [CodePath]}\n                    ]}],\n    case ct_slave:start(Name, NodeConfig) of\n        {ok, Node} ->\n\t\t    rpc:call(Node, application, ensure_all_started, [myproject_app]),\n\t\t    Node;\n\t\t{error, already_started, Node} ->\n            ct_slave:stop(Name),\n            start_node(Name);\n\t\t{error, Reason, Node} ->\n\t\t\tio:format(\"error ~p~n\", [Reason])\n\tend.\n\n\n```\n\n\u30c6\u30b9\u30c8\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3061\u307e\u3059\u3002\n\n```\n$ ./rebar3 ct\n===> Running Common Test suites...\n%%% myproject_SUITE ==> cluster_test: OK\nAll 1 tests passed.\n```\n\n\u3061\u306a\u307f\u306b\u30ed\u30b0\u30d5\u30a9\u30eb\u30c0\u306b\u30c6\u30b9\u30c8\u7d50\u679c\u306eHTML\u3082\u3042\u308a\u307e\u3059\u3002```./_build/test/logs/```\n\nrunner@{host\u540d}\u304b\u3089\"World\"\u3092\u9001\u3063\u3066\u3001cluster_test@{host\u540d}\u3067\"Hello \"\u3068\u9023\u7d50\u3059\u3057\u3066\u3001\"Hello World\"\u3092runner@{host\u540d}\u306b\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\n<img width=\"564\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-11 23.17.19.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/20848/8b4c47b2-24d0-8ef9-7041-e0ca7857e3af.png\">\n\n\u4ee5\u4e0a\u3001\u7c21\u5358\u306arpc\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f7f\u3044\u65b9\u3067\u3057\u305f\u3002\n", "tags": ["Erlang"]}