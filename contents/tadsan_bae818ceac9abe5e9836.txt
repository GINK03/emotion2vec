{"context": " More than 1 year has passed since last update.\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306b\u89e6\u308c\u3066\u305f\u3089REPL\u3092\u5b9f\u88c5\u3057\u305f\u304f\u306a\u308b\u3058\u3083\u306a\u3044\u3067\u3059\u304b\u3002\n\nRead-eval-print loop\u306e\u7565\n\u5b57\u306e\u3054\u3068\u304f\u8aad\u3093\u3067\u8a55\u4fa1\u3057\u3066\u8868\u793a\u3057\u3066\u7e70\u308a\u8fd4\u3059\u3002\u5bfe\u8a71\u578b\u8a55\u4fa1\u74b0\u5883\u3092\u6307\u3059\u3002\n\nREPL\u3068\u306f - \u306f\u3066\u306a\u30ad\u30fc\u30ef\u30fc\u30c9\n\u306a\u308b\u307b\u3069\u306d\u3002\n(loop (print (eval (read))))\n\n\u53f3\u304b\u3089\u9806\u306b\u8aad\u3093\u3067\u201cRead-Eval-Print Loop\u201d\u3067\u305f\u3057\u304b\u306bREPL\u3060\u3002\n\n\u3053\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\u3092\u5b9f\u884c\u3057\u3066\u9014\u4e2d\u3067\u505c\u6b62\u3057\u305f\u3044\u3068\u304d\u306fCtrl+D\u3068\u304bCtrl+C\u3067\n\nRuby\u3067\u3084\u3063\u3066\u307f\u3088\u3046\u3002\n% ruby -e'loop{p eval gets}'\n1 + 2 * 3\n7\n\"Pixiv\".downcase\n\"pixiv\"\n\n\u3046\u3093\u3001\u3070\u3063\u3061\u308a\u3060\u306d\u3002\u201cGets-Eval-P Loop\u201d\u3067GEPL\u3060\u3002\nPHP\u3060\u3068\u3061\u3087\u3063\u3068\u9577\u304f\u306a\u308b\u3002\n% php -r'while(1){ $code = sprintf(\"\\$result = %s;\", fgets(STDIN)); eval($code); var_dump($result); }'\n1 + 2 * 3\nint(7)\nstrtolower(\"Pixiv\")\nstring(5) \"pixiv\"\n\n\u201cVardump-Eval-Fgets While\u201d\u3067VEFW\u3060\u3002\u306a\u306b\u304c\u306a\u3093\u3060\u304b\u3002\nPython(2.7)\u3067\u306f\u3069\u3046\u304b\u3002\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3067\u66f8\u304f\u306e\u304c\u305f\u3044\u3078\u3093\u3064\u3089\u3044\u3002\n% python -c \"while True:\n    print(input())\n\"\n1 + 2 * 3\n7\n\"Pixiv\".lower()\npixiv\n\n\u306a\u3093\u3067\u304b\u308f\u304b\u3093\u306a\u3044\u3051\u3069\u3001Python 2\u7cfb\u306einput()\u306feval(raw_input(prompt))\u3068\u540c\u3058\u3067\u3059\u3002\u8ab0\u304c\u5f97\u3059\u308b\u3093\u3060\u308d\u3046\u2026 \u3068\u307f\u3093\u306a\u601d\u3063\u305f\u306e\u304b\u3001Python 3000\u306einput()\u306f2\u7cfb\u306eraw_input()\u3068\u540c\u3058\u3067\u3059\u3002\n\u201cInput-Print While\u201d\u3067IPW\u3060\u3002\u3082\u3057\u304f\u306f\u201cRawinput-Eval-Print-While\u201d\u3067REPW\u304b\uff01\n\n\u6700\u5f8c\u306b\n\u9069\u5f53\u306bLisp\u3067\u306f\u301c \u307f\u305f\u3044\u306a\u3053\u3068\u3092\u66f8\u3044\u305f\u3051\u3069\u3001\u5b9f\u306fCommon Lisp\u3092\u307e\u3068\u3082\u306b\u66f8\u3044\u305f\u3053\u3068\u304c\u306a\u3044\u306e\u3067\u3084\u3063\u3066\u307f\u305f\u3002\n% sbcl\nThis is SBCL 1.2.16, an implementation of ANSI Common Lisp.\nMore information about SBCL is available at <http://www.sbcl.org/>.\n\nSBCL is free software, provided as is, with absolutely no warranty.\nIt is mostly in the public domain; some portions are provided under\nBSD-style licenses.  See the CREDITS and COPYING files in the\ndistribution for more information.\n* (loop (print (eval (read))))\n(+ 1 (* 2 3))\n\n7\ndebugger invoked on a END-OF-FILE in thread\n#<THREAD \"main thread\" RUNNING {1002C74753}>:\n  end of file on #<SB-SYS:FD-STREAM for \"standard input\" {100632C013}>\n\nType HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.\n\nrestarts (invokable by number or by possibly-abbreviated name):\n  0: [ABORT] Exit debugger, returning to top level.\n\n(SB-IMPL::INPUT-CHAR/UTF-8 #<SB-SYS:FD-STREAM for \"standard input\" {100632C013}> T 0)\n0] (string-downcase \"Pixiv\")\n\n\"pixiv\"\n0] ^D\n*\n\n\u3088\u304f\u308f\u304b\u3093\u306a\u3044\u3051\u3069\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d7\u30ed\u30f3\u30d7\u30c8*\u304c\u51fa\u3066\u306a\u3044\u306e\u3067\u52d5\u3044\u3066\u308b\u6c17\u304c\u3057\u305f\u3002(\u3082\u3057\u304b\u3057\u305f\u3089\u52d5\u3044\u3066\u306a\u3044\u306e\u304b\u3082)\n\u3042\u3068Perl\u3092\u52c9\u5f37\u3057\u3066\u307f\u3088\u3046\u304b\u3068\u601d\u3063\u305f\u3051\u3069\u30c7\u30fc\u30bf\u578b\u304c\u3088\u304f\u308f\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u8ae6\u3081\u305f\u3002\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306b\u89e6\u308c\u3066\u305f\u3089REPL\u3092\u5b9f\u88c5\u3057\u305f\u304f\u306a\u308b\u3058\u3083\u306a\u3044\u3067\u3059\u304b\u3002\n\n> Read-eval-print loop\u306e\u7565\n> \u5b57\u306e\u3054\u3068\u304f\u8aad\u3093\u3067\u8a55\u4fa1\u3057\u3066\u8868\u793a\u3057\u3066\u7e70\u308a\u8fd4\u3059\u3002\u5bfe\u8a71\u578b\u8a55\u4fa1\u74b0\u5883\u3092\u6307\u3059\u3002\n\n[REPL\u3068\u306f - \u306f\u3066\u306a\u30ad\u30fc\u30ef\u30fc\u30c9](http://d.hatena.ne.jp/keyword/REPL)\n\n\u306a\u308b\u307b\u3069\u306d\u3002\n\n```lisp\n(loop (print (eval (read))))\n```\n\n\u53f3\u304b\u3089\u9806\u306b\u8aad\u3093\u3067\u201cRead-Eval-Print Loop\u201d\u3067\u305f\u3057\u304b\u306b**REPL**\u3060\u3002\n\n> \u3053\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\u3092\u5b9f\u884c\u3057\u3066\u9014\u4e2d\u3067\u505c\u6b62\u3057\u305f\u3044\u3068\u304d\u306f<kbd>Ctrl+D</kbd>\u3068\u304b<kbd>Ctrl+C</kbd>\u3067\n\nRuby\u3067\u3084\u3063\u3066\u307f\u3088\u3046\u3002\n\n```sh\n% ruby -e'loop{p eval gets}'\n1 + 2 * 3\n7\n\"Pixiv\".downcase\n\"pixiv\"\n```\n\n\u3046\u3093\u3001\u3070\u3063\u3061\u308a\u3060\u306d\u3002\u201cGets-Eval-P Loop\u201d\u3067**GEPL**\u3060\u3002\n\nPHP\u3060\u3068\u3061\u3087\u3063\u3068\u9577\u304f\u306a\u308b\u3002\n\n```sh\n% php -r'while(1){ $code = sprintf(\"\\$result = %s;\", fgets(STDIN)); eval($code); var_dump($result); }'\n1 + 2 * 3\nint(7)\nstrtolower(\"Pixiv\")\nstring(5) \"pixiv\"\n```\n\n\u201cVardump-Eval-Fgets While\u201d\u3067**VEFW**\u3060\u3002\u306a\u306b\u304c\u306a\u3093\u3060\u304b\u3002\n\nPython(2.7)\u3067\u306f\u3069\u3046\u304b\u3002\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3067\u66f8\u304f\u306e\u304c\u305f\u3044\u3078\u3093\u3064\u3089\u3044\u3002\n\n```sh\n% python -c \"while True:\n    print(input())\n\"\n1 + 2 * 3\n7\n\"Pixiv\".lower()\npixiv\n```\n\n\u306a\u3093\u3067\u304b\u308f\u304b\u3093\u306a\u3044\u3051\u3069\u3001Python 2\u7cfb\u306e`input()`\u306f`eval(raw_input(prompt))`\u3068\u540c\u3058\u3067\u3059\u3002\u8ab0\u304c\u5f97\u3059\u308b\u3093\u3060\u308d\u3046\u2026 \u3068\u307f\u3093\u306a\u601d\u3063\u305f\u306e\u304b\u3001Python 3000\u306e`input()`\u306f2\u7cfb\u306e`raw_input()`\u3068\u540c\u3058\u3067\u3059\u3002\n\n\u201cInput-Print While\u201d\u3067**IPW**\u3060\u3002\u3082\u3057\u304f\u306f\u201cRawinput-Eval-Print-While\u201d\u3067**REPW**\u304b\uff01\n\n## \u6700\u5f8c\u306b\n\n\u9069\u5f53\u306bLisp\u3067\u306f\u301c \u307f\u305f\u3044\u306a\u3053\u3068\u3092\u66f8\u3044\u305f\u3051\u3069\u3001\u5b9f\u306fCommon Lisp\u3092\u307e\u3068\u3082\u306b\u66f8\u3044\u305f\u3053\u3068\u304c\u306a\u3044\u306e\u3067\u3084\u3063\u3066\u307f\u305f\u3002\n\n```lisp\n% sbcl\nThis is SBCL 1.2.16, an implementation of ANSI Common Lisp.\nMore information about SBCL is available at <http://www.sbcl.org/>.\n\nSBCL is free software, provided as is, with absolutely no warranty.\nIt is mostly in the public domain; some portions are provided under\nBSD-style licenses.  See the CREDITS and COPYING files in the\ndistribution for more information.\n* (loop (print (eval (read))))\n(+ 1 (* 2 3))\n\n7\ndebugger invoked on a END-OF-FILE in thread\n#<THREAD \"main thread\" RUNNING {1002C74753}>:\n  end of file on #<SB-SYS:FD-STREAM for \"standard input\" {100632C013}>\n\nType HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.\n\nrestarts (invokable by number or by possibly-abbreviated name):\n  0: [ABORT] Exit debugger, returning to top level.\n\n(SB-IMPL::INPUT-CHAR/UTF-8 #<SB-SYS:FD-STREAM for \"standard input\" {100632C013}> T 0)\n0] (string-downcase \"Pixiv\")\n\n\"pixiv\"\n0] ^D\n*\n```\n\n\u3088\u304f\u308f\u304b\u3093\u306a\u3044\u3051\u3069\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d7\u30ed\u30f3\u30d7\u30c8`*`\u304c\u51fa\u3066\u306a\u3044\u306e\u3067\u52d5\u3044\u3066\u308b\u6c17\u304c\u3057\u305f\u3002(\u3082\u3057\u304b\u3057\u305f\u3089\u52d5\u3044\u3066\u306a\u3044\u306e\u304b\u3082)\n\n\u3042\u3068Perl\u3092\u52c9\u5f37\u3057\u3066\u307f\u3088\u3046\u304b\u3068\u601d\u3063\u305f\u3051\u3069\u30c7\u30fc\u30bf\u578b\u304c\u3088\u304f\u308f\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u8ae6\u3081\u305f\u3002\n", "tags": ["REPL", "PHP", "Python", "Ruby", "lisp"]}