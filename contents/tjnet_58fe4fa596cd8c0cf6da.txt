{"context": " More than 1 year has passed since last update.\n\n \u6982\u8981\nGem\u306e\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u3001\u5e83\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u9ad8\u54c1\u8cea\u306a\u30b3\u30fc\u30c9\u304b\u3089\u30c6\u30af\u30cb\u30c3\u30af\u3084\u5b9a\u77f3\u3092\u5b66\u3093\u3067\u3044\u304d\u307e\u3059\u3002\n\n \u306f\u3058\u3081\u306b\n\u3044\u304d\u306a\u308aRails\u3068\u304bRspec\u3092\u8aad\u307f\u306b\u3044\u304f\u306e\u3082\u30c4\u30e9\u305d\u3046\u306a\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u521d\u5fc3\u8005\u5411\u3051\u3068\u30a6\u30ef\u30b5\u306esettingslogic\u3092\u8aad\u3093\u3067\u3044\u304f\u3053\u3068\u306b\u3057\u307e\u3059\u3002Gem\u3092\u8aad\u3080\u969b\u306e\u96e3\u6613\u5ea6\u306e\u76ee\u5b89\u3068\u3057\u3066\u306f\u3001 \u521d\u3081\u3066\u306eGem\u306e\u8aad\u307f\u65b9\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f.  \n\u79c1\u81ea\u8eab\u306f\u3001\u3044\u304f\u3064\u304b\u306eOSS\u3067\u3001\u653e\u7f6e\u3055\u308c\u3066\u3044\u308bissue(\u30c6\u30b9\u30c8\u3084\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3)\u3092\u304a\u7247\u4ed8\u3051\u3057\u305f\u3053\u3068\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u666e\u6bb5\u3001\u305d\u3093\u306a\u306bOSS\u306b\u30ac\u30c3\u30c4\u30eacommit\u3057\u3066\u3044\u308b\u8a33\u3067\u3082\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u3093\u306a\u79c1\u306b\u3068\u3063\u3066\u3001\n\n\u30e1\u30bd\u30c3\u30c9\u306e\u547d\u540d\u898f\u5247\n\u30e1\u30e2\u5316\u3001method chain\u306e\u5b9f\u73fe\u65b9\u6cd5\n\u30b3\u30e1\u30f3\u30c8\u306e\u66f8\u304d\u65b9\n\n\u306a\u3069\u3001Ruby\u306e\u304a\u4f5c\u6cd5\u3092\u5b66\u3076\u984c\u6750\u3068\u3057\u3066\u3001\u307e\u305fOSS\u306e\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u304d\u3063\u304b\u3051\u3068\u3057\u3066\u3001\u975e\u5e38\u306b\u826f\u3044\u984c\u6750\u3060\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\n version\n2.0.9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n settingslogic\u306e\u4f7f\u3044\u65b9\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u524d\u306b\u3001Settingslogic\u306e\u4f7f\u3044\u65b9\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n\u307e\u305a\u306f\u3001\u7ba1\u7406\u3059\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092YAML\u5f62\u5f0f\u3067\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\nsettings.yml\nlanguage:\n  haskell:\n    paradigm: functional\n  smalltalk:\n    paradigm: object oriented\n\n\n\n\u8a2d\u5b9a\u5185\u5bb9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\n\u6b21\u306b\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\nsettings.rb\nclass Settings < Settingslogic\n  source \"#{File.dirname(__FILE__)}/settings.yml\"\nend\n\n\n\n\u8a2d\u5b9a\u5185\u5bb9\u306b\u30a2\u30af\u30bb\u30b9\n\u8a2d\u5b9a\u5185\u5bb9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n>Settings.language.haskell.paradigm\n=> 'functional'\n\n\n\u305f\u3060\u306eHash\u3088\u308a\u3082\u3001\u6271\u3044\u3084\u3059\u3044\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u8a2d\u5b9a\u5185\u5bb9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3069\u3046\u3057\u3066\u3001\u3053\u3093\u306a\u4e8b\u304c\u53ef\u80fd\u306b\u306a\u308b\u306e\u3067\u3057\u3087\u3046\u304b?\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306e\u88cf\u5074\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u4eca\u56de\u306e\u30b4\u30fc\u30eb\u3067\u3059\u3002\n\n \u69cb\u6210\n\u3053\u3053\u306f\u3001\u8efd\u304f\u773a\u3081\u308b\u304f\u3089\u3044\u3067\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n$ tree -L 2                                                                                 .\n\u251c\u2500\u2500 Gemfile\n\u251c\u2500\u2500 Gemfile.lock\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.rdoc\n\u251c\u2500\u2500 Rakefile\n\u251c\u2500\u2500 lib\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 settingslogic.rb\n\u251c\u2500\u2500 settingslogic.gemspec\n\u251c\u2500\u2500 spec\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings.rb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings.yml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings2.rb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings3.rb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings4.rb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings_empty.rb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings_empty.yml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settingslogic_spec.rb\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 spec_helper.rb\n\u2514\u2500\u2500 vendor\n    \u2514\u2500\u2500 bundle\n\n\n \u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u8a2d\u5b9a\n\u307e\u305a\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb(YAML)\u306e\u30d1\u30b9\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u3044\u308b\u90e8\u5206\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u307f\u3066\u307f\u307e\u3059\u3002\n\nsettings.rb\nclass Settings < Settingslogic\n  source \"#{File.dirname(__FILE__)}/settings.yml\"\nend\n\nclass SettingsInst < Settingslogic\nend\n\n\n\nsettingslogic.rb\ndef source(value = nil)\n  @source ||= value\nend\n\n\nsource\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u3001@source\u306bYAML\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\n@source\u306f\u30e1\u30e2\u5316\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u3053\u306e\u8fba\u306f\u8aad\u307f\u3084\u3059\u3044\u3067\u3059\u306d\u3002\n\n\u5358\u306a\u308bHash\u3088\u308a\u3082\u6271\u3044\u3084\u3059\u3044\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u8a2d\u5b9a\u5185\u5bb9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\n\u3067\u306f\u3001\u3044\u3088\u3044\u3088\u672c\u984c\u306e\u90e8\u5206\u306e\u51e6\u7406\u3092\u307f\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\nSettings.language\u30e1\u30bd\u30c3\u30c9\u304c\u6307\u5b9a\u3055\u308c\u3001method_missing\u306b\u51e6\u7406\u304c\u79fb\u308b\u3002\nSettings.language.haskell.paradigm\n>> 'functional'\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u3001\u5b9f\u969b\u306b\u306fSettings.language\u30e1\u30bd\u30c3\u30c9\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u3001method_missing\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\nmethod_missing\u306e\u5f15\u6570\u3067\u3042\u308bname\u306b\u306f:language\u304c\u6e21\u3055\u308c\u307e\u3059\u3002\ndef method_missing(name, *args, &block)\n  instance.send(name, *args, &block)\nend\n\n\u6b21\u306finstance\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nYAML\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3055\u308c\u305f\u5185\u5bb9\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\ninstance\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u3001Settings\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3066\u8fd4\u5374\u3057\u307e\u3059\u3002\ndef instance\n  return @instance if @instance\n  @instance = new\n  create_accessors!\n  @instance\nend\n\ninitialize\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u8eab\u3082\u5c11\u3057\u306e\u305e\u3044\u3066\u307f\u307e\u3059\u3002\n  def initialize(hash_or_file = self.class.source, section = nil)\n    #puts \"new! #{hash_or_file}\"\n    case hash_or_file\n    when nil\n      raise Errno::ENOENT, \"No file specified as Settingslogic source\"\n    when Hash\n      self.replace hash_or_file\n    else\n      file_contents = open(hash_or_file).read\n      hash = file_contents.empty? ? {} : YAML.load(ERB.new(file_contents).result).to_hash # (1)\n      if self.class.namespace\n        hash = hash[self.class.namespace] or return missing_key(\"Missing setting '#{self.class.namespace}' in #{hash_or_file}\")\n      end\n      self.replace hash # (2)\n    end\n    @section = section || self.class.source  # so end of error says \"in application.yml\"\n    create_accessors!\n  end\n\n\u6ce8\u76ee\u3059\u308b\u306e\u306f (1) \u3068 (2) \u306e\u90e8\u5206\u3067\u3059\u3002\n(1)\u3067\u306f\u3001YAML\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3057\u305f\u5185\u5bb9\u3092hash\u306b\u5909\u63db\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066 (2) \u3067\u306fself\u306e\u5185\u5bb9\u3092hash\u3067\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\u3053\u306e\u3068\u304d\u3001self\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3001\u3053\u3046\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n{\n   \"language\"=>{\n     \"haskell\"=>{\"paradigm\"=>\"functional\"},\n     \"smalltalk\"=>{\"paradigm\"=>\"object oriented\"}\n   }\n}\n\n\u4eca\u5ea6\u306f\u3001initializer\u306e\u4e2d\u3067\u547c\u3070\u308c\u3066\u3044\u308bcreate_accessors!\u3092\u8a73\u3057\u304f\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u52d5\u7684\u306b\u30a2\u30af\u30bb\u30b5\u3092\u4f5c\u6210\n\u3053\u306ecreate_accessors!\u30e1\u30bd\u30c3\u30c9\u3067\u3001\u52d5\u7684\u306b\u30a2\u30af\u30bb\u30b5\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\ndef create_accessors!\n  self.each do |key,val|\n    create_accessor_for(key)\n  end\nend\n\nself\u306e\u5b9f\u4f53\u306f\u3001\u3053\u3093\u306aHash\u3067\u3057\u305f\u3002\n{\n   \"language\"=>{\n     \"haskell\"=>{\"paradigm\"=>\"functional\"},\n     \"smalltalk\"=>{\"paradigm\"=>\"object oriented\"}\n   }\n}\n\n\u3067\u3059\u304b\u3089\u3001create_accessors!\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306ekey\u306b\u306f\"language\"\u304c\u6e21\u3055\u308c\u307e\u3059\u3002\n\u51e6\u7406\u5185\u5bb9\u3092\u7406\u89e3\u3059\u308b\u4e0a\u3067\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u6700\u3082\u91cd\u8981\u306a\u90e8\u5206\u3067\u3059\u3002\n  def create_accessor_for(key, val=nil)\n    return unless key.to_s =~ /^\\w+$/  # could have \"some-setting:\" which blows up eval\n    instance_variable_set(\"@#{key}\", val)\n    self.class.class_eval <<-EndEval\n      def #{key}\n        return @#{key} if @#{key}\n        return missing_key(\"Missing setting '#{key}' in #{@section}\") unless has_key? '#{key}'\n        value = fetch('#{key}') # (3)\n        @#{key} = if value.is_a?(Hash)\n          self.class.new(value, \"'#{key}' section in #{@section}\") # (4)\n        elsif value.is_a?(Array) && value.all?{|v| v.is_a? Hash}\n          value.map{|v| self.class.new(v)}\n        else\n          value # (5)\n        end\n      end\n    EndEval\n  end\n\n\u7740\u76ee\u3059\u3079\u304d\u306fclass_eval\u306e\u90e8\u5206\u3067\u3059\u3002class_eval\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u5b9a\u7fa9\u3092\u52d5\u7684\u306b\u884c\u3063\u3066\u3044\u307e\u3059\u3002\u5f15\u6570key\u306b'language'\u3092\u5f53\u3066\u306f\u3081\u3066\u8003\u3048\u308b\u3068\u3001\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n    self.class.class_eval <<-EndEval\n      def language\n        return @language if @language\n        return missing_key(\"Missing setting 'language' in #{@section}\") unless has_key? 'language'\n        value = fetch('language')\n        @lanugage = if value.is_a?(Hash)\n          self.class.new(value, \"'language' section in #{@section}\")\n        elsif value.is_a?(Array) && value.all?{|v| v.is_a? Hash}\n          value.map{|v| self.class.new(v)}\n        else\n          value\n        end\n      end\n    EndEval\n\nSettings.language\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001 (3)  \u306e\u5b9f\u884c\u7d50\u679c\u3068\u3057\u3066\u3001value\u306e\u4e2d\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u3067language\u914d\u4e0b\u306e\u60c5\u5831\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\n{\"haskell\"=>{\"paradigm\"=>\"functional\"}, \"smalltalk\"=>{\"paradigm\"=>\"object oriented\"}}\n\u3053\u308c\u306fHash\u3067\u3059\u304b\u3089\u3001 (4) \u304c\u5b9f\u884c\u3055\u308c\u3001\u518d\u3073initialize\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3001\u305d\u306e\u7d50\u679c\u4f5c\u6210\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u91cd\u8981\u306a\u3053\u3068\u306f\u3001initialize\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u306f\u3001\u518d\u3073Hash\u306ekey(\u3053\u3053\u3067\u306f\"haskell\"\u3068\"smalltalk\")\u3092\u5143\u306b\u30a2\u30af\u30bb\u30b5\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u5f93\u3063\u3066\u3001Settings.language\u3067\u8fd4\u5374\u3055\u308c\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306f haskell, smalltalk\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n>Settings.language.methods\n=>[\n(\u7565)\n:haskell,\n:smalltalk,\n:method_missing,\n\n\u3061\u3083\u3093\u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\u305d\u3057\u3066\u3001\nSettings.language.haskell \u304c\u8fd4\u3059\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001{\"paradigm\"=>\"functional\"} \u3092\u5143\u306b\u751f\u6210\u3057\u307e\u3059\u306e\u3067\u3001\u307e\u305f\u307e\u305fparadigm\u30e1\u30bd\u30c3\u30c9\u304c\u52d5\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001Settings.language.haskell.paradigm \u3092\u547c\u3076\u3068\u3001\u4eca\u5ea6\u306f (5) \u306e\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3001\n>Settings.language.haskell.paradigm\n=> 'functional'\n\n\u3068\u3044\u3046\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n\n \u7dcf\u62ec\nHash\u3068class_eval\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001YAML\u3067\u8a18\u8ff0\u3057\u305f\u8a2d\u5b9a\u5185\u5bb9\u306b\u5bfe\u3057\u3066\u3001\u3088\u308a\u6271\u3044\u3084\u3059\u3044\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u3068\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u9593\u9055\u3044\u306a\u3069\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u3001\u3054\u6307\u6458\u304f\u3060\u3055\u3044  \n\u8efd\u3044\u6c17\u6301\u3061\u3067\u59cb\u3081\u3066\u307f\u305fGem\u306e\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u3059\u304c\u3001\u3053\u308c\u304b\u3089\u3082\u6642\u9593\u3092\u898b\u3064\u3051\u3066\u6295\u7a3f\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n \u53c2\u7167\n\nReading the Source of Ruby on Rails \u2022 Zack Hubert\n\u521d\u3081\u3066\u306eGem\u306e\u8aad\u307f\u65b9\n\nCracking Gems: Reading Ruby Code\n\u958b\u767a\u74b0\u5883 - pry\u3092\u4f7f\u3063\u305f\u5feb\u9069\u306aRuby\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0&\u958b\u767a\u65b9\u6cd5 - Qiita\n\n\u592a\u4e00\u306e\u30b3\u30fc\u30c9\u306e\u8aad\u307f\u65b9\u30e1\u30e2\nsinatra\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0 - tobi-c\u306e\u65e5\u8a18\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30fb\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u3088\u3046\uff01[GemJam][ActiveSupport] - \u9152\u3068\u6cea\u3068Ruby\u3068Rails\u3068\nsendagaya.rb #101 \u3067ActionDispatch\u3092\u8aad\u3093\u3067\u307f\u305f - fukajun - \u50d5\u306fvim\u3067\u884c\u304d\u307e\u3059 -\n\n## <i class=\"fa fa-cubes\" style=\"font-size:1em;\"></i> \u6982\u8981\n\nGem\u306e\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u3001\u5e83\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u9ad8\u54c1\u8cea\u306a\u30b3\u30fc\u30c9\u304b\u3089\u30c6\u30af\u30cb\u30c3\u30af\u3084\u5b9a\u77f3\u3092\u5b66\u3093\u3067\u3044\u304d\u307e\u3059\u3002\n\n## <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> \u306f\u3058\u3081\u306b\n\n\u3044\u304d\u306a\u308aRails\u3068\u304bRspec\u3092\u8aad\u307f\u306b\u3044\u304f\u306e\u3082\u30c4\u30e9\u305d\u3046\u306a\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u521d\u5fc3\u8005\u5411\u3051\u3068\u30a6\u30ef\u30b5\u306e[settingslogic](https://github.com/binarylogic/settingslogic)\u3092\u8aad\u3093\u3067\u3044\u304f\u3053\u3068\u306b\u3057\u307e\u3059\u3002Gem\u3092\u8aad\u3080\u969b\u306e\u96e3\u6613\u5ea6\u306e\u76ee\u5b89\u3068\u3057\u3066\u306f\u3001 [\u521d\u3081\u3066\u306eGem\u306e\u8aad\u307f\u65b9](http://www.slideshare.net/babatakao/gem-release)\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f. :bow: \n\n\u79c1\u81ea\u8eab\u306f\u3001\u3044\u304f\u3064\u304b\u306eOSS\u3067\u3001\u653e\u7f6e\u3055\u308c\u3066\u3044\u308bissue(\u30c6\u30b9\u30c8\u3084\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3)\u3092\u304a\u7247\u4ed8\u3051\u3057\u305f\u3053\u3068\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u666e\u6bb5\u3001\u305d\u3093\u306a\u306bOSS\u306b\u30ac\u30c3\u30c4\u30eacommit\u3057\u3066\u3044\u308b\u8a33\u3067\u3082\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u3093\u306a\u79c1\u306b\u3068\u3063\u3066\u3001\n\n- \u30e1\u30bd\u30c3\u30c9\u306e\u547d\u540d\u898f\u5247\n- \u30e1\u30e2\u5316\u3001method chain\u306e\u5b9f\u73fe\u65b9\u6cd5\b\n- \u30b3\u30e1\u30f3\u30c8\u306e\u66f8\u304d\u65b9\n\n\u306a\u3069\u3001Ruby\u306e\u304a\u4f5c\u6cd5\u3092\u5b66\u3076\u984c\u6750\u3068\u3057\u3066\u3001\u307e\u305fOSS\u306e\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u304d\u3063\u304b\u3051\u3068\u3057\u3066\u3001\u975e\u5e38\u306b\u826f\u3044\u984c\u6750\u3060\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\n## <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> version\n\n2.0.9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n## <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> settingslogic\u306e\u4f7f\u3044\u65b9\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u524d\u306b\u3001Settingslogic\u306e\u4f7f\u3044\u65b9\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n### \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n\n\u307e\u305a\u306f\u3001\u7ba1\u7406\u3059\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092YAML\u5f62\u5f0f\u3067\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```settings.yml\nlanguage:\n  haskell:\n    paradigm: functional\n  smalltalk:\n    paradigm: object oriented\n```\n\n### \u8a2d\u5b9a\u5185\u5bb9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\n\n\u6b21\u306b\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```settings.rb\nclass Settings < Settingslogic\n  source \"#{File.dirname(__FILE__)}/settings.yml\"\nend\n```\n\n### \u8a2d\u5b9a\u5185\u5bb9\u306b\u30a2\u30af\u30bb\u30b9\n\n\u8a2d\u5b9a\u5185\u5bb9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```\n>Settings.language.haskell.paradigm\n=> 'functional'\n\n```\n\n\u305f\u3060\u306eHash\u3088\u308a\u3082\u3001\u6271\u3044\u3084\u3059\u3044\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u8a2d\u5b9a\u5185\u5bb9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3069\u3046\u3057\u3066\u3001\u3053\u3093\u306a\u4e8b\u304c\u53ef\u80fd\u306b\u306a\u308b\u306e\u3067\u3057\u3087\u3046\u304b?\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306e\u88cf\u5074\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u4eca\u56de\u306e\u30b4\u30fc\u30eb\u3067\u3059\u3002\n\n\n## <i class=\"fa fa-tree\" style=\"font-size:1em;\"></i> \u69cb\u6210\n\n\u3053\u3053\u306f\u3001\u8efd\u304f\u773a\u3081\u308b\u304f\u3089\u3044\u3067\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n~~~zsh\n\n$ tree -L 2                                                                                 .\n\u251c\u2500\u2500 Gemfile\n\u251c\u2500\u2500 Gemfile.lock\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.rdoc\n\u251c\u2500\u2500 Rakefile\n\u251c\u2500\u2500 lib\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 settingslogic.rb\n\u251c\u2500\u2500 settingslogic.gemspec\n\u251c\u2500\u2500 spec\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings.rb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings.yml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings2.rb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings3.rb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings4.rb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings_empty.rb\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settings_empty.yml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 settingslogic_spec.rb\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 spec_helper.rb\n\u2514\u2500\u2500 vendor\n    \u2514\u2500\u2500 bundle\n~~~\n\n## <i class=\"fa fa-cubes\" style=\"font-size:1em;\"></i> \u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0 \n\n### \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u8a2d\u5b9a\n\n\u307e\u305a\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb(YAML)\u306e\u30d1\u30b9\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u3044\u308b\u90e8\u5206\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u307f\u3066\u307f\u307e\u3059\u3002\n\n```settings.rb\nclass Settings < Settingslogic\n  source \"#{File.dirname(__FILE__)}/settings.yml\"\nend\n\nclass SettingsInst < Settingslogic\nend\n```\n\n```settingslogic.rb\ndef source(value = nil)\n  @source ||= value\nend\n```    \n \nsource\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u3001``@source``\u306bYAML\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\n``@source``\u306f\u30e1\u30e2\u5316\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u3053\u306e\u8fba\u306f\u8aad\u307f\u3084\u3059\u3044\u3067\u3059\u306d\u3002\n\n\n### \u5358\u306a\u308bHash\u3088\u308a\u3082\u6271\u3044\u3084\u3059\u3044\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u8a2d\u5b9a\u5185\u5bb9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\n\n\u3067\u306f\u3001\u3044\u3088\u3044\u3088\u672c\u984c\u306e\u90e8\u5206\u306e\u51e6\u7406\u3092\u307f\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\n#### Settings.language\u30e1\u30bd\u30c3\u30c9\u304c\u6307\u5b9a\u3055\u308c\u3001method_missing\u306b\u51e6\u7406\u304c\u79fb\u308b\u3002\n\n```\nSettings.language.haskell.paradigm\n>> 'functional'\n```\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u3001\u5b9f\u969b\u306b\u306fSettings.language\u30e1\u30bd\u30c3\u30c9\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u3001method_missing\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\nmethod_missing\u306e\u5f15\u6570\u3067\u3042\u308bname\u306b\u306f``:language``\u304c\u6e21\u3055\u308c\u307e\u3059\u3002\n\n\n```\ndef method_missing(name, *args, &block)\n  instance.send(name, *args, &block)\nend\n```\n\n\u6b21\u306finstance\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n#### YAML\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3055\u308c\u305f\u5185\u5bb9\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\n\ninstance\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u3001Settings\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3066\u8fd4\u5374\u3057\u307e\u3059\u3002\n\n```\ndef instance\n  return @instance if @instance\n  @instance = new\n  create_accessors!\n  @instance\nend\n```\n\ninitialize\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u8eab\u3082\u5c11\u3057\u306e\u305e\u3044\u3066\u307f\u307e\u3059\u3002\n\n```\n  def initialize(hash_or_file = self.class.source, section = nil)\n    #puts \"new! #{hash_or_file}\"\n    case hash_or_file\n    when nil\n      raise Errno::ENOENT, \"No file specified as Settingslogic source\"\n    when Hash\n      self.replace hash_or_file\n    else\n      file_contents = open(hash_or_file).read\n      hash = file_contents.empty? ? {} : YAML.load(ERB.new(file_contents).result).to_hash # (1)\n      if self.class.namespace\n        hash = hash[self.class.namespace] or return missing_key(\"Missing setting '#{self.class.namespace}' in #{hash_or_file}\")\n      end\n      self.replace hash # (2)\n    end\n    @section = section || self.class.source  # so end of error says \"in application.yml\"\n    create_accessors!\n  end\n```  \n\n\n\u6ce8\u76ee\u3059\u308b\u306e\u306f __(1)__ \u3068 __(2)__ \u306e\u90e8\u5206\u3067\u3059\u3002\n__(1)__\u3067\u306f\u3001YAML\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3057\u305f\u5185\u5bb9\u3092hash\u306b\u5909\u63db\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066 __(2)__ \u3067\u306fself\u306e\u5185\u5bb9\u3092hash\u3067\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n\u3053\u306e\u3068\u304d\u3001self\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3001\u3053\u3046\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n``` \n{\n   \"language\"=>{\n     \"haskell\"=>{\"paradigm\"=>\"functional\"},\n     \"smalltalk\"=>{\"paradigm\"=>\"object oriented\"}\n   }\n}\n```\n\n\u4eca\u5ea6\u306f\u3001initializer\u306e\u4e2d\u3067\u547c\u3070\u308c\u3066\u3044\u308bcreate_accessors!\u3092\u8a73\u3057\u304f\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n\n#### \u52d5\u7684\u306b\u30a2\u30af\u30bb\u30b5\u3092\u4f5c\u6210\n\n\u3053\u306ecreate_accessors!\u30e1\u30bd\u30c3\u30c9\u3067\u3001\u52d5\u7684\u306b\u30a2\u30af\u30bb\u30b5\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n```\ndef create_accessors!\n  self.each do |key,val|\n    create_accessor_for(key)\n  end\nend\n```\n\nself\u306e\u5b9f\u4f53\u306f\u3001\u3053\u3093\u306aHash\u3067\u3057\u305f\u3002\n\n``` \n{\n   \"language\"=>{\n     \"haskell\"=>{\"paradigm\"=>\"functional\"},\n     \"smalltalk\"=>{\"paradigm\"=>\"object oriented\"}\n   }\n}\n```\n\n\u3067\u3059\u304b\u3089\u3001create_accessors!\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306ekey\u306b\u306f`\"language\"`\u304c\u6e21\u3055\u308c\u307e\u3059\u3002\n\n\u51e6\u7406\u5185\u5bb9\u3092\u7406\u89e3\u3059\u308b\u4e0a\u3067\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u6700\u3082\u91cd\u8981\u306a\u90e8\u5206\u3067\u3059\u3002\n\n```\n  def create_accessor_for(key, val=nil)\n    return unless key.to_s =~ /^\\w+$/  # could have \"some-setting:\" which blows up eval\n    instance_variable_set(\"@#{key}\", val)\n    self.class.class_eval <<-EndEval\n      def #{key}\n        return @#{key} if @#{key}\n        return missing_key(\"Missing setting '#{key}' in #{@section}\") unless has_key? '#{key}'\n        value = fetch('#{key}') # (3)\n        @#{key} = if value.is_a?(Hash)\n          self.class.new(value, \"'#{key}' section in #{@section}\") # (4)\n        elsif value.is_a?(Array) && value.all?{|v| v.is_a? Hash}\n          value.map{|v| self.class.new(v)}\n        else\n          value # (5)\n        end\n      end\n    EndEval\n  end\n```\n        \n\u7740\u76ee\u3059\u3079\u304d\u306fclass_eval\u306e\u90e8\u5206\u3067\u3059\u3002class_eval\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u5b9a\u7fa9\u3092\u52d5\u7684\u306b\u884c\u3063\u3066\u3044\u307e\u3059\u3002\u5f15\u6570key\u306b'language'\u3092\u5f53\u3066\u306f\u3081\u3066\u8003\u3048\u308b\u3068\u3001\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n\n```\n    self.class.class_eval <<-EndEval\n      def language\n        return @language if @language\n        return missing_key(\"Missing setting 'language' in #{@section}\") unless has_key? 'language'\n        value = fetch('language')\n        @lanugage = if value.is_a?(Hash)\n          self.class.new(value, \"'language' section in #{@section}\")\n        elsif value.is_a?(Array) && value.all?{|v| v.is_a? Hash}\n          value.map{|v| self.class.new(v)}\n        else\n          value\n        end\n      end\n    EndEval\n```\n\nSettings.language\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001 __(3)__  \u306e\u5b9f\u884c\u7d50\u679c\u3068\u3057\u3066\u3001value\u306e\u4e2d\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u3067language\u914d\u4e0b\u306e\u60c5\u5831\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\n\n``{\"haskell\"=>{\"paradigm\"=>\"functional\"}, \"smalltalk\"=>{\"paradigm\"=>\"object oriented\"}}``\n\n\n\u3053\u308c\u306fHash\u3067\u3059\u304b\u3089\u3001 __(4)__ \u304c\u5b9f\u884c\u3055\u308c\u3001\u518d\u3073initialize\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3001\u305d\u306e\u7d50\u679c\u4f5c\u6210\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u91cd\u8981\u306a\u3053\u3068\u306f\u3001initialize\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u306f\u3001\u518d\u3073Hash\u306ekey(\u3053\u3053\u3067\u306f\"haskell\"\u3068\"smalltalk\")\u3092\u5143\u306b\u30a2\u30af\u30bb\u30b5\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u5f93\u3063\u3066\u3001Settings.language\u3067\u8fd4\u5374\u3055\u308c\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306f ``haskell``, ``smalltalk``\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```\n>Settings.language.methods\n=>[\n(\u7565)\n:haskell,\n:smalltalk,\n:method_missing,\n```\n\n\u3061\u3083\u3093\u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\u305d\u3057\u3066\u3001\n``Settings.language.haskell`` \u304c\u8fd4\u3059\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001``{\"paradigm\"=>\"functional\"}`` \u3092\u5143\u306b\u751f\u6210\u3057\u307e\u3059\u306e\u3067\u3001\u307e\u305f\u307e\u305fparadigm\u30e1\u30bd\u30c3\u30c9\u304c\u52d5\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001``Settings.language.haskell.paradigm`` \u3092\u547c\u3076\u3068\u3001\u4eca\u5ea6\u306f __(5)__ \u306e\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3001\n\n```\n>Settings.language.haskell.paradigm\n=> 'functional'\n```\n\n\u3068\u3044\u3046\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n## <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> \u7dcf\u62ec\n\nHash\u3068class_eval\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001YAML\u3067\u8a18\u8ff0\u3057\u305f\u8a2d\u5b9a\u5185\u5bb9\u306b\u5bfe\u3057\u3066\u3001\u3088\u308a\u6271\u3044\u3084\u3059\u3044\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u3068\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u9593\u9055\u3044\u306a\u3069\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u3001\u3054\u6307\u6458\u304f\u3060\u3055\u3044 :bow: \n\n\u8efd\u3044\u6c17\u6301\u3061\u3067\u59cb\u3081\u3066\u307f\u305fGem\u306e\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u3059\u304c\u3001\u3053\u308c\u304b\u3089\u3082\u6642\u9593\u3092\u898b\u3064\u3051\u3066\u6295\u7a3f\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## <i class=\"fa fa-arrow-circle-right\" style=\"font-size:1em;\"></i> \u53c2\u7167\n\n- [Reading the Source of Ruby on Rails \u2022 Zack Hubert](http://www.zhubert.com/blog/2013/05/11/reading-the-source-of-ruby-on-rails/)\n- [\u521d\u3081\u3066\u306eGem\u306e\u8aad\u307f\u65b9](http://www.slideshare.net/babatakao/gem-release)\n- [Cracking Gems: Reading Ruby Code](http://www.sitepoint.com/cracking-gems-reading-ruby-code/)\n[\u958b\u767a\u74b0\u5883 - pry\u3092\u4f7f\u3063\u305f\u5feb\u9069\u306aRuby\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0&\u958b\u767a\u65b9\u6cd5 - Qiita](http://qiita.com/yaotti/items/b7b1a304815addf150b2)\n- [\u592a\u4e00\u306e\u30b3\u30fc\u30c9\u306e\u8aad\u307f\u65b9\u30e1\u30e2](https://gist.github.com/taichi/2693387)\n- [sinatra\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0 - tobi-c\u306e\u65e5\u8a18](http://d.hatena.ne.jp/tobi-c/20110604/1307235117)\n\n- [\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30fb\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u3088\u3046\uff01[GemJam][ActiveSupport] - \u9152\u3068\u6cea\u3068Ruby\u3068Rails\u3068](http://morizyun.github.io/blog/library-source-code-reading-acctive-support/)\n- [sendagaya.rb #101 \u3067ActionDispatch\u3092\u8aad\u3093\u3067\u307f\u305f - fukajun - \u50d5\u306fvim\u3067\u884c\u304d\u307e\u3059 -](http://fukajun.org/61)\n", "tags": ["Ruby", "Gem", "\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0", "codereading", "Rails"]}