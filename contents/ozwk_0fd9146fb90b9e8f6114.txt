{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nFPGA\u3067\u4f55\u304b\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u3089HDL\u3092\u89e6\u308b\u3053\u3068\u306b\u5927\u62b5\u306a\u308b\u306e\u3060\u304c\u3001\n\u4e3b\u6d41\u306e\u3072\u3068\u3064\u3001VHDL\u306f\u3072\u305f\u3059\u3089\u5197\u9577\u3067\u3001\u3082\u3046\u3072\u3068\u3064\u306eVerilog\u306f\u6a5f\u80fd\u304c\u8ca7\u5f31\u3067\u3042\u308b\u3002\nSystemVerilog\u306f\u306a\u304b\u306a\u304b\u7d20\u6674\u3089\u3057\u3044\u304c\u3001\u3042\u307e\u308a\u8ad6\u7406\u5408\u6210\u30c4\u30fc\u30eb\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u9078\u629e\u80a2\u306fVHDL/Verilog\u306e\u4e8c\u629e\u3067\u3042\u308b\u3002\n\u3053\u3093\u306a\u72b6\u6cc1\u306b\u6211\u6162\u3067\u304d\u308b\u3088\u3046\u306a\u4eba\u304c\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u3044\u308b\u308f\u3051\u3082\u306a\u304f\u3001\n\u300c\u8ad6\u7406\u5408\u6210\u30c4\u30fc\u30eb\u304cVHDL/Verilog\u306b\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u306a\u3089\u3001\n\u4f55\u304b\u7d20\u6674\u3089\u3057\u3044\u8a00\u8a9e\u3067\u4e00\u65e6\u66f8\u3044\u3066\u3001\u305d\u308c\u3092Verilog/VHDL\u306b\u30b3\u30f3\u30d0\u30fc\u30c8\u3059\u308c\u3070\u3044\u3044\u3058\u3083\u306a\u3044\u300d\n\u3068\u8003\u3048\u305f\u4eba\u304c\u4f55\u4eba\u3082\u3044\u3066\u3001\u601d\u3044\u601d\u3044\u306b\u300c\u7d20\u6674\u3089\u3057\u3044\u8a00\u8a9e\u300d\u3092\u4f5c\u3063\u305f\u3002\n\u305d\u3093\u306a\u8a00\u8a9e\u306e\u3046\u3061\u306e\u3072\u3068\u3064\u3001Scala\u306eDSL\u3067\u3042\u308bChisel\u3092\u3061\u3087\u3063\u3068\u89e6\u3063\u3066\u307f\u305f\u3002\u305d\u306e\u30e1\u30e2\u3002\nHDL\u306f\u3056\u3063\u304f\u308a\u8a00\u3048\u3070\u56de\u8def\u56f3\u306e\u4ee3\u308f\u308a\u3067\u3001\u56de\u8def\u56f3\u306f\u5ba3\u8a00\u7684\u3067\u3042\u308b\u3002\n\u3068\u306a\u308c\u3070\u6bd4\u8f03\u7684\u5ba3\u8a00\u7684\u306b\u66f8\u3051\u308b\u8a00\u8a9e\u306e\u307b\u3046\u304c\u66f8\u304d\u3084\u3059\u3044\u3060\u308d\u3046\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067Scala\u30d9\u30fc\u30b9\u306eChisel\u3092\u30c1\u30e7\u30a4\u30b9\u3057\u305f\u3002\n\u3061\u306a\u307f\u306b\u5049\u305d\u3046\u306b\u8272\u3005\u66f8\u3044\u3066\u3044\u308b\u304cScala\u306f\u89e6\u3063\u305f\u3053\u3068\u304c\u306a\u3044\u3002\nHDL\u6b74\u3082\u304b\u306a\u308a\u6d45\u3044\u3002\n\n\u5c0e\u5165\n\u5fc5\u8981\u306a\u7269\u306f\n\nsbt\nScala\nJDK\n\n\u809d\u5fc3\u306eChisel\u306fsbt\u304c\u826f\u304d\u306b\u8a08\u3089\u3063\u3066\u304f\u308c\u308b\u3002\n\n\u30cf\u30ed\u30ef\n\u3068\u308a\u3042\u3048\u305a\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u53c2\u8003\u306b\u3053\u3093\u306a\u611f\u3058\u306e\u54c1\u3005\u3092\u4f5c\u308b\nProject/\n  Build.sbt\n  chisel-dependent.sbt\n  src/\n    main/\n      Scala/\n        Hello.scala\n\n\u8a2d\u5b9a\u7528\u30d5\u30a1\u30a4\u30eb2\u3064\n\nBuild.sbt\norganization := \"edu.berkeley.cs\"\nversion := \"MyVersion-1.0\"\nname := \"MyChiselTemplate\"\nscalaVersion := \"2.11.6\"\nscalacOptions ++= Seq(\"-deprecation\", \"-feature\", \"-unchecked\", \"-language:reflectiveCalls\")\n\n\n\nchisel-dependent.sbt\nval chiselVersion_h = System.getProperty(\"chiselVersion\", \"latest.release\")\nlibraryDependencies ++= ( if (chiselVersion_h != \"None\" ) (\"edu.berkeley.cs\" %% \"chisel\" % chiselVersion_h) :: Nil; else Nil)\n\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u8a18\u8ff0\u90e8\u5206\n\nHello.scala\npackage Hello\n\nimport Chisel._\n\nclass Hello extends Module {\n  val io = new Bundle {\n    val out = UInt(OUTPUT, 8)\n  }\n  io.out := UInt(42)\n}\n\nclass HelloTests(c: Hello) extends Tester(c) {\n  step(1)\n  expect(c.io.out, 42)\n}\n\nobject Hello {\n  def main(args: Array[String]): Unit = {\n    val tutArgs = args.slice(1, args.length)\n    chiselMainTest(tutArgs, () => Module(new Hello())) {\n      c => new HelloTests(c)\n    }\n  }\n}\n\n\n\n\u7528\u610f\u3067\u304d\u305f\u3089Project\u306b\u79fb\u52d5\u3057\u3066\n> sbt\n\u3068\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3063\u3066sbt\u3092\u8d77\u52d5\u3002\n> compile\n\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\n> run Hello.Hello --backend v --targetDir ./verilog\n\u3067Project\\verilog\\\u306bverilog\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308b\u3002\n\u751f\u6210\u3055\u308c\u305f\u3082\u306e\u304c\u3053\u3061\u3089\n\nHello.v\nmodule Hello(\n    output[7:0] io_out\n);\n\n\n\n  assign io_out = 8'h2a;\nendmodule\n\n\n\u306a\u3093\u304b\u5999\u306a\u6539\u884c\u304c\u3067\u304d\u305f\u304c\u3001\n\u5909\u63db\u3057\u3066\u3082\u5909\u6570\u540d\u3068\u304b\u304c\u7d50\u69cb\u305d\u306e\u307e\u307e\u306a\u306e\u304c\u5730\u5473\u306b\u5b09\u3057\u3044\u3002\n\u3061\u306a\u307f\u306b\n> run --backend --targetDir ./cpp\n\u3068\u3059\u308c\u3070cpp\u4ee5\u4e0b\u306b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306ecpp\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u529b\u3055\u308c\u308b\u3002\n\u307e\u3060\u3088\u304f\u898b\u3066\u3044\u306a\u3044\u3002\n\n\u7d42\u308f\u308a\n\u30ec\u30b8\u30b9\u30bf\u306b\u660e\u793a\u7684\u306b\u30af\u30ed\u30c3\u30af\u3092\u8a2d\u5b9a\u3057\u305f\u308a\n\u3068\u3082\u304b\u304f\u8272\u3005\u51fa\u6765\u308b\u3088\u3046\u306a\u306e\u3067\u3001\n\u4f55\u304b\u66f8\u3044\u3066\u307f\u3066\u5408\u6210\u53ef\u80fd\u306aVerilog\u30b3\u30fc\u30c9\u3092\u5410\u304b\u305b\u308b\u305f\u3081\u306e\u52a0\u6e1b\u3092\u898b\u305f\u3044\u3002\n#\u6982\u8981\nFPGA\u3067\u4f55\u304b\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u3089HDL\u3092\u89e6\u308b\u3053\u3068\u306b\u5927\u62b5\u306a\u308b\u306e\u3060\u304c\u3001\n\u4e3b\u6d41\u306e\u3072\u3068\u3064\u3001VHDL\u306f\u3072\u305f\u3059\u3089\u5197\u9577\u3067\u3001\u3082\u3046\u3072\u3068\u3064\u306eVerilog\u306f\u6a5f\u80fd\u304c\u8ca7\u5f31\u3067\u3042\u308b\u3002\nSystemVerilog\u306f\u306a\u304b\u306a\u304b\u7d20\u6674\u3089\u3057\u3044\u304c\u3001\u3042\u307e\u308a\u8ad6\u7406\u5408\u6210\u30c4\u30fc\u30eb\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u9078\u629e\u80a2\u306fVHDL/Verilog\u306e\u4e8c\u629e\u3067\u3042\u308b\u3002\n\n\u3053\u3093\u306a\u72b6\u6cc1\u306b\u6211\u6162\u3067\u304d\u308b\u3088\u3046\u306a\u4eba\u304c\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u3044\u308b\u308f\u3051\u3082\u306a\u304f\u3001\n\u300c\u8ad6\u7406\u5408\u6210\u30c4\u30fc\u30eb\u304cVHDL/Verilog\u306b\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u306a\u3089\u3001\n\u4f55\u304b\u7d20\u6674\u3089\u3057\u3044\u8a00\u8a9e\u3067\u4e00\u65e6\u66f8\u3044\u3066\u3001\u305d\u308c\u3092Verilog/VHDL\u306b\u30b3\u30f3\u30d0\u30fc\u30c8\u3059\u308c\u3070\u3044\u3044\u3058\u3083\u306a\u3044\u300d\n\u3068\u8003\u3048\u305f\u4eba\u304c\u4f55\u4eba\u3082\u3044\u3066\u3001\u601d\u3044\u601d\u3044\u306b\u300c\u7d20\u6674\u3089\u3057\u3044\u8a00\u8a9e\u300d\u3092\u4f5c\u3063\u305f\u3002\n\u305d\u3093\u306a\u8a00\u8a9e\u306e\u3046\u3061\u306e\u3072\u3068\u3064\u3001Scala\u306eDSL\u3067\u3042\u308b[Chisel](https://chisel.eecs.berkeley.edu/)\u3092\u3061\u3087\u3063\u3068\u89e6\u3063\u3066\u307f\u305f\u3002\u305d\u306e\u30e1\u30e2\u3002\n\nHDL\u306f\u3056\u3063\u304f\u308a\u8a00\u3048\u3070\u56de\u8def\u56f3\u306e\u4ee3\u308f\u308a\u3067\u3001\u56de\u8def\u56f3\u306f\u5ba3\u8a00\u7684\u3067\u3042\u308b\u3002\n\u3068\u306a\u308c\u3070\u6bd4\u8f03\u7684\u5ba3\u8a00\u7684\u306b\u66f8\u3051\u308b\u8a00\u8a9e\u306e\u307b\u3046\u304c\u66f8\u304d\u3084\u3059\u3044\u3060\u308d\u3046\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067Scala\u30d9\u30fc\u30b9\u306eChisel\u3092\u30c1\u30e7\u30a4\u30b9\u3057\u305f\u3002\n\u3061\u306a\u307f\u306b\u5049\u305d\u3046\u306b\u8272\u3005\u66f8\u3044\u3066\u3044\u308b\u304cScala\u306f\u89e6\u3063\u305f\u3053\u3068\u304c\u306a\u3044\u3002\nHDL\u6b74\u3082\u304b\u306a\u308a\u6d45\u3044\u3002\n\n\n#\u5c0e\u5165\n\u5fc5\u8981\u306a\u7269\u306f\n\n* sbt\n* Scala\n* JDK\n\n\u809d\u5fc3\u306eChisel\u306fsbt\u304c\u826f\u304d\u306b\u8a08\u3089\u3063\u3066\u304f\u308c\u308b\u3002\n\n#\u30cf\u30ed\u30ef\n\u3068\u308a\u3042\u3048\u305a[\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](https://github.com/ucb-bar/chisel-tutorial.git)\u3092\u53c2\u8003\u306b\u3053\u3093\u306a\u611f\u3058\u306e\u54c1\u3005\u3092\u4f5c\u308b\n\n```\nProject/\n  Build.sbt\n  chisel-dependent.sbt\n  src/\n    main/\n      Scala/\n        Hello.scala\n```\n\n\u8a2d\u5b9a\u7528\u30d5\u30a1\u30a4\u30eb2\u3064\n\n``` Build.sbt\norganization := \"edu.berkeley.cs\"\nversion := \"MyVersion-1.0\"\nname := \"MyChiselTemplate\"\nscalaVersion := \"2.11.6\"\nscalacOptions ++= Seq(\"-deprecation\", \"-feature\", \"-unchecked\", \"-language:reflectiveCalls\")\n```\n``` chisel-dependent.sbt\nval chiselVersion_h = System.getProperty(\"chiselVersion\", \"latest.release\")\nlibraryDependencies ++= ( if (chiselVersion_h != \"None\" ) (\"edu.berkeley.cs\" %% \"chisel\" % chiselVersion_h) :: Nil; else Nil)\n```\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u8a18\u8ff0\u90e8\u5206\n\n``` scala:Hello.scala\npackage Hello\n\nimport Chisel._\n\nclass Hello extends Module {\n  val io = new Bundle {\n    val out = UInt(OUTPUT, 8)\n  }\n  io.out := UInt(42)\n}\n\nclass HelloTests(c: Hello) extends Tester(c) {\n  step(1)\n  expect(c.io.out, 42)\n}\n\nobject Hello {\n  def main(args: Array[String]): Unit = {\n    val tutArgs = args.slice(1, args.length)\n    chiselMainTest(tutArgs, () => Module(new Hello())) {\n      c => new HelloTests(c)\n    }\n  }\n}\n\n```\n\n\u7528\u610f\u3067\u304d\u305f\u3089Project\u306b\u79fb\u52d5\u3057\u3066\n`> sbt`\n\u3068\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3063\u3066sbt\u3092\u8d77\u52d5\u3002\n\n`> compile`\n\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\n\n`> run Hello.Hello --backend v --targetDir ./verilog`\n\u3067Project\\verilog\\\u306bverilog\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308b\u3002\n\n\u751f\u6210\u3055\u308c\u305f\u3082\u306e\u304c\u3053\u3061\u3089\n\n```verilog:Hello.v\nmodule Hello(\n    output[7:0] io_out\n);\n\n\n\n  assign io_out = 8'h2a;\nendmodule\n```\n\n\u306a\u3093\u304b\u5999\u306a\u6539\u884c\u304c\u3067\u304d\u305f\u304c\u3001\n\u5909\u63db\u3057\u3066\u3082\u5909\u6570\u540d\u3068\u304b\u304c\u7d50\u69cb\u305d\u306e\u307e\u307e\u306a\u306e\u304c\u5730\u5473\u306b\u5b09\u3057\u3044\u3002\n\n\u3061\u306a\u307f\u306b\n`> run --backend --targetDir ./cpp`\n\u3068\u3059\u308c\u3070cpp\u4ee5\u4e0b\u306b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306ecpp\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u529b\u3055\u308c\u308b\u3002\n\u307e\u3060\u3088\u304f\u898b\u3066\u3044\u306a\u3044\u3002\n\n#\u7d42\u308f\u308a\n\u30ec\u30b8\u30b9\u30bf\u306b\u660e\u793a\u7684\u306b\u30af\u30ed\u30c3\u30af\u3092\u8a2d\u5b9a\u3057\u305f\u308a\n\u3068\u3082\u304b\u304f\u8272\u3005\u51fa\u6765\u308b\u3088\u3046\u306a\u306e\u3067\u3001\n\u4f55\u304b\u66f8\u3044\u3066\u307f\u3066\u5408\u6210\u53ef\u80fd\u306aVerilog\u30b3\u30fc\u30c9\u3092\u5410\u304b\u305b\u308b\u305f\u3081\u306e\u52a0\u6e1b\u3092\u898b\u305f\u3044\u3002\n", "tags": ["Chisel", "Verilog", "Scala"]}