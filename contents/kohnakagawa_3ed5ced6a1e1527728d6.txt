{"context": "\n\n\u306f\u3058\u3081\u306b\n\u524d\u56de\u306e\u8a18\u4e8b\u3067\u306f4\u500d\u30a2\u30f3\u30ed\u30fc\u30eb\uff0bSIMD\u5316\u3092\u3057\u305f\u306b\u3082\u95a2\u308f\u3089\u305a\u9ad8\u901f\u5316\u3067\u304d\u306a\u304b\u3063\u305f\u3002\n\n\u524d\u56de\u306e\u53cd\u7701\u70b9\n\u3084\u306f\u308a\u7c92\u5b50\u756a\u53f7\u3092\u9010\u6b21\u3067\u30b9\u30c8\u30a2\u3057\u3066\u3044\u304f\u306e\u3067\u306f\u6761\u4ef6\u5206\u5c90\u3082\u591a\u304f\u306a\u3063\u3066\u52b9\u7387\u304c\u60aa\u3044\u3002\u3053\u308c\u3092\u3084\u3081\u3066\u30d1\u30c3\u30af\u30c9\u30c7\u30fc\u30bf\u3068\u3057\u3066\u30b9\u30c8\u30a2\u3059\u308b\u3084\u308a\u65b9\u3092\u8003\u3048\u308b\u3002\n\n\u65b9\u91dd\n\u307e\u305a\u7c92\u5b50\u756a\u53f7\u306e\u30b9\u30c8\u30a2\u7b87\u6240\u3092\u518d\u5ea6\u898b\u3066\u307f\u308b\u3002\nvoid RegistInteractPair(const Vec& qi,\n                        const Vec& qj,\n                        const int32_t index1,\n                        const int32_t index2) {\n  const auto dx = qj.x - qi.x;\n  const auto dy = qj.y - qi.y;\n  const auto dz = qj.z - qi.z;\n  const auto r2 = dx * dx + dy * dy + dz * dz; // \u4e8c\u7c92\u5b50\u9593\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\n  if (r2 > search_length2_) return; // search_length\u4ee5\u4e0a\u3067\u3042\u308c\u3070\u4ee5\u964d\u306e\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7\n  int i, j;\n  if (index1 < index2) { // index\u3092\u4e26\u3073\u66ff\u3048\n    i = index1;\n    j = index2;\n  } else {\n    i = index2;\n    j = index1;\n  }\n  key_particles_[number_of_pairs_] = i;     // <-SIMD\u5316\u3067\u304d\u308b\uff1f\n  partner_particles_[number_of_pairs_] = j; // <-SIMD\u5316\u3067\u304d\u308b\uff1f\n  number_of_partners_[i]++;                 // <-SIMD\u5316\u3067\u304d\u308b\uff1f\n  number_of_pairs_++;\n}\n\n\u5927\u304d\u304f\u5206\u3051\u30664\u3064\u306e\u51e6\u7406\u304c\u3042\u308b\u3002\n1. i\u7c92\u5b50\u3068j\u7c92\u5b50\u306e\u756a\u53f7\u3092\u6607\u9806\u306b\u4e26\u3073\u66ff\u3048\u308b\u3002\n2. \u5c0f\u3055\u3044\u65b9(\u4ee5\u964dkey\u7c92\u5b50\u3068\u8868\u8a18)\u3092key_particles_\u306b\u3001\u5927\u304d\u3044\u65b9(\u4ee5\u964dpartner\u7c92\u5b50\u3068\u8868\u8a18)\u3092partner_particles_\u306b\u30b9\u30c8\u30a2\u3059\u308b\u3002\n3. \u3042\u308bkey\u7c92\u5b50\u306e\u307e\u308f\u308a\u3067rsrsr_{s}\u4ee5\u5185\u306b\u3044\u308b\u7c92\u5b50\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u3001number_of_partners\u306b\u683c\u7d0d\u3059\u308b\u3002\n4. pair\u304c\u4f55\u500b\u3042\u308b\u306e\u304b\u3092\u6570\u3048\u308b\u3002\n\u307e\u305a3\u306b\u3064\u3044\u3066\u3060\u304c\u3001\u9593\u63a5\u53c2\u7167\u304c\u306f\u3044\u3063\u3066\u3044\u308b\u306e\u3067SIMD\u5316\u304c\u96e3\u3057\u3044\u3002scatter\u547d\u4ee4\u304c\u3042\u308c\u3070\u3067\u304d\u308b\u304b\u3082\u77e5\u308c\u306a\u3044\u304c\u3001\u3044\u307eHaswell\u3067\u306e\u5b9f\u884c\u3092\u8003\u3048\u3066\u3044\u308b\u306e\u3067\u4f7f\u3048\u306a\u3044\u3002\u3072\u3068\u307e\u305a3\u3092SIMD\u5316\u3059\u308b\u3053\u3068\u306f\u8ae6\u3081\u3066\u3001\u5f8c\u51e6\u7406\u306b\u56de\u3059\u3053\u3068\u306b\u3059\u308b\u3002\n1\u306fmin\u3084max\u95a2\u6570\u3092\u4f7f\u3048\u3070\u3067\u304d\u305d\u3046\u30022\u3082\u7c21\u5358\u305d\u3046\u3060\u304c\u3001rsr_{s}\u4ee5\u5185\u306b\u3044\u308b\u7c92\u5b50\u306b\u3064\u3044\u3066\u306e\u307f\u30b9\u30c8\u30a2\u3059\u308b\u51e6\u7406\u304c\u5fc5\u8981\u306a\u306e\u3067\u5c11\u3057\u8907\u96d1\u306b\u306a\u308b\u30024\u306b\u3064\u3044\u3066\u306f\u524d\u56de\u306e\u8a18\u4e8b\u3067256bit mask\u3092\u7406\u3092mm256_movemask_pd\u3092\u4f7f\u3063\u306622bit\u30c7\u30fc\u30bf\u306b\u76f4\u3057\u305f\u3002\u5f97\u3089\u308c\u305f32bit\u30c7\u30fc\u30bf(flag\u3068\u547c\u3076)\u3092\u7528\u3044\u3066rsr_{s}\u4ee5\u5185\u306b\u3044\u308b\u7c92\u5b50\u6570\u306f\u8a08\u7b97\u3067\u304d\u305d\u3046\u3002\n\nSIMD\u5316\u306b\u5411\u3051\u305f\u6e96\u5099\n\u6700\u521d\u306bAVX\u547d\u4ee4\u3092\u7528\u3044\u3066256bit\u3068\u3057\u3066\u307e\u3068\u3081\u3066\u30b9\u30c8\u30a2\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5c11\u3057\u5909\u66f4\u3059\u308b\u3002\u4eca\u306e\u3088\u3046\u306bkey\u3068partner\u5225\u3005\u306b\u30b9\u30c8\u30a2\u3059\u308b\u9650\u308a32bit x 4 = 128bit\u5358\u4f4d\u306e\u30b9\u30c8\u30a2\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\u3053\u3053\u3092\u6700\u521d\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u306b\u3057\u3088\u3046\u3002\n\u3053\u308c\u306f\u7c21\u5358\u3067\nint32_t key_particles[MAX_PAIRS];\nint32_t partner_particles[MAX_PAIRS];\n\n\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u3092\nint32_t key_partner_particles[MAX_PAIRS][2];\n\n\u3068\u3059\u308c\u3070\u6e08\u3080\u3002\u30b9\u30c8\u30a2\u3059\u308b\u3068\u304d\u306f\u30d1\u30c3\u30af\u30c9\u30c7\u30fc\u30bf\u3068\u3057\u3066\n// vkey_part_id = {ik_a, ip_a, ik_b, ip_b, ik_c, ip_c, ik_d, ip_d}\n// ik means id of key particle\n// ip means id of partner particle\n_mm256_storeu_si256(reinterpret_cast<__m256i*>(key_partner_particles_[number_of_pairs_]), vkey_part_id);\n\n\u306e\u3088\u3046\u306b\u3059\u308b\u3002\u3053\u3053\u3067ik_a(bcd) ip_a(bcd)\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u305d\u308c\u305e\u308ckey\u7c92\u5b50\u3001partner\u7c92\u5b50\u306e\u756a\u53f7\u3067\u3042\u308b\u3002key\u7c92\u5b50\u3068partner\u7c92\u5b50\u306e\uff14\u3064\u306e\u30da\u30a2\u3092\u307e\u3068\u3081\u305f256bit\u30c7\u30fc\u30bf\u3092\u4f5c\u308a\u307e\u3068\u3081\u3066\u30b9\u30c8\u30a2\u3059\u308b\u3002\n\ni\u7c92\u5b50\u3068j\u7c92\u5b50\u306e\u756a\u53f7\u3092\u6607\u9806\u306b\u4e26\u3073\u66ff\u3048\u308b\n\u3053\u308c\u306f\u7c21\u5358\u3067max\u3068min\u95a2\u6570\u306e\u305d\u306e\u307e\u307e\u9069\u7528\u3059\u308c\u3070\u3088\u3044\u3002\nv4di vi_id = _mm256_set_epi64x(i, i, i, i); //i\u7c92\u5b50\u756a\u53f7\nv4di vj_id = _mm256_set_epi64x(ja, jb, jc, jd); //j\u7c92\u5b50\u756a\u53f7\nv8si vkey_id = _mm256_min_epi32(vi_id, vj_id); //i\u3068j\u7c92\u5b50\u756a\u53f7\u306e\u3046\u3061\u5c0f\u3055\u3044\u65b9\nv8si vpart_id = _mm256_max_epi32(vi_id, vj_id); //i\u3068j\u7c92\u5b50\u756a\u53f7\u306e\u3046\u3061\u5927\u304d\u3044\u65b9\n\n\u3057\u304b\u3057\u3001\u3053\u306e\u5f8ckey\u3068partner\u306e\u30da\u30a24\u3064\u3092256bit\u30c7\u30fc\u30bf\u3068\u3057\u3066\u30b9\u30c8\u30a2\u3059\u308b\u306e\u3067vkey_id\u3068vpart_id\u3092\u30da\u30a2\u306b\u3057\u3066256bit\u30c7\u30fc\u30bf\u306b\u5909\u66f4\u3057\u3088\u3046\u3002\u3084\u308a\u305f\u3044\u3053\u3068\u306fvpart_id\u3092vkey_id\u3092\u4e92\u3044\u9055\u3044\u306b\u306a\u308b\u3088\u3046\u306b\u6df7\u305c\u5408\u308f\u305b\u308b\u3053\u3068\u3002\u307e\u305a\u3001vpart_id\u3092\u5de6\u30784Byte\u30b7\u30d5\u30c8\u3059\u308b\u3002\nvpart_id = _mm256_slli_si256(vpart_id, 4);\n\n\u305d\u3057\u3066vkey_id\u3068\u306eor\u3092\u3068\u308b\u3002\nv8si vpart_key_id = _mm256_or_si256(vkey_id, vpart_id);\n\n\u3053\u308c\u3067256bit\u30c7\u30fc\u30bf\u3068\u3057\u3066key\u7c92\u5b50\u3068partner\u7c92\u5b50\u306e\u756a\u53f7\u304c\u7528\u610f\u3067\u304d\u308b\u3002\n\u4e00\u9023\u306e\u6d41\u308c\u3092\u56f3\u306b\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\n\u56f30 vpart_key_id\u304c\u3067\u304d\u308b\u307e\u3067 (i\u3068\u304bja\u3068\u304b\u66f8\u3044\u3066\u3044\u306a\u3044\u3068\u3053\u308d\u306f0\u3067\u57cb\u3081\u3089\u308c\u3066\u3044\u308b\u3002)\n\n\nkey\u7c92\u5b50\u3068partner\u7c92\u5b50\u306e\u30b9\u30c8\u30a2\n256bit\u30c7\u30fc\u30bfkey\u7c92\u5b50\u3068partner\u7c92\u5b50\u306e\u756a\u53f7\u304c\u7528\u610f\u3067\u304d\u305f\u306e\u3067\u3001rsr_{s}\u4ee5\u5185\u306e\u3082\u306e\u3060\u3051\u3092\u53d6\u308a\u51fa\u3057\u3066\u30b9\u30c8\u30a2\u3059\u308b\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u3002\u3084\u308a\u65b9\u306f\u8272\u3005\u3042\u308a\u305d\u3046\u3060\u304c\u3001\u4eca\u56de\u306fvkey_part_id\u3092\u9069\u5f53\u306b\u4e26\u3073\u66ff\u3048\u3066\u3001rsr_{s}\u4ee5\u5185\u306e\u30da\u30a2\u3060\u3051\u3092\u30ec\u30b8\u30b9\u30bf\u306e\u53f3\u5074\u306b\u304f\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\u4f55\u3092\u3084\u308a\u305f\u3044\u304b\u3068\u3044\u3046\u3068\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306e\u30b3\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u305f\u3088\u3046\u306b\u3001\u30ec\u30b8\u30b9\u30bf\u306e\u4e2d\u8eab\u3092shuffle\u3067\u4e26\u3073\u66ff\u3048\u308b\u3002\nv4df dr2_flag = _mm256_cmp_pd(dr2_abc, vsl2, _CMP_LE_OS);\nconst int32_t flag = _mm256_movemask_pd(dr2_flag);\n\n// flag\u306e\u5024\u304c5\u3067\u3042\u308b\u3068\u3059\u308b\u30022\u9032\u6570\u3060\u30680101\n// vkey_part_id = {0, 4, 1, 5, 2, 6, 3, 7}\u3067\u3042\u308b\u3068\u3059\u308b\u3002\n\n// hash\u306b\u5fdc\u3058\u3066vkey_part_id\u306e\u5185\u5bb9\u3092\u4e26\u3073\u66ff\u3048\u3066\u3001\u30b9\u30c8\u30a2\u3059\u308b\u30c7\u30fc\u30bf\u3092\u30ec\u30b8\u30b9\u30bf\u306e\u53f3\u5074\u306b\u5bc4\u305b\u308b\nshuffle(vkey_part_id, hash);\n\n// \u5bc4\u305b\u305f\u5f8c\u306e\u5024\u306fvkey_part_id = {0, 4, 2, 6, 0, 0, 0, 0}\u306b\u306a\u308b\u3002\n// \u30ea\u30c8\u30eb\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\n\n\u554f\u984c\u306fshffule\u3092\u3069\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\u304b\u3060\u3002\n128bit\u5883\u754c\u306e\u58c1\u3092\u8d8a\u3048\u3066\u30c7\u30fc\u30bf\u3092\u4e26\u3073\u66ff\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001permute\u7cfb\u306e\u547d\u4ee4\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u305d\u3046\u3060\u3002\u5373\u5024\u3092\u5f15\u6570\u306b\u3068\u3089\u306a\u3044\u3082\u306e\u3092\u63a2\u3059\u3068\n__m256i _mm256_permutevar8x32_epi32 (__m256i a, __m256i idx)\n\n\u304c\u3042\u3063\u305f\u3002Intel\u306eguide\u306b\u3088\u308b\u3068\u51e6\u7406\u306e\u8a73\u7d30\u306f\nFOR j := 0 to 7\n   i  := j*32\n   id := idx[i+2:i]*32\n   dst[i+31:i] := a[id+31:id] \nENDFOR\ndst[MAX:256] := 0\n\n\u3068\u306a\u3063\u3066\u3044\u308b\u3002gather\u306e\u3088\u3046\u306a\u51e6\u7406\u304c\u3067\u304d\u308b\u3002\nidx\u3068flag\u306e\u5024\u306e\u5bfe\u5fdc\u95a2\u4fc2\u3092lookup table\u3068\u3057\u3066\u7528\u610f\u3057\u3066\u304a\u304d\u3001rsr_{s}\u4ee5\u5185\u306e\u7c92\u5b50\u30da\u30a2\u30c7\u30fc\u30bf\u304c\u30ec\u30b8\u30b9\u30bf\u306e\u53f3\u5074\u306b\u56fa\u307e\u308b\u3088\u3046\u306b\u3057\u3088\u3046\u3002\nconst int32_t shfl_table_[16][8] = {\n  {0, 0, 0, 0, 0, 0, 0, 0}, // flag: 0000\n  {6, 7, 0, 0, 0, 0, 0, 0}, // flag: 0001\n  {4, 5, 0, 0, 0, 0, 0, 0}, // flag: 0010\n  {4, 5, 6, 7, 0, 0, 0, 0}, // flag: 0011\n  {2, 3, 0, 0, 0, 0, 0, 0}, // flag: 0100\n  {2, 3, 6, 7, 0, 0, 0, 0}, // flag: 0101\n  {2, 3, 4, 5, 0, 0, 0, 0}, // flag: 0110\n  {2, 3, 4, 5, 6, 7, 0, 0}, // flag: 0111\n  {0, 1, 0, 0, 0, 0, 0, 0}, // flag: 1000\n  {0, 1, 6, 7, 0, 0, 0, 0}, // flag: 1001\n  {0, 1, 4, 5, 0, 0, 0, 0}, // flag: 1010\n  {0, 1, 4, 5, 6, 7, 0, 0}, // flag: 1011\n  {0, 1, 2, 3, 0, 0, 0, 0}, // flag: 1100\n  {0, 1, 2, 3, 6, 7, 0, 0}, // flag: 1101\n  {0, 1, 2, 3, 4, 5, 0, 0}, // flag: 1110\n  {0, 1, 2, 3, 4, 5, 6, 7}  // flag: 1111\n};\n\n\u3042\u3068\u3067\u81ea\u5206\u3067\u898b\u76f4\u3057\u3066\u3082\u5206\u304b\u308b\u3088\u3046\u306b\u5177\u4f53\u4f8b\u3092\u4e8c\u3064\u56f3\u3068\u3057\u3066\u793a\u3057\u3066\u304a\u304f\u3002\n\n\u30b3\u30fc\u30c9\u3067\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n// shuffle\u3059\u308b\u969b\u306eidx\u3092look up table\u304b\u3089\u53d6\u5f97\nv8si idx = _mm256_load_si256(reinterpret_cast<const __m256i*>(shfl_table_[flag]));\n// \u30ec\u30b8\u30b9\u30bf\u5185\u3092\u4e26\u3073\u66ff\u3048\u3066r_{s}\u4ee5\u5185\u306b\u3042\u308b\u7c92\u5b50\u30da\u30a2\u3092\u30ec\u30b8\u30b9\u30bf\u306e\u53f3\u5074\u306b\u5bc4\u305b\u308b\u3002\nvpart_key_id = _mm256_permutevar8x32_epi32(vpart_key_id, idx);\n\n\u3053\u306elookup\u30c6\u30fc\u30d6\u30eb\u306b\u57fa\u3065\u3044\u3066vkey_part_id\u3092\u4e26\u3073\u66ff\u3048\u308b\u3068\u3001\u30ec\u30b8\u30b9\u30bf\u306e\u53f3\u5074\u306b\u30b9\u30c8\u30a2rsr_{s}\u4ee5\u5185\u306b\u3042\u308b\u7c92\u5b50\u30da\u30a2\u306e\u756a\u53f7\u3060\u3051\u304c\u56fa\u307e\u3063\u305f\u72b6\u614b\u306b\u306a\u308b\u3002\u3053\u306e\u5f8c\u306f\u30b9\u30c8\u30a2\u3059\u308b\u3060\u3051\u3002\n\npair\u304c\u4f55\u500b\u3042\u308b\u306e\u304b\u3092\u6570\u3048\u308b\nflag\u306e\u60c5\u5831\u306b\u57fa\u3065\u3044\u3066rsr_{s}\u4ee5\u5185\u306b\u3042\u308b\u7c92\u5b50\u30da\u30a2\u306e\u6570\u3092\u6570\u3048\u308b\u3002\n\u3053\u308c\u3082lookup\u30c6\u30fc\u30d6\u30eb\u3092\u7528\u3044\u3066\u5b9f\u88c5\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u306e\u3060\u304c\u3001popcnt32\u3068\u3044\u3046\u547d\u4ee4\u3067\u3067\u304d\u308b\u3002popcnt32\u306f32bit\u6574\u6570\u306e\u305f\u3063\u3066\u3044\u308bbit\u306e\u6570\u3092\u6570\u3048\u308b\u547d\u4ee4\u3067\u3042\u308b\u3002\u4f8b\u3048\u3070flag\u306e\u5024\u304c2\u9032\u6570\u30670101\u3067\u3042\u3063\u305f\u3068\u304d\u3001 popcnt32(flag)\u306f2\u306b\u306a\u308b\u3002\u30b3\u30fc\u30c9\u3067\u793a\u3059\u3068\u3001\nnumber_of_pairs_ += _popcnt32(flag);\n\n\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\nreference\u7248\u3068\u306e\u901f\u5ea6\u6bd4\u8f03\n\u4e0a\u8a18\u306e\u30a2\u30a4\u30c7\u30a2\u3092\u5143\u306b\u5b9f\u88c5\u3057\u305f\u306e\u304c\u3053\u308c\u306eMakePairListFusedLoopSIMD\u3067\u3042\u308b\u3002\u300c\u6700\u5185\u30eb\u30fc\u30d74\u500d\u30a2\u30f3\u30ed\u30fc\u30eb\uff0b\u8ddd\u96e2\u8a08\u7b97\u306eSIMD\u5316\uff0b\u7c92\u5b50\u756a\u53f7\u30b9\u30c8\u30a2\u306eSIMD\u5316\u300d\u3092\u884c\u3046\u3068\u7d50\u679c\u306f\n\n\n\n\n\u5b9f\u884c\u6642\u9593\n\n\n\n\nreference\n22723[ms]\n\n\n\u8ddd\u96e2\u8a08\u7b97\u3092SIMD\u5316\u3057\u3066\u9010\u6b21\u30b9\u30c8\u30a2\n24222[ms]\n\n\n\u8ddd\u96e2\u8a08\u7b97\u3068\u30b9\u30c8\u30a2\u3092SIMD\u5316\n17821[ms]\n\n\n\n\u3068\u7121\u4e8b\u306b\u9ad8\u901f\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\n\n\u307e\u3068\u3081\n\u30b9\u30c8\u30a2\u306e\u90e8\u5206\u306eSIMD\u5316\u3082\u5408\u308f\u305b\u3066\u884c\u3046\u3053\u3068\u3067\u5927\u304d\u304f\u9ad8\u901f\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\u3057\u304b\u3057\u30014\u7c92\u5b50\u540c\u6642\u306b\u51e6\u7406\u3057\u3066\u3044\u308b\u5272\u306b\u306f\u52a0\u901f\u306e\u5ea6\u5408\u3044\u304c\u5c0f\u3055\u3044\u6c17\u304c\u3059\u308b\u3002\u6b21\u56de\u306f\u30a2\u30f3\u30ed\u30fc\u30eb\u3059\u308b\u30eb\u30fc\u30d7\u3092\u4e00\u3064\u5916\u5074\u306b\u3059\u308b\u3053\u3068\u3067\u3055\u3089\u306b\u9ad8\u901f\u5316\u3059\u308b\u3002\n#\u306f\u3058\u3081\u306b\n[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/kohnakagawa/items/9bbf48f835278ab7b345)\u3067\u306f4\u500d\u30a2\u30f3\u30ed\u30fc\u30eb\uff0bSIMD\u5316\u3092\u3057\u305f\u306b\u3082\u95a2\u308f\u3089\u305a\u9ad8\u901f\u5316\u3067\u304d\u306a\u304b\u3063\u305f\u3002\n\n#\u524d\u56de\u306e\u53cd\u7701\u70b9\n\u3084\u306f\u308a\u7c92\u5b50\u756a\u53f7\u3092\u9010\u6b21\u3067\u30b9\u30c8\u30a2\u3057\u3066\u3044\u304f\u306e\u3067\u306f\u6761\u4ef6\u5206\u5c90\u3082\u591a\u304f\u306a\u3063\u3066\u52b9\u7387\u304c\u60aa\u3044\u3002\u3053\u308c\u3092\u3084\u3081\u3066\u30d1\u30c3\u30af\u30c9\u30c7\u30fc\u30bf\u3068\u3057\u3066\u30b9\u30c8\u30a2\u3059\u308b\u3084\u308a\u65b9\u3092\u8003\u3048\u308b\u3002\n\n#\u65b9\u91dd\n\u307e\u305a\u7c92\u5b50\u756a\u53f7\u306e\u30b9\u30c8\u30a2\u7b87\u6240\u3092\u518d\u5ea6\u898b\u3066\u307f\u308b\u3002\n\n```c++\nvoid RegistInteractPair(const Vec& qi,\n                        const Vec& qj,\n                        const int32_t index1,\n                        const int32_t index2) {\n  const auto dx = qj.x - qi.x;\n  const auto dy = qj.y - qi.y;\n  const auto dz = qj.z - qi.z;\n  const auto r2 = dx * dx + dy * dy + dz * dz; // \u4e8c\u7c92\u5b50\u9593\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\n  if (r2 > search_length2_) return; // search_length\u4ee5\u4e0a\u3067\u3042\u308c\u3070\u4ee5\u964d\u306e\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7\n  int i, j;\n  if (index1 < index2) { // index\u3092\u4e26\u3073\u66ff\u3048\n    i = index1;\n    j = index2;\n  } else {\n    i = index2;\n    j = index1;\n  }\n  key_particles_[number_of_pairs_] = i;     // <-SIMD\u5316\u3067\u304d\u308b\uff1f\n  partner_particles_[number_of_pairs_] = j; // <-SIMD\u5316\u3067\u304d\u308b\uff1f\n  number_of_partners_[i]++;                 // <-SIMD\u5316\u3067\u304d\u308b\uff1f\n  number_of_pairs_++;\n}\n```\n\n\u5927\u304d\u304f\u5206\u3051\u30664\u3064\u306e\u51e6\u7406\u304c\u3042\u308b\u3002\n1. i\u7c92\u5b50\u3068j\u7c92\u5b50\u306e\u756a\u53f7\u3092\u6607\u9806\u306b\u4e26\u3073\u66ff\u3048\u308b\u3002\n2. \u5c0f\u3055\u3044\u65b9(\u4ee5\u964dkey\u7c92\u5b50\u3068\u8868\u8a18)\u3092key_particles_\u306b\u3001\u5927\u304d\u3044\u65b9(\u4ee5\u964dpartner\u7c92\u5b50\u3068\u8868\u8a18)\u3092partner_particles_\u306b\u30b9\u30c8\u30a2\u3059\u308b\u3002\n3. \u3042\u308bkey\u7c92\u5b50\u306e\u307e\u308f\u308a\u3067$r_{s}$\u4ee5\u5185\u306b\u3044\u308b\u7c92\u5b50\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u3001number_of_partners\u306b\u683c\u7d0d\u3059\u308b\u3002\n4. pair\u304c\u4f55\u500b\u3042\u308b\u306e\u304b\u3092\u6570\u3048\u308b\u3002\n\n\u307e\u305a3\u306b\u3064\u3044\u3066\u3060\u304c\u3001\u9593\u63a5\u53c2\u7167\u304c\u306f\u3044\u3063\u3066\u3044\u308b\u306e\u3067SIMD\u5316\u304c\u96e3\u3057\u3044\u3002scatter\u547d\u4ee4\u304c\u3042\u308c\u3070\u3067\u304d\u308b\u304b\u3082\u77e5\u308c\u306a\u3044\u304c\u3001\u3044\u307eHaswell\u3067\u306e\u5b9f\u884c\u3092\u8003\u3048\u3066\u3044\u308b\u306e\u3067\u4f7f\u3048\u306a\u3044\u3002\u3072\u3068\u307e\u305a3\u3092SIMD\u5316\u3059\u308b\u3053\u3068\u306f\u8ae6\u3081\u3066\u3001\u5f8c\u51e6\u7406\u306b\u56de\u3059\u3053\u3068\u306b\u3059\u308b\u3002\n\n1\u306fmin\u3084max\u95a2\u6570\u3092\u4f7f\u3048\u3070\u3067\u304d\u305d\u3046\u30022\u3082\u7c21\u5358\u305d\u3046\u3060\u304c\u3001$r_{s}$\u4ee5\u5185\u306b\u3044\u308b\u7c92\u5b50\u306b\u3064\u3044\u3066\u306e\u307f\u30b9\u30c8\u30a2\u3059\u308b\u51e6\u7406\u304c\u5fc5\u8981\u306a\u306e\u3067\u5c11\u3057\u8907\u96d1\u306b\u306a\u308b\u30024\u306b\u3064\u3044\u3066\u306f[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/kohnakagawa/items/9bbf48f835278ab7b345)\u3067256bit mask\u3092\u7406\u3092mm256_movemask_pd\u3092\u4f7f\u3063\u306622bit\u30c7\u30fc\u30bf\u306b\u76f4\u3057\u305f\u3002\u5f97\u3089\u308c\u305f32bit\u30c7\u30fc\u30bf(flag\u3068\u547c\u3076)\u3092\u7528\u3044\u3066$r_{s}$\u4ee5\u5185\u306b\u3044\u308b\u7c92\u5b50\u6570\u306f\u8a08\u7b97\u3067\u304d\u305d\u3046\u3002\n\n#SIMD\u5316\u306b\u5411\u3051\u305f\u6e96\u5099\n\u6700\u521d\u306bAVX\u547d\u4ee4\u3092\u7528\u3044\u3066256bit\u3068\u3057\u3066\u307e\u3068\u3081\u3066\u30b9\u30c8\u30a2\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5c11\u3057\u5909\u66f4\u3059\u308b\u3002\u4eca\u306e\u3088\u3046\u306bkey\u3068partner\u5225\u3005\u306b\u30b9\u30c8\u30a2\u3059\u308b\u9650\u308a32bit x 4 = 128bit\u5358\u4f4d\u306e\u30b9\u30c8\u30a2\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\u3053\u3053\u3092\u6700\u521d\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u306b\u3057\u3088\u3046\u3002\n\n\u3053\u308c\u306f\u7c21\u5358\u3067\n\n```C++\nint32_t key_particles[MAX_PAIRS];\nint32_t partner_particles[MAX_PAIRS];\n```\n\n\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u3092\n\n```C++\nint32_t key_partner_particles[MAX_PAIRS][2];\n```\n\n\u3068\u3059\u308c\u3070\u6e08\u3080\u3002\u30b9\u30c8\u30a2\u3059\u308b\u3068\u304d\u306f\u30d1\u30c3\u30af\u30c9\u30c7\u30fc\u30bf\u3068\u3057\u3066\n\n```c++\n// vkey_part_id = {ik_a, ip_a, ik_b, ip_b, ik_c, ip_c, ik_d, ip_d}\n// ik means id of key particle\n// ip means id of partner particle\n_mm256_storeu_si256(reinterpret_cast<__m256i*>(key_partner_particles_[number_of_pairs_]), vkey_part_id);\n```\n\n\u306e\u3088\u3046\u306b\u3059\u308b\u3002\u3053\u3053\u3067ik_a(bcd) ip_a(bcd)\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u305d\u308c\u305e\u308ckey\u7c92\u5b50\u3001partner\u7c92\u5b50\u306e\u756a\u53f7\u3067\u3042\u308b\u3002key\u7c92\u5b50\u3068partner\u7c92\u5b50\u306e\uff14\u3064\u306e\u30da\u30a2\u3092\u307e\u3068\u3081\u305f256bit\u30c7\u30fc\u30bf\u3092\u4f5c\u308a\u307e\u3068\u3081\u3066\u30b9\u30c8\u30a2\u3059\u308b\u3002\n#i\u7c92\u5b50\u3068j\u7c92\u5b50\u306e\u756a\u53f7\u3092\u6607\u9806\u306b\u4e26\u3073\u66ff\u3048\u308b\n\u3053\u308c\u306f\u7c21\u5358\u3067max\u3068min\u95a2\u6570\u306e\u305d\u306e\u307e\u307e\u9069\u7528\u3059\u308c\u3070\u3088\u3044\u3002\n\n```c++\nv4di vi_id = _mm256_set_epi64x(i, i, i, i); //i\u7c92\u5b50\u756a\u53f7\nv4di vj_id = _mm256_set_epi64x(ja, jb, jc, jd); //j\u7c92\u5b50\u756a\u53f7\nv8si vkey_id = _mm256_min_epi32(vi_id, vj_id); //i\u3068j\u7c92\u5b50\u756a\u53f7\u306e\u3046\u3061\u5c0f\u3055\u3044\u65b9\nv8si vpart_id = _mm256_max_epi32(vi_id, vj_id); //i\u3068j\u7c92\u5b50\u756a\u53f7\u306e\u3046\u3061\u5927\u304d\u3044\u65b9\n```\n\n\u3057\u304b\u3057\u3001\u3053\u306e\u5f8ckey\u3068partner\u306e\u30da\u30a24\u3064\u3092256bit\u30c7\u30fc\u30bf\u3068\u3057\u3066\u30b9\u30c8\u30a2\u3059\u308b\u306e\u3067vkey_id\u3068vpart_id\u3092\u30da\u30a2\u306b\u3057\u3066256bit\u30c7\u30fc\u30bf\u306b\u5909\u66f4\u3057\u3088\u3046\u3002\u3084\u308a\u305f\u3044\u3053\u3068\u306fvpart_id\u3092vkey_id\u3092\u4e92\u3044\u9055\u3044\u306b\u306a\u308b\u3088\u3046\u306b\u6df7\u305c\u5408\u308f\u305b\u308b\u3053\u3068\u3002\u307e\u305a\u3001vpart_id\u3092\u5de6\u30784Byte\u30b7\u30d5\u30c8\u3059\u308b\u3002\n\n```C++\nvpart_id = _mm256_slli_si256(vpart_id, 4);\n```\n\n\u305d\u3057\u3066vkey_id\u3068\u306eor\u3092\u3068\u308b\u3002\n\n```C++\nv8si vpart_key_id = _mm256_or_si256(vkey_id, vpart_id);\n```\n\n\u3053\u308c\u3067256bit\u30c7\u30fc\u30bf\u3068\u3057\u3066key\u7c92\u5b50\u3068partner\u7c92\u5b50\u306e\u756a\u53f7\u304c\u7528\u610f\u3067\u304d\u308b\u3002\n\u4e00\u9023\u306e\u6d41\u308c\u3092\u56f3\u306b\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\n\n\u56f30 vpart_key_id\u304c\u3067\u304d\u308b\u307e\u3067 (i\u3068\u304bja\u3068\u304b\u66f8\u3044\u3066\u3044\u306a\u3044\u3068\u3053\u308d\u306f0\u3067\u57cb\u3081\u3089\u308c\u3066\u3044\u308b\u3002)\n![image](https://qiita-image-store.s3.amazonaws.com/0/120342/9cbc1402-b780-737b-4992-e0c92dc8291e.png)\n#key\u7c92\u5b50\u3068partner\u7c92\u5b50\u306e\u30b9\u30c8\u30a2\n256bit\u30c7\u30fc\u30bfkey\u7c92\u5b50\u3068partner\u7c92\u5b50\u306e\u756a\u53f7\u304c\u7528\u610f\u3067\u304d\u305f\u306e\u3067\u3001$r_{s}$\u4ee5\u5185\u306e\u3082\u306e\u3060\u3051\u3092\u53d6\u308a\u51fa\u3057\u3066\u30b9\u30c8\u30a2\u3059\u308b\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u3002\u3084\u308a\u65b9\u306f\u8272\u3005\u3042\u308a\u305d\u3046\u3060\u304c\u3001\u4eca\u56de\u306fvkey_part_id\u3092\u9069\u5f53\u306b\u4e26\u3073\u66ff\u3048\u3066\u3001$r_{s}$\u4ee5\u5185\u306e\u30da\u30a2\u3060\u3051\u3092\u30ec\u30b8\u30b9\u30bf\u306e\u53f3\u5074\u306b\u304f\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\u4f55\u3092\u3084\u308a\u305f\u3044\u304b\u3068\u3044\u3046\u3068\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306e\u30b3\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u305f\u3088\u3046\u306b\u3001\u30ec\u30b8\u30b9\u30bf\u306e\u4e2d\u8eab\u3092shuffle\u3067\u4e26\u3073\u66ff\u3048\u308b\u3002\n\n```c++\nv4df dr2_flag = _mm256_cmp_pd(dr2_abc, vsl2, _CMP_LE_OS);\nconst int32_t flag = _mm256_movemask_pd(dr2_flag);\n\n// flag\u306e\u5024\u304c5\u3067\u3042\u308b\u3068\u3059\u308b\u30022\u9032\u6570\u3060\u30680101\n// vkey_part_id = {0, 4, 1, 5, 2, 6, 3, 7}\u3067\u3042\u308b\u3068\u3059\u308b\u3002\n\n// hash\u306b\u5fdc\u3058\u3066vkey_part_id\u306e\u5185\u5bb9\u3092\u4e26\u3073\u66ff\u3048\u3066\u3001\u30b9\u30c8\u30a2\u3059\u308b\u30c7\u30fc\u30bf\u3092\u30ec\u30b8\u30b9\u30bf\u306e\u53f3\u5074\u306b\u5bc4\u305b\u308b\nshuffle(vkey_part_id, hash);\n\n// \u5bc4\u305b\u305f\u5f8c\u306e\u5024\u306fvkey_part_id = {0, 4, 2, 6, 0, 0, 0, 0}\u306b\u306a\u308b\u3002\n// \u30ea\u30c8\u30eb\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\n```\n\n\u554f\u984c\u306fshffule\u3092\u3069\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\u304b\u3060\u3002\n128bit\u5883\u754c\u306e\u58c1\u3092\u8d8a\u3048\u3066\u30c7\u30fc\u30bf\u3092\u4e26\u3073\u66ff\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001permute\u7cfb\u306e\u547d\u4ee4\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u305d\u3046\u3060\u3002\u5373\u5024\u3092\u5f15\u6570\u306b\u3068\u3089\u306a\u3044\u3082\u306e\u3092\u63a2\u3059\u3068\n\n```c++\n__m256i _mm256_permutevar8x32_epi32 (__m256i a, __m256i idx)\n```\n\n\u304c\u3042\u3063\u305f\u3002[Intel\u306eguide](https://software.intel.com/sites/landingpage/IntrinsicsGuide/#expand=3401,2256,528,4578,3904&techs=MMX,SSE,SSE2,SSE3,SSSE3,SSE4_1,SSE4_2,AVX,AVX2,FMA&text=_mm256_permutevar8x32_epi32)\u306b\u3088\u308b\u3068\u51e6\u7406\u306e\u8a73\u7d30\u306f\n\n```\nFOR j := 0 to 7\n   i  := j*32\n   id := idx[i+2:i]*32\n   dst[i+31:i] := a[id+31:id] \nENDFOR\ndst[MAX:256] := 0\n```\n\n\u3068\u306a\u3063\u3066\u3044\u308b\u3002gather\u306e\u3088\u3046\u306a\u51e6\u7406\u304c\u3067\u304d\u308b\u3002\n\nidx\u3068flag\u306e\u5024\u306e\u5bfe\u5fdc\u95a2\u4fc2\u3092lookup table\u3068\u3057\u3066\u7528\u610f\u3057\u3066\u304a\u304d\u3001$r_{s}$\u4ee5\u5185\u306e\u7c92\u5b50\u30da\u30a2\u30c7\u30fc\u30bf\u304c\u30ec\u30b8\u30b9\u30bf\u306e\u53f3\u5074\u306b\u56fa\u307e\u308b\u3088\u3046\u306b\u3057\u3088\u3046\u3002\n\n```\nconst int32_t shfl_table_[16][8] = {\n  {0, 0, 0, 0, 0, 0, 0, 0}, // flag: 0000\n  {6, 7, 0, 0, 0, 0, 0, 0}, // flag: 0001\n  {4, 5, 0, 0, 0, 0, 0, 0}, // flag: 0010\n  {4, 5, 6, 7, 0, 0, 0, 0}, // flag: 0011\n  {2, 3, 0, 0, 0, 0, 0, 0}, // flag: 0100\n  {2, 3, 6, 7, 0, 0, 0, 0}, // flag: 0101\n  {2, 3, 4, 5, 0, 0, 0, 0}, // flag: 0110\n  {2, 3, 4, 5, 6, 7, 0, 0}, // flag: 0111\n  {0, 1, 0, 0, 0, 0, 0, 0}, // flag: 1000\n  {0, 1, 6, 7, 0, 0, 0, 0}, // flag: 1001\n  {0, 1, 4, 5, 0, 0, 0, 0}, // flag: 1010\n  {0, 1, 4, 5, 6, 7, 0, 0}, // flag: 1011\n  {0, 1, 2, 3, 0, 0, 0, 0}, // flag: 1100\n  {0, 1, 2, 3, 6, 7, 0, 0}, // flag: 1101\n  {0, 1, 2, 3, 4, 5, 0, 0}, // flag: 1110\n  {0, 1, 2, 3, 4, 5, 6, 7}  // flag: 1111\n};\n```\n\n\u3042\u3068\u3067\u81ea\u5206\u3067\u898b\u76f4\u3057\u3066\u3082\u5206\u304b\u308b\u3088\u3046\u306b\u5177\u4f53\u4f8b\u3092\u4e8c\u3064\u56f3\u3068\u3057\u3066\u793a\u3057\u3066\u304a\u304f\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/120342/710c21fd-d62b-7582-1c69-cb0738fbc4a2.png)\n\n\u30b3\u30fc\u30c9\u3067\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n```C++\n// shuffle\u3059\u308b\u969b\u306eidx\u3092look up table\u304b\u3089\u53d6\u5f97\nv8si idx = _mm256_load_si256(reinterpret_cast<const __m256i*>(shfl_table_[flag]));\n// \u30ec\u30b8\u30b9\u30bf\u5185\u3092\u4e26\u3073\u66ff\u3048\u3066r_{s}\u4ee5\u5185\u306b\u3042\u308b\u7c92\u5b50\u30da\u30a2\u3092\u30ec\u30b8\u30b9\u30bf\u306e\u53f3\u5074\u306b\u5bc4\u305b\u308b\u3002\nvpart_key_id = _mm256_permutevar8x32_epi32(vpart_key_id, idx);\n```\n\n\u3053\u306elookup\u30c6\u30fc\u30d6\u30eb\u306b\u57fa\u3065\u3044\u3066vkey_part_id\u3092\u4e26\u3073\u66ff\u3048\u308b\u3068\u3001\u30ec\u30b8\u30b9\u30bf\u306e\u53f3\u5074\u306b\u30b9\u30c8\u30a2$r_{s}$\u4ee5\u5185\u306b\u3042\u308b\u7c92\u5b50\u30da\u30a2\u306e\u756a\u53f7\u3060\u3051\u304c\u56fa\u307e\u3063\u305f\u72b6\u614b\u306b\u306a\u308b\u3002\u3053\u306e\u5f8c\u306f\u30b9\u30c8\u30a2\u3059\u308b\u3060\u3051\u3002\n\n#pair\u304c\u4f55\u500b\u3042\u308b\u306e\u304b\u3092\u6570\u3048\u308b\nflag\u306e\u60c5\u5831\u306b\u57fa\u3065\u3044\u3066$r_{s}$\u4ee5\u5185\u306b\u3042\u308b\u7c92\u5b50\u30da\u30a2\u306e\u6570\u3092\u6570\u3048\u308b\u3002\n\u3053\u308c\u3082lookup\u30c6\u30fc\u30d6\u30eb\u3092\u7528\u3044\u3066\u5b9f\u88c5\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u306e\u3060\u304c\u3001popcnt32\u3068\u3044\u3046\u547d\u4ee4\u3067\u3067\u304d\u308b\u3002popcnt32\u306f32bit\u6574\u6570\u306e\u305f\u3063\u3066\u3044\u308bbit\u306e\u6570\u3092\u6570\u3048\u308b\u547d\u4ee4\u3067\u3042\u308b\u3002\u4f8b\u3048\u3070flag\u306e\u5024\u304c2\u9032\u6570\u30670101\u3067\u3042\u3063\u305f\u3068\u304d\u3001 popcnt32(flag)\u306f2\u306b\u306a\u308b\u3002\u30b3\u30fc\u30c9\u3067\u793a\u3059\u3068\u3001\n\n```c++\nnumber_of_pairs_ += _popcnt32(flag);\n```\n\n\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n#reference\u7248\u3068\u306e\u901f\u5ea6\u6bd4\u8f03\n\u4e0a\u8a18\u306e\u30a2\u30a4\u30c7\u30a2\u3092\u5143\u306b\u5b9f\u88c5\u3057\u305f\u306e\u304c[\u3053\u308c](https://github.com/kohnakagawa/md_neighbor_list/blob/master/neighlist_cpu_simd.hpp)\u306eMakePairListFusedLoopSIMD\u3067\u3042\u308b\u3002\u300c\u6700\u5185\u30eb\u30fc\u30d74\u500d\u30a2\u30f3\u30ed\u30fc\u30eb\uff0b\u8ddd\u96e2\u8a08\u7b97\u306eSIMD\u5316\uff0b\u7c92\u5b50\u756a\u53f7\u30b9\u30c8\u30a2\u306eSIMD\u5316\u300d\u3092\u884c\u3046\u3068\u7d50\u679c\u306f\n\n|  | \u5b9f\u884c\u6642\u9593 |\n|:-:|:-:|\n| reference  | 22723[ms]  |\n|\u8ddd\u96e2\u8a08\u7b97\u3092SIMD\u5316\u3057\u3066\u9010\u6b21\u30b9\u30c8\u30a2|  24222[ms] |\n|\u8ddd\u96e2\u8a08\u7b97\u3068\u30b9\u30c8\u30a2\u3092SIMD\u5316  | 17821[ms]  |\n\n\u3068\u7121\u4e8b\u306b\u9ad8\u901f\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\n\n#\u307e\u3068\u3081\n\u30b9\u30c8\u30a2\u306e\u90e8\u5206\u306eSIMD\u5316\u3082\u5408\u308f\u305b\u3066\u884c\u3046\u3053\u3068\u3067\u5927\u304d\u304f\u9ad8\u901f\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\u3057\u304b\u3057\u30014\u7c92\u5b50\u540c\u6642\u306b\u51e6\u7406\u3057\u3066\u3044\u308b\u5272\u306b\u306f\u52a0\u901f\u306e\u5ea6\u5408\u3044\u304c\u5c0f\u3055\u3044\u6c17\u304c\u3059\u308b\u3002\u6b21\u56de\u306f\u30a2\u30f3\u30ed\u30fc\u30eb\u3059\u308b\u30eb\u30fc\u30d7\u3092\u4e00\u3064\u5916\u5074\u306b\u3059\u308b\u3053\u3068\u3067\u3055\u3089\u306b\u9ad8\u901f\u5316\u3059\u308b\u3002\n", "tags": ["C++", "AVX", "AVX2"]}