{"context": "\n\u52d5\u4f5c\u74b0\u5883\nUbuntu 14.04 LTS desktop amd64\nGeForce GTX 750 Ti\nASRock Z170M Pro4S [Intel Z170chipset]\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v7.5\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\n\n\nTensorFlow\u3092\u5b66\u7fd2\u4e2d\u3002\nTensorFlow\u3092\u904a\u3073\u5012\u3059\uff01 4-1. Convolutional Neural Networks\nhttp://blog.brainpad.co.jp/entry/2016/04/22/170000\nhttps://www.tensorflow.org/versions/master/tutorials/deep_cnn/index.html\ncifar10_eval.py\u3092\u898b\u3066\u3044\u308b\u3002\n\ncifar10_eval.py\n  with tf.Session() as sess:\n...\n    # Start the queue runners.\n    coord = tf.train.Coordinator()\n\n\n\u4e0a\u8a18\u306b\u95a2\u9023\u3057\u305d\u3046\u306a\u30ea\u30f3\u30af\u3002\n\nCoordinator and QueueRunner\n\n\nclass tf.train.Coordinator\n\n\ntf.train.Coordinator.__init__(clean_stop_exception_types=None)\ntf.train.Coordinator.clear_stop()\ntf.train.Coordinator.join(threads=None, stop_grace_period_secs=120)\ntf.train.Coordinator.joined\ntf.train.Coordinator.register_thread(thread)\ntf.train.Coordinator.request_stop(ex=None)\ntf.train.Coordinator.should_stop()\ntf.train.Coordinator.stop_on_exception()\ntf.train.Coordinator.wait_for_stop(timeout=None)\n\n\nclass tf.train.QueueRunner\n\n\ntf.train.QueueRunner.__init__(queue=None, enqueue_ops=None, close_op=None, cancel_op=None, queue_closed_exception_types=None, queue_runner_def=None)\ntf.train.QueueRunner.cancel_op\ntf.train.QueueRunner.close_op\ntf.train.QueueRunner.create_threads(sess, coord=None, daemon=False, start=False)\ntf.train.QueueRunner.enqueue_ops\ntf.train.QueueRunner.exceptions_raised\ntf.train.QueueRunner.from_proto(queue_runner_def)\ntf.train.QueueRunner.name\ntf.train.QueueRunner.queue\ntf.train.QueueRunner.queue_closed_exception_types\ntf.train.QueueRunner.to_proto()\ntf.train.add_queue_runner(qr, collection='queue_runners')\ntf.train.start_queue_runners(sess=None, coord=None, daemon=True, start=True, collection='queue_runners')\n\n\n\n\nThreading and Queues\n\n\u6c17\u306b\u306a\u3063\u305f\u90e8\u5206\u306e\u629c\u7c8b\n\n\u7b2c1\u7bc0\n\n\nLike everything in TensorFlow, a queue is a node in a TensorFlow graph.\nother nodes can modify its content.\nWe will create a \"first in, first out\" queue (FIFOQueue)\n\nEnqueue, EnqueueMany, and Dequeue are special nodes.\n\n\nQueue Use Overview\u7bc0\n\n\nsuch as FIFOQueue and RandomShuffleQueue\n\n... is to use a RandomShuffleQueue to prepare inputs for training a model:\nThe TensorFlow Session object is multithreaded\nHowever, it is not always easy to implement a Python program that drives threads as described above. \n\nThe Coordinator class helps multiple threads stop together and report exceptions to a program that waits for them to stop. \n\nThe QueueRunner class is used to create a number of threads cooperating to enqueue tensors in the same queue.\n\n\nCoordinator\u7bc0\n\n\nIts key methods are:\n\n\n\nshould_stop(): returns True if the threads should stop.\n\nrequest_stop(<exception>): requests that threads should stop.\n\njoin(<list of threads>): waits until the specified threads have stopped.\n\n\n(\u88dc\u8db3) POSIX\u30b9\u30ec\u30c3\u30c9?\u306ejoin\u3092\u601d\u3044\u51fa\u3059\n\n\n\n\n(\u88dc\u8db3) \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\nThe coordinator also has support to capture and report exceptions.\n\n\nQueueRunner\u7bc0\n\n\nThese threads can use a coordinator to stop together. \nIn addition, a queue runner runs a closer thread that automatically closes the queue if an exception is reported to the coordinator.\n(\u88dc\u8db3) \u5b66\u7fd2\u3078\u306e\u5165\u529b\u3092\u7528\u610f\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u63b2\u8f09\u308c\u3066\u3044\u308b\n(\u88dc\u8db3) Coordinator\u3092\u4f5c\u6210\u3057queue runner\u3092\u958b\u59cb\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\n\n\nHandling Exceptions\u7bc0\n\n\n\nOutOfRangeError which is used to report that a queue was closed.\n(\u88dc\u8db3) \u4e0a\u306e\u65b9\u3067\u63b2\u8f09\u3055\u308c\u305f\u5b66\u7fd2\u30eb\u30fc\u30d7\u306e\u6539\u826f\u7248\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\n\n\n\n```txt:\u52d5\u4f5c\u74b0\u5883\nUbuntu 14.04 LTS desktop amd64\nGeForce GTX 750 Ti\nASRock Z170M Pro4S [Intel Z170chipset]\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v7.5\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\n```\n\nTensorFlow\u3092\u5b66\u7fd2\u4e2d\u3002\n\nTensorFlow\u3092\u904a\u3073\u5012\u3059\uff01 4-1. Convolutional Neural Networks\nhttp://blog.brainpad.co.jp/entry/2016/04/22/170000\nhttps://www.tensorflow.org/versions/master/tutorials/deep_cnn/index.html\n\ncifar10_eval.py\u3092\u898b\u3066\u3044\u308b\u3002\n\n```cifar10_eval.py\n  with tf.Session() as sess:\n...\n    # Start the queue runners.\n    coord = tf.train.Coordinator()\n```\n\n\u4e0a\u8a18\u306b\u95a2\u9023\u3057\u305d\u3046\u306a\u30ea\u30f3\u30af\u3002\n\n### [Coordinator and QueueRunner](https://www.tensorflow.org/versions/r0.11/api_docs/python/train.html#coordinator-and-queuerunner)\n\n- class tf.train.Coordinator\n  - `tf.train.Coordinator.__init__(clean_stop_exception_types=None)`\n  - tf.train.Coordinator.clear_stop()\n  - tf.train.Coordinator.join(threads=None, stop_grace_period_secs=120)\n  - tf.train.Coordinator.joined\n  - tf.train.Coordinator.register_thread(thread)\n  - tf.train.Coordinator.request_stop(ex=None)\n  - tf.train.Coordinator.should_stop()\n  - tf.train.Coordinator.stop_on_exception()\n  - tf.train.Coordinator.wait_for_stop(timeout=None)\n- class tf.train.QueueRunner\n  - `tf.train.QueueRunner.__init__(queue=None, enqueue_ops=None, close_op=None, cancel_op=None, queue_closed_exception_types=None, queue_runner_def=None)`\n  - tf.train.QueueRunner.cancel_op\n  - tf.train.QueueRunner.close_op\n  - tf.train.QueueRunner.create_threads(sess, coord=None, daemon=False, start=False)\n  - tf.train.QueueRunner.enqueue_ops\n  - tf.train.QueueRunner.exceptions_raised\n  - tf.train.QueueRunner.from_proto(queue_runner_def)\n  - tf.train.QueueRunner.name\n  - tf.train.QueueRunner.queue\n  - tf.train.QueueRunner.queue_closed_exception_types\n  - tf.train.QueueRunner.to_proto()\n  - tf.train.add_queue_runner(qr, collection='queue_runners')\n  - tf.train.start_queue_runners(sess=None, coord=None, daemon=True, start=True, collection='queue_runners')\n\n### [Threading and Queues](https://www.tensorflow.org/versions/r0.11/how_tos/threading_and_queues/index.html)\n\n\u6c17\u306b\u306a\u3063\u305f\u90e8\u5206\u306e\u629c\u7c8b\n\n- \u7b2c1\u7bc0\n  - Like everything in TensorFlow, a queue is a node in a TensorFlow graph.\n  - other nodes can modify its content.\n  - We will create a \"first in, first out\" queue (FIFOQueue)\n  - <font color=red>Enqueue, EnqueueMany, and Dequeue</font> are special nodes.\n- Queue Use Overview\u7bc0\n  - such as <font color=red>FIFOQueue and RandomShuffleQueue</font>\n  - ... is to use a RandomShuffleQueue to prepare inputs for training a model:\n  - The TensorFlow Session object is multithreaded\n  - However, it is not always easy to implement a Python program that drives threads as described above. \n  - <font color=red>The Coordinator class</font> helps multiple threads stop together and report exceptions to a program that waits for them to stop. \n  - <font color=red>The QueueRunner class</font> is used to create a number of threads cooperating to enqueue tensors in the same queue.\n- Coordinator\u7bc0\n  - Its key methods are:\n     - `should_stop()`: returns True if the threads should stop.\n     - `request_stop(<exception>)`: requests that threads should stop.\n     - `join(<list of threads>)`: waits until the specified threads have stopped.\n         - (\u88dc\u8db3) POSIX\u30b9\u30ec\u30c3\u30c9?\u306ejoin\u3092\u601d\u3044\u51fa\u3059\n  - (\u88dc\u8db3) \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\n  - The coordinator also has support to capture and report exceptions.\n- QueueRunner\u7bc0\n  - These threads can use a coordinator to stop together. \n  - In addition, a queue runner runs a closer thread that automatically closes the queue if an exception is reported to the coordinator.\n  - (\u88dc\u8db3) \u5b66\u7fd2\u3078\u306e\u5165\u529b\u3092\u7528\u610f\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u63b2\u8f09\u308c\u3066\u3044\u308b\n  - (\u88dc\u8db3) Coordinator\u3092\u4f5c\u6210\u3057queue runner\u3092\u958b\u59cb\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\n- Handling Exceptions\u7bc0\n  - <font color=red>OutOfRangeError</font> which is used to report that a queue was closed.\n  - (\u88dc\u8db3) \u4e0a\u306e\u65b9\u3067\u63b2\u8f09\u3055\u308c\u305f\u5b66\u7fd2\u30eb\u30fc\u30d7\u306e\u6539\u826f\u7248\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\n", "tags": ["TensorFlow", "link", "borgWarp"]}