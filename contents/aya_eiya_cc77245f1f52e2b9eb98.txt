{"context": " More than 1 year has passed since last update.\u3064\u307e\u308a\u3001\nA =\\{a_0,..,a_n\\}\\\\\nB \\subseteq A\\\\\n\\forall B(B \\in f(A))\n\n\u3068\u306a\u308b\u95a2\u6570$f(A)$\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u4f46\u3057\u3001$A=\\phi$ \u306e\u3068\u304d $f(A)=\\{\\phi\\}$ \u3068\u3057\u3066\u3044\u307e\u3059\u3002\ndef getSubsets = {l->\n  if(!l) return [[]]\n  def ss = []\n  def x = Integer.parseInt(('1' * l.size()),2)\n  for(int y=x;y>0;y=--y&x){\n    def s = []\n    Integer.toBinaryString(y).padLeft(8, '0').reverse().eachWithIndex{flg,idx->\n      if(flg=='1') s << l[idx]\n    }\n    ss << s\n  }\n  ss\n}\n\n\u30d3\u30c3\u30c8\u6f14\u7b97y=--y&x\u304c\u3053\u306e\u8a08\u7b97\u306e\u8981\u65e8\u3067\u3001\u3053\u308c\u306f\u30d3\u30c3\u30c8\u306e\u90e8\u5206\u96c6\u5408\u3092\u5f97\u307e\u3059\u3002\n\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u771f\u507d\u8868\u3067\u3082\u66f8\u3044\u3066\u78ba\u304b\u3081\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u30ea\u30b9\u30c8\u306e\u30b5\u30a4\u30ba\u306eBit\u8868\u73fe\u306e\u90e8\u5206\u96c6\u5408\u306e\u9006\u9806\u30ea\u30b9\u30c8\u306e\u30d5\u30e9\u30b0\u4f4d\u7f6e\u3092\u6c42\u3081\u308b\u3053\u3068\u3067\u3001\u4efb\u610f\u306e\u30ea\u30b9\u30c8\u306e\u90e8\u5206\u96c6\u5408\u3092\u5f97\u3089\u308c\u307e\u3059\u3002\ngroovy> def list = [1,2,3] \ngroovy> getSubset(list) \n\nResult: [[1, 2, 3], [2, 3], [1, 3], [3], [1, 2], [2], [1]]\n\n\u306a\u304a\u3001\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u95a2\u6570\u306b\u9577\u3044\u30ea\u30b9\u30c8\u3092\u53e9\u304d\u8fbc\u3080\u3068\u51fa\u529b\u304c\u3069\u30a8\u30e9\u30a4\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u90e8\u5206\u96c6\u5408\u3092\u5f15\u6570\u3068\u3057\u3066\u3068\u308b\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u5f15\u6570\u3068\u3057\u3066\u53d6\u308b\u95a2\u6570\u306b\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u90e8\u5206\u96c6\u5408\u306b\u5bfe\u3059\u308b\uff08\u8fd4\u5374\u3059\u3079\u304d\uff09\u6f14\u7b97\u7d50\u679c\u306e\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\u304f\u3089\u3044\u306b\u3057\u3066\u304a\u3044\u305f\u307b\u3046\u304c\u7121\u96e3\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u53c2\u8003\uff1ahttp://d.hatena.ne.jp/deve68/?of=40\n\u3064\u307e\u308a\u3001\n\n```math\nA =\\{a_0,..,a_n\\}\\\\\nB \\subseteq A\\\\\n\\forall B(B \\in f(A))\n```\n\u3068\u306a\u308b\u95a2\u6570$f(A)$\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u4f46\u3057\u3001$A=\\phi$ \u306e\u3068\u304d $f(A)=\\\\{\\phi\\\\}$ \u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n```groovy\ndef getSubsets = {l->\n  if(!l) return [[]]\n  def ss = []\n  def x = Integer.parseInt(('1' * l.size()),2)\n  for(int y=x;y>0;y=--y&x){\n    def s = []\n    Integer.toBinaryString(y).padLeft(8, '0').reverse().eachWithIndex{flg,idx->\n      if(flg=='1') s << l[idx]\n    }\n    ss << s\n  }\n  ss\n}\n```\n\n\u30d3\u30c3\u30c8\u6f14\u7b97<code>y=--y&x</code>\u304c\u3053\u306e\u8a08\u7b97\u306e\u8981\u65e8\u3067\u3001\u3053\u308c\u306f\u30d3\u30c3\u30c8\u306e\u90e8\u5206\u96c6\u5408\u3092\u5f97\u307e\u3059\u3002\n\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u771f\u507d\u8868\u3067\u3082\u66f8\u3044\u3066\u78ba\u304b\u3081\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30ea\u30b9\u30c8\u306e\u30b5\u30a4\u30ba\u306eBit\u8868\u73fe\u306e\u90e8\u5206\u96c6\u5408\u306e\u9006\u9806\u30ea\u30b9\u30c8\u306e\u30d5\u30e9\u30b0\u4f4d\u7f6e\u3092\u6c42\u3081\u308b\u3053\u3068\u3067\u3001\u4efb\u610f\u306e\u30ea\u30b9\u30c8\u306e\u90e8\u5206\u96c6\u5408\u3092\u5f97\u3089\u308c\u307e\u3059\u3002\n\n```groovy\ngroovy> def list = [1,2,3] \ngroovy> getSubset(list) \n \nResult: [[1, 2, 3], [2, 3], [1, 3], [3], [1, 2], [2], [1]]\n```\n\n\u306a\u304a\u3001\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u95a2\u6570\u306b\u9577\u3044\u30ea\u30b9\u30c8\u3092\u53e9\u304d\u8fbc\u3080\u3068\u51fa\u529b\u304c\u3069\u30a8\u30e9\u30a4\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u90e8\u5206\u96c6\u5408\u3092\u5f15\u6570\u3068\u3057\u3066\u3068\u308b\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u5f15\u6570\u3068\u3057\u3066\u53d6\u308b\u95a2\u6570\u306b\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u90e8\u5206\u96c6\u5408\u306b\u5bfe\u3059\u308b\uff08\u8fd4\u5374\u3059\u3079\u304d\uff09\u6f14\u7b97\u7d50\u679c\u306e\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\u304f\u3089\u3044\u306b\u3057\u3066\u304a\u3044\u305f\u307b\u3046\u304c\u7121\u96e3\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u53c2\u8003\uff1ahttp://d.hatena.ne.jp/deve68/?of=40\n", "tags": ["Groovy"]}