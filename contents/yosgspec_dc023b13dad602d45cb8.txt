{"context": "\u7d20\u306eHSP\u3067\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306f\u307b\u307c\u3067\u304d\u306a\u3044\u306e\u3067exec\u3067\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u3092\u7d44\u307f\u8fbc\u3080\u3002\n\u4eca\u56de\u306f\u3053\u3061\u3089\u3092\u304a\u501f\u308a\u3057\u3066\u5171\u6709\u30e1\u30e2\u30ea\u3067\u5024\u306e\u53d6\u308a\u4ea4\u308f\u3057\u3092\u884c\u3063\u3066\u307f\u305f\u3002\n\u8fd1\u3044\u3046\u3061\u306b\u9762\u5012\u81ed\u3044\u90e8\u5206\u3059\u3079\u3066\u96a0\u853d\u3057\u3066\u3055\u3089\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3067\u304d\u305f\u3089\u9762\u767d\u305d\u3046\u3060\u3051\u3069\u96e3\u3057\u3044\u304b\u306a\u3041\u3002\n#packopt name \"MPN\"\n#runtime \"hsp3cl\"\n#include \"MemoryMapModule.as\"\n\n*Entry\n    //exe\u30d5\u30a1\u30a4\u30eb\u4f4d\u7f6e\n    #uselib \"kernel32\"\n    #func GetModuleFileName \"GetModuleFileNameA\" int,int,int\n    sdim fullExePath, 256\n    GetModuleFileName,varptr(fullExePath),256\n    ExeName=getpath(fullExePath,8)\n    deli=\", \"   //\u533a\u5207\u308a\u6587\u5b57\n\n    cmd=dir_cmdline\n    //\u30b5\u30d6\u30d7\u30ed\u30bb\u30b9\u306e\u5224\u5225\n    if 0<=instr(cmd,,\"$ProcesS$\") {\n        //\u95a2\u6570\u306e\u53d6\u5f97\n        split cmd,\"$PFuncID$\",nul,PFuncID,paramStr\n        ProcessFuncLoad\n        //\u95a2\u6570\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u6295\u3052\u8fbc\u3093\u3067\u51e6\u7406\u3092\u4efb\u305b\u308b\n        subProcess List@ProcessFunc(int(PFuncID))\n    }\n    else {\n        main\n    }\nend\n\n//\u30d7\u30ed\u30bb\u30b9\u306b\u6295\u3052\u8fbc\u3080\u95a2\u6570\n#module ProcessFunc\n    #deffunc ProcessFuncLoad\n        //\u30e9\u30d9\u30eb\u30ea\u30b9\u30c8\n        List=*delayWait\n    return\n    //gosub\u30b2\u30c3\u30bf\u30fc(\u5f15\u6570)\n    #define global params(%1=nul,%2=nul,%3=nul,%4=nul,%5=nul) split paramStr@,\"$ParamS$\",%1,%2,%3,%4,%5\n    //gosub\u30bb\u30c3\u30bf\u30fc(\u623b\u308a\u5024)\n    #deffunc resolve var value\n        returnValue@HSProcess=value\n    return\n\n*delayWait:params _wait,_PID\n        await int(_wait)*10\n        resolve _wait\n    return\n#global\n\n//\u30b5\u30d6\u30d7\u30ed\u30bb\u30b9\u306e\u51e6\u7406\u7528\u30e2\u30b8\u30e5\u30fc\u30eb\n#module HSProcess\n    //\u5171\u6709\u30e1\u30e2\u30ea\u4f5c\u6210\u5b9a\u7fa9\n    count=0\n    #define global memInt(%1,%2=\"\") newmod PGate,MemoryMapModule,ExeName@+%2,256: Mmry_DupMemory PGate(count),%1:count++\n    #define global memStr(%1,%2=\"\") newmod PGate,MemoryMapModule,ExeName@+%2,256: Mmry_DupMemory PGate(count),%1,2:count++\n    //\u4e00\u62ec\u30d7\u30ed\u30bb\u30b9\u8d77\u52d5\n    #define global ProcessRuns(%1,%2) foreach %1: \\\n        exec ExeName@+\" \"+\"$ProcesS$$PFuncID$\"+%2+\"$PFuncID$\"+int(%1(cnt))+\"$ParamS$\"+cnt: \\\n    loop\n    //\u30d7\u30ed\u30bb\u30b9\u5f85\u3061\u5408\u308f\u305b\n    #define global ProcessAll(%1) repeat: if length(%1)=PCnt {break}: loop\n    //String.Join\n    #defcfunc joinStr array _array,str _deli\n        _str=\"\"\n        foreach _array\n            if cnt!=0:_str+=_deli\n            _str+=_array(cnt)\n        loop\n    return _str\n\n    //\u30b5\u30d6\u30d7\u30ed\u30bb\u30b9\n    #deffunc subProcess var ProcessCall\n        memInt PCnt,\"PCnt\"\n        memStr PIDs,\"PIDs\"\n        memStr PResult,\"PResult\"\n\n        gosub ProcessCall\n        Result=returnValue\n        params ,PID\n\n        if 0<PCnt {\n            PResult=PResult+deli@\n            PIDs=PIDs+deli@\n        }\n        PResult=PResult+str(Result)\n        PIDs=PIDs+str(PID)\n        PCnt++\n    return\n#global\n\n//\u30e1\u30a4\u30f3\u30d7\u30ed\u30bb\u30b9\n#module Program\n    #uselib \"msvcrt\"\n    #func printf \"printf\" str\n\n    #deffunc main\n        printf(\"\u3010MultiProcessExec\u3011\\n> \")\n        //input _input,256,1\n        _input=\"500 300 100 15 72 10\"\n        mes _input\n        split _input,\" \",items\n        memInt PCnt,\"PCnt\"\n        memStr PIDs,\"PIDs\"\n        memStr PResult,\"PResult\"\n\n        ProcessRuns items,0\n        ProcessAll items\n\n        split PResult,deli@,sortResult\n        mes \"done!\"\n        mes joinStr(sortResult,deli@)\n\n        input exit,,1\n    return\n#global\n\n\u7d20\u306eHSP\u3067\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306f\u307b\u307c\u3067\u304d\u306a\u3044\u306e\u3067exec\u3067\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u3092\u7d44\u307f\u8fbc\u3080\u3002\n\u4eca\u56de\u306f[\u3053\u3061\u3089](http://www.tvg.ne.jp/menyukko/cauldron/hmmemorymap.html)\u3092\u304a\u501f\u308a\u3057\u3066\u5171\u6709\u30e1\u30e2\u30ea\u3067\u5024\u306e\u53d6\u308a\u4ea4\u308f\u3057\u3092\u884c\u3063\u3066\u307f\u305f\u3002\n\u8fd1\u3044\u3046\u3061\u306b\u9762\u5012\u81ed\u3044\u90e8\u5206\u3059\u3079\u3066\u96a0\u853d\u3057\u3066\u3055\u3089\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3067\u304d\u305f\u3089\u9762\u767d\u305d\u3046\u3060\u3051\u3069\u96e3\u3057\u3044\u304b\u306a\u3041\u3002\n\n```cpp:\n#packopt name \"MPN\"\n#runtime \"hsp3cl\"\n#include \"MemoryMapModule.as\"\n\n*Entry\n\t//exe\u30d5\u30a1\u30a4\u30eb\u4f4d\u7f6e\n\t#uselib \"kernel32\"\n\t#func GetModuleFileName \"GetModuleFileNameA\" int,int,int\n\tsdim fullExePath, 256\n\tGetModuleFileName,varptr(fullExePath),256\n\tExeName=getpath(fullExePath,8)\n\tdeli=\", \"\t//\u533a\u5207\u308a\u6587\u5b57\n\t\n\tcmd=dir_cmdline\n\t//\u30b5\u30d6\u30d7\u30ed\u30bb\u30b9\u306e\u5224\u5225\n\tif 0<=instr(cmd,,\"$ProcesS$\") {\n\t\t//\u95a2\u6570\u306e\u53d6\u5f97\n\t\tsplit cmd,\"$PFuncID$\",nul,PFuncID,paramStr\n\t\tProcessFuncLoad\n\t\t//\u95a2\u6570\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u6295\u3052\u8fbc\u3093\u3067\u51e6\u7406\u3092\u4efb\u305b\u308b\n\t\tsubProcess List@ProcessFunc(int(PFuncID))\n\t}\n\telse {\n\t\tmain\n\t}\nend\n\n//\u30d7\u30ed\u30bb\u30b9\u306b\u6295\u3052\u8fbc\u3080\u95a2\u6570\n#module ProcessFunc\n\t#deffunc ProcessFuncLoad\n\t\t//\u30e9\u30d9\u30eb\u30ea\u30b9\u30c8\n\t\tList=*delayWait\n\treturn\n\t//gosub\u30b2\u30c3\u30bf\u30fc(\u5f15\u6570)\n\t#define global params(%1=nul,%2=nul,%3=nul,%4=nul,%5=nul) split paramStr@,\"$ParamS$\",%1,%2,%3,%4,%5\n\t//gosub\u30bb\u30c3\u30bf\u30fc(\u623b\u308a\u5024)\n\t#deffunc resolve var value\n\t\treturnValue@HSProcess=value\n\treturn\n\n*delayWait:params _wait,_PID\n\t\tawait int(_wait)*10\n\t\tresolve _wait\n\treturn\n#global\n\n//\u30b5\u30d6\u30d7\u30ed\u30bb\u30b9\u306e\u51e6\u7406\u7528\u30e2\u30b8\u30e5\u30fc\u30eb\n#module HSProcess\n\t//\u5171\u6709\u30e1\u30e2\u30ea\u4f5c\u6210\u5b9a\u7fa9\n\tcount=0\n\t#define global memInt(%1,%2=\"\") newmod PGate,MemoryMapModule,ExeName@+%2,256: Mmry_DupMemory PGate(count),%1:count++\n\t#define global memStr(%1,%2=\"\") newmod PGate,MemoryMapModule,ExeName@+%2,256: Mmry_DupMemory PGate(count),%1,2:count++\n\t//\u4e00\u62ec\u30d7\u30ed\u30bb\u30b9\u8d77\u52d5\n\t#define global ProcessRuns(%1,%2) foreach %1: \\\n\t\texec ExeName@+\" \"+\"$ProcesS$$PFuncID$\"+%2+\"$PFuncID$\"+int(%1(cnt))+\"$ParamS$\"+cnt: \\\n\tloop\n\t//\u30d7\u30ed\u30bb\u30b9\u5f85\u3061\u5408\u308f\u305b\n\t#define global ProcessAll(%1) repeat: if length(%1)=PCnt {break}: loop\n\t//String.Join\n\t#defcfunc joinStr array _array,str _deli\n\t\t_str=\"\"\n\t\tforeach _array\n\t\t\tif cnt!=0:_str+=_deli\n\t\t\t_str+=_array(cnt)\n\t\tloop\n\treturn _str\n\n\t//\u30b5\u30d6\u30d7\u30ed\u30bb\u30b9\n\t#deffunc subProcess var ProcessCall\n\t\tmemInt PCnt,\"PCnt\"\n\t\tmemStr PIDs,\"PIDs\"\n\t\tmemStr PResult,\"PResult\"\n\n\t\tgosub ProcessCall\n\t\tResult=returnValue\n\t\tparams ,PID\n\t\n\t\tif 0<PCnt {\n\t\t\tPResult=PResult+deli@\n\t\t\tPIDs=PIDs+deli@\n\t\t}\n\t\tPResult=PResult+str(Result)\n\t\tPIDs=PIDs+str(PID)\n\t\tPCnt++\n\treturn\n#global\n\n//\u30e1\u30a4\u30f3\u30d7\u30ed\u30bb\u30b9\n#module Program\n\t#uselib \"msvcrt\"\n\t#func printf \"printf\" str\n\n\t#deffunc main\n\t\tprintf(\"\u3010MultiProcessExec\u3011\\n> \")\n\t\t//input _input,256,1\n\t\t_input=\"500 300 100 15 72 10\"\n\t\tmes _input\n\t\tsplit _input,\" \",items\n\t\tmemInt PCnt,\"PCnt\"\n\t\tmemStr PIDs,\"PIDs\"\n\t\tmemStr PResult,\"PResult\"\n\n\t\tProcessRuns items,0\n\t\tProcessAll items\n\n\t\tsplit PResult,deli@,sortResult\n\t\tmes \"done!\"\n\t\tmes joinStr(sortResult,deli@)\n\n\t\tinput exit,,1\n\treturn\n#global\n```\n", "tags": ["HSP"]}