{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f bouzuya's RxJS Advent Calendar 2015 \u306e 9 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 9 \u65e5\u76ee\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u4eca\u65e5\u306f ReactiveX \u306e Observable Utility Operators \u306b\u3064\u3044\u3066 RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305f RxJS 4.0.7 \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nObservable Utility Operators\n\nObservable.prototype.subscribe\n\n\nReactiveX - Subscribe operator\nObservable.prototype.subscribe API Document\nObservable.prototype.subscribe Source Code\n\n\u30ea\u30b9\u30c8\u4e0a\u306f subscribe \u304c\u6319\u3052\u3089\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3082\u3046\u7279\u306b\u66f8\u304f\u3053\u3068\u306f\u306a\u3044\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\nObservable.prototype.subscribeOn\n\n\nReactiveX - SubscribeOn operator\nObservable.prototype.subscribeOn API Document\nObservable.prototype.subscribeOn Source Code\n\n\u6307\u5b9a\u3057\u305f scheduler \u306b\u5f93\u3063\u3066\u5024\u3092\u6d41\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nimport { Observable, Scheduler } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .subscribeOn(Scheduler.default)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\nconsole.log('start');\n// start\n// onNext: 1\n// onNext: 2\n// onNext: 3\n// onCompleted\n\n\u305f\u3060 immediate (\u540c\u671f\u7684) -> default (\u975e\u540c\u671f) \u306f\u3068\u3082\u304b\u304f\u3001\u5f53\u7136\u3001\u305d\u306e\u9006\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u4e00\u5ea6 default \u306b\u3059\u308b\u3068 immediate \u306b\u623b\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u305b\u3093\u3002\n\u307e\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f Scheduler.timeout \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u65e2\u306b\u524a\u9664\u3055\u308c\u3066\u304a\u308a Scheduler.default \u306b\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002(Scheduler.default \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3058\u3083\u306a\u3044 Scheduler.immediate \u306a\u306e\u3082\u3088\u304f\u5206\u304b\u308a\u307e\u305b\u3093)\n\nObservable.prototype.do\n\n\nReactiveX - Do operator\nObservable.prototype.do API Document\nObservable.prototype.do Source Code\n\ndo \u306f\u526f\u4f5c\u7528\u3092\u524d\u63d0\u3068\u3057\u305f\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3002 do \u306e\u623b\u308a\u5024\u306b\u95a2\u4fc2\u306a\u304f\u6d41\u308c\u3066\u304d\u305f\u5024\u306f\u6b21\u306b\u6d41\u308c\u307e\u3059\u3002 subscribe \u3068\u540c\u69d8\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u6301\u3064\u306e\u3067\u3001Observer \u3092\u6307\u5b9a\u305b\u305a\u306b onNext \u306a\u3069\u3092\u76f4\u63a5\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3, 4])\n  .do(value => console.log(`do: ${value}`))\n  .filter(value => value % 2 === 0)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// do: 1\n// do: 2\n// onNext: 2\n// do: 3\n// do: 4\n// onNext: 4\n// onCompleted\n\n\u30c7\u30d0\u30c3\u30b0\u306e\u969b\u306b\u6d41\u308c\u308b\u5024\u3092\u78ba\u8a8d\u3059\u308b\u306e\u306b\u4fbf\u5229\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nObservable.prototype.delay\n\n\nReactiveX - Delay operator\nObservable.prototype.delay API Document\nObservable.prototype.delay Source Code\n\ndelay \u306f\u9045\u3089\u305b\u3066\u5024\u3092\u6d41\u3057\u307e\u3059\u3002\u7d76\u5bfe\u6642\u9593 (Date) \u3084\u76f8\u5bfe\u6642\u9593 (ms) \u3084 Observable \u3067\u306e\u6307\u5b9a\u306a\u3069\u304c\u3067\u304d\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .delay(1000)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`e ${new Date().getTime()}`)\n  );\nconsole.log(`s ${new Date().getTime()}`);\n// s 1449639923044\n// onNext: 1\n// onNext: 2\n// onNext: 3\n// e 1449639924038\n\n\u5f53\u7136\u3001\u975e\u540c\u671f\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u304a\u308f\u308a\u306b\n\u4eca\u65e5\u306f Observable \u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3092\u898b\u307e\u3057\u305f\u3002\u307e\u3060\u9014\u4e2d\u306a\u306e\u3067\u7d9a\u304d\u306f\u660e\u65e5\u306b\u3057\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [bouzuya's RxJS Advent Calendar 2015](http://www.adventar.org/calendars/1200) \u306e 9 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 9 \u65e5\u76ee\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\n\u4eca\u65e5\u306f [ReactiveX \u306e Observable Utility Operators](http://reactivex.io/documentation/operators.html#utility) \u306b\u3064\u3044\u3066 [RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/observable.md)\u3084\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u307e\u305f [RxJS 4.0.7](https://github.com/Reactive-Extensions/RxJS/tree/v4.0.7) \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n# Observable Utility Operators\n\n## `Observable.prototype.subscribe`\n\n- [ReactiveX - Subscribe operator](http://reactivex.io/documentation/operators/subscribe.html)\n- [`Observable.prototype.subscribe` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/subscribe.md)\n- [`Observable.prototype.subscribe` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/observable.js)\n\n\u30ea\u30b9\u30c8\u4e0a\u306f `subscribe` \u304c\u6319\u3052\u3089\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3082\u3046\u7279\u306b\u66f8\u304f\u3053\u3068\u306f\u306a\u3044\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\n## `Observable.prototype.subscribeOn`\n\n- [ReactiveX - SubscribeOn operator](http://reactivex.io/documentation/operators/subscribeOn.html)\n- [`Observable.prototype.subscribeOn` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/subscribeon.md)\n- [`Observable.prototype.subscribeOn` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/subscribeon.js)\n\n\u6307\u5b9a\u3057\u305f `scheduler` \u306b\u5f93\u3063\u3066\u5024\u3092\u6d41\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```js\nimport { Observable, Scheduler } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .subscribeOn(Scheduler.default)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\nconsole.log('start');\n// start\n// onNext: 1\n// onNext: 2\n// onNext: 3\n// onCompleted\n```\n\n\u305f\u3060 `immediate` (\u540c\u671f\u7684) -> `default` (\u975e\u540c\u671f) \u306f\u3068\u3082\u304b\u304f\u3001\u5f53\u7136\u3001\u305d\u306e\u9006\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u4e00\u5ea6 `default` \u306b\u3059\u308b\u3068 `immediate` \u306b\u623b\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u307e\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f `Scheduler.timeout` \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u65e2\u306b\u524a\u9664\u3055\u308c\u3066\u304a\u308a `Scheduler.default` \u306b\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002(`Scheduler.default` \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3058\u3083\u306a\u3044 `Scheduler.immediate` \u306a\u306e\u3082\u3088\u304f\u5206\u304b\u308a\u307e\u305b\u3093)\n\n## `Observable.prototype.do`\n\n- [ReactiveX - Do operator](http://reactivex.io/documentation/operators/do.html)\n- [`Observable.prototype.do` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/do.md)\n- [`Observable.prototype.do` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/do.js)\n\n`do` \u306f\u526f\u4f5c\u7528\u3092\u524d\u63d0\u3068\u3057\u305f\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3002 `do` \u306e\u623b\u308a\u5024\u306b\u95a2\u4fc2\u306a\u304f\u6d41\u308c\u3066\u304d\u305f\u5024\u306f\u6b21\u306b\u6d41\u308c\u307e\u3059\u3002 `subscribe` \u3068\u540c\u69d8\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u6301\u3064\u306e\u3067\u3001`Observer` \u3092\u6307\u5b9a\u305b\u305a\u306b `onNext` \u306a\u3069\u3092\u76f4\u63a5\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3, 4])\n  .do(value => console.log(`do: ${value}`))\n  .filter(value => value % 2 === 0)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// do: 1\n// do: 2\n// onNext: 2\n// do: 3\n// do: 4\n// onNext: 4\n// onCompleted\n```\n\n\u30c7\u30d0\u30c3\u30b0\u306e\u969b\u306b\u6d41\u308c\u308b\u5024\u3092\u78ba\u8a8d\u3059\u308b\u306e\u306b\u4fbf\u5229\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n## `Observable.prototype.delay`\n\n- [ReactiveX - Delay operator](http://reactivex.io/documentation/operators/delay.html)\n- [`Observable.prototype.delay` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/delay.md)\n- [`Observable.prototype.delay` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/delay.js)\n\n`delay` \u306f\u9045\u3089\u305b\u3066\u5024\u3092\u6d41\u3057\u307e\u3059\u3002\u7d76\u5bfe\u6642\u9593 (`Date`) \u3084\u76f8\u5bfe\u6642\u9593 (ms) \u3084 `Observable` \u3067\u306e\u6307\u5b9a\u306a\u3069\u304c\u3067\u304d\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .delay(1000)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`e ${new Date().getTime()}`)\n  );\nconsole.log(`s ${new Date().getTime()}`);\n// s 1449639923044\n// onNext: 1\n// onNext: 2\n// onNext: 3\n// e 1449639924038\n```\n\n\u5f53\u7136\u3001\u975e\u540c\u671f\u306b\u306a\u308a\u307e\u3059\u3002\n\n# \u304a\u308f\u308a\u306b\n\n\u4eca\u65e5\u306f `Observable` \u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3092\u898b\u307e\u3057\u305f\u3002\u307e\u3060\u9014\u4e2d\u306a\u306e\u3067\u7d9a\u304d\u306f\u660e\u65e5\u306b\u3057\u307e\u3059\u3002\n", "tags": ["RxJS", "Rx", "ReactiveExtensions"]}