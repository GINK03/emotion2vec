{"context": "\n\n\u6982\u8981\nntp(\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30fb\u30bf\u30a4\u30e0\u30fb\u30d7\u30ed\u30c8\u30b3\u30eb)\u306f\u30cd\u30c3\u30c8\u7d4c\u7531\u3067\u6642\u8a08\u3092\u5408\u308f\u305b\u308b\u305f\u3081\u306e\u901a\u4fe1\u898f\u7d04\u3067\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e0a\u306e\u30bf\u30a4\u30e0\u30b5\u30fc\u30d0\u3068\u540c\u671f\u3055\u305b\u308b\u3053\u3068\u3067\u6b63\u78ba\u306a\u6642\u523b\u3092\u7c21\u5358\u306b\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nesp8266 Arduino\u3067\u3082\u3001\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304c\u3001\u81ea\u524d\u3067ntp\u306e\u30d1\u30b1\u30c3\u30c8\u306e\u4f5c\u6210\u30fb\u9001\u53d7\u4fe1\u3092\u884c\u3046\u30b9\u30b1\u30c3\u30c1\u306e\u4f8b\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u304b\u3001\u81ea\u524d\u3067\u3084\u3089\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u8aa4\u89e3\u3057\u3066\u3044\u308b\u4eba\u304c\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nesp8266 Arduino\u306b\u306fntp\u306e\u6a5f\u80fd\u304c\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u3066\u3001\u7279\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u306a\u304f\u3066\u3082\u3001\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u3067ntp\u540c\u671f\u306e\u6642\u523b\u60c5\u5831\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u4f7f\u3044\u65b9\nconfigTime()\u95a2\u6570\u3067\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\u5ba3\u8a00\u306fArduino.h\u306b\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u7279\u306binclude\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\nArduino.h\nextern \"C\" void configTime(long timezone, int daylightOffset_sec,\n    const char* server1, const char* server2 = nullptr, const char* server3 = nullptr);\n\n\n\u65e5\u672c\u3067\u4f7f\u3046\u5834\u5408\u3001timezone\u306f 3600*9, daylightOffset\u306f0\u3068\u306a\u308a\u307e\u3059\u3002\nntp\u306e\u540c\u671f\u304c\u5b8c\u4e86\u3059\u308b\u3068 time()\u95a2\u6570\u304cUNIX\u6642\u9593(1970\u5e741\u67081\u65e50\u66420\u52060\u79d2\u304b\u3089\u306e\u3046\u308b\u3046\u79d2\u3092\u542b\u307e\u306a\u3044\u79d2\u6570)\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u3001\u3053\u308c\u3092localtime()\u95a2\u6570\u306a\u3069\u3067\u5909\u63db\u3057\u5229\u7528\u3057\u307e\u3059\u3002\u540c\u671f\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u306ftime()\u95a2\u6570\u306f0\u3092\u8fd4\u3059\u306e\u3067\u3001\u5909\u306a\u6642\u523b\u3092\u8868\u793a\u3055\u305b\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u3001\u975e0\u304c\u8fd4\u308b\u307e\u3067\u5f85\u3064\u3088\u3046\u306b\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002 time()\u3084localtime()\u306e\u4f7f\u7528\u306b\u306ftime.h\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\n\u4f7f\u7528\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\nclock.ino\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <time.h>\n\n#define WIFI_SSID   \"your_wifi_ssid\"\n#define WIFI_PASSWORD   \"your_wifi_password\"\n#define JST     3600*9\n\nvoid setup() {\n  Serial.begin(115200);\n  delay(100);\n  Serial.print(\"\\n\\nReset:\\n\");\n\n  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);\n  while(WiFi.status() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(500);\n  }\n  Serial.println();\n  Serial.printf(\"Connected, IP address: \");\n  Serial.println(WiFi.localIP());\n\n  configTime( JST, 0, \"ntp.nict.jp\", \"ntp.jst.mfeed.ad.jp\");\n}\n\nvoid loop() {\n  time_t t;\n  struct tm *tm;\n  static const char *wd[7] = {\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thr\",\"Fri\",\"Sat\"};\n\n  t = time(NULL);\n  tm = localtime(&t);\n  Serial.printf(\" %04d/%02d/%02d(%s) %02d:%02d:%02d\\n\",\n        tm->tm_year+1900, tm->tm_mon+1, tm->tm_mday,\n        wd[tm->tm_wday],\n        tm->tm_hour, tm->tm_min, tm->tm_sec);\n  delay(1000);\n}\n\n\n\u5b9f\u884c\u6642\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\u3082\u3046\u5c11\u3057\u8a73\u3057\u3044\u8a71\nconfigTime(), time()\u7b49\u306e\u30bd\u30fc\u30b9\u3092\u898b\u308b\u3068\u3001\u305d\u308c\u305e\u308c sntp.c\u306e\u5bfe\u5fdc\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3001sntp.c\u3092\u307f\u308b\u30681\u6642\u9593\u306b1\u56de ntp\u30d1\u30b1\u30c3\u30c8\u3092\u6295\u3052\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n# \u6982\u8981\n\nntp(\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30fb\u30bf\u30a4\u30e0\u30fb\u30d7\u30ed\u30c8\u30b3\u30eb)\u306f\u30cd\u30c3\u30c8\u7d4c\u7531\u3067\u6642\u8a08\u3092\u5408\u308f\u305b\u308b\u305f\u3081\u306e\u901a\u4fe1\u898f\u7d04\u3067\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e0a\u306e\u30bf\u30a4\u30e0\u30b5\u30fc\u30d0\u3068\u540c\u671f\u3055\u305b\u308b\u3053\u3068\u3067\u6b63\u78ba\u306a\u6642\u523b\u3092\u7c21\u5358\u306b\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nesp8266 Arduino\u3067\u3082\u3001\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304c\u3001\u81ea\u524d\u3067ntp\u306e\u30d1\u30b1\u30c3\u30c8\u306e\u4f5c\u6210\u30fb\u9001\u53d7\u4fe1\u3092\u884c\u3046\u30b9\u30b1\u30c3\u30c1\u306e\u4f8b\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u304b\u3001\u81ea\u524d\u3067\u3084\u3089\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u8aa4\u89e3\u3057\u3066\u3044\u308b\u4eba\u304c\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nesp8266 Arduino\u306b\u306fntp\u306e\u6a5f\u80fd\u304c\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u3066\u3001\u7279\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u306a\u304f\u3066\u3082\u3001\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u3067ntp\u540c\u671f\u306e\u6642\u523b\u60c5\u5831\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n# \u4f7f\u3044\u65b9\n\nconfigTime()\u95a2\u6570\u3067\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\u5ba3\u8a00\u306fArduino.h\u306b\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u7279\u306binclude\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n``` Arduino.h\nextern \"C\" void configTime(long timezone, int daylightOffset_sec,\n    const char* server1, const char* server2 = nullptr, const char* server3 = nullptr);\n```\n\n\u65e5\u672c\u3067\u4f7f\u3046\u5834\u5408\u3001timezone\u306f 3600*9, daylightOffset\u306f0\u3068\u306a\u308a\u307e\u3059\u3002\n\nntp\u306e\u540c\u671f\u304c\u5b8c\u4e86\u3059\u308b\u3068 time()\u95a2\u6570\u304cUNIX\u6642\u9593(1970\u5e741\u67081\u65e50\u66420\u52060\u79d2\u304b\u3089\u306e\u3046\u308b\u3046\u79d2\u3092\u542b\u307e\u306a\u3044\u79d2\u6570)\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u3001\u3053\u308c\u3092localtime()\u95a2\u6570\u306a\u3069\u3067\u5909\u63db\u3057\u5229\u7528\u3057\u307e\u3059\u3002\u540c\u671f\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u306ftime()\u95a2\u6570\u306f0\u3092\u8fd4\u3059\u306e\u3067\u3001\u5909\u306a\u6642\u523b\u3092\u8868\u793a\u3055\u305b\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u3001\u975e0\u304c\u8fd4\u308b\u307e\u3067\u5f85\u3064\u3088\u3046\u306b\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002 time()\u3084localtime()\u306e\u4f7f\u7528\u306b\u306ftime.h\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n# \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\n\n\u4f7f\u7528\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\n``` clock.ino\n#include <Arduino.h>\n#include <ESP8266WiFi.h>\n#include <time.h>\n\n#define WIFI_SSID \t\"your_wifi_ssid\"\n#define\tWIFI_PASSWORD\t\"your_wifi_password\"\n#define\tJST\t\t3600*9\n\nvoid setup() {\n  Serial.begin(115200);\n  delay(100);\n  Serial.print(\"\\n\\nReset:\\n\");\n\n  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);\n  while(WiFi.status() != WL_CONNECTED) {\n    Serial.print('.');\n    delay(500);\n  }\n  Serial.println();\n  Serial.printf(\"Connected, IP address: \");\n  Serial.println(WiFi.localIP());\n\n  configTime( JST, 0, \"ntp.nict.jp\", \"ntp.jst.mfeed.ad.jp\");\n}\n\nvoid loop() {\n  time_t t;\n  struct tm *tm;\n  static const char *wd[7] = {\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thr\",\"Fri\",\"Sat\"};\n  \n  t = time(NULL);\n  tm = localtime(&t);\n  Serial.printf(\" %04d/%02d/%02d(%s) %02d:%02d:%02d\\n\",\n\t\ttm->tm_year+1900, tm->tm_mon+1, tm->tm_mday,\n\t\twd[tm->tm_wday],\n\t\ttm->tm_hour, tm->tm_min, tm->tm_sec);\n  delay(1000);\n}\n```\n\n\u5b9f\u884c\u6642\u306e\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n![sc161108a1.png](https://qiita-image-store.s3.amazonaws.com/0/144308/597dd9e7-1a59-942d-a825-32535b713320.png)\n\n# \u3082\u3046\u5c11\u3057\u8a73\u3057\u3044\u8a71\n\nconfigTime(), time()\u7b49\u306e\u30bd\u30fc\u30b9\u3092\u898b\u308b\u3068\u3001\u305d\u308c\u305e\u308c <a href=\"https://github.com/esp8266/Arduino/blob/master/tools/sdk/lwip/src/core/sntp.c\">sntp.c</a>\u306e\u5bfe\u5fdc\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3001sntp.c\u3092\u307f\u308b\u30681\u6642\u9593\u306b1\u56de ntp\u30d1\u30b1\u30c3\u30c8\u3092\u6295\u3052\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\n", "tags": ["ESP8266", "ntp", "ESP-WROOM-02"]}