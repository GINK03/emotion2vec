{"context": " More than 1 year has passed since last update.Postgresql\u306eXML\u578b\u30ab\u30e9\u30e0\u3092SQL\u3060\u3051\u3067\u5b89\u5168\u306b\u7de8\u96c6\u3059\u308b\u65b9\u6cd5\u304c\u3044\u307e\u3044\u3061\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001Groovy\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\n\u4fee\u6b63\u3057\u305f\u5185\u5bb9\u306f\u5618\u3060\u3051\u3069\u3001\u5927\u4f53\u3053\u3093\u306a\u611f\u3058\u3002\nupdate\u306a\u306e\u306bexecuteInsert\u4f7f\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u6b74\u53f2\u7684\u7d4c\u7def\u304b\u3089\u3067\u3059\u3002\u3002\u3002\n\nxml_data_fix.groovy\n@Grab(group='postgresql', module='postgresql', version='9.1-901.jdbc4')\n@Grab(group='org.codehaus.gpars', module='gpars', version='1.0.0')\n\nimport org.postgresql.ds.PGSimpleDataSource;\nimport groovy.sql.Sql;\n\n/* meta */\nString.metaClass.queryTo = { con ->\n  def qry = delegate\n\n  new Object(){\n      def leftShift = {c -> con.eachRow(qry,c)}\n      def forList = new Object(){\n        def leftShift = {c -> try{c(con.rows(qry).collect{it[0]})}catch(Exception ex){println ex} }\n      }\n  }\n}\n\nString.metaClass.updateBy = { con,params ->\n  def qry = delegate\n  con.executeInsert(qry,params)\n}\n\nPGSimpleDataSource.metaClass.set = { srv,port,db,usr,pass -> \n  delegate.setServerName(srv) ; delegate.setPortNumber(port)\n  delegate.setDatabaseName(db)\n  delegate.setUser(usr)       ; delegate.setPassword(pass)\n  delegate.getConnection()\n}\n\n\n/* datasource */\ndef cons = {\n  [pg01 : new Sql(new PGSimpleDataSource().set(\"localhost\" , 5432 , \"postgres\"    , \"myUser\" , \"******\"))]\n}()\n\n/* query */\n\"\"\"\nselect xml_data\nfrom xml_data_store\nwhere\ndocument_number = '20130801'\n\"\"\".queryTo(cons.pg01) << {\n  def xml = it.xml_data.getString().replaceAll('\u4e0d\u9069\u5207\u306a\u6587\u8a00','(\u4e0d\u9069\u5207\u306a\u8868\u73fe\u306b\u3064\u304d\u691c\u95b2\u3055\u308c\u307e\u3057\u305f)')\n  try{\n      def xmlobj = new org.postgresql.jdbc4.Jdbc4SQLXML(cons.publication.connection,xml)\n      \"\"\"\n      update xml_data_store\n        set xml_data_fixed = ?\n      where\n        document_number = '20130801'\n      \"\"\".updateBy(cons.publication,[xmlobj])\n  }catch(ex){\n      println ex\n  }\n}\n\n/* close */\ncons.each {try{it.value.close()}catch(e){}}\n\n\nPostgresql\u306eXML\u578b\u30ab\u30e9\u30e0\u3092SQL\u3060\u3051\u3067\u5b89\u5168\u306b\u7de8\u96c6\u3059\u308b\u65b9\u6cd5\u304c\u3044\u307e\u3044\u3061\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001Groovy\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\n\n\u4fee\u6b63\u3057\u305f\u5185\u5bb9\u306f\u5618\u3060\u3051\u3069\u3001\u5927\u4f53\u3053\u3093\u306a\u611f\u3058\u3002\n\nupdate\u306a\u306e\u306bexecuteInsert\u4f7f\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u6b74\u53f2\u7684\u7d4c\u7def\u304b\u3089\u3067\u3059\u3002\u3002\u3002\n\n```groovy:xml_data_fix.groovy\n@Grab(group='postgresql', module='postgresql', version='9.1-901.jdbc4')\n@Grab(group='org.codehaus.gpars', module='gpars', version='1.0.0')\n\nimport org.postgresql.ds.PGSimpleDataSource;\nimport groovy.sql.Sql;\n\n/* meta */\nString.metaClass.queryTo = { con ->\n  def qry = delegate\n  \n  new Object(){\n      def leftShift = {c -> con.eachRow(qry,c)}\n      def forList = new Object(){\n        def leftShift = {c -> try{c(con.rows(qry).collect{it[0]})}catch(Exception ex){println ex} }\n      }\n  }\n}\n\nString.metaClass.updateBy = { con,params ->\n  def qry = delegate\n  con.executeInsert(qry,params)\n}\n\nPGSimpleDataSource.metaClass.set = { srv,port,db,usr,pass -> \n  delegate.setServerName(srv) ; delegate.setPortNumber(port)\n  delegate.setDatabaseName(db)\n  delegate.setUser(usr)       ; delegate.setPassword(pass)\n  delegate.getConnection()\n}\n\n\n/* datasource */\ndef cons = {\n  [pg01 : new Sql(new PGSimpleDataSource().set(\"localhost\" , 5432 , \"postgres\"    , \"myUser\" , \"******\"))]\n}()\n\n/* query */\n\"\"\"\nselect xml_data\nfrom xml_data_store\nwhere\ndocument_number = '20130801'\n\"\"\".queryTo(cons.pg01) << {\n  def xml = it.xml_data.getString().replaceAll('\u4e0d\u9069\u5207\u306a\u6587\u8a00','(\u4e0d\u9069\u5207\u306a\u8868\u73fe\u306b\u3064\u304d\u691c\u95b2\u3055\u308c\u307e\u3057\u305f)')\n  try{\n      def xmlobj = new org.postgresql.jdbc4.Jdbc4SQLXML(cons.publication.connection,xml)\n      \"\"\"\n      update xml_data_store\n        set xml_data_fixed = ?\n      where\n        document_number = '20130801'\n      \"\"\".updateBy(cons.publication,[xmlobj])\n  }catch(ex){\n      println ex\n  }\n}\n\n/* close */\ncons.each {try{it.value.close()}catch(e){}}\n```", "tags": ["Groovy", "PostgreSQL"]}