{"context": "(\u4eca\u56de\u697d\u904e\u304e\u307e\u305b\u3093\u304b\u2026\u3042\u30fc\u3067\u3082\u3001\u3053\u308c\u3050\u3089\u3044\u306e\u96e3\u6613\u5ea6\u306e\u307b\u3046\u304c\u5b89\u5fc3\u3067\u304d\u308b\u2026)\n\u3061\u306a\u307f\u306b\u30e1\u30e2\u5316\u306f\u8da3\u5473\u3002\u4eca\u56de\u306e\u554f\u984c\u30b5\u30a4\u30ba\u306a\u3089\u30e1\u30e2\u5316\u3057\u306a\u304f\u3066\u3082\u5341\u5206\u9ad8\u901f\u306b\u89e3\u3051\u307e\u3059\u3002\n\nRuby\n||=\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u306e\u306fnil\u3082false\u3082falsey\u3060\u304b\u3089\u3067\u3059\u3002\u82e5\u5e72\u6094\u3057\u3044\u3002\n\ntyama_henae05.rb\n#!/usr/bin/env ruby\n#http://qiita.com/Nabetani/items/c516875b13a4d282affe\n#http://nabetani.sakura.ne.jp/hena/orde05dokitruck/\n\nT={\n    1=>{0=>[0,1],1=>[1,2],2=>[2]},\n    2=>{0=>[0,2],1=>[1],2=>[1,2]},\n    3=>{0=>[0,2],1=>[0,1],2=>[2]},\n    4=>{0=>[0],1=>[0,1],2=>[1,2]},\n    5=>{0=>[0],1=>[1,2],2=>[0,2]},\n    6=>{0=>[0,1],1=>[1],2=>[0,2]},\n    7=>{0=>[0],1=>[],2=>[2]},\n    8=>{0=>[],1=>[1],2=>[2]},\n    9=>{0=>[0],1=>[1],2=>[]},\n}\n\ndef dfs(d,cur)\n    return true if d==$line.size\n    return $m[[d,cur]] if $m.has_key?([d,cur])\n    $m[[d,cur]]=T[$line[d]][cur].any?{|e|dfs(d+1,e)}\nend\n\nif __FILE__==$0\n    while gets\n        $line=$_.chomp.chars.map(&:to_i)\n        $m={}\n        r=(0..2).select{|e|\n            dfs(0,e)\n        }.map{|e|(e+97).chr}*''\n        puts r.empty? ? '-' : r\n        STDOUT.flush\n    end\nend\n\n\n\nC++\n\u3088\u304f\u8003\u3048\u305f\u3089[nil].any?\u3082[].any?\u3082false\u3060\u3063\u305f\u306e\u3067\u3001nil\u304c\u4f7f\u3048\u306a\u3044C++\u3067\u3082\u5b9f\u88c5\u3067\u304d\u308b\u3067\u3057\u3087\u3068\u3002\ninitializer-list\u304c\u4f7f\u3048\u306a\u3044\u8a00\u8a9e\u306f\u77e5\u3089\u306a\u3044\u3002\n\ntyama_henae05.cpp\n//http://qiita.com/Nabetani/items/c516875b13a4d282affe\n//http://nabetani.sakura.ne.jp/hena/orde05dokitruck/\n#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nmap<int,map<int,vector<int>>>T={\n    {1,{{0,{0,1}},{1,{1,2}},{2,{2}}}},\n    {2,{{0,{0,2}},{1,{1}},{2,{1,2}}}},\n    {3,{{0,{0,2}},{1,{0,1}},{2,{2}}}},\n    {4,{{0,{0}},{1,{0,1}},{2,{1,2}}}},\n    {5,{{0,{0}},{1,{1,2}},{2,{0,2}}}},\n    {6,{{0,{0,1}},{1,{1}},{2,{0,2}}}},\n    {7,{{0,{0}},{1,{}},{2,{2}}}},\n    {8,{{0,{}},{1,{1}},{2,{2}}}},\n    {9,{{0,{0}},{1,{1}},{2,{}}}},\n};\n\nstring line;\nmap<pair<int,int>,bool>m;\n\nint dfs(int d,int cur){\n    if(d==line.size())return true;\n    if(m.find({d,cur})!=m.end())return m[{d,cur}];\n    return m[{d,cur}]=any_of(\n        T[line[d]-'0'][cur].begin(),\n        T[line[d]-'0'][cur].end(),\n        [&](int e){return dfs(d+1,e);}\n    );\n}\n\nint main(){\n    for(;getline(cin,line);){\n        m.clear();\n        string r;\n        for(int i=0;i<3;i++)if(dfs(0,i))r+=i+'a'; // char\u30ad\u30e3\u30b9\u30c8\u4e0d\u8981\u3067\u3057\u305f\n        cout<<(r.empty()?\"-\":r)<<endl;\n    }\n}\n\n\n\nCrystal\nCrystal\u3060\u3068\u9006\u306b[nil]\u306e\u65b9\u304c\u66f8\u304d\u3084\u3059\u305d\u3046\u3067\u3059\u3002\n\ntyama_henae05.cr\n#!/usr/bin/env crystal\n#http://qiita.com/Nabetani/items/c516875b13a4d282affe\n#http://nabetani.sakura.ne.jp/hena/orde05dokitruck/\n\nT={\n    1=>{0=>[0,1],1=>[1,2],2=>[2]},\n    2=>{0=>[0,2],1=>[1],2=>[1,2]},\n    3=>{0=>[0,2],1=>[0,1],2=>[2]},\n    4=>{0=>[0],1=>[0,1],2=>[1,2]},\n    5=>{0=>[0],1=>[1,2],2=>[0,2]},\n    6=>{0=>[0,1],1=>[1],2=>[0,2]},\n    7=>{0=>[0],1=>[nil],2=>[2]},\n    8=>{0=>[nil],1=>[1],2=>[2]},\n    9=>{0=>[0],1=>[1],2=>[nil]},\n}\n\ndef dfs(d,cur)\n    return true if d==$line.size\n    return $m[[d,cur]] if $m.has_key?([d,cur])\n    $m[[d,cur]]=T[$line[d]][cur].any?{|e|e&&dfs(d+1,e)}\nend\n\nwhile line=gets\n    $line=line.chomp.chars.map(&.to_i)\n    $m=Hash(Array(Int32),Bool).new\n    r=(0..2).select{|e|\n        dfs(0,e)\n    }.map{|e|(e+97).chr}.join\n    puts r.empty? ? \"-\" : r\n    STDOUT.flush\nend\n\n\n\nPython\nr or '-'\u3068\u66f8\u3051\u308b\u306e\u304c\u306a\u306b\u3052\u306b\u5b09\u3057\u3044\u3002\n\ntyama_henae05.py\n#!/usr/bin/env python\n#http://qiita.com/Nabetani/items/c516875b13a4d282affe\n#http://nabetani.sakura.ne.jp/hena/orde05dokitruck/\n\nT={\n    1:{0:[0,1],1:[1,2],2:[2]},\n    2:{0:[0,2],1:[1],2:[1,2]},\n    3:{0:[0,2],1:[0,1],2:[2]},\n    4:{0:[0],1:[0,1],2:[1,2]},\n    5:{0:[0],1:[1,2],2:[0,2]},\n    6:{0:[0,1],1:[1],2:[0,2]},\n    7:{0:[0],1:[],2:[2]},\n    8:{0:[],1:[1],2:[2]},\n    9:{0:[0],1:[1],2:[]},\n}\n\ndef dfs(d,cur):\n    if d==len(line): return True\n    if (d,cur) not in m: m[(d,cur)]=any(dfs(d+1,e) for e in T[line[d]][cur])\n    return m[(d,cur)]\n\nimport sys\nfor l in sys.stdin:\n    line=list(map(int,l.strip()))\n    m={}\n    r=''.join(chr(e+97) for e in range(3) if dfs(0,e))\n    print(r or '-')\n    sys.stdout.flush()\n\n\n\n(\u4eca\u56de\u697d\u904e\u304e\u307e\u305b\u3093\u304b\u2026\u3042\u30fc\u3067\u3082\u3001\u3053\u308c\u3050\u3089\u3044\u306e\u96e3\u6613\u5ea6\u306e\u307b\u3046\u304c\u5b89\u5fc3\u3067\u304d\u308b\u2026)\n\n\u3061\u306a\u307f\u306b\u30e1\u30e2\u5316\u306f\u8da3\u5473\u3002\u4eca\u56de\u306e\u554f\u984c\u30b5\u30a4\u30ba\u306a\u3089\u30e1\u30e2\u5316\u3057\u306a\u304f\u3066\u3082\u5341\u5206\u9ad8\u901f\u306b\u89e3\u3051\u307e\u3059\u3002\n\n## Ruby\n\n`||=`\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u306e\u306fnil\u3082false\u3082falsey\u3060\u304b\u3089\u3067\u3059\u3002\u82e5\u5e72\u6094\u3057\u3044\u3002\n\n```rb:tyama_henae05.rb\n#!/usr/bin/env ruby\n#http://qiita.com/Nabetani/items/c516875b13a4d282affe\n#http://nabetani.sakura.ne.jp/hena/orde05dokitruck/\n\nT={\n\t1=>{0=>[0,1],1=>[1,2],2=>[2]},\n\t2=>{0=>[0,2],1=>[1],2=>[1,2]},\n\t3=>{0=>[0,2],1=>[0,1],2=>[2]},\n\t4=>{0=>[0],1=>[0,1],2=>[1,2]},\n\t5=>{0=>[0],1=>[1,2],2=>[0,2]},\n\t6=>{0=>[0,1],1=>[1],2=>[0,2]},\n\t7=>{0=>[0],1=>[],2=>[2]},\n\t8=>{0=>[],1=>[1],2=>[2]},\n\t9=>{0=>[0],1=>[1],2=>[]},\n}\n\ndef dfs(d,cur)\n\treturn true if d==$line.size\n\treturn $m[[d,cur]] if $m.has_key?([d,cur])\n\t$m[[d,cur]]=T[$line[d]][cur].any?{|e|dfs(d+1,e)}\nend\n\nif __FILE__==$0\n\twhile gets\n\t\t$line=$_.chomp.chars.map(&:to_i)\n\t\t$m={}\n\t\tr=(0..2).select{|e|\n\t\t\tdfs(0,e)\n\t\t}.map{|e|(e+97).chr}*''\n\t\tputs r.empty? ? '-' : r\n\t\tSTDOUT.flush\n\tend\nend\n```\n\n## C++\n\n\u3088\u304f\u8003\u3048\u305f\u3089[nil].any?\u3082[].any?\u3082false\u3060\u3063\u305f\u306e\u3067\u3001nil\u304c\u4f7f\u3048\u306a\u3044C++\u3067\u3082\u5b9f\u88c5\u3067\u304d\u308b\u3067\u3057\u3087\u3068\u3002\ninitializer-list\u304c\u4f7f\u3048\u306a\u3044\u8a00\u8a9e\u306f\u77e5\u3089\u306a\u3044\u3002\n\n```cpp:tyama_henae05.cpp\n//http://qiita.com/Nabetani/items/c516875b13a4d282affe\n//http://nabetani.sakura.ne.jp/hena/orde05dokitruck/\n#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nmap<int,map<int,vector<int>>>T={\n\t{1,{{0,{0,1}},{1,{1,2}},{2,{2}}}},\n\t{2,{{0,{0,2}},{1,{1}},{2,{1,2}}}},\n\t{3,{{0,{0,2}},{1,{0,1}},{2,{2}}}},\n\t{4,{{0,{0}},{1,{0,1}},{2,{1,2}}}},\n\t{5,{{0,{0}},{1,{1,2}},{2,{0,2}}}},\n\t{6,{{0,{0,1}},{1,{1}},{2,{0,2}}}},\n\t{7,{{0,{0}},{1,{}},{2,{2}}}},\n\t{8,{{0,{}},{1,{1}},{2,{2}}}},\n\t{9,{{0,{0}},{1,{1}},{2,{}}}},\n};\n\nstring line;\nmap<pair<int,int>,bool>m;\n\nint dfs(int d,int cur){\n\tif(d==line.size())return true;\n\tif(m.find({d,cur})!=m.end())return m[{d,cur}];\n\treturn m[{d,cur}]=any_of(\n\t\tT[line[d]-'0'][cur].begin(),\n\t\tT[line[d]-'0'][cur].end(),\n\t\t[&](int e){return dfs(d+1,e);}\n\t);\n}\n\nint main(){\n\tfor(;getline(cin,line);){\n\t\tm.clear();\n\t\tstring r;\n\t\tfor(int i=0;i<3;i++)if(dfs(0,i))r+=i+'a'; // char\u30ad\u30e3\u30b9\u30c8\u4e0d\u8981\u3067\u3057\u305f\n\t\tcout<<(r.empty()?\"-\":r)<<endl;\n\t}\n}\n```\n\n## Crystal\n\nCrystal\u3060\u3068\u9006\u306b[nil]\u306e\u65b9\u304c\u66f8\u304d\u3084\u3059\u305d\u3046\u3067\u3059\u3002\n\n```rb:tyama_henae05.cr\n#!/usr/bin/env crystal\n#http://qiita.com/Nabetani/items/c516875b13a4d282affe\n#http://nabetani.sakura.ne.jp/hena/orde05dokitruck/\n\nT={\n\t1=>{0=>[0,1],1=>[1,2],2=>[2]},\n\t2=>{0=>[0,2],1=>[1],2=>[1,2]},\n\t3=>{0=>[0,2],1=>[0,1],2=>[2]},\n\t4=>{0=>[0],1=>[0,1],2=>[1,2]},\n\t5=>{0=>[0],1=>[1,2],2=>[0,2]},\n\t6=>{0=>[0,1],1=>[1],2=>[0,2]},\n\t7=>{0=>[0],1=>[nil],2=>[2]},\n\t8=>{0=>[nil],1=>[1],2=>[2]},\n\t9=>{0=>[0],1=>[1],2=>[nil]},\n}\n\ndef dfs(d,cur)\n\treturn true if d==$line.size\n\treturn $m[[d,cur]] if $m.has_key?([d,cur])\n\t$m[[d,cur]]=T[$line[d]][cur].any?{|e|e&&dfs(d+1,e)}\nend\n\nwhile line=gets\n\t$line=line.chomp.chars.map(&.to_i)\n\t$m=Hash(Array(Int32),Bool).new\n\tr=(0..2).select{|e|\n\t\tdfs(0,e)\n\t}.map{|e|(e+97).chr}.join\n\tputs r.empty? ? \"-\" : r\n\tSTDOUT.flush\nend\n```\n\n## Python\n\n**`r or '-'`\u3068\u66f8\u3051\u308b\u306e\u304c\u306a\u306b\u3052\u306b\u5b09\u3057\u3044\u3002**\n\n```py:tyama_henae05.py\n#!/usr/bin/env python\n#http://qiita.com/Nabetani/items/c516875b13a4d282affe\n#http://nabetani.sakura.ne.jp/hena/orde05dokitruck/\n\nT={\n\t1:{0:[0,1],1:[1,2],2:[2]},\n\t2:{0:[0,2],1:[1],2:[1,2]},\n\t3:{0:[0,2],1:[0,1],2:[2]},\n\t4:{0:[0],1:[0,1],2:[1,2]},\n\t5:{0:[0],1:[1,2],2:[0,2]},\n\t6:{0:[0,1],1:[1],2:[0,2]},\n\t7:{0:[0],1:[],2:[2]},\n\t8:{0:[],1:[1],2:[2]},\n\t9:{0:[0],1:[1],2:[]},\n}\n\ndef dfs(d,cur):\n\tif d==len(line): return True\n\tif (d,cur) not in m: m[(d,cur)]=any(dfs(d+1,e) for e in T[line[d]][cur])\n\treturn m[(d,cur)]\n\nimport sys\nfor l in sys.stdin:\n\tline=list(map(int,l.strip()))\n\tm={}\n\tr=''.join(chr(e+97) for e in range(3) if dfs(0,e))\n\tprint(r or '-')\n\tsys.stdout.flush()\n```\n", "tags": ["Ruby", "yhpg", "\u3069\u3046\u66f8\u304f", "C++", "crystal"]}