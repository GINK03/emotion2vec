{"context": " More than 1 year has passed since last update.GUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7b49\u306bmruby\u3092\u7d44\u307f\u8fbc\u3080\u6642\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c\u6642\u9593\u306b\u5236\u9650\u3092\u639b\u3051\u305f\u3044\u5834\u5408\u304c\u5c11\u306a\u304b\u3089\u305a\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u8d70\u3063\u3066\u3044\u308b\u30b9\u30ec\u30c3\u30c9\u3092\u5916\u90e8\u304b\u3089\u5f37\u5236\u7d42\u4e86\u3059\u308b...\u308f\u3051\u306b\u3082\u3044\u304d\u307e\u305b\u3093\u306e\u3067\u3001\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u5074\u304b\u3089\u51e6\u7406\u3092\u4e2d\u65ad\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u7c21\u6613\u7684\u306a\u3082\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u66f8\u3044\u3066\u3044\u308b\u6642\u70b9\u3067\u306emruby\u306eHEAD\u306f fa4ae7dd4d \u3067\u306f\u3001mruby\u672c\u4f53\u306b\u306f\u624b\u3092\u52a0\u3048\u306a\u304f\u3066\u3082\u30c7\u30d0\u30c3\u30b0\u7528\u306eVM\u30d5\u30c3\u30af\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u5236\u9650\u3092\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\n\u6e96\u5099\nmrbconf.h \u3092\u7de8\u96c6\u3057\u3066\u3001ENABLE_DEBUG\u306e\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3057\u307e\u3059\u3002\n\u3053\u306e\u72b6\u614b\u3067mruby\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3068\u3001struct mrb_state\u306e\u30e1\u30f3\u30d0\u306bcode_fetch_hook \u3068\u3044\u3046\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\nmrbconf.h\n/* -DENABLE_XXXX to enable following features */\n#define ENABLE_DEBUG        /* hooks for debugger */\n\n\n\n\u30b5\u30f3\u30d7\u30eb\nmrb->code_fetch_hook\u306b\u30bb\u30c3\u30c8\u3057\u305f\u95a2\u6570\u304c\u3001\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3054\u3068\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n\u9069\u5f53\u306b\u30ea\u30df\u30c3\u30c8\u3092\u8a2d\u3051\u3001vm_hook\u306e\u547c\u3073\u51fa\u3057\u304c\u6307\u5b9a\u3057\u305f\u56de\u6570\u3092\u8d85\u3048\u305f\u3068\u304d\u306b\u4f8b\u5916\u3092\u6295\u3052\u3066\u5f37\u5236\u7684\u306b\u505c\u6b62\u3055\u305b\u307e\u3059\u3002\n#include <stdio.h>\n#include <mruby.h>\n#include <mruby/compile.h>\n\nint vm_step_count = 0;\nint vm_step_limit = 0;\n\nvoid \nvm_hook(struct mrb_state* mrb, struct mrb_irep *irep, mrb_code *pc, mrb_value *regs)\n{\n  if (vm_step_limit > 0)  {\n    if (vm_step_count > vm_step_limit) {\n      vm_step_count = vm_step_limit = 0;\n      mrb_raise(mrb, E_RUNTIME_ERROR, \"step limit exceeded\");\n    }\n    vm_step_count++;\n  }\n}\n\nmrb_value \nmrb_limited_load_string(mrb_state *mrb, const char *source, int limit)\n{\n  vm_step_count = 0;\n  vm_step_limit = limit;\n  return mrb_load_string(mrb, source);\n}\n\nint main(void)\n{\n  mrb_state *mrb = mrb_open();\n  mrb->code_fetch_hook = vm_hook;\n  mrb_limited_load_string(mrb, \"loop do; end\", 3000);\n  mrb_close(mrb);\n}\n\n\u5b9f\u969b\u306b\u306f\u3001\u5b9f\u6642\u9593\u3067\u306e\u5b9f\u884c\u6642\u9593\u3067\u5236\u9650\u3057\u305f\u307b\u3046\u304c\u4f7f\u3044\u52dd\u624b\u306f\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u5f53\u7136\u306e\u3053\u3068\u306a\u304c\u3089\u3001C\u8a00\u8a9e\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u5185\u3067\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u5bfe\u51e6\u3067\u304d\u307e\u305b\u3093\u3002\nGUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7b49\u306bmruby\u3092\u7d44\u307f\u8fbc\u3080\u6642\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c\u6642\u9593\u306b\u5236\u9650\u3092\u639b\u3051\u305f\u3044\u5834\u5408\u304c\u5c11\u306a\u304b\u3089\u305a\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u8d70\u3063\u3066\u3044\u308b\u30b9\u30ec\u30c3\u30c9\u3092\u5916\u90e8\u304b\u3089\u5f37\u5236\u7d42\u4e86\u3059\u308b...\u308f\u3051\u306b\u3082\u3044\u304d\u307e\u305b\u3093\u306e\u3067\u3001\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u5074\u304b\u3089\u51e6\u7406\u3092\u4e2d\u65ad\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u7c21\u6613\u7684\u306a\u3082\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u66f8\u3044\u3066\u3044\u308b\u6642\u70b9\u3067\u306emruby\u306eHEAD\u306f `fa4ae7dd4d` \u3067\u306f\u3001mruby\u672c\u4f53\u306b\u306f\u624b\u3092\u52a0\u3048\u306a\u304f\u3066\u3082\u30c7\u30d0\u30c3\u30b0\u7528\u306eVM\u30d5\u30c3\u30af\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u5236\u9650\u3092\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\n## \u6e96\u5099\n\nmrbconf.h \u3092\u7de8\u96c6\u3057\u3066\u3001ENABLE_DEBUG\u306e\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3057\u307e\u3059\u3002\n\u3053\u306e\u72b6\u614b\u3067mruby\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3068\u3001`struct mrb_state`\u306e\u30e1\u30f3\u30d0\u306b`code_fetch_hook` \u3068\u3044\u3046\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n```ruby:mrbconf.h\n/* -DENABLE_XXXX to enable following features */\n#define ENABLE_DEBUG\t\t/* hooks for debugger */\n```\n\n## \u30b5\u30f3\u30d7\u30eb\n\nmrb->code_fetch_hook\u306b\u30bb\u30c3\u30c8\u3057\u305f\u95a2\u6570\u304c\u3001\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3054\u3068\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n\u9069\u5f53\u306b\u30ea\u30df\u30c3\u30c8\u3092\u8a2d\u3051\u3001`vm_hook`\u306e\u547c\u3073\u51fa\u3057\u304c\u6307\u5b9a\u3057\u305f\u56de\u6570\u3092\u8d85\u3048\u305f\u3068\u304d\u306b\u4f8b\u5916\u3092\u6295\u3052\u3066\u5f37\u5236\u7684\u306b\u505c\u6b62\u3055\u305b\u307e\u3059\u3002\n\n```c\n#include <stdio.h>\n#include <mruby.h>\n#include <mruby/compile.h>\n\nint vm_step_count = 0;\nint vm_step_limit = 0;\n\nvoid \nvm_hook(struct mrb_state* mrb, struct mrb_irep *irep, mrb_code *pc, mrb_value *regs)\n{\n  if (vm_step_limit > 0)  {\n    if (vm_step_count > vm_step_limit) {\n      vm_step_count = vm_step_limit = 0;\n      mrb_raise(mrb, E_RUNTIME_ERROR, \"step limit exceeded\");\n    }\n    vm_step_count++;\n  }\n}\n\nmrb_value \nmrb_limited_load_string(mrb_state *mrb, const char *source, int limit)\n{\n  vm_step_count = 0;\n  vm_step_limit = limit;\n  return mrb_load_string(mrb, source);\n}\n\nint main(void)\n{\n  mrb_state *mrb = mrb_open();\n  mrb->code_fetch_hook = vm_hook;\n  mrb_limited_load_string(mrb, \"loop do; end\", 3000);\n  mrb_close(mrb);\n}\n```\n\n\u5b9f\u969b\u306b\u306f\u3001\u5b9f\u6642\u9593\u3067\u306e\u5b9f\u884c\u6642\u9593\u3067\u5236\u9650\u3057\u305f\u307b\u3046\u304c\u4f7f\u3044\u52dd\u624b\u306f\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u5f53\u7136\u306e\u3053\u3068\u306a\u304c\u3089\u3001C\u8a00\u8a9e\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u5185\u3067\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u5bfe\u51e6\u3067\u304d\u307e\u305b\u3093\u3002", "tags": ["mruby"]}