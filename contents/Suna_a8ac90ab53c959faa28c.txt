{"context": "\n\n\u306f\u3058\u3081\u306b\n\u300cHoloLens \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb (Holograms 101E - 2 Gaze) - Qiita\u300d\u306e\u7d9a\u304d\u306b\u306a\u308a\u307e\u3059\u3002\n\u300cHolograms 101E: Introduction with Emulator\u300d\u306e\u300cChapter 3 - Gestures\u300d\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u300cGestures\u300d\n\nGazeGestureManager \u306e\u4f5c\u6210\n\nC# \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\n\n\nProject \u30d1\u30cd\u30eb\u304b\u3089 \u300cScripts\u300d \u3092\u9078\u629e\n\u53f3\u30af\u30ea\u30c3\u30af\u3092\u62bc\u4e0b\u3057\u3001 \u300cCreate\u300d-\u300cC# Script\u300d \u3092\u9078\u629e\n\u540d\u524d\u3092\u300cGazeGestureManager\u300d\u306b\u5909\u66f4\n\n\n\n\u4f5c\u6210\u3057\u305f\u300cGazeGestureManager\u300d\u3092\u3001Hierarchy \u30d1\u30cd\u30eb\u306e\u300cOrigamiCollection\u300d\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30c9\u30ed\u30c3\u30d7\n\u300cGazeGestureManager\u300d\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af (-> Visual Studio \u304c\u8d77\u52d5)\n\n\n\nC# \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u7de8\u96c6\n\n\nGazeGestureManager.cs\nusing UnityEngine;\nusing UnityEngine.VR.WSA.Input;\n\npublic class GazeGestureManager : MonoBehaviour\n{\n    public static GazeGestureManager Instance { get; private set; }\n\n    // Represents the hologram that is currently being gazed at.\n    public GameObject FocusedObject { get; private set; }\n\n    GestureRecognizer recognizer;\n\n    // Use this for initialization\n    void Start()\n    {\n        Instance = this;\n\n        // Set up a GestureRecognizer to detect Select gestures.\n        recognizer = new GestureRecognizer();\n        recognizer.TappedEvent += (source, tapCount, ray) =>\n        {\n            // Send an OnSelect message to the focused object and its ancestors.\n            if (FocusedObject != null)\n            {\n                FocusedObject.SendMessageUpwards(\"OnSelect\");\n            }\n        };\n        recognizer.StartCapturingGestures();\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        // Figure out which hologram is focused this frame.\n        GameObject oldFocusObject = FocusedObject;\n\n        // Do a raycast into the world based on the user's\n        // head position and orientation.\n        var headPosition = Camera.main.transform.position;\n        var gazeDirection = Camera.main.transform.forward;\n\n        RaycastHit hitInfo;\n        if (Physics.Raycast(headPosition, gazeDirection, out hitInfo))\n        {\n            // If the raycast hit a hologram, use that as the focused object.\n            FocusedObject = hitInfo.collider.gameObject;\n        }\n        else\n        {\n            // If the raycast did not hit a hologram, clear the focused object.\n            FocusedObject = null;\n        }\n\n        // If the focused object changed this frame,\n        // start detecting fresh gestures again.\n        if (FocusedObject != oldFocusObject)\n        {\n            recognizer.CancelGestures();\n            recognizer.StartCapturingGestures();\n        }\n    }\n}\n\n\n\nGestureRecognizer\n\n\nManager class with API for recognizing user gestures.\n\n\nGestureRecognizer.TappedEvent\n\n\nOccurs when a Tap gesture is recognized.\n\n\nGestureRecognizer.StartCapturingGestures\n\n\nCall to begin receiving gesture events on this recognizer. No events will be received until this method is called.\n\n\nGestureRecognizer.CancelGestures\n\n\nCancels any pending gesture events. Additionally this will call StopCapturingGestures.\n\n\nGameObject.SendMessageUpwards\n\n\n\u30b2\u30fc\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u89aa\uff08\u306e\u89aa\u3001\u3055\u3089\u306b\u89aa ... \uff09\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u3066\u3044\u308b\u3059\u3079\u3066\u306e MonoBehaviour \u306b\u3042\u308b methodName \u3068\u540d\u4ed8\u3051\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\n\n\n\nShpereCommands \u306e\u4f5c\u6210\n\nC# \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\n\nProject \u30d1\u30cd\u30eb\u304b\u3089 \u300cScripts\u300d \u3092\u9078\u629e\n\u53f3\u30af\u30ea\u30c3\u30af\u3092\u62bc\u4e0b\u3057\u3001 \u300cCreate\u300d-\u300cC# Script\u300d \u3092\u9078\u629e\n\u540d\u524d\u3092\u300cSphereCommands\u300d\u306b\u5909\u66f4\n\n\n\n\u4f5c\u6210\u3057\u305f\u300cShpereCommands\u300d\u3092\u3001Hierarchy \u30d1\u30cd\u30eb\u306e\u300cOrigamiCollection\u300d-\u300cSphere1\u300d\u300cSpere2\u300d\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30c9\u30ed\u30c3\u30d7\n\u300cShpereCommands\u300d\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af (-> Visual Studio \u304c\u8d77\u52d5)\n\n\n\nC# \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u7de8\u96c6\n\nSphereCommands.cs\nusing UnityEngine;\n\npublic class SphereCommands : MonoBehaviour\n{\n    // Called by GazeGestureManager when the user performs a Select gesture\n    void OnSelect()\n    {\n        // If the sphere has no Rigidbody component, add one to enable physics.\n        if (!this.GetComponent<Rigidbody>())\n        {\n            var rigidbody = this.gameObject.AddComponent<Rigidbody>();\n            rigidbody.collisionDetectionMode = CollisionDetectionMode.Continuous;\n        }\n    }\n}\n\n\n\nRigidbody\n\n\nRigidbody \u3092\u4f7f\u3046\u3068\u3001\u30b2\u30fc\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7269\u7406\u7279\u6027\u306b\u3088\u3063\u3066\u5236\u5fa1\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\nRigidbody.collisionDetectionMode\n\n\nRigidbody \u306e\u885d\u7a81\u691c\u51fa\u30e2\u30fc\u30c9\u3002Rigidbody \u306e\u7d99\u7d9a\u7684\u306a\u885d\u7a81\u5224\u5b9a\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306b\u3053\u308c\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \n\n\nCollisionDetectionMode.Continuous\n\n\n\u3053\u306e\u30e2\u30fc\u30c9\u306f\u9759\u7684\u30e1\u30c3\u30b7\u30e5\u30b8\u30aa\u30e1\u30c8\u30ea\u3068\u885d\u7a81\u3057\u3066\u3044\u308b\u3068\u304d\u306b\u691c\u51fa\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\nVisual Studio \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u751f\u6210\n\n\u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u300cBuild Settings\u300d\u3092\u9078\u629e\n\u300cBuild Settings\u300d\u30a6\u30a3\u30f3\u30c9\u30a6\u304b\u3089\u300cBuild\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\n\n\n\n\u30d3\u30eb\u30c9\u30fb\u5b9f\u884c\u74b0\u5883\u8a2d\u5b9a\u306e\u78ba\u8a8d\u3001\u5b9f\u884c\n\n\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u69cb\u6210 \u300cRelease\u300d\n\n\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0 \u300cX86\u300d\n\n\u5b9f\u884c\u74b0\u5883 \u300cHoloLens Emulator\u300d\n\n\u300c\u30c7\u30d0\u30c3\u30b0\u300d\u30e1\u30cb\u30e5\u30fc\u304b\u3089 \u300c\u30c7\u30d0\u30c3\u30b0\u306a\u3057\u3067\u958b\u59cb\u300d \u3092\u9078\u629e\n\n\n\n\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u64cd\u4f5c\n\n\nGaze \u306e\u30de\u30fc\u30af\u3092 Sphere \u306b\u5408\u308f\u305b\u3066\u3001\u30b9\u30da\u30fc\u30b9\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u3001Sphere \u304c\u30dd\u30ed\u30ea\u3068\u843d\u3061\u3066\u3001\u53f0\u306e\u4e0a\u3092\u8ee2\u304c\u3063\u3066\u3001\u53f0\u304b\u3089\u3082\u843d\u3061\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u306f\u3058\u3081\u306b\n\n\u300c[HoloLens \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb (Holograms 101E - 2 Gaze) - Qiita](http://qiita.com/Suna/items/f1bc81063cfc4d75c72d)\u300d\u306e\u7d9a\u304d\u306b\u306a\u308a\u307e\u3059\u3002\n\u300c[Holograms 101E: Introduction with Emulator](https://developer.microsoft.com/ja-jp/windows/holographic/holograms_101e)\u300d\u306e\u300c[Chapter 3 - Gestures](https://developer.microsoft.com/JA-JP/WINDOWS/HOLOGRAPHIC/holograms_101e#chapter_3_-_gestures)\u300d\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n## \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u300cGestures\u300d\n\n### GazeGestureManager \u306e\u4f5c\u6210\n\n#### C# \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\n\n![601b.png](https://qiita-image-store.s3.amazonaws.com/0/20418/2511c149-f4ad-7ef8-06f5-c6a606b3c709.png \"601b.png\")\n\n- Project \u30d1\u30cd\u30eb\u304b\u3089 \u300cScripts\u300d \u3092\u9078\u629e\n- \u53f3\u30af\u30ea\u30c3\u30af\u3092\u62bc\u4e0b\u3057\u3001 **\u300cCreate\u300d-\u300cC# Script\u300d** \u3092\u9078\u629e\n- \u540d\u524d\u3092\u300cGazeGestureManager\u300d\u306b\u5909\u66f4\n\n![602.png](https://qiita-image-store.s3.amazonaws.com/0/20418/542841d3-2e2f-40ca-6d8f-37e4e55a3cd7.png \"602.png\")\n\n- \u4f5c\u6210\u3057\u305f\u300cGazeGestureManager\u300d\u3092\u3001Hierarchy \u30d1\u30cd\u30eb\u306e\u300cOrigamiCollection\u300d\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30c9\u30ed\u30c3\u30d7\n- \u300cGazeGestureManager\u300d\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af (-> Visual Studio \u304c\u8d77\u52d5)\n\n---\n\n#### C# \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u7de8\u96c6\n\n![604.png](https://qiita-image-store.s3.amazonaws.com/0/20418/01c00717-a494-2095-ede5-664763e0dbd5.png \"604.png\")\n\n```C#:GazeGestureManager.cs\nusing UnityEngine;\nusing UnityEngine.VR.WSA.Input;\n\npublic class GazeGestureManager : MonoBehaviour\n{\n    public static GazeGestureManager Instance { get; private set; }\n\n    // Represents the hologram that is currently being gazed at.\n    public GameObject FocusedObject { get; private set; }\n\n    GestureRecognizer recognizer;\n\n    // Use this for initialization\n    void Start()\n    {\n        Instance = this;\n\n        // Set up a GestureRecognizer to detect Select gestures.\n        recognizer = new GestureRecognizer();\n        recognizer.TappedEvent += (source, tapCount, ray) =>\n        {\n            // Send an OnSelect message to the focused object and its ancestors.\n            if (FocusedObject != null)\n            {\n                FocusedObject.SendMessageUpwards(\"OnSelect\");\n            }\n        };\n        recognizer.StartCapturingGestures();\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        // Figure out which hologram is focused this frame.\n        GameObject oldFocusObject = FocusedObject;\n\n        // Do a raycast into the world based on the user's\n        // head position and orientation.\n        var headPosition = Camera.main.transform.position;\n        var gazeDirection = Camera.main.transform.forward;\n\n        RaycastHit hitInfo;\n        if (Physics.Raycast(headPosition, gazeDirection, out hitInfo))\n        {\n            // If the raycast hit a hologram, use that as the focused object.\n            FocusedObject = hitInfo.collider.gameObject;\n        }\n        else\n        {\n            // If the raycast did not hit a hologram, clear the focused object.\n            FocusedObject = null;\n        }\n\n        // If the focused object changed this frame,\n        // start detecting fresh gestures again.\n        if (FocusedObject != oldFocusObject)\n        {\n            recognizer.CancelGestures();\n            recognizer.StartCapturingGestures();\n        }\n    }\n}\n```\n\n- [GestureRecognizer](https://docs.unity3d.com/ScriptReference/VR.WSA.Input.GestureRecognizer.html)\n\n> Manager class with API for recognizing user gestures.\n\n- [GestureRecognizer.TappedEvent](https://docs.unity3d.com/ScriptReference/VR.WSA.Input.GestureRecognizer.TappedEvent.html)\n\n> Occurs when a Tap gesture is recognized.\n\n- [GestureRecognizer.StartCapturingGestures](https://docs.unity3d.com/550/Documentation/ScriptReference/VR.WSA.Input.GestureRecognizer.StartCapturingGestures.html)\n\n> Call to begin receiving gesture events on this recognizer. No events will be received until this method is called.\n\n- [GestureRecognizer.CancelGestures](https://docs.unity3d.com/ScriptReference/VR.WSA.Input.GestureRecognizer.CancelGestures.html)\n\n> Cancels any pending gesture events. Additionally this will call StopCapturingGestures.\n\n- [GameObject.SendMessageUpwards](https://docs.unity3d.com/ja/current/ScriptReference/GameObject.SendMessageUpwards.html)\n\n> \u30b2\u30fc\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u89aa\uff08\u306e\u89aa\u3001\u3055\u3089\u306b\u89aa ... \uff09\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u3066\u3044\u308b\u3059\u3079\u3066\u306e MonoBehaviour \u306b\u3042\u308b methodName \u3068\u540d\u4ed8\u3051\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\n\n---\n\n### ShpereCommands \u306e\u4f5c\u6210\n\n#### C# \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\n\n- Project \u30d1\u30cd\u30eb\u304b\u3089 \u300cScripts\u300d \u3092\u9078\u629e\n- \u53f3\u30af\u30ea\u30c3\u30af\u3092\u62bc\u4e0b\u3057\u3001 **\u300cCreate\u300d-\u300cC# Script\u300d** \u3092\u9078\u629e\n- \u540d\u524d\u3092\u300cSphereCommands\u300d\u306b\u5909\u66f4\n\n![603.png](https://qiita-image-store.s3.amazonaws.com/0/20418/f1c8e288-edcb-b67e-a479-2dcda09115da.png \"603.png\")\n\n- \u4f5c\u6210\u3057\u305f\u300cShpereCommands\u300d\u3092\u3001Hierarchy \u30d1\u30cd\u30eb\u306e\u300cOrigamiCollection\u300d-\u300cSphere1\u300d\u300cSpere2\u300d\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30c9\u30ed\u30c3\u30d7\n- \u300cShpereCommands\u300d\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af (-> Visual Studio \u304c\u8d77\u52d5)\n\n---\n\n#### C# \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u7de8\u96c6\n\n```C#:SphereCommands.cs\nusing UnityEngine;\n\npublic class SphereCommands : MonoBehaviour\n{\n    // Called by GazeGestureManager when the user performs a Select gesture\n    void OnSelect()\n    {\n        // If the sphere has no Rigidbody component, add one to enable physics.\n        if (!this.GetComponent<Rigidbody>())\n        {\n            var rigidbody = this.gameObject.AddComponent<Rigidbody>();\n            rigidbody.collisionDetectionMode = CollisionDetectionMode.Continuous;\n        }\n    }\n}\n```\n\n- [Rigidbody](https://docs.unity3d.com/ja/current/Manual/class-Rigidbody.html)\n\n> Rigidbody \u3092\u4f7f\u3046\u3068\u3001__\u30b2\u30fc\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8__\u3092\u7269\u7406\u7279\u6027\u306b\u3088\u3063\u3066\u5236\u5fa1\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n- [Rigidbody.collisionDetectionMode](https://docs.unity3d.com/ja/current/ScriptReference/Rigidbody-collisionDetectionMode.html)\n\n> Rigidbody \u306e\u885d\u7a81\u691c\u51fa\u30e2\u30fc\u30c9\u3002Rigidbody \u306e\u7d99\u7d9a\u7684\u306a\u885d\u7a81\u5224\u5b9a\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306b\u3053\u308c\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \n\n- [CollisionDetectionMode.Continuous](https://docs.unity3d.com/ja/current/ScriptReference/CollisionDetectionMode.Continuous.html)\n\n> \u3053\u306e\u30e2\u30fc\u30c9\u306f\u9759\u7684\u30e1\u30c3\u30b7\u30e5\u30b8\u30aa\u30e1\u30c8\u30ea\u3068\u885d\u7a81\u3057\u3066\u3044\u308b\u3068\u304d\u306b\u691c\u51fa\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n---\n\n### Visual Studio \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u751f\u6210\n\n- \u300cFile\u300d\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u300cBuild Settings\u300d\u3092\u9078\u629e\n- \u300cBuild Settings\u300d\u30a6\u30a3\u30f3\u30c9\u30a6\u304b\u3089\u300cBuild\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\n\n---\n\n### \u30d3\u30eb\u30c9\u30fb\u5b9f\u884c\u74b0\u5883\u8a2d\u5b9a\u306e\u78ba\u8a8d\u3001\u5b9f\u884c\n\n- \u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u69cb\u6210 **\u300cRelease\u300d**\n- \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0 **\u300cX86\u300d**\n- \u5b9f\u884c\u74b0\u5883 **\u300cHoloLens Emulator\u300d**\n- \u300c\u30c7\u30d0\u30c3\u30b0\u300d\u30e1\u30cb\u30e5\u30fc\u304b\u3089 **\u300c\u30c7\u30d0\u30c3\u30b0\u306a\u3057\u3067\u958b\u59cb\u300d** \u3092\u9078\u629e\n\n---\n\n### \u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u64cd\u4f5c\n\n![605.png](https://qiita-image-store.s3.amazonaws.com/0/20418/94cfbb94-91bf-d9b6-50dd-43f934964db9.png \"605.png\")\n\n![606.png](https://qiita-image-store.s3.amazonaws.com/0/20418/971e3224-cbaf-865f-7143-9b8d376fe5e1.png \"606.png\")\n\nGaze \u306e\u30de\u30fc\u30af\u3092 Sphere \u306b\u5408\u308f\u305b\u3066\u3001\u30b9\u30da\u30fc\u30b9\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u3001Sphere \u304c\u30dd\u30ed\u30ea\u3068\u843d\u3061\u3066\u3001\u53f0\u306e\u4e0a\u3092\u8ee2\u304c\u3063\u3066\u3001\u53f0\u304b\u3089\u3082\u843d\u3061\u3066\u3044\u304d\u307e\u3059\u3002\n", "tags": ["MR", "Unity", "HoloLens"]}