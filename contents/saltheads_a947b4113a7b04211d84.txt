{"tags": ["Ruby", "codeiq"], "context": " More than 1 year has passed since last update.\u7d50\u57ce\u6d69\u3055\u3093\u306eCodeIQ \u30b9\u30da\u30fc\u30b9\u30c8\u30fc\u30ad\u30fc\u554f\u984c\nhttps://codeiq.jp/ace/yuki_hiroshi/q839\n\u3092\u89e3\u3044\u3066\u5fdc\u52df\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u89e3\u7b54512\u884c\u4e2d2\u884c\u3092\u9593\u9055\u3048\u3066\u8a55\u4fa1\uff13\u3067\u3057\u305f\u3002\u3061\u3083\u3093\u3068\u691c\u7b97\u3092\u3057\u306a\u304b\u3063\u305f\u306e\u304c\u6557\u56e0\u3067\u3057\u305f\u3002\u5947\u6570\u6841\u76ee\u306b\u3042\u308b\u6587\u5b57\u304c\uff12\u6587\u5b57\u9023\u7d9a\u3057\u3066\u540c\u3058\u5834\u5408\u306b\u30c7\u30b3\u30fc\u30c9\u3067\u304d\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u3053\u3068\u306b\u6c17\u304c\u4ed8\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u5927\u3044\u306b\u53cd\u7701\u3057\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3057\u3066\u6b63\u3057\u3044\u7b54\u3048\u304c\u6c42\u3081\u3089\u308c\u308b\u3088\u3046\u306b\u76f4\u3057\u307e\u3057\u305f\u3002\n\u6559\u8a13\uff1a\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b\u554f\u984c\u306a\u3089\u3001\u30c7\u30b3\u30fc\u30c9\u3059\u308b\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u304d\u3061\u3093\u3068\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u3002\n\nspace2.rb\n\n# encoding: Shift_JIS\n# Ruby 2.0.0\n# \u30b9\u30da\u30fc\u30b9\u30c8\u30fc\u30ad\u30fc\u554f\u984c\n# space2.rb\n\ndef decode(word)\n  debug = false\n  if word.length.odd?\n    decode = 'X'\n  else\n    decode = ''\n    prev_c = ''\n    prev_n = ''\n    word.scan(/.{1,2}/m).each { |t|\n      c = t[0,1]\n      n = t[1,1]\n      p c,n if debug\n      # \u3072\u3068\u3064\u524d\u3068\u6587\u5b57\u304c\u540c\u3058 \u304b\u3064 \uff11\u3064\u524d\u306e\u9577\u3055\u304c'z'\u3067\u306a\u3044\u3068\u3001\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u3082\u5206\u96e2\u3067\u304d\u306a\u3044\u3002\n      if prev_c == c && prev_n != 'z'\n        decode = 'X'\n        break\n      else\n        prev_c = c\n        prev_n = n\n      end\n      decode += (c * (n.ord - ('a'.ord - 1)))\n    }\n  end\n  \"#{decode}:#{word}\"\nend\n\nFile.open(\"result.txt\",'w') { |w|\n  File.open(\"words.txt\",'r') { |r|\n    while line = r.gets\n      word = line.chop\n      decoded = decode(word)\n      w.puts decoded\n      p decoded\n    end\n  }\n}\n\n\n\n\n\u7d50\u57ce\u6d69\u3055\u3093\u306eCodeIQ \u30b9\u30da\u30fc\u30b9\u30c8\u30fc\u30ad\u30fc\u554f\u984c\n[https://codeiq.jp/ace/yuki_hiroshi/q839](https://codeiq.jp/ace/yuki_hiroshi/q839)\n\u3092\u89e3\u3044\u3066\u5fdc\u52df\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u89e3\u7b54512\u884c\u4e2d2\u884c\u3092\u9593\u9055\u3048\u3066\u8a55\u4fa1\uff13\u3067\u3057\u305f\u3002\u3061\u3083\u3093\u3068\u691c\u7b97\u3092\u3057\u306a\u304b\u3063\u305f\u306e\u304c\u6557\u56e0\u3067\u3057\u305f\u3002\u5947\u6570\u6841\u76ee\u306b\u3042\u308b\u6587\u5b57\u304c\uff12\u6587\u5b57\u9023\u7d9a\u3057\u3066\u540c\u3058\u5834\u5408\u306b\u30c7\u30b3\u30fc\u30c9\u3067\u304d\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u3053\u3068\u306b\u6c17\u304c\u4ed8\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u5927\u3044\u306b\u53cd\u7701\u3057\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3057\u3066\u6b63\u3057\u3044\u7b54\u3048\u304c\u6c42\u3081\u3089\u308c\u308b\u3088\u3046\u306b\u76f4\u3057\u307e\u3057\u305f\u3002\n\n\u6559\u8a13\uff1a\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b\u554f\u984c\u306a\u3089\u3001\u30c7\u30b3\u30fc\u30c9\u3059\u308b\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u304d\u3061\u3093\u3068\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u3002\n\n```ruby:space2.rb\n\n# encoding: Shift_JIS\n# Ruby 2.0.0\n# \u30b9\u30da\u30fc\u30b9\u30c8\u30fc\u30ad\u30fc\u554f\u984c\n# space2.rb\n\ndef decode(word)\n  debug = false\n  if word.length.odd?\n    decode = 'X'\n  else\n    decode = ''\n    prev_c = ''\n    prev_n = ''\n    word.scan(/.{1,2}/m).each { |t|\n      c = t[0,1]\n      n = t[1,1]\n      p c,n if debug\n      # \u3072\u3068\u3064\u524d\u3068\u6587\u5b57\u304c\u540c\u3058 \u304b\u3064 \uff11\u3064\u524d\u306e\u9577\u3055\u304c'z'\u3067\u306a\u3044\u3068\u3001\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u3082\u5206\u96e2\u3067\u304d\u306a\u3044\u3002\n      if prev_c == c && prev_n != 'z'\n        decode = 'X'\n        break\n      else\n        prev_c = c\n        prev_n = n\n      end\n      decode += (c * (n.ord - ('a'.ord - 1)))\n    }\n  end\n  \"#{decode}:#{word}\"\nend\n\nFile.open(\"result.txt\",'w') { |w|\n  File.open(\"words.txt\",'r') { |r|\n    while line = r.gets\n      word = line.chop\n      decoded = decode(word)\n      w.puts decoded\n      p decoded\n    end\n  }\n}\n\n\n```\n\n"}