{"context": " More than 1 year has passed since last update.\nparseJSON: function( data ) {\n    if ( typeof data !== \"string\" || !data ) {\n        return null;\n    }\n\n    // Make sure leading/trailing whitespace is removed (IE can't handle it)\n    data = jQuery.trim( data );\n\n    // Attempt to parse using the native JSON parser first\n    if ( window.JSON && window.JSON.parse ) {\n        return window.JSON.parse( data );\n    }\n\n    // Make sure the incoming data is actual JSON\n    // Logic borrowed from http://json.org/json2.js\n    if ( rvalidchars.test( data.replace( rvalidescape, \"@\" )\n        .replace( rvalidtokens, \"]\" )\n        .replace( rvalidbraces, \"\")) ) {\n\n        return ( new Function( \"return \" + data ) )();\n\n    }\n    jQuery.error( \"Invalid JSON: \" + data );\n},\n\n// Cross-browser xml parsing\nparseXML: function( data ) {\n    if ( typeof data !== \"string\" || !data ) {\n        return null;\n    }\n    var xml, tmp;\n    try {\n        if ( window.DOMParser ) { // Standard\n            tmp = new DOMParser();\n            xml = tmp.parseFromString( data , \"text/xml\" );\n        } else { // IE\n            xml = new ActiveXObject( \"Microsoft.XMLDOM\" );\n            xml.async = \"false\";\n            xml.loadXML( data );\n        }\n    } catch( e ) {\n        xml = undefined;\n    }\n    if ( !xml || !xml.documentElement || xml.getElementsByTagName( \"parsererror\" ).length ) {\n        jQuery.error( \"Invalid XML: \" + data );\n    }\n    return xml;\n},\n\n\n\n```javascript\n\nparseJSON: function( data ) {\n    if ( typeof data !== \"string\" || !data ) {\n        return null;\n    }\n\n    // Make sure leading/trailing whitespace is removed (IE can't handle it)\n    data = jQuery.trim( data );\n\n    // Attempt to parse using the native JSON parser first\n    if ( window.JSON && window.JSON.parse ) {\n        return window.JSON.parse( data );\n    }\n\n    // Make sure the incoming data is actual JSON\n    // Logic borrowed from http://json.org/json2.js\n    if ( rvalidchars.test( data.replace( rvalidescape, \"@\" )\n        .replace( rvalidtokens, \"]\" )\n        .replace( rvalidbraces, \"\")) ) {\n\n        return ( new Function( \"return \" + data ) )();\n\n    }\n    jQuery.error( \"Invalid JSON: \" + data );\n},\n\n// Cross-browser xml parsing\nparseXML: function( data ) {\n    if ( typeof data !== \"string\" || !data ) {\n        return null;\n    }\n    var xml, tmp;\n    try {\n        if ( window.DOMParser ) { // Standard\n            tmp = new DOMParser();\n            xml = tmp.parseFromString( data , \"text/xml\" );\n        } else { // IE\n            xml = new ActiveXObject( \"Microsoft.XMLDOM\" );\n            xml.async = \"false\";\n            xml.loadXML( data );\n        }\n    } catch( e ) {\n        xml = undefined;\n    }\n    if ( !xml || !xml.documentElement || xml.getElementsByTagName( \"parsererror\" ).length ) {\n        jQuery.error( \"Invalid XML: \" + data );\n    }\n    return xml;\n},\n\n```", "tags": ["Parser", "JSON", "XML", "jQuery"]}