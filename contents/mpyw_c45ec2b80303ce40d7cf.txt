{"context": " More than 1 year has passed since last update.\u5927\u5b66\u306e\u8ab2\u984c\u7528 (\u518d\u3000\u5c65\u3000\u4fee)\n\u30e1\u30e2\u30ea\u89e3\u653e\u306e\u4ed5\u65b9\u304c\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u78ba\u4fdd\u3057\u305f\u30b9\u30da\u30fc\u30b9\u653e\u7f6e\u3057\u3066\u308b\n\n\u3053\u3093\u306a\u611f\u3058\u3067 SPIM \u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u3067\u52d5\u3044\u3066\u304f\u308c\u307e\u3059\n\n.data \u30bb\u30af\u30b7\u30e7\u30f3\n\n\u6587\u5b57\u5217\u306e\u5b9a\u7fa9\nbracket_start: .asciiz \"[\"\nbracket_end: .asciiz \"]: \"\ninput_message_0: .asciiz \"Number of integers: \"\ninput_message_1: .asciiz \"Input\"\noutput_message_0: .asciiz \"Sorted results: \"\noutput_message_1: .asciiz \"Output\"\nerror_message: .asciiz \"Number of integers must be positive\"\neol: .asciiz \"\\n\"\n\n\n\u56fa\u5b9a\u7684\u306b\u4f7f\u3046\u30ec\u30b8\u30b9\u30bf\u306e\u5b9a\u7fa9\n\n\n$s0\u2192 \u914d\u5217\n\n$s1\u2192 \u914d\u5217\u306e\u30b5\u30a4\u30ba\n\n\n.text \u30bb\u30af\u30b7\u30e7\u30f3\n\nmain \u30eb\u30fc\u30c1\u30f3\n\u300c\u5165\u529b\u300d\u2192\u300c\u30bd\u30fc\u30c8\u300d\u2192\u300c\u51fa\u529b\u300d\u3092\u7e70\u308a\u8fd4\u3059\n\n\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\u7528\u306e\u5b9f\u88c5\nmain:\n\n    jal read\n    jal sort\n    jal print\n    j main\n\n\n\n\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u7528\u306e\u5b9f\u88c5\nmain:\n\n    jal read\n\n    # sort(0, N - 1);\n    move $a0, $zero\n    move $a1, $s1\n    addi $a1, $a1, -1\n    jal sort\n\n    jal print\n    j main\n\n\n\nread \u30eb\u30fc\u30c1\u30f3\n\u30e6\u30fc\u30b6\u30fc\u5165\u529b\u3092\u53d7\u3051\u4ed8\u3051\u3066\u914d\u5217 $s0 \u306b\u683c\u7d0d\u3059\u308b\nread:\n\n    # \"Number of integers:\"\u3000\u3068\u8868\u793a\u3059\u308b\n    li $v0, 4\n    la $a0, input_message_0\n    syscall\n\n    # \u751f\u6210\u3059\u308b\u914d\u5217\u306e\u30b5\u30a4\u30ba\u3092$v0\u306b\u53d7\u3051\u53d6\u308b\n    li $v0, 5\n    syscall\n\n    # \u6b63\u306e\u6570\u3067\u3042\u308c\u3070read_prepare\u306b\u30b8\u30e3\u30f3\u30d7\u3059\u308b\n    bgt $v0, $zero, read_prepare\n\n    # \"Number of integers must be positive\\n\" \u3068\u8868\u793a\u3059\u308b\n    li $v0, 4\n    la $a0, error_message\n    syscall\n    la $a0, eol\n    syscall\n\n    # \u30ea\u30c8\u30e9\u30a4\u3055\u305b\u308b\n    j read\n\n    read_prepare:\n\n    # \u751f\u6210\u3059\u308b\u914d\u5217\u306e\u30b5\u30a4\u30ba\u3092$s1\u306b\u4fdd\u5b58\u3059\u308b\n    move $s1, $v0\n\n    # \u914d\u5217\u3092\u751f\u6210\u3057\u3066\u5148\u982d\u30a2\u30c9\u30ec\u30b9\u3092$v0\u306b\u53d7\u3051\u53d6\u308b\n    sll $a0, $v0, 2\n    li $v0, 9\n    syscall\n\n    # \u751f\u6210\u3057\u305f\u914d\u5217\u306e\u5148\u982d\u30a2\u30c9\u30ec\u30b9\u3092$s0\u306b\u4fdd\u5b58\u3059\u308b\n    move $s0, $v0\n\n    # \u914d\u5217\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u7528\u30ec\u30b8\u30b9\u30bf\u3068\u3057\u3066$t0\u3092\u521d\u671f\u5316\u3059\u308b\n    move $t0, $zero\n\n    read_loop:\n\n    # \"Input[{$t0}]:\" \u3068\u8868\u793a\u3059\u308b\n    li $v0, 4\n    la $a0, input_message_1\n    syscall\n    la $a0, bracket_start\n    syscall\n    li $v0, 1\n    move $a0, $t0\n    syscall\n    li $v0, 4\n    la $a0, bracket_end\n    syscall\n\n    # \u8a2d\u5b9a\u3059\u308b\u914d\u5217\u8981\u7d20\u306e\u5024\u3092$v0\u306b\u53d7\u3051\u53d6\u308b\n    li $v0, 5\n    syscall\n\n    # \u5b9f\u969b\u306b\u4fdd\u5b58\u3059\u308b\n    sll $t1, $t0, 2\n    add $t1, $t1, $s0\n    sw $v0, 0($t1)\n\n    # \u30aa\u30d5\u30bb\u30c3\u30c8\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\n    addi $t0, $t0, 1\n\n    # \u4f5c\u6210\u3057\u305f\u914d\u5217\u306b\u307e\u3060\u7a7a\u304d\u304c\u3042\u308c\u3070read_loop\u306b\u30b8\u30e3\u30f3\u30d7\u3059\u308b\n    bne $t0, $s1, read_loop\n\n    # \"\\n\" \u3068\u8868\u793a\u3059\u308b\n    li $v0, 4\n    la $a0, eol\n    syscall\n\n    # \u5fa9\u5e30\u3059\u308b\n    jr $ra\n\n\nprint \u30eb\u30fc\u30c1\u30f3\n\u914d\u5217 $s0 \u306e\u5024\u3092\u51fa\u529b\u3059\u308b\nprint:\n\n    # \u914d\u5217\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u7528\u30ec\u30b8\u30b9\u30bf\u3068\u3057\u3066$t0\u3092\u521d\u671f\u5316\u3059\u308b\n    move $t0, $zero\n\n    # \"Sorting results:\" \u3068\u8868\u793a\u3059\u308b\n    li $v0, 4\n    la $a0, output_message_0\n    syscall\n    la $a0, eol\n    syscall\n\n    print_loop:\n\n    # \"Output[{$t0}]:\" \u3068\u8868\u793a\u3059\u308b\n    li $v0, 4\n    la $a0, output_message_1\n    syscall\n    la $a0, bracket_start\n    syscall\n    li $v0, 1\n    move $a0, $t0\n    syscall\n    li $v0, 4\n    la $a0, bracket_end\n    syscall\n\n    # \u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5024\u3092\u53d6\u308a\u51fa\u3057\u3066\u8868\u793a\u3059\u308b\n    sll $t1, $t0, 2\n    add $t1, $t1, $s0\n    li $v0, 1\n    lw $a0, 0($t1)\n    syscall\n\n    # \"\\n\" \u3068\u8868\u793a\u3059\u308b\n    li $v0, 4\n    la $a0, eol\n    syscall\n\n    # \u30aa\u30d5\u30bb\u30c3\u30c8\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3055\u305b\u308b\n    addi $t0, $t0, 1\n\n    # \u914d\u5217\u8981\u7d20\u306e\u5de1\u56de\u304c\u307e\u3060\u6e08\u3093\u3067\u3044\u306a\u3051\u308c\u3070print_loop\u306b\u30b8\u30e3\u30f3\u30d7\u3059\u308b\n    bne $t0, $s1, print_loop\n\n    # \"\\n\" \u3068\u8868\u793a\u3059\u308b\n    li $v0, 4\n    la $a0, eol\n    syscall\n\n    # \u5fa9\u5e30\u3059\u308b\n    jr $ra\n\n\nsort \u30eb\u30fc\u30c1\u30f3\n\n\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\u7528\u306e\u5b9f\u88c5\nsort:\n\n    # i = 0;\n    move $s2, $zero;\n\n    # while (i < N) {\n    loop_i_start:\n    bge $s2, $s1, loop_i_end\n\n    # j = N - 1;\n    add $s3, $s1, -1\n\n    # while (j > i) {\n    loop_j_start:\n    ble $s3, $s2, loop_j_end\n\n    # if (x[j] < x[j - 1]) swap(&x[j], &x[j - 1]);\n    add $t1, $s3, -1\n    sll $t0, $s3, 2\n    sll $t1, $t1, 2\n    add $t0, $t0, $s0\n    add $t1, $t1, $s0\n    lw $t2, 0($t0)\n    lw $t3, 0($t1)\n    bge $t2, $t3, skip_swap\n    sw $t2, 0($t1)\n    sw $t3, 0($t0)\n    skip_swap:\n\n    # --j;\n    addi $s3, $s3, -1\n\n    # }\n    j loop_j_start\n    loop_j_end:\n\n    # ++i;\n    addi $s2, $s2, 1\n\n    # }\n    j loop_i_start\n    loop_i_end:\n\n    # return;\n    jr $ra\n\n\n\n\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u7528\u306e\u5b9f\u88c5\nsort:\n\n    # \u30b9\u30bf\u30c3\u30af\u3078\u306e\u9000\u907f\n    addi $sp, $sp, -20\n    sw $ra, 16($sp)\n    sw $s5, 12($sp)\n    sw $s4, 8($sp)\n    sw $s3, 4($sp)\n    sw $s2, 0($sp)\n    move $s2, $a0\n    move $s3, $a1\n\n    # i = left;\n    move $s4, $s2\n\n    # j = right;\n    move $s5, $s3\n\n    # pivot = x[(left + right) / 2];\n    add $t0, $s2, $s3\n    li $t1, 2 \n    div $t0, $t1\n    mflo $t0\n    sll $t0, $t0, 2\n    add $t0, $t0, $s0\n    lw $t0, 0($t0)\n\n    # while (1) {\n    loop_start:\n\n    # while (x[i] < pivot) ++i;\n    loop_i_start:\n    move $t1, $s4\n    sll $t1, $t1, 2\n    add $t1, $t1, $s0\n    lw $t1, 0($t1)\n    bge $t1, $t0, loop_i_end\n    addi $s4, $s4, 1\n\n    # }\n    j loop_i_start\n    loop_i_end:\n\n    # while (pivot < x[j]) --j;\n    loop_j_start:\n    move $t1, $s5\n    sll $t1, $t1, 2\n    add $t1, $t1, $s0\n    lw $t1, 0($t1)\n    bge $t0, $t1, loop_j_end\n    addi $s5, $s5, -1\n\n    # }\n    j loop_j_start\n    loop_j_end:\n\n    # if (i >= j) break;\n    bge $s4, $s5, loop_end\n\n    # swap(&x[i], &x[j]);\n    move $t1, $s4\n    move $t2, $s5\n    sll $t1, $t1, 2\n    sll $t2, $t2, 2\n    add $t1, $t1, $s0\n    add $t2, $t2, $s0\n    lw $t3, 0($t1)\n    lw $t4, 0($t2)\n    sw $t3, 0($t2)\n    sw $t4, 0($t1)\n\n    # ++i\n    addi $s4, $s4, 1\n\n    # --j\n    addi $s5, $s5, -1\n\n    # }\n    j loop_start;\n    loop_end:\n\n    # if (left < i - 1) sort(left, i - 1);\n    move $t0, $s4\n    addi $t0, $t0, -1\n    bge $s2, $t0, skip_left_sort\n    move $a0, $s2\n    move $a1, $t0\n    jal sort\n    skip_left_sort:\n\n    # if (j + 1 < right) sort(j + 1, right);\n    move $t0, $s5\n    addi $t0, $t0, 1\n    bge $t0, $s3, skip_right_sort\n    move $a0, $t0\n    move $a1, $s3\n    jal sort\n    skip_right_sort:\n\n    # \u30b9\u30bf\u30c3\u30af\u304b\u3089\u306e\u5fa9\u5143\n    lw $s2, 0($sp)\n    lw $s3, 4($sp)\n    lw $s4, 8($sp)\n    lw $s5, 12($sp)\n    lw $ra, 16($sp)\n    addi $sp, $sp, 20\n\n    # return;\n    jr $ra\n\n\n\u5927\u5b66\u306e\u8ab2\u984c\u7528 **(\u518d\u3000\u5c65\u3000\u4fee)**\n\u30e1\u30e2\u30ea\u89e3\u653e\u306e\u4ed5\u65b9\u304c\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u78ba\u4fdd\u3057\u305f\u30b9\u30da\u30fc\u30b9\u653e\u7f6e\u3057\u3066\u308b\n\n![ss (2014-05-03 at 10.35.37).png](https://qiita-image-store.s3.amazonaws.com/0/25060/63902d95-ea8c-d931-83fd-fbd88de2df44.png)\n\n\u3053\u3093\u306a\u611f\u3058\u3067 **[SPIM](http://spimsimulator.sourceforge.net/)** \u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u3067\u52d5\u3044\u3066\u304f\u308c\u307e\u3059\n\n# `.data` \u30bb\u30af\u30b7\u30e7\u30f3\n\n## \u6587\u5b57\u5217\u306e\u5b9a\u7fa9\n\n```zsh\nbracket_start: .asciiz \"[\"\nbracket_end: .asciiz \"]: \"\ninput_message_0: .asciiz \"Number of integers: \"\ninput_message_1: .asciiz \"Input\"\noutput_message_0: .asciiz \"Sorted results: \"\noutput_message_1: .asciiz \"Output\"\nerror_message: .asciiz \"Number of integers must be positive\"\neol: .asciiz \"\\n\"\n```\n\n## \u56fa\u5b9a\u7684\u306b\u4f7f\u3046\u30ec\u30b8\u30b9\u30bf\u306e\u5b9a\u7fa9\n\n- ***$s0***<br />\u2192 \u914d\u5217\n- ***$s1***<br />\u2192 \u914d\u5217\u306e\u30b5\u30a4\u30ba\n\n# `.text` \u30bb\u30af\u30b7\u30e7\u30f3\n\n## `main` \u30eb\u30fc\u30c1\u30f3\n\n\u300c\u5165\u529b\u300d\u2192\u300c\u30bd\u30fc\u30c8\u300d\u2192\u300c\u51fa\u529b\u300d\u3092\u7e70\u308a\u8fd4\u3059\n\n```zsh:\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\u7528\u306e\u5b9f\u88c5\nmain:\n\n\tjal read\n\tjal sort\n\tjal print\n\tj main\n```\n\n\n```zsh:\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u7528\u306e\u5b9f\u88c5\nmain:\n\n\tjal read\n\n\t# sort(0, N - 1);\n\tmove $a0, $zero\n\tmove $a1, $s1\n\taddi $a1, $a1, -1\n\tjal sort\n\n\tjal print\n\tj main\n```\n\n## `read` \u30eb\u30fc\u30c1\u30f3\n\n\u30e6\u30fc\u30b6\u30fc\u5165\u529b\u3092\u53d7\u3051\u4ed8\u3051\u3066\u914d\u5217 ***$s0*** \u306b\u683c\u7d0d\u3059\u308b\n\n```zsh\nread:\n\t\n\t# \"Number of integers:\"\u3000\u3068\u8868\u793a\u3059\u308b\n\tli $v0, 4\n\tla $a0, input_message_0\n\tsyscall\n\t\n\t# \u751f\u6210\u3059\u308b\u914d\u5217\u306e\u30b5\u30a4\u30ba\u3092$v0\u306b\u53d7\u3051\u53d6\u308b\n\tli $v0, 5\n\tsyscall\n\t\n\t# \u6b63\u306e\u6570\u3067\u3042\u308c\u3070read_prepare\u306b\u30b8\u30e3\u30f3\u30d7\u3059\u308b\n\tbgt $v0, $zero, read_prepare\n\t\n\t# \"Number of integers must be positive\\n\" \u3068\u8868\u793a\u3059\u308b\n\tli $v0, 4\n\tla $a0, error_message\n\tsyscall\n\tla $a0, eol\n\tsyscall\n\t\n\t# \u30ea\u30c8\u30e9\u30a4\u3055\u305b\u308b\n\tj read\n\t\n\tread_prepare:\n\t\n\t# \u751f\u6210\u3059\u308b\u914d\u5217\u306e\u30b5\u30a4\u30ba\u3092$s1\u306b\u4fdd\u5b58\u3059\u308b\n\tmove $s1, $v0\n\t\n\t# \u914d\u5217\u3092\u751f\u6210\u3057\u3066\u5148\u982d\u30a2\u30c9\u30ec\u30b9\u3092$v0\u306b\u53d7\u3051\u53d6\u308b\n\tsll $a0, $v0, 2\n\tli $v0, 9\n\tsyscall\n\t\n\t# \u751f\u6210\u3057\u305f\u914d\u5217\u306e\u5148\u982d\u30a2\u30c9\u30ec\u30b9\u3092$s0\u306b\u4fdd\u5b58\u3059\u308b\n\tmove $s0, $v0\n\t\n\t# \u914d\u5217\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u7528\u30ec\u30b8\u30b9\u30bf\u3068\u3057\u3066$t0\u3092\u521d\u671f\u5316\u3059\u308b\n\tmove $t0, $zero\n\t\n\tread_loop:\n\t\n\t# \"Input[{$t0}]:\" \u3068\u8868\u793a\u3059\u308b\n\tli $v0, 4\n\tla $a0, input_message_1\n\tsyscall\n\tla $a0, bracket_start\n\tsyscall\n\tli $v0, 1\n\tmove $a0, $t0\n\tsyscall\n\tli $v0, 4\n\tla $a0, bracket_end\n\tsyscall\n\t\n\t# \u8a2d\u5b9a\u3059\u308b\u914d\u5217\u8981\u7d20\u306e\u5024\u3092$v0\u306b\u53d7\u3051\u53d6\u308b\n\tli $v0, 5\n\tsyscall\n\t\n\t# \u5b9f\u969b\u306b\u4fdd\u5b58\u3059\u308b\n\tsll $t1, $t0, 2\n\tadd $t1, $t1, $s0\n\tsw $v0, 0($t1)\n\t\n\t# \u30aa\u30d5\u30bb\u30c3\u30c8\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\n\taddi $t0, $t0, 1\n\t\n\t# \u4f5c\u6210\u3057\u305f\u914d\u5217\u306b\u307e\u3060\u7a7a\u304d\u304c\u3042\u308c\u3070read_loop\u306b\u30b8\u30e3\u30f3\u30d7\u3059\u308b\n\tbne $t0, $s1, read_loop\n\t\n\t# \"\\n\" \u3068\u8868\u793a\u3059\u308b\n\tli $v0, 4\n\tla $a0, eol\n\tsyscall\n\t\n\t# \u5fa9\u5e30\u3059\u308b\n\tjr $ra\n```\n\n## `print` \u30eb\u30fc\u30c1\u30f3 \n\n\u914d\u5217 ***$s0*** \u306e\u5024\u3092\u51fa\u529b\u3059\u308b\n\n```zsh\nprint:\n\t\n\t# \u914d\u5217\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u7528\u30ec\u30b8\u30b9\u30bf\u3068\u3057\u3066$t0\u3092\u521d\u671f\u5316\u3059\u308b\n\tmove $t0, $zero\n\t\n\t# \"Sorting results:\" \u3068\u8868\u793a\u3059\u308b\n\tli $v0, 4\n\tla $a0, output_message_0\n\tsyscall\n\tla $a0, eol\n\tsyscall\n\t\n\tprint_loop:\n\t\n\t# \"Output[{$t0}]:\" \u3068\u8868\u793a\u3059\u308b\n\tli $v0, 4\n\tla $a0, output_message_1\n\tsyscall\n\tla $a0, bracket_start\n\tsyscall\n\tli $v0, 1\n\tmove $a0, $t0\n\tsyscall\n\tli $v0, 4\n\tla $a0, bracket_end\n\tsyscall\n\t\n\t# \u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5024\u3092\u53d6\u308a\u51fa\u3057\u3066\u8868\u793a\u3059\u308b\n\tsll $t1, $t0, 2\n\tadd $t1, $t1, $s0\n\tli $v0, 1\n\tlw $a0, 0($t1)\n\tsyscall\n\t\n\t# \"\\n\" \u3068\u8868\u793a\u3059\u308b\n\tli $v0, 4\n\tla $a0, eol\n\tsyscall\n\t\n\t# \u30aa\u30d5\u30bb\u30c3\u30c8\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3055\u305b\u308b\n\taddi $t0, $t0, 1\n\t\n\t# \u914d\u5217\u8981\u7d20\u306e\u5de1\u56de\u304c\u307e\u3060\u6e08\u3093\u3067\u3044\u306a\u3051\u308c\u3070print_loop\u306b\u30b8\u30e3\u30f3\u30d7\u3059\u308b\n\tbne $t0, $s1, print_loop\n\t\n\t# \"\\n\" \u3068\u8868\u793a\u3059\u308b\n\tli $v0, 4\n\tla $a0, eol\n\tsyscall\n\t\n\t# \u5fa9\u5e30\u3059\u308b\n\tjr $ra\n```\t\n\n## `sort` \u30eb\u30fc\u30c1\u30f3\n\n```zsh:\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\u7528\u306e\u5b9f\u88c5\nsort:\n\t\n\t# i = 0;\n\tmove $s2, $zero;\n\t\n\t# while (i < N) {\n\tloop_i_start:\n\tbge $s2, $s1, loop_i_end\n\t\n\t# j = N - 1;\n\tadd $s3, $s1, -1\n\t\n\t# while (j > i) {\n\tloop_j_start:\n\tble $s3, $s2, loop_j_end\n\t\n\t# if (x[j] < x[j - 1]) swap(&x[j], &x[j - 1]);\n\tadd $t1, $s3, -1\n\tsll $t0, $s3, 2\n\tsll $t1, $t1, 2\n\tadd $t0, $t0, $s0\n\tadd $t1, $t1, $s0\n\tlw $t2, 0($t0)\n\tlw $t3, 0($t1)\n\tbge $t2, $t3, skip_swap\n\tsw $t2, 0($t1)\n\tsw $t3, 0($t0)\n\tskip_swap:\n\t\n\t# --j;\n\taddi $s3, $s3, -1\n\t\n\t# }\n\tj loop_j_start\n\tloop_j_end:\n\t\n\t# ++i;\n\taddi $s2, $s2, 1\n\t\n\t# }\n\tj loop_i_start\n\tloop_i_end:\n\t\n\t# return;\n\tjr $ra\n```\n\n```zsh:\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u7528\u306e\u5b9f\u88c5\nsort:\n\t\n\t# \u30b9\u30bf\u30c3\u30af\u3078\u306e\u9000\u907f\n\taddi $sp, $sp, -20\n\tsw $ra, 16($sp)\n\tsw $s5, 12($sp)\n\tsw $s4, 8($sp)\n\tsw $s3, 4($sp)\n\tsw $s2, 0($sp)\n\tmove $s2, $a0\n\tmove $s3, $a1\n\t\n\t# i = left;\n\tmove $s4, $s2\n\t\n\t# j = right;\n\tmove $s5, $s3\n\t\n\t# pivot = x[(left + right) / 2];\n\tadd $t0, $s2, $s3\n\tli $t1, 2 \n\tdiv $t0, $t1\n\tmflo $t0\n\tsll $t0, $t0, 2\n\tadd $t0, $t0, $s0\n\tlw $t0, 0($t0)\n\t\n\t# while (1) {\n\tloop_start:\n\t\n\t# while (x[i] < pivot) ++i;\n\tloop_i_start:\n\tmove $t1, $s4\n\tsll $t1, $t1, 2\n\tadd $t1, $t1, $s0\n\tlw $t1, 0($t1)\n\tbge $t1, $t0, loop_i_end\n\taddi $s4, $s4, 1\n\n\t# }\n\tj loop_i_start\n\tloop_i_end:\n\t\n\t# while (pivot < x[j]) --j;\n\tloop_j_start:\n\tmove $t1, $s5\n\tsll $t1, $t1, 2\n\tadd $t1, $t1, $s0\n\tlw $t1, 0($t1)\n\tbge $t0, $t1, loop_j_end\n\taddi $s5, $s5, -1\n\n\t# }\n\tj loop_j_start\n\tloop_j_end:\n\t\n\t# if (i >= j) break;\n\tbge $s4, $s5, loop_end\n\t\n\t# swap(&x[i], &x[j]);\n\tmove $t1, $s4\n\tmove $t2, $s5\n\tsll $t1, $t1, 2\n\tsll $t2, $t2, 2\n\tadd $t1, $t1, $s0\n\tadd $t2, $t2, $s0\n\tlw $t3, 0($t1)\n\tlw $t4, 0($t2)\n\tsw $t3, 0($t2)\n\tsw $t4, 0($t1)\n\t\n\t# ++i\n\taddi $s4, $s4, 1\n\t\n\t# --j\n\taddi $s5, $s5, -1\n\t\n\t# }\n\tj loop_start;\n\tloop_end:\n\t\n\t# if (left < i - 1) sort(left, i - 1);\n\tmove $t0, $s4\n\taddi $t0, $t0, -1\n\tbge $s2, $t0, skip_left_sort\n\tmove $a0, $s2\n\tmove $a1, $t0\n\tjal sort\n\tskip_left_sort:\n\t\n\t# if (j + 1 < right) sort(j + 1, right);\n\tmove $t0, $s5\n\taddi $t0, $t0, 1\n\tbge $t0, $s3, skip_right_sort\n\tmove $a0, $t0\n\tmove $a1, $s3\n\tjal sort\n\tskip_right_sort:\n\t\n\t# \u30b9\u30bf\u30c3\u30af\u304b\u3089\u306e\u5fa9\u5143\n\tlw $s2, 0($sp)\n\tlw $s3, 4($sp)\n\tlw $s4, 8($sp)\n\tlw $s5, 12($sp)\n\tlw $ra, 16($sp)\n\taddi $sp, $sp, 20\n\t\n\t# return;\n\tjr $ra\n```\n", "tags": ["MIPS", "assembly"]}