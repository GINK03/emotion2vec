{"context": " More than 1 year has passed since last update.\n\n\u8e93\u304d\u30dd\u30a4\u30f3\u30c8\n\u53d6\u3063\u3066\u304d\u305fCookie\u3092\u524a\u9664\u3057\u3066\u3082\u30461\u56de\u3059\u3050\u30bb\u30c3\u30c8\u3059\u308b\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3064\u3082\u308a\u304c\u3001\u4f55\u6545\u304b2\u56de\u76ee\u306e\u30bb\u30c3\u30c8\u3067\u5931\u6557\u3057\u3066\u3057\u307e\u3046\u3002\u3068\u3053\u308d\u304cexpiry\u3060\u3051\u7121\u8996\u3059\u308b\u3068\u6b63\u5e38\u306b\u30bb\u30c3\u30c8\u3055\u308c\u305f\u3002Cookie\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306f\u79d2\u5358\u4f4d\u306a\u306e\u306b\u3001addCookie\u306e\u5f15\u6570\u306f\u30df\u30ea\u79d2\u5358\u4f4d\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u610f\u5473\u4e0d\u660e\u306a\u5b9f\u88c5\u304c\u539f\u56e0\u3060\u3063\u305f\u3002\n\nCookie\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u53d6\u5f97\nvar cookie = await driver.manage().getCookie('PHPSESSID');\n\n\nCookie\u306e\u524a\u9664\nawait driver.manage().deleteCookie('PHPSESSID');\n\n\nCookie\u306e\u518d\u30bb\u30c3\u30c8\n\nBAD\nawait driver.manage().addCookie(\n    cookie.name,\n    cookie.value,\n    cookie.path,\n    cookie.domain,\n    cookie.secure,\n    cookie.expiry\n);\n\n\n\nGOOD\nawait driver.manage().addCookie(\n    cookie.name,\n    cookie.value,\n    cookie.path,\n    cookie.domain,\n    cookie.secure,\n    cookie.expiry * 1000\n);\n\n\n\n\u5f53\u8a72\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u307f\u308b\n\u30b0\u30b0\u3063\u3066\u3082\u5168\u7136\u540c\u69d8\u306e\u8cea\u554f\u304c\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u81ea\u5206\u3067\u30bd\u30fc\u30b9\u8aad\u3093\u3067\u898b\u308b\u307e\u3067\u6c17\u3065\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u4f55\u3067\u3053\u3046\u306a\u3063\u3066\u308b\u3093\u3060\u308d\u3046\u2026\nwebdriver.WebDriver.Options.prototype.addCookie = function(\n    name, value, opt_path, opt_domain, opt_isSecure, opt_expiry) {\n  // We do not allow '=' or ';' in the name.\n  if (/[;=]/.test(name)) {\n    throw Error('Invalid cookie name \"' + name + '\"');\n  }\n\n  // We do not allow ';' in value.\n  if (/;/.test(value)) {\n    throw Error('Invalid cookie value \"' + value + '\"');\n  }\n\n  var cookieString = name + '=' + value +\n      (opt_domain ? ';domain=' + opt_domain : '') +\n      (opt_path ? ';path=' + opt_path : '') +\n      (opt_isSecure ? ';secure' : '');\n\n  var expiry;\n  if (goog.isDef(opt_expiry)) {\n    var expiryDate;\n    if (goog.isNumber(opt_expiry)) {\n      expiryDate = new Date(opt_expiry);\n    } else {\n      expiryDate = /** @type {!Date} */ (opt_expiry);\n      opt_expiry = expiryDate.getTime();\n    }\n    cookieString += ';expires=' + expiryDate.toUTCString();\n    // Convert from milliseconds to seconds.\n    expiry = Math.floor(/** @type {number} */ (opt_expiry) / 1000);\n  }\n\n  return this.driver_.schedule(\n      new webdriver.Command(webdriver.CommandName.ADD_COOKIE).\n          setParameter('cookie', {\n            'name': name,\n            'value': value,\n            'path': opt_path,\n            'domain': opt_domain,\n            'secure': !!opt_isSecure,\n            'expiry': expiry\n          }),\n      'WebDriver.manage().addCookie(' + cookieString + ')');\n};\n\nNode.js\u3060\u3051\u3067\u306a\u304f\u3001Java\u672c\u5bb6\u3082\u305d\u3046\u306a\u3063\u3066\u307e\u3057\u305f\u3002\u3046\u30fc\u3093\u2026\npublic class AddCookie extends WebDriverHandler<Void> implements JsonParametersAware {\n\n  private volatile Map<String, Object> rawCookie;\n\n  public AddCookie(Session session) {\n    super(session);\n  }\n\n  @Override\n  public Void call() throws Exception {\n    Cookie cookie = createCookie();\n\n    getDriver().manage().addCookie(cookie);\n\n    return null;\n  }\n\n  @SuppressWarnings({\"unchecked\"})\n  public void setJsonParameters(Map<String, Object> allParameters) throws Exception {\n    if (allParameters == null) {\n      return;\n    }\n    rawCookie = Maps.newHashMap((Map<String, Object>) allParameters.get(\"cookie\"));\n  }\n\n  protected Cookie createCookie() {\n    if (rawCookie == null) {\n      return null;\n    }\n\n    String name = (String) rawCookie.get(\"name\");\n    String value = (String) rawCookie.get(\"value\");\n    String path = (String) rawCookie.get(\"path\");\n    String domain = (String) rawCookie.get(\"domain\");\n    Boolean secure = (Boolean) rawCookie.get(\"secure\");\n    if (secure == null) {\n        secure = false;\n    }\n\n    Number expiryNum = (Number) rawCookie.get(\"expiry\");\n    Date expiry = expiryNum == null ? null : new Date(\n        TimeUnit.SECONDS.toMillis(expiryNum.longValue()));\n\n    return new Cookie.Builder(name, value)\n        .path(path)\n        .domain(domain)\n        .isSecure(secure)\n        .expiresOn(expiry)\n        .build();\n  }\n\n  @Override\n  public String toString() {\n    return \"[add cookie: \" + createCookie() + \"]\";\n  }\n}\n\n# \u8e93\u304d\u30dd\u30a4\u30f3\u30c8\n\n\u53d6\u3063\u3066\u304d\u305fCookie\u3092\u524a\u9664\u3057\u3066\u3082\u30461\u56de\u3059\u3050\u30bb\u30c3\u30c8\u3059\u308b\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3064\u3082\u308a\u304c\u3001\u4f55\u6545\u304b2\u56de\u76ee\u306e\u30bb\u30c3\u30c8\u3067\u5931\u6557\u3057\u3066\u3057\u307e\u3046\u3002\u3068\u3053\u308d\u304c`expiry`\u3060\u3051\u7121\u8996\u3059\u308b\u3068\u6b63\u5e38\u306b\u30bb\u30c3\u30c8\u3055\u308c\u305f\u3002Cookie\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306f\u79d2\u5358\u4f4d\u306a\u306e\u306b\u3001addCookie\u306e\u5f15\u6570\u306f**\u30df\u30ea\u79d2**\u5358\u4f4d\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u610f\u5473\u4e0d\u660e\u306a\u5b9f\u88c5\u304c\u539f\u56e0\u3060\u3063\u305f\u3002\n\n#### Cookie\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u53d6\u5f97\n\n```js\nvar cookie = await driver.manage().getCookie('PHPSESSID');\n```\n\n#### Cookie\u306e\u524a\u9664\n\n```js\nawait driver.manage().deleteCookie('PHPSESSID');\n```\n\n#### Cookie\u306e\u518d\u30bb\u30c3\u30c8\n\n```js:BAD\nawait driver.manage().addCookie(\n    cookie.name,\n    cookie.value,\n    cookie.path,\n    cookie.domain,\n    cookie.secure,\n    cookie.expiry\n);\n```\n\n```js:GOOD\nawait driver.manage().addCookie(\n    cookie.name,\n    cookie.value,\n    cookie.path,\n    cookie.domain,\n    cookie.secure,\n    cookie.expiry * 1000\n);\n```\n\n# \u5f53\u8a72\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u307f\u308b\n\n\u30b0\u30b0\u3063\u3066\u3082\u5168\u7136\u540c\u69d8\u306e\u8cea\u554f\u304c\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u81ea\u5206\u3067\u30bd\u30fc\u30b9\u8aad\u3093\u3067\u898b\u308b\u307e\u3067\u6c17\u3065\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u4f55\u3067\u3053\u3046\u306a\u3063\u3066\u308b\u3093\u3060\u308d\u3046\u2026\n\n```js\nwebdriver.WebDriver.Options.prototype.addCookie = function(\n    name, value, opt_path, opt_domain, opt_isSecure, opt_expiry) {\n  // We do not allow '=' or ';' in the name.\n  if (/[;=]/.test(name)) {\n    throw Error('Invalid cookie name \"' + name + '\"');\n  }\n\n  // We do not allow ';' in value.\n  if (/;/.test(value)) {\n    throw Error('Invalid cookie value \"' + value + '\"');\n  }\n\n  var cookieString = name + '=' + value +\n      (opt_domain ? ';domain=' + opt_domain : '') +\n      (opt_path ? ';path=' + opt_path : '') +\n      (opt_isSecure ? ';secure' : '');\n\n  var expiry;\n  if (goog.isDef(opt_expiry)) {\n    var expiryDate;\n    if (goog.isNumber(opt_expiry)) {\n      expiryDate = new Date(opt_expiry);\n    } else {\n      expiryDate = /** @type {!Date} */ (opt_expiry);\n      opt_expiry = expiryDate.getTime();\n    }\n    cookieString += ';expires=' + expiryDate.toUTCString();\n    // Convert from milliseconds to seconds.\n    expiry = Math.floor(/** @type {number} */ (opt_expiry) / 1000);\n  }\n\n  return this.driver_.schedule(\n      new webdriver.Command(webdriver.CommandName.ADD_COOKIE).\n          setParameter('cookie', {\n            'name': name,\n            'value': value,\n            'path': opt_path,\n            'domain': opt_domain,\n            'secure': !!opt_isSecure,\n            'expiry': expiry\n          }),\n      'WebDriver.manage().addCookie(' + cookieString + ')');\n};\n```\n\nNode.js\u3060\u3051\u3067\u306a\u304f\u3001Java\u672c\u5bb6\u3082\u305d\u3046\u306a\u3063\u3066\u307e\u3057\u305f\u3002\u3046\u30fc\u3093\u2026\n\n```java\npublic class AddCookie extends WebDriverHandler<Void> implements JsonParametersAware {\n\n  private volatile Map<String, Object> rawCookie;\n\n  public AddCookie(Session session) {\n    super(session);\n  }\n\n  @Override\n  public Void call() throws Exception {\n    Cookie cookie = createCookie();\n\n    getDriver().manage().addCookie(cookie);\n\n    return null;\n  }\n\n  @SuppressWarnings({\"unchecked\"})\n  public void setJsonParameters(Map<String, Object> allParameters) throws Exception {\n    if (allParameters == null) {\n      return;\n    }\n    rawCookie = Maps.newHashMap((Map<String, Object>) allParameters.get(\"cookie\"));\n  }\n\n  protected Cookie createCookie() {\n    if (rawCookie == null) {\n      return null;\n    }\n\n    String name = (String) rawCookie.get(\"name\");\n    String value = (String) rawCookie.get(\"value\");\n    String path = (String) rawCookie.get(\"path\");\n    String domain = (String) rawCookie.get(\"domain\");\n    Boolean secure = (Boolean) rawCookie.get(\"secure\");\n    if (secure == null) {\n        secure = false;\n    }\n\n    Number expiryNum = (Number) rawCookie.get(\"expiry\");\n    Date expiry = expiryNum == null ? null : new Date(\n        TimeUnit.SECONDS.toMillis(expiryNum.longValue()));\n\n    return new Cookie.Builder(name, value)\n        .path(path)\n        .domain(domain)\n        .isSecure(secure)\n        .expiresOn(expiry)\n        .build();\n  }\n\n  @Override\n  public String toString() {\n    return \"[add cookie: \" + createCookie() + \"]\";\n  }\n}\n```\n", "tags": ["Selenium", "selenium-webdriver", "Java", "Node.js", "cookie"]}