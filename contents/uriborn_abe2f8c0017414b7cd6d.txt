{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u524d\u56de\u306e\u6295\u7a3f\u3067 Apache Spark \u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u89e3\u6790\u3057\u3066\u3001CSV\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3092\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u304c\u3001\nApache Spark \u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u89e3\u6790\u3057\u3066\u3001\u305d\u306e\u7d50\u679c\u3092CSV\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3057\u3066\u307f\u305f\u3002\n\u4eca\u5ea6\u306f\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3058\u3083\u306a\u304f\u3066MySQL\u306e\u30c7\u30fc\u30bf\u3092 Apache Spark \u4f7f\u3063\u3066\u96c6\u8a08\u51fa\u6765\u308b\u304b\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u7d4c\u7def\nuser 1 --- n entry\n\u306e\u3088\u3046\u306a\u30c6\u30fc\u30d6\u30eb\u95a2\u9023\u3067\u5404user\u30ec\u30b3\u30fc\u30c9\u306b\u95a2\u9023\u3059\u308bentry\u306e\u6570\u3068\u305d\u306eentry\u306e\u30ad\u30fc\u306a\u3069\u306e\u60c5\u5831\u3092\u77e5\u308a\u305f\u304f\u3066\u3001\n\u307e\u305fCSV\u30d5\u30a1\u30a4\u30eb(\uff57)\u3067\u51fa\u529b\u3057\u3066\u30c1\u30fc\u30e0\u5185\u3067\u5171\u6709\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u3002\n\u305f\u3060\u3001user\u30c6\u30fc\u30d6\u30eb\u306e\u30ec\u30b3\u30fc\u30c9\u6570\u304c80\u4e07\u4ef6\u8fd1\u304f\u3042\u308a\u3001\u666e\u901a\u306b slick \u4f7f\u3063\u305f\u96c6\u8a08\u30b9\u30af\u30ea\u30d7\u30c8\u3060\u3068\u3001\u30af\u30bd\u9045\u304f\u3066\u3084\u3063\u3066\u3089\u308c\u3093\u3002(\u2190 \u30af\u25cb\u30b3\u30fc\u30c9\u3060\u304b\u3089\u304b\u3082\u3002\u3002)\n\u305d\u3053\u3067\u3002\u3002\n\u5206\u6563\u51e6\u7406\u3067\u304d\u306a\u3044\u304b\u306a\u30fc\n\u2193\nApache Spark \u3067\u3067\u304d\u306a\u3044\u304b\u306a\u30fc\n\u2193\nSpark SQL \u3063\u3066\u3082\u306e\u304c\u3042\u308b\u3057\u3001MySQL\u306e\u30c7\u30fc\u30bf\u30a4\u30f3\u30dd\u30fc\u30c8\u3068\u304b\u3057\u305f\u3089\u3067\u304d\u308b\u306e\u304b\u306a\u30fc\n\u2193\nJdbcRDD\u3063\u3066\u3044\u3046\u306e\u304c\u3042\u308b\u3058\u3083\u3093\uff01\nhttps://spark.apache.org/docs/1.2.1/api/scala/index.html#org.apache.spark.rdd.JdbcRDD\n\u2193\n\u3084\u3063\u3066\u307f\u308b\n\n\u5b9f\u88c5\n\u304a\u8a66\u3057\u3067\u3084\u3063\u3066\u307f\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u30b7\u30f3\u30d7\u30eb\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30c6\u30fc\u30d6\u30eb\u3067JdbcRDD\u304c\u3069\u306e\u3088\u3046\u306b\u52d5\u4f5c\u3059\u308b\u304b\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\nsample \u30c6\u30fc\u30d6\u30eb\n\n\n\nid\ntoken\n\n\n\n\n28\ntoken1\n\n\n29\ntoken2\n\n\n...\n...\n\n\n842105\ntokenx\n\n\n\n\u30ec\u30b3\u30fc\u30c9\u6570\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\nmysql> select count(*) from sample;\n+----------+\n| count(*) |\n+----------+\n|   841830 |\n+----------+\n\n\u5b9f\u88c5\u3057\u3066\u307f\u305f\u30b3\u30fc\u30c9\n\nInvastigation.scala\npackage sample\n\nimport java.sql.{Connection, DriverManager, ResultSet}\n\nimport org.apache.spark.SparkContext\nimport org.apache.spark.SparkConf\nimport org.apache.spark.rdd.JdbcRDD\n\nobject Invastigation {\n\n  def main(args: Array[String]): Unit = {\n    val conf = new SparkConf().setAppName(\"Invastigation\")\n    val context = new SparkContext(conf)\n\n    val dbDriver = \"com.mysql.jdbc.Driver\"\n    val dbUrl = \"jdbc:mysql://localhost:3306/jdbcrdd?useUnicode=true&characterEncoding=UTF-8\"\n    val dbUsername = \"hogehoge\"\n    val dbPassword = \"piyopiyo\"\n\n    val jdbcConnection = () => {\n      Class.forName(dbDriver).newInstance\n      DriverManager.getConnection(dbUrl, dbUsername, dbPassword)\n    }\n\n    val mysqlRDD = new JdbcRDD(\n      context,\n      jdbcConnection,\n      \"select id, token from sample where ? <= id and id >= ?\",\n      28,\n      842105,\n      10,\n      r => r.getLong(\"id\") + \", \" + r.getString(\"token\")\n    )\n\n    val results = mysqlRDD.collect.toList\n    println(s\"results size = ${results.size}\")\n  }\n\n}\n\n\n\n\u5b9f\u884c\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u524d\u56de\u3068\u540c\u3058\u3088\u3046\u306bspark-submit\u4f7f\u3063\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n$ spark-submit --class sample.Invastigation --master \"local[2]\" --jars /path/to/mysql/mysql-connector-\njava/jars/mysql-connector-java-5.1.33.jar ${PROJECT_ROOT}/target/scala-2.11/invastigation_2.11-1.0.0.jar\n\n\u3053\u3053\u3067\u6ce8\u610f\u3057\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\u306e\u306f\u3001\n\u4eca\u56de\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u6570(JdbcRDD\u3092new\u3059\u308b\u3068\u304d\u306b\u6e21\u3059\u7b2c5\u5f15\u6570)\u3092 10 \u3067\u6307\u5b9a\u3057\u307e\u3057\u305f\u304c\u3001\n\u30ec\u30b3\u30fc\u30c9\u6570\u304c\u591a\u3044\u304b\u3089\u304b OutOfMemoryError\u3000\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\nheap size \u304c\u8db3\u308a\u306a\u3044\u3068\u306e\u3053\u3068\u3067\u3001\u4e0b\u8a18\u306e\u5bfe\u5fdc\u3092\u3057\u307e\u3057\u305f\u3002(Mac OSX\u306e\u5834\u5408)\n$ cd /usr/local/Cellar/apache-spark/1.2.0/libexec/conf\n$ cp spark-defaults.conf.template spark-defaults.conf\n$ vi spark-defaults.conf\n\n# Default system properties included when running spark-submit.\n# This is useful for setting default environmental settings.\n\n# Example:\n# spark.master                     spark://master:7077\n# spark.eventLog.enabled           true\n# spark.eventLog.dir               hdfs://namenode:8021/directory\n# spark.serializer                 org.apache.spark.serializer.KryoSerializer\n spark.driver.memory              2g \u2190 \u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u5916\u3057\u305f\n# spark.executor.extraJavaOptions  -XX:+PrintGCDetails -Dkey=value -Dnumbers=\"one two three\"\n\n\n\u7d50\u679c\nSpark assembly has been built with Hive, including Datanucleus jars on classpath\nUsing Spark's default log4j profile: org/apache/spark/log4j-defaults.properties\n\n...(snip)...\n\n15/03/12 10:24:09 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool\n15/03/12 10:24:09 INFO DAGScheduler: Stage 0 (collect at Invastigation.scala:37) finished in 26.398 s\n15/03/12 10:24:12 INFO DAGScheduler: Job 0 finished: collect at Invastigation.scala:37, took 29.914454 s\nresults size = 3089533\n\n\u3048\u3063\uff1f(\u3064\u0434\u2282)\uff7a\uff9e\uff7c\uff7a\uff9e\uff7c\n\u7d50\u679c\u306e\u30b5\u30a4\u30ba\u304c 3089533 \u3063\u3066\u3069\u3046\u3086\u3046\u3053\u3068\uff1f\uff01\nsample \u30c6\u30fc\u30d6\u30eb\u306e\u30ab\u30a6\u30f3\u30c8\u6570\u3068\u4e00\u81f4\u3059\u308b\n\u3068\u601d\u3063\u3066\u305f\u306e\u306b\u3002\u3002\n\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u6570\u3092 1 \u306b\u5909\u66f4\u3057\u3066\u518d\u5ea6\u8a66\u3057\u3066\u307f\u308b\u3068\u3002\u3002\nSpark assembly has been built with Hive, including Datanucleus jars on classpath\nUsing Spark's default log4j profile: org/apache/spark/log4j-defaults.properties\n\n...(snip)...\n\nresults size = 0\n\n\u4eca\u5ea6\u306f 0 \u306b\u306a\u3063\u305f\uff01\u03a3(\uff9f\u0434\uff9f)\n\n\u307e\u3068\u3081\n\u534a\u65e5\u304f\u3089\u3044\u8272\u3005\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\nJdbcRDD \u306e\u30ea\u30b9\u30c8\u306e\u30b5\u30a4\u30ba\u3068\u5b9f\u30c6\u30fc\u30d6\u30eb\u306e\u30ab\u30a6\u30f3\u30c8\u6570\u304c\u5408\u308f\u306a\u3044\u73fe\u8c61\u306e\u539f\u56e0\u306f\u7a81\u304d\u6b62\u3081\u3089\u308c\u305a\u3002\n\u5b9f\u969b\u3069\u3046\u3044\u3063\u305fSQL\u30af\u30a8\u30ea\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u304b\u5206\u304b\u308c\u3070\u3088\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u305d\u3053\u307e\u3067\u3067\u304d\u305a\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3067\u3059\u3002\u3002\nJdbcRDD \u4f7f\u3063\u3066\u3044\u305f\u308a\u3001\u77e5\u3063\u3066\u3044\u305f\u308a\u3059\u308b\u4eba\u3001\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3057\u3042(\u00b4\u30fb\u03c9\u30fb`)\n\u3051\u3063\u304d\u3087\u304f\u3001JdbcRDD\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u3092\u8f09\u305b\u3066\u7d42\u308f\u3063\u3066\u3057\u307e\u3063\u305f\u3002\u3002\n\n\u8ffd\u8a18(2015/03/19)\n\u4e0a\u8a18\u306e\u30ab\u30a6\u30f3\u30c8\u9055\u3044\u306f\u5358\u7d14\u306bSQL\u306e where \u53e5\u306e\u6761\u4ef6\u304c\u9055\u3046\u3068\u3044\u3046\u304f\u3060\u3089\u306a\u3044\u30df\u30b9\u3067\u3057\u305f\u3002\u3002\nselect id, token from sample where ? <= id and id <= ?\n\n\u3053\u3046\u3057\u305f\u3089\u30ab\u30a6\u30f3\u30c8\u6570\u304c\u4e00\u81f4\u3057\u307e\u3057\u305f\u3002\n(@nnn_stream \u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01)\n\n# \u6982\u8981\n\u524d\u56de\u306e\u6295\u7a3f\u3067 Apache Spark \u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u89e3\u6790\u3057\u3066\u3001CSV\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3092\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u304c\u3001\n[Apache Spark \u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u89e3\u6790\u3057\u3066\u3001\u305d\u306e\u7d50\u679c\u3092CSV\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3057\u3066\u307f\u305f\u3002](http://qiita.com/uriborn/items/501aba49dc806996e74f)\n\n\u4eca\u5ea6\u306f\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3058\u3083\u306a\u304f\u3066MySQL\u306e\u30c7\u30fc\u30bf\u3092 Apache Spark \u4f7f\u3063\u3066\u96c6\u8a08\u51fa\u6765\u308b\u304b\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n# \u7d4c\u7def\nuser 1 --- n entry\n\n\u306e\u3088\u3046\u306a\u30c6\u30fc\u30d6\u30eb\u95a2\u9023\u3067\u5404user\u30ec\u30b3\u30fc\u30c9\u306b\u95a2\u9023\u3059\u308bentry\u306e\u6570\u3068\u305d\u306eentry\u306e\u30ad\u30fc\u306a\u3069\u306e\u60c5\u5831\u3092\u77e5\u308a\u305f\u304f\u3066\u3001\n\u307e\u305fCSV\u30d5\u30a1\u30a4\u30eb(\uff57)\u3067\u51fa\u529b\u3057\u3066\u30c1\u30fc\u30e0\u5185\u3067\u5171\u6709\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u3002\n\u305f\u3060\u3001user\u30c6\u30fc\u30d6\u30eb\u306e\u30ec\u30b3\u30fc\u30c9\u6570\u304c80\u4e07\u4ef6\u8fd1\u304f\u3042\u308a\u3001\u666e\u901a\u306b slick \u4f7f\u3063\u305f\u96c6\u8a08\u30b9\u30af\u30ea\u30d7\u30c8\u3060\u3068\u3001\u30af\u30bd\u9045\u304f\u3066\u3084\u3063\u3066\u3089\u308c\u3093\u3002(\u2190 \u30af\u25cb\u30b3\u30fc\u30c9\u3060\u304b\u3089\u304b\u3082\u3002\u3002)\n\n\u305d\u3053\u3067\u3002\u3002\n\u5206\u6563\u51e6\u7406\u3067\u304d\u306a\u3044\u304b\u306a\u30fc\n\u2193\nApache Spark \u3067\u3067\u304d\u306a\u3044\u304b\u306a\u30fc\n\u2193\nSpark SQL \u3063\u3066\u3082\u306e\u304c\u3042\u308b\u3057\u3001MySQL\u306e\u30c7\u30fc\u30bf\u30a4\u30f3\u30dd\u30fc\u30c8\u3068\u304b\u3057\u305f\u3089\u3067\u304d\u308b\u306e\u304b\u306a\u30fc\n\u2193\nJdbcRDD\u3063\u3066\u3044\u3046\u306e\u304c\u3042\u308b\u3058\u3083\u3093\uff01\nhttps://spark.apache.org/docs/1.2.1/api/scala/index.html#org.apache.spark.rdd.JdbcRDD\n\u2193\n\u3084\u3063\u3066\u307f\u308b\n\n# \u5b9f\u88c5\n\u304a\u8a66\u3057\u3067\u3084\u3063\u3066\u307f\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u30b7\u30f3\u30d7\u30eb\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30c6\u30fc\u30d6\u30eb\u3067JdbcRDD\u304c\u3069\u306e\u3088\u3046\u306b\u52d5\u4f5c\u3059\u308b\u304b\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n**sample \u30c6\u30fc\u30d6\u30eb**\n\n| id     | token  |\n|:------:|:------:|\n| 28     | token1 |\n| 29     | token2 |\n| ...    | ...    |\n| 842105 | tokenx |\n\n\u30ec\u30b3\u30fc\u30c9\u6570\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n\n```\nmysql> select count(*) from sample;\n+----------+\n| count(*) |\n+----------+\n|   841830 |\n+----------+\n```\n\n\u5b9f\u88c5\u3057\u3066\u307f\u305f\u30b3\u30fc\u30c9\n\n```Invastigation.scala\npackage sample\n\nimport java.sql.{Connection, DriverManager, ResultSet}\n\nimport org.apache.spark.SparkContext\nimport org.apache.spark.SparkConf\nimport org.apache.spark.rdd.JdbcRDD\n\nobject Invastigation {\n\n  def main(args: Array[String]): Unit = {\n    val conf = new SparkConf().setAppName(\"Invastigation\")\n    val context = new SparkContext(conf)\n\n    val dbDriver = \"com.mysql.jdbc.Driver\"\n    val dbUrl = \"jdbc:mysql://localhost:3306/jdbcrdd?useUnicode=true&characterEncoding=UTF-8\"\n    val dbUsername = \"hogehoge\"\n    val dbPassword = \"piyopiyo\"\n\n    val jdbcConnection = () => {\n      Class.forName(dbDriver).newInstance\n      DriverManager.getConnection(dbUrl, dbUsername, dbPassword)\n    }\n\n    val mysqlRDD = new JdbcRDD(\n      context,\n      jdbcConnection,\n      \"select id, token from sample where ? <= id and id >= ?\",\n      28,\n      842105,\n      10,\n      r => r.getLong(\"id\") + \", \" + r.getString(\"token\")\n    )\n\n    val results = mysqlRDD.collect.toList\n    println(s\"results size = ${results.size}\")\n  }\n\n}\n```\n\n# \u5b9f\u884c\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u524d\u56de\u3068\u540c\u3058\u3088\u3046\u306bspark-submit\u4f7f\u3063\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\n$ spark-submit --class sample.Invastigation --master \"local[2]\" --jars /path/to/mysql/mysql-connector-\njava/jars/mysql-connector-java-5.1.33.jar ${PROJECT_ROOT}/target/scala-2.11/invastigation_2.11-1.0.0.jar\n```\n\n\u3053\u3053\u3067\u6ce8\u610f\u3057\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\u306e\u306f\u3001\n\u4eca\u56de\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u6570(JdbcRDD\u3092new\u3059\u308b\u3068\u304d\u306b\u6e21\u3059\u7b2c5\u5f15\u6570)\u3092 **10** \u3067\u6307\u5b9a\u3057\u307e\u3057\u305f\u304c\u3001\n\u30ec\u30b3\u30fc\u30c9\u6570\u304c\u591a\u3044\u304b\u3089\u304b OutOfMemoryError\u3000\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\nheap size \u304c\u8db3\u308a\u306a\u3044\u3068\u306e\u3053\u3068\u3067\u3001\u4e0b\u8a18\u306e\u5bfe\u5fdc\u3092\u3057\u307e\u3057\u305f\u3002(Mac OSX\u306e\u5834\u5408)\n\n```\n$ cd /usr/local/Cellar/apache-spark/1.2.0/libexec/conf\n$ cp spark-defaults.conf.template spark-defaults.conf\n$ vi spark-defaults.conf\n\n# Default system properties included when running spark-submit.\n# This is useful for setting default environmental settings.\n\n# Example:\n# spark.master                     spark://master:7077\n# spark.eventLog.enabled           true\n# spark.eventLog.dir               hdfs://namenode:8021/directory\n# spark.serializer                 org.apache.spark.serializer.KryoSerializer\n spark.driver.memory              2g \u2190 \u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u5916\u3057\u305f\n# spark.executor.extraJavaOptions  -XX:+PrintGCDetails -Dkey=value -Dnumbers=\"one two three\"\n```\n\n# \u7d50\u679c\n\n```\nSpark assembly has been built with Hive, including Datanucleus jars on classpath\nUsing Spark's default log4j profile: org/apache/spark/log4j-defaults.properties\n\n...(snip)...\n\n15/03/12 10:24:09 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool\n15/03/12 10:24:09 INFO DAGScheduler: Stage 0 (collect at Invastigation.scala:37) finished in 26.398 s\n15/03/12 10:24:12 INFO DAGScheduler: Job 0 finished: collect at Invastigation.scala:37, took 29.914454 s\nresults size = 3089533\n```\n\n\u3048\u3063\uff1f(\u3064\u0434\u2282)\uff7a\uff9e\uff7c\uff7a\uff9e\uff7c\n\u7d50\u679c\u306e\u30b5\u30a4\u30ba\u304c **3089533** \u3063\u3066\u3069\u3046\u3086\u3046\u3053\u3068\uff1f\uff01\nsample \u30c6\u30fc\u30d6\u30eb\u306e\u30ab\u30a6\u30f3\u30c8\u6570\u3068\u4e00\u81f4\u3059\u308b\n\u3068\u601d\u3063\u3066\u305f\u306e\u306b\u3002\u3002\n\n\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u6570\u3092 **1** \u306b\u5909\u66f4\u3057\u3066\u518d\u5ea6\u8a66\u3057\u3066\u307f\u308b\u3068\u3002\u3002\n\n```\nSpark assembly has been built with Hive, including Datanucleus jars on classpath\nUsing Spark's default log4j profile: org/apache/spark/log4j-defaults.properties\n\n...(snip)...\n\nresults size = 0\n```\n\n\u4eca\u5ea6\u306f **0** \u306b\u306a\u3063\u305f\uff01\u03a3(\uff9f\u0434\uff9f)\n\n# \u307e\u3068\u3081\n\u534a\u65e5\u304f\u3089\u3044\u8272\u3005\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\nJdbcRDD \u306e\u30ea\u30b9\u30c8\u306e\u30b5\u30a4\u30ba\u3068\u5b9f\u30c6\u30fc\u30d6\u30eb\u306e\u30ab\u30a6\u30f3\u30c8\u6570\u304c\u5408\u308f\u306a\u3044\u73fe\u8c61\u306e\u539f\u56e0\u306f\u7a81\u304d\u6b62\u3081\u3089\u308c\u305a\u3002\n\u5b9f\u969b\u3069\u3046\u3044\u3063\u305fSQL\u30af\u30a8\u30ea\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u304b\u5206\u304b\u308c\u3070\u3088\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u305d\u3053\u307e\u3067\u3067\u304d\u305a\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3067\u3059\u3002\u3002\n\nJdbcRDD \u4f7f\u3063\u3066\u3044\u305f\u308a\u3001\u77e5\u3063\u3066\u3044\u305f\u308a\u3059\u308b\u4eba\u3001\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3057\u3042(\u00b4\u30fb\u03c9\u30fb`)\n\n\u3051\u3063\u304d\u3087\u304f\u3001JdbcRDD\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u3092\u8f09\u305b\u3066\u7d42\u308f\u3063\u3066\u3057\u307e\u3063\u305f\u3002\u3002\n\n# \u8ffd\u8a18(2015/03/19)\n\u4e0a\u8a18\u306e\u30ab\u30a6\u30f3\u30c8\u9055\u3044\u306f\u5358\u7d14\u306bSQL\u306e where \u53e5\u306e\u6761\u4ef6\u304c\u9055\u3046\u3068\u3044\u3046\u304f\u3060\u3089\u306a\u3044\u30df\u30b9\u3067\u3057\u305f\u3002\u3002\n\n```\nselect id, token from sample where ? <= id and id <= ?\n```\n\n\u3053\u3046\u3057\u305f\u3089\u30ab\u30a6\u30f3\u30c8\u6570\u304c\u4e00\u81f4\u3057\u307e\u3057\u305f\u3002\n(@nnn_stream \u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01)\n", "tags": ["Spark", "Scala"]}