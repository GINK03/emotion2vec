{"context": "DataBinding\u306e\u30ab\u30b9\u30bf\u30e0BindingAdapter\u3092\u4f7f\u3063\u3066\u697d\u3059\u308b\u3002\n\n\u90fd\u5408\u306e\u826f\u3044ItemDecoration\u3092\u7528\u610f\u3059\u308b\n\nDividerDecoration.java\npublic class DividerDecoration extends RecyclerView.ItemDecoration {\n\n    private Drawable mDivider;\n\n    public DividerDecoration(Drawable drawable) {\n        mDivider = drawable;\n    }\n\n    @Override\n    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {\n        final int left = parent.getPaddingLeft();\n        final int right = parent.getWidth() - parent.getPaddingRight();\n\n        final int childCount = parent.getChildCount();\n        for (int i = 0; i < childCount; i++) {\n            final View child = parent.getChildAt(i);\n            final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child\n                    .getLayoutParams();\n            final int top = child.getBottom() + params.bottomMargin;\n            final int bottom = top + mDivider.getIntrinsicHeight();\n            mDivider.setBounds(left, top, right, bottom);\n            mDivider.draw(c);\n        }\n    }\n\n    @Override\n    public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {\n        outRect.set(0, 0, 0, mDivider.getIntrinsicHeight());\n    }\n}\n\n\n\n\u30ab\u30b9\u30bf\u30e0BindingAdapter\u3092\u5b9a\u7fa9\u3059\u308b\n\nRecyclerViewBindingAdapter.java\npublic class RecyclerViewBindingAdapter {\n\n    @BindingAdapter(\"dividerDrawable\")\n    public static void setDividerDrawable(RecyclerView recyclerView, Drawable drawable) {\n        recyclerView.addItemDecoration(new DividerDecoration(drawable));\n    }\n}\n\n\n\nXML\u3067\u6307\u5b9a\u3059\u308b\n\nactivity_main.xml\n<layout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n\n    <android.support.v7.widget.RecyclerView\n        android:id=\"@+id/recycler\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:layoutManager=\"android.support.v7.widget.LinearLayoutManager\"\n        app:dividerDrawable=\"@{@drawable/divider}\"/>\n\n</layout>\n\n\n\ndrawable/divider.xml\n<shape\n    xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <size android:height=\"1dp\"/>\n    <solid android:color=\"@color/divider_color\"/>\n\n</shape>\n\n\nDataBinding\u306e\u30ab\u30b9\u30bf\u30e0BindingAdapter\u3092\u4f7f\u3063\u3066\u697d\u3059\u308b\u3002\n\n## \u90fd\u5408\u306e\u826f\u3044ItemDecoration\u3092\u7528\u610f\u3059\u308b\n\n```DividerDecoration.java\npublic class DividerDecoration extends RecyclerView.ItemDecoration {\n\n    private Drawable mDivider;\n\n    public DividerDecoration(Drawable drawable) {\n        mDivider = drawable;\n    }\n\n    @Override\n    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {\n        final int left = parent.getPaddingLeft();\n        final int right = parent.getWidth() - parent.getPaddingRight();\n\n        final int childCount = parent.getChildCount();\n        for (int i = 0; i < childCount; i++) {\n            final View child = parent.getChildAt(i);\n            final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child\n                    .getLayoutParams();\n            final int top = child.getBottom() + params.bottomMargin;\n            final int bottom = top + mDivider.getIntrinsicHeight();\n            mDivider.setBounds(left, top, right, bottom);\n            mDivider.draw(c);\n        }\n    }\n\n    @Override\n    public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {\n        outRect.set(0, 0, 0, mDivider.getIntrinsicHeight());\n    }\n}\n```\n\n\n## \u30ab\u30b9\u30bf\u30e0BindingAdapter\u3092\u5b9a\u7fa9\u3059\u308b\n\n```RecyclerViewBindingAdapter.java\npublic class RecyclerViewBindingAdapter {\n\n    @BindingAdapter(\"dividerDrawable\")\n    public static void setDividerDrawable(RecyclerView recyclerView, Drawable drawable) {\n        recyclerView.addItemDecoration(new DividerDecoration(drawable));\n    }\n}\n```\n\n\n## XML\u3067\u6307\u5b9a\u3059\u308b\n\n```activity_main.xml\n<layout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n\n    <android.support.v7.widget.RecyclerView\n        android:id=\"@+id/recycler\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:layoutManager=\"android.support.v7.widget.LinearLayoutManager\"\n        app:dividerDrawable=\"@{@drawable/divider}\"/>\n\n</layout>\n```\n\n```drawable/divider.xml\n<shape\n    xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <size android:height=\"1dp\"/>\n    <solid android:color=\"@color/divider_color\"/>\n\n</shape>\n```\n", "tags": ["Android", "RecyclerView", "DataBinding"]}