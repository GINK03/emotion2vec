{"context": "\n\n\u7f72\u540d\u30d7\u30ed\u30bb\u30b9\u306e\u30a4\u30e1\u30fc\u30b8\nJava\u306eXML \u30c7\u30b8\u30bf\u30eb\u7f72\u540dAPI\u3092\u4f7f\u7528\u3057\u3066 XML\u7f72\u540d\u3092\u884c\u3046\u6642\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\nXML\u7f72\u540d\u691c\u8a3c\u306f\u3001\u3053\u3061\u3089\u3092\u53c2\u7167\u3059\u308b\u3002\n\n\u5fc5\u8981\u306a\u3082\u306e\n\n\u7f72\u540d\u5bfe\u8c61XML\n\u79d8\u5bc6\u9375\n\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\n\n\n\u7f72\u540d\u5bfe\u8c61XML\nProduct\u8981\u7d20\u914d\u4e0b\u306eProductInfo\u306b\u5bfe\u3057\u3066\u7f72\u540d\u3092\u884c\u3046\u3002\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Product>\n    <ProductInfo>\n        <ProductId>PC001</ProductId>\n        <ProductName>iPhone</ProductName>\n        <ProductPrice>100,000</ProductPrice>\n    </ProductInfo>\n</Product>\n\n\n\u7f72\u540d\u624b\u9806\n\uff11\uff0eXML\u6b63\u898f\u5316\u5909\u63db\u51e6\u7406\u7528\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6307\u5b9a\uff08Transforms\u8981\u7d20\uff09\n\u7f72\u540d\u5bfe\u8c61\u306e\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u3092\u8a08\u7b97\u3059\u308b\u524d\u306b\u3001\u7f72\u540d\u5f62\u5f0f\u304a\u3088\u3073\u6b63\u898f\u5316\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u3053\u3053\u306f\u3001Enveloped\u7f72\u540d\uff08\u7f72\u540d\u8981\u7d20\u304c\u7f72\u540d\u5bfe\u8c61\u8981\u7d20\u306e\u5b50\u8981\u7d20\u3068\u306a\u308b\u7f72\u540d\u5f62\u5f0f\uff09\u53ca\u3073Exclusive XML Canonicalization Version 1.0 (omit comments)\u6b63\u898f\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6307\u5b9a\u3059\u308b\u3002\nArrayList<Transform> refTransformList = new ArrayList<Transform>();\nrefTransformList.add(xmlSignFactory.newTransform(Transform.ENVELOPED, (TransformParameterSpec)null));\nrefTransformList.add(xmlSignFactory.newTransform(CanonicalizationMethod.EXCLUSIVE, (TransformParameterSpec)null));\n\n\uff12\uff0e\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u8a08\u7b97\u7528\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6307\u5b9a\uff08DigestMethod\u8981\u7d20\uff09\n\u7f72\u540d\u5bfe\u8c61\u306e\u5909\u63db\u30d7\u30ed\u30bb\u30b9\u8981\u7d20\u306e\u9069\u7528\u5f8c\u306b\u3001\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u3092\u8a08\u7b97\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u3053\u3053\u306f\u3001SHA256\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6307\u5b9a\u3059\u308b\u3002\nDigestMethod digestMethod = xmlSignFactory.newDigestMethod(DigestMethod.SHA256, null);\n\n\uff13\uff0e\u7f72\u540d\u5bfe\u8c61\u8981\u7d20\u306e\u89aa\u8981\u7d20\u306bID\u5c5e\u6027\u306e\u4f5c\u6210\nElement targetNode = (Element)xmlDom.getElementsByTagName(\"ProductInfo\").item(0);\nElement parentNode = (Element)targetNode.getParentNode();\nAttr idAttr = xmlDom.createAttribute(\"id\");\nidAttr.setValue(\"ProductInfo\");\nparentNode.setAttributeNode(idAttr);\nparentNode.setIdAttribute(\"id\", true);\n\n\uff14\uff0e\u53c2\u7167\u8981\u7d20\u306e\u4f5c\u6210\uff08Reference\u8981\u7d20\uff09\n\u53c2\u7167\u8981\u7d20\uff08Reference element\uff09\u3092\u751f\u6210\u3059\u308b\u3002\u53c2\u7167\u8981\u7d20\u306b\u7f72\u540d\u5bfe\u8c61\u8b58\u5225\u5b50URI\u3001\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u8981\u7d20\u3068\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u8981\u7d20\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3002\nReference ref = xmlSignFactory.newReference(\"#ProductInfo\", digestMethod, refTransformList, null, null);\n\n\u53c2\u7167\u8981\u7d20\u306e\u30a4\u30e1\u30fc\u30b8\u306f\u4ee5\u4e0b\u306b\u793a\u3059\u3002\n<Reference URI=\"#Product\">      \n    <Transforms>    \n        <Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\" />\n        <Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />\n    </Transforms>   \n    <DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\" />    \n    <DigestValue>TJPbOFEZX36qckS2Y40rb36jzxe7xuyD1DS/dJmzzHc=</DigestValue> \n</Reference>        \n\n\uff15\uff0e\u6b63\u898f\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6307\u5b9a\uff08CanonicalizationMethod\u8981\u7d20\uff09\n\u7f72\u540d\u60c5\u5831\u8981\u7d20\u306e\u6b63\u898f\u5316\u306b\u7528\u3044\u3089\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u8a18\u8ff0\u3059\u308b\u6b63\u898f\u5316\u30e1\u30bd\u30c3\u30c9\u8981\u7d20\u3002\n\u3053\u3053\u306f\u3001Exclusive XML Canonicalization Version 1.0 (omit comments)\u6b63\u898f\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6307\u5b9a\u3059\u308b\u3002\nCanonicalizationMethod cm = xmlSignFactory.newCanonicalizationMethod(CanonicalizationMethod.EXCLUSIVE, (C14NMethodParameterSpec)null);\n\n\uff16\uff0e\u7f72\u540d\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8a2d\u5b9a\uff08SignatureMethod\u8981\u7d20\uff09\n\u6b63\u898f\u5316\u3055\u308c\u305f\u7f72\u540d\u60c5\u5831\u8981\u7d20\u304b\u3089\u7f72\u540d\u5024\u3092\u8a08\u7b97\u3059\u308b\u306e\u306b\u7528\u3044\u3089\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6307\u5b9a\u3059\u308b\u3002\nSignatureMethod sm = xmlSignFactory.newSignatureMethod(\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\", null);\n\n\uff17\uff0e\u7f72\u540d\u60c5\u5831\u306e\u4f5c\u6210\uff08SignedInfo\u8981\u7d20\uff09\n\u6b63\u898f\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3001\u7f72\u540d\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u53ca\u3073\u53c2\u7167\u8981\u7d20\u306b\u3088\u308a\u3001\u7f72\u540d\u60c5\u5831\uff08SignedInfo\uff09\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\nSignedInfo signedInfo = xmlSignFactory.newSignedInfo(cm, sm, Collections.singletonList(ref));\n\n\uff18\uff0e\u30ad\u30fc\u60c5\u5831\u306e\u4f5c\u6210\uff08KeyInfo\u8981\u7d20\uff09\n\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f\u3001\u53d7\u3051\u5074\u304c\u7f72\u540d\u306e\u691c\u8a3c\u306b\u5fc5\u8981\u306a\u9375\u3092\u898b\u3064\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3002\n\uff18\uff0e\uff11\u3000\u8a3c\u660e\u66f8\u306e\u8aad\u8fbc\nDER\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8a3c\u660e\u66f8\u3092\u8aad\u307f\u8fbc\u3080\u3002\nX509Certificate cert = getCertFromDER();    \n\nprivate X509Certificate getCertFromDER() throws IOException, CertificateException { \n    CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n    X509Certificate cert = (X509Certificate)cf.generateCertificate(new FileInputStream(\"./resources/server.crt\"));\n    return cert;\n}   \n\n\uff18\uff0e\uff12\u3000\u30aa\u30d7\u30b7\u30e7\u30f3\u306e KeyInfo \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4e0a\u8a18\u306e\u8a3c\u660e\u66f8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3088\u308a\u3001KeyInfo\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\nKeyInfoFactory kif = xmlSignFactory.getKeyInfoFactory();\nX509Data x509Data = kif.newX509Data(Collections.singletonList(cert));\nKeyInfo keyInfo = kif.newKeyInfo(Collections.singletonList(x509Data));\n\n\uff19\uff0eXMLSignature \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\nXMLSignature \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001\u5148\u306b\u4f5c\u6210\u3057\u305f SignedInfo \u304a\u3088\u3073 KeyInfo \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6e21\u3059\u3002\nXMLSignature signature = xmlSignFactory.newXMLSignature(signedInfo, keyInfo);\n\n\uff11\uff10\uff0e\u79d8\u5bc6\u9375\u306e\u8aad\u8fbc\nDER\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u79d8\u5bc6\u9375\u3092\u8aad\u307f\u8fbc\u3080\u3002\nPrivateKey privateKey = getPrivateKeyFromDER(); \n\nprivate PrivateKey getPrivateKeyFromDER() throws NoSuchAlgorithmException, IOException, InvalidKeySpecException {   \n    byte[] key = readkeyFile(\"./resources/private_key.pk8\");\n    PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(key);\n\n    KeyFactory kf = KeyFactory.getInstance(\"RSA\"); \n    RSAPrivateKey privateKey = (RSAPrivateKey)kf.generatePrivate(keySpec);\n    return privateKey;\n}\n\n\uff11\uff11\uff0e\u7f72\u540d\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u4f5c\u6210\nDOMSignContext dsc = new DOMSignContext(privateKey, parentNode);\n\n\uff11\uff12\uff0e\u7f72\u540d\u3092\u884c\u3046\u3002\nsignature.sign(dsc);\n\n\n\u7f72\u540d\u5f8cXML\u306e\u30a4\u30e1\u30fc\u30b8\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>                      \n<ProductInfo id=\"Product\">\n    <Product>\n        <ProductId>PC001</ProductId>\n        <ProductName>iPhone</ProductName>\n        <ProductPrice>100,000</ProductPrice>\n    </Product>\n    <Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\">\n        <SignedInfo>\n            <CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />\n            <SignatureMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\" />\n            <Reference URI=\"#Product\">\n                <Transforms>\n                    <Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\" />\n                    <Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />\n                </Transforms>\n                <DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\" />\n                <DigestValue>TJPbOFEZX36qckS2Y40rb36jzxe7xuyD1DS/dJmzzHc=</DigestValue>\n            </Reference>\n        </SignedInfo>\n        <SignatureValue>E+H+n32RWiySjUEw9Dtf0c2D4mRjcm4/B2uezqDU+VXyY7qY7NOyX1HREUm62vJo8yJl7SWazx5Z\n            lMYZ19iTADIOzwEPScx1CV98rRkIeYjssKF/6U4Ygu/vHw3Upooe8nV4xZxW+fwxJ389i8MSfg/9\n            Y7rLeN1JHQCQiTMhS2VTEvzdzaeaERCTXam1CR5W75T+lLQe7vNc3fLXRLVL5RY9hbxrAXddwWPG\n            LKvoTzpfWGJi77qjcDuxY0xV3dXzydptuqHITGIw4s4Q5lwDL1kqByKPf2moQntNAxE7vJ58oavH\n            81xdWZpdHXnIIbzzXq4w0FdYW2sWZ9YkhIFf8Q==\n        </SignatureValue>\n        <KeyInfo>\n            <X509Data>\n                <X509Certificate>MIID+jCCAuICCQDRm9FEjBNE3TANBgkqhkiG9w0BAQsFADCBvjELMAkGA1UEBhMCanAxDjAMBgNV\n                    BAgMBVRva3lvMQ4wDAYDVQQHDAVUb2t5bzEcMBoGA1UECgwTSmFwYW5lc2UgR292ZXJubWVudDE4\n                    MDYGA1UECwwvTWluaXN0cnkgb2YgSW50ZXJuYWwgQWZmYWlycyBhbmQgQ29tbXVuaWNhdGlvbnMx\n                    GTAXBgNVBAMMEDA3MTAxMDAwMDAwMDE3MDAxHDAaBgkqhkiG9w0BCQEWDXRlc3RAdGVzdC5jb20w\n                    HhcNMTYwOTE0MDU1OTIyWhcNMTYxMDE0MDU1OTIyWjCBvjELMAkGA1UEBhMCanAxDjAMBgNVBAgM\n                    BVRva3lvMQ4wDAYDVQQHDAVUb2t5bzEcMBoGA1UECgwTSmFwYW5lc2UgR292ZXJubWVudDE4MDYG\n                    A1UECwwvTWluaXN0cnkgb2YgSW50ZXJuYWwgQWZmYWlycyBhbmQgQ29tbXVuaWNhdGlvbnMxGTAX\n                    BgNVBAMMEDA3MTAxMDAwMDAwMDE3MDAxHDAaBgkqhkiG9w0BCQEWDXRlc3RAdGVzdC5jb20wggEi\n                    MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCl9X4r6sAmb7p6vPGS2mKIlChMe87xjHuF0Z6s\n                    VfmU5cfUEfaTnKY2Wte2++T4EDdbTqkza1VtlA3gsuoAsnbnpSxakY34h8UIUn5MpiXE3IViAFx4\n                    pGi1Qy3/J+6CEfhSpiLpFHksVY5ruSUD+R9u7crDu/+8nRaMDzofQYxL5andTi5GBT7V62OINijl\n                    8Tte6YtoNZSMhtDhJDwolTzUu6/RAsJu1Ybpo+yX49yIyEYJIK8eDfzxiGT+o0yA1UKNEnT3eymV\n                    WW17fLfixEcCFRTFvBfWTklXB7YKn01U/5kc6A5Bsb/VXloPoWKUsqf6viFOAcXJS+iEAgSXtfmp\n                    AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAB499x9IHQUdEYbj1b95y2t/qxYHLA7mOYuH+YRdPYGr\n                    v53zw0gR2bSWfrJOkiaD2JKAG9Vf44xtQOz835SlENWRGMLo19FfnDo1nik4oW6SBxANya7XsX1L\n                    zI6PAgdacvmvNCcqwjtdf4jLpIE4epvUVoEQo47S7baxZs97JiJOEl1glxzz5p5JOrDmpgfrUq/+\n                    d1PyKzTePmAESjXGL+04oPmoYNg0KkVQvcBCQDAtNp/p1jaVtgT3K2KqlvSBehfY8xJR48M0VRWD\n                    rEW1hgtNls/X4084VSND9UQWTCc98dmgzz1cXHx0u0aahwT9leCwxi1HQEO+NuFQdQwRaWY=\n                </X509Certificate>\n            </X509Data>\n        </KeyInfo>\n    </Signature>\n</ProductInfo>\n\n\nXML\u30c7\u30b8\u30bf\u30eb\u7f72\u540d\n\u4ee5\u4e0b\u306f\u4e0a\u8a18\u7f72\u540d\u624b\u9806\u306e\u307e\u3068\u3081\u3067\u3059\u3002\n/**\n * XML\u7f72\u540d\n * \n * @param xmlDom\n */\npublic void signature(Document xmlDom) {\n\n    try {\n        // \u79d8\u5bc6\u9375\u306e\u53d6\u5f97\n        PrivateKey privateKey = getPrivateKeyFromDER();\n        // \u8a3c\u660e\u66f8\u306e\u53d6\u5f97\n        X509Certificate cert = getCertFromDER();\n\n        // \u5bfe\u8c61\u8981\u7d20\u306e\u89aa\u8981\u7d20\u306bID\u5c5e\u6027\u3092\u4ed8\u4e0e\u3059\u308b\n        Element targetNode = (Element)xmlDom.getElementsByTagName(\"ProductInfo\").item(0);\n        Element parentNode = (Element)targetNode.getParentNode();\n        Attr idAttr = xmlDom.createAttribute(\"id\");\n        idAttr.setValue(\"ProductInfo\");\n        parentNode.setAttributeNode(idAttr);\n        parentNode.setIdAttribute(\"id\", true);\n\n        // \u7f72\u540d\u60c5\u5831\u306e\u8a2d\u5b9a\n        XMLSignatureFactory xmlSignFactory = XMLSignatureFactory.getInstance(\"DOM\");\n\n        // \u5909\u63db\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4f5c\u6210\n        ArrayList<Transform> refTransformList = new ArrayList<Transform>();\n        refTransformList.add(xmlSignFactory.newTransform(Transform.ENVELOPED, (TransformParameterSpec)null));\n        refTransformList.add(xmlSignFactory.newTransform(CanonicalizationMethod.EXCLUSIVE, (TransformParameterSpec)null));\n\n        // \u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u8a08\u7b97\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u751f\u6210\n        DigestMethod digestMethod = xmlSignFactory.newDigestMethod(DigestMethod.SHA256, null);\n\n        // \u53c2\u7167\u8981\u7d20\u306e\u8a2d\u5b9a\n        Reference ref = xmlSignFactory.newReference(\"#ProductInfo\", \n                digestMethod, \n                refTransformList, null, null);\n\n        // \u6b63\u898f\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u751f\u6210\n        CanonicalizationMethod cm = xmlSignFactory.newCanonicalizationMethod(CanonicalizationMethod.EXCLUSIVE, (C14NMethodParameterSpec)null);\n\n        // \u7f72\u540d\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u751f\u6210\n        SignatureMethod sm = xmlSignFactory.newSignatureMethod(\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\", null);\n\n        // \u7f72\u540d\u60c5\u5831\u306e\u8a2d\u5b9a\n        SignedInfo signedInfo = xmlSignFactory.newSignedInfo(cm, sm, Collections.singletonList(ref));\n\n        KeyInfoFactory kif = xmlSignFactory.getKeyInfoFactory();\n        X509Data x509Data = kif.newX509Data(Collections.singletonList(cert));\n        KeyInfo keyInfo = kif.newKeyInfo(Collections.singletonList(x509Data));\n\n        // \u7f72\u540d\u5bfe\u8c61\u3068\u79d8\u5bc6\u9375\u306e\u8a2d\u5b9a\n        DOMSignContext dsc = new DOMSignContext(privateKey, parentNode);\n\n        // XML\u7f72\u540d\u306e\u5b9f\u65bd\n        XMLSignature signature = xmlSignFactory.newXMLSignature(signedInfo, keyInfo);\n        signature.sign(dsc);\n\n        // \u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u3002\n        TransformerFactory tf = TransformerFactory.newInstance();\n        Transformer trans = tf.newTransformer();\n        trans.transform(new DOMSource(xmlDom), new StreamResult(System.out));\n\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n\n}\n\n/**\n * \u79d8\u5bc6\u9375\u306e\u8aad\u8fbc\n * \n * @return\n * @throws NoSuchAlgorithmException\n * @throws IOException\n * @throws InvalidKeySpecException\n */\nprivate PrivateKey getPrivateKeyFromDER() throws NoSuchAlgorithmException, IOException, InvalidKeySpecException {\n\n    byte[] key = readkeyFile(\"./resources/private_key.pk8\");\n    PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(key);\n\n    KeyFactory kf = KeyFactory.getInstance(\"RSA\"); \n    RSAPrivateKey privateKey = (RSAPrivateKey)kf.generatePrivate(keySpec);\n    return privateKey;\n}\n\n/**\n * \u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u306e\u8aad\u8fbc\n * \n * @return\n * @throws IOException\n * @throws CertificateException\n */\nprivate X509Certificate getCertFromDER() throws IOException, CertificateException {\n\n    CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n    X509Certificate cert = (X509Certificate)cf.generateCertificate(new FileInputStream(\"./resources/server.crt\"));\n\n    return cert;\n}\n\n/**\n * \u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u8fbc\n * \n * @param fileName\n * @return\n * @throws IOException\n */\nprivate byte[] readkeyFile(String fileName) throws IOException {\n    byte[] data = null;\n    FileInputStream input = new FileInputStream(fileName);\n    data = new byte[input.available()];\n    input.read(data);\n    input.close();\n\n    return data;\n}\n\n##\u7f72\u540d\u30d7\u30ed\u30bb\u30b9\u306e\u30a4\u30e1\u30fc\u30b8\nJava\u306eXML \u30c7\u30b8\u30bf\u30eb\u7f72\u540dAPI\u3092\u4f7f\u7528\u3057\u3066 XML\u7f72\u540d\u3092\u884c\u3046\u6642\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\n![2016-09-16_155426.png](https://qiita-image-store.s3.amazonaws.com/0/123138/576462d9-a97e-be20-5f42-4ae666147e79.png)\n\nXML\u7f72\u540d\u691c\u8a3c\u306f\u3001[\u3053\u3061\u3089](http://qiita.com/KevinFQ/items/24f484de8d51b1cc0b46)\u3092\u53c2\u7167\u3059\u308b\u3002\n\n##\u5fc5\u8981\u306a\u3082\u306e\n- \u7f72\u540d\u5bfe\u8c61XML\n- \u79d8\u5bc6\u9375\n- \u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\n\n##\u7f72\u540d\u5bfe\u8c61XML\n\nProduct\u8981\u7d20\u914d\u4e0b\u306eProductInfo\u306b\u5bfe\u3057\u3066\u7f72\u540d\u3092\u884c\u3046\u3002\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Product>\n    <ProductInfo>\n        <ProductId>PC001</ProductId>\n        <ProductName>iPhone</ProductName>\n        <ProductPrice>100,000</ProductPrice>\n    </ProductInfo>\n</Product>\n```\n\n\n## \u7f72\u540d\u624b\u9806\n\n\uff11\uff0eXML\u6b63\u898f\u5316\u5909\u63db\u51e6\u7406\u7528\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6307\u5b9a**\uff08Transforms\u8981\u7d20\uff09**\n\u7f72\u540d\u5bfe\u8c61\u306e\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u3092\u8a08\u7b97\u3059\u308b\u524d\u306b\u3001\u7f72\u540d\u5f62\u5f0f\u304a\u3088\u3073\u6b63\u898f\u5316\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u3053\u3053\u306f\u3001Enveloped\u7f72\u540d\uff08\u7f72\u540d\u8981\u7d20\u304c\u7f72\u540d\u5bfe\u8c61\u8981\u7d20\u306e\u5b50\u8981\u7d20\u3068\u306a\u308b\u7f72\u540d\u5f62\u5f0f\uff09\u53ca\u3073Exclusive XML Canonicalization Version 1.0 (omit comments)\u6b63\u898f\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n```java\nArrayList<Transform> refTransformList = new ArrayList<Transform>();\nrefTransformList.add(xmlSignFactory.newTransform(Transform.ENVELOPED, (TransformParameterSpec)null));\nrefTransformList.add(xmlSignFactory.newTransform(CanonicalizationMethod.EXCLUSIVE, (TransformParameterSpec)null));\n```\n\n\uff12\uff0e\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u8a08\u7b97\u7528\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6307\u5b9a**\uff08DigestMethod\u8981\u7d20\uff09**\n\u7f72\u540d\u5bfe\u8c61\u306e\u5909\u63db\u30d7\u30ed\u30bb\u30b9\u8981\u7d20\u306e\u9069\u7528\u5f8c\u306b\u3001\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u3092\u8a08\u7b97\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u3053\u3053\u306f\u3001SHA256\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n```java\nDigestMethod digestMethod = xmlSignFactory.newDigestMethod(DigestMethod.SHA256, null);\n```\n\n\uff13\uff0e\u7f72\u540d\u5bfe\u8c61\u8981\u7d20\u306e\u89aa\u8981\u7d20\u306bID\u5c5e\u6027\u306e\u4f5c\u6210\n\n```java\nElement targetNode = (Element)xmlDom.getElementsByTagName(\"ProductInfo\").item(0);\nElement parentNode = (Element)targetNode.getParentNode();\nAttr idAttr = xmlDom.createAttribute(\"id\");\nidAttr.setValue(\"ProductInfo\");\nparentNode.setAttributeNode(idAttr);\nparentNode.setIdAttribute(\"id\", true);\n```\n\n\uff14\uff0e\u53c2\u7167\u8981\u7d20\u306e\u4f5c\u6210**\uff08Reference\u8981\u7d20\uff09**\n\u53c2\u7167\u8981\u7d20\uff08Reference element\uff09\u3092\u751f\u6210\u3059\u308b\u3002\u53c2\u7167\u8981\u7d20\u306b\u7f72\u540d\u5bfe\u8c61\u8b58\u5225\u5b50URI\u3001\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u8981\u7d20\u3068\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u8981\u7d20\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3002\n\n```java\nReference ref = xmlSignFactory.newReference(\"#ProductInfo\", digestMethod, refTransformList, null, null);\n```\n\n\u53c2\u7167\u8981\u7d20\u306e\u30a4\u30e1\u30fc\u30b8\u306f\u4ee5\u4e0b\u306b\u793a\u3059\u3002\n\n```xml\n<Reference URI=\"#Product\">\t\t\n\t<Transforms>\t\n\t\t<Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\" />\n\t\t<Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />\n\t</Transforms>\t\n\t<DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\" />\t\n\t<DigestValue>TJPbOFEZX36qckS2Y40rb36jzxe7xuyD1DS/dJmzzHc=</DigestValue>\t\n</Reference>\t\t\n```\n\n\uff15\uff0e\u6b63\u898f\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6307\u5b9a**\uff08CanonicalizationMethod\u8981\u7d20\uff09**\n\u7f72\u540d\u60c5\u5831\u8981\u7d20\u306e\u6b63\u898f\u5316\u306b\u7528\u3044\u3089\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u8a18\u8ff0\u3059\u308b\u6b63\u898f\u5316\u30e1\u30bd\u30c3\u30c9\u8981\u7d20\u3002\n\u3053\u3053\u306f\u3001Exclusive XML Canonicalization Version 1.0 (omit comments)\u6b63\u898f\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n```java\nCanonicalizationMethod cm = xmlSignFactory.newCanonicalizationMethod(CanonicalizationMethod.EXCLUSIVE, (C14NMethodParameterSpec)null);\n```\n\n\uff16\uff0e\u7f72\u540d\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8a2d\u5b9a**\uff08SignatureMethod\u8981\u7d20\uff09**\n\u6b63\u898f\u5316\u3055\u308c\u305f\u7f72\u540d\u60c5\u5831\u8981\u7d20\u304b\u3089\u7f72\u540d\u5024\u3092\u8a08\u7b97\u3059\u308b\u306e\u306b\u7528\u3044\u3089\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n```java\nSignatureMethod sm = xmlSignFactory.newSignatureMethod(\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\", null);\n```\n\n\uff17\uff0e\u7f72\u540d\u60c5\u5831\u306e\u4f5c\u6210**\uff08SignedInfo\u8981\u7d20\uff09**\n\u6b63\u898f\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3001\u7f72\u540d\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u53ca\u3073\u53c2\u7167\u8981\u7d20\u306b\u3088\u308a\u3001\u7f72\u540d\u60c5\u5831\uff08SignedInfo\uff09\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n```java\nSignedInfo signedInfo = xmlSignFactory.newSignedInfo(cm, sm, Collections.singletonList(ref));\n```\n\n\uff18\uff0e\u30ad\u30fc\u60c5\u5831\u306e\u4f5c\u6210**\uff08KeyInfo\u8981\u7d20\uff09**\n\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f\u3001\u53d7\u3051\u5074\u304c\u7f72\u540d\u306e\u691c\u8a3c\u306b\u5fc5\u8981\u306a\u9375\u3092\u898b\u3064\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3002\n\n\uff18\uff0e\uff11\u3000\u8a3c\u660e\u66f8\u306e\u8aad\u8fbc\nDER\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8a3c\u660e\u66f8\u3092\u8aad\u307f\u8fbc\u3080\u3002\n\n```java\nX509Certificate cert = getCertFromDER();\t\n\t\nprivate X509Certificate getCertFromDER() throws IOException, CertificateException {\t\n\tCertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n\tX509Certificate cert = (X509Certificate)cf.generateCertificate(new FileInputStream(\"./resources/server.crt\"));\n\treturn cert;\n}\t\n```\n\n\uff18\uff0e\uff12\u3000\u30aa\u30d7\u30b7\u30e7\u30f3\u306e KeyInfo \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4e0a\u8a18\u306e\u8a3c\u660e\u66f8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3088\u308a\u3001KeyInfo\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n```java\nKeyInfoFactory kif = xmlSignFactory.getKeyInfoFactory();\nX509Data x509Data = kif.newX509Data(Collections.singletonList(cert));\nKeyInfo keyInfo = kif.newKeyInfo(Collections.singletonList(x509Data));\n```\n\n\uff19\uff0eXMLSignature \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\nXMLSignature \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001\u5148\u306b\u4f5c\u6210\u3057\u305f SignedInfo \u304a\u3088\u3073 KeyInfo \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6e21\u3059\u3002\n\n```java\nXMLSignature signature = xmlSignFactory.newXMLSignature(signedInfo, keyInfo);\n```\n\n\uff11\uff10\uff0e\u79d8\u5bc6\u9375\u306e\u8aad\u8fbc\nDER\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u79d8\u5bc6\u9375\u3092\u8aad\u307f\u8fbc\u3080\u3002\n\n```java\nPrivateKey privateKey = getPrivateKeyFromDER();\t\n\t\nprivate PrivateKey getPrivateKeyFromDER() throws NoSuchAlgorithmException, IOException, InvalidKeySpecException {\t\n\tbyte[] key = readkeyFile(\"./resources/private_key.pk8\");\n\tPKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(key);\n\t\n\tKeyFactory kf = KeyFactory.getInstance(\"RSA\"); \n\tRSAPrivateKey privateKey = (RSAPrivateKey)kf.generatePrivate(keySpec);\n\treturn privateKey;\n}\n```\n\n\uff11\uff11\uff0e\u7f72\u540d\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u4f5c\u6210\n\n```java\nDOMSignContext dsc = new DOMSignContext(privateKey, parentNode);\n```\n\n\uff11\uff12\uff0e\u7f72\u540d\u3092\u884c\u3046\u3002\n\n```java\nsignature.sign(dsc);\n```\n\n##\u7f72\u540d\u5f8cXML\u306e\u30a4\u30e1\u30fc\u30b8\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\t\t\t\t\t\t\n<ProductInfo id=\"Product\">\n\t<Product>\n\t\t<ProductId>PC001</ProductId>\n\t\t<ProductName>iPhone</ProductName>\n\t\t<ProductPrice>100,000</ProductPrice>\n\t</Product>\n\t<Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\">\n\t\t<SignedInfo>\n\t\t\t<CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />\n\t\t\t<SignatureMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\" />\n\t\t\t<Reference URI=\"#Product\">\n\t\t\t\t<Transforms>\n\t\t\t\t\t<Transform Algorithm=\"http://www.w3.org/2000/09/xmldsig#enveloped-signature\" />\n\t\t\t\t\t<Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />\n\t\t\t\t</Transforms>\n\t\t\t\t<DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmlenc#sha256\" />\n\t\t\t\t<DigestValue>TJPbOFEZX36qckS2Y40rb36jzxe7xuyD1DS/dJmzzHc=</DigestValue>\n\t\t\t</Reference>\n\t\t</SignedInfo>\n\t\t<SignatureValue>E+H+n32RWiySjUEw9Dtf0c2D4mRjcm4/B2uezqDU+VXyY7qY7NOyX1HREUm62vJo8yJl7SWazx5Z\n\t\t\tlMYZ19iTADIOzwEPScx1CV98rRkIeYjssKF/6U4Ygu/vHw3Upooe8nV4xZxW+fwxJ389i8MSfg/9\n\t\t\tY7rLeN1JHQCQiTMhS2VTEvzdzaeaERCTXam1CR5W75T+lLQe7vNc3fLXRLVL5RY9hbxrAXddwWPG\n\t\t\tLKvoTzpfWGJi77qjcDuxY0xV3dXzydptuqHITGIw4s4Q5lwDL1kqByKPf2moQntNAxE7vJ58oavH\n\t\t\t81xdWZpdHXnIIbzzXq4w0FdYW2sWZ9YkhIFf8Q==\n\t\t</SignatureValue>\n\t\t<KeyInfo>\n\t\t\t<X509Data>\n\t\t\t\t<X509Certificate>MIID+jCCAuICCQDRm9FEjBNE3TANBgkqhkiG9w0BAQsFADCBvjELMAkGA1UEBhMCanAxDjAMBgNV\n\t\t\t\t\tBAgMBVRva3lvMQ4wDAYDVQQHDAVUb2t5bzEcMBoGA1UECgwTSmFwYW5lc2UgR292ZXJubWVudDE4\n\t\t\t\t\tMDYGA1UECwwvTWluaXN0cnkgb2YgSW50ZXJuYWwgQWZmYWlycyBhbmQgQ29tbXVuaWNhdGlvbnMx\n\t\t\t\t\tGTAXBgNVBAMMEDA3MTAxMDAwMDAwMDE3MDAxHDAaBgkqhkiG9w0BCQEWDXRlc3RAdGVzdC5jb20w\n\t\t\t\t\tHhcNMTYwOTE0MDU1OTIyWhcNMTYxMDE0MDU1OTIyWjCBvjELMAkGA1UEBhMCanAxDjAMBgNVBAgM\n\t\t\t\t\tBVRva3lvMQ4wDAYDVQQHDAVUb2t5bzEcMBoGA1UECgwTSmFwYW5lc2UgR292ZXJubWVudDE4MDYG\n\t\t\t\t\tA1UECwwvTWluaXN0cnkgb2YgSW50ZXJuYWwgQWZmYWlycyBhbmQgQ29tbXVuaWNhdGlvbnMxGTAX\n\t\t\t\t\tBgNVBAMMEDA3MTAxMDAwMDAwMDE3MDAxHDAaBgkqhkiG9w0BCQEWDXRlc3RAdGVzdC5jb20wggEi\n\t\t\t\t\tMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCl9X4r6sAmb7p6vPGS2mKIlChMe87xjHuF0Z6s\n\t\t\t\t\tVfmU5cfUEfaTnKY2Wte2++T4EDdbTqkza1VtlA3gsuoAsnbnpSxakY34h8UIUn5MpiXE3IViAFx4\n\t\t\t\t\tpGi1Qy3/J+6CEfhSpiLpFHksVY5ruSUD+R9u7crDu/+8nRaMDzofQYxL5andTi5GBT7V62OINijl\n\t\t\t\t\t8Tte6YtoNZSMhtDhJDwolTzUu6/RAsJu1Ybpo+yX49yIyEYJIK8eDfzxiGT+o0yA1UKNEnT3eymV\n\t\t\t\t\tWW17fLfixEcCFRTFvBfWTklXB7YKn01U/5kc6A5Bsb/VXloPoWKUsqf6viFOAcXJS+iEAgSXtfmp\n\t\t\t\t\tAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAB499x9IHQUdEYbj1b95y2t/qxYHLA7mOYuH+YRdPYGr\n\t\t\t\t\tv53zw0gR2bSWfrJOkiaD2JKAG9Vf44xtQOz835SlENWRGMLo19FfnDo1nik4oW6SBxANya7XsX1L\n\t\t\t\t\tzI6PAgdacvmvNCcqwjtdf4jLpIE4epvUVoEQo47S7baxZs97JiJOEl1glxzz5p5JOrDmpgfrUq/+\n\t\t\t\t\td1PyKzTePmAESjXGL+04oPmoYNg0KkVQvcBCQDAtNp/p1jaVtgT3K2KqlvSBehfY8xJR48M0VRWD\n\t\t\t\t\trEW1hgtNls/X4084VSND9UQWTCc98dmgzz1cXHx0u0aahwT9leCwxi1HQEO+NuFQdQwRaWY=\n\t\t\t\t</X509Certificate>\n\t\t\t</X509Data>\n\t\t</KeyInfo>\n\t</Signature>\n</ProductInfo>\n```\n\n##XML\u30c7\u30b8\u30bf\u30eb\u7f72\u540d\n\u4ee5\u4e0b\u306f\u4e0a\u8a18\u7f72\u540d\u624b\u9806\u306e\u307e\u3068\u3081\u3067\u3059\u3002\n\n```java\n/**\n * XML\u7f72\u540d\n * \n * @param xmlDom\n */\npublic void signature(Document xmlDom) {\n\t\n\ttry {\n\t\t// \u79d8\u5bc6\u9375\u306e\u53d6\u5f97\n\t\tPrivateKey privateKey = getPrivateKeyFromDER();\n\t\t// \u8a3c\u660e\u66f8\u306e\u53d6\u5f97\n\t\tX509Certificate cert = getCertFromDER();\n\t\t\n\t\t// \u5bfe\u8c61\u8981\u7d20\u306e\u89aa\u8981\u7d20\u306bID\u5c5e\u6027\u3092\u4ed8\u4e0e\u3059\u308b\n\t\tElement targetNode = (Element)xmlDom.getElementsByTagName(\"ProductInfo\").item(0);\n\t\tElement parentNode = (Element)targetNode.getParentNode();\n\t\tAttr idAttr = xmlDom.createAttribute(\"id\");\n\t\tidAttr.setValue(\"ProductInfo\");\n\t\tparentNode.setAttributeNode(idAttr);\n\t\tparentNode.setIdAttribute(\"id\", true);\n\t\t\n\t\t// \u7f72\u540d\u60c5\u5831\u306e\u8a2d\u5b9a\n\t\tXMLSignatureFactory xmlSignFactory = XMLSignatureFactory.getInstance(\"DOM\");\n\t\t\n\t\t// \u5909\u63db\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4f5c\u6210\n\t\tArrayList<Transform> refTransformList = new ArrayList<Transform>();\n\t\trefTransformList.add(xmlSignFactory.newTransform(Transform.ENVELOPED, (TransformParameterSpec)null));\n\t\trefTransformList.add(xmlSignFactory.newTransform(CanonicalizationMethod.EXCLUSIVE, (TransformParameterSpec)null));\n\t\t\n\t\t// \u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u8a08\u7b97\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u751f\u6210\n\t\tDigestMethod digestMethod = xmlSignFactory.newDigestMethod(DigestMethod.SHA256, null);\n\t\t\n\t\t// \u53c2\u7167\u8981\u7d20\u306e\u8a2d\u5b9a\n\t\tReference ref = xmlSignFactory.newReference(\"#ProductInfo\", \n\t\t\t\tdigestMethod, \n\t\t\t\trefTransformList, null, null);\n\t\t\n\t\t// \u6b63\u898f\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u751f\u6210\n\t\tCanonicalizationMethod cm = xmlSignFactory.newCanonicalizationMethod(CanonicalizationMethod.EXCLUSIVE, (C14NMethodParameterSpec)null);\n\t\t\n\t\t// \u7f72\u540d\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u751f\u6210\n\t\tSignatureMethod sm = xmlSignFactory.newSignatureMethod(\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\", null);\n\t\t\n\t\t// \u7f72\u540d\u60c5\u5831\u306e\u8a2d\u5b9a\n\t\tSignedInfo signedInfo = xmlSignFactory.newSignedInfo(cm, sm, Collections.singletonList(ref));\n\t\t\t\t\n\t\tKeyInfoFactory kif = xmlSignFactory.getKeyInfoFactory();\n\t\tX509Data x509Data = kif.newX509Data(Collections.singletonList(cert));\n\t\tKeyInfo keyInfo = kif.newKeyInfo(Collections.singletonList(x509Data));\n\t\t\n\t\t// \u7f72\u540d\u5bfe\u8c61\u3068\u79d8\u5bc6\u9375\u306e\u8a2d\u5b9a\n\t\tDOMSignContext dsc = new DOMSignContext(privateKey, parentNode);\n\t\t\n\t\t// XML\u7f72\u540d\u306e\u5b9f\u65bd\n\t\tXMLSignature signature = xmlSignFactory.newXMLSignature(signedInfo, keyInfo);\n\t\tsignature.sign(dsc);\n\t\t\n\t\t// \u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u3002\n\t\tTransformerFactory tf = TransformerFactory.newInstance();\n\t\tTransformer trans = tf.newTransformer();\n\t\ttrans.transform(new DOMSource(xmlDom), new StreamResult(System.out));\n\t\t\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t}\n\n}\n\n/**\n * \u79d8\u5bc6\u9375\u306e\u8aad\u8fbc\n * \n * @return\n * @throws NoSuchAlgorithmException\n * @throws IOException\n * @throws InvalidKeySpecException\n */\nprivate PrivateKey getPrivateKeyFromDER() throws NoSuchAlgorithmException, IOException, InvalidKeySpecException {\n\t\n\tbyte[] key = readkeyFile(\"./resources/private_key.pk8\");\n\tPKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(key);\n\t\n\tKeyFactory kf = KeyFactory.getInstance(\"RSA\"); \n\tRSAPrivateKey privateKey = (RSAPrivateKey)kf.generatePrivate(keySpec);\n\treturn privateKey;\n}\n\n/**\n * \u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u306e\u8aad\u8fbc\n * \n * @return\n * @throws IOException\n * @throws CertificateException\n */\nprivate X509Certificate getCertFromDER() throws IOException, CertificateException {\n\t\n\tCertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n\tX509Certificate cert = (X509Certificate)cf.generateCertificate(new FileInputStream(\"./resources/server.crt\"));\n\t\n\treturn cert;\n}\n\n/**\n * \u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u8fbc\n * \n * @param fileName\n * @return\n * @throws IOException\n */\nprivate byte[] readkeyFile(String fileName) throws IOException {\n\tbyte[] data = null;\n\tFileInputStream input = new FileInputStream(fileName);\n\tdata = new byte[input.available()];\n\tinput.read(data);\n\tinput.close();\n\t\n\treturn data;\n}\n```\n", "tags": ["Java", "XML"]}