{"context": "\u672c\u8a18\u4e8b\u3067\u306f Kotlin\u3067Android\u306eUI\u3092\u7d44\u307f\u7acb\u3066\u308b\u30e9\u30a4\u30d6\u30e9\u30ea Anko\u3092\u4f7f\u3063\u3066ListView\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nListView\u3068\u3001ListView\u306e\u5404\u30a2\u30a4\u30c6\u30e0\u306eView\u3092Anko DSL\u3067\u7d44\u307f\u7acb\u3066\u307e\u3059\u3002\n\nDSL\u3067ListView\u3092\u8ffd\u52a0\n\u307e\u305a\u306fAnko DSL\u3067ListView\u3092\u8ffd\u52a0\u3059\u308b\u90e8\u5206\u306f\u4ee5\u4e0b\u3068\u306a\u308a\u307e\u3059\u3002\n\nAnko\nverticalLayout {\n    listView {\n        adapter = MyListViewAdapter(ctx, userList)\n    }\n}\n\n\nListView\u3092\u8ffd\u52a0\u3057\u3001Adapter\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\nMyListViewAdapter\u306f\u30e6\u30fc\u30b6\u30fc\u306e\u4e00\u89a7\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u81ea\u4f5c\u306eAdapter\u3067\u3059\u3002\nAdapter\u306e\u4e2d\u3067Context\u3092\u5229\u7528\u3057\u305f\u3044\u306e\u3067\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u3057\u3066\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3059\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\nAdapter\nAdapter\u306egetView\u306e\u90e8\u5206\u3092\u793a\u3057\u307e\u3059\u3002\n\nMyListViewAdapter\nclass MyListViewAdapter(var context: Context, var userList: UserList? = null) : BaseAdapter() {\n\n    // \u7701\u7565\n\n    override fun getView(position: Int, convertView: View?, parent: ViewGroup?): View? {\n        var newConvertView: View?\n        var ui: MyListItemUI\n\n        if (convertView == null) {\n            ui = MyListItemUI(position)\n            newConvertView = ui.createView(context.UI {  })\n            newConvertView.tag = ui\n        } else {\n            newConvertView = convertView\n            ui = newConvertView.tag as MyListItemUI\n            ui.update(position)\n        }\n\n        newConvertView.tag = ui\n\n        return newConvertView\n    }\n}\n\n\nconvertView\u304cnull\u306e\u3068\u304d\u306b\u306fMyListItemUI(\u5f8c\u8ff0)\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u3001createView()\u3067\u5404\u30a2\u30a4\u30c6\u30e0\u306eView\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\ncreateView()\u306b\u306f\u5148\u307b\u3069Adapter\u306b\u6e21\u3057\u305fContext\u306e\u62e1\u5f35\u95a2\u6570 UI { } \u306e\u623b\u308a\u5024\u3092\u6e21\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066View\u306etag\u306bMyListItemUI\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u3059\u3067\u306bView\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001View\u306etag\u304b\u3089MyListItemUI\u3092\u53d6\u5f97\u3057\u3001View\u306e\u66f4\u65b0\u3092\u884c\u3044\u307e\u3059\u3002\n\nAnkoComponent\nMyListItemUI\u306fAnkoComponent\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3067\u3059\u3002\n\nMyListItemUI\nclass MyListItemUI(var position: Int) : AnkoComponent<Context> {\n\n    private var label: TextView? = null\n\n    override fun createView(ui: AnkoContext<Context>) = with(ui) {\n        verticalLayout {\n            label = textView {\n                text = \"List item: \" + position\n            }\n        }\n    }\n\n    fun update(position: Int) {\n        label?.text = \"List item: \" + position\n    }\n}\n\n\nAnkoComponent\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u304cViewHolder\u306e\u3088\u3046\u306a\u5f79\u5272\u3092\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nAnkoComponent\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u30ab\u30b9\u30bf\u30e0\u30d3\u30e5\u30fc\u306b\u3059\u308b\n\u3055\u3066\u3053\u3053\u3067\u7d42\u308f\u3063\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u5148\u307b\u3069\u306eAdapter\u306egetView()\u306e\u90e8\u5206\u3001Kotlin\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u306f\u3061\u3087\u3063\u3068\u4e0d\u683c\u597d\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\nMyListViewAdapter\noverride fun getView(position: Int, convertView: View?, parent: ViewGroup?): View? {\n    var newConvertView: View?\n    var ui: MyListItemUI\n\n    if (convertView == null) {\n        ui = MyListItemUI(position)\n        newConvertView = ui.createView(context.UI {  })\n        newConvertView.tag = ui\n    } else {\n        newConvertView = convertView\n        ui = newConvertView.tag as MyListItemUI\n        ui.update(position)\n    }\n\n    newConvertView.tag = ui\n\n    return newConvertView\n}\n\n\n\u3082\u3046\u5c11\u3057\u3059\u3063\u304d\u308a\u3055\u305b\u3089\u308c\u306a\u3044\u3082\u306e\u3067\u3057\u3087\u3046\u304b?\nListView\u3092\u4f7f\u3046\u969b\u306b\u306fViewHolder\u3092\u4f7f\u308f\u305a\u306b\u30ab\u30b9\u30bf\u30e0\u30d3\u30e5\u30fc\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u30b3\u30fc\u30c9\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3067\u304d\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306b\u95a2\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nViewHolder\u3092\u4f7f\u308f\u306a\u3044\u3067ListView\u3092\u9ad8\u901f\u5316\u3059\u308b\nAnkoComponent\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3059\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306aAnkoComponent\u3092\u5b9f\u88c5\u3057\u305f\u30ab\u30b9\u30bf\u30e0\u30d3\u30e5\u30fc\u3092\u3064\u304f\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nMyListItemUI\nclass MyListItemUI(context: Context) : FrameLayout(context), AnkoComponent<Context> {\n\n    private var label: TextView? = null\n\n    override fun createView(ui: AnkoContext<Context>) = with(ui) {\n        verticalLayout {\n            label = textView {\n\n            }\n        }.apply { this@MyListItemUI.addView(this) }\n    }\n\n    fun update(position: Int) {\n        label?.text = \"List item: \" + position\n    }\n}\n\n\n\u4f5c\u6210\u3057\u305fUI\u3092apply { this@MyListItemUI.addView(this) }\u306e\u90e8\u5206\u3067\u30ab\u30b9\u30bf\u30e0\u30d3\u30e5\u30fc\u81ea\u8eab\u306b\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\napply\u95a2\u6570\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nKotlin \u30b9\u30b3\u30fc\u30d7\u95a2\u6570 \u7528\u9014\u307e\u3068\u3081\n\u3053\u306e\u3088\u3046\u306a\u30ab\u30b9\u30bf\u30e0\u30d3\u30e5\u30fc\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nMyListViewAdapter\noverride fun getView(position: Int, convertView: View?, parent: ViewGroup?): View =\n    ((convertView as? MyListItemUI) ?: MyListItemUI(context).apply {\n        // convertView\u304c null\u306e\u6642\u306b\u306f View\u3092\u4f5c\u6210\n        createView(context.UI {})\n    }).apply {\n        // View\u3092\u66f4\u65b0\n        update(position)\n    }\n\n\n\u975e\u5e38\u306b\u3059\u3063\u304d\u308a\u3057\u307e\u3057\u305f\u3002\u3084\u3063\u305f\u306d\u3002\n\n\u3055\u3066\u3001\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u4f5c\u3063\u305fMyListItemUI\u3067\u3059\u304c\u3001\u5b9f\u306f\u4eca\u306e\u3068\u3053\u308dPreview\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u72b6\u614b\u3067\u3059\u3002\n\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30d0\u30b0\u306a\u306e\u304b\u30b3\u30fc\u30c9\u306e\u5074\u306b\u4f55\u3089\u304b\u306e\u5909\u66f4\u3092\u52a0\u3048\u308c\u3070\u8868\u793a\u3055\u308c\u308b\u3082\u306e\u306a\u306e\u304b\u306f\u8abf\u67fb\u3057\u304d\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u5b9f\u306e\u3068\u3053\u308d\u3001AnkoComponent\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306fPreview\u306e\u305f\u3081\u306b\u3042\u308b\u3082\u306e\u3067\u3001View\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u3060\u3051\u306a\u3089\u308f\u3056\u308f\u3056AnkoComponent\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3088\u3046\u3067\u3059\u3002\nAnko Preview Plugin\n\u5148\u307b\u3069\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3082\u52d5\u304d\u307e\u3057\u305f\u3002\n\nMyListItemUI\nclass MyListItemUI(context: Context) : FrameLayout(context) {\n\n    private var label: TextView? = null\n\n    init {\n        context.UI {\n            verticalLayout {\n                label = textView {\n\n                }\n            }.apply { this@MyListItemUI.addView(this) }\n        }\n    }\n\n    fun update(position: Int) {\n        label?.text = \"List item: \" + position\n    }\n}\n\n\n\nMyListViewAdapter\noverride fun getView(\n        position: Int, convertView: View?, parent: ViewGroup?): View =\n        ((convertView as? MyListItemUI) ?: MyListItemUI(context)).apply {\n            // View\u3092\u66f4\u65b0\n            update(position)\n        }\n\n\n\n\u6b21\u56de\u306f\n\nAnko\u3068 Data Binding \u540c\u6642\u306b\u4f7f\u3048\u306a\u3044\u554f\u984c\n\nvar label: TextView? = null \u306e\u90e8\u5206\u306b\u672c\u5f53\u306fnull\u3092\u5165\u308c\u305f\u304f\u306a\u3044\u554f\u984c\n\nvar label: TextView? = null \u306e\u90e8\u5206\u3092var\u3058\u3083\u306a\u304f\u3066val\u306b\u3057\u305f\u3044\u554f\u984c\n\n\u3042\u305f\u308a\u306e\u8a71\u3092\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u672c\u8a18\u4e8b\u3067\u306f Kotlin\u3067Android\u306eUI\u3092\u7d44\u307f\u7acb\u3066\u308b\u30e9\u30a4\u30d6\u30e9\u30ea Anko\u3092\u4f7f\u3063\u3066ListView\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nListView\u3068\u3001ListView\u306e\u5404\u30a2\u30a4\u30c6\u30e0\u306eView\u3092Anko DSL\u3067\u7d44\u307f\u7acb\u3066\u307e\u3059\u3002\n\n# DSL\u3067ListView\u3092\u8ffd\u52a0\n\n\u307e\u305a\u306fAnko DSL\u3067ListView\u3092\u8ffd\u52a0\u3059\u308b\u90e8\u5206\u306f\u4ee5\u4e0b\u3068\u306a\u308a\u307e\u3059\u3002\n\n```kotlin:Anko\nverticalLayout {\n    listView {\n        adapter = MyListViewAdapter(ctx, userList)\n    }\n}\n```\n\nListView\u3092\u8ffd\u52a0\u3057\u3001Adapter\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\nMyListViewAdapter\u306f\u30e6\u30fc\u30b6\u30fc\u306e\u4e00\u89a7\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u81ea\u4f5c\u306eAdapter\u3067\u3059\u3002\nAdapter\u306e\u4e2d\u3067Context\u3092\u5229\u7528\u3057\u305f\u3044\u306e\u3067\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u3057\u3066\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3059\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n# Adapter\n\nAdapter\u306egetView\u306e\u90e8\u5206\u3092\u793a\u3057\u307e\u3059\u3002\n\n```kotlin:MyListViewAdapter\nclass MyListViewAdapter(var context: Context, var userList: UserList? = null) : BaseAdapter() {\n\n    // \u7701\u7565\n\n    override fun getView(position: Int, convertView: View?, parent: ViewGroup?): View? {\n        var newConvertView: View?\n        var ui: MyListItemUI\n\n        if (convertView == null) {\n            ui = MyListItemUI(position)\n            newConvertView = ui.createView(context.UI {  })\n            newConvertView.tag = ui\n        } else {\n            newConvertView = convertView\n            ui = newConvertView.tag as MyListItemUI\n            ui.update(position)\n        }\n\n        newConvertView.tag = ui\n\n        return newConvertView\n    }\n}\n```\n\nconvertView\u304cnull\u306e\u3068\u304d\u306b\u306fMyListItemUI(\u5f8c\u8ff0)\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u3001createView()\u3067\u5404\u30a2\u30a4\u30c6\u30e0\u306eView\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\ncreateView()\u306b\u306f\u5148\u307b\u3069Adapter\u306b\u6e21\u3057\u305fContext\u306e\u62e1\u5f35\u95a2\u6570 UI { } \u306e\u623b\u308a\u5024\u3092\u6e21\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066View\u306etag\u306bMyListItemUI\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\u3059\u3067\u306bView\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001View\u306etag\u304b\u3089MyListItemUI\u3092\u53d6\u5f97\u3057\u3001View\u306e\u66f4\u65b0\u3092\u884c\u3044\u307e\u3059\u3002\n\n# AnkoComponent\n\nMyListItemUI\u306fAnkoComponent\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```kotlin:MyListItemUI\nclass MyListItemUI(var position: Int) : AnkoComponent<Context> {\n\n    private var label: TextView? = null\n\n    override fun createView(ui: AnkoContext<Context>) = with(ui) {\n        verticalLayout {\n            label = textView {\n                text = \"List item: \" + position\n            }\n        }\n    }\n\n    fun update(position: Int) {\n        label?.text = \"List item: \" + position\n    }\n}\n```\n\n**AnkoComponent\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u304cViewHolder\u306e\u3088\u3046\u306a\u5f79\u5272\u3092\u3057\u3066\u3044\u308b**\u3053\u3068\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n# AnkoComponent\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u30ab\u30b9\u30bf\u30e0\u30d3\u30e5\u30fc\u306b\u3059\u308b\n\n\u3055\u3066\u3053\u3053\u3067\u7d42\u308f\u3063\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u5148\u307b\u3069\u306eAdapter\u306egetView()\u306e\u90e8\u5206\u3001Kotlin\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u306f\u3061\u3087\u3063\u3068\u4e0d\u683c\u597d\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\n```kotlin:MyListViewAdapter\noverride fun getView(position: Int, convertView: View?, parent: ViewGroup?): View? {\n    var newConvertView: View?\n    var ui: MyListItemUI\n\n    if (convertView == null) {\n        ui = MyListItemUI(position)\n        newConvertView = ui.createView(context.UI {  })\n        newConvertView.tag = ui\n    } else {\n        newConvertView = convertView\n        ui = newConvertView.tag as MyListItemUI\n        ui.update(position)\n    }\n\n    newConvertView.tag = ui\n\n    return newConvertView\n}\n```\n\n\u3082\u3046\u5c11\u3057\u3059\u3063\u304d\u308a\u3055\u305b\u3089\u308c\u306a\u3044\u3082\u306e\u3067\u3057\u3087\u3046\u304b?\n\nListView\u3092\u4f7f\u3046\u969b\u306b\u306fViewHolder\u3092\u4f7f\u308f\u305a\u306b\u30ab\u30b9\u30bf\u30e0\u30d3\u30e5\u30fc\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u30b3\u30fc\u30c9\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3067\u304d\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306b\u95a2\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n[ViewHolder\u3092\u4f7f\u308f\u306a\u3044\u3067ListView\u3092\u9ad8\u901f\u5316\u3059\u308b](http://qiita.com/mofumofu3n/items/28f8be64d39b20e69552)\n\nAnkoComponent\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3059\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306aAnkoComponent\u3092\u5b9f\u88c5\u3057\u305f\u30ab\u30b9\u30bf\u30e0\u30d3\u30e5\u30fc\u3092\u3064\u304f\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```kotlin:MyListItemUI\nclass MyListItemUI(context: Context) : FrameLayout(context), AnkoComponent<Context> {\n\n    private var label: TextView? = null\n\n    override fun createView(ui: AnkoContext<Context>) = with(ui) {\n        verticalLayout {\n            label = textView {\n\n            }\n        }.apply { this@MyListItemUI.addView(this) }\n    }\n\n    fun update(position: Int) {\n        label?.text = \"List item: \" + position\n    }\n}\n```\n\n\u4f5c\u6210\u3057\u305fUI\u3092`apply { this@MyListItemUI.addView(this) }`\u306e\u90e8\u5206\u3067\u30ab\u30b9\u30bf\u30e0\u30d3\u30e5\u30fc\u81ea\u8eab\u306b\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\napply\u95a2\u6570\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n[Kotlin \u30b9\u30b3\u30fc\u30d7\u95a2\u6570 \u7528\u9014\u307e\u3068\u3081](http://qiita.com/ngsw_taro/items/d29e3080d9fc8a38691e)\n\n\u3053\u306e\u3088\u3046\u306a\u30ab\u30b9\u30bf\u30e0\u30d3\u30e5\u30fc\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```kotlin:MyListViewAdapter\noverride fun getView(position: Int, convertView: View?, parent: ViewGroup?): View =\n    ((convertView as? MyListItemUI) ?: MyListItemUI(context).apply {\n        // convertView\u304c null\u306e\u6642\u306b\u306f View\u3092\u4f5c\u6210\n        createView(context.UI {})\n    }).apply {\n        // View\u3092\u66f4\u65b0\n        update(position)\n    }\n```\n\n\u975e\u5e38\u306b\u3059\u3063\u304d\u308a\u3057\u307e\u3057\u305f\u3002\u3084\u3063\u305f\u306d\u3002\n\n***\n\n\u3055\u3066\u3001\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u4f5c\u3063\u305fMyListItemUI\u3067\u3059\u304c\u3001\u5b9f\u306f\u4eca\u306e\u3068\u3053\u308dPreview\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u72b6\u614b\u3067\u3059\u3002\n\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30d0\u30b0\u306a\u306e\u304b\u30b3\u30fc\u30c9\u306e\u5074\u306b\u4f55\u3089\u304b\u306e\u5909\u66f4\u3092\u52a0\u3048\u308c\u3070\u8868\u793a\u3055\u308c\u308b\u3082\u306e\u306a\u306e\u304b\u306f\u8abf\u67fb\u3057\u304d\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u5b9f\u306e\u3068\u3053\u308d\u3001AnkoComponent\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306fPreview\u306e\u305f\u3081\u306b\u3042\u308b\u3082\u306e\u3067\u3001View\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u3060\u3051\u306a\u3089\u308f\u3056\u308f\u3056AnkoComponent\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n[Anko Preview Plugin](https://github.com/Kotlin/anko/blob/master/doc/README.md#anko-preview-plugin)\n\n\u5148\u307b\u3069\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3082\u52d5\u304d\u307e\u3057\u305f\u3002\n\n```kotlin:MyListItemUI\nclass MyListItemUI(context: Context) : FrameLayout(context) {\n\n    private var label: TextView? = null\n\n    init {\n        context.UI {\n            verticalLayout {\n                label = textView {\n\n                }\n            }.apply { this@MyListItemUI.addView(this) }\n        }\n    }\n\n    fun update(position: Int) {\n        label?.text = \"List item: \" + position\n    }\n}\n```\n\n```kotlin:MyListViewAdapter\noverride fun getView(\n        position: Int, convertView: View?, parent: ViewGroup?): View =\n        ((convertView as? MyListItemUI) ?: MyListItemUI(context)).apply {\n            // View\u3092\u66f4\u65b0\n            update(position)\n        }\n```\n\n***\n\n\u6b21\u56de\u306f\n\n- Anko\u3068 Data Binding \u540c\u6642\u306b\u4f7f\u3048\u306a\u3044\u554f\u984c\n- `var label: TextView? = null` \u306e\u90e8\u5206\u306b\u672c\u5f53\u306fnull\u3092\u5165\u308c\u305f\u304f\u306a\u3044\u554f\u984c\n- `var label: TextView? = null` \u306e\u90e8\u5206\u3092var\u3058\u3083\u306a\u304f\u3066val\u306b\u3057\u305f\u3044\u554f\u984c\n\n\u3042\u305f\u308a\u306e\u8a71\u3092\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n", "tags": ["Kotlin", "anko", "Android"]}