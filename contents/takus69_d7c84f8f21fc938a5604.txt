{"context": "\n\n\u306f\u3058\u3081\u306b\nCloud9\u3067TensorFlow\u306eBasic Usage\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002TensorFlow\u3092\u4f7f\u3046\u4e0a\u3067\u306e\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9\u3068\u4f7f\u3044\u65b9\u3092\u307e\u3068\u3081\u307e\u3059\u3002\nGPU\u3068\u304bInteractiveUsage\u3068\u304b\u306f\u5165\u3063\u3066\u307e\u305b\u3093\u3002\u307e\u305a\u306f\u57fa\u672c\u7684\u306a\u30b3\u30fc\u30c9\u304c\u3067\u304d\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u3001\u305d\u306e\u4ed6\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u52c9\u5f37\u3057\u3066\u3044\u3053\u3046\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u74b0\u5883\nCloud9\nPython 2.7.6\nSample Codes : GitHub\n\u74b0\u5883\u69cb\u7bc9\u306f\u300c\u30af\u30e9\u30a6\u30c9\u7d71\u5408\u958b\u767a\u74b0\u5883Cloud9\u3067TensorFlow\u3092\u4f7f\u3046\u300d\u3092\u53c2\u7167\n\nTensorFlow\u306e\u8003\u3048\u65b9\n\u91cd\u8981\u306a\u8003\u3048\u65b9\u306f\u4ee5\u4e0b\u306e2\u70b9\u3067\u3059\u3002\n- Graphs\n- Sessions\nGraphs\u306f\u3001\u5024\u3084\u8a08\u7b97\u3092\u8a2d\u5b9a\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\u5024\u306f\u5b9a\u6570\u3084\u5909\u6570\u3001\u30c6\u30f3\u30bd\u30eb\uff082\u6b21\u5143\u3060\u3068\u884c\u5217\u3002\u591a\u6b21\u5143\u914d\u5217\u3067\u5b9a\u7fa9\u3057\u307e\u3059\uff09\u306a\u3069\u3092\u6301\u3066\u307e\u3059\u3002\u305d\u306e\u5024\u306e\u8a08\u7b97\uff08\u4f8b\u3048\u3070\u8db3\u3057\u7b97\u3084\u639b\u3051\u7b97\uff09\u3092\u8a2d\u5b9a\u3059\u308b\u306e\u3082Graphs\u306b\u306a\u308a\u307e\u3059\u3002\nSessions\u306f\u3001Graphs\u306e\u5024\u3084\u8a08\u7b97\u3092\u5b9f\u884c\u3059\u308b\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002TensorFlow\u306fGPU\u3092\u4f7f\u3048\u308b\u3088\u3046\u3067\u3059\u304c\u3001Sessions\u3092\u4ecb\u3057\u3066\u81ea\u52d5\u7684\u306b\u4f7f\u7528\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\u305d\u306e\u305f\u3081Graphs\u3067\u5024\u3084\u8a08\u7b97\u3092\u8a2d\u5b9a => Sessions\u3067\u8a08\u7b97\u306e\u5b9f\u884c\n\u3068\u3044\u3046\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u3067\u5177\u4f53\u7684\u306a\u4f8b\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\nGitHub\u306ebasic_usage.py\n\u306e\u5b9f\u884c\u7d50\u679c\u3092\u9806\u306b\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u5177\u4f53\u4f8b\n\nconstant(\u5b9a\u6570)\u3068Sessions\nimport tensorflow as tf\n\n# Graphs\nmatrix1 = tf.constant([[3., 3.]])\nmatrix2 = tf.constant([[2.], [2.]])\nproduct = tf.matmul(matrix1, matrix2)\n\n# Sessions\nsess = tf.Session()\nresult = sess.run(product)\nprint(result)\n# Output: [[12.]]\nsess.close()\n\n\ntf.constant\u306f\u3001\u5b9a\u6570\u3092\u8a2d\u5b9a\nmatrix1\u306b1\u00d72\u306e\u884c\u5217\u3001matrix2\u306b2\u00d71\u306e\u884c\u5217\u3092\u8a2d\u5b9a\ntf.matmul\u3067\u884c\u5217\u306e\u639b\u3051\u7b97\uff08\u3053\u3053\u307e\u3067\u304cGraphs\u306e\u5024\u3084\u8a08\u7b97\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3068\u3053\u308d\uff09\ntf.Session()\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\nrun\u3067\u8a08\u7b97\u3092\u5b9f\u884c\nclose()\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u30af\u30ed\u30fc\u30ba\nprint\u3067\u884c\u5217\u306e\u8a08\u7b97\u7d50\u679c\u3092\u51fa\u529b\n\nGraphs\u3092\u8a2d\u5b9a\u3057\u3066\u304b\u3089\u3001Sessions\u3067\u8a08\u7b97\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u6d41\u308c\u304c\u91cd\u8981\u3067\u3059\u3002\n\nVariable(\u5909\u6570)\n# Graphs\nstate = tf.Variable(0)\none = tf.constant(1)\nnew_value = tf.add(state, one)\nupdate = tf.assign(state, new_value)\n\ninit_op = tf.initialize_all_variables()\n\n# Sessions\nwith tf.Session() as sess:\n  sess.run(init_op)\n  print(sess.run(state))\n  for _ in range(3):\n    sess.run(update)\n    print(sess.run(state))\n# Output: 0 1 2 3\n\n\ntf.Variable\u3067\u5909\u6570\u3092\u8a2d\u5b9a\ntf.add\u3067\u8db3\u3057\u7b97\ntf.assign\u3067\u8db3\u3057\u7b97\u306e\u7d50\u679c\u3092state\u306b\u5165\u308c\u76f4\u3057\ntf.initialize_all_variables()\u3067\u521d\u671f\u5316\uff08\u5909\u6570\u306f\u521d\u671f\u5316\u304c\u5fc5\u8981\uff01\uff09\nSession()\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\nrun(init_op)\u3067\u5909\u6570\u306e\u521d\u671f\u5316\n\u30eb\u30fc\u30d7\u3067run(update)\u3057\u3066\u3001\u7d50\u679c\u306estate\u3092\u51fa\u529b\n\n\u5909\u6570\u304c\u9806\u306b\u66f4\u65b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u8907\u6570\u540c\u6642\u306brun\n# Graphs\ninput1 = tf.constant([3.0])\ninput2 = tf.constant([2.0])\ninput3 = tf.constant([5.0])\nintermed = tf.add(input2, input3)\nmul = tf.mul(input1, intermed)\n\n# Sessions\nwith tf.Session() as sess:\n  result = sess.run([mul, intermed])\n  print(result)\n# Output: [array([ 21.], dtype=float32), array([ 7.], dtype=float32)]\n\n\u30b3\u30fc\u30c9\u306e\u5185\u5bb9\u306f\u4eca\u307e\u3067\u3068\u5909\u308f\u3089\u306a\u3044\u306e\u3067\u7406\u89e3\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u91cd\u8981\u306a\u306e\u306f\u3001run([mul, intermed])\u3067\u8907\u6570\u306e\u8a08\u7b97\u3092\u540c\u6642\u306b\u5b9f\u884c\u3057\u3001\u7d50\u679c\u306e\u51fa\u529b\u3082\u540c\u6642\u306b\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\n\nplaceholder\uff08\u4ee3\u5165\uff09\n# Graphs\ninput1 = tf.placeholder(tf.float32)\ninput2 = tf.placeholder(tf.float32)\noutput = tf.mul(input1, input2)\n\n# Sessions\nwith tf.Session() as sess:\n  print(sess.run([output], feed_dict={input1:[7.], input2:[2.]}))\n# Output: [array([ 14.], dtype=float32)]\n\ntf.placeholder(tf.float32)\u3067\u5024\u3092\u4ee3\u5165\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nrun([output], feed_dict={input1:[7.], input2:[2.]})\u3067\u3001\u4ee3\u5165\u3057\u3066\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u304a\u308f\u308a\u306b\nGraphs\u3092\u8a2d\u5b9a\u3057\u3066\u304b\u3089\u3001Sessions\u3067\u8a08\u7b97\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u6d41\u308c\u304c\u91cd\u8981\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u7c21\u5358\u306a\u30b3\u30fc\u30c9\u3060\u3068\u7279\u306b\u554f\u984c\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u8907\u96d1\u306a\u8a08\u7b97\u306b\u306a\u3063\u3066\u304f\u308b\u3068\u3069\u3046\u306a\u308b\u304b\u304c\u672a\u77e5\u6570\u3067\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3057\u3066\u8272\u3005\u3068\u8a66\u3057\u3066\u307f\u308b\u3068\u3055\u3089\u306b\u7406\u89e3\u304c\u6df1\u307e\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u3060\u52c9\u5f37\u4e2d\u306a\u306e\u3067\u9593\u9055\u3044\u304c\u3042\u3063\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u306b\u3054\u6307\u6458\u304f\u3060\u3055\u3044\u3002\n\u4eca\u5f8c\u3082TensorFlow\u306e\u4f7f\u3044\u65b9\u3092\u52c9\u5f37\u3057\u3066\u3044\u3063\u3066\u3001\u52a0\u7b46\u30fb\u4fee\u6b63\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n# \u306f\u3058\u3081\u306b\nCloud9\u3067TensorFlow\u306e[Basic Usage](https://www.tensorflow.org/versions/r0.11/get_started/basic_usage.html#basic-usage)\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002TensorFlow\u3092\u4f7f\u3046\u4e0a\u3067\u306e\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9\u3068\u4f7f\u3044\u65b9\u3092\u307e\u3068\u3081\u307e\u3059\u3002\nGPU\u3068\u304bInteractiveUsage\u3068\u304b\u306f\u5165\u3063\u3066\u307e\u305b\u3093\u3002\u307e\u305a\u306f\u57fa\u672c\u7684\u306a\u30b3\u30fc\u30c9\u304c\u3067\u304d\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u3001\u305d\u306e\u4ed6\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u52c9\u5f37\u3057\u3066\u3044\u3053\u3046\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n# \u74b0\u5883\n[Cloud9](https://c9.io)\nPython 2.7.6\nSample Codes : [GitHub](https://github.com/takus69/learn_tf)\n\u74b0\u5883\u69cb\u7bc9\u306f\u300c[\u30af\u30e9\u30a6\u30c9\u7d71\u5408\u958b\u767a\u74b0\u5883Cloud9\u3067TensorFlow\u3092\u4f7f\u3046](http://qiita.com/takus69/items/428d500a835ca2f514e4)\u300d\u3092\u53c2\u7167\n\n# TensorFlow\u306e\u8003\u3048\u65b9\n\u91cd\u8981\u306a\u8003\u3048\u65b9\u306f\u4ee5\u4e0b\u306e2\u70b9\u3067\u3059\u3002\n- Graphs\n- Sessions\n\nGraphs\u306f\u3001\u5024\u3084\u8a08\u7b97\u3092\u8a2d\u5b9a\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\u5024\u306f\u5b9a\u6570\u3084\u5909\u6570\u3001\u30c6\u30f3\u30bd\u30eb\uff082\u6b21\u5143\u3060\u3068\u884c\u5217\u3002\u591a\u6b21\u5143\u914d\u5217\u3067\u5b9a\u7fa9\u3057\u307e\u3059\uff09\u306a\u3069\u3092\u6301\u3066\u307e\u3059\u3002\u305d\u306e\u5024\u306e\u8a08\u7b97\uff08\u4f8b\u3048\u3070\u8db3\u3057\u7b97\u3084\u639b\u3051\u7b97\uff09\u3092\u8a2d\u5b9a\u3059\u308b\u306e\u3082Graphs\u306b\u306a\u308a\u307e\u3059\u3002\n\nSessions\u306f\u3001Graphs\u306e\u5024\u3084\u8a08\u7b97\u3092\u5b9f\u884c\u3059\u308b\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002TensorFlow\u306fGPU\u3092\u4f7f\u3048\u308b\u3088\u3046\u3067\u3059\u304c\u3001Sessions\u3092\u4ecb\u3057\u3066\u81ea\u52d5\u7684\u306b\u4f7f\u7528\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u305d\u306e\u305f\u3081Graphs\u3067\u5024\u3084\u8a08\u7b97\u3092\u8a2d\u5b9a => Sessions\u3067\u8a08\u7b97\u306e\u5b9f\u884c\n\u3068\u3044\u3046\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u3067\u5177\u4f53\u7684\u306a\u4f8b\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n[GitHub](https://github.com/takus69/learn_tf)\u306ebasic_usage.py\n\u306e\u5b9f\u884c\u7d50\u679c\u3092\u9806\u306b\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n# \u5177\u4f53\u4f8b\n## constant(\u5b9a\u6570)\u3068Sessions\n\n```\nimport tensorflow as tf\n\n# Graphs\nmatrix1 = tf.constant([[3., 3.]])\nmatrix2 = tf.constant([[2.], [2.]])\nproduct = tf.matmul(matrix1, matrix2)\n\n# Sessions\nsess = tf.Session()\nresult = sess.run(product)\nprint(result)\n# Output: [[12.]]\nsess.close()\n```\n\n1. tf.constant\u306f\u3001\u5b9a\u6570\u3092\u8a2d\u5b9a\n2. matrix1\u306b1\u00d72\u306e\u884c\u5217\u3001matrix2\u306b2\u00d71\u306e\u884c\u5217\u3092\u8a2d\u5b9a\n3. tf.matmul\u3067\u884c\u5217\u306e\u639b\u3051\u7b97\uff08\u3053\u3053\u307e\u3067\u304cGraphs\u306e\u5024\u3084\u8a08\u7b97\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3068\u3053\u308d\uff09\n4. tf.Session()\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n5. run\u3067\u8a08\u7b97\u3092\u5b9f\u884c\n6. close()\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u30af\u30ed\u30fc\u30ba\n7. print\u3067\u884c\u5217\u306e\u8a08\u7b97\u7d50\u679c\u3092\u51fa\u529b\n\nGraphs\u3092\u8a2d\u5b9a\u3057\u3066\u304b\u3089\u3001Sessions\u3067\u8a08\u7b97\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u6d41\u308c\u304c\u91cd\u8981\u3067\u3059\u3002\n\n## Variable(\u5909\u6570)\n\n```\n# Graphs\nstate = tf.Variable(0)\none = tf.constant(1)\nnew_value = tf.add(state, one)\nupdate = tf.assign(state, new_value)\n\ninit_op = tf.initialize_all_variables()\n\n# Sessions\nwith tf.Session() as sess:\n  sess.run(init_op)\n  print(sess.run(state))\n  for _ in range(3):\n    sess.run(update)\n    print(sess.run(state))\n# Output: 0 1 2 3\n```\n\n1. tf.Variable\u3067\u5909\u6570\u3092\u8a2d\u5b9a\n2. tf.add\u3067\u8db3\u3057\u7b97\n3. tf.assign\u3067\u8db3\u3057\u7b97\u306e\u7d50\u679c\u3092state\u306b\u5165\u308c\u76f4\u3057\n4. tf.initialize_all_variables()\u3067\u521d\u671f\u5316\uff08\u5909\u6570\u306f\u521d\u671f\u5316\u304c\u5fc5\u8981\uff01\uff09\n5. Session()\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n6. run(init_op)\u3067\u5909\u6570\u306e\u521d\u671f\u5316\n7. \u30eb\u30fc\u30d7\u3067run(update)\u3057\u3066\u3001\u7d50\u679c\u306estate\u3092\u51fa\u529b\n\n\u5909\u6570\u304c\u9806\u306b\u66f4\u65b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n## \u8907\u6570\u540c\u6642\u306brun\n\n```\n# Graphs\ninput1 = tf.constant([3.0])\ninput2 = tf.constant([2.0])\ninput3 = tf.constant([5.0])\nintermed = tf.add(input2, input3)\nmul = tf.mul(input1, intermed)\n\n# Sessions\nwith tf.Session() as sess:\n  result = sess.run([mul, intermed])\n  print(result)\n# Output: [array([ 21.], dtype=float32), array([ 7.], dtype=float32)]\n```\n\n\u30b3\u30fc\u30c9\u306e\u5185\u5bb9\u306f\u4eca\u307e\u3067\u3068\u5909\u308f\u3089\u306a\u3044\u306e\u3067\u7406\u89e3\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u91cd\u8981\u306a\u306e\u306f\u3001run([mul, intermed])\u3067\u8907\u6570\u306e\u8a08\u7b97\u3092\u540c\u6642\u306b\u5b9f\u884c\u3057\u3001\u7d50\u679c\u306e\u51fa\u529b\u3082\u540c\u6642\u306b\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\n\n## placeholder\uff08\u4ee3\u5165\uff09\n\n```\n# Graphs\ninput1 = tf.placeholder(tf.float32)\ninput2 = tf.placeholder(tf.float32)\noutput = tf.mul(input1, input2)\n\n# Sessions\nwith tf.Session() as sess:\n  print(sess.run([output], feed_dict={input1:[7.], input2:[2.]}))\n# Output: [array([ 14.], dtype=float32)]\n```\n\ntf.placeholder(tf.float32)\u3067\u5024\u3092\u4ee3\u5165\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nrun([output], feed_dict={input1:[7.], input2:[2.]})\u3067\u3001\u4ee3\u5165\u3057\u3066\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u304a\u308f\u308a\u306b\nGraphs\u3092\u8a2d\u5b9a\u3057\u3066\u304b\u3089\u3001Sessions\u3067\u8a08\u7b97\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u6d41\u308c\u304c\u91cd\u8981\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u7c21\u5358\u306a\u30b3\u30fc\u30c9\u3060\u3068\u7279\u306b\u554f\u984c\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u8907\u96d1\u306a\u8a08\u7b97\u306b\u306a\u3063\u3066\u304f\u308b\u3068\u3069\u3046\u306a\u308b\u304b\u304c\u672a\u77e5\u6570\u3067\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3057\u3066\u8272\u3005\u3068\u8a66\u3057\u3066\u307f\u308b\u3068\u3055\u3089\u306b\u7406\u89e3\u304c\u6df1\u307e\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u307e\u3060\u52c9\u5f37\u4e2d\u306a\u306e\u3067\u9593\u9055\u3044\u304c\u3042\u3063\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u306b\u3054\u6307\u6458\u304f\u3060\u3055\u3044\u3002\n\u4eca\u5f8c\u3082TensorFlow\u306e\u4f7f\u3044\u65b9\u3092\u52c9\u5f37\u3057\u3066\u3044\u3063\u3066\u3001\u52a0\u7b46\u30fb\u4fee\u6b63\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["cloud9", "TensorFlow", "\u6a5f\u68b0\u5b66\u7fd2", "Python"]}