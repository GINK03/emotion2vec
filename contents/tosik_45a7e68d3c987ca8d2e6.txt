{"tags": ["ActionScript", "Robotlegs", "AdobeAIR", "flash", "mvc"], "context": " More than 1 year has passed since last update.Robotlegs2 (RL2) \u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4e0d\u8db3\u3068\u521d\u4ee3 Robotlegs \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u6df7\u5728\u3059\u308b\u305f\u3081\u5b66\u7fd2\u3057\u3065\u3089\u3044\u3068\u611f\u3058\u3001\u50d5\u306a\u308a\u306b\u5c0e\u5165\u90e8\u5206\u3092\u307e\u3068\u3081\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u6ce8\uff09\u3053\u306e\u8a18\u4e8b\u3067\u306f Robotlegs2 \u306e\u3053\u3068\u3092\u5358\u306b Robotlegs \u3068\u66f8\u3044\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\nhttp://www.robotlegs.org/\n\nRobotlegs \u306e\u52d5\u4f5c\u74b0\u5883\nRobotlegs \u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u74b0\u5883\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\nActionScript3.0 \u3092\u7528\u3044\u308b\nAdobe Flash\nFlex\nAdobe AIR\n\n\niOS/Android \u3084\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u74b0\u5883\u3067\u52d5\u304f\n\n\n\n\nRobotlegs \u306e\u57fa\u672c\u6982\u5ff5\nRobotlegs \u306f MVC \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\n\u7279\u5fb4\u3068\u8a00\u3048\u308b\u306e\u306f Dependency Injection (DI) \u3092\u7528\u3044\u305f\u5236\u5fa1\u306e\u53cd\u8ee2 (IoC) \u3067\u3057\u3087\u3046\u3002\n\nDependency Injection (DI)\nRobotlegs \u306e DI \u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\nFoo.as\npublic class Foo\n{\n    [Inject]\n    public var bar:Bar;\n}\n\n\n\nMain.as\nvar injector:Injector = new Injector;\n\n// map\ninjector.map(Bar).asSingleton();\n\n// inject\nvar foo:Foo = new Foo;\ninjector.injectInto(foo);\n\ntrace(foo.bar is Bar); // => true\n\n\n\u3053\u3053\u3067\u306f Bar \u30af\u30e9\u30b9\u3092\u300c\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u300d\u3068\u3057\u3066\u30a4\u30f3\u30b8\u30a7\u30af\u30bf\u306b\u767b\u9332\u3057\u3001\u305d\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30bf\u3067 Bar \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\nBar \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3053\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30bf\u3092\u7528\u3044\u3066\u4ed6\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u300c\u6ce8\u5165\u300d\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u3002\n\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u308b\u5148\u306e\u30e1\u30f3\u30d0\u306f [Inject] \u3068\u66f8\u304b\u308c\u305f\u30e1\u30f3\u30d0\u306e\u4e2d\u3067\u578b\uff08\u30af\u30e9\u30b9\u30fb\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\uff09\u304c\u4e00\u81f4\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n\nIoC with DI\n\u5236\u5fa1\u306e\u53cd\u8ee2 (IoC) \u3068\u306f\u3001\u300c\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u306e\u304d\u3063\u304b\u3051\u3092\u4f5c\u3063\u305f\u4eba\u306f\u3001\u5b9f\u884c\u3059\u308b\u30bf\u30b9\u30af\u3082\u77e5\u3063\u3066\u3044\u308b\u300d\u3068\u3044\u3046\u300c\u4f5c\u3063\u305f\u4eba\u300d\u304b\u3089\u300c\u30bf\u30b9\u30af\u300d\u3078\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u5207\u308a\u96e2\u3057\u3066\u300c\u30bf\u30b9\u30af\u306f\u3001\u4f55\u3005\u3092\u304d\u3063\u304b\u3051\u306b\u5b9f\u884c\u3059\u308b\u300d\u3068\u7f6e\u304d\u63db\u3048\u308b\u4f9d\u5b58\u95a2\u4fc2\u306e\u53cd\u8ee2\u3092\u6307\u3059\u8a00\u8449\u3067\u3059\u3002\n\u30bf\u30b9\u30af\u306b\u304b\u304e\u3089\u305a\u8272\u3005\u306a\u5236\u5fa1\u95a2\u4fc2\u3092\u53cd\u8ee2\u3059\u308b\u3053\u3068\u3082 IoC \u3068\u8a00\u3044\u307e\u3059\u3002\nRobotlegs \u306e Injector \u306e\u6a5f\u80fd\u3060\u3051\u3092\u5229\u7528\u3057\u305f IoC \u3067\u300c\u30e6\u30fc\u30b6\u540d\u304c\u5909\u66f4\u3055\u308c\u305f\u3089\u8868\u793a\u3059\u308b\u300d\u3068\u3044\u3046\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u53cd\u8ee2\u3055\u308c\u3066\u3044\u306a\u3044\u66f8\u304d\u65b9\n\nUser.as\npublic class User\n{\n    private var _printer:Printer = new Printer;\n    private var _name:String;\n    public function get name():String { return _name; }\n    public function set name(value:String):void\n    {\n        _name = value;\n        _printer.print(\"The user's name is \" + name + \".\");\n    }\n}\n\n\n\nMain.as\nvar user:User = new User();\nuser.name = \"Taro\"; // => \"The user's name is Taro.\"\n\n\n\u4e00\u5fdc\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u5b9f\u88c5\u3082\u77ed\u304f\u3066\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u3053\u308c\u3060\u3068\u5358\u306a\u308b User \u30af\u30e9\u30b9\u304c\u6587\u5b57\u3092\u8868\u793a\u3059\u308b\u6a5f\u80fd Printer \u3092\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3088\u306d\u3002\n\u3053\u306e\u4f9d\u5b58\u95a2\u4fc2\u306f\u3042\u307e\u308a\u826f\u304f\u306a\u3044\u306e\u3067\u3001DI \u3067\u5207\u308a\u96e2\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u5236\u5fa1\u306e\u53cd\u8ee2\u3092\u884c\u3063\u305f\u66f8\u304d\u65b9\n\nUser.as\npublic class User\n{\n    public const nameChanged:Signal = new Signal;\n    private var _name:String;\n    public function get name():String { return _name; }\n    public function set name(value:String):void\n    {\n        _name = value;\n        nameChanged.dispatch();\n    }\n}\n\n\n\nPrintUsernameCommand.as\npublic class PrintUsernameCommand\n{\n    [Inject]\n    public var user:User;\n\n    private var _printer:Printer = new Printer;\n\n    public function execute():void\n    {\n        _printer.print(\"The user's name is \" + user.name + \".\");\n    }\n}\n\n\n\nMain.as\n// configuration\nvar user:User = new User;\ninjector.map(User).toValue(user);\n\n// when user.name changed then print the name\nuser.nameChanged.add(function():void\n{\n    // command instantiation\n    var command:PrintUsernameCommand = new PrintUsernameCommand();\n    injector.injectInto(command);\n\n    // command execution\n    command.execute();\n});\n\nuser.name = \"Taro\"; // => \"The user's name is Taro.\"\n\n\n\u6ce8) as3signals \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059 http://qiita.com/tosik/items/2c1596abf3d43077fe6e\n\u304b\u306a\u308a\u8907\u96d1\u306b\u898b\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001User \u30af\u30e9\u30b9\u304c Printer \u30af\u30e9\u30b9\u3092\u77e5\u3089\u306a\u304f\u3066\u3088\u304f\u306a\u308a\u307e\u3057\u305f\u3002\nUser \u3068 PrintUsernameCommand \u306b\u5206\u96e2\u3057\u3001User#name \u306e\u5909\u66f4\u6642\u306b\u305d\u306e user \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u3068\u3057\u305f PrintUsernameCommand \u306e execute \u304c\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u305f\u3060\u3001\u4f9d\u5b58\u5206\u96e2\u304c\u884c\u3048\u3066\u3082 Main \u90e8\u5206\u304c\u96d1\u3060\u3057\u8a18\u8ff0\u91cf\u304c\u591a\u3044\u306e\u304c\u9762\u5012\u3067\u3059\u3002\n\u305d\u3053\u3067\u767b\u5834\u3059\u308b\u306e\u304c Robotlegs \u3067\u3059\u3002\uff08\u3055\u3063\u304d\u306e\u306f Robotlegs \u306e Injector \u3057\u304b\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\uff09\n\nRobotlegs \u306b\u3088\u308b MVC \u306e\u5b9f\u4f8b\n\u5148\u307b\u3069\u306e\u300c\u30e6\u30fc\u30b6\u540d\u304c\u5909\u66f4\u3055\u308c\u305f\u3089\u8868\u793a\u3059\u308b\u300d\u3092 MVC \u3067\u7d44\u307f\u7acb\u3066\u307e\u3057\u3087\u3046\u3002\n\u4eca\u56de\u306f Printer \u3092\u7528\u3044\u305a TextField \u3067\u540d\u524d\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\nModel\n\nUser.as\npublic class User\n{\n    public const nameChanged:Signal = new Signal;\n    private var _name:String;\n    public function get name():String { return _name; }\n    public function set name(value:String):void\n    {\n        _name = value;\n        nameChanged.dispatch();\n    }\n}\n\n\n\u30e2\u30c7\u30eb\u306f\u7279\u306b\u4f55\u3082\u7d99\u627f\u305b\u305a\u3001\u666e\u901a\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3092\u66f8\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\nView\n\nUserView.as\npublic class UserView extends Sprite\n{\n    private var _nameTextField:TextField;\n    public function UserView()\n    {\n        _nameTextField = new TextField;\n        addChild(_nameTextField);\n    }\n\n    public function changeName(name:String):void\n    {\n        _nameTextField.text = name;\n    }\n}\n\n\n\u30d3\u30e5\u30fc\u3082 Flash \u3089\u3057\u3044\u666e\u901a\u306e\u4f5c\u308a\u65b9\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\u4e00\u3064\u91cd\u8981\u306a\u306e\u306f UserView#changeName \u304c public \u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3067\u3059\u306d\u3002\n\nMediator\n\nUserViewMediator.as\npublic class UserViewMediator extends Mediator\n{\n    [Inject]\n    public var view:UserView;\n    [Inject]\n    public var user:User;\n\n    public override function initialize():void\n    {\n        user.nameChanged.add(changeView);\n    }\n\n    public override function destroy():void\n    {\n        user.nameChanged.remove(changeView);\n    }\n\n    public function changeView():void\n    {\n        view.changeName(user.name);\n    }\n}\n\n\n\u3053\u308c\u304c User \u3068 UserView \u306e\u4ef2\u4ecb\u3092\u884c\u3046\u30e1\u30c7\u30a3\u30a8\u30fc\u30bf\u3067\u3059\u3002\n\u300c\u30e6\u30fc\u30b6\u306e\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u305f\u300d\u3068\u3044\u3046\u304d\u3063\u304b\u3051\u3067\u300c\u30d3\u30e5\u30fc\u306b\u305d\u306e\u540d\u524d\u3092\u53cd\u6620\u3059\u308b\u300d\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u304c Model-View \u306e IoC \u306b\u304a\u3044\u3066\u6700\u3082\u91cd\u8981\u306a\u3082\u306e\u3067\u3059\u3002\n\nConfiguration\n\nMainConfig.as\npublic class MainConfig implements IConfig\n{\n    [Inject]\n    public var injector:IInjector;\n    [Inject]\n    public var mediatorMap:IMediatorMap;\n    [Inject]\n    public var contextView:ContextView;\n\n    public function configure():void\n    {\n        injector.map(User).asSingleton();\n        mediatorMap.map(UserView).toMeidator(UserViewMediator);\n\n        contextView.addChild(new UserView);\n    }\n}\n\n\n\u305d\u3057\u3066\u3053\u306e\u30af\u30e9\u30b9\u304c\u3001MVC \u306e\u767b\u5834\u4eba\u7269\u306e\u4f9d\u5b58\u95a2\u4fc2\u306e\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u6b21\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\nUser \u306f\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3067\u3042\u308b\nUserView \u306e\u5bfe\u306b\u306a\u308b\u30e1\u30c7\u30a3\u30a8\u30fc\u30bf\u306f UserViewMediator \u3067\u3042\u308b\n\n\nApplication\n\nApplication.as\npublic class Application extends Sprite\n{\n    public function Apllication()\n    {\n        var context:Context = new Context()\n            .install(MVCSBundle)\n            .configure(MainConfig)\n            .configure(ContextView(this))\n        context.initialize();\n    }\n}\n\n\n\u3053\u306e Application \u30af\u30e9\u30b9\u306f Flash \u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u7528\u306e\u30eb\u30fc\u30c8 Sprite \u3067\u3059\u3002\nRobotlegs \u306e\u521d\u671f\u5316\u306e\u304a\u6c7a\u307e\u308a\u306e\u66f8\u304d\u65b9\u3068\u306a\u308a\u307e\u3059\u3002\uff08\u62e1\u5f35\u3092\u5c0e\u5165\u3059\u308b\u3068\u304d\u306f\u3053\u306e\u8fba\u308a\u306b\u624b\u3092\u5165\u308c\u308b\uff09\n\u4ee5\u4e0a\u304c Robotlegs \u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3067\u3057\u305f\u3002\n\n\u52d5\u4f5c\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u4e2d\u304f\u3089\u3044\u306e\u30b5\u30a4\u30ba\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3068\u3057\u3066\u4f7f\u3048\u305d\u3046\u306a\u30b3\u30fc\u30c9\u3092 github \u306b\u4e0a\u3052\u3066\u3044\u307e\u3059\u3002\u5408\u308f\u305b\u3066\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/tosik/zenith\n\nRobotlegs2 (RL2) \u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4e0d\u8db3\u3068\u521d\u4ee3 Robotlegs \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u6df7\u5728\u3059\u308b\u305f\u3081\u5b66\u7fd2\u3057\u3065\u3089\u3044\u3068\u611f\u3058\u3001\u50d5\u306a\u308a\u306b\u5c0e\u5165\u90e8\u5206\u3092\u307e\u3068\u3081\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u6ce8\uff09\u3053\u306e\u8a18\u4e8b\u3067\u306f Robotlegs2 \u306e\u3053\u3068\u3092\u5358\u306b Robotlegs \u3068\u66f8\u3044\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\nhttp://www.robotlegs.org/\n\n## Robotlegs \u306e\u52d5\u4f5c\u74b0\u5883\nRobotlegs \u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u74b0\u5883\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\n* ActionScript3.0 \u3092\u7528\u3044\u308b\n* Adobe Flash\n* Flex\n* Adobe AIR\n  * iOS/Android \u3084\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u74b0\u5883\u3067\u52d5\u304f\n\n## Robotlegs \u306e\u57fa\u672c\u6982\u5ff5\nRobotlegs \u306f MVC \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\n\u7279\u5fb4\u3068\u8a00\u3048\u308b\u306e\u306f Dependency Injection (DI) \u3092\u7528\u3044\u305f\u5236\u5fa1\u306e\u53cd\u8ee2 (IoC) \u3067\u3057\u3087\u3046\u3002\n\n### Dependency Injection (DI)\n\nRobotlegs \u306e DI \u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n```as3:Foo.as\npublic class Foo\n{\n    [Inject]\n    public var bar:Bar;\n}\n```\n\n```as3:Main.as\nvar injector:Injector = new Injector;\n\n// map\ninjector.map(Bar).asSingleton();\n\n// inject\nvar foo:Foo = new Foo;\ninjector.injectInto(foo);\n\ntrace(foo.bar is Bar); // => true\n```\n\n\u3053\u3053\u3067\u306f Bar \u30af\u30e9\u30b9\u3092\u300c\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u300d\u3068\u3057\u3066\u30a4\u30f3\u30b8\u30a7\u30af\u30bf\u306b\u767b\u9332\u3057\u3001\u305d\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30bf\u3067 Bar \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\nBar \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3053\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30bf\u3092\u7528\u3044\u3066\u4ed6\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u300c\u6ce8\u5165\u300d\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u3002\n\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u308b\u5148\u306e\u30e1\u30f3\u30d0\u306f [Inject] \u3068\u66f8\u304b\u308c\u305f\u30e1\u30f3\u30d0\u306e\u4e2d\u3067\u578b\uff08\u30af\u30e9\u30b9\u30fb\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\uff09\u304c\u4e00\u81f4\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n\n### IoC with DI\n\u5236\u5fa1\u306e\u53cd\u8ee2 (IoC) \u3068\u306f\u3001\u300c\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u306e\u304d\u3063\u304b\u3051\u3092\u4f5c\u3063\u305f\u4eba\u306f\u3001\u5b9f\u884c\u3059\u308b\u30bf\u30b9\u30af\u3082\u77e5\u3063\u3066\u3044\u308b\u300d\u3068\u3044\u3046\u300c\u4f5c\u3063\u305f\u4eba\u300d\u304b\u3089\u300c\u30bf\u30b9\u30af\u300d\u3078\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u5207\u308a\u96e2\u3057\u3066\u300c\u30bf\u30b9\u30af\u306f\u3001\u4f55\u3005\u3092\u304d\u3063\u304b\u3051\u306b\u5b9f\u884c\u3059\u308b\u300d\u3068\u7f6e\u304d\u63db\u3048\u308b\u4f9d\u5b58\u95a2\u4fc2\u306e\u53cd\u8ee2\u3092\u6307\u3059\u8a00\u8449\u3067\u3059\u3002\n\u30bf\u30b9\u30af\u306b\u304b\u304e\u3089\u305a\u8272\u3005\u306a\u5236\u5fa1\u95a2\u4fc2\u3092\u53cd\u8ee2\u3059\u308b\u3053\u3068\u3082 IoC \u3068\u8a00\u3044\u307e\u3059\u3002\n\nRobotlegs \u306e Injector \u306e\u6a5f\u80fd\u3060\u3051\u3092\u5229\u7528\u3057\u305f IoC \u3067\u300c\u30e6\u30fc\u30b6\u540d\u304c\u5909\u66f4\u3055\u308c\u305f\u3089\u8868\u793a\u3059\u308b\u300d\u3068\u3044\u3046\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n#### \u53cd\u8ee2\u3055\u308c\u3066\u3044\u306a\u3044\u66f8\u304d\u65b9\n```as:User.as\npublic class User\n{\n    private var _printer:Printer = new Printer;\n    private var _name:String;\n    public function get name():String { return _name; }\n    public function set name(value:String):void\n    {\n        _name = value;\n        _printer.print(\"The user's name is \" + name + \".\");\n    }\n}\n```\n\n```as:Main.as\nvar user:User = new User();\nuser.name = \"Taro\"; // => \"The user's name is Taro.\"\n```\n\n\u4e00\u5fdc\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u5b9f\u88c5\u3082\u77ed\u304f\u3066\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u3053\u308c\u3060\u3068\u5358\u306a\u308b User \u30af\u30e9\u30b9\u304c\u6587\u5b57\u3092\u8868\u793a\u3059\u308b\u6a5f\u80fd Printer \u3092\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3088\u306d\u3002\n\u3053\u306e\u4f9d\u5b58\u95a2\u4fc2\u306f\u3042\u307e\u308a\u826f\u304f\u306a\u3044\u306e\u3067\u3001DI \u3067\u5207\u308a\u96e2\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n#### \u5236\u5fa1\u306e\u53cd\u8ee2\u3092\u884c\u3063\u305f\u66f8\u304d\u65b9\n\n```as:User.as\npublic class User\n{\n    public const nameChanged:Signal = new Signal;\n    private var _name:String;\n    public function get name():String { return _name; }\n    public function set name(value:String):void\n    {\n        _name = value;\n        nameChanged.dispatch();\n    }\n}\n```\n\n```as:PrintUsernameCommand.as\npublic class PrintUsernameCommand\n{\n    [Inject]\n    public var user:User;\n\n    private var _printer:Printer = new Printer;\n\n    public function execute():void\n    {\n        _printer.print(\"The user's name is \" + user.name + \".\");\n    }\n}\n```\n\n```as:Main.as\n// configuration\nvar user:User = new User;\ninjector.map(User).toValue(user);\n\n// when user.name changed then print the name\nuser.nameChanged.add(function():void\n{\n    // command instantiation\n    var command:PrintUsernameCommand = new PrintUsernameCommand();\n    injector.injectInto(command);\n\n    // command execution\n    command.execute();\n});\n\nuser.name = \"Taro\"; // => \"The user's name is Taro.\"\n```\n\n\u6ce8) as3signals \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059 http://qiita.com/tosik/items/2c1596abf3d43077fe6e\n\n\u304b\u306a\u308a\u8907\u96d1\u306b\u898b\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001User \u30af\u30e9\u30b9\u304c Printer \u30af\u30e9\u30b9\u3092\u77e5\u3089\u306a\u304f\u3066\u3088\u304f\u306a\u308a\u307e\u3057\u305f\u3002\nUser \u3068 PrintUsernameCommand \u306b\u5206\u96e2\u3057\u3001User#name \u306e\u5909\u66f4\u6642\u306b\u305d\u306e user \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u3068\u3057\u305f PrintUsernameCommand \u306e execute \u304c\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u305f\u3060\u3001\u4f9d\u5b58\u5206\u96e2\u304c\u884c\u3048\u3066\u3082 Main \u90e8\u5206\u304c\u96d1\u3060\u3057\u8a18\u8ff0\u91cf\u304c\u591a\u3044\u306e\u304c\u9762\u5012\u3067\u3059\u3002\n\u305d\u3053\u3067\u767b\u5834\u3059\u308b\u306e\u304c Robotlegs \u3067\u3059\u3002\uff08\u3055\u3063\u304d\u306e\u306f Robotlegs \u306e Injector \u3057\u304b\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\uff09\n\n## Robotlegs \u306b\u3088\u308b MVC \u306e\u5b9f\u4f8b\n\u5148\u307b\u3069\u306e\u300c\u30e6\u30fc\u30b6\u540d\u304c\u5909\u66f4\u3055\u308c\u305f\u3089\u8868\u793a\u3059\u308b\u300d\u3092 MVC \u3067\u7d44\u307f\u7acb\u3066\u307e\u3057\u3087\u3046\u3002\n\u4eca\u56de\u306f Printer \u3092\u7528\u3044\u305a TextField \u3067\u540d\u524d\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\n### Model\n```as:User.as\npublic class User\n{\n    public const nameChanged:Signal = new Signal;\n    private var _name:String;\n    public function get name():String { return _name; }\n    public function set name(value:String):void\n    {\n        _name = value;\n        nameChanged.dispatch();\n    }\n}\n```\n\u30e2\u30c7\u30eb\u306f\u7279\u306b\u4f55\u3082\u7d99\u627f\u305b\u305a\u3001\u666e\u901a\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3092\u66f8\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n### View\n```as:UserView.as\npublic class UserView extends Sprite\n{\n    private var _nameTextField:TextField;\n    public function UserView()\n    {\n        _nameTextField = new TextField;\n        addChild(_nameTextField);\n    }\n\n    public function changeName(name:String):void\n    {\n        _nameTextField.text = name;\n    }\n}\n```\n\u30d3\u30e5\u30fc\u3082 Flash \u3089\u3057\u3044\u666e\u901a\u306e\u4f5c\u308a\u65b9\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\u4e00\u3064\u91cd\u8981\u306a\u306e\u306f UserView#changeName \u304c public \u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3067\u3059\u306d\u3002\n\n### Mediator\n```as:UserViewMediator.as\npublic class UserViewMediator extends Mediator\n{\n    [Inject]\n    public var view:UserView;\n    [Inject]\n    public var user:User;\n\n    public override function initialize():void\n    {\n        user.nameChanged.add(changeView);\n    }\n\n    public override function destroy():void\n    {\n        user.nameChanged.remove(changeView);\n    }\n\n    public function changeView():void\n    {\n        view.changeName(user.name);\n    }\n}\n```\n\u3053\u308c\u304c User \u3068 UserView \u306e\u4ef2\u4ecb\u3092\u884c\u3046\u30e1\u30c7\u30a3\u30a8\u30fc\u30bf\u3067\u3059\u3002\n\u300c\u30e6\u30fc\u30b6\u306e\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u305f\u300d\u3068\u3044\u3046\u304d\u3063\u304b\u3051\u3067\u300c\u30d3\u30e5\u30fc\u306b\u305d\u306e\u540d\u524d\u3092\u53cd\u6620\u3059\u308b\u300d\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u304c Model-View \u306e IoC \u306b\u304a\u3044\u3066\u6700\u3082\u91cd\u8981\u306a\u3082\u306e\u3067\u3059\u3002\n\n### Configuration\n```as:MainConfig.as\npublic class MainConfig implements IConfig\n{\n    [Inject]\n    public var injector:IInjector;\n    [Inject]\n    public var mediatorMap:IMediatorMap;\n    [Inject]\n    public var contextView:ContextView;\n\n    public function configure():void\n    {\n        injector.map(User).asSingleton();\n        mediatorMap.map(UserView).toMeidator(UserViewMediator);\n\n        contextView.addChild(new UserView);\n    }\n}\n```\n\u305d\u3057\u3066\u3053\u306e\u30af\u30e9\u30b9\u304c\u3001MVC \u306e\u767b\u5834\u4eba\u7269\u306e\u4f9d\u5b58\u95a2\u4fc2\u306e\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u6b21\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n* User \u306f\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3067\u3042\u308b\n* UserView \u306e\u5bfe\u306b\u306a\u308b\u30e1\u30c7\u30a3\u30a8\u30fc\u30bf\u306f UserViewMediator \u3067\u3042\u308b\n\n### Application\n```as:Application.as\npublic class Application extends Sprite\n{\n    public function Apllication()\n    {\n        var context:Context = new Context()\n            .install(MVCSBundle)\n            .configure(MainConfig)\n            .configure(ContextView(this))\n        context.initialize();\n    }\n}\n```\n\n\u3053\u306e Application \u30af\u30e9\u30b9\u306f Flash \u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u7528\u306e\u30eb\u30fc\u30c8 Sprite \u3067\u3059\u3002\nRobotlegs \u306e\u521d\u671f\u5316\u306e\u304a\u6c7a\u307e\u308a\u306e\u66f8\u304d\u65b9\u3068\u306a\u308a\u307e\u3059\u3002\uff08\u62e1\u5f35\u3092\u5c0e\u5165\u3059\u308b\u3068\u304d\u306f\u3053\u306e\u8fba\u308a\u306b\u624b\u3092\u5165\u308c\u308b\uff09\n\n\u4ee5\u4e0a\u304c Robotlegs \u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3067\u3057\u305f\u3002\n\n\n## \u52d5\u4f5c\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u4e2d\u304f\u3089\u3044\u306e\u30b5\u30a4\u30ba\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3068\u3057\u3066\u4f7f\u3048\u305d\u3046\u306a\u30b3\u30fc\u30c9\u3092 github \u306b\u4e0a\u3052\u3066\u3044\u307e\u3059\u3002\u5408\u308f\u305b\u3066\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/tosik/zenith\n"}