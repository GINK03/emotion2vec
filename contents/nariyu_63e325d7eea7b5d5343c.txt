{"context": " More than 1 year has passed since last update.MongoDB \u306b\u306f\u9023\u756a\u306e\u30e6\u30cb\u30fc\u30af\u306a ID \u3092\u3064\u3051\u308b\u4ed5\u7d44\u307f\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u306a\u306e\u3067\u81ea\u5206\u3067\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f User \u30b9\u30ad\u30fc\u30de\u306b\u9023\u756a\u3067 id \u3092\u3064\u3051\u308b\u4f8b\u3067\u3059\u3002(mongoose 3.8.8\u4ee5\u964d)\n\nmodels.coffee\n# \u30e2\u30b8\u30e5\u30fc\u30eb\u3044\u308d\u3044\u308d\nmongoose = require 'mongoose'\nSchema   = mongoose.Schema\nObjectId = mongoose.Schema.ObjectId\n\n\n###\n  \u30b7\u30fc\u30b1\u30f3\u30b9\n###\nSequenceSchema = new Schema\n  name: { type: String }\n  seq:  { type: Number }\nSequenceSchema.index { name: 1 }\nSequence = db.model('Sequence', SequenceSchema)\n\n\n###\n  \u30e6\u30fc\u30b6\u30b9\u30ad\u30fc\u30de\n###\nUserSchema = new Schema\n  id:   { type: Number, unique: true }\n  name: { type: String }\n\n# Middleware  \u3053\u3053\u304c\u30dd\u30a4\u30f3\u30c8\uff01\nUserSchema.pre 'save', (next)->\n\n  return next() unless @isNew\n\n  conditions = name: model.collection.name\n  update     = $inc: { seq: 1 }\n  options    = upsert: true\n  Sequence.findOneAndUpdate conditions, update, options, (err, data)=>\n    if !err and data\n      @id = data.seq\n      next()\n    else\n      next(err || data)\n\n\n\u3053\u306e\u3088\u3046\u306b Middleware (Pre) \u3092\u30bb\u30c3\u30c8\u3057\u3066\u304a\u304f\u3068\u3001\n\napp.coffee\nuser = new User name: 'nariyu'\nuser.save()\n\n\n\u3068\u3059\u308b\u3060\u3051\u3067\u3001\u9023\u756a\u3067 id \u304c\u4ed8\u304d\u307e\u3059\u3002\n\u3053\u3061\u3089\u304b\u3089\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\nMongoDB \u306b\u306f\u9023\u756a\u306e\u30e6\u30cb\u30fc\u30af\u306a ID \u3092\u3064\u3051\u308b\u4ed5\u7d44\u307f\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u306a\u306e\u3067\u81ea\u5206\u3067\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306f User \u30b9\u30ad\u30fc\u30de\u306b\u9023\u756a\u3067 id \u3092\u3064\u3051\u308b\u4f8b\u3067\u3059\u3002(mongoose 3.8.8\u4ee5\u964d)\n\n```coffeescript:models.coffee\n# \u30e2\u30b8\u30e5\u30fc\u30eb\u3044\u308d\u3044\u308d\nmongoose = require 'mongoose'\nSchema   = mongoose.Schema\nObjectId = mongoose.Schema.ObjectId\n\n\n###\n  \u30b7\u30fc\u30b1\u30f3\u30b9\n###\nSequenceSchema = new Schema\n  name: { type: String }\n  seq:  { type: Number }\nSequenceSchema.index { name: 1 }\nSequence = db.model('Sequence', SequenceSchema)\n\n\n###\n  \u30e6\u30fc\u30b6\u30b9\u30ad\u30fc\u30de\n###\nUserSchema = new Schema\n  id:   { type: Number, unique: true }\n  name: { type: String }\n\n# Middleware  \u3053\u3053\u304c\u30dd\u30a4\u30f3\u30c8\uff01\nUserSchema.pre 'save', (next)->\n\n  return next() unless @isNew\n\n  conditions = name: model.collection.name\n  update     = $inc: { seq: 1 }\n  options    = upsert: true\n  Sequence.findOneAndUpdate conditions, update, options, (err, data)=>\n    if !err and data\n      @id = data.seq\n      next()\n    else\n      next(err || data)\n```\n\n\u3053\u306e\u3088\u3046\u306b Middleware (Pre) \u3092\u30bb\u30c3\u30c8\u3057\u3066\u304a\u304f\u3068\u3001\n\n```coffeescript:app.coffee\nuser = new User name: 'nariyu'\nuser.save()\n```\n\n\u3068\u3059\u308b\u3060\u3051\u3067\u3001\u9023\u756a\u3067 id \u304c\u4ed8\u304d\u307e\u3059\u3002\n\n\u3053\u3061\u3089\u304b\u3089\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n", "tags": ["MongoDB", "mongoose", "Node.js"]}