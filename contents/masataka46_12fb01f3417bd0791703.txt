{"context": "\u74b0\u5883\uff1a\nCPU:Corei7 6700K\nGPU:GTX1070\nSSD:240GB\nHDD:1TB\n\u30de\u30b6\u30fc\u30dc\u30fc\u30c9:ASUS H170-pro\nOS:Ubuntu14.04 LTS\npython:2.7.6\nCUDA:8.0 RC\ncuDNN:5.1\n\u306a\u3069\n\u904e\u53bb\uff13\u56de\u3067\u3001Ubuntu14.04\u3001CUDA\u3001chainer\u3001dqn\u3001LIS\u3092\u9806\u6b21\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3002\nhttp://qiita.com/masataka46/items/94417a5974dba810e7b8\nhttp://qiita.com/masataka46/items/fddef236cb211ef3f145\nhttp://qiita.com/masataka46/items/125c7900ec8ca83f6eb2\n\u305f\u3060\u3057\u3001Unity\u304c\u3046\u307e\u304f\u7acb\u3061\u4e0a\u304c\u3089\u306a\u3044\u305f\u3081\u3001\u6700\u5f8c\u306eLIS\u74b0\u5883\u69cb\u7bc9\u306f\u5b8c\u4e86\u3057\u3066\u3044\u306a\u3044\u3002\u3057\u304b\u3057\u5148\u3092\u6025\u3050\u3002\n\u6b21\u306fTensorFlow\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\nTensorFlow\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nhttps://www.tensorflow.org/versions/r0.10/get_started/os_setup.html#download-and-setup\n\u306b\u5f93\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\u307e\u305a\u3001The GPU version (Linux only) works best with Cuda Toolkit 7.5 and cuDNN v4. other versions are supported (Cuda toolkit >= 7.0 and cuDNN 6.5(v2), 7.0(v3), v5) only when installing from sources.\u3060\u305d\u3046\u3002\u9762\u5012\u304f\u3055\u304f\u306a\u308a\u305d\u3046\u3002\n\nGitHub\u304b\u3089source\u3092\u30b2\u30c3\u30c8\u3059\u308b\n\u307e\u305a\u3001GitHub\u304b\u3089source\u3092clone\u3059\u308b\u3002\ngit clone https://github.com/tensorflow/tensorflow\n\n\nBazel\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\u6b21\u306bBazel\u3068\u3044\u3046\u3082\u306e\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\u307e\u305a\u516c\u5f0f\u30b5\u30a4\u30c8\nhttps://www.bazel.io/versions/master/docs/install.html\n\u3092\u53c2\u8003\u306b\u9032\u3081\u308b\u3002\ndependencies\u3068\u3057\u3066Java JDK8\u3068\u3044\u3082\u306e\u304c\u5fc5\u8981\u306a\u3088\u3046\u3060\u3002\u305d\u3053\u3067\u3053\u3053\nhttp://qiita.com/niusounds/items/1f32dcd6fa1f57ade98a\n\u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\nsudo apt-get install python-software-properties\nsudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install oracle-java8-installer\n\n\u6b21\u306bBazel\u306eURI\u3092\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u307f\u305f\u3044\u3002\necho \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list\ncurl https://storage.googleapis.com/bazel-apt/doc/apt-key.pub.gpg | sudo apt-key add -\n\n\u3088\u3046\u3084\u304fBazel\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\u76f4\u5f8c\u306bupdate\u3082\u884c\u3046\u3002\nsudo apt-get update && sudo apt-get install bazel\nsudo apt-get upgrade bazel\n\n\u3088\u304f\u3088\u304fTensorFlow\u306eHP\u3092\u8aad\u3080\u3068\u3001Bazel\u306fInstaller\u3092\u4f7f\u3048\u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u3002\u307e\u3041\u3001\u3053\u306e\u3078\u3093\u306f\u6c17\u306b\u305b\u305a\u306b\u9032\u3080\u3002\n\n\u4ed6\u306edependencies\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\nHP\u306e\u307e\u307e\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3064\u3002numpy\u3068\u304b\u5165\u3063\u3066\u308b\u306f\u305a\u3060\u304c\u6c17\u306b\u3057\u306a\u3044\u3002\nsudo apt-get install python-numpy swig python-dev python-wheel\n\n\u3053\u306e\u3042\u3068CUDA\u3068cuDNN\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u304c\u3001\u3053\u306e\u3078\u3093\u306f\u65e2\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u5272\u611b\u3002\n\nConfigure\u3092\u5b9f\u884c\u3059\u308b\ntensorflow\u306eroot\u306b\u3042\u308bconfigure\u3092\u5b9f\u884c\u3059\u308b\u3002\n./configure\nPlease specify the location of python. [Default is /usr/bin/python]: \nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] N\nNo Google Cloud Platform support will be enabled for TensorFlow\nFound possible Python library paths:\n  /home/ohmasa/python-codec/src\n  /usr/local/lib/python2.7/dist-packages\n  /usr/lib/python2.7/dist-packages\nPlease input the desired Python library path to use.  Default is [/home/ohmasa/python-codec/src]\n/usr/local/lib/python2.7/dist-packages\nDo you wish to build TensorFlow with GPU support? [y/N] y\nGPU support will be enabled for TensorFlow\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: \nPlease specify the Cuda SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: \nPlease specify the location where CUDA  toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /usr/local/cuda-8.0\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: \nPlease specify the location where cuDNN  library is installed. Refer to README.md for more details. [Default is /usr/local/cuda-8.0]: \nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.\nDefault is: \"3.5,5.2\": 3.5,6.1\n\n\u306a\u3093\u304b\u3044\u308d\u3044\u308d\u805e\u3044\u3066\u304d\u305f\u3002\n\u307e\u305aPython library paths\u3092\u3069\u3053\u306b\u3059\u308b\u304b\u60a9\u307e\u3057\u3044\u3002cython\u3068\u304bnumpy\u3068\u304b\u8abf\u3079\u305f\u3089/usr/local/lib/\u30fb\u30fb\u30fb\u3063\u307d\u3044\u306e\u3067\u3001\u305d\u308c\u3092\u5165\u529b\u3002\n\u6b21\u306bCuda\u306eSDK\u30f4\u30a1\u30fc\u30b8\u30e7\u30f3\u3092\u5165\u529b\u3059\u3079\u304d\u304b\u3069\u3046\u304b\u30028.0\u3060\u304c\u3001default\u3067system default\u3092\u4f7f\u3046\u3001\u3068\u3042\u308b\u306e\u3067\u3001enter\u62bc\u3057\u3066\u305d\u308c\u306b\u3059\u308b\u3002\n\u6b21\u306bcuda\u306elocation\u3002default\u306f/usr/local/cuda\u3060\u304c\u3001PATH\u306b\u3042\u308b\u306e\u306f/usr/local/cuda-8.0\u306a\u306e\u3067\u3001\u305d\u3061\u3089\u306b\u3057\u3066\u307f\u308b\u3002\n\u6700\u5f8c\u306bcuda compute capability\u3002nVIDIA\u306eHP\u3067\u8abf\u3079\u305f\u30896.1\u306a\u306e\u3060\u304c\u3001\u66f8\u304d\u65b9\u306e\u4f8b\u306f3.5,5.2\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u3068\u308a\u3042\u3048\u305a3.5,6.1\u306b\u3057\u3066\u307f\u308b\u3002\n\u7d50\u679c\u3001\nAll external dependencies fetched successfully.\nConfiguration finished\n\n\u3068\u8868\u793a\u3055\u308c\u305f\u306e\u3067\u3001\u3046\u307e\u304f\u3044\u3063\u305f\u304b\uff1f\n\n\u30d3\u30eb\u30c9\u3059\u308b\n\u6b21\u306fGPU\u30f4\u30a1\u30fc\u30b8\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3092\u3059\u308b\u3002\nbazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer\n\n\u3068\u3057\u305f\u3068\u3053\u308d\u3001\n/home/ohmasa/tensorflow/tensorflow/tensorflow/core/kernels/BUILD:878:1: undeclared inclusion(s) in rule '//tensorflow/core/kernels:crop_and_resize_op_gpu':\nthis rule is missing dependency declarations for the following files included by 'tensorflow/core/kernels/crop_and_resize_op_gpu.cu.cc':\n  '/usr/local/cuda-8.0/include/cuda_runtime.h'\n  '/usr/local/cuda-8.0/include/host_config.h'\n  '/usr/local/cuda-8.0/include/builtin_types.h'\n\n\u306a\u3069\u3068/usr/loca/cude-8.0/include/\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u591a\u304f\u8868\u793a\u3055\u308c\u3001\u6700\u5f8c\u306b\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.\nTarget //tensorflow/cc:tutorials_example_trainer failed to build\nUse --verbose_failures to see the command lines of failed build steps.\n\n\u3068\u51fa\u305f\u3002\u5931\u6557\u3057\u305f\u539f\u56e0\u306fcuda\u306ePATH\u304c\u304a\u304b\u3057\u3044\u3053\u3068\u3060\u308d\u3046\u304b\uff1f\n\u305d\u3053\u3067\u518d\u5ea6location of cuda\u3092default\u306e/usr/local/cuda\u306b\u3057\u3066./configure\u3057\u3001build\u3092\u5b9f\u884c\u3002\u3057\u304b\u3057\u3001\u305d\u308c\u3082\u30c0\u30e1\u3002\n\u4eca\u5ea6\u306fcuda\u306ePATH\u3092\u518d\u3073/usr/local/cuda-8.0\u306b\u3057\u3001cuda\u306e\u30f4\u30a1\u30fc\u30b8\u30e7\u30f3\u30928.0\u3068\u6307\u5b9a\u3057\u305f\u3068\u3053\u308d\u3001\u9014\u4e2d\u3067nvcc\u3067warning\u304c\u3044\u3063\u3071\u3044\u51fa\u305f\u304c\u3001\u306a\u3093\u3068\u304bError\u7121\u304f\u7d42\u4e86\u3002\u6700\u7d42\u7684\u306a\u5165\u529b\u9805\u76ee\u306f\u3053\u308c\u3002\nohmasa@ohmasa-com:~/tensorflow/tensorflow$ ./configure\nPlease specify the location of python. [Default is /usr/bin/python]: \nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] N\nNo Google Cloud Platform support will be enabled for TensorFlow\nFound possible Python library paths:\n  /home/ohmasa/python-codec/src\n  /usr/local/lib/python2.7/dist-packages\n  /usr/lib/python2.7/dist-packages\nPlease input the desired Python library path to use.  Default is [/home/ohmasa/python-codec/src]\n/usr/local/lib/python2.7/dist-packages\nDo you wish to build TensorFlow with GPU support? [y/N] y\nGPU support will be enabled for TensorFlow\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: \nPlease specify the Cuda SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0\nPlease specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /usr/local/cuda-8.0\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: 5.0\nPlease specify the location where cuDNN 5.0 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda-8.0]: \nInvalid path to cuDNN  toolkit. Neither of the following two files can be found:\n/usr/local/cuda-8.0/lib64/libcudnn.so.5.0\n/usr/local/cuda-8.0/libcudnn.so.5.0\n.5.0\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: 5.1\nPlease specify the location where cuDNN 5.1 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda-8.0]: \nInvalid path to cuDNN  toolkit. Neither of the following two files can be found:\n/usr/local/cuda-8.0/lib64/libcudnn.so.5.1\n/usr/local/cuda-8.0/libcudnn.so.5.1\n.5.1\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: \nPlease specify the location where cuDNN  library is installed. Refer to README.md for more details. [Default is /usr/local/cuda-8.0]: \nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.Default is: \"3.5,5.2\": 3.5,6.1\n\n\u6700\u5f8c\u306bexample\u3092\u8d70\u3089\u305b\u308b\u3002\nbazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu\n\n\u3059\u308b\u3068\u3001\n000003/000000 lambda = 2.000000 x = [0.894427 -0.447214] y = [1.788854 -0.894427]\n000000/000006 lambda = 2.000000 x = [0.894427 -0.447214] y = [1.788854 -0.894427]\n000009/000001 lambda =      nan x = [     nan      nan] y = [     nan      nan]\n000000/000007 lambda =      nan x = [     nan      nan] y = [     nan      nan]\n000007/000002 lambda =      nan x = [     nan      nan] y = [     nan      nan]\n000007/000002 lambda =      nan x = [     nan      nan] y = [     nan      nan]\n000000/000007 lambda =      nan x = [     nan      nan] y = [     nan      nan]\n000000/000007 lambda =      nan x = [     nan      nan] y = [     nan      nan]\n\n\u306a\u3069\u3068nan\u304c\u3044\u3063\u3071\u3044\u8868\u793a\u3055\u308c\u305f\u304c\u3001\u6c17\u306b\u3057\u306a\u3044\u3002\n\npip\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u6b21\u306bpip\u30d1\u30c3\u30b1\u30fc\u30b8\u3092create\u3057\u3066\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3089\u3057\u3044\u3002\nbazel build -c opt //tensorflow/tools/pip_package:build_pip_package\n\n\u3068\u3057\u305f\u5f8c\u3067\u3001\u305d\u306e\u4e0b\u306eGPU\u30f4\u30a1\u30fc\u30b8\u30e7\u30f3\u306e\u30b3\u30de\u30f3\u30c9\u306b\u6c17\u3065\u3044\u3066\nbazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\n\n\u3068\u3057\u305f\u3002\u66f4\u306b\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3064\u3002\nbazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n\n\u3059\u308b\u3068\u3001\npip_package /tmp/tensorflow_pkg\n2016\u5e74 9\u6708 5\u65e5 \u6708\u66dc\u65e5 05:39:57 JST : === Using tmpdir: /tmp/tmp.4VdylwFmKc\n/tmp/tmp.4VdylwFmKc ~/tensorflow/tensorflow\n2016\u5e74 9\u6708 5\u65e5 \u6708\u66dc\u65e5 05:39:57 JST : === Building wheel\n~/tensorflow/tensorflow\n2016\u5e74 9\u6708 5\u65e5 \u6708\u66dc\u65e5 05:40:22 JST : === Output wheel file is in: /tmp/tensorflow_pkg\n\n\u306a\u3069\u3068\u8868\u793a\u3055\u308c\u305f\u3002\u6700\u5f8c\u306b\nsudo pip install /tmp/tensorflow_pkg/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl\n\n\u3068\u3059\u308b\u3068\u3001\u307e\u305f\u307e\u305fwarning\u306f\u51fa\u3066\u308b\u304csuccessfully installed\u3068\u51fa\u305f\u306e\u3067\u6c17\u306b\u3057\u306a\u3044\u3002\n\n\u30c6\u30b9\u30c8\u3059\u308b\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u51fa\u6765\u3066\u308b\u304b\u3069\u3046\u304b\u3001HP\u306e\u6307\u793a\u306b\u5f93\u3063\u3066\u30c6\u30b9\u30c8\u3059\u308b\u3002\ncd tensorflow/models/image/mnist\npython convolutional.py\n\n\u3068\u3057\u305f\u3068\u3053\u308d\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u305f\u3002\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so.8.0 locally\nSuccessfully downloaded train-images-idx3-ubyte.gz 9912422 bytes.\nSuccessfully downloaded train-labels-idx1-ubyte.gz 28881 bytes.\nSuccessfully downloaded t10k-images-idx3-ubyte.gz 1648877 bytes.\nSuccessfully downloaded t10k-labels-idx1-ubyte.gz 4542 bytes.\nExtracting data/train-images-idx3-ubyte.gz\nExtracting data/train-labels-idx1-ubyte.gz\nExtracting data/t10k-images-idx3-ubyte.gz\nExtracting data/t10k-labels-idx1-ubyte.gz\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties: \nname: GeForce GTX 1070\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.797\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 7.56GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\nInitialized!\nStep 0 (epoch 0.00), 6.4 ms\nMinibatch loss: 12.054, learning rate: 0.010000\nMinibatch error: 90.6%\nValidation error: 84.6%\nStep 100 (epoch 0.12), 6.1 ms\nMinibatch loss: 3.300, learning rate: 0.010000\nMinibatch error: 6.2%\nValidation error: 6.9%\nStep 200 (epoch 0.23), 5.7 ms\nMinibatch loss: 3.469, learning rate: 0.010000\nMinibatch error: 12.5%\nValidation error: 3.8%\nStep 300 (epoch 0.35), 5.8 ms\nMinibatch loss: 3.214, learning rate: 0.010000\nMinibatch error: 6.2%\nValidation error: 3.1%\nStep 400 (epoch 0.47), 5.9 ms\nMinibatch loss: 3.183, learning rate: 0.010000\nMinibatch error: 7.8%\nValidation error: 2.7%\n\u30fb\u30fb\u30fb\n\ndevice\u304c\uff10\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u6c17\u306b\u306a\u308b\u304c\u3001GeForce GTX 1070\u3068\u51fa\u3066\u308b\u306e\u3067\u3001\u3061\u3083\u3093\u3068GPU\u304c\u7a3c\u50cd\u3057\u3066\u308b\u306e\u304b\uff1f\n\u74b0\u5883\uff1a\nCPU:Corei7 6700K\nGPU:GTX1070\nSSD:240GB\nHDD:1TB\n\u30de\u30b6\u30fc\u30dc\u30fc\u30c9:ASUS H170-pro\nOS:Ubuntu14.04 LTS\npython:2.7.6\nCUDA:8.0 RC\ncuDNN:5.1\n\u306a\u3069\n\n\u904e\u53bb\uff13\u56de\u3067\u3001Ubuntu14.04\u3001CUDA\u3001chainer\u3001dqn\u3001LIS\u3092\u9806\u6b21\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3002\nhttp://qiita.com/masataka46/items/94417a5974dba810e7b8\nhttp://qiita.com/masataka46/items/fddef236cb211ef3f145\nhttp://qiita.com/masataka46/items/125c7900ec8ca83f6eb2\n\u305f\u3060\u3057\u3001Unity\u304c\u3046\u307e\u304f\u7acb\u3061\u4e0a\u304c\u3089\u306a\u3044\u305f\u3081\u3001\u6700\u5f8c\u306eLIS\u74b0\u5883\u69cb\u7bc9\u306f\u5b8c\u4e86\u3057\u3066\u3044\u306a\u3044\u3002\u3057\u304b\u3057\u5148\u3092\u6025\u3050\u3002\n\n\u6b21\u306fTensorFlow\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n##TensorFlow\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nhttps://www.tensorflow.org/versions/r0.10/get_started/os_setup.html#download-and-setup\n\u306b\u5f93\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\n\u307e\u305a\u3001The GPU version (Linux only) works best with Cuda Toolkit 7.5 and cuDNN v4. other versions are supported (Cuda toolkit >= 7.0 and cuDNN 6.5(v2), 7.0(v3), v5) only when installing from sources.\u3060\u305d\u3046\u3002\u9762\u5012\u304f\u3055\u304f\u306a\u308a\u305d\u3046\u3002\n\n\n##GitHub\u304b\u3089source\u3092\u30b2\u30c3\u30c8\u3059\u308b\n\u307e\u305a\u3001GitHub\u304b\u3089source\u3092clone\u3059\u308b\u3002\n\n\n```\ngit clone https://github.com/tensorflow/tensorflow\n```\n\n##Bazel\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\u6b21\u306bBazel\u3068\u3044\u3046\u3082\u306e\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\u307e\u305a\u516c\u5f0f\u30b5\u30a4\u30c8\nhttps://www.bazel.io/versions/master/docs/install.html\n\u3092\u53c2\u8003\u306b\u9032\u3081\u308b\u3002\n\ndependencies\u3068\u3057\u3066Java JDK8\u3068\u3044\u3082\u306e\u304c\u5fc5\u8981\u306a\u3088\u3046\u3060\u3002\u305d\u3053\u3067\u3053\u3053\nhttp://qiita.com/niusounds/items/1f32dcd6fa1f57ade98a\n\u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\n```\nsudo apt-get install python-software-properties\nsudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install oracle-java8-installer\n```\n\u6b21\u306bBazel\u306eURI\u3092\u30d1\u30c3\u30b1\u30fc\u30b8\u30bd\u30fc\u30b9\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u307f\u305f\u3044\u3002\n\n```\necho \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | sudo tee /etc/apt/sources.list.d/bazel.list\ncurl https://storage.googleapis.com/bazel-apt/doc/apt-key.pub.gpg | sudo apt-key add -\n```\n\n\u3088\u3046\u3084\u304fBazel\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\u76f4\u5f8c\u306bupdate\u3082\u884c\u3046\u3002\n\n```\nsudo apt-get update && sudo apt-get install bazel\nsudo apt-get upgrade bazel\n```\n\u3088\u304f\u3088\u304fTensorFlow\u306eHP\u3092\u8aad\u3080\u3068\u3001Bazel\u306fInstaller\u3092\u4f7f\u3048\u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u3002\u307e\u3041\u3001\u3053\u306e\u3078\u3093\u306f\u6c17\u306b\u305b\u305a\u306b\u9032\u3080\u3002\n\n##\u4ed6\u306edependencies\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\nHP\u306e\u307e\u307e\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3064\u3002numpy\u3068\u304b\u5165\u3063\u3066\u308b\u306f\u305a\u3060\u304c\u6c17\u306b\u3057\u306a\u3044\u3002\n\n```\nsudo apt-get install python-numpy swig python-dev python-wheel\n```\n\u3053\u306e\u3042\u3068CUDA\u3068cuDNN\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u304c\u3001\u3053\u306e\u3078\u3093\u306f\u65e2\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u5272\u611b\u3002\n\n##Configure\u3092\u5b9f\u884c\u3059\u308b\ntensorflow\u306eroot\u306b\u3042\u308bconfigure\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n```\n./configure\nPlease specify the location of python. [Default is /usr/bin/python]: \nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] N\nNo Google Cloud Platform support will be enabled for TensorFlow\nFound possible Python library paths:\n  /home/ohmasa/python-codec/src\n  /usr/local/lib/python2.7/dist-packages\n  /usr/lib/python2.7/dist-packages\nPlease input the desired Python library path to use.  Default is [/home/ohmasa/python-codec/src]\n/usr/local/lib/python2.7/dist-packages\nDo you wish to build TensorFlow with GPU support? [y/N] y\nGPU support will be enabled for TensorFlow\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: \nPlease specify the Cuda SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: \nPlease specify the location where CUDA  toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /usr/local/cuda-8.0\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: \nPlease specify the location where cuDNN  library is installed. Refer to README.md for more details. [Default is /usr/local/cuda-8.0]: \nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.\nDefault is: \"3.5,5.2\": 3.5,6.1\n```\n\u306a\u3093\u304b\u3044\u308d\u3044\u308d\u805e\u3044\u3066\u304d\u305f\u3002\n\n\u307e\u305aPython library paths\u3092\u3069\u3053\u306b\u3059\u308b\u304b\u60a9\u307e\u3057\u3044\u3002cython\u3068\u304bnumpy\u3068\u304b\u8abf\u3079\u305f\u3089/usr/local/lib/\u30fb\u30fb\u30fb\u3063\u307d\u3044\u306e\u3067\u3001\u305d\u308c\u3092\u5165\u529b\u3002\n\n\u6b21\u306bCuda\u306eSDK\u30f4\u30a1\u30fc\u30b8\u30e7\u30f3\u3092\u5165\u529b\u3059\u3079\u304d\u304b\u3069\u3046\u304b\u30028.0\u3060\u304c\u3001default\u3067system default\u3092\u4f7f\u3046\u3001\u3068\u3042\u308b\u306e\u3067\u3001enter\u62bc\u3057\u3066\u305d\u308c\u306b\u3059\u308b\u3002\n\n\u6b21\u306bcuda\u306elocation\u3002default\u306f/usr/local/cuda\u3060\u304c\u3001PATH\u306b\u3042\u308b\u306e\u306f/usr/local/cuda-8.0\u306a\u306e\u3067\u3001\u305d\u3061\u3089\u306b\u3057\u3066\u307f\u308b\u3002\n\n\u6700\u5f8c\u306bcuda compute capability\u3002nVIDIA\u306eHP\u3067\u8abf\u3079\u305f\u30896.1\u306a\u306e\u3060\u304c\u3001\u66f8\u304d\u65b9\u306e\u4f8b\u306f3.5,5.2\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u3068\u308a\u3042\u3048\u305a3.5,6.1\u306b\u3057\u3066\u307f\u308b\u3002\n\n\u7d50\u679c\u3001\n\n```\nAll external dependencies fetched successfully.\nConfiguration finished\n```\n\n\u3068\u8868\u793a\u3055\u308c\u305f\u306e\u3067\u3001\u3046\u307e\u304f\u3044\u3063\u305f\u304b\uff1f\n\n##\u30d3\u30eb\u30c9\u3059\u308b\n\u6b21\u306fGPU\u30f4\u30a1\u30fc\u30b8\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u3092\u3059\u308b\u3002\n\n```\nbazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer\n```\n\n\u3068\u3057\u305f\u3068\u3053\u308d\u3001\n\n```\n/home/ohmasa/tensorflow/tensorflow/tensorflow/core/kernels/BUILD:878:1: undeclared inclusion(s) in rule '//tensorflow/core/kernels:crop_and_resize_op_gpu':\nthis rule is missing dependency declarations for the following files included by 'tensorflow/core/kernels/crop_and_resize_op_gpu.cu.cc':\n  '/usr/local/cuda-8.0/include/cuda_runtime.h'\n  '/usr/local/cuda-8.0/include/host_config.h'\n  '/usr/local/cuda-8.0/include/builtin_types.h'\n```\n\n\u306a\u3069\u3068/usr/loca/cude-8.0/include/\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u591a\u304f\u8868\u793a\u3055\u308c\u3001\u6700\u5f8c\u306b\n\n```\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.\nnvcc warning : option '--relaxed-constexpr' has been deprecated and replaced by option '--expt-relaxed-constexpr'.\nTarget //tensorflow/cc:tutorials_example_trainer failed to build\nUse --verbose_failures to see the command lines of failed build steps.\n```\n\n\u3068\u51fa\u305f\u3002\u5931\u6557\u3057\u305f\u539f\u56e0\u306fcuda\u306ePATH\u304c\u304a\u304b\u3057\u3044\u3053\u3068\u3060\u308d\u3046\u304b\uff1f\n\n\u305d\u3053\u3067\u518d\u5ea6location of cuda\u3092default\u306e/usr/local/cuda\u306b\u3057\u3066./configure\u3057\u3001build\u3092\u5b9f\u884c\u3002\u3057\u304b\u3057\u3001\u305d\u308c\u3082\u30c0\u30e1\u3002\n\n\u4eca\u5ea6\u306fcuda\u306ePATH\u3092\u518d\u3073/usr/local/cuda-8.0\u306b\u3057\u3001cuda\u306e\u30f4\u30a1\u30fc\u30b8\u30e7\u30f3\u30928.0\u3068\u6307\u5b9a\u3057\u305f\u3068\u3053\u308d\u3001\u9014\u4e2d\u3067nvcc\u3067warning\u304c\u3044\u3063\u3071\u3044\u51fa\u305f\u304c\u3001\u306a\u3093\u3068\u304bError\u7121\u304f\u7d42\u4e86\u3002\u6700\u7d42\u7684\u306a\u5165\u529b\u9805\u76ee\u306f\u3053\u308c\u3002\n\n```\nohmasa@ohmasa-com:~/tensorflow/tensorflow$ ./configure\nPlease specify the location of python. [Default is /usr/bin/python]: \nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] N\nNo Google Cloud Platform support will be enabled for TensorFlow\nFound possible Python library paths:\n  /home/ohmasa/python-codec/src\n  /usr/local/lib/python2.7/dist-packages\n  /usr/lib/python2.7/dist-packages\nPlease input the desired Python library path to use.  Default is [/home/ohmasa/python-codec/src]\n/usr/local/lib/python2.7/dist-packages\nDo you wish to build TensorFlow with GPU support? [y/N] y\nGPU support will be enabled for TensorFlow\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: \nPlease specify the Cuda SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0\nPlease specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /usr/local/cuda-8.0\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: 5.0\nPlease specify the location where cuDNN 5.0 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda-8.0]: \nInvalid path to cuDNN  toolkit. Neither of the following two files can be found:\n/usr/local/cuda-8.0/lib64/libcudnn.so.5.0\n/usr/local/cuda-8.0/libcudnn.so.5.0\n.5.0\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: 5.1\nPlease specify the location where cuDNN 5.1 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda-8.0]: \nInvalid path to cuDNN  toolkit. Neither of the following two files can be found:\n/usr/local/cuda-8.0/lib64/libcudnn.so.5.1\n/usr/local/cuda-8.0/libcudnn.so.5.1\n.5.1\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: \nPlease specify the location where cuDNN  library is installed. Refer to README.md for more details. [Default is /usr/local/cuda-8.0]: \nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.Default is: \"3.5,5.2\": 3.5,6.1\n```\n\n\u6700\u5f8c\u306bexample\u3092\u8d70\u3089\u305b\u308b\u3002\n\n```\nbazel-bin/tensorflow/cc/tutorials_example_trainer --use_gpu\n```\n\n\u3059\u308b\u3068\u3001\n\n```\n000003/000000 lambda = 2.000000 x = [0.894427 -0.447214] y = [1.788854 -0.894427]\n000000/000006 lambda = 2.000000 x = [0.894427 -0.447214] y = [1.788854 -0.894427]\n000009/000001 lambda =      nan x = [     nan      nan] y = [     nan      nan]\n000000/000007 lambda =      nan x = [     nan      nan] y = [     nan      nan]\n000007/000002 lambda =      nan x = [     nan      nan] y = [     nan      nan]\n000007/000002 lambda =      nan x = [     nan      nan] y = [     nan      nan]\n000000/000007 lambda =      nan x = [     nan      nan] y = [     nan      nan]\n000000/000007 lambda =      nan x = [     nan      nan] y = [     nan      nan]\n```\n\n\u306a\u3069\u3068nan\u304c\u3044\u3063\u3071\u3044\u8868\u793a\u3055\u308c\u305f\u304c\u3001\u6c17\u306b\u3057\u306a\u3044\u3002\n\n##pip\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u6b21\u306bpip\u30d1\u30c3\u30b1\u30fc\u30b8\u3092create\u3057\u3066\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3089\u3057\u3044\u3002\n\n```\nbazel build -c opt //tensorflow/tools/pip_package:build_pip_package\n```\n\n\u3068\u3057\u305f\u5f8c\u3067\u3001\u305d\u306e\u4e0b\u306eGPU\u30f4\u30a1\u30fc\u30b8\u30e7\u30f3\u306e\u30b3\u30de\u30f3\u30c9\u306b\u6c17\u3065\u3044\u3066\n\n```\nbazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\n```\n\n\u3068\u3057\u305f\u3002\u66f4\u306b\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3064\u3002\n\n```\nbazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n```\n\n\u3059\u308b\u3068\u3001\n\n```\npip_package /tmp/tensorflow_pkg\n2016\u5e74 9\u6708 5\u65e5 \u6708\u66dc\u65e5 05:39:57 JST : === Using tmpdir: /tmp/tmp.4VdylwFmKc\n/tmp/tmp.4VdylwFmKc ~/tensorflow/tensorflow\n2016\u5e74 9\u6708 5\u65e5 \u6708\u66dc\u65e5 05:39:57 JST : === Building wheel\n~/tensorflow/tensorflow\n2016\u5e74 9\u6708 5\u65e5 \u6708\u66dc\u65e5 05:40:22 JST : === Output wheel file is in: /tmp/tensorflow_pkg\n```\n\n\u306a\u3069\u3068\u8868\u793a\u3055\u308c\u305f\u3002\u6700\u5f8c\u306b\n\n```\nsudo pip install /tmp/tensorflow_pkg/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl\n```\n\n\u3068\u3059\u308b\u3068\u3001\u307e\u305f\u307e\u305fwarning\u306f\u51fa\u3066\u308b\u304csuccessfully installed\u3068\u51fa\u305f\u306e\u3067\u6c17\u306b\u3057\u306a\u3044\u3002\n\n##\u30c6\u30b9\u30c8\u3059\u308b\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u51fa\u6765\u3066\u308b\u304b\u3069\u3046\u304b\u3001HP\u306e\u6307\u793a\u306b\u5f93\u3063\u3066\u30c6\u30b9\u30c8\u3059\u308b\u3002\n\n```\ncd tensorflow/models/image/mnist\npython convolutional.py\n```\n\n\u3068\u3057\u305f\u3068\u3053\u308d\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u305f\u3002\n\n```\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so.8.0 locally\nSuccessfully downloaded train-images-idx3-ubyte.gz 9912422 bytes.\nSuccessfully downloaded train-labels-idx1-ubyte.gz 28881 bytes.\nSuccessfully downloaded t10k-images-idx3-ubyte.gz 1648877 bytes.\nSuccessfully downloaded t10k-labels-idx1-ubyte.gz 4542 bytes.\nExtracting data/train-images-idx3-ubyte.gz\nExtracting data/train-labels-idx1-ubyte.gz\nExtracting data/t10k-images-idx3-ubyte.gz\nExtracting data/t10k-labels-idx1-ubyte.gz\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties: \nname: GeForce GTX 1070\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.797\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 7.56GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\nInitialized!\nStep 0 (epoch 0.00), 6.4 ms\nMinibatch loss: 12.054, learning rate: 0.010000\nMinibatch error: 90.6%\nValidation error: 84.6%\nStep 100 (epoch 0.12), 6.1 ms\nMinibatch loss: 3.300, learning rate: 0.010000\nMinibatch error: 6.2%\nValidation error: 6.9%\nStep 200 (epoch 0.23), 5.7 ms\nMinibatch loss: 3.469, learning rate: 0.010000\nMinibatch error: 12.5%\nValidation error: 3.8%\nStep 300 (epoch 0.35), 5.8 ms\nMinibatch loss: 3.214, learning rate: 0.010000\nMinibatch error: 6.2%\nValidation error: 3.1%\nStep 400 (epoch 0.47), 5.9 ms\nMinibatch loss: 3.183, learning rate: 0.010000\nMinibatch error: 7.8%\nValidation error: 2.7%\n\u30fb\u30fb\u30fb\n```\n\ndevice\u304c\uff10\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u6c17\u306b\u306a\u308b\u304c\u3001GeForce GTX 1070\u3068\u51fa\u3066\u308b\u306e\u3067\u3001\u3061\u3083\u3093\u3068GPU\u304c\u7a3c\u50cd\u3057\u3066\u308b\u306e\u304b\uff1f\n\n", "tags": ["TensorFlow", "DeepLearning", "Ubuntu14.04"]}