{"context": " More than 1 year has passed since last update.Backbone.js\u306b\u3064\u3044\u3066\u5c11\u3057\u52c9\u5f37\u3057\u305f\u306e\u3067Salesforce\u306eVisualforce\u3067\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nBackbone.js\u3092\u4f7f\u3046\u3068\u304d\u306f\u4e0b\u8a18\u306e\u30b5\u30a4\u30c8\u304b\u3089\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nBackbonejs.org\nhttp://backbonejs.org/\n\u3053\u306e\u30b5\u30a4\u30c8\u5185\u306bGitHub\u3078\u306e\u30ea\u30f3\u30af\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u305d\u3061\u3089\u304b\u3089\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u4e00\u5f0f\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\nGitHub Repository\nhttps://github.com/jashkenas/backbone\n\u4eca\u56de\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u306e3\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n- backbone.js\n- jquery.js\n- underscore.js\n\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092Zip\u5f62\u5f0f\u3067\u5727\u7e2e\u3057\u3066Salesforce\u306e\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3067Backbone.js\u3092\u52d5\u304b\u3059\u306e\u306b\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u306e\u6e96\u5099\u304c\u5b8c\u4e86\u3067\u3059\u3002\n\u6b21\u306e\u30b3\u30fc\u30c9\u3067Backbone.js\u3092\u3064\u304b\u3063\u305f\u30b5\u30f3\u30d7\u30eb\u30da\u30fc\u30b8\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u305a\u30d9\u30fc\u30b9\u3068\u306a\u308b\u30da\u30fc\u30b8\u3067\u3059\u3002\n\nBackBoneJsTaskApp.page\n<apex:page title=\"Backbone.js\" showHeader=\"true\" sidebar=\"false\">\n\n    <apex:include pageName=\"BackBoneJsTaskAppCss\" />\n\n    <div id=\"vf-page\">\n\n        <h1>Tasks</h1>\n        <form id=\"addTask\">\n            <input type=\"text\" id=\"title\" />\n            <input type=\"submit\" value=\"add\" />\n            <span id=\"error\"></span>\n        </form>\n\n        <div id=\"tasks\"></div>\n\n        <p>Tasks Count: <span id='count'></span></p>\n\n        <script type=\"text/template\" id=\"task-template\">\n            <input type=\"checkbox\" class=\"toggle\" <%= completed ? 'checked': '' %>></input>\n            <span class=\"<%= completed ? 'completed' : '' %>\">\n                <%- title %>\n                <span class=\"delete\">[x]</span>\n            </span>\n        </script>\n    </div>\n\n    <apex:includeScript value=\"{!URLFOR($Resource.BackBoneJS, 'js/underscore.js')}\" />\n    <apex:includeScript value=\"{!URLFOR($Resource.BackBoneJS, 'js/jquery.js')}\" />\n    <apex:includeScript value=\"{!URLFOR($Resource.BackBoneJS, 'js/backbone.js')}\" />\n    <apex:include pageName=\"BackBoneJsTaskAppScript\"/>\n</apex:page>\n\n\n\u3064\u304e\u306bJavaScript\u306e\u51e6\u7406\u3092\u8a18\u8f09\u3057\u305f\u30da\u30fc\u30b8\u3067\u3059\u3002Backbone.js\u306e\u51e6\u7406\u306f\u3053\u306e\u4e2d\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\nBackBoneJsTaskAppScript.page\n<apex:page >\n    <script type=\"text/javascript\">\n        (function() {\n\n            // Model\n            var Task = Backbone.Model.extend({\n                defaults: {\n                    title: 'do something',\n                    completed: false\n                },\n                validate: function(attrs) {\n                    if ( _.isEmpty(attrs.title)) {\n                        return 'title must not be empty';\n                    }\n                },\n                initialize: function() {\n                    this.on('invalid', function(model, error) {\n                        $('#error').html(error);\n                    })\n                }\n            });\n            var Tasks = Backbone.Collection.extend({ model: Task});\n\n            // View\n            var TaskView = Backbone.View.extend({\n                tagName: 'li',\n                initialize: function() {\n                    this.model.on('destroy', this.remove, this);\n                    this.model.on('change', this.render, this);\n                },\n                events: {\n                    'click .delete': 'destroy',\n                    'click .toggle': 'toggle'\n                },\n                toggle: function() {\n                    this.model.set('completed', !this.model.get('completed'));\n                },\n                destroy: function() {\n                    if (confirm('are you sure?')) {\n                        this.model.destroy();\n                    }\n                },\n                remove: function() {\n                    this.$el.remove();\n                },\n                template: _.template($('#task-template').html()),\n                render: function() {\n                    var template = this.template(this.model.toJSON());\n                    this.$el.html(template);\n                    return this;\n                }\n            });\n            var TasksView = Backbone.View.extend({\n                tagName: 'ul',\n                initialize: function() {\n                    this.collection.on('add', this.addNew, this);\n                    this.collection.on('change', this.updateCount, this);\n                    this.collection.on('destroy', this.updateCount, this);\n                },\n                addNew: function(task) {\n                    var taskView = new TaskView({model: task});\n                    this.$el.append(taskView.render().el);\n                    $('#title').val('').focus();\n                    this.updateCount();\n                },\n                updateCount: function() {\n                    var uncompletedTasks = this.collection.filter(function(task) {\n                        return !task.get('completed');\n                    });\n                    $('#count').html(uncompletedTasks.length);\n                },\n                render: function() {\n                    this.collection.each(function(task) {\n                        var taskView = new TaskView({model: task});\n                        this.$el.append(taskView.render().el);\n                    }, this);\n                    this.updateCount();\n                    return this;\n                }\n            });\n\n            var AddTaskView = Backbone.View.extend({\n                el : '#addTask',\n                events: {\n                    'submit': 'submit'\n                },\n                submit: function(e) {\n                    e.preventDefault();\n                    //var task = new Task({title: $('#title').val()});\n                    var task = new Task();\n                    if (task.set({title: $('#title').val()}, {validate: true})) {\n                        this.collection.add(task);\n                        $('#error').empty();\n                    }\n                }\n            });\n\n            var tasks = new Tasks([\n                {\n                    title: 'task1',\n                    completed: true\n                },\n                {\n                    title: 'task2'\n                },\n                {\n                    title: 'task3'\n                }\n            ]);\n\n            var tasksView = new TasksView({collection: tasks});\n            var addTaskView = new AddTaskView({collection: tasks});\n\n            $('#tasks').html(tasksView.render().el);\n        })();\n    </script>\n</apex:page>\n\n\n\u6700\u5f8c\u306bCSS\u306e\u51e6\u7406\u3092\u8a18\u8f09\u3057\u305f\u30da\u30fc\u30b8\u3067\u3059\u3002\n\nBackBoneJsTaskAppCss.page\n<apex:page >\n    <style type=\"text/css\">\n        #vf-page * {\n            font-family: '\u30e1\u30a4\u30ea\u30aa', sans-serif;\n            font-size: 18px;\n        }\n\n        #vf-page input[type=text] {\n            font-size: 14px;\n            padding: 5px;\n            width: 200px;\n        }\n\n        #vf-page ul li {\n            list-style-type: none;\n        }\n\n        #vf-page .completed {\n            text-decoration: line-through;\n            color: gray;\n        }\n\n        #error {\n            color: red;\n        }\n    </style>\n</apex:page>\n\n\nCSS\u3084JS\u306e\u51e6\u7406\u306f\u5916\u51fa\u3057\u306b\u3057\u305f\u65b9\u304c\u3044\u3044\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u3068\u3057\u3066\u6271\u3046\u3068\u7de8\u96c6\u3084\u7ba1\u7406\u304c\u3059\u3053\u3057\u9762\u5012\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u3053\u3067CSS\u3084JS\u306f\u5225\u30da\u30fc\u30b8\u3068\u3057\u3066\u4f5c\u6210\u3057\u3066\u3001apex:inculde\u3067\u8aad\u307f\u8fbc\u3080\u65b9\u6cd5\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3053\u306e\u65b9\u6cd5\u3067\u3082\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nBackbone.js\u306b\u3064\u3044\u3066\u5c11\u3057\u52c9\u5f37\u3057\u305f\u306e\u3067Salesforce\u306eVisualforce\u3067\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n![2014-03-26_223123.png](https://qiita-image-store.s3.amazonaws.com/0/8407/1c3a6ec3-4ed9-5077-e03a-84a146bb9ba1.png)\n\nBackbone.js\u3092\u4f7f\u3046\u3068\u304d\u306f\u4e0b\u8a18\u306e\u30b5\u30a4\u30c8\u304b\u3089\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n**Backbonejs.org**\nhttp://backbonejs.org/\n\n\u3053\u306e\u30b5\u30a4\u30c8\u5185\u306bGitHub\u3078\u306e\u30ea\u30f3\u30af\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u305d\u3061\u3089\u304b\u3089\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u4e00\u5f0f\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\n\n**GitHub Repository**\nhttps://github.com/jashkenas/backbone\n\n\u4eca\u56de\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u306e3\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n- backbone.js\n- jquery.js\n- underscore.js\n\n\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092Zip\u5f62\u5f0f\u3067\u5727\u7e2e\u3057\u3066Salesforce\u306e\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\n![2014-03-26_224708.png](https://qiita-image-store.s3.amazonaws.com/0/8407/0d0f2465-adb6-e4ab-d7fa-40808f48ea94.png)\n\n\u3053\u308c\u3067Backbone.js\u3092\u52d5\u304b\u3059\u306e\u306b\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u306e\u6e96\u5099\u304c\u5b8c\u4e86\u3067\u3059\u3002\n\u6b21\u306e\u30b3\u30fc\u30c9\u3067Backbone.js\u3092\u3064\u304b\u3063\u305f\u30b5\u30f3\u30d7\u30eb\u30da\u30fc\u30b8\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u307e\u305a\u30d9\u30fc\u30b9\u3068\u306a\u308b\u30da\u30fc\u30b8\u3067\u3059\u3002\n\n```html:BackBoneJsTaskApp.page\n<apex:page title=\"Backbone.js\" showHeader=\"true\" sidebar=\"false\">\n\n    <apex:include pageName=\"BackBoneJsTaskAppCss\" />\n    \n    <div id=\"vf-page\">\n    \n        <h1>Tasks</h1>\n        <form id=\"addTask\">\n            <input type=\"text\" id=\"title\" />\n            <input type=\"submit\" value=\"add\" />\n            <span id=\"error\"></span>\n        </form>\n        \n        <div id=\"tasks\"></div>\n        \n        <p>Tasks Count: <span id='count'></span></p>\n    \n        <script type=\"text/template\" id=\"task-template\">\n            <input type=\"checkbox\" class=\"toggle\" <%= completed ? 'checked': '' %>></input>\n            <span class=\"<%= completed ? 'completed' : '' %>\">\n                <%- title %>\n                <span class=\"delete\">[x]</span>\n            </span>\n        </script>\n    </div>\n    \n    <apex:includeScript value=\"{!URLFOR($Resource.BackBoneJS, 'js/underscore.js')}\" />\n    <apex:includeScript value=\"{!URLFOR($Resource.BackBoneJS, 'js/jquery.js')}\" />\n    <apex:includeScript value=\"{!URLFOR($Resource.BackBoneJS, 'js/backbone.js')}\" />\n    <apex:include pageName=\"BackBoneJsTaskAppScript\"/>\n</apex:page>\n```\n\n\n\u3064\u304e\u306bJavaScript\u306e\u51e6\u7406\u3092\u8a18\u8f09\u3057\u305f\u30da\u30fc\u30b8\u3067\u3059\u3002Backbone.js\u306e\u51e6\u7406\u306f\u3053\u306e\u4e2d\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n```js:BackBoneJsTaskAppScript.page\n<apex:page >\n    <script type=\"text/javascript\">\n        (function() {\n        \n            // Model\n            var Task = Backbone.Model.extend({\n                defaults: {\n                    title: 'do something',\n                    completed: false\n                },\n                validate: function(attrs) {\n                    if ( _.isEmpty(attrs.title)) {\n                        return 'title must not be empty';\n                    }\n                },\n                initialize: function() {\n                    this.on('invalid', function(model, error) {\n                        $('#error').html(error);\n                    })\n                }\n            });\n            var Tasks = Backbone.Collection.extend({ model: Task});\n        \n            // View\n            var TaskView = Backbone.View.extend({\n                tagName: 'li',\n                initialize: function() {\n                    this.model.on('destroy', this.remove, this);\n                    this.model.on('change', this.render, this);\n                },\n                events: {\n                    'click .delete': 'destroy',\n                    'click .toggle': 'toggle'\n                },\n                toggle: function() {\n                    this.model.set('completed', !this.model.get('completed'));\n                },\n                destroy: function() {\n                    if (confirm('are you sure?')) {\n                        this.model.destroy();\n                    }\n                },\n                remove: function() {\n                    this.$el.remove();\n                },\n                template: _.template($('#task-template').html()),\n                render: function() {\n                    var template = this.template(this.model.toJSON());\n                    this.$el.html(template);\n                    return this;\n                }\n            });\n            var TasksView = Backbone.View.extend({\n                tagName: 'ul',\n                initialize: function() {\n                    this.collection.on('add', this.addNew, this);\n                    this.collection.on('change', this.updateCount, this);\n                    this.collection.on('destroy', this.updateCount, this);\n                },\n                addNew: function(task) {\n                    var taskView = new TaskView({model: task});\n                    this.$el.append(taskView.render().el);\n                    $('#title').val('').focus();\n                    this.updateCount();\n                },\n                updateCount: function() {\n                    var uncompletedTasks = this.collection.filter(function(task) {\n                        return !task.get('completed');\n                    });\n                    $('#count').html(uncompletedTasks.length);\n                },\n                render: function() {\n                    this.collection.each(function(task) {\n                        var taskView = new TaskView({model: task});\n                        this.$el.append(taskView.render().el);\n                    }, this);\n                    this.updateCount();\n                    return this;\n                }\n            });\n        \n            var AddTaskView = Backbone.View.extend({\n                el : '#addTask',\n                events: {\n                    'submit': 'submit'\n                },\n                submit: function(e) {\n                    e.preventDefault();\n                    //var task = new Task({title: $('#title').val()});\n                    var task = new Task();\n                    if (task.set({title: $('#title').val()}, {validate: true})) {\n                        this.collection.add(task);\n                        $('#error').empty();\n                    }\n                }\n            });\n        \n            var tasks = new Tasks([\n                {\n                    title: 'task1',\n                    completed: true\n                },\n                {\n                    title: 'task2'\n                },\n                {\n                    title: 'task3'\n                }\n            ]);\n        \n            var tasksView = new TasksView({collection: tasks});\n            var addTaskView = new AddTaskView({collection: tasks});\n        \n            $('#tasks').html(tasksView.render().el);\n        })();\n    </script>\n</apex:page>\n```\n\n\u6700\u5f8c\u306bCSS\u306e\u51e6\u7406\u3092\u8a18\u8f09\u3057\u305f\u30da\u30fc\u30b8\u3067\u3059\u3002\n\n```css:BackBoneJsTaskAppCss.page\n<apex:page >\n    <style type=\"text/css\">\n        #vf-page * {\n            font-family: '\u30e1\u30a4\u30ea\u30aa', sans-serif;\n            font-size: 18px;\n        }\n        \n        #vf-page input[type=text] {\n            font-size: 14px;\n            padding: 5px;\n            width: 200px;\n        }\n        \n        #vf-page ul li {\n            list-style-type: none;\n        }\n    \n        #vf-page .completed {\n            text-decoration: line-through;\n            color: gray;\n        }\n        \n        #error {\n            color: red;\n        }\n    </style>\n</apex:page>\n```\n\nCSS\u3084JS\u306e\u51e6\u7406\u306f\u5916\u51fa\u3057\u306b\u3057\u305f\u65b9\u304c\u3044\u3044\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u3068\u3057\u3066\u6271\u3046\u3068\u7de8\u96c6\u3084\u7ba1\u7406\u304c\u3059\u3053\u3057\u9762\u5012\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u3053\u3067CSS\u3084JS\u306f\u5225\u30da\u30fc\u30b8\u3068\u3057\u3066\u4f5c\u6210\u3057\u3066\u3001apex:inculde\u3067\u8aad\u307f\u8fbc\u3080\u65b9\u6cd5\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3053\u306e\u65b9\u6cd5\u3067\u3082\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u3066\u304f\u308c\u307e\u3059\u3002", "tags": ["Salesforce", "Backbone.js"]}