{"context": "\u3053\u306e\u8a18\u4e8b\u306f Retty Advent Calendar 11\u65e5\u76ee\u3067\u3059\u3002\n\u6628\u65e5\u306f\u8349\u5c71\u304f\u3093(@Masaki-Kusayama)\u306eweb\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306e\u901f\u5ea6\u6539\u5584\u306b\u53d6\u308a\u7d44\u3093\u3067\u307f\u305f\u8a71\u3067\u3057\u305f\u3002\n\u6700\u8fd1\u3001\u5df7\u3067\u306b\u308f\u304b\u306b\u4eba\u6c17\u304c\u9ad8\u307e\u3063\u3066\u3044\u308bKotlin\u3067\u3059\u304c\u3001\u3044\u3056\u3084\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u3066\u3082\u3001\u624b\u9803\u306a\u984c\u6750\u304c\u624b\u5143\u306b\u306a\u304f\u3066\u56f0\u3063\u3066\u3044\u307e\u305b\u3093\u304b\uff1f\n\u4eca\u56de\u306f\u3001\u624b\u8efd\u306b\u697d\u3057\u304f\u66f8\u3051\u305d\u3046\u306a\u8ad6\u7406\u56de\u8def\u3092Kotlin\u3067\u66f8\u3044\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u8ad6\u7406\u56de\u8def\n\u8ad6\u7406\u56de\u8def\u306f\u3001\u8ad6\u7406\u6f14\u7b97\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3044\u304f\u3053\u3068\u3067\u30010/1\u306e\u5165\u529b\u304b\u3089\u671f\u5f85\u3059\u308b\u51fa\u529b\u3092\u5f97\u308b\u305f\u3081\u306e\u56de\u8def\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306f2\u3064\u306e2bit\u6570\u5024\u3092\u52a0\u7b97\u3057\u305f\u7d50\u679c\u3092\u5f97\u308b\u8ad6\u7406\u6f14\u7b97\u306e\u8868\u3067\u3059\u3002\n\n\n\ninput0[]\ninput1[]\noutput\n\n\n\n\n00\n00\n00\n\n\n00\n01\n01\n\n\n00\n10\n10\n\n\n00\n11\n11\n\n\n01\n00\n01\n\n\n...\n...\n...\n\n\n\n\u8ad6\u7406\u56de\u8def\u3092\u5b9f\u88c5\u3059\u308b\u3068\u304d\u306b\u306f\u3001AND/OR/NOT\u306e\u3088\u3046\u306a\u57fa\u672c\u7684\u306a\u6f14\u7b97\u304c\u3067\u304d\u308b\u8ad6\u7406\u7d20\u5b50\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002CPU\u306a\u3093\u304b\u3082\u8ad6\u7406\u7d20\u5b50\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5922\u3044\u3063\u3071\u3044\u3067\u3059\u306d\u3002\n\n\u8ad6\u7406\u56de\u8def\u3092Kotlin\u3067\u5b9f\u88c5\u3059\u308b\n\u8ad6\u7406\u56de\u8def\u3068\u4e00\u53e3\u306b\u8a00\u3063\u3066\u3082\u7a2e\u985e\u306f\u69d8\u3005\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u300c4bit\u52a0\u7b97\u5668\u300d\u3092\u4f5c\u308d\u3046\u3068\u601d\u3044\u307e\u3059\u30024bit\u306e2\u9032\u6570\u30922\u3064\u5165\u529b\u306b\u53d6\u308a\u30014bit\u306e2\u9032\u6570\u30921\u3064\u51fa\u529b\u3059\u308b\u56de\u8def\u3067\u3059\u3002\n\n\u30c7\u30fc\u30bf\u69cb\u9020\n\u8ad6\u7406\u56de\u8def\u3067\u306f\u3001\u305d\u306e\u6027\u8cea\u4e0ainput\u3084output\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u306e\u3067\u3001\u307e\u305a\u306f\u30c7\u30fc\u30bf\u306e\u7d44\u3092\u4f5c\u308c\u308bTuple\u3068\u3001\u5b50\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u30591\u3002\n\nTuple\nabstract class Tuple<out T>(vararg private val output: T) {\n  operator fun get(idx: Int): T = this.output[idx]\n}\n\n\n\u3053\u306e\u3068\u304dget\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u3066\u304a\u304f\u3053\u3068\u3067\nval t = object: Tuple<Int>(0, 1, 2, 3)\nprintln(t[3]) // 3\n\n\u307f\u305f\u3044\u306a\u66f8\u304d\u65b9\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u6570\u304c\u5c11\u306a\u3044Tuple\u3067\u3042\u308c\u3070\u3001\u7d44\u307f\u8fbc\u307f\u306ePair\u306e\u3088\u3046\u306b\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u30a2\u30af\u30bb\u30b9\u3055\u305b\u3066\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u6570\u304c\u591a\u304f\u306a\u308a\u305d\u3046\u3067\u3042\u308c\u3070\u4fbf\u5229\u306b\u306a\u308a\u305d\u3046\u306a\u306e\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u3042\u3068\u306f\u3001\u3053\u308c\u3092\u62e1\u5f35\u3057\u305f\u5177\u8c61\u30af\u30e9\u30b9\u3068\u3057\u3066\u30012\u3064\u7d44\u30013\u3064\u7d44...\u3092\u5b9f\u88c5\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nStructures\nclass Twins<out T>(first: T, second: T) : Tuple<T>(first, second) {\n    operator fun component1(): T = this[0]\n    operator fun component2(): T = this[1]\n}\n\nclass Triplets<out T>(first: T, second: T, third: T) : Tuple<T>(first, second, third) {\n    operator fun component1(): T = this[0]\n    operator fun component2(): T = this[1]\n    operator fun component3(): T = this[2]\n}\n\n\ncomponent*\u95a2\u6570\u306f\u3001\u5206\u89e3\u5ba3\u8a00(Destructuring Declarations)\u3068\u3044\u3046\u3082\u306e\u3092\u4f7f\u3046\u306e\u306b\u5fc5\u8981\u306a\u95a2\u6570\u3067\u3001\u5b9f\u88c5\u3057\u3066\u304a\u304f\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nval triplets = Triplets<Int>(1, 2, 3) \nval (v1, v2, v3) = triplets\n\n\n\u56de\u8def\u306e\u5b9f\u88c5\n\u4eca\u56de\u306f\u56de\u8def\u3092\u6b21\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\u6700\u7d42\u7684\u306a\u51fa\u529b\u3082\u3001\u300c\u5165\u529b\u3092\u305d\u306e\u307e\u307e\u51fa\u529b\u3059\u308b\u56de\u8def\u300d\u3068\u8003\u3048\u3066\u3001\u3053\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u5f93\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nCircuit\ninterface Circuit {\n    val outputs: Tuple<Circuit>\n\n    val output: Circuit\n        get() = this.outputs[0]\n}\n\n\noutput\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3064\u304d\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u3059\u3002\u8ad6\u7406\u56de\u8def\u306e\u5834\u5408\u3001\u51fa\u529b\u304c1\u3064\u3057\u304b\u306a\u3044\u30b1\u30fc\u30b9\u3082\u305d\u308c\u306a\u308a\u306b\u3042\u308b\u306e\u3067\u3001\u30d8\u30eb\u30d1\u30fc\u3068\u3057\u3066\u7528\u610f\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\nNAND\u7d20\u5b50\u3092\u4f5c\u308b\n\u8ad6\u7406\u7d20\u5b50\u306b\u306fNAND\u7d20\u5b50\u3068\u3044\u3046\u7d20\u5b50\u304c\u3042\u308a\u307e\u3059\u3002!(A & B)\u3092\u8fd4\u3059\u7d20\u5b50\u3067\u3059\u304c\u3001\u3053\u306e\u7d20\u5b50\u306b\u306f\u5b8c\u5168\u6027\u304c\u3042\u3063\u3066\u3001\u3053\u306e\u7d20\u5b50\u3067\u5168\u3066\u306e\u8ad6\u7406\u6f14\u7b97\u3092\u5b9f\u88c5\u3067\u304d\u308b\u3053\u3068\u304c\u8a3c\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u3053\u3067\u4eca\u56de\u306fNAND\u3060\u3051\u5b9f\u88c5\u3057\u3066\u3001\u4ed6\u306fNAND\u3092\u4f7f\u3063\u305f\u30af\u30e9\u30b9\u3068\u3057\u3066\u5b9f\u88c5\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u30592\u3002\n\u307e\u305a\u3001Nand\u306e\u30ed\u30b8\u30c3\u30af\u3092\u4f5c\u308a\u307e\u3059\u3002\u3053\u3053\u306f\u666e\u901a\u306e\u6761\u4ef6\u5f0f\u3092\u4f7f\u3063\u3066\u4f5c\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u304c\u3001\u4ed6\u306e\u7d20\u5b50\u3082Nand\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u4f5c\u308c\u307e\u3059\u3002\n\nNand\nclass Nand(private val inputA: Circuit, private val inputB: Circuit) : Circuit {\n    override val outputs: Tuple<Circuit> = <NAND\u306e\u7d50\u679c\u3092\u8fd4\u3059\u30ed\u30b8\u30c3\u30af>\n}\n\n\n\nNAND\u7d20\u5b50\u304b\u3089\u4ed6\u306e\u7d20\u5b50\u3092\u4f5c\u308b\n\u3055\u3066\u3001\u3053\u3053\u3067NAND\u7d20\u5b50\u304b\u3089\u4ed6\u306e\u7d20\u5b50\u3092\u4f5c\u3063\u3066\u3044\u304f\u306e\u3067\u3059\u304c\u3001NAND\u304c\u5b8c\u5168\u6027\u3092\u6301\u3063\u3066\u3044\u308b\u3068\u306f\u8a00\u3063\u3066\u3082\u3001\u305d\u308c\u3092\u76f4\u63a5\u4f7f\u3063\u3066\u3044\u304f\u306e\u306f\u5927\u5909\u306a\u306e\u3067\u3001NOT/AND/OR\u306e3\u3064\u306e\u7d20\u5b50\u3092\u4f5c\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\n\u307e\u305a\u3001NOT\u3092\u4f5c\u308a\u307e\u3059\u3002NOT(A)\u306fNAND(A,A)\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u3001Circuit\u306f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u3059\u306e\u3067\u3001Kotlin\u306edelegate\u3092\u3064\u304b\u3063\u3066\u7c21\u6f54\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nNot\nclass Not(input: Circuit) : Circuit by Nand(input, input)\n\n\n\u3053\u3046\u66f8\u304f\u3053\u3068\u3067\u3001Not\u30af\u30e9\u30b9\u306e\u51e6\u7406\u306fNand\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9Nand(input, input)\u304c\u4ee3\u308f\u308a\u306b\u3084\u3063\u3066\u304f\u308c\u307e\u3059\u3002\u540c\u69d8\u306b\u57fa\u790e\u7684\u306a\u7d20\u5b50\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\nBasicElements\nclass And(inputA: Circuit, inputB: Circuit) : Circuit by Not(Nand(inputA, inputB))\nclass Nor(inputA: Circuit, inputB: Circuit) : Circuit by And(Not(inputA), Not(inputB))\nclass Or(inputA: Circuit, inputB: Circuit) : Circuit by Not(Nor(inputA, inputB))\nclass Xor(inputA: Circuit, inputB: Circuit) : Circuit by Not(Or(Nor(inputA, inputB), And(inputA, inputB)))\n\n\n\u4e0a\u306e\u5b9f\u88c5\u306f\u4e00\u4f8b\u3067\u3001\u4e00\u822c\u306b\u7d20\u5b50\u306e\u7d44\u307f\u5408\u308f\u305b\u65b9\u306f\u8907\u6570\u3042\u308b\u306e\u3067\u3001\u30d1\u30ba\u30eb\u611f\u899a\u3067\u3084\u3063\u3066\u307f\u308b\u3068\u9762\u767d\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u534a\u52a0\u7b97\u5668\u3068\u5168\u52a0\u7b97\u5668\n\u3044\u3088\u3044\u3088\u3001\u52a0\u7b97\u5668\u306e\u30d9\u30fc\u30b9\u3068\u306a\u308b\u534a\u52a0\u7b97\u5668\u3068\u5168\u52a0\u7b97\u5668\u3092\u4f5c\u308a\u307e\u3059\u3002\u534a\u52a0\u7b97\u5668\u306f2\u3064\u306e1\u30d3\u30c3\u30c8\u5024\u306e\u52a0\u7b97\u7d50\u679c\u3092\u8a08\u7b97\u3059\u308b\u56de\u8def\u3001\u5168\u52a0\u7b97\u5668\u306f3\u3064\uff082\u5024\u3068\u7e70\u308a\u4e0a\u304c\u308a\u5024\uff09\u306e\u52a0\u7b97\u7d50\u679c\u3092\u8a08\u7b97\u3059\u308b\u56de\u8def\u3067\u3059\u3002\u5168\u52a0\u7b97\u5668\u307e\u3067\u4f5c\u308c\u3070\u3001\u305d\u308c\u3092\u30d3\u30c3\u30c8\u6570\u5206\u7d44\u307f\u5408\u308f\u305b\u30664bit\u52a0\u7b97\u5668\u304c\u4f5c\u308c\u307e\u3059\u3002\n\u3053\u308c\u307e\u3067\u3068\u5927\u304d\u304f\u9055\u3046\u306e\u306f\u3001\u51fa\u529b\u304c\u8907\u6570\u5024\u306b\u306a\u3063\u3066Tuple\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u305f\u3081\u3001delegate\u304c\u4f7f\u3048\u306a\u3044\u70b9\u3067\u3059\u3002\u3072\u3068\u307e\u305a\u534a\u52a0\u7b97\u5668\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n\n\n\u5165\u529bA\n\u5165\u529bB\n\u51fa\u529b\n\n\n\n\n0\n0\n00\n\n\n0\n1\n01\n\n\n1\n0\n01\n\n\n1\n1\n10\n\n\n\n\nHalfAdder\nclass HalfAdder(inputA: Circuit, inputB: Circuit) : Circuit {\n    override val outputs: Tuple<Circuit> = Twins(\n            Xor(inputA, inputB).output,\n            And(inputA, inputB).output\n    )\n}\n\n\nby\u306f\u4f7f\u3048\u307e\u305b\u3093\u304c\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u30921\u3064\u5b9f\u88c5\u3059\u308c\u3070\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n\u7d9a\u3044\u3066\u5168\u52a0\u7b97\u5668\u3067\u3059\u3002\u5168\u52a0\u7b97\u5668\u306f\u3001\u30b7\u30f3\u30d7\u30eb\u306b3\u5024\u306e\u8868\u3092\u4f5c\u3063\u3066\u4f5c\u3063\u3066\u3082\u3088\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u4eca\u4f5c\u3063\u305f\u534a\u52a0\u7b97\u5668\u3092\u4f7f\u3063\u3066\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002HalfAdder\u306e\u7d50\u679c\u306e1\u306e\u4f4d\u3068\u30013\u3064\u76ee\u306e\u5024\u3092HalfAdder\u306b\u98df\u308f\u305b\u308c\u30701\u306e\u4f4d\u306f\u4f5c\u308c\u305d\u3046\u3067\u3059\u306d\u30022\u306e\u4f4d\u306f\u3001\u5404\u534a\u52a0\u7b97\u5668\u306e\u7e70\u308a\u4e0a\u304c\u308a\u5024\u306e\u3069\u3061\u3089\u304b\u304c1\u3067\u3042\u308c\u3070\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u3053\u308c\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3068\n\nFullAdder\nclass FullAdder(inputA: Circuit, inputB: Circuit, x: Circuit) : Circuit {\n    override val outputs: Tuple<Circuit> = HalfAdder(inputA, inputB).outputs\n        .let { val (sum1, carry1) = it as Twins\n            HalfAdder(sum1, x).outputs.let { val (sum2, carry2) = it as Twins\n                Twins(sum2, Or(carry1, carry2).output)\n            }\n        }\n}\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\u3044\u307e\u307e\u3067\u3088\u308a\u3060\u3044\u3076\u8907\u96d1\u306b\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u5148\u306bcomponent*\u7cfb\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u305f\u304a\u304b\u3052\u3067\u3001let\u306e\u4e2d\u306e\u30e9\u30e0\u30c0\u304c\u3001\u3061\u3087\u3063\u3068\u3060\u30512\u5909\u6570\u5f15\u6570\u306e\u95a2\u6570\u3063\u307d\u304f\u6271\u3048\u3066\u3044\u307e\u3059\u306d\u3002\n\n4bit\u52a0\u7b97\u5668\n\u8907\u6570bit\u306b\u306a\u3063\u305f\u52a0\u7b97\u5668\u306e\u8003\u3048\u65b9\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u3001\u4e0b\u4f4d\u30d3\u30c3\u30c8\u8a08\u7b97\u7d50\u679c\u306e\u7e70\u308a\u4e0a\u304c\u308a\u5024\u3068\u3001\u5165\u529b\u306e\u8a72\u5f53\u30d3\u30c3\u30c82\u3064\u306e\u52a0\u7b97\u7d50\u679c\u3092\u5168\u52a0\u7b97\u5668\u3067\u6c42\u3081\u3066\u3042\u3052\u308c\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\nTwoBitAdder\nclass FourBitAdder(inputA: Quadruplets<Circuit>, inputB: Quadruplets<Circuit>) : Circuit {\n    override val outputs: Tuple<Circuit> = FullAdder(inputA[0], inputB[0], Value.Zero).outputs\n        .let { val (sum0, carry0) = it as Twins\n            FullAdder(inputA[1], inputB[1], carry0).outputs\n                .let { val (sum1, carry1) = it as Twins\n                    FullAdder(inputA[2], inputB[2], carry1).outputs\n                        .let { val (sum2, carry2) = it as Twins\n                            Quadruplets(sum0, sum1, sum2,\n                                        FullAdder(inputA[3], inputB[3], carry2).output)\n                        }\n                }\n        }\n}\n\n\n\u203b\u672c\u6587\u4e2d\u3067\u306f\u89e6\u308c\u3066\u3044\u307e\u305b\u3093\u304c\u3001Value\u30af\u30e9\u30b9\u306f\u3001Circuit\u3092\u5b9f\u88c5\u3057\u305f\u3001\u5b9a\u6570\u3092\u305d\u306e\u307e\u307e\u8fd4\u3059enum class\u3067\u3059\u3002\n\u3053\u3053\u307e\u3067\u3067\u304d\u308c\u3070\u3081\u3067\u305f\u304f4bit\u52a0\u7b97\u5668\u306e\u5b8c\u6210\u3067\u3059\uff01\n\n\u304a\u307e\u3051: 7\u30bb\u30b0\u30e1\u30f3\u30c8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\n\u52a0\u7b97\u5668\u306f\u3053\u3053\u3067\u7d42\u308f\u308a\u3067\u3059\u304c\u3001\u305b\u3063\u304b\u304f\u3053\u3053\u307e\u3067\u4f5c\u3063\u305f\u306e\u3067\u3042\u308c\u3070\u30c7\u30b8\u30bf\u30eb\u6570\u5b57\u3067\u8868\u793a\u3057\u305f\u3044\u3067\u3059\u3088\u306d\u3002\u3068\u3044\u3046\u308f\u3051\u30677\u30bb\u30b0\u30e1\u30f3\u30c8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\u3053\u3046\u3044\u3046\u3084\u3064\u3067\u3059\u3002\n ----          ----  ----          ----   ----  ----   ----   ----  \n|    |      |      |     | |    | |      |          | |    | |    | \n               ----  ----   ----   ----   ----         ----   ---- \n|    |      | |          |      |      | |    |     | |    |      |\n ----          ----  ----          ----   ----         ----   ----\n\n\u3053\u308c\u3082\u30011\u30bb\u30b0\u30e1\u30f3\u30c8\u6bce\u306b\u8ad6\u7406\u56de\u8def\u3092\u7528\u610f\u3059\u308c\u3070\u305d\u308c\u3067\u5b9f\u73fe\u3067\u304d\u305d\u3046\u3067\u3059\u3002\u4eca\u56de\u306e\u5834\u54084bit\u306a\u306e\u3067\u3001-8~7\u3092\u8868\u793a\u3059\u308b\u30ed\u30b8\u30c3\u30af\u3092\u4f5c\u308c\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n\u4f8b\u3048\u3070\u3001\u4e00\u756a\u4e0a\u306e\u6a2a\u7dda\u3092\u51fa\u3059\u30ed\u30b8\u30c3\u30af\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\u8a73\u7d30\u306f\u5272\u611b\u3057\u307e\u3059\u304c\u5165\u529b\u5024\u3092\u4e0b\u4f4d\u30d3\u30c3\u30c8\u304b\u3089a0~a3\u3060\u3068\u5b9a\u7fa9\u3057\u3066\u3042\u3052\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u8ad6\u7406\u5f0f\u3092\u5b9f\u73fe\u3059\u308c\u3070\u826f\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n!a0 & !a2 | a1 & !a3 | a1 & !a2 | !a0 & a1 | !a2 & a3 | a0 & a2 & !a3 | a0 & !a1 & a2 | a0 & !a1 & a3\n\n\u4eca\u307e\u3067\u3068\u6bd4\u3079\u3066\u4e00\u6c17\u306b\u8907\u96d1\u306b\u306a\u308a\u307e\u3057\u305f\u306d\u3002\u3061\u306a\u307f\u306b\u3001\u4eca\u307e\u3067\u306e\u8ad6\u7406\u7d20\u5b50\u306f2\u5909\u6570\u3057\u304b\u5f15\u6570\u304c\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u3067\u66f8\u3053\u3046\u3068\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002\nOr(\n    And(Not(a[0]), Not(a[2])), \n    Or(\n        And(a[1], Not(a[2])),\n        Or(\n            And(a[1], Not(a[2]))\n            Or(\n                And(Not(a[0]), a[1])\n                ... \u4ee5\u4e0b\u7701\u7565\n            )\n        )\n    )\n\n\u3053\u308c\u30927\u7a2e\u985e\u66f8\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3068\u304b\u3001\u8003\u3048\u305f\u3060\u3051\u3067\u66f8\u304f\u306e\u3092\u8ae6\u3081\u305d\u3046\u3067\u3059\u306d\u3002\u53ef\u5909\u9577\u5f15\u6570\u306e\u8ad6\u7406\u7d20\u5b50\u3092\u4f5c\u308c\u3070\u3001\u307e\u3060\u7dba\u9e97\u306b\u66f8\u3051\u305d\u3046\u306a\u306e\u3067\u3001\u305d\u306e\u65b9\u6cd5\u3067\u3084\u308b\u306e\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3001\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002AND\u3092*\u3001OR\u3092+\u3001NOT\u3092!\u3067\u66f8\u3051\u305f\u3089\u3001\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\u3092\u8003\u3048\u3066\u3082\u3061\u3087\u3046\u3069\u826f\u3055\u305d\u3046\u3067\u30593\u3002\n\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u307e\u3059\u3002Circuit\u306b3\u3064\u306e\u95a2\u6570\u3092\u8db3\u3059\u3060\u3051\u3067\u3059\u3002\noperator fun Circuit.plus(c: Circuit) = Or(this, c)\noperator fun Circuit.times(c: Circuit) = And(this, c)\noperator fun Circuit.not() = Not(this)\n\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u62e1\u5f35\u95a2\u6570\u3067\u8db3\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3053\u308c\u3089\u3092\u4f7f\u3046\u3068\u3001\u3055\u3063\u304d\u306e\u3084\u3084\u3053\u3057\u304b\u3063\u305f\u30cd\u30b9\u30c8\u304c\n!a[0]*!a[2] + a[1]*!a[3] + a[1]*!a[2] + !a[0]*a[1] + !a[2]*a[3] + a[0]*a[2]* a[3] + a[0]*!a[1]* a[2] + a[0]*!a[1]*a[3]                \n\n\u3053\u3046\u306a\u308a\u307e\u3059\u3002\u304b\u306a\u308a\u8aad\u307f\u3084\u3059\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u3067\u30b9\u30c8\u30ec\u30b9\u306a\u304f7\u30bb\u30b0\u30e1\u30f3\u30c8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3092\u5b9f\u88c5\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n\u307e\u3068\u3081\n\u3044\u304b\u304c\u3067\u3057\u305f\u3067\u3057\u3087\u3046\u304b\uff1f\n\u4eca\u56de\u306f\u8ad6\u7406\u56de\u8def\u3068\u3044\u3046\u30d1\u30ba\u30eb\u306e\u3088\u3046\u306a\u984c\u6750\u3092\u4f7f\u3063\u3066\u3001Kotlin\u306e\u3044\u304f\u3064\u304b\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002Kotlin\u306b\u306fdelegate\u3084\u62e1\u5f35\u95a2\u6570\u3001\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306a\u3069\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u3088\u308a\u898b\u3084\u3059\u304f\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u304c\u8272\u3005\u76db\u308a\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u308b\u3068\u306a\u3093\u3060\u304b\u5b09\u3057\u304f\u306a\u308a\u307e\u3059\u3088\u306d\u3002\n\u3053\u306e\u8a18\u4e8b\u304c\u3001Kotlin\u3092\u3061\u3087\u3063\u3068\u89e6\u3063\u3066\u307f\u3088\u3046\u304b\u306a\u3068\u601d\u3063\u3066\u3044\u308b\u65b9\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\u306a\u304a\u3001\u4f5c\u3063\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fgithub\u306b\u4e0a\u3052\u307e\u3057\u305f\u306e\u3067\u3001\u3088\u3051\u308c\u3070\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/noripi/logical_circuit\n\n\n\n\nKotlin\u306b\u306fPair<A,B>\u3084Triple<A,B,C>\u3068\u3044\u3063\u305f\u30c7\u30fc\u30bf\u69cb\u9020\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u3001\u578b\u306e\u7a2e\u985e\u304c1\u7a2e\u985e\u3067\u826f\u304b\u3063\u305f\u306e\u3067\u5225\u9014\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002\u00a0\u21a9\n\n\n\u4eca\u56de\u306f\u8ad6\u7406\u56de\u8def\u3092\u30af\u30e9\u30b9\u62e1\u5f35\u3067\u4f5c\u3063\u3066\u3044\u304d\u307e\u3057\u305f\u304c\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5165\u529b\u5024\u3092\u6301\u3064\u8a2d\u8a08\u306b\u306a\u3063\u3066\u3044\u3066\u8ad6\u7406\u56de\u8def\u306e\u30a4\u30e1\u30fc\u30b8\u3068\u5909\u308f\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u5185\u90e8\u306b\u95a2\u6570\u3092\u6301\u3063\u3066\u3001\u95a2\u6570\u306e\u5408\u6210\u3067\u62e1\u5f35\u3057\u3066\u3044\u304f\u65b9\u6cd5\u3067\u4f5c\u308b\u3068\u3001\u3088\u308a\u30a4\u30e1\u30fc\u30b8\u306b\u8fd1\u3044\u8ad6\u7406\u56de\u8def\u304c\u4f5c\u308c\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\u00a0\u21a9\n\n\n\u5b9f\u969b\u306b\u3001\u30d6\u30fc\u30eb\u6f14\u7b97\u3067\u306fAND\u3092*\u3001OR\u3092\uff0b\u3001NOT\u3092\uff01\u3067\u66f8\u304f\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\u00a0\u21a9\n\n\n\n\u3053\u306e\u8a18\u4e8b\u306f **Retty** Advent Calendar 11\u65e5\u76ee\u3067\u3059\u3002\n\u6628\u65e5\u306f\u8349\u5c71\u304f\u3093(@Masaki-Kusayama)\u306e[web\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306e\u901f\u5ea6\u6539\u5584\u306b\u53d6\u308a\u7d44\u3093\u3067\u307f\u305f\u8a71](http://qiita.com/Masaki-Kusayama/items/17fdfa1a1beec83c0108)\u3067\u3057\u305f\u3002\n\n\u6700\u8fd1\u3001\u5df7\u3067\u306b\u308f\u304b\u306b\u4eba\u6c17\u304c\u9ad8\u307e\u3063\u3066\u3044\u308bKotlin\u3067\u3059\u304c\u3001\u3044\u3056\u3084\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u3066\u3082\u3001\u624b\u9803\u306a\u984c\u6750\u304c\u624b\u5143\u306b\u306a\u304f\u3066\u56f0\u3063\u3066\u3044\u307e\u305b\u3093\u304b\uff1f\n\u4eca\u56de\u306f\u3001\u624b\u8efd\u306b\u697d\u3057\u304f\u66f8\u3051\u305d\u3046\u306a\u8ad6\u7406\u56de\u8def\u3092Kotlin\u3067\u66f8\u3044\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u8ad6\u7406\u56de\u8def\n\u8ad6\u7406\u56de\u8def\u306f\u3001\u8ad6\u7406\u6f14\u7b97\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3044\u304f\u3053\u3068\u3067\u30010/1\u306e\u5165\u529b\u304b\u3089\u671f\u5f85\u3059\u308b\u51fa\u529b\u3092\u5f97\u308b\u305f\u3081\u306e\u56de\u8def\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306f2\u3064\u306e2bit\u6570\u5024\u3092\u52a0\u7b97\u3057\u305f\u7d50\u679c\u3092\u5f97\u308b\u8ad6\u7406\u6f14\u7b97\u306e\u8868\u3067\u3059\u3002\n\n| input0[] | input1[] | output |\n|:-:|:-:|:-:|\n|   00|   00|   00|\n|   00|   01|   01|\n|   00|   10|   10|\n|   00|   11|   11|\n|   01|   00|   01|\n|  ...|  ...|  ...|\n\n\u8ad6\u7406\u56de\u8def\u3092\u5b9f\u88c5\u3059\u308b\u3068\u304d\u306b\u306f\u3001AND/OR/NOT\u306e\u3088\u3046\u306a\u57fa\u672c\u7684\u306a\u6f14\u7b97\u304c\u3067\u304d\u308b\u8ad6\u7406\u7d20\u5b50\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002CPU\u306a\u3093\u304b\u3082\u8ad6\u7406\u7d20\u5b50\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5922\u3044\u3063\u3071\u3044\u3067\u3059\u306d\u3002\n\n# \u8ad6\u7406\u56de\u8def\u3092Kotlin\u3067\u5b9f\u88c5\u3059\u308b\n\u8ad6\u7406\u56de\u8def\u3068\u4e00\u53e3\u306b\u8a00\u3063\u3066\u3082\u7a2e\u985e\u306f\u69d8\u3005\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u300c4bit\u52a0\u7b97\u5668\u300d\u3092\u4f5c\u308d\u3046\u3068\u601d\u3044\u307e\u3059\u30024bit\u306e2\u9032\u6570\u30922\u3064\u5165\u529b\u306b\u53d6\u308a\u30014bit\u306e2\u9032\u6570\u30921\u3064\u51fa\u529b\u3059\u308b\u56de\u8def\u3067\u3059\u3002\n\n## \u30c7\u30fc\u30bf\u69cb\u9020\n\u8ad6\u7406\u56de\u8def\u3067\u306f\u3001\u305d\u306e\u6027\u8cea\u4e0ainput\u3084output\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u306e\u3067\u3001\u307e\u305a\u306f\u30c7\u30fc\u30bf\u306e\u7d44\u3092\u4f5c\u308c\u308bTuple\u3068\u3001\u5b50\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059[^1]\u3002\n\n```kotlin:Tuple\nabstract class Tuple<out T>(vararg private val output: T) {\n  operator fun get(idx: Int): T = this.output[idx]\n}\n```\n\n\u3053\u306e\u3068\u304dget\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u3066\u304a\u304f\u3053\u3068\u3067\n\n```kotlin\nval t = object: Tuple<Int>(0, 1, 2, 3)\nprintln(t[3]) // 3\n```\n\n\u307f\u305f\u3044\u306a\u66f8\u304d\u65b9\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u6570\u304c\u5c11\u306a\u3044Tuple\u3067\u3042\u308c\u3070\u3001\u7d44\u307f\u8fbc\u307f\u306ePair\u306e\u3088\u3046\u306b\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u30a2\u30af\u30bb\u30b9\u3055\u305b\u3066\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u6570\u304c\u591a\u304f\u306a\u308a\u305d\u3046\u3067\u3042\u308c\u3070\u4fbf\u5229\u306b\u306a\u308a\u305d\u3046\u306a\u306e\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\u3042\u3068\u306f\u3001\u3053\u308c\u3092\u62e1\u5f35\u3057\u305f\u5177\u8c61\u30af\u30e9\u30b9\u3068\u3057\u3066\u30012\u3064\u7d44\u30013\u3064\u7d44...\u3092\u5b9f\u88c5\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```kotlin:Structures\nclass Twins<out T>(first: T, second: T) : Tuple<T>(first, second) {\n    operator fun component1(): T = this[0]\n    operator fun component2(): T = this[1]\n}\n\nclass Triplets<out T>(first: T, second: T, third: T) : Tuple<T>(first, second, third) {\n    operator fun component1(): T = this[0]\n    operator fun component2(): T = this[1]\n    operator fun component3(): T = this[2]\n}\n```\n\ncomponent*\u95a2\u6570\u306f\u3001\u5206\u89e3\u5ba3\u8a00(Destructuring Declarations)\u3068\u3044\u3046\u3082\u306e\u3092\u4f7f\u3046\u306e\u306b\u5fc5\u8981\u306a\u95a2\u6570\u3067\u3001\u5b9f\u88c5\u3057\u3066\u304a\u304f\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```kotlin\nval triplets = Triplets<Int>(1, 2, 3) \nval (v1, v2, v3) = triplets\n```\n\n## \u56de\u8def\u306e\u5b9f\u88c5\n\n\u4eca\u56de\u306f\u56de\u8def\u3092\u6b21\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\u6700\u7d42\u7684\u306a\u51fa\u529b\u3082\u3001\u300c\u5165\u529b\u3092\u305d\u306e\u307e\u307e\u51fa\u529b\u3059\u308b\u56de\u8def\u300d\u3068\u8003\u3048\u3066\u3001\u3053\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u5f93\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```kotlin:Circuit\ninterface Circuit {\n    val outputs: Tuple<Circuit>\n\n    val output: Circuit\n        get() = this.outputs[0]\n}\n```\n\noutput\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3064\u304d\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u3059\u3002\u8ad6\u7406\u56de\u8def\u306e\u5834\u5408\u3001\u51fa\u529b\u304c1\u3064\u3057\u304b\u306a\u3044\u30b1\u30fc\u30b9\u3082\u305d\u308c\u306a\u308a\u306b\u3042\u308b\u306e\u3067\u3001\u30d8\u30eb\u30d1\u30fc\u3068\u3057\u3066\u7528\u610f\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n### NAND\u7d20\u5b50\u3092\u4f5c\u308b\n\u8ad6\u7406\u7d20\u5b50\u306b\u306fNAND\u7d20\u5b50\u3068\u3044\u3046\u7d20\u5b50\u304c\u3042\u308a\u307e\u3059\u3002!(A & B)\u3092\u8fd4\u3059\u7d20\u5b50\u3067\u3059\u304c\u3001\u3053\u306e\u7d20\u5b50\u306b\u306f\u5b8c\u5168\u6027\u304c\u3042\u3063\u3066\u3001\u3053\u306e\u7d20\u5b50\u3067\u5168\u3066\u306e\u8ad6\u7406\u6f14\u7b97\u3092\u5b9f\u88c5\u3067\u304d\u308b\u3053\u3068\u304c\u8a3c\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u3053\u3067\u4eca\u56de\u306fNAND\u3060\u3051\u5b9f\u88c5\u3057\u3066\u3001\u4ed6\u306fNAND\u3092\u4f7f\u3063\u305f\u30af\u30e9\u30b9\u3068\u3057\u3066\u5b9f\u88c5\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059[^2]\u3002\n\n\u307e\u305a\u3001Nand\u306e\u30ed\u30b8\u30c3\u30af\u3092\u4f5c\u308a\u307e\u3059\u3002\u3053\u3053\u306f\u666e\u901a\u306e\u6761\u4ef6\u5f0f\u3092\u4f7f\u3063\u3066\u4f5c\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u304c\u3001\u4ed6\u306e\u7d20\u5b50\u3082Nand\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u4f5c\u308c\u307e\u3059\u3002\n\n```kotlin:Nand\nclass Nand(private val inputA: Circuit, private val inputB: Circuit) : Circuit {\n    override val outputs: Tuple<Circuit> = <NAND\u306e\u7d50\u679c\u3092\u8fd4\u3059\u30ed\u30b8\u30c3\u30af>\n}\n```\n\n### NAND\u7d20\u5b50\u304b\u3089\u4ed6\u306e\u7d20\u5b50\u3092\u4f5c\u308b\n\u3055\u3066\u3001\u3053\u3053\u3067NAND\u7d20\u5b50\u304b\u3089\u4ed6\u306e\u7d20\u5b50\u3092\u4f5c\u3063\u3066\u3044\u304f\u306e\u3067\u3059\u304c\u3001NAND\u304c\u5b8c\u5168\u6027\u3092\u6301\u3063\u3066\u3044\u308b\u3068\u306f\u8a00\u3063\u3066\u3082\u3001\u305d\u308c\u3092\u76f4\u63a5\u4f7f\u3063\u3066\u3044\u304f\u306e\u306f\u5927\u5909\u306a\u306e\u3067\u3001NOT/AND/OR\u306e3\u3064\u306e\u7d20\u5b50\u3092\u4f5c\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\n\n\u307e\u305a\u3001NOT\u3092\u4f5c\u308a\u307e\u3059\u3002NOT(A)\u306fNAND(A,A)\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u3001Circuit\u306f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u3059\u306e\u3067\u3001Kotlin\u306edelegate\u3092\u3064\u304b\u3063\u3066\u7c21\u6f54\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```kotlin:Not\nclass Not(input: Circuit) : Circuit by Nand(input, input)\n```\n\n\u3053\u3046\u66f8\u304f\u3053\u3068\u3067\u3001Not\u30af\u30e9\u30b9\u306e\u51e6\u7406\u306fNand\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9Nand(input, input)\u304c\u4ee3\u308f\u308a\u306b\u3084\u3063\u3066\u304f\u308c\u307e\u3059\u3002\u540c\u69d8\u306b\u57fa\u790e\u7684\u306a\u7d20\u5b50\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n```kotlin:BasicElements\nclass And(inputA: Circuit, inputB: Circuit) : Circuit by Not(Nand(inputA, inputB))\nclass Nor(inputA: Circuit, inputB: Circuit) : Circuit by And(Not(inputA), Not(inputB))\nclass Or(inputA: Circuit, inputB: Circuit) : Circuit by Not(Nor(inputA, inputB))\nclass Xor(inputA: Circuit, inputB: Circuit) : Circuit by Not(Or(Nor(inputA, inputB), And(inputA, inputB)))\n```\n\n\u4e0a\u306e\u5b9f\u88c5\u306f\u4e00\u4f8b\u3067\u3001\u4e00\u822c\u306b\u7d20\u5b50\u306e\u7d44\u307f\u5408\u308f\u305b\u65b9\u306f\u8907\u6570\u3042\u308b\u306e\u3067\u3001\u30d1\u30ba\u30eb\u611f\u899a\u3067\u3084\u3063\u3066\u307f\u308b\u3068\u9762\u767d\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n### \u534a\u52a0\u7b97\u5668\u3068\u5168\u52a0\u7b97\u5668\n\u3044\u3088\u3044\u3088\u3001\u52a0\u7b97\u5668\u306e\u30d9\u30fc\u30b9\u3068\u306a\u308b\u534a\u52a0\u7b97\u5668\u3068\u5168\u52a0\u7b97\u5668\u3092\u4f5c\u308a\u307e\u3059\u3002\u534a\u52a0\u7b97\u5668\u306f2\u3064\u306e1\u30d3\u30c3\u30c8\u5024\u306e\u52a0\u7b97\u7d50\u679c\u3092\u8a08\u7b97\u3059\u308b\u56de\u8def\u3001\u5168\u52a0\u7b97\u5668\u306f3\u3064\uff082\u5024\u3068\u7e70\u308a\u4e0a\u304c\u308a\u5024\uff09\u306e\u52a0\u7b97\u7d50\u679c\u3092\u8a08\u7b97\u3059\u308b\u56de\u8def\u3067\u3059\u3002\u5168\u52a0\u7b97\u5668\u307e\u3067\u4f5c\u308c\u3070\u3001\u305d\u308c\u3092\u30d3\u30c3\u30c8\u6570\u5206\u7d44\u307f\u5408\u308f\u305b\u30664bit\u52a0\u7b97\u5668\u304c\u4f5c\u308c\u307e\u3059\u3002\n\n\u3053\u308c\u307e\u3067\u3068\u5927\u304d\u304f\u9055\u3046\u306e\u306f\u3001\u51fa\u529b\u304c\u8907\u6570\u5024\u306b\u306a\u3063\u3066Tuple\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u305f\u3081\u3001delegate\u304c\u4f7f\u3048\u306a\u3044\u70b9\u3067\u3059\u3002\u3072\u3068\u307e\u305a\u534a\u52a0\u7b97\u5668\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n| \u5165\u529bA | \u5165\u529bB | \u51fa\u529b |\n|:-:|:-:|:-:|\n| 0  | 0  | 00  |\n| 0  | 1  | 01  |\n| 1  | 0  | 01  |\n| 1  | 1  | 10  |\n\n```kotlin:HalfAdder\nclass HalfAdder(inputA: Circuit, inputB: Circuit) : Circuit {\n    override val outputs: Tuple<Circuit> = Twins(\n            Xor(inputA, inputB).output,\n            And(inputA, inputB).output\n    )\n}\n```\n\nby\u306f\u4f7f\u3048\u307e\u305b\u3093\u304c\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u30921\u3064\u5b9f\u88c5\u3059\u308c\u3070\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n\n\u7d9a\u3044\u3066\u5168\u52a0\u7b97\u5668\u3067\u3059\u3002\u5168\u52a0\u7b97\u5668\u306f\u3001\u30b7\u30f3\u30d7\u30eb\u306b3\u5024\u306e\u8868\u3092\u4f5c\u3063\u3066\u4f5c\u3063\u3066\u3082\u3088\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u4eca\u4f5c\u3063\u305f\u534a\u52a0\u7b97\u5668\u3092\u4f7f\u3063\u3066\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002HalfAdder\u306e\u7d50\u679c\u306e1\u306e\u4f4d\u3068\u30013\u3064\u76ee\u306e\u5024\u3092HalfAdder\u306b\u98df\u308f\u305b\u308c\u30701\u306e\u4f4d\u306f\u4f5c\u308c\u305d\u3046\u3067\u3059\u306d\u30022\u306e\u4f4d\u306f\u3001\u5404\u534a\u52a0\u7b97\u5668\u306e\u7e70\u308a\u4e0a\u304c\u308a\u5024\u306e\u3069\u3061\u3089\u304b\u304c1\u3067\u3042\u308c\u3070\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u3053\u308c\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3068\n\n```kotlin:FullAdder\nclass FullAdder(inputA: Circuit, inputB: Circuit, x: Circuit) : Circuit {\n    override val outputs: Tuple<Circuit> = HalfAdder(inputA, inputB).outputs\n        .let { val (sum1, carry1) = it as Twins\n            HalfAdder(sum1, x).outputs.let { val (sum2, carry2) = it as Twins\n                Twins(sum2, Or(carry1, carry2).output)\n            }\n        }\n}\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\u3044\u307e\u307e\u3067\u3088\u308a\u3060\u3044\u3076\u8907\u96d1\u306b\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u5148\u306bcomponent*\u7cfb\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u305f\u304a\u304b\u3052\u3067\u3001let\u306e\u4e2d\u306e\u30e9\u30e0\u30c0\u304c\u3001\u3061\u3087\u3063\u3068\u3060\u30512\u5909\u6570\u5f15\u6570\u306e\u95a2\u6570\u3063\u307d\u304f\u6271\u3048\u3066\u3044\u307e\u3059\u306d\u3002\n\n### 4bit\u52a0\u7b97\u5668\n\u8907\u6570bit\u306b\u306a\u3063\u305f\u52a0\u7b97\u5668\u306e\u8003\u3048\u65b9\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u3001\u4e0b\u4f4d\u30d3\u30c3\u30c8\u8a08\u7b97\u7d50\u679c\u306e\u7e70\u308a\u4e0a\u304c\u308a\u5024\u3068\u3001\u5165\u529b\u306e\u8a72\u5f53\u30d3\u30c3\u30c82\u3064\u306e\u52a0\u7b97\u7d50\u679c\u3092\u5168\u52a0\u7b97\u5668\u3067\u6c42\u3081\u3066\u3042\u3052\u308c\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\n```kotlin:TwoBitAdder\nclass FourBitAdder(inputA: Quadruplets<Circuit>, inputB: Quadruplets<Circuit>) : Circuit {\n    override val outputs: Tuple<Circuit> = FullAdder(inputA[0], inputB[0], Value.Zero).outputs\n        .let { val (sum0, carry0) = it as Twins\n            FullAdder(inputA[1], inputB[1], carry0).outputs\n                .let { val (sum1, carry1) = it as Twins\n                    FullAdder(inputA[2], inputB[2], carry1).outputs\n                        .let { val (sum2, carry2) = it as Twins\n                            Quadruplets(sum0, sum1, sum2,\n                                        FullAdder(inputA[3], inputB[3], carry2).output)\n                        }\n                }\n        }\n}\n```\n\u203b\u672c\u6587\u4e2d\u3067\u306f\u89e6\u308c\u3066\u3044\u307e\u305b\u3093\u304c\u3001Value\u30af\u30e9\u30b9\u306f\u3001Circuit\u3092\u5b9f\u88c5\u3057\u305f\u3001\u5b9a\u6570\u3092\u305d\u306e\u307e\u307e\u8fd4\u3059enum class\u3067\u3059\u3002\n\n\u3053\u3053\u307e\u3067\u3067\u304d\u308c\u3070\u3081\u3067\u305f\u304f4bit\u52a0\u7b97\u5668\u306e\u5b8c\u6210\u3067\u3059\uff01\n\n# \u304a\u307e\u3051: 7\u30bb\u30b0\u30e1\u30f3\u30c8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\n\u52a0\u7b97\u5668\u306f\u3053\u3053\u3067\u7d42\u308f\u308a\u3067\u3059\u304c\u3001\u305b\u3063\u304b\u304f\u3053\u3053\u307e\u3067\u4f5c\u3063\u305f\u306e\u3067\u3042\u308c\u3070\u30c7\u30b8\u30bf\u30eb\u6570\u5b57\u3067\u8868\u793a\u3057\u305f\u3044\u3067\u3059\u3088\u306d\u3002\u3068\u3044\u3046\u308f\u3051\u30677\u30bb\u30b0\u30e1\u30f3\u30c8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\u3053\u3046\u3044\u3046\u3084\u3064\u3067\u3059\u3002\n\n```\n ----          ----  ----          ----   ----  ----   ----   ----  \n|    |      |      |     | |    | |      |          | |    | |    | \n               ----  ----   ----   ----   ----         ----   ---- \n|    |      | |          |      |      | |    |     | |    |      |\n ----          ----  ----          ----   ----         ----   ----\n```\n\n\u3053\u308c\u3082\u30011\u30bb\u30b0\u30e1\u30f3\u30c8\u6bce\u306b\u8ad6\u7406\u56de\u8def\u3092\u7528\u610f\u3059\u308c\u3070\u305d\u308c\u3067\u5b9f\u73fe\u3067\u304d\u305d\u3046\u3067\u3059\u3002\u4eca\u56de\u306e\u5834\u54084bit\u306a\u306e\u3067\u3001-8~7\u3092\u8868\u793a\u3059\u308b\u30ed\u30b8\u30c3\u30af\u3092\u4f5c\u308c\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n\n\u4f8b\u3048\u3070\u3001\u4e00\u756a\u4e0a\u306e\u6a2a\u7dda\u3092\u51fa\u3059\u30ed\u30b8\u30c3\u30af\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\u8a73\u7d30\u306f\u5272\u611b\u3057\u307e\u3059\u304c\u5165\u529b\u5024\u3092\u4e0b\u4f4d\u30d3\u30c3\u30c8\u304b\u3089a0~a3\u3060\u3068\u5b9a\u7fa9\u3057\u3066\u3042\u3052\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u8ad6\u7406\u5f0f\u3092\u5b9f\u73fe\u3059\u308c\u3070\u826f\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n```\n!a0 & !a2 | a1 & !a3 | a1 & !a2 | !a0 & a1 | !a2 & a3 | a0 & a2 & !a3 | a0 & !a1 & a2 | a0 & !a1 & a3\n```\n\n\u4eca\u307e\u3067\u3068\u6bd4\u3079\u3066\u4e00\u6c17\u306b\u8907\u96d1\u306b\u306a\u308a\u307e\u3057\u305f\u306d\u3002\u3061\u306a\u307f\u306b\u3001\u4eca\u307e\u3067\u306e\u8ad6\u7406\u7d20\u5b50\u306f2\u5909\u6570\u3057\u304b\u5f15\u6570\u304c\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u3067\u66f8\u3053\u3046\u3068\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n\n```kotlin\nOr(\n    And(Not(a[0]), Not(a[2])), \n    Or(\n        And(a[1], Not(a[2])),\n        Or(\n            And(a[1], Not(a[2]))\n            Or(\n                And(Not(a[0]), a[1])\n                ... \u4ee5\u4e0b\u7701\u7565\n            )\n        )\n    )\n```\n\n\u3053\u308c\u30927\u7a2e\u985e\u66f8\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3068\u304b\u3001\u8003\u3048\u305f\u3060\u3051\u3067\u66f8\u304f\u306e\u3092\u8ae6\u3081\u305d\u3046\u3067\u3059\u306d\u3002\u53ef\u5909\u9577\u5f15\u6570\u306e\u8ad6\u7406\u7d20\u5b50\u3092\u4f5c\u308c\u3070\u3001\u307e\u3060\u7dba\u9e97\u306b\u66f8\u3051\u305d\u3046\u306a\u306e\u3067\u3001\u305d\u306e\u65b9\u6cd5\u3067\u3084\u308b\u306e\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3001\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002AND\u3092*\u3001OR\u3092+\u3001NOT\u3092!\u3067\u66f8\u3051\u305f\u3089\u3001\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\u3092\u8003\u3048\u3066\u3082\u3061\u3087\u3046\u3069\u826f\u3055\u305d\u3046\u3067\u3059[^3]\u3002\n\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u307e\u3059\u3002Circuit\u306b3\u3064\u306e\u95a2\u6570\u3092\u8db3\u3059\u3060\u3051\u3067\u3059\u3002\n\n```\noperator fun Circuit.plus(c: Circuit) = Or(this, c)\noperator fun Circuit.times(c: Circuit) = And(this, c)\noperator fun Circuit.not() = Not(this)\n```\n\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u62e1\u5f35\u95a2\u6570\u3067\u8db3\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3053\u308c\u3089\u3092\u4f7f\u3046\u3068\u3001\u3055\u3063\u304d\u306e\u3084\u3084\u3053\u3057\u304b\u3063\u305f\u30cd\u30b9\u30c8\u304c\n\n```kotlin\n!a[0]*!a[2] + a[1]*!a[3] + a[1]*!a[2] + !a[0]*a[1] + !a[2]*a[3] + a[0]*a[2]* a[3] + a[0]*!a[1]* a[2] + a[0]*!a[1]*a[3]                \n```\n\n\u3053\u3046\u306a\u308a\u307e\u3059\u3002\u304b\u306a\u308a\u8aad\u307f\u3084\u3059\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u3067\u30b9\u30c8\u30ec\u30b9\u306a\u304f7\u30bb\u30b0\u30e1\u30f3\u30c8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3092\u5b9f\u88c5\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n# \u307e\u3068\u3081\n\u3044\u304b\u304c\u3067\u3057\u305f\u3067\u3057\u3087\u3046\u304b\uff1f\n\u4eca\u56de\u306f\u8ad6\u7406\u56de\u8def\u3068\u3044\u3046\u30d1\u30ba\u30eb\u306e\u3088\u3046\u306a\u984c\u6750\u3092\u4f7f\u3063\u3066\u3001Kotlin\u306e\u3044\u304f\u3064\u304b\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002Kotlin\u306b\u306fdelegate\u3084\u62e1\u5f35\u95a2\u6570\u3001\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306a\u3069\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u3088\u308a\u898b\u3084\u3059\u304f\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u304c\u8272\u3005\u76db\u308a\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u308b\u3068\u306a\u3093\u3060\u304b\u5b09\u3057\u304f\u306a\u308a\u307e\u3059\u3088\u306d\u3002\n\n\u3053\u306e\u8a18\u4e8b\u304c\u3001Kotlin\u3092\u3061\u3087\u3063\u3068\u89e6\u3063\u3066\u307f\u3088\u3046\u304b\u306a\u3068\u601d\u3063\u3066\u3044\u308b\u65b9\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\u306a\u304a\u3001\u4f5c\u3063\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fgithub\u306b\u4e0a\u3052\u307e\u3057\u305f\u306e\u3067\u3001\u3088\u3051\u308c\u3070\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/noripi/logical_circuit\n\n[^1]: Kotlin\u306b\u306fPair&lt;A,B&gt;\u3084Triple&lt;A,B,C&gt;\u3068\u3044\u3063\u305f\u30c7\u30fc\u30bf\u69cb\u9020\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u3001\u578b\u306e\u7a2e\u985e\u304c1\u7a2e\u985e\u3067\u826f\u304b\u3063\u305f\u306e\u3067\u5225\u9014\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002\n[^2]: \u4eca\u56de\u306f\u8ad6\u7406\u56de\u8def\u3092\u30af\u30e9\u30b9\u62e1\u5f35\u3067\u4f5c\u3063\u3066\u3044\u304d\u307e\u3057\u305f\u304c\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5165\u529b\u5024\u3092\u6301\u3064\u8a2d\u8a08\u306b\u306a\u3063\u3066\u3044\u3066\u8ad6\u7406\u56de\u8def\u306e\u30a4\u30e1\u30fc\u30b8\u3068\u5909\u308f\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u5185\u90e8\u306b\u95a2\u6570\u3092\u6301\u3063\u3066\u3001\u95a2\u6570\u306e\u5408\u6210\u3067\u62e1\u5f35\u3057\u3066\u3044\u304f\u65b9\u6cd5\u3067\u4f5c\u308b\u3068\u3001\u3088\u308a\u30a4\u30e1\u30fc\u30b8\u306b\u8fd1\u3044\u8ad6\u7406\u56de\u8def\u304c\u4f5c\u308c\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\n[^3]: \u5b9f\u969b\u306b\u3001\u30d6\u30fc\u30eb\u6f14\u7b97\u3067\u306fAND\u3092*\u3001OR\u3092\uff0b\u3001NOT\u3092\uff01\u3067\u66f8\u304f\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\n", "tags": ["Kotlin", "\u8ad6\u7406\u56de\u8def"]}