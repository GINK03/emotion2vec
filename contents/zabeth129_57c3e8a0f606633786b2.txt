{"context": "\u3053\u306e\u8a18\u4e8b\u306fDjango2016\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e25\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u6700\u7d42\u65e5\u306b\u57fa\u672c\u7684\u306a\u3053\u3068\u3067\u6050\u7e2e\u3067\u3059\u304c\u3001\u81ea\u5206\u3067\u8ffd\u52a0\u3057\u305f\u3053\u3068\u304c\u306a\u304b\u3063\u305f\u306e\u3067context_processors\u306b\u3064\u3044\u3066\u52c9\u5f37\uff06\u5b9f\u88c5\u3057\u305f\u3053\u3068\u3092\u66f8\u304d\u307e\u3059\u3002\n\u203b\u3053\u306e\u8a18\u4e8b\u306fDjango1.10, Python3.5.2\u3067\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u306f\u4e00\u90e8\u7570\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\uff08TEMPLATE_LOADERS\u3084TEMPLATE_CONTEXT_PROCESSORS\u306fDjango1.10\u3067\u306f\u5ec3\u6b62\u3055\u308c\u3066\u3044\u307e\u3059\u3002\uff09\n\u305d\u3046\u3044\u3084\u3001Python3.6\u304c\u3067\u307e\u3057\u305f\u306d\uff01\n\u3053\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u3066\u3044\u308b\u3053\u3068: context_processors\u306e\u8ffd\u52a0\u65b9\u6cd5\u3001\u5b9f\u88c5\u4f8b\n\u3053\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u3066\u3044\u308b\u3053\u3068: context_processors\u306e\u5185\u90e8\u3067\u306e\u52d5\u304d\n\n\u304d\u3063\u304b\u3051\n\u4eca\u958b\u767a\u3057\u3066\u3044\u308b\u30b5\u30a4\u30c8\u3067\u306f\u73fe\u6642\u70b9\u3067\u306f\u5b8c\u5168\u306b\u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u3067template\u3092\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u30e2\u30d0\u30a4\u30eb\u3068PC\u3067\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u4e00\u90e8\u3092\u51fa\u3057\u5206\u3051\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304d\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u3001django-mobile\u3092\u4f7f\u304a\u3046\u3068\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u307e\u3060Django1.10\u306b\u672a\u5bfe\u5fdc\u3067\u3057\u305f\u3002\u81ea\u5206\u3067\u30d7\u30eb\u30ea\u30af\u3092\u3060\u3057\u3066\u5bfe\u5fdc\u3055\u305b\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3082\u3042\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3042\u307e\u308a\u6642\u9593\u304c\u306a\u3044\u306e\u3068\u3001\u305d\u3093\u306a\u306b\u96e3\u3057\u3044\u3053\u3068\u306f\u3057\u306a\u304f\u3066\u3088\u304b\u3063\u305f\u306e\u3067\u30b5\u30af\u30c3\u3068\u81ea\u5206\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u305f\u3060context_processors\u3092\u4f7f\u3063\u305f\u3053\u3068\u306a\u304b\u3063\u305f\u306e\u3067document\u3092\u8aad\u3080\u3068\u3053\u308d\u304b\u3089\u306f\u3058\u3081\u307e\u3057\u305f\u3002\u3081\u3061\u3083\u7c21\u5358\u3067\u3057\u305f\u3002\ndjango-mobile\u306fmiddleware\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u5fc5\u8981\u306a\u304b\u3063\u305f\u306e\u3067context_processors\u3060\u3051\u52c9\u5f37\u3057\u307e\u3057\u305f\u3002\n\ncontext_processors\u3068\u306f\nview\u304b\u3089\u76f4\u63a5\u81ea\u5206\u3067\u6e21\u3055\u306a\u304f\u3066\u3082\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4e0a\u3067\u5909\u6570\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n\n\u5b9f\u88c5\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068settings.py\u306eTEMPLATES\u306f\uff08\u305f\u3076\u3093\uff09\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\n\u4ee5\u4e0b\u3001django/templates/context_processors.py\u306e\u4e2d\u8eab\u3067\u3059\u3002\u9577\u3044\u306e\u3067\u9014\u4e2d\u306f\u7701\u7565\u3057\u3066\u307e\u3059\u3002\n\ndjango/templates/context_processors.py\n\n\"\"\"\nA set of request processors that return dictionaries to be merged into a\ntemplate context. Each function takes the request object as its only parameter\nand returns a dictionary to add to the context.\n\nThese are referenced from the 'context_processors' option of the configuration\nof a DjangoTemplates backend and used by RequestContext.\n\"\"\"\n\nfrom __future__ import unicode_literals\n\nimport itertools\n\nfrom django.conf import settings\nfrom django.middleware.csrf import get_token\nfrom django.utils.encoding import smart_text\nfrom django.utils.functional import SimpleLazyObject, lazy\n\n\ndef csrf(request):\n    \"\"\"\n    Context processor that provides a CSRF token, or the string 'NOTPROVIDED' if\n    it has not been provided by either a view decorator or the middleware\n    \"\"\"\n    def _get_val():\n        token = get_token(request)\n        if token is None:\n            # In order to be able to provide debugging info in the\n            # case of misconfiguration, we use a sentinel value\n            # instead of returning an empty dict.\n            return 'NOTPROVIDED'\n        else:\n            return smart_text(token)\n\n    return {'csrf_token': SimpleLazyObject(_get_val)}\n\n\"\"\"\n\u9014\u4e2d\u7701\u7565\n\"\"\"\n\ndef request(request):\n    return {'request': request}\n\n\n\n\u4e0a\u8a18\u306eTEMPLATES\u306econtext_processors\u306b\u95a2\u6570\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u3066\u3042\u3052\u308b\u3068\u305d\u306e\u95a2\u6570\u3092template\u5185\u3067\u547c\u3073\u51fa\u3057\u3001\u305d\u306e\u623b\u308a\u5024\u3092template\u4e0a\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002view\u304b\u3089template\u306b\u660e\u793a\u7684\u306b\u6e21\u3059\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3053\u3053\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u306e\u306f\u3001context_processors\u3067hoge\u3068\u3044\u3046\u95a2\u6570\u3092\u4f5c\u3063\u3066\u3082hoge\u3092template\u3067\u547c\u3073\u51fa\u305b\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3053\u3068\u3067\u3059\u3002\nview\u304b\u3089template\u306b\u5909\u6570\u3092\u6e21\u3059\u3068\u304d\u3068\u540c\u69d8\u3001dict\u3067\u6b32\u3057\u3044\u540d\u524d\u306e\u5909\u6570\u3068\u4e2d\u8eab\u3092\u6307\u5b9a\u3057\u3066\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u305d\u306edict\u306e\u30ad\u30fc\u3092template\u3067\u53c2\u7167\u3067\u304d\u308b\u5f62\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u4e0b\u8a18\u306e\u95a2\u6570hoge\u3092context_processors\u306b\u542b\u3080\u5834\u5408\u3001template\u4e0a\u3067\u306ffuga\u3092\u53c2\u7167\u3057\u3001\u6587\u5b57\u5217fugafuga\u304c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4e0a\u3067\u4f7f\u3048\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u5b9a\u7fa9\ndef hoge(request):\n    return {\"fuga\": \"fugafuga\"}\n\n\u53c2\u7167\n{{ fuga }}\n\n\u3057\u305f\u304c\u3063\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308bcsrf\u306b\u3064\u3044\u3066\u306fcsrf\u3067\u306f\u306a\u304fdjango/templates/context_processors.py\u306b\u3042\u308b\u3088\u3046\u306bcsrf_token\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\n{% csrf_token %}\n\n\n\u6ce8\u610f\n\u4e0a\u8a18\u306esettings.py\u3067\u306f'django.template.context_processors.csrf',\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u305b\u3093\u304c\u3001csrf\u306b\u3064\u3044\u3066\u306f\u7279\u5225\u6271\u3044\u3068\u306a\u3063\u3066\u304a\u308a\u3001\u4e0b\u8a18\u306e\u5834\u6240\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\ndjango/template/context.py\n\n# Hard-coded processor for easier use of CSRF protection.\n_builtin_context_processors = ('django.template.context_processors.csrf',)\n\n\n\n\ndjango/template/engine.py\nclass Engine(object):\n    \"\"\"\n    \u7701\u7565\n    \"\"\"\n\n    @cached_property\n    def template_context_processors(self):\n        context_processors = _builtin_context_processors\n        context_processors += tuple(self.context_processors)\n        return tuple(import_string(path) for path in context_processors)\n    \"\"\"\n    \u7701\u7565\n    \"\"\"\n\n\n\n\n\u81ea\u5206\u3067\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\u5192\u982d\u306b\u66f8\u3044\u305f\u3088\u3046\u306b\u3001django-mobile\u3068\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u3092\u3057\u305f\u3044\u306e\u3067\u3001request\u5185\u306b\u542b\u307e\u308c\u308b\u30e6\u30fc\u30b6\u30fc\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u60c5\u5831\u304b\u3089\u30b9\u30de\u30db\u304b\u3069\u3046\u304b\u5224\u65ad\u3057\u3001True or False\u3092\u8fd4\u3059context_processor\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u4f5c\u3063\u305f\u3082\u306e\u306f\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\u30e1\u30c1\u30e3\u7c21\u5358\u3067\u3059w\n\napp/context_processors.py\n\nimport re\nMOBILE_REGEXP = re.compile(r\"Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone|IEMobile|Opera Mini|WILLCOM\")\n\ndef is_mobile(request):\n    is_mobile = False\n    if MOBILE_REGEXP.search(request.META['HTTP_USER_AGENT']) is not None:\n        is_mobile = True\n    return {\"is_mobile\": is_mobile}\n\n\n\napp.context_processors.is_mobile\u3092TEMPLATES\u306econtext_processors\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nsettings.py\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n                'app.context_processors.is_mobile',  # \u3053\u308c\n            ],\n        },\n    },\n]\n\n\n\u305d\u3057\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306a\u304b\u3093\u3058\u3067\u4f7f\u3044\u307e\u3059\u3002\n{% if is_mobile == True %}\n<p>\u30e2\u30d0\u30a4\u30eb\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u3067\u3059</p>\n{% else %}\n<p>PC\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u3067\u3059</p>\n{% endif %}\n\n\n\u307e\u3068\u3081\ncontext_processor\u306e\u8ffd\u52a0\u306f\u3068\u3066\u3082\u7c21\u5358\u306a\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u5b9f\u88c5\u306e\u3084\u308a\u65b9\u3057\u304b\u8abf\u3079\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u6642\u9593\u304c\u3042\u308c\u3070\u5185\u90e8\u306e\u52d5\u4f5c\u3082\u3061\u3083\u3093\u3068\u52c9\u5f37\u3057\u305f\u3044\u3067\u3059\u3002\n\n\u6700\u5f8c\u306b\nDjango\u306e\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u304c\u3053\u3053\u307e\u3067\u57cb\u307e\u308b\u3068\u601d\u3063\u3066\u304a\u3089\u305a\u3001\u3068\u3066\u3082\u9a5a\u304d\u307e\u3057\u305f\u3002\u8907\u6570\u65e5\u62c5\u5f53\u3057\u3066\u3044\u305f\u3060\u3044\u305f\u65b9\u3082\u591a\u304f\u3001\u672c\u5f53\u306b\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01\n\u50d5\u81ea\u8eab\u306f\u307e\u3060\u521d\u5fc3\u8005\u30ec\u30d9\u30eb\u3067\u57fa\u672c\u7684\u306a\u6295\u7a3f\u304c\u591a\u304b\u3063\u305f\u306e\u3067\u3001\u6765\u5e74\u306e\u4eca\u9803\u306f\u3082\u3046\u5c11\u3057\u30cf\u30a4\u30ec\u30d9\u30eb\u306a\u3053\u3068\u3092\u66f8\u3051\u308b\u3068\u3044\u3044\u306a\u3041\u3068\u601d\u3044\u307e\u3059\uff01\uff08\u4f1a\u793e\u7684\u306b\u306f\u50d5\u304c\u30d0\u30ea\u30d0\u30ea\u958b\u767a\u3057\u3066\u308b\u306e\u306f\u826f\u3044\u3053\u3068\u3067\u306f\u306a\u3044\u3067\u3059\u304c...\uff01\uff09\n\u6765\u5e74\u3001\u4eca\u5e74\u3088\u308a\u3082Django\u304c\u65e5\u672c\u3067\u3082\u76db\u308a\u4e0a\u304c\u308b\u3088\u3046\u306b\u7948\u308a\u3064\u3064\u3001\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u6700\u7d42\u65e5\u3092\u3057\u3081\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u7686\u69d8\u3001\u30af\u30ea\u30b9\u30de\u30b9\u3092\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044\uff01\uff01\uff08\u5410\u8840\uff09\uff06\u826f\u3044\u304a\u5e74\u3092\uff01\uff01\uff01\n\u3053\u306e\u8a18\u4e8b\u306f[Django2016\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc](http://qiita.com/advent-calendar/2016/django)\u306e25\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u6700\u7d42\u65e5\u306b\u57fa\u672c\u7684\u306a\u3053\u3068\u3067\u6050\u7e2e\u3067\u3059\u304c\u3001\u81ea\u5206\u3067\u8ffd\u52a0\u3057\u305f\u3053\u3068\u304c\u306a\u304b\u3063\u305f\u306e\u3067context_processors\u306b\u3064\u3044\u3066\u52c9\u5f37\uff06\u5b9f\u88c5\u3057\u305f\u3053\u3068\u3092\u66f8\u304d\u307e\u3059\u3002\n\n\u203b\u3053\u306e\u8a18\u4e8b\u306fDjango1.10, Python3.5.2\u3067\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u306f\u4e00\u90e8\u7570\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\uff08`TEMPLATE_LOADERS`\u3084`TEMPLATE_CONTEXT_PROCESSORS`\u306fDjango1.10\u3067\u306f\u5ec3\u6b62\u3055\u308c\u3066\u3044\u307e\u3059\u3002\uff09\n\n\u305d\u3046\u3044\u3084\u3001Python3.6\u304c\u3067\u307e\u3057\u305f\u306d\uff01\n\n**\u3053\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u3066\u3044\u308b\u3053\u3068**: context_processors\u306e\u8ffd\u52a0\u65b9\u6cd5\u3001\u5b9f\u88c5\u4f8b\n**\u3053\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u3066\u3044\u308b\u3053\u3068**: context_processors\u306e\u5185\u90e8\u3067\u306e\u52d5\u304d\n\n# \u304d\u3063\u304b\u3051\n\u4eca\u958b\u767a\u3057\u3066\u3044\u308b\u30b5\u30a4\u30c8\u3067\u306f\u73fe\u6642\u70b9\u3067\u306f\u5b8c\u5168\u306b\u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u3067template\u3092\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u30e2\u30d0\u30a4\u30eb\u3068PC\u3067\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u4e00\u90e8\u3092\u51fa\u3057\u5206\u3051\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u305d\u3053\u3067\u3001[django-mobile](https://github.com/gregmuellegger/django-mobile)\u3092\u4f7f\u304a\u3046\u3068\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u307e\u3060Django1.10\u306b\u672a\u5bfe\u5fdc\u3067\u3057\u305f\u3002\u81ea\u5206\u3067\u30d7\u30eb\u30ea\u30af\u3092\u3060\u3057\u3066\u5bfe\u5fdc\u3055\u305b\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3082\u3042\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3042\u307e\u308a\u6642\u9593\u304c\u306a\u3044\u306e\u3068\u3001\u305d\u3093\u306a\u306b\u96e3\u3057\u3044\u3053\u3068\u306f\u3057\u306a\u304f\u3066\u3088\u304b\u3063\u305f\u306e\u3067\u30b5\u30af\u30c3\u3068\u81ea\u5206\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u305f\u3060context_processors\u3092\u4f7f\u3063\u305f\u3053\u3068\u306a\u304b\u3063\u305f\u306e\u3067document\u3092\u8aad\u3080\u3068\u3053\u308d\u304b\u3089\u306f\u3058\u3081\u307e\u3057\u305f\u3002\u3081\u3061\u3083\u7c21\u5358\u3067\u3057\u305f\u3002\n\ndjango-mobile\u306fmiddleware\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u5fc5\u8981\u306a\u304b\u3063\u305f\u306e\u3067context_processors\u3060\u3051\u52c9\u5f37\u3057\u307e\u3057\u305f\u3002\n\n# context_processors\u3068\u306f\nview\u304b\u3089\u76f4\u63a5\u81ea\u5206\u3067\u6e21\u3055\u306a\u304f\u3066\u3082\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4e0a\u3067\u5909\u6570\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n\n## \u5b9f\u88c5\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068settings.py\u306eTEMPLATES\u306f\uff08\u305f\u3076\u3093\uff09\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\n```py3\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n```\n\n\u4ee5\u4e0b\u3001django/templates/context_processors.py\u306e\u4e2d\u8eab\u3067\u3059\u3002\u9577\u3044\u306e\u3067\u9014\u4e2d\u306f\u7701\u7565\u3057\u3066\u307e\u3059\u3002\n\n```py3:django/templates/context_processors.py\n\n\"\"\"\nA set of request processors that return dictionaries to be merged into a\ntemplate context. Each function takes the request object as its only parameter\nand returns a dictionary to add to the context.\n\nThese are referenced from the 'context_processors' option of the configuration\nof a DjangoTemplates backend and used by RequestContext.\n\"\"\"\n\nfrom __future__ import unicode_literals\n\nimport itertools\n\nfrom django.conf import settings\nfrom django.middleware.csrf import get_token\nfrom django.utils.encoding import smart_text\nfrom django.utils.functional import SimpleLazyObject, lazy\n\n\ndef csrf(request):\n    \"\"\"\n    Context processor that provides a CSRF token, or the string 'NOTPROVIDED' if\n    it has not been provided by either a view decorator or the middleware\n    \"\"\"\n    def _get_val():\n        token = get_token(request)\n        if token is None:\n            # In order to be able to provide debugging info in the\n            # case of misconfiguration, we use a sentinel value\n            # instead of returning an empty dict.\n            return 'NOTPROVIDED'\n        else:\n            return smart_text(token)\n\n    return {'csrf_token': SimpleLazyObject(_get_val)}\n\n\"\"\"\n\u9014\u4e2d\u7701\u7565\n\"\"\"\n\ndef request(request):\n    return {'request': request}\n\n```\n\n\n\u4e0a\u8a18\u306eTEMPLATES\u306e`context_processors`\u306b\u95a2\u6570\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u3066\u3042\u3052\u308b\u3068\u305d\u306e\u95a2\u6570\u3092template\u5185\u3067\u547c\u3073\u51fa\u3057\u3001\u305d\u306e\u623b\u308a\u5024\u3092template\u4e0a\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002view\u304b\u3089template\u306b\u660e\u793a\u7684\u306b\u6e21\u3059\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u3053\u3053\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u306e\u306f\u3001`context_processors`\u3067`hoge`\u3068\u3044\u3046\u95a2\u6570\u3092\u4f5c\u3063\u3066\u3082hoge\u3092template\u3067\u547c\u3073\u51fa\u305b\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3053\u3068\u3067\u3059\u3002\nview\u304b\u3089template\u306b\u5909\u6570\u3092\u6e21\u3059\u3068\u304d\u3068\u540c\u69d8\u3001dict\u3067\u6b32\u3057\u3044\u540d\u524d\u306e\u5909\u6570\u3068\u4e2d\u8eab\u3092\u6307\u5b9a\u3057\u3066\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u305d\u306edict\u306e\u30ad\u30fc\u3092template\u3067\u53c2\u7167\u3067\u304d\u308b\u5f62\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u4e0b\u8a18\u306e\u95a2\u6570hoge\u3092context_processors\u306b\u542b\u3080\u5834\u5408\u3001template\u4e0a\u3067\u306ffuga\u3092\u53c2\u7167\u3057\u3001\u6587\u5b57\u5217fugafuga\u304c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4e0a\u3067\u4f7f\u3048\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5b9a\u7fa9\n\n```py3\ndef hoge(request):\n    return {\"fuga\": \"fugafuga\"}\n```\n\n\u53c2\u7167\n\n```\n{{ fuga }}\n```\n\n\u3057\u305f\u304c\u3063\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308bcsrf\u306b\u3064\u3044\u3066\u306fcsrf\u3067\u306f\u306a\u304f`django/templates/context_processors.py`\u306b\u3042\u308b\u3088\u3046\u306bcsrf_token\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\n\n```\n{% csrf_token %}\n```\n\n### \u6ce8\u610f\n\u4e0a\u8a18\u306esettings.py\u3067\u306f`'django.template.context_processors.csrf',`\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u305b\u3093\u304c\u3001csrf\u306b\u3064\u3044\u3066\u306f\u7279\u5225\u6271\u3044\u3068\u306a\u3063\u3066\u304a\u308a\u3001\u4e0b\u8a18\u306e\u5834\u6240\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```py3:django/template/context.py\n\n# Hard-coded processor for easier use of CSRF protection.\n_builtin_context_processors = ('django.template.context_processors.csrf',)\n\n```\n\n```py3:django/template/engine.py\nclass Engine(object):\n    \"\"\"\n    \u7701\u7565\n    \"\"\"\n\n    @cached_property\n    def template_context_processors(self):\n        context_processors = _builtin_context_processors\n        context_processors += tuple(self.context_processors)\n        return tuple(import_string(path) for path in context_processors)\n    \"\"\"\n    \u7701\u7565\n    \"\"\"\n\n```\n\n\n## \u81ea\u5206\u3067\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\n\u5192\u982d\u306b\u66f8\u3044\u305f\u3088\u3046\u306b\u3001django-mobile\u3068\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u3092\u3057\u305f\u3044\u306e\u3067\u3001request\u5185\u306b\u542b\u307e\u308c\u308b\u30e6\u30fc\u30b6\u30fc\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306e\u60c5\u5831\u304b\u3089\u30b9\u30de\u30db\u304b\u3069\u3046\u304b\u5224\u65ad\u3057\u3001True or False\u3092\u8fd4\u3059context_processor\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u4f5c\u3063\u305f\u3082\u306e\u306f\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\u30e1\u30c1\u30e3\u7c21\u5358\u3067\u3059w\n\n```py3:app/context_processors.py\n\nimport re\nMOBILE_REGEXP = re.compile(r\"Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone|IEMobile|Opera Mini|WILLCOM\")\n\ndef is_mobile(request):\n    is_mobile = False\n    if MOBILE_REGEXP.search(request.META['HTTP_USER_AGENT']) is not None:\n        is_mobile = True\n    return {\"is_mobile\": is_mobile}\n\n```\n\n`app.context_processors.is_mobile`\u3092TEMPLATES\u306e`context_processors`\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```py3:settings.py\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n                'app.context_processors.is_mobile',  # \u3053\u308c\n            ],\n        },\n    },\n]\n```\n\n\u305d\u3057\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306a\u304b\u3093\u3058\u3067\u4f7f\u3044\u307e\u3059\u3002\n\n```html\n{% if is_mobile == True %}\n<p>\u30e2\u30d0\u30a4\u30eb\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u3067\u3059</p>\n{% else %}\n<p>PC\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u3067\u3059</p>\n{% endif %}\n```\n\n## \u307e\u3068\u3081\ncontext_processor\u306e\u8ffd\u52a0\u306f\u3068\u3066\u3082\u7c21\u5358\u306a\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u5b9f\u88c5\u306e\u3084\u308a\u65b9\u3057\u304b\u8abf\u3079\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u6642\u9593\u304c\u3042\u308c\u3070\u5185\u90e8\u306e\u52d5\u4f5c\u3082\u3061\u3083\u3093\u3068\u52c9\u5f37\u3057\u305f\u3044\u3067\u3059\u3002\n\n\n# \u6700\u5f8c\u306b\nDjango\u306e\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u304c\u3053\u3053\u307e\u3067\u57cb\u307e\u308b\u3068\u601d\u3063\u3066\u304a\u3089\u305a\u3001\u3068\u3066\u3082\u9a5a\u304d\u307e\u3057\u305f\u3002\u8907\u6570\u65e5\u62c5\u5f53\u3057\u3066\u3044\u305f\u3060\u3044\u305f\u65b9\u3082\u591a\u304f\u3001\u672c\u5f53\u306b\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01\n\n\u50d5\u81ea\u8eab\u306f\u307e\u3060\u521d\u5fc3\u8005\u30ec\u30d9\u30eb\u3067\u57fa\u672c\u7684\u306a\u6295\u7a3f\u304c\u591a\u304b\u3063\u305f\u306e\u3067\u3001\u6765\u5e74\u306e\u4eca\u9803\u306f\u3082\u3046\u5c11\u3057\u30cf\u30a4\u30ec\u30d9\u30eb\u306a\u3053\u3068\u3092\u66f8\u3051\u308b\u3068\u3044\u3044\u306a\u3041\u3068\u601d\u3044\u307e\u3059\uff01\uff08\u4f1a\u793e\u7684\u306b\u306f\u50d5\u304c\u30d0\u30ea\u30d0\u30ea\u958b\u767a\u3057\u3066\u308b\u306e\u306f\u826f\u3044\u3053\u3068\u3067\u306f\u306a\u3044\u3067\u3059\u304c...\uff01\uff09\n\n\u6765\u5e74\u3001\u4eca\u5e74\u3088\u308a\u3082Django\u304c\u65e5\u672c\u3067\u3082\u76db\u308a\u4e0a\u304c\u308b\u3088\u3046\u306b\u7948\u308a\u3064\u3064\u3001\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u6700\u7d42\u65e5\u3092\u3057\u3081\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u7686\u69d8\u3001\u30af\u30ea\u30b9\u30de\u30b9\u3092\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044\uff01\uff01\uff08\u5410\u8840\uff09\uff06\u826f\u3044\u304a\u5e74\u3092\uff01\uff01\uff01\n", "tags": ["Django", "Python"]}