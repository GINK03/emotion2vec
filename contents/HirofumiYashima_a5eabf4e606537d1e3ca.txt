{"context": " More than 1 year has passed since last update.\n\nOpenWeatherMap \u306f\u3001\u304a\u5929\u6c17\u30c7\u30fc\u30bf\u3092API\u7d4c\u7531\u3067\u7121\u6599\u3067\u53d6\u5f97\u3067\u304d\u308b\u3053\u3068\u3067\u6709\u540d\u306a\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3067\u3059\u3002\n\nOpenWeatherMap \u30c8\u30c3\u30d7\u30da\u30fc\u30b8\n\n\n\n\n\u6559\u6750\u30b9\u30e9\u30a4\u30c9\n\n\n(SlideShare) tera monagi\u3055\u3093 \u300c\u6771\u4eacR\u975e\u516c\u5f0f\u304a\u3058\u3055\u3093\u304c\u6559\u3048\u308b\u672c\u5f53\u306b\u6c17\u6301\u3061\u3044\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u4f5c\u6210\u6cd5\u300d\n\n\u4ee5\u4e0b\u3001\u4e0a\u8a18\u30b9\u30e9\u30a4\u30c9\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u68b1\u5305\u3057\u3066\u3044\u308b\u4e2d\u8eab\u306e\u30b3\u30fc\u30c9\u3092\u3001\u5199\u7d4c\u3057\u3066\u5bfe\u8a71\u7684\u306b\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001R\u8a00\u8a9e\u304b\u3089OpenWeatherMap\u306eAPI\u3092\u53e9\u3044\u3066\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u7df4\u7fd2\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u3001\u30d6\u30e9\u30a6\u30b6(Google Chrome\u3092\u4f7f\u7528\uff09\u306eURL\u7a93\u306b\u3001URL\u3092\u624b\u6253\u3061\u3067\u6253\u3061\u8fbc\u3093\u3067\u307f\u308b\n\n\nGoogle Chrome\nhttp://api.openweathermap.org/data/2.5/weather?q=Tokyo,jp\n\n\n\n\nR\ninstall.packages(c(\"RCurl\", \"rjson\"))\nlibrary(RCurl); library(rjson)\n\n\nURL.CURRENT <- \"http://api.openweathermap.org/data/2.5/weather?\"\nprint(URL.CURRENT)\n\n\n\n\u5b9f\u884c\u7d50\u679c\n[1] \"http://api.openweathermap.org/data/2.5/weather?\"\n\n\n\n\nR\ncurrent.weather <- getURL(paste0(URL.CURRENT, \"q=\", \"Tokyo,jp\"))\nprint(current.weather)\n\n\n\u30b3\u30ed\u30f3\uff08:\uff09\u3067 Key \u3068 Value \u304c\u5bfe\u306b\u306a\u3063\u305fJSON\u5f62\u5f0f\u3067\u3001\u30c7\u30fc\u30bf\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\uff08\u578b\u306f\u3001character\u578b\uff09\n\n\u5b9f\u884c\u7d50\u679c\n[1] \"{\\\"coord\\\":{\\\"lon\\\":139.69,\\\"lat\\\":35.69},\\\"weather\\\":[{\\\"id\\\":803,\\\"main\\\":\\\"Clouds\\\",\\\"description\\\":\\\"broken clouds\\\",\\\"icon\\\":\\\"04d\\\"}],\\\"base\\\":\\\"stations\\\",\\\"main\\\":{\\\"temp\\\":310.06,\\\"pressure\\\":1012,\\\"humidity\\\":53,\\\"temp_min\\\":305.93,\\\"temp_max\\\":315.37},\\\"visibility\\\":10000,\\\"wind\\\":{\\\"speed\\\":4.1,\\\"deg\\\":140},\\\"clouds\\\":{\\\"all\\\":75},\\\"dt\\\":1438923538,\\\"sys\\\":{\\\"type\\\":1,\\\"id\\\":7619,\\\"message\\\":0.0112,\\\"country\\\":\\\"JP\\\",\\\"sunrise\\\":1438890804,\\\"sunset\\\":1438940413},\\\"id\\\":1850147,\\\"name\\\":\\\"Tokyo\\\",\\\"cod\\\":200}\\n\"\n\n\n\nR\nclass(current.weather)\n\n\n\n\u5b9f\u884c\u7d50\u679c\n[1] \"character\"\n\n\n\nR\u8a00\u8a9e\u306e{rjson}\u30d1\u30c3\u30b1\u30fc\u30b8\u306e fromJSON\u95a2\u6570\u306b\u6e21\u3057\u3066\u3001\u8fd4\u308a\u5024\u3092\u78ba\u8a8d\n\nR\nfromJSON(current.weather) \n\n\n\n\u5b9f\u884c\u7d50\u679c\n$coord\n$coord$lon\n[1] 139.69\n\n$coord$lat\n[1] 35.69\n\n\n$weather\n$weather[[1]]\n$weather[[1]]$id\n[1] 803\n\n$weather[[1]]$main\n[1] \"Clouds\"\n\n$weather[[1]]$description\n[1] \"broken clouds\"\n\n$weather[[1]]$icon\n[1] \"04d\"\n\n\n\n$base\n[1] \"stations\"\n\n$main\n$main$temp\n[1] 310.06\n\n$main$pressure\n[1] 1012\n\n$main$humidity\n[1] 53\n\n$main$temp_min\n[1] 305.93\n\n$main$temp_max\n[1] 315.37\n\n\n$visibility\n[1] 10000\n\n$wind\n$wind$speed\n[1] 4.1\n\n$wind$deg\n[1] 140\n\n\n$clouds\n$clouds$all\n[1] 75\n\n\n$dt\n[1] 1438923538\n\n$sys\n$sys$type\n[1] 1\n\n$sys$id\n[1] 7619\n\n$sys$message\n[1] 0.0112\n\n$sys$country\n[1] \"JP\"\n\n$sys$sunrise\n[1] 1438890804\n\n$sys$sunset\n[1] 1438940413\n\n\n$id\n[1] 1850147\n\n$name\n[1] \"Tokyo\"\n\n$cod\n[1] 200\n\n\n\u578b\u306f\u3001list\u578b\n\nR\ndata_json <- fromJSON(current.weather) \nprint(class(data_json))\n\n\n\n\u5b9f\u884c\u7d50\u679c\n[1] \"list\"\n\n\n\n\n\u4ee5\u4e0b\u3001tera monagi\u3055\u3093 Slide Share \u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u306e\u5de5\u7a0b\u304c\u793a\u3055\u308c\u3066\u3044\u308b\u81ea\u4f5c\u95a2\u6570\u3092\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u305b\u305a\u306b\u3001\u95a2\u6570\u306e\u307e\u307e\u5207\u308a\u51fa\u3057\u3066\u3001R\u4e0a\u3067\u5b9f\u884c\n\n\uff08\u95a2\u6570\u540d\u306f\u3001test()\u306b\u5909\u66f4\uff09\n\nR\ntest <- function(place)\n{\n  URL.CURRENT <- \"http://api.openweathermap.org/data/2.5/weather?\"\n  current.weather <- getURL(paste0(URL.CURRENT, \"q=\", place))\n  fromJSON(current.weather)  \n}\n\n\ntest(\"Tokyo,jp\")\n\n\n\n\u5b9f\u884c\u7d50\u679c\n$coord\n$coord$lon\n[1] 139.69\n\n$coord$lat\n[1] 35.69\n\n\n$weather\n$weather[[1]]\n$weather[[1]]$id\n[1] 803\n\n$weather[[1]]$main\n[1] \"Clouds\"\n\n$weather[[1]]$description\n[1] \"broken clouds\"\n\n$weather[[1]]$icon\n[1] \"04d\"\n\n\n\n$base\n[1] \"stations\"\n\n$main\n$main$temp\n[1] 310.06\n\n$main$pressure\n[1] 1012\n\n$main$humidity\n[1] 53\n\n$main$temp_min\n[1] 305.93\n\n$main$temp_max\n[1] 315.37\n\n\n$visibility\n[1] 10000\n\n$wind\n$wind$speed\n[1] 4.1\n\n$wind$deg\n[1] 140\n\n\n$clouds\n$clouds$all\n[1] 75\n\n\n$dt\n[1] 1438923538\n\n$sys\n$sys$type\n[1] 1\n\n$sys$id\n[1] 7619\n\n$sys$message\n[1] 0.0112\n\n$sys$country\n[1] \"JP\"\n\n$sys$sunrise\n[1] 1438890804\n\n$sys$sunset\n[1] 1438940413\n\n\n$id\n[1] 1850147\n\n$name\n[1] \"Tokyo\"\n\n$cod\n[1] 200\n\n\n\nR\n\nplace <- \"Tokyo,jp\"\nweather_data <- test(place)\n\nprint(weather_data$coord$lon);\nprint(weather_data$coord$lat);\nprint(weather_data$main$temp_min);\nprint(weather_data$main$temp_max);\n\n\n\n\u5b9f\u884c\u7d50\u679c\n> print(weather_data$coord$lon);\n[1] 139.69\n> print(weather_data$coord$lat);\n[1] 35.69\n> print(weather_data$main$temp_min);\n[1] 305.93\n> print(weather_data$main$temp_max);\n[1] 315.37\n\n\n\nR\nprint(paste0(\"\u7d4c\u5ea6: \", weather_data$coord$lon));\nprint(paste0(\"\u7def\u5ea6\uff1a \", weather_data$coord$lat));\nprint(paste0(\"\u6700\u4f4e\u6c17\u6e29: \", weather_data$main$temp_min));\nprint(paste0(\"\u6700\u9ad8\u6c17\u6e29: \", weather_data$main$temp_max));\n\n\n\n\u5b9f\u884c\u7d50\u679c\n> print(paste0(\"\u7d4c\u5ea6: \", weather_data$coord$lon));\n[1] \"\u7d4c\u5ea6: 139.69\"\n> print(paste0(\"\u7def\u5ea6\uff1a \", weather_data$coord$lat));\n[1] \"\u7def\u5ea6\uff1a 35.69\"\n> print(paste0(\"\u6700\u4f4e\u6c17\u6e29: \", weather_data$main$temp_min));\n[1] \"\u6700\u4f4e\u6c17\u6e29: 305.93\"\n> print(paste0(\"\u6700\u9ad8\u6c17\u6e29: \", weather_data$main$temp_max));\n[1] \"\u6700\u9ad8\u6c17\u6e29: 315.37\"\n\n\n\n\n\u3010 \u53c2\u8003 \u3011\n\n\nRYUS blog (2015/02/10) \u300cOpenWeatherMap\u3092\u5229\u7528\u3057\u3066\u5929\u6c17\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u300d\ns0hno\u3055\u3093 Qiita\u8a18\u4e8b\uff082013/12/16\uff09\u300c\u5929\u6c17\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u300d\n\n\n\n\u3010 \u5fdc\u7528\u4e8b\u4f8b \u3011\u5929\u6c17\u5225\u306b\u8272\u5206\u3051\u3057\u3066\u3001\u300c\u5929\u6c17 \u00d7 \u5834\u6240\u300d\u306e\u60c5\u5831 \u3092 \u5730\u56f3\u306b\u53ef\u8996\u5316\u3055\u305b\u308b\n\n\n-1) \u90fd\u9053\u5e9c\u770c\u540d \u3068 \u5929\u6c17 \u306b\u52a0\u3048\u3066\u3001GoogleMap\u306a\u3069\u3067\u300c\u4f4f\u6240\u300d\u21d2\u300c\u7def\u5ea6\u7d4c\u5ea6\u5ea7\u6a19\u300d\u3092\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u3066\u53d6\u5f97\u3057\u3066\u3001\u300c\u90fd\u9053\u5e9c\u770c\u540d, \u7def\u5ea6\u7d4c\u5ea6, \u5929\u6c17\u30ab\u30c6\u30b4\u30ea\u540d\u300d\u306edata.frame\u578b\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3002\n-2) Google Map \uff08or \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\uff09\u30de\u30c3\u30d7\u4e0a\u306b\u3001\u5929\u6c17\u5225\u306e\u8272\u5206\u3051\u30d4\u30f3\u3092\u7acb\u3066\u308b\n\n\n1. Google Map \u306b\u8868\u793a\u3055\u305b\u308b\u5834\u5408\n\n\n\uff08\u53c2\u8003\uff09Google Maps API for developers, Goolgle Maps \u6d3b\u7528\u8b1b\u5ea7 google_maps_api_2 \u300cMarkerClusterer\u3092\u4f7f\u3063\u3066\u30ab\u30c6\u30b4\u30ea\u5206\u3051\u3059\u308b\u300d\n\n\nMarkerClusterer \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3068\u5927\u91cf\u306e\u30de\u30fc\u30ab\u30fc\u3092\u7c21\u5358\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001\u30de\u30fc\u30ab\u30fc\u3092\u30ab\u30c6\u30b4\u30ea\u5206\u3051\u3057\u3066\u3001\u3055\u3089\u306bMarkerClusterer\u3092\u4f7f\u3046\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u30de\u30fc\u30ab\u30fc\u306e\u30ab\u30c6\u30b4\u30ea\u5206\u3051\n\u6700\u521d\u306b\u30de\u30fc\u30ab\u30fc\u3092\u30ab\u30c6\u30b4\u30ea\u5206\u3051\u3057\u307e\u3059\u3002\u30b3\u30fc\u30c9\u306e\u4e2d\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nJavaScript\nvar markers = {};\n\nfor(...) {\n category = data.category;\n\n var marker = createMarker({\n     position : latLng,\n     title : data.title,\n     icon : categoryIcons[data.category],\n     description : data.description\n   });\n\n markers[category].push(marker);\n}\n\n\n\n\uff08 \u4ee5\u4e0b\u3001\u4e0a\u8a18\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u3088\u308a\u4e00\u90e8\u8ee2\u8f09 \uff09\n\n\n\n2. \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u3001\u5730\u56f3\uff0b\u8272\u5206\u3051\u30d4\u30f3\u3092\u51fa\u529b\u3055\u305b\u308b\u5834\u5408\n\n\n\uff08\u53c2\u8003\uff09Hatena Blog Technically, technophobic. \uff082015/05/23\uff09\u300cchoroplethr\u3067\u5927\u962a\u5e02\u306e\u30b3\u30ed\u30d7\u30ec\u30b9\u56f3\u3092\u63cf\u304f\u300d\n\n\n\u5927\u962a\u90fd\u69cb\u60f3\u306e\u4f4f\u6c11\u6295\u7968\u3001\u76db\u308a\u4e0a\u304c\u3063\u3066\u307e\u3057\u305f\u306d\u3002\n\u95a2\u9023\u3057\u3066\u8abf\u3079\u3066\u305f\u3089\u3001\u5927\u962a\u5e02\u306eshp\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u3067\u624b\u306b\u5165\u308b\u307f\u305f\u3044\u3067\u3057\u305f\u3002\u30e9\u30a4\u30bb\u30f3\u30b9\u306fCC-BY\u3067\u3059\u3002\n\u5927\u962a\u5e02\u5e02\u653f \u30de\u30c3\u30d7\u30ca\u30d3\u304a\u304a\u3055\u304b\u30aa\u30fc\u30d7\u30f3\u30c7\u30fc\u30bf\u4e00\u89a7\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001\u3053\u308c\u3092choroplethr\u3067\u4f7f\u3046\u65b9\u6cd5\u3092\u63a2\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nchroplethr\u3068\u306f\n\u3053\u3093\u306a\u611f\u3058\u306e\u56f3\uff08\u30b3\u30ed\u30d7\u30ec\u30b9\u56f3\uff09\u3092\u63cf\u304f\u305f\u3081\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3059\u3002\n\n\uff08 \u4ee5\u4e0b\u3001\u4e0a\u8a18\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u3088\u308a\u4e00\u90e8\u8ee2\u8f09 \uff09\n\n\uff08 \u6700\u7d42\u7684\u306b\u51fa\u529b\u3055\u308c\u308b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb \uff09\n\n\n\n\uff08\u53c2\u8003\uff09Geegle API\u3092\u53e9\u3044\u3066\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\uff08geo coding)\u3059\u308b\u65b9\u6cd5\n\n\nGeocoding.jp\n\n\n\u4f4f\u6240\u3084\u30e9\u30f3\u30c9\u30de\u30fc\u30af\u540d\u304b\u3089\u7d4c\u5ea6\u3001\u7def\u5ea6\u3092\u691c\u7d22\u3057\u307e\u3059\u3002\u4e16\u754c\u6e2c\u5730\u7cfb(WGS84)\u5bfe\u5fdc\u3002\n\u65e5\u672c\u6e2c\u5730\u7cfb(TOKYO97)\u3063\u307d\u3044\u5ea7\u6a19\u51fa\u529b\u3001\u643a\u5e2f\u7528QR\u30b3\u30fc\u30c9\u51fa\u529b\u3001Google Earth\u9023\u643a\u306a\u3069\u304c\u884c\u3048\u307e\u3059\u3002 \n\n\nGeocoding.jp/api/ API verson 1.1\n\n\n\nYahoo!\u30d6\u30ed\u30b0 \u8ff7\u9014\u899a\u8def\u5922\u4e2d\u884c (2013/09/05)\u300cGoogle maps API \u3068\uff32\u3067\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u300d\n\n\u8a18\u4e8b\u30012013\u5e74\u590f\u3060\u304b\u3089\u3001Google\u306eAPI\u5909\u308f\u3063\u3066\u308b\uff1f\n\n\nR\nlibrary(RCurl)\nlibrary(RJSONIO)\n\nurl <- function(address, return.call = \"json\", sensor = \"false\") {\nroot <- \"http://maps.google.com/maps/api/geocode/\"\nu <- paste(root, return.call, \"?address=\", address, \"&sensor=\", \n                 sensor, sep = \"\")\n  return(URLencode(u))\n}\n\n\ngeoCode <- function(address, verbose = FALSE) {\n  if(verbose) cat(address, \"\\n\")\n  u <- url(address)\n  doc <- getURL(u)\n  x <- fromJSON(doc, simplify = FALSE)\n  if(x$status == \"OK\") {\n    lat <- x$results[[1]]$geometry$location$lat\n    lng <- x$results[[1]]$geometry$location$lng\n    location_type <- x$results[[1]]$geometry$location_type\n    formatted_address <- x$results[[1]]$formatted_address\n    return(c(lat, lng, location_type, formatted_address))\n  } else {\n    return(c(NA, NA, NA, NA))\n  }\n}\n\n\n\u4ee5\u4e0a\u3092\u5b9f\u884c\u3057\u3066\u95a2\u6570 geoCode \u3092\u767b\u9332\u3059\u308b\u3002\n\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u306f\u3001\u5f15\u6570\u3068\u3057\u3066\u3001\u201c\u65bd\u8a2d\u540d\u201d \u3042\u308b\u3044\u306f \u201c\u4f4f\u6240\u201d \u3092\u3053\u306e\u95a2\u6570\u306b\u6e21\u3057\u3066\u3084\u308c\u3070\u826f\u3044\u3002\u3082\u3061\u308d\u3093\u3001\u65e5\u672c\u8a9e\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3002\n\u4f8b\u3048\u3070\u3001\n\nR\ngeoCode(\"\u5343\u8449\u770c\u3000\u5186\u7167\u5bfa\")\n\n\n[1]  \"35.2902543\"                                                    \n[2]  \"140.2335945\"                                                   \n[3]  \"APPROXIMATE\"                                                   \n[4]  \"Japan, Chiba Prefecture, Isumi District, Otaki, Tamachi \u5186\u7167\u5bfa\"\n\n\u3042\u308b\u3044\u306f\u3001\u753a\u5f79\u5834\u306e\u4f4f\u6240\u3092\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u3067\u8abf\u3079\u3066\u3001\u305d\u308c\u3092\u5f15\u6570\u306b\u3059\u308b\u3002\n\nR\ngeoCode(\"\u5343\u8449\u770c\u5937\u9685\u90e1\u5927\u591a\u559c\u753a\u5927\u591a\u559c93\u756a\u5730\")\n\n\n[1]  \"35.2848301\"                                       \n[2]  \"140.2454165\"                                      \n[3]  \"APPROXIMATE\"                                      \n[4]  \"93 Otaki, Isumi District, Chiba Prefecture, Japan\"\n\n\n\nRWiki \u300cR\u3067\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u300d\n\n\n3.GoogleMapAPI\u306eGeoCording?(HTTP Request)\u3092\u5229\u7528\u3057\u3066\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0 \u2020\n\nR\n##GoogleMapAPI\u3092\u7528\u3044\u305f\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\naddress<-\"\u6c96\u7e04\u770c\u90a3\u8987\u5e02\u4e45\u7c73\uff12\u4e01\u76ee\uff14\u756a\uff11\uff14\u53f7\"\nreturnform<-\"xml\"#xmlorjson\nkey<-\"ABQIAAAA7Qa-RE_JYtVliR9OTauOexScAlgT1OMB91Iojh4cvnPDirRWVBRkKoWJQNoMN19LbzuRx7z0aIWHTQ\"#\u3053\u3053\u306fGoogleAPI\u3067\u3082\u3089\u3063\u305fkey\u3092\u767b\u9332\ntext1<-\"http://maps.google.com/maps/geo?q=\"\ntext2<-\"&output=\"\ntext3<-\"&key=\"\nsavefile<-\"c:\\\\geocode.xml\"\nEncodeAddress<-paste(c(\"\",charToRaw(iconv(address,\"CP932\",\"UTF-8\"))),collapse=\"%\")#\u306a\u304b\u307e\u3055\u3093\u306eURL\u30a8\u30f3\u30b3\u30fc\u30c9\nURLText<-paste(text1,EncodeAddress,text2,returnform,text3,key,sep=\"\")\ndownload.file(URLText,savefile)\n\n\n\u3067\u3001c:\u76f4\u4e0b\u306bgeocode.xml\u3067\u843d\u3061\u3066\u304d\u307e\u3059\u3002returnform<-\"xml\"#xmlorjson\u306e\u3068\u3053\u308d\u3067\u3001\u8fd4\u308a\u5024\u306e\u30d5\u30a9\u30fc\u30e0\u3092\u6307\u5b9a\u3057\u3066\u307e\u3059\u3002\uff08XML\u5f62\u5f0f\u304bJSON\u5f62\u5f0f\u304b\uff09xml\u306e\u30c7\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u6a5f\u4f1a\u306b\u30fb\u30fb\u30fb\u3002\n\n## OpenWeatherMap \u306f\u3001\u304a\u5929\u6c17\u30c7\u30fc\u30bf\u3092API\u7d4c\u7531\u3067\u7121\u6599\u3067\u53d6\u5f97\u3067\u304d\u308b\u3053\u3068\u3067\u6709\u540d\u306a\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3067\u3059\u3002\n\n### __OpenWeatherMap \u30c8\u30c3\u30d7\u30da\u30fc\u30b8__\n\n![1.PNG](https://qiita-image-store.s3.amazonaws.com/0/43487/17d33045-0053-f83a-b6ca-be2a9f5627da.png)\n\n___\n\n##__\u6559\u6750\u30b9\u30e9\u30a4\u30c9__\n\n#### __[(SlideShare) tera monagi\u3055\u3093 \u300c\u6771\u4eacR\u975e\u516c\u5f0f\u304a\u3058\u3055\u3093\u304c\u6559\u3048\u308b\u672c\u5f53\u306b\u6c17\u6301\u3061\u3044\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u4f5c\u6210\u6cd5\u300d](http://www.slideshare.net/teramonagi/r-38511360)__\n\n\n__\u4ee5\u4e0b\u3001\u4e0a\u8a18\u30b9\u30e9\u30a4\u30c9\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u68b1\u5305\u3057\u3066\u3044\u308b\u4e2d\u8eab\u306e\u30b3\u30fc\u30c9\u3092\u3001\u5199\u7d4c\u3057\u3066\u5bfe\u8a71\u7684\u306b\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001R\u8a00\u8a9e\u304b\u3089OpenWeatherMap\u306eAPI\u3092\u53e9\u3044\u3066\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u7df4\u7fd2\u3092\u3057\u3066\u307f\u307e\u3059\u3002__\n\n\n### __\u307e\u305a\u306f\u3001\u30d6\u30e9\u30a6\u30b6(Google Chrome\u3092\u4f7f\u7528\uff09\u306eURL\u7a93\u306b\u3001URL\u3092\u624b\u6253\u3061\u3067\u6253\u3061\u8fbc\u3093\u3067\u307f\u308b__\n\n```{GoogleChrome:Google Chrome}\nhttp://api.openweathermap.org/data/2.5/weather?q=Tokyo,jp\n```\n\n![2.PNG](https://qiita-image-store.s3.amazonaws.com/0/43487/191cced7-00b1-5234-af44-e9767f8e7992.png)\n\n\n\n\n\n```{R:R}\ninstall.packages(c(\"RCurl\", \"rjson\"))\nlibrary(RCurl); library(rjson)\n\n\nURL.CURRENT <- \"http://api.openweathermap.org/data/2.5/weather?\"\nprint(URL.CURRENT)\n```\n\n```{R:\u5b9f\u884c\u7d50\u679c}\n[1] \"http://api.openweathermap.org/data/2.5/weather?\"\n```\n\n___\n\n\n```{R:R}\ncurrent.weather <- getURL(paste0(URL.CURRENT, \"q=\", \"Tokyo,jp\"))\nprint(current.weather)\n```\n\n__\u30b3\u30ed\u30f3\uff08:\uff09\u3067 Key \u3068 Value \u304c\u5bfe\u306b\u306a\u3063\u305fJSON\u5f62\u5f0f\u3067\u3001\u30c7\u30fc\u30bf\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\uff08\u578b\u306f\u3001character\u578b\uff09__\n\n\n```{R:\u5b9f\u884c\u7d50\u679c}\n[1] \"{\\\"coord\\\":{\\\"lon\\\":139.69,\\\"lat\\\":35.69},\\\"weather\\\":[{\\\"id\\\":803,\\\"main\\\":\\\"Clouds\\\",\\\"description\\\":\\\"broken clouds\\\",\\\"icon\\\":\\\"04d\\\"}],\\\"base\\\":\\\"stations\\\",\\\"main\\\":{\\\"temp\\\":310.06,\\\"pressure\\\":1012,\\\"humidity\\\":53,\\\"temp_min\\\":305.93,\\\"temp_max\\\":315.37},\\\"visibility\\\":10000,\\\"wind\\\":{\\\"speed\\\":4.1,\\\"deg\\\":140},\\\"clouds\\\":{\\\"all\\\":75},\\\"dt\\\":1438923538,\\\"sys\\\":{\\\"type\\\":1,\\\"id\\\":7619,\\\"message\\\":0.0112,\\\"country\\\":\\\"JP\\\",\\\"sunrise\\\":1438890804,\\\"sunset\\\":1438940413},\\\"id\\\":1850147,\\\"name\\\":\\\"Tokyo\\\",\\\"cod\\\":200}\\n\"\n```\n\n\n```{R:R}\nclass(current.weather)\n```\n\n```{R:\u5b9f\u884c\u7d50\u679c}\n[1] \"character\"\n```\n\n___\n\n\n__R\u8a00\u8a9e\u306e{rjson}\u30d1\u30c3\u30b1\u30fc\u30b8\u306e fromJSON\u95a2\u6570\u306b\u6e21\u3057\u3066\u3001\u8fd4\u308a\u5024\u3092\u78ba\u8a8d__\n\n\n```{R:R}\nfromJSON(current.weather) \n```\n\n```{R:\u5b9f\u884c\u7d50\u679c}\n$coord\n$coord$lon\n[1] 139.69\n\n$coord$lat\n[1] 35.69\n\n\n$weather\n$weather[[1]]\n$weather[[1]]$id\n[1] 803\n\n$weather[[1]]$main\n[1] \"Clouds\"\n\n$weather[[1]]$description\n[1] \"broken clouds\"\n\n$weather[[1]]$icon\n[1] \"04d\"\n\n\n\n$base\n[1] \"stations\"\n\n$main\n$main$temp\n[1] 310.06\n\n$main$pressure\n[1] 1012\n\n$main$humidity\n[1] 53\n\n$main$temp_min\n[1] 305.93\n\n$main$temp_max\n[1] 315.37\n\n\n$visibility\n[1] 10000\n\n$wind\n$wind$speed\n[1] 4.1\n\n$wind$deg\n[1] 140\n\n\n$clouds\n$clouds$all\n[1] 75\n\n\n$dt\n[1] 1438923538\n\n$sys\n$sys$type\n[1] 1\n\n$sys$id\n[1] 7619\n\n$sys$message\n[1] 0.0112\n\n$sys$country\n[1] \"JP\"\n\n$sys$sunrise\n[1] 1438890804\n\n$sys$sunset\n[1] 1438940413\n\n\n$id\n[1] 1850147\n\n$name\n[1] \"Tokyo\"\n\n$cod\n[1] 200\n```\n\n__\u578b\u306f\u3001list\u578b__\n\n\n```{R:R}\ndata_json <- fromJSON(current.weather) \nprint(class(data_json))\n```\n\n```{R:\u5b9f\u884c\u7d50\u679c}\n[1] \"list\"\n```\n\n___\n\n###__\u4ee5\u4e0b\u3001tera monagi\u3055\u3093 Slide Share \u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u306e\u5de5\u7a0b\u304c\u793a\u3055\u308c\u3066\u3044\u308b\u81ea\u4f5c\u95a2\u6570\u3092\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u305b\u305a\u306b\u3001\u95a2\u6570\u306e\u307e\u307e\u5207\u308a\u51fa\u3057\u3066\u3001R\u4e0a\u3067\u5b9f\u884c__\n\n__\uff08\u95a2\u6570\u540d\u306f\u3001test()\u306b\u5909\u66f4\uff09__\n\n\n```{R:R}\ntest <- function(place)\n{\n  URL.CURRENT <- \"http://api.openweathermap.org/data/2.5/weather?\"\n  current.weather <- getURL(paste0(URL.CURRENT, \"q=\", place))\n  fromJSON(current.weather)  \n}\n\n       \ntest(\"Tokyo,jp\")\n```\n\n```{R:\u5b9f\u884c\u7d50\u679c}\n$coord\n$coord$lon\n[1] 139.69\n\n$coord$lat\n[1] 35.69\n\n\n$weather\n$weather[[1]]\n$weather[[1]]$id\n[1] 803\n\n$weather[[1]]$main\n[1] \"Clouds\"\n\n$weather[[1]]$description\n[1] \"broken clouds\"\n\n$weather[[1]]$icon\n[1] \"04d\"\n\n\n\n$base\n[1] \"stations\"\n\n$main\n$main$temp\n[1] 310.06\n\n$main$pressure\n[1] 1012\n\n$main$humidity\n[1] 53\n\n$main$temp_min\n[1] 305.93\n\n$main$temp_max\n[1] 315.37\n\n\n$visibility\n[1] 10000\n\n$wind\n$wind$speed\n[1] 4.1\n\n$wind$deg\n[1] 140\n\n\n$clouds\n$clouds$all\n[1] 75\n\n\n$dt\n[1] 1438923538\n\n$sys\n$sys$type\n[1] 1\n\n$sys$id\n[1] 7619\n\n$sys$message\n[1] 0.0112\n\n$sys$country\n[1] \"JP\"\n\n$sys$sunrise\n[1] 1438890804\n\n$sys$sunset\n[1] 1438940413\n\n\n$id\n[1] 1850147\n\n$name\n[1] \"Tokyo\"\n\n$cod\n[1] 200\n```\n\n\n```{R:R}\n\nplace <- \"Tokyo,jp\"\nweather_data <- test(place)\n\nprint(weather_data$coord$lon);\nprint(weather_data$coord$lat);\nprint(weather_data$main$temp_min);\nprint(weather_data$main$temp_max);\n```\n\n\n```{R:\u5b9f\u884c\u7d50\u679c}\n> print(weather_data$coord$lon);\n[1] 139.69\n> print(weather_data$coord$lat);\n[1] 35.69\n> print(weather_data$main$temp_min);\n[1] 305.93\n> print(weather_data$main$temp_max);\n[1] 315.37\n```\n\n\n```{R:R}\nprint(paste0(\"\u7d4c\u5ea6: \", weather_data$coord$lon));\nprint(paste0(\"\u7def\u5ea6\uff1a \", weather_data$coord$lat));\nprint(paste0(\"\u6700\u4f4e\u6c17\u6e29: \", weather_data$main$temp_min));\nprint(paste0(\"\u6700\u9ad8\u6c17\u6e29: \", weather_data$main$temp_max));\n```\n\n\n```{R:\u5b9f\u884c\u7d50\u679c}\n> print(paste0(\"\u7d4c\u5ea6: \", weather_data$coord$lon));\n[1] \"\u7d4c\u5ea6: 139.69\"\n> print(paste0(\"\u7def\u5ea6\uff1a \", weather_data$coord$lat));\n[1] \"\u7def\u5ea6\uff1a 35.69\"\n> print(paste0(\"\u6700\u4f4e\u6c17\u6e29: \", weather_data$main$temp_min));\n[1] \"\u6700\u4f4e\u6c17\u6e29: 305.93\"\n> print(paste0(\"\u6700\u9ad8\u6c17\u6e29: \", weather_data$main$temp_max));\n[1] \"\u6700\u9ad8\u6c17\u6e29: 315.37\"\n```\n\n___\n\n##__\u3010 \u53c2\u8003 \u3011__\n\n* [RYUS blog (2015/02/10) \u300cOpenWeatherMap\u3092\u5229\u7528\u3057\u3066\u5929\u6c17\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u300d](http://ryus.co.jp/blog/openweathermap/)\n\n* [s0hno\u3055\u3093 Qiita\u8a18\u4e8b\uff082013/12/16\uff09\u300c\u5929\u6c17\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u300d](http://qiita.com/s0hno/items/b67a24bd3cbeb6e7cdc0)\n\n___\n\n\n##__\u3010 \u5fdc\u7528\u4e8b\u4f8b \u3011\u5929\u6c17\u5225\u306b\u8272\u5206\u3051\u3057\u3066\u3001\u300c\u5929\u6c17 \u00d7 \u5834\u6240\u300d\u306e\u60c5\u5831 \u3092 \u5730\u56f3\u306b\u53ef\u8996\u5316\u3055\u305b\u308b__\n\n___\n\n**-1) \u90fd\u9053\u5e9c\u770c\u540d \u3068 \u5929\u6c17 \u306b\u52a0\u3048\u3066\u3001GoogleMap\u306a\u3069\u3067\u300c\u4f4f\u6240\u300d\u21d2\u300c\u7def\u5ea6\u7d4c\u5ea6\u5ea7\u6a19\u300d\u3092\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u3066\u53d6\u5f97\u3057\u3066\u3001\u300c\u90fd\u9053\u5e9c\u770c\u540d, \u7def\u5ea6\u7d4c\u5ea6, \u5929\u6c17\u30ab\u30c6\u30b4\u30ea\u540d\u300d\u306edata.frame\u578b\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3002**\n**-2) Google Map \uff08or \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\uff09\u30de\u30c3\u30d7\u4e0a\u306b\u3001\u5929\u6c17\u5225\u306e\u8272\u5206\u3051\u30d4\u30f3\u3092\u7acb\u3066\u308b**\n\n___\n\n####__1. Google Map \u306b\u8868\u793a\u3055\u305b\u308b\u5834\u5408__\n\n####__[\uff08\u53c2\u8003\uff09Google Maps API for developers, Goolgle Maps \u6d3b\u7528\u8b1b\u5ea7 google_maps_api_2 \u300cMarkerClusterer\u3092\u4f7f\u3063\u3066\u30ab\u30c6\u30b4\u30ea\u5206\u3051\u3059\u308b\u300d](http://googlemaps.googlermania.com/google_maps_api_v3/ja/map_example_marker_clusterer.html)__\n\n> MarkerClusterer \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3068\u5927\u91cf\u306e\u30de\u30fc\u30ab\u30fc\u3092\u7c21\u5358\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001\u30de\u30fc\u30ab\u30fc\u3092\u30ab\u30c6\u30b4\u30ea\u5206\u3051\u3057\u3066\u3001\u3055\u3089\u306bMarkerClusterer\u3092\u4f7f\u3046\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n>\n> __\u30de\u30fc\u30ab\u30fc\u306e\u30ab\u30c6\u30b4\u30ea\u5206\u3051__\n>\n> \u6700\u521d\u306b\u30de\u30fc\u30ab\u30fc\u3092\u30ab\u30c6\u30b4\u30ea\u5206\u3051\u3057\u307e\u3059\u3002\u30b3\u30fc\u30c9\u306e\u4e2d\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n>\n>```{javascript:JavaScript}\n>var markers = {};\n>\n>for(...) {\n>  category = data.category;\n>  \n>  var marker = createMarker({\n>      position : latLng,\n>      title : data.title,\n>      icon : categoryIcons[data.category],\n>      description : data.description\n>    });\n>    \n>  markers[category].push(marker);\n>}\n>```\n\n__\uff08 \u4ee5\u4e0b\u3001\u4e0a\u8a18\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u3088\u308a\u4e00\u90e8\u8ee2\u8f09 \uff09__\n\n![3.PNG](https://qiita-image-store.s3.amazonaws.com/0/43487/f4c9fe7a-bf75-9e00-2b76-69e591434d8d.png)\n\n___\n\n####__2. \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u3001\u5730\u56f3\uff0b\u8272\u5206\u3051\u30d4\u30f3\u3092\u51fa\u529b\u3055\u305b\u308b\u5834\u5408__\n\n####__[\uff08\u53c2\u8003\uff09Hatena Blog Technically, technophobic. \uff082015/05/23\uff09\u300cchoroplethr\u3067\u5927\u962a\u5e02\u306e\u30b3\u30ed\u30d7\u30ec\u30b9\u56f3\u3092\u63cf\u304f\u300d](http://notchained.hatenablog.com/entry/2015/05/23/201451)__\n\n> \u5927\u962a\u90fd\u69cb\u60f3\u306e\u4f4f\u6c11\u6295\u7968\u3001\u76db\u308a\u4e0a\u304c\u3063\u3066\u307e\u3057\u305f\u306d\u3002\n>\n> \u95a2\u9023\u3057\u3066\u8abf\u3079\u3066\u305f\u3089\u3001\u5927\u962a\u5e02\u306eshp\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u3067\u624b\u306b\u5165\u308b\u307f\u305f\u3044\u3067\u3057\u305f\u3002\u30e9\u30a4\u30bb\u30f3\u30b9\u306fCC-BY\u3067\u3059\u3002\n>\n> \u5927\u962a\u5e02\u5e02\u653f \u30de\u30c3\u30d7\u30ca\u30d3\u304a\u304a\u3055\u304b\u30aa\u30fc\u30d7\u30f3\u30c7\u30fc\u30bf\u4e00\u89a7\n>\n> \u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001__\u3053\u308c\u3092choroplethr\u3067\u4f7f\u3046\u65b9\u6cd5\u3092\u63a2\u3057\u3066\u307f\u307e\u3057\u305f\u3002__\n>\n> __chroplethr\u3068\u306f__\n> __\u3053\u3093\u306a\u611f\u3058\u306e\u56f3\uff08\u30b3\u30ed\u30d7\u30ec\u30b9\u56f3\uff09\u3092\u63cf\u304f\u305f\u3081\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3059\u3002__\n\n__\uff08 \u4ee5\u4e0b\u3001\u4e0a\u8a18\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u3088\u308a\u4e00\u90e8\u8ee2\u8f09 \uff09__\n\n![1.PNG](https://qiita-image-store.s3.amazonaws.com/0/43487/728c3af4-0c87-b297-e6f0-329a5bdd6ac3.png)\n\n__\uff08 \u6700\u7d42\u7684\u306b\u51fa\u529b\u3055\u308c\u308b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb \uff09__\n\n![2.PNG](https://qiita-image-store.s3.amazonaws.com/0/43487/4732f2b2-d481-85d6-85be-ea9b62775487.png)\n\n___\n\n\n###__\uff08\u53c2\u8003\uff09Geegle API\u3092\u53e9\u3044\u3066\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\uff08geo coding)\u3059\u308b\u65b9\u6cd5__\n\n* __[Geocoding.jp](http://www.geocoding.jp/)__\n\n> \u4f4f\u6240\u3084\u30e9\u30f3\u30c9\u30de\u30fc\u30af\u540d\u304b\u3089\u7d4c\u5ea6\u3001\u7def\u5ea6\u3092\u691c\u7d22\u3057\u307e\u3059\u3002\u4e16\u754c\u6e2c\u5730\u7cfb(WGS84)\u5bfe\u5fdc\u3002\n\u65e5\u672c\u6e2c\u5730\u7cfb(TOKYO97)\u3063\u307d\u3044\u5ea7\u6a19\u51fa\u529b\u3001\u643a\u5e2f\u7528QR\u30b3\u30fc\u30c9\u51fa\u529b\u3001Google Earth\u9023\u643a\u306a\u3069\u304c\u884c\u3048\u307e\u3059\u3002 \n\n* __[Geocoding.jp/api/ API verson 1.1](http://www.geocoding.jp/api/)__\n\n![4.PNG](https://qiita-image-store.s3.amazonaws.com/0/43487/1180f321-b063-6d9c-47aa-ae9ccdbb4ae6.png)\n\n   \n\n* [Yahoo!\u30d6\u30ed\u30b0 \u8ff7\u9014\u899a\u8def\u5922\u4e2d\u884c (2013/09/05)\u300cGoogle maps API \u3068\uff32\u3067\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u300d](http://blogs.yahoo.co.jp/igproj_fusion/17533768.html)\n\n__\u8a18\u4e8b\u30012013\u5e74\u590f\u3060\u304b\u3089\u3001Google\u306eAPI\u5909\u308f\u3063\u3066\u308b\uff1f__\n\n>```{R:R}\n>library(RCurl)\n>library(RJSONIO)\n>\n>url <- function(address, return.call = \"json\", sensor = \"false\") {\n>root <- \"http://maps.google.com/maps/api/geocode/\"\n>u <- paste(root, return.call, \"?address=\", address, \"&sensor=\", \n>                  sensor, sep = \"\")\n>   return(URLencode(u))\n>}\n>\n>\n>geoCode <- function(address, verbose = FALSE) {\n>   if(verbose) cat(address, \"\\n\")\n>   u <- url(address)\n>   doc <- getURL(u)\n>   x <- fromJSON(doc, simplify = FALSE)\n>   if(x$status == \"OK\") {\n>     lat <- x$results[[1]]$geometry$location$lat\n>     lng <- x$results[[1]]$geometry$location$lng\n>     location_type <- x$results[[1]]$geometry$location_type\n>     formatted_address <- x$results[[1]]$formatted_address\n>     return(c(lat, lng, location_type, formatted_address))\n>   } else {\n>     return(c(NA, NA, NA, NA))\n>   }\n>}\n>```\n>\n>\u4ee5\u4e0a\u3092\u5b9f\u884c\u3057\u3066\u95a2\u6570 geoCode \u3092\u767b\u9332\u3059\u308b\u3002\n>\n>\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u306f\u3001\u5f15\u6570\u3068\u3057\u3066\u3001\u201c\u65bd\u8a2d\u540d\u201d \u3042\u308b\u3044\u306f \u201c\u4f4f\u6240\u201d \u3092\u3053\u306e\u95a2\u6570\u306b\u6e21\u3057\u3066\u3084\u308c\u3070\u826f\u3044\u3002\u3082\u3061\u308d\u3093\u3001\u65e5\u672c\u8a9e\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3002\n>\n>\u4f8b\u3048\u3070\u3001\n>\n>```{R:R}\n> geoCode(\"\u5343\u8449\u770c\u3000\u5186\u7167\u5bfa\")\n>```\n>\n>```\n>[1]  \"35.2902543\"                                                    \n[2]  \"140.2335945\"                                                   \n[3]  \"APPROXIMATE\"                                                   \n[4]  \"Japan, Chiba Prefecture, Isumi District, Otaki, Tamachi \u5186\u7167\u5bfa\"\n>```\n>\n>\u3042\u308b\u3044\u306f\u3001\u753a\u5f79\u5834\u306e\u4f4f\u6240\u3092\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u3067\u8abf\u3079\u3066\u3001\u305d\u308c\u3092\u5f15\u6570\u306b\u3059\u308b\u3002\n>\n>```{R:R}\n>geoCode(\"\u5343\u8449\u770c\u5937\u9685\u90e1\u5927\u591a\u559c\u753a\u5927\u591a\u559c93\u756a\u5730\")\n>```\n>\n>```\n>[1]  \"35.2848301\"                                       \n[2]  \"140.2454165\"                                      \n[3]  \"APPROXIMATE\"                                      \n[4]  \"93 Otaki, Isumi District, Chiba Prefecture, Japan\"\n>```\n\n* [RWiki \u300cR\u3067\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u300d](http://www.okadajp.org/RWiki/?R%E3%81%A7%E3%82%B8%E3%82%AA%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0)\n\n> 3.GoogleMapAPI\u306eGeoCording?(HTTP Request)\u3092\u5229\u7528\u3057\u3066\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0 \u2020\n>\n>```{R:R}\n>##GoogleMapAPI\u3092\u7528\u3044\u305f\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\naddress<-\"\u6c96\u7e04\u770c\u90a3\u8987\u5e02\u4e45\u7c73\uff12\u4e01\u76ee\uff14\u756a\uff11\uff14\u53f7\"\nreturnform<-\"xml\"#xmlorjson\nkey<-\"ABQIAAAA7Qa-RE_JYtVliR9OTauOexScAlgT1OMB91Iojh4cvnPDirRWVBRkKoWJQNoMN19LbzuRx7z0aIWHTQ\"#\u3053\u3053\u306fGoogleAPI\u3067\u3082\u3089\u3063\u305fkey\u3092\u767b\u9332\ntext1<-\"http://maps.google.com/maps/geo?q=\"\ntext2<-\"&output=\"\ntext3<-\"&key=\"\nsavefile<-\"c:\\\\geocode.xml\"\nEncodeAddress<-paste(c(\"\",charToRaw(iconv(address,\"CP932\",\"UTF-8\"))),collapse=\"%\")#\u306a\u304b\u307e\u3055\u3093\u306eURL\u30a8\u30f3\u30b3\u30fc\u30c9\nURLText<-paste(text1,EncodeAddress,text2,returnform,text3,key,sep=\"\")\ndownload.file(URLText,savefile)\n>```\n>\n>\u3067\u3001c:\u76f4\u4e0b\u306bgeocode.xml\u3067\u843d\u3061\u3066\u304d\u307e\u3059\u3002returnform<-\"xml\"#xmlorjson\u306e\u3068\u3053\u308d\u3067\u3001\u8fd4\u308a\u5024\u306e\u30d5\u30a9\u30fc\u30e0\u3092\u6307\u5b9a\u3057\u3066\u307e\u3059\u3002\uff08XML\u5f62\u5f0f\u304bJSON\u5f62\u5f0f\u304b\uff09xml\u306e\u30c7\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u6a5f\u4f1a\u306b\u30fb\u30fb\u30fb\u3002\n\n", "tags": ["R", "api", "OpenWeatherMap", "\u30c7\u30fc\u30bf\u5206\u6790", "JSON"]}