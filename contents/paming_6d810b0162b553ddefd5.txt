{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nboxen\u306f\u4fbf\u5229\u305d\u3046\u306a\u306e\u3067\u3059\u304c\u3061\u3087\u3063\u3068\u3078\u30d4\u30fc\u3067\u3059\u3002\u81ea\u5206\u306e\u74b0\u5883\u3067\u306f\u3046\u307e\u304f\u52d5\u3044\u3066\u304f\u308c\u306a\u3044\u3057\u30a8\u30e9\u30fc\u3082\u3088\u304f\u5206\u304b\u3089\u305a\u5bfe\u5fdc\u3082\u3067\u304d\u307e\u305b\u3093\u3002\u3067\u3059\u304cboxen\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u300cdmg\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306eMac\u30a2\u30d7\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u300d\u306f\u9b45\u529b\u7684\u3067\u3059\u3002\n\u3053\u306edmg\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306eMac\u30a2\u30d7\u30ea\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304chomebrew\u304b\u3089\u51fa\u6765\u308c\u3070\u3001\u500b\u4eba\u7684\u306b\u306f\u305d\u308c\u3067\u6e80\u8db3\u3067\u3059\u3002\nhomebrew\u3067\u51fa\u6765\u308b\u304b\u3069\u3046\u304b\u7f6e\u3044\u3068\u3044\u3066\u3001\u307e\u305a\u306fboxen\u304c\u3069\u3046\u3084\u3063\u3066\u3053\u308c\u3092\u3084\u3063\u3066\u3044\u308b\u306e\u304b\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\nboxen\u3067\u6271\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5834\u6240\nhttp://github.com/boxen \u306e\u4e0b\u306b\u3001puppet-XXX\u3068\u3044\u3046\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u591a\u6570\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u306bpuppet-evernote\u3084puppet-dropbox\u7b49\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u5143\u306b\u30a2\u30d7\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u3002\n\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u4e2d\u3092\u898b\u308b\u3068\u3001spec/classes/(\u30a2\u30d7\u30ea\u540d)_spec.rb \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308a\u3001\u3053\u306e\u4e2d\u3067dmg\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u6240\u3068:provider => 'appdmg'\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002puppet-dropbox\u306edropbox_spec.rb\n\n:provider => 'appdmg'\uff1f\n\u306a\u3093\u3068\u306a\u304fappdmg\u3068\u3044\u3046\u30d7\u30ed\u30d0\u30a4\u30c0\uff1f\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u3084\u3063\u3066\u304f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u3053\u308cboxen\u306e\u4e2d\u3092\u63a2\u3057\u3066\u3082\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002\u3067\u3059\u304c\u3001puppet labs\u306e\u4e2d\u306bappdmg.rb\u3092\u898b\u3064\u3051\u307e\u3057\u305f\u3002\npuppet\u3068\u3057\u3066\u306e\u51e6\u7406\u3082\u5165\u3063\u3066\u308b\u306e\u3067\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u308b\u7b87\u6240\u3092\u629c\u304d\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\n  def self.installapp(source, name, orig_source)\n    appname = File.basename(source);\n    #=============\n    # (4) \n    #=============\n    ditto \"--rsrc\", source, \"/Applications/#{appname}\"\n    File.open(\"/var/db/.puppet_appdmg_installed_#{name}\", \"w\") do |t|\n      t.print \"name: '#{name}'\\n\"\n      t.print \"source: '#{orig_source}'\\n\"\n    end\n  end\n\n  def self.installpkgdmg(source, name)\n    unless source =~ /\\.dmg$/i\n      self.fail \"Mac OS X PKG DMG's must specify a source string ending in .dmg\"\n    end\n    require 'open-uri'\n    require 'facter/util/plist'\n    cached_source = source\n    tmpdir = Dir.mktmpdir\n    #=============\n    # (1) \n    #=============\n    begin\n      if %r{\\A[A-Za-z][A-Za-z0-9+\\-\\.]*://} =~ cached_source\n        cached_source = File.join(tmpdir, name)\n        begin \n          curl \"-o\", cached_source, \"-C\", \"-\", \"-k\", \"-L\", \"-s\", \"--url\", source\n          Puppet.debug \"Success: curl transfered [#{name}]\"\n        rescue Puppet::ExecutionFailure\n          Puppet.debug \"curl did not transfer [#{name}].  Falling back to slower open-uri transfer methods.\"\n          cached_source = source\n        end\n      end\n\n    #=============\n    # (2) \n    #=============\n      open(cached_source) do |dmg|\n        xml_str = hdiutil \"mount\", \"-plist\", \"-nobrowse\", \"-readonly\", \"-mountrandom\", \"/tmp\", dmg.path\n          ptable = Plist::parse_xml xml_str\n          # JJM Filter out all mount-paths into a single array, discard the rest.\n          mounts = ptable['system-entities'].collect { |entity|\n            entity['mount-point']\n          }.select { |mountloc|; mountloc }\n          begin\n            mounts.each do |fspath|\n              #=============\n              # (3) \n              #=============\n              Dir.entries(fspath).select { |f|\n                f =~ /\\.app$/i \n              }.each do |pkg|\n                installapp(\"#{fspath}/#{pkg}\", name, source)\n              end\n            end\n          ensure\n            hdiutil \"eject\", mounts[0]\n          end\n      end\n    ensure\n      FileUtils.remove_entry_secure(tmpdir, true)\n    end\n  end\n\nruby\u306f\u597d\u304d\u3067\u3059\u304c\u5f97\u610f\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u611f\u899a\u3067\u8aad\u307f\u9032\u3081\u3066\u307f\u308b\u3068\u3001\n- (1) dmg\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n- (2) hdiutil\u3067dmg\u3092\u30de\u30a6\u30f3\u30c8\n- (3) \u672b\u5c3e\u304c.app\u306a\u30d1\u30b9\u3092\u9078\u629e\n- (4) ditto\u3067/Application/\u4ee5\u4e0b\u306b\u30b3\u30d4\u30fc\n\u3068\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002 hdiutil\u3084ditto\u306fMac\u56fa\u6709\u306e\u30b3\u30de\u30f3\u30c9\u3060\u3063\u305f\u3068\u601d\u3046\u306e\u3067\u3001\u3053\u308c\u304c\u52d5\u304f\u306e\u306fMacRuby\u3060\u3051\uff1f\u3068\u304b\u601d\u3044\u307e\u3059\u304c\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u610f\u5916\u306b\u5358\u7d14\u3067\u3059\u306d\u3002\n\nhomebrew\u306b\u30dd\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u3068\u3057\u305f\u3089\nhomebrew\u306especfile\u306b\u3001appdmg.rb\u3068\u540c\u7b49\u306e\u52d5\u304d\u3092\u3059\u308b\u30ed\u30b8\u30c3\u30af\u3092\u7d44\u307f\u8fbc\u3093\u3067\u3001boxen\u306e(puppet\u306e) xxxx_spec.rb\u3092\u8aad\u307f\u8fbc\u307e\u305b\u308c\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u3002\u305d\u306e\u3046\u3061\u3084\u3063\u3066\u307f\u307e\u3059\u304c\u8ab0\u304b\u3084\u3063\u3066\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u306f\u3058\u3081\u306b\n----\n[boxen](http://boxen.github.com)\u306f\u4fbf\u5229\u305d\u3046\u306a\u306e\u3067\u3059\u304c\u3061\u3087\u3063\u3068\u3078\u30d4\u30fc\u3067\u3059\u3002\u81ea\u5206\u306e\u74b0\u5883\u3067\u306f\u3046\u307e\u304f\u52d5\u3044\u3066\u304f\u308c\u306a\u3044\u3057\u30a8\u30e9\u30fc\u3082\u3088\u304f\u5206\u304b\u3089\u305a\u5bfe\u5fdc\u3082\u3067\u304d\u307e\u305b\u3093\u3002\u3067\u3059\u304cboxen\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u300cdmg\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306eMac\u30a2\u30d7\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u300d\u306f\u9b45\u529b\u7684\u3067\u3059\u3002\n\u3053\u306edmg\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306eMac\u30a2\u30d7\u30ea\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304chomebrew\u304b\u3089\u51fa\u6765\u308c\u3070\u3001\u500b\u4eba\u7684\u306b\u306f\u305d\u308c\u3067\u6e80\u8db3\u3067\u3059\u3002\nhomebrew\u3067\u51fa\u6765\u308b\u304b\u3069\u3046\u304b\u7f6e\u3044\u3068\u3044\u3066\u3001\u307e\u305a\u306fboxen\u304c\u3069\u3046\u3084\u3063\u3066\u3053\u308c\u3092\u3084\u3063\u3066\u3044\u308b\u306e\u304b\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\nboxen\u3067\u6271\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5834\u6240\n-----\n[http://github.com/boxen](http://github.com/boxen) \u306e\u4e0b\u306b\u3001puppet-XXX\u3068\u3044\u3046\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u591a\u6570\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u306bpuppet-evernote\u3084puppet-dropbox\u7b49\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u5143\u306b\u30a2\u30d7\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u3002\n\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u4e2d\u3092\u898b\u308b\u3068\u3001spec/classes/(\u30a2\u30d7\u30ea\u540d)_spec.rb \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308a\u3001\u3053\u306e\u4e2d\u3067dmg\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u6240\u3068``:provider => 'appdmg'``\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002[puppet-dropbox\u306edropbox_spec.rb](https://github.com/boxen/puppet-dropbox/blob/master/spec/classes/dropbox_spec.rb)\n\n``:provider => 'appdmg'``\uff1f\n----\n\u306a\u3093\u3068\u306a\u304f```appdmg```\u3068\u3044\u3046\u30d7\u30ed\u30d0\u30a4\u30c0\uff1f\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u3084\u3063\u3066\u304f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u3053\u308cboxen\u306e\u4e2d\u3092\u63a2\u3057\u3066\u3082\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002\u3067\u3059\u304c\u3001[puppet labs](https://github.com/puppetlabs)\u306e\u4e2d\u306b[appdmg.rb](https://github.com/puppetlabs/puppet/blob/master/lib/puppet/provider/package/appdmg.rb)\u3092\u898b\u3064\u3051\u307e\u3057\u305f\u3002\npuppet\u3068\u3057\u3066\u306e\u51e6\u7406\u3082\u5165\u3063\u3066\u308b\u306e\u3067\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u308b\u7b87\u6240\u3092\u629c\u304d\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\n\n```ruby:\n  def self.installapp(source, name, orig_source)\n    appname = File.basename(source);\n    #=============\n    # (4) \n    #=============\n    ditto \"--rsrc\", source, \"/Applications/#{appname}\"\n    File.open(\"/var/db/.puppet_appdmg_installed_#{name}\", \"w\") do |t|\n      t.print \"name: '#{name}'\\n\"\n      t.print \"source: '#{orig_source}'\\n\"\n    end\n  end\n\n  def self.installpkgdmg(source, name)\n    unless source =~ /\\.dmg$/i\n      self.fail \"Mac OS X PKG DMG's must specify a source string ending in .dmg\"\n    end\n    require 'open-uri'\n    require 'facter/util/plist'\n    cached_source = source\n    tmpdir = Dir.mktmpdir\n    #=============\n    # (1) \n    #=============\n    begin\n      if %r{\\A[A-Za-z][A-Za-z0-9+\\-\\.]*://} =~ cached_source\n        cached_source = File.join(tmpdir, name)\n        begin \n          curl \"-o\", cached_source, \"-C\", \"-\", \"-k\", \"-L\", \"-s\", \"--url\", source\n          Puppet.debug \"Success: curl transfered [#{name}]\"\n        rescue Puppet::ExecutionFailure\n          Puppet.debug \"curl did not transfer [#{name}].  Falling back to slower open-uri transfer methods.\"\n          cached_source = source\n        end\n      end\n\n    #=============\n    # (2) \n    #=============\n      open(cached_source) do |dmg|\n        xml_str = hdiutil \"mount\", \"-plist\", \"-nobrowse\", \"-readonly\", \"-mountrandom\", \"/tmp\", dmg.path\n          ptable = Plist::parse_xml xml_str\n          # JJM Filter out all mount-paths into a single array, discard the rest.\n          mounts = ptable['system-entities'].collect { |entity|\n            entity['mount-point']\n          }.select { |mountloc|; mountloc }\n          begin\n            mounts.each do |fspath|\n              #=============\n              # (3) \n              #=============\n              Dir.entries(fspath).select { |f|\n                f =~ /\\.app$/i \n              }.each do |pkg|\n                installapp(\"#{fspath}/#{pkg}\", name, source)\n              end\n            end\n          ensure\n            hdiutil \"eject\", mounts[0]\n          end\n      end\n    ensure\n      FileUtils.remove_entry_secure(tmpdir, true)\n    end\n  end\n```\n\nruby\u306f\u597d\u304d\u3067\u3059\u304c\u5f97\u610f\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u611f\u899a\u3067\u8aad\u307f\u9032\u3081\u3066\u307f\u308b\u3068\u3001\n- (1) dmg\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n- (2) [hdiutil](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/hdiutil.1.html)\u3067dmg\u3092\u30de\u30a6\u30f3\u30c8\n- (3) \u672b\u5c3e\u304c.app\u306a\u30d1\u30b9\u3092\u9078\u629e\n- (4) [ditto](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/ditto.1.html)\u3067/Application/\u4ee5\u4e0b\u306b\u30b3\u30d4\u30fc\n\u3068\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002 hdiutil\u3084ditto\u306fMac\u56fa\u6709\u306e\u30b3\u30de\u30f3\u30c9\u3060\u3063\u305f\u3068\u601d\u3046\u306e\u3067\u3001\u3053\u308c\u304c\u52d5\u304f\u306e\u306fMacRuby\u3060\u3051\uff1f\u3068\u304b\u601d\u3044\u307e\u3059\u304c\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u610f\u5916\u306b\u5358\u7d14\u3067\u3059\u306d\u3002\n\nhomebrew\u306b\u30dd\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u3068\u3057\u305f\u3089\n----\nhomebrew\u306especfile\u306b\u3001appdmg.rb\u3068\u540c\u7b49\u306e\u52d5\u304d\u3092\u3059\u308b\u30ed\u30b8\u30c3\u30af\u3092\u7d44\u307f\u8fbc\u3093\u3067\u3001boxen\u306e(puppet\u306e) xxxx_spec.rb\u3092\u8aad\u307f\u8fbc\u307e\u305b\u308c\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u3002\u305d\u306e\u3046\u3061\u3084\u3063\u3066\u307f\u307e\u3059\u304c\u8ab0\u304b\u3084\u3063\u3066\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n", "tags": ["Puppet", "Boxen", "MacOSX"]}