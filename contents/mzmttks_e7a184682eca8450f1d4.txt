{"tags": ["Python", "matplotlib", "lxml"], "context": " More than 1 year has passed since last update.\n\n\u4f55\u3092\u3059\u308b\u306e\u304b\nYahoo \u30d5\u30a1\u30a4\u30ca\u30f3\u30b9 \u306e TOPIX \u306e\u6642\u7cfb\u5217\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u7d4c\u6e08\u306e\u5909\u5316\u3092\u89b3\u5bdf\u3057\u3066\u307f\u308b\n\n\u4f55\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3046\u306e\u304b\n\nurllib2\nhttp \u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51fa\u3057\u3066 html \u3092\u5f97\u308b\nurllib2.urlopen(url).read()\n\n\nlxml\nxml, html \u306e\u30d1\u30fc\u30b5\n\u5909\u6570 html \u306b \u6b21\u306e\u3088\u3046\u306a html \u306e\u6587\u5b57\u5217\u304c\u5165\u3063\u3066\u3044\u308b\u3068\u3059\u308b\u3068\n<table>\n<tr><td>aa</td><td>bb</td></tr>\n<tr><td>aa</td><td>bb</td></tr>\n<tr><td>aa</td><td>bb</td></tr>\n</tr>\n\n\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u5168\u90e8\u3000td \u306e\u4e2d\u8eab\u3092\u8868\u793a\u3067\u304d\u308b\u3002\nroot  = lxml.html.fromstring(html)\nroot.xpath(\"//table\")\nfor tr in root.xpath(\"descendant::tr\"):\n    for td in root.xpath(\"descendant::td\"):\n         print td\n\n\n\u30b3\u30fc\u30c9\nimport pylab\nimport urllib2\nimport lxml\nimport lxml.html\nimport re\n\ndateFr = {\"year\": 2000, \"month\":1, \"day\":1}\ndateTo = {\"year\": 2013, \"month\":11, \"day\": 1}\n\ndata = []\nfor page in range(1, 30):\n    print page\n    url = \"http://info.finance.yahoo.co.jp/history/?code=998405.T&sy=%d&sm=%d&sd=%d&ey=%d&em=%d&ed=%d&tm=d&p=%d\"\n    url = url % (dateFr[\"year\"], dateFr[\"month\"], dateFr[\"day\"], dateTo[\"year\"], dateFr[\"month\"], dateFr[\"day\"], page)\n\n    html = urllib2.urlopen(url).read()\n    root = lxml.html.fromstring(html)\n    table = root.xpath('//*[contains(concat(\" \",normalize-space(@class),\" \"), \" boardFin \")]')[0]\n\n    for tr in table.xpath(\"descendant::tr\"):\n        tmp = [td.text for td in tr.xpath(\"descendant::td\")]\n        if len(tmp) != 5:\n            continue\n        begin = float(tmp[1].replace(\",\", \"\"))\n        high  = float(tmp[2].replace(\",\", \"\"))\n        low   = float(tmp[3].replace(\",\", \"\"))\n        end   = float(tmp[4].replace(\",\", \"\"))\n        data.append([low, high, low, high])\npylab.boxplot(data)\npylab.show()\n\n\n\u753b\u50cf\n\n# \u4f55\u3092\u3059\u308b\u306e\u304b\n\nYahoo \u30d5\u30a1\u30a4\u30ca\u30f3\u30b9 \u306e TOPIX \u306e\u6642\u7cfb\u5217\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u7d4c\u6e08\u306e\u5909\u5316\u3092\u89b3\u5bdf\u3057\u3066\u307f\u308b\n\n# \u4f55\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3046\u306e\u304b\n## urllib2\nhttp \u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51fa\u3057\u3066 html \u3092\u5f97\u308b\n\n```py\nurllib2.urlopen(url).read()\n```\n\n## lxml\nxml, html \u306e\u30d1\u30fc\u30b5\n\u5909\u6570 html \u306b \u6b21\u306e\u3088\u3046\u306a html \u306e\u6587\u5b57\u5217\u304c\u5165\u3063\u3066\u3044\u308b\u3068\u3059\u308b\u3068\n\n```html\n<table>\n<tr><td>aa</td><td>bb</td></tr>\n<tr><td>aa</td><td>bb</td></tr>\n<tr><td>aa</td><td>bb</td></tr>\n</tr>\n```\n\n\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u5168\u90e8\u3000td \u306e\u4e2d\u8eab\u3092\u8868\u793a\u3067\u304d\u308b\u3002\n\n```py\nroot  = lxml.html.fromstring(html)\nroot.xpath(\"//table\")\nfor tr in root.xpath(\"descendant::tr\"):\n    for td in root.xpath(\"descendant::td\"):\n         print td\n```\n\n# \u30b3\u30fc\u30c9\n\n```py\nimport pylab\nimport urllib2\nimport lxml\nimport lxml.html\nimport re\n\ndateFr = {\"year\": 2000, \"month\":1, \"day\":1}\ndateTo = {\"year\": 2013, \"month\":11, \"day\": 1}\n\ndata = []\nfor page in range(1, 30):\n    print page\n    url = \"http://info.finance.yahoo.co.jp/history/?code=998405.T&sy=%d&sm=%d&sd=%d&ey=%d&em=%d&ed=%d&tm=d&p=%d\"\n    url = url % (dateFr[\"year\"], dateFr[\"month\"], dateFr[\"day\"], dateTo[\"year\"], dateFr[\"month\"], dateFr[\"day\"], page)\n\n    html = urllib2.urlopen(url).read()\n    root = lxml.html.fromstring(html)\n    table = root.xpath('//*[contains(concat(\" \",normalize-space(@class),\" \"), \" boardFin \")]')[0]\n\n    for tr in table.xpath(\"descendant::tr\"):\n        tmp = [td.text for td in tr.xpath(\"descendant::td\")]\n        if len(tmp) != 5:\n            continue\n        begin = float(tmp[1].replace(\",\", \"\"))\n        high  = float(tmp[2].replace(\",\", \"\"))\n        low   = float(tmp[3].replace(\",\", \"\"))\n        end   = float(tmp[4].replace(\",\", \"\"))\n        data.append([low, high, low, high])\npylab.boxplot(data)\npylab.show()\n```\n\n# \u753b\u50cf\n![topix.png](https://qiita-image-store.s3.amazonaws.com/0/29984/d7461f10-c2be-e5ff-a616-bcc3eb5eae47.png)\n"}