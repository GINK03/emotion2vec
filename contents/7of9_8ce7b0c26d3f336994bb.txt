{"tags": ["TensorFlow", "borgWarp", "CSV", "fileIO"], "context": "\n\u52d5\u4f5c\u74b0\u5883\nGeForce GTX 1070 (8GB)\nASRock Z170M Pro4S [Intel Z170chipset]\nUbuntu 14.04 LTS desktop amd64\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v8.0\nPython 2.7.6\n\n\nhttp://qiita.com/7of9/items/ce3b6354d16875cfc362\n\u306e\u7d9a\u304d\u3002\ncsv\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3082\u3046\u3068\u3057\u3066\u3044\u308b\u3002\n\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u306f\u4ee5\u4e0b\u306b\u5909\u66f4\u3057\u305f\u3002\n$ cat xydata.csv \n3,2\n1,7\n4,1\n1,8\n5,2\n\nhttp://qiita.com/knok/items/2dd15189cbca5f9890c5\n\u3084\nhttps://www.tensorflow.org/versions/r0.11/how_tos/reading_data/index.html#file-formats\n\u3092\u53c2\u8003\u306b\u3057\u305f\u3002\n\ndecode_csv()\u3092\u4f7f\u3046\ntf.Session()\u3067\u306a\u304ftf.InteractiveSession()\u3092\u4f7f\u3046\ntf.train.start_queue_runners(sess)\u3092\u5b9f\u884c\u3059\u308b\n.eval()\u3092\u4f7f\u3046\n\n\nlinreg_readcsv.py\nimport tensorflow as tf\nimport numpy as np\nimport random\n\nx_data = np.float32(np.random.rand(100)) # Random input\ny_data = np.sin(2*np.pi*x_data) + 0.3 * np.random.rand()\n\n#filename_queue = tf.train.string_input_producer([\"csvTest.csv\"])\nfilename_queue = tf.train.string_input_producer([\"xydata.csv\"])\nreader = tf.TextLineReader()\nkey, value = reader.read(filename_queue)\n\nrecord_defaults = [[1], [1]]\nx_data2, y_data2 = tf.decode_csv(\n    value, record_defaults=record_defaults)\n\n# Construct a linear model.\nW3 = tf.Variable(random.random())\nW2 = tf.Variable(random.random())\nW1 = tf.Variable(random.random())\nW0 = tf.Variable(random.random())\n# y3 = W2*x_data*x_data + W1*x_data + W0\n#y4 = W3*x_data*x_data*x_data+W2*x_data*x_data + W1*x_data + W0\ny4 = W3*(x_data**3)+W2*(x_data**2) + W1*x_data + W0\n\n\n# Minimize the squared errors.\nloss = tf.reduce_mean(tf.square(y4 - y_data))\noptimizer = tf.train.GradientDescentOptimizer(0.5)\ntrain = optimizer.minimize(loss)\n\n# For initializing the variables.\ninit = tf.initialize_all_variables()\n\n# Launch the graph\nsess = tf.InteractiveSession() ### for .eval()\nsess.run(init)\n\ntf.train.start_queue_runners(sess)\n\n#print 'key',key.eval()\n#print 'value',value.eval()\nprint 'x_data2, y_data2', x_data2.eval(), y_data2.eval()\nprint 'x_data2, y_data2', x_data2.eval(), y_data2.eval()\nprint 'x_data2, y_data2', x_data2.eval(), y_data2.eval()\n\n# Fit the plane.\nfor step in xrange(0, 5000):\n    sess.run(train)\nprint step, sess.run(W3), sess.run(W2), sess.run(W1), sess.run(W0)\n\n\n\n\u7d50\u679c\n$ python linreg_readcsv.py \nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties: \nname: GeForce GTX 1070\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7715\npciBusID 0000:01:00.0\nTotal memory: 7.91GiB\nFree memory: 7.40GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\nx_data2, y_data2 3 7\nx_data2, y_data2 4 8\nx_data2, y_data2 5 2\n4999 8.07556 -11.302 1.92412 1.00516\n\n\n\u4ee5\u4e0b\u306e\u5143\u30d5\u30a1\u30a4\u30eb\u3068\u6bd4\u8f03\u3057\u3066\u3001x_data2.eval(), y_data2.eval()\u306e\u5b9f\u884c\u3068\u3057\u3066\n1\u884c\u76ee\u306e1\u5217\u76ee\u8868\u793a\u30012\u884c\u76ee\u306e2\u5217\u76ee\u8868\u793a\u3001\n3\u884c\u76ee\u306e1\u5217\u76ee\u8868\u793a\u30014\u884c\u76ee\u306e2\u5217\u76ee\u8868\u793a\n\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n$ cat xydata.csv \n3,2\n1,7\n4,1\n1,8\n5,2\n\n.eval()\u3092\u5b9f\u884c\u3057\u305f\u6642\u70b9\u3067\u6b21\u306e\u884c\u306b\u79fb\u3063\u3066\u3044\u308b\u611f\u3058\u3002\n\u540c\u3058\u884c\u306e\u5024\u3092.eval()\u3067\u8868\u793a\u3059\u308b\u65b9\u6cd5\u306f\u672a\u6d88\u5316\u3002\n```txt:\u52d5\u4f5c\u74b0\u5883\nGeForce GTX 1070 (8GB)\nASRock Z170M Pro4S [Intel Z170chipset]\nUbuntu 14.04 LTS desktop amd64\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v8.0\nPython 2.7.6\n```\n\nhttp://qiita.com/7of9/items/ce3b6354d16875cfc362\n\u306e\u7d9a\u304d\u3002\n\ncsv\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3082\u3046\u3068\u3057\u3066\u3044\u308b\u3002\n\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u306f\u4ee5\u4e0b\u306b\u5909\u66f4\u3057\u305f\u3002\n\n```\n$ cat xydata.csv \n3,2\n1,7\n4,1\n1,8\n5,2\n```\n\nhttp://qiita.com/knok/items/2dd15189cbca5f9890c5\n\u3084\nhttps://www.tensorflow.org/versions/r0.11/how_tos/reading_data/index.html#file-formats\n\u3092\u53c2\u8003\u306b\u3057\u305f\u3002\n\n- decode_csv()\u3092\u4f7f\u3046\n- tf.Session()\u3067\u306a\u304ftf.InteractiveSession()\u3092\u4f7f\u3046\n- tf.train.start_queue_runners(sess)\u3092\u5b9f\u884c\u3059\u308b\n- .eval()\u3092\u4f7f\u3046\n\n```linreg_readcsv.py\nimport tensorflow as tf\nimport numpy as np\nimport random\n\nx_data = np.float32(np.random.rand(100)) # Random input\ny_data = np.sin(2*np.pi*x_data) + 0.3 * np.random.rand()\n\n#filename_queue = tf.train.string_input_producer([\"csvTest.csv\"])\nfilename_queue = tf.train.string_input_producer([\"xydata.csv\"])\nreader = tf.TextLineReader()\nkey, value = reader.read(filename_queue)\n\nrecord_defaults = [[1], [1]]\nx_data2, y_data2 = tf.decode_csv(\n\tvalue, record_defaults=record_defaults)\n\n# Construct a linear model.\nW3 = tf.Variable(random.random())\nW2 = tf.Variable(random.random())\nW1 = tf.Variable(random.random())\nW0 = tf.Variable(random.random())\n# y3 = W2*x_data*x_data + W1*x_data + W0\n#y4 = W3*x_data*x_data*x_data+W2*x_data*x_data + W1*x_data + W0\ny4 = W3*(x_data**3)+W2*(x_data**2) + W1*x_data + W0\n\n\n# Minimize the squared errors.\nloss = tf.reduce_mean(tf.square(y4 - y_data))\noptimizer = tf.train.GradientDescentOptimizer(0.5)\ntrain = optimizer.minimize(loss)\n\n# For initializing the variables.\ninit = tf.initialize_all_variables()\n\n# Launch the graph\nsess = tf.InteractiveSession() ### for .eval()\nsess.run(init)\n\ntf.train.start_queue_runners(sess)\n\n#print 'key',key.eval()\n#print 'value',value.eval()\nprint 'x_data2, y_data2', x_data2.eval(), y_data2.eval()\nprint 'x_data2, y_data2', x_data2.eval(), y_data2.eval()\nprint 'x_data2, y_data2', x_data2.eval(), y_data2.eval()\n\n# Fit the plane.\nfor step in xrange(0, 5000):\n    sess.run(train)\nprint step, sess.run(W3), sess.run(W2), sess.run(W1), sess.run(W0)\n```\n\n```txt:\u7d50\u679c\n$ python linreg_readcsv.py \nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties: \nname: GeForce GTX 1070\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7715\npciBusID 0000:01:00.0\nTotal memory: 7.91GiB\nFree memory: 7.40GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\nx_data2, y_data2 3 7\nx_data2, y_data2 4 8\nx_data2, y_data2 5 2\n4999 8.07556 -11.302 1.92412 1.00516\n```\n\n\u4ee5\u4e0b\u306e\u5143\u30d5\u30a1\u30a4\u30eb\u3068\u6bd4\u8f03\u3057\u3066\u3001x_data2.eval(), y_data2.eval()\u306e\u5b9f\u884c\u3068\u3057\u3066\n1\u884c\u76ee\u306e1\u5217\u76ee\u8868\u793a\u30012\u884c\u76ee\u306e2\u5217\u76ee\u8868\u793a\u3001\n3\u884c\u76ee\u306e1\u5217\u76ee\u8868\u793a\u30014\u884c\u76ee\u306e2\u5217\u76ee\u8868\u793a\n\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n```\n$ cat xydata.csv \n3,2\n1,7\n4,1\n1,8\n5,2\n```\n\n.eval()\u3092\u5b9f\u884c\u3057\u305f\u6642\u70b9\u3067\u6b21\u306e\u884c\u306b\u79fb\u3063\u3066\u3044\u308b\u611f\u3058\u3002\n\u540c\u3058\u884c\u306e\u5024\u3092.eval()\u3067\u8868\u793a\u3059\u308b\u65b9\u6cd5\u306f\u672a\u6d88\u5316\u3002\n\n\n"}