{"context": " More than 1 year has passed since last update.Kaminari \u3068\u3044\u3046 gem \u304c\u3042\u308a\u307e\u3057\u3066\u3001\u304a\u4e16\u8a71\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n    <%= paginate @collection, param_name: 'query[page]' %>\n\n\u3057\u305f\u304f\u306a\u3063\u305f\u308f\u3051\u3067\u3059\u3002\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u3088\u3002\u306a\u3093\u304b\u4e0a\u624b\u304f\u52d5\u304b\u306a\u3044\u3002\nhttps://github.com/amatsuda/kaminari/blob/master/lib/kaminari/helpers/tags.rb\n\u3081\u3063\u3061\u3083\u52d5\u304d\u305d\u3046\u3058\u3083\u3093\u3002\n    <% { query: { page: 1 } }.deep_stringify_keys.deep_merge(Rack::Utils.parse_nested_query(\"query[page]=2\")) %>\n\n\u52d5\u3044\u305f\u3093\u3067\u3059\u3088\u3002\n\nmaster\u306e\u30b3\u30fc\u30c9\u304c\u4f7f\u3044\u305f\u3044\n\u3069\u3046\u3084\u3089\u3053\u306e\u30b3\u30fc\u30c9\u3001master\u30d6\u30e9\u30f3\u30c1\u306b\u3042\u308b\u307f\u305f\u3044\u306a\u3093\u3067\u3059\u3002\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066\u308b 0.16.3 \u306e\u30d6\u30e9\u30f3\u30c1\u306b\u306f\u306a\u304b\u3063\u305f\u3002\u306a\u306e\u3067\u3001master \u304c\u5b89\u5168\u305d\u3046\u306a\u3089\u305d\u3063\u3061\u3092\u4f7f\u3044\u305f\u3044\u3002\uff08stable\u30d6\u30e9\u30f3\u30c1\u306b\u3082\u306a\u304b\u3063\u305f\uff09\n\u5b89\u5b9a\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306f\u60a9\u307e\u3057\u3044\u90e8\u5206\u3067\u3059\u304c\u3001\u591a\u5206\u5b89\u5b9a\u3057\u3066\u308b\u3060\u308d\u3046\u3068\u306f\u601d\u3063\u305f\u306e\u3067\u3059\u306d\u3002\u305f\u3060\u307e\u3042\u3001\u4e00\u5fdc\u624b\u5143\u306e\u74b0\u5883\u3067\u30c6\u30b9\u30c8\u304f\u3089\u3044\u306f\u3084\u3063\u3066\u304a\u304d\u305f\u3044\u3002\n\u4f5c\u3063\u305f\u4eba\u306bTwitter\u3067\u805e\u3044\u3066\u307f\u308b\u306e\u3082\u624b\u304b\u3068\u601d\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u4eba\u898b\u77e5\u308a\u306a\u306e\u3067\u30a2\u30ec\u306a\u306e\u3068\u3001\u307e\u3042\u305d\u306e\u5834\u5408\u3082\u30c6\u30b9\u30c8\u304f\u3089\u3044\u3084\u3063\u3066\u304b\u3089\u3067\u3044\u3044\u3002\u3042\u3068\u300c\u305d\u3093\u306a\u3093\u81ea\u5206\u3067\u5224\u65ad\u3057\u308d\u3088\u300d\u3063\u3066\u601d\u308f\u308c\u305d\u3046\u3067\u5acc\u3060\u3002\uff08\u81ea\u5206\u3060\u3063\u305f\u3089\u601d\u3046\uff09\n\u306a\u306e\u3067\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u305f\u3044\u3002\n\n\u30c6\u30b9\u30c8\u3057\u305f\u3044\nhttps://github.com/amatsuda/kaminari/wiki/How-To%3A-Contributing-to-Kaminari\n\u66f0\u304f\u3001bundle exec rake spec:all \u3067\u5168\u90e8\u30c6\u30b9\u30c8\u3067\u304d\u308b\u305c\u3001\u3068\u306e\u3053\u3068\u3002\n\u3084\u3063\u3066\u307f\u305f\u3051\u3069\u5f53\u7136 bundle install \u3092\u6c42\u3081\u3089\u308c\u3066\u3001\u3057\u304b\u3082gemfiles\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u306a\u3093\u304b\u3044\u3063\u3071\u3044\u3044\u308b\u3002\u3053\u308c\u5168\u90e8 bundle install \u3059\u308b\u65b9\u6cd5\u3063\u3066\u3042\u308b\u3093\u3060\u308d\u3046\u304b\u3002\u591a\u5206\u3042\u308b\u3093\u3060\u308d\u3046\u3051\u3069\u3001\u77e5\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u529b\u6280\u3067\u89e3\u6c7a\u3059\u308b\u3002\nfind gemfiles -name '*gemfile' | xargs -I{} bundle install --gemfile {}\n\n\u3067\u304d\u305f\u3002\u306a\u3093\u304b\u6700\u65b0\u306e\uff08Rails 5 \u7cfb\u306e\u30b3\u30fc\u30c9\u3068\u304b\uff1f\uff09\u304c ruby 2.2.2+ \u3058\u3083\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\u3089\u3057\u3044\u306e\u3067\u3001\u5b9f\u969b\u306b\u306f\nrvm install 2.2.2\nfind gemfiles -name '*gemfile' | xargs -I{} bundle install --gemfile {}\n\n\u3060\u3063\u305f\u3002rbenv \u306f\u4f7f\u3063\u3066\u306a\u3044\u3002\n\n\u305d\u3053\u307e\u3067\u3084\u308b\u5fc5\u8981\u306a\u304b\u3063\u305f\ngemfile \u306e\u9055\u3044\u306a\u3093\u3067\u3059\u304c\u3001\u8981\u3059\u308b\u306b\u53e4\u3044\u74b0\u5883\u3068\u304b ActiveRecord \u4ee5\u5916\u306e ORM \u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306e\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u305f\u3044\u3063\u3066\u611f\u3058\u306a\u306e\u3067\u3001\u306a\u306b\u304b\u30b3\u30df\u30c3\u30c8\u3057\u305f\u3044\u306a\u3089\u3068\u3082\u304b\u304f\u3001\u81ea\u524d\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u7d44\u307f\u8fbc\u3080\u304b\u3069\u3046\u304b\u306e\u5927\u5473\u306a\u5224\u65ad\u6750\u6599\u306b\u3059\u308b\u305f\u3081\u306b\u5168\u90e8\u306e gemfile \u3067\u30c6\u30b9\u30c8\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u308f\u3051\u3067\u3059\u306d\u3002\u611a\u304b\u3060\u3063\u305f\u3002\n\u3068\u308a\u3042\u3048\u305a\u30c6\u30b9\u30c8\u306f\u5168\u90e8\u52d5\u4f5c\u3057\u305f\u306e\u3067\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\nKaminari \u306e\u30b3\u30fc\u30c9\u8aad\u3093\u3060\u8a18\u9332\u3082\u66f8\u3044\u3068\u304d\u307e\u3059\u3002\u3056\u3063\u304f\u308a\u8aad\u3093\u3060\u3060\u3051\u3067\u3059\u304c\u3002\nKaminari::ActionViewExtension \u304c ActionView \u306e\u62e1\u5f35\u3067\u3059\u3002paginate \u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u307e\u3059\u3002\n    # A helper that renders the pagination links.\n    #\n    #   <%= paginate @articles %>\n    #\n    # ==== Options\n    # * <tt>:window</tt> - The \"inner window\" size (4 by default).\n    # * <tt>:outer_window</tt> - The \"outer window\" size (0 by default).\n    # * <tt>:left</tt> - The \"left outer window\" size (0 by default).\n    # * <tt>:right</tt> - The \"right outer window\" size (0 by default).\n    # * <tt>:params</tt> - url_for parameters for the links (:controller, :action, etc.)\n    # * <tt>:param_name</tt> - parameter name for page number in the links (:page by default)\n    # * <tt>:remote</tt> - Ajax? (false by default)\n    # * <tt>:ANY_OTHER_VALUES</tt> - Any other hash key & values would be directly passed into each tag as :locals value.\n    def paginate(scope, options = {}, &block)\n      options[:total_pages] ||= options[:num_pages] || scope.total_pages\n\n      paginator = Kaminari::Helpers::Paginator.new(self, options.reverse_merge(:current_page => scope.current_page, :per_page => scope.limit_value, :remote => false))\n      paginator.to_s\n    end\n\n\u8aad\u3081\u3070\u5927\u4f53\u308f\u304b\u308a\u307e\u3059\u3002Kaminari::Helpers::Paginator.new \u306e \u7b2c\u4e00\u5f15\u6570\u306b\u3042\u308b self \u3063\u3066\u306e\u306f\u3001ActionView \u305d\u306e\u3082\u306e\u3067\u3059\u306d\u3002\u8aad\u3080\u307e\u3067\u77e5\u3089\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001ActionView \u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f params \u3092\u6301\u3063\u3066\u3044\u3066\u3001paginate \u5185\u90e8\u3067\u3053\u308c\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\n\u4f8b\u3048\u3070 /anywhere?params=value \u306e\u6642\u306b Kaminari \u3067\u751f\u6210\u3055\u308c\u305f\u30da\u30fc\u30b8\u30cd\u30a4\u30b7\u30e7\u30f3\u306e\u30ea\u30f3\u30af\u306eURL\u306f /anywhere?params=value&page=2 \u3068\u304b\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u3002\u3053\u306eURL\u306e\u751f\u6210\u6642\u306b\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u8fba\u308a\u306e\u51e6\u7406\u306e\u4e3b\u5f79\u306f Kaminari::Helpers::Tag \u30af\u30e9\u30b9\u3067\u3059\u3002\n    # A tag stands for an HTML tag inside the paginator.\n    # Basically, a tag has its own partial template file, so every tag can be\n    # rendered into String using its partial template.\n    #\n    # The template file should be placed in your app/views/kaminari/ directory\n    # with underscored class name (besides the \"Tag\" class. Tag is an abstract\n    # class, so _tag partial is not needed).\n    #   e.g.)  PrevLink  ->  app/views/kaminari/_prev_link.html.erb\n    #\n    # When no matching template were found in your app, the engine's pre\n    # installed template will be used.\n    #   e.g.)  Paginator  ->  $GEM_HOME/kaminari-x.x.x/app/views/kaminari/_paginator.html.erb\n    class Tag\n      def initialize(template, options = {}) #:nodoc:\n        @template, @options = template, options.dup\n        @param_name = @options.delete(:param_name) || Kaminari.config.param_name\n        @theme = @options.delete(:theme)\n        @views_prefix = @options.delete(:views_prefix)\n        @params = template.params.except(*PARAM_KEY_BLACKLIST).merge(@options.delete(:params) || {})\n        # @params in Rails 5 does no more inherits from Hash but composes a Hash\n        if @params.instance_variable_defined?(:@parameters) && !@params.respond_to?(:deep_merge)\n          @params = @params.instance_variable_get :@parameters\n        else\n          @params = @params.with_indifferent_access\n        end\n      end\n\n\u307e\u3042\u3053\u3093\u306a\u30b3\u30d4\u30da\u8aad\u3080\u306a\u3089\u5143\u30b3\u30fc\u30c9\u8aad\u3093\u3060\u307b\u3046\u304c\u826f\u3044\u3067\u3059\u3002\nhttps://github.com/amatsuda/kaminari/blob/master/lib/kaminari/helpers/tags.rb\n\u3067\u3001\u307e\u3042\u5148\u307b\u3069\u306e paginate \u30e1\u30bd\u30c3\u30c9\u3068\u3053\u306e\u30af\u30e9\u30b9\u306e\u9593\u306b\u306f\u3082\u30461\u30af\u30c3\u30b7\u30e7\u30f3\u3042\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u5272\u611b\u3057\u307e\u3059\u3002template \u304c\u3060\u3044\u305f\u3044 ActionView \u306b\u306a\u308a\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066 @params \u306b\u306f GET \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5165\u308b\u308f\u3051\u3067\u3059\u3002\n\u751f\u6210\u3055\u308c\u308b\u30da\u30fc\u30b8\u30cd\u30a4\u30b7\u30e7\u30f3\u306e URL \u306f\u3044\u308d\u3044\u308d\u3042\u3063\u3066 page_url_for \u30e1\u30bd\u30c3\u30c9\u304c\u62c5\u5f53\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8fba\u306f\u307e\u3042\u30c6\u30b9\u30c8\u3092\u8aad\u3093\u3060\u3089\u305d\u3046\u66f8\u3044\u3066\u307e\u3057\u305f\u3002\u547c\u3073\u51fa\u3057\u306e\u624b\u9806\u3068\u304b\u306f\u8aad\u3093\u3067\u306a\u3044\u306e\u3067\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u304c\u3001\u3068\u3082\u304b\u304f URL \u306e\u751f\u6210\u51e6\u7406\u306f\u3053\u3053\u3067\u3059\u3002\n      def params_for(page)\n        page_params = Rack::Utils.parse_nested_query(\"#{@param_name}=#{page}\")\n        page_params = @params.deep_merge(page_params)\n\n\u3053\u3053\u3067\u30a2\u30ec\u3057\u3066\u308b\u308f\u3051\u3067\u3059\u306d\u3002deep_merge \u3067\u3001page_params \u306e\u5185\u5bb9\u3067 @params \u3092\u4e0a\u66f8\u304d\u3057\u3066\u308b\u611f\u3058\u3067\u3059\u3002deep \u306a\u306e\u306f\u518d\u5e30\u7684\u306b\u3084\u308b\u3063\u3066\u3053\u3068\u3067\u3059\u3002\u591a\u5206\u3002\n\u3053\u308c\u3067 <%= paginate @collection, param_name: 'query[page]' %> \u3068\u304b\u3082\u52d5\u304f\u308f\u3051\u3067\u3059\u306d\u3002\n\n0.16.3\u306e\u5834\u5408\n\u307e\u305a Kaminari::Helpers::Tag \u306e @params \u304b\u3089\u3002\n    @params = @options[:params] ? template.params.merge(@options.delete :params) : template.params\n\n\u3042\u30fc\u3001\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u304c\u306a\u3044\u3093\u3067\u3059\u306d\u3002\n\u6b21\u306b page_url_for\n      def page_url_for(page)\n        @template.url_for @params.merge(@param_name => (page <= 1 ? nil : page), :only_path => true)\n      end\n\nmerge \u306a\u3093\u3067\u3059\u306d\u3002@param_name \u306b\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u306e params_name: ?? \u304c\u5165\u3063\u3066\u308b\u306e\u3067\u3001query[page] \u304c\u5165\u3063\u3066\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4e00\u65b9 @params \u306f { query: { page: 1 } } \u307f\u305f\u3044\u306a\u611f\u3058\u306a\u306e\u3067\u3001 merge \u3057\u3066\u3082\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3063\u307d\u3044\u611f\u3058\u304c\u3057\u307e\u3059\u306d\u3002\n\u7d30\u304b\u304f\u8a00\u3048\u3070\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u304b\u5fc5\u8981\u306a\u3093\u3067\u3057\u3087\u3046\u3051\u3069\u3001\u3068\u308a\u3042\u3048\u305a\u3084\u3063\u3066\u307f\u305f\u7d50\u679c\u3002\n[1] pry(main)> { query: { page: 1 } }.merge('query[page]' => 2)\n=> {:query=>{:page=>1}, \"query[page]\"=>2}\n\n\u305d\u3046\u3067\u3059\u306d\u3002\n\u3053\u3053\u304b\u3089\u5148\u8aad\u307f\u9032\u3081\u305f\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u591a\u5206\u3082\u3068\u3082\u3068 param_name: query[page] \u307f\u305f\u3044\u306a\u4f7f\u3044\u65b9\u306f\u60f3\u5b9a\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u3093\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\nkaminari/spec/helpers/helpers_spec.rb\n  describe '#param_name' do\n    before do\n      @paginator = Paginator.new(template, :param_name => :pagina)\n    end\n    subject { @paginator.page_tag(template).instance_variable_get('@param_name') }\n    it { should == :pagina }\n  end\n\n\n0.16.3 \u306e\u30c6\u30b9\u30c8\u3067 param_name \u306e\u30c6\u30b9\u30c8\u3057\u3066\u308b\u306e\u306f\u3053\u3053\u304f\u3089\u3044\u306a\u6c17\u304c\u3059\u308b\u3002\uff08\u5168\u90e8\u7cbe\u8aad\u3057\u305f\u308f\u3051\u3067\u306f\u306a\u3044\u3067\u3059\uff09\nmaster \u3060\u3068\u5897\u3048\u3066\u3044\u3066\u3001\u305f\u3068\u3048\u3070\n\nkaminari/spec/helpers/tags_spec.rb\n      context \"with param_name = 'user[page]' option\" do\n        before do\n          helper.params.merge!(:user => {:page => \"3\", :scope => \"active\"})\n        end\n\n        context \"for first page\" do\n          subject { Tag.new(helper, :param_name => \"user[page]\").page_url_for(1) }\n          if ActiveSupport::VERSION::STRING < \"3.1.0\"\n            it { should_not match(/user\\[page\\]=\\d+/) }\n            it { should match(/user\\[scope\\]=active/) }\n          else\n            it { should_not match(/user%5Bpage%5D=\\d+/) } # not match user[page]=\\d+\n            it { should match(/user%5Bscope%5D=active/) } #     match user[scope]=active\n          end\n        end\n\n        context \"for other page\" do\n          subject { Tag.new(helper, :param_name => \"user[page]\").page_url_for(2) }\n          if ActiveSupport::VERSION::STRING < \"3.1.0\"\n            it { should match(/user\\[page\\]=2/) }\n            it { should match(/user\\[scope\\]=active/) }\n          else\n            it { should match(/user%5Bpage%5D=2/) }       # match user[page]=2\n            it { should match(/user%5Bscope%5D=active/) } # match user[scope]=active\n          end\n        end\n      end\n\n\n\u307f\u305f\u3044\u306a\u30c6\u30b9\u30c8\u304c\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3084\u3063\u305f\u305c\uff01\n\n\u4f59\u8ac7\n\ngemfiles \u306e\u4e2d\u8eab\u3092\u5168\u90e8\u7a81\u3063\u8fbc\u3080\u51b4\u3048\u305f\u3084\u308a\u65b9\u3063\u3066\u306a\u3093\u304b\u3042\u308b\u3093\u3067\u3059\u304b\u306d\u3002\n\u73fe\u884c\u306e master \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u308b\u3053\u3068\u3092\u9858\u3063\u3066\u3044\u307e\u3059\u3002\u624b\u4f1d\u3046\uff1f \u3044\u3084\u82f1\u8a9e\u308f\u304b\u3093\u306a\u3044\u304b\u3089\u2026\u2026\u3002\n\ngem 'kaminari', ref: '45ee71b74c7a21333e2b05ae8672a0e8c0625e38', github: 'amatsuda/kaminari' \u3057\u307e\u3057\u305f\u3002\nmaster \u4f7f\u3046\u306e\u304c\u30a2\u30ec\u3060\u3063\u305f\u3089 fork \u3057\u3066\u30d1\u30c3\u30c1\u5f53\u3066\u305f\u3084\u3064\u3092\u4f7f\u3046\u306e\u304c\u6b63\u3057\u3044\u4f5c\u6cd5\u306a\u306e\u304b\u306a\uff1f \u624b\u5143\u306e lib \u3068\u304b\u306b\u30d1\u30c3\u30c1\u66f8\u3044\u3066 include \u3055\u305b\u308b\u306e\u3082\u826f\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u3042\u3093\u307e\u597d\u304d\u306a\u3084\u308a\u65b9\u3067\u306f\u306a\u3044\u3002\n\n\nKaminari \u3068\u3044\u3046 gem \u304c\u3042\u308a\u307e\u3057\u3066\u3001\u304a\u4e16\u8a71\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```.erb\n\t<%= paginate @collection, param_name: 'query[page]' %>\n```\n\n\u3057\u305f\u304f\u306a\u3063\u305f\u308f\u3051\u3067\u3059\u3002\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u3088\u3002\u306a\u3093\u304b\u4e0a\u624b\u304f\u52d5\u304b\u306a\u3044\u3002\n\nhttps://github.com/amatsuda/kaminari/blob/master/lib/kaminari/helpers/tags.rb\n\n\u3081\u3063\u3061\u3083\u52d5\u304d\u305d\u3046\u3058\u3083\u3093\u3002\n\n```.erb\n\t<% { query: { page: 1 } }.deep_stringify_keys.deep_merge(Rack::Utils.parse_nested_query(\"query[page]=2\")) %>\n```\n\n\u52d5\u3044\u305f\u3093\u3067\u3059\u3088\u3002\n\n## master\u306e\u30b3\u30fc\u30c9\u304c\u4f7f\u3044\u305f\u3044\n\n\u3069\u3046\u3084\u3089\u3053\u306e\u30b3\u30fc\u30c9\u3001master\u30d6\u30e9\u30f3\u30c1\u306b\u3042\u308b\u307f\u305f\u3044\u306a\u3093\u3067\u3059\u3002\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066\u308b 0.16.3 \u306e\u30d6\u30e9\u30f3\u30c1\u306b\u306f\u306a\u304b\u3063\u305f\u3002\u306a\u306e\u3067\u3001master \u304c\u5b89\u5168\u305d\u3046\u306a\u3089\u305d\u3063\u3061\u3092\u4f7f\u3044\u305f\u3044\u3002\uff08stable\u30d6\u30e9\u30f3\u30c1\u306b\u3082\u306a\u304b\u3063\u305f\uff09\n\n\u5b89\u5b9a\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306f\u60a9\u307e\u3057\u3044\u90e8\u5206\u3067\u3059\u304c\u3001\u591a\u5206\u5b89\u5b9a\u3057\u3066\u308b\u3060\u308d\u3046\u3068\u306f\u601d\u3063\u305f\u306e\u3067\u3059\u306d\u3002\u305f\u3060\u307e\u3042\u3001\u4e00\u5fdc\u624b\u5143\u306e\u74b0\u5883\u3067\u30c6\u30b9\u30c8\u304f\u3089\u3044\u306f\u3084\u3063\u3066\u304a\u304d\u305f\u3044\u3002\n\n\u4f5c\u3063\u305f\u4eba\u306bTwitter\u3067\u805e\u3044\u3066\u307f\u308b\u306e\u3082\u624b\u304b\u3068\u601d\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u4eba\u898b\u77e5\u308a\u306a\u306e\u3067\u30a2\u30ec\u306a\u306e\u3068\u3001\u307e\u3042\u305d\u306e\u5834\u5408\u3082\u30c6\u30b9\u30c8\u304f\u3089\u3044\u3084\u3063\u3066\u304b\u3089\u3067\u3044\u3044\u3002\u3042\u3068\u300c\u305d\u3093\u306a\u3093\u81ea\u5206\u3067\u5224\u65ad\u3057\u308d\u3088\u300d\u3063\u3066\u601d\u308f\u308c\u305d\u3046\u3067\u5acc\u3060\u3002\uff08\u81ea\u5206\u3060\u3063\u305f\u3089\u601d\u3046\uff09\n\n\u306a\u306e\u3067\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u305f\u3044\u3002\n\n## \u30c6\u30b9\u30c8\u3057\u305f\u3044\n\nhttps://github.com/amatsuda/kaminari/wiki/How-To%3A-Contributing-to-Kaminari\n\n\u66f0\u304f\u3001`bundle exec rake spec:all` \u3067\u5168\u90e8\u30c6\u30b9\u30c8\u3067\u304d\u308b\u305c\u3001\u3068\u306e\u3053\u3068\u3002\n\n\u3084\u3063\u3066\u307f\u305f\u3051\u3069\u5f53\u7136 `bundle install` \u3092\u6c42\u3081\u3089\u308c\u3066\u3001\u3057\u304b\u3082gemfiles\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u306a\u3093\u304b\u3044\u3063\u3071\u3044\u3044\u308b\u3002\u3053\u308c\u5168\u90e8 `bundle install` \u3059\u308b\u65b9\u6cd5\u3063\u3066\u3042\u308b\u3093\u3060\u308d\u3046\u304b\u3002\u591a\u5206\u3042\u308b\u3093\u3060\u308d\u3046\u3051\u3069\u3001\u77e5\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u529b\u6280\u3067\u89e3\u6c7a\u3059\u308b\u3002\n\n```bash\nfind gemfiles -name '*gemfile' | xargs -I{} bundle install --gemfile {}\n```\n\n\u3067\u304d\u305f\u3002\u306a\u3093\u304b\u6700\u65b0\u306e\uff08Rails 5 \u7cfb\u306e\u30b3\u30fc\u30c9\u3068\u304b\uff1f\uff09\u304c ruby 2.2.2+ \u3058\u3083\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\u3089\u3057\u3044\u306e\u3067\u3001\u5b9f\u969b\u306b\u306f\n\n```bash\nrvm install 2.2.2\nfind gemfiles -name '*gemfile' | xargs -I{} bundle install --gemfile {}\n```\n\n\u3060\u3063\u305f\u3002rbenv \u306f\u4f7f\u3063\u3066\u306a\u3044\u3002\n\n## \u305d\u3053\u307e\u3067\u3084\u308b\u5fc5\u8981\u306a\u304b\u3063\u305f\n\ngemfile \u306e\u9055\u3044\u306a\u3093\u3067\u3059\u304c\u3001\u8981\u3059\u308b\u306b\u53e4\u3044\u74b0\u5883\u3068\u304b ActiveRecord \u4ee5\u5916\u306e ORM \u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306e\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u305f\u3044\u3063\u3066\u611f\u3058\u306a\u306e\u3067\u3001\u306a\u306b\u304b\u30b3\u30df\u30c3\u30c8\u3057\u305f\u3044\u306a\u3089\u3068\u3082\u304b\u304f\u3001\u81ea\u524d\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u7d44\u307f\u8fbc\u3080\u304b\u3069\u3046\u304b\u306e\u5927\u5473\u306a\u5224\u65ad\u6750\u6599\u306b\u3059\u308b\u305f\u3081\u306b\u5168\u90e8\u306e gemfile \u3067\u30c6\u30b9\u30c8\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u308f\u3051\u3067\u3059\u306d\u3002\u611a\u304b\u3060\u3063\u305f\u3002\n\n\u3068\u308a\u3042\u3048\u305a\u30c6\u30b9\u30c8\u306f\u5168\u90e8\u52d5\u4f5c\u3057\u305f\u306e\u3067\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n## \u3061\u306a\u307f\u306b\n\nKaminari \u306e\u30b3\u30fc\u30c9\u8aad\u3093\u3060\u8a18\u9332\u3082\u66f8\u3044\u3068\u304d\u307e\u3059\u3002\u3056\u3063\u304f\u308a\u8aad\u3093\u3060\u3060\u3051\u3067\u3059\u304c\u3002\n\n`Kaminari::ActionViewExtension` \u304c `ActionView` \u306e\u62e1\u5f35\u3067\u3059\u3002paginate \u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u307e\u3059\u3002\n\n```ruby\n    # A helper that renders the pagination links.\n    #\n    #   <%= paginate @articles %>\n    #\n    # ==== Options\n    # * <tt>:window</tt> - The \"inner window\" size (4 by default).\n    # * <tt>:outer_window</tt> - The \"outer window\" size (0 by default).\n    # * <tt>:left</tt> - The \"left outer window\" size (0 by default).\n    # * <tt>:right</tt> - The \"right outer window\" size (0 by default).\n    # * <tt>:params</tt> - url_for parameters for the links (:controller, :action, etc.)\n    # * <tt>:param_name</tt> - parameter name for page number in the links (:page by default)\n    # * <tt>:remote</tt> - Ajax? (false by default)\n    # * <tt>:ANY_OTHER_VALUES</tt> - Any other hash key & values would be directly passed into each tag as :locals value.\n    def paginate(scope, options = {}, &block)\n      options[:total_pages] ||= options[:num_pages] || scope.total_pages\n\n      paginator = Kaminari::Helpers::Paginator.new(self, options.reverse_merge(:current_page => scope.current_page, :per_page => scope.limit_value, :remote => false))\n      paginator.to_s\n    end\n```\n\n\u8aad\u3081\u3070\u5927\u4f53\u308f\u304b\u308a\u307e\u3059\u3002Kaminari::Helpers::Paginator.new \u306e \u7b2c\u4e00\u5f15\u6570\u306b\u3042\u308b self \u3063\u3066\u306e\u306f\u3001ActionView \u305d\u306e\u3082\u306e\u3067\u3059\u306d\u3002\u8aad\u3080\u307e\u3067\u77e5\u3089\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001ActionView \u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f params \u3092\u6301\u3063\u3066\u3044\u3066\u3001paginate \u5185\u90e8\u3067\u3053\u308c\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070 `/anywhere?params=value` \u306e\u6642\u306b Kaminari \u3067\u751f\u6210\u3055\u308c\u305f\u30da\u30fc\u30b8\u30cd\u30a4\u30b7\u30e7\u30f3\u306e\u30ea\u30f3\u30af\u306eURL\u306f `/anywhere?params=value&page=2` \u3068\u304b\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u3002\u3053\u306eURL\u306e\u751f\u6210\u6642\u306b\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u8fba\u308a\u306e\u51e6\u7406\u306e\u4e3b\u5f79\u306f `Kaminari::Helpers::Tag` \u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```ruby\n    # A tag stands for an HTML tag inside the paginator.\n    # Basically, a tag has its own partial template file, so every tag can be\n    # rendered into String using its partial template.\n    #\n    # The template file should be placed in your app/views/kaminari/ directory\n    # with underscored class name (besides the \"Tag\" class. Tag is an abstract\n    # class, so _tag partial is not needed).\n    #   e.g.)  PrevLink  ->  app/views/kaminari/_prev_link.html.erb\n    #\n    # When no matching template were found in your app, the engine's pre\n    # installed template will be used.\n    #   e.g.)  Paginator  ->  $GEM_HOME/kaminari-x.x.x/app/views/kaminari/_paginator.html.erb\n    class Tag\n      def initialize(template, options = {}) #:nodoc:\n        @template, @options = template, options.dup\n        @param_name = @options.delete(:param_name) || Kaminari.config.param_name\n        @theme = @options.delete(:theme)\n        @views_prefix = @options.delete(:views_prefix)\n        @params = template.params.except(*PARAM_KEY_BLACKLIST).merge(@options.delete(:params) || {})\n        # @params in Rails 5 does no more inherits from Hash but composes a Hash\n        if @params.instance_variable_defined?(:@parameters) && !@params.respond_to?(:deep_merge)\n          @params = @params.instance_variable_get :@parameters\n        else\n          @params = @params.with_indifferent_access\n        end\n      end\n```\n\n\u307e\u3042\u3053\u3093\u306a\u30b3\u30d4\u30da\u8aad\u3080\u306a\u3089\u5143\u30b3\u30fc\u30c9\u8aad\u3093\u3060\u307b\u3046\u304c\u826f\u3044\u3067\u3059\u3002\n\nhttps://github.com/amatsuda/kaminari/blob/master/lib/kaminari/helpers/tags.rb\n\n\u3067\u3001\u307e\u3042\u5148\u307b\u3069\u306e `paginate` \u30e1\u30bd\u30c3\u30c9\u3068\u3053\u306e\u30af\u30e9\u30b9\u306e\u9593\u306b\u306f\u3082\u30461\u30af\u30c3\u30b7\u30e7\u30f3\u3042\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u5272\u611b\u3057\u307e\u3059\u3002template \u304c\u3060\u3044\u305f\u3044 ActionView \u306b\u306a\u308a\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066 @params \u306b\u306f GET \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5165\u308b\u308f\u3051\u3067\u3059\u3002\n\n\u751f\u6210\u3055\u308c\u308b\u30da\u30fc\u30b8\u30cd\u30a4\u30b7\u30e7\u30f3\u306e URL \u306f\u3044\u308d\u3044\u308d\u3042\u3063\u3066 `page_url_for` \u30e1\u30bd\u30c3\u30c9\u304c\u62c5\u5f53\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8fba\u306f\u307e\u3042\u30c6\u30b9\u30c8\u3092\u8aad\u3093\u3060\u3089\u305d\u3046\u66f8\u3044\u3066\u307e\u3057\u305f\u3002\u547c\u3073\u51fa\u3057\u306e\u624b\u9806\u3068\u304b\u306f\u8aad\u3093\u3067\u306a\u3044\u306e\u3067\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u304c\u3001\u3068\u3082\u304b\u304f URL \u306e\u751f\u6210\u51e6\u7406\u306f\u3053\u3053\u3067\u3059\u3002\n\n```ruby\n      def params_for(page)\n        page_params = Rack::Utils.parse_nested_query(\"#{@param_name}=#{page}\")\n        page_params = @params.deep_merge(page_params)\n```\n\n\u3053\u3053\u3067\u30a2\u30ec\u3057\u3066\u308b\u308f\u3051\u3067\u3059\u306d\u3002`deep_merge` \u3067\u3001page_params \u306e\u5185\u5bb9\u3067 @params \u3092\u4e0a\u66f8\u304d\u3057\u3066\u308b\u611f\u3058\u3067\u3059\u3002deep \u306a\u306e\u306f\u518d\u5e30\u7684\u306b\u3084\u308b\u3063\u3066\u3053\u3068\u3067\u3059\u3002\u591a\u5206\u3002\n\n\u3053\u308c\u3067 `<%= paginate @collection, param_name: 'query[page]' %>` \u3068\u304b\u3082\u52d5\u304f\u308f\u3051\u3067\u3059\u306d\u3002\n\n### 0.16.3\u306e\u5834\u5408\n\n\u307e\u305a `Kaminari::Helpers::Tag` \u306e @params \u304b\u3089\u3002\n\n```ruby\n\t@params = @options[:params] ? template.params.merge(@options.delete :params) : template.params\n```\n\n\u3042\u30fc\u3001\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u304c\u306a\u3044\u3093\u3067\u3059\u306d\u3002\n\n\u6b21\u306b page_url_for\n\n```ruby\n      def page_url_for(page)\n        @template.url_for @params.merge(@param_name => (page <= 1 ? nil : page), :only_path => true)\n      end\n```\n\nmerge \u306a\u3093\u3067\u3059\u306d\u3002@param_name \u306b\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u306e params_name: ?? \u304c\u5165\u3063\u3066\u308b\u306e\u3067\u3001`query[page]` \u304c\u5165\u3063\u3066\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4e00\u65b9 @params \u306f `{ query: { page: 1 } }` \u307f\u305f\u3044\u306a\u611f\u3058\u306a\u306e\u3067\u3001 merge \u3057\u3066\u3082\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3063\u307d\u3044\u611f\u3058\u304c\u3057\u307e\u3059\u306d\u3002\n\n\u7d30\u304b\u304f\u8a00\u3048\u3070\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u304b\u5fc5\u8981\u306a\u3093\u3067\u3057\u3087\u3046\u3051\u3069\u3001\u3068\u308a\u3042\u3048\u305a\u3084\u3063\u3066\u307f\u305f\u7d50\u679c\u3002\n\n```ruby\n[1] pry(main)> { query: { page: 1 } }.merge('query[page]' => 2)\n=> {:query=>{:page=>1}, \"query[page]\"=>2}\n```\n\n\u305d\u3046\u3067\u3059\u306d\u3002\n\n\u3053\u3053\u304b\u3089\u5148\u8aad\u307f\u9032\u3081\u305f\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u591a\u5206\u3082\u3068\u3082\u3068 `param_name: query[page]` \u307f\u305f\u3044\u306a\u4f7f\u3044\u65b9\u306f\u60f3\u5b9a\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u3093\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n```kaminari/spec/helpers/helpers_spec.rb\n  describe '#param_name' do\n    before do\n      @paginator = Paginator.new(template, :param_name => :pagina)\n    end\n    subject { @paginator.page_tag(template).instance_variable_get('@param_name') }\n    it { should == :pagina }\n  end\n```\n\n0.16.3 \u306e\u30c6\u30b9\u30c8\u3067 param_name \u306e\u30c6\u30b9\u30c8\u3057\u3066\u308b\u306e\u306f\u3053\u3053\u304f\u3089\u3044\u306a\u6c17\u304c\u3059\u308b\u3002\uff08\u5168\u90e8\u7cbe\u8aad\u3057\u305f\u308f\u3051\u3067\u306f\u306a\u3044\u3067\u3059\uff09\n\nmaster \u3060\u3068\u5897\u3048\u3066\u3044\u3066\u3001\u305f\u3068\u3048\u3070\n\n```kaminari/spec/helpers/tags_spec.rb\n      context \"with param_name = 'user[page]' option\" do\n        before do\n          helper.params.merge!(:user => {:page => \"3\", :scope => \"active\"})\n        end\n\n        context \"for first page\" do\n          subject { Tag.new(helper, :param_name => \"user[page]\").page_url_for(1) }\n          if ActiveSupport::VERSION::STRING < \"3.1.0\"\n            it { should_not match(/user\\[page\\]=\\d+/) }\n            it { should match(/user\\[scope\\]=active/) }\n          else\n            it { should_not match(/user%5Bpage%5D=\\d+/) } # not match user[page]=\\d+\n            it { should match(/user%5Bscope%5D=active/) } #     match user[scope]=active\n          end\n        end\n\n        context \"for other page\" do\n          subject { Tag.new(helper, :param_name => \"user[page]\").page_url_for(2) }\n          if ActiveSupport::VERSION::STRING < \"3.1.0\"\n            it { should match(/user\\[page\\]=2/) }\n            it { should match(/user\\[scope\\]=active/) }\n          else\n            it { should match(/user%5Bpage%5D=2/) }       # match user[page]=2\n            it { should match(/user%5Bscope%5D=active/) } # match user[scope]=active\n          end\n        end\n      end\n```\n\n\u307f\u305f\u3044\u306a\u30c6\u30b9\u30c8\u304c\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3084\u3063\u305f\u305c\uff01\n\n# \u4f59\u8ac7\n\n- gemfiles \u306e\u4e2d\u8eab\u3092\u5168\u90e8\u7a81\u3063\u8fbc\u3080\u51b4\u3048\u305f\u3084\u308a\u65b9\u3063\u3066\u306a\u3093\u304b\u3042\u308b\u3093\u3067\u3059\u304b\u306d\u3002\n- \u73fe\u884c\u306e master \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u308b\u3053\u3068\u3092\u9858\u3063\u3066\u3044\u307e\u3059\u3002\u624b\u4f1d\u3046\uff1f \u3044\u3084\u82f1\u8a9e\u308f\u304b\u3093\u306a\u3044\u304b\u3089\u2026\u2026\u3002\n- `gem 'kaminari', ref: '45ee71b74c7a21333e2b05ae8672a0e8c0625e38', github: 'amatsuda/kaminari'` \u3057\u307e\u3057\u305f\u3002\n- master \u4f7f\u3046\u306e\u304c\u30a2\u30ec\u3060\u3063\u305f\u3089 fork \u3057\u3066\u30d1\u30c3\u30c1\u5f53\u3066\u305f\u3084\u3064\u3092\u4f7f\u3046\u306e\u304c\u6b63\u3057\u3044\u4f5c\u6cd5\u306a\u306e\u304b\u306a\uff1f \u624b\u5143\u306e lib \u3068\u304b\u306b\u30d1\u30c3\u30c1\u66f8\u3044\u3066 include \u3055\u305b\u308b\u306e\u3082\u826f\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u3042\u3093\u307e\u597d\u304d\u306a\u3084\u308a\u65b9\u3067\u306f\u306a\u3044\u3002\n", "tags": ["kaminari", "Rails"]}