{"context": " More than 1 year has passed since last update.\u554f\u984c\u5185\u5bb9\u7b49\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3002\nhttp://qiita.com/Nabetani/items/cba03c96d1ea55f6e861\n\u4e8b\u524d\u306b\u3044\u304f\u3064\u304b\u306e\u904e\u53bb\u554f\u984c\u306b\u6311\u6226\u3057\u3066\u3044\u305f\u304a\u304b\u3052\u3067\u3001\u8f9e\u66f8\u3092\u4f5c\u308b\u306e\u304c\u3044\u3044\u3060\u308d\u3046\u3068\u3059\u3050\u306b\u601d\u3044\u3064\u304d\u3001\u96fb\u5149\u6587\u5b57\u306e\u30c9\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u306e\u9ed2(\u70b9\u706f)\u30921\u3001\u767d(\u6d88\u706f)\u30920\u3068\u3057\u3066\u4e0a\u6bb5\u3068\u4e0b\u6bb5\u3092\u4e26\u3079\u305f\u306e\u3092\u30ad\u30fc\u3068\u3057\u3001\u6587\u5b57\u3092\u5024\u3068\u3057\u3066\u8f9e\u66f8\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u5165\u529b\u3055\u308c\u305f16\u9032\u6570\u6587\u5b57\u5217\u309232\u6587\u5b57\u306e2\u9032\u6570\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u3001\u4e0a\u6bb5\u3068\u4e0b\u6bb5\u306e\u5148\u982d\u304b\u3089\u6570\u6587\u5b57\u305a\u3064\u53d6\u308a\u51fa\u3057\u3066\u8f9e\u66f8\u3092\u5f15\u304d\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u53d6\u308a\u51fa\u3059\u6587\u5b57\u6570\u306b\u6ce8\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u4e0a\u4e0b3\u30c9\u30c3\u30c8\u305a\u3064\u306e\u2019U'\u306e\u30c9\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u3063\u305f\u3068\u304d\u3001\u4e0a\u4e0b2\u30c9\u30c3\u30c8\u305a\u3064\u3092\u53d6\u308a\u51fa\u3057\u3066\u8f9e\u66f8\u3092\u5f15\u3044\u3066\u3057\u307e\u3046\u3068'L'\u306e\u30c9\u30c3\u30c8\u30d1\u30bf\u30f3\u3068\u4e00\u81f4\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3067\u3059\u306e\u3067\u3001\u6700\u521d\u306b3\u30c9\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u304b\u8abf\u3079\u3001\u6b21\u306b2\u30c9\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u304b\u8abf\u3079\u3001\u6700\u5f8c\u306b\u3069\u308c\u306b\u3082\u30d2\u30c3\u30c8\u3057\u306a\u3044\u5834\u5408\u306b\u306f\u533a\u5207\u308a\u306e1\u30c9\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3(00)\u304b\u3092\u8abf\u3079\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\nparts = {'1011':'L', '1110':'R', '0111':'J', '111010':'T', '101111':'U',\n         '111101':'N', '011110':'S', '110011':'Z', '00':'' }\n\ndef solve(text):\n    upper, lower = (format(int(t,16),'032b') for t in text.split('/'))\n    answer = ''\n    while len(upper) > 0:\n        for n in xrange(3, 0, -1):\n            part = upper[:n] + lower[:n]\n            if part in parts:\n                answer += parts[part]\n                upper, lower = upper[n:], lower[n:]\n                break\n    return answer\n\ndef test(text, answer):\n    result = solve(text)\n    print '%s\\t%s\\t%s' % ('OK' if result == answer else 'NG', text, result)\n\nif __name__ == '__main__':\n    0, test( \"2ed8aeed/34b0ea5b\", \"LTRSUNTSJ\" );\n    1, test( \"00000200/00000300\", \"L\" );\n    2, test( \"00018000/00010000\", \"R\" );\n    3, test( \"00002000/00006000\", \"J\" );\n    4, test( \"00000700/00000200\", \"T\" );\n    5, test( \"01400000/01c00000\", \"U\" );\n    6, test( \"00003800/00002800\", \"N\" );\n    7, test( \"000c0000/00180000\", \"S\" );\n    8, test( \"00003000/00001800\", \"Z\" );\n    9, test( \"132eae6c/1a64eac6\", \"LRJTUNSZ\" );\n    10, test( \"637572d0/36572698\", \"ZSNUTJRL\" );\n    11, test( \"baddb607/d66b6c05\", \"LTJZTSSSN\" );\n    12, test( \"db74cd75/6dac6b57\", \"ZZZTJZRJNU\" );\n    13, test( \"3606c2e8/1b0d8358\", \"ZZSSLTJ\" );\n    14, test( \"ad98c306/e6cc6183\", \"UZZZZZZ\" );\n    15, test( \"4a4aaee3/db6eeaa6\", \"JJLLUUNNS\" );\n    16, test( \"ecd9bbb6/598cd124\", \"TSSZZTTRR\" );\n    17, test( \"e0000002/40000003\", \"TL\" );\n    18, test( \"a0000007/e0000005\", \"UN\" );\n    19, test( \"c0000003/80000006\", \"RS\" );\n    20, test( \"40000006/c0000003\", \"JZ\" );\n    21, test( \"01da94db/00b3b6b2\", \"TSUJLRSR\" );\n    22, test( \"76eeaaea/24aaeeae\", \"TRNNUUNU\" );\n    23, test( \"1dacaeee/1566e444\", \"NRJZUTTT\" );\n    24, test( \"26c9ac60/6c6d66c0\", \"JSZLRJZS\" );\n    25, test( \"6c977620/36da5360\", \"ZZLLTNZJ\" );\n    26, test( \"069aeae6/0db34eac\", \"SJSLTUNS\" );\n    27, test( \"06d53724/049da56c\", \"RRULRNJJ\" );\n    28, test( \"069b58b0/04d66da0\", \"RLRSLZJR\" );\n    29, test( \"1b6eced4/11b46a9c\", \"RZZTZNRU\" );\n    30, test( \"522e8b80/db6ad900\", \"JLLJNLJT\" );\n    31, test( \"6546cdd0/376c6898\", \"ZULSZRTL\" );\n    32, test( \"4e6d5b70/6ad9d620\", \"LNSSURST\" );\n    33, test( \"37367772/65635256\", \"SNSZNTNJ\" );\n    34, test( \"25535d58/377669cc\", \"LUUSLTUZ\" );\n    35, test( \"0ae6a55d/0eacedcb\", \"UNSUJUTJ\" );\n    36, test( \"76762edc/23536a88\", \"TZNZJNRT\" );\n\n\u554f\u984c\u5185\u5bb9\u7b49\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3002\nhttp://qiita.com/Nabetani/items/cba03c96d1ea55f6e861\n\n\u4e8b\u524d\u306b\u3044\u304f\u3064\u304b\u306e\u904e\u53bb\u554f\u984c\u306b\u6311\u6226\u3057\u3066\u3044\u305f\u304a\u304b\u3052\u3067\u3001\u8f9e\u66f8\u3092\u4f5c\u308b\u306e\u304c\u3044\u3044\u3060\u308d\u3046\u3068\u3059\u3050\u306b\u601d\u3044\u3064\u304d\u3001\u96fb\u5149\u6587\u5b57\u306e\u30c9\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u306e\u9ed2(\u70b9\u706f)\u30921\u3001\u767d(\u6d88\u706f)\u30920\u3068\u3057\u3066\u4e0a\u6bb5\u3068\u4e0b\u6bb5\u3092\u4e26\u3079\u305f\u306e\u3092\u30ad\u30fc\u3068\u3057\u3001\u6587\u5b57\u3092\u5024\u3068\u3057\u3066\u8f9e\u66f8\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u5165\u529b\u3055\u308c\u305f16\u9032\u6570\u6587\u5b57\u5217\u309232\u6587\u5b57\u306e2\u9032\u6570\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u3001\u4e0a\u6bb5\u3068\u4e0b\u6bb5\u306e\u5148\u982d\u304b\u3089\u6570\u6587\u5b57\u305a\u3064\u53d6\u308a\u51fa\u3057\u3066\u8f9e\u66f8\u3092\u5f15\u304d\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u53d6\u308a\u51fa\u3059\u6587\u5b57\u6570\u306b\u6ce8\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u4e0a\u4e0b3\u30c9\u30c3\u30c8\u305a\u3064\u306e\u2019U'\u306e\u30c9\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u3063\u305f\u3068\u304d\u3001\u4e0a\u4e0b2\u30c9\u30c3\u30c8\u305a\u3064\u3092\u53d6\u308a\u51fa\u3057\u3066\u8f9e\u66f8\u3092\u5f15\u3044\u3066\u3057\u307e\u3046\u3068'L'\u306e\u30c9\u30c3\u30c8\u30d1\u30bf\u30f3\u3068\u4e00\u81f4\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3067\u3059\u306e\u3067\u3001\u6700\u521d\u306b3\u30c9\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u304b\u8abf\u3079\u3001\u6b21\u306b2\u30c9\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u304b\u8abf\u3079\u3001\u6700\u5f8c\u306b\u3069\u308c\u306b\u3082\u30d2\u30c3\u30c8\u3057\u306a\u3044\u5834\u5408\u306b\u306f\u533a\u5207\u308a\u306e1\u30c9\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3(00)\u304b\u3092\u8abf\u3079\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```py\nparts = {'1011':'L', '1110':'R', '0111':'J', '111010':'T', '101111':'U',\n         '111101':'N', '011110':'S', '110011':'Z', '00':'' }\n\ndef solve(text):\n    upper, lower = (format(int(t,16),'032b') for t in text.split('/'))\n    answer = ''\n    while len(upper) > 0:\n        for n in xrange(3, 0, -1):\n            part = upper[:n] + lower[:n]\n            if part in parts:\n                answer += parts[part]\n                upper, lower = upper[n:], lower[n:]\n                break\n    return answer\n\ndef test(text, answer):\n    result = solve(text)\n    print '%s\\t%s\\t%s' % ('OK' if result == answer else 'NG', text, result)\n\nif __name__ == '__main__':\n    0, test( \"2ed8aeed/34b0ea5b\", \"LTRSUNTSJ\" );\n    1, test( \"00000200/00000300\", \"L\" );\n    2, test( \"00018000/00010000\", \"R\" );\n    3, test( \"00002000/00006000\", \"J\" );\n    4, test( \"00000700/00000200\", \"T\" );\n    5, test( \"01400000/01c00000\", \"U\" );\n    6, test( \"00003800/00002800\", \"N\" );\n    7, test( \"000c0000/00180000\", \"S\" );\n    8, test( \"00003000/00001800\", \"Z\" );\n    9, test( \"132eae6c/1a64eac6\", \"LRJTUNSZ\" );\n    10, test( \"637572d0/36572698\", \"ZSNUTJRL\" );\n    11, test( \"baddb607/d66b6c05\", \"LTJZTSSSN\" );\n    12, test( \"db74cd75/6dac6b57\", \"ZZZTJZRJNU\" );\n    13, test( \"3606c2e8/1b0d8358\", \"ZZSSLTJ\" );\n    14, test( \"ad98c306/e6cc6183\", \"UZZZZZZ\" );\n    15, test( \"4a4aaee3/db6eeaa6\", \"JJLLUUNNS\" );\n    16, test( \"ecd9bbb6/598cd124\", \"TSSZZTTRR\" );\n    17, test( \"e0000002/40000003\", \"TL\" );\n    18, test( \"a0000007/e0000005\", \"UN\" );\n    19, test( \"c0000003/80000006\", \"RS\" );\n    20, test( \"40000006/c0000003\", \"JZ\" );\n    21, test( \"01da94db/00b3b6b2\", \"TSUJLRSR\" );\n    22, test( \"76eeaaea/24aaeeae\", \"TRNNUUNU\" );\n    23, test( \"1dacaeee/1566e444\", \"NRJZUTTT\" );\n    24, test( \"26c9ac60/6c6d66c0\", \"JSZLRJZS\" );\n    25, test( \"6c977620/36da5360\", \"ZZLLTNZJ\" );\n    26, test( \"069aeae6/0db34eac\", \"SJSLTUNS\" );\n    27, test( \"06d53724/049da56c\", \"RRULRNJJ\" );\n    28, test( \"069b58b0/04d66da0\", \"RLRSLZJR\" );\n    29, test( \"1b6eced4/11b46a9c\", \"RZZTZNRU\" );\n    30, test( \"522e8b80/db6ad900\", \"JLLJNLJT\" );\n    31, test( \"6546cdd0/376c6898\", \"ZULSZRTL\" );\n    32, test( \"4e6d5b70/6ad9d620\", \"LNSSURST\" );\n    33, test( \"37367772/65635256\", \"SNSZNTNJ\" );\n    34, test( \"25535d58/377669cc\", \"LUUSLTUZ\" );\n    35, test( \"0ae6a55d/0eacedcb\", \"UNSUJUTJ\" );\n    36, test( \"76762edc/23536a88\", \"TZNZJNRT\" );\n```", "tags": ["Python", "\u3069\u3046\u66f8\u304f", "yhpg"]}