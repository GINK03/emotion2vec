{"context": "\n\n\u306f\u3058\u3081\u306b\nTensorFlow\u306etutorial tf.contrib.learn Quickstart\u3092\u8a66\u3057\u305f\u306e\u3067\u5171\u6709\u3057\u307e\u3059\u3002\n\u306a\u304a\u30012016/10/19\u73fe\u5728\u3001tutorial\u5185\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u306e\u3067\u3001\u305d\u3061\u3089\u306b\u3064\u3044\u3066\u3082\u5171\u6709\u3057\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u5168\u4f53\n\u30b3\u30fc\u30c9\u306e\u5168\u4f53\u306f\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059\u3002\n\nsample.py\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport tensorflow as tf\nimport numpy as np\n\n# Data sets\n# 120sample\nIRIS_TRAINING = \"iris_training.csv\"\n\n# 30 sample\nIRIS_TEST = \"iris_test.csv\"\n\n# Load datasets.\n# \u4e0b\u8a18\u3060\u3068\u52d5\u304b\u306a\u3044\u3002\n# load_csv\u304cdeprecated\u3068\u306e\u3053\u3068\u3002\n# training_set = tf.contrib.learn.datasets.base.load_csv(filename=IRIS_TRAINING,target_dtype=np.int)\n# test_set = tf.contrib.learn.datasets.base.load_csv(filename=IRIS_TEST,\n#                                                    target_dtype=np.int)\n\n# load_csv_with_header\u3092\u7528\u3044\u308b\ntraining_set = tf.contrib.learn.datasets.base.load_csv_with_header(filename=IRIS_TRAINING,target_dtype=np.int, features_dtype=np.float32, target_column=-1)\ntest_set = tf.contrib.learn.datasets.base.load_csv_with_header(filename=IRIS_TEST,\n                                                   target_dtype=np.int, features_dtype=np.float32, target_column=-1)\n\n\n# DNN\u306e\u69cb\u7bc9\n\n# Specify that all features have real-value data\n# four features(sepal w,sepal h,petal w,petal h)\nfeature_columns = [tf.contrib.layers.real_valued_column(\"\", dimension=4)]\n\n# Build 3 layer DNN with 10, 20, 10 units respectively.\n# n_classes \u306f\u30003\u3064\u306eiris\u306e\u7a2e\u985e\u3092\u793a\u3059\n# checkpoint data\u306e\u4fdd\u5b58\u5148\nclassifier = tf.contrib.learn.DNNClassifier(feature_columns=feature_columns,\n                                            hidden_units=[10, 20, 10],\n                                            n_classes=3,\n                                            model_dir=\"/tmp/iris_model\")\n\n\n\n# Fit model.\n# classifier\u306e\u4e2d\u306b\u30e2\u30c7\u30eb\u306e\u72b6\u614b\u306f\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\n# \u4e0b\u8a18\u30922\u884c\u66f8\u3051\u30704000\u56de\u306e\u8a66\u884c\u306b\u306a\u308b\nclassifier.fit(x=training_set.data,\n               y=training_set.target,\n               steps=2000)\n\n\n\n# Evaluate accuracy.\naccuracy_score = classifier.evaluate(x=test_set.data,\n                                     y=test_set.target)[\"accuracy\"]\nprint('Accuracy: {0:f}'.format(accuracy_score))\n\n\n# Classify two new flower samples.\n# predict\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\nnew_samples = np.array(\n    [[6.4, 3.2, 4.5, 1.5], [5.8, 3.1, 5.0, 1.7]], dtype=float)\ny = classifier.predict(new_samples)\nprint('Predictions: {}'.format(str(y)))\n\n\n\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u672c\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306firis\u30c7\u30fc\u30bf\u306b\u306a\u308a\u307e\u3059\u3002\nfeature\u306fsepal length, sepal width, petal length, petal width\u306e4\u3064\u3067\u3001target\u306fIris setosa, Iris virginica,Iris versicolor\u306e4\u3064\u3067\u3001iris\u306e\u3069\u306e\u7a2e\u985e\u304b\u3092\u5224\u5225\u3059\u308b\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\ntrain\u30c7\u30fc\u30bf\u306f120\u30b5\u30f3\u30d7\u30eb,test\u30c7\u30fc\u30bf\u306f30\u30b5\u30f3\u30d7\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\n\nsample.py\n# 120sample\nIRIS_TRAINING = \"iris_training.csv\"\n\n# 30 sample\nIRIS_TEST = \"iris_test.csv\"\n\n\n\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u8aad\u307f\u8fbc\u307f\n\u3053\u3053\u3067\u3064\u307e\u3065\u304d\u307e\u3057\u305f\u304c\u3001tutorial\u306e\u307e\u307e\u3067\u3059\u3068\u3001\u4e0b\u8a18\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nAttributeError: 'module' object has no attribute 'load_csv'\n\n\u8abf\u3079\u3066\u307f\u308b\u3068\u3001load_csv\u306fdeprecated\u3068\u306a\u3063\u3066\u304a\u308a\u3001load_csv_with_header\u306b\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\ntraining_set = tf.contrib.learn.datasets.base.load_csv_with_header(filename=IRIS_TRAINING,target_dtype=np.int, features_dtype=np.float32, target_column=-1)\n\n\u3067\u306f\u3001target_dtype\u3067\u30d5\u30a1\u30a4\u30eb\u4e2d\u306etarget(\u82b1\u306e\u7a2e\u985e)\u306e\u5217\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3001features_dtype\u3067feature\u306e\u5404\u5217\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3001target_column\u3067target\u304c\u3069\u306e\u5217\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u304b\uff08\u4eca\u56de\u306f\u4e00\u756a\u5f8c\u308d\u306a\u306e\u3067-1\uff09\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\nsample.py\n# Load datasets.\n\n# \u4e0b\u8a18\u3060\u3068\u52d5\u304b\u306a\u3044\n# training_set = tf.contrib.learn.datasets.base.load_csv(filename=IRIS_TRAINING,target_dtype=np.int)\n# test_set = tf.contrib.learn.datasets.base.load_csv(filename=IRIS_TEST,\n#                                                    target_dtype=np.int)\n\ntraining_set = tf.contrib.learn.datasets.base.load_csv_with_header(filename=IRIS_TRAINING,target_dtype=np.int, features_dtype=np.float32, target_column=-1)\ntest_set = tf.contrib.learn.datasets.base.load_csv_with_header(filename=IRIS_TEST,target_dtype=np.int, features_dtype=np.float32, target_column=-1)\n\n\n\nDNN\u306e\u69cb\u7bc9\n\u4eca\u56defeatures\u306fsepal length, sepal width, petal length, petal width\u306e4\u3064\u306a\u306e\u30674\u3068\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001hidden layer\u306f3\u3064\u3067\u305d\u308c\u305e\u308c10,20,10\u3002\n\u5206\u985e\u3059\u3079\u304d\u82b1\u306e\u7a2e\u985e\u306f3\u3064\u3067n_classes = 3\ncheckpoint data\u306e\u4fdd\u5b58\u5148\u3092/tmp/iris_model\u3068\u6307\u5b9a\u3057\u307e\u3059\u3002\n\nsample.py\n# Specify that all features have real-value data\n# four features(sepal w,sepal h,petal w,petal h)\nfeature_columns = [tf.contrib.layers.real_valued_column(\"\", dimension=4)]\n\n# Build 3 layer DNN with 10, 20, 10 units respectively.\n# n_classes \u306f\u30003\u3064\u306eiris\u306e\u7a2e\u985e\u3092\u793a\u3059\n# checkpoint data\u306e\u4fdd\u5b58\u5148\nclassifier = tf.contrib.learn.DNNClassifier(feature_columns=feature_columns,\n                                            hidden_units=[10, 20, 10],\n                                            n_classes=3,\n                                            model_dir=\"/tmp/iris_model\")\n\n\n\n\u30e2\u30c7\u30eb\u306e\u30d5\u30a3\u30c3\u30c8\nclassifier\u306e\u4e2d\u306b\u30e2\u30c7\u30eb\u306e\u72b6\u614b\u306f\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u4e0b\u8a18\u30922\u884c\u7e70\u308a\u8fd4\u3059\u3068\u30012000*2=4000\u56de\u306e\u8a66\u884c\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\nsample.py\n# Fit model.\n# classifier\u306e\u4e2d\u306b\u30e2\u30c7\u30eb\u306e\u72b6\u614b\u306f\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\n# \u4e0b\u8a18\u30922\u884c\u66f8\u3051\u30704000\u56de\u306e\u8a66\u884c\u306b\u306a\u308b\nclassifier.fit(x=training_set.data,\n               y=training_set.target,\n               steps=2000)\n\n\n\naccuracy\u306e\u8a08\u7b97\nevaluate\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3067\u3001fit\u3068\u540c\u69d8\u306b\u691c\u8a3c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nsample.py\n# Evaluate accuracy.\naccuracy_score = classifier.evaluate(x=test_set.data,\n                                     y=test_set.target)[\"accuracy\"]\nprint('Accuracy: {0:f}'.format(accuracy_score))\n\n\n\u304a\u304a\u3088\u305d\u30010.96\u7a0b\u5ea6\u306e\u6570\u5b57\u304c\u5e30\u3063\u3066\u304f\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nAccuracy: 0.966667\n\n\n\u65b0\u305f\u306a\u30c7\u30fc\u30bf\u306e\u5206\u985e\npredict\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u65b0\u3057\u3044\u30c7\u30fc\u30bf\u304c\u6765\u305f\u6642\u306b\u5206\u985e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nsample.py\n# Classify two new flower samples.\n# predict\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\nnew_samples = np.array(\n    [[6.4, 3.2, 4.5, 1.5], [5.8, 3.1, 5.0, 1.7]], dtype=float)\ny = classifier.predict(new_samples)\nprint('Predictions: {}'.format(str(y)))\n\n\n\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u306e\u4e88\u6e2c\u304carray\u3067\u5e30\u3063\u3066\u304d\u307e\u3059\u3002\nPredictions: [1 2]\n\n\n\u3055\u3044\u3054\u306b\n\u7c21\u5358\u306bDNN\u304c\u5b9f\u88c5\u3067\u304d\u307e\u3059\u306d\u3002\n\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n# \u306f\u3058\u3081\u306b\nTensorFlow\u306etutorial [tf.contrib.learn Quickstart](https://www.tensorflow.org/versions/r0.11/tutorials/tflearn/index.html)\u3092\u8a66\u3057\u305f\u306e\u3067\u5171\u6709\u3057\u307e\u3059\u3002\n\n\u306a\u304a\u30012016/10/19\u73fe\u5728\u3001tutorial\u5185\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u306e\u3067\u3001\u305d\u3061\u3089\u306b\u3064\u3044\u3066\u3082\u5171\u6709\u3057\u307e\u3059\u3002\n\n# \u30b3\u30fc\u30c9\u5168\u4f53\n\n\u30b3\u30fc\u30c9\u306e\u5168\u4f53\u306f\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059\u3002\n\n```sample.py\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport tensorflow as tf\nimport numpy as np\n\n# Data sets\n# 120sample\nIRIS_TRAINING = \"iris_training.csv\"\n\n# 30 sample\nIRIS_TEST = \"iris_test.csv\"\n\n# Load datasets.\n# \u4e0b\u8a18\u3060\u3068\u52d5\u304b\u306a\u3044\u3002\n# load_csv\u304cdeprecated\u3068\u306e\u3053\u3068\u3002\n# training_set = tf.contrib.learn.datasets.base.load_csv(filename=IRIS_TRAINING,target_dtype=np.int)\n# test_set = tf.contrib.learn.datasets.base.load_csv(filename=IRIS_TEST,\n#                                                    target_dtype=np.int)\n\n# load_csv_with_header\u3092\u7528\u3044\u308b\ntraining_set = tf.contrib.learn.datasets.base.load_csv_with_header(filename=IRIS_TRAINING,target_dtype=np.int, features_dtype=np.float32, target_column=-1)\ntest_set = tf.contrib.learn.datasets.base.load_csv_with_header(filename=IRIS_TEST,\n                                                   target_dtype=np.int, features_dtype=np.float32, target_column=-1)\n\n\n# DNN\u306e\u69cb\u7bc9\n\n# Specify that all features have real-value data\n# four features(sepal w,sepal h,petal w,petal h)\nfeature_columns = [tf.contrib.layers.real_valued_column(\"\", dimension=4)]\n\n# Build 3 layer DNN with 10, 20, 10 units respectively.\n# n_classes \u306f\u30003\u3064\u306eiris\u306e\u7a2e\u985e\u3092\u793a\u3059\n# checkpoint data\u306e\u4fdd\u5b58\u5148\nclassifier = tf.contrib.learn.DNNClassifier(feature_columns=feature_columns,\n                                            hidden_units=[10, 20, 10],\n                                            n_classes=3,\n                                            model_dir=\"/tmp/iris_model\")\n\n\n\n# Fit model.\n# classifier\u306e\u4e2d\u306b\u30e2\u30c7\u30eb\u306e\u72b6\u614b\u306f\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\n# \u4e0b\u8a18\u30922\u884c\u66f8\u3051\u30704000\u56de\u306e\u8a66\u884c\u306b\u306a\u308b\nclassifier.fit(x=training_set.data,\n               y=training_set.target,\n               steps=2000)\n\n\n\n# Evaluate accuracy.\naccuracy_score = classifier.evaluate(x=test_set.data,\n                                     y=test_set.target)[\"accuracy\"]\nprint('Accuracy: {0:f}'.format(accuracy_score))\n\n\n# Classify two new flower samples.\n# predict\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\nnew_samples = np.array(\n    [[6.4, 3.2, 4.5, 1.5], [5.8, 3.1, 5.0, 1.7]], dtype=float)\ny = classifier.predict(new_samples)\nprint('Predictions: {}'.format(str(y)))\n```\n\n# \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\n\u672c\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306firis\u30c7\u30fc\u30bf\u306b\u306a\u308a\u307e\u3059\u3002\nfeature\u306fsepal length, sepal width, petal length, petal width\u306e4\u3064\u3067\u3001target\u306fIris setosa, Iris virginica,Iris versicolor\u306e4\u3064\u3067\u3001iris\u306e\u3069\u306e\u7a2e\u985e\u304b\u3092\u5224\u5225\u3059\u308b\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\ntrain\u30c7\u30fc\u30bf\u306f120\u30b5\u30f3\u30d7\u30eb,test\u30c7\u30fc\u30bf\u306f30\u30b5\u30f3\u30d7\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\n\n```sample.py\n# 120sample\nIRIS_TRAINING = \"iris_training.csv\"\n\n# 30 sample\nIRIS_TEST = \"iris_test.csv\"\n```\n\n# \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u8aad\u307f\u8fbc\u307f\n\n\u3053\u3053\u3067\u3064\u307e\u3065\u304d\u307e\u3057\u305f\u304c\u3001tutorial\u306e\u307e\u307e\u3067\u3059\u3068\u3001\u4e0b\u8a18\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```\nAttributeError: 'module' object has no attribute 'load_csv'\n```\n\n\u8abf\u3079\u3066\u307f\u308b\u3068\u3001[load_csv\u306fdeprecated\u3068\u306a\u3063\u3066\u304a\u308a\u3001load_csv_with_header\u306b\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002](http://stackoverflow.com/questions/39859670/error-in-tf-contrib-learn-quickstart-no-attribute-named-load-csv)\n\n```\ntraining_set = tf.contrib.learn.datasets.base.load_csv_with_header(filename=IRIS_TRAINING,target_dtype=np.int, features_dtype=np.float32, target_column=-1)\n```\n\u3067\u306f\u3001target_dtype\u3067\u30d5\u30a1\u30a4\u30eb\u4e2d\u306etarget(\u82b1\u306e\u7a2e\u985e)\u306e\u5217\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3001features_dtype\u3067feature\u306e\u5404\u5217\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3001target_column\u3067target\u304c\u3069\u306e\u5217\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u304b\uff08\u4eca\u56de\u306f\u4e00\u756a\u5f8c\u308d\u306a\u306e\u3067-1\uff09\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n```sample.py\n# Load datasets.\n\n# \u4e0b\u8a18\u3060\u3068\u52d5\u304b\u306a\u3044\n# training_set = tf.contrib.learn.datasets.base.load_csv(filename=IRIS_TRAINING,target_dtype=np.int)\n# test_set = tf.contrib.learn.datasets.base.load_csv(filename=IRIS_TEST,\n#                                                    target_dtype=np.int)\n\ntraining_set = tf.contrib.learn.datasets.base.load_csv_with_header(filename=IRIS_TRAINING,target_dtype=np.int, features_dtype=np.float32, target_column=-1)\ntest_set = tf.contrib.learn.datasets.base.load_csv_with_header(filename=IRIS_TEST,target_dtype=np.int, features_dtype=np.float32, target_column=-1)\n```\n\n# DNN\u306e\u69cb\u7bc9\n\n\u4eca\u56defeatures\u306fsepal length, sepal width, petal length, petal width\u306e4\u3064\u306a\u306e\u3067`4`\u3068\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u305f\u3001hidden layer\u306f3\u3064\u3067\u305d\u308c\u305e\u308c`10,20,10`\u3002\n\u5206\u985e\u3059\u3079\u304d\u82b1\u306e\u7a2e\u985e\u306f3\u3064\u3067`n_classes = 3`\ncheckpoint data\u306e\u4fdd\u5b58\u5148\u3092`/tmp/iris_model`\u3068\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```sample.py\n# Specify that all features have real-value data\n# four features(sepal w,sepal h,petal w,petal h)\nfeature_columns = [tf.contrib.layers.real_valued_column(\"\", dimension=4)]\n\n# Build 3 layer DNN with 10, 20, 10 units respectively.\n# n_classes \u306f\u30003\u3064\u306eiris\u306e\u7a2e\u985e\u3092\u793a\u3059\n# checkpoint data\u306e\u4fdd\u5b58\u5148\nclassifier = tf.contrib.learn.DNNClassifier(feature_columns=feature_columns,\n                                            hidden_units=[10, 20, 10],\n                                            n_classes=3,\n                                            model_dir=\"/tmp/iris_model\")\n```\n\n# \u30e2\u30c7\u30eb\u306e\u30d5\u30a3\u30c3\u30c8\n\nclassifier\u306e\u4e2d\u306b\u30e2\u30c7\u30eb\u306e\u72b6\u614b\u306f\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u4e0b\u8a18\u30922\u884c\u7e70\u308a\u8fd4\u3059\u3068\u30012000*2=4000\u56de\u306e\u8a66\u884c\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\n```sample.py\n# Fit model.\n# classifier\u306e\u4e2d\u306b\u30e2\u30c7\u30eb\u306e\u72b6\u614b\u306f\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\n# \u4e0b\u8a18\u30922\u884c\u66f8\u3051\u30704000\u56de\u306e\u8a66\u884c\u306b\u306a\u308b\nclassifier.fit(x=training_set.data,\n               y=training_set.target,\n               steps=2000)\n```\n\n\n# accuracy\u306e\u8a08\u7b97\n\n`evaluate`\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3067\u3001`fit`\u3068\u540c\u69d8\u306b\u691c\u8a3c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```sample.py\n# Evaluate accuracy.\naccuracy_score = classifier.evaluate(x=test_set.data,\n                                     y=test_set.target)[\"accuracy\"]\nprint('Accuracy: {0:f}'.format(accuracy_score))\n```\n\u304a\u304a\u3088\u305d\u30010.96\u7a0b\u5ea6\u306e\u6570\u5b57\u304c\u5e30\u3063\u3066\u304f\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```\nAccuracy: 0.966667\n```\n\n# \u65b0\u305f\u306a\u30c7\u30fc\u30bf\u306e\u5206\u985e\n`predict`\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u65b0\u3057\u3044\u30c7\u30fc\u30bf\u304c\u6765\u305f\u6642\u306b\u5206\u985e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```sample.py\n# Classify two new flower samples.\n# predict\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\nnew_samples = np.array(\n    [[6.4, 3.2, 4.5, 1.5], [5.8, 3.1, 5.0, 1.7]], dtype=float)\ny = classifier.predict(new_samples)\nprint('Predictions: {}'.format(str(y)))\n```\n\n\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u306e\u4e88\u6e2c\u304carray\u3067\u5e30\u3063\u3066\u304d\u307e\u3059\u3002\n\n```\nPredictions: [1 2]\n```\n\n\n# \u3055\u3044\u3054\u306b\n\n\u7c21\u5358\u306bDNN\u304c\u5b9f\u88c5\u3067\u304d\u307e\u3059\u306d\u3002\n\n\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n", "tags": ["TensorFlow", "iris", "tutorial", "DeepLearning"]}