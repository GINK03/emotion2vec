{"context": " More than 1 year has passed since last update.\u6a19\u6e96\u5165\u51fa\u529b\u3001\u30d1\u30a4\u30d7\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u65ad\u7247\u5316\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u30c7\u30fc\u30bf\u3092msgpack\u3067\u30c7\u30b7\u30ea\u30a2\u30a4\u30ba\u3059\u308b\u65b9\u6cd5\u3002\u3061\u306a\u307f\u306b\u30c7\u30fc\u30bf\u30b9\u30c8\u30ea\u30fc\u30e0\uff08\u4f8b\u3048\u3070std::cin\uff09\u304b\u3089\u8aad\u307f\u8fbc\u3081\u308b\u5834\u5408\u306f\u81ea\u5206\u3067\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u307e\u3067\u3082\u306a\u304f msgpack::Unpacker unpacker(std::cin); \u306a\u3069\u3068\u3057\u3066\u30c7\u30b7\u30ea\u30a2\u30a4\u30b6\u3092\u4f5c\u6210\u3067\u304d\u308b\u3002\n\u6bce\u56de\u5fd8\u308c\u308b\u306e\u3067\u30e1\u30e2\u3002\n#include <msgpack.hpp>\n#include <sys/types.h>\n#include <sys/uio.h>\n#include <unistd.h>\n\nint main(int argc, char *argv[]) {\n  // \u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u307f\u306e\u305f\u3081\u306e\u5909\u6570\n  static const size_t BUFSIZE = 4096;\n  int rc;\n  char buf[BUFSIZE];\n\n  // Unpacker\n  msgpack::unpacker unpkr;\n\n  // \u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u307f                                                                                                                                                                                           \n  while (0 < (rc = read(0, buf, sizeof(buf)))) {\n\n    // \u6b8b\u308a\u30d0\u30c3\u30d5\u30a1\u306e\u78ba\u4fdd                                                                                                                                                                                           \n    unpkr.reserve_buffer(rc);\n    // \u30c7\u30fc\u30bf\u306e\u30b3\u30d4\u30fc                                                                                                                                                                                               \n    memcpy(unpkr.buffer(), buf, rc);\n    // \u30d0\u30c3\u30d5\u30a1\u306e\u8aad\u307f\u8fbc\u307f                                                                                                                                                                                           \n    unpkr.buffer_consumed(rc);\n\n    msgpack::unpacked result;\n    // \u7d50\u679c\u306e\u53d6\u5f97                                                                                                                                                                                                   \n    while (unpkr.next(&result)) {\n      const msgpack::object &obj = result.get();\n      printf(\"%d\\n\", obj.type);\n\n      // \u30e1\u30e2\u30ea\u89e3\u653e                                                                                                                                                                                                 \n      result.zone().reset();\n    }\n  }\n\n  return 0;\n}\n\n\u6a19\u6e96\u5165\u51fa\u529b\u3001\u30d1\u30a4\u30d7\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u65ad\u7247\u5316\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u30c7\u30fc\u30bf\u3092msgpack\u3067\u30c7\u30b7\u30ea\u30a2\u30a4\u30ba\u3059\u308b\u65b9\u6cd5\u3002\u3061\u306a\u307f\u306b\u30c7\u30fc\u30bf\u30b9\u30c8\u30ea\u30fc\u30e0\uff08\u4f8b\u3048\u3070std::cin\uff09\u304b\u3089\u8aad\u307f\u8fbc\u3081\u308b\u5834\u5408\u306f\u81ea\u5206\u3067\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u307e\u3067\u3082\u306a\u304f `msgpack::Unpacker unpacker(std::cin); ` \u306a\u3069\u3068\u3057\u3066\u30c7\u30b7\u30ea\u30a2\u30a4\u30b6\u3092\u4f5c\u6210\u3067\u304d\u308b\u3002\n\n\u6bce\u56de\u5fd8\u308c\u308b\u306e\u3067\u30e1\u30e2\u3002\n\n```cpp\n#include <msgpack.hpp>\n#include <sys/types.h>\n#include <sys/uio.h>\n#include <unistd.h>\n\nint main(int argc, char *argv[]) {\n  // \u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u307f\u306e\u305f\u3081\u306e\u5909\u6570\n  static const size_t BUFSIZE = 4096;\n  int rc;\n  char buf[BUFSIZE];\n\n  // Unpacker\n  msgpack::unpacker unpkr;\n\n  // \u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u307f                                                                                                                                                                                           \n  while (0 < (rc = read(0, buf, sizeof(buf)))) {\n\n    // \u6b8b\u308a\u30d0\u30c3\u30d5\u30a1\u306e\u78ba\u4fdd                                                                                                                                                                                           \n    unpkr.reserve_buffer(rc);\n    // \u30c7\u30fc\u30bf\u306e\u30b3\u30d4\u30fc                                                                                                                                                                                               \n    memcpy(unpkr.buffer(), buf, rc);\n    // \u30d0\u30c3\u30d5\u30a1\u306e\u8aad\u307f\u8fbc\u307f                                                                                                                                                                                           \n    unpkr.buffer_consumed(rc);\n\n    msgpack::unpacked result;\n    // \u7d50\u679c\u306e\u53d6\u5f97                                                                                                                                                                                                   \n    while (unpkr.next(&result)) {\n      const msgpack::object &obj = result.get();\n      printf(\"%d\\n\", obj.type);\n\n      // \u30e1\u30e2\u30ea\u89e3\u653e                                                                                                                                                                                                 \n      result.zone().reset();\n    }\n  }\n\n  return 0;\n}\n```\n", "tags": ["C++", "msgpack"]}