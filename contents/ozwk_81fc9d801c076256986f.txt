{"context": " More than 1 year has passed since last update.\u9032\u6357\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u53d7\u3051\u53d6\u308a\u3001\n\u5b8c\u6210\u3057\u305f\u3089\u717d\u3063\u3066\u304f\u308b\u9032\u6357\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u5909\u63db\u3057\u3066\u8fd4\u3059\u3002\n\u306a\u308b\u3079\u304fIO<T>\u4ee5\u5916\u306f\u4f7f\u308f\u306a\u3044\u65b9\u91dd\u3067\u4f5c\u6210\u3002\nstatic IObservable<string> HowIsTheProgress(IObservable<string> source, string[] words)\n{\n    var _source = Observable.Repeat(\"_\", words.Length)\n        .Concat(source)\n        .Buffer(words.Length + 1, 1);\n\n    var word = _source\n        .TakeWhile(xs => !xs.Take(words.Length).SequenceEqual(words))\n        .Select(xs => xs.Last());\n\n    var count = word\n        .Count()\n        .SkipUntil(_source.SkipWhile(xs => xs.Take(words.Length).SequenceEqual(words)))\n        .Select(x => $\"???\\n{x}\u6587\u5b57\u3067\u717d\u3089\u308c\u307e\u3057\u305f\").Take(1);\n\n    return word.Merge(count);\n}\n\nvar words = new[] { \"\u9032\u6357\", \"\u3069\u3046\", \"\u3067\u3059\", \"\u304b\" };\nvar random = new Random();\nvar dummy = new object();\nvar source =\n    Observable.Repeat(dummy).Select(_ => words[random.Next(0, words.Length)])\n    .Publish().RefCount();\n\n//var source = new Subject<string>(); //\u30c7\u30d0\u30c3\u30b0\u7528\n\nHowIsTheProgress(source, words).Subscribe(x => Console.Write(x));\n\n//source.OnNext(words[0]);//1\n//source.OnNext(words[0]);//2\n//source.OnNext(words[0]);//3\n//source.OnNext(words[1]);//4\n//source.OnNext(words[2]);//5\n//source.OnNext(words[3]);//6\n//source.OnNext(words[0]);\n//source.OnNext(words[1]);\n//source.OnNext(words[2]);\n//source.OnNext(words[3]);\n\n\u3069\u3046\u3067\u3059\u3067\u3059\u3067\u3059\u3069\u3046\u3067\u3059\u9032\u6357\u9032\u6357\u304b\u3067\u3059\u304b\u304b\u3069\u3046\u3069\u3046\u3067\u3059\u3069\u3046\u304b\u3069\u3046\u9032\u6357\u9032\u6357\u3069\u3046\u3067\u3059\u3069\u3046\u3067\u3059\u3069\u3046\u3069\u3046\u9032\u6357\u9032\u6357\u9032\u6357\u304b\u9032\u6357\u9032\u6357\u9032\u6357\u9032\u6357\u3067\u3059\u304b\u3069\u3046\u3069\u3046\u9032\u6357\u3067\u3059\u304b\u304b\u304b\u9032\u6357\u9032\u6357\u9032\u6357\u3067\u3059\u304b\u9032\u6357\u304b\u304b\u9032\u6357\u9032\u6357\u3069\u3046\u3069\u3046\u304b\u3069\u3046\u9032\u6357\u3069\u3046\u304b\u3067\u3059\u9032\u6357\u9032\u6357\u9032\u6357\u3067\u3059\u3067\u3059\u3067\u3059\u9032\u6357\u3067\u3059\u304b\u9032\u6357\u3069\u3046\u3069\u3046\u3067\u3059\u9032\u6357\u3069\u3046\u304b\u9032\u6357\u3067\u3059\u3069\u3046\u3067\u3059\u3069\u3046\u304b\u3069\u3046\u304b\u9032\u6357\u9032\u6357\u3067\u3059\u304b\u304b\u3067\u3059\u3069\u3046\u9032\u6357\u9032\u6357\u9032\u6357\u3067\u3059\u304b\u304b\u3067\u3059\u3069\u3046\u3069\u3046\u3067\u3059\u9032\u6357\u3069\u3046\u3067\u3059\u3067\u3059\u3067\u3059\u3069\u3046\u3069\u3046\u304b\u9032\u6357\u9032\u6357\u3069\u3046\u9032\u6357\u3069\u3046\u9032\u6357\u3069\u3046\u304b\u9032\u6357\u3069\u3046\u3067\u3059\u304b???\n122\u6587\u5b57\u3067\u717d\u3089\u308c\u307e\u3057\u305f\n\n\u9032\u6357\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u53d7\u3051\u53d6\u308a\u3001\n\u5b8c\u6210\u3057\u305f\u3089\u717d\u3063\u3066\u304f\u308b\u9032\u6357\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u5909\u63db\u3057\u3066\u8fd4\u3059\u3002\n\u306a\u308b\u3079\u304f`IO<T>`\u4ee5\u5916\u306f\u4f7f\u308f\u306a\u3044\u65b9\u91dd\u3067\u4f5c\u6210\u3002\n\n\n```csharp\nstatic IObservable<string> HowIsTheProgress(IObservable<string> source, string[] words)\n{\n    var _source = Observable.Repeat(\"_\", words.Length)\n        .Concat(source)\n        .Buffer(words.Length + 1, 1);\n\n    var word = _source\n        .TakeWhile(xs => !xs.Take(words.Length).SequenceEqual(words))\n        .Select(xs => xs.Last());\n\n    var count = word\n        .Count()\n        .SkipUntil(_source.SkipWhile(xs => xs.Take(words.Length).SequenceEqual(words)))\n        .Select(x => $\"???\\n{x}\u6587\u5b57\u3067\u717d\u3089\u308c\u307e\u3057\u305f\").Take(1);\n\n    return word.Merge(count);\n}\n```\n\n```csharp\nvar words = new[] { \"\u9032\u6357\", \"\u3069\u3046\", \"\u3067\u3059\", \"\u304b\" };\nvar random = new Random();\nvar dummy = new object();\nvar source =\n    Observable.Repeat(dummy).Select(_ => words[random.Next(0, words.Length)])\n    .Publish().RefCount();\n\n//var source = new Subject<string>(); //\u30c7\u30d0\u30c3\u30b0\u7528\n\nHowIsTheProgress(source, words).Subscribe(x => Console.Write(x));\n\n//source.OnNext(words[0]);//1\n//source.OnNext(words[0]);//2\n//source.OnNext(words[0]);//3\n//source.OnNext(words[1]);//4\n//source.OnNext(words[2]);//5\n//source.OnNext(words[3]);//6\n//source.OnNext(words[0]);\n//source.OnNext(words[1]);\n//source.OnNext(words[2]);\n//source.OnNext(words[3]);\n```\n\n```\n\u3069\u3046\u3067\u3059\u3067\u3059\u3067\u3059\u3069\u3046\u3067\u3059\u9032\u6357\u9032\u6357\u304b\u3067\u3059\u304b\u304b\u3069\u3046\u3069\u3046\u3067\u3059\u3069\u3046\u304b\u3069\u3046\u9032\u6357\u9032\u6357\u3069\u3046\u3067\u3059\u3069\u3046\u3067\u3059\u3069\u3046\u3069\u3046\u9032\u6357\u9032\u6357\u9032\u6357\u304b\u9032\u6357\u9032\u6357\u9032\u6357\u9032\u6357\u3067\u3059\u304b\u3069\u3046\u3069\u3046\u9032\u6357\u3067\u3059\u304b\u304b\u304b\u9032\u6357\u9032\u6357\u9032\u6357\u3067\u3059\u304b\u9032\u6357\u304b\u304b\u9032\u6357\u9032\u6357\u3069\u3046\u3069\u3046\u304b\u3069\u3046\u9032\u6357\u3069\u3046\u304b\u3067\u3059\u9032\u6357\u9032\u6357\u9032\u6357\u3067\u3059\u3067\u3059\u3067\u3059\u9032\u6357\u3067\u3059\u304b\u9032\u6357\u3069\u3046\u3069\u3046\u3067\u3059\u9032\u6357\u3069\u3046\u304b\u9032\u6357\u3067\u3059\u3069\u3046\u3067\u3059\u3069\u3046\u304b\u3069\u3046\u304b\u9032\u6357\u9032\u6357\u3067\u3059\u304b\u304b\u3067\u3059\u3069\u3046\u9032\u6357\u9032\u6357\u9032\u6357\u3067\u3059\u304b\u304b\u3067\u3059\u3069\u3046\u3069\u3046\u3067\u3059\u9032\u6357\u3069\u3046\u3067\u3059\u3067\u3059\u3067\u3059\u3069\u3046\u3069\u3046\u304b\u9032\u6357\u9032\u6357\u3069\u3046\u9032\u6357\u3069\u3046\u9032\u6357\u3069\u3046\u304b\u9032\u6357\u3069\u3046\u3067\u3059\u304b???\n122\u6587\u5b57\u3067\u717d\u3089\u308c\u307e\u3057\u305f\n```\n", "tags": ["ReactiveExtensions", "Rx", "C#"]}