{"context": " More than 1 year has passed since last update.\u300c\u306f\u3058\u3081\u3066\u306eSpring Boot\u300d\u304c\u9762\u767d\u304f\u3001\u3053\u308c\u306fSpring\u899a\u3048\u306d\u3070\uff01\u3068\u3001\u3044\u3046\u6c17\u5206\u306b\u306a\u308aWeb\u30a2\u30d7\u30ea\u3092\u5b9f\u88c5\u4e2d\u3002\nSpring Security\u3092\u4f7f\u7528\u3059\u308b\u3068\u8a8d\u8a3c\u5468\u308a\u306e\u5b9f\u88c5\u304c\u3068\u3066\u3082\u7c21\u5358\u306b\u306a\u308b\u3088\u3046\u306a\u306e\u3067\u4f7f\u3063\u3066\u307f\u308b\u304b\u30fc\u3001SPA\u3067\u3082\u306a\u3093\u3068\u304b\u306a\u308b\u3060\u308d\u3046\u3068\u624b\u3092\u51fa\u3057\u305f\u3089\u5272\u3068\u5927\u5909\u3067\u3057\u305f\u3002\n\u3082\u3063\u3068\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u305d\u3046\u3067\u306f\u3042\u308b\u306e\u3067\u3059\u304c\u3002\u3002\n\u30d5\u30ed\u30f3\u30c8\u306f2.0\u306e\u79fb\u884c\u304c\u5927\u5909\u305d\u3046\u306aAngularJS\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067Angular1.x\u7cfb\u306f\u6b8b\u3057\u3066\u304a\u3044\u3066\u6b32\u3057\u3044\u306a\u3042\u3002\n\u3042\u3068\u3001\u958b\u767a\u304c\u9045\u304f\u3066\u30a4\u30de\u30a4\u30c1\u306a\u8a55\u4fa1\u306eUI Bootstrap\u3092\u4f7f\u3063\u3066\u307e\u3059\u3002\n\n\u53c2\u8003\n\n\u306f\u3058\u3081\u3066\u306eSpring Boot\n\u8aad\u3080\u3068\u3044\u308d\u3044\u308d\u4f5c\u308a\u305f\u304f\u306a\u308a\u307e\u3059\u3002\u672c\u306e\u8584\u3055\u3068\u88cf\u8179\u306b\u5185\u5bb9\u304c\u3068\u3066\u3082\u6fc3\u3044\u3067\u3059\u3002\nSpring Security and Angular JS\nSpring\u516c\u5f0f\u306eAngularJS\u3068Spring Security\u306e\u7d44\u307f\u5408\u308f\u305b\u4f8b\u3002\n\u307b\u307c\u3053\u308c\u3067\u3084\u308a\u305f\u3044\u3053\u3068\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u81ea\u5206\u306e\u5834\u5408\u3001\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3092\u30e2\u30fc\u30c0\u30eb\u3067\u8868\u793a\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u305d\u3053\u3060\u3051\u9069\u7528\u3067\u304d\u305a\u3002\nSpring Security\nSpring Security\u516c\u5f0f\u3067\u3059\u3002\n\n\n\u5b9f\u88c5\n\n\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\nSecurityConfig\u3067\u3001\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u3068\u30ed\u30b0\u30a4\u30f3API\u4ee5\u5916\u306f\u672a\u8a8d\u8a3c\u306e\u5834\u5408\u30a8\u30e9\u30fc\u3068\u3057\u307e\u3059\u3002\nPOST\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067CSRF\u30c1\u30a7\u30c3\u30af\u5bfe\u8c61\u306e\u305f\u3081\u3001\u6700\u521d\u306e\u30ed\u30b0\u30a4\u30f3\u306eURL\u3092\u30c1\u30a7\u30c3\u30af\u5bfe\u8c61\u5916\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002(requireCsrfProtectionMatcher\u306e\u8a2d\u5b9a\u3092\u3057\u306a\u3044\u3068\u3001\u30ed\u30b0\u30a4\u30f3\u306ePOST\u304c403)\n\u30c1\u30a7\u30c3\u30af\u5bfe\u8c61\u5916\u30ed\u30b8\u30c3\u30af\u306fstackoverflow\u306e\u3053\u3053\u304b\u3089\u62dd\u501f\u3057\u307e\u3057\u305f\u3002\ncsrfTokenRepository\u306fSpring Security and Angular JS\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u308f\u305b\u3066\u3082\u3089\u3063\u3066\u3044\u307e\u3059\u3002\nSpring Security\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067CSRF\u30c1\u30a7\u30c3\u30af\u3092\u3057\u3066\u3044\u3066\u3001AngularJS\u3082http(http(http(resource\u3067\u3082)\u3067X-XSRF-TOKEN\u30d8\u30c3\u30c0\u304c\u81ea\u52d5\u7684\u306b\u4ed8\u52a0\u3055\u308c\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u3001\u3053\u3053\u3067CSRF\u306e\u30d8\u30c3\u30c0\u540d\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\nAngularJS\u306fCookie(\u540d\u79f0\uff1aXSRF-TOKEN)\u304b\u3089X-XSRF-TOKEN\u30c8\u30fc\u30af\u30f3\u3092HTTP\u30d8\u30c3\u30c0\u306b\u30bb\u30c3\u30c8\u3059\u308b(\u53c2\u8003\uff1a$http)\u306e\u3067\u3001Spring Security\u304cAngularJS\u306b\u5408\u308f\u305b\u308b\u3068\u3053\u3046\u306a\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306d\u3002\n\nSecurityConfing.java\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n\n        RequestMatcher csrfRequestMatcher = new RequestMatcher() {\n            // CSRF\u5bfe\u8c61\u5916URL:\n            private AntPathRequestMatcher[] requestMatchers = {\n                    new AntPathRequestMatcher(\"/api/login\")\n            };\n\n            @Override\n            public boolean matches(HttpServletRequest request) {\n                for (AntPathRequestMatcher rm : requestMatchers) {\n                    if (rm.matches(request)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        };\n\n        http.authorizeRequests()\n                .antMatchers(\n                        \"/images/**\",\n                        \"/scripts/**\",\n                        \"/styles/**\",\n                        \"/views/**\",\n                        \"/index.html\",\n                        \"/api/login\"\n                ).permitAll()\n                .anyRequest().authenticated()   //\u4e0a\u8a18\u306b\u30de\u30c3\u30c1\u3057\u306a\u3051\u308c\u3070\u672a\u8a8d\u8a3c\u306e\u5834\u5408\u30a8\u30e9\u30fc\n                .and()\n                .csrf()\n                .requireCsrfProtectionMatcher(csrfRequestMatcher)\n                .csrfTokenRepository(this.csrfTokenRepository());\n    }\n\n    private CsrfTokenRepository csrfTokenRepository() {\n        HttpSessionCsrfTokenRepository repository = new HttpSessionCsrfTokenRepository();\n        repository.setHeaderName(\"X-XSRF-TOKEN\");\n        return repository;\n    }\n}\n\n\n\nUserDetailsService\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\nGlobalAuthenticationConfig.java\n@Configuration\npublic class GlobalAuthenticationConfig extends GlobalAuthenticationConfigurerAdapter {\n\n    @Override\n    public void init(AuthenticationManagerBuilder auth) throws Exception {\n        auth.userDetailsService(userDetailsService());\n    }\n\n    @Bean\n    UserDetailsService userDetailsService() {\n        return new FooAuthService();\n    }\n}\n\n\n\u30ed\u30b0\u30a4\u30f3\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u308bRestController\u3067\u3059\u3002\n\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\u3067\u8a8d\u8a3c\u3055\u308c\u305f\u3089\u7d44\u307f\u8fbc\u307f\u306eCSRF\u30d5\u30a3\u30eb\u30bf\u30fc\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c8\u30fc\u30af\u30f3\u3092Cookie\u306b\u30bb\u30c3\u30c8\u3057\u3066\u3001NG\u306a\u3089401\u3092\u8fd4\u5374\u3057\u3066\u3044\u307e\u3059\u3002\n\nLoginRestController.java\n@RestController\n@RequestMapping(\"/api/\")\npublic class LoginRestController {\n\n    @Autowired\n    LoginService loginService;\n\n    @RequestMapping(value = \"login\", method = RequestMethod.POST)\n    ResponseEntity<PageDto> login(@RequestBody LoginDto loginDto, HttpServletRequest request, HttpServletResponse response) {\n        PageDto pageDto = loginService.login(loginDto);\n        if (pageDto.getHeaderDto().isAuth()) {\n            CsrfToken csrf = (CsrfToken) request.getAttribute(CsrfToken.class.getName());\n            if (csrf != null) {\n                Cookie cookie = WebUtils.getCookie(request, \"XSRF-TOKEN\");\n                String token = csrf.getToken();\n                Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n                if ((cookie == null || token != null && !token.equals(cookie.getValue()))\n                        && (authentication != null && authentication.isAuthenticated())) {\n                    cookie = new Cookie(\"XSRF-TOKEN\", token);\n                    cookie.setPath(\"/\"); //\u9069\u5207\u306a\u30b9\u30b3\u30fc\u30d7\u3067\n                    response.addCookie(cookie);\n                }\n            }\n            return new ResponseEntity<>(pageDto, null, HttpStatus.OK);\n        } else {\n            return new ResponseEntity<>(pageDto, null, HttpStatus.UNAUTHORIZED);\n        }\n    }\n\n    @RequestMapping(value = \"logout\", method = RequestMethod.POST)\n    void logout(HttpServletRequest request) {\n        try {\n            request.logout();\n        } catch (ServletException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n}\n\n\n\n\u8a8d\u8a3c\u51e6\u7406\u306f\u516c\u5f0f\u306e\u30ed\u30b8\u30c3\u30af\u3092\u62dd\u501f\u3057\u3066\u307e\u3059\u3002\nUserDetails\u3068UserDetailsService\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u306f\u306f\u3058\u3081\u3066\u306eSpring Boot\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\nLoginService.java\n@Service\npublic class LoginService {\n\n    @Autowired\n    protected Mapper mapper;\n\n    @Autowired\n    private AuthenticationManager authManager;\n\n    /**\n     * \u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u3092\u884c\u3044\u307e\u3059.\n     * @return\n     */\n    public PageDto login(LoginDto loginDto) {\n\n        PageDto pageDto = new PageDto();\n        LoginDto outLoginDto = mapper.map(loginDto, LoginDto.class);\n        pageDto.setLoginDto(outLoginDto);\n        HeaderDto headerDto = new HeaderDto();\n        pageDto.setHeaderDto(headerDto);\n\n        //Spring Security\u8a8d\u8a3c\u51e6\u7406\n        Authentication authResult = null;\n        try {\n            Authentication request = new UsernamePasswordAuthenticationToken(\n                    loginDto.getMailAddress(), loginDto.getPassword());\n            authResult = authManager.authenticate(request);\n            SecurityContextHolder.getContext().setAuthentication(authResult);\n            FooUserDetails principal = (FooUserDetails)authResult.getPrincipal();\n            headerDto.setNickName(principal.getUserInfo().getNickName());\n            headerDto.setAuth(true);\n\n        } catch(AuthenticationException e) {\n            outLoginDto.setMessage(\"\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u304b\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u307e\u3061\u304c\u3063\u3066\u3044\u307e\u3059\u3002\");\n            headerDto.setAuth(false);\n        }\n        return pageDto;\n    }\n\n}\n\n\n\n\n\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\nUI Bootstrap\u4f7f\u3063\u3066\u30e2\u30fc\u30c0\u30eb\u3067\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\nindex.html\u3067\u30ed\u30b0\u30a4\u30f3\u306ehtml\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\nindex.html\n<!-- \u7565 -->\n    <div class=\"header\" ng-controller=\"HeaderCtrl\">\n<!-- \u7565 -->\n          <div class=\"collapse navbar-collapse\" id=\"js-navbar-collapse\">\n              <ul class=\"nav navbar-nav\">\n                  <li class=\"active\"><a href=\"#/\">Home</a></li>\n                  <li ng-if=\"!headerDto.auth\">\n                      <input type=\"button\" class=\"btn btn-info\" value=\"\u30ed\u30b0\u30a4\u30f3\" ng-click=\"loginDialog()\"/>\n                  </li>\n                  <li ng-if=\"headerDto.auth\">\n                      <input type=\"button\" class=\"btn btn-info\" value=\"\u30ed\u30b0\u30a2\u30a6\u30c8\" ng-click=\"logout()\"/>\n                  </li>\n                  <li>\n                      <div ng-if=\"headerDto.auth\">{{headerDto.nickName}}\u3055\u3093</div>\n                  </li>\n              </ul>\n              <div ng-include src=\"'./views/login.html'\"></div>\n          </div>\n<!-- \u7565 -->\n    </div>\n<!-- \u7565 -->\n\n\n\n\u30e2\u30fc\u30c0\u30eb\u3067\u5b9f\u884c\u3055\u308c\u308b\u30ed\u30b0\u30a4\u30f3\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3059\u3002\n\nlogin.html\n<div>\n<script type=\"text/ng-template\" id=\"login.tmpl.html\">\n    <div class=\"modal-header\">\n        <h4>\u30ed\u30b0\u30a4\u30f3</h4>\n    </div>\n    <div class=\"modal-body\">\n        <span>{{loginDto.message}}</span>\n        <br/>\n        <label>\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9</label>\n        <input type=\"text\" class=\"form-control\" ng-model=\"loginDto.mailAddress\">\n        <br/>\n        <label>\u30d1\u30b9\u30ef\u30fc\u30c9</label>\n        <input type=\"password\" class=\"form-control\" ng-model=\"loginDto.password\">\n        <br/>\n        <input type=\"button\" class=\"btn btn-info\" value=\"\u30ed\u30b0\u30a4\u30f3\" ng-click=\"login()\"/>\n        <input type=\"button\" class=\"btn btn-default\" value=\"cancel\" ng-click=\"cancel()\"/>\n    </div>\n</script>\n</div>\n\n\nLoginRestController\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002\nSIer\u304cAngular+Java\u3067\u5b9f\u88c5\u3059\u308b\u3093\u306a\u3089RestController(Java)\u3068\u305d\u308c\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30b5\u30fc\u30d3\u30b9(JavaScript)\u304cExcel\u3067\u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u308a\u3059\u308b\u3093\u3067\u3057\u3087\u3046\u304b\u3002\n\nloginHttp.js\nangular.module('fooApp').factory('loginHttp', ['$http',\n    function ($http) {\n        var login = {\n            login: function(param) {\n                return $http.post('/foo/api/login', param);\n            },\n            logout: function() {\n                return $http.post('/foo/api/logout');\n            }\n        }\n        return login;\n    }]);\n\n\n\n\u30d8\u30c3\u30c0\u90e8\u5206\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u300c\u30ed\u30b0\u30a4\u30f3\u300d\u30dc\u30bf\u30f3\u304c\u62bc\u4e0b\u6642\u306b\u30e2\u30fc\u30c0\u30eb\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u8d77\u52d5\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n\nheader.js\nangular.module('fooApp')\n    .controller('HeaderCtrl', ['$scope', '$modal', 'loginHttp',\n        function ($scope, $modal, loginHttp) {\n            $scope.loginDialog = function () {\n                var modalInstance = $modal.open({\n                    size: 'sm',\n                    templateUrl: 'login.tmpl.html',\n                    controller: 'LoginCtrl'\n                });\n                modalInstance.result.then(function (data){\n                    $scope.headerDto = data;\n                });\n            };\n\n            $scope.logout = function () {\n                loginHttp.logout();\n                $scope.headerDto = {};\n            }\n\n        }]);\n\n\n\n\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u30ed\u30b0\u30a4\u30f3\u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u8a8d\u8a3c\u30a8\u30e9\u30fc\u306e\u5834\u5408\u306f401\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067error()\u306b\u5165\u308a\u307e\u3059\u3002\n\nlogin.js\nangular.module('fooApp')\n    .controller('LoginCtrl', ['$scope', 'loginHttp', '$modalInstance',\n        function ($scope, loginHttp, $modalInstance) {\n            $scope.login = function () {\n                loginHttp.login({\n                    mailAddress: $scope.loginDto.mailAddress,\n                    password: $scope.loginDto.password\n                })\n                .success(\n                    function (data) {\n                        $scope.loginDto = data.loginDto;\n                        $modalInstance.close(data.headerDto);\n                    }\n                )\n                .error(\n                    function (data) {\n                        $scope.loginDto = data.loginDto;\n                    }\n                )\n            }\n\n            $scope.cancel = function () {\n                $modalInstance.close();\n            }\n        }]);\n\n\n\n\n\u307e\u3068\u3081\n\u30e2\u30fc\u30c0\u30eb\u306e\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3067Spring Security\u3092\u5b9f\u88c5\u3059\u308b\u306e\u306f\u3001\u3061\u3087\u3063\u3068\u9762\u5012\u3067\u3057\u305f\u3002\n\u3082\u3063\u3068\u7c21\u6f54\u306b\u5b9f\u73fe\u3067\u304d\u308b\u65b9\u6cd5\u304c\u3042\u3063\u305f\u3089\u77e5\u308a\u305f\u3044\u306a\u3042\u3002\u3002\n\u3067\u3082\u3001Spring Security\u3067\u5b9f\u73fe\u3067\u304d\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56\u3092\u30d5\u30eb\u30b9\u30af\u30e9\u30c3\u30c1\u3067\u4f5c\u6210\u3059\u308b\u3053\u3068\u3068\u6bd4\u3079\u305f\u3089\u3001\u306f\u308b\u304b\u306b\u697d\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\nSpring Boot\u3067Spring\u76db\u308a\u4e0a\u304c\u3063\u3066\u3044\u308b\u611f\u3058\u306a\u306e\u3067\u3001Spring\u95a2\u9023\u306e\u65e5\u672c\u8a9e\u8cc7\u6599\u3044\u3063\u3071\u3044\u3067\u308b\u3068\u3044\u3044\u3067\u3059\u306d\uff01\n\n\u300c\u306f\u3058\u3081\u3066\u306eSpring Boot\u300d\u304c\u9762\u767d\u304f\u3001\u3053\u308c\u306fSpring\u899a\u3048\u306d\u3070\uff01\u3068\u3001\u3044\u3046\u6c17\u5206\u306b\u306a\u308aWeb\u30a2\u30d7\u30ea\u3092\u5b9f\u88c5\u4e2d\u3002\nSpring Security\u3092\u4f7f\u7528\u3059\u308b\u3068\u8a8d\u8a3c\u5468\u308a\u306e\u5b9f\u88c5\u304c\u3068\u3066\u3082\u7c21\u5358\u306b\u306a\u308b\u3088\u3046\u306a\u306e\u3067\u4f7f\u3063\u3066\u307f\u308b\u304b\u30fc\u3001SPA\u3067\u3082\u306a\u3093\u3068\u304b\u306a\u308b\u3060\u308d\u3046\u3068\u624b\u3092\u51fa\u3057\u305f\u3089\u5272\u3068\u5927\u5909\u3067\u3057\u305f\u3002\n\u3082\u3063\u3068\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u305d\u3046\u3067\u306f\u3042\u308b\u306e\u3067\u3059\u304c\u3002\u3002\n\u30d5\u30ed\u30f3\u30c8\u306f2.0\u306e\u79fb\u884c\u304c\u5927\u5909\u305d\u3046\u306aAngularJS\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067Angular1.x\u7cfb\u306f\u6b8b\u3057\u3066\u304a\u3044\u3066\u6b32\u3057\u3044\u306a\u3042\u3002\n\u3042\u3068\u3001\u958b\u767a\u304c\u9045\u304f\u3066\u30a4\u30de\u30a4\u30c1\u306a\u8a55\u4fa1\u306e[UI Bootstrap](http://angular-ui.github.io/bootstrap/)\u3092\u4f7f\u3063\u3066\u307e\u3059\u3002\n\n\n#\u53c2\u8003\n* [\u306f\u3058\u3081\u3066\u306eSpring Boot](https://www.kohgakusha.co.jp/books/detail/978-4-7775-1865-4)\n\u8aad\u3080\u3068\u3044\u308d\u3044\u308d\u4f5c\u308a\u305f\u304f\u306a\u308a\u307e\u3059\u3002\u672c\u306e\u8584\u3055\u3068\u88cf\u8179\u306b\u5185\u5bb9\u304c\u3068\u3066\u3082\u6fc3\u3044\u3067\u3059\u3002\n\n* [Spring Security and Angular JS](http://spring.io/guides/tutorials/spring-security-and-angular-js/)\nSpring\u516c\u5f0f\u306eAngularJS\u3068Spring Security\u306e\u7d44\u307f\u5408\u308f\u305b\u4f8b\u3002\n\u307b\u307c\u3053\u308c\u3067\u3084\u308a\u305f\u3044\u3053\u3068\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u81ea\u5206\u306e\u5834\u5408\u3001\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3092\u30e2\u30fc\u30c0\u30eb\u3067\u8868\u793a\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u305d\u3053\u3060\u3051\u9069\u7528\u3067\u304d\u305a\u3002\n\n* [Spring Security](http://projects.spring.io/spring-security/)\nSpring Security\u516c\u5f0f\u3067\u3059\u3002\n\n#\u5b9f\u88c5\n##\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\n\nSecurityConfig\u3067\u3001\u9759\u7684\u30ea\u30bd\u30fc\u30b9\u3068\u30ed\u30b0\u30a4\u30f3API\u4ee5\u5916\u306f\u672a\u8a8d\u8a3c\u306e\u5834\u5408\u30a8\u30e9\u30fc\u3068\u3057\u307e\u3059\u3002\nPOST\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067CSRF\u30c1\u30a7\u30c3\u30af\u5bfe\u8c61\u306e\u305f\u3081\u3001\u6700\u521d\u306e\u30ed\u30b0\u30a4\u30f3\u306eURL\u3092\u30c1\u30a7\u30c3\u30af\u5bfe\u8c61\u5916\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002(requireCsrfProtectionMatcher\u306e\u8a2d\u5b9a\u3092\u3057\u306a\u3044\u3068\u3001\u30ed\u30b0\u30a4\u30f3\u306ePOST\u304c403)\n\u30c1\u30a7\u30c3\u30af\u5bfe\u8c61\u5916\u30ed\u30b8\u30c3\u30af\u306fstackoverflow\u306e[\u3053\u3053](http://stackoverflow.com/questions/22524470/spring-security-3-2-csrf-disable-for-specfic-urls)\u304b\u3089\u62dd\u501f\u3057\u307e\u3057\u305f\u3002\ncsrfTokenRepository\u306f[Spring Security and Angular JS](http://spring.io/guides/tutorials/spring-security-and-angular-js/)\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u308f\u305b\u3066\u3082\u3089\u3063\u3066\u3044\u307e\u3059\u3002\nSpring Security\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067CSRF\u30c1\u30a7\u30c3\u30af\u3092\u3057\u3066\u3044\u3066\u3001AngularJS\u3082$http($resource\u3067\u3082)\u3067X-XSRF-TOKEN\u30d8\u30c3\u30c0\u304c\u81ea\u52d5\u7684\u306b\u4ed8\u52a0\u3055\u308c\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u3001\u3053\u3053\u3067CSRF\u306e\u30d8\u30c3\u30c0\u540d\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\nAngularJS\u306fCookie(\u540d\u79f0\uff1aXSRF-TOKEN)\u304b\u3089X-XSRF-TOKEN\u30c8\u30fc\u30af\u30f3\u3092HTTP\u30d8\u30c3\u30c0\u306b\u30bb\u30c3\u30c8\u3059\u308b(\u53c2\u8003\uff1a[$http](https://docs.angularjs.org/api/ng/service/$http))\u306e\u3067\u3001Spring Security\u304cAngularJS\u306b\u5408\u308f\u305b\u308b\u3068\u3053\u3046\u306a\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306d\u3002\n\n```java:SecurityConfing.java\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n\n        RequestMatcher csrfRequestMatcher = new RequestMatcher() {\n            // CSRF\u5bfe\u8c61\u5916URL:\n            private AntPathRequestMatcher[] requestMatchers = {\n                    new AntPathRequestMatcher(\"/api/login\")\n            };\n\n            @Override\n            public boolean matches(HttpServletRequest request) {\n                for (AntPathRequestMatcher rm : requestMatchers) {\n                    if (rm.matches(request)) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        };\n\n        http.authorizeRequests()\n                .antMatchers(\n                        \"/images/**\",\n                        \"/scripts/**\",\n                        \"/styles/**\",\n                        \"/views/**\",\n                        \"/index.html\",\n                        \"/api/login\"\n                ).permitAll()\n                .anyRequest().authenticated()   //\u4e0a\u8a18\u306b\u30de\u30c3\u30c1\u3057\u306a\u3051\u308c\u3070\u672a\u8a8d\u8a3c\u306e\u5834\u5408\u30a8\u30e9\u30fc\n                .and()\n                .csrf()\n                .requireCsrfProtectionMatcher(csrfRequestMatcher)\n                .csrfTokenRepository(this.csrfTokenRepository());\n    }\n\n    private CsrfTokenRepository csrfTokenRepository() {\n        HttpSessionCsrfTokenRepository repository = new HttpSessionCsrfTokenRepository();\n        repository.setHeaderName(\"X-XSRF-TOKEN\");\n        return repository;\n    }\n}\n\n```\nUserDetailsService\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```java:GlobalAuthenticationConfig.java\n@Configuration\npublic class GlobalAuthenticationConfig extends GlobalAuthenticationConfigurerAdapter {\n\n    @Override\n    public void init(AuthenticationManagerBuilder auth) throws Exception {\n        auth.userDetailsService(userDetailsService());\n    }\n\n    @Bean\n    UserDetailsService userDetailsService() {\n        return new FooAuthService();\n    }\n}\n```\n\n\u30ed\u30b0\u30a4\u30f3\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u308bRestController\u3067\u3059\u3002\n\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\u3067\u8a8d\u8a3c\u3055\u308c\u305f\u3089\u7d44\u307f\u8fbc\u307f\u306eCSRF\u30d5\u30a3\u30eb\u30bf\u30fc\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c8\u30fc\u30af\u30f3\u3092Cookie\u306b\u30bb\u30c3\u30c8\u3057\u3066\u3001NG\u306a\u3089401\u3092\u8fd4\u5374\u3057\u3066\u3044\u307e\u3059\u3002\n\n```java:LoginRestController.java\n@RestController\n@RequestMapping(\"/api/\")\npublic class LoginRestController {\n\t\n\t@Autowired\n\tLoginService loginService;\n\n\t@RequestMapping(value = \"login\", method = RequestMethod.POST)\n\tResponseEntity<PageDto> login(@RequestBody LoginDto loginDto, HttpServletRequest request, HttpServletResponse response) {\n\t\tPageDto pageDto = loginService.login(loginDto);\n\t\tif (pageDto.getHeaderDto().isAuth()) {\n\t\t\tCsrfToken csrf = (CsrfToken) request.getAttribute(CsrfToken.class.getName());\n\t\t\tif (csrf != null) {\n\t\t\t\tCookie cookie = WebUtils.getCookie(request, \"XSRF-TOKEN\");\n\t\t\t\tString token = csrf.getToken();\n\t\t\t\tAuthentication authentication = SecurityContextHolder.getContext().getAuthentication();\n\t\t\t\tif ((cookie == null || token != null && !token.equals(cookie.getValue()))\n\t\t\t\t\t\t&& (authentication != null && authentication.isAuthenticated())) {\n\t\t\t\t\tcookie = new Cookie(\"XSRF-TOKEN\", token);\n\t\t\t\t\tcookie.setPath(\"/\"); //\u9069\u5207\u306a\u30b9\u30b3\u30fc\u30d7\u3067\n\t\t\t\t\tresponse.addCookie(cookie);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new ResponseEntity<>(pageDto, null, HttpStatus.OK);\n\t\t} else {\n\t\t\treturn new ResponseEntity<>(pageDto, null, HttpStatus.UNAUTHORIZED);\n\t\t}\n\t}\n\n\t@RequestMapping(value = \"logout\", method = RequestMethod.POST)\n\tvoid logout(HttpServletRequest request) {\n\t\ttry {\n\t\t\trequest.logout();\n\t\t} catch (ServletException e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n\n}\n\n```\n\n\u8a8d\u8a3c\u51e6\u7406\u306f[\u516c\u5f0f](http://docs.spring.io/spring-security/site/docs/3.2.8.RELEASE/reference/htmlsingle/#tech-intro-authentication)\u306e\u30ed\u30b8\u30c3\u30af\u3092\u62dd\u501f\u3057\u3066\u307e\u3059\u3002\nUserDetails\u3068UserDetailsService\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u306f[\u306f\u3058\u3081\u3066\u306eSpring Boot](https://www.kohgakusha.co.jp/books/detail/978-4-7775-1865-4)\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\n```java:LoginService.java\n@Service\npublic class LoginService {\n\n    @Autowired\n\tprotected Mapper mapper;\n\n\t@Autowired\n\tprivate AuthenticationManager authManager;\n\n    /**\n     * \u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u3092\u884c\u3044\u307e\u3059.\n     * @return\n     */\n    public PageDto login(LoginDto loginDto) {\n\n\t\tPageDto pageDto = new PageDto();\n\t\tLoginDto outLoginDto = mapper.map(loginDto, LoginDto.class);\n\t\tpageDto.setLoginDto(outLoginDto);\n\t\tHeaderDto headerDto = new HeaderDto();\n\t\tpageDto.setHeaderDto(headerDto);\n\n\t\t//Spring Security\u8a8d\u8a3c\u51e6\u7406\n\t\tAuthentication authResult = null;\n\t\ttry {\n\t\t\tAuthentication request = new UsernamePasswordAuthenticationToken(\n\t\t\t\t\tloginDto.getMailAddress(), loginDto.getPassword());\n\t\t\tauthResult = authManager.authenticate(request);\n\t\t\tSecurityContextHolder.getContext().setAuthentication(authResult);\n\t\t\tFooUserDetails principal = (FooUserDetails)authResult.getPrincipal();\n\t\t\theaderDto.setNickName(principal.getUserInfo().getNickName());\n\t\t\theaderDto.setAuth(true);\n\n\t\t} catch(AuthenticationException e) {\n\t\t\toutLoginDto.setMessage(\"\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u304b\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u307e\u3061\u304c\u3063\u3066\u3044\u307e\u3059\u3002\");\n\t\t\theaderDto.setAuth(false);\n\t\t}\n\t\treturn pageDto;\n    }\n\n}\n\n```\n\n##\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\n[UI Bootstrap](http://angular-ui.github.io/bootstrap/)\u4f7f\u3063\u3066\u30e2\u30fc\u30c0\u30eb\u3067\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\nindex.html\u3067\u30ed\u30b0\u30a4\u30f3\u306ehtml\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n```html:index.html\n<!-- \u7565 -->\n    <div class=\"header\" ng-controller=\"HeaderCtrl\">\n<!-- \u7565 -->\n          <div class=\"collapse navbar-collapse\" id=\"js-navbar-collapse\">\n              <ul class=\"nav navbar-nav\">\n                  <li class=\"active\"><a href=\"#/\">Home</a></li>\n                  <li ng-if=\"!headerDto.auth\">\n                      <input type=\"button\" class=\"btn btn-info\" value=\"\u30ed\u30b0\u30a4\u30f3\" ng-click=\"loginDialog()\"/>\n                  </li>\n                  <li ng-if=\"headerDto.auth\">\n                      <input type=\"button\" class=\"btn btn-info\" value=\"\u30ed\u30b0\u30a2\u30a6\u30c8\" ng-click=\"logout()\"/>\n                  </li>\n                  <li>\n                      <div ng-if=\"headerDto.auth\">{{headerDto.nickName}}\u3055\u3093</div>\n                  </li>\n              </ul>\n              <div ng-include src=\"'./views/login.html'\"></div>\n          </div>\n<!-- \u7565 -->\n    </div>\n<!-- \u7565 -->\n\n```\n\n\u30e2\u30fc\u30c0\u30eb\u3067\u5b9f\u884c\u3055\u308c\u308b\u30ed\u30b0\u30a4\u30f3\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3059\u3002\n\n```html:login.html\n<div>\n<script type=\"text/ng-template\" id=\"login.tmpl.html\">\n    <div class=\"modal-header\">\n        <h4>\u30ed\u30b0\u30a4\u30f3</h4>\n    </div>\n    <div class=\"modal-body\">\n        <span>{{loginDto.message}}</span>\n        <br/>\n        <label>\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9</label>\n        <input type=\"text\" class=\"form-control\" ng-model=\"loginDto.mailAddress\">\n        <br/>\n        <label>\u30d1\u30b9\u30ef\u30fc\u30c9</label>\n        <input type=\"password\" class=\"form-control\" ng-model=\"loginDto.password\">\n        <br/>\n        <input type=\"button\" class=\"btn btn-info\" value=\"\u30ed\u30b0\u30a4\u30f3\" ng-click=\"login()\"/>\n        <input type=\"button\" class=\"btn btn-default\" value=\"cancel\" ng-click=\"cancel()\"/>\n    </div>\n</script>\n</div>\n```\n\nLoginRestController\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002\nSIer\u304cAngular+Java\u3067\u5b9f\u88c5\u3059\u308b\u3093\u306a\u3089RestController(Java)\u3068\u305d\u308c\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30b5\u30fc\u30d3\u30b9(JavaScript)\u304cExcel\u3067\u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u308a\u3059\u308b\u3093\u3067\u3057\u3087\u3046\u304b\u3002\n\n```javascript:loginHttp.js\nangular.module('fooApp').factory('loginHttp', ['$http',\n    function ($http) {\n        var login = {\n            login: function(param) {\n                return $http.post('/foo/api/login', param);\n            },\n            logout: function() {\n                return $http.post('/foo/api/logout');\n            }\n        }\n        return login;\n    }]);\n\n```\n\n\u30d8\u30c3\u30c0\u90e8\u5206\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u300c\u30ed\u30b0\u30a4\u30f3\u300d\u30dc\u30bf\u30f3\u304c\u62bc\u4e0b\u6642\u306b\u30e2\u30fc\u30c0\u30eb\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u8d77\u52d5\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n\n```javascript:header.js\nangular.module('fooApp')\n    .controller('HeaderCtrl', ['$scope', '$modal', 'loginHttp',\n        function ($scope, $modal, loginHttp) {\n            $scope.loginDialog = function () {\n                var modalInstance = $modal.open({\n                    size: 'sm',\n                    templateUrl: 'login.tmpl.html',\n                    controller: 'LoginCtrl'\n                });\n                modalInstance.result.then(function (data){\n                    $scope.headerDto = data;\n                });\n            };\n\n            $scope.logout = function () {\n                loginHttp.logout();\n                $scope.headerDto = {};\n            }\n\n        }]);\n\n```\n\n\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u30ed\u30b0\u30a4\u30f3\u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u8a8d\u8a3c\u30a8\u30e9\u30fc\u306e\u5834\u5408\u306f401\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067error()\u306b\u5165\u308a\u307e\u3059\u3002\n\n\n```javascript:login.js\nangular.module('fooApp')\n    .controller('LoginCtrl', ['$scope', 'loginHttp', '$modalInstance',\n        function ($scope, loginHttp, $modalInstance) {\n            $scope.login = function () {\n                loginHttp.login({\n                    mailAddress: $scope.loginDto.mailAddress,\n                    password: $scope.loginDto.password\n                })\n                .success(\n                    function (data) {\n                        $scope.loginDto = data.loginDto;\n                        $modalInstance.close(data.headerDto);\n                    }\n                )\n                .error(\n                    function (data) {\n                        $scope.loginDto = data.loginDto;\n                    }\n                )\n            }\n\n            $scope.cancel = function () {\n                $modalInstance.close();\n            }\n        }]);\n\n```\n\n#\u307e\u3068\u3081\n\u30e2\u30fc\u30c0\u30eb\u306e\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3067Spring Security\u3092\u5b9f\u88c5\u3059\u308b\u306e\u306f\u3001\u3061\u3087\u3063\u3068\u9762\u5012\u3067\u3057\u305f\u3002\n\u3082\u3063\u3068\u7c21\u6f54\u306b\u5b9f\u73fe\u3067\u304d\u308b\u65b9\u6cd5\u304c\u3042\u3063\u305f\u3089\u77e5\u308a\u305f\u3044\u306a\u3042\u3002\u3002\n\u3067\u3082\u3001Spring Security\u3067\u5b9f\u73fe\u3067\u304d\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56\u3092\u30d5\u30eb\u30b9\u30af\u30e9\u30c3\u30c1\u3067\u4f5c\u6210\u3059\u308b\u3053\u3068\u3068\u6bd4\u3079\u305f\u3089\u3001\u306f\u308b\u304b\u306b\u697d\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\nSpring Boot\u3067Spring\u76db\u308a\u4e0a\u304c\u3063\u3066\u3044\u308b\u611f\u3058\u306a\u306e\u3067\u3001Spring\u95a2\u9023\u306e\u65e5\u672c\u8a9e\u8cc7\u6599\u3044\u3063\u3071\u3044\u3067\u308b\u3068\u3044\u3044\u3067\u3059\u306d\uff01\n\n\n", "tags": ["AngularJS", "JavaScript", "Java", "spring", "spring-boot"]}