{"context": " More than 1 year has passed since last update.\u4f8b\u306b\u3088\u3063\u3066C#\u3067\u30af\u30ea\u30a2\u3057\u305f\u3002\u6700\u77ed\u3092\u76ee\u6307\u3059\u306a\u3089\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u5225\u306a\u306e\u304c\u3044\u3044\u304b\u306a\u3002\nC#\u306e\u6587\u5b57\u5217\u53cd\u8ee2\u306e\u7169\u96d1\u3055\u306f\u56f0\u308b\u3002\u81ea\u5206\u3067\u66f8\u304f\u3068\u65e9\u304f\u306a\u308b\u3068\u304b\u3082\u3046\u5206\u304b\u3063\u3066\u308b\u3093\u3060\u304b\u3089\u5185\u90e8\u5b9f\u88c5\u3082\u305d\u3046\u3057\u3066\u307b\u3057\u3044\u3002\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\uff10\uff0e\u4eee\u767b\u9332HashSet\u3068\u7b54\u3048List\u3092\u7528\u610f\u3059\u308b\n\uff11\uff0e\u5358\u8a9e\u3092\uff11\u3064\u8aad\u307f\u51fa\u3059\n\uff12\uff0eHashSet\u306b\u306a\u3051\u308c\u3070\u3001\u53cd\u8ee2\u3057\u305f\u6587\u5b57\u3092HashSet\u306b\u767b\u9332\n\uff13\uff0eHashSet\u306b\u3042\u308c\u3070\u3001HashSet\u304b\u3089\u6d88\u3057\u3001\u305d\u306e\u5358\u8a9e\u306e\u53cd\u8ee2\u3068\u6bd4\u8f03\u3057\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u9806\u3067\u65e9\u3044\u65b9\u3092List\u306b\u5165\u308c\u308b\n\uff14\uff0e\u5358\u8a9e\u306e\u6b8b\u308a\u304c\u3042\u308c\u30701\u306b\u623b\u308b\n\uff15\uff0eABCBA\u306e\u3088\u3046\u306a\u30011\u5358\u8a9e\u3067\u53cd\u8ee2\u3057\u3066\u308b\u5358\u8a9e\u3092HashSet\u304b\u3089\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u9806\u306b\u65e9\u3044\u306e\u3092\u63a2\u3057\u3066center\u306b\u5165\u308c\u308b\n\uff16\uff0eList\u3092\u30bd\u30fc\u30c8\u3059\u308b\n\uff17\uff0eList+center+List\u306e\u53cd\u8ee2\u3092\u6a19\u6e96\u51fa\u529b\u306b\u66f8\u304f\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nclass B\n{\n    static void Main(string[] args)\n    {\n        List<string> ans = new List<string>();\n        HashSet<string> l = new HashSet<string>();\n        int N = int.Parse(Console.ReadLine());\n        //int N = 6;\n        //string[] input = new string[] { \"fdk\", \"jnv\", \"vnj\", \"kdf\", \"qaq\", \"aaa\" };\n        //string[] input = new string[] { \"sk\", \"nw\", \"jx\", \"ob\", \"oo\", \"xj\",\n        //    \"uh\", \"rn\", \"wn\", \"hu\", \"nr\" };\n        for (int i = 0; i < N; i++)\n        {\n            var w = Console.ReadLine();\n            //var w = input[i];\n            var r = new string(w.Reverse().ToArray());\n            if (l.Contains(w))\n            {\n                l.Remove(w);\n                ans.Add(w.CompareTo(r) > 0 ? r : w);\n            }\n            else\n            {\n                l.Add(r);\n            }\n        }\n        string c = \"\";\n        if (l.Count > 0)\n        {\n            int len = l.First().Length;\n            foreach (var s in l)\n            {\n                int start = 0, end = len - 1;\n                bool isOk = true;\n                for (int i = 0; i < len / 2; i++,start++,end--)\n                {\n                    if (s[start] != s[end])\n                    {\n                        isOk = false;\n                        break;\n                    }\n                }\n                if (isOk)\n                {\n                    if (c.Length == 0 || s.CompareTo(c) < 0)\n                    {\n                        c = s;\n                    }\n                }\n            }\n        }\n        ans.Sort();\n        var prefix = string.Join(\"\",ans);\n        var suffix = new string(prefix.Reverse().ToArray());\n        Console.WriteLine(prefix+c+suffix);\n    }\n}\n\n\u4f8b\u306b\u3088\u3063\u3066C#\u3067\u30af\u30ea\u30a2\u3057\u305f\u3002\u6700\u77ed\u3092\u76ee\u6307\u3059\u306a\u3089\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u5225\u306a\u306e\u304c\u3044\u3044\u304b\u306a\u3002\nC#\u306e\u6587\u5b57\u5217\u53cd\u8ee2\u306e\u7169\u96d1\u3055\u306f\u56f0\u308b\u3002\u81ea\u5206\u3067\u66f8\u304f\u3068\u65e9\u304f\u306a\u308b\u3068\u304b\u3082\u3046\u5206\u304b\u3063\u3066\u308b\u3093\u3060\u304b\u3089\u5185\u90e8\u5b9f\u88c5\u3082\u305d\u3046\u3057\u3066\u307b\u3057\u3044\u3002\n\n###\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\uff10\uff0e\u4eee\u767b\u9332HashSet\u3068\u7b54\u3048List\u3092\u7528\u610f\u3059\u308b\n\uff11\uff0e\u5358\u8a9e\u3092\uff11\u3064\u8aad\u307f\u51fa\u3059\n\uff12\uff0eHashSet\u306b\u306a\u3051\u308c\u3070\u3001\u53cd\u8ee2\u3057\u305f\u6587\u5b57\u3092HashSet\u306b\u767b\u9332\n\uff13\uff0eHashSet\u306b\u3042\u308c\u3070\u3001HashSet\u304b\u3089\u6d88\u3057\u3001\u305d\u306e\u5358\u8a9e\u306e\u53cd\u8ee2\u3068\u6bd4\u8f03\u3057\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u9806\u3067\u65e9\u3044\u65b9\u3092List\u306b\u5165\u308c\u308b\n\uff14\uff0e\u5358\u8a9e\u306e\u6b8b\u308a\u304c\u3042\u308c\u30701\u306b\u623b\u308b\n\uff15\uff0eABCBA\u306e\u3088\u3046\u306a\u30011\u5358\u8a9e\u3067\u53cd\u8ee2\u3057\u3066\u308b\u5358\u8a9e\u3092HashSet\u304b\u3089\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u9806\u306b\u65e9\u3044\u306e\u3092\u63a2\u3057\u3066center\u306b\u5165\u308c\u308b\n\uff16\uff0eList\u3092\u30bd\u30fc\u30c8\u3059\u308b\n\uff17\uff0eList+center+List\u306e\u53cd\u8ee2\u3092\u6a19\u6e96\u51fa\u529b\u306b\u66f8\u304f\n\n```chsarp\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nclass B\n{\n    static void Main(string[] args)\n    {\n        List<string> ans = new List<string>();\n        HashSet<string> l = new HashSet<string>();\n        int N = int.Parse(Console.ReadLine());\n        //int N = 6;\n        //string[] input = new string[] { \"fdk\", \"jnv\", \"vnj\", \"kdf\", \"qaq\", \"aaa\" };\n        //string[] input = new string[] { \"sk\", \"nw\", \"jx\", \"ob\", \"oo\", \"xj\",\n        //    \"uh\", \"rn\", \"wn\", \"hu\", \"nr\" };\n        for (int i = 0; i < N; i++)\n        {\n            var w = Console.ReadLine();\n            //var w = input[i];\n            var r = new string(w.Reverse().ToArray());\n            if (l.Contains(w))\n            {\n                l.Remove(w);\n                ans.Add(w.CompareTo(r) > 0 ? r : w);\n            }\n            else\n            {\n                l.Add(r);\n            }\n        }\n        string c = \"\";\n        if (l.Count > 0)\n        {\n            int len = l.First().Length;\n            foreach (var s in l)\n            {\n                int start = 0, end = len - 1;\n                bool isOk = true;\n                for (int i = 0; i < len / 2; i++,start++,end--)\n                {\n                    if (s[start] != s[end])\n                    {\n                        isOk = false;\n                        break;\n                    }\n                }\n                if (isOk)\n                {\n                    if (c.Length == 0 || s.CompareTo(c) < 0)\n                    {\n                        c = s;\n                    }\n                }\n            }\n        }\n        ans.Sort();\n        var prefix = string.Join(\"\",ans);\n        var suffix = new string(prefix.Reverse().ToArray());\n        Console.WriteLine(prefix+c+suffix);\n    }\n}\n```\n", "tags": ["paiza"]}