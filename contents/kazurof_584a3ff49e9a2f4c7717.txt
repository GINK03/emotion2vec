{"context": "\n\n\u672c\u8cc7\u6599\u306b\u3064\u3044\u3066\n\n\u672c\u8cc7\u6599\u306f\u3001\u7b2c\u5341\u516d\u56de #\u6e0b\u8c37java \u306b\u3066\u767a\u8868\u3055\u308c\u305f\u8cc7\u6599\u3067\u3059\u3002\n\n\n\n\u81ea\u5df1\u7d39\u4ecb\n\n\u798f\u539f\u548c\u6717\u3000@kazurof\n\nQiita, twitter, Facebook \u3068\u304b\u3084\u3063\u3066\u307e\u3059\u3002\n\n\n\u6240\u5c5e\n\n\nGMO\u30ea\u30b5\u30fc\u30c1\n\n\n\u30a2\u30f3\u30b1\u30fc\u30c8\u30b7\u30b9\u30c6\u30e0\u306e\u958b\u767a\u4fdd\u5b88\n\n\n\n\n\n\n\n\u672c\u65e5\u306e\u304a\u984c\n\nJUnit 5.0.0-M1 \u304c\u30012016/7/7\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\n\n\n\u4e03\u5915\u3055\u307e  \n\n\n\u3044\u3058\u3063\u3066\u307f\u305f\u611f\u89e6\u306a\u3069\u4e26\u3079\u3066\u307f\u307e\u3059\u3002\n\u6ce8\u610f\uff1aMilestone\u306a\u306e\u3067\u4eca\u5f8c\u5909\u66f4\u5165\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\n\n\u305d\u3082\u305d\u3082\u306e\u5927\u524d\u63d0\n\n\u5143\u3068\u306a\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u304c\u5909\u308f\u3063\u305f\u3002\n\n\norg.junit.jupiter\n\norg.junit.platform\u3000\u306a\u3069\nJUnit4 \u3068\u306eAPI\u4e92\u63db\u6027\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\nJava8\u4ee5\u964d\u3092\u30b5\u30dd\u30fc\u30c8\u3002\n\n\nJava7\u4ee5\u524d\u306f\u3055\u3088\u3046\u306a\u3089\u3002\n\n\n\n\n\nJUnit5 \u306e\u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb\n\nJUnit Platform\n\n\n\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\u306e\u5168\u4f53\u67a0\u7d44\u307f\n\n\nJUnit Jupiter \n\n\n\u30c6\u30b9\u30c8\u958b\u767a\u8005\u30fb\u62e1\u5f35\u306e\u958b\u767a\u8005\u5411\u3051API\n\n\nJUnit Vintage\n\n\nJUnit3, 4 \u306e\u5b9f\u884cAPI\n\n\n\n\n\nJupiter \u3068\u3044\u3046\u540d\u524d\u306e\u7531\u6765\n\n\u592a\u967d\u7cfb\u306e\uff15\u756a\u76ee\u306e\u60d1\u661f\u304b\u3089\u3068\u3063\u305f\u305d\u3046\u3067\u3059\u3002\n\"Jupiter is the fifth planet from the sun.\"\n\u53c2\u8003\n\n\nhttps://github.com/junit-team/junit5/issues/286\n\n\n\n\n\nJUnit5\u3067\u4f55\u304c\u5909\u308f\u3063\u305f\u304b\uff1f\n\n\u57fa\u672c\u7684\u306a\u3084\u308a\u65b9\u306f\u5909\u308f\u3063\u3066\u3044\u306a\u3044\u3002\n\n@Test       \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\n@BeforeEach \u4e8b\u524d\u51e6\u7406\n@AfterEach  \u4e8b\u5f8c\u51e6\u7406\n\n\n\u30b5\u30f3\u30d7\u30eb\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport org.junit.jupiter.api.Test;\n\nclass FirstJUnit5Tests {\n    @Test\n    void myFirstTest() {\n        assertEquals(2, 1 + 1);\n    }\n}\n\n\n\n\u7121\u304f\u306a\u3063\u305f(?)\u3082\u306e\n\nassertThat\n\n\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u7cfb\u306e\u6a5f\u80fd\u306f\u597d\u304d\u306a\u3082\u306e\u4f7f\u3063\u3066\u306d\u3001\u3068\u3044\u3046\u30b9\u30bf\u30f3\u30b9\u3089\u3057\u3044\u3002\n\n\n\u7121\u304f\u306a\u3063\u305f(?)\u3082\u306e \n\n\nTestSuite\n\n\n\u8907\u6570\u306e\u30c6\u30b9\u30c8\u3092\u6728\u69cb\u9020\u306e\u3088\u3046\u306b\u30b0\u30eb\u30fc\u30d7\u5316\n\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\"\u30bf\u30b0\"\u3092\u3064\u3051\u308b\u3084\u308a\u65b9\u306b\u79fb\u884c\n\n\n @Tag(\"nantoka\") \n\n\n\u5f93\u524d\u3001Categories\u3068\u547c\u3070\u308c\u3066\u3044\u305f\u6a5f\u80fd\u3002\n\n\n \u4ee5\u524d\u306fexperimental\u3060\u3063\u305f\u3002\n\n\n\n\n\n\n\nJUnit4 \u306eTestSuite\n//\u3053\u3093\u306a\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u30b3\u30fc\u30c9\u306f\u5927\u5909\u304b\u3082!\npackage tryjunit4.suite;\nimport org.junit.runner.RunWith;\nimport org.junit.runners.Suite;\nimport org.junit.runners.Suite.SuiteClasses; \n@RunWith(Suite.class)\n@SuiteClasses( { SampleTest.class, AnotherTest.class,\n        tryjunit4.subpack.AllTests.class })\npublic class AllTests {\n}\n\n\n\nJUnit5 \u306e@Tag\u306e\u4f8b\nimport org.junit.jupiter.api.Tag;\nimport org.junit.jupiter.api.Test;\n//\"fast\"\u30bf\u30b0\u3092\u6307\u5b9a\u3057\u3066\u30c6\u30b9\u30c8\u5b9f\u884c\u306a\u3069\u3067\u304d\u308b\n@Tag(\"fast\")\nclass TaggingDemo {\n    @Test\n    @Tag(\"taxes\")\n    void testingTaxCalculation() {\n    }\n}\n\n\n\n\u7121\u304f\u306a\u3063\u305f(?)\u3082\u306e \n\n\n\n@Rule\u306b\u3088\u308b\u62e1\u5f35\n\n\n\u306a\u304f\u306a\u308b\u898b\u8fbc\u307f\u3002\u591a\u5206\u3002\n\u305d\u3082\u305d\u3082\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u3046\u5f62\u306a\u306e\u3067\u5927\u4ef0\u306b\u306a\u308a\u304c\u3061\u3060\u3063\u305f\u3002\n\u65b0\u305f\u306b\u8a2d\u8a08\u3055\u308c\u305f\u62e1\u5f35\u304c\u5c0e\u5165\u3055\u308c\u308b\u3002\n@ExtendWith\n\n\n\n\nimport org.junit.rules.TestName;\npublic class TestNameTest {\n    //Rule\u306f\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u3046\u306e\u3067\n    //\u5225\u306e\u30c6\u30b9\u30c8\u3067\u4f7f\u3063\u3066\u306a\u3044\u304b\u6ce8\u610f\u5fc5\u8981\n    @Rule\u3000\n    public TestName name = new TestName();\n    @Test\n    public void testA() {\n        assertEquals(\"testA\", name.getMethodName());\n    }\n    @Test\n    public void testB() {\n        assertEquals(\"testB\", name.getMethodName());\n    }\n}\n\n\n\nTestName\u306f\u3069\u3046\u306a\u3063\u305f\uff1f\n\n\u30c6\u30b9\u30c8\u540d\u3092\u3068\u308c\u308b@Rule\u306eAPI\n\u6d88\u3048\u307e\u3059\u3002\n\u4ee3\u308f\u308a\u306b\u3001\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304b\u3089\u53d6\u308c\u307e\u3059\u3002\n\n\n\u30c6\u30b9\u30c8\u540d\u542b\u3080\u5404\u7a2e\u60c5\u5831\u3082\u53d6\u308c\u307e\u3059\u3002\nTestInfo\n\n\n\n\n\n\u30c6\u30b9\u30c8\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u305b\u308b\n\n\u3069\u3093\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u3059\u304b\u3082\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u53ef\u80fd\n\n\n\nParameterResolver \u306b\u3088\u308b\u3057\u304f\u307f\n\n\n\u7d44\u307f\u8fbc\u307f\u306eResolver\n\n\nTestInfoParameterResolver\n\nTestReporterParameterResolver\n\n\u30c6\u30b9\u30c8\u3067\u30ed\u30b0\u3092\u5410\u304d\u305f\u3044\u6642\u306e\u59d4\u8b72\u5148\n\n\n\n\n\n\nimport org.junit.jupiter.api.TestInfo;\n// import\u306f\u9069\u5f53\u306b\u7701\u7565\u3057\u3066\u307e\u3059\u3002\nclass TestInfoDemo {\n  @Test\n  @Tag(\"my tag\")\n  void test1(TestInfo testInfo) {\n    assertTrue(testInfo.getTags().contains(\"my tag\"));\n  }\n  @Test\n  void test2() {   }\n}\n\n\n\n\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3053\u3068 \n\n\n\u30c6\u30b9\u30c8\u540d\u3092\u500b\u5225\u306b\u3064\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\nimport org.junit.jupiter.api.DisplayName;\nimport org.junit.jupiter.api.Test;\nclass DisplayNameDemo {\n  @Test\n  @DisplayName(\"\u306a\u3093\u3068\u304b\u3066\u3059\u3068\")\n  void testWithDisplayNameContainingSpaces() {\n  }\n}\n\n\n\n\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3053\u3068\u3000\n\n\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5185\u90e8\u30af\u30e9\u30b9\u3068\u3059\u308b\u6a5f\u80fd\u304c\u6a19\u6e96\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\nexperimental\u3000\u3067\u306f\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n@Nested\n\n\n\n\n\n\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3053\u3068\u3000\n\n\n\nDynamicTest\n\n\u30c6\u30b9\u30c8\u3092\u4f5c\u308b\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u52d5\u7684\u306b\u30c6\u30b9\u30c8\u304c\u4f5c\u3089\u308c\u308b\u3002\n\n\n\n\n\n\n\nparameterized \u306e\u4ee3\u66ff\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u30e1\u30bd\u30c3\u30c9\u306b\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u591a\u6570\u6e21\u3057\u3066\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3002\n\n\u30c6\u30b9\u30c8\u3057\u305f\u3044\u51e6\u7406\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u4f5c\u308b\u51e6\u7406\n\n\u4ee5\u4e0a\u3092\u30e9\u30e0\u30c0\u3067\u66f8\u3044\u3066\u304a\u304f\u3068\u3001JUnit5\u304c\u7d44\u307f\u5408\u308f\u305b\u3066\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u52d5\u7684\u3067\u3059\u3002\n\n// JUnit4 \u3060\u3068\u3084\u3063\u3071\u308a\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u3046\u306e\u3067\u3001\u3064\u304b\u3044\u306b\u304f\u3044\n@RunWith(Parameterized.class)\npublic class NoConstructorTest {\n  @Parameters\n  public static Iterable<Object[]> data() {\n      return Arrays.asList(new Object[][] { { 1, 1 }, { -2, 2 } });\n  }\n  @Parameter\n  public int fInput;\n  @Parameter(1)\n  public int fExpected;\n  @Test\n  public void testNantoka() {\n    assertEquals(fExpected, Math.abs(fInput));\n  }\n}\n\n\n\nJUnit5 M1 \u306e\u500b\u4eba\u7684\u306a\u611f\u60f3\n\n\u666e\u901a\u306e\u6a5f\u80fd\u306f\u305d\u306e\u307e\u307e\u3002\nexperimental\u3067\u4fbf\u5229\u306a\u6a5f\u80fd\u3092\u6a19\u6e96\u6a5f\u80fd\u306b\u6607\u683c\u3055\u305b\u308b\u3002\n\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u3067\u6a5f\u80fd\u304c\u5b8c\u7d50\u3059\u308b\u3088\u3046\u306a\u8a2d\u8a08\u306b\u3059\u308b\u3002\n\n\n\nRule \u306e\u5ec3\u6b62\u3002ExtendWith\u306b\u3088\u308b\u65b0\u8a2d\u8a08\n\n\n\n\n\n\u8208\u5473\u3092\u6301\u3063\u305f\u3089\u3002\n\n\nhttps://github.com/junit-team/junit5-samples\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\ngradle\u306eJUnit5\u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u304b\u8a66\u305b\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u306b\u7d75\u6587\u5b57\u304c\u666e\u901a\u306b\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u74b0\u5883\u306b\u3088\u3063\u3066\u306f\u4fee\u6b63\u5fc5\u8981\u304b\u3082\n\n\n\n\n\nIDE\n\nIntelliJ IDEA 2016.2 \u304c\u304a\u3059\u3059\u3081\u3002\n\n\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u53f3\u30af\u30ea\u30c3\u30af\u304b\u3089\u30c6\u30b9\u30c8\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3060\u3068\u5b9f\u884c\u306f\u3067\u304d\u308b\u304c\u8b0e\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3002 \n\n\n\n\n\nJUnit4\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5834\u5408\n\n @RunWith(JUnitPlatform.class)\u3067\u3001\u30c4\u30fc\u30eb\u5074\u306b\u306fJUnit4\u306e\u30c6\u30b9\u30c8\u3060\u3068\u307f\u305b\u304b\u3051\u3064\u3064\u3001\u4e2d\u8eab\u306fJUnit5\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u304c\u3067\u304d\u308b\u3002\n\n\nimport static org.junit.jupiter.api.Assertions.fail;\nimport org.junit.jupiter.api.Test;\nimport org.junit.platform.runner.JUnitPlatform;\nimport org.junit.runner.RunWith;\n\n@RunWith(JUnitPlatform.class)\npublic class JUnit4ClassDemo {\n    @Test\n    void succeedingTest() {\n    }\n    @Test\n    void failingTest() {\n        fail(\"Failing for failing's sake.\");\n    }\n}\n\n\n\n\u4eca\u56de\u89e6\u308c\u3066\u306a\u3044\u3053\u3068\n\n\u4f8b\u5916\u3092\u60f3\u5b9a\u3059\u308b\u30c6\u30b9\u30c8\n\n\n\u7c21\u6f54\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nExpectedException\u3068\u3044\u3046Rule\u306f\u6d88\u3048\u307e\u3059\u3002\n\n\nInterface \u306e default\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\n\u4ed6\u306b\u3082\u8272\u3005\u3042\u308b\u3068\u304a\u3082\u3044\u307e\u3059\u3002\u591a\u5206\u3002  \n\n\n\n\u53c2\u8003\u6587\u732e\n\nhttp://junit.org/junit5/docs/5.0.0-M1/user-guide/\nhttp://blog.codefx.org/libraries/junit-5-dynamic-tests/\n\n\n\n\u3054\u6e05\u8074\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01 \n\n# \u672c\u8cc7\u6599\u306b\u3064\u3044\u3066\n\n- \u672c\u8cc7\u6599\u306f\u3001[\u7b2c\u5341\u516d\u56de #\u6e0b\u8c37java](http://shibuya-java.connpass.com/event/34034/) \u306b\u3066\u767a\u8868\u3055\u308c\u305f\u8cc7\u6599\u3067\u3059\u3002\n\n---\n\n# \u81ea\u5df1\u7d39\u4ecb\n\n- \u798f\u539f\u548c\u6717\u3000@kazurof \n    - Qiita, twitter, Facebook \u3068\u304b\u3084\u3063\u3066\u307e\u3059\u3002\n- \u6240\u5c5e\n    - GMO\u30ea\u30b5\u30fc\u30c1\n        - \u30a2\u30f3\u30b1\u30fc\u30c8\u30b7\u30b9\u30c6\u30e0\u306e\u958b\u767a\u4fdd\u5b88\n\n---\n\n# \u672c\u65e5\u306e\u304a\u984c\n- JUnit 5.0.0-M1 \u304c\u30012016/7/7\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\n\t- \u4e03\u5915\u3055\u307e :tanabata_tree: \n- \u3044\u3058\u3063\u3066\u307f\u305f\u611f\u89e6\u306a\u3069\u4e26\u3079\u3066\u307f\u307e\u3059\u3002\n- \u6ce8\u610f\uff1aMilestone\u306a\u306e\u3067\u4eca\u5f8c\u5909\u66f4\u5165\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n---\n# \u305d\u3082\u305d\u3082\u306e\u5927\u524d\u63d0\n\n- \u5143\u3068\u306a\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u304c\u5909\u308f\u3063\u305f\u3002\n    - `org.junit.jupiter`\n    - `org.junit.platform`\u3000\u306a\u3069\n    - JUnit4 \u3068\u306eAPI\u4e92\u63db\u6027\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n- Java8\u4ee5\u964d\u3092\u30b5\u30dd\u30fc\u30c8\u3002\n    - Java7\u4ee5\u524d\u306f\u3055\u3088\u3046\u306a\u3089\u3002\n\n---\n# JUnit5 \u306e\u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb\n\n- JUnit Platform\n    - \u30c6\u30b9\u30c8\u306e\u5b9f\u884c\u306e\u5168\u4f53\u67a0\u7d44\u307f\n- JUnit Jupiter \n    - \u30c6\u30b9\u30c8\u958b\u767a\u8005\u30fb\u62e1\u5f35\u306e\u958b\u767a\u8005\u5411\u3051API\n- JUnit Vintage\n    - JUnit3, 4 \u306e\u5b9f\u884cAPI\n\n---\n# Jupiter \u3068\u3044\u3046\u540d\u524d\u306e\u7531\u6765\n\n- \u592a\u967d\u7cfb\u306e\uff15\u756a\u76ee\u306e\u60d1\u661f\u304b\u3089\u3068\u3063\u305f\u305d\u3046\u3067\u3059\u3002\n- \"Jupiter is the fifth planet from the sun.\"\n- \u53c2\u8003\n    - https://github.com/junit-team/junit5/issues/286\n \n---\n# JUnit5\u3067\u4f55\u304c\u5909\u308f\u3063\u305f\u304b\uff1f\n\n- \u57fa\u672c\u7684\u306a\u3084\u308a\u65b9\u306f\u5909\u308f\u3063\u3066\u3044\u306a\u3044\u3002\n\n `@Test`       \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\n `@BeforeEach` \u4e8b\u524d\u51e6\u7406\n `@AfterEach`  \u4e8b\u5f8c\u51e6\u7406\n\n---\n# \u30b5\u30f3\u30d7\u30eb\n\n```java\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport org.junit.jupiter.api.Test;\n\nclass FirstJUnit5Tests {\n    @Test\n    void myFirstTest() {\n        assertEquals(2, 1 + 1);\n    }\n}\n```\n---\n# \u7121\u304f\u306a\u3063\u305f(?)\u3082\u306e\n\n- assertThat\n\n\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u7cfb\u306e\u6a5f\u80fd\u306f\u597d\u304d\u306a\u3082\u306e\u4f7f\u3063\u3066\u306d\u3001\u3068\u3044\u3046\u30b9\u30bf\u30f3\u30b9\u3089\u3057\u3044\u3002\n\n---\n# \u7121\u304f\u306a\u3063\u305f(?)\u3082\u306e :two: \n\n- TestSuite\n    - \u8907\u6570\u306e\u30c6\u30b9\u30c8\u3092\u6728\u69cb\u9020\u306e\u3088\u3046\u306b\u30b0\u30eb\u30fc\u30d7\u5316\n    - \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\"\u30bf\u30b0\"\u3092\u3064\u3051\u308b\u3084\u308a\u65b9\u306b\u79fb\u884c\n        -  `@Tag(\"nantoka\")` \n    - \u5f93\u524d\u3001`Categories`\u3068\u547c\u3070\u308c\u3066\u3044\u305f\u6a5f\u80fd\u3002\n        -  \u4ee5\u524d\u306fexperimental\u3060\u3063\u305f\u3002\n\n---\n# JUnit4 \u306eTestSuite\n\n```java\n//\u3053\u3093\u306a\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u30b3\u30fc\u30c9\u306f\u5927\u5909\u304b\u3082!\npackage tryjunit4.suite;\nimport org.junit.runner.RunWith;\nimport org.junit.runners.Suite;\nimport org.junit.runners.Suite.SuiteClasses; \n@RunWith(Suite.class)\n@SuiteClasses( { SampleTest.class, AnotherTest.class,\n        tryjunit4.subpack.AllTests.class })\npublic class AllTests {\n}\n```\n---\n# JUnit5 \u306e`@Tag`\u306e\u4f8b\n\n```java\nimport org.junit.jupiter.api.Tag;\nimport org.junit.jupiter.api.Test;\n//\"fast\"\u30bf\u30b0\u3092\u6307\u5b9a\u3057\u3066\u30c6\u30b9\u30c8\u5b9f\u884c\u306a\u3069\u3067\u304d\u308b\n@Tag(\"fast\")\nclass TaggingDemo {\n    @Test\n    @Tag(\"taxes\")\n    void testingTaxCalculation() {\n    }\n}\n```\n\n---\n# \u7121\u304f\u306a\u3063\u305f(?)\u3082\u306e :three: \n\n- `@Rule`\u306b\u3088\u308b\u62e1\u5f35\n\t- \u306a\u304f\u306a\u308b\u898b\u8fbc\u307f\u3002\u591a\u5206\u3002\n\t- \u305d\u3082\u305d\u3082\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u3046\u5f62\u306a\u306e\u3067\u5927\u4ef0\u306b\u306a\u308a\u304c\u3061\u3060\u3063\u305f\u3002\n\t- \u65b0\u305f\u306b\u8a2d\u8a08\u3055\u308c\u305f\u62e1\u5f35\u304c\u5c0e\u5165\u3055\u308c\u308b\u3002\n\t- `@ExtendWith`\n\n---\n```java\nimport org.junit.rules.TestName;\npublic class TestNameTest {\n    //Rule\u306f\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u3046\u306e\u3067\n    //\u5225\u306e\u30c6\u30b9\u30c8\u3067\u4f7f\u3063\u3066\u306a\u3044\u304b\u6ce8\u610f\u5fc5\u8981\n    @Rule\u3000\n    public TestName name = new TestName();\n    @Test\n    public void testA() {\n        assertEquals(\"testA\", name.getMethodName());\n    }\n    @Test\n    public void testB() {\n        assertEquals(\"testB\", name.getMethodName());\n    }\n}\n```\n\n---\n# `TestName`\u306f\u3069\u3046\u306a\u3063\u305f\uff1f\n\n- \u30c6\u30b9\u30c8\u540d\u3092\u3068\u308c\u308b`@Rule`\u306eAPI\n- \u6d88\u3048\u307e\u3059\u3002\n- \u4ee3\u308f\u308a\u306b\u3001\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304b\u3089\u53d6\u308c\u307e\u3059\u3002\n    - \u30c6\u30b9\u30c8\u540d\u542b\u3080\u5404\u7a2e\u60c5\u5831\u3082\u53d6\u308c\u307e\u3059\u3002\n    - `TestInfo`\n\n---\n# \u30c6\u30b9\u30c8\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u305b\u308b\n\n- \u3069\u3093\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u3059\u304b\u3082\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u53ef\u80fd\n    - `ParameterResolver` \u306b\u3088\u308b\u3057\u304f\u307f\n- \u7d44\u307f\u8fbc\u307f\u306eResolver\n    - `TestInfoParameterResolver`\n    - `TestReporterParameterResolver`\n        - \u30c6\u30b9\u30c8\u3067\u30ed\u30b0\u3092\u5410\u304d\u305f\u3044\u6642\u306e\u59d4\u8b72\u5148\n\n---\n```java\nimport org.junit.jupiter.api.TestInfo;\n// import\u306f\u9069\u5f53\u306b\u7701\u7565\u3057\u3066\u307e\u3059\u3002\nclass TestInfoDemo {\n  @Test\n  @Tag(\"my tag\")\n  void test1(TestInfo testInfo) {\n    assertTrue(testInfo.getTags().contains(\"my tag\"));\n  }\n  @Test\n  void test2() {   }\n}\n```\n\n---\n# \u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3053\u3068 :one: \n\n- \u30c6\u30b9\u30c8\u540d\u3092\u500b\u5225\u306b\u3064\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n```java\nimport org.junit.jupiter.api.DisplayName;\nimport org.junit.jupiter.api.Test;\nclass DisplayNameDemo {\n  @Test\n  @DisplayName(\"\u306a\u3093\u3068\u304b\u3066\u3059\u3068\")\n  void testWithDisplayNameContainingSpaces() {\n  }\n}\n```\n\n---\n# \u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3053\u3068\u3000:two:\n\n- \u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5185\u90e8\u30af\u30e9\u30b9\u3068\u3059\u308b\u6a5f\u80fd\u304c\u6a19\u6e96\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n    - experimental\u3000\u3067\u306f\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n    - `@Nested`\n\n---\n# \u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3053\u3068\u3000:three:\n\n- `DynamicTest`\n    - \u30c6\u30b9\u30c8\u3092\u4f5c\u308b\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n        - \u52d5\u7684\u306b\u30c6\u30b9\u30c8\u304c\u4f5c\u3089\u308c\u308b\u3002\n\n---\n# `parameterized` \u306e\u4ee3\u66ff\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u30e1\u30bd\u30c3\u30c9\u306b\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u591a\u6570\u6e21\u3057\u3066\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3002\n\n- \u30c6\u30b9\u30c8\u3057\u305f\u3044\u51e6\u7406\n- \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u4f5c\u308b\u51e6\u7406\n\n\u4ee5\u4e0a\u3092\u30e9\u30e0\u30c0\u3067\u66f8\u3044\u3066\u304a\u304f\u3068\u3001JUnit5\u304c\u7d44\u307f\u5408\u308f\u305b\u3066\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u52d5\u7684\u3067\u3059\u3002\n\n\n---\n```java\n// JUnit4 \u3060\u3068\u3084\u3063\u3071\u308a\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u3046\u306e\u3067\u3001\u3064\u304b\u3044\u306b\u304f\u3044\n@RunWith(Parameterized.class)\npublic class NoConstructorTest {\n  @Parameters\n  public static Iterable<Object[]> data() {\n      return Arrays.asList(new Object[][] { { 1, 1 }, { -2, 2 } });\n  }\n  @Parameter\n  public int fInput;\n  @Parameter(1)\n  public int fExpected;\n  @Test\n  public void testNantoka() {\n    assertEquals(fExpected, Math.abs(fInput));\n  }\n}\n```\n\n---\n# JUnit5 M1 \u306e\u500b\u4eba\u7684\u306a\u611f\u60f3\n\n- \u666e\u901a\u306e\u6a5f\u80fd\u306f\u305d\u306e\u307e\u307e\u3002\n- experimental\u3067\u4fbf\u5229\u306a\u6a5f\u80fd\u3092\u6a19\u6e96\u6a5f\u80fd\u306b\u6607\u683c\u3055\u305b\u308b\u3002\n- \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u3067\u6a5f\u80fd\u304c\u5b8c\u7d50\u3059\u308b\u3088\u3046\u306a\u8a2d\u8a08\u306b\u3059\u308b\u3002\n    - `Rule` \u306e\u5ec3\u6b62\u3002`ExtendWith`\u306b\u3088\u308b\u65b0\u8a2d\u8a08\n\n---\n# \u8208\u5473\u3092\u6301\u3063\u305f\u3089\u3002\n\n- https://github.com/junit-team/junit5-samples\n    - \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n    - gradle\u306eJUnit5\u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u304b\u8a66\u305b\u307e\u3059\u3002\n    - \u30b3\u30fc\u30c9\u306b\u7d75\u6587\u5b57\u304c\u666e\u901a\u306b\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u74b0\u5883\u306b\u3088\u3063\u3066\u306f\u4fee\u6b63\u5fc5\u8981\u304b\u3082\n\n---\n# IDE\n- IntelliJ IDEA 2016.2 \u304c\u304a\u3059\u3059\u3081\u3002\n    - \u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u53f3\u30af\u30ea\u30c3\u30af\u304b\u3089\u30c6\u30b9\u30c8\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n    - \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3060\u3068\u5b9f\u884c\u306f\u3067\u304d\u308b\u304c\u8b0e\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3002:disappointed_relieved: \n\n---\n# JUnit4\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5834\u5408\n\n-  `@RunWith(JUnitPlatform.class)`\u3067\u3001\u30c4\u30fc\u30eb\u5074\u306b\u306fJUnit4\u306e\u30c6\u30b9\u30c8\u3060\u3068\u307f\u305b\u304b\u3051\u3064\u3064\u3001\u4e2d\u8eab\u306fJUnit5\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u304c\u3067\u304d\u308b\u3002\n\n---\n\n```java\nimport static org.junit.jupiter.api.Assertions.fail;\nimport org.junit.jupiter.api.Test;\nimport org.junit.platform.runner.JUnitPlatform;\nimport org.junit.runner.RunWith;\n\n@RunWith(JUnitPlatform.class)\npublic class JUnit4ClassDemo {\n    @Test\n    void succeedingTest() {\n    }\n    @Test\n    void failingTest() {\n        fail(\"Failing for failing's sake.\");\n    }\n}\n```\n---\n# \u4eca\u56de\u89e6\u308c\u3066\u306a\u3044\u3053\u3068\n\n- \u4f8b\u5916\u3092\u60f3\u5b9a\u3059\u308b\u30c6\u30b9\u30c8\n    - \u7c21\u6f54\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n    - `ExpectedException`\u3068\u3044\u3046Rule\u306f\u6d88\u3048\u307e\u3059\u3002\n- Interface \u306e `default`\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\n- \u4ed6\u306b\u3082\u8272\u3005\u3042\u308b\u3068\u304a\u3082\u3044\u307e\u3059\u3002\u591a\u5206\u3002 :sweat_smile: \n\n---\n# \u53c2\u8003\u6587\u732e\n\n- http://junit.org/junit5/docs/5.0.0-M1/user-guide/\n- http://blog.codefx.org/libraries/junit-5-dynamic-tests/\n\n---\n\n# \u3054\u6e05\u8074\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01 :bowtie: \n", "tags": ["junit5", "JUnit", "Java"]}