{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\n\n\u3044\u304d\u306a\u308a\u3080\u3055\u3044\u304a\u3058\u3055\u3093\u753b\u50cf\u3067\u7533\u3057\u8a33\u3042\u308a\u307e\u305b\u3093\u3002\n\u300c\u8d64\u9ec4\u9752\u7dd1\u306e4\u8272\u306e\u6728\u306e\u7389\u3092\u3001\u305d\u308c\u305e\u308c\u62bd\u51fa\u3067\u304d\u306a\u3044\u304b\u300d\u3001\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nPython\u6b74OpenCV\u6b74\u3068\u3082\u306b1\u30f6\u6708\u7a0b\u5ea6\u3067\u3059\u306e\u3067\u3001\u62d9\u3044\u70b9\u306f\u305c\u3072\u3054\u6307\u6458\u4e0b\u3055\u3044\uff08\u672c\u5f53\u306b\uff09\u3002\n\n\u30d5\u30a3\u30eb\u30bf\u306e\u30b3\u30fc\u30c9\n\u4ee5\u4e0b\u306f\u3001\n\n\u6307\u5b9a\u3057\u305f\u8272\u76f8\uff08hue\uff09\u306e\u30d4\u30af\u30bb\u30eb\uff08hTarget\uff09\u3092\u660e\u308b\u304f\u3057\u3066\n\u8a72\u5f53\u3057\u306a\u3044\u30d4\u30af\u30bb\u30eb\uff08hMask2\uff09\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u3059\u308b\n\n\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\nfilters.py\n...\n\ndef hueMask(src, dst, hue, hueRange):\n    src = cv2.cvtColor(src, cv2.COLOR_BGR2HSV)\n    h, s, v = cv2.split(src)\n    hOrg = h.copy()\n    hTarget = h.copy()\n\n    cv2.threshold(hTarget, hue + hueRange, hue, cv2.THRESH_TOZERO_INV, hTarget)\n    # \u300csrc(x,y)\u304cthresh\u3088\u308a\u5927\u304d\u3051\u308c\u3070\u3001dst(x,y)\u306f0\u300d\n\n    # 0\n    # 0\n    # 0\n    # thresh\n    # src\n    # src\n    # src\n    # src\n    # src\n\n    cv2.threshold(hTarget, hue - hueRange, hue, cv2.THRESH_BINARY, hTarget)\n    # \u300csrc(x,y)\u304cthresh\u3088\u308a\u5c0f\u3055\u3051\u308c\u3070\u3001dst(x,y)\u306f0\u300d\n\n    # 0(src)\n    # 0(src)\n    # 0(src)\n    # src\n    # src\n    # thresh\n    # 0\n    # 0\n    # 0\n\n    # \u7d50\u679c\n\n    # 0\n    # 0\n    # 0\n    # thresh\n    # src\n    # thresh\n    # 0\n    # 0\n    # 0\n\n    # \u86cd\u5149\u706f\u306e\u5149\uff08\u9ec4\uff09\u3084\u9aea\u306e\u6bdb\uff08\u9752\uff09\u3092\u9664\u5916\u3059\u308b\u305f\u3081\u3001\n    # \u6975\u7aef\u306b\u5f69\u5ea6\u306e\u4f4e\u3044\u30d4\u30af\u30bb\u30eb\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u7bc4\u56f2\u304b\u3089\u9664\u5916\u3059\u308b\n    sNotVeryLow = s.copy() # \u6975\u7aef\u306b\u5f69\u5ea6\u304c\u4f4e\u304f\u306a\u3044\u3068\u3053\u308d\n    # \u5f69\u5ea6\u304c31\u3088\u308a\u9ad8\u3044\u306a\u3089\u30bf\u30fc\u30b2\u30c3\u30c8\u7bc4\u56f2\uff08255\uff09\u306b\u5165\u308c\u308b\u3002\n    # \u3055\u3082\u306a\u304f\u3070\u975e\u30bf\u30fc\u30b2\u30c3\u30c8\u7bc4\u56f2\uff080\uff09\u3002\n    cv2.threshold(sNotVeryLow, 31, 255, cv2.THRESH_BINARY, sNotVeryLow)\n\n    # hTarget\u3068vNotHighlight\u306e\u8ad6\u7406\u7a4d\u304c\u65b0\u3057\u3044hTarget\n    cv2.bitwise_and(hTarget, vNotVeryLow, hTarget)\n\n    # \u660e\u5ea6\u753b\u50cf\u306e\u30b3\u30d4\u30fc\u3092\u3068\u308b\u3002\n    vBrightened = v.copy()\n    # \u305d\u308c\u306b+96\u306e\u30ac\u30f3\u30de\u88dc\u6b63\u3092\u304b\u3051\u3001\u660e\u308b\u304f\u3059\u308b\n    cv2.addWeighted(v, 0.625, v, 0.0, 96, vBrightened)\n    # \u660e\u5ea6\u753b\u50cf\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u7bc4\u56f2\u306e\u307f\u3001\u30ac\u30f3\u30de\u88dc\u6b63\u6e08\u307f\u660e\u5ea6\u753b\u50cf\u3092\u5165\u308c\u308b\n    cv2.bitwise_and(vBrightened, 255, v, hTarget)\n\n    hMask2 = h.copy()\n    # hTarget\uff081\u30c1\u30e3\u30f3\u30cd\u30eb\u753b\u50cf\uff09\u306e\u8a72\u5f53\u30d4\u30af\u30bb\u30eb\u304c0\u306e\u3068\u304d\u3001\n    # hMask2\uff081\u30c1\u30e3\u30f3\u30cd\u30eb\u753b\u50cf\uff09\u306e\u8a72\u5f53\u30d4\u30af\u30bb\u30eb\u3092255\u306b\u30bb\u30c3\u30c8\u3059\u308b\u3002\n    # \u3055\u3082\u306a\u304f\u3070\u30010\u306b\u30bb\u30c3\u30c8\u3059\u308b\u3002\n    # \u8981\u3059\u308b\u306bhMask2\u306fhTarget\u30de\u30b9\u30af\u753b\u50cf\u3092\u53cd\u8ee2\u3055\u305b\u305f\u3082\u306e\u3002\n    cv2.compare(hTarget, 0, cv2.CMP_EQ, hMask2)\n\n    cv2.bitwise_and(s, 0, s, hMask2) # \u8ad6\u7406\u7a4d\n\n    cv2.merge((hOrg, s, v), src)\n    cv2.cvtColor(src, cv2.COLOR_HSV2BGR, dst)\n\n...\n\n\n\u306a\u3093\u3060\u304b\u5909\u6570\u306e\u540d\u524d\u304c\u6c5a\u3044\u3067\u3059\u304c\u30fb\u30fb\u30fb\u3053\u308c\u3067\u4efb\u610f\u306e\u8272\u76f8\u3092\u62bd\u51fa\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30fc\u30c9\n\u6b21\u306b4\u8272\u3064\u307e\u308a\u8d64\u9ec4\u9752\u7dd1\u306e\u8272\u76f8\u3092\u62bd\u51fa\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\nApp.py\n...\nclass App(object):\n    def __init__(self):\n        ...\n        self._shouldHueMask                = False\n        ...\n    def run(self):\n        ...\n        while self._windowManager.isWindowCreated:\n            ...\n            if self._shouldHueMask:\n                filters.hueMask(frame, frame, self._hue, self._hueRange)\n            ...\n    def onKeypress(self, keycode):\n        ...\n        elif keycode == ord('B'): # \u9752\n            self._hue      = 110\n            self._hueRange = 10\n            self._shouldHueMask = \\\n                not self._shouldHueMask\n        elif keycode == ord('G'): # \u7dd1\n            self._hue      = 70\n            self._hueRange = 25\n            self._shouldHueMask = \\\n                not self._shouldHueMask\n        elif keycode == ord('R'): # \u8d64\n            self._hue      = 5\n            self._hueRange = 5\n            self._shouldHueMask = \\\n                not self._shouldHueMask\n        elif keycode == ord('Y'): # \u9ec4\n            self._hue      = 30\n            self._hueRange = 15\n            self._shouldHueMask = \\\n                not self._shouldHueMask\n        ...\nif __name__==\"__main__\":\n    App().run()\n\n\n\u8d64\u9ec4\u9752\u7dd1\u305d\u308c\u305e\u308c\u306e\u8272\u76f8\u5024\u3068\u5e45\u306f\u3001\u8a66\u884c\u932f\u8aa4\u306e\u672b\u306b\u6c7a\u3081\u307e\u3057\u305f\u3002\n\n\u7d50\u679c\n\n\u8d64\n\n\u3046\u30fc\u3093\u3001\u808c\u306e\u8272\u304c\u300c\u8d64\u8272\u62bd\u51fa\u300d\u306b\u53cd\u5fdc\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u3053\u308c\u3067\u306f\u6728\u306e\u7389\u300c\u3060\u3051\u300d\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u9ec4\n\n\u3046\u30fc\u3093\u3001\u4eca\u5ea6\u306f\u5929\u4e95\u304c\u300c\u9ec4\u8272\u62bd\u51fa\u300d\u306b\u53cd\u5fdc\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u9752\n\n\u4eca\u5ea6\u306f\u9aea\u306e\u6bdb\u3068\u9ed2\u3044\u30bb\u30fc\u30bf\u30fc\u304c\u300c\u9752\u8272\u62bd\u51fa\u300d\u306b\u53cd\u5fdc\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u7dd1\n\n\u3044\u3061\u3070\u3093\u304d\u308c\u3044\u306b\u6728\u306e\u7389\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u6620\u50cf\u3067\u3082\u5408\u6210\u3059\u308b\u3068\u304d\u306f\u30b0\u30ea\u30fc\u30f3\u30d0\u30c3\u30af\u3068\u3044\u3063\u3066\u7dd1\u8272\u306e\u5e03\u306e\u524d\u306b\u7acb\u3061\u307e\u3059\u3088\u306d\u3002\u3042\u308c\u304c\u7dd1\u8272\u3060\u3063\u305f\u306e\u306b\u306f\u7406\u7531\u304c\u3042\u308b\u308f\u3051\u3067\u3059\u306d\u3002\n\u7dd1\u8272\u304c\u5fc3\u306b\u548c\u3080\u8272\u306a\u306e\u3082\u3001\u666e\u6bb5\u306e\u751f\u6d3b\u306e\u4e2d\u306b\u51fa\u3066\u304f\u308b\u8272\u3068\u306f\u9055\u3044\u3001\u76ee\u304c\u65b0\u305f\u306a\u523a\u6fc0\u3092\u5feb\u3044\u3068\u611f\u3058\u308b\u304b\u3089\u306a\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3072\u3087\u3063\u3068\u3057\u305f\u3089\u9ed2\u677f\u304c\u7dd1\u8272\u306a\u306e\u3082\u3001\u305d\u308c\u304c\u7406\u7531\u304b\u3082\uff1f\n\u30fb\u30fb\u30fb\u306a\u3069\u3068\u8b70\u8ad6\u306e\u4f59\u5730\u3092\u6b8b\u3057\u3066\u7b46\u3092\u7f6e\u304d\u307e\u3059\u3002\n\n\u30d6\u30ed\u30b0\u3084\u3063\u3066\u307e\u3059\uff1aWeed.nagoya\n### \u76ee\u7684\n\n![150226-143939-screen-shot.jpg](https://qiita-image-store.s3.amazonaws.com/0/12939/d67baf7d-eeab-174a-37b5-5ad271e5dbed.jpeg)\n\n\u3044\u304d\u306a\u308a\u3080\u3055\u3044\u304a\u3058\u3055\u3093\u753b\u50cf\u3067\u7533\u3057\u8a33\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u300c\u8d64\u9ec4\u9752\u7dd1\u306e4\u8272\u306e\u6728\u306e\u7389\u3092\u3001\u305d\u308c\u305e\u308c\u62bd\u51fa\u3067\u304d\u306a\u3044\u304b\u300d\u3001\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\nPython\u6b74OpenCV\u6b74\u3068\u3082\u306b1\u30f6\u6708\u7a0b\u5ea6\u3067\u3059\u306e\u3067\u3001\u62d9\u3044\u70b9\u306f\u305c\u3072\u3054\u6307\u6458\u4e0b\u3055\u3044\uff08\u672c\u5f53\u306b\uff09\u3002\n\n### \u30d5\u30a3\u30eb\u30bf\u306e\u30b3\u30fc\u30c9\n\n\u4ee5\u4e0b\u306f\u3001\n\n1. \u6307\u5b9a\u3057\u305f\u8272\u76f8\uff08`hue`\uff09\u306e\u30d4\u30af\u30bb\u30eb\uff08`hTarget`\uff09\u3092\u660e\u308b\u304f\u3057\u3066\n2. \u8a72\u5f53\u3057\u306a\u3044\u30d4\u30af\u30bb\u30eb\uff08`hMask2`\uff09\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u3059\u308b\n\n\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n```py:filters.py\n...\n\ndef hueMask(src, dst, hue, hueRange):\n    src = cv2.cvtColor(src, cv2.COLOR_BGR2HSV)\n    h, s, v = cv2.split(src)\n    hOrg = h.copy()\n    hTarget = h.copy()\n\n    cv2.threshold(hTarget, hue + hueRange, hue, cv2.THRESH_TOZERO_INV, hTarget)\n    # \u300csrc(x,y)\u304cthresh\u3088\u308a\u5927\u304d\u3051\u308c\u3070\u3001dst(x,y)\u306f0\u300d\n\n    # 0\n    # 0\n    # 0\n    # thresh\n    # src\n    # src\n    # src\n    # src\n    # src\n\n    cv2.threshold(hTarget, hue - hueRange, hue, cv2.THRESH_BINARY, hTarget)\n    # \u300csrc(x,y)\u304cthresh\u3088\u308a\u5c0f\u3055\u3051\u308c\u3070\u3001dst(x,y)\u306f0\u300d\n\n    # 0(src)\n    # 0(src)\n    # 0(src)\n    # src\n    # src\n    # thresh\n    # 0\n    # 0\n    # 0\n\n    # \u7d50\u679c\n\n    # 0\n    # 0\n    # 0\n    # thresh\n    # src\n    # thresh\n    # 0\n    # 0\n    # 0\n\n    # \u86cd\u5149\u706f\u306e\u5149\uff08\u9ec4\uff09\u3084\u9aea\u306e\u6bdb\uff08\u9752\uff09\u3092\u9664\u5916\u3059\u308b\u305f\u3081\u3001\n    # \u6975\u7aef\u306b\u5f69\u5ea6\u306e\u4f4e\u3044\u30d4\u30af\u30bb\u30eb\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u7bc4\u56f2\u304b\u3089\u9664\u5916\u3059\u308b\n    sNotVeryLow = s.copy() # \u6975\u7aef\u306b\u5f69\u5ea6\u304c\u4f4e\u304f\u306a\u3044\u3068\u3053\u308d\n    # \u5f69\u5ea6\u304c31\u3088\u308a\u9ad8\u3044\u306a\u3089\u30bf\u30fc\u30b2\u30c3\u30c8\u7bc4\u56f2\uff08255\uff09\u306b\u5165\u308c\u308b\u3002\n    # \u3055\u3082\u306a\u304f\u3070\u975e\u30bf\u30fc\u30b2\u30c3\u30c8\u7bc4\u56f2\uff080\uff09\u3002\n    cv2.threshold(sNotVeryLow, 31, 255, cv2.THRESH_BINARY, sNotVeryLow)\n\n    # hTarget\u3068vNotHighlight\u306e\u8ad6\u7406\u7a4d\u304c\u65b0\u3057\u3044hTarget\n    cv2.bitwise_and(hTarget, vNotVeryLow, hTarget)\n\n    # \u660e\u5ea6\u753b\u50cf\u306e\u30b3\u30d4\u30fc\u3092\u3068\u308b\u3002\n    vBrightened = v.copy()\n    # \u305d\u308c\u306b+96\u306e\u30ac\u30f3\u30de\u88dc\u6b63\u3092\u304b\u3051\u3001\u660e\u308b\u304f\u3059\u308b\n    cv2.addWeighted(v, 0.625, v, 0.0, 96, vBrightened)\n    # \u660e\u5ea6\u753b\u50cf\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u7bc4\u56f2\u306e\u307f\u3001\u30ac\u30f3\u30de\u88dc\u6b63\u6e08\u307f\u660e\u5ea6\u753b\u50cf\u3092\u5165\u308c\u308b\n    cv2.bitwise_and(vBrightened, 255, v, hTarget)\n\n    hMask2 = h.copy()\n    # hTarget\uff081\u30c1\u30e3\u30f3\u30cd\u30eb\u753b\u50cf\uff09\u306e\u8a72\u5f53\u30d4\u30af\u30bb\u30eb\u304c0\u306e\u3068\u304d\u3001\n    # hMask2\uff081\u30c1\u30e3\u30f3\u30cd\u30eb\u753b\u50cf\uff09\u306e\u8a72\u5f53\u30d4\u30af\u30bb\u30eb\u3092255\u306b\u30bb\u30c3\u30c8\u3059\u308b\u3002\n    # \u3055\u3082\u306a\u304f\u3070\u30010\u306b\u30bb\u30c3\u30c8\u3059\u308b\u3002\n    # \u8981\u3059\u308b\u306bhMask2\u306fhTarget\u30de\u30b9\u30af\u753b\u50cf\u3092\u53cd\u8ee2\u3055\u305b\u305f\u3082\u306e\u3002\n    cv2.compare(hTarget, 0, cv2.CMP_EQ, hMask2)\n\n    cv2.bitwise_and(s, 0, s, hMask2) # \u8ad6\u7406\u7a4d\n\n    cv2.merge((hOrg, s, v), src)\n    cv2.cvtColor(src, cv2.COLOR_HSV2BGR, dst)\n\n...\n```\n\n\u306a\u3093\u3060\u304b\u5909\u6570\u306e\u540d\u524d\u304c\u6c5a\u3044\u3067\u3059\u304c\u30fb\u30fb\u30fb\u3053\u308c\u3067\u4efb\u610f\u306e\u8272\u76f8\u3092\u62bd\u51fa\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n### \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30fc\u30c9\n\n\u6b21\u306b4\u8272\u3064\u307e\u308a\u8d64\u9ec4\u9752\u7dd1\u306e\u8272\u76f8\u3092\u62bd\u51fa\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\n```py:App.py\n...\nclass App(object):\n    def __init__(self):\n        ...\n        self._shouldHueMask                = False\n        ...\n    def run(self):\n        ...\n        while self._windowManager.isWindowCreated:\n            ...\n            if self._shouldHueMask:\n                filters.hueMask(frame, frame, self._hue, self._hueRange)\n            ...\n    def onKeypress(self, keycode):\n        ...\n        elif keycode == ord('B'): # \u9752\n            self._hue      = 110\n            self._hueRange = 10\n            self._shouldHueMask = \\\n                not self._shouldHueMask\n        elif keycode == ord('G'): # \u7dd1\n            self._hue      = 70\n            self._hueRange = 25\n            self._shouldHueMask = \\\n                not self._shouldHueMask\n        elif keycode == ord('R'): # \u8d64\n            self._hue      = 5\n            self._hueRange = 5\n            self._shouldHueMask = \\\n                not self._shouldHueMask\n        elif keycode == ord('Y'): # \u9ec4\n            self._hue      = 30\n            self._hueRange = 15\n            self._shouldHueMask = \\\n                not self._shouldHueMask\n        ...\nif __name__==\"__main__\":\n    App().run()\n```\n\n\u8d64\u9ec4\u9752\u7dd1\u305d\u308c\u305e\u308c\u306e\u8272\u76f8\u5024\u3068\u5e45\u306f\u3001\u8a66\u884c\u932f\u8aa4\u306e\u672b\u306b\u6c7a\u3081\u307e\u3057\u305f\u3002\n\n### \u7d50\u679c\n\n#### \u8d64\n\n![150226-144313-screen-shot.jpg](https://qiita-image-store.s3.amazonaws.com/0/12939/897f5a01-a2a0-2c47-c31f-db7887f646aa.jpeg)\n\n\u3046\u30fc\u3093\u3001\u808c\u306e\u8272\u304c\u300c\u8d64\u8272\u62bd\u51fa\u300d\u306b\u53cd\u5fdc\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u3053\u308c\u3067\u306f\u6728\u306e\u7389\u300c\u3060\u3051\u300d\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n#### \u9ec4\n\n![150226-144702-screen-shot.jpg](https://qiita-image-store.s3.amazonaws.com/0/12939/12e28596-67e0-25f0-4dde-71ef80315490.jpeg)\n\n\u3046\u30fc\u3093\u3001\u4eca\u5ea6\u306f\u5929\u4e95\u304c\u300c\u9ec4\u8272\u62bd\u51fa\u300d\u306b\u53cd\u5fdc\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\n#### \u9752\n\n![150226-144944-screen-shot.jpg](https://qiita-image-store.s3.amazonaws.com/0/12939/21d39ef6-c370-3a3b-fb73-a0cb83c59276.jpeg)\n\n\n\u4eca\u5ea6\u306f\u9aea\u306e\u6bdb\u3068\u9ed2\u3044\u30bb\u30fc\u30bf\u30fc\u304c\u300c\u9752\u8272\u62bd\u51fa\u300d\u306b\u53cd\u5fdc\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\n#### \u7dd1\n\n![150226-145207-screen-shot.jpg](https://qiita-image-store.s3.amazonaws.com/0/12939/76e62f77-97c8-ec2f-0f34-b251fced51bd.jpeg)\n\n\u3044\u3061\u3070\u3093\u304d\u308c\u3044\u306b\u6728\u306e\u7389\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u6620\u50cf\u3067\u3082\u5408\u6210\u3059\u308b\u3068\u304d\u306f\u30b0\u30ea\u30fc\u30f3\u30d0\u30c3\u30af\u3068\u3044\u3063\u3066\u7dd1\u8272\u306e\u5e03\u306e\u524d\u306b\u7acb\u3061\u307e\u3059\u3088\u306d\u3002\u3042\u308c\u304c\u7dd1\u8272\u3060\u3063\u305f\u306e\u306b\u306f\u7406\u7531\u304c\u3042\u308b\u308f\u3051\u3067\u3059\u306d\u3002\n\n\u7dd1\u8272\u304c\u5fc3\u306b\u548c\u3080\u8272\u306a\u306e\u3082\u3001\u666e\u6bb5\u306e\u751f\u6d3b\u306e\u4e2d\u306b\u51fa\u3066\u304f\u308b\u8272\u3068\u306f\u9055\u3044\u3001\u76ee\u304c\u65b0\u305f\u306a\u523a\u6fc0\u3092\u5feb\u3044\u3068\u611f\u3058\u308b\u304b\u3089\u306a\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u3072\u3087\u3063\u3068\u3057\u305f\u3089\u9ed2\u677f\u304c\u7dd1\u8272\u306a\u306e\u3082\u3001\u305d\u308c\u304c\u7406\u7531\u304b\u3082\uff1f\n\n\u30fb\u30fb\u30fb\u306a\u3069\u3068\u8b70\u8ad6\u306e\u4f59\u5730\u3092\u6b8b\u3057\u3066\u7b46\u3092\u7f6e\u304d\u307e\u3059\u3002\n\n---\n\u30d6\u30ed\u30b0\u3084\u3063\u3066\u307e\u3059\uff1a[Weed.nagoya](http://www.weed.nagoya/)\n", "tags": ["Python", "OpenCV", "\u753b\u50cf\u51e6\u7406"]}