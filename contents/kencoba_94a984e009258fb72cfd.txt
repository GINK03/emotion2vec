{"context": " More than 1 year has passed since last update.\u5f15\u304d\u7d9a\u304d\u3001Cruise Control System\u3002\n5\u3064\u306e\u30d7\u30ed\u30bb\u30b9\u306f\u305d\u308c\u305e\u308c\u72ec\u7acb\u3057\u3066\u304a\u308a\u3001\nChannel\u3092\u4ecb\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u901a\u4fe1\u3092\u884c\u3046\u3002\n\u3053\u3053\u3089\u8fba\u304c\u304a\u624b\u8efd\u5b9f\u88c5\u306e\u9650\u754c\u3067\u3059\u304b\u306d\u30fc\u3002\n\nDefinitions\n(define-event engineOn)\n(define-event engineOff)\n\n(define-event on)\n(define-event off)\n(define-event resume)\n\n(define-event brake)\n(define-event accelerator)\n\n(define-event clearSpeed)\n(define-event recordSpeed)\n(define-event enableControl)\n(define-event disableControl)\n\n(define-event speed)\n\n(define-channel is-ss (x)\n  '((engineOn)(engineOff)))\n\n(define-channel is-sc (x)\n  '((speed)))\n\n(define-channel ss-cc (x)\n  '((engineOn)(engineOff)\n    (on)(off)(resume)\n    (brake)(accelerator)))\n\n(define-channel cc-sc (x)\n  '((clearSpeed)(recordSpeed)\n    (enableControl)(disableControl)))\n\n(define-channel sc-th (x)\n  '((setThrottle)))\n\n\n\n\nSENSORSCAN\n(define-process SENSORSCAN\n  (alt\n    (? is-ss (x) (eqv? x 'engineOn) (! ss-cc ('engineOn) SENSORSCAN))\n    (? is-ss (x) (eqv? x 'engineOff) (! ss-cc ('engineOff) SENSORSCAN))\n    (! on (! ss-cc ('on) SENSORSCAN))\n    (! off (! ss-cc ('off) SENSORSCAN))\n    (! resume (! ss-cc ('resume) SENSORSCAN))\n    (! brake (! ss-cc ('brake) SENSORSCAN))\n    (! accelerator (! ss-cc ('accelerator) SENSORSCAN))))\n\n\n\nINPUTSPEED\n(define-process INPUTSPEED\n  (! engineOn (! is-ss ('engineOn) CHECKSPEED)))\n\n(define-process CHECKSPEED\n  (alt\n    (! speed (! is-sc ('speed) CHECKSPEED))\n    (! engineOff (! is-ss ('engineOff) INPUTSPEED))))\n\n\n\nCRUISECONTROLLER\n(define-process INACTIVE\n  (alt\n    (? ss-cc (x)\n       (eqv? x 'engineOn)\n       (! cc-sc ('clearSpeed) ACTIVE))\n    (? ss-cc (x)\n       (or (eqv? x 'off) (eqv? x 'brake) (eqv? x 'accelerator))\n       INACTIVE)))\n\n(define-process ACTIVE\n  (alt\n    (? ss-cc (x)\n       (eqv? x 'engineOff)\n       INACTIVE)\n    (? ss-cc (x)\n       (eqv? x 'on)\n       (! cc-sc ('recordSpeed)\n          (! cc-sc ('enableControl)\n             CRUISING)))\n    (? ss-cc (x)\n       (or (eqv? x 'off) (eqv? x 'brake) (eqv? x 'accelerator))\n       ACTIVE)))\n\n(define-process CRUISING\n  (alt\n    (? ss-cc (x)\n       (eqv? x 'engineOff)\n       INACTIVE)\n    (? ss-cc (x)\n       (or (eqv? x 'off) (eqv? x 'brake) (eqv? x 'accelerator))\n       (! cc-sc ('disableControl)\n          STANDBY))\n    (? ss-cc (x)\n       (eqv? x 'on)\n       (! cc-sc ('recordSpeed)\n          (! cc-sc ('enableControl)\n             CRUISING)))))\n\n(define-process STANDBY\n  (alt\n    (? ss-cc (x)\n       (eqv? x 'engineOff)\n       INACTIVE)\n    (? ss-cc (x)\n       (eqv? x 'resume)\n       (! cc-sc ('enableControl)\n          CRUISING))\n    (? ss-cc (x)\n       (eqv? x 'on)\n       (! cc-sc ('recordSpeed)\n          (! cc-sc ('enableControl)\n             CRUISING)))\n    (? ss-cc (x)\n       (or (eqv? x 'off) (eqv? x 'brake) (eqv? x 'accelerator))\n       STANDBY)))\n\n\n\nSPEEDCONTROL\n(define-process DISABLED\n  (alt\n    (? is-sc (x)\n       (eqv? x 'speed)\n       DISABLED)\n    (? cc-sc (x)\n       (or (eqv? x 'clearSpeed) (eqv? x 'recordSpeed))\n       DISABLED)\n    (? cc-sc (x)\n       (eqv? x 'enableControl)\n       ENABLED)))\n\n(define-process ENABLED\n  (alt\n    (? is-sc (x)\n       (eqv? x 'speed)\n       (! sc-th ('setThrottle) ENABLED))\n    (? cc-sc (x)\n       (or (eqv? x 'recordSpeed) (eqv? x 'enableControl))\n       ENABLED)\n    (? cc-sc (x)\n       (eqv? x 'disableControl)\n       DISABLED)))\n\n\n\nTHROTTLE\n(define-process THROTTLE\n  (? sc-th (x)\n     (eqv? x 'setThrottle)\n     THROTTLE))\n\n\n\u5f15\u304d\u7d9a\u304d\u3001Cruise Control System\u3002\n5\u3064\u306e\u30d7\u30ed\u30bb\u30b9\u306f\u305d\u308c\u305e\u308c\u72ec\u7acb\u3057\u3066\u304a\u308a\u3001\nChannel\u3092\u4ecb\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u901a\u4fe1\u3092\u884c\u3046\u3002\n\n\u3053\u3053\u3089\u8fba\u304c\u304a\u624b\u8efd\u5b9f\u88c5\u306e\u9650\u754c\u3067\u3059\u304b\u306d\u30fc\u3002\n\n```scm:Definitions\n(define-event engineOn)\n(define-event engineOff)\n\n(define-event on)\n(define-event off)\n(define-event resume)\n\n(define-event brake)\n(define-event accelerator)\n\n(define-event clearSpeed)\n(define-event recordSpeed)\n(define-event enableControl)\n(define-event disableControl)\n\n(define-event speed)\n\n(define-channel is-ss (x)\n  '((engineOn)(engineOff)))\n\n(define-channel is-sc (x)\n  '((speed)))\n\n(define-channel ss-cc (x)\n  '((engineOn)(engineOff)\n\t(on)(off)(resume)\n\t(brake)(accelerator)))\n\n(define-channel cc-sc (x)\n  '((clearSpeed)(recordSpeed)\n\t(enableControl)(disableControl)))\n\n(define-channel sc-th (x)\n  '((setThrottle)))\n\n```\n\n```scm:SENSORSCAN\n(define-process SENSORSCAN\n  (alt\n\t(? is-ss (x) (eqv? x 'engineOn) (! ss-cc ('engineOn) SENSORSCAN))\n\t(? is-ss (x) (eqv? x 'engineOff) (! ss-cc ('engineOff) SENSORSCAN))\n\t(! on (! ss-cc ('on) SENSORSCAN))\n\t(! off (! ss-cc ('off) SENSORSCAN))\n\t(! resume (! ss-cc ('resume) SENSORSCAN))\n\t(! brake (! ss-cc ('brake) SENSORSCAN))\n\t(! accelerator (! ss-cc ('accelerator) SENSORSCAN))))\n```\n\n```scm:INPUTSPEED\n(define-process INPUTSPEED\n  (! engineOn (! is-ss ('engineOn) CHECKSPEED)))\n\n(define-process CHECKSPEED\n  (alt\n\t(! speed (! is-sc ('speed) CHECKSPEED))\n\t(! engineOff (! is-ss ('engineOff) INPUTSPEED))))\n```\n\n```scm:CRUISECONTROLLER\n(define-process INACTIVE\n  (alt\n\t(? ss-cc (x)\n\t   (eqv? x 'engineOn)\n\t   (! cc-sc ('clearSpeed) ACTIVE))\n\t(? ss-cc (x)\n\t   (or (eqv? x 'off) (eqv? x 'brake) (eqv? x 'accelerator))\n\t   INACTIVE)))\n\t\t   \n(define-process ACTIVE\n  (alt\n\t(? ss-cc (x)\n\t   (eqv? x 'engineOff)\n\t   INACTIVE)\n\t(? ss-cc (x)\n\t   (eqv? x 'on)\n\t   (! cc-sc ('recordSpeed)\n\t\t  (! cc-sc ('enableControl)\n\t\t\t CRUISING)))\n\t(? ss-cc (x)\n\t   (or (eqv? x 'off) (eqv? x 'brake) (eqv? x 'accelerator))\n\t   ACTIVE)))\n\n(define-process CRUISING\n  (alt\n\t(? ss-cc (x)\n\t   (eqv? x 'engineOff)\n\t   INACTIVE)\n\t(? ss-cc (x)\n\t   (or (eqv? x 'off) (eqv? x 'brake) (eqv? x 'accelerator))\n\t   (! cc-sc ('disableControl)\n\t\t  STANDBY))\n\t(? ss-cc (x)\n\t   (eqv? x 'on)\n\t   (! cc-sc ('recordSpeed)\n\t\t  (! cc-sc ('enableControl)\n\t\t\t CRUISING)))))\n\n(define-process STANDBY\n  (alt\n\t(? ss-cc (x)\n\t   (eqv? x 'engineOff)\n\t   INACTIVE)\n\t(? ss-cc (x)\n\t   (eqv? x 'resume)\n\t   (! cc-sc ('enableControl)\n\t\t  CRUISING))\n\t(? ss-cc (x)\n\t   (eqv? x 'on)\n\t   (! cc-sc ('recordSpeed)\n\t\t  (! cc-sc ('enableControl)\n\t\t\t CRUISING)))\n\t(? ss-cc (x)\n\t   (or (eqv? x 'off) (eqv? x 'brake) (eqv? x 'accelerator))\n\t   STANDBY)))\n```\n\n```scm:SPEEDCONTROL\n(define-process DISABLED\n  (alt\n\t(? is-sc (x)\n\t   (eqv? x 'speed)\n\t   DISABLED)\n\t(? cc-sc (x)\n\t   (or (eqv? x 'clearSpeed) (eqv? x 'recordSpeed))\n\t   DISABLED)\n\t(? cc-sc (x)\n\t   (eqv? x 'enableControl)\n\t   ENABLED)))\n\n(define-process ENABLED\n  (alt\n\t(? is-sc (x)\n\t   (eqv? x 'speed)\n\t   (! sc-th ('setThrottle) ENABLED))\n\t(? cc-sc (x)\n\t   (or (eqv? x 'recordSpeed) (eqv? x 'enableControl))\n\t   ENABLED)\n\t(? cc-sc (x)\n\t   (eqv? x 'disableControl)\n\t   DISABLED)))\n```\n\n```scm:THROTTLE\n(define-process THROTTLE\n  (? sc-th (x)\n\t (eqv? x 'setThrottle)\n\t THROTTLE))\n```", "tags": ["Scheme"]}