{"context": "\u524d\u63d0\u3068\u3057\u3066React\u3092\u4f7f\u3063\u305f\u30da\u30fc\u30b8\u3092\u4f5c\u6210\u306e\u305f\u3081\u306e\u77e5\u8b58\u306f\u3042\u308b\u3082\u306e\u3068\u3059\u308b\u3002\u307e\u305fFlux\u306b\u3064\u3044\u3066\u306e\u89e3\u8aac\u306f\u3057\u306a\u3044\u3002\u305d\u306e\u3042\u305f\u308a\u306f webpack+React+material-ui\u306e\u74b0\u5883\u3092\u6700\u5c0f\u624b\u9806\u3067\u4f5c\u6210 \u3092\u53c2\u8003\u3002\n\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f7f\u3063\u3066\u8a71\u3092\u3059\u3059\u3081\u308b\u3002\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u3088\u304f\u3042\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3042\u308b\u3002\n\nentry.js\nimport  React from 'react';\nimport  ReactDOM from 'react-dom';\n\nvar Counter = React.createClass({\n    render: function(){\n        return (\n            <h1>Count = {this.props.count}</h1>\n        )\n    }\n})\n\nvar Plus1 = React.createClass({\n    render: function() {\n        return(<button onClick={() => this.props.onClick(1)}>plus 1</button>)\n    }\n})\n\nvar PlusForm = React.createClass({\n    getInitialState: function() {\n        return {\n            num: 0\n        }\n    },\n    render: function() {\n        return (\n            <div>\n                <div>\n                    <button onClick={() => this.props.onClick(this.state.num)}>plus {this.state.num}</button>\n                    <input type=\"text\" onChange={(ev)=>this.setState({num: parseInt(ev.target.value)||0})}/>\n                </div>\n\n            </div>\n        )\n\n    }\n})\n\nvar Reset = React.createClass({\n    render: function() {\n        return (\n            <div><button onClick={this.props.onClick}>Reset</button></div>\n        )\n    }\n\n})\n\nvar App = React.createClass({\n    getInitialState: function() {\n        return {\n            count: 0\n        }\n    },\n    addCounter: function(n) {\n        this.setState({count: this.state.count + n})\n    },\n    render: function() {\n        return (\n            <div>\n                <Counter count={this.state.count}/>\n                <Plus1  onClick={() => this.addCounter(1)}/>\n                <PlusForm onClick={(n) => this.addCounter(n)}/>\n                <Reset onClick={() => this.setState({count: 0})}/>\n            </div>\n        )\n    }\n})\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('content')\n);\n\n\n\n\nreact-redux \u306e\u5c0e\u5165\n\u3053\u308c\u3092redux\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u308b\u3002\n\u307e\u305aredux\u3068react-redux\u3092\u5c0e\u5165\u3059\u308b\u3002\nnpm install --save redux react-redux\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u306e\u3061\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3092\u884c\u3046\u3002\nimport { createStore } from 'redux'\nimport { connect, Provider } from 'react-redux'\n\nstate\u3068\u305d\u306e\u64cd\u4f5c\u3092\u884c\u3046\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3059\u308b\u3002\n// \u3053\u3053\u3067\u8fd4\u3055\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u72b6\u614b\u306e\u5909\u66f4\u3092\u8868\u3059\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u306a\u308b\n// type \u304c\u64cd\u4f5c\u306e\u5185\u5bb9 payload \u304c\u30d1\u30e9\u30e1\u30fc\u30bf\n// redux\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u3069\u3046\u66f8\u3044\u3066\u3082\u826f\u3044\u306e\u3060\u304c FSA \u3068\u3044\u3046\u6a19\u6e96\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u3002\nfunction addCounter(num) {\n    return {\n        type: 'ADD_COUNTER',\n        payload: num\n    }\n}\n\nfunction resetCounter(num) {\n    return {\n        type: 'RESET_COUNTER',\n    }\n}\n\nfunction setButton(num) {\n    return {\n        type: 'SET_BUTTON',\n        payload: num\n    }\n}\n\n// \u521d\u671f\u72b6\u614b\nconst initialState =  {\n    count: 0,\n    button: 0,\n}\n\nconst reducer = function(state = initialState, action) {\n    // action\u306b\u5fdc\u3058\u3066\u72b6\u614b\u3092\u3069\u3046\u5909\u66f4\u3059\u308b\u304b\u8a18\u8ff0\u3059\u308b\n    // \u5fc5\u305a\u5143\u306e state \u3092\u5143\u306b\u65b0\u3057\u3044 state \u3092\u4f5c\u6210\u3057\u3066\u8fd4\u3059\u5f62\u306b\u306a\u308b\n    switch(action.type) {\n        case \"ADD_COUNTER\":\n            return Object.assign({}, state, {\n                count: state.count + action.payload\n            })\n        case \"RESET_COUNTER\":\n            return Object.assign({}, state, {\n                count: 0\n            })\n        case 'SET_BUTTON':\n            return Object.assign({}, state, {\n                button: action.payload,\n            })\n        default:\n            return state;\n    }\n}\n\n// store \u304c\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u308b\nconst store = createStore(reducer);\n\n\nFSA: https://github.com/acdlite/flux-standard-action\n\n\n\u6b21\u306bReact\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068 Redux \u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7d99\u3050\u3002\n\n// store\u304c\u7ba1\u7406\u3059\u308bstate\u3092 props \u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u305f\u3081\u306e\u5909\u63db\u51fd\u6570\nfunction mapStateToProps(state, props) {\n    return state\n}\n\n// \u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3092\u4e00\u62ec\u3067\u4f5c\u6210\u3059\u308b\u3082\u306e\u3068\u601d\u3048\u3070\u826f\u3044\n// \u3053\u308c\u3082 props \u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\nfunction mapDispatchToProps(dispatch, props) {\n    return {\n        addCounter: function(n) {\n            dispatch(addCounter(n));\n        },\n        resetCounter: function() {\n            dispatch(resetCounter());\n        },\n        setButton: function(n) {\n            dispatch(setButton(n));\n        }\n    }\n\n}\n\n// connect\u51fd\u6570\u3067\u5143\u306eReact\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092redux\u306b\u5bfe\u5fdc\u3057\u305f\u3082\u306e\u306b\u5909\u63db\u3059\u308b\n// \u5143\u306e\u5909\u6570\u306b\u4ee3\u5165\u3057\u3066\u3044\u308b\u306e\u304c\u6c17\u6301\u3061\u60aa\u3051\u308c\u3070\u9069\u5f53\u306b\u5909\u66f4\u3059\u308b\nApp = connect(mapStateToProps,mapDispatchToProps)(App)\n\n// \u304a\u307e\u3058\u306a\u3044\u7684\u306a\u3082\u306e\u3002Provider\u3067\u53d7\u3051\u53d6\u3063\u305fstore\u3092\u6e21\u3059\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('content')\n);\n\n\u6b21\u306b\u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u66f8\u304d\u63db\u3048\u308b\u3002\nvar App = React.createClass({\n// \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u7ba1\u7406\u3057\u3066\u3044\u305f\u72b6\u614b\u306f\u524a\u9664\u3059\u308b\n// \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u5c5e\u3057\u3066\u3044\u305f\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3082\u524a\u9664\n// this.state.count\u3067\u53d6\u5f97\u3057\u3066\u3044\u305f\u3082\u306e\u3092 this.props.count\u3067\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u3059\u308b\n// \u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3082props\u304b\u3089\u53d6\u5f97\n    render: function() {\n        return (\n            <div>\n                <Counter count={this.props.count}/>\n                <Plus1 onClick={this.props.addCounter}/>\n                <PlusForm button={this.props.button}\n                     onClick={this.props.addCounter}\n                     onChange={this.props.setButton}/>\n                <Reset onClick={this.props.resetCounter} />\n            </div>\n        )\n    }\n})\n\n\u6b21\u306b\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3082\u66f8\u304d\u63db\u3048\nvar PlusForm = React.createClass({\n// \u540c\u69d8\u306bstate \u3068\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u7d4c\u7531\u3067\u53d7\u3051\u53d6\u308b\n    render: function() {\n        return (\n            <div>\n                <div>\n                    <button onClick={() => this.props.onClick(this.props.button)}>plus {this.props.button}</button>\n                    <input type=\"text\" onChange={(ev)=> this.props.onChange(parseInt(ev.target.value)||0)}/>\n                </div>\n\n            </div>\n        )\n\n    }\n})\n\n\u4ee5\u4e0a\u3067react-redux\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u305f\u3002\n\nredux-actions\nredux\u3067\u66f8\u3044\u3066\u3044\u308b\u3068\u5197\u9577\u306a\u90e8\u5206\u304c\u3042\u308b\u3002\u3053\u308c\u3092\u7c21\u7d20\u306b\u66f8\u304d\u63db\u3048\u308b\u305f\u3081\u306e\u4fbf\u5229\u30c4\u30fc\u30eb\u304c redux-actions \u3067\u3042\u308b\u3002\n\u5c0e\u5165\u306fnpm \u3067\u3044\u3064\u3082\u306e\u3088\u3046\u306b\u3002\nnpm install --save redux-actions\n\n\u6b21\u306b js\u30d5\u30a1\u30a4\u30eb\u306b\u8ffd\u52a0\nimport { createAction, handleActions } from 'redux-actions';\n\ncreateAction \u3092\u4f7f\u3046\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u66f8\u304d\u63db\u3048\u304c\u3067\u304d\u308b\u3002\n// function addCounter(num) {\n//    return {\n//       type: 'ADD_COUNTER',\n//        payload: num\n//    }\n// }\n\nvar addCounter = createAction('ADD_COUNTER');\n\nreducer\u3082\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7c21\u6f54\u306b\u306a\u308b\n\nconst reducer = handleActions({\n    [addCounter]: (state, action) => Object.assign({}, state, {\n        count: state.count + action.payload\n    }),\n    [resetCounter]: (state, action) => Object.assign({}, state, {\n        count: 0\n    }),\n    [setButton]: (state, action) => Object.assign({}, state, {\n        button: action.payload,\n    })},\n    initialState\n);\n\n\n\u53c2\u8003\n\n\nhttps://github.com/takaki/demo-react-redux \u4eca\u56de\u4f7f\u3063\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\nhttps://github.com/acdlite/redux-actions\nhttps://github.com/acdlite/flux-standard-action\n\n\n\u524d\u63d0\u3068\u3057\u3066React\u3092\u4f7f\u3063\u305f\u30da\u30fc\u30b8\u3092\u4f5c\u6210\u306e\u305f\u3081\u306e\u77e5\u8b58\u306f\u3042\u308b\u3082\u306e\u3068\u3059\u308b\u3002\u307e\u305fFlux\u306b\u3064\u3044\u3066\u306e\u89e3\u8aac\u306f\u3057\u306a\u3044\u3002\u305d\u306e\u3042\u305f\u308a\u306f [webpack+React+material-ui\u306e\u74b0\u5883\u3092\u6700\u5c0f\u624b\u9806\u3067\u4f5c\u6210](http://qiita.com/takaki@github/items/724d97a20d3ae194ded4) \u3092\u53c2\u8003\u3002\n\n\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f7f\u3063\u3066\u8a71\u3092\u3059\u3059\u3081\u308b\u3002\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u3088\u304f\u3042\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3042\u308b\u3002\n\n```javascript:entry.js\nimport  React from 'react';\nimport  ReactDOM from 'react-dom';\n\nvar Counter = React.createClass({\n    render: function(){\n        return (\n            <h1>Count = {this.props.count}</h1>\n        )\n    }\n})\n\nvar Plus1 = React.createClass({\n    render: function() {\n        return(<button onClick={() => this.props.onClick(1)}>plus 1</button>)\n    }\n})\n\nvar PlusForm = React.createClass({\n    getInitialState: function() {\n        return {\n            num: 0\n        }\n    },\n    render: function() {\n        return (\n            <div>\n                <div>\n                    <button onClick={() => this.props.onClick(this.state.num)}>plus {this.state.num}</button>\n                    <input type=\"text\" onChange={(ev)=>this.setState({num: parseInt(ev.target.value)||0})}/>\n                </div>\n\n            </div>\n        )\n\n    }\n})\n\nvar Reset = React.createClass({\n    render: function() {\n        return (\n            <div><button onClick={this.props.onClick}>Reset</button></div>\n        )\n    }\n\n})\n\nvar App = React.createClass({\n    getInitialState: function() {\n        return {\n            count: 0\n        }\n    },\n    addCounter: function(n) {\n        this.setState({count: this.state.count + n})\n    },\n    render: function() {\n        return (\n            <div>\n                <Counter count={this.state.count}/>\n                <Plus1  onClick={() => this.addCounter(1)}/>\n                <PlusForm onClick={(n) => this.addCounter(n)}/>\n                <Reset onClick={() => this.setState({count: 0})}/>\n            </div>\n        )\n    }\n})\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('content')\n);\n\n```\n\n## react-redux \u306e\u5c0e\u5165\n\n\u3053\u308c\u3092redux\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u308b\u3002\n\n\u307e\u305aredux\u3068react-redux\u3092\u5c0e\u5165\u3059\u308b\u3002\n\n```\nnpm install --save redux react-redux\n```\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u306e\u3061\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3092\u884c\u3046\u3002\n\n```javascript\nimport { createStore } from 'redux'\nimport { connect, Provider } from 'react-redux'\n```\n\nstate\u3068\u305d\u306e\u64cd\u4f5c\u3092\u884c\u3046\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n```javascript\n// \u3053\u3053\u3067\u8fd4\u3055\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u72b6\u614b\u306e\u5909\u66f4\u3092\u8868\u3059\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u306a\u308b\n// type \u304c\u64cd\u4f5c\u306e\u5185\u5bb9 payload \u304c\u30d1\u30e9\u30e1\u30fc\u30bf\n// redux\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u3069\u3046\u66f8\u3044\u3066\u3082\u826f\u3044\u306e\u3060\u304c FSA \u3068\u3044\u3046\u6a19\u6e96\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u3002\nfunction addCounter(num) {\n    return {\n        type: 'ADD_COUNTER',\n        payload: num\n    }\n}\n\nfunction resetCounter(num) {\n    return {\n        type: 'RESET_COUNTER',\n    }\n}\n\nfunction setButton(num) {\n    return {\n        type: 'SET_BUTTON',\n        payload: num\n    }\n}\n\n// \u521d\u671f\u72b6\u614b\nconst initialState =  {\n    count: 0,\n    button: 0,\n}\n\nconst reducer = function(state = initialState, action) {\n    // action\u306b\u5fdc\u3058\u3066\u72b6\u614b\u3092\u3069\u3046\u5909\u66f4\u3059\u308b\u304b\u8a18\u8ff0\u3059\u308b\n    // \u5fc5\u305a\u5143\u306e state \u3092\u5143\u306b\u65b0\u3057\u3044 state \u3092\u4f5c\u6210\u3057\u3066\u8fd4\u3059\u5f62\u306b\u306a\u308b\n    switch(action.type) {\n        case \"ADD_COUNTER\":\n            return Object.assign({}, state, {\n                count: state.count + action.payload\n            })\n        case \"RESET_COUNTER\":\n            return Object.assign({}, state, {\n                count: 0\n            })\n        case 'SET_BUTTON':\n            return Object.assign({}, state, {\n                button: action.payload,\n            })\n        default:\n            return state;\n    }\n}\n\n// store \u304c\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u308b\nconst store = createStore(reducer);\n```\n\n* FSA: https://github.com/acdlite/flux-standard-action\n\n\u6b21\u306bReact\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068 Redux \u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7d99\u3050\u3002\n\n```js\n\n// store\u304c\u7ba1\u7406\u3059\u308bstate\u3092 props \u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u305f\u3081\u306e\u5909\u63db\u51fd\u6570\nfunction mapStateToProps(state, props) {\n    return state\n}\n\n// \u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3092\u4e00\u62ec\u3067\u4f5c\u6210\u3059\u308b\u3082\u306e\u3068\u601d\u3048\u3070\u826f\u3044\n// \u3053\u308c\u3082 props \u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\nfunction mapDispatchToProps(dispatch, props) {\n    return {\n        addCounter: function(n) {\n            dispatch(addCounter(n));\n        },\n        resetCounter: function() {\n            dispatch(resetCounter());\n        },\n        setButton: function(n) {\n            dispatch(setButton(n));\n        }\n    }\n\n}\n\n// connect\u51fd\u6570\u3067\u5143\u306eReact\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092redux\u306b\u5bfe\u5fdc\u3057\u305f\u3082\u306e\u306b\u5909\u63db\u3059\u308b\n// \u5143\u306e\u5909\u6570\u306b\u4ee3\u5165\u3057\u3066\u3044\u308b\u306e\u304c\u6c17\u6301\u3061\u60aa\u3051\u308c\u3070\u9069\u5f53\u306b\u5909\u66f4\u3059\u308b\nApp = connect(mapStateToProps,mapDispatchToProps)(App)\n\n// \u304a\u307e\u3058\u306a\u3044\u7684\u306a\u3082\u306e\u3002Provider\u3067\u53d7\u3051\u53d6\u3063\u305fstore\u3092\u6e21\u3059\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('content')\n);\n```\n\n\u6b21\u306b\u5404\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u66f8\u304d\u63db\u3048\u308b\u3002\n\n```js\nvar App = React.createClass({\n// \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u7ba1\u7406\u3057\u3066\u3044\u305f\u72b6\u614b\u306f\u524a\u9664\u3059\u308b\n// \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u5c5e\u3057\u3066\u3044\u305f\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3082\u524a\u9664\n// this.state.count\u3067\u53d6\u5f97\u3057\u3066\u3044\u305f\u3082\u306e\u3092 this.props.count\u3067\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u3059\u308b\n// \u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3082props\u304b\u3089\u53d6\u5f97\n    render: function() {\n        return (\n            <div>\n                <Counter count={this.props.count}/>\n                <Plus1 onClick={this.props.addCounter}/>\n                <PlusForm button={this.props.button}\n                     onClick={this.props.addCounter}\n                     onChange={this.props.setButton}/>\n                <Reset onClick={this.props.resetCounter} />\n            </div>\n        )\n    }\n})\n```\n\n\u6b21\u306b\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3082\u66f8\u304d\u63db\u3048\n\n```js\nvar PlusForm = React.createClass({\n// \u540c\u69d8\u306bstate \u3068\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u7d4c\u7531\u3067\u53d7\u3051\u53d6\u308b\n    render: function() {\n        return (\n            <div>\n                <div>\n                    <button onClick={() => this.props.onClick(this.props.button)}>plus {this.props.button}</button>\n                    <input type=\"text\" onChange={(ev)=> this.props.onChange(parseInt(ev.target.value)||0)}/>\n                </div>\n\n            </div>\n        )\n\n    }\n})\n```\n\n\u4ee5\u4e0a\u3067react-redux\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u305f\u3002\n\n## redux-actions\n\nredux\u3067\u66f8\u3044\u3066\u3044\u308b\u3068\u5197\u9577\u306a\u90e8\u5206\u304c\u3042\u308b\u3002\u3053\u308c\u3092\u7c21\u7d20\u306b\u66f8\u304d\u63db\u3048\u308b\u305f\u3081\u306e\u4fbf\u5229\u30c4\u30fc\u30eb\u304c redux-actions \u3067\u3042\u308b\u3002\n\n\u5c0e\u5165\u306fnpm \u3067\u3044\u3064\u3082\u306e\u3088\u3046\u306b\u3002\n\n```bash\nnpm install --save redux-actions\n```\n\n\u6b21\u306b js\u30d5\u30a1\u30a4\u30eb\u306b\u8ffd\u52a0\n\n```js\nimport { createAction, handleActions } from 'redux-actions';\n```\n\ncreateAction \u3092\u4f7f\u3046\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u66f8\u304d\u63db\u3048\u304c\u3067\u304d\u308b\u3002\n\n```js\n// function addCounter(num) {\n//    return {\n//       type: 'ADD_COUNTER',\n//        payload: num\n//    }\n// }\n\nvar addCounter = createAction('ADD_COUNTER');\n```\n\nreducer\u3082\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7c21\u6f54\u306b\u306a\u308b\n\n```js\n\nconst reducer = handleActions({\n    [addCounter]: (state, action) => Object.assign({}, state, {\n        count: state.count + action.payload\n    }),\n    [resetCounter]: (state, action) => Object.assign({}, state, {\n        count: 0\n    }),\n    [setButton]: (state, action) => Object.assign({}, state, {\n        button: action.payload,\n    })},\n    initialState\n);\n```\n## \u53c2\u8003\n* https://github.com/takaki/demo-react-redux \u4eca\u56de\u4f7f\u3063\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\n* https://github.com/acdlite/redux-actions\n* https://github.com/acdlite/flux-standard-action\n", "tags": ["JavaScript", "React", "flux", "redux"]}