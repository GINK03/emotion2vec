{"context": " More than 1 year has passed since last update.Objective-C \u306e\u30e9\u30f3\u30bf\u30a4\u30e0\u3092\u5229\u7528\u3057\u3066\u3001\u30af\u30e9\u30b9\uff0f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6301\u3064\u30d7\u30ed\u30d1\u30c6\u30a3\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\n\u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u30d8\u30c3\u30c0\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3001\n#import \"objc/runtime.h\"\n\n\u307e\u305a\u3001objc_property_t \u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u60c5\u5831\u304b\u3089\u578b\u540d\u3092\u53d6\u308a\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nstatic const char * getPropertyType(objc_property_t property) {\n    const char *attributes = property_getAttributes(property);\n    char buffer[1 + strlen(attributes)];\n    strcpy(buffer, attributes);\n    char *state = buffer, *attribute;\n    while ((attribute = strsep(&state, \",\")) != NULL) {\n        if (attribute[0] == 'T' && attribute[1] != '@') {\n            return (const char *)[[NSData dataWithBytes:(attribute + 1) length:strlen(attribute) - 1] bytes];\n        }        \n        else if (attribute[0] == 'T' && attribute[1] == '@' && strlen(attribute) == 2) {\n            return \"id\";\n        }\n        else if (attribute[0] == 'T' && attribute[1] == '@') {\n            return (const char *)[[NSData dataWithBytes:(attribute + 3) length:strlen(attribute) - 4] bytes];\n        }\n    }\n    return \"\";\n}\n\n\u3067\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3001\u30ad\u30fc\u3068\u3057\u3066\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3001\u5024\u3068\u3057\u3066\u578b\u540d\u3092\u6301\u3064 NSDictionary \u578b\u3067\u30d7\u30ed\u30d1\u30c6\u30a3\u4e00\u89a7\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n- (NSDictionary *)properties {\n    unsigned int outCount, i;\n    objc_property_t *props = class_copyPropertyList([self class], &outCount);\n    NSMutableDictionary *dic = [NSMutableDictionary dictionaryWithCapacity:0];\n    for(i = 0; i < outCount; i++) {\n        objc_property_t property = props[i];\n        const char *propName = property_getName(property);\n        if(propName) {\n            const char *propType = getPropertyType(property);\n            NSString *propertyName = [NSString stringWithCString:propName];\n            NSString *propertyType = [NSString stringWithCString:propType];\n            [dic setObject:propertyType forKey:propertyName];\n        }\n    }\n    free(props);\n\n    return dic;\n}\n\nObjective-C \u306e\u30e9\u30f3\u30bf\u30a4\u30e0\u3092\u5229\u7528\u3057\u3066\u3001\u30af\u30e9\u30b9\uff0f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6301\u3064\u30d7\u30ed\u30d1\u30c6\u30a3\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\n\n\u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u30d8\u30c3\u30c0\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3001\n\n    #import \"objc/runtime.h\"\n\n\u307e\u305a\u3001objc_property_t \u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u60c5\u5831\u304b\u3089\u578b\u540d\u3092\u53d6\u308a\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\tstatic const char * getPropertyType(objc_property_t property) {\n\t    const char *attributes = property_getAttributes(property);\n\t    char buffer[1 + strlen(attributes)];\n\t    strcpy(buffer, attributes);\n\t    char *state = buffer, *attribute;\n\t    while ((attribute = strsep(&state, \",\")) != NULL) {\n\t        if (attribute[0] == 'T' && attribute[1] != '@') {\n\t            return (const char *)[[NSData dataWithBytes:(attribute + 1) length:strlen(attribute) - 1] bytes];\n\t        }        \n\t        else if (attribute[0] == 'T' && attribute[1] == '@' && strlen(attribute) == 2) {\n\t            return \"id\";\n\t        }\n\t        else if (attribute[0] == 'T' && attribute[1] == '@') {\n\t            return (const char *)[[NSData dataWithBytes:(attribute + 3) length:strlen(attribute) - 4] bytes];\n\t        }\n\t    }\n\t    return \"\";\n\t}\n\n\u3067\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3001\u30ad\u30fc\u3068\u3057\u3066\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3001\u5024\u3068\u3057\u3066\u578b\u540d\u3092\u6301\u3064 NSDictionary \u578b\u3067\u30d7\u30ed\u30d1\u30c6\u30a3\u4e00\u89a7\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\n\t- (NSDictionary *)properties {\n\t    unsigned int outCount, i;\n\t    objc_property_t *props = class_copyPropertyList([self class], &outCount);\n\t    NSMutableDictionary *dic = [NSMutableDictionary dictionaryWithCapacity:0];\n\t    for(i = 0; i < outCount; i++) {\n\t        objc_property_t property = props[i];\n\t        const char *propName = property_getName(property);\n\t        if(propName) {\n\t            const char *propType = getPropertyType(property);\n\t            NSString *propertyName = [NSString stringWithCString:propName];\n\t            NSString *propertyType = [NSString stringWithCString:propType];\n\t            [dic setObject:propertyType forKey:propertyName];\n\t        }\n\t    }\n\t    free(props);\n\t    \n\t    return dic;\n\t}\n\n", "tags": ["Objective-C", "iPhone", "iOS", "iPad"]}