{"context": " More than 1 year has passed since last update.\u524d\u56de\u306e\u8a18\u4e8b\u3001\u30b9\u30bf\u30d0\u306eTwitter\u30c7\u30fc\u30bf\u3092python\u3067\u5927\u91cf\u306b\u53d6\u5f97\u3057\u3001\u30c7\u30fc\u30bf\u5206\u6790\u3092\u8a66\u307f\u308b \u305d\u306e\uff11\u3067\u306f\u30c4\u30a4\u30c3\u30bf\u30fc\u306eREST APIs\u3092\u4f7f\u3063\u3066\u30c4\u30a4\u30fc\u30c8\u672c\u6587\u306b\u300c\u30b9\u30bf\u30d0\u300d\u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u30c4\u30a4\u30fc\u30c8\u3092\u5927\u91cf\u306b\u53d6\u5f97\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3084\u308a\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u305d\u306e\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u898b\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u305d\u306e\uff11\uff1aTwitter REST APIs\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u8fbc\u307fmongoDB\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\nhttp://qiita.com/kenmatsu4/items/23768cbe32fe381d54a2\n\u305d\u306e\uff12\uff1a\u53d6\u5f97\u3057\u305fTwitter\u30c7\u30fc\u30bf\u304b\u3089\u30b9\u30d1\u30e0\u306e\u5206\u96e2\uff08\u4eca\u56de\uff09\nhttp://qiita.com/kenmatsu4/items/8d88e0992ca6e443f446\n\u305d\u306e\uff13\uff1a\u3042\u308b\u65e5\u3092\u5883\u306b\u30c4\u30a4\u30fc\u30c8\u6570\u304c\u5897\u3048\u305f\u308f\u3051\u306f\uff1f\nhttp://qiita.com/kenmatsu4/items/02034e5688cc186f224b\n\u305d\u306e\uff14\uff1aTwitter\u306b\u3072\u305d\u3080\u4f4d\u7f6e\u60c5\u5831\u306e\u8996\u899a\u5316\nhttp://qiita.com/kenmatsu4/items/114f3cff815aa5037535\n\n\u307e\u305f\u3001\u524d\u56de\u304b\u3089\u5c11\u3057\u8ffd\u52a0\u3067\u30c7\u30fc\u30bf\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f\u306e\u3067\u30c4\u30a4\u30fc\u30c8\u7dcf\u4ef6\u6570\u306f30\u4e07\u4ef6\u5f31\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nTweet\u30c7\u30fc\u30bf\u6982\u8981\n\n\u3000\u53d6\u5f97\u7dcf\u6570\n\u3000\u3000296,057\u4ef6\n\u3000\u53d6\u5f97\u30c7\u30fc\u30bf\u306e\u671f\u9593\n\u3000\u30002015-03-11 04:43:42 \u304b\u3089 2015-03-22 21:41:14 \u307e\u3067\n\u30001\u79d2\u3042\u305f\u308a\u30c4\u30a4\u30fc\u30c8\u6570\n\u3000\u30003.416 tweet/sec\n\n\u307e\u305a\u306f\u306e\u7d0430\u4e07\u4ef6\u306e\u30c4\u30a4\u30fc\u30c8\u60c5\u5831\u304c\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u304b\u898b\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u8a18\u4e8b\u3067\u4f7f\u3063\u3066\u3044\u308bpython\u30b3\u30fc\u30c9\u306e\u4e00\u5f0f\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\n\n\u6642\u7cfb\u5217\u306e\u30c4\u30a4\u30fc\u30c8\u6570\u63a8\u79fb\n\u6642\u7cfb\u5217\u3067\u306e\u30c4\u30a4\u30fc\u30c8\u6570\u306e\u30b0\u30e9\u30d5\u3067\u3059\u3002\n\n\u57fa\u672c\u7684\u306b\u306f\u65e5\u4e2d\u591a\u304f\u30c4\u30a4\u30fc\u30c8\u3055\u308c\u3001\u30ea\u30c4\u30a4\u30fc\u30c8\u3092\u9664\u304f\u901a\u5e38\u30c4\u30a4\u30fc\u30c8\u304c\uff11\u6642\u9593\u5f53\u305f\u308a1000\u4ef6\u5f37\u6295\u7a3f\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001\u7570\u5e38\u306a4\u3064\u306e\u30b9\u30d1\u30a4\u30af\u304c\n\u30003/17 20\u6642\u9803\n\u30003/18 22\u6642\u9803\n\u30003/19 18\u6642\u9803\n\u30003/21 17\u6642\u9803\n\u306b\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u7279\u306b\u5f8c\u308d\u306e\uff13\u3064\u306f\u98db\u3073\u629c\u3051\u3066\u307e\u3059\u3002\n\u6b21\u306e\u9805\u3067\u8abf\u3079\u3066\u3044\u304d\u307e\u3059\u304c\u3001\u3069\u3046\u3084\u3089\u30b9\u30d1\u30e0\u30c4\u30a4\u30fc\u30c8\u306b\u3088\u308b\u3082\u306e\u306e\u3088\u3046\u3067\u3059\u306e\u3067\u3001\u3053\u308c\u3092\u5206\u96e2\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u30b9\u30d1\u30e0\u306e\u5206\u96e2\n\u307e\u305a\u306f\uff11\u6642\u9593\u5f53\u305f\u308a540\u56de\uff081\u5206\u306b9\u56de\uff09\u4ee5\u4e0a\u30ea\u30c4\u30a4\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u304c\u3001\u8ab0\u306e\u30c4\u30a4\u30fc\u30c8\u306b\u5bfe\u3059\u308b\u30ea\u30c4\u30a4\u30fc\u30c8\u306a\u306e\u304b\u3092\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n# \uff11\u6642\u9593\u306e\u9593\u306blimit\u306b\u6307\u5b9a\u3057\u305f\u6570\u4ee5\u4e0a\u306b\u30ea\u30c4\u30a4\u30fc\u30c8\u3055\u308c\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u8868\u793a\u3059\u308b\ndef select_outlier_retweet_num_per_hour(from_str_datetime_jp, limit=120):\n    '''\n    from_str_datetime_jp: \uff11\u6642\u9593\u67a0\u306e\u958b\u59cb\u6642\u523b\n    limit: \u3053\u306e\u6570\u3092\u8d85\u3048\u3066\u30ea\u30c4\u30a4\u30fc\u30c8\u3055\u308c\u305f\u3082\u306e\u3092\u691c\u51fa\u3059\u308b\n    e.g. select_outlier_tweet_num_per_hour(\"2015-03-18 22:00:00\")\n    '''\n    result_list = []\n    from_date = str_to_date_jp_utc(from_str_datetime_jp)\n    to_date = str_to_date_jp_utc(from_str_datetime_jp) + datetime.timedelta(hours=1) \n\n    for d in tweetdata.find({'retweeted_status':{\"$ne\": None},'created_datetime':{\"$gte\":from_date, \"$lt\":to_date}},\\\n                            {'user':1,'text':1,'entities':1, 'created_at':1, 'id':1}):\n        mensioned_username = \"\"\n        if len(d['entities']['user_mentions'])!=0:\n            mensioned_username = d['entities']['user_mentions'][0]['screen_name']\n\n        result_list.append({\"created_at\":utc_str_to_jp_str(d['created_at']),\\\n                            \"screen_name\":d['user']['screen_name'],\\\n                            \"referred_name\":mensioned_username,\\\n                            \"text\":d['text'].replace('\\n',' ')\\\n                            })\n\n    name_dict = defaultdict(int)\n    for r in result_list:\n        name_dict[r['referred_name']] += 1  \n\n    s = sorted(name_dict.iteritems(),key=lambda (k,v): v,reverse=True) # \u30ea\u30c4\u30a4\u30fc\u30c8\u56de\u6570\u3067\u30bd\u30fc\u30c8\n    return s[0:int(np.sum(map(lambda (k,v): 1 if v>limit else 0 ,s)))] # \u30ea\u30c4\u30a4\u30fc\u30c8\u5143\u30e6\u30fc\u30b6\u30fc\u540d, \u30ea\u30c4\u30a4\u30fc\u30c8\u56de\u6570(limit\u3092\u8d85\u3048\u305f\u3082\u306e)\n\n\nstart_date = str_to_date_jp_utc(\"2015-03-10 19:00:00\")\nto_date    = str_to_date_jp_utc(\"2015-03-22 22:00:00\")\nd_diff = (to_date - start_date)\nd_hours = d_diff.days * 24 + d_diff.seconds/float(3600)\n\nfor i in range(int(d_hours)):\n    d = (start_date + datetime.timedelta(hours=i)).strftime(\"%Y-%m-%d %H:%M:%S\")\n    result = select_outlier_retweet_num_per_hour(d, limit=540)\n    if len(result) > 0:\n        print d, result\n\n\u7d50\u679c\u304c\u3053\u308c\u3067\u3059\u3002\n\noutput\n2015-03-11 20:00:00 [(u'NewsGiga', 972)]\n2015-03-11 21:00:00 [(u'NewsGiga', 863)]\n2015-03-17 20:00:00 [(u'r***********', 773)]\n2015-03-18 22:00:00 [(u'g*********', 3666)]\n2015-03-18 23:00:00 [(u'e**********', 3882)]\n2015-03-19 18:00:00 [(u'y**********', 3771)]\n2015-03-21 17:00:00 [(u'm***********', 4032)]\n\n\n\u203b\u30b9\u30d1\u30e0\u30a2\u30ab\u30a6\u30f3\u30c8\u306f\u4f0f\u5b57\u306b\u3057\u307e\u3057\u305f\u3002\nNewsGiga\u3055\u3093\u306e\u30c4\u30a4\u30fc\u30c8\u4ee5\u5916\u306f\u5185\u5bb9\u3092\u898b\u308b\u306b\u3001\u5168\u3066\u30b9\u30d1\u30e0\u3060\u3063\u305f\u306e\u3067\u3001spam\u30d5\u30e9\u30b0\u3092\u5404\u30ec\u30b3\u30fc\u30c9\u306b\u7acb\u3066\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u9006\u306bNewsGiga\u3055\u3093\u306e\u8a18\u4e8b\u306f BUZZ\u3063\u3066\u308b\u306e\u3067\u4f55\u304c\u8a71\u984c\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u6c17\u306b\u306a\u3063\u3066\u898b\u3066\u8abf\u3079\u3066\u307f\u308b\u3068\u3053\u306e\u8a18\u4e8b\u3067\u3057\u305f\u3002\u30b9\u30bf\u30d0\u306e\u96f0\u56f2\u6c17\u304c\u597d\u304d\u3060\u3051\u3069\u30b3\u30fc\u30d2\u30fc\u304c\u82e6\u624b\u3063\u3066\u3044\u3046\u4eba\u304c\u7d50\u69cb\u591a\u3044\u306e\u3067\u3059\u306d\uff01\n\n\u6b21\u306b\u3001\u3053\u306e\u30b9\u30d1\u30e0\u30a2\u30ab\u30a6\u30f3\u30c8\u3078\u306e\u30ea\u30c4\u30a4\u30fc\u30c8\u3068\u3001\u3053\u306e\u30ea\u30c4\u30a4\u30fc\u30c8\u3092\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u306e\u30c4\u30a4\u30fc\u30c8\u3092spam\u3068\u5224\u65ad\u3057\u3001spam\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u3066\u5206\u5225\u3057\u307e\u3059\u3002\n\n# spam\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30c4\u30a4\u30fc\u30c8\u306bspam\u30d5\u30e9\u30b0\u3092\u4ed8\u4e0e\u3059\u308b\n\n#  08_spam_detector.py\u3067\u3042\u3076\u308a\u51fa\u3057\u305f\u30b9\u30d1\u30e0\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30ea\u30b9\u30c8\nspam_list = ['r***********', 'g*********', 'e**********', 'y**********', 'm***********']\n\n\ncount = 0\nretweeted_name = \"\"\n\nfor d in tweetdata.find({'retweeted_status':{\"$ne\": None}}):  # \u30ea\u30c4\u30a4\u30fc\u30c8\u30c7\u30fc\u30bf\u4e00\u5f0f\u3092\u53d6\u5f97\n    try:\n        retweeted_name = d['entities']['user_mentions'][0]['screen_name']\n    except:\n        count += 1\n        pattern = r\".*@([0-9a-zA-Z_]*).*\"\n        ite = re.finditer(pattern, d['text'])\n        for it in ite:\n            retweeted_name = it.group(1)\n            break\n\n    if retweeted_name in spam_list:  # \u30b9\u30d1\u30e0\u30a2\u30ab\u30a6\u30f3\u30c8\u3078\u306e\u30ea\u30c4\u30a4\u30fc\u30c8\u3060\u3063\u305f\u3089\n        # \u30b9\u30d1\u30e0\u30a2\u30ab\u30a6\u30f3\u30c8\u3078\u306e\u30ea\u30c4\u30a4\u30fc\u30c8\u306bspam\u30d5\u30e9\u30b0\u3092\u4ed8\u4e0e\n        tweetdata.update({'_id' : d['_id']},{'$set': {'spam':True}})\n        # \u30b9\u30d1\u30e0\u30c4\u30a4\u30fc\u30c8\u3092\u3057\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u3082\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u5165\u308a\n        spam_twitter.add(d['user']['screen_name'])\n\nprint '%d\u4ef6\u306e\u30ea\u30c4\u30a4\u30fc\u30c8\u3092\u30b9\u30d1\u30e0\u306b\u5206\u985e\u3057\u307e\u3057\u305f'%count\n\n# \u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u5165\u308a\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u30c4\u30a4\u30fc\u30c8\u3092\u30b9\u30d1\u30e0\u306b\u5206\u985e\ncount = 0\nfor d in tweetdata.find({},{'user.screen_name':1}):\n    sc_name = d['user']['screen_name'] \n    if sc_name in spam_twitter:\n        count += 1\n        tweetdata.update({'_id' : d['_id']},{'$set': {'spam':True}})\n\nprint \"%d\u4ef6\u306e\u30c4\u30a4\u30fc\u30c8\u3092\u30b9\u30d1\u30e0\u306b\u5206\u985e\u3057\u307e\u3057\u305f\"\n\n\u30b9\u30d1\u30e0\u3092\u5206\u985e\u3067\u304d\u305f\u306e\u3067\u3001\u6642\u7cfb\u5217\u30c4\u30a4\u30fc\u30c8\u6570\u30c7\u30fc\u30bf\u3092\u518d\u5ea6\u8868\u793a\u3055\u305b\u307e\u3059\u3002\n\u305f\u3060\u3001\u4eba\u306e\u76ee\u3067\u30b9\u30d1\u30e0\u3092\u898b\u5206\u3051\u308b\u5f62\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u4eca\u5f8c\u306f\u3053\u3053\u306e\u81ea\u52d5\u691c\u51fa\u3082\u8ab2\u984c\u3067\u3059\u3002\n# \u6642\u7cfb\u5217\u30c4\u30a4\u30fc\u30c8\u6570\u30c7\u30fc\u30bf\u306e\u8868\u793a\ndate_dict = defaultdict(int)\nret_date_dict = defaultdict(int)\nnorm_date_dict = defaultdict(int)\nspam_dict = defaultdict(int)\nnot_spam_norm_dict = defaultdict(int)\nnot_spam_ret_dict = defaultdict(int)\n\nfor d in tweetdata.find({},{'_id':1, 'created_datetime':1,'retweeted_status':1,'spam':1}):\n    str_date = date_to_Japan_time(d['created_datetime']).strftime('%Y\\t%m/%d %H %a') \n    date_dict[str_date] += 1\n\n    # spam\u306e\u9664\u53bb\n    if ('spam' in d) and (d['spam'] == True):\n        spam_dict[str_date] += 1\n    else:\n        spam_dict[str_date] += 0\n        # spam\u3067\u306a\u3044\u3082\u306e\u306eRetweet\u6570\u306e\u30ab\u30a6\u30f3\u30c8\n        if 'retweeted_status' not in d:\n            not_spam_ret_dict[str_date]  += 0\n            not_spam_norm_dict[str_date] += 1\n        elif obj_nullcheck(d['retweeted_status']):\n            not_spam_ret_dict[str_date]  += 1\n            not_spam_norm_dict[str_date] += 0\n        else:\n            not_spam_ret_dict[str_date]  += 0\n            not_spam_norm_dict[str_date] += 1\n\n    # Retweet\u6570\u306e\u30ab\u30a6\u30f3\u30c8\n    if 'retweeted_status' not in d:\n        ret_date_dict[str_date]  += 0\n        norm_date_dict[str_date] += 1\n    elif obj_nullcheck(d['retweeted_status']):\n        ret_date_dict[str_date]  += 1\n        norm_date_dict[str_date] += 0\n    else:\n        ret_date_dict[str_date]  += 0\n        norm_date_dict[str_date] += 1\n\n\nprint \"\u65e5\u4ed8\" + \"\\t\\t\\t\" + \"#ALL\" + \"\\t\" + \"#NotRT\" + \"\\t\" + \"#RT\" + \"\\t\" \"#spam\" + \"\\t\" \"#NotRT(exclude spam)\" + \"\\t\" + \"#RT(exclude spam)\"\nkeys = date_dict.keys()\nkeys.sort()\nfor k in keys:\n    print k  + \"\\t\" +  str(date_dict[k]) + \"\\t\" +  str(norm_date_dict[k]) + \"\\t\" +  str(ret_date_dict[k]) \\\n                    + \"\\t\" +  str(spam_dict[k])+ \"\\t\" +  str(not_spam_norm_dict[k]) + \"\\t\" +  str(not_spam_ret_dict[k])\n\n\n\u5916\u308c\u5024\u306e\u30b9\u30d1\u30a4\u30af\u304c\u306a\u304f\u306a\u308a\u304d\u308c\u3044\u306b\u306a\u308a\u307e\u3057\u305f \n11\u65e5\u306b\u3061\u3087\u3063\u3068\u4e0a\u306b\u51fa\u3066\u308b\u306e\u306f\u5148\u307b\u3069\u306eNewsGiga\u3055\u3093\u3078\u306e\u30ea\u30c4\u30a4\u30fc\u30c8\u3067\u3059\u306d\u3002\n\n\u3060\u3044\u305f\u3044\u3001\uff11\u6642\u9593\u5f53\u305f\u308a\u30c4\u30a4\u30fc\u30c8\u6570\u304c1000\u4ef6\u3092\u8d8a\u3048\u3066\u304f\u308b\u306e\u304c\u304a\u663c\u306e\uff11\uff12\u6642\u304b\u3089\u3002\u305d\u3053\u304b\u308922\u6642\u304f\u3089\u3044\u307e\u30671000\u4ef6\u53f0\u3092\u30ad\u30fc\u30d7\u3057\u3066\u305d\u306e\u5f8c\u6df1\u591c\u65e9\u671d\u306b\u306a\u308b\u3068\u4e0b\u304c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u3082\u3057\u30d7\u30ed\u30e2\u30fc\u30b7\u30e7\u30f3\u3092\u304b\u3051\u308b\u306a\u3089\u3053\u306e12\u6642\u301c22\u6642\u306e\u9593\u304c\u52b9\u679c\u7684\u306a\u611f\u3058\u304c\u3057\u307e\u3059\u3002\n\u6b21\u56de\u306f\u30c4\u30a4\u30fc\u30c8\u672c\u6587\u306b\u5bfe\u3057\u3066\u5f62\u614b\u7d20\u89e3\u6790\u3092\u639b\u3051\u3066\u5358\u8a9e\u3092\u5206\u89e3\u3057\u305f\u308a\u3001\u611f\u60c5\u5206\u6790\u3092\u639b\u3051\u3066\u307f\u305f\u308a\u3092\u3084\u3063\u3066\u307f\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\u524d\u56de\u306e\u8a18\u4e8b\u3001[\u30b9\u30bf\u30d0\u306eTwitter\u30c7\u30fc\u30bf\u3092python\u3067\u5927\u91cf\u306b\u53d6\u5f97\u3057\u3001\u30c7\u30fc\u30bf\u5206\u6790\u3092\u8a66\u307f\u308b \u305d\u306e\uff11](http://qiita.com/kenmatsu4/items/23768cbe32fe381d54a2)\u3067\u306f\u30c4\u30a4\u30c3\u30bf\u30fc\u306eREST APIs\u3092\u4f7f\u3063\u3066\u30c4\u30a4\u30fc\u30c8\u672c\u6587\u306b\u300c\u30b9\u30bf\u30d0\u300d\u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u30c4\u30a4\u30fc\u30c8\u3092\u5927\u91cf\u306b\u53d6\u5f97\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3084\u308a\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u305d\u306e\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u898b\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n***\n\u305d\u306e\uff11\uff1aTwitter REST APIs\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u8fbc\u307fmongoDB\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\nhttp://qiita.com/kenmatsu4/items/23768cbe32fe381d54a2\n\n\u305d\u306e\uff12\uff1a\u53d6\u5f97\u3057\u305fTwitter\u30c7\u30fc\u30bf\u304b\u3089\u30b9\u30d1\u30e0\u306e\u5206\u96e2\uff08\u4eca\u56de\uff09\nhttp://qiita.com/kenmatsu4/items/8d88e0992ca6e443f446\n\n\u305d\u306e\uff13\uff1a\u3042\u308b\u65e5\u3092\u5883\u306b\u30c4\u30a4\u30fc\u30c8\u6570\u304c\u5897\u3048\u305f\u308f\u3051\u306f\uff1f\nhttp://qiita.com/kenmatsu4/items/02034e5688cc186f224b\n\n\u305d\u306e\uff14\uff1aTwitter\u306b\u3072\u305d\u3080\u4f4d\u7f6e\u60c5\u5831\u306e\u8996\u899a\u5316\nhttp://qiita.com/kenmatsu4/items/114f3cff815aa5037535\n***\n\n\u307e\u305f\u3001\u524d\u56de\u304b\u3089\u5c11\u3057\u8ffd\u52a0\u3067\u30c7\u30fc\u30bf\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f\u306e\u3067\u30c4\u30a4\u30fc\u30c8\u7dcf\u4ef6\u6570\u306f30\u4e07\u4ef6\u5f31\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n###Tweet\u30c7\u30fc\u30bf\u6982\u8981###\n<dl>\n  <dt>\u3000\u53d6\u5f97\u7dcf\u6570</dt>\n  <dd>\u3000\u3000296,057\u4ef6</dd>\n  <dt>\u3000\u53d6\u5f97\u30c7\u30fc\u30bf\u306e\u671f\u9593</dt>\n  <dd>\u3000\u30002015-03-11 04:43:42 \u304b\u3089 2015-03-22 21:41:14 \u307e\u3067</dd>\n  <dt>\u30001\u79d2\u3042\u305f\u308a\u30c4\u30a4\u30fc\u30c8\u6570</dt>\n  <dd>\u3000\u30003.416 tweet/sec</dd>\n</dl>\n\n\u307e\u305a\u306f\u306e\u7d0430\u4e07\u4ef6\u306e\u30c4\u30a4\u30fc\u30c8\u60c5\u5831\u304c\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u304b\u898b\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u8a18\u4e8b\u3067\u4f7f\u3063\u3066\u3044\u308bpython\u30b3\u30fc\u30c9\u306e\u4e00\u5f0f\u306f[\u3053\u3061\u3089](https://gist.github.com/matsuken92/72a0da8d9b42bed28e61)\u306b\u3042\u308a\u307e\u3059\u3002\n\n\n##\u6642\u7cfb\u5217\u306e\u30c4\u30a4\u30fc\u30c8\u6570\u63a8\u79fb##\n\n\u6642\u7cfb\u5217\u3067\u306e\u30c4\u30a4\u30fc\u30c8\u6570\u306e\u30b0\u30e9\u30d5\u3067\u3059\u3002\n![timeseries-compressor.png](https://qiita-image-store.s3.amazonaws.com/0/50670/f7a22d90-c64c-14cd-fd65-780cced317ca.png)\n\u57fa\u672c\u7684\u306b\u306f\u65e5\u4e2d\u591a\u304f\u30c4\u30a4\u30fc\u30c8\u3055\u308c\u3001\u30ea\u30c4\u30a4\u30fc\u30c8\u3092\u9664\u304f\u901a\u5e38\u30c4\u30a4\u30fc\u30c8\u304c\uff11\u6642\u9593\u5f53\u305f\u308a1000\u4ef6\u5f37\u6295\u7a3f\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001\u7570\u5e38\u306a4\u3064\u306e\u30b9\u30d1\u30a4\u30af\u304c\n\u30003/17 20\u6642\u9803\n\u30003/18 22\u6642\u9803\n\u30003/19 18\u6642\u9803\n\u30003/21 17\u6642\u9803\n\u306b\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u7279\u306b\u5f8c\u308d\u306e\uff13\u3064\u306f\u98db\u3073\u629c\u3051\u3066\u307e\u3059\u3002\n\u6b21\u306e\u9805\u3067\u8abf\u3079\u3066\u3044\u304d\u307e\u3059\u304c\u3001\u3069\u3046\u3084\u3089\u30b9\u30d1\u30e0\u30c4\u30a4\u30fc\u30c8\u306b\u3088\u308b\u3082\u306e\u306e\u3088\u3046\u3067\u3059\u306e\u3067\u3001\u3053\u308c\u3092\u5206\u96e2\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n##\u30b9\u30d1\u30e0\u306e\u5206\u96e2##\n\u307e\u305a\u306f\uff11\u6642\u9593\u5f53\u305f\u308a540\u56de\uff081\u5206\u306b9\u56de\uff09\u4ee5\u4e0a\u30ea\u30c4\u30a4\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u304c\u3001\u8ab0\u306e\u30c4\u30a4\u30fc\u30c8\u306b\u5bfe\u3059\u308b\u30ea\u30c4\u30a4\u30fc\u30c8\u306a\u306e\u304b\u3092\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n\n```py \n# \uff11\u6642\u9593\u306e\u9593\u306blimit\u306b\u6307\u5b9a\u3057\u305f\u6570\u4ee5\u4e0a\u306b\u30ea\u30c4\u30a4\u30fc\u30c8\u3055\u308c\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u8868\u793a\u3059\u308b\ndef select_outlier_retweet_num_per_hour(from_str_datetime_jp, limit=120):\n    '''\n    from_str_datetime_jp: \uff11\u6642\u9593\u67a0\u306e\u958b\u59cb\u6642\u523b\n    limit: \u3053\u306e\u6570\u3092\u8d85\u3048\u3066\u30ea\u30c4\u30a4\u30fc\u30c8\u3055\u308c\u305f\u3082\u306e\u3092\u691c\u51fa\u3059\u308b\n    e.g. select_outlier_tweet_num_per_hour(\"2015-03-18 22:00:00\")\n    '''\n    result_list = []\n    from_date = str_to_date_jp_utc(from_str_datetime_jp)\n    to_date = str_to_date_jp_utc(from_str_datetime_jp) + datetime.timedelta(hours=1) \n    \n    for d in tweetdata.find({'retweeted_status':{\"$ne\": None},'created_datetime':{\"$gte\":from_date, \"$lt\":to_date}},\\\n                            {'user':1,'text':1,'entities':1, 'created_at':1, 'id':1}):\n        mensioned_username = \"\"\n        if len(d['entities']['user_mentions'])!=0:\n            mensioned_username = d['entities']['user_mentions'][0]['screen_name']\n                \n        result_list.append({\"created_at\":utc_str_to_jp_str(d['created_at']),\\\n                            \"screen_name\":d['user']['screen_name'],\\\n                            \"referred_name\":mensioned_username,\\\n                            \"text\":d['text'].replace('\\n',' ')\\\n                            })\n \n    name_dict = defaultdict(int)\n    for r in result_list:\n        name_dict[r['referred_name']] += 1  \n \n    s = sorted(name_dict.iteritems(),key=lambda (k,v): v,reverse=True) # \u30ea\u30c4\u30a4\u30fc\u30c8\u56de\u6570\u3067\u30bd\u30fc\u30c8\n    return s[0:int(np.sum(map(lambda (k,v): 1 if v>limit else 0 ,s)))] # \u30ea\u30c4\u30a4\u30fc\u30c8\u5143\u30e6\u30fc\u30b6\u30fc\u540d, \u30ea\u30c4\u30a4\u30fc\u30c8\u56de\u6570(limit\u3092\u8d85\u3048\u305f\u3082\u306e)\n    \n \nstart_date = str_to_date_jp_utc(\"2015-03-10 19:00:00\")\nto_date    = str_to_date_jp_utc(\"2015-03-22 22:00:00\")\nd_diff = (to_date - start_date)\nd_hours = d_diff.days * 24 + d_diff.seconds/float(3600)\n \nfor i in range(int(d_hours)):\n    d = (start_date + datetime.timedelta(hours=i)).strftime(\"%Y-%m-%d %H:%M:%S\")\n    result = select_outlier_retweet_num_per_hour(d, limit=540)\n    if len(result) > 0:\n        print d, result\n```\n\n\u7d50\u679c\u304c\u3053\u308c\u3067\u3059\u3002\n\n```py:output\n2015-03-11 20:00:00 [(u'NewsGiga', 972)]\n2015-03-11 21:00:00 [(u'NewsGiga', 863)]\n2015-03-17 20:00:00 [(u'r***********', 773)]\n2015-03-18 22:00:00 [(u'g*********', 3666)]\n2015-03-18 23:00:00 [(u'e**********', 3882)]\n2015-03-19 18:00:00 [(u'y**********', 3771)]\n2015-03-21 17:00:00 [(u'm***********', 4032)]\n```\n\u203b\u30b9\u30d1\u30e0\u30a2\u30ab\u30a6\u30f3\u30c8\u306f\u4f0f\u5b57\u306b\u3057\u307e\u3057\u305f\u3002\n\nNewsGiga\u3055\u3093\u306e\u30c4\u30a4\u30fc\u30c8\u4ee5\u5916\u306f\u5185\u5bb9\u3092\u898b\u308b\u306b\u3001\u5168\u3066\u30b9\u30d1\u30e0\u3060\u3063\u305f\u306e\u3067\u3001spam\u30d5\u30e9\u30b0\u3092\u5404\u30ec\u30b3\u30fc\u30c9\u306b\u7acb\u3066\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u9006\u306bNewsGiga\u3055\u3093\u306e\u8a18\u4e8b\u306f BUZZ\u3063\u3066\u308b\u306e\u3067\u4f55\u304c\u8a71\u984c\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u6c17\u306b\u306a\u3063\u3066\u898b\u3066\u8abf\u3079\u3066\u307f\u308b\u3068\u3053\u306e\u8a18\u4e8b\u3067\u3057\u305f\u3002\u30b9\u30bf\u30d0\u306e\u96f0\u56f2\u6c17\u304c\u597d\u304d\u3060\u3051\u3069\u30b3\u30fc\u30d2\u30fc\u304c\u82e6\u624b\u3063\u3066\u3044\u3046\u4eba\u304c\u7d50\u69cb\u591a\u3044\u306e\u3067\u3059\u306d\uff01\n\n<blockquote class=\"twitter-tweet\" lang=\"ja\"><p>\u30b3\u30fc\u30d2\u30fc\u5acc\u3044\u306b\u6717\u5831\uff01&#10;\u30b9\u30bf\u30d0\u304c\u7d05\u8336\u5c02\u9580\u306e\u30ab\u30d5\u30a7\u300eTEAVANA\u300f\u3092\u65e5\u672c\u3067\u5c55\u958b\uff01&#10;<a href=\"http://t.co/ZHBPvA6JQF\">http://t.co/ZHBPvA6JQF</a> <a href=\"http://t.co/4Jr1x0Ql1v\">pic.twitter.com/4Jr1x0Ql1v</a></p>&mdash; GIGADIA (@NewsGiga) <a href=\"https://twitter.com/NewsGiga/status/575564958496395264\">2015, 3\u6708 11</a></blockquote> <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\u6b21\u306b\u3001\u3053\u306e\u30b9\u30d1\u30e0\u30a2\u30ab\u30a6\u30f3\u30c8\u3078\u306e\u30ea\u30c4\u30a4\u30fc\u30c8\u3068\u3001\u3053\u306e\u30ea\u30c4\u30a4\u30fc\u30c8\u3092\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u306e\u30c4\u30a4\u30fc\u30c8\u3092spam\u3068\u5224\u65ad\u3057\u3001spam\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u3066\u5206\u5225\u3057\u307e\u3059\u3002\n\n```py\n\n# spam\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30c4\u30a4\u30fc\u30c8\u306bspam\u30d5\u30e9\u30b0\u3092\u4ed8\u4e0e\u3059\u308b\n \n#  08_spam_detector.py\u3067\u3042\u3076\u308a\u51fa\u3057\u305f\u30b9\u30d1\u30e0\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30ea\u30b9\u30c8\nspam_list = ['r***********', 'g*********', 'e**********', 'y**********', 'm***********']\n\n\ncount = 0\nretweeted_name = \"\"\n \nfor d in tweetdata.find({'retweeted_status':{\"$ne\": None}}):  # \u30ea\u30c4\u30a4\u30fc\u30c8\u30c7\u30fc\u30bf\u4e00\u5f0f\u3092\u53d6\u5f97\n    try:\n        retweeted_name = d['entities']['user_mentions'][0]['screen_name']\n    except:\n        count += 1\n        pattern = r\".*@([0-9a-zA-Z_]*).*\"\n        ite = re.finditer(pattern, d['text'])\n        for it in ite:\n            retweeted_name = it.group(1)\n            break\n \n    if retweeted_name in spam_list:  # \u30b9\u30d1\u30e0\u30a2\u30ab\u30a6\u30f3\u30c8\u3078\u306e\u30ea\u30c4\u30a4\u30fc\u30c8\u3060\u3063\u305f\u3089\n        # \u30b9\u30d1\u30e0\u30a2\u30ab\u30a6\u30f3\u30c8\u3078\u306e\u30ea\u30c4\u30a4\u30fc\u30c8\u306bspam\u30d5\u30e9\u30b0\u3092\u4ed8\u4e0e\n        tweetdata.update({'_id' : d['_id']},{'$set': {'spam':True}})\n        # \u30b9\u30d1\u30e0\u30c4\u30a4\u30fc\u30c8\u3092\u3057\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u3082\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u5165\u308a\n        spam_twitter.add(d['user']['screen_name'])\n        \nprint '%d\u4ef6\u306e\u30ea\u30c4\u30a4\u30fc\u30c8\u3092\u30b9\u30d1\u30e0\u306b\u5206\u985e\u3057\u307e\u3057\u305f'%count\n \n# \u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u5165\u308a\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u30c4\u30a4\u30fc\u30c8\u3092\u30b9\u30d1\u30e0\u306b\u5206\u985e\ncount = 0\nfor d in tweetdata.find({},{'user.screen_name':1}):\n    sc_name = d['user']['screen_name'] \n    if sc_name in spam_twitter:\n        count += 1\n        tweetdata.update({'_id' : d['_id']},{'$set': {'spam':True}})\n \nprint \"%d\u4ef6\u306e\u30c4\u30a4\u30fc\u30c8\u3092\u30b9\u30d1\u30e0\u306b\u5206\u985e\u3057\u307e\u3057\u305f\"\n```\n\n\u30b9\u30d1\u30e0\u3092\u5206\u985e\u3067\u304d\u305f\u306e\u3067\u3001\u6642\u7cfb\u5217\u30c4\u30a4\u30fc\u30c8\u6570\u30c7\u30fc\u30bf\u3092\u518d\u5ea6\u8868\u793a\u3055\u305b\u307e\u3059\u3002\n\u305f\u3060\u3001\u4eba\u306e\u76ee\u3067\u30b9\u30d1\u30e0\u3092\u898b\u5206\u3051\u308b\u5f62\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u4eca\u5f8c\u306f\u3053\u3053\u306e\u81ea\u52d5\u691c\u51fa\u3082\u8ab2\u984c\u3067\u3059\u3002\n\n```py \n# \u6642\u7cfb\u5217\u30c4\u30a4\u30fc\u30c8\u6570\u30c7\u30fc\u30bf\u306e\u8868\u793a\ndate_dict = defaultdict(int)\nret_date_dict = defaultdict(int)\nnorm_date_dict = defaultdict(int)\nspam_dict = defaultdict(int)\nnot_spam_norm_dict = defaultdict(int)\nnot_spam_ret_dict = defaultdict(int)\n \nfor d in tweetdata.find({},{'_id':1, 'created_datetime':1,'retweeted_status':1,'spam':1}):\n    str_date = date_to_Japan_time(d['created_datetime']).strftime('%Y\\t%m/%d %H %a') \n    date_dict[str_date] += 1\n    \n    # spam\u306e\u9664\u53bb\n    if ('spam' in d) and (d['spam'] == True):\n        spam_dict[str_date] += 1\n    else:\n        spam_dict[str_date] += 0\n        # spam\u3067\u306a\u3044\u3082\u306e\u306eRetweet\u6570\u306e\u30ab\u30a6\u30f3\u30c8\n        if 'retweeted_status' not in d:\n            not_spam_ret_dict[str_date]  += 0\n            not_spam_norm_dict[str_date] += 1\n        elif obj_nullcheck(d['retweeted_status']):\n            not_spam_ret_dict[str_date]  += 1\n            not_spam_norm_dict[str_date] += 0\n        else:\n            not_spam_ret_dict[str_date]  += 0\n            not_spam_norm_dict[str_date] += 1\n    \n    # Retweet\u6570\u306e\u30ab\u30a6\u30f3\u30c8\n    if 'retweeted_status' not in d:\n        ret_date_dict[str_date]  += 0\n        norm_date_dict[str_date] += 1\n    elif obj_nullcheck(d['retweeted_status']):\n        ret_date_dict[str_date]  += 1\n        norm_date_dict[str_date] += 0\n    else:\n        ret_date_dict[str_date]  += 0\n        norm_date_dict[str_date] += 1\n \n \nprint \"\u65e5\u4ed8\" + \"\\t\\t\\t\" + \"#ALL\" + \"\\t\" + \"#NotRT\" + \"\\t\" + \"#RT\" + \"\\t\" \"#spam\" + \"\\t\" \"#NotRT(exclude spam)\" + \"\\t\" + \"#RT(exclude spam)\"\nkeys = date_dict.keys()\nkeys.sort()\nfor k in keys:\n    print k  + \"\\t\" +  str(date_dict[k]) + \"\\t\" +  str(norm_date_dict[k]) + \"\\t\" +  str(ret_date_dict[k]) \\\n                    + \"\\t\" +  str(spam_dict[k])+ \"\\t\" +  str(not_spam_norm_dict[k]) + \"\\t\" +  str(not_spam_ret_dict[k])\n    \n```\n\n\n\u5916\u308c\u5024\u306e\u30b9\u30d1\u30a4\u30af\u304c\u306a\u304f\u306a\u308a\u304d\u308c\u3044\u306b\u306a\u308a\u307e\u3057\u305f:blush: \n11\u65e5\u306b\u3061\u3087\u3063\u3068\u4e0a\u306b\u51fa\u3066\u308b\u306e\u306f\u5148\u307b\u3069\u306eNewsGiga\u3055\u3093\u3078\u306e\u30ea\u30c4\u30a4\u30fc\u30c8\u3067\u3059\u306d\u3002\n\n![timeseries_no_spam-compressor.png](https://qiita-image-store.s3.amazonaws.com/0/50670/77266478-6048-8ed5-f827-09e042c9e4a1.png)\n\n\u3060\u3044\u305f\u3044\u3001\uff11\u6642\u9593\u5f53\u305f\u308a\u30c4\u30a4\u30fc\u30c8\u6570\u304c1000\u4ef6\u3092\u8d8a\u3048\u3066\u304f\u308b\u306e\u304c\u304a\u663c\u306e\uff11\uff12\u6642\u304b\u3089\u3002\u305d\u3053\u304b\u308922\u6642\u304f\u3089\u3044\u307e\u30671000\u4ef6\u53f0\u3092\u30ad\u30fc\u30d7\u3057\u3066\u305d\u306e\u5f8c\u6df1\u591c\u65e9\u671d\u306b\u306a\u308b\u3068\u4e0b\u304c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u3082\u3057\u30d7\u30ed\u30e2\u30fc\u30b7\u30e7\u30f3\u3092\u304b\u3051\u308b\u306a\u3089\u3053\u306e12\u6642\u301c22\u6642\u306e\u9593\u304c\u52b9\u679c\u7684\u306a\u611f\u3058\u304c\u3057\u307e\u3059\u3002\n\n[\u6b21\u56de](http://qiita.com/kenmatsu4/items/02034e5688cc186f224b)\u306f\u30c4\u30a4\u30fc\u30c8\u672c\u6587\u306b\u5bfe\u3057\u3066\u5f62\u614b\u7d20\u89e3\u6790\u3092\u639b\u3051\u3066\u5358\u8a9e\u3092\u5206\u89e3\u3057\u305f\u308a\u3001\u611f\u60c5\u5206\u6790\u3092\u639b\u3051\u3066\u307f\u305f\u308a\u3092\u3084\u3063\u3066\u307f\u308b\u4e88\u5b9a\u3067\u3059\u3002\n", "tags": ["Twitter", "statistics", "Python2.7", "MongoDB", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406"]}