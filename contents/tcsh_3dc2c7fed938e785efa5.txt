{"tags": ["AWS", "aws-cli", "lambda", "ses"], "context": "\n\n\u524d\u63d0\u6761\u4ef6\n\nLambda\u3078\u306e\u6a29\u9650\nLambda\u306b\u5bfe\u3057\u3066\u30d5\u30eb\u6a29\u9650\u304c\u3042\u308b\u3053\u3068\u3002\n\nAWS CLI\n\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\n\nAWS CLI 1.10.63\n\n\n\u30b3\u30de\u30f3\u30c9\naws --version\n\n\n\n\u7d50\u679c(\u4f8b)\n      aws-cli/1.10.63 Python/2.7.11 Darwin/15.6.0 botocore/1.4.53\n\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u53e4\u3044\u5834\u5408\u306f\u6700\u65b0\u7248\u306b\u66f4\u65b0\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30b3\u30de\u30f3\u30c9\nsudo -H pip install -U awscli\n\n\n\nIAM Role\n'inbound-ses-spam-filter'\u30ed\u30fc\u30eb\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3002\n\n0. \u6e96\u5099\n\n0.1. \u30ea\u30fc\u30b8\u30e7\u30f3\u306e\u6c7a\u5b9a\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nexport AWS_DEFAULT_REGION='us-west-2'\n\n\n\n0.2. \u5909\u6570\u306e\u78ba\u8a8d\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u304c\u60f3\u5b9a\u306e\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u78ba\u8a8d\naws configure list\n\n\n\n\u7d50\u679c(\u4f8b)\n            Name                    Value             Type    Location\n            ----                    -----             ----    --------\n         profile       lambdaFull-prjz-mbp13        env    AWS_DEFAULT_PROFILE\n      access_key     ****************XXXX shared-credentials-file\n      secret_key     ****************XXXX shared-credentials-file\n          region        us-west-2        env    AWS_DEFAULT_REGION\n\n\n\n0.3. IAM Role\u306e\u6307\u5b9a\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nIAM_ROLE_NAME='inbound-ses-spam-filter'\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws iam get-role \\\n         --role-name ${IAM_ROLE_NAME}\n\n\n\n\u7d50\u679c(\u4f8b)\n      {\n          \"Role\": {\n            \"AssumeRolePolicyDocument\": {\n                \"Version\": \"2012-10-17\",\n                \"Statement\": [\n                    {\n                        \"Action\": \"sts:AssumeRole\",\n                        \"Principal\": {\n                            \"Service\": \"lambda.amazonaws.com\"\n                        },\n                        \"Effect\": \"Allow\",\n                        \"Sid\": \"\"\n                    }\n                ]\n            },\n            \"RoleId\": \"AROAXXXXXXXXXXXXXXXXX\",\n            \"CreateDate\": \"2016-09-10T01:23:45Z\",\n            \"RoleName\": \"inbound-ses-spam-filter\",\n            \"Path\": \"/\",\n            \"Arn\": \"arn:aws:iam::XXXXXXXXXXXX:role/inbound-ses-spam-filter\"\n          }\n      }\n\n\n\n1. \u4e8b\u524d\u4f5c\u696d\n\n1.1. AWS ID\u306e\u53d6\u5f97\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nAWS_ID=$( \\\n        aws sts get-caller-identity \\\n          --query 'Account' \\\n          --output text \\\n) && echo ${AWS_ID}\n\n\n\n\u7d50\u679c(\u4f8b)\n      XXXXXXXXXXXX\n\n\n\n1.1. IAM Role\u306eARN\u53d6\u5f97\n\n\u30b3\u30de\u30f3\u30c9\nIAM_ROLE_ARN=$( \\\n        aws iam get-role \\\n          --role-name ${IAM_ROLE_NAME} \\\n          --query 'Role.Arn' \\\n          --output text \\\n) \\\n        && echo ${IAM_ROLE_ARN}\n\n\n\n\u7d50\u679c(\u4f8b)\n      arn:aws:iam::XXXXXXXXXXXX:role/inbound-ses-spam-filter\n\n\n\n1.2. SES\u3067\u5229\u7528\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u306e\u6307\u5b9a\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nSES_IDENTITY='<SES\u3067\u5229\u7528\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u540d>'\n\n\n\n1.3. Lambda\u95a2\u6570\u540d\u306e\u6c7a\u5b9a\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nLAMBDA_FUNC_NAME=\"inbound-ses-spam-filter-python-$( date '+%Y%m%d' )\" \\\n        && echo ${LAMBDA_FUNC_NAME}\n\n\n\u540c\u540d\u306eLambda\u95a2\u6570\u306e\u4e0d\u5b58\u5728\u78ba\u8a8d\n\n\u30b3\u30de\u30f3\u30c9\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n\n\n\n\u7d50\u679c(\u4f8b)\n      A client error (ResourceNotFoundException) occurred when calling the GetFunction operation: Function not found: arn:aws:lambda:us-west-2:XXXXXXXXXXXX:function:inbound-ses-spam-filter-python-20160912\n\n\n\n1.4. Lambda\u95a2\u6570\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_LAMBDA_FUNC=\"${LAMBDA_FUNC_NAME}.py\"\nPY_FUNC_NAME='lambda_handler'\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n          FILE_LAMBDA_FUNC: ${FILE_LAMBDA_FUNC}\n          PY_FUNC_NAME:     ${PY_FUNC_NAME}\n          SES_IDENTITY:     ${SES_IDENTITY}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\ncat << EOF > ${FILE_LAMBDA_FUNC}\nfrom __future__ import print_function\nfrom datetime import datetime\nimport json\nimport boto3\n\n\ndef print_with_timestamp(*args):\n    print(datetime.utcnow().isoformat(), *args)\n\n\ndef ${PY_FUNC_NAME}(event, context):\n    print_with_timestamp('Starting - inbound-ses-spam-filter')\n\n    ses_notification = event['Records'][0]['ses']\n    message_id = ses_notification['mail']['messageId']\n    receipt = ses_notification['receipt']\n\n    print_with_timestamp('Processing message:', message_id)\n\n    # Check if any spam check failed\n    if (receipt['spfVerdict']['status'] == 'FAIL' or\n            receipt['dkimVerdict']['status'] == 'FAIL' or\n            receipt['spamVerdict']['status'] == 'FAIL' or\n            receipt['virusVerdict']['status'] == 'FAIL'):\n\n        send_bounce_params = {\n            'OriginalMessageId': message_id,\n            'BounceSender': 'mailer-daemon@${SES_IDENTITY}',\n            'MessageDsn': {\n                'ReportingMta': 'dns; ${SES_IDENTITY}',\n                'ArrivalDate': datetime.now().isoformat()\n            },\n            'BouncedRecipientInfoList': []\n        }\n\n        for recipient in receipt['recipients']:\n            send_bounce_params['BouncedRecipientInfoList'].append({\n                'Recipient': recipient,\n                'BounceType': 'ContentRejected'\n            })\n\n        print_with_timestamp('Bouncing message with parameters:')\n        print_with_timestamp(json.dumps(send_bounce_params))\n\n        try:\n            ses_client = boto3.client('ses')\n            bounceResponse = ses_client.send_bounce(**send_bounce_params)\n            print_with_timestamp('Bounce for message ', message_id, ' sent, bounce message ID: ', bounceResponse['MessageId'])\n            return {'disposition': 'stop_rule_set'}\n        except Exception as e:\n            print_with_timestamp(e)\n            print_with_timestamp('An error occurred while sending bounce for message: ', message_id)\n            raise e\n    else:\n        print_with_timestamp('Accepting message:', message_id)\nEOF\n\ncat ${FILE_LAMBDA_FUNC}\n\n\n\n\u30b3\u30de\u30f3\u30c9\nzip ${LAMBDA_FUNC_NAME}.zip ${FILE_LAMBDA_FUNC}\n\n\n\n\u7d50\u679c(\u4f8b)\n      adding: inbound-ses-spam-filter-python-20160912.py (deflated 43%)\n\n\n\n2. Lambda\u95a2\u6570\u306e\u4f5c\u6210\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nLAMBDA_FUNC_DESC='A simple email filter for protection against spam and viruses as well as DKIM and SPF failures.'\nLAMBDA_RUNTIME='python2.7'\nLAMBDA_HANDLER=\"${LAMBDA_FUNC_NAME}.${PY_FUNC_NAME}\"\nFILE_LAMBDA_ZIP=\"${LAMBDA_FUNC_NAME}.zip\"\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        LAMBDA_FUNC_NAME:  ${LAMBDA_FUNC_NAME}\n        LAMBDA_FUNC_DESC: \"${LAMBDA_FUNC_DESC}\"\n        LAMBDA_RUNTIME:    ${LAMBDA_RUNTIME}\n        FILE_LAMBDA_ZIP    ${FILE_LAMBDA_ZIP}\n        IAM_ROLE_ARN:      ${IAM_ROLE_ARN}\n        LAMBDA_HANDLER:    ${LAMBDA_HANDLER}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda create-function \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --description \"${LAMBDA_FUNC_DESC}\" \\\n        --zip-file fileb://${FILE_LAMBDA_ZIP} \\\n        --runtime ${LAMBDA_RUNTIME} \\\n        --role ${IAM_ROLE_ARN} \\\n        --handler ${LAMBDA_HANDLER}\n\n\n\n\u7d50\u679c(\u4f8b)\n      {\n        \"CodeSha256\": \"tRyAvhC8oug6kZtrpkSUtm79lqNmjrQP9K1oY88MxEo=\",\n        \"FunctionName\": \"inbound-ses-spam-filter-python-20160912\",\n        \"CodeSize\": 970,\n        \"MemorySize\": 128,\n        \"FunctionArn\": \"arn:aws:lambda:us-west-2:XXXXXXXXXXXX:function:inbound-ses-spam-filter-python-20160912\",\n        \"Version\": \"$LATEST\",\n        \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/inbound-ses-spam-filter\",\n        \"Timeout\": 10,\n        \"LastModified\": \"2016-09-10T01:23:45.678+0000\",\n        \"Handler\": \"inbound-ses-spam-filter-python-20160912.lambda_handler\",\n        \"Runtime\": \"python2.7\",\n        \"Description\": \"A simple email filter for protection against spam and viruses as well as DKIM and SPF failures.\"\n      }\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n\n\n\n\u7d50\u679c(\u4f8b)\n      {\n        \"Code\": {\n          \"RepositoryType\": \"S3\",\n          \"Location\": \"https://awslambda-ap-ne-1-tasks.s3-ap-northeast-1.amazonaws.com/snapshots/XXXXXXXXXXXX/HelloWorld-2979ba79-b08f-495d-9ee6-46397c95ba13?x-amz-security-token=AQoDYXdzEDoa8AMR6t8h66eOXhN3%2Fx7XpuRxvf7pVn7IuWV4cEmwx0CtZT6yxCJ1%2BWmigYXqGoyQHuBYOWnxbhmwEcTg839qMuhSu1fk0fXpXf0oJOLkhKMudNqhdElyFQpzyT6Q8GDfhAsfbX9wvwCDTty4imxz7MczF%2FQl6tgvTYdip08ap5fAyrknZGV1%2B1Ggnp5w6JOjydYxuUsWwhoxoEWzi7SoVTmpRQQA91c4VW9lNotOAHACFxo6klzDPM8mxR9RJl66WxFugL0wQJyLUpmtjS9XoArD86sEWWiIccMpV2BQipTPQlzL%2F1Hoy%2BDF6QUxyPUihlDjPBoJTISTP8W1wxmzW%2BLbilAfFQRPY7CFjzR0k%2FA%2FIX5x9iyz52Pu1Q0ASTw1l%2Fq%2Fo3pRbvzWR79QS%2BpxXrwbYzoQHKiK62DSTsQo5tqKPsiDCYzrPxbq8lm7pNBPG%2FsxjePRWBVJeRl08WxEjSjoRRwBOPX5mz1BCUoUBPGG5tEENp87A%2FCdDgibFWM5DdYhwtaYPY7FTmi8DvqjQHL9jOmP8YuVteBTBcv8nFW6UbErPjwwn79FKG1u5M9HoTWUqUMBByz6D4tTRSEw6iJU7XdCujFnhnHe5V8imZ1KGI7fDWpciJhrhml0wnKPCK%2Fe9lK1P2kO7ldSWc7zn5hcIOD2tbEF&AWSAccessKeyId=ASIAJFVALOKV5SJVYPPA&Expires=1445825978&Signature=bvwu1Ny34LgTmZeOO3q4sn7x3Fg%3D\"\n        },\n        \"Configuration\": {\n          \"Version\": \"$LATEST\",\n          \"CodeSha256\": \"tRyAvhC8oug6kZtrpkSUtm79lqNmjrQP9K1oY88MxEo=\",\n          \"FunctionName\": \"inbound-ses-spam-filter-python-20160912\",\n          \"MemorySize\": 128,\n          \"CodeSize\": 350,\n          \"FunctionArn\": \"arn:aws:lambda:us-west-2:XXXXXXXXXXXX:function:inbound-ses-spam-filter-python-20160912\",\n          \"Handler\": \"inbound-ses-spam-filter-python-20160912.lambda_handler\",\n          \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/inbound-ses-spam-filter\",\n          \"Timeout\": 10,\n          \"LastModified\": \"2016-09-10T01:23:45.678+0000\",\n          \"Runtime\": \"python2.7\",\n          \"Description\": \"A simple email filter for protection against spam and viruses as well as DKIM and SPF failures.\"\n        }\n      }\n\n\n\n3. Lambda\u95a2\u6570\u306e\u52d5\u4f5c\u78ba\u8a8d\n\n3.1. \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_INPUT=\"${LAMBDA_FUNC_NAME}-data.json\" \\\n        && echo ${FILE_INPUT}\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        FILE_INPUT:         ${FILE_INPUT}\n        AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}\n\nETX\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\ncat << EOF > ${FILE_INPUT}\n{\n        \"Records\": [\n          {\n            \"eventVersion\": \"1.0\",\n            \"ses\": {\n              \"mail\": {\n                \"commonHeaders\": {\n                  \"from\": [\n                    \"Jane Doe <janedoe@example.com>\"\n                  ],\n                  \"to\": [\n                    \"johndoe@example.com\"\n                  ],\n                  \"returnPath\": \"janedoe@example.com\",\n                  \"messageId\": \"<0123456789example.com>\",\n                  \"date\": \"Wed, 7 Oct 2015 12:34:56 -0700\",\n                  \"subject\": \"Test Subject\"\n                },\n                \"source\": \"janedoe@example.com\",\n                \"timestamp\": \"1970-01-01T00:00:00.000Z\",\n                \"destination\": [\n                  \"johndoe@example.com\"\n                ],\n                \"headers\": [\n                  {\n                    \"name\": \"Return-Path\",\n                    \"value\": \"<janedoe@example.com>\"\n                  },\n                  {\n                    \"name\": \"Received\",\n                    \"value\": \"from mailer.example.com (mailer.example.com [203.0.113.1]) by inbound-smtp.${AWS_DEFAULT_REGION}.amazonaws.com with SMTP id o3vrnil0e2ic28trm7dfhrc2v0cnbeccl4nbp0g1 for johndoe@example.com; Wed, 07 Oct 2015 12:34:56 +0000 (UTC)\"\n                  },\n                  {\n                    \"name\": \"DKIM-Signature\",\n                    \"value\": \"v=1; a=rsa-sha256; c=relaxed/relaxed; d=example.com; s=example; h=mime-version:from:date:message-id:subject:to:content-type; bh=jX3F0bCAI7sIbkHyy3mLYO28ieDQz2R0P8HwQkklFj4=; b=sQwJ+LMe9RjkesGu+vqU56asvMhrLRRYrWCbVt6WJulueecwfEwRf9JVWgkBTKiL6m2hr70xDbPWDhtLdLO+jB3hzjVnXwK3pYIOHw3vxG6NtJ6o61XSUwjEsp9tdyxQjZf2HNYee873832l3K1EeSXKzxYk9Pwqcpi3dMC74ct9GukjIevf1H46hm1L2d9VYTL0LGZGHOAyMnHmEGB8ZExWbI+k6khpurTQQ4sp4PZPRlgHtnj3Zzv7nmpTo7dtPG5z5S9J+L+Ba7dixT0jn3HuhaJ9b+VThboo4YfsX9PMNhWWxGjVksSFOcGluPO7QutCPyoY4gbxtwkN9W69HA==\"\n                  },\n                  {\n                    \"name\": \"MIME-Version\",\n                    \"value\": \"1.0\"\n                  },\n                  {\n                    \"name\": \"From\",\n                    \"value\": \"Jane Doe <janedoe@example.com>\"\n                  },\n                  {\n                    \"name\": \"Date\",\n                    \"value\": \"Wed, 7 Oct 2015 12:34:56 -0700\"\n                  },\n                  {\n                    \"name\": \"Message-ID\",\n                    \"value\": \"<0123456789example.com>\"\n                  },\n                  {\n                    \"name\": \"Subject\",\n                    \"value\": \"Test Subject\"\n                  },\n                  {\n                    \"name\": \"To\",\n                    \"value\": \"johndoe@example.com\"\n                  },\n                  {\n                    \"name\": \"Content-Type\",\n                    \"value\": \"text/plain; charset=UTF-8\"\n                  }\n                ],\n                \"headersTruncated\": false,\n                \"messageId\": \"o3vrnil0e2ic28trm7dfhrc2v0clambda4nbp0g1\"\n              },\n              \"receipt\": {\n                \"recipients\": [\n                  \"johndoe@example.com\"\n                ],\n                \"timestamp\": \"1970-01-01T00:00:00.000Z\",\n                \"spamVerdict\": {\n                  \"status\": \"PASS\"\n                },\n                \"dkimVerdict\": {\n                  \"status\": \"PASS\"\n                },\n                \"processingTimeMillis\": 574,\n                \"action\": {\n                  \"type\": \"Lambda\",\n                  \"invocationType\": \"Event\",\n                  \"functionArn\": \"arn:aws:lambda:${AWS_DEFAULT_REGION}:012345678912:function:Example\"\n                },\n                \"spfVerdict\": {\n                  \"status\": \"PASS\"\n                },\n                \"virusVerdict\": {\n                  \"status\": \"PASS\"\n                }\n              }\n            },\n            \"eventSource\": \"aws:ses\"\n          }\n        ]\n}\nEOF\n\ncat ${FILE_INPUT}\n\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u58ca\u308c\u3066\u306a\u3044\u304b\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\njsonlint -q ${FILE_INPUT}\n\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u306a\u3051\u308c\u3070OK\u3067\u3059\u3002\n\n3.2. lambda\u95a2\u6570\u306e\u624b\u52d5\u5b9f\u884c\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_OUTPUT_LAMBDA=\"${LAMBDA_FUNC_NAME}-out.txt\"\nFILE_LOG_LAMBDA=\"${LAMBDA_FUNC_NAME}-$(date +%Y%m%d%H%M%S).log\"\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        LAMBDA_FUNC_NAME:   ${LAMBDA_FUNC_NAME}\n        FILE_INPUT:         ${FILE_INPUT}\n        FILE_OUTPUT_LAMBDA: ${FILE_OUTPUT_LAMBDA}\n        FILE_LOG_LAMBDA:    ${FILE_LOG_LAMBDA}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda invoke \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --log-type Tail \\\n        --payload file://${FILE_INPUT} \\\n        ${FILE_OUTPUT_LAMBDA} \\\n        > ${FILE_LOG_LAMBDA}\n\n\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'StatusCode'\n\n\n\n\u7d50\u679c(\u4f8b)\n      200\n\n\n\n3.3. lambda\u95a2\u6570\u306e\u5b9f\u884c\u7d50\u679c\u306e\u78ba\u8a8d\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_OUTPUT_LAMBDA}\n\n\n\n\u7d50\u679c(\u4f8b)\n      null\n\n\n\n3.4. lambda\u95a2\u6570\u306e\u30ed\u30b0\u306e\u78ba\u8a8d\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'LogResult' \\\n        | sed 's/\"//' \\\n        | base64 --decode\n\n\n\n\u7d50\u679c(\u4f8b)\n      START RequestId: c1d2232a-75a0-11e6-a600-25217ddb12d8 Version: $LATEST\n      2016-09-10T08:46:42.782421 Starting - inbound-ses-spam-filter\n      2016-09-10T08:46:42.782481 Processing message: o3vrnil0e2ic28trm7dfhrc2v0clambda4nbp0g1\n      2016-09-10T08:46:42.782547 Accepting message: o3vrnil0e2ic28trm7dfhrc2v0clambda4nbp0g1\n      END RequestId: c1d2232a-75a0-11e6-a600-25217ddb12d8\n      REPORT RequestId: c1d2232a-75a0-11e6-a600-25217ddb12d8      Duration: 0.63 ms       Billed Duration: 100 ms         Memory Size: 128 MB     Max Memory Used: 43 MB\n\n\n\n4. permission: SES\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nLAMBDA_STAT_ID='AllowSES'\nLAMBDA_PERMIT_ACTION='lambda:InvokeFunction'\nLAMBDA_PERMIT_PRINCIPAL='ses.amazonaws.com'\nSOURCE_AWS_ID=${AWS_ID}\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        LAMBDA_FUNC_NAME:        ${LAMBDA_FUNC_NAME}\n        LAMBDA_STAT_ID:          ${LAMBDA_STAT_ID}\n        LAMBDA_PERMIT_ACTION:    ${LAMBDA_PERMIT_ACTION}\n        LAMBDA_PERMIT_PRINCIPAL: ${LAMBDA_PERMIT_PRINCIPAL}\n        SOURCE_AWS_ID:           ${SOURCE_AWS_ID}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda add-permission \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --statement-id ${LAMBDA_STAT_ID} \\\n        --action ${LAMBDA_PERMIT_ACTION} \\\n        --principal ${LAMBDA_PERMIT_PRINCIPAL} \\\n        --source-account ${SOURCE_AWS_ID}\n\n\n\n\u7d50\u679c(\u4f8b)\n      {\n        \"Statement\": \"{\"Condition\":{\"StringEquals\":{\"AWS:SourceAccount\":\"XXXXXXXXXXXX\"}},\"Action\":[\"lambda:InvokeFunction\"],\"Resource\":\"arn:aws:lambda:us-west-2:XXXXXXXXXXXX:function:inbound-ses-spam-filter-python-20160912\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ses.amazonaws.com\"},\"Sid\":\"AllowSES\"}\"\n      }\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda get-policy \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        | sed 's/\\\\//g' | sed 's/\\\"{/{/' | sed 's/\\\"$//' \n\n\n\n\u7d50\u679c(\u4f8b)\n      {\n        \"Policy\": {\"Version\":\"2012-10-17\",\"Statement\":[{\"Condition\":{\"StringEquals\":{\"AWS:SourceAccount\":\"XXXXXXXXXXXX\"}},\"Action\":\"lambda:InvokeFunction\",\"Resource\":\"arn:aws:lambda:us-west-2:XXXXXXXXXXXX:function:inbound-ses-spam-filter-python-20160912\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ses.amazonaws.com\"},\"Sid\":\"AllowSES\"}],\"Id\":\"default\"}\n      }\n\n\n\n\u5b8c\u4e86\n\n\u524d\u63d0\u6761\u4ef6\n========\n\n\nLambda\u3078\u306e\u6a29\u9650\n--------------\n\nLambda\u306b\u5bfe\u3057\u3066\u30d5\u30eb\u6a29\u9650\u304c\u3042\u308b\u3053\u3068\u3002\n\n\nAWS CLI\n-------\n\n\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\n\n* AWS CLI 1.10.63\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws --version\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      aws-cli/1.10.63 Python/2.7.11 Darwin/15.6.0 botocore/1.4.53\n```\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u53e4\u3044\u5834\u5408\u306f\u6700\u65b0\u7248\u306b\u66f4\u65b0\u3057\u307e\u3057\u3087\u3046\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nsudo -H pip install -U awscli\n```\n\n\nIAM Role\n--------\n\n'inbound-ses-spam-filter'\u30ed\u30fc\u30eb\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3002\n\n\n0. \u6e96\u5099\n=======\n\n\n0.1. \u30ea\u30fc\u30b8\u30e7\u30f3\u306e\u6c7a\u5b9a\n---------------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nexport AWS_DEFAULT_REGION='us-west-2'\n```\n\n\n0.2. \u5909\u6570\u306e\u78ba\u8a8d\n---------------\n\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u304c\u60f3\u5b9a\u306e\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\naws configure list\n```\n\n```text:\u7d50\u679c(\u4f8b):\n            Name                    Value             Type    Location\n            ----                    -----             ----    --------\n         profile       lambdaFull-prjz-mbp13        env    AWS_DEFAULT_PROFILE\n      access_key     ****************XXXX shared-credentials-file\n      secret_key     ****************XXXX shared-credentials-file\n          region        us-west-2        env    AWS_DEFAULT_REGION\n```\n\n\n0.3. IAM Role\u306e\u6307\u5b9a\n-------------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nIAM_ROLE_NAME='inbound-ses-spam-filter'\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws iam get-role \\\n         --role-name ${IAM_ROLE_NAME}\n```\n\n```json:\u7d50\u679c(\u4f8b):\n      {\n          \"Role\": {\n            \"AssumeRolePolicyDocument\": {\n                \"Version\": \"2012-10-17\",\n                \"Statement\": [\n                    {\n                        \"Action\": \"sts:AssumeRole\",\n                        \"Principal\": {\n                            \"Service\": \"lambda.amazonaws.com\"\n                        },\n                        \"Effect\": \"Allow\",\n                        \"Sid\": \"\"\n                    }\n                ]\n            },\n            \"RoleId\": \"AROAXXXXXXXXXXXXXXXXX\",\n            \"CreateDate\": \"2016-09-10T01:23:45Z\",\n            \"RoleName\": \"inbound-ses-spam-filter\",\n            \"Path\": \"/\",\n            \"Arn\": \"arn:aws:iam::XXXXXXXXXXXX:role/inbound-ses-spam-filter\"\n          }\n      }\n```\n\n\n1. \u4e8b\u524d\u4f5c\u696d\n===========\n\n\n1.1. AWS ID\u306e\u53d6\u5f97\n-----------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nAWS_ID=$( \\\n        aws sts get-caller-identity \\\n          --query 'Account' \\\n          --output text \\\n) && echo ${AWS_ID}\n```\n\n```text:\u7d50\u679c(\u4f8b)\n      XXXXXXXXXXXX\n```\n\n\n1.1. IAM Role\u306eARN\u53d6\u5f97\n----------------------\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nIAM_ROLE_ARN=$( \\\n        aws iam get-role \\\n          --role-name ${IAM_ROLE_NAME} \\\n          --query 'Role.Arn' \\\n          --output text \\\n) \\\n        && echo ${IAM_ROLE_ARN}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      arn:aws:iam::XXXXXXXXXXXX:role/inbound-ses-spam-filter\n```\n\n\n1.2. SES\u3067\u5229\u7528\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u306e\u6307\u5b9a\n--------------------------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nSES_IDENTITY='<SES\u3067\u5229\u7528\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u540d>'\n```\n\n\n1.3. Lambda\u95a2\u6570\u540d\u306e\u6c7a\u5b9a\n-----------------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nLAMBDA_FUNC_NAME=\"inbound-ses-spam-filter-python-$( date '+%Y%m%d' )\" \\\n        && echo ${LAMBDA_FUNC_NAME}\n```\n\n\u540c\u540d\u306eLambda\u95a2\u6570\u306e\u4e0d\u5b58\u5728\u78ba\u8a8d\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      A client error (ResourceNotFoundException) occurred when calling the GetFunction operation: Function not found: arn:aws:lambda:us-west-2:XXXXXXXXXXXX:function:inbound-ses-spam-filter-python-20160912\n```\n\n\n1.4. Lambda\u95a2\u6570\n---------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_LAMBDA_FUNC=\"${LAMBDA_FUNC_NAME}.py\"\nPY_FUNC_NAME='lambda_handler'\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n          FILE_LAMBDA_FUNC: ${FILE_LAMBDA_FUNC}\n          PY_FUNC_NAME:     ${PY_FUNC_NAME}\n          SES_IDENTITY:     ${SES_IDENTITY}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat << EOF > ${FILE_LAMBDA_FUNC}\nfrom __future__ import print_function\nfrom datetime import datetime\nimport json\nimport boto3\n\n\ndef print_with_timestamp(*args):\n    print(datetime.utcnow().isoformat(), *args)\n\n\ndef ${PY_FUNC_NAME}(event, context):\n    print_with_timestamp('Starting - inbound-ses-spam-filter')\n\n    ses_notification = event['Records'][0]['ses']\n    message_id = ses_notification['mail']['messageId']\n    receipt = ses_notification['receipt']\n\n    print_with_timestamp('Processing message:', message_id)\n\n    # Check if any spam check failed\n    if (receipt['spfVerdict']['status'] == 'FAIL' or\n            receipt['dkimVerdict']['status'] == 'FAIL' or\n            receipt['spamVerdict']['status'] == 'FAIL' or\n            receipt['virusVerdict']['status'] == 'FAIL'):\n\n        send_bounce_params = {\n            'OriginalMessageId': message_id,\n            'BounceSender': 'mailer-daemon@${SES_IDENTITY}',\n            'MessageDsn': {\n                'ReportingMta': 'dns; ${SES_IDENTITY}',\n                'ArrivalDate': datetime.now().isoformat()\n            },\n            'BouncedRecipientInfoList': []\n        }\n\n        for recipient in receipt['recipients']:\n            send_bounce_params['BouncedRecipientInfoList'].append({\n                'Recipient': recipient,\n                'BounceType': 'ContentRejected'\n            })\n\n        print_with_timestamp('Bouncing message with parameters:')\n        print_with_timestamp(json.dumps(send_bounce_params))\n\n        try:\n            ses_client = boto3.client('ses')\n            bounceResponse = ses_client.send_bounce(**send_bounce_params)\n            print_with_timestamp('Bounce for message ', message_id, ' sent, bounce message ID: ', bounceResponse['MessageId'])\n            return {'disposition': 'stop_rule_set'}\n        except Exception as e:\n            print_with_timestamp(e)\n            print_with_timestamp('An error occurred while sending bounce for message: ', message_id)\n            raise e\n    else:\n        print_with_timestamp('Accepting message:', message_id)\nEOF\n\ncat ${FILE_LAMBDA_FUNC}\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nzip ${LAMBDA_FUNC_NAME}.zip ${FILE_LAMBDA_FUNC}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      adding: inbound-ses-spam-filter-python-20160912.py (deflated 43%)\n```\n\n\n2. Lambda\u95a2\u6570\u306e\u4f5c\u6210\n===================\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nLAMBDA_FUNC_DESC='A simple email filter for protection against spam and viruses as well as DKIM and SPF failures.'\nLAMBDA_RUNTIME='python2.7'\nLAMBDA_HANDLER=\"${LAMBDA_FUNC_NAME}.${PY_FUNC_NAME}\"\nFILE_LAMBDA_ZIP=\"${LAMBDA_FUNC_NAME}.zip\"\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n        LAMBDA_FUNC_NAME:  ${LAMBDA_FUNC_NAME}\n        LAMBDA_FUNC_DESC: \"${LAMBDA_FUNC_DESC}\"\n        LAMBDA_RUNTIME:    ${LAMBDA_RUNTIME}\n        FILE_LAMBDA_ZIP    ${FILE_LAMBDA_ZIP}\n        IAM_ROLE_ARN:      ${IAM_ROLE_ARN}\n        LAMBDA_HANDLER:    ${LAMBDA_HANDLER}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda create-function \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --description \"${LAMBDA_FUNC_DESC}\" \\\n        --zip-file fileb://${FILE_LAMBDA_ZIP} \\\n        --runtime ${LAMBDA_RUNTIME} \\\n        --role ${IAM_ROLE_ARN} \\\n        --handler ${LAMBDA_HANDLER}\n```\n\n```json:\u7d50\u679c(\u4f8b):\n      {\n        \"CodeSha256\": \"tRyAvhC8oug6kZtrpkSUtm79lqNmjrQP9K1oY88MxEo=\",\n        \"FunctionName\": \"inbound-ses-spam-filter-python-20160912\",\n        \"CodeSize\": 970,\n        \"MemorySize\": 128,\n        \"FunctionArn\": \"arn:aws:lambda:us-west-2:XXXXXXXXXXXX:function:inbound-ses-spam-filter-python-20160912\",\n        \"Version\": \"$LATEST\",\n        \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/inbound-ses-spam-filter\",\n        \"Timeout\": 10,\n        \"LastModified\": \"2016-09-10T01:23:45.678+0000\",\n        \"Handler\": \"inbound-ses-spam-filter-python-20160912.lambda_handler\",\n        \"Runtime\": \"python2.7\",\n        \"Description\": \"A simple email filter for protection against spam and viruses as well as DKIM and SPF failures.\"\n      }\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n```\n\n```json:\u7d50\u679c(\u4f8b):\n      {\n        \"Code\": {\n          \"RepositoryType\": \"S3\",\n          \"Location\": \"https://awslambda-ap-ne-1-tasks.s3-ap-northeast-1.amazonaws.com/snapshots/XXXXXXXXXXXX/HelloWorld-2979ba79-b08f-495d-9ee6-46397c95ba13?x-amz-security-token=AQoDYXdzEDoa8AMR6t8h66eOXhN3%2Fx7XpuRxvf7pVn7IuWV4cEmwx0CtZT6yxCJ1%2BWmigYXqGoyQHuBYOWnxbhmwEcTg839qMuhSu1fk0fXpXf0oJOLkhKMudNqhdElyFQpzyT6Q8GDfhAsfbX9wvwCDTty4imxz7MczF%2FQl6tgvTYdip08ap5fAyrknZGV1%2B1Ggnp5w6JOjydYxuUsWwhoxoEWzi7SoVTmpRQQA91c4VW9lNotOAHACFxo6klzDPM8mxR9RJl66WxFugL0wQJyLUpmtjS9XoArD86sEWWiIccMpV2BQipTPQlzL%2F1Hoy%2BDF6QUxyPUihlDjPBoJTISTP8W1wxmzW%2BLbilAfFQRPY7CFjzR0k%2FA%2FIX5x9iyz52Pu1Q0ASTw1l%2Fq%2Fo3pRbvzWR79QS%2BpxXrwbYzoQHKiK62DSTsQo5tqKPsiDCYzrPxbq8lm7pNBPG%2FsxjePRWBVJeRl08WxEjSjoRRwBOPX5mz1BCUoUBPGG5tEENp87A%2FCdDgibFWM5DdYhwtaYPY7FTmi8DvqjQHL9jOmP8YuVteBTBcv8nFW6UbErPjwwn79FKG1u5M9HoTWUqUMBByz6D4tTRSEw6iJU7XdCujFnhnHe5V8imZ1KGI7fDWpciJhrhml0wnKPCK%2Fe9lK1P2kO7ldSWc7zn5hcIOD2tbEF&AWSAccessKeyId=ASIAJFVALOKV5SJVYPPA&Expires=1445825978&Signature=bvwu1Ny34LgTmZeOO3q4sn7x3Fg%3D\"\n        },\n        \"Configuration\": {\n          \"Version\": \"$LATEST\",\n          \"CodeSha256\": \"tRyAvhC8oug6kZtrpkSUtm79lqNmjrQP9K1oY88MxEo=\",\n          \"FunctionName\": \"inbound-ses-spam-filter-python-20160912\",\n          \"MemorySize\": 128,\n          \"CodeSize\": 350,\n          \"FunctionArn\": \"arn:aws:lambda:us-west-2:XXXXXXXXXXXX:function:inbound-ses-spam-filter-python-20160912\",\n          \"Handler\": \"inbound-ses-spam-filter-python-20160912.lambda_handler\",\n          \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/inbound-ses-spam-filter\",\n          \"Timeout\": 10,\n          \"LastModified\": \"2016-09-10T01:23:45.678+0000\",\n          \"Runtime\": \"python2.7\",\n          \"Description\": \"A simple email filter for protection against spam and viruses as well as DKIM and SPF failures.\"\n        }\n      }\n```\n\n\n3. Lambda\u95a2\u6570\u306e\u52d5\u4f5c\u78ba\u8a8d\n=======================\n\n\n3.1. \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\n-------------------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_INPUT=\"${LAMBDA_FUNC_NAME}-data.json\" \\\n        && echo ${FILE_INPUT}\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n        FILE_INPUT:         ${FILE_INPUT}\n        AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}\n\nETX\n```\n\n```bash:\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf:\ncat << EOF > ${FILE_INPUT}\n{\n        \"Records\": [\n          {\n            \"eventVersion\": \"1.0\",\n            \"ses\": {\n              \"mail\": {\n                \"commonHeaders\": {\n                  \"from\": [\n                    \"Jane Doe <janedoe@example.com>\"\n                  ],\n                  \"to\": [\n                    \"johndoe@example.com\"\n                  ],\n                  \"returnPath\": \"janedoe@example.com\",\n                  \"messageId\": \"<0123456789example.com>\",\n                  \"date\": \"Wed, 7 Oct 2015 12:34:56 -0700\",\n                  \"subject\": \"Test Subject\"\n                },\n                \"source\": \"janedoe@example.com\",\n                \"timestamp\": \"1970-01-01T00:00:00.000Z\",\n                \"destination\": [\n                  \"johndoe@example.com\"\n                ],\n                \"headers\": [\n                  {\n                    \"name\": \"Return-Path\",\n                    \"value\": \"<janedoe@example.com>\"\n                  },\n                  {\n                    \"name\": \"Received\",\n                    \"value\": \"from mailer.example.com (mailer.example.com [203.0.113.1]) by inbound-smtp.${AWS_DEFAULT_REGION}.amazonaws.com with SMTP id o3vrnil0e2ic28trm7dfhrc2v0cnbeccl4nbp0g1 for johndoe@example.com; Wed, 07 Oct 2015 12:34:56 +0000 (UTC)\"\n                  },\n                  {\n                    \"name\": \"DKIM-Signature\",\n                    \"value\": \"v=1; a=rsa-sha256; c=relaxed/relaxed; d=example.com; s=example; h=mime-version:from:date:message-id:subject:to:content-type; bh=jX3F0bCAI7sIbkHyy3mLYO28ieDQz2R0P8HwQkklFj4=; b=sQwJ+LMe9RjkesGu+vqU56asvMhrLRRYrWCbVt6WJulueecwfEwRf9JVWgkBTKiL6m2hr70xDbPWDhtLdLO+jB3hzjVnXwK3pYIOHw3vxG6NtJ6o61XSUwjEsp9tdyxQjZf2HNYee873832l3K1EeSXKzxYk9Pwqcpi3dMC74ct9GukjIevf1H46hm1L2d9VYTL0LGZGHOAyMnHmEGB8ZExWbI+k6khpurTQQ4sp4PZPRlgHtnj3Zzv7nmpTo7dtPG5z5S9J+L+Ba7dixT0jn3HuhaJ9b+VThboo4YfsX9PMNhWWxGjVksSFOcGluPO7QutCPyoY4gbxtwkN9W69HA==\"\n                  },\n                  {\n                    \"name\": \"MIME-Version\",\n                    \"value\": \"1.0\"\n                  },\n                  {\n                    \"name\": \"From\",\n                    \"value\": \"Jane Doe <janedoe@example.com>\"\n                  },\n                  {\n                    \"name\": \"Date\",\n                    \"value\": \"Wed, 7 Oct 2015 12:34:56 -0700\"\n                  },\n                  {\n                    \"name\": \"Message-ID\",\n                    \"value\": \"<0123456789example.com>\"\n                  },\n                  {\n                    \"name\": \"Subject\",\n                    \"value\": \"Test Subject\"\n                  },\n                  {\n                    \"name\": \"To\",\n                    \"value\": \"johndoe@example.com\"\n                  },\n                  {\n                    \"name\": \"Content-Type\",\n                    \"value\": \"text/plain; charset=UTF-8\"\n                  }\n                ],\n                \"headersTruncated\": false,\n                \"messageId\": \"o3vrnil0e2ic28trm7dfhrc2v0clambda4nbp0g1\"\n              },\n              \"receipt\": {\n                \"recipients\": [\n                  \"johndoe@example.com\"\n                ],\n                \"timestamp\": \"1970-01-01T00:00:00.000Z\",\n                \"spamVerdict\": {\n                  \"status\": \"PASS\"\n                },\n                \"dkimVerdict\": {\n                  \"status\": \"PASS\"\n                },\n                \"processingTimeMillis\": 574,\n                \"action\": {\n                  \"type\": \"Lambda\",\n                  \"invocationType\": \"Event\",\n                  \"functionArn\": \"arn:aws:lambda:${AWS_DEFAULT_REGION}:012345678912:function:Example\"\n                },\n                \"spfVerdict\": {\n                  \"status\": \"PASS\"\n                },\n                \"virusVerdict\": {\n                  \"status\": \"PASS\"\n                }\n              }\n            },\n            \"eventSource\": \"aws:ses\"\n          }\n        ]\n}\nEOF\n\ncat ${FILE_INPUT}\n```\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u58ca\u308c\u3066\u306a\u3044\u304b\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\njsonlint -q ${FILE_INPUT}\n```\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u306a\u3051\u308c\u3070OK\u3067\u3059\u3002\n\n\n3.2. lambda\u95a2\u6570\u306e\u624b\u52d5\u5b9f\u884c\n-------------------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_OUTPUT_LAMBDA=\"${LAMBDA_FUNC_NAME}-out.txt\"\nFILE_LOG_LAMBDA=\"${LAMBDA_FUNC_NAME}-$(date +%Y%m%d%H%M%S).log\"\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n        LAMBDA_FUNC_NAME:   ${LAMBDA_FUNC_NAME}\n        FILE_INPUT:         ${FILE_INPUT}\n        FILE_OUTPUT_LAMBDA: ${FILE_OUTPUT_LAMBDA}\n        FILE_LOG_LAMBDA:    ${FILE_LOG_LAMBDA}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda invoke \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --log-type Tail \\\n        --payload file://${FILE_INPUT} \\\n        ${FILE_OUTPUT_LAMBDA} \\\n        > ${FILE_LOG_LAMBDA}\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'StatusCode'\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      200\n```\n\n\n3.3. lambda\u95a2\u6570\u306e\u5b9f\u884c\u7d50\u679c\u306e\u78ba\u8a8d\n-------------------------------\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_OUTPUT_LAMBDA}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      null\n```\n\n\n3.4. lambda\u95a2\u6570\u306e\u30ed\u30b0\u306e\u78ba\u8a8d\n---------------------------\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'LogResult' \\\n        | sed 's/\"//' \\\n        | base64 --decode\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      START RequestId: c1d2232a-75a0-11e6-a600-25217ddb12d8 Version: $LATEST\n      2016-09-10T08:46:42.782421 Starting - inbound-ses-spam-filter\n      2016-09-10T08:46:42.782481 Processing message: o3vrnil0e2ic28trm7dfhrc2v0clambda4nbp0g1\n      2016-09-10T08:46:42.782547 Accepting message: o3vrnil0e2ic28trm7dfhrc2v0clambda4nbp0g1\n      END RequestId: c1d2232a-75a0-11e6-a600-25217ddb12d8\n      REPORT RequestId: c1d2232a-75a0-11e6-a600-25217ddb12d8      Duration: 0.63 ms       Billed Duration: 100 ms         Memory Size: 128 MB     Max Memory Used: 43 MB\n```\n\n\n4. permission: SES\n==================\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nLAMBDA_STAT_ID='AllowSES'\nLAMBDA_PERMIT_ACTION='lambda:InvokeFunction'\nLAMBDA_PERMIT_PRINCIPAL='ses.amazonaws.com'\nSOURCE_AWS_ID=${AWS_ID}\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n        LAMBDA_FUNC_NAME:        ${LAMBDA_FUNC_NAME}\n        LAMBDA_STAT_ID:          ${LAMBDA_STAT_ID}\n        LAMBDA_PERMIT_ACTION:    ${LAMBDA_PERMIT_ACTION}\n        LAMBDA_PERMIT_PRINCIPAL: ${LAMBDA_PERMIT_PRINCIPAL}\n        SOURCE_AWS_ID:           ${SOURCE_AWS_ID}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda add-permission \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --statement-id ${LAMBDA_STAT_ID} \\\n        --action ${LAMBDA_PERMIT_ACTION} \\\n        --principal ${LAMBDA_PERMIT_PRINCIPAL} \\\n        --source-account ${SOURCE_AWS_ID}\n```\n\n```json:\u7d50\u679c(\u4f8b):\n      {\n        \"Statement\": \"{\"Condition\":{\"StringEquals\":{\"AWS:SourceAccount\":\"XXXXXXXXXXXX\"}},\"Action\":[\"lambda:InvokeFunction\"],\"Resource\":\"arn:aws:lambda:us-west-2:XXXXXXXXXXXX:function:inbound-ses-spam-filter-python-20160912\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ses.amazonaws.com\"},\"Sid\":\"AllowSES\"}\"\n      }\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda get-policy \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        | sed 's/\\\\//g' | sed 's/\\\"{/{/' | sed 's/\\\"$//' \n```\n\n```json:\u7d50\u679c(\u4f8b):\n      {\n        \"Policy\": {\"Version\":\"2012-10-17\",\"Statement\":[{\"Condition\":{\"StringEquals\":{\"AWS:SourceAccount\":\"XXXXXXXXXXXX\"}},\"Action\":\"lambda:InvokeFunction\",\"Resource\":\"arn:aws:lambda:us-west-2:XXXXXXXXXXXX:function:inbound-ses-spam-filter-python-20160912\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ses.amazonaws.com\"},\"Sid\":\"AllowSES\"}],\"Id\":\"default\"}\n      }\n```\n\n\n\u5b8c\u4e86\n====\n"}