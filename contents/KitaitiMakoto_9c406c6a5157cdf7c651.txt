{"context": " More than 1 year has passed since last update.ActiveRecord\u3067\u30af\u30a8\u30ea\u30fc\u3092\u7d44\u307f\u7acb\u3066\u308b\u6642\u306b\u3001joins\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066INNER JOIN\u53e5\u3092\u4ed8\u3051\u308b\u3068\u3001\u53d6\u3063\u3066\u304d\u305f\u30ec\u30b3\u30fc\u30c9\u3092save\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u691c\u8a3c\u3068\u3001save\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3001\u65b9\u6cd5\u3002\nrequire 'logger'\nrequire 'active_record'\n\n# \u30c6\u30fc\u30d6\u30eb\u5b9a\u7fa9\nclass CreateShelves < ActiveRecord::Migration\n  def change\n    create_table :shelves\n  end\nend\n\nclass CreateBooks < ActiveRecord::Migration\n  def change\n    create_table :books do |t|\n      t.integer :shelf_id\n    end\n  end\nend\n\n# \u30e2\u30c7\u30eb\u5b9a\u7fa9\nclass Shelf < ActiveRecord::Base\n  has_many :books\nend\n\nclass Book < ActiveRecord::Base\n  belongs_to :shelf\nend\n\n# ActiveRecord\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nlogger = Logger.new($stderr)\nActiveRecord::Base.logger = logger # SQL\u3092\u30ed\u30b0\u306b\u51fa\u3059\u3088\u3046\u306b\u3059\u308b\nActiveRecord::Base.establish_connection adapter: 'sqlite3', database: ':memory:'\n\n# \u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\nCreateShelves.new.change\nCreateBooks.new.change\n\n# \u30ec\u30b3\u30fc\u30c9\u4f5c\u6210\nshelf = Shelf.create\nshelf.books << Book.new\n\n# \u3084\u3063\u3068\u672c\u984c\n# \u3053\u308c\u3060\u3068readonly\u306b\u306a\u308b\nshelves = Shelf.joins(:books)\nbegin\n  shelves.first.save\nrescue => err\n  logger.error \"#{err.class} (#{err.message})\" # => ActiveRecord::ReadOnlyRecord (ActiveRecord::ReadOnlyRecord)\nend\n\n# \u3053\u3046\u3059\u308c\u3070save\u3067\u304d\u308b\nshelves = Shelf.joins(:books).readonly(false)\nshelves.first.save # => true\n\nsave!\u3058\u3083\u306a\u304f\u3066save\u306a\u306e\u306b\u4f8b\u5916\u3092\u8d77\u3053\u3059\u304b\u3089\u3044\u3084\u306a\u611f\u3058\u3067\u3059\u306d\u3002\nActiveRecord\u3067\u30af\u30a8\u30ea\u30fc\u3092\u7d44\u307f\u7acb\u3066\u308b\u6642\u306b\u3001`joins`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066`INNER JOIN`\u53e5\u3092\u4ed8\u3051\u308b\u3068\u3001\u53d6\u3063\u3066\u304d\u305f\u30ec\u30b3\u30fc\u30c9\u3092`save`\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u691c\u8a3c\u3068\u3001`save`\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3001\u65b9\u6cd5\u3002\n\n```ruby\nrequire 'logger'\nrequire 'active_record'\n\n# \u30c6\u30fc\u30d6\u30eb\u5b9a\u7fa9\nclass CreateShelves < ActiveRecord::Migration\n  def change\n    create_table :shelves\n  end\nend\n\nclass CreateBooks < ActiveRecord::Migration\n  def change\n    create_table :books do |t|\n      t.integer :shelf_id\n    end\n  end\nend\n\n# \u30e2\u30c7\u30eb\u5b9a\u7fa9\nclass Shelf < ActiveRecord::Base\n  has_many :books\nend\n\nclass Book < ActiveRecord::Base\n  belongs_to :shelf\nend\n\n# ActiveRecord\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nlogger = Logger.new($stderr)\nActiveRecord::Base.logger = logger # SQL\u3092\u30ed\u30b0\u306b\u51fa\u3059\u3088\u3046\u306b\u3059\u308b\nActiveRecord::Base.establish_connection adapter: 'sqlite3', database: ':memory:'\n\n# \u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\nCreateShelves.new.change\nCreateBooks.new.change\n\n# \u30ec\u30b3\u30fc\u30c9\u4f5c\u6210\nshelf = Shelf.create\nshelf.books << Book.new\n\n# \u3084\u3063\u3068\u672c\u984c\n# \u3053\u308c\u3060\u3068readonly\u306b\u306a\u308b\nshelves = Shelf.joins(:books)\nbegin\n  shelves.first.save\nrescue => err\n  logger.error \"#{err.class} (#{err.message})\" # => ActiveRecord::ReadOnlyRecord (ActiveRecord::ReadOnlyRecord)\nend\n\n# \u3053\u3046\u3059\u308c\u3070save\u3067\u304d\u308b\nshelves = Shelf.joins(:books).readonly(false)\nshelves.first.save # => true\n```\n\n`save!`\u3058\u3083\u306a\u304f\u3066`save`\u306a\u306e\u306b\u4f8b\u5916\u3092\u8d77\u3053\u3059\u304b\u3089\u3044\u3084\u306a\u611f\u3058\u3067\u3059\u306d\u3002", "tags": ["Ruby", "ActiveRecord"]}