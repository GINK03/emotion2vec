{"tags": ["PlayFramework2.2", "FindBugs", "PMD", "Jenkins", "CPD"], "context": " More than 1 year has passed since last update.Play Framework\u3067FindBugs, JaCoCo, CPD\u306b\u3088\u308b\u30c1\u30a7\u30c3\u30af\u3092\u304a\u3053\u306a\u3046\u3002\nsbt\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u8ffd\u52a0\u304c\u5fc5\u8981\u3002\n\u6700\u65b0\u7248\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306a\u3069\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\u5185\u3067\u78ba\u8a8d\u3057\u305f\n\nhttp://dl.bintray.com/sbt/sbt-plugin-releases/de.johoop/\nhttps://github.com/sbt/findbugs4sbt\nhttps://github.com/sbt/cpd4sbt\n\nproject/plugins.sbt\u306b\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u8ffd\u52a0\u3059\u308b\u3002typesafe\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u4e0b\u306b\u4e00\u884c\u3042\u3051\u3066\u8ffd\u8a18\u3057\u305f\u3002\n\nproject/plugins.sbt\nresolvers += \"Typesafe repository\" at \"http://repo.typesafe.com/typesafe/releases/\"\n\nresolvers += \"sbt community repository\" at \"http://dl.bintray.com/sbt/sbt-plugin-releases/\"\n\n\n\u540c\u3058\u304fproject/plugins.sbt\u306b\u30d7\u30e9\u30b0\u30a4\u30f3\u8ffd\u52a0\u3092\u8ffd\u8a18\u3059\u308b\u3002\n\nproject/plugins.sbt\n\nlibraryDependencies ++= Seq(\n  \"net.sourceforge.pmd\" % \"pmd\" % \"5.1.0\"\n)\n\naddSbtPlugin(\"de.johoop\" % \"jacoco4sbt\" % \"2.1.4\")\n\naddSbtPlugin(\"de.johoop\" % \"findbugs4sbt\" % \"1.3.0\")\n\naddSbtPlugin(\"de.johoop\" % \"cpd4sbt\" % \"1.1.4\")\n\naddSbtPlugin(\"de.johoop\" % \"sbt-testng-plugin\" % \"3.0.0\")\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u76f4\u4e0b\u306bbuild.sbt\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\n\nbuild.sbt\nimport de.johoop.jacoco4sbt._\nimport JacocoPlugin._\nimport de.johoop.findbugs4sbt.FindBugs._\nimport de.johoop.cpd4sbt.CopyPasteDetector._\n\nplay.Project.playJavaSettings\n\nseq(jacoco.settings : _*)\n\nfindbugsSettings\n\ncpdSettings\n\n\n\nproject/Build.scala\u304b\u3089build.sbt\u3078\u306e\u79fb\u884c\u304c\u307e\u3060\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3068\u308a\u3042\u3048\u305aBuild.scala\u3092\u4f5c\u3063\u3066PMD\u3092\u5b9f\u884c\u3059\u308b\u3002\nproject/pmd-ruleset.xml\u306bPMD\u306e\u30eb\u30fc\u30eb\u30bb\u30c3\u30c8\u3092\u7528\u610f\u3059\u308b\u3002\n\u3053\u3053\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3082\u3089\u3063\u305f\u3002\nhttps://github.com/ymasory/play-pmd-checkstyle\n\nproject/Build.scala\nimport sbt._\nimport Keys._\nimport play.Project._\nimport de.johoop.jacoco4sbt._\nimport JacocoPlugin._\nimport de.johoop.findbugs4sbt._\nimport de.johoop.findbugs4sbt.FindBugs._\nimport de.johoop.cpd4sbt.CopyPasteDetector._\n\nobject ApplicationBuild extends Build {\n\n  val appName         = \"MyProject\"\n  val appVersion      = \"1.0-SNAPSHOT\"\n\n  val main = play.Project(appName, appVersion).settings(\n    ProjectSettings.all: _*\n  )  \n}\n\nobject ProjectSettings {\n\n  def all: Seq[sbt.Project.Setting[_]] = List(\n    PmdSettings.all\n  ).flatten\n\n  object PmdSettings {\n\n    val pmd = TaskKey[Unit](\"pmd\", \"run PMD\")\n    val pmdTask = pmd <<=\n      (streams, baseDirectory, sourceDirectory in Compile, target) map {\n        (streams, base, src, target) =>\n        import net.sourceforge.pmd.PMD.{ main => PmdMain }\n        import streams.log\n\n        val args = List(\n          \"-d\",\n          src.getAbsolutePath,\n          \"-f\",\n          \"xml\",\n          \"-R\",\n          (base / \"project\" / \"pmd-ruleset.xml\").getAbsolutePath,\n          \"-reportfile\",\n          (target / \"scala-2.10/pmd.xml\").getAbsolutePath\n        )\n\n        log info (\"using pmd args \" + args)\n        trappingExits {\n          PmdMain(args.toArray)\n        }\n      }\n      val all = Seq(pmdTask)\n  }\n\n  def trappingExits(thunk: => Unit): Unit = {\n    val originalSecManager = System.getSecurityManager\n    case class NoExitsException() extends SecurityException\n    System setSecurityManager new SecurityManager() {\n      import java.security.Permission\n      override def checkPermission(perm: Permission) {\n        if (perm.getName startsWith \"exitVM\") throw NoExitsException()\n      }\n    }\n    try {\n      thunk\n    } finally {\n      System setSecurityManager originalSecManager\n    }\n  }\n}\n\n\n\u5b9f\u884c\u306fplay\u30b3\u30de\u30f3\u30c9\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\n\ncommand\nplay jacoco:cover findbugs cpd pmd\n\n\n\u30ec\u30dd\u30fc\u30c8\u306e\u51fa\u529b\u5148\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3002\n\ntarget/scala-2.10/jacoco/\ntarget/scala-2.10/cpd/cpd.xml\ntarget/scala-2.10/findbuts/report.xml\ntarget/scala-2.10/pmd.xml\n\nJenkins\u3067\u3053\u308c\u3089\u306e\u30ec\u30dd\u30fc\u30c8\u3092\u8aad\u307f\u8fbc\u3080\u306b\u306f\u4e0b\u8a18\u306e\u8a18\u4e8b\u306e\u901a\u308a\u3002\nJenkins+Gradle\u3067Java\u306eCI\u306e\u305f\u3081\u306e\u57fa\u672cbuild.gradle\u8a2d\u5b9a (JUnit,PMD,FindBugs,CPD,JaCoCo)\nhttp://qiita.com/mychaelstyle/items/74baa62b7bf2fe81e309\nPlay Framework\u3067FindBugs, JaCoCo, CPD\u306b\u3088\u308b\u30c1\u30a7\u30c3\u30af\u3092\u304a\u3053\u306a\u3046\u3002\nsbt\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u8ffd\u52a0\u304c\u5fc5\u8981\u3002\n\n\u6700\u65b0\u7248\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306a\u3069\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\u5185\u3067\u78ba\u8a8d\u3057\u305f\n\n+ http://dl.bintray.com/sbt/sbt-plugin-releases/de.johoop/\n+ https://github.com/sbt/findbugs4sbt\n+ https://github.com/sbt/cpd4sbt\n\n\nproject/plugins.sbt\u306b\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u8ffd\u52a0\u3059\u308b\u3002typesafe\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u4e0b\u306b\u4e00\u884c\u3042\u3051\u3066\u8ffd\u8a18\u3057\u305f\u3002\n\n```scala:project/plugins.sbt\nresolvers += \"Typesafe repository\" at \"http://repo.typesafe.com/typesafe/releases/\"\n\nresolvers += \"sbt community repository\" at \"http://dl.bintray.com/sbt/sbt-plugin-releases/\"\n```\n\n\u540c\u3058\u304fproject/plugins.sbt\u306b\u30d7\u30e9\u30b0\u30a4\u30f3\u8ffd\u52a0\u3092\u8ffd\u8a18\u3059\u308b\u3002\n\n```scala:project/plugins.sbt\n\nlibraryDependencies ++= Seq(\n  \"net.sourceforge.pmd\" % \"pmd\" % \"5.1.0\"\n)\n\naddSbtPlugin(\"de.johoop\" % \"jacoco4sbt\" % \"2.1.4\")\n\naddSbtPlugin(\"de.johoop\" % \"findbugs4sbt\" % \"1.3.0\")\n\naddSbtPlugin(\"de.johoop\" % \"cpd4sbt\" % \"1.1.4\")\n\naddSbtPlugin(\"de.johoop\" % \"sbt-testng-plugin\" % \"3.0.0\")\n```\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u76f4\u4e0b\u306bbuild.sbt\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n```scala:build.sbt\nimport de.johoop.jacoco4sbt._\nimport JacocoPlugin._\nimport de.johoop.findbugs4sbt.FindBugs._\nimport de.johoop.cpd4sbt.CopyPasteDetector._\n\nplay.Project.playJavaSettings\n\nseq(jacoco.settings : _*)\n\nfindbugsSettings\n\ncpdSettings\n\n```\n\nproject/Build.scala\u304b\u3089build.sbt\u3078\u306e\u79fb\u884c\u304c\u307e\u3060\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3068\u308a\u3042\u3048\u305aBuild.scala\u3092\u4f5c\u3063\u3066PMD\u3092\u5b9f\u884c\u3059\u308b\u3002\nproject/pmd-ruleset.xml\u306bPMD\u306e\u30eb\u30fc\u30eb\u30bb\u30c3\u30c8\u3092\u7528\u610f\u3059\u308b\u3002\n\n\u3053\u3053\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3082\u3089\u3063\u305f\u3002\nhttps://github.com/ymasory/play-pmd-checkstyle\n\n```scala:project/Build.scala\nimport sbt._\nimport Keys._\nimport play.Project._\nimport de.johoop.jacoco4sbt._\nimport JacocoPlugin._\nimport de.johoop.findbugs4sbt._\nimport de.johoop.findbugs4sbt.FindBugs._\nimport de.johoop.cpd4sbt.CopyPasteDetector._\n\nobject ApplicationBuild extends Build {\n\n  val appName         = \"MyProject\"\n  val appVersion      = \"1.0-SNAPSHOT\"\n\n  val main = play.Project(appName, appVersion).settings(\n    ProjectSettings.all: _*\n  )  \n}\n\nobject ProjectSettings {\n\n  def all: Seq[sbt.Project.Setting[_]] = List(\n    PmdSettings.all\n  ).flatten\n\n  object PmdSettings {\n\n    val pmd = TaskKey[Unit](\"pmd\", \"run PMD\")\n    val pmdTask = pmd <<=\n      (streams, baseDirectory, sourceDirectory in Compile, target) map {\n        (streams, base, src, target) =>\n        import net.sourceforge.pmd.PMD.{ main => PmdMain }\n        import streams.log\n\n        val args = List(\n          \"-d\",\n          src.getAbsolutePath,\n          \"-f\",\n          \"xml\",\n          \"-R\",\n          (base / \"project\" / \"pmd-ruleset.xml\").getAbsolutePath,\n          \"-reportfile\",\n          (target / \"scala-2.10/pmd.xml\").getAbsolutePath\n        )\n\n        log info (\"using pmd args \" + args)\n        trappingExits {\n          PmdMain(args.toArray)\n        }\n      }\n      val all = Seq(pmdTask)\n  }\n\n  def trappingExits(thunk: => Unit): Unit = {\n    val originalSecManager = System.getSecurityManager\n    case class NoExitsException() extends SecurityException\n    System setSecurityManager new SecurityManager() {\n      import java.security.Permission\n      override def checkPermission(perm: Permission) {\n        if (perm.getName startsWith \"exitVM\") throw NoExitsException()\n      }\n    }\n    try {\n      thunk\n    } finally {\n      System setSecurityManager originalSecManager\n    }\n  }\n}\n```\n\n\u5b9f\u884c\u306fplay\u30b3\u30de\u30f3\u30c9\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\n\n```shell-session:command\nplay jacoco:cover findbugs cpd pmd\n```\n\n\u30ec\u30dd\u30fc\u30c8\u306e\u51fa\u529b\u5148\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3002\n\n* target/scala-2.10/jacoco/\n* target/scala-2.10/cpd/cpd.xml\n* target/scala-2.10/findbuts/report.xml\n* target/scala-2.10/pmd.xml\n\nJenkins\u3067\u3053\u308c\u3089\u306e\u30ec\u30dd\u30fc\u30c8\u3092\u8aad\u307f\u8fbc\u3080\u306b\u306f\u4e0b\u8a18\u306e\u8a18\u4e8b\u306e\u901a\u308a\u3002\n\nJenkins+Gradle\u3067Java\u306eCI\u306e\u305f\u3081\u306e\u57fa\u672cbuild.gradle\u8a2d\u5b9a (JUnit,PMD,FindBugs,CPD,JaCoCo)\nhttp://qiita.com/mychaelstyle/items/74baa62b7bf2fe81e309\n"}