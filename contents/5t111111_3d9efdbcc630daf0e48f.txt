{"context": " More than 1 year has passed since last update.\u4eca\u306f\u591a\u5206 JavaScript \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u304b\u3063\u3053\u3044\u3044\u30b0\u30e9\u30d5\u3068\u304b\u3092\u3072\u3087\u3044\u3072\u3087\u3044\u4f5c\u3063\u3066\u304f\u308c\u305f\u308a\u3059\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u3001\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u3044\u3084\u3001\u3088\u304f\u77e5\u3089\u306a\u3044\u3067\u3059\u304c\u3001\u3084\u306f\u308a\u4f7f\u3044\u6163\u308c\u305f matplotlib \u3092 web \u30a2\u30d7\u30ea\u3067\u3082\u4f7f\u3044\u305f\u3044\u3067\u3059\u3002\n\u3067\u3082\u3001\u3044\u304b\u3093\u305b\u3093 matplotlib \u306f X11 \u3092\u4f7f\u3063\u3066\u63cf\u753b\u3059\u308b\u3082\u306e\u3067\u3059\u306e\u3067\u3001web \u30a2\u30d7\u30ea\u3067\u4f7f\u3046\u306e\u306f\u96e3\u3057\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3001\u3068\u601d\u3063\u305f\u3089\u3001\u305d\u3093\u306a\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b AGG (Anti-Grain Geometry) \u3092\u4f7f\u3044\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\u3084\u308b\u3053\u3068\nmatplotlib \u3067\u4f5c\u3063\u305f\u30b0\u30e9\u30d5\u3092 flask web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u63cf\u753b\u3057\u307e\u3059\u3002\nflask \u3092\u4f7f\u3046\u7406\u7531\u306f\u3001\u4fbf\u5229\u3060\u304b\u3089\u3001\u3050\u3089\u3044\u306a\u306e\u3067\u3001\u4f7f\u308f\u306a\u304f\u3066\u3082\u540c\u3058\u3088\u3046\u306b\u3059\u308c\u3070\u540c\u3058\u3088\u3046\u306b\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u4ee5\u4e0b\u306e2\u30d1\u30bf\u30fc\u30f3\u3067\u3084\u308a\u307e\u3059\u3002\n\npng \u30c7\u30fc\u30bf\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u8fd4\u3059\n\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4f5c\u308b\n\n\npng \u30c7\u30fc\u30bf\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u8fd4\u3059\n\n\u56f3\u8868\u3092\u3064\u304f\u308b\n\u3068\u308a\u3042\u3048\u305a\u4f55\u304b\u8868\u793a\u3059\u308b\u7528\u306e\u56f3\u8868\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001\n\nx\u8ef8: 1\u304b\u3089284\u307e\u3067\u306e\u6570\u5024\ny\u8ef8: x\u306b\u30e9\u30f3\u30c0\u30e0\u3067436\u304b\u3089875\u3092\u304b\u3051\u305f\u6570\u5024\n\n\u3068\u3044\u3046\u30b0\u30e9\u30d5\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u6570\u5b57\u306b\u6df1\u3044\u610f\u5473\u306f\u7121\u3044\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u5b9f\u969b\u3042\u308a\u307e\u305b\u3093\u3002\n\u30b0\u30e9\u30d5\u306e\u30bf\u30a4\u30c8\u30eb\u306f\u300cIMINASHI GRAPH\u300d\u3068\u304b\u304c\u76f8\u5fdc\u3057\u3044\u3067\u3057\u3087\u3046\u3002\nfig, ax = matplotlib.pyplot.subplots()\nax.set_title(u'IMINASHI GRAPH')\nx_ax = range(1, 284)\ny_ax = [x * random.randint(436, 875) for x in x_ax]\nax.plot(x_ax, y_ax)\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n\n\nweb \u30a2\u30d7\u30ea\u3067\u8868\u793a\u3059\u308b\n\u51e6\u7406\u306e\u6d41\u308c\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u56f3\u8868\u306e png \u30c7\u30fc\u30bf\u3092\u3064\u304f\u308b\n\u30c7\u30fc\u30bf\u3092 cStringIO.StringIO \u306e\u30d0\u30c3\u30d5\u30a1\u306b\u66f8\u304d\u8fbc\u3080\n\u753b\u50cf\u30b3\u30f3\u30c6\u30f3\u30c4\u3068\u3057\u3066\u30c7\u30fc\u30bf\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u8fd4\u3059\n\n\u305f\u3076\u3093\u3001\u30b3\u30fc\u30c9\u3092\u898b\u305f\u307b\u3046\u304c\u65e9\u3044\u3067\u3057\u3087\u3046\u3002\n@app.route('/graph1')\ndef graph1():\n    import matplotlib.pyplot\n    from matplotlib.backends.backend_agg import FigureCanvasAgg\n    import cStringIO\n    import random\n\n    fig, ax = matplotlib.pyplot.subplots()\n    ax.set_title(u'IMINASHI GRAPH')\n    x_ax = range(1, 284)\n    y_ax = [x * random.randint(436, 875) for x in x_ax]\n    ax.plot(x_ax, y_ax)\n\n    canvas = FigureCanvasAgg(fig)\n    buf = cStringIO.StringIO()\n    canvas.print_png(buf)\n    data = buf.getvalue()\n\n    response = make_response(data)\n    response.headers['Content-Type'] = 'image/png'\n    response.headers['Content-Length'] = len(data)\n    return response\n\n\u3053\u308c\u3067\u3001web \u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3059\u308c\u3070\u3001\u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\n\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4f5c\u308b\n\u3082\u30461\u3053\u306e\u65b9\u306e\u3084\u3064\u3067\u3059\u3002\n\u51e6\u7406\u306f\u3053\u3046\u3002\n\n\u56f3\u8868\u3092 png \u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u66f8\u304d\u51fa\u3059\npng \u30d5\u30a1\u30a4\u30eb\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u8fd4\u3059\npng \u30d5\u30a1\u30a4\u30eb\u3092\u6d88\u3059\n\n\u304a\u3082\u3057\u308d\u3044\u306e\u306f 3. \u3067\u3057\u3087\u3046\u3002\n\u8907\u6570\u304b\u3089\u306e\u540c\u6642\u30a2\u30af\u30bb\u30b9\u306a\u3069\u3092\u8003\u3048\u308b\u3068\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u30e9\u30f3\u30c0\u30e0\u6587\u5b57\u5217\u306a\u3069\u306b\u3059\u308b\u306e\u304c\u3044\u3044\u3088\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\u305f\u3060\u305d\u306e\u5834\u5408\u3001\u3069\u3093\u3069\u3093\u30d5\u30a1\u30a4\u30eb\u304c\u5897\u3048\u3066\u3044\u3063\u3061\u3083\u3046\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u8868\u793a\u3057\u305f\u5f8c\u306b\u3061\u3083\u3093\u3068\u6d88\u3055\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002\n\u3055\u3063\u304d\u306e\u3068\u540c\u3058\u30b0\u30e9\u30d5\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u30b0\u30e9\u30d5\u306e\u30bf\u30a4\u30c8\u30eb\u306f\u300cIMINASHI GRAPH 2\u300d\u3068\u304b\u304c\u76f8\u5fdc\u3057\u3044\u3067\u3057\u3087\u3046\u3002\n@app.route('/graph2')\ndef graph2():\n    import matplotlib.pyplot\n    from matplotlib.backends.backend_agg import FigureCanvasAgg\n    import random\n    import string\n    import os\n\n    class TempImage(object):\n\n        def __init__(self, file_name):\n            self.file_name = file_name\n\n        def create_png(self):\n            fig, ax = matplotlib.pyplot.subplots()\n            ax.set_title(u'IMINASHI GRAPH 2')\n            x_ax = range(1, 284)\n            y_ax = [x * random.randint(436, 875) for x in x_ax]\n            ax.plot(x_ax, y_ax)\n\n            canvas = FigureCanvasAgg(fig)\n            canvas.print_figure(self.file_name)\n\n        def __enter__(self):\n            return self\n\n        def __exit__(self, exc_type, exc_value, traceback):\n            os.remove(self.file_name)\n\n    chars = string.digits + string.letters\n    img_name = ''.join(random.choice(chars) for i in xrange(64)) + '.png'\n\n    with TempImage(img_name) as img:\n        img.create_png()\n        return send_file(img_name, mimetype='image/png')\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u305f\u5f8c\u306b\u524a\u9664\u3059\u308b\u65b9\u6cd5\u306f\u3044\u304f\u3064\u304b\u8003\u3048\u3089\u308c\u307e\u3059\u304c\u3001\u3053\u306e\u4f8b\u3067\u306f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30de\u30cd\u30fc\u30b8\u30e3\u3092\u4f7f\u3063\u3066\u7834\u68c4\u3057\u3066\u3044\u307e\u3059\u3002\n\u306a\u3093\u304b\u3053\u3046\u3059\u308b\u306e\u304c\u4e00\u756aPython\u3063\u304f\u306a\u30a4\u30e1\u30fc\u30b8\u306a\u306e\u3002\n\n\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\u30d5\u30a1\u30a4\u30eb\u306b\u3057\u3066\u3057\u307e\u3063\u305f\u65b9\u304c\u4f7f\u3044\u3084\u3059\u3044\u304b\u3082\u3002\n\n\u4eca\u306f\u591a\u5206 JavaScript \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u304b\u3063\u3053\u3044\u3044\u30b0\u30e9\u30d5\u3068\u304b\u3092\u3072\u3087\u3044\u3072\u3087\u3044\u4f5c\u3063\u3066\u304f\u308c\u305f\u308a\u3059\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u3001\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u3044\u3084\u3001\u3088\u304f\u77e5\u3089\u306a\u3044\u3067\u3059\u304c\u3001\u3084\u306f\u308a\u4f7f\u3044\u6163\u308c\u305f matplotlib \u3092 web \u30a2\u30d7\u30ea\u3067\u3082\u4f7f\u3044\u305f\u3044\u3067\u3059\u3002\n\n\u3067\u3082\u3001\u3044\u304b\u3093\u305b\u3093 matplotlib \u306f X11 \u3092\u4f7f\u3063\u3066\u63cf\u753b\u3059\u308b\u3082\u306e\u3067\u3059\u306e\u3067\u3001web \u30a2\u30d7\u30ea\u3067\u4f7f\u3046\u306e\u306f\u96e3\u3057\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3001\u3068\u601d\u3063\u305f\u3089\u3001\u305d\u3093\u306a\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b AGG (Anti-Grain Geometry) \u3092\u4f7f\u3044\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\u3084\u308b\u3053\u3068\n======\nmatplotlib \u3067\u4f5c\u3063\u305f\u30b0\u30e9\u30d5\u3092 flask web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u63cf\u753b\u3057\u307e\u3059\u3002\nflask \u3092\u4f7f\u3046\u7406\u7531\u306f\u3001\u4fbf\u5229\u3060\u304b\u3089\u3001\u3050\u3089\u3044\u306a\u306e\u3067\u3001\u4f7f\u308f\u306a\u304f\u3066\u3082\u540c\u3058\u3088\u3046\u306b\u3059\u308c\u3070\u540c\u3058\u3088\u3046\u306b\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u4ee5\u4e0b\u306e2\u30d1\u30bf\u30fc\u30f3\u3067\u3084\u308a\u307e\u3059\u3002\n\n* png \u30c7\u30fc\u30bf\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u8fd4\u3059\n* \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4f5c\u308b\n\npng \u30c7\u30fc\u30bf\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u8fd4\u3059\n=====\n\n\u56f3\u8868\u3092\u3064\u304f\u308b\n---------\n\u3068\u308a\u3042\u3048\u305a\u4f55\u304b\u8868\u793a\u3059\u308b\u7528\u306e\u56f3\u8868\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001\n\n* x\u8ef8: 1\u304b\u3089284\u307e\u3067\u306e\u6570\u5024\n* y\u8ef8: x\u306b\u30e9\u30f3\u30c0\u30e0\u3067436\u304b\u3089875\u3092\u304b\u3051\u305f\u6570\u5024\n\n\u3068\u3044\u3046\u30b0\u30e9\u30d5\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\u3053\u308c\u3089\u306e\u6570\u5b57\u306b\u6df1\u3044\u610f\u5473\u306f\u7121\u3044\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u5b9f\u969b\u3042\u308a\u307e\u305b\u3093\u3002\n\u30b0\u30e9\u30d5\u306e\u30bf\u30a4\u30c8\u30eb\u306f\u300cIMINASHI GRAPH\u300d\u3068\u304b\u304c\u76f8\u5fdc\u3057\u3044\u3067\u3057\u3087\u3046\u3002\n\n```python\nfig, ax = matplotlib.pyplot.subplots()\nax.set_title(u'IMINASHI GRAPH')\nx_ax = range(1, 284)\ny_ax = [x * random.randint(436, 875) for x in x_ax]\nax.plot(x_ax, y_ax)\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n\n![iminashi_graph.png](https://qiita-image-store.s3.amazonaws.com/0/29846/d2b9bde8-e578-943e-c6cb-04936edb14f7.png \"iminashi_graph.png\")\n\nweb \u30a2\u30d7\u30ea\u3067\u8868\u793a\u3059\u308b\n----------\n\u51e6\u7406\u306e\u6d41\u308c\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n1. \u56f3\u8868\u306e png \u30c7\u30fc\u30bf\u3092\u3064\u304f\u308b\n2. \u30c7\u30fc\u30bf\u3092 cStringIO.StringIO \u306e\u30d0\u30c3\u30d5\u30a1\u306b\u66f8\u304d\u8fbc\u3080\n3. \u753b\u50cf\u30b3\u30f3\u30c6\u30f3\u30c4\u3068\u3057\u3066\u30c7\u30fc\u30bf\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u8fd4\u3059\n\n\u305f\u3076\u3093\u3001\u30b3\u30fc\u30c9\u3092\u898b\u305f\u307b\u3046\u304c\u65e9\u3044\u3067\u3057\u3087\u3046\u3002\n\n```python\n@app.route('/graph1')\ndef graph1():\n    import matplotlib.pyplot\n    from matplotlib.backends.backend_agg import FigureCanvasAgg\n    import cStringIO\n    import random\n\n    fig, ax = matplotlib.pyplot.subplots()\n    ax.set_title(u'IMINASHI GRAPH')\n    x_ax = range(1, 284)\n    y_ax = [x * random.randint(436, 875) for x in x_ax]\n    ax.plot(x_ax, y_ax)\n\n    canvas = FigureCanvasAgg(fig)\n    buf = cStringIO.StringIO()\n    canvas.print_png(buf)\n    data = buf.getvalue()\n\n    response = make_response(data)\n    response.headers['Content-Type'] = 'image/png'\n    response.headers['Content-Length'] = len(data)\n    return response\n```\n\n\u3053\u308c\u3067\u3001web \u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3059\u308c\u3070\u3001\u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n![iminashi_graph_on_brw.png](https://qiita-image-store.s3.amazonaws.com/0/29846/e27d73cd-b9d8-7666-92f2-b9b44e2a63cd.png \"iminashi_graph_on_brw.png\")\n\n\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4f5c\u308b\n========\n\u3082\u30461\u3053\u306e\u65b9\u306e\u3084\u3064\u3067\u3059\u3002\n\n\u51e6\u7406\u306f\u3053\u3046\u3002\n\n1. \u56f3\u8868\u3092 png \u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u66f8\u304d\u51fa\u3059\n2. png \u30d5\u30a1\u30a4\u30eb\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u8fd4\u3059\n3. png \u30d5\u30a1\u30a4\u30eb\u3092\u6d88\u3059\n\n\u304a\u3082\u3057\u308d\u3044\u306e\u306f 3. \u3067\u3057\u3087\u3046\u3002\n\u8907\u6570\u304b\u3089\u306e\u540c\u6642\u30a2\u30af\u30bb\u30b9\u306a\u3069\u3092\u8003\u3048\u308b\u3068\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u30e9\u30f3\u30c0\u30e0\u6587\u5b57\u5217\u306a\u3069\u306b\u3059\u308b\u306e\u304c\u3044\u3044\u3088\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\u305f\u3060\u305d\u306e\u5834\u5408\u3001\u3069\u3093\u3069\u3093\u30d5\u30a1\u30a4\u30eb\u304c\u5897\u3048\u3066\u3044\u3063\u3061\u3083\u3046\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u8868\u793a\u3057\u305f\u5f8c\u306b\u3061\u3083\u3093\u3068\u6d88\u3055\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002\n\n\u3055\u3063\u304d\u306e\u3068\u540c\u3058\u30b0\u30e9\u30d5\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u30b0\u30e9\u30d5\u306e\u30bf\u30a4\u30c8\u30eb\u306f\u300cIMINASHI GRAPH 2\u300d\u3068\u304b\u304c\u76f8\u5fdc\u3057\u3044\u3067\u3057\u3087\u3046\u3002\n\n```python\n@app.route('/graph2')\ndef graph2():\n    import matplotlib.pyplot\n    from matplotlib.backends.backend_agg import FigureCanvasAgg\n    import random\n    import string\n    import os\n\n    class TempImage(object):\n\n        def __init__(self, file_name):\n            self.file_name = file_name\n\n        def create_png(self):\n            fig, ax = matplotlib.pyplot.subplots()\n            ax.set_title(u'IMINASHI GRAPH 2')\n            x_ax = range(1, 284)\n            y_ax = [x * random.randint(436, 875) for x in x_ax]\n            ax.plot(x_ax, y_ax)\n\n            canvas = FigureCanvasAgg(fig)\n            canvas.print_figure(self.file_name)\n\n        def __enter__(self):\n            return self\n\n        def __exit__(self, exc_type, exc_value, traceback):\n            os.remove(self.file_name)\n\n    chars = string.digits + string.letters\n    img_name = ''.join(random.choice(chars) for i in xrange(64)) + '.png'\n\n    with TempImage(img_name) as img:\n        img.create_png()\n        return send_file(img_name, mimetype='image/png')\n```\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u305f\u5f8c\u306b\u524a\u9664\u3059\u308b\u65b9\u6cd5\u306f\u3044\u304f\u3064\u304b\u8003\u3048\u3089\u308c\u307e\u3059\u304c\u3001\u3053\u306e\u4f8b\u3067\u306f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30de\u30cd\u30fc\u30b8\u30e3\u3092\u4f7f\u3063\u3066\u7834\u68c4\u3057\u3066\u3044\u307e\u3059\u3002\n\u306a\u3093\u304b\u3053\u3046\u3059\u308b\u306e\u304c\u4e00\u756aPython\u3063\u304f\u306a\u30a4\u30e1\u30fc\u30b8\u306a\u306e\u3002\n\n![iminashi_graph_on_brw_2.png](https://qiita-image-store.s3.amazonaws.com/0/29846/d3df2c72-cd8c-7bef-15de-2f91a412fe79.png \"iminashi_graph_on_brw_2.png\")\n\n\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\u30d5\u30a1\u30a4\u30eb\u306b\u3057\u3066\u3057\u307e\u3063\u305f\u65b9\u304c\u4f7f\u3044\u3084\u3059\u3044\u304b\u3082\u3002", "tags": ["Python", "matplotlib"]}