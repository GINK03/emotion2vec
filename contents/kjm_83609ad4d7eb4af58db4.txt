{"context": "Terraform \u3067\u4f5c\u3063\u305fEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30bf\u30a4\u30d7\u3092\u5909\u66f4\u3059\u308b\u306b\u306f\u3001Terraform\u3060\u3051\u3067\u306f\u884c\u3048\u307e\u305b\u3093\u3002\n\u305d\u306e\u307e\u307etf\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3057\u3066\u3057\u307e\u3046\u3068 recreate \u3055\u308c\u3066\u3057\u307e\u3044\u3001\u65e2\u5b58\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u7834\u68c4\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u7c21\u5358\u306b\u307e\u3068\u3081\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u3092\u884c\u3044\u307e\u3059\u3002\n\nInstance\u3092Stop\u3059\u308b\nInstance Type\u3092\u5909\u66f4\u3059\u308b\ntf\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3059\u308b\nInstance\u3092Start\u3059\u308b\n\n\u3082\u3057\u304f\u306f\u3001ignore_changes \u3092\u4f7f\u3046\u3068\u3044\u3046\u624b\u6bb5\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u30d1\u30bf\u30fc\u30f31: Instance Type\u3092Terraform\u5916\u3067\u5909\u66f4\u3059\u308b\n\ntf \u30d5\u30a1\u30a4\u30eb\n\nprovider \"aws\" {\n  region = \"ap-northeast-1\"\n}\n\nresource \"aws_instance\" \"instance1\" {\n  ami                    = \"ami-29160d47\" # Amazon Linux AMI 2016.03.1 x86_64 HVM GP2\n  instance_type          = \"t2.micro\"\n  key_name               = \"key\"\n  vpc_security_group_ids = [\"sg-deadbeef\"]\n  subnet_id              = \"subnet-badcafe\"\n\n  root_block_device {\n    volume_type           = \"gp2\"\n    delete_on_termination = true\n  }\n}\noutput \"instance_id\" {\n  value = \"${aws_instance.instance1.id}\"\n}\n\n\u307e\u305a\u3001t2.micro\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n$ terraform apply\n(snip)\nApply complete! Resources: 1 added, 0 changed, 0 destroyed.\n\nThe state of your infrastructure has been saved to the path\nbelow. This state is required to modify and destroy your\ninfrastructure, so keep it safe. To inspect the complete state\nuse the `terraform show` command.\n\nState path: terraform.tfstate\n\nOutputs:\n\ninstance_id = i-08718c36c1b7e95cb\n\nAWS CLI\u3092\u4f7f\u3044Instance\u3092Stop\u72b6\u614b\u306b\u3057\u307e\u3059\u3002\nManagement Console\u3092\u4f7f\u3063\u3066\u3082\u3088\u3044\u3067\u3059\u3002\nTerraform\u3067Stop\u3057\u305f\u3044\u3068\u3044\u3046Issue\u306f\u4e0a\u304c\u3063\u3066\u307e\u3059\u304c\u3001\u5bfe\u5fdc\u306f\u672a\u5b9a\u306e\u3088\u3046\u3067\u3059\u3002\n$ aws ec2 stop-instances --instance-ids i-08718c36c1b7e95cb\n{\n    \"StoppingInstances\": [\n        {\n            \"InstanceId\": \"i-08718c36c1b7e95cb\",\n            \"PreviousState\": {\n                \"Code\": 16,\n                \"Name\": \"running\"\n            },\n            \"CurrentState\": {\n                \"Code\": 64,\n                \"Name\": \"stopping\"\n            }\n        }\n    ]\n}\n\nAWS CLI\u3092\u4f7f\u3044\u3001Instance Type\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\nManagement Console\u3092\u4f7f\u3063\u3066\u3082\u3088\u3044\u3067\u3059\u3002\n$ aws ec2 modify-instance-attribute --instance-id i-08718c36c1b7e95cb --instance-type t2.nano\n\n\u6700\u5f8c\u306b\u3001tf\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\u3053\u308c\u3092\u3057\u306a\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30ea\u30bd\u30fc\u30b9\u304c\u4f5c\u308a\u76f4\u3055\u308c\u307e\u3059\u3002\n$ terraform plan\nRefreshing Terraform state prior to plan...\n\naws_instance.instance1: Refreshing state... (ID: i-08718c36c1b7e95cb)\n\nThe Terraform execution plan has been generated and is shown below.\nResources are shown in alphabetical order for quick scanning. Green resources\nwill be created (or destroyed and then created if an existing resource\nexists), yellow resources are being changed in-place, and red resources\nwill be destroyed. Cyan entries are data sources to be read.\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so when\n\"apply\" is called, Terraform can't guarantee this is what will execute.\n\n-/+ aws_instance.instance1\n    ami:                                       \"ami-29160d47\" => \"ami-29160d47\"\n    availability_zone:                         \"ap-northeast-1a\" => \"<computed>\"\n    ebs_block_device.#:                        \"0\" => \"<computed>\"\n    ephemeral_block_device.#:                  \"0\" => \"<computed>\"\n    instance_state:                            \"stopped\" => \"<computed>\"\n    instance_type:                             \"t2.micro\" => \"t2.nano\" (forces new resource)\n    key_name:                                  \"key\" => \"key\"\n    placement_group:                           \"\" => \"<computed>\"\n    private_dns:                               \"ip-172-31-7-110.ap-northeast-1.compute.internal\" => \"<computed>\"\n    private_ip:                                \"172.31.7.110\" => \"<computed>\"\n    public_dns:                                \"\" => \"<computed>\"\n    public_ip:                                 \"\" => \"<computed>\"\n    root_block_device.#:                       \"1\" => \"1\"\n    root_block_device.0.delete_on_termination: \"true\" => \"true\"\n    root_block_device.0.iops:                  \"24\" => \"<computed>\"\n    root_block_device.0.volume_size:           \"8\" => \"<computed>\"\n    root_block_device.0.volume_type:           \"gp2\" => \"gp2\"\n    security_groups.#:                         \"0\" => \"<computed>\"\n    source_dest_check:                         \"true\" => \"true\"\n    subnet_id:                                 \"subnet-badcafe\" => \"subnet-badcafe\"\n    tenancy:                                   \"default\" => \"<computed>\"\n    vpc_security_group_ids.#:                  \"1\" => \"1\"\n    vpc_security_group_ids.1346577894:         \"sg-deadbeef\" => \"sg-deadbeef\"\n\n\nPlan: 1 to add, 0 to change, 1 to destroy.\n\n\ntf\u30d5\u30a1\u30a4\u30eb\u5dee\u5206\n\n-  instance_type          = \"t2.micro\"\n+  instance_type          = \"t2.nano\"\n\n\u4fee\u6b63\u5f8c\u3001plan\u3092\u5b9f\u884c\u3059\u308b\u3068\u7121\u4e8bNo changes\u306b\u306a\u308a\u307e\u3059\u3002\n$ terraform plan\nRefreshing Terraform state prior to plan...\n\naws_instance.instance1: Refreshing state... (ID: i-08718c36c1b7e95cb)\n\nNo changes. Infrastructure is up-to-date. This means that Terraform\ncould not detect any differences between your configuration and\nthe real physical resources that exist. As a result, Terraform\ndoesn't need to do anything.\n\n\n\u30d1\u30bf\u30fc\u30f32: ignore_changes \u3092\u5229\u7528\u3059\u308b\n\ntf \u30d5\u30a1\u30a4\u30eb\n\nprovider \"aws\" {\n  region = \"ap-northeast-1\"\n}\n\nresource \"aws_instance\" \"instance1\" {\n  ami                    = \"ami-29160d47\" # Amazon Linux AMI 2016.03.1 x86_64 HVM GP2\n  instance_type          = \"t2.micro\"\n  key_name               = \"key\"\n  vpc_security_group_ids = [\"sg-deadbeef\"]\n  subnet_id              = \"subnet-badcafe\"\n\n  root_block_device {\n    volume_type           = \"gp2\"\n    delete_on_termination = true\n  }\n\n  lifecycle {\n    ignore_changes = [\"instance_type\"]\n  }\n}\noutput \"instance_id\" {\n  value = \"${aws_instance.instance1.id}\"\n}\n\nlifecycle \u30eb\u30fc\u30eb\u3067 instance_type \u304c\u5909\u5316\u3057\u3066\u3082\u7121\u8996\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u30d1\u30bf\u30fc\u30f31\u3067\u884c\u3063\u305fAWS CLI\u3084Management Console\u3067\u81ea\u7531\u306b\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3001\u3053\u306e\u65b9\u6cd5\u3060\u3068 tf \u30d5\u30a1\u30a4\u30eb\u3067\u306e\u5b9a\u7fa9\u3068\u5b9f\u969b\u306e\u72b6\u614b\u304c\u7570\u306a\u308b\u3053\u3068\u306b\u306a\u308b\u305f\u3081\u3001\u7ba1\u7406\u4e0a\u3088\u304f\u306a\u3044\u3053\u3068\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u904b\u7528\u65b9\u6cd5\u3068\u76f8\u8ac7\u3057\u3066\u3054\u4f7f\u7528\u4e0b\u3055\u3044\u3002\nTerraform \u3067\u4f5c\u3063\u305fEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30bf\u30a4\u30d7\u3092\u5909\u66f4\u3059\u308b\u306b\u306f\u3001Terraform\u3060\u3051\u3067\u306f\u884c\u3048\u307e\u305b\u3093\u3002\n\u305d\u306e\u307e\u307etf\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3057\u3066\u3057\u307e\u3046\u3068 recreate \u3055\u308c\u3066\u3057\u307e\u3044\u3001\u65e2\u5b58\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u7834\u68c4\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u7c21\u5358\u306b\u307e\u3068\u3081\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u3092\u884c\u3044\u307e\u3059\u3002\n\n1. Instance\u3092Stop\u3059\u308b\n2. Instance Type\u3092\u5909\u66f4\u3059\u308b\n3. tf\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3059\u308b\n4. Instance\u3092Start\u3059\u308b\n\n\u3082\u3057\u304f\u306f\u3001`ignore_changes` \u3092\u4f7f\u3046\u3068\u3044\u3046\u624b\u6bb5\u3082\u3042\u308a\u307e\u3059\u3002\n\n\n### \u30d1\u30bf\u30fc\u30f31: Instance Type\u3092Terraform\u5916\u3067\u5909\u66f4\u3059\u308b\n\n* tf \u30d5\u30a1\u30a4\u30eb\n\n```hcl\nprovider \"aws\" {\n  region = \"ap-northeast-1\"\n}\n\nresource \"aws_instance\" \"instance1\" {\n  ami                    = \"ami-29160d47\" # Amazon Linux AMI 2016.03.1 x86_64 HVM GP2\n  instance_type          = \"t2.micro\"\n  key_name               = \"key\"\n  vpc_security_group_ids = [\"sg-deadbeef\"]\n  subnet_id              = \"subnet-badcafe\"\n\n  root_block_device {\n    volume_type           = \"gp2\"\n    delete_on_termination = true\n  }\n}\noutput \"instance_id\" {\n  value = \"${aws_instance.instance1.id}\"\n}\n```\n\n\u307e\u305a\u3001`t2.micro`\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```bash\n$ terraform apply\n(snip)\nApply complete! Resources: 1 added, 0 changed, 0 destroyed.\n\nThe state of your infrastructure has been saved to the path\nbelow. This state is required to modify and destroy your\ninfrastructure, so keep it safe. To inspect the complete state\nuse the `terraform show` command.\n\nState path: terraform.tfstate\n\nOutputs:\n\ninstance_id = i-08718c36c1b7e95cb\n```\n\nAWS CLI\u3092\u4f7f\u3044Instance\u3092Stop\u72b6\u614b\u306b\u3057\u307e\u3059\u3002\nManagement Console\u3092\u4f7f\u3063\u3066\u3082\u3088\u3044\u3067\u3059\u3002\nTerraform\u3067Stop\u3057\u305f\u3044\u3068\u3044\u3046[Issue](https://github.com/hashicorp/terraform/issues/1579)\u306f\u4e0a\u304c\u3063\u3066\u307e\u3059\u304c\u3001\u5bfe\u5fdc\u306f\u672a\u5b9a\u306e\u3088\u3046\u3067\u3059\u3002\n\n```bash\n$ aws ec2 stop-instances --instance-ids i-08718c36c1b7e95cb\n{\n    \"StoppingInstances\": [\n        {\n            \"InstanceId\": \"i-08718c36c1b7e95cb\",\n            \"PreviousState\": {\n                \"Code\": 16,\n                \"Name\": \"running\"\n            },\n            \"CurrentState\": {\n                \"Code\": 64,\n                \"Name\": \"stopping\"\n            }\n        }\n    ]\n}\n```\n\nAWS CLI\u3092\u4f7f\u3044\u3001Instance Type\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\nManagement Console\u3092\u4f7f\u3063\u3066\u3082\u3088\u3044\u3067\u3059\u3002\n\n```\n$ aws ec2 modify-instance-attribute --instance-id i-08718c36c1b7e95cb --instance-type t2.nano\n```\n\n\u6700\u5f8c\u306b\u3001tf\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\u3053\u308c\u3092\u3057\u306a\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30ea\u30bd\u30fc\u30b9\u304c\u4f5c\u308a\u76f4\u3055\u308c\u307e\u3059\u3002\n\n```bash\n$ terraform plan\nRefreshing Terraform state prior to plan...\n\naws_instance.instance1: Refreshing state... (ID: i-08718c36c1b7e95cb)\n\nThe Terraform execution plan has been generated and is shown below.\nResources are shown in alphabetical order for quick scanning. Green resources\nwill be created (or destroyed and then created if an existing resource\nexists), yellow resources are being changed in-place, and red resources\nwill be destroyed. Cyan entries are data sources to be read.\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so when\n\"apply\" is called, Terraform can't guarantee this is what will execute.\n\n-/+ aws_instance.instance1\n    ami:                                       \"ami-29160d47\" => \"ami-29160d47\"\n    availability_zone:                         \"ap-northeast-1a\" => \"<computed>\"\n    ebs_block_device.#:                        \"0\" => \"<computed>\"\n    ephemeral_block_device.#:                  \"0\" => \"<computed>\"\n    instance_state:                            \"stopped\" => \"<computed>\"\n    instance_type:                             \"t2.micro\" => \"t2.nano\" (forces new resource)\n    key_name:                                  \"key\" => \"key\"\n    placement_group:                           \"\" => \"<computed>\"\n    private_dns:                               \"ip-172-31-7-110.ap-northeast-1.compute.internal\" => \"<computed>\"\n    private_ip:                                \"172.31.7.110\" => \"<computed>\"\n    public_dns:                                \"\" => \"<computed>\"\n    public_ip:                                 \"\" => \"<computed>\"\n    root_block_device.#:                       \"1\" => \"1\"\n    root_block_device.0.delete_on_termination: \"true\" => \"true\"\n    root_block_device.0.iops:                  \"24\" => \"<computed>\"\n    root_block_device.0.volume_size:           \"8\" => \"<computed>\"\n    root_block_device.0.volume_type:           \"gp2\" => \"gp2\"\n    security_groups.#:                         \"0\" => \"<computed>\"\n    source_dest_check:                         \"true\" => \"true\"\n    subnet_id:                                 \"subnet-badcafe\" => \"subnet-badcafe\"\n    tenancy:                                   \"default\" => \"<computed>\"\n    vpc_security_group_ids.#:                  \"1\" => \"1\"\n    vpc_security_group_ids.1346577894:         \"sg-deadbeef\" => \"sg-deadbeef\"\n\n\nPlan: 1 to add, 0 to change, 1 to destroy.\n```\n\n* tf\u30d5\u30a1\u30a4\u30eb\u5dee\u5206\n\n```diff\n-  instance_type          = \"t2.micro\"\n+  instance_type          = \"t2.nano\"\n```\n\n\u4fee\u6b63\u5f8c\u3001plan\u3092\u5b9f\u884c\u3059\u308b\u3068\u7121\u4e8b`No changes`\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n$ terraform plan\nRefreshing Terraform state prior to plan...\n\naws_instance.instance1: Refreshing state... (ID: i-08718c36c1b7e95cb)\n\nNo changes. Infrastructure is up-to-date. This means that Terraform\ncould not detect any differences between your configuration and\nthe real physical resources that exist. As a result, Terraform\ndoesn't need to do anything.\n```\n\n### \u30d1\u30bf\u30fc\u30f32: `ignore_changes` \u3092\u5229\u7528\u3059\u308b\n\n* tf \u30d5\u30a1\u30a4\u30eb\n\n```hcl\nprovider \"aws\" {\n  region = \"ap-northeast-1\"\n}\n\nresource \"aws_instance\" \"instance1\" {\n  ami                    = \"ami-29160d47\" # Amazon Linux AMI 2016.03.1 x86_64 HVM GP2\n  instance_type          = \"t2.micro\"\n  key_name               = \"key\"\n  vpc_security_group_ids = [\"sg-deadbeef\"]\n  subnet_id              = \"subnet-badcafe\"\n\n  root_block_device {\n    volume_type           = \"gp2\"\n    delete_on_termination = true\n  }\n\n  lifecycle {\n    ignore_changes = [\"instance_type\"]\n  }\n}\noutput \"instance_id\" {\n  value = \"${aws_instance.instance1.id}\"\n}\n```\n\n`lifecycle` \u30eb\u30fc\u30eb\u3067 `instance_type` \u304c\u5909\u5316\u3057\u3066\u3082\u7121\u8996\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u30d1\u30bf\u30fc\u30f31\u3067\u884c\u3063\u305fAWS CLI\u3084Management Console\u3067\u81ea\u7531\u306b\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\n\u305f\u3060\u3001\u3053\u306e\u65b9\u6cd5\u3060\u3068 tf \u30d5\u30a1\u30a4\u30eb\u3067\u306e\u5b9a\u7fa9\u3068\u5b9f\u969b\u306e\u72b6\u614b\u304c\u7570\u306a\u308b\u3053\u3068\u306b\u306a\u308b\u305f\u3081\u3001\u7ba1\u7406\u4e0a\u3088\u304f\u306a\u3044\u3053\u3068\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u904b\u7528\u65b9\u6cd5\u3068\u76f8\u8ac7\u3057\u3066\u3054\u4f7f\u7528\u4e0b\u3055\u3044\u3002\n", "tags": ["Terraform", "AWS"]}