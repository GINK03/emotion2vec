{"context": "ReactNative\u306e\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\u306f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u72ec\u7acb\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u307e\u305f\u3044\u3067\u30a4\u30d9\u30f3\u30c8\u3092\u51e6\u7406\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002Navigation\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067Redux\u306eState\u3092\u76e3\u8996\u3057\u3066\u3082\u826f\u3044\u304c\u3001\u5358\u7d14\u306b\u30a4\u30d9\u30f3\u30c8\u3092\u805e\u304f\u65b9\u304c\u500b\u4eba\u7684\u306b\u306f\u3059\u3063\u304d\u308a\u3059\u308b\u3068\u601d\u3046\u3002\u3000(Event\u306e\u591a\u7528\u306f\u6df7\u4e71\u3092\u62db\u304f\u306e\u3067\u6ce8\u610f\u3057\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u304c\uff09\n\u79c1\u306fExNavigator\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u7528\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\nRouter.js\u3067EventEmitter\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6301\u3061\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068event\u3092emit\u3059\u308b\u4ed5\u7d44\u307f\u3067\u3059\u3002\nimport React, {View, WebView} from 'react-native';\nimport ExNavigator from '@exponent/react-native-navigator';\nimport ExSceneConfigs from '@exponent/react-native-navigator/ExSceneConfigs';\nimport EventEmitter from 'EventEmitter';\n\nlet eventEmitter = new EventEmitter();\n\nlet Router = {\n  getNewBlockerRoute(){\n\n    return {\n      renderScene(navigator) {\n        let NewBlocker = require('./containers/NewBlocker').default;\n        return <NewBlocker navigator={navigator} type=\"new\" events={eventEmitter}/>;\n      },\n\n      configureScene(nav){\n        return ExSceneConfigs.ZoomFromFront;\n      },\n      getTitle(){\n        return \"New Blocker\";\n      },\n      renderLeftButton(navigator){\n        let CloseButton = require('./components/CloseButton').default;\n        return <CloseButton navigator={navigator} onCloseButtonPress={() => eventEmitter.emit('closeButtonEvent') }/>\n      },\n      renderRightButton(navigator){\n        let SaveBlockerButton = require('./containers/SaveBlockerButton').default;\n        return <SaveBlockerButton navigator={navigator} type=\"new\" onSaveButtonPress={() => eventEmitter.emit('saveButtonEvent') }/>\n      }\n    }\n  },\n\n\n}\n\nmodule.exports = Router;\n\nClose\u30dc\u30bf\u30f3\u3067\u306f\u3001props\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3002\nimport React, { View, Text, Image } from 'react-native';\nimport Styles from './Styles';\nimport Button from 'react-native-button';\n\nlet CloseButton = React.createClass({\n\n  onPressClose(){\n    const { navigator, onCloseButtonPress } = this.props;\n    if(typeof onCloseButtonPress === \"function\"){\n      onCloseButtonPress();\n    }\n    navigator.pop();\n  },\n\n  render(){\n    return (\n      <Button onPress={this.onPressClose}>\n        <Image source={require('../assets/images/close.png')} style={Styles.exClose} />\n      </Button>\n    );\n  }\n});\n\nexport default CloseButton;\n\n\u305d\u3057\u3066\u3001\u3053\u308c\u3092Listen\u3057\u305f\u3044Component\u3067\u5b9a\u7fa9\u3059\u308b\u3002\nimport Subscribable from 'Subscribable'; // unmount\u6642\u306bremove\u306a\u3069\u306esubscription\u306e\u51e6\u7406\u3092\u3057\u3066\u304f\u308c\u308b\n\nlet NewBlocker = React.createClass({\n\n  mixins: [ Subscribable.Mixin ],\u3000// Mixin\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002.Mixin\u3092\u5fd8\u308c\u305a\u306b\n\n  componentDidMount(){\n    this.addListenerOn(events, 'closeButtonEvent', this.stopLoading);\n    this.addListenerOn(events, 'saveButtonEvent', this.stopLoading);  \n\u3000\u3000\u3000 },  \n\n  // emit\u3055\u308c\u308b\u305f\u3073\u306b\u547c\u3070\u308c\u308b\u3002\n  stopLoading(){\n    this.refs.webview.stopLoading();\n  },\n\n\u6700\u521d\u306b\u8a00\u3063\u305f\u3088\u3046\u306bevent\u306e\u591a\u7528\u306f\u6df7\u4e71\u3057\u307e\u3059\u3002\u79c1\u306fRoute\u7ba1\u7406\u3060\u3051\u306b\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nReactNative\u306e\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\u306f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u72ec\u7acb\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u307e\u305f\u3044\u3067\u30a4\u30d9\u30f3\u30c8\u3092\u51e6\u7406\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002Navigation\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067Redux\u306eState\u3092\u76e3\u8996\u3057\u3066\u3082\u826f\u3044\u304c\u3001\u5358\u7d14\u306b\u30a4\u30d9\u30f3\u30c8\u3092\u805e\u304f\u65b9\u304c\u500b\u4eba\u7684\u306b\u306f\u3059\u3063\u304d\u308a\u3059\u308b\u3068\u601d\u3046\u3002\u3000(Event\u306e\u591a\u7528\u306f\u6df7\u4e71\u3092\u62db\u304f\u306e\u3067\u6ce8\u610f\u3057\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u304c\uff09\n\n\n\u79c1\u306f[ExNavigator](http://qiita.com/shohey1226/items/7a4d355de17187da2758)\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u7528\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\nRouter.js\u3067EventEmitter\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6301\u3061\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068event\u3092emit\u3059\u308b\u4ed5\u7d44\u307f\u3067\u3059\u3002\n\n\n```\nimport React, {View, WebView} from 'react-native';\nimport ExNavigator from '@exponent/react-native-navigator';\nimport ExSceneConfigs from '@exponent/react-native-navigator/ExSceneConfigs';\nimport EventEmitter from 'EventEmitter';\n\nlet eventEmitter = new EventEmitter();\n\nlet Router = {\n  getNewBlockerRoute(){\n\n    return {\n      renderScene(navigator) {\n        let NewBlocker = require('./containers/NewBlocker').default;\n        return <NewBlocker navigator={navigator} type=\"new\" events={eventEmitter}/>;\n      },\n\n      configureScene(nav){\n        return ExSceneConfigs.ZoomFromFront;\n      },\n      getTitle(){\n        return \"New Blocker\";\n      },\n      renderLeftButton(navigator){\n        let CloseButton = require('./components/CloseButton').default;\n        return <CloseButton navigator={navigator} onCloseButtonPress={() => eventEmitter.emit('closeButtonEvent') }/>\n      },\n      renderRightButton(navigator){\n        let SaveBlockerButton = require('./containers/SaveBlockerButton').default;\n        return <SaveBlockerButton navigator={navigator} type=\"new\" onSaveButtonPress={() => eventEmitter.emit('saveButtonEvent') }/>\n      }\n    }\n  },\n\n\n}\n\nmodule.exports = Router;\n```\n\nClose\u30dc\u30bf\u30f3\u3067\u306f\u3001props\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3002\n\n```\nimport React, { View, Text, Image } from 'react-native';\nimport Styles from './Styles';\nimport Button from 'react-native-button';\n\nlet CloseButton = React.createClass({\n\n  onPressClose(){\n    const { navigator, onCloseButtonPress } = this.props;\n    if(typeof onCloseButtonPress === \"function\"){\n      onCloseButtonPress();\n    }\n    navigator.pop();\n  },\n\n  render(){\n    return (\n      <Button onPress={this.onPressClose}>\n        <Image source={require('../assets/images/close.png')} style={Styles.exClose} />\n      </Button>\n    );\n  }\n});\n\nexport default CloseButton;\n```\n\n\u305d\u3057\u3066\u3001\u3053\u308c\u3092Listen\u3057\u305f\u3044Component\u3067\u5b9a\u7fa9\u3059\u308b\u3002\n\n```\nimport Subscribable from 'Subscribable'; // unmount\u6642\u306bremove\u306a\u3069\u306esubscription\u306e\u51e6\u7406\u3092\u3057\u3066\u304f\u308c\u308b\n\nlet NewBlocker = React.createClass({\n\n  mixins: [ Subscribable.Mixin ],\u3000// Mixin\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002.Mixin\u3092\u5fd8\u308c\u305a\u306b\n\n  componentDidMount(){\n    this.addListenerOn(events, 'closeButtonEvent', this.stopLoading);\n    this.addListenerOn(events, 'saveButtonEvent', this.stopLoading);  \n\u3000\u3000\u3000 },  \n\n  // emit\u3055\u308c\u308b\u305f\u3073\u306b\u547c\u3070\u308c\u308b\u3002\n  stopLoading(){\n    this.refs.webview.stopLoading();\n  },\n```\n\n\n\u6700\u521d\u306b\u8a00\u3063\u305f\u3088\u3046\u306bevent\u306e\u591a\u7528\u306f\u6df7\u4e71\u3057\u307e\u3059\u3002\u79c1\u306fRoute\u7ba1\u7406\u3060\u3051\u306b\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n", "tags": ["reactnative", "EventEmitter"]}