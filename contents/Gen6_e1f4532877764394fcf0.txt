{"context": "Twitter\u3067\u306e\u691c\u7d22\u7d50\u679c\u3092\u30c6\u30ad\u30b9\u30c8\u5f62\u5f0f\u3067\u4fdd\u5b58\u3002\n\u69d8\u3005\u306a\u691c\u7d22\u7d50\u679c\u3092\u30c6\u30ad\u30b9\u30c8\u3078\u4fdd\u5b58\u3057\u3001\u30c6\u30ad\u30b9\u30c8\u3092\u8aad\u307f\u8fbc\u307f\u5f62\u614b\u7d20\u89e3\u6790\u3002\n\u305d\u3053\u304b\u3089\u30de\u30eb\u30b3\u30d5\u9023\u9396\u3067\u6587\u7ae0\u3092\u751f\u6210\u3057\u3001\u30c4\u30a4\u30fc\u30c8POST\u3059\u308b\u307e\u3067\u3002\n\ntwmarkov.py\n\n#!/user/bin/env python\n# -*- coding: utf-8 -*-\nfrom requests_oauthlib import OAuth1Session\nimport json\nimport sys\nimport MeCab\nimport random\nimport re\n\nwhile True:\n    search_words = raw_input(u\"words: \")\n\n    C_KEY = \"*************************************\"\n    C_SECRET = \"*************************************\"\n    A_KEY = \"*************************************\"\n    A_SECRET = \"*************************************\"\n\n    def Search_words():\n        url = \"https://api.twitter.com/1.1/search/tweets.json?\"\n        params = {\n                \"q\": unicode(search_words, \"utf-8\"),\n                \"lang\": \"ja\",\n                \"result_type\": \"recent\",\n                \"count\": \"100\"\n                }\n        tw = OAuth1Session(C_KEY,C_SECRET,A_KEY,A_SECRET)\n        req = tw.get(url, params = params)\n        tweets = json.loads(req.text)\n        for tweet in tweets[\"statuses\"]:\n            f = open(\"tweet.txt\" , \"aw\")\n            lists = (tweet[\"text\"].encode(\"utf-8\"))\n            if \"http\" in lists:\n                lists = lists.split(\"http\", 1)[0]\n                lists = lists.split(\"@\")[0]\n                lists = lists.split(\"RT\")[0]\n\n                f.write(lists)\n                f.flush()\n                f.close()\n\n\n    def Mecab_file():   \n        f = open(\"tweet.txt\",\"rb\")\n        data = f.read()\n        f.close()\n\n        mt = MeCab.Tagger(\"-Owakati\")\n\n        wordlist = mt.parse(data)\n        wordlist = wordlist.rstrip(\" \\n\").split(\" \")\n\n        markov = {}\n        w = \"\"\n\n        for x in wordlist:\n            if w:\n                if markov.has_key(w):#Python3\u3067\u306f\u52d5\u304b\u306a\u3044\u7b87\u6240\n                    new_list = markov[w]\n                else:\n                    new_list =[]\n\n                new_list.append(x)\n                markov[w] = new_list\n            w = x\n\n        choice_words = wordlist[0]\n        sentence = \"\"\n        count = 0\n\n        while count < 90:\n            sentence += choice_words\n            choice_words = random.choice(markov[choice_words])\n            count += 1\n\n            sentence = sentence.split(\" \", 1)[0]\n            p = re.compile(\"[!-/:-@[-`{-~]\")\n            sus = p.sub(\"\", sentence)\n\n        words = re.sub(re.compile(\"[!-~]\"),\"\",sus)\n        twits = words + \" \u3010tweet from twmarkov\u3011\"\n\n        url = \"https://api.twitter.com/1.1/statuses/update.json\"\n        params = {\"status\": twits,\"lang\": \"ja\"}\n        tw = OAuth1Session(C_KEY,C_SECRET,A_KEY,A_SECRET)\n        req = tw.post(url, params = params)\n        if req.status_code == 200:\n            print \"Success! Your Tweet\"\n        else:\n            print req.status_code\n\n\n    if search_words:\n        Search_words()\n        Mecab_file()\n    else:\n        break\n\n\n\u5916\u90e8\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3057\u305ftweet.txt\u306b\u3069\u3093\u3069\u3093\u691c\u7d22\u7d50\u679c\u306e\u30c4\u30a4\u30fc\u30c8\u3092\u683c\u7d0d\u3002\n\u30c6\u30ad\u30b9\u30c8\u91cf\u304c\u5897\u3048\u3059\u304e\u3066\u3082\u3001\u5c11\u306a\u3059\u304e\u3066\u3082\u30c4\u30a4\u30fc\u30c8\u7d50\u679c\u306f\u9762\u767d\u304f\u306a\u3089\u306a\u3044\u306e\u304c\u4e0d\u6e80\u70b9\u3002\ncron\u3067\u53e9\u3051\u3070\u5358\u7d14\u306bbot\u5316\u3059\u308b\u3053\u3068\u3082\u51fa\u6765\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u3002\n\u305d\u306e\u5834\u5408\u306f\u691c\u7d22\u7528API\u3067\u306f\u306a\u304f\u3001hometimeline\u3068\u304busertimeline\u3068\u304b\u3092\u62fe\u3046\u307b\u3046\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\nWEB\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u52d5\u304b\u3059\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\nhttp://markov-twit.herokuapp.com/\n\nPython3\u3067\u306e\u6ce8\u610f\u70b9\nif markov.has_key(w):\n\n\u3068\u3044\u3046\u51e6\u7406\u306f\nif w in markov:\n\n\u3068\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\nTwitter\u3067\u306e\u691c\u7d22\u7d50\u679c\u3092\u30c6\u30ad\u30b9\u30c8\u5f62\u5f0f\u3067\u4fdd\u5b58\u3002\n\u69d8\u3005\u306a\u691c\u7d22\u7d50\u679c\u3092\u30c6\u30ad\u30b9\u30c8\u3078\u4fdd\u5b58\u3057\u3001\u30c6\u30ad\u30b9\u30c8\u3092\u8aad\u307f\u8fbc\u307f\u5f62\u614b\u7d20\u89e3\u6790\u3002\n\u305d\u3053\u304b\u3089\u30de\u30eb\u30b3\u30d5\u9023\u9396\u3067\u6587\u7ae0\u3092\u751f\u6210\u3057\u3001\u30c4\u30a4\u30fc\u30c8POST\u3059\u308b\u307e\u3067\u3002\n\n```python:twmarkov.py\n\n#!/user/bin/env python\n# -*- coding: utf-8 -*-\nfrom requests_oauthlib import OAuth1Session\nimport json\nimport sys\nimport MeCab\nimport random\nimport re\n\nwhile True:\n\tsearch_words = raw_input(u\"words: \")\n\t\n\tC_KEY = \"*************************************\"\n\tC_SECRET = \"*************************************\"\n\tA_KEY = \"*************************************\"\n\tA_SECRET = \"*************************************\"\n\n\tdef Search_words():\n\t\turl = \"https://api.twitter.com/1.1/search/tweets.json?\"\n\t\tparams = {\n\t\t\t\t\"q\": unicode(search_words, \"utf-8\"),\n\t\t\t\t\"lang\": \"ja\",\n\t\t\t\t\"result_type\": \"recent\",\n\t\t\t\t\"count\": \"100\"\n\t\t\t\t}\n\t\ttw = OAuth1Session(C_KEY,C_SECRET,A_KEY,A_SECRET)\n\t\treq = tw.get(url, params = params)\n\t\ttweets = json.loads(req.text)\n\t\tfor tweet in tweets[\"statuses\"]:\n\t\t\tf = open(\"tweet.txt\" , \"aw\")\n\t\t\tlists = (tweet[\"text\"].encode(\"utf-8\"))\n\t\t\tif \"http\" in lists:\n\t\t\t\tlists = lists.split(\"http\", 1)[0]\n\t\t\t\tlists = lists.split(\"@\")[0]\n\t\t\t\tlists = lists.split(\"RT\")[0]\n\n\t\t\t\tf.write(lists)\n\t\t\t\tf.flush()\n\t\t\t\tf.close()\n\n\t\t\n\tdef Mecab_file():\t\n\t\tf = open(\"tweet.txt\",\"rb\")\n\t\tdata = f.read()\n\t\tf.close()\n\n\t\tmt = MeCab.Tagger(\"-Owakati\")\n\n\t\twordlist = mt.parse(data)\n\t\twordlist = wordlist.rstrip(\" \\n\").split(\" \")\n \n\t\tmarkov = {}\n\t\tw = \"\"\n\t\n\t\tfor x in wordlist:\n\t\t\tif w:\n\t\t\t\tif markov.has_key(w):#Python3\u3067\u306f\u52d5\u304b\u306a\u3044\u7b87\u6240\n\t\t\t\t\tnew_list = markov[w]\n\t\t\t\telse:\n\t\t\t\t\tnew_list =[]\n\t\t\t\n\t\t\t\tnew_list.append(x)\n\t\t\t\tmarkov[w] = new_list\n\t\t\tw = x\n\t\t\n\t\tchoice_words = wordlist[0]\n\t\tsentence = \"\"\n\t\tcount = 0\n\t\n\t\twhile count < 90:\n\t\t\tsentence += choice_words\n\t\t\tchoice_words = random.choice(markov[choice_words])\n\t\t\tcount += 1\n\n\t\t\tsentence = sentence.split(\" \", 1)[0]\n\t\t\tp = re.compile(\"[!-/:-@[-`{-~]\")\n\t\t\tsus = p.sub(\"\", sentence)\n\t\n\t\twords = re.sub(re.compile(\"[!-~]\"),\"\",sus)\n\t\ttwits = words + \" \u3010tweet from twmarkov\u3011\"\n\t\t\n\t\turl = \"https://api.twitter.com/1.1/statuses/update.json\"\n\t\tparams = {\"status\": twits,\"lang\": \"ja\"}\n\t\ttw = OAuth1Session(C_KEY,C_SECRET,A_KEY,A_SECRET)\n\t\treq = tw.post(url, params = params)\n\t\tif req.status_code == 200:\n\t\t\tprint \"Success! Your Tweet\"\n\t\telse:\n\t\t\tprint req.status_code\n\t\n\t\n\tif search_words:\n\t\tSearch_words()\n\t\tMecab_file()\n\telse:\n\t\tbreak\n```\n\n\u5916\u90e8\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3057\u305ftweet.txt\u306b\u3069\u3093\u3069\u3093\u691c\u7d22\u7d50\u679c\u306e\u30c4\u30a4\u30fc\u30c8\u3092\u683c\u7d0d\u3002\n\u30c6\u30ad\u30b9\u30c8\u91cf\u304c\u5897\u3048\u3059\u304e\u3066\u3082\u3001\u5c11\u306a\u3059\u304e\u3066\u3082\u30c4\u30a4\u30fc\u30c8\u7d50\u679c\u306f\u9762\u767d\u304f\u306a\u3089\u306a\u3044\u306e\u304c\u4e0d\u6e80\u70b9\u3002\n\ncron\u3067\u53e9\u3051\u3070\u5358\u7d14\u306bbot\u5316\u3059\u308b\u3053\u3068\u3082\u51fa\u6765\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u3002\n\u305d\u306e\u5834\u5408\u306f\u691c\u7d22\u7528API\u3067\u306f\u306a\u304f\u3001hometimeline\u3068\u304busertimeline\u3068\u304b\u3092\u62fe\u3046\u307b\u3046\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\nWEB\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u52d5\u304b\u3059\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\nhttp://markov-twit.herokuapp.com/\n\n#Python3\u3067\u306e\u6ce8\u610f\u70b9\n\n```\nif markov.has_key(w):\n```\n\n\u3068\u3044\u3046\u51e6\u7406\u306f\n\n```\nif w in markov:\n```\n\n\u3068\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n", "tags": ["Twitter", "\u30de\u30eb\u30b3\u30d5\u9023\u9396", "\u5f62\u614b\u7d20\u89e3\u6790", "TwitterAPI", "Python"]}