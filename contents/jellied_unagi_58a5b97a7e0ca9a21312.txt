{"tags": ["Python", "OpenCV", "Pupil"], "context": " More than 1 year has passed since last update.Pupil is a head-mounted eye tracker, which is very low price (380 Euro~)\nSee Pupil lab: http://pupil-labs.com/pupil/\nAlthough a good sdk for MacOS and Linux is available officially, I had a try to use this device just for capuring inside/outside views.\n\ncapture.py\nimport cv2\nimport sys\nimport numpy as np\nimport re\n\n\ndef init_camera(id, width, height):\n    u'''\n    Initializing a camera\n    '''\n    cap = cv2.VideoCapture(id)\n    cap.set(cv2.cv.CV_CAP_PROP_FRAME_WIDTH, width)\n    cap.set(cv2.cv.CV_CAP_PROP_FRAME_HEIGHT, height)\n\n    return cap\n\n\ndef run(ids, width=320, height=180):\n    u'''\n    Capturing images\n    '''\n    caps = [init_camera(id, width, height) for id in ids]\n\n    while(True):\n        # Capture frame-by-frame\n        for id in ids:\n            ret, frame = caps[id].read()\n\n            # Our operations on the frame come here\n\n            # Display the resulting frame\n            cv2.imshow('cam %d' % id, frame)\n\n        if cv2.waitKey(1) & 0xFF == ord('q'):\n            break\n\n    # When everything done, release the capture\n    for id in ids:\n        caps[id].release()\n    cv2.destroyAllWindows()\n\n\ndef parse_argvs(argvs):\n    if(len(argvs) == 1):\n        print 'Usage: python capture.py --ids [0, 1, ...] --width [width], --height [height]'\n\n    if '--width' in argvs:\n        width = np.int(argvs[argvs.index('--width') + 1])\n    else:\n        width = 320\n    if '--height' in argvs:\n        height = np.int(argvs[argvs.index('--height') + 1])\n    else:\n        height = 180\n    if '--ids' in argvs:\n        ids = []\n        idx = argvs.index('--ids') + 1\n        while(re.match('--.*', argvs[idx]) is None):\n            ids.append(np.int(argvs[idx]))\n            idx = idx + 1\n    else:\n        ids = [0]\n\n    return ids, width, height\n\nif(__name__ == '__main__'):\n    ids, width, height = parse_argvs(sys.argv)\n    run(ids, width, height)\n\n\n\n\nExample:\npython capture.py --ids 0 1 --width 320 --height 180\n\n\nPupil is a head-mounted eye tracker, which is very low price (380 Euro~)\nSee Pupil lab: http://pupil-labs.com/pupil/\n\nAlthough a good sdk for MacOS and Linux is available officially, I had a try to use this device just for capuring inside/outside views.\n\n```py:capture.py\nimport cv2\nimport sys\nimport numpy as np\nimport re\n\n\ndef init_camera(id, width, height):\n\tu'''\n\tInitializing a camera\n\t'''\n    cap = cv2.VideoCapture(id)\n    cap.set(cv2.cv.CV_CAP_PROP_FRAME_WIDTH, width)\n    cap.set(cv2.cv.CV_CAP_PROP_FRAME_HEIGHT, height)\n\n    return cap\n\n\ndef run(ids, width=320, height=180):\n\tu'''\n\tCapturing images\n\t'''\n    caps = [init_camera(id, width, height) for id in ids]\n\n    while(True):\n        # Capture frame-by-frame\n        for id in ids:\n            ret, frame = caps[id].read()\n\n            # Our operations on the frame come here\n\n            # Display the resulting frame\n            cv2.imshow('cam %d' % id, frame)\n\n        if cv2.waitKey(1) & 0xFF == ord('q'):\n            break\n\n    # When everything done, release the capture\n    for id in ids:\n        caps[id].release()\n    cv2.destroyAllWindows()\n\n\ndef parse_argvs(argvs):\n    if(len(argvs) == 1):\n        print 'Usage: python capture.py --ids [0, 1, ...] --width [width], --height [height]'\n\n    if '--width' in argvs:\n        width = np.int(argvs[argvs.index('--width') + 1])\n    else:\n        width = 320\n    if '--height' in argvs:\n        height = np.int(argvs[argvs.index('--height') + 1])\n    else:\n        height = 180\n    if '--ids' in argvs:\n        ids = []\n        idx = argvs.index('--ids') + 1\n        while(re.match('--.*', argvs[idx]) is None):\n            ids.append(np.int(argvs[idx]))\n            idx = idx + 1\n    else:\n        ids = [0]\n\n    return ids, width, height\n\nif(__name__ == '__main__'):\n    ids, width, height = parse_argvs(sys.argv)\n    run(ids, width, height)\n\n```\n\n### Example:\n```python capture.py --ids 0 1 --width 320 --height 180```\n![kobito.1414127169.369296.png](https://qiita-image-store.s3.amazonaws.com/0/69/9106d176-d0de-5ce1-0f2c-65d2a0e2339f.png \"kobito.1414127169.369296.png\")\n\n"}