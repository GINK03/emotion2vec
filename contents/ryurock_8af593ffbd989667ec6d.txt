{"tags": ["nodejs", "JavaScript", "Node.js", "Electron"], "context": "Electron\u3067\u7ba1\u7406\u753b\u9762\u3068\u304b\u4f5c\u3063\u305f\u308a\u3057\u305f\u3089\u3001\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u8a8d\u8a3c\u3068\u304b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3068\u304b\u304d\u306b\u3057\u306a\u304f\u3066\u3048\u3048\u3084\u3093\u3002\n\u3068\u601d\u3044\u6700\u8fd1Electron\u306b\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u3092\u9707\u308f\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n\u3068\u306f\u8a00\u3048\u3044\u304f\u3089\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3044\u3048\u3069\u3001\u6700\u4f4e\u9650\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306f\u3064\u3051\u306a\u30a2\u30ab\u30f3\u3067\u3057\u3087\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067Electron\u3067 \n\nGoogle google+ API\u3092\u4f7f\u3063\u3066\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\n\n\n\u8a72\u5f53\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u306a\u3089\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\n\n\n\n\u4e0a\u8a18\u306e\u4e8b\u3092\u8a66\u3057\u306b\u4f5c\u3063\u3066\u898b\u305f\u6642\u306e\u30e1\u30e2\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u3084\u308b\u3053\u3068\n\nElectron\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\nrenderer-process\u304b\u3089main-process\u306b\u5bfe\u3057\u3066\u8a8d\u8a3c\u78ba\u8a8d\u3092\u884c\u3046\nmain-process\u304c\u8a8d\u8a3c\u60c5\u5831(google+ API plus.people.get)\u3092\u78ba\u8a8d\u3057\u3066\u8d77\u52d5\u3057\u3066\u3088\u3044\u30e6\u30fc\u30b6\u30fc\u304b\u5426\u304b\u3092\u5224\u5b9a\n\n\n\u8d77\u52d5\u3057\u3066\u306f\u3044\u3051\u306a\u3044\u30e6\u30fc\u30b6\u30fc\u306e\u5834\u5408\u306f\u30a2\u30d7\u30ea\u3092\u843d\u3068\u3059\n\u8d77\u52d5\u3057\u3066\u3044\u3044\u30e6\u30fc\u30b6\u30fc\u306e\u5834\u5408\u306f\u30a2\u30d7\u30ea\u3092\u7d99\u7d9a\u8d77\u52d5\u3059\u308b\n\n\n\n\n\u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8\n\nElectron \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8(\u65e5\u672c\u8a9e\u7248)\n\nElectron API Demos\n\n\u4e0a\u8a18\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092DL\u3057\u3066\u8d77\u52d5\u3059\u308b\u3068Electron\u3067\u3067\u304d\u308b\u3053\u3068\u304c\u4e00\u901a\u308a\u308f\u304b\u308b\n\n\n\n\n\u74b0\u5883\n\nOSX ElCapitan 10.11\n\n\n\u4e8b\u524d\u6e96\u5099\u306b\u5fc5\u8981\u306a\u3082\u306e\n\nNodeJS v5.1.0 - v7.2.0\n\n\nv5.1.0\u3067\u6700\u521d\u4f5c\u3063\u3066\u3044\u305f\u306e\u3067\u305d\u306e\u9593\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306a\u3089\u591a\u5206\u5927\u4e08\u592b\nNodeJS\u304c\u5165\u3063\u3066\u3044\u306a\u65b9\u306f OSX\u3067nodebrew\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30e1\u30e2\n\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u308c\u3066\u304f\u3060\u3055\u3044\n\n\nelectron v1.4.8\n\n\n\u5165\u308c\u3066\u3044\u306a\u3044\u4eba\u306f npm install -g electron \u3068\u6253\u3068\u3046\n\n\n\nGoogle API Console \u304b\u3089 google+ API\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u8a31\u53ef\u3092\u3057\u3066\u304a\u304f\n\n\nGoogle\u8a8d\u8a3c\u306e\u6e96\u5099\u3092\u3059\u308b\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u8a8d\u8a3c\u60c5\u5831\u3092\u8ffd\u52a0\n\nOAuth \u30af\u30e9\u30a4\u30a2\u30f3\u30c8ID\nweb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u5148\u306a\u3093\u3060\u3051\u3069\u3082electron\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3068\u304d\u306f browser\u306eloadURL\u3067\u5b9f\u884c\u3059\u308b\u306e\u3067\u3069\u3093\u306aURL\u3067\u3082\u7d50\u5c40\u623b\u3063\u3066\u304f\u308b\u306e\u3067\u4f55\u3067\u3082OK(\u306a\u306e\u3067http://localhost\u306b\u3057\u3066\u3044\u308b)\n\n\n\n\u4e0a\u8a18\u8a2d\u5b9a\u304c\u5b8c\u4e86\u3057\u305f\u3089\u8a8d\u8a3c\u60c5\u5831\u30da\u30fc\u30b8\u304b\u3089\u300cJSON\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n(\u5f8c\u3067\u4f7f\u3044\u307e\u3059)\n\nAPI Manager\u304b\u3089 Google+ API\u3092\u6709\u52b9\u3057\u3066\u304a\u304f\n\u30e9\u30a4\u30d6\u30e9\u30ea\u304b\u3089 google+\u3067\u691c\u7d22\u3057\u3066API\u3092\u6709\u52b9\u306b\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u3053\u304b\u3089\u304c\u672c\u984c\nelectron\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304b\u3089\u59cb\u3081\u307e\u3059\n\nElectron\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3059\u308b\n\u307e\u305a\u306f\u3053\u3053\u304b\u3089\n\npath/to/\nmkdir path/to/project\ncd path/to/project\n# \u9069\u5f53\u306b\u7b54\u3048\u3066package.json\u3092\u4f5c\u308b\nnpm init\n\n# electron-json-storage\u306f\n# ~/Library/Application Support/<package.json[name]> \u306bjson\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u3066storage\u3068\u3057\u3066\u6271\u3048\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\n# is-empty\u306f\u7a7a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5224\u5b9a\u7528\u30e9\u30a4\u30d6\u30e9\u30ea(\u5730\u5473\u306b\u7a7a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5224\u5b9a\u304c\u30c0\u30eb\u3044\u306e\u3067)\nnpm install electron-json-storage googleapis is-empty --save\ntouch main.js\ntouch index.html\n# google API\u53e9\u304f\u6642\u306b\u5fc5\u8981\nmkdir config\nmv <google\u306e\u8a8d\u8a3c\u60c5\u5831JSON>.json config/google-secret.json\n# \u8a8d\u8a3c\u60c5\u5831\u3092\u9593\u9055\u3048\u3066push\u3068\u304b\u3057\u306a\u3044\u3088\u3046\u306b\u30fb\u30fb\u30fb\necho 'config/google-secret.json' >> .gitignore\n\n\n\nmain-process\n\u516c\u5f0f\u306eQuickStart\u3092\u30b3\u30d4\u30fc\n\nmain.js\nconst {app, BrowserWindow} = require('electron')\n\nconst path = require('path')\nconst Url = require('url')\n\nlet win\n\nfunction createWindow () {\n  win = new BrowserWindow({width: 800, height: 600})\n\n  win.loadURL(Url.format({\n    pathname: path.join(__dirname, 'index.html'),\n    protocol: 'file:',\n    slashes: true\n  }))\n\n  // Open the DevTools.\n  win.webContents.openDevTools()\n\n\n  // Emitted when the window is closed.\n  win.on('closed', () => {\n    // Dereference the window object, usually you would store windows\n    // in an array if your app supports multi windows, this is the time\n    // when you should delete the corresponding element.\n    win = null\n  })\n}\n\napp.on('ready', createWindow)\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit()\n  }\n})\n\napp.on('activate', () => {\n  if (win === null) {\n    createWindow()\n  }\n})\n\n\n\nrenderer-process\n\u5225\u306b\u4f55\u3067\u3082\u3088\u3044\n\nindex.html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Hello World!</title>\n  </head>\n  <body>\n    <h1>hello Electron</h1>\n    <script type=\"text/javascript\">\n    //@todo \u3053\u3053\u306bgoogle\u8a8d\u8a3c\u306e\u51e6\u7406\u3092\u66f8\u3044\u3066\u3044\u304f\n    </script>\n  </body>\n</html>\n\n\nmain-process\u3068renderer\u30d7\u30ed\u30bb\u30b9\u304c\u308f\u304b\u3089\u306a\u3044\u65b9\u306f\u4e0b\u8a18\u3092\u53c2\u8003\nElectron(\u65e5\u672c\u8a9e\u7248Document) \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\n\nElectron\u3092\u8d77\u52d5\u3057\u3066\u307f\u308b\ncd path/to/project\nelectron .\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u7acb\u3061\u4e0a\u304c\u308a hello World!\u304c\u8868\u793a\u3055\u308c\u305f\u3089Electron\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u5b8c\u4e86\n\nRenderer-Process\u304b\u3089Main-Process\u306b\u8a8d\u8a3c\u78ba\u8a8d\u3092\u78ba\u8a8d\u3059\u308b\nindex.html\u306b\u4e0b\u8a18\u3092\u8ffd\u8a18\u3059\u308b(Renderer-Process)\n\nindex.html\n  <body>\n    <h1>hello Electron</h1>\n    <script type=\"text/javascript\">\n    // \u8ffd\u52a0\n    const ipc = require('electron').ipcRenderer\n    ipc.send('auth', 'ping')\n    ipc.on('auth-reply', function (event, arg) {\n        console.log(arg) //pong\u304c\u5e30\u3063\u3066\u304f\u308c\u3070OK\n    })\n    </script>\n  </body>\n\n\n\nMain-Process\u5074\u304b\u3089Renderer-Process\u53d7\u4fe1\u30a4\u30d9\u30f3\u30c8\u3092\u8ffd\u52a0\u3059\u308b\n\nmain.js\n.\n.\n.\napp.on('activate', () => {\n  if (win === null) {\n    createWindow()\n  }\n})\n\nipc.on('auth', function (event, _) {\n  event.sender.send('auth-reply', 'pong')\n})\n\n\n\u4e0a\u8a18\u306e\u72b6\u614b\u3067 electron . \u3092\u5b9f\u884c\u3057\u3066DevelopperTools\u306econsole\u306bpong\u3068\u8868\u793a\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\n\u4e0a\u8a18\u3067Renderer-Process -> Main-Process -> Renderer-Process \u306e\u30a4\u30d9\u30f3\u30c8\u306e\u6d41\u308c\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\nMain-Process\u3092\u8a8d\u8a3c\u60c5\u5831\u3092\u8fd4\u3059\u3088\u3046\u306b\u4fee\u6b63\u3057\u3066\u307f\u308b\nGoogle\u306eOAuth2\u3067\u30c8\u30fc\u30af\u30f3\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3068\u3053\u308d\u3068\u304b\u3042\u308b\u306e\u3067\u5c11\u3057\u9577\u3081\n\nmain.js\nconst {app, BrowserWindow} = require('electron')\nconst ipc = require('electron').ipcMain\n\nconst path = require('path')\nconst Url = require('url')\n\n// \u8ffd\u52a0(\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u306fAtom\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3092\u53c2\u8003\u306b\u3057\u305f)\nconst Auth = require('./src/main-process/auth')\n\nlet win //<= BrowserWindow\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n.\n. (\u4e2d\u7565)\n.\nipc.on('auth', function (event, _) {\n  auth = new Auth(win)\n  // google\u306e\u8a8d\u8a3c\u753b\u9762\u8a2d\u5b9a\u3060\u3068file://\u30d7\u30ed\u30c8\u30b3\u30eb\u306f\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\u30ed\u30b8\u30c3\u30af\u5074\u3067\u518d\u5ea6\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b\n  auth.setCallbackUrl(path.join(__dirname, 'index.html'))\n  // \u8a31\u53ef\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u3092\u6307\u5b9a\u3059\u308b\n\u3000auth.authorizationDomains.allow = ['hoge.co.jp']\n  auth.authenticate(function(error, response){\n    // \u8a8d\u8a3c\u5931\u6557\u6642\u306f\u30a2\u30d7\u30ea\u3092\u843d\u3068\u3059\n    if (error) app.quit()\n    event.sender.send('auth-reply', {\n      user: response,\n      error: error\n    })\n  })\n})\n\n\n\nsrc/main-process/auth.js\nconst empty = require('is-empty')\nconst storage = require('electron-json-storage')\nconst OAuth2 = require('googleapis').auth.OAuth2\nconst plus   = require('googleapis').plus('v1')\nconst googleSecret = require('../../config/google-secret.json')\nconst Url          = require('url')\nconst queryString  = require('querystring')\n\nclass Auth {\n  constructor (browser) {\n    this.oAuth2Client = new OAuth2(\n      googleSecret.web.client_id,\n      googleSecret.web.client_secret,\n      googleSecret.web.redirect_uris[0]\n    )\n    this.browser = browser\n    this.scopes  = [\n      'https://www.googleapis.com/auth/plus.login',\n      'https://www.googleapis.com/auth/plus.me',\n      'https://www.googleapis.com/auth/userinfo.email',\n      'https://www.googleapis.com/auth/userinfo.profile'\n    ]\n    this.authorizationDomains = { allow: [], deny: [] }\n  }\n\n  allowAuthorizationDomain(domains = []) {\n    this.authorizationDomains.allow = domains\n  }\n\n  denyAuthorizationDomain(domains = []) {\n    this.authorizationDomains.deny = domains\n  }\n\n  setCallbackUrl(url) {\n    this.callbackUrl = url\n  }\n\n  authenticate (callback) {\n    Promise.resolve()\n    .then(() => {\n      //\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30c8\u30fc\u30af\u30f3\u60c5\u5831\u304c\u3042\u308b\u304b\u78ba\u8a8d\u3059\u308b\n      return this.loadTokenFromApplicationStorage()\n    })\n    .then((tokenAndAuthenticated) => {\n      //\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30c8\u30fc\u30af\u30f3\u60c5\u5831\u3092\u4fdd\u5b58\u3059\u308b\n      return this.setAuthenticatedAndCredentials(tokenAndAuthenticated)\n    })\n    .catch(() => {\n      //\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30c8\u30fc\u30af\u30f3\u60c5\u5831\u304c\u306a\u3044\u5834\u5408\u306fgoogle\u304b\u3089\u30c8\u30fc\u30af\u30f3\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n      return this.tryFetchTokenFromGoogle()\n    })\n    .then(() => {\n      //\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n      return this.fetchUserMeFromGoogle()\n    })\n    .then((response) => {\n      return callback(null, response)\n    })\n    .catch((err) => {\n      return callback(err, null)\n    })\n  }\n\n  setAuthenticatedAndCredentials (tokenAndAuthenticated) {\n    return new Promise((resolve) => {\n      this.authenticated = tokenAndAuthenticated.authenticated\n      this.oAuth2Client.setCredentials({\n        access_token: tokenAndAuthenticated.token.access_token,\n        refresh_token: tokenAndAuthenticated.token.id_token\n      })\n      resolve()\n    })\n  }\n\n  //Google+ API people.get\u3092\u5b9f\u884c\n  fetchUserMeFromGoogle () {\n    return new Promise((resolve, reject) => {\n      plus.people.get({\n        userId: 'me',\n        auth: this.oAuth2Client\n      }, (err, response) => {\n        if (err) {\n          if (this.authenticated == false && err.code == 401) return this.retryAuthenticate()\n          return reject(err)\n        }\n        /** \n         * \u30ec\u30b9\u30dd\u30f3\u30b9\n         * {\n         *   emails: [ { value: 'xxxxxxx@hoge.co.jp', type: 'account' } ], \n         *    .\n         *    .\n         *    .\n         *   domain: 'hoge.co.jp'\n         * }\n         **/\n         // domains\u3067\u62d2\u5426\u3057\u305f\u3044\u30c9\u30e1\u30a4\u30f3\u304c\u3042\u3063\u305f\u5834\u5408\u30a8\u30e9\u30fc\u306b\u3059\u308b\n        if (this.authorizationDomains.deny.length > 0) {\n          for (let i = 0; i < this.authorizationDomains.deny.length; i++) {\n            if (response.domain == this.authorizationDomains.deny[i]) return reject(new Error('Authorization Domains deny Error'))\n          }\n          return resolve({\n              email: response.emails[0].value,\n              name:  response.displayName,\n              thumbnail: response.image.url\n          })\n        }\n\n         // domains\u3067\u8a31\u5bb9\u3057\u305f\u3044\u30c9\u30e1\u30a4\u30f3\u304c\u3042\u3063\u305f\u5834\u5408\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\n        if (this.authorizationDomains.allow.length > 0) {\n          for (let i = 0; i < this.authorizationDomains.allow.length; i++) {\n            if (response.domain == this.authorizationDomains.allow[i]) return resolve({\n              email: response.emails[0].value,\n              name:  response.displayName,\n              thumbnail: response.image.url\n            })\n          }\n          return reject(new Error('Authorization Domains allow Error'))\n        }\n\n        resolve({\n          email: response.emails[0].value,\n          name:  response.displayName,\n          thumbnail: response.image.url\n        })\n      })\n    })\n  }\n\n  # \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u671f\u9650\u5207\u308c\u306e\u5834\u5408\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\n  retryAuthenticate () {\n    Promise.resolve()\n    .then(() => {\n      return this.tryFetchTokenFromGoogle()\n    })\n    .then((tokenAndAuthenticated) => {\n      return this.setAuthenticatedAndCredentials(tokenAndAuthenticated)\n    })\n  }\n\n  // Google\u306eOAuth2\u3092\u5b9f\u884c\u3057\u3066token\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n  tryFetchTokenFromGoogle () {\n    return new Promise((resolve, reject) => {\n      Promise.resolve()\n      .then(() => {\n        return this.requestOAuthCode()\n      })\n      .then((code) => {\n        return this.fetchTokenFromGoogle(code)\n      })\n      .then((tokens) => {\n        storage.set('tokens', tokens, function(error) {\n          return resolve({ token: tokens, authenticated: true })\n        })\n      })\n      .catch((err) => {\n        reject(err)\n      })\n\n    })\n  }\n\n  // Google\u306etoken\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n  fetchTokenFromGoogle (code) {\n    return new Promise((resolve, reject) => {\n      this.oAuth2Client.getToken(code, (err, tokens) => {\n        if (err) return reject(err)\n        return resolve(tokens)\n      })\n    })\n  }\n\n  // Google\u306etoken\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306ecode\u3092\u53d6\u5f97\u3059\u308b\n  requestOAuthCode (reject, resolve) {\n    return new Promise((resolve, reject) => {\n      let url = this.oAuth2Client.generateAuthUrl({ access_type: 'offline', scope: this.scopes})\n       // chrominum\u304b\u3089HTTP\u30a2\u30af\u30bb\u30b9\u3092\u3057\u3066Google\u8a8d\u8a3c\u78ba\u8a8d\u753b\u9762\u3092\u8868\u793a\u3055\u305b\u308b\n      this.browser.loadURL(url)\n      // Google API \u8a8d\u8a3c\u60c5\u5831\u3067\u8a2d\u5b9a\u3057\u305f\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u5148\u304c\u8868\u793a\u3055\u308c\u305f\u3068\u304d\u306e\u30a4\u30d9\u30f3\u30c8\n      this.browser.webContents.on('did-get-redirect-request', (event, oldUrl, newUrl) => {\n        let query = queryString.parse(Url.parse(newUrl).query)\n        if (query.error || !query.code) return reject(query.error, null)\n        this.browser.loadURL(Url.format({\n            pathname: this.callbackUrl,\n            protocol: 'file:',\n            slashes: true\n        }))\n        return resolve(query.code)\n      })\n    })\n  }\n  // ~/Library/Application Support/<package.json[name]>/tokens.json\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308c\u3070\u305d\u306etoken\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n  loadTokenFromApplicationStorage () {\n    return new Promise((resolve, reject) => {\n      // path ~/Library/Application Support/<package.json[name]>\n      storage.get('tokens', function(error, tokens) {\n        if (empty(tokens)) return reject()\n        return resolve({token: tokens, authenticated: false})\n      })\n    })\n  }\n}\n\nmodule.exports = Auth\n\n\nauthenticate\u306e\u30e1\u30bd\u30c3\u30c9\u307f\u308c\u3070\u5927\u4f53\u3057\u305f\u3044\u3053\u3068\u306f\u308f\u304b\u308b\u306f\u305a\n\n\u53d6\u5f97\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092Renderer-Process\u306b\u8868\u793a\u3055\u305b\u308b\n\u53d6\u5f97\u3067\u304d\u3066\u308b\u306e\u3067\u5f8c\u306f\u7c21\u5358\u3067\u3059\u306d\n\nindex.html\n  <body>\n    <h1>hello Electron</h1>\n    # \u8ffd\u52a0\n    <div id=\"username\"></div>\n    # \u8ffd\u52a0\n    <img id=\"userthumb\" src=\"\" />\n    <script type=\"text/javascript\">\n    const ipc = require('electron').ipcRenderer\n    ipc.send('auth', 'ping')\n    ipc.on('auth-reply', function (event, arg) {\n      # \u8ffd\u52a0\n      document.getElementById('username').innerHTML = arg.user.name\n      # \u8ffd\u52a0\n      document.getElementById('userthumb').src = arg.user.thumbnail\n    })\n    </script>\n  </body>\n\n\n\u30b5\u30e0\u30cd\u30a4\u30eb\u3068\u30e6\u30fc\u30b6\u30fc\u540d\u304c\u8868\u793a\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\n\n\u6700\u5f8c\u306b\n\u4eca\u56de\u306ftoken\u60c5\u5831\u7b49\u306f\u30ed\u30fc\u30ab\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u304c\u3001\n\u3053\u308c\u3092DB\u3068\u304b\u306b\u683c\u7d0d\u3059\u308c\u3070\u3082\u3046\u3061\u3087\u3044\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u304c\u5f37\u56fa\u306b\u306a\u308a\u307e\u3059\u3002\nElectron\u81ea\u4f53\u306b\u30cf\u30de\u3089\u305a\u3001NodeJS\u306e\u975e\u540c\u671f\u51e6\u7406\u3092\u7dba\u9e97\u306b\u66f8\u3053\u3046\u3068\u30cf\u30de\u3063\u3066\u3044\u305f\u306e\u306f\u5185\u7dd2\u3067\u3059\u30fb\u30fb\u30fb\u30fb\u30fb\n(\u3042\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u8a00\u3063\u3066\u308b\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb)\n\n[Electron](http://electron.atom.io/)\u3067\u7ba1\u7406\u753b\u9762\u3068\u304b\u4f5c\u3063\u305f\u308a\u3057\u305f\u3089\u3001\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u8a8d\u8a3c\u3068\u304b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3068\u304b\u304d\u306b\u3057\u306a\u304f\u3066\u3048\u3048\u3084\u3093\u3002\n\u3068\u601d\u3044\u6700\u8fd1Electron\u306b\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u3092\u9707\u308f\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n\n\u3068\u306f\u8a00\u3048\u3044\u304f\u3089\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3044\u3048\u3069\u3001\u6700\u4f4e\u9650\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306f\u3064\u3051\u306a\u30a2\u30ab\u30f3\u3067\u3057\u3087\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067Electron\u3067 \n\n* Google google+ API\u3092\u4f7f\u3063\u3066\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\n\t* \u8a72\u5f53\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u306a\u3089\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\n\n\u4e0a\u8a18\u306e\u4e8b\u3092\u8a66\u3057\u306b\u4f5c\u3063\u3066\u898b\u305f\u6642\u306e\u30e1\u30e2\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n## \u4eca\u56de\u3084\u308b\u3053\u3068\n\n1. Electron\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\n1. renderer-process\u304b\u3089main-process\u306b\u5bfe\u3057\u3066\u8a8d\u8a3c\u78ba\u8a8d\u3092\u884c\u3046\n1. main-process\u304c\u8a8d\u8a3c\u60c5\u5831(google+ API [plus.people.get](https://developers.google.com/apis-explorer/?hl=ja#p/plus/v1/plus.people.get))\u3092\u78ba\u8a8d\u3057\u3066\u8d77\u52d5\u3057\u3066\u3088\u3044\u30e6\u30fc\u30b6\u30fc\u304b\u5426\u304b\u3092\u5224\u5b9a\n\t1. \u8d77\u52d5\u3057\u3066\u306f\u3044\u3051\u306a\u3044\u30e6\u30fc\u30b6\u30fc\u306e\u5834\u5408\u306f\u30a2\u30d7\u30ea\u3092\u843d\u3068\u3059\n\t1. \u8d77\u52d5\u3057\u3066\u3044\u3044\u30e6\u30fc\u30b6\u30fc\u306e\u5834\u5408\u306f\u30a2\u30d7\u30ea\u3092\u7d99\u7d9a\u8d77\u52d5\u3059\u308b\n\n\n## \u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8\n\n* [Electron \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8(\u65e5\u672c\u8a9e\u7248)](https://github.com/electron/electron/tree/master/docs-translations/jp)\n* [Electron API Demos](http://electron.atom.io/#get-started)\n\t* \u4e0a\u8a18\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092DL\u3057\u3066\u8d77\u52d5\u3059\u308b\u3068Electron\u3067\u3067\u304d\u308b\u3053\u3068\u304c\u4e00\u901a\u308a\u308f\u304b\u308b\n\n## \u74b0\u5883\n\n* OSX ElCapitan 10.11\n\n## \u4e8b\u524d\u6e96\u5099\u306b\u5fc5\u8981\u306a\u3082\u306e\n\n* NodeJS v5.1.0 - v7.2.0\n\t* v5.1.0\u3067\u6700\u521d\u4f5c\u3063\u3066\u3044\u305f\u306e\u3067\u305d\u306e\u9593\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306a\u3089\u591a\u5206\u5927\u4e08\u592b\n\t* NodeJS\u304c\u5165\u3063\u3066\u3044\u306a\u65b9\u306f [OSX\u3067nodebrew\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30e1\u30e2\n](http://qiita.com/ryurock/items/5bb3e432ab5945fdf980)\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u308c\u3066\u304f\u3060\u3055\u3044\n* electron v1.4.8\n\t* \u5165\u308c\u3066\u3044\u306a\u3044\u4eba\u306f ``` npm install -g electron ``` \u3068\u6253\u3068\u3046\n* [Google API Console](https://console.developers.google.com/?hl=JA) \u304b\u3089 google+ API\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u8a31\u53ef\u3092\u3057\u3066\u304a\u304f\n\n### Google\u8a8d\u8a3c\u306e\u6e96\u5099\u3092\u3059\u308b\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u8a8d\u8a3c\u60c5\u5831\u3092\u8ffd\u52a0\n\n* OAuth \u30af\u30e9\u30a4\u30a2\u30f3\u30c8ID\n* web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n* \u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u5148\u306a\u3093\u3060\u3051\u3069\u3082electron\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3068\u304d\u306f browser\u306eloadURL\u3067\u5b9f\u884c\u3059\u308b\u306e\u3067\u3069\u3093\u306aURL\u3067\u3082\u7d50\u5c40\u623b\u3063\u3066\u304f\u308b\u306e\u3067\u4f55\u3067\u3082OK(\u306a\u306e\u3067http://localhost\u306b\u3057\u3066\u3044\u308b)\n\n![\u8a8d\u8a3c\u60c5\u5831\uff11](https://raw.githubusercontent.com/ryurock/qiita_images/master/google-auth1.png)\n\n![\u8a8d\u8a3c\u60c5\u58312](https://raw.githubusercontent.com/ryurock/qiita_images/master/google-auth2.png)\n\n\u4e0a\u8a18\u8a2d\u5b9a\u304c\u5b8c\u4e86\u3057\u305f\u3089\u8a8d\u8a3c\u60c5\u5831\u30da\u30fc\u30b8\u304b\u3089\u300cJSON\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n(\u5f8c\u3067\u4f7f\u3044\u307e\u3059)\n\n### API Manager\u304b\u3089 Google+ API\u3092\u6709\u52b9\u3057\u3066\u304a\u304f\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u304b\u3089 google+\u3067\u691c\u7d22\u3057\u3066API\u3092\u6709\u52b9\u306b\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \u3053\u3053\u304b\u3089\u304c\u672c\u984c\n\nelectron\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304b\u3089\u59cb\u3081\u307e\u3059\n\n\n## Electron\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3059\u308b\n\n\u307e\u305a\u306f\u3053\u3053\u304b\u3089\n\n```shell:path/to/\nmkdir path/to/project\ncd path/to/project\n# \u9069\u5f53\u306b\u7b54\u3048\u3066package.json\u3092\u4f5c\u308b\nnpm init\n\n# electron-json-storage\u306f\n# ~/Library/Application Support/<package.json[name]> \u306bjson\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u3066storage\u3068\u3057\u3066\u6271\u3048\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\n# is-empty\u306f\u7a7a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5224\u5b9a\u7528\u30e9\u30a4\u30d6\u30e9\u30ea(\u5730\u5473\u306b\u7a7a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5224\u5b9a\u304c\u30c0\u30eb\u3044\u306e\u3067)\nnpm install electron-json-storage googleapis is-empty --save\ntouch main.js\ntouch index.html\n# google API\u53e9\u304f\u6642\u306b\u5fc5\u8981\nmkdir config\nmv <google\u306e\u8a8d\u8a3c\u60c5\u5831JSON>.json config/google-secret.json\n# \u8a8d\u8a3c\u60c5\u5831\u3092\u9593\u9055\u3048\u3066push\u3068\u304b\u3057\u306a\u3044\u3088\u3046\u306b\u30fb\u30fb\u30fb\necho 'config/google-secret.json' >> .gitignore\n```\n\n### main-process \n\n\u516c\u5f0f\u306e[QuickStart](http://electron.atom.io/docs/tutorial/quick-start/#write-your-first-electron-app)\u3092\u30b3\u30d4\u30fc\n\n```js:main.js\nconst {app, BrowserWindow} = require('electron')\n\nconst path = require('path')\nconst Url = require('url')\n\nlet win\n\nfunction createWindow () {\n  win = new BrowserWindow({width: 800, height: 600})\n\n  win.loadURL(Url.format({\n    pathname: path.join(__dirname, 'index.html'),\n    protocol: 'file:',\n    slashes: true\n  }))\n\n  // Open the DevTools.\n  win.webContents.openDevTools()\n\n\n  // Emitted when the window is closed.\n  win.on('closed', () => {\n    // Dereference the window object, usually you would store windows\n    // in an array if your app supports multi windows, this is the time\n    // when you should delete the corresponding element.\n    win = null\n  })\n}\n\napp.on('ready', createWindow)\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit()\n  }\n})\n\napp.on('activate', () => {\n  if (win === null) {\n    createWindow()\n  }\n})\n```\n\n### renderer-process \n\n\u5225\u306b\u4f55\u3067\u3082\u3088\u3044\n\n```html:index.html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Hello World!</title>\n  </head>\n  <body>\n\t<h1>hello Electron</h1>\n    <script type=\"text/javascript\">\n\t//@todo \u3053\u3053\u306bgoogle\u8a8d\u8a3c\u306e\u51e6\u7406\u3092\u66f8\u3044\u3066\u3044\u304f\n\t</script>\n  </body>\n</html>\n```\n\nmain-process\u3068renderer\u30d7\u30ed\u30bb\u30b9\u304c\u308f\u304b\u3089\u306a\u3044\u65b9\u306f\u4e0b\u8a18\u3092\u53c2\u8003\n\n[Electron(\u65e5\u672c\u8a9e\u7248Document) \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8](https://github.com/electron/electron/blob/master/docs-translations/jp/tutorial/quick-start.md)\n\n## Electron\u3092\u8d77\u52d5\u3057\u3066\u307f\u308b\n\n```shell\ncd path/to/project\nelectron .\n```\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u7acb\u3061\u4e0a\u304c\u308a hello World!\u304c\u8868\u793a\u3055\u308c\u305f\u3089Electron\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u5b8c\u4e86\n\n## Renderer-Process\u304b\u3089Main-Process\u306b\u8a8d\u8a3c\u78ba\u8a8d\u3092\u78ba\u8a8d\u3059\u308b\n\nindex.html\u306b\u4e0b\u8a18\u3092\u8ffd\u8a18\u3059\u308b(Renderer-Process)\n\n```js:index.html\n  <body>\n\t<h1>hello Electron</h1>\n    <script type=\"text/javascript\">\n\t// \u8ffd\u52a0\n\tconst ipc = require('electron').ipcRenderer\n\tipc.send('auth', 'ping')\n\tipc.on('auth-reply', function (event, arg) {\n\t\tconsole.log(arg) //pong\u304c\u5e30\u3063\u3066\u304f\u308c\u3070OK\n\t})\n\t</script>\n  </body>\n```\n\n## Main-Process\u5074\u304b\u3089Renderer-Process\u53d7\u4fe1\u30a4\u30d9\u30f3\u30c8\u3092\u8ffd\u52a0\u3059\u308b\n\n\n```js:main.js\n.\n.\n.\napp.on('activate', () => {\n  if (win === null) {\n    createWindow()\n  }\n})\n\nipc.on('auth', function (event, _) {\n  event.sender.send('auth-reply', 'pong')\n})\n```\n\n\u4e0a\u8a18\u306e\u72b6\u614b\u3067 ``` electron . ``` \u3092\u5b9f\u884c\u3057\u3066DevelopperTools\u306econsole\u306bpong\u3068\u8868\u793a\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\n\n\u4e0a\u8a18\u3067Renderer-Process -> Main-Process -> Renderer-Process \u306e\u30a4\u30d9\u30f3\u30c8\u306e\u6d41\u308c\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n## Main-Process\u3092\u8a8d\u8a3c\u60c5\u5831\u3092\u8fd4\u3059\u3088\u3046\u306b\u4fee\u6b63\u3057\u3066\u307f\u308b\n\nGoogle\u306eOAuth2\u3067\u30c8\u30fc\u30af\u30f3\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3068\u3053\u308d\u3068\u304b\u3042\u308b\u306e\u3067\u5c11\u3057\u9577\u3081\n\n```js:main.js\nconst {app, BrowserWindow} = require('electron')\nconst ipc = require('electron').ipcMain\n\nconst path = require('path')\nconst Url = require('url')\n\n// \u8ffd\u52a0(\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u306fAtom\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3092\u53c2\u8003\u306b\u3057\u305f)\nconst Auth = require('./src/main-process/auth')\n\nlet win //<= BrowserWindow\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n.\n. (\u4e2d\u7565)\n.\nipc.on('auth', function (event, _) {\n  auth = new Auth(win)\n  // google\u306e\u8a8d\u8a3c\u753b\u9762\u8a2d\u5b9a\u3060\u3068file://\u30d7\u30ed\u30c8\u30b3\u30eb\u306f\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\u30ed\u30b8\u30c3\u30af\u5074\u3067\u518d\u5ea6\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b\n  auth.setCallbackUrl(path.join(__dirname, 'index.html'))\n  // \u8a31\u53ef\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u3092\u6307\u5b9a\u3059\u308b\n\u3000auth.authorizationDomains.allow = ['hoge.co.jp']\n  auth.authenticate(function(error, response){\n    // \u8a8d\u8a3c\u5931\u6557\u6642\u306f\u30a2\u30d7\u30ea\u3092\u843d\u3068\u3059\n    if (error) app.quit()\n    event.sender.send('auth-reply', {\n      user: response,\n      error: error\n    })\n  })\n})\n```\n\n```js:src/main-process/auth.js\nconst empty = require('is-empty')\nconst storage = require('electron-json-storage')\nconst OAuth2 = require('googleapis').auth.OAuth2\nconst plus   = require('googleapis').plus('v1')\nconst googleSecret = require('../../config/google-secret.json')\nconst Url          = require('url')\nconst queryString  = require('querystring')\n\nclass Auth {\n  constructor (browser) {\n    this.oAuth2Client = new OAuth2(\n      googleSecret.web.client_id,\n      googleSecret.web.client_secret,\n      googleSecret.web.redirect_uris[0]\n    )\n    this.browser = browser\n    this.scopes  = [\n      'https://www.googleapis.com/auth/plus.login',\n      'https://www.googleapis.com/auth/plus.me',\n      'https://www.googleapis.com/auth/userinfo.email',\n      'https://www.googleapis.com/auth/userinfo.profile'\n    ]\n    this.authorizationDomains = { allow: [], deny: [] }\n  }\n\n  allowAuthorizationDomain(domains = []) {\n    this.authorizationDomains.allow = domains\n  }\n\n  denyAuthorizationDomain(domains = []) {\n    this.authorizationDomains.deny = domains\n  }\n\n  setCallbackUrl(url) {\n    this.callbackUrl = url\n  }\n\n  authenticate (callback) {\n    Promise.resolve()\n    .then(() => {\n      //\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30c8\u30fc\u30af\u30f3\u60c5\u5831\u304c\u3042\u308b\u304b\u78ba\u8a8d\u3059\u308b\n      return this.loadTokenFromApplicationStorage()\n    })\n    .then((tokenAndAuthenticated) => {\n      //\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30c8\u30fc\u30af\u30f3\u60c5\u5831\u3092\u4fdd\u5b58\u3059\u308b\n      return this.setAuthenticatedAndCredentials(tokenAndAuthenticated)\n    })\n    .catch(() => {\n      //\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30c8\u30fc\u30af\u30f3\u60c5\u5831\u304c\u306a\u3044\u5834\u5408\u306fgoogle\u304b\u3089\u30c8\u30fc\u30af\u30f3\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n      return this.tryFetchTokenFromGoogle()\n    })\n    .then(() => {\n      //\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n      return this.fetchUserMeFromGoogle()\n    })\n    .then((response) => {\n      return callback(null, response)\n    })\n    .catch((err) => {\n      return callback(err, null)\n    })\n  }\n\n  setAuthenticatedAndCredentials (tokenAndAuthenticated) {\n    return new Promise((resolve) => {\n      this.authenticated = tokenAndAuthenticated.authenticated\n      this.oAuth2Client.setCredentials({\n        access_token: tokenAndAuthenticated.token.access_token,\n        refresh_token: tokenAndAuthenticated.token.id_token\n      })\n      resolve()\n    })\n  }\n\n  //Google+ API people.get\u3092\u5b9f\u884c\n  fetchUserMeFromGoogle () {\n    return new Promise((resolve, reject) => {\n      plus.people.get({\n        userId: 'me',\n        auth: this.oAuth2Client\n      }, (err, response) => {\n        if (err) {\n          if (this.authenticated == false && err.code == 401) return this.retryAuthenticate()\n          return reject(err)\n        }\n        /** \n         * \u30ec\u30b9\u30dd\u30f3\u30b9\n         * {\n         *   emails: [ { value: 'xxxxxxx@hoge.co.jp', type: 'account' } ], \n         *    .\n         *    .\n         *    .\n         *   domain: 'hoge.co.jp'\n         * }\n\t\t **/\n\t\t // domains\u3067\u62d2\u5426\u3057\u305f\u3044\u30c9\u30e1\u30a4\u30f3\u304c\u3042\u3063\u305f\u5834\u5408\u30a8\u30e9\u30fc\u306b\u3059\u308b\n        if (this.authorizationDomains.deny.length > 0) {\n          for (let i = 0; i < this.authorizationDomains.deny.length; i++) {\n            if (response.domain == this.authorizationDomains.deny[i]) return reject(new Error('Authorization Domains deny Error'))\n          }\n          return resolve({\n              email: response.emails[0].value,\n              name:  response.displayName,\n              thumbnail: response.image.url\n          })\n        }\n\n\t\t // domains\u3067\u8a31\u5bb9\u3057\u305f\u3044\u30c9\u30e1\u30a4\u30f3\u304c\u3042\u3063\u305f\u5834\u5408\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\n        if (this.authorizationDomains.allow.length > 0) {\n          for (let i = 0; i < this.authorizationDomains.allow.length; i++) {\n            if (response.domain == this.authorizationDomains.allow[i]) return resolve({\n              email: response.emails[0].value,\n              name:  response.displayName,\n              thumbnail: response.image.url\n            })\n          }\n          return reject(new Error('Authorization Domains allow Error'))\n        }\n\n        resolve({\n          email: response.emails[0].value,\n          name:  response.displayName,\n          thumbnail: response.image.url\n        })\n      })\n    })\n  }\n\n  # \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u671f\u9650\u5207\u308c\u306e\u5834\u5408\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\n  retryAuthenticate () {\n    Promise.resolve()\n    .then(() => {\n      return this.tryFetchTokenFromGoogle()\n    })\n    .then((tokenAndAuthenticated) => {\n      return this.setAuthenticatedAndCredentials(tokenAndAuthenticated)\n    })\n  }\n\n  // Google\u306eOAuth2\u3092\u5b9f\u884c\u3057\u3066token\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n  tryFetchTokenFromGoogle () {\n    return new Promise((resolve, reject) => {\n      Promise.resolve()\n      .then(() => {\n        return this.requestOAuthCode()\n      })\n      .then((code) => {\n        return this.fetchTokenFromGoogle(code)\n      })\n      .then((tokens) => {\n        storage.set('tokens', tokens, function(error) {\n          return resolve({ token: tokens, authenticated: true })\n        })\n      })\n      .catch((err) => {\n        reject(err)\n      })\n\n    })\n  }\n\n  // Google\u306etoken\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n  fetchTokenFromGoogle (code) {\n    return new Promise((resolve, reject) => {\n      this.oAuth2Client.getToken(code, (err, tokens) => {\n        if (err) return reject(err)\n        return resolve(tokens)\n      })\n    })\n  }\n\n  // Google\u306etoken\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306ecode\u3092\u53d6\u5f97\u3059\u308b\n  requestOAuthCode (reject, resolve) {\n    return new Promise((resolve, reject) => {\n      let url = this.oAuth2Client.generateAuthUrl({ access_type: 'offline', scope: this.scopes})\n\t   // chrominum\u304b\u3089HTTP\u30a2\u30af\u30bb\u30b9\u3092\u3057\u3066Google\u8a8d\u8a3c\u78ba\u8a8d\u753b\u9762\u3092\u8868\u793a\u3055\u305b\u308b\n      this.browser.loadURL(url)\n      // Google API \u8a8d\u8a3c\u60c5\u5831\u3067\u8a2d\u5b9a\u3057\u305f\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u5148\u304c\u8868\u793a\u3055\u308c\u305f\u3068\u304d\u306e\u30a4\u30d9\u30f3\u30c8\n      this.browser.webContents.on('did-get-redirect-request', (event, oldUrl, newUrl) => {\n        let query = queryString.parse(Url.parse(newUrl).query)\n        if (query.error || !query.code) return reject(query.error, null)\n        this.browser.loadURL(Url.format({\n            pathname: this.callbackUrl,\n            protocol: 'file:',\n            slashes: true\n        }))\n        return resolve(query.code)\n      })\n    })\n  }\n  // ~/Library/Application Support/<package.json[name]>/tokens.json\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308c\u3070\u305d\u306etoken\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n  loadTokenFromApplicationStorage () {\n    return new Promise((resolve, reject) => {\n      // path ~/Library/Application Support/<package.json[name]>\n      storage.get('tokens', function(error, tokens) {\n        if (empty(tokens)) return reject()\n        return resolve({token: tokens, authenticated: false})\n      })\n    })\n  }\n}\n\nmodule.exports = Auth\n```\n\nauthenticate\u306e\u30e1\u30bd\u30c3\u30c9\u307f\u308c\u3070\u5927\u4f53\u3057\u305f\u3044\u3053\u3068\u306f\u308f\u304b\u308b\u306f\u305a\n\n## \u53d6\u5f97\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092Renderer-Process\u306b\u8868\u793a\u3055\u305b\u308b\n\n\u53d6\u5f97\u3067\u304d\u3066\u308b\u306e\u3067\u5f8c\u306f\u7c21\u5358\u3067\u3059\u306d\n\n```html:index.html\n  <body>\n\t<h1>hello Electron</h1>\n    # \u8ffd\u52a0\n    <div id=\"username\"></div>\n    # \u8ffd\u52a0\n    <img id=\"userthumb\" src=\"\" />\n    <script type=\"text/javascript\">\n\tconst ipc = require('electron').ipcRenderer\n\tipc.send('auth', 'ping')\n\tipc.on('auth-reply', function (event, arg) {\n      # \u8ffd\u52a0\n      document.getElementById('username').innerHTML = arg.user.name\n      # \u8ffd\u52a0\n      document.getElementById('userthumb').src = arg.user.thumbnail\n\t})\n\t</script>\n  </body>\n```\n\n\u30b5\u30e0\u30cd\u30a4\u30eb\u3068\u30e6\u30fc\u30b6\u30fc\u540d\u304c\u8868\u793a\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\n\n## \u6700\u5f8c\u306b\n\n\u4eca\u56de\u306ftoken\u60c5\u5831\u7b49\u306f\u30ed\u30fc\u30ab\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u304c\u3001\n\u3053\u308c\u3092DB\u3068\u304b\u306b\u683c\u7d0d\u3059\u308c\u3070\u3082\u3046\u3061\u3087\u3044\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u304c\u5f37\u56fa\u306b\u306a\u308a\u307e\u3059\u3002\n\nElectron\u81ea\u4f53\u306b\u30cf\u30de\u3089\u305a\u3001NodeJS\u306e\u975e\u540c\u671f\u51e6\u7406\u3092\u7dba\u9e97\u306b\u66f8\u3053\u3046\u3068\u30cf\u30de\u3063\u3066\u3044\u305f\u306e\u306f\u5185\u7dd2\u3067\u3059\u30fb\u30fb\u30fb\u30fb\u30fb\n(\u3042\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u8a00\u3063\u3066\u308b\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb)\n\n"}