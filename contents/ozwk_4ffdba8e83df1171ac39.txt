{"context": " More than 1 year has passed since last update.\u30eb\u30fc\u30d7\u3067\u66f8\u304b\u308c\u305f\u3082\u306e\u3092\u518d\u5e30\u3067\u66f8\u304f\u3068\u305f\u3044\u3066\u3044\u8aad\u307f\u3065\u3089\u304f\u306a\u308b\u306e\u3067\u3001\n\u7df4\u7fd2\u554f\u984c\u3068\u3057\u3066\u51fa\u3055\u308c\u305f\u6642\u3050\u3089\u3044\u3057\u304b\u5f79\u306b\u7acb\u305f\u306a\u3044\u6c17\u304c\u3059\u308b\u304c\u3001\n\u30eb\u30fc\u30d7\u3067\u66f8\u304b\u308c\u305f\u51e6\u7406\u3092\u518d\u5e30\u95a2\u6570\u306b\u7f6e\u304d\u63db\u3048\u308b\u969b\u306e\u8003\u3048\u65b9\u3092\u66f8\u3044\u3066\u307f\u308b\u3002\n\u30b3\u30fc\u30c9\u306f\u6a21\u64ec\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n\u771f\u9762\u76ee\u306a\u8003\u3048\u65b9\n\u3082\u3068\u3082\u3068\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6f38\u5316\u5f0f\u306e\u3088\u3046\u306a\u5f62\u306b\u8003\u3048\u76f4\u3059\u3002\u4ee5\u4e0a\u3002\n\u4f8b\u3048\u3070\u968e\u4e57\u306a\u3089\nFact(n) = n \u00d7 (n-1) \u00d7 \u2026 \u00d7 1\n\u3092\nFact(n) = n \u00d7 Fact(n-1) (if n > 1)\n        = 1             (otherwise)\n\n\u306e\u3088\u3046\u306b\u3059\u308b\u3002\u307b\u3089\u518d\u5e30\u3060\u3002\n\u4ee5\u4e0b\u3001\u4e0d\u771f\u9762\u76ee\u306a\u65b9\u6cd5\u3002\n\n\u30eb\u30fc\u30d7\u51e6\u7406\n\u30eb\u30fc\u30d7\u3092\u4f7f\u3063\u305f\u51e6\u7406\u306f\u5927\u4f53\u3053\u3093\u306a\u611f\u3058\u306b\u89e3\u91c8\u3067\u304d\u308b\u3002\nX x = x0;\nwhile(true){\n    if(isA(x))\n        return A(x);\n    x = Next(x);\n}\n\n\u8981\u3059\u308b\u306b\n/*\n\u72b6\u614b\u306e\u521d\u671f\u5316\n*/\nwhile(true){\n    /*\n    \u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\u90e8\u5206\n    */\n\n    /*\n    \u72b6\u614b\u306e\u518d\u4ee3\u5165\n    */\n}\n\n\u4f8b\u3048\u3070\u3001\u968e\u4e57\u306f\nuint Fact(uint n){\n    uint result = 1;\n    for(uint i = 2; i <= n; i++){\n        result = result * i;\n    }\n    return result;\n}\n\n\u3053\u3046\u306a\u308b\nuint Fact(uint n){\n    uint result = 1;\n    uint i = 2;\n    while(true){\n        if(i > n)\n            return result;\n\n        result = result * i;\n        i = i + 1;\n    }\n    //\u3053\u3053\u306b\u3082return\u306a\u3044\u3068\u8a00\u8a9e\u30fb\u74b0\u5883\u306b\u3088\u3063\u3066\u306f\u6012\u3089\u308c\u308b\u304c\n    //\u3053\u307e\u3051\u3047\u3053\u305f\u3041\u3044\u3044\u3093\u3060\u3088\uff01\n}\n\n\n\u518d\u5e30\u3078\u306e\u7f6e\u304d\u63db\u3048\nY Func(P p){\n    X x = Initialize(p);\n    while(true){\n        if(isA(x))\n            return A(x);    \n        x = Next(x);\n    }\n}\n\n\u306e\u30eb\u30fc\u30d7\u90e8\u5206\u3092\u518d\u5e30\u306b\u7f6e\u304d\u63db\u3048\u308b\u3068\u3053\u3046\u306a\u308b(\u591a\u5206)\nY Func(P p){\n    X x = Initialize(p);\n    return RecFunc(x);\n}\n\nY RecFunc(X x){\n    if(isA(x))\n        return A(x);\n    return RecFunc(Next(x));\n}\n\n\u3069\u3061\u3089\u3082\n\u300c\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308c\u3070\u629c\u3051\u308b\u3001\u3055\u3082\u306a\u304f\u3070\u72b6\u614b\u3092\u66f4\u65b0\u3057\u3066\u3082\u3046\u4e00\u5ea6\u300d\n\u3068\u3044\u3046\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u4f8b\n\n\u968e\u4e57\nuint Fact(uint n){\n    uint acc = 1;\n    uint i = 2;\n    while(true){\n        if(i > n)\n            return acc;\n\n        acc = acc * i;\n        i = i + 1;\n    }\n}\n\nuint Fact(uint n){\n    uint acc = 1;\n    uint i = 2;\n    return FactRec(acc, i, n);\n}\n\nuint FactRec(uint acc, uint i, uint n){\n    if(i > n)\n        return acc;\n    // Next:\n    // acc = acc * i;\n    // i = i + 1;\n    // n = n;\n    return FactRec(acc * i, i + 1, n);\n}\n\n\n\u30d0\u30a4\u30ca\u30ea\u30fc\u30b5\u30fc\u30c1\n\n\u30eb\u30fc\u30d7\u7248\nbool BinarySearch(int[] arr,int value){\n    int left = 0;\n    int right = arr.Length - 1;\n\n    while(left <= right){\n        int mid = (left + right) / 2;\n        if (arr[mid] == value) {\n            return true;\n        }\n        if (arr[mid] < value) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return false;\n}\n\n\n\u5f15\u6570\u3068\u623b\u308a\u5024\n\u30eb\u30fc\u30d7\u3067\u4f7f\u3046\u5024\u306e\u3046\u3061\u3001\u30eb\u30fc\u30d7\u5916\u3067\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u5909\u6570\u306f\narr,value,left,right\u3067\u3001\n\u5927\u672c\u306e\u8fd4\u308a\u5024\u306e\u578b\u306fbool\u306a\u306e\u3067\u3001\n\u7f6e\u304d\u63db\u3048\u305f\u95a2\u6570\u306e\u5f15\u6570\u3068\u623b\u308a\u5024\u306f\u3053\u3046\u306a\u308b\u306f\u305a\u3002\nbool BinarySearchRec(int[] arr, int value, int left, int right);\n\n\n\u7f6e\u304d\u63db\u3048\n\u30eb\u30fc\u30d7\u3092\u4e2d\u65ad\u3057\u3066\u5024\u3092\u8fd4\u3059\u72b6\u6cc1\u306f\nwhile(left <= right){\n    //...\n}\nreturn false;\n\n\u3059\u306a\u308f\u3061\nif(left > right)\n    return false;\n\n\u3082\u3046\u3072\u3068\u3064\nint mid = (left + right) / 2;\nif (arr[mid] == value) {\n    return true;\n}\n\n\u307e\u3068\u3081\u3066\u3001\nif(left > right)\n    return false;\nint mid = (left + right) / 2;\nif (arr[mid] == value) {\n    return true;\n}\n\n\u307e\u305f\u3001\u30eb\u30fc\u30d7\u3092\u7d9a\u884c\u3059\u308b\u72b6\u6cc1\u306f\nif (arr[mid] < value) {\n    left = mid + 1;\n} else {\n    right = mid - 1;\n}\n\n\u3064\u307e\u308a\u5909\u63db\u3059\u308b\u3068\u3053\u3046\u306a\u308b\u306f\u305a\u3002\nif (arr[mid] < value) {\n    return BinarySearchRec(arr, value, mid + 1, right);\n} else {\n    return BinarySearchRec(arr, value, left, mid - 1);\n}\n\n\n\u518d\u5e30\u7248\n\u307e\u3068\u3081\u308b\u3068\nbool BinarySearch(int[] arr, int value){\n    int left = 0;\n    int right = arr.Length - 1;\n\n    return BinarySearchRec(arr, value, left, right);\n}\n\nbool BinarySearchRec(int[] arr, int value, int left, int right){\n    if(left > right)\n        return false;\n    int mid = (left + right) / 2;\n    if (arr[mid] == value)\n        return true;\n\n    if (arr[mid] < value) {\n        return BinarySearchRec(arr, value, mid + 1, right);\n    } else {\n        return BinarySearchRec(arr, value, left, mid - 1);\n    }\n}\n\n\u30eb\u30fc\u30d7\u3067\u66f8\u304b\u308c\u305f\u3082\u306e\u3092\u518d\u5e30\u3067\u66f8\u304f\u3068\u305f\u3044\u3066\u3044\u8aad\u307f\u3065\u3089\u304f\u306a\u308b\u306e\u3067\u3001\n\u7df4\u7fd2\u554f\u984c\u3068\u3057\u3066\u51fa\u3055\u308c\u305f\u6642\u3050\u3089\u3044\u3057\u304b\u5f79\u306b\u7acb\u305f\u306a\u3044\u6c17\u304c\u3059\u308b\u304c\u3001\n\u30eb\u30fc\u30d7\u3067\u66f8\u304b\u308c\u305f\u51e6\u7406\u3092\u518d\u5e30\u95a2\u6570\u306b\u7f6e\u304d\u63db\u3048\u308b\u969b\u306e\u8003\u3048\u65b9\u3092\u66f8\u3044\u3066\u307f\u308b\u3002\n\n\u30b3\u30fc\u30c9\u306f\u6a21\u64ec\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n#\u771f\u9762\u76ee\u306a\u8003\u3048\u65b9\n\u3082\u3068\u3082\u3068\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6f38\u5316\u5f0f\u306e\u3088\u3046\u306a\u5f62\u306b\u8003\u3048\u76f4\u3059\u3002\u4ee5\u4e0a\u3002\n\u4f8b\u3048\u3070\u968e\u4e57\u306a\u3089\n`Fact(n) = n \u00d7 (n-1) \u00d7 \u2026 \u00d7 1`\n\u3092\n\n```\nFact(n) = n \u00d7 Fact(n-1) (if n > 1)\n        = 1             (otherwise)\n```\n\u306e\u3088\u3046\u306b\u3059\u308b\u3002\u307b\u3089\u518d\u5e30\u3060\u3002\n\n\u4ee5\u4e0b\u3001\u4e0d\u771f\u9762\u76ee\u306a\u65b9\u6cd5\u3002\n\n#\u30eb\u30fc\u30d7\u51e6\u7406\n\u30eb\u30fc\u30d7\u3092\u4f7f\u3063\u305f\u51e6\u7406\u306f\u5927\u4f53\u3053\u3093\u306a\u611f\u3058\u306b\u89e3\u91c8\u3067\u304d\u308b\u3002\n\n```c\nX x = x0;\nwhile(true){\n    if(isA(x))\n        return A(x);\n    x = Next(x);\n}\n```\n\n\u8981\u3059\u308b\u306b\n\n```c\n/*\n\u72b6\u614b\u306e\u521d\u671f\u5316\n*/\nwhile(true){\n    /*\n    \u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\u90e8\u5206\n    */\n    \n    /*\n    \u72b6\u614b\u306e\u518d\u4ee3\u5165\n    */\n}\n```\n\n\u4f8b\u3048\u3070\u3001\u968e\u4e57\u306f\n\n```C\nuint Fact(uint n){\n    uint result = 1;\n    for(uint i = 2; i <= n; i++){\n        result = result * i;\n    }\n    return result;\n}\n```\n\u3053\u3046\u306a\u308b\n\n```C\nuint Fact(uint n){\n    uint result = 1;\n    uint i = 2;\n    while(true){\n        if(i > n)\n            return result;\n\n        result = result * i;\n        i = i + 1;\n    }\n    //\u3053\u3053\u306b\u3082return\u306a\u3044\u3068\u8a00\u8a9e\u30fb\u74b0\u5883\u306b\u3088\u3063\u3066\u306f\u6012\u3089\u308c\u308b\u304c\n    //\u3053\u307e\u3051\u3047\u3053\u305f\u3041\u3044\u3044\u3093\u3060\u3088\uff01\n}\n```\n\n#\u518d\u5e30\u3078\u306e\u7f6e\u304d\u63db\u3048\n\n```c\nY Func(P p){\n    X x = Initialize(p);\n    while(true){\n        if(isA(x))\n            return A(x);    \n        x = Next(x);\n    }\n}\n```\n\n\u306e\u30eb\u30fc\u30d7\u90e8\u5206\u3092\u518d\u5e30\u306b\u7f6e\u304d\u63db\u3048\u308b\u3068\u3053\u3046\u306a\u308b(\u591a\u5206)\n\n```c\nY Func(P p){\n    X x = Initialize(p);\n    return RecFunc(x);\n}\n\nY RecFunc(X x){\n    if(isA(x))\n        return A(x);\n    return RecFunc(Next(x));\n}\n```\n\n\u3069\u3061\u3089\u3082\n\u300c\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308c\u3070\u629c\u3051\u308b\u3001\u3055\u3082\u306a\u304f\u3070\u72b6\u614b\u3092\u66f4\u65b0\u3057\u3066\u3082\u3046\u4e00\u5ea6\u300d\n\u3068\u3044\u3046\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n#\u4f8b\n##\u968e\u4e57\n\n```C\nuint Fact(uint n){\n    uint acc = 1;\n    uint i = 2;\n    while(true){\n        if(i > n)\n            return acc;\n\n        acc = acc * i;\n        i = i + 1;\n    }\n}\n```\n\n```C\nuint Fact(uint n){\n    uint acc = 1;\n    uint i = 2;\n    return FactRec(acc, i, n);\n}\n\nuint FactRec(uint acc, uint i, uint n){\n    if(i > n)\n        return acc;\n    // Next:\n    // acc = acc * i;\n    // i = i + 1;\n    // n = n;\n    return FactRec(acc * i, i + 1, n);\n}\n```\n\n##\u30d0\u30a4\u30ca\u30ea\u30fc\u30b5\u30fc\u30c1\n###\u30eb\u30fc\u30d7\u7248\n```csharp\nbool BinarySearch(int[] arr,int value){\n    int left = 0;\n    int right = arr.Length - 1;\n\n    while(left <= right){\n        int mid = (left + right) / 2;\n        if (arr[mid] == value) {\n            return true;\n        }\n        if (arr[mid] < value) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n    return false;\n}\n```\n\n\n###\u5f15\u6570\u3068\u623b\u308a\u5024\n\u30eb\u30fc\u30d7\u3067\u4f7f\u3046\u5024\u306e\u3046\u3061\u3001\u30eb\u30fc\u30d7\u5916\u3067\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u5909\u6570\u306f\n`arr,value,left,right`\u3067\u3001\n\u5927\u672c\u306e\u8fd4\u308a\u5024\u306e\u578b\u306f`bool`\u306a\u306e\u3067\u3001\n\u7f6e\u304d\u63db\u3048\u305f\u95a2\u6570\u306e\u5f15\u6570\u3068\u623b\u308a\u5024\u306f\u3053\u3046\u306a\u308b\u306f\u305a\u3002\n\n```csharp\nbool BinarySearchRec(int[] arr, int value, int left, int right);\n```\n###\u7f6e\u304d\u63db\u3048\n\u30eb\u30fc\u30d7\u3092\u4e2d\u65ad\u3057\u3066\u5024\u3092\u8fd4\u3059\u72b6\u6cc1\u306f\n\n```csharp\nwhile(left <= right){\n    //...\n}\nreturn false;\n```\n\n\u3059\u306a\u308f\u3061\n\n```csharp\nif(left > right)\n    return false;\n```\n\n\u3082\u3046\u3072\u3068\u3064\n\n```csharp\nint mid = (left + right) / 2;\nif (arr[mid] == value) {\n    return true;\n}\n```\n\n\u307e\u3068\u3081\u3066\u3001\n\n```csharp\nif(left > right)\n    return false;\nint mid = (left + right) / 2;\nif (arr[mid] == value) {\n    return true;\n}\n```\n\n\u307e\u305f\u3001\u30eb\u30fc\u30d7\u3092\u7d9a\u884c\u3059\u308b\u72b6\u6cc1\u306f\n\n```csharp\nif (arr[mid] < value) {\n    left = mid + 1;\n} else {\n    right = mid - 1;\n}\n```\n\n\u3064\u307e\u308a\u5909\u63db\u3059\u308b\u3068\u3053\u3046\u306a\u308b\u306f\u305a\u3002\n\n```csharp\nif (arr[mid] < value) {\n    return BinarySearchRec(arr, value, mid + 1, right);\n} else {\n    return BinarySearchRec(arr, value, left, mid - 1);\n}\n```\n\n###\u518d\u5e30\u7248\n\u307e\u3068\u3081\u308b\u3068\n\n```csharp\nbool BinarySearch(int[] arr, int value){\n    int left = 0;\n    int right = arr.Length - 1;\n\n    return BinarySearchRec(arr, value, left, right);\n}\n\nbool BinarySearchRec(int[] arr, int value, int left, int right){\n    if(left > right)\n        return false;\n    int mid = (left + right) / 2;\n    if (arr[mid] == value)\n        return true;\n\n    if (arr[mid] < value) {\n        return BinarySearchRec(arr, value, mid + 1, right);\n    } else {\n        return BinarySearchRec(arr, value, left, mid - 1);\n    }\n}\n```\n", "tags": ["\u518d\u5e30", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"]}