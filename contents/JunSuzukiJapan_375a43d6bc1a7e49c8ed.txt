{"tags": ["Unity3D", "vuforia"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u4ee5\u524d\u306f\u3001Vuforia\u3067\u30e0\u30fc\u30d3\u30fc\u306e\u518d\u751f\u3092\u3057\u305f\u3068\u304d\u3001\u30c0\u30d6\u30eb\u30bf\u30c3\u30d7\u3067\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u518d\u751f\u306b\u306a\u3063\u3066\u3044\u305f\u3068\u601d\u3046\u306e\u3060\u304c\u3001\u6700\u8fd1\u306eVuforia\u3067\u306f\u30c0\u30d6\u30eb\u30bf\u30c3\u30d7\u3057\u3066\u3082\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u3060\u3002\n\u4ed5\u65b9\u304c\u306a\u3044\u306e\u3067\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u81ea\u4f5c\u3057\u3066\u5bfe\u51e6\u3057\u305f\u899a\u66f8\u3002\n\n\u53c2\u8003\uff1aUnity + Vuforia \u3067AR\u306a\u52d5\u753b\u518d\u751f\u3092\u8a66\u3057\u3066\u307f\u305f\n\n\n\u30b3\u30fc\u30c9\n\u57fa\u672c\u7684\u306b\u306f\u3001AR Camera\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u3066\u3044\u308bPlayVideo\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306eplayFullscreen\u5909\u6570\u3092true\u306b\u3057\u3066\u3001TryPickingVideo\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u305b\u3070\u826f\u3044\u3002\n\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3002\n\nSwitchFullscreen.cs\nusing UnityEngine;\nusing System.Collections;\n\npublic class SwitchPlayVideoFullscreen : TapBehaviour {\n    public PlayVideo playVideo; // AR\u30ab\u30e1\u30e9\u306ePlayVideo\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092Unity\u30a8\u30c7\u30a3\u30bf\u4e0a\u3067\u30bb\u30c3\u30c8\u3057\u3066\u304a\u304f\u3002\n\n    public override void DoubleTap (Vector3 position){\n        if (playVideo == null) return;\n\n        playVideo.playFullscreen = true;\n        playVideo.TryPickingVideo ();\n    }\n}\n\n\n\u30b3\u30fc\u30c9\u4e2d\u306eTapBehaviour\u306f\u3001Unity\u3067\u753b\u9762\u3092\u30bf\u30c3\u30d7\u3057\u305f\u6642\u306eRay\u306e\u6483\u3061\u65b9\u3092\u8003\u3048\u3066\u307f\u305f\u306e\u8a18\u4e8b\u3067\u66f8\u3044\u305f\u3082\u306e\u3068\u540c\u7b49\u3060\u304c\u3001\u30c0\u30d6\u30eb\u30bf\u30c3\u30d7\u306b\u5bfe\u5fdc\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u304a\u307e\u3051\u30b3\u30fc\u30c9\n\u4ee5\u4e0b\u306bTapBehaviour\u3068AR Camera\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u304a\u304fTouchHandler\u306e\u30b3\u30fc\u30c9\u3082\u4e00\u5fdc\u66f8\u3044\u3066\u304a\u304f\u304c\u3001\u8a73\u7d30\u306f\u3053\u3053\u3067\u306f\u8aac\u660e\u3057\u306a\u3044\u3002\n\nTapBehaviour.cs\nusing UnityEngine;\nusing System.Collections;\n\npublic class TapBehaviour : MonoBehaviour {\n    public enum FlickDirection {\n        Up,\n        Down,\n        Left,\n        Right,\n    };\n\n    // \u30bf\u30c3\u30c1\u3057\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\u3002\n    public virtual void TapDown(Vector3 position){}\n\n    // \u30bf\u30c3\u30c1\u3092\u96e2\u3057\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\u3002\n    public virtual void TapUp(Vector3 position){}\n\n    //\n    public virtual void Move(Vector3 position){}\n\n    // Double Tap\n    public virtual void DoubleTap(Vector3 position){}\n\n    // Flick\n    public virtual void Flick(FlickDirection dir, float distance){}\n}\n\n\n\nTouchHandler.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\n\npublic class TouchHandler : MonoBehaviour {\n    public Camera localCamera;    // AR Camera\u3092Unity\u30a8\u30c7\u30a3\u30bf\u4e0a\u3067\u30bb\u30c3\u30c8\u3057\u3066\u304a\u304f\u3002\n    public float distance = 1000; // Ray\u306e\u5c4a\u304f\u8ddd\u96e2\n\n    TapBehaviour mTarget = null;\n    Vector3 mMouseDownPosition;\n    Vector3 mMouseUpPosition;\n    float mFlickDistanceX = 0.0f;\n    float mFlickDistanceY = 0.0f;\n    float mFlickDistance = 0.0f;\n    bool mIsHorizontalFlick;\n    bool isFlick = false;\n\n    float mSeconds = 0.0f;\n\n    const float maxFlickTime = 0.2f;\n    const float MinFlickDistance = 15.0f;\n\n    void Update () {\n        if(Input.touchCount <= 0) return;\n        //Debug.Log(\"touch count = \" + Input.touchCount);\n\n        // \u30bf\u30c3\u30c1\u3055\u308c\u305f\u3068\u304d\n        Touch touch = Input.GetTouch(0);\n        if(touch.phase == TouchPhase.Began){\n            //Debug.Log(\"touch began\");\n\n            isFlick = false;\n            mSeconds = 0.0f;\n\n            // \u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\u304b\u3089\u30af\u30ea\u30c3\u30af\u3057\u305f\u30dd\u30b8\u30b7\u30e7\u30f3\u306b\u5411\u304b\u3063\u3066Ray\u3092\u6483\u3064\u3002\n            //Ray ray = localCamera.ScreenPointToRay(Input.mousePosition);\n            Ray ray = localCamera.ScreenPointToRay(touch.position);\n            RaycastHit hit = new RaycastHit();\n            //mMouseDownPosition = Input.mousePosition;\n            mMouseDownPosition = touch.position;\n\n            if (Physics.Raycast(ray, out hit, distance)) {\n                GameObject selectedGameObject = hit.collider.gameObject;\n                mTarget = selectedGameObject.GetComponent(typeof(TapBehaviour)) as TapBehaviour;\n                Debug.Log (\"mTarget = \" + mTarget);\n                if(mTarget != null){\n                    mTarget.TapDown(mMouseDownPosition);\n                }\n            }\n\n        // \u6307\u3092\u79fb\u52d5\u4e2d\n        }else if(touch.phase == TouchPhase.Moved){\n            mSeconds += touch.deltaTime;\n            Vector3 position = touch.deltaPosition;\n            if(mTarget != null){\n                mTarget.Move(position);\n            }\n\n        // \u6307\u3092\u96e2\u3057\u305f\u3068\u304d\n        }else if(touch.phase == TouchPhase.Ended){\n            //Debug.Log(\"touch ended\");\n            mSeconds += touch.deltaTime;\n\n            Debug.Log(\"time: \" + mSeconds);\n\n            // \u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\u304b\u3089\u30af\u30ea\u30c3\u30af\u3057\u305f\u30dd\u30b8\u30b7\u30e7\u30f3\u306b\u5411\u304b\u3063\u3066Ray\u3092\u6483\u3064\u3002\n            //Ray ray = localCamera.ScreenPointToRay(Input.mousePosition);\n            Ray ray = localCamera.ScreenPointToRay(touch.position);\n            RaycastHit hit = new RaycastHit();\n            //mMouseUpPosition = Input.mousePosition;\n            mMouseUpPosition = touch.position;\n\n            // \u30d5\u30ea\u30c3\u30af\u3057\u305f\u8ddd\u96e2\u304c MinFlickDistance \u4ee5\u4e0a\u306a\u3089 isFlick \u3092 true \u306b\u5909\u66f4\n            mFlickDistanceX = mMouseUpPosition.x - mMouseDownPosition.x;\n            mFlickDistanceY = mMouseUpPosition.y - mMouseDownPosition.y;\n            mFlickDistance = Mathf.Abs(mFlickDistanceX) > Mathf.Abs(mFlickDistanceY) ? mFlickDistanceX : mFlickDistanceY;\n\n            if (mSeconds < maxFlickTime && (mFlickDistance > MinFlickDistance || mFlickDistance < -MinFlickDistance)) {\n                Debug.Log (\"flick!!\");\n\n                isFlick = true;\n                mIsHorizontalFlick = Mathf.Abs(mFlickDistanceX) >= Mathf.Abs(mFlickDistanceY);\n                TapBehaviour.FlickDirection dir;\n                if(mIsHorizontalFlick){ // Horizontal Flick\n                    if(mFlickDistanceX > 0){\n                        dir = TapBehaviour.FlickDirection.Right;\n                    }else{\n                        dir = TapBehaviour.FlickDirection.Left;\n                    }\n                }else{  // Vertical Flick\n                    if(mFlickDistanceY > 0){\n                        dir = TapBehaviour.FlickDirection.Up;\n                    }else{\n                        dir = TapBehaviour.FlickDirection.Down;\n                    }\n                }\n\n                if(mTarget != null){\n                    mTarget.Flick(dir, mFlickDistance);\n                }\n            }\n\n            if ( ! isFlick && Physics.Raycast(ray, out hit, distance)) {\n                //Debug.Log (\"Not Flick\");\n                GameObject selectedGameObject = hit.collider.gameObject;\n                TapBehaviour target = selectedGameObject.GetComponent(typeof(TapBehaviour)) as TapBehaviour;\n\n                if(target != null && target == mTarget){\n                    if(touch.tapCount == 1){\n                        //Debug.Log (\"TapUp\");\n                        target.TapUp(mMouseUpPosition);\n                    }else if(touch.tapCount >= 2){\n                        //Debug.Log (\"Double Tap\");\n                        target.DoubleTap(mMouseUpPosition);\n                    }\n                }\n            }\n            mTarget = null;\n        }\n    }\n}\n\n\n\n## \u306f\u3058\u3081\u306b\n\n\u4ee5\u524d\u306f\u3001Vuforia\u3067\u30e0\u30fc\u30d3\u30fc\u306e\u518d\u751f\u3092\u3057\u305f\u3068\u304d\u3001\u30c0\u30d6\u30eb\u30bf\u30c3\u30d7\u3067\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u518d\u751f\u306b\u306a\u3063\u3066\u3044\u305f\u3068\u601d\u3046\u306e\u3060\u304c\u3001\u6700\u8fd1\u306eVuforia\u3067\u306f\u30c0\u30d6\u30eb\u30bf\u30c3\u30d7\u3057\u3066\u3082\u30d5\u30eb\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u3060\u3002\n\u4ed5\u65b9\u304c\u306a\u3044\u306e\u3067\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u81ea\u4f5c\u3057\u3066\u5bfe\u51e6\u3057\u305f\u899a\u66f8\u3002\n\n>\u53c2\u8003\uff1a[Unity + Vuforia \u3067AR\u306a\u52d5\u753b\u518d\u751f\u3092\u8a66\u3057\u3066\u307f\u305f](http://qiita.com/JunSuzukiJapan/items/f6ed23bb519d01fdaaa3)\n\n\n## \u30b3\u30fc\u30c9\n\n\u57fa\u672c\u7684\u306b\u306f\u3001AR Camera\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u3066\u3044\u308bPlayVideo\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306eplayFullscreen\u5909\u6570\u3092true\u306b\u3057\u3066\u3001TryPickingVideo\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u305b\u3070\u826f\u3044\u3002\n\n\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3002\n\n```csharp:SwitchFullscreen.cs\nusing UnityEngine;\nusing System.Collections;\n\npublic class SwitchPlayVideoFullscreen : TapBehaviour {\n\tpublic PlayVideo playVideo; // AR\u30ab\u30e1\u30e9\u306ePlayVideo\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092Unity\u30a8\u30c7\u30a3\u30bf\u4e0a\u3067\u30bb\u30c3\u30c8\u3057\u3066\u304a\u304f\u3002\n\n\tpublic override void DoubleTap (Vector3 position){\n\t\tif (playVideo == null) return;\n\n\t\tplayVideo.playFullscreen = true;\n\t\tplayVideo.TryPickingVideo ();\n\t}\n}\n```\n\n\u30b3\u30fc\u30c9\u4e2d\u306eTapBehaviour\u306f\u3001[Unity\u3067\u753b\u9762\u3092\u30bf\u30c3\u30d7\u3057\u305f\u6642\u306eRay\u306e\u6483\u3061\u65b9\u3092\u8003\u3048\u3066\u307f\u305f](http://qiita.com/JunSuzukiJapan/items/1698a21323558e246c4f)\u306e\u8a18\u4e8b\u3067\u66f8\u3044\u305f\u3082\u306e\u3068\u540c\u7b49\u3060\u304c\u3001\u30c0\u30d6\u30eb\u30bf\u30c3\u30d7\u306b\u5bfe\u5fdc\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n## \u304a\u307e\u3051\u30b3\u30fc\u30c9\n\n\u4ee5\u4e0b\u306bTapBehaviour\u3068AR Camera\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u304a\u304fTouchHandler\u306e\u30b3\u30fc\u30c9\u3082\u4e00\u5fdc\u66f8\u3044\u3066\u304a\u304f\u304c\u3001\u8a73\u7d30\u306f\u3053\u3053\u3067\u306f\u8aac\u660e\u3057\u306a\u3044\u3002\n\n```csharp:TapBehaviour.cs\nusing UnityEngine;\nusing System.Collections;\n\npublic class TapBehaviour : MonoBehaviour {\n\tpublic enum FlickDirection {\n\t\tUp,\n\t\tDown,\n\t\tLeft,\n\t\tRight,\n\t};\n\t\n\t// \u30bf\u30c3\u30c1\u3057\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\u3002\n    public virtual void TapDown(Vector3 position){}\n\n\t// \u30bf\u30c3\u30c1\u3092\u96e2\u3057\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\u3002\n    public virtual void TapUp(Vector3 position){}\n\n    //\n    public virtual void Move(Vector3 position){}\n\t\n\t// Double Tap\n\tpublic virtual void DoubleTap(Vector3 position){}\n\t\n\t// Flick\n\tpublic virtual void Flick(FlickDirection dir, float distance){}\n}\n```\n\n```csharp:TouchHandler.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\n\npublic class TouchHandler : MonoBehaviour {\n\tpublic Camera localCamera;    // AR Camera\u3092Unity\u30a8\u30c7\u30a3\u30bf\u4e0a\u3067\u30bb\u30c3\u30c8\u3057\u3066\u304a\u304f\u3002\n    public float distance = 1000; // Ray\u306e\u5c4a\u304f\u8ddd\u96e2\n\n\tTapBehaviour mTarget = null;\n\tVector3 mMouseDownPosition;\n\tVector3 mMouseUpPosition;\n\tfloat mFlickDistanceX = 0.0f;\n\tfloat mFlickDistanceY = 0.0f;\n\tfloat mFlickDistance = 0.0f;\n\tbool mIsHorizontalFlick;\n\tbool isFlick = false;\n\n\tfloat mSeconds = 0.0f;\n\n\tconst float maxFlickTime = 0.2f;\n\tconst float MinFlickDistance = 15.0f;\n\n\tvoid Update () {\n\t\tif(Input.touchCount <= 0) return;\n\t\t//Debug.Log(\"touch count = \" + Input.touchCount);\n\n        // \u30bf\u30c3\u30c1\u3055\u308c\u305f\u3068\u304d\n\t\tTouch touch = Input.GetTouch(0);\n\t\tif(touch.phase == TouchPhase.Began){\n\t\t\t//Debug.Log(\"touch began\");\n\t\t\t\n\t\t\tisFlick = false;\n\t\t\tmSeconds = 0.0f;\n\n\t\t\t// \u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\u304b\u3089\u30af\u30ea\u30c3\u30af\u3057\u305f\u30dd\u30b8\u30b7\u30e7\u30f3\u306b\u5411\u304b\u3063\u3066Ray\u3092\u6483\u3064\u3002\n            //Ray ray = localCamera.ScreenPointToRay(Input.mousePosition);\n\t\t\tRay ray = localCamera.ScreenPointToRay(touch.position);\n            RaycastHit hit = new RaycastHit();\n\t\t\t//mMouseDownPosition = Input.mousePosition;\n\t\t\tmMouseDownPosition = touch.position;\n\n            if (Physics.Raycast(ray, out hit, distance)) {\n                GameObject selectedGameObject = hit.collider.gameObject;\n                mTarget = selectedGameObject.GetComponent(typeof(TapBehaviour)) as TapBehaviour;\n\t\t\t\tDebug.Log (\"mTarget = \" + mTarget);\n                if(mTarget != null){\n                    mTarget.TapDown(mMouseDownPosition);\n                }\n            }\n\n        // \u6307\u3092\u79fb\u52d5\u4e2d\n        }else if(touch.phase == TouchPhase.Moved){\n        \tmSeconds += touch.deltaTime;\n        \tVector3 position = touch.deltaPosition;\n        \tif(mTarget != null){\n\t        \tmTarget.Move(position);\n\t        }\n\n        // \u6307\u3092\u96e2\u3057\u305f\u3068\u304d\n\t\t}else if(touch.phase == TouchPhase.Ended){\n\t\t\t//Debug.Log(\"touch ended\");\n        \tmSeconds += touch.deltaTime;\n\n\t\t\tDebug.Log(\"time: \" + mSeconds);\n\t\t\t\n\t\t\t// \u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\u304b\u3089\u30af\u30ea\u30c3\u30af\u3057\u305f\u30dd\u30b8\u30b7\u30e7\u30f3\u306b\u5411\u304b\u3063\u3066Ray\u3092\u6483\u3064\u3002\n            //Ray ray = localCamera.ScreenPointToRay(Input.mousePosition);\n\t\t\tRay ray = localCamera.ScreenPointToRay(touch.position);\n            RaycastHit hit = new RaycastHit();\n\t\t\t//mMouseUpPosition = Input.mousePosition;\n\t\t\tmMouseUpPosition = touch.position;\n                                       \n\t\t\t// \u30d5\u30ea\u30c3\u30af\u3057\u305f\u8ddd\u96e2\u304c MinFlickDistance \u4ee5\u4e0a\u306a\u3089 isFlick \u3092 true \u306b\u5909\u66f4\n\t\t\tmFlickDistanceX = mMouseUpPosition.x - mMouseDownPosition.x;\n\t\t\tmFlickDistanceY = mMouseUpPosition.y - mMouseDownPosition.y;\n\t\t\tmFlickDistance = Mathf.Abs(mFlickDistanceX) > Mathf.Abs(mFlickDistanceY) ? mFlickDistanceX : mFlickDistanceY;\n\t\t\t\n\t\t\tif (mSeconds < maxFlickTime && (mFlickDistance > MinFlickDistance || mFlickDistance < -MinFlickDistance)) {\n\t\t\t\tDebug.Log (\"flick!!\");\n\n\t\t\t\tisFlick = true;\n\t\t\t\tmIsHorizontalFlick = Mathf.Abs(mFlickDistanceX) >= Mathf.Abs(mFlickDistanceY);\n\t\t\t\tTapBehaviour.FlickDirection dir;\n\t\t\t\tif(mIsHorizontalFlick){ // Horizontal Flick\n\t\t\t\t\tif(mFlickDistanceX > 0){\n\t\t\t\t\t\tdir = TapBehaviour.FlickDirection.Right;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tdir = TapBehaviour.FlickDirection.Left;\n\t\t\t\t\t}\n\t\t\t\t}else{  // Vertical Flick\n\t\t\t\t\tif(mFlickDistanceY > 0){\n\t\t\t\t\t\tdir = TapBehaviour.FlickDirection.Up;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tdir = TapBehaviour.FlickDirection.Down;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(mTarget != null){\n\t\t\t\t\tmTarget.Flick(dir, mFlickDistance);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! isFlick && Physics.Raycast(ray, out hit, distance)) {\n\t\t\t\t//Debug.Log (\"Not Flick\");\n                GameObject selectedGameObject = hit.collider.gameObject;\n                TapBehaviour target = selectedGameObject.GetComponent(typeof(TapBehaviour)) as TapBehaviour;\n\n\t\t\t\tif(target != null && target == mTarget){\n\t\t\t\t\tif(touch.tapCount == 1){\n\t\t\t\t\t\t//Debug.Log (\"TapUp\");\n\t\t\t\t\t\ttarget.TapUp(mMouseUpPosition);\n\t\t\t\t\t}else if(touch.tapCount >= 2){\n\t\t\t\t\t\t//Debug.Log (\"Double Tap\");\n\t\t\t\t\t\ttarget.DoubleTap(mMouseUpPosition);\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n\t\t\tmTarget = null;\n        }\n    }\n}\n```\n"}