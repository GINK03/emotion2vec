{"context": " More than 1 year has passed since last update.Phalcon\\Logger \u306f Phalcon 1.3 \u304b\u3089 PSR-3 Logger Interface \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\u3067\u3059\u304c\u3001\u521d\u671f\u8a2d\u5b9a\u3067\u306f\u3053\u308c\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\u8ffd\u8a18\uff1aPhalcon2\u306e\u5834\u5408\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nPhalcon2\u306eLogger\u304cPSR-3\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u304f\u308c\u306a\u3044\u4ef6\u3078\u306e\u5bfe\u5fdc\n\n\nPHP \u306e\u8a2d\u5b9a\u3067 phalcon.register_psr3_classes \u3092\u6709\u52b9\u306b\u3059\u308b\nphp.ini\u3067\u4ee5\u4e0b\u306e\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3092\u6307\u5b9a\u3057\u3001 Phalcon \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067 PSR-3 \u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002\n[Phalcon]\n; Enable PSR-3 classes and interfaces @see https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md\nphalcon.register_psr3_classes = On;\n\n\nPSR-3 \u306e\u4f55\u304c\u5b09\u3057\u3044\u306e\u304b\n\u4ee5\u4e0b\u306f \u5358\u306b opcache_get_status() \u95a2\u6570\u306e\u7d50\u679c\u3092\u8fd4\u3057\u305f\u308a\u3001\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u3060\u3051\u306e\u3057\u3087\u3046\u3082\u306a\u3044\u30af\u30e9\u30b9\u3067\u3059\u304c\u3001\\Psr\\Log\\LoggerAwareInterface \u3092\u5b9f\u88c5\u3059\u308b\u3068\u3068\u3082\u306b\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u914d\u5217\u5f15\u6570\u306b logger \u3068\u3044\u3046\u30ad\u30fc\u3067 \\Psr\\Log\\LoggerInterface \u3092\u5b9f\u88c5\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4e0e\u3048\u3089\u308c\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u307e\u3059\u3002\nnamespace Acme\\Domain\\Service;\n\n/**\n * OPcache\u30b5\u30fc\u30d3\u30b9\n *\n * @author k.holy74@gmail.com\n */\nclass OPcacheService implements \\Psr\\Log\\LoggerAwareInterface\n{\n\n    /**\n     * @var \\Psr\\Log\\LoggerInterface\n     */\n    private $logger;\n\n    /**\n     * \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u521d\u671f\u5316\u3057\u307e\u3059\u3002\n     *\n     * @param array | ArrayAccess \u30d1\u30e9\u30e1\u30fc\u30bf\u914d\u5217\n     */\n    public function __construct($parameters = array())\n    {\n        if (!extension_loaded('Zend OPcache')) {\n            throw new \\RuntimeException('Required extension \"Zend OPcache\" is not loaded.');\n        }\n        if (!isset($parameters['logger'])) {\n            throw new \\InvalidArgumentException('Required parameter \"logger\" is not appointed.');\n        }\n        $this->setLogger($parameters['logger']);\n    }\n\n    /**\n     * \u30ed\u30ac\u30fc\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n     *\n     * @param Psr\\Log\\LoggerInterface\n     */\n    public function setLogger(\\Psr\\Log\\LoggerInterface $logger)\n    {\n        $this->logger = $logger;\n    }\n\n    /**\n     * OPcache \u30b9\u30c6\u30fc\u30bf\u30b9\u306e\u914d\u5217\u3092\u8fd4\u3057\u307e\u3059\u3002\n     *\n     * @return array\n     */\n    public function getStatus()\n    {\n        $opcache_status = opcache_get_status();\n\n        if (isset($opcache_status['scripts'])) {\n            ksort($opcache_status['scripts']);\n        }\n\n        if (isset($opcache_status['memory_usage'])) {\n            $this->logger->debug(implode(', ',\n                array_map(\n                    function($key, $value) {\n                        return sprintf('%s:%s', $key, $value);\n                    },\n                    array_keys($opcache_status['memory_usage']),\n                    array_values($opcache_status['memory_usage'])\n                )\n            ));\n        }\n\n        return $opcache_status;\n    }\n\n    /**\n     * OPcache\u3092\u30af\u30ea\u30a2\u3057\u307e\u3059\u3002\n     *\n     * @return boolean\n     */\n    public function reset()\n    {\n        return opcache_reset();\n    }\n\n}\n\n\u3053\u306e\u30af\u30e9\u30b9\u306f PSR-3 \u306b\u306f\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u304c\u3001Phalcon \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u306f\u4f9d\u5b58\u3057\u3066\u3044\u307e\u305b\u3093\u3002\nPhalcon \u306e PSR-3 \u3092\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u3067\u305d\u306e\u307e\u307e\u5229\u7528\u3067\u304d\u307e\u3059\u304c\u3001\u305f\u3068\u3048\u3070 Phalcon \u3067\u306f\u306a\u304f Silex \u3092\u63a1\u7528\u3057\u305f\u5225\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u5834\u5408\u3001\u540c\u3058\u304f \\Psr\\Log\\LoggerInterface \u304c\u5b9f\u88c5\u3055\u308c\u305f Monolog \u3092\u4f7f\u3063\u3066\u3082\u554f\u984c\u306a\u3044\u308f\u3051\u3067\u3059\u3002\n\u30c7\u30d0\u30c3\u30b0\u3092\u542b\u3081\u305f\u30ed\u30ae\u30f3\u30b0\u51e6\u7406\u306f\u3042\u3089\u3086\u308b\u30ec\u30a4\u30e4\u3067\u5fc5\u8981\u3068\u3055\u308c\u308b\u3082\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u3088\u3046\u306a\u5171\u901a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u958b\u767a\u8005\u3060\u3051\u3067\u306a\u304f\u3001\u5229\u7528\u8005\u3068\u3057\u3066\u3082\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308b\u3068\u3044\u3046\u4f8b\u3067\u3057\u305f\u3002\n\u306a\u304a PHP-FIG(PHP Framework Interoperability Group) \u3067\u306f\u4ed6\u306b\u3082 HTTP message Interface \u3084 Cache Interface \u3068\u3044\u3063\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5171\u901a\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u304c\u691c\u8a0e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nPhalcon\\Logger \u306f Phalcon 1.3 \u304b\u3089 [PSR-3 Logger Interface](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md) \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3067\u3059\u304c\u3001\u521d\u671f\u8a2d\u5b9a\u3067\u306f\u3053\u308c\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u8ffd\u8a18\uff1aPhalcon2\u306e\u5834\u5408\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n* [Phalcon2\u306eLogger\u304cPSR-3\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u304f\u308c\u306a\u3044\u4ef6\u3078\u306e\u5bfe\u5fdc](http://qiita.com/k-holy/items/04146041a4e14445402b)\n\n\n## PHP \u306e\u8a2d\u5b9a\u3067 phalcon.register_psr3_classes \u3092\u6709\u52b9\u306b\u3059\u308b\n\nphp.ini\u3067\u4ee5\u4e0b\u306e\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3092\u6307\u5b9a\u3057\u3001 Phalcon \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067 PSR-3 \u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002\n\n```ini\n[Phalcon]\n; Enable PSR-3 classes and interfaces @see https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md\nphalcon.register_psr3_classes = On;\n```\n\n## PSR-3 \u306e\u4f55\u304c\u5b09\u3057\u3044\u306e\u304b\n\n\u4ee5\u4e0b\u306f \u5358\u306b ``opcache_get_status()`` \u95a2\u6570\u306e\u7d50\u679c\u3092\u8fd4\u3057\u305f\u308a\u3001\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u3060\u3051\u306e\u3057\u3087\u3046\u3082\u306a\u3044\u30af\u30e9\u30b9\u3067\u3059\u304c\u3001``\\Psr\\Log\\LoggerAwareInterface`` \u3092\u5b9f\u88c5\u3059\u308b\u3068\u3068\u3082\u306b\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u914d\u5217\u5f15\u6570\u306b ``logger`` \u3068\u3044\u3046\u30ad\u30fc\u3067 ``\\Psr\\Log\\LoggerInterface`` \u3092\u5b9f\u88c5\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4e0e\u3048\u3089\u308c\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n```php\nnamespace Acme\\Domain\\Service;\n\n/**\n * OPcache\u30b5\u30fc\u30d3\u30b9\n *\n * @author k.holy74@gmail.com\n */\nclass OPcacheService implements \\Psr\\Log\\LoggerAwareInterface\n{\n\n    /**\n     * @var \\Psr\\Log\\LoggerInterface\n     */\n    private $logger;\n\n    /**\n     * \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u521d\u671f\u5316\u3057\u307e\u3059\u3002\n     *\n     * @param array | ArrayAccess \u30d1\u30e9\u30e1\u30fc\u30bf\u914d\u5217\n     */\n    public function __construct($parameters = array())\n    {\n        if (!extension_loaded('Zend OPcache')) {\n            throw new \\RuntimeException('Required extension \"Zend OPcache\" is not loaded.');\n        }\n        if (!isset($parameters['logger'])) {\n            throw new \\InvalidArgumentException('Required parameter \"logger\" is not appointed.');\n        }\n        $this->setLogger($parameters['logger']);\n    }\n\n    /**\n     * \u30ed\u30ac\u30fc\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n     *\n     * @param Psr\\Log\\LoggerInterface\n     */\n    public function setLogger(\\Psr\\Log\\LoggerInterface $logger)\n    {\n        $this->logger = $logger;\n    }\n\n    /**\n     * OPcache \u30b9\u30c6\u30fc\u30bf\u30b9\u306e\u914d\u5217\u3092\u8fd4\u3057\u307e\u3059\u3002\n     *\n     * @return array\n     */\n    public function getStatus()\n    {\n        $opcache_status = opcache_get_status();\n\n        if (isset($opcache_status['scripts'])) {\n            ksort($opcache_status['scripts']);\n        }\n\n        if (isset($opcache_status['memory_usage'])) {\n            $this->logger->debug(implode(', ',\n                array_map(\n                    function($key, $value) {\n                        return sprintf('%s:%s', $key, $value);\n                    },\n                    array_keys($opcache_status['memory_usage']),\n                    array_values($opcache_status['memory_usage'])\n                )\n            ));\n        }\n\n        return $opcache_status;\n    }\n\n    /**\n     * OPcache\u3092\u30af\u30ea\u30a2\u3057\u307e\u3059\u3002\n     *\n     * @return boolean\n     */\n    public function reset()\n    {\n        return opcache_reset();\n    }\n\n}\n```\n\n\u3053\u306e\u30af\u30e9\u30b9\u306f PSR-3 \u306b\u306f\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u304c\u3001Phalcon \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u306f\u4f9d\u5b58\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\nPhalcon \u306e PSR-3 \u3092\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u3067\u305d\u306e\u307e\u307e\u5229\u7528\u3067\u304d\u307e\u3059\u304c\u3001\u305f\u3068\u3048\u3070 Phalcon \u3067\u306f\u306a\u304f Silex \u3092\u63a1\u7528\u3057\u305f\u5225\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u5834\u5408\u3001\u540c\u3058\u304f ``\\Psr\\Log\\LoggerInterface`` \u304c\u5b9f\u88c5\u3055\u308c\u305f Monolog \u3092\u4f7f\u3063\u3066\u3082\u554f\u984c\u306a\u3044\u308f\u3051\u3067\u3059\u3002\n\n\u30c7\u30d0\u30c3\u30b0\u3092\u542b\u3081\u305f\u30ed\u30ae\u30f3\u30b0\u51e6\u7406\u306f\u3042\u3089\u3086\u308b\u30ec\u30a4\u30e4\u3067\u5fc5\u8981\u3068\u3055\u308c\u308b\u3082\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u3088\u3046\u306a\u5171\u901a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u958b\u767a\u8005\u3060\u3051\u3067\u306a\u304f\u3001\u5229\u7528\u8005\u3068\u3057\u3066\u3082\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308b\u3068\u3044\u3046\u4f8b\u3067\u3057\u305f\u3002\n\n\u306a\u304a [PHP-FIG(PHP Framework Interoperability Group)](http://www.php-fig.org) \u3067\u306f\u4ed6\u306b\u3082 [HTTP message Interface](https://github.com/php-fig/fig-standards/blob/master/proposed/http-message.md) \u3084 [Cache Interface](https://github.com/php-fig/fig-standards/blob/master/proposed/cache.md) \u3068\u3044\u3063\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5171\u901a\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u304c\u691c\u8a0e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n", "tags": ["Phalcon", "PHP"]}