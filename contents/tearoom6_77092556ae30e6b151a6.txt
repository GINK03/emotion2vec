{"context": "Athena \u9045\u308c\u3070\u305b\u306a\u304c\u3089\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nHive \u3068\u304b\u3068\u4f3c\u305f\u30d7\u30ed\u30c0\u30af\u30c8\u307f\u305f\u3044\u306a\u306e\u3067\u3001 DB \u4ee3\u308f\u308a\u306b\u4f7f\u3046\u306e\u306f\u3061\u3087\u3063\u3068\u9055\u3046\u3093\u3067\u3057\u3087\u3046\u3051\u3069\u3001\u30ed\u30b0\u306e\u691c\u7d22\u3084\u305d\u306e\u4ed6\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u306e\u89e3\u6790\u7528\u9014\u306b\u306f\u5a01\u529b\u3092\u767a\u63ee\u3057\u3066\u304f\u308c\u305d\u3046\u3002 (\u305d\u3046\u3044\u3046\u610f\u5473\u3060\u3068\u3001\u4eca\u56de JRuby \u304b\u3089\u3064\u306a\u3044\u3060\u3051\u3069\u3001 Jython \u3067\u7e4b\u3044\u3060\u307b\u3046\u304c\u3088\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044)\nAthena \u306f\u73fe\u5728\u306e\u3068\u3053\u308d Web \u306e\u7ba1\u7406\u753b\u9762\u3068 JDBC \u3057\u304b\u516c\u5f0f\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u304c\u516c\u958b\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u547c\u3073\u51fa\u3059\u306b\u306f JDBC \u3092\u7d4c\u7531\u3059\u308b\u3057\u304b\u7121\u3055\u305d\u3046\u3067\u3059\u3002 Ruby \u304b\u3089\u4f7f\u3044\u305f\u3044\u5834\u5408\u3001 Ruby \u304b\u3089 Java \u3092\u547c\u3073\u51fa\u3059\u304b\u3001 JRuby \u3092\u4f7f\u3046\u304b\u304c\u7c21\u5358\u306b\u601d\u3044\u3064\u304f\u624b\u6bb5\u3067\u3059\u304c\u3001\u5f8c\u8005\u306e\u307b\u3046\u304c\u9762\u767d\u305d\u3046\u306a\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u9078\u629e\u3057\u307e\u3057\u305f\u3002 (JRuby \u4f7f\u3063\u305f\u306e\u3067\u3001\u304c\u3063\u3064\u308a\u306a CRuby \u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u306f\u3069\u306e\u307f\u3061\u53d6\u308a\u8fbc\u3081\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u3002\u304d\u3063\u3068\u516c\u5f0f\u306e Ruby SDK \u304b\u3089\u3082\u3058\u304d\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u305d\u3046\u3060\u3051\u3069\uff01)\n\u30c7\u30fc\u30bf\u306f\u3001\u305d\u3053\u304b\u3057\u3053\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u65e5\u672c\u90f5\u653f\u306e\u30c7\u30fc\u30bf \u4f4f\u6240\u306e\u90f5\u4fbf\u756a\u53f7\uff08\u30ed\u30fc\u30de\u5b57\u30fbzip\u5f62\u5f0f\uff09 \u3092\u4f7f\u7528\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002 (\u305d\u3082\u305d\u3082\u3001\u5143\u3005\u4eca\u56de\u306e\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u304c Athena \u3092\u4f7f\u3046\u3053\u3068\u3067\u306f\u306a\u304f\u3001\u5225\u3067\u4f5c\u3063\u3066\u3044\u308b ITS\u5065\u4fdd\u306e\u65bd\u8a2d\u4e88\u7d04\u30b9\u30af\u30ea\u30d7\u30c8 \u3067\u3001\u90f5\u4fbf\u756a\u53f7\u304b\u3089\u4f4f\u6240\u306e\u9806\u5f15\u304d\u3092\u3057\u305f\u3044\u3068\u3044\u3046\u3053\u3068\u304b\u3089\u59cb\u307e\u3063\u3066\u3044\u307e\u3057\u3066...\u305d\u3061\u3089\u3067\u306f\u7d50\u5c40\u4f7f\u308f\u306a\u3044\u3064\u3082\u308a\u3067\u3059\u304c...)\n\nJRuby \u304b\u3089 JDBC \u3067 Athena \u306b\u63a5\u7d9a\n\u65e9\u901f\u6838\u5fc3\u90e8\u5206\u304b\u3089\u3002\nrequire 'java'\nrequire 'jbundler'\n\naccess_key = '' # Himitsu Dayo!\naccess_secret = '' # Himitsu Dayo!\nregion = 'us-west-2'\nathena_jdbc_url = \"jdbc:awsathena://athena.#{region}.amazonaws.com:443\"\n\ncom.amazonaws.athena.jdbc.AthenaDriver\n\nprops = java.util.Properties.new\nprops.set_property('user', access_key)\nprops.set_property('password', access_secret)\nprops.set_property('s3_staging_dir', 's3://my-postal-search-jp/my_postal_search_jp/query_results/')\n\nconnection = java.sql.DriverManager.get_connection(athena_jdbc_url, props)\nstatement = connection.create_statement\n\nquery = \"SELECT * FROM postalsearchjp.jp_postal_codes LIMIT 1\"\nrs = statement.execute_query(query)\n\nJpPostalCode = Struct.new(:postal_code, :prefecture, :city, :street, :prefecture_kana, :city_kana, :street_kana)\nrecords = []\nwhile (rs.next) do\n  record = JpPostalCode.new\n  record.postal_code = rs.get_string('postal_code')\n  record.prefecture = rs.get_string('prefecture')\n  record.city = rs.get_string('city')\n  record.street = rs.get_string('street')\n  record.prefecture_kana = rs.get_string('prefecture_kana')\n  record.city_kana = rs.get_string('city_kana')\n  record.street_kana = rs.get_string('street_kana')\n  records << record\nend\n\nJRuby \u304b\u3089\u306e JDBC \u4f7f\u7528\u306f \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u53c2\u7167\u3002\nAthene \u3067\u306e JDBC \u5229\u7528\u3082 \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u53c2\u7167\u3001\u306a\u306e\u3067\u3059\u304c\u3001\u7c21\u5358\u306b\u307e\u3068\u3081\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u70b9\u306b\u306a\u308a\u307e\u3059\u3002\n\nDriver \u306b\u306f JDBC 4.1-compatible driver \u3092\u7528\u3044\u308b (com.amazonaws.athena.jdbc.AthenaDriver)\nJDBC URL \u3068\u3057\u3066\u3001 jdbc:awsathena://athena.REGION.amazonaws.com:443 \u3092\u7528\u3044\u308b\nDriver \u306e options \u3068\u3057\u3066 s3_staging_dir \u306b\u691c\u7d22\u7d50\u679c\u3084\u5c65\u6b74\u7b49\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e S3 Bucket \u306e Path \u3092\u6307\u5b9a\u3059\u308b\n\u8a8d\u8a3c\u7cfb\u306e\u30af\u30e9\u30b9 (com.amazonaws.auth.*) \u304c\u4f7f\u3048\u308b\u3088\u3046\u306b aws-java-sdk-core \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30ed\u30fc\u30c9\u3057\u3066\u304a\u304f\n\u8a8d\u8a3c\u7528\u306b user \u306b\u306f AWS \u306e aws_access_key_id \u3092\u3001 password \u306b\u306f aws_secret_access_key \u3092\u6307\u5b9a\u3059\u308b\n\n\nJBundler\nAthenaDriver \u3068 AWS Java SDK \u306e\u53d6\u308a\u8fbc\u307f\u306b\u76f4\u63a5 jar \u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3057\u3066\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f JBundler \u3092\u7528\u3044\u3066\u53d6\u308a\u8fbc\u307f\u307e\u3057\u305f\u3002\nAthenaDriver \u306e\u65b9\u306f Maven Central Repository \u306b\u306f\u306a\u304b\u3063\u305f\u306e\u3067\u3001 Atlassian \u306e Repository \u304b\u3089\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b Jarfile \u3092\u66f8\u304d\u307e\u3059\u3002\n\nJarfile\nsource 'http://central.maven.org/maven2/'\nsource 'https://maven.atlassian.com/3rdparty/'\n\njar 'com.amazonaws.athena.jdbc:AthenaJDBC41', '1.0.0-atlassian-hosted'\njar 'com.amazonaws:aws-java-sdk-core', '~> 1.11'\n\n\n\u3053\u308c\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002 (Jarfile.lock \u304c\u4f5c\u3089\u308c\u307e\u3059)\n# Install\n$ jruby -S jbundle install\n\n.jbundler/classpath.rb \u3082\u4f5c\u3089\u308c\u3066\u304a\u308a\u3001\u4ee5\u4e0b\u306e require \u3060\u3051\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u5168\u3066\u306e jar \u3092\u53d6\u308a\u8fbc\u3081\u307e\u3059\u3002\nrequire 'jbundler'\n\n\n\u3067\u304d\u305f\u3082\u306e\n\u3067\u304d\u305f\u3082\u306e\u306f\u3053\u3061\u3089\u306b\u304a\u3044\u3066\u3042\u308a\u307e\u3059\u3002\nPostalSearchJp\nREADME \u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u4f7f\u3044\u65b9\u306f\u3044\u305f\u3063\u3066\u7c21\u5358\u3002 Web console \u306f\u4e00\u5207\u4f7f\u3044\u307e\u305b\u3093\u3002(\u3082\u3057\u304b\u3057\u305f\u3089\u3001\u4f7f\u3044\u59cb\u3081\u306e Get Started \u62bc\u3059\u3068\u3053\u3068\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u5b8c\u4e86\u3060\u3051\u306f\u3084\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304b\u3082)\n\u74b0\u5883\u3092 Java 8 / JRuby 9 \u306b\u3057\u3066\u3001\n$ git clone https://github.com/tearoom6/postal_search_jp\n$ bundle install\n$ jruby -S jbundle install\n\nPostalSearchJp.configure(\n  aws_access_key_id:     '', # Himitsu Dayo!\n  aws_secret_access_key: '', # Himitsu Dayo!\n  aws_region:            'us-east-1',\n  s3_bucket:             'my-postal-search-jp', # \u5168\u4e16\u754c\u3067\u30e6\u30cb\u30fc\u30af\u306a\u3082\u306e\u306b\u5909\u3048\u3066\u306d\n)\n\n# \u3053\u308c\u3067\u3001\u65e5\u672c\u90f5\u653f\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30fb\u6587\u5b57\u30b3\u30fc\u30c9\u7b49\u306e\u5909\u63db\u30fb S3 \u3078\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u30fb Athena \u3067\u306e\u30b9\u30ad\u30fc\u30de\u5b9a\u7fa9\u3001\u5168\u90e8\u3084\u308a\u307e\u3059\nPostalSearchJp.setup\n\n# \u9806\u5f15\u304d\u30fb\u9006\u5f15\u304d\u306b\u5bfe\u5fdc\nPostalSearchJp.search_by_address('\u4e95\u306e\u982d')\n# => [#<struct PostalSearchJp::JpPostalCode postal_code=\"\\\"1810001\\\"\", prefecture=\"\\\"\u6771\u4eac\u90fd\\\"\", city=\"\\\"\u4e09\u9df9\u5e02\\\"\", street=\"\\\"\u4e95\u306e\u982d\\\"\", prefecture_kana=\"\\\"TOKYO TO\\\"\", city_kana=\"\\\"MITAKA SHI\\\"\", street_kana=\"\\\"INOKASHIRA\\\"\">]\nPostalSearchJp.find_by_postal_code('1810001')\n# => #<struct PostalSearchJp::JpPostalCode postal_code=\"1810001\", prefecture=\"\u6771\u4eac\u90fd\", city=\"\u4e09\u9df9\u5e02\", street=\"\u4e95\u306e\u982d\", prefecture_kana=\"TOKYO TO\", city_kana=\"MITAKA SHI\", street_kana=\"INOKASHIRA\">\n\nPreparedStatement \u4f7f\u3063\u3066\u306a\u3044\u306a\u3069\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7684\u306a\u3053\u3068\u306f\u4f55\u3082\u8003\u3048\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5916\u90e8\u4f7f\u7528\u3067\u304d\u308b\u72b6\u614b\u306b\u3059\u308b\u306e\u306f\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002\n\nAthena \u9045\u308c\u3070\u305b\u306a\u304c\u3089\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\nHive \u3068\u304b\u3068\u4f3c\u305f\u30d7\u30ed\u30c0\u30af\u30c8\u307f\u305f\u3044\u306a\u306e\u3067\u3001 DB \u4ee3\u308f\u308a\u306b\u4f7f\u3046\u306e\u306f\u3061\u3087\u3063\u3068\u9055\u3046\u3093\u3067\u3057\u3087\u3046\u3051\u3069\u3001\u30ed\u30b0\u306e\u691c\u7d22\u3084\u305d\u306e\u4ed6\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u306e\u89e3\u6790\u7528\u9014\u306b\u306f\u5a01\u529b\u3092\u767a\u63ee\u3057\u3066\u304f\u308c\u305d\u3046\u3002 (\u305d\u3046\u3044\u3046\u610f\u5473\u3060\u3068\u3001\u4eca\u56de JRuby \u304b\u3089\u3064\u306a\u3044\u3060\u3051\u3069\u3001 Jython \u3067\u7e4b\u3044\u3060\u307b\u3046\u304c\u3088\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044)\n\nAthena \u306f\u73fe\u5728\u306e\u3068\u3053\u308d Web \u306e\u7ba1\u7406\u753b\u9762\u3068 JDBC \u3057\u304b\u516c\u5f0f\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u304c\u516c\u958b\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u547c\u3073\u51fa\u3059\u306b\u306f JDBC \u3092\u7d4c\u7531\u3059\u308b\u3057\u304b\u7121\u3055\u305d\u3046\u3067\u3059\u3002 Ruby \u304b\u3089\u4f7f\u3044\u305f\u3044\u5834\u5408\u3001 Ruby \u304b\u3089 Java \u3092\u547c\u3073\u51fa\u3059\u304b\u3001 JRuby \u3092\u4f7f\u3046\u304b\u304c\u7c21\u5358\u306b\u601d\u3044\u3064\u304f\u624b\u6bb5\u3067\u3059\u304c\u3001\u5f8c\u8005\u306e\u307b\u3046\u304c\u9762\u767d\u305d\u3046\u306a\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u9078\u629e\u3057\u307e\u3057\u305f\u3002 (JRuby \u4f7f\u3063\u305f\u306e\u3067\u3001\u304c\u3063\u3064\u308a\u306a CRuby \u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u306f\u3069\u306e\u307f\u3061\u53d6\u308a\u8fbc\u3081\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u3002\u304d\u3063\u3068\u516c\u5f0f\u306e Ruby SDK \u304b\u3089\u3082\u3058\u304d\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u305d\u3046\u3060\u3051\u3069\uff01)\n\n\u30c7\u30fc\u30bf\u306f\u3001\u305d\u3053\u304b\u3057\u3053\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u65e5\u672c\u90f5\u653f\u306e\u30c7\u30fc\u30bf [\u4f4f\u6240\u306e\u90f5\u4fbf\u756a\u53f7\uff08\u30ed\u30fc\u30de\u5b57\u30fbzip\u5f62\u5f0f\uff09](http://www.post.japanpost.jp/zipcode/dl/roman-zip.html) \u3092\u4f7f\u7528\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002 (\u305d\u3082\u305d\u3082\u3001\u5143\u3005\u4eca\u56de\u306e\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u304c Athena \u3092\u4f7f\u3046\u3053\u3068\u3067\u306f\u306a\u304f\u3001\u5225\u3067\u4f5c\u3063\u3066\u3044\u308b [ITS\u5065\u4fdd\u306e\u65bd\u8a2d\u4e88\u7d04\u30b9\u30af\u30ea\u30d7\u30c8](https://github.com/tearoom6/kenpo_api) \u3067\u3001\u90f5\u4fbf\u756a\u53f7\u304b\u3089\u4f4f\u6240\u306e\u9806\u5f15\u304d\u3092\u3057\u305f\u3044\u3068\u3044\u3046\u3053\u3068\u304b\u3089\u59cb\u307e\u3063\u3066\u3044\u307e\u3057\u3066...\u305d\u3061\u3089\u3067\u306f\u7d50\u5c40\u4f7f\u308f\u306a\u3044\u3064\u3082\u308a\u3067\u3059\u304c...)\n\n## JRuby \u304b\u3089 JDBC \u3067 Athena \u306b\u63a5\u7d9a\n\n\u65e9\u901f\u6838\u5fc3\u90e8\u5206\u304b\u3089\u3002\n\n```ruby\nrequire 'java'\nrequire 'jbundler'\n\naccess_key = '' # Himitsu Dayo!\naccess_secret = '' # Himitsu Dayo!\nregion = 'us-west-2'\nathena_jdbc_url = \"jdbc:awsathena://athena.#{region}.amazonaws.com:443\"\n\ncom.amazonaws.athena.jdbc.AthenaDriver\n\nprops = java.util.Properties.new\nprops.set_property('user', access_key)\nprops.set_property('password', access_secret)\nprops.set_property('s3_staging_dir', 's3://my-postal-search-jp/my_postal_search_jp/query_results/')\n\nconnection = java.sql.DriverManager.get_connection(athena_jdbc_url, props)\nstatement = connection.create_statement\n\nquery = \"SELECT * FROM postalsearchjp.jp_postal_codes LIMIT 1\"\nrs = statement.execute_query(query)\n\nJpPostalCode = Struct.new(:postal_code, :prefecture, :city, :street, :prefecture_kana, :city_kana, :street_kana)\nrecords = []\nwhile (rs.next) do\n  record = JpPostalCode.new\n  record.postal_code = rs.get_string('postal_code')\n  record.prefecture = rs.get_string('prefecture')\n  record.city = rs.get_string('city')\n  record.street = rs.get_string('street')\n  record.prefecture_kana = rs.get_string('prefecture_kana')\n  record.city_kana = rs.get_string('city_kana')\n  record.street_kana = rs.get_string('street_kana')\n  records << record\nend\n```\n\nJRuby \u304b\u3089\u306e JDBC \u4f7f\u7528\u306f [\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/jruby/jruby/wiki/JDBC) \u53c2\u7167\u3002\nAthene \u3067\u306e JDBC \u5229\u7528\u3082 [\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://docs.aws.amazon.com/athena/latest/ug/connect-with-jdbc.html) \u53c2\u7167\u3001\u306a\u306e\u3067\u3059\u304c\u3001\u7c21\u5358\u306b\u307e\u3068\u3081\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u70b9\u306b\u306a\u308a\u307e\u3059\u3002\n\n- Driver \u306b\u306f [JDBC 4.1-compatible driver](https://s3.amazonaws.com/athena-downloads/drivers/AthenaJDBC41-1.0.0.jar) \u3092\u7528\u3044\u308b (`com.amazonaws.athena.jdbc.AthenaDriver`)\n- JDBC URL \u3068\u3057\u3066\u3001 `jdbc:awsathena://athena.REGION.amazonaws.com:443` \u3092\u7528\u3044\u308b\n- Driver \u306e options \u3068\u3057\u3066 `s3_staging_dir` \u306b\u691c\u7d22\u7d50\u679c\u3084\u5c65\u6b74\u7b49\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e S3 Bucket \u306e Path \u3092\u6307\u5b9a\u3059\u308b\n- \u8a8d\u8a3c\u7cfb\u306e\u30af\u30e9\u30b9 (`com.amazonaws.auth.*`) \u304c\u4f7f\u3048\u308b\u3088\u3046\u306b `aws-java-sdk-core` \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30ed\u30fc\u30c9\u3057\u3066\u304a\u304f\n- \u8a8d\u8a3c\u7528\u306b user \u306b\u306f AWS \u306e aws_access_key_id \u3092\u3001 password \u306b\u306f aws_secret_access_key \u3092\u6307\u5b9a\u3059\u308b\n\n## JBundler\n\nAthenaDriver \u3068 AWS Java SDK \u306e\u53d6\u308a\u8fbc\u307f\u306b\u76f4\u63a5 jar \u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3057\u3066\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f [JBundler](https://github.com/mkristian/jbundler) \u3092\u7528\u3044\u3066\u53d6\u308a\u8fbc\u307f\u307e\u3057\u305f\u3002\nAthenaDriver \u306e\u65b9\u306f Maven Central Repository \u306b\u306f\u306a\u304b\u3063\u305f\u306e\u3067\u3001 Atlassian \u306e Repository \u304b\u3089\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b Jarfile \u3092\u66f8\u304d\u307e\u3059\u3002\n\n```ruby:Jarfile\nsource 'http://central.maven.org/maven2/'\nsource 'https://maven.atlassian.com/3rdparty/'\n\njar 'com.amazonaws.athena.jdbc:AthenaJDBC41', '1.0.0-atlassian-hosted'\njar 'com.amazonaws:aws-java-sdk-core', '~> 1.11'\n```\n\n\u3053\u308c\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002 (Jarfile.lock \u304c\u4f5c\u3089\u308c\u307e\u3059)\n\n```sh\n# Install\n$ jruby -S jbundle install\n```\n\n`.jbundler/classpath.rb ` \u3082\u4f5c\u3089\u308c\u3066\u304a\u308a\u3001\u4ee5\u4e0b\u306e require \u3060\u3051\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u5168\u3066\u306e jar \u3092\u53d6\u308a\u8fbc\u3081\u307e\u3059\u3002\n\n```ruby\nrequire 'jbundler'\n```\n\n## \u3067\u304d\u305f\u3082\u306e\n\n\u3067\u304d\u305f\u3082\u306e\u306f\u3053\u3061\u3089\u306b\u304a\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\n[PostalSearchJp](https://github.com/tearoom6/postal_search_jp)\n\nREADME \u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u4f7f\u3044\u65b9\u306f\u3044\u305f\u3063\u3066\u7c21\u5358\u3002 Web console \u306f\u4e00\u5207\u4f7f\u3044\u307e\u305b\u3093\u3002(\u3082\u3057\u304b\u3057\u305f\u3089\u3001\u4f7f\u3044\u59cb\u3081\u306e Get Started \u62bc\u3059\u3068\u3053\u3068\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u5b8c\u4e86\u3060\u3051\u306f\u3084\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304b\u3082)\n\n\u74b0\u5883\u3092 Java 8 / JRuby 9 \u306b\u3057\u3066\u3001\n\n```sh\n$ git clone https://github.com/tearoom6/postal_search_jp\n$ bundle install\n$ jruby -S jbundle install\n```\n\n```ruby\nPostalSearchJp.configure(\n  aws_access_key_id:     '', # Himitsu Dayo!\n  aws_secret_access_key: '', # Himitsu Dayo!\n  aws_region:            'us-east-1',\n  s3_bucket:             'my-postal-search-jp', # \u5168\u4e16\u754c\u3067\u30e6\u30cb\u30fc\u30af\u306a\u3082\u306e\u306b\u5909\u3048\u3066\u306d\n)\n\n# \u3053\u308c\u3067\u3001\u65e5\u672c\u90f5\u653f\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30fb\u6587\u5b57\u30b3\u30fc\u30c9\u7b49\u306e\u5909\u63db\u30fb S3 \u3078\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u30fb Athena \u3067\u306e\u30b9\u30ad\u30fc\u30de\u5b9a\u7fa9\u3001\u5168\u90e8\u3084\u308a\u307e\u3059\nPostalSearchJp.setup\n\n# \u9806\u5f15\u304d\u30fb\u9006\u5f15\u304d\u306b\u5bfe\u5fdc\nPostalSearchJp.search_by_address('\u4e95\u306e\u982d')\n# => [#<struct PostalSearchJp::JpPostalCode postal_code=\"\\\"1810001\\\"\", prefecture=\"\\\"\u6771\u4eac\u90fd\\\"\", city=\"\\\"\u4e09\u9df9\u5e02\\\"\", street=\"\\\"\u4e95\u306e\u982d\\\"\", prefecture_kana=\"\\\"TOKYO TO\\\"\", city_kana=\"\\\"MITAKA SHI\\\"\", street_kana=\"\\\"INOKASHIRA\\\"\">]\nPostalSearchJp.find_by_postal_code('1810001')\n# => #<struct PostalSearchJp::JpPostalCode postal_code=\"1810001\", prefecture=\"\u6771\u4eac\u90fd\", city=\"\u4e09\u9df9\u5e02\", street=\"\u4e95\u306e\u982d\", prefecture_kana=\"TOKYO TO\", city_kana=\"MITAKA SHI\", street_kana=\"INOKASHIRA\">\n```\n\nPreparedStatement \u4f7f\u3063\u3066\u306a\u3044\u306a\u3069\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7684\u306a\u3053\u3068\u306f\u4f55\u3082\u8003\u3048\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5916\u90e8\u4f7f\u7528\u3067\u304d\u308b\u72b6\u614b\u306b\u3059\u308b\u306e\u306f\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002\n", "tags": ["JRuby", "Athena", "JBundler"]}