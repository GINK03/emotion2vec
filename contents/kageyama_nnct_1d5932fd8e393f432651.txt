{"context": "\n\n\u3053\u306e\u8a18\u4e8b\u306e\u30b4\u30fc\u30eb\n\u518d\u5e30\u7684\u306a\u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u6301\u3064\u30e2\u30c7\u30eb\uff08\u6728\u69cb\u9020\u306a\u3069\uff09\u306e\u5834\u5408\u3092\u8003\u3048\u308b\u3002\nDjangoRESTFramework\u3092\u7528\u3044\u3066\u518d\u5e30\u7684\u306bjson\u3092\u8fd4\u3059API\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n\u74b0\u5883\nMacOS(10.11.6 / ElCapitane)\nPython 3.5.2\nDjango 1.10.4\nDjangoRESTFramework 3.5.3\n\nModel\n\u518d\u5e30\u7684\u306a\u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u6301\u3064\u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u30ab\u30c6\u30b4\u30ea\u306e\u4e2d\u306b\u3001\u66f4\u306b\u30b5\u30d6\u30ab\u30c6\u30b4\u30ea\u3092\u6301\u3064\u30e2\u30c7\u30eb\u3092\u8003\u3048\u307e\u3059\u3002\u9006\u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u540d\u306fsubcategories\u3068\u3057\u307e\u3059\u3002\n\nmodels.py\nclass Category(models.Model):\n    parentCategory = models.ForeignKey('self', blank=True, null=True, related_name='subcategories')\n    name = models.CharField(max_length=200)\n    description = models.CharField(max_length=500)\n\n\n\nSerializer\nModelSerializer\u3092\u7d99\u627f\u3057\u305fSubCategorySerializer\u3092\u5b9a\u7fa9\u3057\u3001Category\u306e\u9006\u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u3042\u308bsubcategories\u3092SubCategorySerializer\u3067\u4e0a\u66f8\u304d\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304dparentCategory\u306fserializers.PrimaryKeyRelatedField()\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nserializers.py\nclass SubCategorySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Category\n        fields = ('name', 'description')\n\nclass CategorySerializer(serializers.ModelSerializer):\n    parentCategory = serializers.PrimaryKeyRelatedField()\n    subcategories = serializers.SubCategorySerializer()\n\n    class Meta:\n        model = Category\n        fields = ('parentCategory', 'name', 'description', 'subcategories')\n\n\n\nView\nView\u3067Serializer\u306bCategorySerializer\u3092\u6307\u5b9a\u3057\u3066\u3042\u3052\u308c\u3070OK\u3067\u3059\u3002\u30af\u30a8\u30ea\u30bb\u30c3\u30c8\u306f\u4e00\u756a\u4e0a\u306e\u968e\u5c64\u3092\u4e00\u610f\u306b\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306a\u30af\u30a8\u30ea\u306b\u3057\u307e\u3057\u3087\u3046\u3002get()\u3060\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u30af\u30a8\u30ea\u3092\u8fd4\u3059filter()\u306a\u3069\u306b\u3057\u307e\u3057\u3087\u3046\u3002\uff08\u4f8b\u3048\u3070\u3001is_root\u3092\u30e2\u30c7\u30eb\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u3044\u3066\u3001filter(is_root=True)\u3068\u304b\u3067\u53d6\u5f97\u3059\u308b\uff09\n\nview.py\nclass CategoryListViewSet(viewsets.ModelViewSet):\n    queryset = Category.objects.filter(id='e.g...root_category_id').prefetch_related('subcategories__subcategories')\n    serializer_class = CategorySeriarizer\n\n\n\n\u5225\u306e\u65b9\u6cd5\n\u6b21\u306e\u3088\u3046\u306aRecursiveField\u3092\u5b9a\u7fa9\u3057\u3066\u8fd4\u3057\u3066\u3042\u3052\u308b\u3053\u3068\u3067\u3082\u5b9f\u73fe\u53ef\u80fd\u3067\u3059\u3002\u3053\u3061\u3089\u3082\u878d\u901a\u304c\u52b9\u304f\u306e\u3067\u3088\u3044\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\nserializers.py\nclass RecursiveField(serializers.Serializer):\n    def to_representation(self, value):\n        serializer = self.parent.parent.__class__(value, context=self.context)\n        return serializer.data\n\nclass CategorySerializer(serializers.Serializer):\n    subcategories = RecursiveField(many=True)\n\n    class Meta:\n        model = Comment\n        fields = ('parendCategory','name', 'description', 'subcategories')\n\n\n\n\u7d50\u679c\n\u4e0a\u8a18\u306e\u4f8b\u3068\u306f\u5225\u30e2\u30c7\u30eb\u306a\u306e\u3067\u3059\u304c\u3001\u5358\u7d14\u306a\u6728\u69cb\u9020\u304b\u3064\u518d\u5e30\u7684\u306a\u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u6301\u3064\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u30e2\u30c7\u30eb\u3060\u3068\u3053\u3093\u306ajson\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\nhoge.json\n[\n    {\n        \"name\": \"RootDirectory\",\n        \"is_root\": true,\n        \"is_dir\": true,\n        \"parent_file\": null,\n        \"child_files\": [\n            {\n                \"name\": \"root_file\",\n                \"is_root\": false,\n                \"is_dir\": false,\n                \"parent_file\": 34,\n                \"child_files\": []\n            },\n            {\n                \"name\": \"TestDir\",\n                \"is_root\": false,\n                \"is_dir\": true,\n                \"parent_file\": 34,\n                \"child_files\": [\n                    {\n                        \"name\": \"test.zip\",\n                        \"is_root\": false,\n                        \"is_dir\": false,\n                        \"parent_file\": 35,\n                        \"child_files\": []\n                    },\n                    {\n                        \"name\": \"test_dir_file.png\",\n                        \"is_root\": false,\n                        \"is_dir\": false,\n                        \"parent_file\": 35,\n                        \"child_files\": []\n                    }\n                ]\n            }\n        ]\n    }\n]\n\n\n\u307f\u3093\u306a\u3082Django\u3067\u697d\u3057\u3066REST API\u4f5c\u308a\u307e\u3057\u3087\u3046\uff01\uff01\n\n\u53c2\u8003\nhttp://www.django-rest-framework.org/api-guide/relations/#custom-relational-fields\nhttp://stackoverflow.com/questions/13376894/django-rest-framework-nested-self-referential-objects\n## \u3053\u306e\u8a18\u4e8b\u306e\u30b4\u30fc\u30eb\n\n\u518d\u5e30\u7684\u306a\u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u6301\u3064\u30e2\u30c7\u30eb\uff08\u6728\u69cb\u9020\u306a\u3069\uff09\u306e\u5834\u5408\u3092\u8003\u3048\u308b\u3002\nDjangoRESTFramework\u3092\u7528\u3044\u3066\u518d\u5e30\u7684\u306bjson\u3092\u8fd4\u3059API\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n\n## \u74b0\u5883\nMacOS(10.11.6 / ElCapitane)\nPython 3.5.2\nDjango 1.10.4\nDjangoRESTFramework 3.5.3\n\n\n## Model\n\n\u518d\u5e30\u7684\u306a\u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u6301\u3064\u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u30ab\u30c6\u30b4\u30ea\u306e\u4e2d\u306b\u3001\u66f4\u306b\u30b5\u30d6\u30ab\u30c6\u30b4\u30ea\u3092\u6301\u3064\u30e2\u30c7\u30eb\u3092\u8003\u3048\u307e\u3059\u3002\u9006\u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u540d\u306fsubcategories\u3068\u3057\u307e\u3059\u3002\n\n```models.py\nclass Category(models.Model):\n    parentCategory = models.ForeignKey('self', blank=True, null=True, related_name='subcategories')\n    name = models.CharField(max_length=200)\n    description = models.CharField(max_length=500)\n```\n\n## Serializer\nModelSerializer\u3092\u7d99\u627f\u3057\u305fSubCategorySerializer\u3092\u5b9a\u7fa9\u3057\u3001Category\u306e\u9006\u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u3042\u308bsubcategories\u3092SubCategorySerializer\u3067\u4e0a\u66f8\u304d\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304dparentCategory\u306fserializers.PrimaryKeyRelatedField()\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```serializers.py\nclass SubCategorySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Category\n        fields = ('name', 'description')\n\nclass CategorySerializer(serializers.ModelSerializer):\n    parentCategory = serializers.PrimaryKeyRelatedField()\n    subcategories = serializers.SubCategorySerializer()\n\n    class Meta:\n        model = Category\n        fields = ('parentCategory', 'name', 'description', 'subcategories')\n```\n\n## View\n\n\nView\u3067Serializer\u306bCategorySerializer\u3092\u6307\u5b9a\u3057\u3066\u3042\u3052\u308c\u3070OK\u3067\u3059\u3002\u30af\u30a8\u30ea\u30bb\u30c3\u30c8\u306f\u4e00\u756a\u4e0a\u306e\u968e\u5c64\u3092\u4e00\u610f\u306b\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306a\u30af\u30a8\u30ea\u306b\u3057\u307e\u3057\u3087\u3046\u3002get()\u3060\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u30af\u30a8\u30ea\u3092\u8fd4\u3059filter()\u306a\u3069\u306b\u3057\u307e\u3057\u3087\u3046\u3002\uff08\u4f8b\u3048\u3070\u3001is_root\u3092\u30e2\u30c7\u30eb\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u3044\u3066\u3001filter(is_root=True)\u3068\u304b\u3067\u53d6\u5f97\u3059\u308b\uff09\n\n```view.py\nclass CategoryListViewSet(viewsets.ModelViewSet):\n    queryset = Category.objects.filter(id='e.g...root_category_id').prefetch_related('subcategories__subcategories')\n    serializer_class = CategorySeriarizer\n```\n\n## \u5225\u306e\u65b9\u6cd5\n\u6b21\u306e\u3088\u3046\u306aRecursiveField\u3092\u5b9a\u7fa9\u3057\u3066\u8fd4\u3057\u3066\u3042\u3052\u308b\u3053\u3068\u3067\u3082\u5b9f\u73fe\u53ef\u80fd\u3067\u3059\u3002\u3053\u3061\u3089\u3082\u878d\u901a\u304c\u52b9\u304f\u306e\u3067\u3088\u3044\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\n```serializers.py\nclass RecursiveField(serializers.Serializer):\n    def to_representation(self, value):\n        serializer = self.parent.parent.__class__(value, context=self.context)\n        return serializer.data\n\nclass CategorySerializer(serializers.Serializer):\n    subcategories = RecursiveField(many=True)\n\n    class Meta:\n        model = Comment\n        fields = ('parendCategory','name', 'description', 'subcategories')\n```\n\n## \u7d50\u679c\n\n\u4e0a\u8a18\u306e\u4f8b\u3068\u306f\u5225\u30e2\u30c7\u30eb\u306a\u306e\u3067\u3059\u304c\u3001\u5358\u7d14\u306a\u6728\u69cb\u9020\u304b\u3064\u518d\u5e30\u7684\u306a\u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u6301\u3064\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u30e2\u30c7\u30eb\u3060\u3068\u3053\u3093\u306ajson\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\n```hoge.json\n[\n    {\n        \"name\": \"RootDirectory\",\n        \"is_root\": true,\n        \"is_dir\": true,\n        \"parent_file\": null,\n        \"child_files\": [\n            {\n                \"name\": \"root_file\",\n                \"is_root\": false,\n                \"is_dir\": false,\n                \"parent_file\": 34,\n                \"child_files\": []\n            },\n            {\n                \"name\": \"TestDir\",\n                \"is_root\": false,\n                \"is_dir\": true,\n                \"parent_file\": 34,\n                \"child_files\": [\n                    {\n                        \"name\": \"test.zip\",\n                        \"is_root\": false,\n                        \"is_dir\": false,\n                        \"parent_file\": 35,\n                        \"child_files\": []\n                    },\n                    {\n                        \"name\": \"test_dir_file.png\",\n                        \"is_root\": false,\n                        \"is_dir\": false,\n                        \"parent_file\": 35,\n                        \"child_files\": []\n                    }\n                ]\n            }\n        ]\n    }\n]\n```\n\n\u307f\u3093\u306a\u3082Django\u3067\u697d\u3057\u3066REST API\u4f5c\u308a\u307e\u3057\u3087\u3046\uff01\uff01\n\n### \u53c2\u8003\nhttp://www.django-rest-framework.org/api-guide/relations/#custom-relational-fields\nhttp://stackoverflow.com/questions/13376894/django-rest-framework-nested-self-referential-objects\n", "tags": ["Django", "Python", "django-rest-framework"]}