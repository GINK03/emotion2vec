{"context": "\u52e2\u3044\u4f59\u3063\u3066\u3044\u308d\u3044\u308d\u3068\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u8aad\u307f\u8fd4\u3057\u3066\u307f\u308b\u3068\u610f\u5473\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u672c\u5f53\u306b\u66f8\u304d\u305f\u304b\u3063\u305f\u3053\u3068\u3060\u3051\u306b\u3057\u307e\u3057\u305f\u3002\n\u5b9f\u88c5\u4f8b\u306e\u3088\u3046\u306b\u5185\u90e8\u306bPromise\u304c\u96a0\u853d\u3055\u308c\u3066\u308b\u3051\u308c\u3069\u3082\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u547c\u3073\u51fa\u3057\u306fthen\u5185\u3067\u540c\u671f\u7684\u306b\u884c\u308f\u308c\u308b\u7684\u306a\u95a2\u6570\u306e\u30c6\u30b9\u30c8\u304c\u8f9b\u3044\u306e\u3067\u3044\u3044\u65b9\u6cd5\u3092\u63a2\u3057\u3066\u3044\u307e\u3059\u3002\n\u203b nodejs\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306fv4.3.2\u3067\u3059\n\"use strict\";\n//\u5b9f\u969b\u306f\u3082\u3063\u3068\u5965\u6df1\u304f\u306bPromise\u304c\u96a0\u853d\u3055\u308c\u3066\u3044\u308b\nfunction asyncCallback(callback) {\n  new Promise(function(resolve, reject){\n    setImmediate(function(){\n      resolve(1);\n    })\n  }).then(function(v){\n    callback(null, v);\n  }, function(err){\n    callback(err);\n  });\n}\n\n\u5b9f\u969b\u306f\u5404\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306b\u4e0a\u8a18\u306e\u95a2\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c81(\u30c0\u30e1\u306a\u30d1\u30bf\u30fc\u30f3)\n\u3053\u306e\u307e\u307e\u3060\u3068\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u547c\u3070\u308c\u308b\u524d\u306b\u51e6\u7406\u304c\u7d42\u308f\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001AssertionError\u306f\u767a\u751f\u3057\u3066\u3044\u307e\u3059\u304cfail\u3057\u307e\u305b\u3093\u3002\n\"use strict\";\n\nconst assert = require('assert');\n\ndescribe(\"promise callback\", function(){\n  it(\"bad example\", function(){\n    asyncCallback(function(err, v){\n      assert.equal(v, 2);\n    });\n  });\n});\n\n$ mocha test/test.js\n\n\n  promise callback\n    \u2713 bad example\n\n\n  1 passing (8ms)\n\n\n\u30c6\u30b9\u30c82(\u30c0\u30e1\u306a\u30d1\u30bf\u30fc\u30f3)\ndone\u3092\u53d7\u3051\u53d6\u308c\u3070\u554f\u984c\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001AssertionError\u3092Promise\u304c\u88dc\u8db3\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001Mocha\u306b\u5c4a\u304b\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\"use strict\";\n\nconst assert = require('assert');\n\ndescribe(\"promise callback\", function(){\n  it(\"bad example\", function(done){\n    asyncCallback(function(err, v){\n      assert.equal(v, 2);\n      done();\n    });\n  });\n});\n\n$ mocha test/test.js\n\n\n  promise callback\n    1) bad example\n\n\n  0 passing (2s)\n  1 failing\n\n  1) promise callback bad example:\n     Error: timeout of 2000ms exceeded. Ensure the done() callback is being called in this test.\n\n\n\u30c6\u30b9\u30c83 (\u52d5\u304f\u30d1\u30bf\u30fc\u30f3)\nPromise\u306b\u6e21\u308b\u524d\u306b\u81ea\u3089try/catch\u3057\u3066\u3057\u307e\u3048\u3070\u52d5\u304d\u307e\u3059\u3002\n\u4f55\u5ea6\u3082try/catch\u3092\u66f8\u304d\u305f\u304f\u306a\u3044\u306e\u3067\u3042\u307e\u308a\u3044\u3044\u65b9\u6cd5\u3068\u306f\u601d\u3048\u307e\u305b\u3093\u3002\n\"use strict\";\n\nconst assert = require('assert');\n\ndescribe(\"promise callback\", function(){\n  it(\"good example\", function(done){\n    asyncCallback(function(err, v){\n      try {\n        assert.equal(v, 2);\n        done();\n      } catch (e) {\n        done(e);\n      }\n    });\n  });\n});\n\n$ mocha test/test.js\n\n\n  promise callback\n    1) bad example\n\n\n  0 passing (10ms)\n  1 failing\n\n  1) promise callback bad example:\n\n      AssertionError: 1 == 2\n      + expected - actual\n\n      -1\n      +2\n\n      at test/test.js:21:16\n      at test/test.js:11:5   \n\n\n\u30c6\u30b9\u30c84(\u52d5\u304f\u30d1\u30bf\u30fc\u30f3)\nassert\u306e\u547c\u3073\u51fa\u3057\u90e8\u5206\u3092\u975e\u540c\u671f\u306b\u3059\u308b\u3053\u3068\u3067Promise\u306b\u4f8b\u5916\u3092\u88dc\u8db3\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3061\u3089\u306e\u65b9\u304c\u5b9f\u88c53\u3088\u308a\u3082\u500b\u4eba\u7684\u306b\u306f\u597d\u304d\u3067\u3059\u3002\n\u30a8\u30e9\u30fc\u304c\u300cUncaught AssertionError\u300d\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u5b9f\u88c53\u306e\u30a8\u30e9\u30fc\u300cAssertionError\u300d\u3068\u6bd4\u3079\u308b\u3068\u5b9f\u88c53\u306e\u65b9\u304c\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\"use strict\";\n\nconst assert = require('assert');\n\ndescribe(\"promise callback\", function(){\n  it(\"good example\", function(done){\n    asyncCallback(function(err, v){\n      setImmediate(function(){\n        assert.equal(v, 2);\n        done();\n      });\n    });\n  });\n});\n\n$ mocha test/test.js\n\n\n  promise callback\n    1) bad example\n\n\n  0 passing (9ms)\n  1 failing\n\n  1) promise callback bad example:\n\n      Uncaught AssertionError: 1 == 2\n      + expected - actual\n\n      -1\n      +2\n\n      at Immediate._onImmediate (test/test.js:21:16)   \n\n\n\u30c6\u30b9\u30c85(\u89e3\u6c7a\uff01) 2016/10/13\u8ffd\u8a18\n@gaogao_9\u3055\u3093\u306b\u30b3\u30e1\u30f3\u30c8\u3044\u305f\u3060\u3044\u305f\u5185\u5bb9\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n@gaogao_9\u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\nPromise\u304c\u96a0\u853d\u3055\u308c\u3066\u623b\u3089\u306a\u3044\u306a\u3089\u305d\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092Promise\u3067\u5305\u3093\u3067return\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u30c6\u30b9\u30c83/4\u3067\u554f\u984c\u3068\u601d\u3063\u3066\u3044\u305f\u90e8\u5206\u306e\u307b\u3068\u3093\u3069\u304c\u89e3\u6d88\u3057\u307e\u3057\u305f\u3002\n\n\u30c6\u30b9\u30c83\u306etry/catch\u3092\u66f8\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u554f\u984c\u306e\u89e3\u6d88\n\u30c6\u30b9\u30c84\u306eAssertionError\u304cUncaught\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u554f\u984c\u306e\u89e3\u6d88\n\u30c6\u30b9\u30c83/4\u306edone\u304c\u5fc5\u9808\u306a\u3068\u3053\u308d\u306e\u89e3\u6d88\n\n\"use strict\";\n\nconst assert = require('assert');\n\nfunction asyncCallback(callback) {\n  new Promise(function(resolve, reject){\n    setImmediate(function(){\n       resolve(1);\n    })\n  }).then(function(v){\n    callback(null, v);\n  }, function(err){\n    callback(err);\n  });\n}\n\nfunction promisify(callback) {\n  return new Promise(function(resolve, reject){\n    callback(function(err, v) {\n      if (err) reject(err);\n      else resolve(v);\n    });\n  });\n}\n\ndescribe(\"promise callback\", function(){\n  it(\"good example\", function(){\n    return promisify(asyncCallback).then(function(v){\n      assert.equal(v, 2);\n    });\n  });\n});\n\n$ mocha test/test.js\n\n\n  promise callback\n    1) bad example\n\n\n  0 passing (10ms)\n  1 failing\n\n  1) promise callback bad example:\n\n      AssertionError: 1 == 2\n      + expected - actual\n\n      -1\n      +2\n\n      at test/test.js:29:14\n\n\u601d\u3044\u3064\u304d\u3067\u3059\u304c\u3001it\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u5f15\u6570\u304c\u3001\u5f15\u6570\u306a\u3057/\u5f15\u6570\u304c\u30a8\u30e9\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u3089done\u306e\u52d5\u4f5c\u3001\u5f15\u6570\u304c\u95a2\u6570\u306e\u5834\u5408\u306b\u306fpromisify\u306e\u52d5\u4f5c\u3068\u304b\u52d5\u3044\u3066\u304f\u308c\u305f\u3089\u826f\u3055\u305d\u3046\u306a\u6c17\u304c\u3057\u307e\u3057\u305f\u3002\n\u3053\u3093\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\ndescribe(\"promise callback\", function(){\n  it(\"good example\", function(promisify){\n    return promisify(asyncCallback).then(function(v){\n      assert.equal(v, 2);\n    });\n  });\n});\n\n\u307e\u3042\u3001\u3053\u3093\u306a\u3053\u3068\u3057\u306a\u304f\u3066\u3082\u6559\u3048\u3066\u3044\u305f\u3060\u3044\u305fawait\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308c\u3070\u5168\u90e8\u89e3\u6c7a\u3067\u3059\u3051\u3069\u3002\n\n\u307e\u3068\u3081\n\u4ee5\u4e0a\u3001\u96a0\u853d\u3055\u308c\u305fPromise\u306b\u3044\u304b\u306bAssertionError\u3092\u88dc\u8db3\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u304b\u554f\u984c\u3067\u3057\u305f\u3002\n\n\u52e2\u3044\u4f59\u3063\u3066\u3044\u308d\u3044\u308d\u3068\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u8aad\u307f\u8fd4\u3057\u3066\u307f\u308b\u3068\u610f\u5473\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u672c\u5f53\u306b\u66f8\u304d\u305f\u304b\u3063\u305f\u3053\u3068\u3060\u3051\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u5b9f\u88c5\u4f8b\u306e\u3088\u3046\u306b\u5185\u90e8\u306bPromise\u304c\u96a0\u853d\u3055\u308c\u3066\u308b\u3051\u308c\u3069\u3082\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u547c\u3073\u51fa\u3057\u306fthen\u5185\u3067\u540c\u671f\u7684\u306b\u884c\u308f\u308c\u308b\u7684\u306a\u95a2\u6570\u306e\u30c6\u30b9\u30c8\u304c\u8f9b\u3044\u306e\u3067\u3044\u3044\u65b9\u6cd5\u3092\u63a2\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u203b nodejs\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306fv4.3.2\u3067\u3059\n\n```js\n\"use strict\";\n//\u5b9f\u969b\u306f\u3082\u3063\u3068\u5965\u6df1\u304f\u306bPromise\u304c\u96a0\u853d\u3055\u308c\u3066\u3044\u308b\nfunction asyncCallback(callback) {\n  new Promise(function(resolve, reject){\n    setImmediate(function(){\n      resolve(1);\n    })\n  }).then(function(v){\n    callback(null, v);\n  }, function(err){\n    callback(err);\n  });\n}\n```\n\u5b9f\u969b\u306f\u5404\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306b\u4e0a\u8a18\u306e\u95a2\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n# \u30c6\u30b9\u30c81(\u30c0\u30e1\u306a\u30d1\u30bf\u30fc\u30f3)\n\u3053\u306e\u307e\u307e\u3060\u3068\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u547c\u3070\u308c\u308b\u524d\u306b\u51e6\u7406\u304c\u7d42\u308f\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001AssertionError\u306f\u767a\u751f\u3057\u3066\u3044\u307e\u3059\u304cfail\u3057\u307e\u305b\u3093\u3002\n\n```js\n\"use strict\";\n\nconst assert = require('assert');\n\ndescribe(\"promise callback\", function(){\n  it(\"bad example\", function(){\n    asyncCallback(function(err, v){\n      assert.equal(v, 2);\n    });\n  });\n});\n```\n\n```bash\n$ mocha test/test.js\n\n\n  promise callback\n    \u2713 bad example\n\n\n  1 passing (8ms)\n```\n\n# \u30c6\u30b9\u30c82(\u30c0\u30e1\u306a\u30d1\u30bf\u30fc\u30f3)\ndone\u3092\u53d7\u3051\u53d6\u308c\u3070\u554f\u984c\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001AssertionError\u3092Promise\u304c\u88dc\u8db3\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001Mocha\u306b\u5c4a\u304b\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n```js\n\"use strict\";\n\nconst assert = require('assert');\n\ndescribe(\"promise callback\", function(){\n  it(\"bad example\", function(done){\n    asyncCallback(function(err, v){\n      assert.equal(v, 2);\n      done();\n    });\n  });\n});\n```\n\n```\n$ mocha test/test.js\n\n\n  promise callback\n    1) bad example\n\n\n  0 passing (2s)\n  1 failing\n\n  1) promise callback bad example:\n     Error: timeout of 2000ms exceeded. Ensure the done() callback is being called in this test.\n```\n\n# \u30c6\u30b9\u30c83 (\u52d5\u304f\u30d1\u30bf\u30fc\u30f3)\nPromise\u306b\u6e21\u308b\u524d\u306b\u81ea\u3089try/catch\u3057\u3066\u3057\u307e\u3048\u3070\u52d5\u304d\u307e\u3059\u3002\n\u4f55\u5ea6\u3082try/catch\u3092\u66f8\u304d\u305f\u304f\u306a\u3044\u306e\u3067\u3042\u307e\u308a\u3044\u3044\u65b9\u6cd5\u3068\u306f\u601d\u3048\u307e\u305b\u3093\u3002\n\n```js\n\"use strict\";\n\nconst assert = require('assert');\n\ndescribe(\"promise callback\", function(){\n  it(\"good example\", function(done){\n    asyncCallback(function(err, v){\n      try {\n        assert.equal(v, 2);\n        done();\n      } catch (e) {\n        done(e);\n      }\n    });\n  });\n});\n```\n\n```bash\n$ mocha test/test.js\n\n\n  promise callback\n    1) bad example\n\n\n  0 passing (10ms)\n  1 failing\n\n  1) promise callback bad example:\n\n      AssertionError: 1 == 2\n      + expected - actual\n\n      -1\n      +2\n\n      at test/test.js:21:16\n      at test/test.js:11:5   \n```\n\n# \u30c6\u30b9\u30c84(\u52d5\u304f\u30d1\u30bf\u30fc\u30f3)\nassert\u306e\u547c\u3073\u51fa\u3057\u90e8\u5206\u3092\u975e\u540c\u671f\u306b\u3059\u308b\u3053\u3068\u3067Promise\u306b\u4f8b\u5916\u3092\u88dc\u8db3\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3061\u3089\u306e\u65b9\u304c\u5b9f\u88c53\u3088\u308a\u3082\u500b\u4eba\u7684\u306b\u306f\u597d\u304d\u3067\u3059\u3002\n\u30a8\u30e9\u30fc\u304c\u300cUncaught AssertionError\u300d\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u5b9f\u88c53\u306e\u30a8\u30e9\u30fc\u300cAssertionError\u300d\u3068\u6bd4\u3079\u308b\u3068\u5b9f\u88c53\u306e\u65b9\u304c\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n```js\n\"use strict\";\n\nconst assert = require('assert');\n\ndescribe(\"promise callback\", function(){\n  it(\"good example\", function(done){\n    asyncCallback(function(err, v){\n      setImmediate(function(){\n        assert.equal(v, 2);\n        done();\n      });\n    });\n  });\n});\n```\n\n```bash\n$ mocha test/test.js\n\n\n  promise callback\n    1) bad example\n\n\n  0 passing (9ms)\n  1 failing\n\n  1) promise callback bad example:\n\n      Uncaught AssertionError: 1 == 2\n      + expected - actual\n\n      -1\n      +2\n\n      at Immediate._onImmediate (test/test.js:21:16)   \n```\n\n# \u30c6\u30b9\u30c85(\u89e3\u6c7a\uff01) 2016/10/13\u8ffd\u8a18\n\n@gaogao_9\u3055\u3093\u306b[\u30b3\u30e1\u30f3\u30c8](http://qiita.com/ikeisuke/items/0df9b85629a64522ebac#comment-6b582b0e417a1f1ade82)\u3044\u305f\u3060\u3044\u305f\u5185\u5bb9\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n@gaogao_9\u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\n\nPromise\u304c\u96a0\u853d\u3055\u308c\u3066\u623b\u3089\u306a\u3044\u306a\u3089\u305d\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092Promise\u3067\u5305\u3093\u3067return\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u30c6\u30b9\u30c83/4\u3067\u554f\u984c\u3068\u601d\u3063\u3066\u3044\u305f\u90e8\u5206\u306e\u307b\u3068\u3093\u3069\u304c\u89e3\u6d88\u3057\u307e\u3057\u305f\u3002\n\n* \u30c6\u30b9\u30c83\u306etry/catch\u3092\u66f8\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u554f\u984c\u306e\u89e3\u6d88\n* \u30c6\u30b9\u30c84\u306eAssertionError\u304cUncaught\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u554f\u984c\u306e\u89e3\u6d88\n* \u30c6\u30b9\u30c83/4\u306edone\u304c\u5fc5\u9808\u306a\u3068\u3053\u308d\u306e\u89e3\u6d88\n\n```js\n\"use strict\";\n\nconst assert = require('assert');\n\nfunction asyncCallback(callback) {\n  new Promise(function(resolve, reject){\n    setImmediate(function(){\n  \t   resolve(1);\n    })\n  }).then(function(v){\n    callback(null, v);\n  }, function(err){\n    callback(err);\n  });\n}\n\nfunction promisify(callback) {\n  return new Promise(function(resolve, reject){\n    callback(function(err, v) {\n      if (err) reject(err);\n      else resolve(v);\n    });\n  });\n}\n\ndescribe(\"promise callback\", function(){\n  it(\"good example\", function(){\n    return promisify(asyncCallback).then(function(v){\n      assert.equal(v, 2);\n    });\n  });\n});\n```\n\n```bash\n$ mocha test/test.js\n\n\n  promise callback\n    1) bad example\n\n\n  0 passing (10ms)\n  1 failing\n\n  1) promise callback bad example:\n\n      AssertionError: 1 == 2\n      + expected - actual\n\n      -1\n      +2\n\n      at test/test.js:29:14\n```\n\n\u601d\u3044\u3064\u304d\u3067\u3059\u304c\u3001it\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u5f15\u6570\u304c\u3001\u5f15\u6570\u306a\u3057/\u5f15\u6570\u304c\u30a8\u30e9\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u3089done\u306e\u52d5\u4f5c\u3001\u5f15\u6570\u304c\u95a2\u6570\u306e\u5834\u5408\u306b\u306fpromisify\u306e\u52d5\u4f5c\u3068\u304b\u52d5\u3044\u3066\u304f\u308c\u305f\u3089\u826f\u3055\u305d\u3046\u306a\u6c17\u304c\u3057\u307e\u3057\u305f\u3002\n\n\u3053\u3093\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\n```\ndescribe(\"promise callback\", function(){\n  it(\"good example\", function(promisify){\n    return promisify(asyncCallback).then(function(v){\n      assert.equal(v, 2);\n    });\n  });\n});\n```\n\n\u307e\u3042\u3001\u3053\u3093\u306a\u3053\u3068\u3057\u306a\u304f\u3066\u3082\u6559\u3048\u3066\u3044\u305f\u3060\u3044\u305fawait\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308c\u3070\u5168\u90e8\u89e3\u6c7a\u3067\u3059\u3051\u3069\u3002:smile:\n\n\n# \u307e\u3068\u3081\n\u4ee5\u4e0a\u3001\u96a0\u853d\u3055\u308c\u305fPromise\u306b\u3044\u304b\u306bAssertionError\u3092\u88dc\u8db3\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u304b\u554f\u984c\u3067\u3057\u305f\u3002\n\n", "tags": ["mocha", "JavaScript", "Node.js", "promise"]}