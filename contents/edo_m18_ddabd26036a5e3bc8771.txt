{"context": " More than 1 year has passed since last update./**\n * Window size manager\n * @require jQuery\n */\n(function (win, doc, exports) {\n\n    function _bind(target, context) {\n        return function () {\n            target.apply(context, arguments);\n        };\n    }\n\n\n    /**\n     * @constructor\n     * @singletone\n     */\n    var WinSizeManager = (function () {\n\n        var instance,\n            events = {};\n\n        function WinSizeManager() {\n\n            if (instance) {\n                return instance;\n            }\n\n            $(window).resize(_bind(this._onResize, this));\n\n            instance = this;\n        }\n\n        WinSizeManager.getInstance = function () {\n            if (!instance) {\n                instance = new WinSizeManager();\n            }\n\n            return instance;\n        };\n\n        WinSizeManager.fn = WinSizeManager.prototype = {\n            add: function (range, callback, context) {\n\n                var c, sp, query, type, dir;\n\n                query = range.replace(/\\s+/ig, '');\n                dir   = query.charAt(0);\n                type  = query.slice(-1);\n                if (dir === '>' || dir === '<') {\n                    query = query.slice(1, query.length);\n                }\n                else {\n                    query = query.slice(1);\n                }\n                sp    = query.split('-');\n\n                if (!(c === '>' || c === '<' || (sp[1] || (type === 'w' || type === 'h')))) {\n                    return false;\n                }\n\n                (events[range] || (events[range] = [])).push([callback, (context || callback), type]);\n            },\n            _onResize: function (e) {\n\n                var evts = events,\n                    dist = 0,\n                    types = {\n                        h: window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,\n                        w: window.innerWidth  || document.documentElement.clientWidth  || document.body.clientWidth\n                    },\n                    key, tmp,\n                    fns,\n                    dir, range, startRange, endRange, chk, type,\n                    i, l;\n\n                for (key in evts) if (evts.hasOwnProperty(key)) {\n                    dir = key.charAt(0);\n                    type = key.slice(-1);\n                    if (/^[<>]/.test(dir)) {\n                        range = key.slice(1, -1);\n                    }\n                    else {\n                        range = key.slice(0, -1);\n                    }\n                    fns = evts[key];\n\n                    if (dir === '<') {\n                        startRange = 0;\n                        endRange  = Number(range) - 1;\n                    }\n                    else if (dir === '>') {\n                        startRange = Number(range) + 1;\n                        endRange   = types[type];\n                    }\n                    else {\n                        tmp = range.split('-');\n                        dir = '-';\n                        startRange = Number(tmp[0]);\n                        endRange   = Number(tmp[1]);\n                    }\n\n                    chk = (types[type] >= startRange && types[type] <= endRange);\n                    i = 0;\n                    l = fns.length;\n\n                    if (!chk) {\n                        continue;\n                    }\n\n                    for (; i < l; i++) {\n                        fns[i][0].call(fns[i][1], {\n                            type: type,\n                            currentRange: types[type],\n                            startRange: startRange,\n                            endRange: endRange,\n                            direction: dir\n                        });\n                    }\n                }\n            },\n            remove: function (range, callback) {\n\n                var evts = events,\n                    fns,\n                    key,\n                    i, l,\n                    ret;\n\n                range = range.replace(/\\s+/ig, '');\n\n                for (key in evts) if (evts.hasOwnProperty(key)) {\n                    fns = evts[key];\n                    ret = [];\n                    i   = 0;\n                    l   = fns.length;\n\n                    if (key !== range) {\n                        continue;\n                    }\n\n                    for (; i < l; i++) {\n                        if (fns[i][0] !== callback) {\n                            ret.push(fns[i]);\n                        }\n                    }\n\n                    evts[key] = ret;\n                }\n            }\n        };\n\n        return WinSizeManager;\n    }());\n\n\n    /*! ---------------------------------------------------------\n        EXPORTS\n    ------------------------------------------------------------- */\n    exports.WinSizeManager = WinSizeManager;\n\n}(window, document, window));\n\n\u25bc\u4f7f\u3044\u65b9\nwsm.add('>720h', function (e) {\n\n    $body.removeClass('minimize');\n});\n\nwsm.add('<800h', function (e) {\n\n    $body\n        .removeClass('sizeL')\n        .removeClass('sizeM')\n        .addClass('sizeS');\n});\nwsm.add('800-900h', function () {\n\n    $body\n        .removeClass('sizeS')\n        .removeClass('sizeL')\n        .addClass('sizeM');\n});\n\n\n```javascript\n/**\n * Window size manager\n * @require jQuery\n */\n(function (win, doc, exports) {\n\n    function _bind(target, context) {\n        return function () {\n            target.apply(context, arguments);\n        };\n    }\n\n\n    /**\n     * @constructor\n     * @singletone\n     */\n    var WinSizeManager = (function () {\n\n        var instance,\n            events = {};\n\n        function WinSizeManager() {\n        \n            if (instance) {\n                return instance;\n            }\n\n            $(window).resize(_bind(this._onResize, this));\n\n            instance = this;\n        }\n\n        WinSizeManager.getInstance = function () {\n            if (!instance) {\n                instance = new WinSizeManager();\n            }\n\n            return instance;\n        };\n\n        WinSizeManager.fn = WinSizeManager.prototype = {\n            add: function (range, callback, context) {\n            \n                var c, sp, query, type, dir;\n\n                query = range.replace(/\\s+/ig, '');\n                dir   = query.charAt(0);\n                type  = query.slice(-1);\n                if (dir === '>' || dir === '<') {\n                    query = query.slice(1, query.length);\n                }\n                else {\n                    query = query.slice(1);\n                }\n                sp    = query.split('-');\n\n                if (!(c === '>' || c === '<' || (sp[1] || (type === 'w' || type === 'h')))) {\n                    return false;\n                }\n\n                (events[range] || (events[range] = [])).push([callback, (context || callback), type]);\n            },\n            _onResize: function (e) {\n            \n                var evts = events,\n                    dist = 0,\n                    types = {\n                        h: window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,\n                        w: window.innerWidth  || document.documentElement.clientWidth  || document.body.clientWidth\n                    },\n                    key, tmp,\n                    fns,\n                    dir, range, startRange, endRange, chk, type,\n                    i, l;\n\n                for (key in evts) if (evts.hasOwnProperty(key)) {\n                    dir = key.charAt(0);\n                    type = key.slice(-1);\n                    if (/^[<>]/.test(dir)) {\n                        range = key.slice(1, -1);\n                    }\n                    else {\n                        range = key.slice(0, -1);\n                    }\n                    fns = evts[key];\n\n                    if (dir === '<') {\n                        startRange = 0;\n                        endRange  = Number(range) - 1;\n                    }\n                    else if (dir === '>') {\n                        startRange = Number(range) + 1;\n                        endRange   = types[type];\n                    }\n                    else {\n                        tmp = range.split('-');\n                        dir = '-';\n                        startRange = Number(tmp[0]);\n                        endRange   = Number(tmp[1]);\n                    }\n\n                    chk = (types[type] >= startRange && types[type] <= endRange);\n                    i = 0;\n                    l = fns.length;\n\n                    if (!chk) {\n                        continue;\n                    }\n\n                    for (; i < l; i++) {\n                        fns[i][0].call(fns[i][1], {\n                            type: type,\n                            currentRange: types[type],\n                            startRange: startRange,\n                            endRange: endRange,\n                            direction: dir\n                        });\n                    }\n                }\n            },\n            remove: function (range, callback) {\n            \n                var evts = events,\n                    fns,\n                    key,\n                    i, l,\n                    ret;\n\n                range = range.replace(/\\s+/ig, '');\n\n                for (key in evts) if (evts.hasOwnProperty(key)) {\n                    fns = evts[key];\n                    ret = [];\n                    i   = 0;\n                    l   = fns.length;\n\n                    if (key !== range) {\n                        continue;\n                    }\n\n                    for (; i < l; i++) {\n                        if (fns[i][0] !== callback) {\n                            ret.push(fns[i]);\n                        }\n                    }\n\n                    evts[key] = ret;\n                }\n            }\n        };\n\n        return WinSizeManager;\n    }());\n\n\n    /*! ---------------------------------------------------------\n        EXPORTS\n    ------------------------------------------------------------- */\n    exports.WinSizeManager = WinSizeManager;\n\n}(window, document, window));\n```\n\n\u25bc\u4f7f\u3044\u65b9\n\n```javascript\nwsm.add('>720h', function (e) {\n\n    $body.removeClass('minimize');\n});\n\nwsm.add('<800h', function (e) {\n\n    $body\n        .removeClass('sizeL')\n        .removeClass('sizeM')\n        .addClass('sizeS');\n});\nwsm.add('800-900h', function () {\n\n    $body\n        .removeClass('sizeS')\n        .removeClass('sizeL')\n        .addClass('sizeM');\n});\n```", "tags": ["Resize", "singleton", "window"]}