{"context": "Serverless Framework v1\u7cfb (v1.2.1)\u3092\u89e6\u3063\u3066\u307f\u305f\u306e\u3067\u3001\u3084\u3063\u305f\u3053\u3068\u306e\u30e1\u30e2\u3002\uff08\u7279\u306bresource\u307e\u308f\u308a\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306a\u3069\u57fa\u672c\u7684\u306a\u4f7f\u7528\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\n\nServerless Framework v1.0\u306e\u4f7f\u3044\u65b9\u307e\u3068\u3081\n\n\n\u3084\u3063\u305f\u3053\u3068\n\nS3\u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u308b\nweb\u30b5\u30a4\u30c8\u306e\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u304c\u76ee\u7684\u3060\u3063\u305f\u306e\u3067\u3001WebsiteConfiguration\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u7279\u306b\u30cf\u30de\u308a\u3069\u3053\u308d\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\nserverless.yml\nresources:\n  Resources:\n    MyBucket:\n      Type: AWS::S3::Bucket\n      Properties:\n        BucketName: my-bucket\n        AccessControl: PublicRead\n        WebsiteConfiguration:\n          IndexDocument: index.html\n\n\n\n\u53c2\u8003\n\nhttp://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html\n\n\nDynamoDB\n\n\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\n\u3053\u3061\u3089\u3082CloudFormation\u306e\u30eb\u30fc\u30eb\u901a\u308a\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\nserverless.yml\nresources:\n  Resources:\n    MyTable:\n      Type: 'AWS::DynamoDB::Table'\n      DeletionPolicy: Retain\n      Properties:\n        TableName: MyTable\n        AttributeDefinitions:\n          -\n            AttributeName: Id\n            AttributeType: S\n        KeySchema:\n          -\n            AttributeName: Id\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n\n\n\n\u53c2\u8003\n\nhttp://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html\n\n\nDynamoDB Streams\u3068\u30c8\u30ea\u30ac\u30fc\u306e\u7ba1\u7406\n\nStream\u306e\u4f5c\u6210\nStreamSpecification\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\nserverless.yml\nresources:\n  Resources:\n    MyTable:\n      Type: 'AWS::DynamoDB::Table'\n      DeletionPolicy: Retain\n      Properties:\n        TableName: MyTable\n        AttributeDefinitions:\n          -\n            AttributeName: Id\n            AttributeType: S\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        # \u3053\u3053\u3092\u8ffd\u52a0\n        StreamSpecification:\n          StreamViewType: NEW_IMAGE\n\n\n\n\u30c8\u30ea\u30ac\u30fc\u306e\u8a2d\u5b9a\n\u30c8\u30ea\u30ac\u30fc\u306ffunction\u306eevent.stream\u306b\u4f5c\u6210\u3057\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u306earn\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nfunctions:\n  streamTest:\n    handler: handler.hello\n    events:\n      - stream:\n          arn: arn:aws:dynamodb:us-east-1:999999999999:table/MyTable/stream/2016-12-01T07:09:53.720\n\narn\u3092\u76f4\u66f8\u304d\u3060\u3068\u5909\u66f4\u304c\u5165\u3063\u305f\u5834\u5408\u306b\u9762\u5012\u3067\u3059\u306d\u30fb\u30fb\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u7528\u306b\u95a2\u6570Fn::GetAtt\u3092\u4f7f\u3046\u5f62\u306b\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3059\u3002\nfunctions:\n  streamTest:\n    handler: handler.hello\n    events:\n      - stream:\n          arn:\n            \"Fn::GetAtt\":\n              - MyTable\n              - Arn\n\n\u3067\u3059\u304c\u3001\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\n  Type Error ---------------------------------------------\n\n     EventSourceArn.split is not a function\n\n\u3069\u3046\u3084\u3089\u30d0\u30b0\u306b\u3088\u308a\u52d5\u4f5c\u3057\u306a\u3044\u3088\u3046\u3067\u3059\u3002\nKinesis Stream\u3082\u540c\u69d8\u306e\u7406\u7531\u306b\u3088\u308a\u95a2\u6570\u306b\u3088\u308b\u6307\u5b9a\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\u73fe\u5728\u306farn\u3092\u76f4\u66f8\u304d\u3059\u308b\u3057\u304b\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\u65e2\u306bPR\u304c\u51fa\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u5bfe\u5fdc\u3092\u5f85\u3061\u307e\u3057\u3087\u3046\u3002\n\n\u53c2\u8003\n\nhttp://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-streamspecification.html\n\n\nApiGateway\u306e\u8a8d\u8a3c\u8a2d\u5b9a\n\n\u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\nfunctions:\n  # \u8a8d\u8a3c\u7528\u95a2\u6570\u3092\u5b9a\u7fa9\n  authFunc:\n    handler: handler.auth\n\n  hello:\n    handler: handler.hello\n    events:\n      - http:\n          path: hogehoge\n          method: get\n          # \u8a8d\u8a3c\u7528\u306e\u95a2\u6570\u3092\u6307\u5b9a\n          authorizer: authFunc\n\n\u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u306e\u95a2\u6570\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f\u7701\u7565\u3057\u307e\u3059\u3002\n\n\u53c2\u8003\n\nhttps://serverless.com/framework/docs/providers/aws/events/apigateway/#http-endpoints-with-custom-authorizers\nhttp://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/use-custom-authorizer.html\n\n\nIAM\u8a8d\u8a3c\n\u30ea\u30bd\u30fc\u30b9\u540d\u306fApiGatewayMethodV1MyFuncGet\u306e\u90e8\u5206\u306f\u5bfe\u8c61API\u306eLogicalID\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nfunction\u5074\u306e\u6307\u5b9a\u306f\u7279\u306b\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\n\nserverless.yml\nresources:\n  Resources:\n    ApiGatewayMethodV1MyFuncGet: # \u5bfe\u8c61\u306eLogicalID\u3092\u6307\u5b9a\n      Type: AWS::ApiGateway::Method\n      Properties:\n        HttpMethod: GET\n        AuthorizationType: AWS_IAM\n\n\n\n\u53c2\u8003\n\nhttp://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html\nhttp://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/permissions.html\n\n\nvpc\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u304c\u30011\u70b9\u30cf\u30de\u308a\u3069\u3053\u308d\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n[Serverless Framework]Lambda Function\u3092VPC\u306e\u4e2d\u306b\u5165\u308c\u308b\n\n\u4ee5\u4e0b\u306e\u5185\u5bb9\u3067\u30c7\u30d7\u30ed\u30a4\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u306e\u3067\u56f0\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\n\u3069\u3046\u3084\u3089 \u521d\u56de\u30c7\u30d7\u30ed\u30a4\u6642 \u306bvpc\u306e\u8a18\u8ff0\u304c\u3042\u308b\u3068\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\nserverless.yml\nservice: sls-sample\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  cfLogs: true\n\n  iamRoleStatements:\n    - Effect: \"Allow\"\n      Action:\n        - \"ec2:CreateNetworkInterface\"\n        - \"ec2:DescribeNetworkInterfaces\"\n        - \"ec2:DeleteNetworkInterface\"\n      Resource:\n        - \"*\"\n\nfunctions:\n  hello:\n    handler: handler.hello\n    vpc:\n      securityGroupIds:\n        - sg-xxxxxx\n      subnetIds:\n        - subnet-xxxxxx\n    events:\n      - http:\n          path: hogehoge\n          method: get\n          cors: true\n\n\n\u30a8\u30e9\u30fc\u5185\u5bb9\nAn error occurred while provisioning your stack: HelloLambdaFunction\n- Your access has been denied by EC2, please make sure\nyour function execution role have permission to CreateNetworkInterface.\nEC2 Error Code: UnauthorizedOperation. EC2 Error Message:\nYou are not authorized to perform this operation..\n\n\u4ee5\u4e0b\u306e\u7528\u306b\u4e00\u5ea6vpc\u8a2d\u5b9a\u90e8\u5206\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u5f8c\u3001\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u89e3\u9664\u3067\u518d\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3067\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n\nserverless.yml\nservice: sls-sample\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  cfLogs: true\n\n  iamRoleStatements:\n    - Effect: \"Allow\"\n      Action:\n        - \"ec2:CreateNetworkInterface\"\n        - \"ec2:DescribeNetworkInterfaces\"\n        - \"ec2:DeleteNetworkInterface\"\n      Resource:\n        - \"*\"\n\nfunctions:\n  hello:\n    handler:handler.hello\n    # \u3053\u3053\u3092\u4e00\u5ea6\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n    # vpc:\n    #   securityGroupIds:\n    #     - sg-xxxxxx\n    #   subnetIds:\n    #     - subnet-xxxxxx\n    events:\n      - http:\n          path: hogehoge\n          method: get\n          cors: true\n\n\n\u203b v1.2.1\u3067\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u6700\u65b0\u306ev1.3.0\u3067\u4fee\u6b63\u3055\u308c\u305f\u3088\u3046\u3067\u3059\n\n\u53c2\u8003\n\nhttps://serverless.com/framework/docs/providers/aws/guide/functions/#vpc-configuration\n\n\n\u305d\u306e\u4ed6\u30cf\u30de\u3063\u305f\u3068\u3053\u308d\n\u4ee5\u4e0b\u306e\u5185\u5bb9\u3067\u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u3068\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\nserverless.yml\nservice: sls-sample\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  cfLogs: true\n\nfunction:\n  foo:\n    handler: handler.foo\n  foobar:\n    handler: handler.foobar\n\n\n\u30a8\u30e9\u30fc\u5185\u5bb9\n  Serverless Error ---------------------------------------\n\n     An error occurred while provisioning your stack: IamPolicyLambdaExecution\n     - Template error: LogGroup /aws/lambda/sls-sample-dev-foo\n     doesn't exist.\n\n\n\u767a\u751f\u6761\u4ef6\u3068\u89e3\u6c7a\u65b9\u6cd5\n\u30d0\u30b0\u304c\u5831\u544a\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\u3069\u3046\u3084\u3089\u3001\u5b9a\u7fa9\u3057\u305ffunction\u540d\u304c\u4ed6\u306efunction\u540d\u306b\u542b\u307e\u308c\u308b(\u524d\u65b9\u4e00\u81f4)\u5834\u5408\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306f\u767a\u751f\u3057\u307e\u305b\u3093\u3002\n\nserverless.yml\nprovider:\n  name: sls-sample\n  runtime: nodejs4.3\n  cfLogs: true\n\nfunction:\n  foo:\n    handler: handler.foo\n  # \u5148\u982d\u306b'x'\u3092\u8ffd\u52a0\n  xfoobar:\n    handler: handler.foobar\n\n\n\n\u3067\u304d\u306a\u304b\u3063\u305f\u3053\u3068\n\nAPI Gateway\u306e\u30e2\u30c7\u30eb\u4f5c\u6210\u53ca\u3073\u30de\u30c3\u30d4\u30f3\u30b0\n\n\u73fe\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u3088\u3046\u3067\u3059\u3002plugin\u304c\u3042\u308a\u307e\u3057\u305f\u304c\nv1\u7cfb\u306f\u672a\u5bfe\u5fdc\u306e\u3088\u3046\u3067\u3059\u3002\n\u4eca\u56de\u306faws-cli\u53e9\u304f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u5bfe\u5fdc\u3057\u307e\u3057\u305f\u304c\u3001\u3082\u3063\u3068\u4ed6\u306b\u3044\u3044\u65b9\u304c\u3042\u308b\u305e\u3068\u3044\u3046\u65b9\u306f\u6559\u3048\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u3046\u308c\u3057\u3044\u3067\u3059\u3002\n\n\u6295\u7a3f\u76f4\u524d\u306b\u65b0\u305f\u306aplugin\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u6c17\u3065\u304d\u307e\u3057\u305f\u3002\n\u3053\u3061\u3089\u306f\u4eca\u5ea6\u8a66\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n9cookies/serverless-aws-models\n\nServerless Framework v1\u7cfb (v1.2.1)\u3092\u89e6\u3063\u3066\u307f\u305f\u306e\u3067\u3001\u3084\u3063\u305f\u3053\u3068\u306e\u30e1\u30e2\u3002\uff08\u7279\u306bresource\u307e\u308f\u308a\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306a\u3069\u57fa\u672c\u7684\u306a\u4f7f\u7528\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\n\n- [Serverless Framework v1.0\u306e\u4f7f\u3044\u65b9\u307e\u3068\u3081](http://qiita.com/horike37/items/b295a91908fcfd4033a2)\n\n\n# \u3084\u3063\u305f\u3053\u3068\n## S3\u30d0\u30b1\u30c3\u30c8\u3092\u4f5c\u308b\nweb\u30b5\u30a4\u30c8\u306e\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u304c\u76ee\u7684\u3060\u3063\u305f\u306e\u3067\u3001`WebsiteConfiguration`\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u7279\u306b\u30cf\u30de\u308a\u3069\u3053\u308d\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n``` serverless.yml\nresources:\n  Resources:\n    MyBucket:\n      Type: AWS::S3::Bucket\n      Properties:\n        BucketName: my-bucket\n        AccessControl: PublicRead\n        WebsiteConfiguration:\n          IndexDocument: index.html\n```\n\n### \u53c2\u8003\n- http://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html\n\n## DynamoDB\n### \u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\n\u3053\u3061\u3089\u3082CloudFormation\u306e\u30eb\u30fc\u30eb\u901a\u308a\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\n``` serverless.yml\nresources:\n  Resources:\n    MyTable:\n      Type: 'AWS::DynamoDB::Table'\n      DeletionPolicy: Retain\n      Properties:\n        TableName: MyTable\n        AttributeDefinitions:\n          -\n            AttributeName: Id\n            AttributeType: S\n        KeySchema:\n          -\n            AttributeName: Id\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n```\n\n#### \u53c2\u8003\n- http://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html\n\n### DynamoDB Streams\u3068\u30c8\u30ea\u30ac\u30fc\u306e\u7ba1\u7406\n#### Stream\u306e\u4f5c\u6210\n`StreamSpecification`\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n``` serverless.yml\nresources:\n  Resources:\n    MyTable:\n      Type: 'AWS::DynamoDB::Table'\n      DeletionPolicy: Retain\n      Properties:\n        TableName: MyTable\n        AttributeDefinitions:\n          -\n            AttributeName: Id\n            AttributeType: S\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        # \u3053\u3053\u3092\u8ffd\u52a0\n        StreamSpecification:\n          StreamViewType: NEW_IMAGE\n```\n\n#### \u30c8\u30ea\u30ac\u30fc\u306e\u8a2d\u5b9a\n\u30c8\u30ea\u30ac\u30fc\u306ffunction\u306eevent.stream\u306b\u4f5c\u6210\u3057\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u306earn\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```\nfunctions:\n  streamTest:\n    handler: handler.hello\n    events:\n      - stream:\n          arn: arn:aws:dynamodb:us-east-1:999999999999:table/MyTable/stream/2016-12-01T07:09:53.720\n```\n\narn\u3092\u76f4\u66f8\u304d\u3060\u3068\u5909\u66f4\u304c\u5165\u3063\u305f\u5834\u5408\u306b\u9762\u5012\u3067\u3059\u306d\u30fb\u30fb\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u7528\u306b\u95a2\u6570`Fn::GetAtt`\u3092\u4f7f\u3046\u5f62\u306b\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3059\u3002\n\n```\nfunctions:\n  streamTest:\n    handler: handler.hello\n    events:\n      - stream:\n          arn:\n            \"Fn::GetAtt\":\n              - MyTable\n              - Arn\n```\n\n\u3067\u3059\u304c\u3001\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\n\n```\n  Type Error ---------------------------------------------\n\n     EventSourceArn.split is not a function\n```\n\n\u3069\u3046\u3084\u3089[\u30d0\u30b0](https://github.com/serverless/serverless/issues/2365)\u306b\u3088\u308a\u52d5\u4f5c\u3057\u306a\u3044\u3088\u3046\u3067\u3059\u3002\nKinesis Stream\u3082\u540c\u69d8\u306e\u7406\u7531\u306b\u3088\u308a\u95a2\u6570\u306b\u3088\u308b\u6307\u5b9a\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\u73fe\u5728\u306farn\u3092\u76f4\u66f8\u304d\u3059\u308b\u3057\u304b\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n\u65e2\u306b[PR](https://github.com/serverless/serverless/pull/2488)\u304c\u51fa\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u5bfe\u5fdc\u3092\u5f85\u3061\u307e\u3057\u3087\u3046\u3002\n\n#### \u53c2\u8003\n- http://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-streamspecification.html\n\n\n## ApiGateway\u306e\u8a8d\u8a3c\u8a2d\u5b9a\n### \u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\n\n```\nfunctions:\n  # \u8a8d\u8a3c\u7528\u95a2\u6570\u3092\u5b9a\u7fa9\n  authFunc:\n    handler: handler.auth\n\n  hello:\n    handler: handler.hello\n    events:\n      - http:\n          path: hogehoge\n          method: get\n          # \u8a8d\u8a3c\u7528\u306e\u95a2\u6570\u3092\u6307\u5b9a\n          authorizer: authFunc\n```\n\n\u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u306e\u95a2\u6570\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f\u7701\u7565\u3057\u307e\u3059\u3002\n\n#### \u53c2\u8003\n- https://serverless.com/framework/docs/providers/aws/events/apigateway/#http-endpoints-with-custom-authorizers\n- http://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/use-custom-authorizer.html\n\n\n### IAM\u8a8d\u8a3c\n\u30ea\u30bd\u30fc\u30b9\u540d\u306fApiGatewayMethodV1MyFuncGet\u306e\u90e8\u5206\u306f\u5bfe\u8c61API\u306eLogicalID\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nfunction\u5074\u306e\u6307\u5b9a\u306f\u7279\u306b\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\n\n``` serverless.yml\nresources:\n  Resources:\n    ApiGatewayMethodV1MyFuncGet: # \u5bfe\u8c61\u306eLogicalID\u3092\u6307\u5b9a\n      Type: AWS::ApiGateway::Method\n      Properties:\n        HttpMethod: GET\n        AuthorizationType: AWS_IAM\n```\n\n#### \u53c2\u8003\n- http://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html\n- http://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/permissions.html\n\n## vpc\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u304c\u30011\u70b9\u30cf\u30de\u308a\u3069\u3053\u308d\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n- [[Serverless Framework]Lambda Function\u3092VPC\u306e\u4e2d\u306b\u5165\u308c\u308b](http://dev.classmethod.jp/etc/serverless-framework-lambda-function-run-in-vpc/)\n\n\u4ee5\u4e0b\u306e\u5185\u5bb9\u3067\u30c7\u30d7\u30ed\u30a4\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u306e\u3067\u56f0\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\n\u3069\u3046\u3084\u3089 **\u521d\u56de\u30c7\u30d7\u30ed\u30a4\u6642** \u306bvpc\u306e\u8a18\u8ff0\u304c\u3042\u308b\u3068\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\n``` serverless.yml\nservice: sls-sample\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  cfLogs: true\n\n  iamRoleStatements:\n    - Effect: \"Allow\"\n      Action:\n        - \"ec2:CreateNetworkInterface\"\n        - \"ec2:DescribeNetworkInterfaces\"\n        - \"ec2:DeleteNetworkInterface\"\n      Resource:\n        - \"*\"\n\nfunctions:\n  hello:\n    handler: handler.hello\n    vpc:\n      securityGroupIds:\n        - sg-xxxxxx\n      subnetIds:\n        - subnet-xxxxxx\n    events:\n      - http:\n          path: hogehoge\n          method: get\n          cors: true\n```\n\n\u30a8\u30e9\u30fc\u5185\u5bb9\n\n```\nAn error occurred while provisioning your stack: HelloLambdaFunction\n- Your access has been denied by EC2, please make sure\nyour function execution role have permission to CreateNetworkInterface.\nEC2 Error Code: UnauthorizedOperation. EC2 Error Message:\nYou are not authorized to perform this operation..\n```\n\n\u4ee5\u4e0b\u306e\u7528\u306b\u4e00\u5ea6vpc\u8a2d\u5b9a\u90e8\u5206\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u5f8c\u3001\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u89e3\u9664\u3067\u518d\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u3067\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n\n``` serverless.yml\nservice: sls-sample\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  cfLogs: true\n\n  iamRoleStatements:\n    - Effect: \"Allow\"\n      Action:\n        - \"ec2:CreateNetworkInterface\"\n        - \"ec2:DescribeNetworkInterfaces\"\n        - \"ec2:DeleteNetworkInterface\"\n      Resource:\n        - \"*\"\n\nfunctions:\n  hello:\n    handler:handler.hello\n    # \u3053\u3053\u3092\u4e00\u5ea6\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n    # vpc:\n    #   securityGroupIds:\n    #     - sg-xxxxxx\n    #   subnetIds:\n    #     - subnet-xxxxxx\n    events:\n      - http:\n          path: hogehoge\n          method: get\n          cors: true\n```\n\n**\u203b v1.2.1\u3067\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u6700\u65b0\u306ev1.3.0\u3067\u4fee\u6b63\u3055\u308c\u305f\u3088\u3046\u3067\u3059**\n\n### \u53c2\u8003\n- https://serverless.com/framework/docs/providers/aws/guide/functions/#vpc-configuration\n\n## \u305d\u306e\u4ed6\u30cf\u30de\u3063\u305f\u3068\u3053\u308d\n\u4ee5\u4e0b\u306e\u5185\u5bb9\u3067\u30c7\u30d7\u30ed\u30a4\u3092\u5b9f\u884c\u3059\u308b\u3068\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n``` serverless.yml\nservice: sls-sample\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  cfLogs: true\n  \nfunction:\n  foo:\n    handler: handler.foo\n  foobar:\n    handler: handler.foobar\n```\n\n\u30a8\u30e9\u30fc\u5185\u5bb9\n\n```\n  Serverless Error ---------------------------------------\n\n     An error occurred while provisioning your stack: IamPolicyLambdaExecution\n     - Template error: LogGroup /aws/lambda/sls-sample-dev-foo\n     doesn't exist.\n```\n\n### \u767a\u751f\u6761\u4ef6\u3068\u89e3\u6c7a\u65b9\u6cd5\n[\u30d0\u30b0](https://github.com/serverless/serverless/issues/2614)\u304c\u5831\u544a\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\u3069\u3046\u3084\u3089\u3001\u5b9a\u7fa9\u3057\u305ffunction\u540d\u304c\u4ed6\u306efunction\u540d\u306b\u542b\u307e\u308c\u308b(\u524d\u65b9\u4e00\u81f4)\u5834\u5408\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306f\u767a\u751f\u3057\u307e\u305b\u3093\u3002\n\n``` serverless.yml\nprovider:\n  name: sls-sample\n  runtime: nodejs4.3\n  cfLogs: true\n  \nfunction:\n  foo:\n    handler: handler.foo\n  # \u5148\u982d\u306b'x'\u3092\u8ffd\u52a0\n  xfoobar:\n    handler: handler.foobar\n```\n\n## \u3067\u304d\u306a\u304b\u3063\u305f\u3053\u3068\n- API Gateway\u306e\u30e2\u30c7\u30eb\u4f5c\u6210\u53ca\u3073\u30de\u30c3\u30d4\u30f3\u30b0\n\n\u73fe\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u3088\u3046\u3067\u3059\u3002[plugin](https://github.com/HyperBrain/serverless-models-plugin)\u304c\u3042\u308a\u307e\u3057\u305f\u304c\nv1\u7cfb\u306f\u672a\u5bfe\u5fdc\u306e\u3088\u3046\u3067\u3059\u3002\n\u4eca\u56de\u306faws-cli\u53e9\u304f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u5bfe\u5fdc\u3057\u307e\u3057\u305f\u304c\u3001\u3082\u3063\u3068\u4ed6\u306b\u3044\u3044\u65b9\u304c\u3042\u308b\u305e\u3068\u3044\u3046\u65b9\u306f\u6559\u3048\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u3046\u308c\u3057\u3044\u3067\u3059\u3002\n\n---\n\n\u6295\u7a3f\u76f4\u524d\u306b\u65b0\u305f\u306aplugin\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u6c17\u3065\u304d\u307e\u3057\u305f\u3002\n\u3053\u3061\u3089\u306f\u4eca\u5ea6\u8a66\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n- [9cookies/serverless-aws-models](https://github.com/9cookies/serverless-aws-models)\n\n", "tags": ["serverless", "AWS", "lambda", "APIGateway"]}