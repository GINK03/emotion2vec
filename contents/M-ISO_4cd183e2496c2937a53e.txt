{"tags": ["JavaScript", "es6", "babel", "gulp", "ESLint"], "context": "\n\nESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u3056\u3063\u304f\u308a\u89e3\u8aac[\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u7de8]\nESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u300c\u3056\u3063\u304f\u308a\u3057\u305f\u306e\u300d\u306a\u3044\u306e\u304b\u3001\u3068\u601d\u3063\u3066\u3050\u3050\u3057\u3066\u3082\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u81ea\u5206\u306e\u52c9\u5f37\u306e\u305f\u3081\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u3002\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u306f\u6570\u3042\u308b\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u4e2d\u306e\u300c\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u7de8\u300d\u3067\u3059\u3002\n\u203b\u3053\u3061\u3089\u306f2015/9/25\u65e5\u306e\u8a18\u4e8b\u3067\u3059\u3002\uff08ESLint\u3055\u3093 v1.5.1 released 22 September 2015\uff09\n\u73fe\u6642\u70b9(2017/1/24)\u306f3.14\u3067\u3059\u3002\u8fd1\u3044\u3046\u3061\u65b0\u305f\u306b\u52a0\u7b46\u3057\u3066\u3053\u3061\u3089\u306b\u66f4\u65b0\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\u4ed6\u30ab\u30c6\u30b4\u30ea\u30fc\u306f\u3053\u3061\u3089\nESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u3056\u3063\u304f\u308a\u89e3\u8aac[\u53ef\u80fd\u6027\u3042\u308b\u30a8\u30e9\u30fc\u7de8]\nESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u3056\u3063\u304f\u308a\u89e3\u8aac[\u30b9\u30bf\u30a4\u30eb\u7de8]\nESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u3056\u3063\u304f\u308a\u89e3\u8aac[ES6\u7de8]\nESLint\u304c\u52e7\u3081\u308b\u300c\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u300d\u306a\u306e\u3067\u3056\u3063\u3068\u8aad\u3093\u3067\u3044\u308b\u3060\u3051\u3067\u300c\u3042\u3001\u306a\u308b\u307b\u3069\u306a\u3001\u3053\u3046\u3044\u3046\u66f8\u304d\u65b9\u304c\u3044\u3044\u3068\u3055\u308c\u3066\u308b\u3093\u3060\u3002\u3002\u300d\u3063\u3066\u611f\u3058\u307e\u3057\u305f\u3002\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u203b\u3053\u3061\u3089\u306f2015/9/26\u65e5\u306e\u8a18\u4e8b\u3067\u3059\u3002\uff08ESLint v1.5.1 released 22 September 2015\uff09\n\u203b\u3082\u3057\u8a73\u3057\u304f\u77e5\u308a\u305f\u304b\u3063\u305f\u3089\u300c\u898b\u51fa\u3057\u304c\u30ea\u30f3\u30af\u300d\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u898b\u306b\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u306d\u3002\n\u4ee5\u4e0b\u6587\u7ae0\u9577\u3044\u306e\u3067\u6ce8\u610f(\u3082\u3057\u63a2\u3057\u3066\u3044\u308b\u30eb\u30fc\u30eb\u3042\u3063\u305f\u3089cmd+F\u691c\u7d22\u3057\u305f\u3089\u3044\u3044\u304b\u3082\u306d)\u3001ABC\u9806\u3002\n\naccessor-pairs\n\nEnforces getter/setter pairs in objects\n\u30bb\u30c3\u30bf\u30fc\u3068\u30b2\u30c3\u30bf\u30fc\u306e\u30da\u30a2\u30fc\u3092\u5f37\u5236\u3059\u308b\n// Bad\nvar o = {\n    set a(value) {\n        this.val = value;\n    }\n};\n\n// Good\nvar o = {\n    set a(value) {\n        this.val = value;\n    },\n    get a() {\n        return this.val;\n    }\n};\n\n\nblock-scoped-var\n\ntreat var statements as if they were block scoped\n\u30d6\u30ed\u30c3\u30af\u5185\u3067\u5ba3\u8a00\u3055\u308c\u305f\u5909\u6570\u306e\u5b9f\u884c\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u6271\u3044\n/*eslint block-scoped-var: 2*/\nfunction doSomething() {\n    if (true) {\n        var build = true;\n    }\n\n    console.log(build); /*error \"build\" used outside of binding context.*/\n}\n////////////////////////////\n//good\n\nfunction doSomething() {\n    var build;\n\n    if (true) {\n        build = true;\n    }\n\n    console.log(build);//ok\n}\n\n\ncomplexity\n\nspecify the maximum cyclomatic complexity allowed in a program\n\u5faa\u74b0\u7684\u8907\u96d1\u5ea6\u306e\u3057\u304d\u3044\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\nfunction a(x) {\n    if (true) {\n        return x; // 1st path\n    } else if (false) {\n        return x+1; // 2nd path\n    } else {\n        return 4; // 3rd path\n    }\n}\n\n\nconsistent-return\n\nrequire return statements to either always or never specify values\n\u3069\u306e\u6642\u70b9\u3067\u3082\u5024\u3092\u8fd4\u3055\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u304b\u3089\u3069\u3061\u3089\u304b\u5024\u3092\u4e00\u65b9\u306f\u8fd4\u3059\u3001\u3082\u3057\u304f\u306f\u4e21\u65b9\u8fd4\u3059\u3001\u306e\u6307\u5b9a\nfunction doSomething(condition) {\n\n    if (condition) {\n        return true;\n    } else {\n        return;      /*error Expected a return value.*/\n    }\n}\n//ok\nfunction doSomething(condition) {\n\n    if (condition) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\ncurly\n\nspecify curly brace conventions for all control statements\n\u3059\u3079\u3066\u306e\u5236\u5fa1\u6587\u306e\u4e2d\u62ec\u5f27\u306e\u898f\u5247\u3092\u6307\u5b9a\u3057\u307e\u3059\nif (foo) foo++; /*error Expected { after 'if' condition.*/\n\nwhile (bar)     /*error Expected { after 'while' condition.*/\n    baz();\n//ok\nif (foo) {\n    foo++;\n}\n\nwhile (bar) {\n    baz();\n}\n\n\ndefault-case\n\nrequire default case in switch statements\nswitch\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b1\u30fc\u30b9\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\nswitch (a) {       /*error Expected a default case.*/\n    case 1:\n        /* code */\n        break;\n}\n//ok\nswitch (foo) {\n    case 1:\n        doSomething();\n        break;\n\n    case 2:\n        doSomething();\n        break;\n\n    default:\n        // do nothing\n}\n\n\ndot-notation\n\nencourages use of dot notation whenever possible\n\u30c9\u30c3\u30c8\u8868\u8a18\u53ef\u80fd\u306a\u9650\u308a\u306e\u4f7f\u7528\u3092\u5968\u52b1\n/*eslint dot-notation: 2*/\nvar x = foo.bar;\n\nvar x = foo[bar];    // Property name is a variable, square-bracket notation required\n\n\ndot-location\n\nenforces consistent newlines before or after dots\n\u524d\u307e\u305f\u306f\u30c9\u30c3\u30c8\u306e\u5f8c\u306b\u4e00\u8cab\u3057\u305f\u6539\u884c\u3092\u5f37\u5236\nvar foo = object\n.property;       /*error Expected dot to be on same line as object.*/\n\n\neqeqeq\n\nrequire the use of === and !== (fixable)\n===\u3068!==\u306e\u4f7f\u7528\nif (x == 42) { }                     /*error Expected '===' and instead saw '=='.*/\n\nif (\"\" == text) { }                  /*error Expected '===' and instead saw '=='.*/\n\nif (obj.getStuff() != undefined) { } /*error Expected '!==' and instead saw '!='.*/\n/* eslint eqeqeq: [2, \"smart\"] */\ntypeof foo == 'undefined'\n'hello' != 'world'\n0 == 0\ntrue == true\nfoo == null\n\n\n\nguard-for-in\n\nmake sure for-in loops have an if statement\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u30c1\u30a7\u30fc\u30f3\u3067\u7d99\u627f\u3055\u308c\u3066\u3044\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u542b\u307e\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u3078\u306e\u5bfe\u51e6\nfor (key in foo) {    /*error The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype.*/\n    doSomething(key);\n}\n//ok\nfor (key in foo) {\n    if ({}.hasOwnProperty.call(foo, key)) {\n        doSomething(key);\n    }\n}\n\n\n\nno-alert\n\ndisallow the use of alert, confirm, and prompt\n\u30a2\u30e9\u30fc\u30c8\u3001\u30b3\u30f3\u30d5\u30a1\u30fc\u30e0\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u306a\u3044\nalert(\"here!\");                          /*error Unexpected alert.*/\nconfirm(\"Are you sure?\");                /*error Unexpected confirm.*/\nprompt(\"What's your name?\", \"John Doe\"); /*error Unexpected prompt.*/\n\n\nno-caller\n\ndisallow use of arguments.caller or arguments.callee\narguments.caller\u307e\u305f\u306farguments.callee\u3092\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n/*eslint no-caller: 2*/\nfunction foo(n) {\n    if (n <= 0) {\n        return;\n    }\n\n    arguments.callee(n - 1);   /*error Avoid arguments.callee.*/\n}\n\n[1,2,3,4,5].map(function(n) {\n    return !(n > 1) ? 1 : arguments.callee(n - 1) * n; /*error Avoid arguments.callee.*/\n});\n\n\nno-div-regex\n\ndisallow division operators explicitly at beginning of regular expression\n\u6b63\u898f\u8868\u73fe\u306e\u5148\u982d\u306b\u660e\u793a\u7684\u306b\u9664\u7b97\u6f14\u7b97\u5b50\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\nfunction bar() { return /=foo/; } /*error A regular expression literal can be confused with '/='.*/\n//ok\nfunction bar() { return /\\=foo/; }\n\n\nno-else-return\n\ndisallow else after a return in an if\n\u3082\u3057\u30d6\u30ed\u30c3\u30af\u304creturn\u6587\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u4ed6\u306e\u30d6\u30ed\u30c3\u30af\u304c\u4e0d\u8981\u3068\u306a\u308a\u307e\u3059yo\u3002\n\u305d\u306e\u5185\u5bb9\u306f\u3001\u30d6\u30ed\u30c3\u30af\u306e\u5916\u306b\u914d\u7f6e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059yo\u3002\nfunction foo() {\n    if (x) {\n        return y;\n    } else {            /*error Unexpected 'else' after 'return'.*/\n        return z;\n    }\n}\n//ok\nfunction foo() {\n    if (x) {\n        return y;\n    }\n\n    return z;\n}\n\n\nno-empty-label\n\ndisallow use of labels for anything other than loops and switches\n\u30eb\u30fc\u30d7\u3084\u30b9\u30a4\u30c3\u30c1\u4ee5\u5916\u306e\u30e9\u30d9\u30eb\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u306a\u3044\nlabeled:     /*error Unexpected label \"labeled\"*/\nvar x = 10;\n\n\nno-eq-null\n\ndisallow comparisons to null without a type-checking operator\n\u578b\u30c1\u30a7\u30c3\u30af\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u306a\u3057null\u3068\u306e\u6bd4\u8f03\u3092\u7981\u6b62\nif (foo == null) {     /*error Use \u2018===\u2019 to compare with \u2018null\u2019.*/\n  bar();\n}\nwhile (qux != null) {  /*error Use \u2018===\u2019 to compare with \u2018null\u2019.*/\n  baz();\n}\n//ok\nif (foo === null) {\n  bar();\n}\nwhile (qux !== null) {\n  baz();\n}\n\n\nno-eval\n\ndisallow use of eval()\neval\u306e\u4f7f\u7528\u3092\u8a31\u3055\u306a\u3044\u3088\u3042\u305f\u3057\u3083\nvar obj = { x: \"foo\" },\n    key = \"x\",\n    value = eval(\"obj.\" + key); /*error eval can be harmful.*/\n//ok\nvar obj = { x: \"foo\" },\n    key = \"x\",\n    value = obj[key];\n\n\nno-extend-native\n\ndisallow adding to native types\n\u30cd\u30a4\u30c6\u30a3\u30d6\u578b\u3078\u306e\u8ffd\u52a0\u7981\u6b62\n\u3058\u3083\u3042\u3069\u3046\u3059\u308b\u306e\u304b\u3063\u3066\u3001hasOwnProperty\u3068for\u30eb\u30fc\u30d7\u5185\u90e8\u3092\u30e9\u30c3\u30d7\u3057\u3066\u306d\n//disallow\nObject.prototype.a = \"a\";\nObject.defineProperty(Array.prototype, \"times\", {value: 999});\n\n//\u3053\u308c\u3089\u306f\u30c1\u30a7\u30c3\u30af\u3055\u308c\u306a\u3044\nvar x = Object; x.prototype.thing = a;\neval(\"Array.prototype.forEach = 'muhahaha'\");\nwith(Array) { prototype.thing = 'thing'; };\nwindow.Function.prototype.bind = 'tight';\n\n\n\nno-extra-bind\n\ndisallow unnecessary function binding\n\u7d50\u5408\u4e0d\u8981\u306a\u6a5f\u80fd\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3001\u7279\u5b9a\u306e\u5024\u306b\u5f15\u6570\u3092\u7d50\u5408\u3057\u3001\u3053\u306e\u5024\u3092\u7279\u5b9a\u3057\u3001\u3042\u308b\u95a2\u6570\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\u3053\u306e\u5024\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u95a2\u6570\u304c\u5b9f\u969b\u306b\u305d\u306e\u95a2\u6570\u672c\u4f53\u3067\u3053\u308c\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3059\u3002\n\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u306e\u9014\u4e2d\u3067bind\u306e\u5fc5\u8981\u304c\u306a\u3044\u3068\u3053\u308d\u304c\u6b8b\u3063\u305f\u308a\u3059\u308b\u6b8b\u308b\u3068\u4e0d\u8981\u306a\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u767a\u751f\u3059\u308b\nvar boundGetName = (function getName() {\n    return this.name;\n}).bind({ name: \"ESLint\" });\nconsole.log(boundGetName());      // \"ESLint\"\n\n// useless bind\nvar boundGetName = (function getName() {\n    return \"ESLint\";\n}).bind({ name: \"ESLint\" });//\u3068\u3063\u3066\u30aa\u30c3\u30b1\u30fc\n\nconsole.log(boundGetName());      // \"ESLint\"\n\n\nno-fallthrough\n\ndisallow fallthrough of case statements (recommended)\ncase\u6587\u306e\u30d5\u30a9\u30fc\u30eb\u30b9\u30eb\u30fc\uff08\u63a8\u5968)\nswitch(foo) {\n    case 1:\n        doSomething();\n\n    case 2:\n        doSomethingElse();\n}\n//\u4e0a\u306e\u5834\u5408foo\u304c1\u306e\u5834\u54082\u3082\u901a\u308b\nswitch(foo) {\n    case 1:\n        doSomething();\n        break;//good\n\n    case 2:\n        doSomethingElse();\n}\n\n\n\nno-floating-decimal\n\ndisallow the use of leading or trailing decimal points in numeric literals\n\u5148\u982d\u307e\u305f\u306f\u6570\u5024\u30ea\u30c6\u30e9\u30eb\u3067\u5c0f\u6570\u70b9\u3092\u5f8c\u7d9a\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\nvar num = .5;  /*error A leading decimal point can be confused with a dot.*/\nvar num = 2.;  /*error A trailing decimal point can be confused with a dot.*/\nvar num = -.7; /*error A leading decimal point can be confused with a dot.*/\n\n\nno-implicit-coercion\n\ndisallow the type conversions with shorter notations\n\u77ed\u3044\u8868\u8a18\u3067\u578b\u5909\u63db\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n//\u3053\u3046\u3044\u3046\u3084\u3064\nvar b = !!foo;\nvar b = ~foo.indexOf(\".\");\nvar n = +foo;\nvar n = 1 * foo;\nvar s = \"\" + foo;\n//\u7f6e\u304d\u63db\u3048\u308c\u308b\nvar b = Boolean(foo);\nvar b = foo.indexOf(\".\") !== -1;\nvar n = Number(foo);\nvar n = Number(foo);\nvar s = String(foo);\n\n\n\nno-implied-eval\n\ndisallow use of eval()-like methods\neval()\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u306a\u3044\n//\u3053\u3046\u3044\u3046\u3084\u3064\u3002setTimeout(), setInterval() or execScript()\nsetTimeout(\"alert('Hi!');\", 100);\n//good\nsetTimeout(function() {\n    alert(\"Hi!\");\n}, 100);\n\n\nno-invalid-this\n\ndisallow this keywords outside of classes or class-like objects\n\u30af\u30e9\u30b9\u307e\u305f\u306f\u30af\u30e9\u30b9\u306e\u3088\u3046\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5916\u5074\u3067\u3001this\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3046\u306e\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\u3051\u3063\u3053\u3046\u91cd\u8981\u3060\u3068\u601d\u3063\u3066\u3044\u308b\u306e\u3067\u5168\u90e8\u306e\u305b\u308b\u3002\u3002\n/*eslint no-invalid-this: 2*/\nthis.a = 0;            /*error Unexpected `this`.*/\nbaz(() => this);       /*error Unexpected `this`.*/\n\n(function() {\n    this.a = 0;        /*error Unexpected `this`.*/\n    baz(() => this);   /*error Unexpected `this`.*/\n})();\n\nfunction foo() {\n    this.a = 0;        /*error Unexpected `this`.*/\n    baz(() => this);   /*error Unexpected `this`.*/\n}\n\nvar foo = function() {\n    this.a = 0;        /*error Unexpected `this`.*/\n    baz(() => this);   /*error Unexpected `this`.*/\n};\n\nfoo(function() {\n    this.a = 0;        /*error Unexpected `this`.*/\n    baz(() => this);   /*error Unexpected `this`.*/\n});\n\nobj.foo = () => {\n    // `this` of arrow functions is the outer scope's.\n    this.a = 0;        /*error Unexpected `this`.*/\n};\n\nvar obj = {\n    aaa: function() {\n        return function foo() {\n            // There is in a method `aaa`, but `foo` is not a method.\n            this.a = 0;      /*error Unexpected `this`.*/\n            baz(() => this); /*error Unexpected `this`.*/\n        };\n    }\n};\n\nclass Foo {\n    static foo() {\n        this.a = 0;      /*error Unexpected `this`.*/\n        baz(() => this); /*error Unexpected `this`.*/\n    }\n}\n\nfoo.forEach(function() {\n    this.a = 0;          /*error Unexpected `this`.*/\n    baz(() => this);     /*error Unexpected `this`.*/\n});\n\n/////////////////////////////////////////////////////////////////////\n//\u4ee5\u4e0b\u306f\u554f\u984c\u3067\u306f\u306a\u3044\n////////////////////////////////////////////////////////////////////\nfunction Foo() {\n    // OK, this is in a legacy style constructor.\n    this.a = 0;\n    baz(() => this);\n}\n\nclass Foo {\n    constructor() {\n        // OK, this is in a constructor.\n        this.a = 0;\n        baz(() => this);\n    }\n}\n\nvar obj = {\n    foo: function foo() {\n        // OK, this is in a method (this function is on object literal).\n        this.a = 0;\n    }\n};\n\nvar obj = {\n    foo() {\n        // OK, this is in a method (this function is on object literal).\n        this.a = 0;\n    }\n};\n\nvar obj = {\n    get foo() {\n        // OK, this is in a method (this function is on object literal).\n        return this.a;\n    }\n};\n\nvar obj = Object.create(null, {\n    foo: {value: function foo() {\n        // OK, this is in a method (this function is on object literal).\n        this.a = 0;\n    }}\n});\n\nObject.defineProperty(obj, \"foo\", {\n    value: function foo() {\n        // OK, this is in a method (this function is on object literal).\n        this.a = 0;\n    }\n});\n\nObject.defineProperties(obj, {\n    foo: {value: function foo() {\n        // OK, this is in a method (this function is on object literal).\n        this.a = 0;\n    }}\n});\n\nfunction Foo() {\n    this.foo = function foo() {\n        // OK, this is in a method (this function assigns to a property).\n        this.a = 0;\n        baz(() => this);\n    };\n}\n\nobj.foo = function foo() {\n    // OK, this is in a method (this function assigns to a property).\n    this.a = 0;\n};\n\nFoo.prototype.foo = function foo() {\n    // OK, this is in a method (this function assigns to a property).\n    this.a = 0;\n};\n\nclass Foo {\n    foo() {\n        // OK, this is in a method.\n        this.a = 0;\n        baz(() => this);\n    }\n}\n\nvar foo = (function foo() {\n    // OK, the `bind` method of this function is called directly.\n    this.a = 0;\n}).bind(obj);\n\nfoo.forEach(function() {\n    // OK, `thisArg` of `.forEach()` is given.\n    this.a = 0;\n    baz(() => this);\n}, thisArg);\n\n/** @this Foo */\nfunction foo() {\n    // OK, this function has a `@this` tag in its JSDoc comment.\n    this.a = 0;\n}\n\n\n\nno-iterator\n\nFoo.prototype.__iterator__ = function() { /*error Reserved name '__iterator__'.*/\n    return new FooIterator(this);\n};\nfoo.__iterator__ = function () {};        /*error Reserved name '__iterator__'.*/\nfoo[\"__iterator__\"] = function () {};     /*error Reserved name '__iterator__'.*/\n\n//ok\n/*eslint no-iterator: 2*/\n\nvar __iterator__ = foo; // Not using the `__iterator__` property.\n\n\n\nno-labels\n\ndisallow use of labeled statements\n\u30e9\u30d9\u30eb\u4ed8\u304d\u6587\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\u30d6\u30ec\u30a4\u30af\u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3057\u3066\u30eb\u30fc\u30d7\u5468\u308a\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u4f7f\u3046\u3088\nlabel:                   /*error Unexpected labeled statement.*/\n    while(true) {\n        // ...\n    }\n\nlabel:                   /*error Unexpected labeled statement.*/\n    while(true) {\n        break label;     /*error Unexpected label in break statement.*/\n    }\n\nlabel:                  /*error Unexpected labeled statement.*/\n    while(true) {\n        continue label; /*error Unexpected label in continue statement.*/\n    }\n//ok\nvar f = {\n    label: \"foo\"\n};\n\nwhile (true) {\n    break;\n}\n\nwhile (true) {\n    continue;\n}\n\n\nno-loop-func\n\ndisallow creation of functions within loops\n\u30eb\u30fc\u30d7\u5185\u306e\u95a2\u6570\u306e\u4f5c\u6210\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\nfor (var i=10; i; i--) {\n    (function() { return i; })();     /*error Don't make functions within a loop*/\n}\n//ok\nvar a = function() {};\nfor (var i=10; i; i--) {\n    a();\n}\n\n\n\n\n\nno-multi-spaces\n\ndisallow use of multiple spaces\n\u8907\u6570\u306e\u30b9\u30da\u30fc\u30b9\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\nif(foo  === \"bar\") {}//\u30b9\u30da\u30fc\u30b9\u8907\u6570\nvar a =  1;            /*error Multiple spaces found before '1'.*/\n\n//ok\nif(foo === \"bar\") {}\nvar a = 1;\n\n\n\nno-multi-str\n\ndisallow use of multiline strings\n\u8907\u6570\u884c\u306e\u6587\u5b57\u5217\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\u30b9\u30e9\u30c3\u30b7\u30e5\u3092\u5229\u7528\u3057\u3066\u8907\u6570\u884c\u306b\u307e\u305f\u304c\u3063\u3066\u4f5c\u308b\u6587\u5b57\u5217\u306e\u3053\u3068\nvar x = \"Line 1 \\\n         Line 2\";//\u3053\u3046\u3044\u3046\u306e\u3092\u8a31\u53ef\u3057\u306a\u3044\n\n\nno-native-reassign\n\ndisallow reassignments of native objects\n \u30cd\u30a4\u30c6\u30a3\u30d6\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u518d\u5272\u308a\u5f53\u3066\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n \u305d\u308c\u306b\u4ee3\u5165\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u304d\u30a8\u30e9\u30fc\nString = new Object(); /*error String is a read-only native object.*/\n\n\nno-new-func\n\ndisallow use of new operator for Function object\nFunction\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u305f\u3081\u306e\u65b0\u3057\u3044\u6f14\u7b97\u5b50\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\nvar x = new Function(\"a\", \"b\", \"return a + b\"); /*error The Function constructor is eval.*/\nvar x = Function(\"a\", \"b\", \"return a + b\");     /*error The Function constructor is eval.*/\n\n\nno-new-wrappers\n\ndisallows creating new instances of String,Number, and Boolean\n\u6587\u5b57\u5217\u3001\u6570\u5024\u3001\u30d6\u30fc\u30eb\u306e\u65b0\u3057\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u8a31\u53ef\u3057\u307e\u305b\u3093\nvar stringObject = new String(\"Hello world\"); /*error Do not use String as a constructor.*/\nvar numberObject = new Number(33);            /*error Do not use Number as a constructor.*/\nvar booleanObject = new Boolean(false);       /*error Do not use Boolean as a constructor.*/\nvar stringObject = new String;                /*error Do not use String as a constructor.*/\nvar numberObject = new Number;                /*error Do not use Number as a constructor.*/\nvar booleanObject = new Boolean;              /*error Do not use Boolean as a constructor.*/\n\n//OK\nvar text = String(someValue);\nvar num = Number(someValue);\nvar object = new MyString();\n\n\nno-new\n\ndisallow use of the new operator when not part of an assignment or comparison\n\u3069\u3053\u306b\u3082\u53c2\u7167\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u306a\u3044\u3084\u3064\u3060\u3081\u3002\u7834\u68c4\u3055\u308c\u308b\u3057\nnew Thing(); /*error Do not use 'new' for side effects.*/\n\n//OK\nvar thing = new Thing();\nThing();\n\n\nno-octal-escape\n\ndisallow use of octal escape sequences in string literals, such as\n\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u30678\u9032\u6570\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\nvar foo = \"Copyright \\251\"; /*error Don't use octal: '\\251'. Use '\\u....' instead.*/\n\n//ok\nvar foo = \"Copyright \\u00A9\";   // unicode\nvar foo = \"Copyright \\xA9\";     // hexadecimal\n\n\nno-octal\n\ndisallow use of octal literals (recommended)\n\u30aa\u30af\u30bf\u30eb\u30ea\u30c6\u30e9\u30eb\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u306a\u3044\nvar num = 071;       /*error Octal literals should not be used.*/\n//ok\nvar num  = \"071\";\n\n\nno-param-reassign\n\ndisallow reassignment of function parameters\n\u95a2\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u518d\u5272\u308a\u5f53\u3066\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\nfunction foo(bar) {\n    bar = 13;       /*error Assignment to function parameter 'bar'.*/\n}\nfunction foo(bar) {\n    bar++;          /*error Assignment to function parameter 'bar'.*/\n}\n\n//ok\n/*eslint no-param-reassign: 2*/\nfunction foo(a) {\n    var b = a;\n}\n\n\nno-process-env\n\ndisallow use of process.env\nprocess.env\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\u3002node.js\u306e\u3084\u3064\nif(process.env.NODE_ENV === \"development\") { /*error Unexpected use of process.env.*/\n    //...\n}\n\n//ok\nvar config = require(\"./config\");\n\nif(config.env === \"development\") {\n    //...\n}\n\n\nno-proto\n\ndisallow usage of proto property\n//\u30de\u30fc\u30af\u30c0\u30a6\u30f3\u304a\u304b\u3057\u304f\u306a\u308b\u306e\u3067\u3053\u3063\u3061\u306b\u304b\u3044\u3066\u3044\u307e\u3059\u3002\n//__proto__\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\u3002getPrototypeOf\u3092\u4f7f\u304a\u3046\u3002\n\nvar a = obj.__proto__;    /*error The '__proto__' property is deprecated.*/\nvar a = obj[\"__proto__\"]; /*error The '__proto__' property is deprecated.*/\n\n//ok\n/*eslint no-proto: 2*/\nvar a = Object.getPrototypeOf(obj);\n\n\n\nno-redeclare\n\ndisallow declaring the same variable more than once (recommended)\n\u8907\u6570\u56de\u540c\u3058\u5909\u6570\u3092\u5ba3\u8a00\u8a31\u53ef\u3057\u306a\u3044\u3002\u521d\u671f\u5316\u306e\u6df7\u4e71\u3092\u3055\u3051\u308b\u305f\u3081\nvar a = 3;\nvar a = 10; /*error \"a\" is already defined*/\n\n//ok\nvar a = 3;\n// ...\na = 10;\n\n\nno-return-assign\n\ndisallow use of assignment in return statement\nreturn\u6587\u3067\u5272\u308a\u5f53\u3066\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\u3044\u308d\u3044\u308d\u30aa\u30d7\u30b7\u30e7\u30f3\u3042\u308b\u307f\u305f\u3044\u3060\u304b\u3089\u30ea\u30f3\u30af\u5148\u306b\u3068\u3093\u3067\u306d\nfunction doSomething() {\n    return foo = bar + 2; /*error Return statement should not contain assignment.*/\n}\nfunction doSomething() {\n    return foo += 2;      /*error Return statement should not contain assignment.*/\n}\n\n//ok\nfunction doSomething() {\n    return foo == bar + 2;\n}\nfunction doSomething() {\n    return foo === bar + 2;\n}\nfunction doSomething() {\n    return (foo = bar + 2);\n}\n\n\n\nno-script-url\n\ndisallow use of javascript: urls\nURL\u306feval\u306e\u4e00\u5f62\u614b\u3068\u3057\u3066\u3044\u3066\u6e21\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306fURL\u89e3\u6790\u3001eval\u51e6\u7406\u3055\u308c\u3066\u30d6\u30e9\u30a6\u30b6\u306b\u3088\u3063\u3066\u306e\u8a55\u4fa1\u306b\u306a\u308b\u304b\u3089\u307f\u305f\u3044\nlocation.href = \"javascript:void(0)\"; /*error Script URL is a form of eval.*/\n\n\nno-self-compare\n\ndisallow comparisons where both sides are exactly the same\n\u4e21\u5074\u304c\u307e\u3063\u305f\u304f\u540c\u3058\u3067\u3059\u6bd4\u8f03\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n/*eslint no-self-compare: 2*/\nvar x = 10;\nif (x === x) { /*error Comparing to itself is potentially pointless.*/\n    x = 20;\n}\n\n\nno-sequences\n\ndisallow use of the comma operator\n\u30b3\u30f3\u30de\u6f14\u7b97\u5b50\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\nfoo = doSomething, val;              /*error Unexpected use of comma operator.*/\ndo {} while (doSomething(), !!test); /*error Unexpected use of comma operator.*/\nfor (; doSomething(), !!test; );     /*error Unexpected use of comma operator.*/\nif (doSomething(), !!test);          /*error Unexpected use of comma operator.*/\nswitch (val = foo(), val) {}         /*error Unexpected use of comma operator.*/\nwhile (val = foo(), val < 42);       /*error Unexpected use of comma operator.*/\nwith (doSomething(), val) {}         /*error Unexpected use of comma operator.*/\n\n//ok\n/*eslint no-sequences: 2*/\nfoo = (doSomething(), val);\n(0,eval)(\"doSomething();\");\ndo {} while ((doSomething(), !!test));\nfor (i = 0, j = 10; i < j; i++, j--);\nif ((doSomething(), !!test));\nswitch ((val = foo(), val)) {}\nwhile ((val = foo(), val < 42));\n// with ((doSomething(), val)) {}\n\n\n\nno-throw-literal\n\nrestrict what can be thrown as an exception\n\u4f8b\u5916\u3068\u3057\u3066\u30b9\u30ed\u30fc\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3082\u306e\u3092\u5236\u9650\u3057\u307e\u3059\n\u3053\u308c\u306f\u3001\u552f\u4e00\u306eError\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u81ea\u4f53\u307e\u305f\u306f\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u4f8b\u5916\u306e\u57fa\u5e95\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066Error\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u7528\u3057\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30b9\u30ed\u30fc\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3068\u8003\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n Error\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u57fa\u672c\u7684\u306a\u5229\u70b9\u306f\u3001\u81ea\u52d5\u7684\u306b\u3001\u5f7c\u3089\u304c\u69cb\u7bc9\u3055\u308c\u3001\u767a\u4fe1\u3055\u308c\u305f\u5834\u6240\u3092\u8ffd\u8de1\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u3053\u306e\u898f\u5247\u306f\u3001\u4f8b\u5916\u3068\u3057\u3066\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3082\u306e\u306b\u5236\u9650\u3057\u307e\u3059\u3002\n\u305d\u308c\u304c\u6700\u521d\u306b\u4f5c\u6210\u3055\u308c\u305f\u3068\u304d\u3001\u305d\u308c\u306f\u552f\u4e00\u306e\u30b9\u30ed\u30fc\u3055\u308c\u308b\u306e\u30ea\u30c6\u30e9\u30eb\u3092\u59a8\u3052\u3001\nError\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308b\u53ef\u80fd\u6027\u3092\u6301\u3064\u5f0f\u3092\u8a31\u53ef\u3059\u308b\u3088\u3046\u306b\u62e1\u5f35\u3055\u308c\u307e\u3057\u305f\u3002\nthrow \"error\";         /*error Expected an object to be thrown.*/\nthrow 0;               /*error Expected an object to be thrown.*/\nthrow undefined;       /*error Do not throw undefined.*/\nthrow null;            /*error Expected an object to be thrown.*/\nvar err = new Error();\nthrow \"an \" + err;     /*error Expected an object to be thrown.*/\n// err is recast to a string literal\nvar err = new Error();\nthrow `${err}`         /*error Expected an object to be thrown.*/\n\n\n//ok\nthrow new Error();\nthrow new Error(\"error\");\nvar e = new Error(\"error\");\nthrow e;\ntry {\n    throw new Error(\"error\");\n} catch (e) {\n    throw e;\n}\n\n\nno-unused-expressions\n\ndisallow usage of expressions in statement position\n\u6587\u306e\u4f4d\u7f6e\u306e\u8868\u73fe\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\u672a\u4f7f\u7528\u306e\u8868\u73fe\u306e\u6392\u9664\u3092\u76ee\u6307\u3059\u3002\n\u30aa\u30d7\u30b7\u30e7\u30f3\u3044\u308d\u3044\u308d\u3042\u308b\u304b\u3089\u30ea\u30f3\u30af\u5148\u306b\u3068\u3093\u3067\u307f\u3066\u307f\u3066\u306d\n0        /*error Expected an assignment or function call and instead saw an expression.*/\nif(0) 0  /*error Expected an assignment or function call and instead saw an expression.*/\n{0}      /*error Expected an assignment or function call and instead saw an expression.*/\nf(0), {} /*error Expected an assignment or function call and instead saw an expression.*/\na && b() /*error Expected an assignment or function call and instead saw an expression.*/\na, b()   /*error Expected an assignment or function call and instead saw an expression.*/\n/////////////////////////////////////////////////////////////////////\n//default//ok\n{}\nf()\na = 0\nnew C\ndelete a.b\nvoid a\nc = a, b;\n\n\nno-useless-call\n\ndisallow unnecessary .call() and .apply()\n\u5fc5\u8981\u306a\u3044\u3084\u3064\u7981\u6b62\n// foo(1, 2, 3);\u3068\u540c\u3058\u610f\u5473\u3060\u3057\nfoo.call(undefined, 1, 2, 3);     /*error unnecessary \".call()\".*/\nfoo.apply(undefined, [1, 2, 3]);  /*error unnecessary \".apply()\".*/\nfoo.call(null, 1, 2, 3);          /*error unnecessary \".call()\".*/\nfoo.apply(null, [1, 2, 3]);       /*error unnecessary \".apply()\".*/\n\n// \u3053\u308c\u3068\u540c\u3058\u610f\u5473\u3060\u3057\u3001obj.foo(1, 2, 3);\nobj.foo.call(obj, 1, 2, 3);       /*error unnecessary \".call()\".*/\nobj.foo.apply(obj, [1, 2, 3]);    /*error unnecessary \".apply()\".*/\n////////////////////////////////////////////////////////////////////\n//ok\n//this\u306e\u30d0\u30a4\u30f3\u30c9\u306f\u5225.\nfoo.call(obj, 1, 2, 3);\nfoo.apply(obj, [1, 2, 3]);\nobj.foo.call(null, 1, 2, 3);\nobj.foo.apply(null, [1, 2, 3]);\nobj.foo.call(otherObj, 1, 2, 3);\nobj.foo.apply(otherObj, [1, 2, 3]);\n// \u5f15\u6570\u30ea\u30b9\u30c8\u306e\u305f\u3081\u306f\u3044\u3044\nfoo.apply(undefined, args);\nfoo.apply(null, args);\nobj.foo.apply(obj, args);\n\n\nno-useless-concat\n\ndisallow unnecessary concatenation of literals or template literals\n\u30ea\u30c6\u30e9\u30eb\u307e\u305f\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30ea\u30c6\u30e9\u30eb\u306e\u4e0d\u8981\u306a\u9023\u7d50\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n//10\u3068\u540c\u3058\nvar a = `some` + `string`; /*error Unexpected string concatenation of literals.*/\nvar a = '1' + '0';         /*error Unexpected string concatenation of literals.*/\nvar a = '1' + `0`;         /*error Unexpected string concatenation of literals.*/\nvar a = `1` + '0';         /*error Unexpected string concatenation of literals.*/\nvar a = `1` + `0`;         /*error Unexpected string concatenation of literals.*/\n\n/////////////////////////////////////////\n//ok\n// when a non string is included\nvar c = a + b;\nvar c = '1' + a;\nvar a = 1 + '1';\nvar c = 1 - 2;\n// when the string concatenation is multiline\nvar c = \"foo\" +\n    \"bar\";\n\n\nno-void\n\ndisallow use of the void operator\nvoid\u6f14\u7b97\u5b50\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\u7a7a\u6d1e\u8868\u73fe\u5f0f\u3092\u8a55\u4fa1\u3057\u3001\u672a\u5b9a\u7fa9\u3092\u8fd4\u3057\u307e\u3059\uff1avoid\u6f14\u7b97\u5b50\u306f\u5b9a\u7fa9\u30aa\u30da\u30e9\u30f3\u30c9\u3068\u30ea\u30bf\u30fc\u30f3\u3092\u53d6\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u4efb\u610f\u306e\u526f\u4f5c\u7528\u306e\u767a\u73fe\u3092\u7121\u8996\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u7a7a\u6d1e\u6f14\u7b97\u5b50\u3092\u4f7f\u7528\u3059\u308b\u4e00\u822c\u7684\u306a\u30b1\u30fc\u30b9\u306f\u3001\u672a\u5b9a\u7fa9\u306e\u5909\u6570\u304c\u53ef\u5909\u3060\u3063\u305fES5\u306e\u524d\u306b \"\u7d14\u7c8b\u306a\"\u672a\u5b9a\u7fa9\u5024\u3092\u5f97\u308b\u3053\u3068\u3067\u3059\uff1a\nvoid foo              /*error Expected 'undefined' and instead saw 'void'.*/\nvar foo = void bar(); /*error Expected 'undefined' and instead saw 'void'.*/\n\n\n\n\nno-warning-comments\n\ndisallow usage of configurable warning terms in comments\n\u30b3\u30e1\u30f3\u30c8\u6b04\u3067\u8a2d\u5b9a\u53ef\u80fd\u306a\u8b66\u544a\u7528\u8a9e\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n// TODO: this                          /*error Unexpected todo comment.*/\n// todo: this too                      /*error Unexpected todo comment.*/\n// Even this: TODO                     /*error Unexpected todo comment.*/\n/*                                     /*error Unexpected todo comment.*/ /*error Unexpected fixme comment.*/ /*Unexpected any other term comment.*/ /*\n * The same goes for this TODO comment\n * Or a fixme\n * as well as any other term\n */\n//////////////////////////////////////////////\n//ok\n// This is to do\n// even not any other    term\n// any other terminal\n/*\n * The same goes for block comments\n * with any other interesting term\n * or fix me this\n */\n\n\n\nno-with\n\ndisallow use of the with statement\nwith\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\nwith (foo) { /*error Unexpected use of 'with' statement.*/\n\n\nradix\n\nrequire use of the second argument for parseInt()\n\u7b2c\u4e8c\u5f15\u6570\u306e\u4f7f\u7528\u3092\u304a\u306d\u304c\u3044\u3057\u307e\u3059\nvar num = parseInt(\"071\");     /*error Missing radix parameter.*/\nvar num = parseInt(someValue); /*error Missing radix parameter.*/\n////////////////////////////////////\n//ok\nvar num = parseInt(\"071\", 10);\nvar num = parseFloat(someValue);\n\n\nvars-on-top\n\nrequire declaration of all vars at the top of their containing scope\n\u30b9\u30b3\u30fc\u30d7\u306e\u4e0a\u90e8\u3067\u5ba3\u8a00\u3092\u3057\u3066\u306d\n// Variable declarations in a block:\nfunction doSomething() {\n    var first;\n    if (true) {\n        first = true;\n    }\n    var second;/*error All \"var\" declarations must be at the top of the function scope.*/\n}\n// Variable declaration in for initializer:\nfunction doSomething() {\n    for (var i=0; i<10; i++) {} /*error All \"var\" declarations must be at the top of the function scope.*/\n}\n// Variables after other statements:\nf();\nvar a;/*error All \"var\" declarations must be at the top of the function scope.*/\n//////////////////////////////////////////////////\n///ok\n\nfunction doSomething() {\n    var first;//\u4e0a\n    var second; //multiple declarations are allowed at the top\n    if (true) {\n        first = true;\n    }\n}\nfunction doSomething() {\n    var i;//\u5ba3\u8a00\u3068\u305d\u308c\u306f\u5225\n    for (i=0; i<10; i++) {}\n}\n\n\n\nwrap-iife\n\nrequire immediate function invocation to be wrapped in parentheses\n\u95a2\u6570\u306e\u5373\u6642\u5b9f\u884c\u304c\u5fc5\u8981\u306a\u3068\u304d\u306f\u62ec\u5f27\u5185\u306b\u30e9\u30c3\u30d7\u304a\u306d\u3057\u3083\u3059\n\u95a2\u6570\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u306f\u3059\u3050\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u305a\u3001\u95a2\u6570\u5f0f\u306f\u3067\u304d\u307e\u3059\u3002\u95a2\u6570\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3092\u62ec\u5f27\u3067\u30e9\u30c3\u30d7\u3059\u308b\u3001\u5373\u6642\u5b9f\u884c\u95a2\u6570\u5f0f\u3068\u3044\u3046\u30c6\u30af\u30cb\u30c3\u30af\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\u62ec\u5f27\u3067\u30e9\u30c3\u30d7\u3055\u308c\u305f\u95a2\u6570\u306f\u3001\u95a2\u6570\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3067\u306f\u306a\u304f\u3001\u95a2\u6570\u5f0f\u3068\u3057\u3066\u89e3\u6790\u3055\u308c\u307e\u3059\u3002\nvar x = function () { return { y: 1 };}(); /*error Wrap an immediate function invocation in parentheses.*/\n\n\u30e9\u30c3\u30d4\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u304c\u3042\u308a\u307e\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306foutside\u3067\u3059\u3002\nvar x = (function () { return { y: 1 };})(); /*error Move the invocation into the parens that contain the function.*/\n//////////////////////////////////////////////////\n//ok\nvar x = (function () { return { y: 1 };}());\n\ninside\u3068any\u3082\u3042\u308a\u307e\u3059\u3002\nvar x = (function () { return { y: 1 };}()); /*error Wrap only the function expression in parens.*/\n//////////////////////////////////////////////////\n//ok\nvar x = (function () { return { y: 1 };})();\n\n\nyoda\n\nrequire or disallow Yoda conditions\n\u30e8\u30fc\u30c0\u3092\u8a31\u53ef\u3059\u308b\u304b\u3057\u306a\u3044\u304b\u306e\u8a2d\u5b9a\u3002\n\u30aa\u30d7\u30b7\u30e7\u30f3\u3042\u308b\u304b\u3089\u30ea\u30f3\u30af\u5148\u307f\u3066\u307f\u3066\u306d\u3002\u306a\u306b\u30e8\u30fc\u30c0\u3063\u3066\u2192\u4e0b\u8a18@mysticatea\u3055\u3093\u306e\u30b3\u30e1\u30f3\u30c8\u53c2\u7167\u3057\u3066\u306d\u3002\u306a\u308b\u307b\u3069\u30fc\nif (\"red\" === color) {          /*error Expected literal to be on the right side of ===.*/\n    // ...\n}\nif (true == flag) {             /*error Expected literal to be on the right side of ==.*/\n    // ...\n}\nif (5 > count) {                /*error Expected literal to be on the right side of >.*/\n    // ...\n}\nif (-1 < str.indexOf(substr)) { /*error Expected literal to be on the right side of <.*/\n    // ...\n}\nif (0 <= x && x < 1) {          /*error Expected literal to be on the right side of <=.*/\n    // ...\n}\n/////////////////////////////////////////////\n//ok\nif (5 & value) {\n    // ...\n}\nif (value === \"red\") {\n    // ...\n}\n\n\n\u3055\u3044\u3054\u306b\n\u3064\u304b\u308c\u305f\u3002\u3002\nESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u3056\u3063\u304f\u308a\u89e3\u8aac[\u53ef\u80fd\u6027\u3042\u308b\u30a8\u30e9\u30fc\u7de8]\nESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u3056\u3063\u304f\u308a\u89e3\u8aac[\u30b9\u30bf\u30a4\u30eb\u7de8]\nESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u3056\u3063\u304f\u308a\u89e3\u8aac[ES6\u7de8]\n# ESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u3056\u3063\u304f\u308a\u89e3\u8aac[\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u7de8]\n\n[ESLint](http://eslint.org/)\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u300c\u3056\u3063\u304f\u308a\u3057\u305f\u306e\u300d\u306a\u3044\u306e\u304b\u3001\u3068\u601d\u3063\u3066\u3050\u3050\u3057\u3066\u3082\u306a\u3055\u305d\u3046\u306a\u306e\u3067[\u81ea\u5206](http://kenjimorita.jp/)\u306e\u52c9\u5f37\u306e\u305f\u3081\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u3002\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u306f\u6570\u3042\u308b\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u4e2d\u306e\u300c\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u7de8\u300d\u3067\u3059\u3002\n\n\u203b\u3053\u3061\u3089\u306f2015/9/25\u65e5\u306e\u8a18\u4e8b\u3067\u3059\u3002\uff08ESLint\u3055\u3093 v1.5.1 released 22 September 2015\uff09\n\u73fe\u6642\u70b9(2017/1/24)\u306f3.14\u3067\u3059\u3002\u8fd1\u3044\u3046\u3061\u65b0\u305f\u306b\u52a0\u7b46\u3057\u3066\u3053\u3061\u3089\u306b\u66f4\u65b0\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n\u4ed6\u30ab\u30c6\u30b4\u30ea\u30fc\u306f\u3053\u3061\u3089\n[ESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u3056\u3063\u304f\u308a\u89e3\u8aac[\u53ef\u80fd\u6027\u3042\u308b\u30a8\u30e9\u30fc\u7de8]](http://qiita.com/M-ISO/items/f9097a75b362206c2a99)\n[ESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u3056\u3063\u304f\u308a\u89e3\u8aac[\u30b9\u30bf\u30a4\u30eb\u7de8]](http://qiita.com/M-ISO/items/113ddd448bdc496af783)\n[ESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u3056\u3063\u304f\u308a\u89e3\u8aac[ES6\u7de8]](http://qiita.com/M-ISO/items/f0c2f0e669db32cf4efb)\n\n\n\n**ESLint\u304c\u52e7\u3081\u308b\u300c\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u300d\u306a\u306e\u3067\u3056\u3063\u3068\u8aad\u3093\u3067\u3044\u308b\u3060\u3051\u3067\u300c\u3042\u3001\u306a\u308b\u307b\u3069\u306a\u3001\u3053\u3046\u3044\u3046\u66f8\u304d\u65b9\u304c\u3044\u3044\u3068\u3055\u308c\u3066\u308b\u3093\u3060\u3002\u3002\u300d\u3063\u3066\u611f\u3058\u307e\u3057\u305f\u3002\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002**\n\n\u203b\u3053\u3061\u3089\u306f2015/9/26\u65e5\u306e\u8a18\u4e8b\u3067\u3059\u3002\uff08ESLint v1.5.1 released 22 September 2015\uff09\n\u203b\u3082\u3057\u8a73\u3057\u304f\u77e5\u308a\u305f\u304b\u3063\u305f\u3089\u300c\u898b\u51fa\u3057\u304c\u30ea\u30f3\u30af\u300d\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u898b\u306b\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u306d\u3002\n\n\u4ee5\u4e0b\u6587\u7ae0\u9577\u3044\u306e\u3067\u6ce8\u610f(\u3082\u3057\u63a2\u3057\u3066\u3044\u308b\u30eb\u30fc\u30eb\u3042\u3063\u305f\u3089cmd+F\u691c\u7d22\u3057\u305f\u3089\u3044\u3044\u304b\u3082\u306d)\u3001ABC\u9806\u3002\n\n\n## [accessor-pairs](http://eslint.org/docs/rules/accessor-pairs)\n\nEnforces getter/setter pairs in objects\n\u30bb\u30c3\u30bf\u30fc\u3068\u30b2\u30c3\u30bf\u30fc\u306e\u30da\u30a2\u30fc\u3092\u5f37\u5236\u3059\u308b\n\n```js\n// Bad\nvar o = {\n    set a(value) {\n        this.val = value;\n    }\n};\n\n// Good\nvar o = {\n    set a(value) {\n        this.val = value;\n    },\n    get a() {\n        return this.val;\n    }\n};\n```\n\n## [block-scoped-var](http://eslint.org/docs/rules/block-scoped-var)\n\ntreat var statements as if they were block scoped\n\u30d6\u30ed\u30c3\u30af\u5185\u3067\u5ba3\u8a00\u3055\u308c\u305f\u5909\u6570\u306e\u5b9f\u884c\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u6271\u3044\n\n```js\n/*eslint block-scoped-var: 2*/\nfunction doSomething() {\n    if (true) {\n        var build = true;\n    }\n\n    console.log(build); /*error \"build\" used outside of binding context.*/\n}\n////////////////////////////\n//good\n\nfunction doSomething() {\n    var build;\n\n    if (true) {\n        build = true;\n    }\n\n    console.log(build);//ok\n}\n```\n\n## [complexity](http://eslint.org/docs/rules/complexity)\n\nspecify the maximum cyclomatic complexity allowed in a program\n\u5faa\u74b0\u7684\u8907\u96d1\u5ea6\u306e\u3057\u304d\u3044\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\n\n```js\nfunction a(x) {\n    if (true) {\n        return x; // 1st path\n    } else if (false) {\n        return x+1; // 2nd path\n    } else {\n        return 4; // 3rd path\n    }\n}\n```\n\n## [consistent-return](http://eslint.org/docs/rules/consistent-return)\n\nrequire return statements to either always or never specify values\n\u3069\u306e\u6642\u70b9\u3067\u3082\u5024\u3092\u8fd4\u3055\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u304b\u3089\u3069\u3061\u3089\u304b\u5024\u3092\u4e00\u65b9\u306f\u8fd4\u3059\u3001\u3082\u3057\u304f\u306f\u4e21\u65b9\u8fd4\u3059\u3001\u306e\u6307\u5b9a\n\n```js\nfunction doSomething(condition) {\n\n    if (condition) {\n        return true;\n    } else {\n        return;      /*error Expected a return value.*/\n    }\n}\n//ok\nfunction doSomething(condition) {\n\n    if (condition) {\n        return true;\n    } else {\n        return false;\n    }\n}\n```\n\n## [curly](http://eslint.org/docs/rules/curly)\n\nspecify curly brace conventions for all control statements\n\u3059\u3079\u3066\u306e\u5236\u5fa1\u6587\u306e\u4e2d\u62ec\u5f27\u306e\u898f\u5247\u3092\u6307\u5b9a\u3057\u307e\u3059\n\n```js\nif (foo) foo++; /*error Expected { after 'if' condition.*/\n\nwhile (bar)     /*error Expected { after 'while' condition.*/\n    baz();\n//ok\nif (foo) {\n    foo++;\n}\n\nwhile (bar) {\n    baz();\n}\n```\n\n## [default-case](http://eslint.org/docs/rules/default-case)\n\nrequire default case in switch statements\nswitch\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b1\u30fc\u30b9\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\n\n```js\nswitch (a) {       /*error Expected a default case.*/\n    case 1:\n        /* code */\n        break;\n}\n//ok\nswitch (foo) {\n    case 1:\n        doSomething();\n        break;\n\n    case 2:\n        doSomething();\n        break;\n\n    default:\n        // do nothing\n}\n```\n\n## [dot-notation](http://eslint.org/docs/rules/dot-notation)\n\nencourages use of dot notation whenever possible\n\u30c9\u30c3\u30c8\u8868\u8a18\u53ef\u80fd\u306a\u9650\u308a\u306e\u4f7f\u7528\u3092\u5968\u52b1\n\n```js\n/*eslint dot-notation: 2*/\nvar x = foo.bar;\n\nvar x = foo[bar];    // Property name is a variable, square-bracket notation required\n```\n\n## [dot-location](http://eslint.org/docs/rules/dot-location)\n\nenforces consistent newlines before or after dots\n\u524d\u307e\u305f\u306f\u30c9\u30c3\u30c8\u306e\u5f8c\u306b\u4e00\u8cab\u3057\u305f\u6539\u884c\u3092\u5f37\u5236\n\n```js\nvar foo = object\n.property;       /*error Expected dot to be on same line as object.*/\n```\n\n## [eqeqeq](http://eslint.org/docs/rules/eqeqeq)\n\nrequire the use of === and !== (fixable)\n===\u3068!==\u306e\u4f7f\u7528\n\n```js\nif (x == 42) { }                     /*error Expected '===' and instead saw '=='.*/\n\nif (\"\" == text) { }                  /*error Expected '===' and instead saw '=='.*/\n\nif (obj.getStuff() != undefined) { } /*error Expected '!==' and instead saw '!='.*/\n/* eslint eqeqeq: [2, \"smart\"] */\ntypeof foo == 'undefined'\n'hello' != 'world'\n0 == 0\ntrue == true\nfoo == null\n\n```\n\n## [guard-for-in](http://eslint.org/docs/rules/guard-for-in)\n\nmake sure for-in loops have an if statement\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u30c1\u30a7\u30fc\u30f3\u3067\u7d99\u627f\u3055\u308c\u3066\u3044\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u542b\u307e\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u3078\u306e\u5bfe\u51e6\n\n```js\nfor (key in foo) {    /*error The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype.*/\n    doSomething(key);\n}\n//ok\nfor (key in foo) {\n    if ({}.hasOwnProperty.call(foo, key)) {\n        doSomething(key);\n    }\n}\n\n```\n\n## [no-alert](http://eslint.org/docs/rules/no-alert)\n\ndisallow the use of alert, confirm, and prompt\n\u30a2\u30e9\u30fc\u30c8\u3001\u30b3\u30f3\u30d5\u30a1\u30fc\u30e0\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u306a\u3044\n\n```js\nalert(\"here!\");                          /*error Unexpected alert.*/\nconfirm(\"Are you sure?\");                /*error Unexpected confirm.*/\nprompt(\"What's your name?\", \"John Doe\"); /*error Unexpected prompt.*/\n```\n\n## [no-caller](http://eslint.org/docs/rules/no-caller)\n\ndisallow use of arguments.caller or arguments.callee\narguments.caller\u307e\u305f\u306farguments.callee\u3092\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\n/*eslint no-caller: 2*/\nfunction foo(n) {\n    if (n <= 0) {\n        return;\n    }\n\n    arguments.callee(n - 1);   /*error Avoid arguments.callee.*/\n}\n\n[1,2,3,4,5].map(function(n) {\n    return !(n > 1) ? 1 : arguments.callee(n - 1) * n; /*error Avoid arguments.callee.*/\n});\n```\n\n## [no-div-regex](http://eslint.org/docs/rules/no-div-regex)\n\ndisallow division operators explicitly at beginning of regular expression\n\u6b63\u898f\u8868\u73fe\u306e\u5148\u982d\u306b\u660e\u793a\u7684\u306b\u9664\u7b97\u6f14\u7b97\u5b50\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\nfunction bar() { return /=foo/; } /*error A regular expression literal can be confused with '/='.*/\n//ok\nfunction bar() { return /\\=foo/; }\n```\n\n## [no-else-return](http://eslint.org/docs/rules/no-else-return)\n\ndisallow else after a return in an if\n\u3082\u3057\u30d6\u30ed\u30c3\u30af\u304creturn\u6587\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u4ed6\u306e\u30d6\u30ed\u30c3\u30af\u304c\u4e0d\u8981\u3068\u306a\u308a\u307e\u3059yo\u3002\n\u305d\u306e\u5185\u5bb9\u306f\u3001\u30d6\u30ed\u30c3\u30af\u306e\u5916\u306b\u914d\u7f6e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059yo\u3002\n\n```js\nfunction foo() {\n    if (x) {\n        return y;\n    } else {            /*error Unexpected 'else' after 'return'.*/\n        return z;\n    }\n}\n//ok\nfunction foo() {\n    if (x) {\n        return y;\n    }\n\n    return z;\n}\n```\n\n## [no-empty-label](http://eslint.org/docs/rules/no-empty-label)\n\ndisallow use of labels for anything other than loops and switches\n\u30eb\u30fc\u30d7\u3084\u30b9\u30a4\u30c3\u30c1\u4ee5\u5916\u306e\u30e9\u30d9\u30eb\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u306a\u3044\n\n```js\nlabeled:     /*error Unexpected label \"labeled\"*/\nvar x = 10;\n```\n\n## [no-eq-null](http://eslint.org/docs/rules/no-eq-null)\n\ndisallow comparisons to null without a type-checking operator\n\u578b\u30c1\u30a7\u30c3\u30af\u306e\u30aa\u30da\u30ec\u30fc\u30bf\u306a\u3057null\u3068\u306e\u6bd4\u8f03\u3092\u7981\u6b62\n\n```js\nif (foo == null) {     /*error Use \u2018===\u2019 to compare with \u2018null\u2019.*/\n  bar();\n}\nwhile (qux != null) {  /*error Use \u2018===\u2019 to compare with \u2018null\u2019.*/\n  baz();\n}\n//ok\nif (foo === null) {\n  bar();\n}\nwhile (qux !== null) {\n  baz();\n}\n```\n\n## [no-eval](http://eslint.org/docs/rules/no-eval)\n\ndisallow use of eval()\neval\u306e\u4f7f\u7528\u3092\u8a31\u3055\u306a\u3044\u3088\u3042\u305f\u3057\u3083\n\n```js\nvar obj = { x: \"foo\" },\n    key = \"x\",\n    value = eval(\"obj.\" + key); /*error eval can be harmful.*/\n//ok\nvar obj = { x: \"foo\" },\n    key = \"x\",\n    value = obj[key];\n```\n\n## [no-extend-native](http://eslint.org/docs/rules/no-extend-native)\n\ndisallow adding to native types\n\u30cd\u30a4\u30c6\u30a3\u30d6\u578b\u3078\u306e\u8ffd\u52a0\u7981\u6b62\n\u3058\u3083\u3042\u3069\u3046\u3059\u308b\u306e\u304b\u3063\u3066\u3001hasOwnProperty\u3068for\u30eb\u30fc\u30d7\u5185\u90e8\u3092\u30e9\u30c3\u30d7\u3057\u3066\u306d\n\n```js\n//disallow\nObject.prototype.a = \"a\";\nObject.defineProperty(Array.prototype, \"times\", {value: 999});\n\n//\u3053\u308c\u3089\u306f\u30c1\u30a7\u30c3\u30af\u3055\u308c\u306a\u3044\nvar x = Object; x.prototype.thing = a;\neval(\"Array.prototype.forEach = 'muhahaha'\");\nwith(Array) { prototype.thing = 'thing'; };\nwindow.Function.prototype.bind = 'tight';\n\n```\n\n## [no-extra-bind](http://eslint.org/docs/rules/no-extra-bind)\n\ndisallow unnecessary function binding\n\u7d50\u5408\u4e0d\u8981\u306a\u6a5f\u80fd\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3001\u7279\u5b9a\u306e\u5024\u306b\u5f15\u6570\u3092\u7d50\u5408\u3057\u3001\u3053\u306e\u5024\u3092\u7279\u5b9a\u3057\u3001\u3042\u308b\u95a2\u6570\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\u3053\u306e\u5024\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u95a2\u6570\u304c\u5b9f\u969b\u306b\u305d\u306e\u95a2\u6570\u672c\u4f53\u3067\u3053\u308c\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3059\u3002\n\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u306e\u9014\u4e2d\u3067bind\u306e\u5fc5\u8981\u304c\u306a\u3044\u3068\u3053\u308d\u304c\u6b8b\u3063\u305f\u308a\u3059\u308b\u6b8b\u308b\u3068\u4e0d\u8981\u306a\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u767a\u751f\u3059\u308b\n\n```js\nvar boundGetName = (function getName() {\n    return this.name;\n}).bind({ name: \"ESLint\" });\nconsole.log(boundGetName());      // \"ESLint\"\n\n// useless bind\nvar boundGetName = (function getName() {\n    return \"ESLint\";\n}).bind({ name: \"ESLint\" });//\u3068\u3063\u3066\u30aa\u30c3\u30b1\u30fc\n\nconsole.log(boundGetName());      // \"ESLint\"\n```\n\n## [no-fallthrough](http://eslint.org/docs/rules/no-fallthrough)\n\ndisallow fallthrough of case statements (recommended)\ncase\u6587\u306e\u30d5\u30a9\u30fc\u30eb\u30b9\u30eb\u30fc\uff08\u63a8\u5968)\n\n```js\nswitch(foo) {\n    case 1:\n        doSomething();\n\n    case 2:\n        doSomethingElse();\n}\n//\u4e0a\u306e\u5834\u5408foo\u304c1\u306e\u5834\u54082\u3082\u901a\u308b\nswitch(foo) {\n    case 1:\n        doSomething();\n        break;//good\n\n    case 2:\n        doSomethingElse();\n}\n\n```\n\n## [no-floating-decimal](http://eslint.org/docs/rules/no-floating-decimal)\n\ndisallow the use of leading or trailing decimal points in numeric literals\n\u5148\u982d\u307e\u305f\u306f\u6570\u5024\u30ea\u30c6\u30e9\u30eb\u3067\u5c0f\u6570\u70b9\u3092\u5f8c\u7d9a\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\nvar num = .5;  /*error A leading decimal point can be confused with a dot.*/\nvar num = 2.;  /*error A trailing decimal point can be confused with a dot.*/\nvar num = -.7; /*error A leading decimal point can be confused with a dot.*/\n```\n\n## [no-implicit-coercion](http://eslint.org/docs/rules/no-implicit-coercion)\n\ndisallow the type conversions with shorter notations\n\u77ed\u3044\u8868\u8a18\u3067\u578b\u5909\u63db\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\n//\u3053\u3046\u3044\u3046\u3084\u3064\nvar b = !!foo;\nvar b = ~foo.indexOf(\".\");\nvar n = +foo;\nvar n = 1 * foo;\nvar s = \"\" + foo;\n//\u7f6e\u304d\u63db\u3048\u308c\u308b\nvar b = Boolean(foo);\nvar b = foo.indexOf(\".\") !== -1;\nvar n = Number(foo);\nvar n = Number(foo);\nvar s = String(foo);\n\n```\n\n## [no-implied-eval](http://eslint.org/docs/rules/no-implied-eval)\n\n disallow use of eval()-like methods\neval()\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u306a\u3044\n\n```js\n//\u3053\u3046\u3044\u3046\u3084\u3064\u3002setTimeout(), setInterval() or execScript()\nsetTimeout(\"alert('Hi!');\", 100);\n//good\nsetTimeout(function() {\n    alert(\"Hi!\");\n}, 100);\n```\n\n## [no-invalid-this](http://eslint.org/docs/rules/no-invalid-this)\n\ndisallow this keywords outside of classes or class-like objects\n\u30af\u30e9\u30b9\u307e\u305f\u306f\u30af\u30e9\u30b9\u306e\u3088\u3046\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5916\u5074\u3067\u3001this\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3046\u306e\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\u3051\u3063\u3053\u3046\u91cd\u8981\u3060\u3068\u601d\u3063\u3066\u3044\u308b\u306e\u3067\u5168\u90e8\u306e\u305b\u308b\u3002\u3002\n\n```js\n/*eslint no-invalid-this: 2*/\nthis.a = 0;            /*error Unexpected `this`.*/\nbaz(() => this);       /*error Unexpected `this`.*/\n\n(function() {\n    this.a = 0;        /*error Unexpected `this`.*/\n    baz(() => this);   /*error Unexpected `this`.*/\n})();\n\nfunction foo() {\n    this.a = 0;        /*error Unexpected `this`.*/\n    baz(() => this);   /*error Unexpected `this`.*/\n}\n\nvar foo = function() {\n    this.a = 0;        /*error Unexpected `this`.*/\n    baz(() => this);   /*error Unexpected `this`.*/\n};\n\nfoo(function() {\n    this.a = 0;        /*error Unexpected `this`.*/\n    baz(() => this);   /*error Unexpected `this`.*/\n});\n\nobj.foo = () => {\n    // `this` of arrow functions is the outer scope's.\n    this.a = 0;        /*error Unexpected `this`.*/\n};\n\nvar obj = {\n    aaa: function() {\n        return function foo() {\n            // There is in a method `aaa`, but `foo` is not a method.\n            this.a = 0;      /*error Unexpected `this`.*/\n            baz(() => this); /*error Unexpected `this`.*/\n        };\n    }\n};\n\nclass Foo {\n    static foo() {\n        this.a = 0;      /*error Unexpected `this`.*/\n        baz(() => this); /*error Unexpected `this`.*/\n    }\n}\n\nfoo.forEach(function() {\n    this.a = 0;          /*error Unexpected `this`.*/\n    baz(() => this);     /*error Unexpected `this`.*/\n});\n\n/////////////////////////////////////////////////////////////////////\n//\u4ee5\u4e0b\u306f\u554f\u984c\u3067\u306f\u306a\u3044\n////////////////////////////////////////////////////////////////////\nfunction Foo() {\n    // OK, this is in a legacy style constructor.\n    this.a = 0;\n    baz(() => this);\n}\n\nclass Foo {\n    constructor() {\n        // OK, this is in a constructor.\n        this.a = 0;\n        baz(() => this);\n    }\n}\n\nvar obj = {\n    foo: function foo() {\n        // OK, this is in a method (this function is on object literal).\n        this.a = 0;\n    }\n};\n\nvar obj = {\n    foo() {\n        // OK, this is in a method (this function is on object literal).\n        this.a = 0;\n    }\n};\n\nvar obj = {\n    get foo() {\n        // OK, this is in a method (this function is on object literal).\n        return this.a;\n    }\n};\n\nvar obj = Object.create(null, {\n    foo: {value: function foo() {\n        // OK, this is in a method (this function is on object literal).\n        this.a = 0;\n    }}\n});\n\nObject.defineProperty(obj, \"foo\", {\n    value: function foo() {\n        // OK, this is in a method (this function is on object literal).\n        this.a = 0;\n    }\n});\n\nObject.defineProperties(obj, {\n    foo: {value: function foo() {\n        // OK, this is in a method (this function is on object literal).\n        this.a = 0;\n    }}\n});\n\nfunction Foo() {\n    this.foo = function foo() {\n        // OK, this is in a method (this function assigns to a property).\n        this.a = 0;\n        baz(() => this);\n    };\n}\n\nobj.foo = function foo() {\n    // OK, this is in a method (this function assigns to a property).\n    this.a = 0;\n};\n\nFoo.prototype.foo = function foo() {\n    // OK, this is in a method (this function assigns to a property).\n    this.a = 0;\n};\n\nclass Foo {\n    foo() {\n        // OK, this is in a method.\n        this.a = 0;\n        baz(() => this);\n    }\n}\n\nvar foo = (function foo() {\n    // OK, the `bind` method of this function is called directly.\n    this.a = 0;\n}).bind(obj);\n\nfoo.forEach(function() {\n    // OK, `thisArg` of `.forEach()` is given.\n    this.a = 0;\n    baz(() => this);\n}, thisArg);\n\n/** @this Foo */\nfunction foo() {\n    // OK, this function has a `@this` tag in its JSDoc comment.\n    this.a = 0;\n}\n\n```\n\n## [no-iterator](http://eslint.org/docs/rules/no-iterator)\n\n\n```js\nFoo.prototype.__iterator__ = function() { /*error Reserved name '__iterator__'.*/\n    return new FooIterator(this);\n};\nfoo.__iterator__ = function () {};        /*error Reserved name '__iterator__'.*/\nfoo[\"__iterator__\"] = function () {};     /*error Reserved name '__iterator__'.*/\n\n//ok\n/*eslint no-iterator: 2*/\n\nvar __iterator__ = foo; // Not using the `__iterator__` property.\n\n```\n\n## [no-labels](http://eslint.org/docs/rules/no-labels)\n\ndisallow use of labeled statements\n\u30e9\u30d9\u30eb\u4ed8\u304d\u6587\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\u30d6\u30ec\u30a4\u30af\u3068\u4e00\u7dd2\u306b\u4f7f\u7528\u3057\u3066\u30eb\u30fc\u30d7\u5468\u308a\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u4f7f\u3046\u3088\n\n```js\nlabel:                   /*error Unexpected labeled statement.*/\n    while(true) {\n        // ...\n    }\n\nlabel:                   /*error Unexpected labeled statement.*/\n    while(true) {\n        break label;     /*error Unexpected label in break statement.*/\n    }\n\nlabel:                  /*error Unexpected labeled statement.*/\n    while(true) {\n        continue label; /*error Unexpected label in continue statement.*/\n    }\n//ok\nvar f = {\n    label: \"foo\"\n};\n\nwhile (true) {\n    break;\n}\n\nwhile (true) {\n    continue;\n}\n```\n\n## [no-loop-func](http://eslint.org/docs/rules/no-loop-func)\n\ndisallow creation of functions within loops\n\u30eb\u30fc\u30d7\u5185\u306e\u95a2\u6570\u306e\u4f5c\u6210\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\nfor (var i=10; i; i--) {\n    (function() { return i; })();     /*error Don't make functions within a loop*/\n}\n//ok\nvar a = function() {};\nfor (var i=10; i; i--) {\n    a();\n}\n\n\n\n```\n\n## [no-multi-spaces](http://eslint.org/docs/rules/no-multi-spaces)\n\ndisallow use of multiple spaces\n\u8907\u6570\u306e\u30b9\u30da\u30fc\u30b9\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\nif(foo  === \"bar\") {}//\u30b9\u30da\u30fc\u30b9\u8907\u6570\nvar a =  1;            /*error Multiple spaces found before '1'.*/\n\n//ok\nif(foo === \"bar\") {}\nvar a = 1;\n\n```\n\n## [no-multi-str](http://eslint.org/docs/rules/no-multi-str)\n\ndisallow use of multiline strings\n\u8907\u6570\u884c\u306e\u6587\u5b57\u5217\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\u30b9\u30e9\u30c3\u30b7\u30e5\u3092\u5229\u7528\u3057\u3066\u8907\u6570\u884c\u306b\u307e\u305f\u304c\u3063\u3066\u4f5c\u308b\u6587\u5b57\u5217\u306e\u3053\u3068\n\n\n```js\nvar x = \"Line 1 \\\n         Line 2\";//\u3053\u3046\u3044\u3046\u306e\u3092\u8a31\u53ef\u3057\u306a\u3044\n```\n\n## [no-native-reassign](http://eslint.org/docs/rules/no-native-reassign)\n\n disallow reassignments of native objects\n \u30cd\u30a4\u30c6\u30a3\u30d6\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u518d\u5272\u308a\u5f53\u3066\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n \u305d\u308c\u306b\u4ee3\u5165\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u304d\u30a8\u30e9\u30fc\n\n```js\nString = new Object(); /*error String is a read-only native object.*/\n```\n\n\n## [no-new-func](http://eslint.org/docs/rules/no-new-func)\n\ndisallow use of new operator for Function object\nFunction\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u305f\u3081\u306e\u65b0\u3057\u3044\u6f14\u7b97\u5b50\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\nvar x = new Function(\"a\", \"b\", \"return a + b\"); /*error The Function constructor is eval.*/\nvar x = Function(\"a\", \"b\", \"return a + b\");     /*error The Function constructor is eval.*/\n```\n\n## [no-new-wrappers](http://eslint.org/docs/rules/no-new-wrappers)\n\ndisallows creating new instances of String,Number, and Boolean\n\u6587\u5b57\u5217\u3001\u6570\u5024\u3001\u30d6\u30fc\u30eb\u306e\u65b0\u3057\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\nvar stringObject = new String(\"Hello world\"); /*error Do not use String as a constructor.*/\nvar numberObject = new Number(33);            /*error Do not use Number as a constructor.*/\nvar booleanObject = new Boolean(false);       /*error Do not use Boolean as a constructor.*/\nvar stringObject = new String;                /*error Do not use String as a constructor.*/\nvar numberObject = new Number;                /*error Do not use Number as a constructor.*/\nvar booleanObject = new Boolean;              /*error Do not use Boolean as a constructor.*/\n\n//OK\nvar text = String(someValue);\nvar num = Number(someValue);\nvar object = new MyString();\n```\n\n## [no-new](http://eslint.org/docs/rules/no-new)\n\ndisallow use of the new operator when not part of an assignment or comparison\n\u3069\u3053\u306b\u3082\u53c2\u7167\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u306a\u3044\u3084\u3064\u3060\u3081\u3002\u7834\u68c4\u3055\u308c\u308b\u3057\n\n\n```js\nnew Thing(); /*error Do not use 'new' for side effects.*/\n\n//OK\nvar thing = new Thing();\nThing();\n```\n\n## [no-octal-escape](http://eslint.org/docs/rules/no-octal-escape)\n\ndisallow use of octal escape sequences in string literals, such as\n\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u30678\u9032\u6570\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\nvar foo = \"Copyright \\251\"; /*error Don't use octal: '\\251'. Use '\\u....' instead.*/\n\n//ok\nvar foo = \"Copyright \\u00A9\";   // unicode\nvar foo = \"Copyright \\xA9\";     // hexadecimal\n```\n\n## [no-octal](http://eslint.org/docs/rules/no-octal)\n\ndisallow use of octal literals (recommended)\n\u30aa\u30af\u30bf\u30eb\u30ea\u30c6\u30e9\u30eb\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u306a\u3044\n\n```js\nvar num = 071;       /*error Octal literals should not be used.*/\n//ok\nvar num  = \"071\";\n```\n\n## [no-param-reassign](http://eslint.org/docs/rules/no-param-reassign)\n\ndisallow reassignment of function parameters\n\u95a2\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u518d\u5272\u308a\u5f53\u3066\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\nfunction foo(bar) {\n    bar = 13;       /*error Assignment to function parameter 'bar'.*/\n}\nfunction foo(bar) {\n    bar++;          /*error Assignment to function parameter 'bar'.*/\n}\n\n//ok\n/*eslint no-param-reassign: 2*/\nfunction foo(a) {\n    var b = a;\n}\n```\n\n## [no-process-env](http://eslint.org/docs/rules/no-process-env)\n\ndisallow use of process.env\nprocess.env\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\u3002node.js\u306e\u3084\u3064\n\n```js\nif(process.env.NODE_ENV === \"development\") { /*error Unexpected use of process.env.*/\n    //...\n}\n\n//ok\nvar config = require(\"./config\");\n\nif(config.env === \"development\") {\n    //...\n}\n```\n\n## [no-proto](http://eslint.org/docs/rules/no-proto)\n\ndisallow usage of __proto__ property\n\n```js\n//\u30de\u30fc\u30af\u30c0\u30a6\u30f3\u304a\u304b\u3057\u304f\u306a\u308b\u306e\u3067\u3053\u3063\u3061\u306b\u304b\u3044\u3066\u3044\u307e\u3059\u3002\n//__proto__\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\u3002getPrototypeOf\u3092\u4f7f\u304a\u3046\u3002\n\nvar a = obj.__proto__;    /*error The '__proto__' property is deprecated.*/\nvar a = obj[\"__proto__\"]; /*error The '__proto__' property is deprecated.*/\n\n//ok\n/*eslint no-proto: 2*/\nvar a = Object.getPrototypeOf(obj);\n\n```\n\n## [no-redeclare](http://eslint.org/docs/rules/no-redeclare)\n\ndisallow declaring the same variable more than once (recommended)\n\u8907\u6570\u56de\u540c\u3058\u5909\u6570\u3092\u5ba3\u8a00\u8a31\u53ef\u3057\u306a\u3044\u3002\u521d\u671f\u5316\u306e\u6df7\u4e71\u3092\u3055\u3051\u308b\u305f\u3081\n\n```js\nvar a = 3;\nvar a = 10; /*error \"a\" is already defined*/\n\n//ok\nvar a = 3;\n// ...\na = 10;\n```\n\n## [no-return-assign](http://eslint.org/docs/rules/no-return-assign)\n\ndisallow use of assignment in return statement\nreturn\u6587\u3067\u5272\u308a\u5f53\u3066\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\u3044\u308d\u3044\u308d\u30aa\u30d7\u30b7\u30e7\u30f3\u3042\u308b\u307f\u305f\u3044\u3060\u304b\u3089\u30ea\u30f3\u30af\u5148\u306b\u3068\u3093\u3067\u306d\n\n```js\nfunction doSomething() {\n    return foo = bar + 2; /*error Return statement should not contain assignment.*/\n}\nfunction doSomething() {\n    return foo += 2;      /*error Return statement should not contain assignment.*/\n}\n\n//ok\nfunction doSomething() {\n    return foo == bar + 2;\n}\nfunction doSomething() {\n    return foo === bar + 2;\n}\nfunction doSomething() {\n    return (foo = bar + 2);\n}\n\n```\n\n## [no-script-url](http://eslint.org/docs/rules/no-script-url)\n\ndisallow use of javascript: urls\nURL\u306feval\u306e\u4e00\u5f62\u614b\u3068\u3057\u3066\u3044\u3066\u6e21\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306fURL\u89e3\u6790\u3001eval\u51e6\u7406\u3055\u308c\u3066\u30d6\u30e9\u30a6\u30b6\u306b\u3088\u3063\u3066\u306e\u8a55\u4fa1\u306b\u306a\u308b\u304b\u3089\u307f\u305f\u3044\n\n```js\nlocation.href = \"javascript:void(0)\"; /*error Script URL is a form of eval.*/\n```\n\n## [no-self-compare](http://eslint.org/docs/rules/no-self-compare)\n\ndisallow comparisons where both sides are exactly the same\n\u4e21\u5074\u304c\u307e\u3063\u305f\u304f\u540c\u3058\u3067\u3059\u6bd4\u8f03\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\n/*eslint no-self-compare: 2*/\nvar x = 10;\nif (x === x) { /*error Comparing to itself is potentially pointless.*/\n    x = 20;\n}\n```\n\n## [no-sequences](http://eslint.org/docs/rules/no-sequences)\n\ndisallow use of the comma operator\n\u30b3\u30f3\u30de\u6f14\u7b97\u5b50\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\nfoo = doSomething, val;              /*error Unexpected use of comma operator.*/\ndo {} while (doSomething(), !!test); /*error Unexpected use of comma operator.*/\nfor (; doSomething(), !!test; );     /*error Unexpected use of comma operator.*/\nif (doSomething(), !!test);          /*error Unexpected use of comma operator.*/\nswitch (val = foo(), val) {}         /*error Unexpected use of comma operator.*/\nwhile (val = foo(), val < 42);       /*error Unexpected use of comma operator.*/\nwith (doSomething(), val) {}         /*error Unexpected use of comma operator.*/\n\n//ok\n/*eslint no-sequences: 2*/\nfoo = (doSomething(), val);\n(0,eval)(\"doSomething();\");\ndo {} while ((doSomething(), !!test));\nfor (i = 0, j = 10; i < j; i++, j--);\nif ((doSomething(), !!test));\nswitch ((val = foo(), val)) {}\nwhile ((val = foo(), val < 42));\n// with ((doSomething(), val)) {}\n\n```\n\n## [no-throw-literal](http://eslint.org/docs/rules/no-throw-literal)\n\nrestrict what can be thrown as an exception\n\u4f8b\u5916\u3068\u3057\u3066\u30b9\u30ed\u30fc\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3082\u306e\u3092\u5236\u9650\u3057\u307e\u3059\n\u3053\u308c\u306f\u3001\u552f\u4e00\u306eError\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u81ea\u4f53\u307e\u305f\u306f\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u4f8b\u5916\u306e\u57fa\u5e95\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066Error\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u7528\u3057\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30b9\u30ed\u30fc\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3068\u8003\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n Error\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u57fa\u672c\u7684\u306a\u5229\u70b9\u306f\u3001\u81ea\u52d5\u7684\u306b\u3001\u5f7c\u3089\u304c\u69cb\u7bc9\u3055\u308c\u3001\u767a\u4fe1\u3055\u308c\u305f\u5834\u6240\u3092\u8ffd\u8de1\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u3053\u306e\u898f\u5247\u306f\u3001\u4f8b\u5916\u3068\u3057\u3066\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3082\u306e\u306b\u5236\u9650\u3057\u307e\u3059\u3002\n\u305d\u308c\u304c\u6700\u521d\u306b\u4f5c\u6210\u3055\u308c\u305f\u3068\u304d\u3001\u305d\u308c\u306f\u552f\u4e00\u306e\u30b9\u30ed\u30fc\u3055\u308c\u308b\u306e\u30ea\u30c6\u30e9\u30eb\u3092\u59a8\u3052\u3001\nError\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308b\u53ef\u80fd\u6027\u3092\u6301\u3064\u5f0f\u3092\u8a31\u53ef\u3059\u308b\u3088\u3046\u306b\u62e1\u5f35\u3055\u308c\u307e\u3057\u305f\u3002\n\n```js\nthrow \"error\";         /*error Expected an object to be thrown.*/\nthrow 0;               /*error Expected an object to be thrown.*/\nthrow undefined;       /*error Do not throw undefined.*/\nthrow null;            /*error Expected an object to be thrown.*/\nvar err = new Error();\nthrow \"an \" + err;     /*error Expected an object to be thrown.*/\n// err is recast to a string literal\nvar err = new Error();\nthrow `${err}`         /*error Expected an object to be thrown.*/\n\n\n//ok\nthrow new Error();\nthrow new Error(\"error\");\nvar e = new Error(\"error\");\nthrow e;\ntry {\n    throw new Error(\"error\");\n} catch (e) {\n    throw e;\n}\n```\n\n## [no-unused-expressions](http://eslint.org/docs/rules/no-unused-expressions)\n\ndisallow usage of expressions in statement position\n\u6587\u306e\u4f4d\u7f6e\u306e\u8868\u73fe\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\u672a\u4f7f\u7528\u306e\u8868\u73fe\u306e\u6392\u9664\u3092\u76ee\u6307\u3059\u3002\n\u30aa\u30d7\u30b7\u30e7\u30f3\u3044\u308d\u3044\u308d\u3042\u308b\u304b\u3089\u30ea\u30f3\u30af\u5148\u306b\u3068\u3093\u3067\u307f\u3066\u307f\u3066\u306d\n\n```js\n0        /*error Expected an assignment or function call and instead saw an expression.*/\nif(0) 0  /*error Expected an assignment or function call and instead saw an expression.*/\n{0}      /*error Expected an assignment or function call and instead saw an expression.*/\nf(0), {} /*error Expected an assignment or function call and instead saw an expression.*/\na && b() /*error Expected an assignment or function call and instead saw an expression.*/\na, b()   /*error Expected an assignment or function call and instead saw an expression.*/\n/////////////////////////////////////////////////////////////////////\n//default//ok\n{}\nf()\na = 0\nnew C\ndelete a.b\nvoid a\nc = a, b;\n```\n\n## [no-useless-call](http://eslint.org/docs/rules/no-useless-call)\n\ndisallow unnecessary .call() and .apply()\n\u5fc5\u8981\u306a\u3044\u3084\u3064\u7981\u6b62\n\n```js\n// foo(1, 2, 3);\u3068\u540c\u3058\u610f\u5473\u3060\u3057\nfoo.call(undefined, 1, 2, 3);     /*error unnecessary \".call()\".*/\nfoo.apply(undefined, [1, 2, 3]);  /*error unnecessary \".apply()\".*/\nfoo.call(null, 1, 2, 3);          /*error unnecessary \".call()\".*/\nfoo.apply(null, [1, 2, 3]);       /*error unnecessary \".apply()\".*/\n\n// \u3053\u308c\u3068\u540c\u3058\u610f\u5473\u3060\u3057\u3001obj.foo(1, 2, 3);\nobj.foo.call(obj, 1, 2, 3);       /*error unnecessary \".call()\".*/\nobj.foo.apply(obj, [1, 2, 3]);    /*error unnecessary \".apply()\".*/\n////////////////////////////////////////////////////////////////////\n//ok\n//this\u306e\u30d0\u30a4\u30f3\u30c9\u306f\u5225.\nfoo.call(obj, 1, 2, 3);\nfoo.apply(obj, [1, 2, 3]);\nobj.foo.call(null, 1, 2, 3);\nobj.foo.apply(null, [1, 2, 3]);\nobj.foo.call(otherObj, 1, 2, 3);\nobj.foo.apply(otherObj, [1, 2, 3]);\n// \u5f15\u6570\u30ea\u30b9\u30c8\u306e\u305f\u3081\u306f\u3044\u3044\nfoo.apply(undefined, args);\nfoo.apply(null, args);\nobj.foo.apply(obj, args);\n```\n\n## [no-useless-concat](http://eslint.org/docs/rules/no-useless-concat)\n\ndisallow unnecessary concatenation of literals or template literals\n\u30ea\u30c6\u30e9\u30eb\u307e\u305f\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30ea\u30c6\u30e9\u30eb\u306e\u4e0d\u8981\u306a\u9023\u7d50\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\n//10\u3068\u540c\u3058\nvar a = `some` + `string`; /*error Unexpected string concatenation of literals.*/\nvar a = '1' + '0';         /*error Unexpected string concatenation of literals.*/\nvar a = '1' + `0`;         /*error Unexpected string concatenation of literals.*/\nvar a = `1` + '0';         /*error Unexpected string concatenation of literals.*/\nvar a = `1` + `0`;         /*error Unexpected string concatenation of literals.*/\n\n/////////////////////////////////////////\n//ok\n// when a non string is included\nvar c = a + b;\nvar c = '1' + a;\nvar a = 1 + '1';\nvar c = 1 - 2;\n// when the string concatenation is multiline\nvar c = \"foo\" +\n    \"bar\";\n```\n\n## [no-void](http://eslint.org/docs/rules/no-void)\n\ndisallow use of the void operator\nvoid\u6f14\u7b97\u5b50\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\u7a7a\u6d1e\u8868\u73fe\u5f0f\u3092\u8a55\u4fa1\u3057\u3001\u672a\u5b9a\u7fa9\u3092\u8fd4\u3057\u307e\u3059\uff1avoid\u6f14\u7b97\u5b50\u306f\u5b9a\u7fa9\u30aa\u30da\u30e9\u30f3\u30c9\u3068\u30ea\u30bf\u30fc\u30f3\u3092\u53d6\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u4efb\u610f\u306e\u526f\u4f5c\u7528\u306e\u767a\u73fe\u3092\u7121\u8996\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u7a7a\u6d1e\u6f14\u7b97\u5b50\u3092\u4f7f\u7528\u3059\u308b\u4e00\u822c\u7684\u306a\u30b1\u30fc\u30b9\u306f\u3001\u672a\u5b9a\u7fa9\u306e\u5909\u6570\u304c\u53ef\u5909\u3060\u3063\u305fES5\u306e\u524d\u306b \"\u7d14\u7c8b\u306a\"\u672a\u5b9a\u7fa9\u5024\u3092\u5f97\u308b\u3053\u3068\u3067\u3059\uff1a\n\n```js\nvoid foo              /*error Expected 'undefined' and instead saw 'void'.*/\nvar foo = void bar(); /*error Expected 'undefined' and instead saw 'void'.*/\n\n\n```\n\n## [no-warning-comments](http://eslint.org/docs/rules/no-warning-comments)\n\ndisallow usage of configurable warning terms in comments\n\u30b3\u30e1\u30f3\u30c8\u6b04\u3067\u8a2d\u5b9a\u53ef\u80fd\u306a\u8b66\u544a\u7528\u8a9e\u306e\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\n// TODO: this                          /*error Unexpected todo comment.*/\n// todo: this too                      /*error Unexpected todo comment.*/\n// Even this: TODO                     /*error Unexpected todo comment.*/\n/*                                     /*error Unexpected todo comment.*/ /*error Unexpected fixme comment.*/ /*Unexpected any other term comment.*/ /*\n * The same goes for this TODO comment\n * Or a fixme\n * as well as any other term\n */\n//////////////////////////////////////////////\n//ok\n// This is to do\n// even not any other    term\n// any other terminal\n/*\n * The same goes for block comments\n * with any other interesting term\n * or fix me this\n */\n\n```\n\n## [no-with](http://eslint.org/docs/rules/no-with)\n\ndisallow use of the with statement\nwith\u4f7f\u7528\u3092\u8a31\u53ef\u3057\u307e\u305b\u3093\n\n```js\nwith (foo) { /*error Unexpected use of 'with' statement.*/\n```\n\n\n## [radix](http://eslint.org/docs/rules/radix)\n\nrequire use of the second argument for parseInt()\n\u7b2c\u4e8c\u5f15\u6570\u306e\u4f7f\u7528\u3092\u304a\u306d\u304c\u3044\u3057\u307e\u3059\n\n```js\nvar num = parseInt(\"071\");     /*error Missing radix parameter.*/\nvar num = parseInt(someValue); /*error Missing radix parameter.*/\n////////////////////////////////////\n//ok\nvar num = parseInt(\"071\", 10);\nvar num = parseFloat(someValue);\n```\n\n\n## [vars-on-top](http://eslint.org/docs/rules/vars-on-top)\n\nrequire declaration of all vars at the top of their containing scope\n\u30b9\u30b3\u30fc\u30d7\u306e\u4e0a\u90e8\u3067\u5ba3\u8a00\u3092\u3057\u3066\u306d\n\n```js\n// Variable declarations in a block:\nfunction doSomething() {\n    var first;\n    if (true) {\n        first = true;\n    }\n    var second;/*error All \"var\" declarations must be at the top of the function scope.*/\n}\n// Variable declaration in for initializer:\nfunction doSomething() {\n    for (var i=0; i<10; i++) {} /*error All \"var\" declarations must be at the top of the function scope.*/\n}\n// Variables after other statements:\nf();\nvar a;/*error All \"var\" declarations must be at the top of the function scope.*/\n//////////////////////////////////////////////////\n///ok\n\nfunction doSomething() {\n    var first;//\u4e0a\n    var second; //multiple declarations are allowed at the top\n    if (true) {\n        first = true;\n    }\n}\nfunction doSomething() {\n    var i;//\u5ba3\u8a00\u3068\u305d\u308c\u306f\u5225\n    for (i=0; i<10; i++) {}\n}\n\n```\n\n\n## [wrap-iife](http://eslint.org/docs/rules/wrap-iife)\n\nrequire immediate function invocation to be wrapped in parentheses\n\u95a2\u6570\u306e\u5373\u6642\u5b9f\u884c\u304c\u5fc5\u8981\u306a\u3068\u304d\u306f\u62ec\u5f27\u5185\u306b\u30e9\u30c3\u30d7\u304a\u306d\u3057\u3083\u3059\n\u95a2\u6570\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u306f\u3059\u3050\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u305a\u3001\u95a2\u6570\u5f0f\u306f\u3067\u304d\u307e\u3059\u3002\u95a2\u6570\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3092\u62ec\u5f27\u3067\u30e9\u30c3\u30d7\u3059\u308b\u3001\u5373\u6642\u5b9f\u884c\u95a2\u6570\u5f0f\u3068\u3044\u3046\u30c6\u30af\u30cb\u30c3\u30af\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\u62ec\u5f27\u3067\u30e9\u30c3\u30d7\u3055\u308c\u305f\u95a2\u6570\u306f\u3001\u95a2\u6570\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3067\u306f\u306a\u304f\u3001\u95a2\u6570\u5f0f\u3068\u3057\u3066\u89e3\u6790\u3055\u308c\u307e\u3059\u3002\n\n```js\nvar x = function () { return { y: 1 };}(); /*error Wrap an immediate function invocation in parentheses.*/\n```\n\n\u30e9\u30c3\u30d4\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u304c\u3042\u308a\u307e\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306f`outside`\u3067\u3059\u3002\n\n```\nvar x = (function () { return { y: 1 };})(); /*error Move the invocation into the parens that contain the function.*/\n//////////////////////////////////////////////////\n//ok\nvar x = (function () { return { y: 1 };}());\n```\n\n`inside`\u3068`any`\u3082\u3042\u308a\u307e\u3059\u3002\n\n```\nvar x = (function () { return { y: 1 };}()); /*error Wrap only the function expression in parens.*/\n//////////////////////////////////////////////////\n//ok\nvar x = (function () { return { y: 1 };})();\n```\n\n\n## [yoda](http://eslint.org/docs/rules/yoda)\n\nrequire or disallow Yoda conditions\n\u30e8\u30fc\u30c0\u3092\u8a31\u53ef\u3059\u308b\u304b\u3057\u306a\u3044\u304b\u306e\u8a2d\u5b9a\u3002\n\u30aa\u30d7\u30b7\u30e7\u30f3\u3042\u308b\u304b\u3089\u30ea\u30f3\u30af\u5148\u307f\u3066\u307f\u3066\u306d\u3002\u306a\u306b\u30e8\u30fc\u30c0\u3063\u3066\u2192\u4e0b\u8a18@mysticatea\u3055\u3093\u306e\u30b3\u30e1\u30f3\u30c8\u53c2\u7167\u3057\u3066\u306d\u3002\u306a\u308b\u307b\u3069\u30fc\n\n```js\nif (\"red\" === color) {          /*error Expected literal to be on the right side of ===.*/\n    // ...\n}\nif (true == flag) {             /*error Expected literal to be on the right side of ==.*/\n    // ...\n}\nif (5 > count) {                /*error Expected literal to be on the right side of >.*/\n    // ...\n}\nif (-1 < str.indexOf(substr)) { /*error Expected literal to be on the right side of <.*/\n    // ...\n}\nif (0 <= x && x < 1) {          /*error Expected literal to be on the right side of <=.*/\n    // ...\n}\n/////////////////////////////////////////////\n//ok\nif (5 & value) {\n    // ...\n}\nif (value === \"red\") {\n    // ...\n}\n```\n\n\n\n## \u3055\u3044\u3054\u306b\n\n\u3064\u304b\u308c\u305f\u3002\u3002\n\n\n[ESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u3056\u3063\u304f\u308a\u89e3\u8aac[\u53ef\u80fd\u6027\u3042\u308b\u30a8\u30e9\u30fc\u7de8]](http://qiita.com/M-ISO/items/f9097a75b362206c2a99)\n[ESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u3056\u3063\u304f\u308a\u89e3\u8aac[\u30b9\u30bf\u30a4\u30eb\u7de8]](http://qiita.com/M-ISO/items/113ddd448bdc496af783)\n[ESLint\u306e\u30a8\u30e9\u30fc\u30eb\u30fc\u30eb\u3002\u65e5\u672c\u8a9e\u3056\u3063\u304f\u308a\u89e3\u8aac[ES6\u7de8]](http://qiita.com/M-ISO/items/f0c2f0e669db32cf4efb)\n\n\n\n\n\n\n\n\n\n\n\n\n"}