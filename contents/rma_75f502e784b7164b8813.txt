{"context": "\n\nVS Code \u6a19\u6e96Markdown Extensions\u3067\u3001\u6539\u884c\u3092\u6709\u52b9\u306b\u3059\u308b\nQiita\u306b\u30a2\u30c3\u30d7\u3059\u308b\u305f\u3081\u306b\u3001Visual Studio Code(VS Code)\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u304c\u3001Markdown\u306e\u6539\u884c\u306b\u95a2\u3059\u308b\u4e8b\u9805\u304c\u5fae\u5999\u306b\u4ed5\u69d8\u3068\u9055\u3046\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5165\u3063\u3066\u3044\u308b\u3001Markdown\u306e\u62e1\u5f35\u6a5f\u80fd\u306f\u3001\u7a7a\u767d\uff12\u3064\u304b\u3001\u300c\\\u300d\u3067\u3001\u6539\u884c\u3068\u306a\u3063\u3066\u3044\u308b\u3002\ngithub\u3084\u3001Qiita\u3067\u306f\u3001\u6539\u884c\u305d\u306e\u307e\u307e\u3067\u3001\u6b21\u306e\u884c\u306b\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u9055\u3046\u90e8\u5206\u306f\u3001\u4ed6\u306b\u3082\u3042\u308b\u304c\u3001\u3044\u3063\u305f\u3093\u3001\u305d\u308c\u3092\u4fee\u6b63\u3067\u304d\u308c\u3070\u3001\u30a2\u30c3\u30d7\u306e\u307b\u3046\u306f\u3001\u3084\u308a\u3084\u3059\u304f\u306a\u308a\u305d\u3046\u306a\u306e\u3067\u3001\n\u6a19\u6e96\u306e\u62e1\u5f35\u6a5f\u80fd\u3092\u4fee\u6b63\u3057\u3066\u307f\u305f\u3002\n\n\u74b0\u5883\n\nWindows 10 Pro\nVisual Studio Code 1.4\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\uff1aC:\\Program Files (x86)\\Microsoft VS Code\n\n\nVisual Studio Code 1.9 2017/2/6 \u8ffd\u8a18\n\n\nVS Code Markdown\u62e1\u5f35\u6a5f\u80fd\n\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001\u4fee\u6b63\u65b9\u6cd5\u3092\u5148\u306b\u8a18\u8f09\u3057\u3066\u3001\u305d\u306e\u5f8c\u3001\u7c21\u5358\u306b\u8aac\u660e\u3092\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nMarkdown\u306e\u62e1\u5f35\u6a5f\u80fd\u306f\u3001\u300cmarkdown-it\u300d\u3092\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u4f7f\u7528\u3057\u3066\u3001HTML\u3092\u69cb\u7bc9\u3057\u3066\u3044\u308b\u3002\nhttps://markdown-it.github.io/markdown-it/#MarkdownIt.new\n\u4e0a\u8a18\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3001option\u6307\u5b9a\u306e\u8aac\u660e\u3067\u3001breaks\u3092\u5165\u308c\u308c\u3070\u3044\u3044\u3088\u3046\u3067\u3059\u3002\nbreaks - false. Set true to convert \\n in paragraphs into <br>.\n\n\u7d50\u8ad6\u3092\u8a00\u3046\u3068\u3001\u6307\u5b9a\u3059\u308b\u7b87\u6240\u306b\u3001\u6539\u884c\u3067\u3001HTML\u3067\u306ebreak\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u8a2d\u5b9a\u306e\u300cbreaks: true,\u300d\u3092\u5165\u308c\u307e\u3059\u3002\n\u62e1\u5f35\u6a5f\u80fd\u3084\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u306e\u66f4\u65b0\u3042\u308b\u3068\u3001\u5909\u66f4\u304c\u5fc5\u8981\u3060\u3051\u3069\u3002\n\n\n\u4fee\u6b63\u65b9\u6cd5\nVS Code\u306eMarkdown\u306e\u62e1\u5f35\u6a5f\u80fd\u306f\u3001\u4ee5\u4e0b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u300cVS Code\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5834\u6240\u300d\\resources\\app\\extensions\\markdown\n\u305d\u306e\u4e2d\u306b\u3042\u308b\u3001(1.4\u306e\u5834\u5408\u306f\u3001)out/extension.js\u304c\u4fee\u6b63\u5bfe\u8c61\u3067\u3059\u3002\n2017/2/6 \u6642\u70b9\u306e\u6700\u65b01.9\u306f\u3001\u6700\u5f8c\u306b\u8ffd\u8a18\u3057\u307e\u3057\u305f\u3002\n\nC:\\Program Files (x86)\\Microsoft VS Code\\resources\\app\\extensions\\markdown\\out/extension.js\n\n\u3067\u306f\u3001out/extension.js\u306e\u4fee\u6b63\u7b87\u6240\u304c\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\u30b3\u30e1\u30f3\u30c8\u304c\u66f8\u3044\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u4fee\u6b63\u7b87\u6240\u3067\u3059\u3002\n\u4fee\u6b63\u5f8c\u306b\u3001\u518d\u8d77\u52d5\u3059\u308c\u3070\u3001\u6539\u884c\u30b3\u30fc\u30c9\u304c\u3001<br>\u306b\u4ee3\u308f\u308a\u307e\u3059\u3002\n\n\u79c1\u306e\u5834\u5408\u306f\u3001C:\\Program Files (x86)\u306e\u914d\u4e0b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u4fee\u6b63\u306b\u306f\u3001\u7ba1\u7406\u8005\u6a29\u9650\u304c\u5fc5\u8981\u3067\u3059\u3002\nVS Code\u3092\u4e00\u6642\u7684\u306b\u3001\u7ba1\u7406\u8005\u6a29\u9650\u3067\u8d77\u52d5\u3057\u3066\u3001\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u300cextension.js\u300d\u3092\u958b\u3044\u3066\u3001\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n    MDDocumentContentProvider.prototype.createRenderer = function () {\n        var hljs = require('highlight.js');\n        var mdnh = require('markdown-it-named-headers');\n        var md = require('markdown-it')({\n            html: true,\n            breaks: true, // \u3053\u3061\u3089\u3092\u8ffd\u52a0\n            highlight: function (str, lang) {\n                if (lang && hljs.getLanguage(lang)) {\n                    try {\n                        return \"<pre class=\\\"hljs\\\"><code><div>\" + hljs.highlight(lang, str, true).value + \"</div></code></pre>\";\n                    }\n                    catch (error) { }\n                }\n                return \"<pre class=\\\"hljs\\\"><code><div>\" + md.utils.escapeHtml(str) + \"</div></code></pre>\";\n            }\n        }).use(mdnh, {});\n        return md;\n    };\n\n\n\u8aac\u660e\n\u3059\u3067\u306b\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3001Markdown\u306e\u62e1\u5f35\u6a5f\u80fd\u306f\u3001JavaScript\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30b3\u30fc\u30c9\u3092\u898b\u308b\u305f\u3081\u306b\u3001github\u304b\u3089\u78ba\u8a8d\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nhttps://github.com/Microsoft/vscode\n\u78ba\u8a8d\u5bfe\u8c61\u306f\u3001extension\\markdown\\src\\extension.ts\u3067\u3059\u3002\nactivate\u95a2\u6570\u306e\u5fc5\u8981\u306a\u500b\u6240\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u307f\u307e\u3059\u3002\nexport function activate(context: ExtensionContext) {\n    \u30fb\u30fb\u30fb\n    let provider = new MDDocumentContentProvider(context);\n    let registration = vscode.workspace.registerTextDocumentContentProvider('markdown', provider);\n    \u30fb\u30fb\u30fb\n    vscode.workspace.onDidChangeTextDocument(event => {\n        if (isMarkdownFile(event.document)) {\n            const uri = getMarkdownUri(event.document.uri);\n            provider.update(uri);\n        }\n    });\n    \u30fb\u30fb\u30fb\n}\n\n\u300conDidChangeTextDocument\u300d\u3092\u898b\u3066\u308f\u304b\u308b\u3088\u3046\u306b\u3001\u300cprovider.update(uri)\u300d\u3067\u3001html\u3078\u306e\u5909\u63db\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\nmarkdown\u306e\u672c\u4f53\u306f\u3001\u300cMDDocumentContentProvider\u300d\u30af\u30e9\u30b9\u3068\u306a\u308a\u307e\u3059\u3002\n\u30af\u30e9\u30b9\u306f\u3001extension.ts\u306e\u4e0b\u306e\u307b\u3046\u306b\u3001\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u304c\u9577\u3044\u306e\u3067\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u90e8\u5206\u3068html\u8868\u793a\u306e\u95a2\u9023\u500b\u6240\u306b\u5206\u3051\u3066\u3001\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u90e8\u5206\n\u3067\u306f\u3001\u306f\u3058\u3081\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u90e8\u5206\u3067\u3059\u3002\nclass MDDocumentContentProvider implements TextDocumentContentProvider {\n    private _context: ExtensionContext;\n    private _onDidChange = new EventEmitter<Uri>();\n    private _waiting : boolean;\n    private _renderer : IRenderer;\n\n    constructor(context: ExtensionContext) {\n        this._context = context;\n        this._waiting = false;\n        this._renderer = this.createRenderer();\n    }\n\n    private createRenderer() : IRenderer {\n        const hljs = require('highlight.js');\n        const mdnh = require('markdown-it-named-headers');\n        const md = require('markdown-it')({\n            html: true,\n            highlight: function (str, lang) {\n                if (lang && hljs.getLanguage(lang)) {\n                    try {\n                        return `<pre class=\"hljs\"><code><div>${hljs.highlight(lang, str, true).value}</div></code></pre>`;\n                    } catch (error) { }\n                }\n                return `<pre class=\"hljs\"><code><div>${md.utils.escapeHtml(str)}</div></code></pre>`;\n            }\n        }).use(mdnh, {});\n        return md;\n    }\n}\n\n\u300cconstructor\u300d\u3067\u3001\u5927\u4e8b\u306a\u3068\u3053\u308d\u306f\u3001createRenderer\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u300cmarkdown-it\u300d\u304c\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u3068\u3053\u308d\u306b\u306a\u308a\u307e\u3059\u3002\n\u524d\u8ff0\u3057\u305f\u3001JavaScript\u306e\u4fee\u6b63\u7b87\u6240\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nmarkdown-it\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u8a2d\u5b9a\u3084\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u8ffd\u52a0\u306a\u3069\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u969b\u306eHTML\u4f5c\u6210\u306f\u3001\u5225\u306e\u3068\u3053\u308d\u3067\u3084\u3063\u3066\u3044\u307e\u3059\u3002\n\nHTML\u8868\u793a\u90e8\u5206\n\u3067\u306f\u3001HTML\u8868\u793a\u90e8\u5206\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u3001\u8aac\u660e\u3057\u307e\u3059\u3002\nclass MDDocumentContentProvider implements TextDocumentContentProvider {\n    private _context: ExtensionContext;\n    private _onDidChange = new EventEmitter<Uri>();\n    private _waiting : boolean;\n    private _renderer : IRenderer;\n\n    public provideTextDocumentContent(uri: Uri): Thenable<string> {\n\n        return vscode.workspace.openTextDocument(Uri.parse(uri.query)).then(document => {\n            const head = [].concat(\n                '<!DOCTYPE html>',\n                '<html>',\n                '<head>',\n                '<meta http-equiv=\"Content-type\" content=\"text/html;charset=UTF-8\">',\n                `<link rel=\"stylesheet\" type=\"text/css\" href=\"${this.getMediaPath('markdown.css')}\" >`,\n                `<link rel=\"stylesheet\" type=\"text/css\" href=\"${this.getMediaPath('tomorrow.css')}\" >`,\n                this.computeCustomStyleSheetIncludes(uri),\n                `<base href=\"${document.uri.toString(true)}\">`,\n                '</head>',\n                '<body>'\n            ).join('\\n');\n\n            const body = this._renderer.render(document.getText());\n\n            const tail = [\n                '</body>',\n                '</html>'\n            ].join('\\n');\n            eturn head + body + tail;\n        });\n    }\n\n    get onDidChange(): Event<Uri> {\n        return this._onDidChange.event;\n    }\n\n    public update(uri: Uri) {\n        if (!this._waiting) {\n            this._waiting = true;\n            setTimeout(() => {\n                this._waiting = false;\n                this._onDidChange.fire(uri);\n            }, 300);\n        }\n    }\n}\n\n\u307e\u305a\u3001\u306f\u3058\u3081\u306b\u898b\u308b\u3068\u3053\u308d\u306f\u3001MDDocumentContentProvider\u30af\u30e9\u30b9\u304c\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306eTextDocumentContentProvider\u3092implements\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\nTextDocumentContentProvider\u306evscode.d.ts\u306e\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u4ee5\u4e0b\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002\n    /**\n     * A text document content provider allows to add readonly documents\n     * to the editor, such as source from a dll or generated html from md.\n     *\n     * Content providers are [registered](#workbench.registerTextDocumentContentProvider)\n     * for a [uri-scheme](#Uri.scheme). When a uri with that scheme is to\n     * be [loaded](#workbench.openTextDocument) the content provider is\n     * asked.\n     */\n    export interface TextDocumentContentProvider {\n\n        /**\n         * An event to signal a resource has changed.\n         */\n        onDidChange?: Event<Uri>;\n\n        /**\n         * Provide textual content for a given uri.\n         *\n         * The editor will use the returned string-content to create a readonly\n         * [document](TextDocument). Resources allocated should be released when\n         * the corresponding document has been [closed](#workbench.onDidCloseTextDocument).\n         *\n         * @param uri An uri which scheme matches the scheme this provider was [registered](#workspace.registerTextDocumentContentProvider) for.\n         * @param token A cancellation token.\n         * @return A string or a thenable that resolves to such.\n         */\n        provideTextDocumentContent(uri: Uri, token: CancellationToken): string | Thenable<string>;\n    }\n\nTextDocumentContentProvider\u306f\u3001\u30a8\u30c7\u30a3\u30bf\u9818\u57df\u306b\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068\u3057\u3066\u3001\u8ffd\u52a0\u3092\u3059\u308bAPI\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nprovideTextDocumentContent\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001\u5fc5\u8981\u306a\u60c5\u5831\u3092\u4f5c\u6210\u3057\u3066\u3001\u623b\u3059\u3053\u3068\u306b\u3088\u308a\u3001markdown\u306e\u5834\u5408\u306f\u3001HTML\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\u3082\u3046\u5c11\u3057\u89e3\u6790\u3057\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u307e\u3060\u3001\u308f\u304b\u3063\u3066\u3044\u306a\u3044\u3068\u3053\u308d\u304c\u591a\u3044\u306e\u3067\u3001\u4eca\u56de\u306f\u3001\u3053\u3061\u3089\u3067\u3001\u7d42\u308f\u308a\u306b\u3057\u307e\u3059\u3002\n\nEventEmitter\nvscode.workspace.openTextDocument\nTelemetryReporter\n\n\n1.9\u306e\u5834\u5408\u306e\u4fee\u6b63\u7b87\u6240 2017/2/6 \u8ffd\u8a18\nout/markdownEngine.js\u304c\u4fee\u6b63\u5bfe\u8c61\u3067\u3059\u3002\n    Object.defineProperty(MarkdownEngine.prototype, \"engine\", {\n        get: function () {\n            var _this = this;\n            if (!this.md) {\n                var hljs_1 = require('highlight.js');\n                var mdnh = require('markdown-it-named-headers');\n                this.md = require('markdown-it')({\n                    html: true,\n                    breaks: true,\n                    highlight: function (str, lang) {\n                        if (lang && hljs_1.getLanguage(lang)) {\n                            try {\n                                return \"<pre class=\\\"hljs\\\"><code><div>\" + hljs_1.highlight(lang, str, true).value + \"</div></code></pre>\";\n                            }\n                            catch (error) { }\n                        }\n                        return \"<pre class=\\\"hljs\\\"><code><div>\" + _this.engine.utils.escapeHtml(str) + \"</div></code></pre>\";\n                    }\n                }).use(mdnh, {});\n                for (var _i = 0, _a = ['paragraph_open', 'heading_open', 'image', 'code_block', 'blockquote_open', 'list_item_open']; _i < _a.length; _i++) {\n                    var renderName = _a[_i];\n                    this.addLineNumberRenderer(this.md, renderName);\n                }\n                this.addLinkNormalizer(this.md);\n                this.addLinkValidator(this.md);\n            }\n            return this.md;\n        },\n        enumerable: true,\n        configurable: true\n    });\n\n\n\u5099\u8003\nTextDocumentContentProvider\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u3001github\u4e0a\u306eMicrosoft\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/Microsoft/vscode-extension-samples\n# VS Code \u6a19\u6e96Markdown Extensions\u3067\u3001\u6539\u884c\u3092\u6709\u52b9\u306b\u3059\u308b\n\nQiita\u306b\u30a2\u30c3\u30d7\u3059\u308b\u305f\u3081\u306b\u3001Visual Studio Code(VS Code)\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u304c\u3001Markdown\u306e\u6539\u884c\u306b\u95a2\u3059\u308b\u4e8b\u9805\u304c\u5fae\u5999\u306b\u4ed5\u69d8\u3068\u9055\u3046\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5165\u3063\u3066\u3044\u308b\u3001Markdown\u306e\u62e1\u5f35\u6a5f\u80fd\u306f\u3001\u7a7a\u767d\uff12\u3064\u304b\u3001\u300c\\\\\u300d\u3067\u3001\u6539\u884c\u3068\u306a\u3063\u3066\u3044\u308b\u3002\ngithub\u3084\u3001Qiita\u3067\u306f\u3001\u6539\u884c\u305d\u306e\u307e\u307e\u3067\u3001\u6b21\u306e\u884c\u306b\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u9055\u3046\u90e8\u5206\u306f\u3001\u4ed6\u306b\u3082\u3042\u308b\u304c\u3001\u3044\u3063\u305f\u3093\u3001\u305d\u308c\u3092\u4fee\u6b63\u3067\u304d\u308c\u3070\u3001\u30a2\u30c3\u30d7\u306e\u307b\u3046\u306f\u3001\u3084\u308a\u3084\u3059\u304f\u306a\u308a\u305d\u3046\u306a\u306e\u3067\u3001\n\u6a19\u6e96\u306e\u62e1\u5f35\u6a5f\u80fd\u3092\u4fee\u6b63\u3057\u3066\u307f\u305f\u3002\n\n## \u74b0\u5883\n\n- Windows 10 Pro\n- Visual Studio Code 1.4\n\t- \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\uff1aC:\\Program Files (x86)\\Microsoft VS Code\n- Visual Studio Code 1.9 2017/2/6 \u8ffd\u8a18\n\n## VS Code Markdown\u62e1\u5f35\u6a5f\u80fd\n\n\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001\u4fee\u6b63\u65b9\u6cd5\u3092\u5148\u306b\u8a18\u8f09\u3057\u3066\u3001\u305d\u306e\u5f8c\u3001\u7c21\u5358\u306b\u8aac\u660e\u3092\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nMarkdown\u306e\u62e1\u5f35\u6a5f\u80fd\u306f\u3001\u300cmarkdown-it\u300d\u3092\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u4f7f\u7528\u3057\u3066\u3001HTML\u3092\u69cb\u7bc9\u3057\u3066\u3044\u308b\u3002\n\n[https://markdown-it.github.io/markdown-it/#MarkdownIt.new](https://markdown-it.github.io/markdown-it/#MarkdownIt.new)\n\u4e0a\u8a18\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3001option\u6307\u5b9a\u306e\u8aac\u660e\u3067\u3001breaks\u3092\u5165\u308c\u308c\u3070\u3044\u3044\u3088\u3046\u3067\u3059\u3002\n\n**breaks - false. Set true to convert \\n in paragraphs into \\<br>.**\n\n> \u7d50\u8ad6\u3092\u8a00\u3046\u3068\u3001\u6307\u5b9a\u3059\u308b\u7b87\u6240\u306b\u3001\u6539\u884c\u3067\u3001HTML\u3067\u306ebreak\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u8a2d\u5b9a\u306e\u300c**breaks: true,**\u300d\u3092\u5165\u308c\u307e\u3059\u3002\n> \u62e1\u5f35\u6a5f\u80fd\u3084\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u306e\u66f4\u65b0\u3042\u308b\u3068\u3001\u5909\u66f4\u304c\u5fc5\u8981\u3060\u3051\u3069\u3002\n\n### \u4fee\u6b63\u65b9\u6cd5\n\nVS Code\u306eMarkdown\u306e\u62e1\u5f35\u6a5f\u80fd\u306f\u3001\u4ee5\u4e0b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u300cVS Code\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5834\u6240\u300d\\resources\\app\\extensions\\markdown\n\u305d\u306e\u4e2d\u306b\u3042\u308b\u3001(1.4\u306e\u5834\u5408\u306f\u3001)**out/extension.js**\u304c\u4fee\u6b63\u5bfe\u8c61\u3067\u3059\u3002\n2017/2/6 \u6642\u70b9\u306e\u6700\u65b01.9\u306f\u3001\u6700\u5f8c\u306b\u8ffd\u8a18\u3057\u307e\u3057\u305f\u3002\n\n> C:\\Program Files (x86)\\Microsoft VS Code\\resources\\app\\extensions\\markdown\\out/extension.js\n\n\n\u3067\u306f\u3001out/extension.js\u306e\u4fee\u6b63\u7b87\u6240\u304c\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\u30b3\u30e1\u30f3\u30c8\u304c\u66f8\u3044\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u4fee\u6b63\u7b87\u6240\u3067\u3059\u3002\n\u4fee\u6b63\u5f8c\u306b\u3001\u518d\u8d77\u52d5\u3059\u308c\u3070\u3001\u6539\u884c\u30b3\u30fc\u30c9\u304c\u3001\\<br>\u306b\u4ee3\u308f\u308a\u307e\u3059\u3002\n\n> \u79c1\u306e\u5834\u5408\u306f\u3001C:\\Program Files (x86)\u306e\u914d\u4e0b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u4fee\u6b63\u306b\u306f\u3001\u7ba1\u7406\u8005\u6a29\u9650\u304c\u5fc5\u8981\u3067\u3059\u3002\n> VS Code\u3092\u4e00\u6642\u7684\u306b\u3001\u7ba1\u7406\u8005\u6a29\u9650\u3067\u8d77\u52d5\u3057\u3066\u3001\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u300cextension.js\u300d\u3092\u958b\u3044\u3066\u3001\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```ts\n    MDDocumentContentProvider.prototype.createRenderer = function () {\n        var hljs = require('highlight.js');\n        var mdnh = require('markdown-it-named-headers');\n        var md = require('markdown-it')({\n            html: true,\n            breaks: true, // \u3053\u3061\u3089\u3092\u8ffd\u52a0\n            highlight: function (str, lang) {\n                if (lang && hljs.getLanguage(lang)) {\n                    try {\n                        return \"<pre class=\\\"hljs\\\"><code><div>\" + hljs.highlight(lang, str, true).value + \"</div></code></pre>\";\n                    }\n                    catch (error) { }\n                }\n                return \"<pre class=\\\"hljs\\\"><code><div>\" + md.utils.escapeHtml(str) + \"</div></code></pre>\";\n            }\n        }).use(mdnh, {});\n        return md;\n    };\n```\n\n\n### \u8aac\u660e\n\n\u3059\u3067\u306b\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3001Markdown\u306e\u62e1\u5f35\u6a5f\u80fd\u306f\u3001JavaScript\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30b3\u30fc\u30c9\u3092\u898b\u308b\u305f\u3081\u306b\u3001github\u304b\u3089\u78ba\u8a8d\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n[https://github.com/Microsoft/vscode](https://github.com/Microsoft/vscode)\n\n\u78ba\u8a8d\u5bfe\u8c61\u306f\u3001extension\\markdown\\src\\extension.ts\u3067\u3059\u3002\nactivate\u95a2\u6570\u306e\u5fc5\u8981\u306a\u500b\u6240\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u307f\u307e\u3059\u3002\n\n```ts\nexport function activate(context: ExtensionContext) {\n\t\u30fb\u30fb\u30fb\n\tlet provider = new MDDocumentContentProvider(context);\n\tlet registration = vscode.workspace.registerTextDocumentContentProvider('markdown', provider);\n\t\u30fb\u30fb\u30fb\n\tvscode.workspace.onDidChangeTextDocument(event => {\n\t\tif (isMarkdownFile(event.document)) {\n\t\t\tconst uri = getMarkdownUri(event.document.uri);\n\t\t\tprovider.update(uri);\n\t\t}\n\t});\n\t\u30fb\u30fb\u30fb\n}\n```\n\n\u300conDidChangeTextDocument\u300d\u3092\u898b\u3066\u308f\u304b\u308b\u3088\u3046\u306b\u3001\u300cprovider.update(uri)\u300d\u3067\u3001html\u3078\u306e\u5909\u63db\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\nmarkdown\u306e\u672c\u4f53\u306f\u3001\u300cMDDocumentContentProvider\u300d\u30af\u30e9\u30b9\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u30af\u30e9\u30b9\u306f\u3001extension.ts\u306e\u4e0b\u306e\u307b\u3046\u306b\u3001\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u304c\u9577\u3044\u306e\u3067\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u90e8\u5206\u3068html\u8868\u793a\u306e\u95a2\u9023\u500b\u6240\u306b\u5206\u3051\u3066\u3001\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\n\n#### \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u90e8\u5206\n\n\u3067\u306f\u3001\u306f\u3058\u3081\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u90e8\u5206\u3067\u3059\u3002\n\n```ts\nclass MDDocumentContentProvider implements TextDocumentContentProvider {\n\tprivate _context: ExtensionContext;\n\tprivate _onDidChange = new EventEmitter<Uri>();\n\tprivate _waiting : boolean;\n\tprivate _renderer : IRenderer;\n\n\tconstructor(context: ExtensionContext) {\n\t\tthis._context = context;\n\t\tthis._waiting = false;\n\t\tthis._renderer = this.createRenderer();\n\t}\n\n\tprivate createRenderer() : IRenderer {\n\t\tconst hljs = require('highlight.js');\n\t\tconst mdnh = require('markdown-it-named-headers');\n\t\tconst md = require('markdown-it')({\n\t\t\thtml: true,\n\t\t\thighlight: function (str, lang) {\n\t\t\t\tif (lang && hljs.getLanguage(lang)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn `<pre class=\"hljs\"><code><div>${hljs.highlight(lang, str, true).value}</div></code></pre>`;\n\t\t\t\t\t} catch (error) { }\n\t\t\t\t}\n\t\t\t\treturn `<pre class=\"hljs\"><code><div>${md.utils.escapeHtml(str)}</div></code></pre>`;\n\t\t\t}\n\t\t}).use(mdnh, {});\n\t\treturn md;\n\t}\n}\n```\n\n\u300cconstructor\u300d\u3067\u3001\u5927\u4e8b\u306a\u3068\u3053\u308d\u306f\u3001createRenderer\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u300cmarkdown-it\u300d\u304c\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u3068\u3053\u308d\u306b\u306a\u308a\u307e\u3059\u3002\n\u524d\u8ff0\u3057\u305f\u3001JavaScript\u306e\u4fee\u6b63\u7b87\u6240\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nmarkdown-it\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u8a2d\u5b9a\u3084\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u8ffd\u52a0\u306a\u3069\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u969b\u306eHTML\u4f5c\u6210\u306f\u3001\u5225\u306e\u3068\u3053\u308d\u3067\u3084\u3063\u3066\u3044\u307e\u3059\u3002\n\n#### HTML\u8868\u793a\u90e8\u5206\n\n\u3067\u306f\u3001HTML\u8868\u793a\u90e8\u5206\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u3001\u8aac\u660e\u3057\u307e\u3059\u3002\n\n```ts\nclass MDDocumentContentProvider implements TextDocumentContentProvider {\n\tprivate _context: ExtensionContext;\n\tprivate _onDidChange = new EventEmitter<Uri>();\n\tprivate _waiting : boolean;\n\tprivate _renderer : IRenderer;\n\n\tpublic provideTextDocumentContent(uri: Uri): Thenable<string> {\n\n\t\treturn vscode.workspace.openTextDocument(Uri.parse(uri.query)).then(document => {\n\t\t\tconst head = [].concat(\n\t\t\t\t'<!DOCTYPE html>',\n\t\t\t\t'<html>',\n\t\t\t\t'<head>',\n\t\t\t\t'<meta http-equiv=\"Content-type\" content=\"text/html;charset=UTF-8\">',\n\t\t\t\t`<link rel=\"stylesheet\" type=\"text/css\" href=\"${this.getMediaPath('markdown.css')}\" >`,\n\t\t\t\t`<link rel=\"stylesheet\" type=\"text/css\" href=\"${this.getMediaPath('tomorrow.css')}\" >`,\n\t\t\t\tthis.computeCustomStyleSheetIncludes(uri),\n\t\t\t\t`<base href=\"${document.uri.toString(true)}\">`,\n\t\t\t\t'</head>',\n\t\t\t\t'<body>'\n\t\t\t).join('\\n');\n\n\t\t\tconst body = this._renderer.render(document.getText());\n\n\t\t\tconst tail = [\n\t\t\t\t'</body>',\n\t\t\t\t'</html>'\n\t\t\t].join('\\n');\n\t\t\teturn head + body + tail;\n\t\t});\n\t}\n\n\tget onDidChange(): Event<Uri> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tpublic update(uri: Uri) {\n\t\tif (!this._waiting) {\n\t\t\tthis._waiting = true;\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._waiting = false;\n\t\t\t\tthis._onDidChange.fire(uri);\n\t\t\t}, 300);\n\t\t}\n\t}\n}\n```\n\n\u307e\u305a\u3001\u306f\u3058\u3081\u306b\u898b\u308b\u3068\u3053\u308d\u306f\u3001MDDocumentContentProvider\u30af\u30e9\u30b9\u304c\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306eTextDocumentContentProvider\u3092implements\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\nTextDocumentContentProvider\u306evscode.d.ts\u306e\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u4ee5\u4e0b\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n```ts\n\t/**\n\t * A text document content provider allows to add readonly documents\n\t * to the editor, such as source from a dll or generated html from md.\n\t *\n\t * Content providers are [registered](#workbench.registerTextDocumentContentProvider)\n\t * for a [uri-scheme](#Uri.scheme). When a uri with that scheme is to\n\t * be [loaded](#workbench.openTextDocument) the content provider is\n\t * asked.\n\t */\n\texport interface TextDocumentContentProvider {\n\n\t\t/**\n\t\t * An event to signal a resource has changed.\n\t\t */\n\t\tonDidChange?: Event<Uri>;\n\n\t\t/**\n\t\t * Provide textual content for a given uri.\n\t\t *\n\t\t * The editor will use the returned string-content to create a readonly\n\t\t * [document](TextDocument). Resources allocated should be released when\n\t\t * the corresponding document has been [closed](#workbench.onDidCloseTextDocument).\n\t\t *\n\t\t * @param uri An uri which scheme matches the scheme this provider was [registered](#workspace.registerTextDocumentContentProvider) for.\n\t\t * @param token A cancellation token.\n\t\t * @return A string or a thenable that resolves to such.\n\t\t */\n\t\tprovideTextDocumentContent(uri: Uri, token: CancellationToken): string | Thenable<string>;\n\t}\n```\n\nTextDocumentContentProvider\u306f\u3001\u30a8\u30c7\u30a3\u30bf\u9818\u57df\u306b\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068\u3057\u3066\u3001\u8ffd\u52a0\u3092\u3059\u308bAPI\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nprovideTextDocumentContent\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001\u5fc5\u8981\u306a\u60c5\u5831\u3092\u4f5c\u6210\u3057\u3066\u3001\u623b\u3059\u3053\u3068\u306b\u3088\u308a\u3001markdown\u306e\u5834\u5408\u306f\u3001HTML\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n\u3082\u3046\u5c11\u3057\u89e3\u6790\u3057\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u307e\u3060\u3001\u308f\u304b\u3063\u3066\u3044\u306a\u3044\u3068\u3053\u308d\u304c\u591a\u3044\u306e\u3067\u3001\u4eca\u56de\u306f\u3001\u3053\u3061\u3089\u3067\u3001\u7d42\u308f\u308a\u306b\u3057\u307e\u3059\u3002\n\n- EventEmitter<Uri>\n- vscode.workspace.openTextDocument\n- TelemetryReporter\n\n## 1.9\u306e\u5834\u5408\u306e\u4fee\u6b63\u7b87\u6240 2017/2/6 \u8ffd\u8a18\n**out/markdownEngine.js**\u304c\u4fee\u6b63\u5bfe\u8c61\u3067\u3059\u3002\n\n```\n    Object.defineProperty(MarkdownEngine.prototype, \"engine\", {\n        get: function () {\n            var _this = this;\n            if (!this.md) {\n                var hljs_1 = require('highlight.js');\n                var mdnh = require('markdown-it-named-headers');\n                this.md = require('markdown-it')({\n                    html: true,\n                    breaks: true,\n                    highlight: function (str, lang) {\n                        if (lang && hljs_1.getLanguage(lang)) {\n                            try {\n                                return \"<pre class=\\\"hljs\\\"><code><div>\" + hljs_1.highlight(lang, str, true).value + \"</div></code></pre>\";\n                            }\n                            catch (error) { }\n                        }\n                        return \"<pre class=\\\"hljs\\\"><code><div>\" + _this.engine.utils.escapeHtml(str) + \"</div></code></pre>\";\n                    }\n                }).use(mdnh, {});\n                for (var _i = 0, _a = ['paragraph_open', 'heading_open', 'image', 'code_block', 'blockquote_open', 'list_item_open']; _i < _a.length; _i++) {\n                    var renderName = _a[_i];\n                    this.addLineNumberRenderer(this.md, renderName);\n                }\n                this.addLinkNormalizer(this.md);\n                this.addLinkValidator(this.md);\n            }\n            return this.md;\n        },\n        enumerable: true,\n        configurable: true\n    });\n```\n\n## \u5099\u8003\nTextDocumentContentProvider\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u3001github\u4e0a\u306eMicrosoft\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\n[https://github.com/Microsoft/vscode-extension-samples](https://github.com/Microsoft/vscode-extension-samples)\n", "tags": ["VSCode", "VisualStudioCode", "extension", "\u62e1\u5f35\u6a5f\u80fd"]}