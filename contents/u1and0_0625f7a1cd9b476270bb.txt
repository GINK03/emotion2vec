{"context": "\n\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\n\n\u7dda\u5f62\u30c7\u30fc\u30bf\nn=20\n\na = np.arange(n).reshape(4, -1); a  # 5\u5217\u306e\u884c\u5217\n\narray([[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n        17, 18, 19, 20, 21, 22, 23, 24],\n       [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\n        42, 43, 44, 45, 46, 47, 48, 49],\n       [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\n        67, 68, 69, 70, 71, 72, 73, 74],\n       [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,\n        92, 93, 94, 95, 96, 97, 98, 99]])\n\ndf = pd.DataFrame(a, columns=list('abcde')); df\n\n\n\n\n\n\na\nb\nc\nd\ne\n\n\n\n\n0\n0\n1\n2\n3\n4\n\n\n1\n5\n6\n7\n8\n9\n\n\n2\n10\n11\n12\n13\n14\n\n\n3\n15\n16\n17\n18\n19\n\n\n\n\n\n\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\nr = np.random.randn(4, 5); r\n\narray([[-0.37840346, -0.84591793,  0.50590263,  0.0544243 ,  0.59361247],\n       [-0.2726931 , -1.74415635,  0.0199559 , -0.20695113, -1.19559455],\n       [-0.59799566, -0.26810224, -0.18738038,  1.05843686,  0.72317579],\n       [ 1.23389386,  1.91293041, -1.33322818,  0.78255026,  2.04737357]])\n\ndf = pd.DataFrame(r, columns=list('abcde')); df\n\n\n\n\n\n\na\nb\nc\nd\ne\n\n\n\n\n0\n-0.378403\n-0.845918\n0.505903\n0.054424\n0.593612\n\n\n1\n-0.272693\n-1.744156\n0.019956\n-0.206951\n-1.195595\n\n\n2\n-0.597996\n-0.268102\n-0.187380\n1.058437\n0.723176\n\n\n3\n1.233894\n1.912930\n-1.333228\n0.782550\n2.047374\n\n\n\n\ndf.plot()\n\n<matplotlib.axes._subplots.AxesSubplot at 0x17699af2a58>\n\n\ndf = pd.DataFrame(np.random.randn(n,n))\n\nplt.contourf(df, cmap='jet')\n\n<matplotlib.contour.QuadContourSet at 0x1769a1a12b0>\n\n\n\u7b49\u9ad8\u7dda\u8868\u793a\nplt.pcolor(df, cmap='jet')\n\n<matplotlib.collections.PolyCollection at 0x1769b1e2208>\n\n\n\u30ab\u30e9\u30fc\u30de\u30c3\u30d7\u8868\u793a\n\nsin\u6ce2\nn=100\nx = np.linspace(0, 2*np.pi, n)\n\ns = pd.Series(np.sin(x), index=x)\ns.plot()\n\n<matplotlib.axes._subplots.AxesSubplot at 0x1769e695780>\n\n\nsin\u6ce2\nsnoise = s + 0.1 * np.random.randn(n)\nsdf = pd.DataFrame({'sin wave':s, 'noise wave': snoise})\nsdf.plot(color=('r', 'b'))\n\n<matplotlib.axes._subplots.AxesSubplot at 0x1769e8586d8>\n\n\n\u30ce\u30a4\u30ba\u3092\u306e\u305b\u305f\n\n\u6b63\u898f\u5206\u5e03\nfrom  scipy import stats as ss\n\nmedian = x[int(n/2)]  # x\u306e\u4e2d\u592e\u5024\ng = pd.Series(ss.norm.pdf(x, loc=median), x)\ng.plot()\n\n<matplotlib.axes._subplots.AxesSubplot at 0x1769ffba128>\n\n\ngnoise = g + 0.01 * np.random.randn(n)\ndf = pd.DataFrame({'gauss wave':g, 'noise wave': gnoise})\ndf.plot(color=('r', 'b'))\n\n<matplotlib.axes._subplots.AxesSubplot at 0x1769e970828>\n\n\n\nlog\u95a2\u6570\nmedian = x[int(n/2)]  # x\u306e\u4e2d\u592e\u5024\nx1 = x + 10e-3\nl = pd.Series(np.log(x1), x1)\nl.plot()\n\n<matplotlib.axes._subplots.AxesSubplot at 0x1769ffba5f8>\n\n\nlnoise = l + 0.1 * np.random.randn(n)\ndf = pd.DataFrame({'log wave':l, 'noise wave': lnoise})\ndf.plot(color=('r', 'b'))\n\n<matplotlib.axes._subplots.AxesSubplot at 0x176a00ec358>\n\n\n\n\u30e9\u30f3\u30c0\u30e0\u30a6\u30a9\u30fc\u30af\nn = 1000\nse = pd.Series(np.random.randint(-1, 2, n)).cumsum()\nse.plot()\n\n<matplotlib.axes._subplots.AxesSubplot at 0x284f3c62c18>\n\n\nnp.random.randint(-1, 2, n)\u3067(-1, 0, 1)\u306e\u3069\u308c\u304b\u3092\u30e9\u30f3\u30c0\u30e0\u306bn\u500b\u751f\u6210\u3057\u3001cumsum()\u3067\u7a4d\u307f\u4e0a\u3052\u5408\u8a08\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u30e9\u30f3\u30c0\u30e0\u30a6\u30a9\u30fc\u30af\u3092\u63cf\u304f\u3002\nsma100 = se.rolling(100).mean()\nema100 = se.ewm(span=100).mean()\n\ndf = pd.DataFrame({'Chart': se,  'SMA100': sma100, 'EMA100': ema100})\ndf.plot(style = ['--','-','-'])\n\n<matplotlib.axes._subplots.AxesSubplot at 0x284f3cadcc0>\n\n\n\u5358\u7d14\u79fb\u52d5\u5e73\u5747\u7dda(Simple Moving Average)\u3068\u6307\u6570\u79fb\u52d5\u5e73\u5747\u7dda(Exponential Moving Average)\u3092\u540c\u6642\u306b\u63cf\u753b\u3057\u305f\u3002\nEMA\u306e\u65b9\u304cSMA\u3068\u6bd4\u3079\u3066\u4e00\u822c\u7684\u306b\u76f4\u8fd1\u306e\u52d5\u304d\u3092\u53cd\u6620\u3057\u3084\u3059\u304f\u3001\u30c8\u30ec\u30f3\u30c9\u306b\u8ffd\u968f\u3057\u3084\u3059\u3044\u3068\u3044\u308f\u308c\u3066\u3044\u308b\u3002\n\u8a18\u4e8b\u306e\u5185\u5bb9\u3068\u306f\u95a2\u4fc2\u306a\u3044\u3051\u3069\u3001\u4eca\u3055\u3089\u306a\u304c\u3089jupyter notebook\u3067\u66f8\u3044\u3066md\u5f62\u5f0f\u3067\u843d\u3068\u3059\u3068\u3001qiita\u306b\u306f\u3063\u3064\u3051\u308b\u3060\u3051\u3067\u3044\u3044\u304b\u3089\u3059\u3054\u3044\u697d\u3002\n# \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\n\n\n\n## \u7dda\u5f62\u30c7\u30fc\u30bf\n\n\n```python\nn=20\n```\n\n\n```python\na = np.arange(n).reshape(4, -1); a  # 5\u5217\u306e\u884c\u5217\n```\n\n\n\n\n    array([[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n            17, 18, 19, 20, 21, 22, 23, 24],\n           [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\n            42, 43, 44, 45, 46, 47, 48, 49],\n           [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\n            67, 68, 69, 70, 71, 72, 73, 74],\n           [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,\n            92, 93, 94, 95, 96, 97, 98, 99]])\n\n\n\n\n```python\ndf = pd.DataFrame(a, columns=list('abcde')); df\n```\n\n\n\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>e</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>3</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>5</td>\n      <td>6</td>\n      <td>7</td>\n      <td>8</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>10</td>\n      <td>11</td>\n      <td>12</td>\n      <td>13</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>15</td>\n      <td>16</td>\n      <td>17</td>\n      <td>18</td>\n      <td>19</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n## \u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\n\n\n```python\nr = np.random.randn(4, 5); r\n```\n\n\n\n\n    array([[-0.37840346, -0.84591793,  0.50590263,  0.0544243 ,  0.59361247],\n           [-0.2726931 , -1.74415635,  0.0199559 , -0.20695113, -1.19559455],\n           [-0.59799566, -0.26810224, -0.18738038,  1.05843686,  0.72317579],\n           [ 1.23389386,  1.91293041, -1.33322818,  0.78255026,  2.04737357]])\n\n\n\n\n```python\ndf = pd.DataFrame(r, columns=list('abcde')); df\n```\n\n\n\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>a</th>\n      <th>b</th>\n      <th>c</th>\n      <th>d</th>\n      <th>e</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>-0.378403</td>\n      <td>-0.845918</td>\n      <td>0.505903</td>\n      <td>0.054424</td>\n      <td>0.593612</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>-0.272693</td>\n      <td>-1.744156</td>\n      <td>0.019956</td>\n      <td>-0.206951</td>\n      <td>-1.195595</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>-0.597996</td>\n      <td>-0.268102</td>\n      <td>-0.187380</td>\n      <td>1.058437</td>\n      <td>0.723176</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1.233894</td>\n      <td>1.912930</td>\n      <td>-1.333228</td>\n      <td>0.782550</td>\n      <td>2.047374</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\ndf.plot()\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x17699af2a58>\n\n\n\n![output_8_1.png](https://qiita-image-store.s3.amazonaws.com/0/113494/af4e2451-fdbb-d392-ef80-845f40ef1a74.png)\n\n\n\n```python\ndf = pd.DataFrame(np.random.randn(n,n))\n```\n\n\n```python\nplt.contourf(df, cmap='jet')\n```\n\n\n\n\n    <matplotlib.contour.QuadContourSet at 0x1769a1a12b0>\n\n\n\n\n![output_10_1.png](https://qiita-image-store.s3.amazonaws.com/0/113494/52e3fc91-9e3d-8a8f-f630-e802d667928e.png)\n\n\n\n\u7b49\u9ad8\u7dda\u8868\u793a\n\n\n```python\nplt.pcolor(df, cmap='jet')\n```\n\n\n\n\n    <matplotlib.collections.PolyCollection at 0x1769b1e2208>\n\n\n\n\n![output_12_1.png](https://qiita-image-store.s3.amazonaws.com/0/113494/2253dbb3-2b7e-965b-0ae3-a592432fd2a0.png)\n\n\n\n\u30ab\u30e9\u30fc\u30de\u30c3\u30d7\u8868\u793a\n\n## sin\u6ce2\n\n\n```python\nn=100\nx = np.linspace(0, 2*np.pi, n)\n```\n\n\n```python\ns = pd.Series(np.sin(x), index=x)\ns.plot()\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x1769e695780>\n\n\n\n\n![output_16_1.png](https://qiita-image-store.s3.amazonaws.com/0/113494/1bf50a4a-94ad-5a1d-6cf6-946001abb5ee.png)\n\n\n\nsin\u6ce2\n\n\n```python\nsnoise = s + 0.1 * np.random.randn(n)\nsdf = pd.DataFrame({'sin wave':s, 'noise wave': snoise})\nsdf.plot(color=('r', 'b'))\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x1769e8586d8>\n\n\n\n\n![output_18_1.png](https://qiita-image-store.s3.amazonaws.com/0/113494/e7d8848f-6173-8dd8-3451-87cb2cdf0521.png)\n\n\n\n\u30ce\u30a4\u30ba\u3092\u306e\u305b\u305f\n\n## \u6b63\u898f\u5206\u5e03\n\n\n```python\nfrom  scipy import stats as ss\n```\n\n\n```python\nmedian = x[int(n/2)]  # x\u306e\u4e2d\u592e\u5024\ng = pd.Series(ss.norm.pdf(x, loc=median), x)\ng.plot()\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x1769ffba128>\n\n\n\n\n![output_22_1.png](https://qiita-image-store.s3.amazonaws.com/0/113494/f77a730c-426f-0941-476e-efc2b95260b5.png)\n\n\n\n\n```python\ngnoise = g + 0.01 * np.random.randn(n)\ndf = pd.DataFrame({'gauss wave':g, 'noise wave': gnoise})\ndf.plot(color=('r', 'b'))\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x1769e970828>\n\n\n\n\n![output_23_1.png](https://qiita-image-store.s3.amazonaws.com/0/113494/33d19316-5160-8e7c-72de-2ec4e57b4239.png)\n\n\n\n## log\u95a2\u6570\n\n\n```python\nmedian = x[int(n/2)]  # x\u306e\u4e2d\u592e\u5024\nx1 = x + 10e-3\nl = pd.Series(np.log(x1), x1)\nl.plot()\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x1769ffba5f8>\n\n\n\n\n![output_25_1.png](https://qiita-image-store.s3.amazonaws.com/0/113494/5d9a4487-571f-20fe-5bdd-2c13900bc1ac.png)\n\n\n\n\n```python\nlnoise = l + 0.1 * np.random.randn(n)\ndf = pd.DataFrame({'log wave':l, 'noise wave': lnoise})\ndf.plot(color=('r', 'b'))\n```\n\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x176a00ec358>\n\n\n\n\n![output_26_1.png](https://qiita-image-store.s3.amazonaws.com/0/113494/38617bde-5ee0-a872-d53f-abc9c356d083.png)\n\n\n## \u30e9\u30f3\u30c0\u30e0\u30a6\u30a9\u30fc\u30af\n\n\n```python\nn = 1000\nse = pd.Series(np.random.randint(-1, 2, n)).cumsum()\nse.plot()\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x284f3c62c18>\n\n\n\n\n![README_28_1.png](https://qiita-image-store.s3.amazonaws.com/0/113494/7b69f291-8443-d3f0-92ef-1ef833711975.png)\n\n\n\nnp.random.randint(-1, 2, n)\u3067(-1, 0, 1)\u306e\u3069\u308c\u304b\u3092\u30e9\u30f3\u30c0\u30e0\u306bn\u500b\u751f\u6210\u3057\u3001cumsum()\u3067\u7a4d\u307f\u4e0a\u3052\u5408\u8a08\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u30e9\u30f3\u30c0\u30e0\u30a6\u30a9\u30fc\u30af\u3092\u63cf\u304f\u3002\n\n\n```python\nsma100 = se.rolling(100).mean()\nema100 = se.ewm(span=100).mean()\n\ndf = pd.DataFrame({'Chart': se,  'SMA100': sma100, 'EMA100': ema100})\ndf.plot(style = ['--','-','-'])\n```\n\n\n\n\n    <matplotlib.axes._subplots.AxesSubplot at 0x284f3cadcc0>\n\n\n\n![README_30_1.png](https://qiita-image-store.s3.amazonaws.com/0/113494/5125c7a9-ea5b-55c2-f086-a16c2049b2b9.png)\n\n\n\u5358\u7d14\u79fb\u52d5\u5e73\u5747\u7dda(Simple Moving Average)\u3068\u6307\u6570\u79fb\u52d5\u5e73\u5747\u7dda(Exponential Moving Average)\u3092\u540c\u6642\u306b\u63cf\u753b\u3057\u305f\u3002\nEMA\u306e\u65b9\u304cSMA\u3068\u6bd4\u3079\u3066\u4e00\u822c\u7684\u306b\u76f4\u8fd1\u306e\u52d5\u304d\u3092\u53cd\u6620\u3057\u3084\u3059\u304f\u3001\u30c8\u30ec\u30f3\u30c9\u306b\u8ffd\u968f\u3057\u3084\u3059\u3044\u3068\u3044\u308f\u308c\u3066\u3044\u308b\u3002\n\n\n\n\u8a18\u4e8b\u306e\u5185\u5bb9\u3068\u306f\u95a2\u4fc2\u306a\u3044\u3051\u3069\u3001\u4eca\u3055\u3089\u306a\u304c\u3089jupyter notebook\u3067\u66f8\u3044\u3066md\u5f62\u5f0f\u3067\u843d\u3068\u3059\u3068\u3001qiita\u306b\u306f\u3063\u3064\u3051\u308b\u3060\u3051\u3067\u3044\u3044\u304b\u3089\u3059\u3054\u3044\u697d\u3002\n", "tags": ["Python", "pandas", "matplotlib", "numpy", "scipy"]}