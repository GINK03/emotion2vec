{"tags": ["Windows10IoTCore", "IoT", "AdventCalendar2016"], "context": "\u3055\u3066\u3001Windows IoT Core \u306e\u5c0e\u5165\u90e8\u5206\u304c\u6e08\u3093\u3060\u3068\u3053\u308d\u3067\u3001\u3082\u3046\u5c11\u3057\u7a81\u3063\u8fbc\u3093\u3060\u4f7f\u3044\u65b9\u3092\u307f\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u7a81\u3063\u8fbc\u3093\u3060\u3001\u3068\u8a00\u3044\u3064\u3064\u3082\u4f8b\u306e\u30ad\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30e1\u30c7\u30a3\u30a2\u3063\u307d\u304f\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u7d39\u4ecb\u3092\u3059\u308b\u3060\u3051\u306a\u3093\u3067\u3059\u3051\u3069\u306d\u3002\nWindows IoT Core on Raspberry Pi \u306f USB \u30b3\u30cd\u30af\u30bf\u304c\u3042\u308b\u306e\u3067 Web \u30ab\u30e1\u30e9\uff08UVC \u306e\u30ab\u30e1\u30e9\uff09\u3092\u7e4b\u3052\u3066\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Raspberry Pi \u5c02\u7528\u306e\u30ab\u30e1\u30e9\u3092\u4f7f\u3063\u3066\u3082\u3067\u304d\u308b\uff08\u30cf\u30ba\uff09\u3067\u3059\u304c\u3001\u5b89\u3044 Web \u30ab\u30e1\u30e9\u3092\u4ed8\u3051\u3066\u52d5\u753b\u3092\u64ae\u3063\u3066\u307f\u3066\u3082\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3092\u52d5\u304b\u3057\u3066\u307f\u3088\u3046\nsamples/WebcamApp/CS at develop \u00b7 ms-iot/samples\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f Basic webcam app | Windows IoT \u306b\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u7d50\u69cb\u3084\u3084\u3053\u3057\u3044\u306e\u3067\u30dd\u30a4\u30f3\u30c8\u3060\u3051\u793a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u4f8b\u306b\u3088\u3063\u3066\u3001UWP \u30a2\u30d7\u30ea\u3067\u4f5c\u308b\u306e\u3067 PC \u4e0a\u3067\u3082 Windows IoT Core \u4e0a\u3067\u3082\u540c\u3058\u30a2\u30d7\u30ea\u3092\u52d5\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\n\u6700\u4f4e\u3067\u3082 Webcam\uff08Web\u30ab\u30e1\u30e9\uff09\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u307e\u3059\u3002\n\n\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u5834\u5408\u306f\u300c\u30d4\u30af\u30c1\u30e3\u30e9\u30a4\u30d6\u30e9\u30ea\u300d\u3084\u300c\u30d3\u30c7\u30aa\u30e9\u30a4\u30d6\u30e9\u30ea\u300d\u306b\u3082\u30c1\u30a7\u30c3\u30af\u3092\u3044\u308c\u3066\u304f\u3060\u3055\u3044\u3002\n\nXAML \u3067 CaptureElement \u3067\u8868\u793a\n<Canvas Name=\"PreviewCanvas\" Grid.Row=\"1\" Grid.Column=\"0\" Width=\"200\" Height=\"200\" Background=\"Gray\"  Margin=\"0,0,0,0\" Visibility=\"Visible\">\n    <CaptureElement x:Name=\"previewElement\" Width=\"200\" Height=\"200\" HorizontalAlignment=\"Left\" Visibility=\"Visible\"/>\n</Canvas>\n\n\n\u521d\u671f\u5316\u3068\u30d7\u30ec\u30d3\u30e5\u30fc\nawait mediaCapture.InitializeAsync();                \n\n// Set callbacks for failure and recording limit exceeded\nstatus.Text = \"Device successfully initialized for video recording!\";\nmediaCapture.Failed += new MediaCaptureFailedEventHandler(mediaCapture_Failed);\nmediaCapture.RecordLimitationExceeded += new Windows.Media.Capture.RecordLimitationExceededEventHandler(mediaCapture_RecordLimitExceeded);\n\n// Start Preview                \npreviewElement.Source = mediaCapture;\nawait mediaCapture.StartPreviewAsync();\n\n\nMediaCapture \u30af\u30e9\u30b9\u3092\u4f7f\u3046\nmediaCapture.InitializeAsync \u3067\u521d\u671f\u5316\nmediaCapture.StartPreviewAsync \u3067\u30d7\u30ec\u30d3\u30e5\u30fc\u8868\u793a\n\n\n\u753b\u50cf\u3092\u4fdd\u5b58\nprivate async void takePhoto_Click(object sender, RoutedEventArgs e)\n{\n    try\n    {\n        takePhoto.IsEnabled = false;\n        recordVideo.IsEnabled = false;\n        captureImage.Source = null;\n\n        photoFile = await KnownFolders.PicturesLibrary.CreateFileAsync(\n            PHOTO_FILE_NAME, CreationCollisionOption.GenerateUniqueName);\n        ImageEncodingProperties imageProperties = ImageEncodingProperties.CreateJpeg();\n        await mediaCapture.CapturePhotoToStorageFileAsync(imageProperties, photoFile);\n        takePhoto.IsEnabled = true;\n        status.Text = \"Take Photo succeeded: \" + photoFile.Path;\n\n        IRandomAccessStream photoStream = await photoFile.OpenReadAsync();\n        BitmapImage bitmap = new BitmapImage();\n        bitmap.SetSource(photoStream);\n        captureImage.Source = bitmap;\n    }\n    catch (Exception ex)\n    {\n        status.Text = ex.Message;\n        Cleanup();\n    }\n    finally\n    {\n        takePhoto.IsEnabled = true;\n        recordVideo.IsEnabled = true;\n    }\n}\n\n\nmediaCapture.CapturePhotoToStorageFileAsync \u3067\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\nUWP \u30a2\u30d7\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u304c\u3061\u3087\u3063\u3068\u3084\u3084\u3053\u3057\u304f\u3066\u3001KnownFolders.PicturesLibrary.CreateFileAsync \u3067\u30d5\u30a9\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f\n\nUWP \u30a2\u30d7\u30ea\u306e\u5834\u5408\u3001\u30d5\u30a1\u30a4\u30eb\u30a2\u30af\u30bb\u30b9\u304c\u666e\u901a\u306e\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30a2\u30d7\u30ea\u3088\u308a\u3084\u3084\u3053\u3057\u304f\u306a\u3063\u3066\u3044\u3066\u3001\u4e00\u5b9a\u306e\u30d5\u30a9\u30eb\u30c0\u3057\u304b\u4fdd\u5b58\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u5b9f\u884c\u3059\u308b\nRaspberry Pi \u4e0a\u3067\u5b9f\u884c\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\nWeb \u30ab\u30e1\u30e9\u306f\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u8a8d\u8b58\u3057\u306a\u3044\u3089\u3057\u304f\u3001OS \u306e\u8d77\u52d5\u6642\u306b\u63a5\u7d9a\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u307f\u305f\u3044\u3067\u3059\u3002Web \u30ab\u30e1\u30e9\u306e\u96fb\u6e90\u306f USB \u304b\u3089\u7d66\u96fb\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001Raspberry Pi \u3078\u306e\u96fb\u529b\u304c\u8db3\u308a\u306a\u304f\u3066 USB \u304b\u3089\u6d3e\u624b\u306b\u7d66\u96fb\u3059\u308b\u3068 Windows IoT Core \u306e OS \u304c\u843d\u3061\u3066\u3057\u307e\u3046\u3068\u304d\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u306e\u3067\u3001USB \u30ab\u30e1\u30e9\u306f\u4e00\u3064\u304c\u9650\u754c\u3067\u3059\u306d\u3002\n200\u4e07\u753b\u7d20\u7a0b\u5ea6\u306e Web \u30ab\u30e1\u30e9\u3092\u4f7f\u3048\u3070 linyixian \u3055\u3093\u306e Windows 10 IoTCore \u3067FaceTracking\u306b\u30c1\u30e3\u30ec\u30f3\u30b8 - Qiita \u306e\u3088\u3046\u306b\u30d5\u30a7\u30a4\u30b9\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3082\u53ef\u80fd\u3067\u3059\u3002\u307e\u305f\u3001OpenCV \u3082 Windows IoT Core \u3067\u52d5\u304f\u306e\u3067\u9759\u6b62\u753b\u306e\u52a0\u5de5\uff06WiFi \u3067 PC \u3078\u9001\u4fe1\u3001\u306e\u3088\u3046\u306a\u3053\u3068\u3082\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\n\u3055\u3066\u3001Windows IoT Core \u306e\u5c0e\u5165\u90e8\u5206\u304c\u6e08\u3093\u3060\u3068\u3053\u308d\u3067\u3001\u3082\u3046\u5c11\u3057\u7a81\u3063\u8fbc\u3093\u3060\u4f7f\u3044\u65b9\u3092\u307f\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u7a81\u3063\u8fbc\u3093\u3060\u3001\u3068\u8a00\u3044\u3064\u3064\u3082\u4f8b\u306e\u30ad\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30e1\u30c7\u30a3\u30a2\u3063\u307d\u304f\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u7d39\u4ecb\u3092\u3059\u308b\u3060\u3051\u306a\u3093\u3067\u3059\u3051\u3069\u306d\u3002\n\nWindows IoT Core on Raspberry Pi \u306f USB \u30b3\u30cd\u30af\u30bf\u304c\u3042\u308b\u306e\u3067 Web \u30ab\u30e1\u30e9\uff08UVC \u306e\u30ab\u30e1\u30e9\uff09\u3092\u7e4b\u3052\u3066\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Raspberry Pi \u5c02\u7528\u306e\u30ab\u30e1\u30e9\u3092\u4f7f\u3063\u3066\u3082\u3067\u304d\u308b\uff08\u30cf\u30ba\uff09\u3067\u3059\u304c\u3001\u5b89\u3044 Web \u30ab\u30e1\u30e9\u3092\u4ed8\u3051\u3066\u52d5\u753b\u3092\u64ae\u3063\u3066\u307f\u3066\u3082\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n# \u30b5\u30f3\u30d7\u30eb\u3092\u52d5\u304b\u3057\u3066\u307f\u3088\u3046\n\n[samples/WebcamApp/CS at develop \u00b7 ms-iot/samples](https://github.com/ms-iot/samples/tree/develop/WebcamApp/CS \"samples/WebcamApp/CS at develop \u00b7 ms-iot/samples\")\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f <a href=\"https://developer.microsoft.com/en-us/windows/iot/samples/webcamapp\">Basic webcam app | Windows IoT</a> \u306b\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u7d50\u69cb\u3084\u3084\u3053\u3057\u3044\u306e\u3067\u30dd\u30a4\u30f3\u30c8\u3060\u3051\u793a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u4f8b\u306b\u3088\u3063\u3066\u3001UWP \u30a2\u30d7\u30ea\u3067\u4f5c\u308b\u306e\u3067 PC \u4e0a\u3067\u3082 Windows IoT Core \u4e0a\u3067\u3082\u540c\u3058\u30a2\u30d7\u30ea\u3092\u52d5\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n## \u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\n\n\u6700\u4f4e\u3067\u3082 Webcam\uff08Web\u30ab\u30e1\u30e9\uff09\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u307e\u3059\u3002\n![](https://az835927.vo.msecnd.net/sites/iot/Resources/images/PMWebCamOptions.png)\n\n\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u5834\u5408\u306f\u300c\u30d4\u30af\u30c1\u30e3\u30e9\u30a4\u30d6\u30e9\u30ea\u300d\u3084\u300c\u30d3\u30c7\u30aa\u30e9\u30a4\u30d6\u30e9\u30ea\u300d\u306b\u3082\u30c1\u30a7\u30c3\u30af\u3092\u3044\u308c\u3066\u304f\u3060\u3055\u3044\u3002\n\n## XAML \u3067 CaptureElement \u3067\u8868\u793a\n\n```xml\n<Canvas Name=\"PreviewCanvas\" Grid.Row=\"1\" Grid.Column=\"0\" Width=\"200\" Height=\"200\" Background=\"Gray\"  Margin=\"0,0,0,0\" Visibility=\"Visible\">\n    <CaptureElement x:Name=\"previewElement\" Width=\"200\" Height=\"200\" HorizontalAlignment=\"Left\" Visibility=\"Visible\"/>\n</Canvas>\n```\n\n## \u521d\u671f\u5316\u3068\u30d7\u30ec\u30d3\u30e5\u30fc\n\n```csharp\nawait mediaCapture.InitializeAsync();                \n\n// Set callbacks for failure and recording limit exceeded\nstatus.Text = \"Device successfully initialized for video recording!\";\nmediaCapture.Failed += new MediaCaptureFailedEventHandler(mediaCapture_Failed);\nmediaCapture.RecordLimitationExceeded += new Windows.Media.Capture.RecordLimitationExceededEventHandler(mediaCapture_RecordLimitExceeded);\n\n// Start Preview                \npreviewElement.Source = mediaCapture;\nawait mediaCapture.StartPreviewAsync();\n```\n\n1. MediaCapture \u30af\u30e9\u30b9\u3092\u4f7f\u3046\n2. mediaCapture.InitializeAsync \u3067\u521d\u671f\u5316\n3. mediaCapture.StartPreviewAsync \u3067\u30d7\u30ec\u30d3\u30e5\u30fc\u8868\u793a\n\n## \u753b\u50cf\u3092\u4fdd\u5b58\n\n```csharp\nprivate async void takePhoto_Click(object sender, RoutedEventArgs e)\n{\n    try\n    {\n        takePhoto.IsEnabled = false;\n        recordVideo.IsEnabled = false;\n        captureImage.Source = null;\n\n        photoFile = await KnownFolders.PicturesLibrary.CreateFileAsync(\n            PHOTO_FILE_NAME, CreationCollisionOption.GenerateUniqueName);\n        ImageEncodingProperties imageProperties = ImageEncodingProperties.CreateJpeg();\n        await mediaCapture.CapturePhotoToStorageFileAsync(imageProperties, photoFile);\n        takePhoto.IsEnabled = true;\n        status.Text = \"Take Photo succeeded: \" + photoFile.Path;\n\n        IRandomAccessStream photoStream = await photoFile.OpenReadAsync();\n        BitmapImage bitmap = new BitmapImage();\n        bitmap.SetSource(photoStream);\n        captureImage.Source = bitmap;\n    }\n    catch (Exception ex)\n    {\n        status.Text = ex.Message;\n        Cleanup();\n    }\n    finally\n    {\n        takePhoto.IsEnabled = true;\n        recordVideo.IsEnabled = true;\n    }\n}\n```\n\n1. mediaCapture.CapturePhotoToStorageFileAsync \u3067\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\n2. UWP \u30a2\u30d7\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u304c\u3061\u3087\u3063\u3068\u3084\u3084\u3053\u3057\u304f\u3066\u3001KnownFolders.PicturesLibrary.CreateFileAsync \u3067\u30d5\u30a9\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f\n\nUWP \u30a2\u30d7\u30ea\u306e\u5834\u5408\u3001\u30d5\u30a1\u30a4\u30eb\u30a2\u30af\u30bb\u30b9\u304c\u666e\u901a\u306e\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30a2\u30d7\u30ea\u3088\u308a\u3084\u3084\u3053\u3057\u304f\u306a\u3063\u3066\u3044\u3066\u3001\u4e00\u5b9a\u306e\u30d5\u30a9\u30eb\u30c0\u3057\u304b\u4fdd\u5b58\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n# \u5b9f\u884c\u3059\u308b\n\nRaspberry Pi \u4e0a\u3067\u5b9f\u884c\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n![001.jpg](https://qiita-image-store.s3.amazonaws.com/0/32488/a6dbb801-1401-67fc-a9b1-ebfbe443a6b9.jpeg)\n\nWeb \u30ab\u30e1\u30e9\u306f\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u8a8d\u8b58\u3057\u306a\u3044\u3089\u3057\u304f\u3001OS \u306e\u8d77\u52d5\u6642\u306b\u63a5\u7d9a\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u307f\u305f\u3044\u3067\u3059\u3002Web \u30ab\u30e1\u30e9\u306e\u96fb\u6e90\u306f USB \u304b\u3089\u7d66\u96fb\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001Raspberry Pi \u3078\u306e\u96fb\u529b\u304c\u8db3\u308a\u306a\u304f\u3066 USB \u304b\u3089\u6d3e\u624b\u306b\u7d66\u96fb\u3059\u308b\u3068 Windows IoT Core \u306e OS \u304c\u843d\u3061\u3066\u3057\u307e\u3046\u3068\u304d\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u306e\u3067\u3001USB \u30ab\u30e1\u30e9\u306f\u4e00\u3064\u304c\u9650\u754c\u3067\u3059\u306d\u3002\n\n200\u4e07\u753b\u7d20\u7a0b\u5ea6\u306e Web \u30ab\u30e1\u30e9\u3092\u4f7f\u3048\u3070 linyixian \u3055\u3093\u306e <a href=\"http://qiita.com/linyixian/items/1a71924139d9a90ac655\">Windows 10 IoTCore \u3067FaceTracking\u306b\u30c1\u30e3\u30ec\u30f3\u30b8 - Qiita</a> \u306e\u3088\u3046\u306b\u30d5\u30a7\u30a4\u30b9\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3082\u53ef\u80fd\u3067\u3059\u3002\u307e\u305f\u3001OpenCV \u3082 Windows IoT Core \u3067\u52d5\u304f\u306e\u3067\u9759\u6b62\u753b\u306e\u52a0\u5de5\uff06WiFi \u3067 PC \u3078\u9001\u4fe1\u3001\u306e\u3088\u3046\u306a\u3053\u3068\u3082\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\n\n"}