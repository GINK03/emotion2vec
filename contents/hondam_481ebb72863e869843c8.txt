{"context": " More than 1 year has passed since last update.Markdown\u3067\u66f8\u3044\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092Sphinx\u3067\u95b2\u89a7\u3059\u308b\u306b\u306fpandoc\u3067reStructuredText\u306b\u5909\u63db\u3057\u3001\u305d\u306e\u5f8cmake html\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\uff1f\u306a\u6d41\u308c\u3060\u3068\u601d\u3046\u304c\u3001\u90fd\u5ea6\u90fd\u5ea6\u30d3\u30eb\u30c9\u3059\u308b\u306e\u3082\u9762\u5012\u306a\u306e\u3067Grunt\u3092\u4f7f\u3063\u3066\u30bf\u30b9\u30af\u5316\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3064\u3044\u3067\u306bgrunt-este-watch\u3068grunt-contrib-connect\u3067Markdown\u30d5\u30a1\u30a4\u30eb\u304c\u7de8\u96c6\u3055\u308c\u305f\u3089\u30d3\u30eb\u30c9\u3068\u30d6\u30e9\u30a6\u30b6\u30ea\u30ed\u30fc\u30c9\u3092\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nGruntfile.js\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\nGruntfile.js\nvar fs   = require(\"fs\")\n  , exec = require('child_process').exec;\n\nmodule.exports = function(grunt) {\n\n  grunt.initConfig({\n    connect: {\n      server: {\n        options: {\n            livereload: true,\n            port: 8000,\n            base: 'build/html',\n            hostname: 'localhost'\n        }\n      }\n    },\n    esteWatch: {\n      options: {\n        dirs: ['source/**/'],\n        livereload: {\n          enabled: true,\n          extensions: ['md'],\n          port: 35729\n        }\n      },\n      md: function(filepath) {\n        var files = [{\n          expand: true,\n          src: filepath,\n          ext: '.md'\n        }];\n        return ['to_rest', 'build'];\n      }\n    }\n  });\n\n  grunt.registerTask('to_rest', 'convert to reST from markdown', function() {\n    var taskInfo = 'convert to reST from markdown... ';\n    var cb = this.async();\n\n    fs.readdir('./source', function(err, files) {\n      files.forEach(function(file) {\n\n        var rest_file, cmd;\n\n        if (file.match(/\\.md$/g)) {\n          cmd  = 'pandoc --toc -f markdown -t rst source/' + file;\n          cmd += ' -o source/' + file.replace(/md$/g, '') + 'rst';\n\n          var child = exec(cmd, function(err, stdout, stderr) {\n            if (err) {\n               console.log(err);\n               grunt.log.write(taskInfo).error();\n            }\n          });\n        }\n      });\n      grunt.log.write(taskInfo).ok();\n      cb();\n    });\n\n  });\n\n  grunt.registerTask('build', 'to make standalone HTML files for Sphinx', function() {\n    var taskInfo = 'to make standalone HTML files for Sphinx... ';\n\n    var cb = this.async();\n\n    var child = exec('make html', function(err, stdout, stderr) {\n      if (!err) {\n        console.log('stdout: ' + stdout);\n        grunt.log.write(taskInfo).ok();\n      } else {\n        console.log(err);\n        grunt.log.write(taskInfo).error();\n      }\n      cb();\n    });\n  });\n\n  grunt.loadNpmTasks('grunt-contrib-connect');\n  grunt.loadNpmTasks('grunt-este-watch');\n  grunt.registerTask('default', ['to_rest', 'build', 'connect', 'esteWatch']);\n};\n\n\n\u9700\u8981\u306a\u7121\u3055\u3052\u306a\u306e\u3067\u8aac\u660e\u306f\u8a73\u3057\u304f\u306f\u66f8\u304d\u307e\u305b\u3093\u304c\u3001Sphinx\u30b3\u30f3\u30c6\u30f3\u30c4\u306fmake html\u304c\u53ef\u80fd\u306a\u72b6\u6cc1\u3067\u3042\u308b\u3068\u3057\u3066\u3001\u3068\u308a\u3042\u3048\u305anpm\u3067\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\nnpm install grunt grunt-contrib-connect grunt-este-watch\n\ngrunt-cli\u3092\u5165\u308c\u3066\u306a\u3051\u308c\u3070\u4ee5\u4e0b\u3082\u5b9f\u884c\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\nnpm install -g grunt-cli\n\n\u3042\u3068\u306f\u4e0a\u306eGruntfile.js\u3092\u66f8\u3044\u3066grunt\u5b9f\u884c\u3057\u307e\u3059\u3002\ngrunt\n\n\u3059\u308b\u3068\u30dd\u30fc\u30c8\u756a\u53f78000\u3067WEB\u30b5\u30fc\u30d0\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u304d\u307e\u3059\u3002\nopen http://localhost:8000\n\n\u3053\u306e\u72b6\u614b\u3067source\u4ee5\u4e0b\u306eMarkdown\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3059\u308b\u3068sphinx\u7528html\u751f\u6210\u3068\u30d6\u30e9\u30a6\u30b6\u306e\u30ea\u30ed\u30fc\u30c9\u307e\u3067\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\u203b\u53cd\u97ff\u3042\u308c\u3070\u8a18\u4e8b\u3092\u66f4\u65b0\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\nMarkdown\u3067\u66f8\u3044\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092Sphinx\u3067\u95b2\u89a7\u3059\u308b\u306b\u306fpandoc\u3067reStructuredText\u306b\u5909\u63db\u3057\u3001\u305d\u306e\u5f8cmake html\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\uff1f\u306a\u6d41\u308c\u3060\u3068\u601d\u3046\u304c\u3001\u90fd\u5ea6\u90fd\u5ea6\u30d3\u30eb\u30c9\u3059\u308b\u306e\u3082\u9762\u5012\u306a\u306e\u3067Grunt\u3092\u4f7f\u3063\u3066\u30bf\u30b9\u30af\u5316\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3064\u3044\u3067\u306bgrunt-este-watch\u3068grunt-contrib-connect\u3067Markdown\u30d5\u30a1\u30a4\u30eb\u304c\u7de8\u96c6\u3055\u308c\u305f\u3089\u30d3\u30eb\u30c9\u3068\u30d6\u30e9\u30a6\u30b6\u30ea\u30ed\u30fc\u30c9\u3092\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nGruntfile.js\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n```Gruntfile.js\nvar fs   = require(\"fs\")\n  , exec = require('child_process').exec;\n\nmodule.exports = function(grunt) {\n\n  grunt.initConfig({\n    connect: {\n      server: {\n      \toptions: {\n      \t\tlivereload: true,\n      \t\tport: 8000,\n      \t\tbase: 'build/html',\n      \t\thostname: 'localhost'\n      \t}\n      }\n    },\n    esteWatch: {\n      options: {\n      \tdirs: ['source/**/'],\n      \tlivereload: {\n      \t  enabled: true,\n      \t  extensions: ['md'],\n      \t  port: 35729\n      \t}\n      },\n      md: function(filepath) {\n      \tvar files = [{\n      \t  expand: true,\n      \t  src: filepath,\n      \t  ext: '.md'\n      \t}];\n      \treturn ['to_rest', 'build'];\n      }\n    }\n  });\n\n  grunt.registerTask('to_rest', 'convert to reST from markdown', function() {\n    var taskInfo = 'convert to reST from markdown... ';\n    var cb = this.async();\n\n    fs.readdir('./source', function(err, files) {\n      files.forEach(function(file) {\n\n      \tvar rest_file, cmd;\n\n      \tif (file.match(/\\.md$/g)) {\n      \t  cmd  = 'pandoc --toc -f markdown -t rst source/' + file;\n      \t  cmd += ' -o source/' + file.replace(/md$/g, '') + 'rst';\n\n          var child = exec(cmd, function(err, stdout, stderr) {\n            if (err) {\n               console.log(err);\n               grunt.log.write(taskInfo).error();\n            }\n          });\n        }\n      });\n      grunt.log.write(taskInfo).ok();\n      cb();\n    });\n\n  });\n\n  grunt.registerTask('build', 'to make standalone HTML files for Sphinx', function() {\n  \tvar taskInfo = 'to make standalone HTML files for Sphinx... ';\n\n\tvar cb = this.async();\n\n\tvar child = exec('make html', function(err, stdout, stderr) {\n      if (!err) {\n      \tconsole.log('stdout: ' + stdout);\n      \tgrunt.log.write(taskInfo).ok();\n      } else {\n      \tconsole.log(err);\n      \tgrunt.log.write(taskInfo).error();\n      }\n      cb();\n\t});\n  });\n\n  grunt.loadNpmTasks('grunt-contrib-connect');\n  grunt.loadNpmTasks('grunt-este-watch');\n  grunt.registerTask('default', ['to_rest', 'build', 'connect', 'esteWatch']);\n};\n```\n\n\u9700\u8981\u306a\u7121\u3055\u3052\u306a\u306e\u3067\u8aac\u660e\u306f\u8a73\u3057\u304f\u306f\u66f8\u304d\u307e\u305b\u3093\u304c\u3001Sphinx\u30b3\u30f3\u30c6\u30f3\u30c4\u306fmake html\u304c\u53ef\u80fd\u306a\u72b6\u6cc1\u3067\u3042\u308b\u3068\u3057\u3066\u3001\u3068\u308a\u3042\u3048\u305anpm\u3067\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```\nnpm install grunt grunt-contrib-connect grunt-este-watch\n```\n\ngrunt-cli\u3092\u5165\u308c\u3066\u306a\u3051\u308c\u3070\u4ee5\u4e0b\u3082\u5b9f\u884c\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n```\nnpm install -g grunt-cli\n```\n\n\u3042\u3068\u306f\u4e0a\u306eGruntfile.js\u3092\u66f8\u3044\u3066grunt\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\ngrunt\n```\n\n\u3059\u308b\u3068\u30dd\u30fc\u30c8\u756a\u53f78000\u3067WEB\u30b5\u30fc\u30d0\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u304d\u307e\u3059\u3002\n\n```\nopen http://localhost:8000\n```\n\n\u3053\u306e\u72b6\u614b\u3067source\u4ee5\u4e0b\u306eMarkdown\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3059\u308b\u3068sphinx\u7528html\u751f\u6210\u3068\u30d6\u30e9\u30a6\u30b6\u306e\u30ea\u30ed\u30fc\u30c9\u307e\u3067\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u203b\u53cd\u97ff\u3042\u308c\u3070\u8a18\u4e8b\u3092\u66f4\u65b0\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002", "tags": ["Sphinx", "Markdown", "grunt", "Pandoc"]}