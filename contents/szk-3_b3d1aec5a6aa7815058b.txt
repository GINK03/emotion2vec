{"context": " More than 1 year has passed since last update.\nAppleScript\u3067Cocoa\u306e\u6a5f\u80fd\u3092\u4f7f\u3048\u308b\n\n\n\u3067\u304d\u308b\u3053\u3068\u304c\u5897\u3048\u305f\u308a\u52d5\u4f5c\u304c\u9ad8\u901f\u5316\u3059\u308b\u30e1\u30ea\u30c3\u30c8\n\u4f7f\u3046\u306b\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306euse\u6587\u304c\u5fc5\u8981\n\n\n\u4f8b\uff1ause framework \"Foundation\"\n\n\n\n\n\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u7c21\u5358\u306b\u53d6\u5f97\u3057\u305f\u3044\n\n\n\u4f7f\u3048\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u5834\u6240\n\n\n/System/Library/Frameworks/\n/Library/Frameworks/\n~/Library/Frameworks/\n\n\n\u62e1\u5f35\u5b50.framework\u3068\u3057\u3066\u5b58\u5728\n\n\nuseFrameworks.scpt\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u53d6\u5f97\u3059\u308bAppleScript\n\n\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u9078\u629e\n\n\n\u4e00\u5ea6\u306b\u8907\u6570\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u9078\u3079\u308b\n\n\nuse\u6587\u3092\u30b3\u30d4\u30fc\u307e\u305f\u306f\u633f\u5165\n\n\n\u633f\u5165\u306f\u30b9\u30af\u30ea\u30d7\u30c8\u30a8\u30c7\u30a3\u30bf\u3092\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306b\u3060\u3051\u4f7f\u3048\u308b\n\n\n\n\n\n\nuseFrameworks.scpt\n--framework\u9078\u629e\ntell application \"SystemUIServer\"\n    activate\n    set chooseFrameworkResult to choose from list my getEveryFramework() with title \"Framework\" with multiple selections allowed\nend tell\nif chooseFrameworkResult = false then\n    error number -128\nend if\n\n--use\u6587\u4f5c\u6210\nset useFrameworkText to \"use framework \" & quote & my join(chooseFrameworkResult, quote & return & \"use framework \" & quote) & quote & return\n\n--\u30b3\u30d4\u30fc\u307e\u305f\u306f\u633f\u5165\ntell application \"Script Editor\"\n    if running and (exists documents) then\n        set dialogButtons to {\"Cancel\", \"Insert\", \"Copy\"}\n    else\n        set dialogButtons to {\"Cancel\", \"Copy\"}\n    end if\nend tell\ntell application \"SystemUIServer\"\n    activate\n    set {button returned:buttonResult} to display dialog \"\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\uff1a\" & return & return & useFrameworkText buttons dialogButtons default button 2 cancel button 1 with title \"Framework\"\nend tell\nif buttonResult = \"Copy\" then\n    set the clipboard to useFrameworkText\n    display notification useFrameworkText with title \"Copied\"\nelse\n    tell application \"Script Editor\"\n        activate\n        tell document 1\n            set text of it to useFrameworkText & text of it\n            try\n                check syntax\n            end try\n        end tell\n    end tell\nend if\n\non getEveryFramework()\n    --framework\u53d6\u5f97\n    set frameworkNameList to {}\n    tell application \"Finder\"\n        repeat with libraryFolder in {path to library folder from system domain as alias, path to library folder from local domain as alias, path to library folder from user domain as alias}\n            if exists items of folder \"Frameworks\" of libraryFolder then\n                set frameworkNameList to frameworkNameList & name of items of folder \"Frameworks\" of libraryFolder\n            end if\n        end repeat\n    end tell\n    if frameworkNameList = {} then\n        error \"Can't find any frameworks\"\n    end if\n\n    --\u62e1\u5f35\u5b50\u3092\u5916\u3059\n    set textToRemoveExtension to my join(frameworkNameList, return) & return\n    return paragraphs 1 thru -2 of my replace(textToRemoveExtension, \".framework\" & return, return)\nend getEveryFramework\n\non join(textList as list, term as text)\n    set oldDel to AppleScript's text item delimiters\n    set AppleScript's text item delimiters to term\n    set aText to textList as string\n    set AppleScript's text item delimiters to oldDel\n    return aText\nend join\n\non replace(str as text, find, replace as text)\n    set oldDel to AppleScript's text item delimiters\n    set AppleScript's text item delimiters to find\n    set replaceList to text items of str\n    set AppleScript's text item delimiters to replace\n    set str to replaceList as string\n    set AppleScript's text item delimiters to oldDel\n    return str\nend replace\n\n\n\nuseFrameworkForTextExpander.scpt\u306fTextExpander\u7528\u306eAppleScript\n\n\n\nContent:\u30a2\u30c3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3068\u3057\u3066\u767b\u9332\n\u30d5\u30a1\u30a4\u30eb\u30a4\u30f3\u306e\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u30e1\u30cb\u30e5\u30fc\u3067\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u9078\u629e\n\n\n\u53d6\u5f97\u3067\u304d\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u3072\u3068\u3064\u3060\u3051\u3060\u304c\u52d5\u4f5c\u304c\u901f\u3044\n\n\n\n\n\n\n\nuseFrameworkForTextExpander.scpt\nset availableFrameworks to my getEveryFramework()\nreturn \"return \" & quote & \"use framework \" & character id {92, 34, 37} & \"fillpopup:name=framework:default=\" & my join(availableFrameworks, \":\") & character id {37, 92, 34, 34}\n\non getEveryFramework()\n    --framework\u53d6\u5f97\n    set frameworkNameList to {}\n    tell application \"Finder\"\n        repeat with libraryFolder in {path to library folder from system domain as alias, path to library folder from local domain as alias, path to library folder from user domain as alias}\n            if exists items of folder \"Frameworks\" of libraryFolder then\n                set frameworkNameList to frameworkNameList & name of items of folder \"Frameworks\" of libraryFolder\n            end if\n        end repeat\n    end tell\n    if frameworkNameList = {} then\n        error \"Can't find any frameworks\"\n    end if\n\n    --\u62e1\u5f35\u5b50\u3092\u5916\u3059\n    set textToRemoveExtension to my join(frameworkNameList, return) & return\n    return paragraphs 1 thru -2 of my replace(textToRemoveExtension, \".framework\" & return, return)\nend getEveryFramework\n\non join(textList as list, term as text)\n    set oldDel to AppleScript's text item delimiters\n    set AppleScript's text item delimiters to term\n    set aText to textList as string\n    set AppleScript's text item delimiters to oldDel\n    return aText\nend join\n\non replace(str as text, find, replace as text)\n    set oldDel to AppleScript's text item delimiters\n    set AppleScript's text item delimiters to find\n    set replaceList to text items of str\n    set AppleScript's text item delimiters to replace\n    set str to replaceList as string\n    set AppleScript's text item delimiters to oldDel\n    return str\nend replace\n\n\n\n\u66f4\u65b0\u5c65\u6b74\n\n2016-01-28: \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u53d6\u5f97\u3059\u308bAppleScript\u3092\u4f5c\u6210\n2016-01-29: TextExpander\u7528AppleScript\u3092\u4f5c\u6210\n\n\n\n* AppleScript\u3067Cocoa\u306e\u6a5f\u80fd\u3092\u4f7f\u3048\u308b\n\t* \u3067\u304d\u308b\u3053\u3068\u304c\u5897\u3048\u305f\u308a\u52d5\u4f5c\u304c\u9ad8\u901f\u5316\u3059\u308b\u30e1\u30ea\u30c3\u30c8\n\t* \u4f7f\u3046\u306b\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306euse\u6587\u304c\u5fc5\u8981\n\t\t* \u4f8b\uff1a`use framework \"Foundation\"`\n* \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u7c21\u5358\u306b\u53d6\u5f97\u3057\u305f\u3044\n\t* \u4f7f\u3048\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u5834\u6240\n\t\t* /System/Library/Frameworks/\n\t\t* /Library/Frameworks/\n\t\t* ~/Library/Frameworks/\n\t* \u62e1\u5f35\u5b50`.framework`\u3068\u3057\u3066\u5b58\u5728\n* useFrameworks.scpt\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u53d6\u5f97\u3059\u308bAppleScript\n\t* \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u9078\u629e\n\t\t* \u4e00\u5ea6\u306b\u8907\u6570\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u9078\u3079\u308b\n\t* use\u6587\u3092\u30b3\u30d4\u30fc\u307e\u305f\u306f\u633f\u5165\n\t\t* \u633f\u5165\u306f\u30b9\u30af\u30ea\u30d7\u30c8\u30a8\u30c7\u30a3\u30bf\u3092\u958b\u3044\u3066\u3044\u308b\u3068\u304d\u306b\u3060\u3051\u4f7f\u3048\u308b\n\n\n```AppleScript:useFrameworks.scpt\n--framework\u9078\u629e\ntell application \"SystemUIServer\"\n\tactivate\n\tset chooseFrameworkResult to choose from list my getEveryFramework() with title \"Framework\" with multiple selections allowed\nend tell\nif chooseFrameworkResult = false then\n\terror number -128\nend if\n\n--use\u6587\u4f5c\u6210\nset useFrameworkText to \"use framework \" & quote & my join(chooseFrameworkResult, quote & return & \"use framework \" & quote) & quote & return\n\n--\u30b3\u30d4\u30fc\u307e\u305f\u306f\u633f\u5165\ntell application \"Script Editor\"\n\tif running and (exists documents) then\n\t\tset dialogButtons to {\"Cancel\", \"Insert\", \"Copy\"}\n\telse\n\t\tset dialogButtons to {\"Cancel\", \"Copy\"}\n\tend if\nend tell\ntell application \"SystemUIServer\"\n\tactivate\n\tset {button returned:buttonResult} to display dialog \"\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\uff1a\" & return & return & useFrameworkText buttons dialogButtons default button 2 cancel button 1 with title \"Framework\"\nend tell\nif buttonResult = \"Copy\" then\n\tset the clipboard to useFrameworkText\n\tdisplay notification useFrameworkText with title \"Copied\"\nelse\n\ttell application \"Script Editor\"\n\t\tactivate\n\t\ttell document 1\n\t\t\tset text of it to useFrameworkText & text of it\n\t\t\ttry\n\t\t\t\tcheck syntax\n\t\t\tend try\n\t\tend tell\n\tend tell\nend if\n\non getEveryFramework()\n\t--framework\u53d6\u5f97\n\tset frameworkNameList to {}\n\ttell application \"Finder\"\n\t\trepeat with libraryFolder in {path to library folder from system domain as alias, path to library folder from local domain as alias, path to library folder from user domain as alias}\n\t\t\tif exists items of folder \"Frameworks\" of libraryFolder then\n\t\t\t\tset frameworkNameList to frameworkNameList & name of items of folder \"Frameworks\" of libraryFolder\n\t\t\tend if\n\t\tend repeat\n\tend tell\n\tif frameworkNameList = {} then\n\t\terror \"Can't find any frameworks\"\n\tend if\n\t\n\t--\u62e1\u5f35\u5b50\u3092\u5916\u3059\n\tset textToRemoveExtension to my join(frameworkNameList, return) & return\n\treturn paragraphs 1 thru -2 of my replace(textToRemoveExtension, \".framework\" & return, return)\nend getEveryFramework\n\non join(textList as list, term as text)\n\tset oldDel to AppleScript's text item delimiters\n\tset AppleScript's text item delimiters to term\n\tset aText to textList as string\n\tset AppleScript's text item delimiters to oldDel\n\treturn aText\nend join\n\non replace(str as text, find, replace as text)\n\tset oldDel to AppleScript's text item delimiters\n\tset AppleScript's text item delimiters to find\n\tset replaceList to text items of str\n\tset AppleScript's text item delimiters to replace\n\tset str to replaceList as string\n\tset AppleScript's text item delimiters to oldDel\n\treturn str\nend replace\n```\n\n\n* useFrameworkForTextExpander.scpt\u306fTextExpander\u7528\u306eAppleScript\n\t* `Content:\u30a2\u30c3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8`\u3068\u3057\u3066\u767b\u9332\n\t* \u30d5\u30a1\u30a4\u30eb\u30a4\u30f3\u306e\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u30e1\u30cb\u30e5\u30fc\u3067\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u9078\u629e\n\t\t* \u53d6\u5f97\u3067\u304d\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u3072\u3068\u3064\u3060\u3051\u3060\u304c\u52d5\u4f5c\u304c\u901f\u3044\n\n![useFrameworkForTextExpander.png](https://qiita-image-store.s3.amazonaws.com/0/101438/78e82bf7-e295-7f37-157e-776df4e915bc.png \"useFrameworkForTextExpander.png\")\n\n\n\n```AppleScript:useFrameworkForTextExpander.scpt\nset availableFrameworks to my getEveryFramework()\nreturn \"return \" & quote & \"use framework \" & character id {92, 34, 37} & \"fillpopup:name=framework:default=\" & my join(availableFrameworks, \":\") & character id {37, 92, 34, 34}\n\non getEveryFramework()\n\t--framework\u53d6\u5f97\n\tset frameworkNameList to {}\n\ttell application \"Finder\"\n\t\trepeat with libraryFolder in {path to library folder from system domain as alias, path to library folder from local domain as alias, path to library folder from user domain as alias}\n\t\t\tif exists items of folder \"Frameworks\" of libraryFolder then\n\t\t\t\tset frameworkNameList to frameworkNameList & name of items of folder \"Frameworks\" of libraryFolder\n\t\t\tend if\n\t\tend repeat\n\tend tell\n\tif frameworkNameList = {} then\n\t\terror \"Can't find any frameworks\"\n\tend if\n\t\n\t--\u62e1\u5f35\u5b50\u3092\u5916\u3059\n\tset textToRemoveExtension to my join(frameworkNameList, return) & return\n\treturn paragraphs 1 thru -2 of my replace(textToRemoveExtension, \".framework\" & return, return)\nend getEveryFramework\n\non join(textList as list, term as text)\n\tset oldDel to AppleScript's text item delimiters\n\tset AppleScript's text item delimiters to term\n\tset aText to textList as string\n\tset AppleScript's text item delimiters to oldDel\n\treturn aText\nend join\n\non replace(str as text, find, replace as text)\n\tset oldDel to AppleScript's text item delimiters\n\tset AppleScript's text item delimiters to find\n\tset replaceList to text items of str\n\tset AppleScript's text item delimiters to replace\n\tset str to replaceList as string\n\tset AppleScript's text item delimiters to oldDel\n\treturn str\nend replace\n```\n\n\n## \u66f4\u65b0\u5c65\u6b74\n\n* 2016-01-28: \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u53d6\u5f97\u3059\u308bAppleScript\u3092\u4f5c\u6210\n* 2016-01-29: TextExpander\u7528AppleScript\u3092\u4f5c\u6210\n\n\n", "tags": ["textexpander", "AppleScript", "Cocoa"]}