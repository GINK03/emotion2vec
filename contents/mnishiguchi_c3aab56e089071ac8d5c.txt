{"context": " More than 1 year has passed since last update.\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n\n\u5165\u529b\u30d5\u30a9\u30fc\u30e0\u306b\u5bfe\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u304c\uff11\u6587\u5b57\u5165\u529b\u3059\u308b\u3054\u3068\u306b\u8a9e\u53e5\u5019\u88dc\u306e\u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3\u30ea\u30b9\u30c8\u3092\u8868\u793a\u3057\u305f\u3044\u3002\n\u30ea\u30b9\u30c8\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\u3001\u305d\u308c\u304c\u5024\u3068\u3057\u3066\u5165\u529b\u3055\u308c\u308b\u3002\n\n\n\u74b0\u5883\n\nRuby 2.2.1\nRails 4.2.3\njquery-rails\njquery-ui-rails\nbootstrap\n\u4ed6\n\n\n\u624b\u9806\n\nView\n\u4f8b\u3048\u3070\u3001\u3053\u3093\u306a\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u3042\u308b\u3068\u3059\u308b\u3002\n\n/app/views/movings/new.html.haml\n= form_for(@moving) do |f|\n\n-#...\n\n.form-group\n  = f.label :state_from, \"* State\", class: \"h4\"\n  = f.text_field :state_from, class: \"state form-control\"\n\n-#...\n\n\n\n\u8a9e\u53e5\u5019\u88dc\u306e\u30c7\u30fc\u30bf\u3092\u6e96\u5099\u3059\u308b\u3002\n\u3044\u3064\u3082\u540c\u3058\u30c7\u30fc\u30bf\u3067\u826f\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u4e88\u3081\u914d\u5217\u3068\u3057\u3066\u6e96\u5099\u3059\u308b\u3002\n\u6700\u7d42\u7684\u306b\u914d\u5217\u306b\u306a\u3063\u3066\u3044\u308c\u3070\u3001\u30c7\u30fc\u30bf\u6e96\u5099\u306e\u65b9\u6cd5\u306f\u3069\u3046\u3067\u3082OK\u3002\n\n/app/helpers/movings_helper.rb\nmodule MovingsHelper\n  def us_states\n    [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\",\n      \"Connecticut\", \"Delaware\", \"District of Columbia\", \"Florida\", \"Georgia\",\n      \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\",\n      \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\",\n      \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\",\n      \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\",\n      \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\",\n      \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\",\n      \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"]\n  end\nend\n\n\n\njQuery\n\u4ee5\u4e0b\u306ejQuery\u306e\u30b3\u30fc\u30c9\uff13\u884c\u3092\u52a0\u3048\u308b\u3060\u3051\u3067Autocomplete\u306e\u5b9f\u88c5\u306f\u5b8c\u4e86\u3002source\u5c5e\u6027\u306b\u5148\u307b\u3069\u6e96\u5099\u3057\u305f\u914d\u5217\u3092\u6e21\u3059\u3002\n\u3069\u3053\u304b\u5225\u306e\u5834\u6240\u306b\u4fdd\u7ba1\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u3092\u53c2\u7167\u3057\u3066\u3082\u826f\u3044\u3057\u3001\njQuery ->                              # DOM\u304c\u8aad\u307f\u8fbc\u307e\u308c\u305f\u306e\u3092\u78ba\u8a8d\n  $('#moving_state_from').autocomplete # \u5bfe\u8c61\u3068\u306a\u308binput\u30bf\u30b0\u306eID\n    source: #{us_states}               # \u8a9e\u53e5\u5019\u88dc\u306e\u914d\u5217(Ruby\u30b3\u30fc\u30c9\u304b\u3089\u6e21\u3059\u5834\u5408)\n\n\u30c7\u30fc\u30bf\u304c\u5c11\u306a\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u76f4\u63a5\u30c7\u30fc\u30bf\uff08\u914d\u5217\uff09\u3092\u57cb\u3081\u8fbc\u3093\u3067\u3082OK\u3002\njQuery ->                                     # DOM\u304c\u8aad\u307f\u8fbc\u307e\u308c\u305f\u306e\u3092\u78ba\u8a8d\n  $('#moving_state_from').autocomplete        # \u5bfe\u8c61\u3068\u306a\u308binput\u30bf\u30b0\u306eID\n    source: [\"breakfast\", \"lunch\", \"dinner\"]  # \u8a9e\u53e5\u5019\u88dc\u306e\u914d\u5217(\u76f4\u63a5\u8a18\u8ff0\u5834\u5408)\n\n\u4ed6\u306e\u9078\u629e\u80a2\u3067\u9078\u629e\u3055\u308c\u305f\u5185\u5bb9\u306b\u5bfe\u5fdc\u3059\u308b\u30c7\u30fc\u30bf\u306b\u5dee\u3057\u66ff\u3048\u305f\u3044\u5834\u5408\u3002\n# \u9078\u629e\u3055\u308c\u305f\u56fd\u540d\u306b\u5fdc\u3058\u3066\u770c\u540d\u30c7\u30fc\u30bf\u3092\u5dee\u3057\u66ff\u3048\u308b\u3002\njQuery ->\n  $from = $('#moving_country_from')\n  $from.change ->\n    switch $from.children(\"option\").filter(\":selected\").text()\n      when \"United States\" then params = { source: #{us_states} }\n      when \"Japan\"         then params = { source: #{jp_prefectures} }\n      else                      params = { source: [] }\n    $('#moving_state_from').autocomplete(params)\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u751f\u6210\u3057\u305f\u30c7\u30fc\u30bf\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3002\n\n/app/models/moving.rb\nclass Moving < ActiveRecord::Base\n  #...\n\n  # \u30c7\u30fc\u30bf\u3092\u307e\u3068\u3081\u3066\u6e96\u5099\u3059\u308b\u30e1\u30bd\u30c3\u30c9\n  def autocomplete_suggestions\n    {\n      items:      Hash[Ingredient.pluck(:name, :volume)],\n      rooms:      Room.select(:name).pluck(:name),\n      categories: self.moving_items.select(:category).distinct.pluck(:category)\n    }\n  end\n  #...\nend\n\n\n\n/app/controllers/moving_items_controller.rb\n  #...\n  def new\n    @moving_item = MovingItem.new\n    set_autocomplete_suggestions_and_render(:new)\n  end\n\n  def create\n    @moving_item = MovingItem.new(moving_item_params.merge(moving_id: current_moving))\n    if @moving_item.save\n      flash[:success] = \"Created #{@moving_item.name}\"\n      redirect_to @moving\n    else\n      set_autocomplete_suggestions_and_render(:new)\n    end\n  end\n  #...\n  private\n    #...\n    def set_autocomplete_suggestions_and_render(template)\n      @suggestions = @moving.autocomplete_suggestions\n      render template\n    end\n  #...\nend\n\n\n\nnew.html.haml\n-# ID\u4ed8\u304d\u306e\u7a7a\u30bf\u30b0\u306b\u30c7\u30fc\u30bf\u3092data\u5c5e\u6027\u306b\u66f8\u304d\u8fbc\u3080\n= content_tag :div, \"\", id: \"suggestions\", data: @suggestions\n\n= render 'add_form'\n\n\n\nmovings.coffee\njQuery ->\n\n  setVolume = (volume)->\n    $(\"#moving_item_volume\").val(volume)\n\n  setSlider = (volume)->\n    $(\"#volume_slider\").val(volume)\n\n  # Slider\n\n  document.getElementById('volume_slider').addEventListener 'change', ->\n    setVolume(document.getElementById('volume_slider').value)\n\n  # AutoComplete\n\n  $('#moving_item_name').autocomplete\n    # ID\u3067\u30bf\u30b0\u3092\u63a2\u3057\u3001data\u30e1\u30bd\u30c3\u30c9\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3002\n    source: Object.keys( $('#suggestions').data('items') )\n    select: (e, ui) =>\n      itemVolume = $('#suggestions').data('items')[ui.item.value]\n      setVolume(itemVolume)\n      setSlider(itemVolume)\n\n  $('#moving_item_room').autocomplete\n    # ID\u3067\u30bf\u30b0\u3092\u63a2\u3057\u3001data\u30e1\u30bd\u30c3\u30c9\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3002\n    source: $('#suggestions').data('rooms')\n\n  $('#moving_item_category').autocomplete\n    # ID\u3067\u30bf\u30b0\u3092\u63a2\u3057\u3001data\u30e1\u30bd\u30c3\u30c9\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3002\n    source: $('#suggestions').data('categories')\n\n\n\n\u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3\u30e1\u30cb\u30e5\u30fc\u306e\u30b9\u30bf\u30a4\u30ea\u30f3\u30b0\n\u81ea\u5206\u306e\u597d\u307f\u3067\u30b9\u30bf\u30a4\u30ea\u30f3\u30b0\u3059\u308b\u3002\n\nautocomplete.scss\nul.ui-autocomplete {\n  position: absolute;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  border: solid 1px #999;\n  cursor: default;\n  li {\n    background-color: #FFF;\n    border-top: solid 1px #DDD;\n    margin: 0;\n    padding: 2px 15px;\n    a {\n      color: #000;\n      display: block;\n      padding: 3px;\n    }\n    a.ui-state-hover, a.ui-state-active {\n      background-color: #FFFCB2;\n    }\n  }\n}\n\n\n\nAutocomplete\u5b9f\u88c5\u5f8c\u306eHTML\n\n\n\u30c6\u30b9\u30c8\n\nGemfile\ngroup :test do\n  gem 'rspec-rails'\n  gem 'capybara'\n  gem \"poltergeist\"\nend\n\n\n\n/spec/rails_helper.rb\n# ...\nrequire 'capybara/poltergeist'\nCapybara.javascript_driver = :poltergeist\n\noptions = { js_errors: false }\nCapybara.register_driver :poltergeist do |app|\n  Capybara::Poltergeist::Driver.new(app, options)\nend\n# ...\n\n\n\n/spec/features/autocomplete_spec.rb\nrequire 'rails_helper'\n\nfeature \"Autocomplete interface\", type: :feature, js: true, driver: :poltergeist do\n\n  let(:user) { create(:user) }\n\n  before do\n    log_in_as user\n    visit root_path\n  end\n\n  describe \"movings/new\" do\n\n    before do\n      first(:link, \"New moving\").click\n      select \"United States\", from: \"moving_country_to\"\n    end\n\n    it \"has US states suggestion data\" do\n      expect(page).to have_css(\"div#moving_suggestions\")\n      expect(page.find('div#moving_suggestions')[\"data-us-states\"]).to have_content(\"Alabama\")\n    end\n\n    it \"shows autocomplete with a correct suggestion\" do\n      fill_autocomplete(\"moving_state_to\", with: \"New\")\n      expect(page).to have_content(\"New Mexico\")\n      expect(page).to have_content(\"New York\")\n      expect(page).not_to have_content(\"Alabama\")\n    end\n  end\nend\n\ndef fill_autocomplete(field, options = {})\n  fill_in field, with: options[:with]\n\n  page.execute_script %Q{ $('##{field}').trigger('focus') }\n  page.execute_script %Q{ $('##{field}').trigger('keydown') }\n\n  selector = %Q{ ul.ui-autocomplete li.ui-menu-item a:contains(\"#{options[:select]}\") }\n\n  expect(page).to have_selector('ul.ui-autocomplete')\n  page.execute_script %Q{ $('#{selector}').trigger('mouseenter').click() }\nend\n\n\n\n\u53c2\u8003\u8cc7\u6599\n\nhttps://github.com/railscasts/102-auto-complete-association-revised\nhttp://ruby-journal.com/how-to-do-jqueryui-autocomplete-with-capybara-2/\n\n\n![Screenshot 2015-07-29 09.18.57.png](https://qiita-image-store.s3.amazonaws.com/0/82804/4d4b3cb8-6c8a-a402-7131-1d52c576b911.png)\n\n#\u3084\u308a\u305f\u3044\u3053\u3068\n- \u5165\u529b\u30d5\u30a9\u30fc\u30e0\u306b\u5bfe\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u304c\uff11\u6587\u5b57\u5165\u529b\u3059\u308b\u3054\u3068\u306b\u8a9e\u53e5\u5019\u88dc\u306e\u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3\u30ea\u30b9\u30c8\u3092\u8868\u793a\u3057\u305f\u3044\u3002\n- \u30ea\u30b9\u30c8\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\u3001\u305d\u308c\u304c\u5024\u3068\u3057\u3066\u5165\u529b\u3055\u308c\u308b\u3002\n\n#\u74b0\u5883\n- Ruby 2.2.1\n- Rails 4.2.3\n- jquery-rails\n- jquery-ui-rails\n- bootstrap\n- \u4ed6\n\n#\u624b\u9806\n\n###View\n\n\u4f8b\u3048\u3070\u3001\u3053\u3093\u306a\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u3042\u308b\u3068\u3059\u308b\u3002\n\n```haml:/app/views/movings/new.html.haml\n= form_for(@moving) do |f|\n\n-#...\n\n.form-group\n  = f.label :state_from, \"* State\", class: \"h4\"\n  = f.text_field :state_from, class: \"state form-control\"\n\n-#...\n```\n\n###\u8a9e\u53e5\u5019\u88dc\u306e\u30c7\u30fc\u30bf\u3092\u6e96\u5099\u3059\u308b\u3002\n\n\u3044\u3064\u3082\u540c\u3058\u30c7\u30fc\u30bf\u3067\u826f\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u4e88\u3081\u914d\u5217\u3068\u3057\u3066\u6e96\u5099\u3059\u308b\u3002\n\u6700\u7d42\u7684\u306b\u914d\u5217\u306b\u306a\u3063\u3066\u3044\u308c\u3070\u3001\u30c7\u30fc\u30bf\u6e96\u5099\u306e\u65b9\u6cd5\u306f\u3069\u3046\u3067\u3082OK\u3002\n\n```rb:/app/helpers/movings_helper.rb\nmodule MovingsHelper\n  def us_states\n    [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\",\n      \"Connecticut\", \"Delaware\", \"District of Columbia\", \"Florida\", \"Georgia\",\n      \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\",\n      \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\",\n      \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\",\n      \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\",\n      \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\",\n      \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\",\n      \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"]\n  end\nend\n```\n\n###jQuery\n\n\u4ee5\u4e0b\u306ejQuery\u306e\u30b3\u30fc\u30c9\uff13\u884c\u3092\u52a0\u3048\u308b\u3060\u3051\u3067Autocomplete\u306e\u5b9f\u88c5\u306f\u5b8c\u4e86\u3002source\u5c5e\u6027\u306b\u5148\u307b\u3069\u6e96\u5099\u3057\u305f\u914d\u5217\u3092\u6e21\u3059\u3002\n\n\u3069\u3053\u304b\u5225\u306e\u5834\u6240\u306b\u4fdd\u7ba1\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u3092\u53c2\u7167\u3057\u3066\u3082\u826f\u3044\u3057\u3001\n\n```coffeescript\njQuery ->                              # DOM\u304c\u8aad\u307f\u8fbc\u307e\u308c\u305f\u306e\u3092\u78ba\u8a8d\n  $('#moving_state_from').autocomplete # \u5bfe\u8c61\u3068\u306a\u308binput\u30bf\u30b0\u306eID\n    source: #{us_states}               # \u8a9e\u53e5\u5019\u88dc\u306e\u914d\u5217(Ruby\u30b3\u30fc\u30c9\u304b\u3089\u6e21\u3059\u5834\u5408)\n```\n\n\u30c7\u30fc\u30bf\u304c\u5c11\u306a\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u76f4\u63a5\u30c7\u30fc\u30bf\uff08\u914d\u5217\uff09\u3092\u57cb\u3081\u8fbc\u3093\u3067\u3082OK\u3002\n\n```coffeescript\njQuery ->                                     # DOM\u304c\u8aad\u307f\u8fbc\u307e\u308c\u305f\u306e\u3092\u78ba\u8a8d\n  $('#moving_state_from').autocomplete        # \u5bfe\u8c61\u3068\u306a\u308binput\u30bf\u30b0\u306eID\n    source: [\"breakfast\", \"lunch\", \"dinner\"]  # \u8a9e\u53e5\u5019\u88dc\u306e\u914d\u5217(\u76f4\u63a5\u8a18\u8ff0\u5834\u5408)\n```\n\n\u4ed6\u306e\u9078\u629e\u80a2\u3067\u9078\u629e\u3055\u308c\u305f\u5185\u5bb9\u306b\u5bfe\u5fdc\u3059\u308b\u30c7\u30fc\u30bf\u306b\u5dee\u3057\u66ff\u3048\u305f\u3044\u5834\u5408\u3002\n\n```coffeescript\n# \u9078\u629e\u3055\u308c\u305f\u56fd\u540d\u306b\u5fdc\u3058\u3066\u770c\u540d\u30c7\u30fc\u30bf\u3092\u5dee\u3057\u66ff\u3048\u308b\u3002\njQuery ->\n  $from = $('#moving_country_from')\n  $from.change ->\n    switch $from.children(\"option\").filter(\":selected\").text()\n      when \"United States\" then params = { source: #{us_states} }\n      when \"Japan\"         then params = { source: #{jp_prefectures} }\n      else                      params = { source: [] }\n    $('#moving_state_from').autocomplete(params)\n```\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u751f\u6210\u3057\u305f\u30c7\u30fc\u30bf\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3002\n\n```rb:/app/models/moving.rb\nclass Moving < ActiveRecord::Base\n  #...\n\n  # \u30c7\u30fc\u30bf\u3092\u307e\u3068\u3081\u3066\u6e96\u5099\u3059\u308b\u30e1\u30bd\u30c3\u30c9\n  def autocomplete_suggestions\n    {\n      items:      Hash[Ingredient.pluck(:name, :volume)],\n      rooms:      Room.select(:name).pluck(:name),\n      categories: self.moving_items.select(:category).distinct.pluck(:category)\n    }\n  end\n  #...\nend\n```\n\n```rb:/app/controllers/moving_items_controller.rb\n  #...\n  def new\n    @moving_item = MovingItem.new\n    set_autocomplete_suggestions_and_render(:new)\n  end\n\n  def create\n    @moving_item = MovingItem.new(moving_item_params.merge(moving_id: current_moving))\n    if @moving_item.save\n      flash[:success] = \"Created #{@moving_item.name}\"\n      redirect_to @moving\n    else\n      set_autocomplete_suggestions_and_render(:new)\n    end\n  end\n  #...\n  private\n    #...\n    def set_autocomplete_suggestions_and_render(template)\n      @suggestions = @moving.autocomplete_suggestions\n      render template\n    end\n  #...\nend\n```\n\n```haml:new.html.haml\n-# ID\u4ed8\u304d\u306e\u7a7a\u30bf\u30b0\u306b\u30c7\u30fc\u30bf\u3092data\u5c5e\u6027\u306b\u66f8\u304d\u8fbc\u3080\n= content_tag :div, \"\", id: \"suggestions\", data: @suggestions\n\n= render 'add_form'\n```\n\n```coffee:movings.coffee\njQuery ->\n\n  setVolume = (volume)->\n    $(\"#moving_item_volume\").val(volume)\n\n  setSlider = (volume)->\n    $(\"#volume_slider\").val(volume)\n\n  # Slider\n\n  document.getElementById('volume_slider').addEventListener 'change', ->\n    setVolume(document.getElementById('volume_slider').value)\n\n  # AutoComplete\n\n  $('#moving_item_name').autocomplete\n    # ID\u3067\u30bf\u30b0\u3092\u63a2\u3057\u3001data\u30e1\u30bd\u30c3\u30c9\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3002\n    source: Object.keys( $('#suggestions').data('items') )\n    select: (e, ui) =>\n      itemVolume = $('#suggestions').data('items')[ui.item.value]\n      setVolume(itemVolume)\n      setSlider(itemVolume)\n\n  $('#moving_item_room').autocomplete\n    # ID\u3067\u30bf\u30b0\u3092\u63a2\u3057\u3001data\u30e1\u30bd\u30c3\u30c9\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3002\n    source: $('#suggestions').data('rooms')\n\n  $('#moving_item_category').autocomplete\n    # ID\u3067\u30bf\u30b0\u3092\u63a2\u3057\u3001data\u30e1\u30bd\u30c3\u30c9\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3002\n    source: $('#suggestions').data('categories')\n```\n\n###\u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3\u30e1\u30cb\u30e5\u30fc\u306e\u30b9\u30bf\u30a4\u30ea\u30f3\u30b0\n\n\u81ea\u5206\u306e\u597d\u307f\u3067\u30b9\u30bf\u30a4\u30ea\u30f3\u30b0\u3059\u308b\u3002\n\n```scss:autocomplete.scss\nul.ui-autocomplete {\n  position: absolute;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  border: solid 1px #999;\n  cursor: default;\n  li {\n    background-color: #FFF;\n    border-top: solid 1px #DDD;\n    margin: 0;\n    padding: 2px 15px;\n    a {\n      color: #000;\n      display: block;\n      padding: 3px;\n    }\n    a.ui-state-hover, a.ui-state-active {\n      background-color: #FFFCB2;\n    }\n  }\n}\n```\n\n###Autocomplete\u5b9f\u88c5\u5f8c\u306eHTML\n\n![Screenshot 2015-07-29 09.41.37.png](https://qiita-image-store.s3.amazonaws.com/0/82804/74c52808-f15c-cf37-8118-ccc56d6eb0ea.png)\n\n# \u30c6\u30b9\u30c8\n\n```rb:Gemfile\ngroup :test do\n  gem 'rspec-rails'\n  gem 'capybara'\n  gem \"poltergeist\"\nend\n```\n\n```rb:/spec/rails_helper.rb\n# ...\nrequire 'capybara/poltergeist'\nCapybara.javascript_driver = :poltergeist\n\noptions = { js_errors: false }\nCapybara.register_driver :poltergeist do |app|\n  Capybara::Poltergeist::Driver.new(app, options)\nend\n# ...\n```\n\n```rb:/spec/features/autocomplete_spec.rb\nrequire 'rails_helper'\n\nfeature \"Autocomplete interface\", type: :feature, js: true, driver: :poltergeist do\n\n  let(:user) { create(:user) }\n\n  before do\n    log_in_as user\n    visit root_path\n  end\n\n  describe \"movings/new\" do\n\n    before do\n      first(:link, \"New moving\").click\n      select \"United States\", from: \"moving_country_to\"\n    end\n\n    it \"has US states suggestion data\" do\n      expect(page).to have_css(\"div#moving_suggestions\")\n      expect(page.find('div#moving_suggestions')[\"data-us-states\"]).to have_content(\"Alabama\")\n    end\n\n    it \"shows autocomplete with a correct suggestion\" do\n      fill_autocomplete(\"moving_state_to\", with: \"New\")\n      expect(page).to have_content(\"New Mexico\")\n      expect(page).to have_content(\"New York\")\n      expect(page).not_to have_content(\"Alabama\")\n    end\n  end\nend\n\ndef fill_autocomplete(field, options = {})\n  fill_in field, with: options[:with]\n\n  page.execute_script %Q{ $('##{field}').trigger('focus') }\n  page.execute_script %Q{ $('##{field}').trigger('keydown') }\n\n  selector = %Q{ ul.ui-autocomplete li.ui-menu-item a:contains(\"#{options[:select]}\") }\n\n  expect(page).to have_selector('ul.ui-autocomplete')\n  page.execute_script %Q{ $('#{selector}').trigger('mouseenter').click() }\nend\n```\n\n#\u53c2\u8003\u8cc7\u6599\n\n- https://github.com/railscasts/102-auto-complete-association-revised\n- http://ruby-journal.com/how-to-do-jqueryui-autocomplete-with-capybara-2/\n", "tags": ["Rails", "jQuery", "jquery.ui", "CSS", "CoffeeScript"]}