{"context": "\n\nfizzbuzz\u3092\u5c0f\u96e3\u3057\u304f\u89e3\u304d\u305f\u3044\n\u4ee5\u524d\uff64\u30ab\u30b8\u30e5\u30a2\u30eb\u306a\u9762\u8ac7\u306e\u3088\u3046\u306a\u5834\u3067\u304a\u3082\u3080\u308d\u306b\u30af\u30a4\u30ba\u3092\u51fa\u984c\u3055\u308c\u308b\uff64\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\uff61\n\u306a\u3093\u3066\u3053\u3068\u306f\u306a\u3044fizzbuzz\u554f\u984c\u3060\u3063\u305f\u306e\u3067\u3059\u304c\uff64\u5e30\u308a\u9053\uff64\u30d5\u30c4\u30d5\u30c4\u3068\u7591\u554f\u304c\u6e67\u3044\u3066\u304d\u307e\u3057\u305f\uff61\n\u3046\u30fc\u3093\uff61\u3042\u308c\u306f\u4e00\u4f53\uff64\u4f55\u3092\u898b\u3066\u3044\u305f\u306e\u3060\u308d\u3046\uff65\uff65\n\u305d\u306e\u6642\u306f\u7121\u96e3\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u7d42\u308f\u3063\u305f\u306e\u3067\u3059\u304c\uff64\u3042\u308c\u306f\u8cb4\u91cd\u306a\u30a2\u30d4\u30fc\u30eb\u306e\u5834\u3060\u3063\u305f\u304b\u3082\u77e5\u308c\u306a\u3044\u306a\u3068\u53cd\u7701\uff61\n\u3053\u3046\u3044\u3046\u5c40\u9762\u306b\u304a\u3044\u3066\uff64\uff62\u3069\u3093\u306afizzbuzz\u3092\u66f8\u3044\u305f\u3089\u5f37\u3044\u30a4\u30f3\u30d1\u30af\u30c8\u3092\u6b8b\u305b\u308b\u306e\u304b\uff63\u3068\u3044\u3046\u9593\u9055\u3063\u305f\u8def\u7dda\u3092\u8003\u3048\u305f\u7d50\u679c\uff64\u6700\u7d42\u7684\u306bfizzbuzz\u5c02\u7528\u306eDSL\u3092\u4f5c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\uff61\n(\u601d\u3044\u306e\u307b\u304b\u9577\u304f\u306a\u3063\u305f\u306e\u3067\uff64DSL\u306f\u6b21\u56de)\n\u672c\u5f53\u306e\u9762\u63a5\u3067\u306f\u7121\u96e3\u306a\u7b54\u3048\u304c\u3044\u3044\u306e\u304b\u3082\u3068\u601d\u3044\u307e\u3059w\n\u305f\u3076\u3093\uff61\u307e\u3042\uff64\u3053\u3093\u306a\u7c21\u5358\u306a\u554f\u984c\u3092\u805e\u304b\u308c\u308b\u3053\u3068\u306f\u7a00\u3060\u3068\u601d\u3046\u3051\u3069\uff61\n\n\u81ea\u5206\u306e\u30b3\u30fc\u30c9\n\u6700\u521d\u306b\u3071\u3063\u3068\u601d\u3044\u3064\u3044\u305f\u306e\u306f\u3053\u3093\u306a\u611f\u3058\n(MIN_NUM..MAX_NUM).each do |n|\n  if n % 15 == 0\n    puts = 'fizzbuzz'\n  elsif n % 3 == 0\n    puts = 'fizz'\n  elsif n % 5 == 0\n    puts = 'buzz'\n  else\n    puts = n.to_s\n  end\nend\n\n\u3061\u306a\u307f\u306b\uff64MIN_NUM\u304b\u3089MAX_NUM\u307e\u3067\u8a08\u7b97\u3059\u308b\u8a2d\u5b9a\n(MAX_NUM > MIN_NUM\u306f\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3059\u308b)\n\u3082\u3046\u3061\u3087\u3063\u3068\u30eb\u30d3\u30fc\u611f\u3092\u51fa\u3057\u305f\u304b\u3063\u305f\u306e\u3067\uff64\u5927\u4f53\u3053\u3093\u306a\u3068\u3053\u308d\u3067\u624b\u3092\u6253\u3063\u305f\nMIN_NUM.upto MAX_NUM do |n|\n  s = ''\n  s << 'fizz' if (n % 3).zero?\n  s << 'buzz' if (n % 5).zero?\n  s = n.to_s if s.empty?\n  puts s\nend\n\n\u3053\u3093\u306a\u306e\u3067\u3088\u304b\u3063\u305f\u306e\u3060\u308d\u3046\u304b\uff61\n\u3067\u3082\u307e\u3066\u3088\uff61\u3055\u3089\u3063\u3068map\u304c\u4f7f\u3048\u308b\u306e\u304b\u3092\u898b\u3089\u308c\u3066\u3044\u305f\u306e\u304b\u3082\u306a\uff65\uff65\n(MIN_NUM..MAX_NUM).to_a.map { |n|\n  m = n\n  n = 'fizz' if (m % 3).zero?\n  n = 'buzz' if (m % 5).zero?\n  n = 'fizzbuzz' if (m % 15).zero?\n  n.to_s\n}.each{|s| puts s}\n\n\u3061\u3087\u3063\u3068\u30c8\u30ea\u30d3\u30a2\u3063\u307d\u3044\u4f7f\u3044\u65b9\u3082\u898b\u305b\u3089\u308c\u305f\u304b\u3082\u3057\u308c\u306a\u3044\uff61\na = (MIN_NUM..MAX_NUM).to_a.map {|n|\n  case [n % 3, n % 5].map(&:zero?)\n  when [true, true]\n    n='fizzbuzz'\n  when [true, false]\n    n='fizz'\n  when [false, true]\n    n='buzz'\n  else\n    n=n\n  end\n}\nputs *a\n\n\u307e\u3063\u3068\u3046\u306b\uff64\u6761\u4ef6\u8a2d\u5b9a\u3068\u51e6\u7406\u3092\u66f8\u304d\u5206\u3051\u308b\u3068\u304b\u3082\u3044\u3044\u306e\u304b\u3082\uff61\nrule = { 15: 'fizzbuzz', 3: 'fizz', 5: 'buzz' }\n\ndef fizzbuzz(n)\n  rule.each.do |m, comment|\n    return comment if (n % m).zero?\n  end\n  return n.to_s\nend\n\n(MIN_NUM..MAX_NUM).to_a.each{ |s| puts fizzbuzz(s) }\n\n\n\u30ef\u30a4\u30eb\u30c9\u306a\u5974\n\u3053\u306e\u8fba\u304b\u3089\u6bb5\u3005\u3053\u3058\u3089\u305b\u3066\u304d\u305f\uff61\ndevidable = -> (n, m) {(m % n).zero?}\nfizzbuzz = -> (s, b) {b ? s : nil}\nMIN_NUM.upto MAX_NUM do |n|\n  s = nil\n  s ||= fizzbuzz.call(devidable.call(n,15), 'fizzbuzz')\n  s ||= fizzbuzz.call(devidable.call(n,3), 'fizz')\n  s ||= fizzbuzz.call(devidable.call(n,5), 'buzz')\n  s ||= n.to_s\n  puts s\nend\n\n\u5171\u901a\u90e8\u5206\u304c\u6c17\u306b\u306a\u308b\u306e\u3067\uff64\u30ab\u30ea\u30fc\u5316\u3057\u3066\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\uff61\ndevidable =-> (m, n) { (n % m).zero? }\n\ndb_curried = devidable.curry\ndb15 = db_curried.(15)\ndb3 = db_curried.(3)\ndb5 = db_curried.(5)\n\nMIN_NUM.upto MAX_NUM do |i|\n  case i\n  when db15\n    puts 'fizzbuzz'\n  when db3\n    puts 'fizz'\n  when db5\n    puts 'buzz'\n  else\n    puts i\n  end\nend\n\n\u4f59\u8a08\u306b\u9577\u304f\u306a\u3063\u305f\uff61\n\u307e\u3055\u304b\u306e\u4f8b\u5916\u51e6\u7406\u3092\u4f7f\u3063\u3066\u307f\u308b\nMIN_NUM.upto MAX_NUM do |n|\n  begin\n    1/(n % 15)\n  rescue\n    puts 'fizzbuzz'\n    next\n  end\n  begin\n    1/(n % 3)\n  rescue\n    puts 'fizz'\n    next\n  end\n  begin\n    1/(n % 5)\n  rescue\n    puts 'buzz'\n    next\n  end\n  puts n\nend\n\n\u30e2\u30f3\u30ad\u30fc\u30d1\u30c3\u30c1\u3068\u304b\nmodule FizzBuzzExtentions\n  refine Fixnum do\n    def fizzbuzz\n      n = self\n      n = 'fizz' if (self % 3).zero?\n      n = 'buzz' if (self % 5).zero?\n      n = 'fizzbuzz' if (self % 15).zero?\n      n.to_s\n    end\n  end\nend\n\nmodule FizzBuzz\n  using FizzBuzzExtentions\n  (MIN_NUM..MAX_NUM).each {|s| puts s.fizzbuzz}\nend\n\n\u30e1\u30bd\u30c3\u30c9puts\u3092\u30e9\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u307f\u308b\u306e\u3082\u9762\u767d\u3044\u304b\u3082\u3057\u308c\u306a\u3044\nmodule PutsWrapper\n\n  def puts n\n    if n.is_a? Fixnum\n      if (n % 15).zero?\n        super 'fizzbuzz'\n      elsif (n % 3).zero?\n        super 'fizz'\n      elsif (n % 5).zero?\n        super 'buzz'\n      else\n        super n\n      end\n    else\n      super n\n    end\n  end\nend\n\nObject.class_eval do\n  prepend PutsWrapper\nend\n(MIN_NUM..MAX_NUM).each {|s| puts s}\n\n\uff62\u9762\u5012\u304f\u305b\u30fc\u3084\u3064\u3060\uff63\uff62\u4e00\u7dd2\u306b\u50cd\u304d\u305f\u304f\u306a\u3044\uff63\u3068\u601d\u308f\u308c\u308b\u3053\u3068\u9593\u9055\u3044\u306a\u3057\u3067\u3057\u3087\u3046ww\n\n\u9078\u5916\n\u7121\u99c4\u306b\u518d\u5e30\u3092\u4f7f\u3063\u3066\u307f\u308b\ndef fizzbuzzR(n,max)\n  return if n>max\n  if (n % 15).zero?\n    puts 'fizzbuzz'\n  elsif (n % 3).zero?\n    puts 'fizz'\n  elsif (n % 5).zero?\n    puts 'buzz'\n  else\n    puts n.to_s\n  end\n  fizzbuzzR(n+1, max)\nend\nfizzbuzzR(MIN_NUM, MAX_NUM)\n\n\u5168\u304f\u30eb\u30d3\u30fc\u307d\u304f\u306a\u3044\u30b3\u30fc\u30c9\u3067\u9006\u30a2\u30d4\u30fc\u30eb\u3059\u308b\u3068\u304b\nn = MIN_NUM\n\nwhile n<=MAX_NUM do\n\n  mod3 = (n % 3) == 0 ? 1 : 0\n  mod5 = (n % 5) == 0 ? 1 : 0\n\n  case 2 * mod5 + mod3\n  when 0\n    puts n\n  when 1\n    puts 'fizz'\n  when 2\n    puts 'buzz'\n  when 3\n    puts 'fizzbuzz'\n  end\n\n  n += 1\nend\n\n\u3042\u3068\u306f\uff64\uff623\u306e\u500d\u6570\u306f\u5404\u6841\u306e\u6570\u5b57\u540c\u58eb\u3092\u8db3\u3057\uff64\u3053\u308c\u30921\u6841\u306b\u306a\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3057\u3066\u884c\u304f\u30683\uff646\uff649\u306e\u3044\u305a\u308c\u304b\u306b\u306a\u308b\uff63\u3068\u3044\u3046\u6027\u8cea\u3084\uff64\uff625\u306e\u500d\u6570\u306f1\u6841\u76ee\u304c5,0\u3067\u7d42\u308f\u308b\uff63\u3068\u3044\u3046\u7279\u5fb4\u3092\u5229\u7528\u3057\u3066\uff64\u9014\u65b9\u3082\u306a\u3044\u52b4\u529b\u3092\u304b\u3051\u3066\u500d\u6570\u3092\u5224\u5b9a\u3059\u308b\u65b9\u5411\u306a\u3069\uff65\uff65\uff65(\u5272\u611b)\n\u3068\u3044\u3046\u308f\u3051\u3067\uff64\u3082\u3063\u3068\u9762\u767d\u3044\u30a2\u30a4\u30c7\u30a2\u304c\u3042\u308c\u3070\u305c\u3072\u3054\u6559\u793a\u304f\u3060\u3055\u3044\u307e\u305b\uff61\n\u5f8c\u7de8\u306fDSL\u3092\u4f5c\u3063\u3066\u307f\u305f\u3044\uff61\n\n\u53c2\u8003\n\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0ruby \u7b2c\u4e8c\u7248\n\u3053\u306e\u672c\u3092\u8aad\u307f\u306a\u304c\u3089\u69d8\u3005\u306a\u89d2\u5ea6\u304b\u3089fizzbuzz\u3092\u66f8\u3044\u3066\u307f\u308b\u3068\uff64\u8272\u3005\u306a\u6280\u8853\u304c\u8eab\u306b\u3064\u304f\u6c17\u304c\u3057\u307e\u3057\u305f\uff61\u3048\u3048\uff61\u305f\u3076\u3093\uff61\n# fizzbuzz\u3092\u5c0f\u96e3\u3057\u304f\u89e3\u304d\u305f\u3044\n\n\u4ee5\u524d\uff64\u30ab\u30b8\u30e5\u30a2\u30eb\u306a\u9762\u8ac7\u306e\u3088\u3046\u306a\u5834\u3067\u304a\u3082\u3080\u308d\u306b\u30af\u30a4\u30ba\u3092\u51fa\u984c\u3055\u308c\u308b\uff64\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\uff61\n\u306a\u3093\u3066\u3053\u3068\u306f\u306a\u3044[fizzbuzz\u554f\u984c](https://ja.wikipedia.org/wiki/Fizz_Buzz)\u3060\u3063\u305f\u306e\u3067\u3059\u304c\uff64\u5e30\u308a\u9053\uff64\u30d5\u30c4\u30d5\u30c4\u3068\u7591\u554f\u304c\u6e67\u3044\u3066\u304d\u307e\u3057\u305f\uff61\n\n\u3046\u30fc\u3093\uff61\u3042\u308c\u306f\u4e00\u4f53\uff64\u4f55\u3092\u898b\u3066\u3044\u305f\u306e\u3060\u308d\u3046\uff65\uff65\n\n\u305d\u306e\u6642\u306f\u7121\u96e3\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u7d42\u308f\u3063\u305f\u306e\u3067\u3059\u304c\uff64\u3042\u308c\u306f\u8cb4\u91cd\u306a\u30a2\u30d4\u30fc\u30eb\u306e\u5834\u3060\u3063\u305f\u304b\u3082\u77e5\u308c\u306a\u3044\u306a\u3068\u53cd\u7701\uff61\n\n\u3053\u3046\u3044\u3046\u5c40\u9762\u306b\u304a\u3044\u3066\uff64**\uff62\u3069\u3093\u306afizzbuzz\u3092\u66f8\u3044\u305f\u3089\u5f37\u3044\u30a4\u30f3\u30d1\u30af\u30c8\u3092\u6b8b\u305b\u308b\u306e\u304b\uff63**\u3068\u3044\u3046\u9593\u9055\u3063\u305f\u8def\u7dda\u3092\u8003\u3048\u305f\u7d50\u679c\uff64\u6700\u7d42\u7684\u306bfizzbuzz\u5c02\u7528\u306eDSL\u3092\u4f5c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\uff61\n(\u601d\u3044\u306e\u307b\u304b\u9577\u304f\u306a\u3063\u305f\u306e\u3067\uff64DSL\u306f\u6b21\u56de)\n\n\u672c\u5f53\u306e\u9762\u63a5\u3067\u306f\u7121\u96e3\u306a\u7b54\u3048\u304c\u3044\u3044\u306e\u304b\u3082\u3068\u601d\u3044\u307e\u3059w\n\u305f\u3076\u3093\uff61\u307e\u3042\uff64\u3053\u3093\u306a\u7c21\u5358\u306a\u554f\u984c\u3092\u805e\u304b\u308c\u308b\u3053\u3068\u306f\u7a00\u3060\u3068\u601d\u3046\u3051\u3069\uff61\n\n# \u81ea\u5206\u306e\u30b3\u30fc\u30c9\n\n\u6700\u521d\u306b\u3071\u3063\u3068\u601d\u3044\u3064\u3044\u305f\u306e\u306f\u3053\u3093\u306a\u611f\u3058\n\n```ruby\n(MIN_NUM..MAX_NUM).each do |n|\n  if n % 15 == 0\n    puts = 'fizzbuzz'\n  elsif n % 3 == 0\n    puts = 'fizz'\n  elsif n % 5 == 0\n    puts = 'buzz'\n  else\n    puts = n.to_s\n  end\nend\n```\n\n\u3061\u306a\u307f\u306b\uff64MIN_NUM\u304b\u3089MAX_NUM\u307e\u3067\u8a08\u7b97\u3059\u308b\u8a2d\u5b9a\n(MAX_NUM > MIN_NUM\u306f\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3059\u308b)\n\n\u3082\u3046\u3061\u3087\u3063\u3068\u30eb\u30d3\u30fc\u611f\u3092\u51fa\u3057\u305f\u304b\u3063\u305f\u306e\u3067\uff64\u5927\u4f53\u3053\u3093\u306a\u3068\u3053\u308d\u3067\u624b\u3092\u6253\u3063\u305f\n\n```ruby\nMIN_NUM.upto MAX_NUM do |n|\n  s = ''\n  s << 'fizz' if (n % 3).zero?\n  s << 'buzz' if (n % 5).zero?\n  s = n.to_s if s.empty?\n  puts s\nend\n```\n\n\u3053\u3093\u306a\u306e\u3067\u3088\u304b\u3063\u305f\u306e\u3060\u308d\u3046\u304b\uff61\n\n\u3067\u3082\u307e\u3066\u3088\uff61\u3055\u3089\u3063\u3068map\u304c\u4f7f\u3048\u308b\u306e\u304b\u3092\u898b\u3089\u308c\u3066\u3044\u305f\u306e\u304b\u3082\u306a\uff65\uff65\n\n```ruby\n(MIN_NUM..MAX_NUM).to_a.map { |n|\n  m = n\n  n = 'fizz' if (m % 3).zero?\n  n = 'buzz' if (m % 5).zero?\n  n = 'fizzbuzz' if (m % 15).zero?\n  n.to_s\n}.each{|s| puts s}\n```\n\n\u3061\u3087\u3063\u3068\u30c8\u30ea\u30d3\u30a2\u3063\u307d\u3044\u4f7f\u3044\u65b9\u3082\u898b\u305b\u3089\u308c\u305f\u304b\u3082\u3057\u308c\u306a\u3044\uff61\n\n```ruby\na = (MIN_NUM..MAX_NUM).to_a.map {|n|\n  case [n % 3, n % 5].map(&:zero?)\n  when [true, true]\n    n='fizzbuzz'\n  when [true, false]\n    n='fizz'\n  when [false, true]\n    n='buzz'\n  else\n    n=n\n  end\n}\nputs *a\n```\n\n\u307e\u3063\u3068\u3046\u306b\uff64\u6761\u4ef6\u8a2d\u5b9a\u3068\u51e6\u7406\u3092\u66f8\u304d\u5206\u3051\u308b\u3068\u304b\u3082\u3044\u3044\u306e\u304b\u3082\uff61\n\n```ruby\nrule = { 15: 'fizzbuzz', 3: 'fizz', 5: 'buzz' }\n\ndef fizzbuzz(n)\n  rule.each.do |m, comment|\n    return comment if (n % m).zero?\n  end\n  return n.to_s\nend\n\n(MIN_NUM..MAX_NUM).to_a.each{ |s| puts fizzbuzz(s) }\n```\n\n# \u30ef\u30a4\u30eb\u30c9\u306a\u5974\n\n\u3053\u306e\u8fba\u304b\u3089\u6bb5\u3005\u3053\u3058\u3089\u305b\u3066\u304d\u305f\uff61\n\n```ruby\ndevidable = -> (n, m) {(m % n).zero?}\nfizzbuzz = -> (s, b) {b ? s : nil}\nMIN_NUM.upto MAX_NUM do |n|\n  s = nil\n  s ||= fizzbuzz.call(devidable.call(n,15), 'fizzbuzz')\n  s ||= fizzbuzz.call(devidable.call(n,3), 'fizz')\n  s ||= fizzbuzz.call(devidable.call(n,5), 'buzz')\n  s ||= n.to_s\n  puts s\nend\n```\n\n\u5171\u901a\u90e8\u5206\u304c\u6c17\u306b\u306a\u308b\u306e\u3067\uff64\u30ab\u30ea\u30fc\u5316\u3057\u3066\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\uff61\n\n```ruby\ndevidable =-> (m, n) { (n % m).zero? }\n\ndb_curried = devidable.curry\ndb15 = db_curried.(15)\ndb3 = db_curried.(3)\ndb5 = db_curried.(5)\n\nMIN_NUM.upto MAX_NUM do |i|\n  case i\n  when db15\n    puts 'fizzbuzz'\n  when db3\n    puts 'fizz'\n  when db5\n    puts 'buzz'\n  else\n    puts i\n  end\nend\n```\n\n\u4f59\u8a08\u306b\u9577\u304f\u306a\u3063\u305f\uff61\n\n\u307e\u3055\u304b\u306e\u4f8b\u5916\u51e6\u7406\u3092\u4f7f\u3063\u3066\u307f\u308b\n\n```ruby\nMIN_NUM.upto MAX_NUM do |n|\n  begin\n    1/(n % 15)\n  rescue\n    puts 'fizzbuzz'\n    next\n  end\n  begin\n    1/(n % 3)\n  rescue\n    puts 'fizz'\n    next\n  end\n  begin\n    1/(n % 5)\n  rescue\n    puts 'buzz'\n    next\n  end\n  puts n\nend\n```\n\n\u30e2\u30f3\u30ad\u30fc\u30d1\u30c3\u30c1\u3068\u304b\n\n```ruby\nmodule FizzBuzzExtentions\n  refine Fixnum do\n    def fizzbuzz\n      n = self\n      n = 'fizz' if (self % 3).zero?\n      n = 'buzz' if (self % 5).zero?\n      n = 'fizzbuzz' if (self % 15).zero?\n      n.to_s\n    end\n  end\nend\n\nmodule FizzBuzz\n  using FizzBuzzExtentions\n  (MIN_NUM..MAX_NUM).each {|s| puts s.fizzbuzz}\nend\n```\n\n\u30e1\u30bd\u30c3\u30c9`puts`\u3092\u30e9\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u307f\u308b\u306e\u3082\u9762\u767d\u3044\u304b\u3082\u3057\u308c\u306a\u3044\n\n```ruby\nmodule PutsWrapper\n\n  def puts n\n    if n.is_a? Fixnum\n      if (n % 15).zero?\n        super 'fizzbuzz'\n      elsif (n % 3).zero?\n        super 'fizz'\n      elsif (n % 5).zero?\n        super 'buzz'\n      else\n        super n\n      end\n    else\n      super n\n    end\n  end\nend\n\nObject.class_eval do\n  prepend PutsWrapper\nend\n(MIN_NUM..MAX_NUM).each {|s| puts s}\n```\n\n\uff62\u9762\u5012\u304f\u305b\u30fc\u3084\u3064\u3060\uff63\uff62\u4e00\u7dd2\u306b\u50cd\u304d\u305f\u304f\u306a\u3044\uff63\u3068\u601d\u308f\u308c\u308b\u3053\u3068\u9593\u9055\u3044\u306a\u3057\u3067\u3057\u3087\u3046ww\n\n# \u9078\u5916\n\n\u7121\u99c4\u306b\u518d\u5e30\u3092\u4f7f\u3063\u3066\u307f\u308b\n\n```ruby\ndef fizzbuzzR(n,max)\n  return if n>max\n  if (n % 15).zero?\n    puts 'fizzbuzz'\n  elsif (n % 3).zero?\n    puts 'fizz'\n  elsif (n % 5).zero?\n    puts 'buzz'\n  else\n    puts n.to_s\n  end\n  fizzbuzzR(n+1, max)\nend\nfizzbuzzR(MIN_NUM, MAX_NUM)\n```\n\n\n\u5168\u304f\u30eb\u30d3\u30fc\u307d\u304f\u306a\u3044\u30b3\u30fc\u30c9\u3067\u9006\u30a2\u30d4\u30fc\u30eb\u3059\u308b\u3068\u304b\n\n```ruby\nn = MIN_NUM\n\nwhile n<=MAX_NUM do\n\n  mod3 = (n % 3) == 0 ? 1 : 0\n  mod5 = (n % 5) == 0 ? 1 : 0\n\n  case 2 * mod5 + mod3\n  when 0\n    puts n\n  when 1\n    puts 'fizz'\n  when 2\n    puts 'buzz'\n  when 3\n    puts 'fizzbuzz'\n  end\n\n  n += 1\nend\n```\n\n\u3042\u3068\u306f\uff64\uff623\u306e\u500d\u6570\u306f\u5404\u6841\u306e\u6570\u5b57\u540c\u58eb\u3092\u8db3\u3057\uff64\u3053\u308c\u30921\u6841\u306b\u306a\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3057\u3066\u884c\u304f\u30683\uff646\uff649\u306e\u3044\u305a\u308c\u304b\u306b\u306a\u308b\uff63\u3068\u3044\u3046\u6027\u8cea\u3084\uff64\uff625\u306e\u500d\u6570\u306f1\u6841\u76ee\u304c5,0\u3067\u7d42\u308f\u308b\uff63\u3068\u3044\u3046\u7279\u5fb4\u3092\u5229\u7528\u3057\u3066\uff64\u9014\u65b9\u3082\u306a\u3044\u52b4\u529b\u3092\u304b\u3051\u3066\u500d\u6570\u3092\u5224\u5b9a\u3059\u308b\u65b9\u5411\u306a\u3069\uff65\uff65\uff65(\u5272\u611b)\n\n\u3068\u3044\u3046\u308f\u3051\u3067\uff64\u3082\u3063\u3068\u9762\u767d\u3044\u30a2\u30a4\u30c7\u30a2\u304c\u3042\u308c\u3070\u305c\u3072\u3054\u6559\u793a\u304f\u3060\u3055\u3044\u307e\u305b\uff61\n\n\u5f8c\u7de8\u306fDSL\u3092\u4f5c\u3063\u3066\u307f\u305f\u3044\uff61\n\n# \u53c2\u8003\n\n[\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0ruby \u7b2c\u4e8c\u7248](https://www.amazon.co.jp/%E3%83%A1%E3%82%BF%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0Ruby-%E7%AC%AC2%E7%89%88-Paolo-Perrotta/dp/4873117437)\n\n\u3053\u306e\u672c\u3092\u8aad\u307f\u306a\u304c\u3089\u69d8\u3005\u306a\u89d2\u5ea6\u304b\u3089fizzbuzz\u3092\u66f8\u3044\u3066\u307f\u308b\u3068\uff64\u8272\u3005\u306a\u6280\u8853\u304c\u8eab\u306b\u3064\u304f\u6c17\u304c\u3057\u307e\u3057\u305f\uff61\u3048\u3048\uff61\u305f\u3076\u3093\uff61\n\n", "tags": ["Ruby", "\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"]}