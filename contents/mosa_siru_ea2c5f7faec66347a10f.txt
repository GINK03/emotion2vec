{"context": " More than 1 year has passed since last update.\u8ffd\u8a18\uff1a\u3053\u306e\u6280\u8853\u3092\u4f7f\u3063\u3066\u3001\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u89e3\u6790\u3092\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u30ea\u30ea\u30fc\u30b9\u3057\u307e\u3057\u305f\u3002\nQiita\u300cTwitter API (Ruby)\u300d\u306e\u7d9a\u304d\u3067\u3059\u3002\n\u5e74\u672b\u304b\u3089\u50d5\u306f\u3001TwitterAPI\u3067\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3068\u30d5\u30a9\u30ed\u30fc\u95a2\u4fc2\u3092\u53d6\u5f97\u3057\u3001\u53cb\u4eba\u3092\u81ea\u52d5\u3067\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u5206\u985e\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u9014\u4e2d\u3067\u5f97\u3089\u308c\u305f\u77e5\u898b\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\n\u76ee\u6b21\n\nDevise\u9023\u643a \uff1a\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u30fc\u304cTwitterAPI\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3002\n\u30c7\u30fc\u30bf\u53d6\u5f97  \uff1aTwitterAPI\u304b\u3089\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u308b\u30b5\u30f3\u30d7\u30eb\u3002\u91cd\u3044\u306e\u3067\u975e\u540c\u671f\u51e6\u7406\u3002\nVisualize    \uff1a\u5f97\u305f\u30bd\u30fc\u30b7\u30e3\u30eb\u30b0\u30e9\u30d5\u3092\u53ef\u8996\u5316\u3057\u3066\u307f\u308b(\u7dba\u9e97)\n\u9ad8\u901f\u5316(DB)\u3000\uff1aredis\u3001\u305d\u308c\u306f\u5371\u967a\u306a\u307b\u3069\u306e\u30b9\u30d4\u30fc\u30c9\n\u9ad8\u901f\u5316(\u4e26\u5217\u51e6\u7406)\u3000\uff1a\u4e26\u5217\u51e6\u7406\u3067API\u30a2\u30af\u30bb\u30b9\u304c\u3053\u3093\u306a\u306b\u901f\u304f\uff01\n\n\n1.Devise\u9023\u643a\n\u8a8d\u8a3c\u7528Gem, Devise\u3068\u306e\u9023\u643a\u3067\u3059\u3002Qiita\u300cdevise\u3067facebook,twitter\u8a8d\u8a3c\u300d\u306e\u7d9a\u304d\u3002\n\n1-1.token\u3092\u53d6\u5f97\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304b\u3089token\u3092\u53d6\u5f97\u3059\u308c\u3070\u3001\u305d\u306e\u307e\u307eTwitterAPI\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4eca\u56de\u306fsession\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\nOAuth\u8a8d\u8a3c\u306e\u8aac\u660e\u306f\u7701\u7565\u3057\u307e\u3059\u304c\u3001\u3053\u308c\u306b\u3088\u308a\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u30fc\u304cTwitterAPI\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u30d5\u30a9\u30ed\u30fc\u3057\u3066\u3044\u308b\u9375\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u60c5\u5831\u306a\u3069\u3082\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002(token\u8a8d\u8a3c\u306a\u3057\u3067\u306fAPI\u5229\u7528\u304c\u5236\u9650\u3055\u308c\u307e\u3059)\n\ncontrollers/users/omniauth_callbacks_controller.rb\ndef twitter\n    @user = User.find_for_twitter_oauth(request.env[\"omniauth.auth\"], current_user)\n    session[:token] = request.env[\"omniauth.auth\"][\"credentials\"][\"token\"]\n    session[:secret] = request.env[\"omniauth.auth\"][\"credentials\"][\"secret\"]\n.\n.\n.\n\n\n\n\n1-2.client\u3092\u4f5c\u6210\n\u3053\u306e\u969b\u3001TwitterAPI\u3092\u53e9\u304f\u305f\u3081\u306eclient\u3092\u4f5c\u6210\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\n\nmodels/client.rb\nclass Client\n  def self.make(token, secret)\n    Twitter::Client.new(\n      :oauth_token => token,\n      :oauth_token_secret => secret\n    )\n  end\nend\n\n\nQiita\u300cTwitter API (Ruby)\u300d\u306e\u6700\u5f8c\u306b\u3066\u3001config/initializer/twitter.rb\u306b\u81ea\u5206\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u306etoken,token_secret\u3082\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306f\u30e6\u30fc\u30b6\u30fc\u306b\u30ed\u30b0\u30a4\u30f3\u3055\u305b\u308b\u306e\u3067\u8a18\u8ff0\u306f\u4e0d\u8981\u3067\u3059\u3002\n\nconfig/initializer/twitter.rb\nTwitter.configure do |config|\n  #\u3053\u306e2\u3064\u306e\u307f\u3067\u826f\u3044\n  config.consumer_key = \"\"\n  config.consumer_secret = \"\"\nend\n\n\n\n1-3.\u30c7\u30fc\u30bf\u53d6\u5f97\u4f8b\n\u5b9f\u969b\u306bcontroller\u304b\u3089client\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u3092\u53d6\u308b\u3068\u3053\u308d\u307e\u3067\u306e\u7c21\u5358\u306a\u4f8b\u3092\u66f8\u304d\u307e\u3059\u304c\u3001API\u30a8\u30e9\u30fc\u3092\u898b\u8d8a\u3057\u3066\u4f8b\u5916\u53d6\u5f97\u3082\u3057\u3066\u3044\u307e\u3059\u3002 \uff08\u91cd\u8981\uff01\uff09\n\ncontrollers/hoge_controller.rb\n  def get_data\n    return unless user_signed_in?\n    begin\n      @client = Client.make(session[:token], session[:secret])\n      data = @client.current_user #\u306a\u3093\u304b\u53d6\u3063\u3066\u304d\u307e\u3059\n      render :json => data\n    rescue => exc\n      render :json => exc\n    end\n  end\n\n\n\n\n2.\u30c7\u30fc\u30bf\u53d6\u5f97\n\u4f8b\u3068\u3057\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u30fc\u304b\u30891\u6b69\u5206\u306e\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3068\u30012\u6b69\u5206\u307e\u3067\u306e\u30d5\u30a9\u30ed\u30fc\u60c5\u5831(\u53cb\u4eba\u306e\u53cb\u4eba\u95a2\u4fc2)\u3092\u53d6\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\n\n2-1.\u30b3\u30fc\u30c9\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u683c\u7d0d\u3059\u308b\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u306f\u3001\u300c4.\u9ad8\u901f\u5316\u300d\u306b\u3066\u8a18\u8ff0\u3057\u307e\u3059\nTwitterAPI ver1.0\u3067\u306f350requests/hour \u3057\u304b\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4ed6\u306b\u3082API\u306f\u69d8\u3005\u306a\u30a8\u30e9\u30fc\u3092\u5410\u304f\u306e\u3067\u3001\u305d\u306e\u90fd\u5ea6\u5bfe\u51e6\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u306f\u7565\u3057\u307e\u3059\u304c\u3001\u3082\u3057whitelist\u30a2\u30ab\u30a6\u30f3\u30c8(API\u5236\u965020000\u56de)\u3092\u6301\u3063\u3066\u3044\u308b\u306a\u3089\u3001\u57fa\u672c\u306fwhitelist\u30e6\u30fc\u30b6\u30fc\u3067\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3001\u30a8\u30e9\u30fc\u304c\u5410\u304b\u308c\u305fprotected\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u306f\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u30fc\u3067\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3068\u52b9\u7387\u304c\u826f\u3044\u3067\u3059\u3002\n\n\nmode/twitter_get_data.rb\nclass TwitterGetData\n  def initialize client\n    @client = client\n    @id = client.current_user.id\n  end\n\n  def run #1\u6b69\u5206\u306e\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3068\u30012\u6b69\u5206\u306e\u30d5\u30a9\u30ed\u30fc\u60c5\u5831\u3092DB\u306b\u683c\u7d0d\u3059\u308b\u30e1\u30bd\u30c3\u30c9\n    fetchMyData\n    fetchFriendsData\n  end\n\n  def fetchMyData\n    fetchAndSaveInfo @id\n    fetchAndSaveEdges @id\n  end\n\n  def fetchFriendsData\n    friends = getEdgesFromDB @id\n    friends.each do |id|\n      fetchAndSaveInfo id\n      fetchAndSaveEdges id\n    end\n  end\n\n  def fetchAndSaveInfo id\n    info = fetchInfo(id)\n    saveInfo(id, info) if info\n    true\n  end\n\n  def fetchAndSaveEdges id\n    edges = fetchEdges(id)\n    saveEdges(id, edges) if edges and edges.size > 0\n    true\n  end\n\n  def fetchInfo id\n    id = id.to_i\n    begin\n      info = @client.user(id)\n    rescue => exc\n      case exc.class.to_s\n      when Twitter::Error::NotFound.to_s #\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u5c45\u306a\u3044\u5834\u5408\n        delNode id\n        return false\n      else\n        raise exc.to_s + id.to_s\n      end\n    end\n    info\n  end\n\n  def fetchEdges id\n    id = id.to_i\n    begin\n      my_follows = @client.friend_ids(id).ids #5000\u4eba\u307e\u3067\u3002\u305d\u308c\u4ee5\u4e0a\u53d6\u308a\u305f\u3044\u6642\u306f:next_cursor\u3092\u5f15\u6570\u306b\u3068\u308b\u5fc5\u8981\u3042\u308a\u3002\n    rescue => exc\n      case exc.class.to_s\n      when Twitter::Error::NotFound.to_s #\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u5c45\u306a\u3044\u5834\u5408\n        delNode id\n        return false\n      else\n        raise exc.to_s + id.to_s\n      end\n    end\n    my_follows\n  end\n\n  def delNode id #\u5f8c\u8ff0\u3001DB\u304b\u3089\u30c7\u30fc\u30bf\u3092\u6d88\u53bb\n  end\n  def saveInfo id, info #\u5f8c\u8ff0\u3001\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u683c\u7d0d\n  end\n  def saveEdges id, edges #\u5f8c\u8ff0\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u30d5\u30a9\u30ed\u30fc\u60c5\u5831\u3092\u683c\u7d0d\n  end\n  def getEdgesFromDB id #\u5f8c\u8ff0\u3001DB\u304b\u3089\u30d5\u30a9\u30ed\u30fc\u60c5\u5831\u3092\u53d6\u5f97\n  end\n\n\nend\n\n\n\n2-2.\u5b9f\u884c\n@client = Client.make(session[:token], session[:secret])\nTwitterGetData.new(@client).run\n\n\u3067\u30c7\u30fc\u30bf\u53ce\u96c6\u3092\u958b\u59cb\u3057\u307e\u3059\u3002(\u3081\u3061\u3083\u304f\u3061\u3083\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059)\n\n2-3.\u975e\u540c\u671f\u51e6\u7406\n\u30c7\u30fc\u30bf\u53ce\u96c6\u4e2d\u306f30\u5206\u30b5\u30fc\u30d0\u30fc\u304c\u5fdc\u7b54\u3057\u306a\u3044\u306a\u3069\u306e\u72b6\u614b\u306b\u9665\u308b\u306e\u3067\u3001delayed_job\u3084\u3001resque\u306a\u3069\u306e\u975e\u540c\u671f\u51e6\u7406\u304c\u3067\u304d\u308bgem\u3092\u4f7f\u3046\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u4eca\u56de\u306fresque\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002redis(key-value\u306aNoSQL)\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u8d77\u52d5\u3057\u3001resque worker\u3092\u7acb\u3061\u4e0a\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u8a73\u7d30\u306f\u516c\u5f0f\u30b5\u30a4\u30c8\u3067\u3002\n\nResque(Gem)\n\ngem 'resque', require: 'resque/server'\ngem 'redis'\n\n\nlib/tasks/resque.rake\nrequire 'resque/tasks'\n\ntask \"resque:setup\" => :environment\n\n\n\nconfig/initializer/resque.rb\nResque.redis = 'localhost:6379'\n\n\n\u3067\u8a2d\u5b9a\u3057\u3001\n\napp/workers/run_processor.rb\nclass RunProcessor\n  @queue = :fetch_twitter\n  def self.perform(session)\n    begin\n      p \"background running\"\n      client = Client.make(session[\"token\"], session[\"secret\"])\n      t = TwitterGetData.new client\n      t.run()\n    rescue => exc\n      p exc\n    end\n  end\nend\n\n\n\nhoge_contoroller.rb\ndef get_data\n.\n  Resque.enqueue(RunProcessor, session)\n.\nend\n\n\n\u3067\u30ad\u30e5\u30fc\u306b\u30b8\u30e7\u30d6\u3092\u6295\u3052\u307e\u3059\u3002\n\n3.Visualize\n\u53d6\u3063\u3066\u304d\u305f\u679d\u60c5\u5831\u3092\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u6574\u5f62\u3059\u308b\u3068\u3001\u30d5\u30ea\u30fc\u30bd\u30d5\u30c8gephi\u306b\u3066\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u30af\u30e9\u30b9\u30bf\u30fc\u4fc2\u6570\u306a\u3069\u3001\u8907\u96d1\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u304a\u3051\u308b\u69d8\u3005\u306a\u60c5\u5831\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nedges.txt\nTom Jerry\nChage Asuka\n.\n.\n\n\n\n\u8a73\u7d30\u306f\u7701\u304d\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u53ef\u8996\u5316\u3067\u304d\u307e\u3059\u3002\n\n* Gephi\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\n\n4.\u9ad8\u901f\u5316(DB)\n\u306f\u3058\u3081\u306fRDBMS\u306b\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001800\u4eba\u30d5\u30a9\u30ed\u30fc\u3057\u3066\u3044\u308b\u50d5\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u8d77\u70b9\u306b\u3068\u308b\u3060\u3051\u306750\u4e07\u306e\u679d\u60c5\u5831\u3068\u306a\u308a\u3001DB\u3078\u306e\u4fdd\u5b58\u304c\u30cd\u30c3\u30af\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nResque\u3067\u5c0e\u5165\u3057\u305fredis\u3092\u4f7f\u3048\u3070\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u4fdd\u5b58\u3067\u304d\u308b\u305f\u3081\u3001API\u3067\u53d6\u3063\u3066\u304d\u305f\u96a3\u63a5\u30ea\u30b9\u30c8\u3084\u30cf\u30c3\u30b7\u30e5\u304c\u305d\u306e\u307e\u307e\u5165\u308a\u3001\u9ad8\u901f\u5316\u304c\u56f3\u308c\u307e\u3059\u3002\n\nconfig/initializer/redis.rb\n$redis = Redis.new()\n$redis.ping()\n\n\n\u4ee5\u4e0b\u8ffd\u8a18\u3002\n\nmode/twitter_get_data.rb\n  def info_key str\n    str.to_s + \"_info\"\n  end\n\n  def edges_key str\n    str.to_s + \"_edges\"\n  end\n\n  def delNode id\n    $redis.del info_key(id)\n    $redis.del edges_key(id)\n  end\n\n  def saveInfo id, info\n    key = info_key(id)\n    info = info.to_hash\n    $redis.del key\n    $redis.mapped_hmset key, info\n  end\n\n  def saveEdges id, edges\n    key = edges_key(id)\n    edges = edges.to_a\n    $redis.del key\n    $redis.sadd key, edges\n  end\n\n  def getInfoFromDB id\n    $redis.hgetall info_key(id)\n  end\n\n  def getEdgesFromDB id\n    $redis.smembers edges_key(id)\n  end\n\n\n\u7528\u9014\u306b\u3088\u3063\u3066\u306fNeo4j\u3084FlockDB\u306a\u3069\u3001GraphDB\u306e\u5229\u7528\u3082\u691c\u8a0e\u306e\u4f59\u5730\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u300cGraphDB\u5fb9\u5e95\u5165\u9580\u300d\u301c\u69cb\u9020\u3084\u4ed5\u7d44\u307f\u7406\u89e3\u304b\u3089\u4f7f\u3044\u3069\u3053\u308d\u30fb\u7a2e\u3005\u306eGraphDB\u306e\u6bd4\u8f03\u307e\u3067\u5e45\u5e83\u304f\u301c\n\n\n5.\u9ad8\u901f\u5316(\u4e26\u5217\u51e6\u7406)\n\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u8a08\u6e2c\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001TwitterAPI\u306b17\u5206\u3001redis\u683c\u7d0d\u306b3.7\u79d2\u3068\u3044\u3046\u7d50\u679c\u306b\u306a\u308a\u307e\u3057\u305f\u3002API\u306e\u5f85\u3061\u6642\u9593\u304c\u9577\u305d\u3046\u306a\u306e\u3067\u3001\u4e26\u5217\u51e6\u7406\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\nParallel(Gem)\n\ngem 'parallel'\n\n\nmode/twitter_get_data.rb\n  def fetchFriendsData\n    friends = getEdgesFromDB @id\n    #friends.each do |id|\n    Parallel.each(friends, :in_threads=> friends.size * 2) do |id|\n      fetchAndSaveInfo id\n      fetchAndSaveEdges id\n    end\n  end\n\n\n\n17\u5206\u306e\u51e6\u7406\u304c33\u79d2\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u6d41\u77f3\u306b\u3073\u3063\u304f\u308a\u3067\u3059\uff01\uff01\uff01\n\n\u7d42\u308f\u308a\u306b\nbot\u4f5c\u6210\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3084\u30b5\u30fc\u30d3\u30b9\u4f5c\u6210\u3001\u8272\u3005\u3068\u904a\u3079\u308bTwitterAPI\u3002\n\u30a2\u30af\u30bb\u30b9\u306e\u9045\u3055\u3084API\u5236\u9650\u306a\u3069\u4e2d\u3005\u624b\u306e\u304b\u304b\u308b\u5b50\u3067\u3059\u304c\u3001\u305d\u306e\u5206\u304b\u308f\u3044\u304f\u601d\u3048\u3066\u304d\u307e\u3059\u3002\u3042\u306a\u305f\u3082\u304a\u8a66\u3057\u3042\u308c\u3002\n**\u8ffd\u8a18\uff1a[\u3053\u306e\u6280\u8853\u3092\u4f7f\u3063\u3066\u3001\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u89e3\u6790\u3092\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u30ea\u30ea\u30fc\u30b9\u3057\u307e\u3057\u305f\u3002](http://qiita.com/items/abb6b7969247cf747b29)**\n\n[Qiita\u300cTwitter API (Ruby)\u300d](http://qiita.com/items/8ab1093417d5976237fc)\u306e\u7d9a\u304d\u3067\u3059\u3002\n\n\u5e74\u672b\u304b\u3089\u50d5\u306f\u3001TwitterAPI\u3067\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3068\u30d5\u30a9\u30ed\u30fc\u95a2\u4fc2\u3092\u53d6\u5f97\u3057\u3001\u53cb\u4eba\u3092\u81ea\u52d5\u3067\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u5206\u985e\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u9014\u4e2d\u3067\u5f97\u3089\u308c\u305f\u77e5\u898b\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\n##\u76ee\u6b21\n\n1. Devise\u9023\u643a\t\uff1a\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u30fc\u304cTwitterAPI\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3002\n2. \u30c7\u30fc\u30bf\u53d6\u5f97\t\uff1aTwitterAPI\u304b\u3089\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u308b\u30b5\u30f3\u30d7\u30eb\u3002\u91cd\u3044\u306e\u3067\u975e\u540c\u671f\u51e6\u7406\u3002\n3. Visualize\t\uff1a\u5f97\u305f\u30bd\u30fc\u30b7\u30e3\u30eb\u30b0\u30e9\u30d5\u3092\u53ef\u8996\u5316\u3057\u3066\u307f\u308b(\u7dba\u9e97)\n4. \u9ad8\u901f\u5316(DB)\u3000\uff1aredis\u3001\u305d\u308c\u306f\u5371\u967a\u306a\u307b\u3069\u306e\u30b9\u30d4\u30fc\u30c9\n5. \u9ad8\u901f\u5316(\u4e26\u5217\u51e6\u7406)\u3000\uff1a\u4e26\u5217\u51e6\u7406\u3067API\u30a2\u30af\u30bb\u30b9\u304c\u3053\u3093\u306a\u306b\u901f\u304f\uff01\n\n\n#1.Devise\u9023\u643a\n\u8a8d\u8a3c\u7528Gem, Devise\u3068\u306e\u9023\u643a\u3067\u3059\u3002[Qiita\u300cdevise\u3067facebook,twitter\u8a8d\u8a3c\u300d](http://qiita.com/items/9f1faa509f4d3653a1b2)\u306e\u7d9a\u304d\u3002\n##1-1.token\u3092\u53d6\u5f97\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304b\u3089token\u3092\u53d6\u5f97\u3059\u308c\u3070\u3001\u305d\u306e\u307e\u307eTwitterAPI\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4eca\u56de\u306fsession\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\nOAuth\u8a8d\u8a3c\u306e\u8aac\u660e\u306f\u7701\u7565\u3057\u307e\u3059\u304c\u3001\u3053\u308c\u306b\u3088\u308a\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u30fc\u304cTwitterAPI\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u30d5\u30a9\u30ed\u30fc\u3057\u3066\u3044\u308b\u9375\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u60c5\u5831\u306a\u3069\u3082\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002(token\u8a8d\u8a3c\u306a\u3057\u3067\u306fAPI\u5229\u7528\u304c\u5236\u9650\u3055\u308c\u307e\u3059)\n\n```controllers/users/omniauth_callbacks_controller.rb \ndef twitter\n    @user = User.find_for_twitter_oauth(request.env[\"omniauth.auth\"], current_user)\n    session[:token] = request.env[\"omniauth.auth\"][\"credentials\"][\"token\"]\n    session[:secret] = request.env[\"omniauth.auth\"][\"credentials\"][\"secret\"]\n.\n.\n.\n\n```\n##1-2.client\u3092\u4f5c\u6210\n\u3053\u306e\u969b\u3001TwitterAPI\u3092\u53e9\u304f\u305f\u3081\u306eclient\u3092\u4f5c\u6210\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\n\n```models/client.rb\nclass Client\n  def self.make(token, secret)\n    Twitter::Client.new(\n      :oauth_token => token,\n      :oauth_token_secret => secret\n    )\n  end\nend\n```\n[Qiita\u300cTwitter API (Ruby)\u300d](http://qiita.com/items/8ab1093417d5976237fc)\u306e\u6700\u5f8c\u306b\u3066\u3001```config/initializer/twitter.rb```\u306b\u81ea\u5206\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u306etoken,token_secret\u3082\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306f\u30e6\u30fc\u30b6\u30fc\u306b\u30ed\u30b0\u30a4\u30f3\u3055\u305b\u308b\u306e\u3067\u8a18\u8ff0\u306f\u4e0d\u8981\u3067\u3059\u3002\n\n```config/initializer/twitter.rb\nTwitter.configure do |config|\n  #\u3053\u306e2\u3064\u306e\u307f\u3067\u826f\u3044\n  config.consumer_key = \"\"\n  config.consumer_secret = \"\"\nend\n```\n\n##1-3.\u30c7\u30fc\u30bf\u53d6\u5f97\u4f8b\n\u5b9f\u969b\u306bcontroller\u304b\u3089client\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u3092\u53d6\u308b\u3068\u3053\u308d\u307e\u3067\u306e\u7c21\u5358\u306a\u4f8b\u3092\u66f8\u304d\u307e\u3059\u304c\u3001**API\u30a8\u30e9\u30fc\u3092\u898b\u8d8a\u3057\u3066\u4f8b\u5916\u53d6\u5f97\u3082\u3057\u3066\u3044\u307e\u3059\u3002** \uff08\u91cd\u8981\uff01\uff09\n\n```controllers/hoge_controller.rb\n  def get_data\n    return unless user_signed_in?\n    begin\n      @client = Client.make(session[:token], session[:secret])\n      data = @client.current_user #\u306a\u3093\u304b\u53d6\u3063\u3066\u304d\u307e\u3059\n      render :json => data\n    rescue => exc\n      render :json => exc\n    end\n  end\n\n```\n\n#2.\u30c7\u30fc\u30bf\u53d6\u5f97\n\u4f8b\u3068\u3057\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u30fc\u304b\u30891\u6b69\u5206\u306e\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3068\u30012\u6b69\u5206\u307e\u3067\u306e\u30d5\u30a9\u30ed\u30fc\u60c5\u5831(\u53cb\u4eba\u306e\u53cb\u4eba\u95a2\u4fc2)\u3092\u53d6\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\n\n\n##2-1.\u30b3\u30fc\u30c9\n\n* \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u683c\u7d0d\u3059\u308b\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u306f\u3001\u300c4.\u9ad8\u901f\u5316\u300d\u306b\u3066\u8a18\u8ff0\u3057\u307e\u3059\n* TwitterAPI ver1.0\u3067\u306f350requests/hour \u3057\u304b\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* \u4ed6\u306b\u3082API\u306f\u69d8\u3005\u306a\u30a8\u30e9\u30fc\u3092\u5410\u304f\u306e\u3067\u3001\u305d\u306e\u90fd\u5ea6\u5bfe\u51e6\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* \u30b3\u30fc\u30c9\u306f\u7565\u3057\u307e\u3059\u304c\u3001\u3082\u3057whitelist\u30a2\u30ab\u30a6\u30f3\u30c8(API\u5236\u965020000\u56de)\u3092\u6301\u3063\u3066\u3044\u308b\u306a\u3089\u3001\u57fa\u672c\u306fwhitelist\u30e6\u30fc\u30b6\u30fc\u3067\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3001\u30a8\u30e9\u30fc\u304c\u5410\u304b\u308c\u305fprotected\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u306f\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u30fc\u3067\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3068\u52b9\u7387\u304c\u826f\u3044\u3067\u3059\u3002\n\n\n```mode/twitter_get_data.rb\nclass TwitterGetData\n  def initialize client\n    @client = client\n    @id = client.current_user.id\n  end\n\n  def run #1\u6b69\u5206\u306e\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3068\u30012\u6b69\u5206\u306e\u30d5\u30a9\u30ed\u30fc\u60c5\u5831\u3092DB\u306b\u683c\u7d0d\u3059\u308b\u30e1\u30bd\u30c3\u30c9\n    fetchMyData\n    fetchFriendsData\n  end\n\n  def fetchMyData\n    fetchAndSaveInfo @id\n    fetchAndSaveEdges @id\n  end\n\n  def fetchFriendsData\n    friends = getEdgesFromDB @id\n    friends.each do |id|\n      fetchAndSaveInfo id\n      fetchAndSaveEdges id\n    end\n  end\n  \n  def fetchAndSaveInfo id\n    info = fetchInfo(id)\n    saveInfo(id, info) if info\n    true\n  end\n\n  def fetchAndSaveEdges id\n    edges = fetchEdges(id)\n    saveEdges(id, edges) if edges and edges.size > 0\n    true\n  end\n\n  def fetchInfo id\n    id = id.to_i\n    begin\n      info = @client.user(id)\n    rescue => exc\n      case exc.class.to_s\n      when Twitter::Error::NotFound.to_s #\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u5c45\u306a\u3044\u5834\u5408\n        delNode id\n        return false\n      else\n        raise exc.to_s + id.to_s\n      end\n    end\n    info\n  end\n\n  def fetchEdges id\n    id = id.to_i\n    begin\n      my_follows = @client.friend_ids(id).ids #5000\u4eba\u307e\u3067\u3002\u305d\u308c\u4ee5\u4e0a\u53d6\u308a\u305f\u3044\u6642\u306f:next_cursor\u3092\u5f15\u6570\u306b\u3068\u308b\u5fc5\u8981\u3042\u308a\u3002\n    rescue => exc\n      case exc.class.to_s\n      when Twitter::Error::NotFound.to_s #\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u5c45\u306a\u3044\u5834\u5408\n        delNode id\n        return false\n      else\n        raise exc.to_s + id.to_s\n      end\n    end\n    my_follows\n  end\n\n  def delNode id #\u5f8c\u8ff0\u3001DB\u304b\u3089\u30c7\u30fc\u30bf\u3092\u6d88\u53bb\n  end\n  def saveInfo id, info #\u5f8c\u8ff0\u3001\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u683c\u7d0d\n  end\n  def saveEdges id, edges #\u5f8c\u8ff0\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u30d5\u30a9\u30ed\u30fc\u60c5\u5831\u3092\u683c\u7d0d\n  end\n  def getEdgesFromDB id #\u5f8c\u8ff0\u3001DB\u304b\u3089\u30d5\u30a9\u30ed\u30fc\u60c5\u5831\u3092\u53d6\u5f97\n  end\n\n\nend\n```\n\n##2-2.\u5b9f\u884c\n\n```\n@client = Client.make(session[:token], session[:secret])\nTwitterGetData.new(@client).run\n```\n\u3067\u30c7\u30fc\u30bf\u53ce\u96c6\u3092\u958b\u59cb\u3057\u307e\u3059\u3002(\u3081\u3061\u3083\u304f\u3061\u3083\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059)\n\n##2-3.\u975e\u540c\u671f\u51e6\u7406\n\u30c7\u30fc\u30bf\u53ce\u96c6\u4e2d\u306f30\u5206\u30b5\u30fc\u30d0\u30fc\u304c\u5fdc\u7b54\u3057\u306a\u3044\u306a\u3069\u306e\u72b6\u614b\u306b\u9665\u308b\u306e\u3067\u3001delayed_job\u3084\u3001resque\u306a\u3069\u306e\u975e\u540c\u671f\u51e6\u7406\u304c\u3067\u304d\u308bgem\u3092\u4f7f\u3046\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u4eca\u56de\u306fresque\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002redis(key-value\u306aNoSQL)\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u8d77\u52d5\u3057\u3001resque worker\u3092\u7acb\u3061\u4e0a\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u8a73\u7d30\u306f\u516c\u5f0f\u30b5\u30a4\u30c8\u3067\u3002\n\n* [Resque(Gem)](https://github.com/defunkt/resque)\n\n```Gemfile\ngem 'resque', require: 'resque/server'\ngem 'redis'\n```\n\n```lib/tasks/resque.rake\nrequire 'resque/tasks'\n\ntask \"resque:setup\" => :environment\n```\n```config/initializer/resque.rb\nResque.redis = 'localhost:6379'\n```\n\n\u3067\u8a2d\u5b9a\u3057\u3001\n\n```app/workers/run_processor.rb\nclass RunProcessor\n  @queue = :fetch_twitter\n  def self.perform(session)\n    begin\n      p \"background running\"\n      client = Client.make(session[\"token\"], session[\"secret\"])\n      t = TwitterGetData.new client\n      t.run()\n    rescue => exc\n      p exc\n    end\n  end\nend\n```\n\n\n```hoge_contoroller.rb\ndef get_data\n.\n  Resque.enqueue(RunProcessor, session)\n.\nend\n```\n\u3067\u30ad\u30e5\u30fc\u306b\u30b8\u30e7\u30d6\u3092\u6295\u3052\u307e\u3059\u3002\n\n#3.Visualize\n\u53d6\u3063\u3066\u304d\u305f\u679d\u60c5\u5831\u3092\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u6574\u5f62\u3059\u308b\u3068\u3001\u30d5\u30ea\u30fc\u30bd\u30d5\u30c8[gephi](http://oss.infoscience.co.jp/gephi/gephi.org/index.html)\u306b\u3066\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u30af\u30e9\u30b9\u30bf\u30fc\u4fc2\u6570\u306a\u3069\u3001\u8907\u96d1\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u304a\u3051\u308b\u69d8\u3005\u306a\u60c5\u5831\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```edges.txt\nTom Jerry\nChage Asuka\n.\n.\n\n```\n\n\u8a73\u7d30\u306f\u7701\u304d\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u53ef\u8996\u5316\u3067\u304d\u307e\u3059\u3002\n\n![unko](http://www7411uf.sakura.ne.jp:8080/socialgraph.png)\n* [Gephi\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8](http://oss.infoscience.co.jp/gephi/gephi.org/users/quick-start.1.html)\n\n\n#4.\u9ad8\u901f\u5316(DB)\n\n\u306f\u3058\u3081\u306fRDBMS\u306b\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001800\u4eba\u30d5\u30a9\u30ed\u30fc\u3057\u3066\u3044\u308b\u50d5\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u8d77\u70b9\u306b\u3068\u308b\u3060\u3051\u306750\u4e07\u306e\u679d\u60c5\u5831\u3068\u306a\u308a\u3001DB\u3078\u306e\u4fdd\u5b58\u304c\u30cd\u30c3\u30af\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nResque\u3067\u5c0e\u5165\u3057\u305fredis\u3092\u4f7f\u3048\u3070\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u4fdd\u5b58\u3067\u304d\u308b\u305f\u3081\u3001API\u3067\u53d6\u3063\u3066\u304d\u305f\u96a3\u63a5\u30ea\u30b9\u30c8\u3084\u30cf\u30c3\u30b7\u30e5\u304c\u305d\u306e\u307e\u307e\u5165\u308a\u3001\u9ad8\u901f\u5316\u304c\u56f3\u308c\u307e\u3059\u3002\n\n```config/initializer/redis.rb\n$redis = Redis.new()\n$redis.ping()\n```\n\n\u4ee5\u4e0b\u8ffd\u8a18\u3002\n\n```mode/twitter_get_data.rb\n  def info_key str\n    str.to_s + \"_info\"\n  end\n\n  def edges_key str\n    str.to_s + \"_edges\"\n  end\n\n  def delNode id\n    $redis.del info_key(id)\n    $redis.del edges_key(id)\n  end\n\n  def saveInfo id, info\n    key = info_key(id)\n    info = info.to_hash\n    $redis.del key\n    $redis.mapped_hmset key, info\n  end\n\n  def saveEdges id, edges\n    key = edges_key(id)\n    edges = edges.to_a\n    $redis.del key\n    $redis.sadd key, edges\n  end\n\n  def getInfoFromDB id\n    $redis.hgetall info_key(id)\n  end\n\n  def getEdgesFromDB id\n    $redis.smembers edges_key(id)\n  end\n```\n\n\u7528\u9014\u306b\u3088\u3063\u3066\u306fNeo4j\u3084FlockDB\u306a\u3069\u3001GraphDB\u306e\u5229\u7528\u3082\u691c\u8a0e\u306e\u4f59\u5730\u304c\u3042\u308a\u307e\u3059\u3002\n\n* [\u300cGraphDB\u5fb9\u5e95\u5165\u9580\u300d\u301c\u69cb\u9020\u3084\u4ed5\u7d44\u307f\u7406\u89e3\u304b\u3089\u4f7f\u3044\u3069\u3053\u308d\u30fb\u7a2e\u3005\u306eGraphDB\u306e\u6bd4\u8f03\u307e\u3067\u5e45\u5e83\u304f\u301c](http://www.slideshare.net/doryokujin/graphdbgraphdb)\n\n\n#5.\u9ad8\u901f\u5316(\u4e26\u5217\u51e6\u7406)\n\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u8a08\u6e2c\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001**TwitterAPI\u306b17\u5206**\u3001**redis\u683c\u7d0d\u306b3.7\u79d2**\u3068\u3044\u3046\u7d50\u679c\u306b\u306a\u308a\u307e\u3057\u305f\u3002API\u306e\u5f85\u3061\u6642\u9593\u304c\u9577\u305d\u3046\u306a\u306e\u3067\u3001\u4e26\u5217\u51e6\u7406\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n* [Parallel(Gem)](https://github.com/grosser/parallel)\n\n\n```Gemfile\ngem 'parallel'\n```\n\n```mode/twitter_get_data.rb\n  def fetchFriendsData\n    friends = getEdgesFromDB @id\n    #friends.each do |id|\n    Parallel.each(friends, :in_threads=> friends.size * 2) do |id|\n      fetchAndSaveInfo id\n      fetchAndSaveEdges id\n    end\n  end\n\n```\n\n**17\u5206\u306e\u51e6\u7406\u304c33\u79d2\u306b\u306a\u308a\u307e\u3057\u305f\u3002**\u6d41\u77f3\u306b\u3073\u3063\u304f\u308a\u3067\u3059\uff01\uff01\uff01\n\n#\u7d42\u308f\u308a\u306b\nbot\u4f5c\u6210\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3084\u30b5\u30fc\u30d3\u30b9\u4f5c\u6210\u3001\u8272\u3005\u3068\u904a\u3079\u308bTwitterAPI\u3002\n\u30a2\u30af\u30bb\u30b9\u306e\u9045\u3055\u3084API\u5236\u9650\u306a\u3069\u4e2d\u3005\u624b\u306e\u304b\u304b\u308b\u5b50\u3067\u3059\u304c\u3001\u305d\u306e\u5206\u304b\u308f\u3044\u304f\u601d\u3048\u3066\u304d\u307e\u3059\u3002\u3042\u306a\u305f\u3082\u304a\u8a66\u3057\u3042\u308c\u3002", "tags": ["Parallel", "Twitter", "Ruby", "Rails", "Redis"]}