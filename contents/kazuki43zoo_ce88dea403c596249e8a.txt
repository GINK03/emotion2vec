{"context": "\u4eca\u56de\u306f\uff12\u90e8\u69cb\u6210\u3067\u3001Spring MVC\u30d9\u30fc\u30b9\u306eWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3001Servlet 3.0\u304b\u3089\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u975e\u540c\u671f\u51e6\u7406\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u3092\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\u306a\u304a\u3001Servlet\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u306e\u4ed5\u7d44\u307f\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\nSpring Boot\u4e0a\u3067\u306e\u4f7f\u3044\u65b9\u3068\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\u306f\u3001\u6700\u5f8c\u306e\u65b9\u306b\u8a18\u8f09\u3057\u3066\u3042\u308a\u307e\u3059\u3002Spring Boot\u30e6\u30fc\u30b6\u30fc\u306f\u65b9\u306f\u3001\u3082\u3057\u304b\u3057\u305f\u3089\u5148\u306b\u305d\u3061\u3089\u3092\u307f\u305f\u65b9\u304c\u30a4\u30e1\u30fc\u30b8\u304c\u3064\u304d\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u52d5\u4f5c\u78ba\u8a8d\u74b0\u5883\n\nJava SE 8\nTomcat 8.5.5 (Servlet 3.1)\nSpring Framework 4.3.3.RELESAE\nSpring Boot 1.4.1.RELEASE\n\n\n\u524d\u63d0\u77e5\u8b58\n\nServlet\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u306e\u4ed5\u7d44\u307f\u3092\u77e5\u3063\u3066\u3044\u308b\u4eba\nSpring MVC\u3067\u753b\u9762\u9077\u79fb\u30a2\u30d7\u30ea\u3092\u4f7f\u3063\u305f\u3053\u3068\u304c\u3042\u308b\u4eba (Java Config + ViewResolver\u306e\u4ed5\u7d44\u307f\u3092\u7406\u89e3\u3057\u3066\u3044\u308b\u4eba)\n\n\nSpring MVC\u304c\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u975e\u540c\u671f\u51e6\u7406\u306e\u65b9\u5f0f\nSpring MVC\u306e\u975e\u540c\u671f\u51e6\u7406\u306f\u3001\u5927\u304d\u304f\u308f\u3051\u308b\u3068\u4ee5\u4e0b\u306e\uff12\u7a2e\u985e\u306b\u5206\u985e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u975e\u540c\u671f\u5b9f\u884c\u304c\u7d42\u4e86\u3057\u3066\u304b\u3089HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u958b\u59cb\u3059\u308b\u65b9\u5f0f\n\n\u3053\u306e\u65b9\u5f0f\u306f\u3001\u6642\u9593\u306e\u639b\u304b\u308b\u91cd\u305f\u3044\u51e6\u7406\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u304c\u7ba1\u7406\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u5206\u96e2\u3057\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u6709\u52b9\u5229\u7528\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002 \u52d8\u9055\u3044\u3057\u3084\u3059\u3044\u306e\u3067\u3059\u304c\u3001HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u975e\u540c\u671f\u5b9f\u884c\u3057\u3066\u3044\u308b\u51e6\u7406\u304c\u7d42\u4e86\u3057\u305f\u5f8c\u306b\u884c\u3046\u305f\u3081\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u304b\u3089\u898b\u308b\u3068\u540c\u671f\u51e6\u7406\u3068\u540c\u3058\u52d5\u4f5c\u306a\u308a\u307e\u3059\u3002\n\n\u975e\u540c\u671f\u5b9f\u884c\u306e\u51e6\u7406\u4e2d\u306bHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u958b\u59cb\u3059\u308b\u65b9\u5f0f\n\n\u3053\u306e\u65b9\u5f0f\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30c7\u30fc\u30bf\u3092\u9001\u4fe1(Push)\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002 \u30b5\u30fc\u30d0\u30fc\u5074\u306f\u975e\u540c\u671f\u51e6\u7406\u3092\u8d77\u52d5\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3044\u3063\u305f\u3093HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u884c\u3044\u3001\u305d\u306e\u5f8c\u3001\u975e\u540c\u671f\u51e6\u7406\u4e2d\u306e\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u30c7\u30fc\u30bf\u3092\u9001\u4fe1(Push)\u3057\u307e\u3059\u3002 \u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u5206\u5272\u30ec\u30b9\u30dd\u30f3\u30b9(\"Transfer-Encoding: chunked\")\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u672c\u6295\u7a3f\u306f\u300c\u975e\u540c\u671f\u5b9f\u884c\u304c\u7d42\u4e86\u3057\u3066\u304b\u3089HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u958b\u59cb\u3059\u308b\u65b9\u5f0f\u300d\u306e\u8aac\u660e\u306b\u306a\u308a\u307e\u3059\u3002\u300c\u975e\u540c\u671f\u5b9f\u884c\u306e\u51e6\u7406\u4e2d\u306bHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u958b\u59cb\u3059\u308b\u65b9\u5f0f\u300d\u306b\u3064\u3044\u3066\u306f\u3001\u7b2c2\u90e8\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u307e\u305a\u306fSpring MVC\u3067\u540c\u671f\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\u307e\u305a\u306f\u3001\u300cServlet\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u306b\u89e6\u308c\u3066\u307f\u308b\u300d\u3067\u5b9f\u88c5\u3057\u305fServlet\u3092\u3001Spring MVC\u306eHandler\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002Spring MVC\u3067\u7f6e\u304d\u63db\u3048\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\npackage com.example.component;\n\nimport java.time.LocalDateTime;\n\npublic class Console {\n    public static void println(Object target) {\n        System.out.println(LocalDateTime.now() + \" \" + Thread.currentThread() + \": \" + target);\n    }\n}\n\npackage com.example.component;\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;\n\nimport java.time.LocalDateTime;\nimport java.util.concurrent.TimeUnit;\n\n@Controller\n@RequestMapping(\"/standard\")\npublic class StandardController {\n\n    @RequestMapping(method = RequestMethod.GET)\n    public String get(@RequestParam(defaultValue = \"0\") long waitSec, Model model) {\n\n        Console.println(\"Start get.\");\n\n        model.addAttribute(\"acceptedTime\", LocalDateTime.now());\n\n        heavyProcessing(waitSec, model);\n\n        Console.println(\"End get.\");\n\n        return \"complete\";\n    }\n\n    private void heavyProcessing(long waitSec, Model model) {\n\n        if (waitSec == 999) {\n            throw new IllegalStateException(\"Special parameter for confirm error.\");\n        }\n\n        try {\n            TimeUnit.SECONDS.sleep(waitSec);\n        } catch (InterruptedException e) {\n            Thread.interrupted();\n        }\n\n        model.addAttribute(\"completedTime\", LocalDateTime.now());\n\n    }\n\n}\n\nJSP\u306f\u540c\u3058\u3082\u306e\u3092\u4f7f\u3044\u307e\u3059\u304c\u3001JSP\u306e\u683c\u7d0d\u5148\u3092Spring MVC\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5834\u6240\uff08/WEB-INF\uff09\u306b\u3057\u307e\u3059\u3002\n\nsrc/main/webapp/WEB-INF/complete.jsp\n<%@ page import=\"com.example.component.Console\" %>\n<% Console.println(\"Called complete.jsp\"); %>\n<% Console.println(request.getDispatcherType()); %>\n\n<html>\n<body>\n<h2>Processing is complete !</h2>\n<p>Accept timestamp is ${acceptedTime}</p>\n<p>Complete timestamp is ${completedTime}</p>\n<p><a href=\"${pageContext.request.contextPath}/\">Go to Top</a></p>\n</body>\n</html>\n\n\nJSP\u7528\u306eViewResolver\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002\npackage com.example.config;\n\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\nimport org.springframework.web.servlet.config.annotation.ViewResolverRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;\n\n@EnableWebMvc // \u6ce8\u610f\uff1aSpring Boot\u306e\u5834\u5408\u306f\u3001@EnableWebMvc\u306f\u3064\u3051\u3061\u3083\u30c0\u30e1\uff01\uff01\n@ComponentScan(\"com.example.component\")\n@Configuration\npublic class WebMvcConfig extends WebMvcConfigurerAdapter {\n    @Override\n    public void configureViewResolvers(ViewResolverRegistry registry) {\n        registry.jsp(); // JSP\u7528\u306eViewResolver\u3092\u6709\u52b9\u5316\n    }\n}\n\n\nWarning: Spring Boot\u3067WebMvcConfigurerAdapter\u3092\u5229\u7528\u3059\u308b\u969b\u306e\u6ce8\u610f\u70b9\nSpring Boot\u3067WebMvcConfigurerAdapter\u306e\u5b50\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u3001@EnableWebMvc\u306f\u7d76\u5bfe\u306b\u3064\u3051\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002@EnableWebMvc\u3092\u3064\u3051\u3066\u3057\u307e\u3046\u3068\u3001Spring Boot\u306eAutoConfigure\u306e\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u4e00\u90e8\u7121\u52b9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u308c\u306fSpring Boot\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u3082\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\ncURL\u3084\u30d6\u30e9\u30a6\u30b6\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001complete.jsp\u3067\u751f\u6210\u3055\u308c\u305fHTML\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n$ curl -D - http://localhost:8080/standard?waitSec=1\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 200 \nSet-Cookie: JSESSIONID=469B8E011EAE404434D889F2E20B1CFA;path=/;HttpOnly\nContent-Type: text/html;charset=ISO-8859-1\nContent-Language: ja-JP\nContent-Length: 204\nDate: Tue, 04 Oct 2016 15:22:48 GMT\n\n\n\n\n\n<html>\n<body>\n<h2>Processing is complete !</h2>\n<p>Accept timestamp is 2016-10-05T00:22:46.929</p>\n<p>Complete timestamp is 2016-10-05T00:22:47.933</p>\n<p><a href=\"/\">Go to Top</a></p>\n</body>\n</html>\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u4e0a\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ed\u30b0\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\uff08\u3059\u3079\u3066\u540c\u3058\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\uff09\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\n2016-10-05T00:22:46.929 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T00:22:47.933 Thread[http-nio-8080-exec-1,5,main]: End get.\n2016-10-05T00:22:48.579 Thread[http-nio-8080-exec-1,5,main]: Called complete.jsp\n2016-10-05T00:22:48.579 Thread[http-nio-8080-exec-1,5,main]: FORWARD\n\n\n\nSpring MVC\u3067\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\nStandardController\u306e\u5b9f\u88c5\u3092\u3001Spring MVC\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3063\u3066\u975e\u540c\u671f\u5b9f\u88c5\u306b\u3057\u3066\u307f\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u975e\u540c\u671f\u7528\u306b\u5225\u306eController\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u307e\u305a\u306f\u3001\u4f1d\u7d71\u7684\u306a\u5b9f\u88c5\u65b9\u6cd5\u3067\u3042\u308bjava.util.concurrent.Callable\u3092\u4f7f\u7528\u3057\u3066\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\npackage com.example.component;\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;\n\nimport java.time.LocalDateTime;\nimport java.util.concurrent.Callable;\nimport java.util.concurrent.TimeUnit;\n\n@Controller\n@RequestMapping(\"/async\")\npublic class AsyncController {\n\n    @RequestMapping(method = RequestMethod.GET)\n    public Callable<String> get(@RequestParam(defaultValue = \"0\") long waitSec, Model model) {\n\n        Console.println(\"Start get.\");\n\n        model.addAttribute(\"acceptedTime\", LocalDateTime.now());\n\n        // Callable\u306ecall\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\n        // Callable\u306f\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306a\u306e\u3067Java SE 8+\u306a\u3089\u30e9\u30e0\u30c0\u5f0f\u304c\u4f7f\u3048\u307e\u3059\u3002\n        Callable<String> asyncProcessing = () -> {\n\n            Console.println(\"Start Async processing.\");\n\n            heavyProcessing(waitSec, model);\n\n            Console.println(\"End Async processing.\");\n\n            return \"complete\";\n        };\n\n        Console.println(\"End get.\");\n\n        return asyncProcessing;\n    }\n\n    private void heavyProcessing(long waitSec, Model model) {\n\n        if (waitSec == 999) {\n            throw new IllegalStateException(\"Special parameter for confirm error.\");\n        }\n\n        try {\n            TimeUnit.SECONDS.sleep(waitSec);\n        } catch (InterruptedException e) {\n            Thread.interrupted();\n        }\n\n        model.addAttribute(\"completedTime\", LocalDateTime.now());\n\n    }\n\n    @ExceptionHandler(Exception.class)\n    public String handleException() {\n        return \"error\";\n    }\n\n}\n\nDispatcherServlet\u3068\u5404\u7a2eFilter\u3067\u975e\u540c\u671f\u30ea\u30af\u30a8\u30b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\nsrc/main/webapp/WEB-INF/web.xml\n<servlet>\n    <servlet-name>appServlet</servlet-name>\n    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n    <!-- ... -->\n    <async-supported>true</async-supported> <!-- \u975e\u540c\u671f\u3092\u30b5\u30dd\u30fc\u30c8 -->\n</servlet>\n\n\nFilter\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001<filter>\u30bf\u30b0\u306e\u4e2d\u306b\u3082<async-supported>true</async-supported>\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nsrc/main/webapp/WEB-INF/web.xml\n<filter>\n    <filter-name>CharacterEncodingFilter</filter-name>\n    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n    <async-supported>true</async-supported>\n    <!-- ... -->\n</filter>\n\n\n\u306a\u304a\u3001Spring MVC\u306e\u975e\u540c\u671f\u6a5f\u80fd\u306f\u3001Java Config\u306b@EnableWebMvc\u3092\u4ed8\u4e0e\u3059\u308b\u3068\u81ea\u52d5\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fbXML\u3067Bean\u5b9a\u7fa9\u3092\u884c\u3046\u5834\u5408\u306f\u3001<mvc:async-support>\u30bf\u30b0\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u672c\u6295\u7a3f\u3067\u306fJava Config\u30d9\u30fc\u30b9\u3067\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\ncURL\u3084\u30d6\u30e9\u30a6\u30b6\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001complete.jsp\u3067\u751f\u6210\u3055\u308c\u305fHTML\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n$ curl -D - http://localhost:8080/async?waitSec=1\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 200 \nSet-Cookie: JSESSIONID=74481230450E5A2A4CB6A376408A8F21;path=/;HttpOnly\nContent-Type: text/html;charset=ISO-8859-1\nContent-Language: ja-JP\nContent-Length: 204\nDate: Tue, 04 Oct 2016 15:28:25 GMT\n\n\n\n\n\n<html>\n<body>\n<h2>Processing is complete !</h2>\n<p>Accept timestamp is 2016-10-05T00:28:24.161</p>\n<p>Complete timestamp is 2016-10-05T00:28:25.172</p>\n<p><a href=\"/\">Go to Top</a></p>\n</body>\n</html>\n\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb(\u30b5\u30fc\u30d0\u30fc)\n2016-10-05T00:28:24.161 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T00:28:24.163 Thread[http-nio-8080-exec-1,5,main]: End get.\n2016-10-05T00:28:24.168 Thread[MvcAsync1,5,main]: Start Async processing.\n2016-10-05T00:28:25.172 Thread[MvcAsync1,5,main]: End Async processing.\n2016-10-05T00:28:25.663 Thread[http-nio-8080-exec-2,5,main]: Called complete.jsp\n2016-10-05T00:28:25.663 Thread[http-nio-8080-exec-2,5,main]: FORWARD\n\n\n\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u30ed\u30b0\u3092\u307f\u308b\u3068\u3001\u975e\u540c\u671f\u51e6\u7406\u306e\u90e8\u5206\u304cTomcat\u306e\u30b9\u30ec\u30c3\u30c9(http-nio-8080-exec-xx)\u3067\u306f\u306a\u304f\u3001Spring MVC\u304c\u7528\u610f\u3057\u305f\u30b9\u30ec\u30c3\u30c9(MvcAsync1)\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u5229\u7528\u3059\u308b\nSpring MVC\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3067\u306f\u3001\u6b8b\u5ff5\u306a\u304c\u3089\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u306f\u4f7f\u7528\u305b\u305a\u3001\u975e\u540c\u671f\u5b9f\u884c\u306e\u4f9d\u983c\u306e\u5ea6\u306b\u65b0\u3057\u304f\u30b9\u30ec\u30c3\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n@EnableWebMvc // \u6ce8\u610f\uff1aSpring Boot\u306e\u5834\u5408\u306f\u3001@EnableWebMvc\u306f\u3064\u3051\u3061\u3083\u30c0\u30e1\uff01\uff01\n@ComponentScan(\"com.example.component\")\n@Configuration\npublic class WebMvcConfig extends WebMvcConfigurerAdapter {\n    // ...\n    @Override\n    public void configureAsyncSupport(AsyncSupportConfigurer configurer) {\n        configurer.setTaskExecutor(mvcAsyncExecutor()); // \u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\n    }\n\n    // ThreadPoolTaskExecutor\u306fDI\u30b3\u30f3\u30c6\u30ca\u4e0a\u3067\u7ba1\u7406\u3059\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\n    // Spring\u306eDI\u30b3\u30f3\u30c6\u30ca\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306b\u5408\u308f\u305b\u3066\u3001\u9069\u5207\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067initialize\u3068shutdown\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\n    @Bean\n    public AsyncTaskExecutor mvcAsyncExecutor() {\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n        executor.setMaxPoolSize(10);\n        return executor;\n    }\n}\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb(\u30b5\u30fc\u30d0\u30fc)\n2016-10-05T00:35:20.574 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T00:35:20.576 Thread[http-nio-8080-exec-1,5,main]: End get.\n2016-10-05T00:35:20.580 Thread[mvcAsyncExecutor-1,5,main]: Start Async processing.\n2016-10-05T00:35:21.583 Thread[mvcAsyncExecutor-1,5,main]: End Async processing.\n2016-10-05T00:35:22.065 Thread[http-nio-8080-exec-2,5,main]: Called complete.jsp\n2016-10-05T00:35:22.065 Thread[http-nio-8080-exec-2,5,main]: FORWARD\n\n\n\u4fee\u6b63\u524d\u306f\u3001Spring MVC\u304c\u7528\u610f\u3057\u305f\u30b9\u30ec\u30c3\u30c9(MvcAsync1)\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u305f\u90e8\u5206\u304c\u3001\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u304b\u3089\u53d6\u5f97\u3057\u305f\u30b9\u30ec\u30c3\u30c9(mvcAsyncExecutor-1)\u306b\u306a\u308a\u307e\u3057\u305f\u3002 \u539f\u5247\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3001\u5b89\u5168\u304b\u3064\u52b9\u7387\u7684\u306b\u30b9\u30ec\u30c3\u30c9\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u5fc3\u304c\u3051\u307e\u3057\u3087\u3046\u3002\n\nSpring MVC\u306e\u975e\u540c\u671f\u51e6\u7406\u3092\u7d10\u89e3\u304f\n\u3068\u308a\u3042\u3048\u305a\u3001Servlet\u6a19\u6e96\u306e\u6a5f\u80fd\u3068\u9023\u643a\u3057\u305fSpring MVC\u306e\u975e\u540c\u671f\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3055\u3070\u304f\u3053\u3068\u306f\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u3069\u306e\u3088\u3046\u306bSpring MVC\u304c\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u306e\u304b\u304c\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3067\u3059\u3002\u300cServlet\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u306b\u89e6\u308c\u3066\u307f\u308b\u300d\u3067\u7d39\u4ecb\u3057\u307e\u3057\u305f\u304c\u3001\u975e\u540c\u671f\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u305f\u3053\u3068\u3092\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306b\u901a\u77e5\u3059\u308b\u305f\u3081\u306b\u306f\u3001AsyncContext#dispatch\u304bAsyncContext#complete\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3067\u3082\u3001\u5b9f\u88c5\u3057\u305fController\u30af\u30e9\u30b9\u3067\u306f\u3044\u3063\u3055\u3044\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8API\u3092\u610f\u8b58\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3053\u3053\u304b\u3089\u306f\u3001Spring MVC\u304c\u3069\u306e\u3088\u3046\u306b\u3057\u3066Servlet\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u3068\u9023\u643a\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\u3056\u3063\u304f\u308a\u7d75\u306b\u3059\u308b\u3053\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\u5b9f\u969b\u306b\u306f\u3082\u3063\u3068\u591a\u304f\u306e\u30af\u30e9\u30b9\u304c\u767b\u5834\u3057\u307e\u3059\u304c\u3001\u30b7\u30f3\u30d7\u30eb\u306b\u3059\u308b\u305f\u3081\u306b\u304b\u306a\u308a\u7c21\u7565\u5316\u3057\u3066\u3044\u307e\u3059\u3002\uff08\u305d\u308c\u3067\u3082\u3061\u3087\u3063\u3068\u8907\u96d1\u3067\u3059\u306d\u30fb\u30fb\u30fb\uff09\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u5b8c\u4e86\u5f8c\u306e\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u5148\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306e\u30d1\u30b9\u3068\u540c\u3058\u306b\u306a\u308b\u3068\u3044\u3046\u70b9\u3067\u3057\u3087\u3046\u3002\u3064\u307e\u308a\u3001\u518d\u5ea6Spring MVC(DispatcherServlet)\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3046\u3051\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u5185\u5bb9\u306b\u5bfe\u5fdc\u3059\u308bHandler\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u7d4c\u8def\u306b\u5165\u3063\u3066\u3044\u304f\u308f\u3051\u3067\u3059\u3002\u305d\u308c\u3058\u3083\u301cHandler\u30e1\u30bd\u30c3\u30c9\u304c\uff12\u56de\u547c\u3070\u308c\u3061\u3083\u3046\u306e\uff01\uff1f\u3068\u601d\u3063\u305f\u65b9\u3082\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u30fb\u30fb\u30fb\u3082\u3061\u308d\u3093\u5927\u4e08\u592b\u3067\u3059\uff01\uff01Spring MVC\u304c\u3061\u3083\u3093\u3068\u5236\u5fa1\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\n\u7d75\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u975e\u540c\u671f\u51e6\u7406\u5b8c\u4e86\u5f8c\u306b\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u3055\u308c\u308b\u3068\u3001Spring MVC\u306e\u5185\u90e8\u3067\u306fConcurrentResultHandlerMethod\u3068\u3044\u3046\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3088\u3046\u306a\u4ed5\u639b\u3051\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002ConcurrentResultHandlerMethod\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u306e\u7d50\u679c(View\u540d\u306a\u3069)\u3092\u8fd4\u5374\u3059\u308b\u304b\u3001\u307e\u305f\u306f\u975e\u540c\u671f\u51e6\u7406\u4e2d\u306b\u767a\u751f\u3057\u305f\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3057\u307e\u3059\u3002\u3069\u3061\u3089\u306b\u305b\u3088\u3001\u4ee5\u964d\u306e\u51e6\u7406\u306f\u3001\u901a\u5e38\u306eSpring MVC\u306e\u6319\u52d5\u3068\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u30fb\u30fb\u30fb\n\nView\u540d(\u753b\u9762\u9077\u79fb\u578b\u30a2\u30d7\u30ea)\u306a\u3089\u3001ViewResolver\u306b\u3088\u3063\u3066\u89e3\u6c7a\u3055\u308c\u305fView\u304c\u751f\u6210\u3057\u305f\u30c7\u30fc\u30bf\n\n@ResponseBody + JavaBean(RESTful\u306a\u30a2\u30d7\u30ea)\u306a\u3089\u3001HttpMessageConverter\u304c\u751f\u6210\u3057\u305f\u30c7\u30fc\u30bf\n\u4f8b\u5916\u306a\u3089\u3001ExceptionResolver\u3084\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306e\u30a8\u30e9\u30fc\u30da\u30fc\u30b8\u6a5f\u80fd\u306b\u3088\u3063\u3066\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3055\u308c\u3066\u751f\u6210\u3057\u305f\u30c7\u30fc\u30bf\n\n\u304c\u30ec\u30b9\u30dd\u30f3\u30b9\u3055\u308c\u307e\u3059\u3002\n\nNote: WebAsyncTask\norg.springframework.web.context.request.async.WebAsyncTask\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001Callable\u4f7f\u7528\u6642\u306e\u975e\u540c\u671f\u51e6\u7406\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u52d5\u4f5c(\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3084AsyncTaskExecutor)\u3092\u500b\u5225\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u672c\u6295\u7a3f\u3067\u306f\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306e\u3068\u3053\u308d\u3067\u4f7f\u3044\u65b9\u3092\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nSpring MVC\u7ba1\u7406\u5916\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u4f7f\u3046\nSpring MVC\u304c\u7ba1\u7406\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u4ee5\u5916\u3067\u975e\u540c\u671f\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u7d75\u306e\u4e2d\u3067\u306f\u3001org.springframework.web.context.request.async.DeferredResult\u3092Controller\u304b\u3089\u8fd4\u5374\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u306e\uff12\u3064\u306e\u30af\u30e9\u30b9\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\norg.springframework.util.concurrent.ListenableFuture\n\njava.util.concurrent.CompletableFuture (Java SE 8+)\n\nListenableFuture\u3068CompletableFuture\u3092Controller\u304b\u3089\u8fd4\u5374\u3059\u308b\u3068\u3001Spring MVC\u5074\u3067DeferredResult\u3092\u751f\u6210\u3057\u3001ListenableFuture\u3068CompletableFuture\u3068\u9023\u643a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n@Async\u306e\u5229\u7528\nSpring MVC\u306e\u975e\u540c\u671f\u51e6\u7406\u3068\u306f\u76f4\u63a5\u95a2\u9023\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001Spring Framework\u306f\u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u975e\u540c\u671f(\u5225\u30b9\u30ec\u30c3\u30c9)\u3067\u5b9f\u884c\u3059\u308b\u4ed5\u7d44\u307f\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u4ed5\u7d44\u307f\u3092\u6709\u52b9\u306b\u3059\u308b\u305f\u3081\u306eBean\u5b9a\u7fa9\u3092\u884c\u3063\u305f\u4e0a\u3067\u3001\u975e\u540c\u671f\u3067\u5b9f\u884c\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u306b@org.springframework.scheduling.annotation.Async\u3092\u4ed8\u4e0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u30af\u30e9\u30b9\u30ec\u30d9\u30eb\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3059\u308b\u3068\u3001\u3059\u3079\u3066\u306epublic\u30e1\u30bd\u30c3\u30c9\u304c\u975e\u540c\u671f\u5b9f\u884c\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001Spring MVC\u7ba1\u7406\u5916\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u969b\u306b\u3001\u975e\u5e38\u306b\u4fbf\u5229\u306a\u4ed5\u7d44\u307f\u3067\u3059\u3002\n\n\u30e1\u30bd\u30c3\u30c9\u30ec\u30d9\u30eb\u306b\u6307\u5b9a\n@Async // \u5225\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u308b\npublic void save(InputStream in, File file) {\n    // ...\n}\n\n\n\n\u30af\u30e9\u30b9\u30ec\u30d9\u30eb\u306b\u6307\u5b9a\n@Async // \u3059\u3079\u3066\u306epublic\u30e1\u30bd\u30c3\u30c9\u304c\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u308b\n@Service\npublic class AsyncService {\n    // ...    \n}\n\n\n\nNote: Executor\u306e\u6307\u5b9a\n\u5225\u30b9\u30ec\u30c3\u30c9\u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u969b\u306b\u5229\u7528\u3059\u308bTaskExecutor\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n@Async(\"registrationTaskExecutor\") // \u4f7f\u7528\u3057\u305f\u3044TaskExecutor\u306eBean\u540d\u3092\u6307\u5b9a\u3059\u308b\npublic void save(InputStream in, File file) {\n    // ...\n} \n\n\n@Async\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306aBean\u5b9a\u7fa9\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002\nSpring Framework\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3067\u306f\u3001\u6b8b\u5ff5\u306a\u304c\u3089\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u306f\u4f7f\u7528\u305b\u305a\u3001\u975e\u540c\u671f\u5b9f\u884c\u306e\u4f9d\u983c\u306e\u5ea6\u306b\u65b0\u3057\u304f\u30b9\u30ec\u30c3\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3059\u3002\u8981\u4ef6\u306b\u5fdc\u3058\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u539f\u5247\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3001\u5b89\u5168\u304b\u3064\u52b9\u7387\u7684\u306b\u30b9\u30ec\u30c3\u30c9\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u5fc3\u304c\u3051\u307e\u3057\u3087\u3046\u3002\npackage com.example.config;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.task.AsyncTaskExecutor;\nimport org.springframework.scheduling.annotation.EnableAsync;\nimport org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n\nimport java.util.concurrent.Executor;\n\n@Configuration\n@EnableAsync // @Async\u306e\u6709\u52b9\u5316\npublic class AsyncConfig {\n    @Bean\n    public AsyncTaskExecutor taskExecutor() { // \u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\"taskExecutor\"\u3068\u3044\u3046\u540d\u524d\u306eBean\u304c\u5229\u7528\u3055\u308c\u308b\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n        executor.setMaxPoolSize(10);\n        return executor;\n    }\n}\n\n\u306a\u304a\u3001@Async\u306e\u8a2d\u5b9a\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3068\u3057\u3066org.springframework.scheduling.annotation.AsyncConfigurerSupport\u3068\u3044\u3046\u30af\u30e9\u30b9\u3082\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002AsyncConfigurerSupport\u306fAsyncConfigurer\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u304a\u308a\u3001AsyncConfigurer\u306f\u4ee5\u4e0b\u306e2\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\npublic interface AsyncConfigurer {\n    // @Async\u3067\u5229\u7528\u3059\u308bTaskExecutor\u3092\u8fd4\u5374\u3059\u308b\n    // null\u3092\u8fd4\u5374\u3059\u308b\u3068SimpleAsyncTaskExecutor\u304c\u5229\u7528\u3055\u308c\u308b\n    Executor getAsyncExecutor();\n\n    // @Async\u304c\u9069\u7528\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u6642\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u884c\u3046AsyncUncaughtExceptionHandler\u3092\u8fd4\u5374\u3059\u308b\n    // null\u3092\u8fd4\u5374\u3059\u308b\u3068SimpleAsyncUncaughtExceptionHandler\u304c\u5229\u7528\u3055\u308c\u308b\n    AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler();\n}\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5229\u7528\u3055\u308c\u308bSimpleAsyncUncaughtExceptionHandler\u306f\u3001ERROR\u30ec\u30d9\u30eb\u306e\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u3060\u3051\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nDeferredResult\u306e\u5229\u7528\nDeferredResult\u306f\u3001Spring\u72ec\u81ea\u306e\u30af\u30e9\u30b9\u3067\u3001\u975e\u540c\u671f\u51e6\u7406\u3067\u884c\u3063\u305f\u7d50\u679c\u3092Spring MVC\u5074\u306b\u901a\u77e5\u3059\u308b\u5f79\u5272\u3092\u62c5\u3044\u307e\u3059\u3002DeferredResult\u3092\u76f4\u63a5\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9f\u88c5\u306b\u306a\u308a\u307e\u3059\u3002\n@Controller\n@RequestMapping(\"/async\")\npublic class AsyncController {\n\n    // ...\n\n    @RequestMapping(path = \"deferred\", method = RequestMethod.GET)\n    public DeferredResult<String> getReferred(@RequestParam(defaultValue = \"0\") long waitSec, Model model) {\n\n        Console.println(\"Start get.\");\n\n        model.addAttribute(\"acceptedTime\", LocalDateTime.now());\n\n        // \u975e\u540c\u671f\u51e6\u7406\u3092\u547c\u3073\u51fa\u3059\u3002DeferredResult\u3092\u975e\u540c\u671f\u51e6\u7406\u306b\u5f15\u304d\u6e21\u3059\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3002\n        DeferredResult<String> deferredResult = new DeferredResult<>();\n        asyncHelper.asyncProcessing(model, waitSec, deferredResult);\n\n        Console.println(\"End get.\");\n\n        return deferredResult; // DeferredResult\u3092\u8fd4\u5374\u3059\u308b\n    }\n\n}\n\n\u4ee5\u4e0b\u304c\u975e\u540c\u671f\u51e6\u7406\u306e\u5b9f\u88c5\u306b\u306a\u308a\u307e\u3059\u3002\npackage com.example.component;\n\nimport org.springframework.scheduling.annotation.Async;\nimport org.springframework.stereotype.Component;\nimport org.springframework.ui.Model;\nimport org.springframework.web.context.request.async.DeferredResult;\n\nimport java.time.LocalDateTime;\nimport java.util.concurrent.TimeUnit;\n\n@Component\npublic class AsyncHelper {\n\n    @Async // \u975e\u540c\u671f\u5b9f\u884c\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306b@Async\u3092\u4ed8\u4e0e\u3059\u308b\n    public void asyncProcessing(Model model, long waitSec, DeferredResult<String> deferredResult) {\n        Console.println(\"Start Async processing.\");\n\n        if (waitSec == 999) {\n            // \u4f8b\u5916\u306f\u30b9\u30ed\u30fc\u3067\u306f\u306a\u304f\u3001setErrorResult\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\n            // throw new IllegalStateException(\"Special parameter for confirm error.\");\n            deferredResult.setErrorResult(new IllegalStateException(\"Special parameter for confirm error.\"));\n            return;\n        }\n\n        sleep(waitSec);\n\n        model.addAttribute(\"completedTime\", LocalDateTime.now());\n\n        deferredResult.setResult(\"complete\"); // \u51e6\u7406\u7d50\u679c\u306fDeferredResult#setResult\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u3002\n\n        Console.println(\"End Async processing.\");\n    }\n\n    private void sleep(long timeout) {\n        try {\n            TimeUnit.SECONDS.sleep(timeout);\n        } catch (InterruptedException e) {\n            Thread.interrupted();\n        }\n    }\n}\n\ncURL\u3084\u30d6\u30e9\u30a6\u30b6\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001complete.jsp\u3067\u751f\u6210\u3055\u308c\u305fHTML\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n$ curl -D - http://localhost:8080/async/deferred?waitSec=1\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 200 \nSet-Cookie: JSESSIONID=4E8812A3288081EB6A88EA9E38E9EBC4;path=/;HttpOnly\nContent-Type: text/html;charset=ISO-8859-1\nContent-Language: ja-JP\nContent-Length: 204\nDate: Tue, 04 Oct 2016 15:41:48 GMT\n\n\n\n\n\n<html>\n<body>\n<h2>Processing is complete !</h2>\n<p>Accept timestamp is 2016-10-05T00:41:46.672</p>\n<p>Complete timestamp is 2016-10-05T00:41:47.685</p>\n<p><a href=\"/\">Go to Top</a></p>\n</body>\n</html>\n\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb(\u30b5\u30fc\u30d0\u30fc)\n2016-10-05T00:41:46.672 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T00:41:46.675 Thread[http-nio-8080-exec-1,5,main]: End get.\n2016-10-05T00:41:46.682 Thread[taskExecutor-1,5,main]: Start Async processing.\n2016-10-05T00:41:47.688 Thread[taskExecutor-1,5,main]: End Async processing.\n2016-10-05T00:41:48.193 Thread[http-nio-8080-exec-2,5,main]: Called complete.jsp\n2016-10-05T00:41:48.193 Thread[http-nio-8080-exec-2,5,main]: FORWARD\n\n\nCallable\u3068\u540c\u69d8\u306b\u3001\u975e\u540c\u671f\u5b9f\u884c\u3055\u308c\u305f\u7d50\u679c\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u5374\u3067\u304d\u307e\u3057\u305f\u3002\n\u6700\u521d\u306b\u7d39\u4ecb\u3057\u3066\u304a\u3044\u3066\u306a\u3093\u3067\u3059\u304c\u30fb\u30fb\u30fb\u500b\u4eba\u7684\u306b\u306f\u306a\u3093\u3068\u306a\u304f\u3053\u306e\u65b9\u6cd5\u306f\u597d\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093  \nSpring\u5c02\u7528\u306e\u30af\u30e9\u30b9\u306b\u5f37\u304f\u4f9d\u5b58\u3057\u3066\u304a\u308a\u3001\u51e6\u7406\u7d50\u679c\u3092setResult\u3084setErrorResult\u3068\u3044\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u660e\u793a\u7684\u306b\u547c\u3073\u51fa\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3082\u306a\u3093\u3068\u306a\u304f\u30a4\u30de\u30a4\u30c1\u30fb\u30fb\u30fb\u304b\u306a\u301c(\u7279\u306bsetErrorResult\u306e\u65b9\u306f\u304b\u306a\u308a\u5fae\u5999\u30fb\u30fb\u30fb)\u3002\u3068\u306f\u3044\u3048\u3001\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3068\u3001Spring MVC\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3092\u7c21\u5358\u306b(\u30a2\u30c9\u30db\u30c3\u30af\uff1f\u306b)\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u308b\u306e\u3067\u3001\u4f7f\u3044\u305f\u304f\u306a\u308b\u3053\u3068\u306f\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nListenableFuture\u306e\u5229\u7528\nSpring\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308bJava SE\u6a19\u6e96\u306ejava.util.concurrent.Future\u306e\u30b5\u30d6\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u3059\u3002\u3053\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u4f7f\u3046\u3068\u3001\u975e\u540c\u671f\u51e6\u7406\u304c\u6210\u529f\u3057\u305f\u6642\u3068\u5931\u6557\u3057\u305f\u6642\u306b\u4efb\u610f\u306e\u51e6\u7406\u3092\u7d44\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Spring\u63d0\u4f9b\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306a\u306e\u3067Spring\u3068\u306e\u7d50\u5408\u5ea6\u306f\u6b8b\u308b\u3082\u306e\u306e\u3001\u30d9\u30fc\u30b9\u3068\u306a\u308b\u8003\u3048\u65b9\u304cJava SE\u6a19\u6e96\u306eFuture\u306a\u306e\u3067\u3001DeferredResult\u306b\u6bd4\u3079\u308b\u3068\u72ec\u81ea\u8272\u306f\u8584\u304f\u306a\u308a\u307e\u3059\u3002\n@Controller\n@RequestMapping(\"/async\")\npublic class AsyncController {\n\n    // ...\n\n    @RequestMapping(path = \"listenable\", method = RequestMethod.GET)\n    public ListenableFuture<String> getListenable(@RequestParam(defaultValue = \"0\") long waitSec, Model model) {\n\n        Console.println(\"Start get.\");\n\n        model.addAttribute(\"acceptedTime\", LocalDateTime.now());\n\n        ListenableFuture<String> future = asyncHelper.asyncProcessingForListenable(model, waitSec);\n        future.addCallback(\n                Console::println, // \u6b63\u5e38\u7d42\u4e86\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\n                Console::println  // \u4f8b\u5916\u767a\u751f\u6642\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\n        );\n\n        Console.println(\"End get.\");\n        return future;\n    }\n}\n\n@Component\npublic class AsyncHelper {\n    // ...\n    @Async // \u975e\u540c\u671f\u5b9f\u884c\u5bfe\u8c61\u306e\u30e1\u30bd\u30c3\u30c9\n    public ListenableFuture<String> asyncProcessingForListenable(Model model, long waitSec) {\n        Console.println(\"Start Async processing.\");\n        if (waitSec == 999) {\n            throw new IllegalStateException(\"Special parameter for confirm error.\");\n        }\n\n        sleep(waitSec);\n\n        model.addAttribute(\"completedTime\", LocalDateTime.now());\n\n        Console.println(\"End Async processing.\");\n\n        return new AsyncResult<>(\"complete\");\n    }\n    // ...\n}\n\ncURL\u3084\u30d6\u30e9\u30a6\u30b6\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3001\u30b5\u30fc\u30d0\u5074\u306e\u52d5\u4f5c\u3092\u30ed\u30b0\u3092\u307f\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ curl -D - http://localhost:8080/async/listenable?waitSec=1\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb(\u30b5\u30fc\u30d0\u30fc)\n2016-10-05T00:46:19.949 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T00:46:19.954 Thread[http-nio-8080-exec-1,5,main]: End get.\n2016-10-05T00:46:19.959 Thread[taskExecutor-1,5,main]: Start Async processing.\n2016-10-05T00:46:20.964 Thread[taskExecutor-1,5,main]: End Async processing.\n2016-10-05T00:46:20.965 Thread[taskExecutor-1,5,main]: complete    \u2190 \u975e\u540c\u671f\u51e6\u7406\u6210\u529f\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u3067\u51fa\u529b\u3057\u305f\u30ed\u30b0\n2016-10-05T00:46:21.459 Thread[http-nio-8080-exec-2,5,main]: Called complete.jsp\n2016-10-05T00:46:21.459 Thread[http-nio-8080-exec-2,5,main]: FORWARD\n\n\n\u30ed\u30b0\u3092\u307f\u308b\u3068\u3001\u975e\u540c\u671f\u51e6\u7406\u6210\u529f\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\nCompletableFuture\u306e\u5229\u7528\nCompletableFuture\u306fJava SE 8\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u30af\u30e9\u30b9\u3067\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001Spring\u306b\u4f9d\u5b58\u3057\u306a\u3044\u5b9f\u88c5\u306b\u3059\u308b\u3053\u3068\u3067\u304d\u307e\u3059\u3002\uff08\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u5225\u306e\u7b87\u6240\u3067Spring\u306b\u4f9d\u5b58\u3057\u3061\u3083\u3063\u3066\u3044\u307e\u3059\u304c  \u3001\u7406\u8ad6\u7684\u306b\u306f\u5b8c\u5168\u306b\u975e\u4f9d\u5b58\u306b\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\uff01\uff01\uff09 \u500b\u4eba\u7684\u306b\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3092\u500b\u5225\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u306a\u3089\u3001CompletableFuture\u3092\u5229\u7528\u3059\u308b\u306e\u304c\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n@Controller\n@RequestMapping(\"/async\")\npublic class AsyncController {\n\n    // ...\n\n    @RequestMapping(path = \"completable\", method = RequestMethod.GET)\n    public CompletableFuture<String> getCompletable(@RequestParam(defaultValue = \"0\") long waitSec, Model model) {\n\n        Console.println(\"Start get.\");\n\n        model.addAttribute(\"acceptedTime\", LocalDateTime.now());\n\n        CompletableFuture<String> future = asyncHelper.asyncProcessingForCompletable(model, waitSec);\n        future.thenAccept(Console::println); // \u6b63\u5e38\u7d42\u4e86\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\n\n        Console.println(\"End get.\");\n        return future;\n    }\n}\n\n@Component\npublic class AsyncHelper {\n    // ...\n    @Async // \u975e\u540c\u671f\u5b9f\u884c\u5bfe\u8c61\u306e\u30e1\u30bd\u30c3\u30c9\n    public CompletableFuture<String> asyncProcessingForCompletable(Model model, long waitSec) {\n        Console.println(\"Start Async processing.\");\n        if (waitSec == 999) {\n            throw new IllegalStateException(\"Special parameter for confirm error.\");\n        }\n\n        sleep(waitSec);\n\n        model.addAttribute(\"completedTime\", LocalDateTime.now());\n\n        Console.println(\"End Async processing.\");\n\n        return CompletableFuture.completedFuture(\"complete\");\n    }\n    // ...\n}\n\ncURL\u3084\u30d6\u30e9\u30a6\u30b6\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3001\u30b5\u30fc\u30d0\u5074\u306e\u52d5\u4f5c\u3092\u30ed\u30b0\u3092\u307f\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ curl -D - http://localhost:8080/async/completable?waitSec=1\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb(\u30b5\u30fc\u30d0\u30fc)\n2016-10-05T00:49:58.061 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T00:49:58.070 Thread[http-nio-8080-exec-1,5,main]: End get.\n2016-10-05T00:49:58.076 Thread[taskExecutor-1,5,main]: Start Async processing.\n2016-10-05T00:49:59.081 Thread[taskExecutor-1,5,main]: End Async processing.\n2016-10-05T00:49:59.083 Thread[taskExecutor-1,5,main]: complete    \u2190 \u975e\u540c\u671f\u51e6\u7406\u6210\u529f\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u3067\u51fa\u529b\u3057\u305f\u30ed\u30b0\n2016-10-05T00:49:59.558 Thread[http-nio-8080-exec-2,5,main]: Called complete.jsp\n2016-10-05T00:49:59.558 Thread[http-nio-8080-exec-2,5,main]: FORWARD\n\n\n\u30ed\u30b0\u3092\u307f\u308b\u3068\u3001\u975e\u540c\u671f\u51e6\u7406\u6210\u529f\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002CompletableFuture\u306b\u306f\u3001thenAccept\u30e1\u30bd\u30c3\u30c9\u4ee5\u5916\u306b\u3082\u69d8\u3005\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u8a73\u7d30\u306f\u300cCompletableFuture\u306eJava Doc\u300d\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u306e\u6307\u5b9a\n\u975e\u540c\u671f\u51e6\u7406\u306b\u306f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024(\u30df\u30ea\u79d2\u5358\u4f4d)\u3092\u8a2d\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u306e\u8a2d\u5b9a\u306b\u4f9d\u5b58\u3057\u307e\u3059\u304c\u3001Spring MVC\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067\u660e\u793a\u7684\u306b\u3057\u3066\u3044\u308b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u3053\u3053\u3067\u6307\u5b9a\u3057\u305f\u5024\u3092\u8d85\u3048\u3066\u3082\u975e\u540c\u671f\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u305f\u3081\u306bDispatcherServlet\u306b\u51e6\u7406\u8981\u6c42\u304c\u6765\u307e\u3059\u304c\u3001\u975e\u540c\u671f\u51e6\u7406\u306f\u5b9f\u884c\u3055\u308c\u7d9a\u3051\u3066\u3044\u308b\u3068\u3044\u3046\u70b9\u3092\u610f\u8b58\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5f8c\u306b\u975e\u540c\u671f\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u305f\u5834\u5408\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u5b8c\u4e86\u5f8c\u306e\u9077\u79fb\u51e6\u7406(AsyncContext#dispatch)\u304c\u884c\u308f\u308c\u306a\u3044\u3088\u3046\u306bSpring MVC\u304c\u5236\u5fa1\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059  \n\nNote: \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5f8c\u306e\u9077\u79fb\u51e6\u7406\u306e\u6291\u6b62\u5236\u5fa1\u306e\u4ed5\u7d44\u307f\nStandardServletAsyncWebRequest\u306e\u4e2d\u3067\u5236\u5fa1\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u306fServlet\u6a19\u6e96\u306ejavax.servlet.AsyncListener\u3092\u5b9f\u88c5\u3057\u3066\u304a\u308a\u3001onComplete\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u51e6\u7406\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308b\u30d5\u30e9\u30b0(AtomicBoolean)\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u3067\u3001\uff12\u91cd\u3067\u9077\u79fb\u51e6\u7406\u304c\u884c\u308f\u308c\u306a\u3044\u3088\u3046\u306b\u5236\u5fa1\u3057\u3066\u3044\u307e\u3059\u3002\u5b9f\u969b\u306b\u9077\u79fb\u51e6\u7406\u3092\u5236\u5fa1\u3057\u3066\u3044\u308b\u306e\u306f\u3001WebAsyncManager#setConcurrentResultAndDispatch\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u3059\u3002\u3053\u308c\u306f\u3001IBM\u306e\u30da\u30fc\u30b8\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u305f\u5b9f\u88c5\u65b9\u6cd5\u3068\u540c\u3058\u3063\u307d\u3044\u3067\u3059\u306d\u3002\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\nSpring MVC\u306e\u8a2d\u5b9a\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u30923\u79d2\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n@EnableWebMvc // \u6ce8\u610f\uff1aSpring Boot\u306e\u5834\u5408\u306f\u3001@EnableWebMvc\u306f\u3064\u3051\u3061\u3083\u30c0\u30e1\uff01\uff01\n@ComponentScan(\"com.example.component\")\n@Configuration\npublic class WebMvcConfig extends WebMvcConfigurerAdapter {\n    // ...\n    @Override\n    public void configureAsyncSupport(AsyncSupportConfigurer configurer) {\n        configurer.setDefaultTimeout(3000); // \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u9593\u306e\u6307\u5b9a\n    }\n}\n\n\nSpring MVC\u7ba1\u7406\u4e0b\u306e\u30b9\u30ec\u30c3\u30c9\u4f7f\u7528\u6642\u306e\u51e6\u7406\u56fa\u6709\u306e\u6307\u5b9a\u5024\nWebAsyncTask\u306e\u4f7f\u7528\u3059\u308b\u3068\u3001\u51e6\u7406\u56fa\u6709\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u30922\u79d2\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n@RequestMapping(method = RequestMethod.GET)\npublic WebAsyncTask<String> get(@RequestParam(defaultValue = \"0\") long waitSec, Model model) {\n    // ...\n    return new WebAsyncTask<>(2000, asyncProcessing);\n}\n\n\nSpring MVC\u7ba1\u7406\u5916\u306e\u30b9\u30ec\u30c3\u30c9\u4f7f\u7528\u6642\u306e\u51e6\u7406\u56fa\u6709\u306e\u6307\u5b9a\u5024\nDeferredResult\u306e\u4f7f\u7528\u3059\u308b\u3068\u3001\u51e6\u7406\u56fa\u6709\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u30924\u79d2\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n@RequestMapping(path = \"deferred\", method = RequestMethod.GET)\npublic DeferredResult<String> getReferred(@RequestParam(defaultValue = \"0\") long waitSec, Model model) {\n    // ...\n    DeferredResult<String> deferredResult = new DeferredResult<>(4000L);\n    // ...\n}\n\n\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u306e\u52d5\u4f5c\n\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306b\u3088\u3063\u3066\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u304c\u691c\u77e5\u3055\u308c\u308b\u3068\u3001Spring MVC\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3060\u3068503(Service Unavailable)\u306b\u306a\u308a\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fbSpring 4.2\u7cfb\u306f4.2.7.RELEASE\u3001Spring 4.3\u7cfb\u306f4.3.2\u307e\u3067\u306f500(Internal Server Error)\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3057\u307e\u3057\u3087\u3046\u3002\n$ curl -D - http://localhost:8080/async/completable?waitSec=4\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 503 \nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Tue, 04 Oct 2016 15:55:06 GMT\nConnection: close\n\n{\"timestamp\":1475596506606,\"status\":503,\"error\":\"Service Unavailable\",\"exception\":\"org.springframework.web.context.request.async.AsyncRequestTimeoutException\",\"message\":\"No message available\",\"path\":\"/async/completable\"}\n\n\n\u306a\u304a\u3001\u4f8b\u5916\u3092@ExceptionHandler\u3092\u4f7f\u7528\u3057\u3066\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u5834\u5408\u306f\u3001Controller\u3084@ControllerAdvice\u30af\u30e9\u30b9\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3068\u671f\u5f85\u901a\u308a\u306b\u52d5\u4f5c\u3057\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u30fb\u30fb\u30fb\n@ExceptionHandler\n@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)\npublic String handleException(Exception e) {\n    return \"error\";\n}\n\n\u3068\u3044\u3063\u305f\u611f\u3058\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3068\u3001\u5148\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066AsyncRequestTimeoutException\u304c\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u3001AsyncRequestTimeoutException\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b@ExceptionHandler\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3059\u308b\u306e\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n@ExceptionHandler\n@ResponseStatus(HttpStatus.SERVICE_UNAVAILABLE)\npublic String handleAsyncRequestTimeoutException(AsyncRequestTimeoutException e) {\n    return \"timeout\";\n}\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u7a7a\u3067\u3088\u3044\u5834\u5408\u306f\u8fd4\u308a\u5024\u3092void\u306b\u3059\u308c\u3070OK\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u304c\u767a\u751f\u3057\u305f\u3053\u3068\u3092\u901a\u77e5\u3059\u308bHTML\u3092\u8fd4\u5374\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u30a8\u30e9\u30fc\u7528\u306eView(JSP)\u3082\u7528\u610f\u3057\u307e\u3059\u3002\n\nsrc/main/webapp/WEB-INF/timeout.jsp\n<%@ page import=\"com.example.component.Console\" trimDirectiveWhitespaces=\"true\" %>\n<% Console.println(\"Called timeout.jsp\"); %>\n<% Console.println(request.getDispatcherType()); %>\n\n<html>\n<body>\n<h2>Timeout!</h2>\n<p><a href=\"${pageContext.request.contextPath}/\">Go to Top</a></p>\n</body>\n</html>\n\n\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u767a\u751f\u3059\u308b\u3088\u3046\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3068\u3001\u30a8\u30e9\u30fc\u753b\u9762\u306eHTML + 503(Service Unavailable)\u304c\u30ec\u30b9\u30dd\u30f3\u30b9\u3055\u308c\u307e\u3059 \n$ curl -L -D - http://localhost:8080/async/completable?waitSec=4\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 503 \nSet-Cookie: JSESSIONID=CE9005C6067914827C61E4B9B52B3A4A;path=/;HttpOnly\nContent-Type: text/html;charset=ISO-8859-1\nContent-Language: ja-JP\nContent-Length: 80\nDate: Tue, 04 Oct 2016 16:15:49 GMT\nConnection: close\n\n<html>\n<body>\n<h2>Timeout!</h2>\n<p><a href=\"/\">Go to Top</a></p>\n</body>\n</html>\n\n\n\n\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n\u57fa\u672c\u7684\u306b\u306f\u975e\u540c\u671f\u51e6\u7406\u56fa\u6709\u306e\u5bfe\u51e6\u306f\u4e0d\u8981\u3067\u3001\u975e\u540c\u671f\u51e6\u7406\u4e2d\u306b\u767a\u751f\u3057\u305f\u4f8b\u5916\u306f\u3001Spring MVC\u306eExceptionResolver\u306b\u3088\u3063\u3066\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059  \n@Controller\n@RequestMapping(\"/async\")\npublic class AsyncController {\n    private static final Logger logger = LoggerFactory.getLogger(AsyncController.class);\n    // ...\n    @ExceptionHandler // ExceptionResolver\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u7528\u3057\u3066\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u53ef\u80fd\n    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)\n    public String handleException(Exception e) {\n        logger.error(\"System error is occurred.\", e);\n        return \"error\";\n    }\n}\n\n\u3053\u3053\u3067\u306f\u3001Controller\u306b\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u304c\u3001\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3067\u884c\u3046\u3053\u3068\u306e\u65b9\u304c\u591a\u3044\u3068\u601d\u3044\u306e\u3067\u3001\u5b9f\u969b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u306e\u73fe\u5834\u3067\u306f@ControllerAdvice\u3092\u5229\u7528\u3059\u308b\u306e\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002@ControllerAdvice\u306e\u5b9f\u88c5\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u300cSpring MVC(+Spring Boot)\u4e0a\u3067\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u5171\u901a\u51e6\u7406\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u7406\u89e3\u3059\u308b\u300d\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\u30a8\u30e9\u30fc\u753b\u9762\u3092\u5fdc\u7b54\u3059\u308bView(JSP)\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\nsrc/main/webapp/WEB-INF/error.jsp\n<%@ page import=\"com.example.component.Console\" trimDirectiveWhitespaces=\"true\" %>\n<% Console.println(\"Called error.jsp\"); %>\n<% Console.println(request.getDispatcherType()); %>\n\n<html>\n<body>\n<h2>Error!</h2>\n<p><a href=\"${pageContext.request.contextPath}/\">Go to Top</a></p>\n</body>\n</html>\n\n\n\nNote: Spring Boot\u4e0a\u3067JSP\u3092\u4f7f\u3046\u5834\u5408\u306f\u30fb\u30fb\u30fb\nSpring Boot\u3067View\u3068\u3057\u3066JSP\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\"error\"\u3068\u3044\u3046\u540d\u524dView(JSP)\u3092\u914d\u7f6e\u3057\u305f\u3060\u3051\u3067\u306fSpring Boot\u304c\u63d0\u4f9b\u3059\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a8\u30e9\u30fc\u30da\u30fc\u30b8\u3092\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u30a8\u30e9\u30fc\u30da\u30fc\u30b8\u3092\u4e0a\u66f8\u304d\u3059\u308b\u5834\u5408\u306f\u3001error.jsp\u3092\u914d\u7f6e\u3057\u305f\u3046\u3048\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a8\u30e9\u30fc\u30da\u30fc\u30b8\u3092\u7121\u52b9\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\napplication.properties\nserver.error.whitelabel.enabled=false\n\n\n\n\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3068\u3001\u30a8\u30e9\u30fc\u753b\u9762\u304c\u30ec\u30b9\u30dd\u30f3\u30b9\u3055\u308c\u307e\u3059  \n$ curl -L -D - http://localhost:8080/async/completable?waitSec=999\n\nHTTP/1.1 500 \nSet-Cookie: JSESSIONID=F375D29720A50CA5A81A28EDB501BCB7;path=/;HttpOnly\nContent-Type: text/html;charset=ISO-8859-1\nContent-Language: ja-JP\nContent-Length: 78\nDate: Tue, 04 Oct 2016 16:26:16 GMT\nConnection: close\n\n<html>\n<body>\n<h2>Error!</h2>\n<p><a href=\"/\">Go to Top</a></p>\n</body>\n</html>\n\n\nDeferredResult\u4f7f\u7528\u6642\u306e\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\nHandler\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\u3068\u3057\u3066DeferredResult\u3092\u8fd4\u5374\u3059\u308b\u5834\u5408\u306e\u307f\u3001\u500b\u5225\u306e\u5b9f\u88c5\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u30fb\u30fb\u30fb\uff08\u6b8b\u5ff5\u3060\uff09\nDeferredResult\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066DeferredResult\u306esetErrorResult\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u4f8b\u5916\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001Spring MVC\u306eExceptionResolver\u306b\u3088\u3063\u3066\u4f8b\u5916\u304c\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\ntry {\n    service.anyProcessing();\n} catch (Exception e) { // \u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066\u304b\u3089\u306e\u30fb\u30fb\u30fb\n    deferredResult.setErrorResult(e); // \u3053\u308c\u304c\u5fc5\u8981\uff01\uff01 \uff08\u3053\u308c\u3092\u5fd8\u308c\u308b\u3068\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u304c\u691c\u77e5\u3055\u308c\u308b\u307e\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u5374\u3055\u308c\u306a\u304f\u306a\u308b\u30fb\u30fb\u30fb\uff09\n    return; // \uff0b\u5f8c\u7d9a\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3053\u3068\uff01\uff01\n}\n\n\u3046\u301c\u3093\u30fb\u30fb\u30fb\u3084\u3063\u3071\u308aDeferredResult\u306f\u4f7f\u308f\u306a\u3044\u65b9\u304c\u3044\u3044\u306a\u30fb\u30fb\u30fb\u3002\n\n\u5171\u901a\u51e6\u7406\u306e\u5b9f\u88c5\n\nProcessingInterceptor\u306e\u5229\u7528\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306e\u3068\u3053\u308d\u3067\u8efd\u304f\u7d39\u4ecb\u3057\u307e\u3057\u305f\u304c\u3001Spring MVC\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u30dd\u30a4\u30f3\u30c8(\u30bf\u30a4\u30df\u30f3\u30b0)\u3067\u5171\u901a\u7684\u306a\u51e6\u7406\u3092\u5b9f\u884c\u3067\u304d\u308b\u4ed5\u7d44\u307f(CallableProcessingInterceptor or DeferredResultProcessingInterceptor)\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u540d\n\u8aac\u660e\n\n\n\n\nCallableProcessingInterceptor\nSpring MVC\u7ba1\u7406\u4e0b\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3059\u308b\u975e\u540c\u671f\u51e6\u7406\u5411\u3051\u306e\u4ed5\u7d44\u307f\u3002\n\n\nDeferredResultProcessingInterceptor\nSpring MVC\u7ba1\u7406\u5916\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3059\u308b\u975e\u540c\u671f\u51e6\u7406\u5411\u3051\u306e\u4ed5\u7d44\u307f\u3002\n\n\n\n\u3053\u306e\uff12\u3064\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306f\u307b\u3068\u3093\u3069\u540c\u3058\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001\u547c\u3073\u51fa\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3082\u57fa\u672c\u7684\u306b\u306f\u4e00\u7dd2\u3067\u3059\u3002\n\norg.springframework.web.context.request.async.CallableProcessingInterceptor\npublic interface CallableProcessingInterceptor {\n    static final Object RESULT_NONE = new Object();\n    static final Object RESPONSE_HANDLED = new Object();\n    <T> void beforeConcurrentHandling(NativeWebRequest request, Callable<T> task) throws Exception;\n    <T> void preProcess(NativeWebRequest request, Callable<T> task) throws Exception;\n    <T> void postProcess(NativeWebRequest request, Callable<T> task, Object concurrentResult) throws Exception;\n    <T> Object handleTimeout(NativeWebRequest request, Callable<T> task) throws Exception;\n    <T> void afterCompletion(NativeWebRequest request, Callable<T> task) throws Exception;\n}\n\n\n\norg.springframework.web.context.request.async.DeferredResultProcessingInterceptor\n    <T> void beforeConcurrentHandling(NativeWebRequest request, DeferredResult<T> deferredResult) throws Exception;\n    <T> void preProcess(NativeWebRequest request, DeferredResult<T> deferredResult) throws Exception;\n    <T> void postProcess(NativeWebRequest request, DeferredResult<T> deferredResult, Object concurrentResult) throws Exception;\n    <T> boolean handleTimeout(NativeWebRequest request, DeferredResult<T> deferredResult) throws Exception;\n    <T> void afterCompletion(NativeWebRequest request, DeferredResult<T> deferredResult) throws Exception;\n}\n\n\n\n\n\n\u30e1\u30bd\u30c3\u30c9\u540d\n\u5b9f\u884c\u30b9\u30ec\u30c3\u30c9\n\u8aac\u660e\n\n\n\n\nbeforeConcurrentHandling\nAP\u30b5\u30fc\u30d0\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u53d7\u4ed8\u30b9\u30ec\u30c3\u30c9\n\nServletRequest#startAsync\u3092\u5b9f\u884c\u3059\u308b\u76f4\u524d\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3002\n\n\npreProcess\n\n\nServletRequest#startAsync\u3092\u5b9f\u884c\u3057\u305f\u76f4\u5f8c\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3002\n\n\npostProcess\n\n\u975e\u540c\u671f\u51e6\u7406\u304c\u7d42\u4e86\u3057\u3001AsyncContext#dispatch\u3092\u5b9f\u884c\u3059\u308b\u76f4\u524d\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3002\n\n\nhandleTimeout\nAP\u30b5\u30fc\u30d0\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u8fd4\u5374\u30b9\u30ec\u30c3\u30c9\n\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u691c\u77e5\u3057\u305f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 (AsyncListener#onTimeout\u304c\u30c8\u30ea\u30ac\u30fc)\n\n\nafterCompletion\n\nServlet\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u3092\u7d42\u4e86\u3057\u305f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 (AsyncListener#onComplete\u3068onError\u304c\u30c8\u30ea\u30ac\u30fc)\n\n\n\n\u306a\u304a\u3001Servlet\u6a19\u6e96\u306e\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc(AsyncListener)\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u3061\u3089\u306b\u7c21\u5358\u306b\u8a18\u8f09\u3057\u3066\u3042\u308a\u307e\u3059\u3002\u8a00\u8449\u3060\u3051\u3060\u3068\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u7d75\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u7d75\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3059\u308b\u305f\u3081\u306b\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f\u7701\u7565\u3057\u307e\u3057\u305f\u304c\u3001\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u691c\u77e5\u3059\u308b\u3068\u3001\u7d75\u306e\u4e2d\u306e\u300c/async(2\u56de\u76ee)\u300d\u306e\u304b\u308f\u308a\u306b\u3001Spring MVC\u5074\u3067\u5b9f\u88c5\u3057\u3066\u3044\u308bonTimeout\u30e1\u30bd\u30c3\u30c9\u304c\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u307e\u3059\u3002\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u5f8c\u306f\u3001ProcessingInterceptor\u306ehandleTimeout\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nCallableProcessingInterceptor\u306e\u5b9f\u88c5\nCallableProcessingInterceptor\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306f\u3001\u7a7a\u5b9f\u88c5\u304c\u884c\u308f\u308c\u3066\u3044\u308bAdapter\u30af\u30e9\u30b9(CallableProcessingInterceptorAdapter)\u3092\u7d99\u627f\u3057\u3001 \u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u306e\u304c\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\npublic class CustomCallableProcessingInterceptor extends CallableProcessingInterceptorAdapter {\n    // \u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\n}\n\n\u4f5c\u6210\u3057\u305f\u30af\u30e9\u30b9\u3092Spring MVC\u306b\u9069\u7528\u3057\u307e\u3059\u3002\n@EnableWebMvc // \u6ce8\u610f\uff1aSpring Boot\u306e\u5834\u5408\u306f\u3001@EnableWebMvc\u306f\u3064\u3051\u3061\u3083\u30c0\u30e1\uff01\uff01\n@ComponentScan(\"com.example.component\")\n@Configuration\npublic class WebMvcConfig extends WebMvcConfigurerAdapter {\n    // ...\n    @Override\n    public void configureAsyncSupport(AsyncSupportConfigurer configurer) {\n        // ...\n        configurer.registerCallableInterceptors(new CustomCallableProcessingInterceptor());\n    }\n}\n\n\nDeferredResultProcessingInterceptor\u306e\u5b9f\u88c5\nDeferredResultProcessingInterceptor\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306f\u3001\u7a7a\u5b9f\u88c5\u304c\u884c\u308f\u308c\u3066\u3044\u308bAdapter\u30af\u30e9\u30b9(DeferredResultProcessingInterceptorAdapter)\u3092\u7d99\u627f\u3057\u3001 \u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u306e\u304c\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\npublic class CustomDeferredResultProcessingInterceptor extends DeferredResultProcessingInterceptorAdapter {\n    // \u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\n}\n\n@Override\npublic void configureAsyncSupport(AsyncSupportConfigurer configurer) {\n    // ...\n    configurer.registerDeferredResultInterceptors(new CustomDeferredResultProcessingInterceptor());\n}\n\n\nAsyncHandlerInterceptor\u306e\u5229\u7528\nAsyncHandlerInterceptor\u306f\u3001HandlerInterceptor\u306e\u30b5\u30d6\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u958b\u59cb\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u306b\u5bfe\u3059\u308b\u7d42\u4e86\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306e\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\norg.springframework.web.servlet.AsyncHandlerInterceptor\npublic interface AsyncHandlerInterceptor extends HandlerInterceptor {\n    void afterConcurrentHandlingStarted(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception;\n}\n\n\nafterConcurrentHandlingStarted\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306f\u3001ProcessingInterceptor\u306epostProcess\u30e1\u30bd\u30c3\u30c9\u3088\u308a\u5f8c\u3067\u3001\u6b63\u78ba\u306b\u3044\u3046\u3068DispatcherServlet\u306e\u30e1\u30a4\u30f3\u51e6\u7406\u306e\u6700\u5f8c\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u540c\u671f\u578b\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308bHandlerInterceptor#afterCompletion\u30e1\u30bd\u30c3\u30c9\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb\u975e\u540c\u671f\u51e6\u7406\u3092\u958b\u59cb\u3057\u305f\u5834\u5408\u306f\u3001HandlerInterceptor#postHandle\n\u3068afterCompletion\u30e1\u30bd\u30c3\u30c9\u306f\u547c\u3073\u51fa\u3055\u308c\u307e\u305b\u3093\u3002\u3068\u3001\u66f8\u3044\u3066\u307f\u305f\u3082\u306e\u306e\u30fb\u30fb\u30fb\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u306d  \u305d\u3093\u306a\u6642\u306f\u7d75\u3067\u8868\u73fe\u3059\u308b\u306e\u304c\u4e00\u756a\u3067\u3059\u3002\n\n\nAsyncHandlerInterceptor\u306e\u5b9f\u88c5\nAsyncHandlerInterceptor\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306f\u3001\u7a7a\u5b9f\u88c5\u304c\u884c\u308f\u308c\u3066\u3044\u308bAdapter\u30af\u30e9\u30b9(HandlerInterceptorAdapter)\u3092\u7d99\u627f\u3057\u3001 \u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u306e\u304c\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\npublic class CustomHandlerInterceptor implements AsyncHandlerInterceptor {\n    // \u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\n    @Override\n    public void afterConcurrentHandlingStarted(\n            HttpServletRequest request, HttpServletResponse response, Object handler)\n            throws Exception {\n        Console.println(\"afterConcurrentHandlingStarted\");\n    }\n}\n\n\u4f5c\u6210\u3057\u305f\u30af\u30e9\u30b9\u3092Spring MVC\u306b\u9069\u7528\u3057\u307e\u3059\u3002\n@EnableWebMvc // \u6ce8\u610f\uff1aSpring Boot\u306e\u5834\u5408\u306f\u3001@EnableWebMvc\u306f\u3064\u3051\u3061\u3083\u30c0\u30e1\uff01\uff01\n@ComponentScan(\"com.example.component\")\n@Configuration\npublic class WebMvcConfig extends WebMvcConfigurerAdapter {\n    // ...\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(new CustomHandlerInterceptor());\n    }\n}\n\n\nSpring Boot\u4e0a\u3067\u306e\u975e\u540c\u671f\u30ea\u30af\u30a8\u30b9\u30c8\n\u3053\u3053\u3067\u306f\u3001REST API\u3092\u4f7f\u3063\u3066\u52d5\u304d\u3092\u78ba\u8a8d\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305a\u30fb\u30fb\u30fbSPRING INITIALIZR \u53c8\u306fIDE(STS or IDEA)\u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u3066Web\u5411\u3051\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306e\u6295\u7a3f\u306b\u306f\u5168\u304f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u304c\u3001JSR-310 Date and Time API\u306e\u30af\u30e9\u30b9\u3092Jackson\u3067\u6b63\u3057\u304f\u6271\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3082\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u884c\u3063\u3066\u304a\u304d\u307e\u3059\u3002(\u8aac\u660e\u306f\u5272\u611b\u3057\u307e\u3059\u30fb\u30fb)\n\npom.xml\n<dependency>\n    <groupId>com.fasterxml.jackson.datatype</groupId>\n    <artifactId>jackson-datatype-jsr310</artifactId>\n</dependency>\n\n\n\nsrc/main/resources/application.properties\nspring.jackson.serialization.write-dates-as-timestamps=false\n\n\n\n\u975e\u540c\u671f\u30ea\u30af\u30a8\u30b9\u30c8\u5bfe\u5fdc\u306eREST API\u3092\u4f5c\u3063\u3066\u307f\u308b\n\u3053\u3053\u3067\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u4ed8\u3051\u305f\u6642\u9593\u3068\u975e\u540c\u671f\u51e6\u7406\u304c\u7d42\u4e86\u3057\u305f\u6642\u9593\u3092\u8fd4\u5374\u3059\u308bREST API\u3092\u4f5c\u308a\u307e\u3059\u3002\uff08\u3063\u3066\u304b\u3001REST API\u3067\u306f\u306a\u3044\u3067\u3059\u306d\u30fb\u30fb\u30fb  \uff09\n\u307e\u305a\u3001JSON\u3067\u8fd4\u5374\u3059\u308b\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308bJavaBean\u3092\u4f5c\u308a\u307e\u3059\u3002\npackage com.example.component;\n\nimport java.time.LocalDateTime;\n\npublic class ProcessingResult {\n    private LocalDateTime acceptedTime;\n    private LocalDateTime completedTime;\n    // ...\n}\n\n\u3064\u304e\u306b\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u884c\u3046@Async\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\u3002\npackage com.example.component;\n\nimport org.springframework.scheduling.annotation.Async;\nimport org.springframework.stereotype.Component;\n\nimport java.time.LocalDateTime;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.concurrent.TimeUnit;\n\n@Component\npublic class AsyncHelper {\n    // ...\n    @Async\n    public CompletableFuture<ProcessingResult> asyncProcessing(ProcessingResult result, long waitSec) {\n        Console.println(\"Start Async processing.\");\n\n        if (waitSec == 999) {\n            throw new IllegalStateException(\"Special parameter for confirm error.\");\n        }\n\n        sleep(waitSec);\n\n        result.setCompletedTime(LocalDateTime.now());\n\n        Console.println(\"End Async processing.\");\n\n        return CompletableFuture.completedFuture(result);\n    }\n    // ...\n}\n\n\u3055\u3044\u3054\u306b\u3001@RestController\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\npackage com.example.component;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.time.LocalDateTime;\nimport java.util.concurrent.CompletableFuture;\n\n@RequestMapping(\"/api/async\")\n@RestController\npublic class AsyncRestController {\n    @Autowired\n    AsyncHelper asyncHelper;\n\n    @RequestMapping(method = RequestMethod.GET)\n    public CompletableFuture<ProcessingResult> get(@RequestParam(defaultValue = \"0\") long waitSec) {\n        Console.println(\"Start get.\");\n\n        ProcessingResult result = new ProcessingResult();\n        result.setAcceptedTime(LocalDateTime.now());\n\n        CompletableFuture<ProcessingResult> future = asyncHelper.asyncProcessing(result, waitSec);\n\n        Console.println(\"End get.\");\n        return future;\n    }\n}\n\ncURL\u3067REST API\u3092\u547c\u3073\u51fa\u3059\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n$ curl -D - http://localhost:8080/api/async?waitSec=1\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 200 \nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Tue, 04 Oct 2016 16:45:30 GMT\n\n{\"acceptedTime\":\"2016-10-05T01:45:29.403\",\"completedTime\":\"2016-10-05T01:45:30.406\"}\n\n\n\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u30ed\u30b0\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u30b3\u30f3\u30bd\u30fc\u30eb(\u30b5\u30fc\u30d0\u30fc)\n2016-10-05T01:45:29.403 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T01:45:29.403 Thread[http-nio-8080-exec-1,5,main]: Start Async processing.\n2016-10-05T01:45:30.406 Thread[http-nio-8080-exec-1,5,main]: End Async processing.\n2016-10-05T01:45:30.408 Thread[http-nio-8080-exec-1,5,main]: End get.\n\n\n\u3059\u3079\u3066\u540c\u3058\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u3061\u3083\u3063\u3066\u307e\u3059\u306d\u30fb\u30fb\u30fb  \n\u3055\u3059\u304c\u306eSpring Boot\u3082\u81ea\u52d5\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u304f\u308c\u306a\u304b\u3063\u305f\u307f\u305f\u3044\u3067\u3059\u306d\u3002\u304a\u305d\u3089\u304f\u3001@Async\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u306e\u304c\u539f\u56e0\u3060\u3068\u601d\u3046\u306e\u3067\u3001@EnableAsync\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\npackage com.example;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.scheduling.annotation.EnableAsync;\n\n@EnableAsync // \u8ffd\u52a0\n@SpringBootApplication\npublic class DemoMvcAsyncApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(DemoMvcAsyncApplication.class, args);\n    }\n}\n\nREST API\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u4eca\u5ea6\u306f\u5225\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u4f7f\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\n2016-10-05T01:48:08.342 Thread[http-nio-8080-exec-3,5,main]: Start get.\n2016-10-05T01:48:08.342 Thread[http-nio-8080-exec-3,5,main]: End get.\n2016-10-05T01:48:08.342 Thread[SimpleAsyncTaskExecutor-2,5,main]: Start Async processing.\n2016-10-05T01:48:09.346 Thread[SimpleAsyncTaskExecutor-2,5,main]: End Async processing.\n\n\n\u3053\u306e\u30ed\u30b0\u304b\u3089\u3060\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u51e6\u7406\u304c\u3069\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308bHandlerInterceptor\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\npackage com.example.component;\n\nimport org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\npublic class CompletionLoggingHandlerInterceptor extends HandlerInterceptorAdapter {\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n        Console.println(\"afterCompletion\");\n    }\n}\n\n\u672c\u6295\u7a3f\u3067\u306f\u3001\u7c21\u6613\u7684\u306b@SpringBootApplication\u30af\u30e9\u30b9\u3067Spring MVC\u306e\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002(\u5b9f\u969b\u306e\u30a2\u30d7\u30ea\u958b\u767a\u3067\u306f\u3001WebMvcConfig\u7684\u306a\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\uff01\uff01)\n\n@EnableAsync\n@SpringBootApplication\npublic class DemoMvcAsyncApplication extends WebMvcConfigurerAdapter {\n    public static void main(String[] args) {\n        SpringApplication.run(DemoMvcAsyncApplication.class, args);\n    }\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(new CompletionLoggingHandlerInterceptor()); // HandlerInterceptor\u306e\u9069\u7528\n    }\n}\n\nREST API\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001Spring Boot\u3067\u3082\u975e\u540c\u671f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u6271\u3048\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\n2016-10-05T01:51:08.065 Thread[http-nio-8080-exec-3,5,main]: Start get.\n2016-10-05T01:51:08.065 Thread[http-nio-8080-exec-3,5,main]: End get.\n2016-10-05T01:51:08.065 Thread[SimpleAsyncTaskExecutor-2,5,main]: Start Async processing.\n2016-10-05T01:51:09.069 Thread[SimpleAsyncTaskExecutor-2,5,main]: End Async processing.\n2016-10-05T01:51:09.074 Thread[http-nio-8080-exec-4,5,main]: afterCompletion\n\n\n\n\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u3046\n\u30ed\u30b0\u3092\u307f\u308b\u3068\u3001\u3084\u306f\u308a\u6b8b\u5ff5\u306a\u304c\u3089\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u304c\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u3067\u3059\u306d\u30fb\u30fb\u30fb\u3002\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\uff01\uff01\uff01 \"taskExecutor\"\u3068\u3044\u3046\u540d\u524d\u3067\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u3046AsyncTaskExecutor\u3092Bean\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u3067OK\u3067\u3059\u3002\n@EnableAsync\n@SpringBootApplication\npublic class DemoMvcAsyncApplication extends WebMvcConfigurerAdapter {\n    // ...\n    @Bean // Bean\u5b9a\u7fa9\u3092\u8ffd\u52a0\n    public AsyncTaskExecutor taskExecutor() {\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n        executor.setMaxPoolSize(10);\n        return executor;\n    }\n}\n\nREST API\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb(\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305fAsyncTaskExecutor)\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\n2016-10-05T01:52:38.445 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T01:52:38.449 Thread[http-nio-8080-exec-1,5,main]: End get.\n2016-10-05T01:52:38.456 Thread[taskExecutor-1,5,main]: Start Async processing.\n2016-10-05T01:52:39.461 Thread[taskExecutor-1,5,main]: End Async processing.\n2016-10-05T01:52:39.508 Thread[http-nio-8080-exec-2,5,main]: afterCompletion\n\n\nSpring MVC\u7ba1\u7406\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u4f7f\u3046\u5834\u5408\u3082\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u304b\u3089\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n@EnableAsync\n@SpringBootApplication\npublic class DemoMvcAsyncApplication extends WebMvcConfigurerAdapter {\n    // ...\n    @Override\n    public void configureAsyncSupport(AsyncSupportConfigurer configurer) {\n        configurer.setTaskExecutor(taskExecutor()); // Spring MVC\u7ba1\u7406\u4e0b\u3067\u3082\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u3046\n    }\n    // ThreadPoolTaskExecutor\u306fDI\u30b3\u30f3\u30c6\u30ca\u4e0a\u3067\u7ba1\u7406\u3059\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\n    // Spring\u306eDI\u30b3\u30f3\u30c6\u30ca\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306b\u5408\u308f\u305b\u3066\u3001\u9069\u5207\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067initialize\u3068shutdown\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\n    @Bean\n    public AsyncTaskExecutor taskExecutor() {\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n        executor.setMaxPoolSize(10);\n        return executor;\n    }\n}\n\n\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u306e\u6307\u5b9a\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u306e\u6307\u5b9a\u306f\u3001WebMvcConfigurerAdapter\u306econfigureAsyncSupport\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u3059\u308b\u3053\u3068\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u304c\u3001Spring Boot\u3067\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f7f\u3063\u3066\u5168\u4f53\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\nsrc/main/resources/application.properties\nspring.mvc.async.request-timeout=3000\n\n\n\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u306e\u52d5\u4f5c\nSpring Boot\u56fa\u6709\u306e\u4ed5\u7d44\u307f\u306f\u7279\u306b\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306aJSON\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n$ curl -D - http://localhost:8080/api/async?waitSec=4\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 503 \nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Tue, 04 Oct 2016 16:58:17 GMT\nConnection: close\n\n{\"timestamp\":\"2016-10-04T16:58:17.939+0000\",\"status\":503,\"error\":\"Service Unavailable\",\"exception\":\"org.springframework.web.context.request.async.AsyncRequestTimeoutException\",\"message\":\"No message available\",\"path\":\"/api/async\"}\n\n\n\n\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\nSpring Boot\u56fa\u6709\u306e\u4ed5\u7d44\u307f\u306f\u7279\u306b\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306aJSON\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n$ curl -D - http://localhost:8080/api/async?waitSec=999\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 500 \nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Tue, 04 Oct 2016 17:00:39 GMT\nConnection: close\n\n{\"timestamp\":\"2016-10-04T17:00:39.558+0000\",\"status\":500,\"error\":\"Internal Server Error\",\"exception\":\"java.util.concurrent.CompletionException\",\"message\":\"java.lang.IllegalStateException: Special parameter for confirm error.\",\"path\":\"/api/async\"}\n\n\nJSON\u3092\u898b\u3066\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3060\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u90e8\u306e\u60c5\u5831\u304c\u6f0f\u6d29\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u958b\u767a\u74b0\u5883\u306a\u3089\u3053\u306eJSON\u3067\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u5546\u7528\u74b0\u5883\u3067\u3053\u306eJSON\u3092\u8fd4\u5374\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u306a\u304a\u3001\u30a8\u30e9\u30fc\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u65b9\u6cd5\u306f\u672c\u6295\u7a3f\u3067\u306f\u6271\u308f\u306a\u3044\u306e\u3067\u3001\u300cSpring Boot\u306e\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u300d\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306f\u3001Servlet\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u3092Spring MVC\u3067\u3069\u3046\u3084\u3063\u3066\u5229\u7528\u3059\u308b\u306e\u304b\uff08\u5b9f\u88c5\u3059\u308b\u306e\u304b\uff09\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u7d39\u4ecb\u3057\u305f\u65b9\u5f0f\u306f\u3001AP\u30b5\u30fc\u30d0\u30fc\u306e\u30ea\u30bd\u30fc\u30b9(\u30b9\u30ec\u30c3\u30c9)\u3092\u3067\u304d\u308b\u3060\u3051\u5360\u6709\u305b\u305a\u306b\u52b9\u7387\u7684\u306b\u51e6\u7406\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306b\u5229\u7528\u3059\u308b\u51e6\u7406\u65b9\u5f0f\u3067\u3059\u3002\u6b21\u56de\u306f\u3001\u300cHTTP\u306e\u5206\u5272\u30ec\u30b9\u30dd\u30f3\u30b9(\"Transfer-Encoding: chunked\")\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3057\u305fPush\u578b\u306e\u975e\u540c\u671f\u51e6\u7406\u300d\u3092\u3001Spring MVC\u304c\u3069\u306e\u3088\u3046\u306b\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u306a\u304a\u3001\u30b5\u30fc\u30d0\u30fc\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u52b9\u7387\u7684\u306b\u4f7f\u3046\u3068\u3044\u3046\u89b3\u70b9\u3060\u3068\u3001Servlet 3.1\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305fNon-blocking I/O\u5411\u3051\u306eAPI(javax.servlet.ReadListener\u3068javax.servlet.WriteListener)\u304c\u3042\u308a\u307e\u3059\u3002Spring MVC\u306b\u304a\u3051\u308bNon-blocking I/O\u306e\u30b5\u30dd\u30fc\u30c8\u306f\u3001Spring 5\u304b\u3089\u306b\u306a\u308b\u4e88\u5b9a\u3067\u3059\u3002\u307e\u305f\u3001Spring 5\u304b\u3089\u306fReactive Programing\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u3068\u3057\u3066\u3082Non-blocking\u306a\u65b9\u5411\u306b\u5411\u304b\u3063\u3066\u3044\u307e\u3059\u3002Spring\u306eReactive\u5bfe\u5fdc\u306b\u3064\u3044\u3066\u306f\u3001@making@github \u306e\u30b9\u30e9\u30a4\u30c9\u300cReactive Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 - \u305d\u3057\u3066Spring 5\u3078\u300d\u304c\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\n\nhttp://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#mvc-ann-async\nhttp://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#scheduling-annotation-support-async\n\nhttp://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/ \nhttp://www.ibm.com/support/knowledgecenter/SSAW57_8.5.5/com.ibm.websphere.nd.doc/ae/cweb_asyncservlet.html?lang=ja\nhttp://www.slideshare.net/makingx/reactive-web-spring-5-jjugccc-cccef3\nhttp://qiita.com/kazuki43zoo/items/8be79f98621f90865b78\nhttp://qiita.com/kazuki43zoo/items/757b557c05f548c6c5db\n\n\u4eca\u56de\u306f\uff12\u90e8\u69cb\u6210\u3067\u3001Spring MVC\u30d9\u30fc\u30b9\u306eWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3001Servlet 3.0\u304b\u3089\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u975e\u540c\u671f\u51e6\u7406\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u3092\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\u306a\u304a\u3001Servlet\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u306e\u4ed5\u7d44\u307f\u306b\u3064\u3044\u3066\u306f\u3001[\u3053\u3061\u3089\u306e](http://qiita.com/kazuki43zoo/items/8be79f98621f90865b78)\u8a18\u4e8b\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\nSpring Boot\u4e0a\u3067\u306e\u4f7f\u3044\u65b9\u3068\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\u306f\u3001\u6700\u5f8c\u306e\u65b9\u306b\u8a18\u8f09\u3057\u3066\u3042\u308a\u307e\u3059\u3002Spring Boot\u30e6\u30fc\u30b6\u30fc\u306f\u65b9\u306f\u3001\u3082\u3057\u304b\u3057\u305f\u3089\u5148\u306b\u305d\u3061\u3089\u3092\u307f\u305f\u65b9\u304c\u30a4\u30e1\u30fc\u30b8\u304c\u3064\u304d\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n# \u52d5\u4f5c\u78ba\u8a8d\u74b0\u5883\n\n* Java SE 8\n* Tomcat 8.5.5 (Servlet 3.1)\n* Spring Framework 4.3.3.RELESAE\n* Spring Boot 1.4.1.RELEASE\n\n# \u524d\u63d0\u77e5\u8b58\n\n* Servlet\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u306e\u4ed5\u7d44\u307f\u3092\u77e5\u3063\u3066\u3044\u308b\u4eba\n* Spring MVC\u3067\u753b\u9762\u9077\u79fb\u30a2\u30d7\u30ea\u3092\u4f7f\u3063\u305f\u3053\u3068\u304c\u3042\u308b\u4eba (Java Config + `ViewResolver`\u306e\u4ed5\u7d44\u307f\u3092\u7406\u89e3\u3057\u3066\u3044\u308b\u4eba)\n\n# Spring MVC\u304c\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u975e\u540c\u671f\u51e6\u7406\u306e\u65b9\u5f0f\n\nSpring MVC\u306e\u975e\u540c\u671f\u51e6\u7406\u306f\u3001\u5927\u304d\u304f\u308f\u3051\u308b\u3068\u4ee5\u4e0b\u306e\uff12\u7a2e\u985e\u306b\u5206\u985e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n**\u975e\u540c\u671f\u5b9f\u884c\u304c\u7d42\u4e86\u3057\u3066\u304b\u3089HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u958b\u59cb\u3059\u308b\u65b9\u5f0f**\n\n> \u3053\u306e\u65b9\u5f0f\u306f\u3001\u6642\u9593\u306e\u639b\u304b\u308b\u91cd\u305f\u3044\u51e6\u7406\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u304c\u7ba1\u7406\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u5206\u96e2\u3057\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u6709\u52b9\u5229\u7528\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002 \u52d8\u9055\u3044\u3057\u3084\u3059\u3044\u306e\u3067\u3059\u304c\u3001HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u975e\u540c\u671f\u5b9f\u884c\u3057\u3066\u3044\u308b\u51e6\u7406\u304c\u7d42\u4e86\u3057\u305f\u5f8c\u306b\u884c\u3046\u305f\u3081\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u304b\u3089\u898b\u308b\u3068\u540c\u671f\u51e6\u7406\u3068\u540c\u3058\u52d5\u4f5c\u306a\u308a\u307e\u3059\u3002\n\n**\u975e\u540c\u671f\u5b9f\u884c\u306e\u51e6\u7406\u4e2d\u306bHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u958b\u59cb\u3059\u308b\u65b9\u5f0f**\n\n> \u3053\u306e\u65b9\u5f0f\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30c7\u30fc\u30bf\u3092\u9001\u4fe1(Push)\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002 \u30b5\u30fc\u30d0\u30fc\u5074\u306f\u975e\u540c\u671f\u51e6\u7406\u3092\u8d77\u52d5\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3044\u3063\u305f\u3093HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u884c\u3044\u3001\u305d\u306e\u5f8c\u3001\u975e\u540c\u671f\u51e6\u7406\u4e2d\u306e\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u30c7\u30fc\u30bf\u3092\u9001\u4fe1(Push)\u3057\u307e\u3059\u3002 \u3053\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u5206\u5272\u30ec\u30b9\u30dd\u30f3\u30b9(\"Transfer-Encoding: chunked\")\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u672c\u6295\u7a3f\u306f\u300c**\u975e\u540c\u671f\u5b9f\u884c\u304c\u7d42\u4e86\u3057\u3066\u304b\u3089HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u958b\u59cb\u3059\u308b\u65b9\u5f0f**\u300d\u306e\u8aac\u660e\u306b\u306a\u308a\u307e\u3059\u3002\u300c\u975e\u540c\u671f\u5b9f\u884c\u306e\u51e6\u7406\u4e2d\u306bHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u958b\u59cb\u3059\u308b\u65b9\u5f0f\u300d\u306b\u3064\u3044\u3066\u306f\u3001[\u7b2c2\u90e8](http://qiita.com/kazuki43zoo/items/53b79fe91c41cc5c2e59)\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\n# \u307e\u305a\u306fSpring MVC\u3067\u540c\u671f\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\n\u307e\u305a\u306f\u3001\u300c[Servlet\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u306b\u89e6\u308c\u3066\u307f\u308b](http://qiita.com/kazuki43zoo/items/8be79f98621f90865b78#%E3%81%BE%E3%81%9A%E3%81%AF%E6%99%AE%E9%80%9A%E3%81%AEservlet%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B)\u300d\u3067\u5b9f\u88c5\u3057\u305fServlet\u3092\u3001Spring MVC\u306eHandler\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002Spring MVC\u3067\u7f6e\u304d\u63db\u3048\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\npackage com.example.component;\n\nimport java.time.LocalDateTime;\n\npublic class Console {\n    public static void println(Object target) {\n        System.out.println(LocalDateTime.now() + \" \" + Thread.currentThread() + \": \" + target);\n    }\n}\n```\n```java\npackage com.example.component;\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;\n\nimport java.time.LocalDateTime;\nimport java.util.concurrent.TimeUnit;\n\n@Controller\n@RequestMapping(\"/standard\")\npublic class StandardController {\n\n    @RequestMapping(method = RequestMethod.GET)\n    public String get(@RequestParam(defaultValue = \"0\") long waitSec, Model model) {\n\n        Console.println(\"Start get.\");\n\n        model.addAttribute(\"acceptedTime\", LocalDateTime.now());\n\n        heavyProcessing(waitSec, model);\n\n        Console.println(\"End get.\");\n\n        return \"complete\";\n    }\n\n    private void heavyProcessing(long waitSec, Model model) {\n\n        if (waitSec == 999) {\n            throw new IllegalStateException(\"Special parameter for confirm error.\");\n        }\n\n        try {\n            TimeUnit.SECONDS.sleep(waitSec);\n        } catch (InterruptedException e) {\n            Thread.interrupted();\n        }\n\n        model.addAttribute(\"completedTime\", LocalDateTime.now());\n\n    }\n\n}\n```\n\nJSP\u306f\u540c\u3058\u3082\u306e\u3092\u4f7f\u3044\u307e\u3059\u304c\u3001JSP\u306e\u683c\u7d0d\u5148\u3092Spring MVC\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5834\u6240\uff08`/WEB-INF`\uff09\u306b\u3057\u307e\u3059\u3002\n\n```:src/main/webapp/WEB-INF/complete.jsp\n<%@ page import=\"com.example.component.Console\" %>\n<% Console.println(\"Called complete.jsp\"); %>\n<% Console.println(request.getDispatcherType()); %>\n\n<html>\n<body>\n<h2>Processing is complete !</h2>\n<p>Accept timestamp is ${acceptedTime}</p>\n<p>Complete timestamp is ${completedTime}</p>\n<p><a href=\"${pageContext.request.contextPath}/\">Go to Top</a></p>\n</body>\n</html>\n```\n\nJSP\u7528\u306e`ViewResolver`\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002\n\n```java\npackage com.example.config;\n\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\nimport org.springframework.web.servlet.config.annotation.ViewResolverRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;\n\n@EnableWebMvc // \u6ce8\u610f\uff1aSpring Boot\u306e\u5834\u5408\u306f\u3001@EnableWebMvc\u306f\u3064\u3051\u3061\u3083\u30c0\u30e1\uff01\uff01\n@ComponentScan(\"com.example.component\")\n@Configuration\npublic class WebMvcConfig extends WebMvcConfigurerAdapter {\n    @Override\n    public void configureViewResolvers(ViewResolverRegistry registry) {\n        registry.jsp(); // JSP\u7528\u306eViewResolver\u3092\u6709\u52b9\u5316\n    }\n}\n```\n\n> **Warning: Spring Boot\u3067WebMvcConfigurerAdapter\u3092\u5229\u7528\u3059\u308b\u969b\u306e\u6ce8\u610f\u70b9**\n>\n> Spring Boot\u3067`WebMvcConfigurerAdapter`\u306e\u5b50\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u3001`@EnableWebMvc`\u306f\u7d76\u5bfe\u306b\u3064\u3051\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002`@EnableWebMvc`\u3092\u3064\u3051\u3066\u3057\u307e\u3046\u3068\u3001Spring Boot\u306eAutoConfigure\u306e\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u4e00\u90e8\u7121\u52b9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u308c\u306f[Spring Boot\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](http://docs.spring.io/spring-boot/docs/1.4.1.RELEASE/reference/htmlsingle/#boot-features-spring-mvc-auto-configuration)\u306b\u3082\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\ncURL\u3084\u30d6\u30e9\u30a6\u30b6\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001`complete.jsp`\u3067\u751f\u6210\u3055\u308c\u305fHTML\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n\n```bash\n$ curl -D - http://localhost:8080/standard?waitSec=1\n```\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 200 \nSet-Cookie: JSESSIONID=469B8E011EAE404434D889F2E20B1CFA;path=/;HttpOnly\nContent-Type: text/html;charset=ISO-8859-1\nContent-Language: ja-JP\nContent-Length: 204\nDate: Tue, 04 Oct 2016 15:22:48 GMT\n\n\n\n\n\n<html>\n<body>\n<h2>Processing is complete !</h2>\n<p>Accept timestamp is 2016-10-05T00:22:46.929</p>\n<p>Complete timestamp is 2016-10-05T00:22:47.933</p>\n<p><a href=\"/\">Go to Top</a></p>\n</body>\n</html>\n```\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u4e0a\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ed\u30b0\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\uff08\u3059\u3079\u3066\u540c\u3058\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\uff09\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\n2016-10-05T00:22:46.929 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T00:22:47.933 Thread[http-nio-8080-exec-1,5,main]: End get.\n2016-10-05T00:22:48.579 Thread[http-nio-8080-exec-1,5,main]: Called complete.jsp\n2016-10-05T00:22:48.579 Thread[http-nio-8080-exec-1,5,main]: FORWARD\n```\n\n# Spring MVC\u3067\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\n`StandardController`\u306e\u5b9f\u88c5\u3092\u3001Spring MVC\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3063\u3066\u975e\u540c\u671f\u5b9f\u88c5\u306b\u3057\u3066\u307f\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u975e\u540c\u671f\u7528\u306b\u5225\u306eController\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u307e\u305a\u306f\u3001\u4f1d\u7d71\u7684\u306a\u5b9f\u88c5\u65b9\u6cd5\u3067\u3042\u308b`java.util.concurrent.Callable`\u3092\u4f7f\u7528\u3057\u3066\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```java\npackage com.example.component;\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;\n\nimport java.time.LocalDateTime;\nimport java.util.concurrent.Callable;\nimport java.util.concurrent.TimeUnit;\n\n@Controller\n@RequestMapping(\"/async\")\npublic class AsyncController {\n\n    @RequestMapping(method = RequestMethod.GET)\n    public Callable<String> get(@RequestParam(defaultValue = \"0\") long waitSec, Model model) {\n\n        Console.println(\"Start get.\");\n\n        model.addAttribute(\"acceptedTime\", LocalDateTime.now());\n\n        // Callable\u306ecall\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\n        // Callable\u306f\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306a\u306e\u3067Java SE 8+\u306a\u3089\u30e9\u30e0\u30c0\u5f0f\u304c\u4f7f\u3048\u307e\u3059\u3002\n        Callable<String> asyncProcessing = () -> {\n\n            Console.println(\"Start Async processing.\");\n\n            heavyProcessing(waitSec, model);\n\n            Console.println(\"End Async processing.\");\n\n            return \"complete\";\n        };\n\n        Console.println(\"End get.\");\n\n        return asyncProcessing;\n    }\n\n    private void heavyProcessing(long waitSec, Model model) {\n\n        if (waitSec == 999) {\n            throw new IllegalStateException(\"Special parameter for confirm error.\");\n        }\n\n        try {\n            TimeUnit.SECONDS.sleep(waitSec);\n        } catch (InterruptedException e) {\n            Thread.interrupted();\n        }\n\n        model.addAttribute(\"completedTime\", LocalDateTime.now());\n\n    }\n\n    @ExceptionHandler(Exception.class)\n    public String handleException() {\n        return \"error\";\n    }\n\n}\n```\n\n`DispatcherServlet`\u3068\u5404\u7a2eFilter\u3067\u975e\u540c\u671f\u30ea\u30af\u30a8\u30b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n```xml:src/main/webapp/WEB-INF/web.xml\n<servlet>\n    <servlet-name>appServlet</servlet-name>\n    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n    <!-- ... -->\n    <async-supported>true</async-supported> <!-- \u975e\u540c\u671f\u3092\u30b5\u30dd\u30fc\u30c8 -->\n</servlet>\n```\n\nFilter\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001`<filter>`\u30bf\u30b0\u306e\u4e2d\u306b\u3082`<async-supported>true</async-supported>`\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```xml:src/main/webapp/WEB-INF/web.xml\n<filter>\n    <filter-name>CharacterEncodingFilter</filter-name>\n    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n    <async-supported>true</async-supported>\n    <!-- ... -->\n</filter>\n```\n\n\u306a\u304a\u3001Spring MVC\u306e\u975e\u540c\u671f\u6a5f\u80fd\u306f\u3001Java Config\u306b`@EnableWebMvc`\u3092\u4ed8\u4e0e\u3059\u308b\u3068\u81ea\u52d5\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fbXML\u3067Bean\u5b9a\u7fa9\u3092\u884c\u3046\u5834\u5408\u306f\u3001`<mvc:async-support>`\u30bf\u30b0\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u672c\u6295\u7a3f\u3067\u306fJava Config\u30d9\u30fc\u30b9\u3067\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\ncURL\u3084\u30d6\u30e9\u30a6\u30b6\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001`complete.jsp`\u3067\u751f\u6210\u3055\u308c\u305fHTML\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n\n```bash\n$ curl -D - http://localhost:8080/async?waitSec=1\n```\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 200 \nSet-Cookie: JSESSIONID=74481230450E5A2A4CB6A376408A8F21;path=/;HttpOnly\nContent-Type: text/html;charset=ISO-8859-1\nContent-Language: ja-JP\nContent-Length: 204\nDate: Tue, 04 Oct 2016 15:28:25 GMT\n\n\n\n\n\n<html>\n<body>\n<h2>Processing is complete !</h2>\n<p>Accept timestamp is 2016-10-05T00:28:24.161</p>\n<p>Complete timestamp is 2016-10-05T00:28:25.172</p>\n<p><a href=\"/\">Go to Top</a></p>\n</body>\n</html>\n```\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb(\u30b5\u30fc\u30d0\u30fc)\n2016-10-05T00:28:24.161 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T00:28:24.163 Thread[http-nio-8080-exec-1,5,main]: End get.\n2016-10-05T00:28:24.168 Thread[MvcAsync1,5,main]: Start Async processing.\n2016-10-05T00:28:25.172 Thread[MvcAsync1,5,main]: End Async processing.\n2016-10-05T00:28:25.663 Thread[http-nio-8080-exec-2,5,main]: Called complete.jsp\n2016-10-05T00:28:25.663 Thread[http-nio-8080-exec-2,5,main]: FORWARD\n```\n\n\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u30ed\u30b0\u3092\u307f\u308b\u3068\u3001\u975e\u540c\u671f\u51e6\u7406\u306e\u90e8\u5206\u304cTomcat\u306e\u30b9\u30ec\u30c3\u30c9(`http-nio-8080-exec-xx`)\u3067\u306f\u306a\u304f\u3001Spring MVC\u304c\u7528\u610f\u3057\u305f\u30b9\u30ec\u30c3\u30c9(`MvcAsync1`)\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n## \u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u5229\u7528\u3059\u308b\n\nSpring MVC\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3067\u306f\u3001\u6b8b\u5ff5\u306a\u304c\u3089\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u306f\u4f7f\u7528\u305b\u305a\u3001\u975e\u540c\u671f\u5b9f\u884c\u306e\u4f9d\u983c\u306e\u5ea6\u306b\u65b0\u3057\u304f\u30b9\u30ec\u30c3\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```java\n@EnableWebMvc // \u6ce8\u610f\uff1aSpring Boot\u306e\u5834\u5408\u306f\u3001@EnableWebMvc\u306f\u3064\u3051\u3061\u3083\u30c0\u30e1\uff01\uff01\n@ComponentScan(\"com.example.component\")\n@Configuration\npublic class WebMvcConfig extends WebMvcConfigurerAdapter {\n    // ...\n    @Override\n    public void configureAsyncSupport(AsyncSupportConfigurer configurer) {\n        configurer.setTaskExecutor(mvcAsyncExecutor()); // \u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\n    }\n\t\n    // ThreadPoolTaskExecutor\u306fDI\u30b3\u30f3\u30c6\u30ca\u4e0a\u3067\u7ba1\u7406\u3059\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\n    // Spring\u306eDI\u30b3\u30f3\u30c6\u30ca\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306b\u5408\u308f\u305b\u3066\u3001\u9069\u5207\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067initialize\u3068shutdown\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\n    @Bean\n    public AsyncTaskExecutor mvcAsyncExecutor() {\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n        executor.setMaxPoolSize(10);\n        return executor;\n    }\n}\n```\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb(\u30b5\u30fc\u30d0\u30fc)\n2016-10-05T00:35:20.574 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T00:35:20.576 Thread[http-nio-8080-exec-1,5,main]: End get.\n2016-10-05T00:35:20.580 Thread[mvcAsyncExecutor-1,5,main]: Start Async processing.\n2016-10-05T00:35:21.583 Thread[mvcAsyncExecutor-1,5,main]: End Async processing.\n2016-10-05T00:35:22.065 Thread[http-nio-8080-exec-2,5,main]: Called complete.jsp\n2016-10-05T00:35:22.065 Thread[http-nio-8080-exec-2,5,main]: FORWARD\n```\n\n\u4fee\u6b63\u524d\u306f\u3001Spring MVC\u304c\u7528\u610f\u3057\u305f\u30b9\u30ec\u30c3\u30c9(`MvcAsync1`)\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u305f\u90e8\u5206\u304c\u3001\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u304b\u3089\u53d6\u5f97\u3057\u305f\u30b9\u30ec\u30c3\u30c9(`mvcAsyncExecutor-1`)\u306b\u306a\u308a\u307e\u3057\u305f\u3002 **\u539f\u5247\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3001\u5b89\u5168\u304b\u3064\u52b9\u7387\u7684\u306b\u30b9\u30ec\u30c3\u30c9\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u5fc3\u304c\u3051\u307e\u3057\u3087\u3046\u3002**\n\n# Spring MVC\u306e\u975e\u540c\u671f\u51e6\u7406\u3092\u7d10\u89e3\u304f\n\n\u3068\u308a\u3042\u3048\u305a\u3001Servlet\u6a19\u6e96\u306e\u6a5f\u80fd\u3068\u9023\u643a\u3057\u305fSpring MVC\u306e\u975e\u540c\u671f\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3055\u3070\u304f\u3053\u3068\u306f\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u3069\u306e\u3088\u3046\u306bSpring MVC\u304c\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u306e\u304b\u304c\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3067\u3059\u3002\u300c[Servlet\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u306b\u89e6\u308c\u3066\u307f\u308b](http://qiita.com/kazuki43zoo/items/8be79f98621f90865b78)\u300d\u3067\u7d39\u4ecb\u3057\u307e\u3057\u305f\u304c\u3001\u975e\u540c\u671f\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u305f\u3053\u3068\u3092\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306b\u901a\u77e5\u3059\u308b\u305f\u3081\u306b\u306f\u3001`AsyncContext#dispatch`\u304b`AsyncContext#complete`\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3067\u3082\u3001\u5b9f\u88c5\u3057\u305fController\u30af\u30e9\u30b9\u3067\u306f\u3044\u3063\u3055\u3044\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8API\u3092\u610f\u8b58\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3053\u3053\u304b\u3089\u306f\u3001Spring MVC\u304c\u3069\u306e\u3088\u3046\u306b\u3057\u3066Servlet\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u3068\u9023\u643a\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\n![spring-mvc-async-callable.png](https://qiita-image-store.s3.amazonaws.com/0/117313/3ed20e47-6497-a271-7fef-569fa42218de.png)\n\n\n\u3056\u3063\u304f\u308a\u7d75\u306b\u3059\u308b\u3053\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\u5b9f\u969b\u306b\u306f\u3082\u3063\u3068\u591a\u304f\u306e\u30af\u30e9\u30b9\u304c\u767b\u5834\u3057\u307e\u3059\u304c\u3001\u30b7\u30f3\u30d7\u30eb\u306b\u3059\u308b\u305f\u3081\u306b\u304b\u306a\u308a\u7c21\u7565\u5316\u3057\u3066\u3044\u307e\u3059\u3002\uff08\u305d\u308c\u3067\u3082\u3061\u3087\u3063\u3068\u8907\u96d1\u3067\u3059\u306d\u30fb\u30fb\u30fb\uff09\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u5b8c\u4e86\u5f8c\u306e\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u5148\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306e\u30d1\u30b9\u3068\u540c\u3058\u306b\u306a\u308b\u3068\u3044\u3046\u70b9\u3067\u3057\u3087\u3046\u3002\u3064\u307e\u308a\u3001\u518d\u5ea6Spring MVC(`DispatcherServlet`)\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3046\u3051\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u5185\u5bb9\u306b\u5bfe\u5fdc\u3059\u308bHandler\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u7d4c\u8def\u306b\u5165\u3063\u3066\u3044\u304f\u308f\u3051\u3067\u3059\u3002\u305d\u308c\u3058\u3083\u301cHandler\u30e1\u30bd\u30c3\u30c9\u304c\uff12\u56de\u547c\u3070\u308c\u3061\u3083\u3046\u306e\uff01\uff1f\u3068\u601d\u3063\u305f\u65b9\u3082\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u30fb\u30fb\u30fb\u3082\u3061\u308d\u3093\u5927\u4e08\u592b\u3067\u3059\uff01\uff01Spring MVC\u304c\u3061\u3083\u3093\u3068\u5236\u5fa1\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u7d75\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u975e\u540c\u671f\u51e6\u7406\u5b8c\u4e86\u5f8c\u306b\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u3055\u308c\u308b\u3068\u3001Spring MVC\u306e\u5185\u90e8\u3067\u306f`ConcurrentResultHandlerMethod`\u3068\u3044\u3046\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3088\u3046\u306a\u4ed5\u639b\u3051\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002`ConcurrentResultHandlerMethod`\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u306e\u7d50\u679c(View\u540d\u306a\u3069)\u3092\u8fd4\u5374\u3059\u308b\u304b\u3001\u307e\u305f\u306f\u975e\u540c\u671f\u51e6\u7406\u4e2d\u306b\u767a\u751f\u3057\u305f\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3057\u307e\u3059\u3002\u3069\u3061\u3089\u306b\u305b\u3088\u3001\u4ee5\u964d\u306e\u51e6\u7406\u306f\u3001\u901a\u5e38\u306eSpring MVC\u306e\u6319\u52d5\u3068\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5177\u4f53\u7684\u306b\u306f\u30fb\u30fb\u30fb\n\n* View\u540d(\u753b\u9762\u9077\u79fb\u578b\u30a2\u30d7\u30ea)\u306a\u3089\u3001`ViewResolver`\u306b\u3088\u3063\u3066\u89e3\u6c7a\u3055\u308c\u305f`View`\u304c\u751f\u6210\u3057\u305f\u30c7\u30fc\u30bf\n* `@ResponseBody` + JavaBean(RESTful\u306a\u30a2\u30d7\u30ea)\u306a\u3089\u3001`HttpMessageConverter`\u304c\u751f\u6210\u3057\u305f\u30c7\u30fc\u30bf\n* \u4f8b\u5916\u306a\u3089\u3001`ExceptionResolver`\u3084\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306e\u30a8\u30e9\u30fc\u30da\u30fc\u30b8\u6a5f\u80fd\u306b\u3088\u3063\u3066\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3055\u308c\u3066\u751f\u6210\u3057\u305f\u30c7\u30fc\u30bf\n\n\u304c\u30ec\u30b9\u30dd\u30f3\u30b9\u3055\u308c\u307e\u3059\u3002\n\n> **Note: WebAsyncTask**\n> `org.springframework.web.context.request.async.WebAsyncTask`\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001`Callable`\u4f7f\u7528\u6642\u306e\u975e\u540c\u671f\u51e6\u7406\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u52d5\u4f5c(\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3084`AsyncTaskExecutor`)\u3092\u500b\u5225\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u672c\u6295\u7a3f\u3067\u306f\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306e\u3068\u3053\u308d\u3067\u4f7f\u3044\u65b9\u3092\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002\n\n## Spring MVC\u7ba1\u7406\u5916\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u4f7f\u3046\n\nSpring MVC\u304c\u7ba1\u7406\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u4ee5\u5916\u3067\u975e\u540c\u671f\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n![spring-mvc-async-deferred.png](https://qiita-image-store.s3.amazonaws.com/0/117313/128ccef3-cee0-4a4c-e200-9017cd854430.png)\n\n\u7d75\u306e\u4e2d\u3067\u306f\u3001`org.springframework.web.context.request.async.DeferredResult`\u3092Controller\u304b\u3089\u8fd4\u5374\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u306e\uff12\u3064\u306e\u30af\u30e9\u30b9\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n* `org.springframework.util.concurrent.ListenableFuture`\n* `java.util.concurrent.CompletableFuture` (Java SE 8+)\n\n`ListenableFuture`\u3068`CompletableFuture`\u3092Controller\u304b\u3089\u8fd4\u5374\u3059\u308b\u3068\u3001Spring MVC\u5074\u3067`DeferredResult`\u3092\u751f\u6210\u3057\u3001`ListenableFuture`\u3068`CompletableFuture`\u3068\u9023\u643a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n## `@Async`\u306e\u5229\u7528\n\nSpring MVC\u306e\u975e\u540c\u671f\u51e6\u7406\u3068\u306f\u76f4\u63a5\u95a2\u9023\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001Spring Framework\u306f\u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u975e\u540c\u671f(\u5225\u30b9\u30ec\u30c3\u30c9)\u3067\u5b9f\u884c\u3059\u308b\u4ed5\u7d44\u307f\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u4ed5\u7d44\u307f\u3092\u6709\u52b9\u306b\u3059\u308b\u305f\u3081\u306eBean\u5b9a\u7fa9\u3092\u884c\u3063\u305f\u4e0a\u3067\u3001\u975e\u540c\u671f\u3067\u5b9f\u884c\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u306b`@org.springframework.scheduling.annotation.Async`\u3092\u4ed8\u4e0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u30af\u30e9\u30b9\u30ec\u30d9\u30eb\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3059\u308b\u3068\u3001\u3059\u3079\u3066\u306epublic\u30e1\u30bd\u30c3\u30c9\u304c\u975e\u540c\u671f\u5b9f\u884c\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001Spring MVC\u7ba1\u7406\u5916\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u969b\u306b\u3001\u975e\u5e38\u306b\u4fbf\u5229\u306a\u4ed5\u7d44\u307f\u3067\u3059\u3002\n\n```java:\u30e1\u30bd\u30c3\u30c9\u30ec\u30d9\u30eb\u306b\u6307\u5b9a\n@Async // \u5225\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u308b\npublic void save(InputStream in, File file) {\n    // ...\n}\n```\n\n```java:\u30af\u30e9\u30b9\u30ec\u30d9\u30eb\u306b\u6307\u5b9a\n@Async // \u3059\u3079\u3066\u306epublic\u30e1\u30bd\u30c3\u30c9\u304c\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u308b\n@Service\npublic class AsyncService {\n    // ...    \n}\n```\n\n> **Note: Executor\u306e\u6307\u5b9a**\n> \u5225\u30b9\u30ec\u30c3\u30c9\u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u969b\u306b\u5229\u7528\u3059\u308b`TaskExecutor`\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n>\n> ```java\n> @Async(\"registrationTaskExecutor\") // \u4f7f\u7528\u3057\u305f\u3044TaskExecutor\u306eBean\u540d\u3092\u6307\u5b9a\u3059\u308b\n> public void save(InputStream in, File file) {\n>     // ...\n> } \n\n`@Async`\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306aBean\u5b9a\u7fa9\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002\nSpring Framework\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3067\u306f\u3001\u6b8b\u5ff5\u306a\u304c\u3089\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u306f\u4f7f\u7528\u305b\u305a\u3001\u975e\u540c\u671f\u5b9f\u884c\u306e\u4f9d\u983c\u306e\u5ea6\u306b\u65b0\u3057\u304f\u30b9\u30ec\u30c3\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3059\u3002\u8981\u4ef6\u306b\u5fdc\u3058\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u304f\u3060\u3055\u3044\u3002 **\u539f\u5247\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3001\u5b89\u5168\u304b\u3064\u52b9\u7387\u7684\u306b\u30b9\u30ec\u30c3\u30c9\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u5fc3\u304c\u3051\u307e\u3057\u3087\u3046\u3002**\n\n```java\npackage com.example.config;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.task.AsyncTaskExecutor;\nimport org.springframework.scheduling.annotation.EnableAsync;\nimport org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;\n\nimport java.util.concurrent.Executor;\n\n@Configuration\n@EnableAsync // @Async\u306e\u6709\u52b9\u5316\npublic class AsyncConfig {\n    @Bean\n    public AsyncTaskExecutor taskExecutor() { // \u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\"taskExecutor\"\u3068\u3044\u3046\u540d\u524d\u306eBean\u304c\u5229\u7528\u3055\u308c\u308b\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n        executor.setMaxPoolSize(10);\n        return executor;\n    }\n}\n```\n\n\u306a\u304a\u3001`@Async`\u306e\u8a2d\u5b9a\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3068\u3057\u3066`org.springframework.scheduling.annotation.AsyncConfigurerSupport`\u3068\u3044\u3046\u30af\u30e9\u30b9\u3082\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002`AsyncConfigurerSupport`\u306f`AsyncConfigurer`\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u304a\u308a\u3001`AsyncConfigurer`\u306f\u4ee5\u4e0b\u306e2\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n```java\npublic interface AsyncConfigurer {\n    // @Async\u3067\u5229\u7528\u3059\u308bTaskExecutor\u3092\u8fd4\u5374\u3059\u308b\n    // null\u3092\u8fd4\u5374\u3059\u308b\u3068SimpleAsyncTaskExecutor\u304c\u5229\u7528\u3055\u308c\u308b\n    Executor getAsyncExecutor();\n\n    // @Async\u304c\u9069\u7528\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u6642\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u884c\u3046AsyncUncaughtExceptionHandler\u3092\u8fd4\u5374\u3059\u308b\n    // null\u3092\u8fd4\u5374\u3059\u308b\u3068SimpleAsyncUncaughtExceptionHandler\u304c\u5229\u7528\u3055\u308c\u308b\n    AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler();\n}\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5229\u7528\u3055\u308c\u308b`SimpleAsyncUncaughtExceptionHandler`\u306f\u3001ERROR\u30ec\u30d9\u30eb\u306e\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u3060\u3051\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n## DeferredResult\u306e\u5229\u7528\n\n`DeferredResult`\u306f\u3001Spring\u72ec\u81ea\u306e\u30af\u30e9\u30b9\u3067\u3001\u975e\u540c\u671f\u51e6\u7406\u3067\u884c\u3063\u305f\u7d50\u679c\u3092Spring MVC\u5074\u306b\u901a\u77e5\u3059\u308b\u5f79\u5272\u3092\u62c5\u3044\u307e\u3059\u3002`DeferredResult`\u3092\u76f4\u63a5\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9f\u88c5\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\n@Controller\n@RequestMapping(\"/async\")\npublic class AsyncController {\n\n    // ...\n\n    @RequestMapping(path = \"deferred\", method = RequestMethod.GET)\n    public DeferredResult<String> getReferred(@RequestParam(defaultValue = \"0\") long waitSec, Model model) {\n\n        Console.println(\"Start get.\");\n\n        model.addAttribute(\"acceptedTime\", LocalDateTime.now());\n\n        // \u975e\u540c\u671f\u51e6\u7406\u3092\u547c\u3073\u51fa\u3059\u3002DeferredResult\u3092\u975e\u540c\u671f\u51e6\u7406\u306b\u5f15\u304d\u6e21\u3059\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3002\n        DeferredResult<String> deferredResult = new DeferredResult<>();\n        asyncHelper.asyncProcessing(model, waitSec, deferredResult);\n\n        Console.println(\"End get.\");\n\n        return deferredResult; // DeferredResult\u3092\u8fd4\u5374\u3059\u308b\n    }\n\n}\n```\n\n\u4ee5\u4e0b\u304c\u975e\u540c\u671f\u51e6\u7406\u306e\u5b9f\u88c5\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\npackage com.example.component;\n\nimport org.springframework.scheduling.annotation.Async;\nimport org.springframework.stereotype.Component;\nimport org.springframework.ui.Model;\nimport org.springframework.web.context.request.async.DeferredResult;\n\nimport java.time.LocalDateTime;\nimport java.util.concurrent.TimeUnit;\n\n@Component\npublic class AsyncHelper {\n\n    @Async // \u975e\u540c\u671f\u5b9f\u884c\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306b@Async\u3092\u4ed8\u4e0e\u3059\u308b\n    public void asyncProcessing(Model model, long waitSec, DeferredResult<String> deferredResult) {\n        Console.println(\"Start Async processing.\");\n\n        if (waitSec == 999) {\n            // \u4f8b\u5916\u306f\u30b9\u30ed\u30fc\u3067\u306f\u306a\u304f\u3001setErrorResult\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\n            // throw new IllegalStateException(\"Special parameter for confirm error.\");\n            deferredResult.setErrorResult(new IllegalStateException(\"Special parameter for confirm error.\"));\n            return;\n        }\n\n        sleep(waitSec);\n\n        model.addAttribute(\"completedTime\", LocalDateTime.now());\n\n        deferredResult.setResult(\"complete\"); // \u51e6\u7406\u7d50\u679c\u306fDeferredResult#setResult\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u3002\n\n        Console.println(\"End Async processing.\");\n    }\n\n    private void sleep(long timeout) {\n        try {\n            TimeUnit.SECONDS.sleep(timeout);\n        } catch (InterruptedException e) {\n            Thread.interrupted();\n        }\n    }\n}\n```\n\ncURL\u3084\u30d6\u30e9\u30a6\u30b6\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001`complete.jsp`\u3067\u751f\u6210\u3055\u308c\u305fHTML\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n\n```base\n$ curl -D - http://localhost:8080/async/deferred?waitSec=1\n```\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 200 \nSet-Cookie: JSESSIONID=4E8812A3288081EB6A88EA9E38E9EBC4;path=/;HttpOnly\nContent-Type: text/html;charset=ISO-8859-1\nContent-Language: ja-JP\nContent-Length: 204\nDate: Tue, 04 Oct 2016 15:41:48 GMT\n\n\n\n\n\n<html>\n<body>\n<h2>Processing is complete !</h2>\n<p>Accept timestamp is 2016-10-05T00:41:46.672</p>\n<p>Complete timestamp is 2016-10-05T00:41:47.685</p>\n<p><a href=\"/\">Go to Top</a></p>\n</body>\n</html>\n```\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb(\u30b5\u30fc\u30d0\u30fc)\n2016-10-05T00:41:46.672 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T00:41:46.675 Thread[http-nio-8080-exec-1,5,main]: End get.\n2016-10-05T00:41:46.682 Thread[taskExecutor-1,5,main]: Start Async processing.\n2016-10-05T00:41:47.688 Thread[taskExecutor-1,5,main]: End Async processing.\n2016-10-05T00:41:48.193 Thread[http-nio-8080-exec-2,5,main]: Called complete.jsp\n2016-10-05T00:41:48.193 Thread[http-nio-8080-exec-2,5,main]: FORWARD\n```\n\n`Callable`\u3068\u540c\u69d8\u306b\u3001\u975e\u540c\u671f\u5b9f\u884c\u3055\u308c\u305f\u7d50\u679c\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u5374\u3067\u304d\u307e\u3057\u305f\u3002\n\u6700\u521d\u306b\u7d39\u4ecb\u3057\u3066\u304a\u3044\u3066\u306a\u3093\u3067\u3059\u304c\u30fb\u30fb\u30fb\u500b\u4eba\u7684\u306b\u306f\u306a\u3093\u3068\u306a\u304f\u3053\u306e\u65b9\u6cd5\u306f\u597d\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093 :sweat_smile: \nSpring\u5c02\u7528\u306e\u30af\u30e9\u30b9\u306b**\u5f37\u304f**\u4f9d\u5b58\u3057\u3066\u304a\u308a\u3001\u51e6\u7406\u7d50\u679c\u3092`setResult`\u3084`setErrorResult`\u3068\u3044\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u660e\u793a\u7684\u306b\u547c\u3073\u51fa\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3082\u306a\u3093\u3068\u306a\u304f\u30a4\u30de\u30a4\u30c1\u30fb\u30fb\u30fb\u304b\u306a\u301c(\u7279\u306b`setErrorResult`\u306e\u65b9\u306f\u304b\u306a\u308a\u5fae\u5999\u30fb\u30fb\u30fb)\u3002\u3068\u306f\u3044\u3048\u3001\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3068\u3001Spring MVC\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3092\u7c21\u5358\u306b(\u30a2\u30c9\u30db\u30c3\u30af\uff1f\u306b)\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u308b\u306e\u3067\u3001\u4f7f\u3044\u305f\u304f\u306a\u308b\u3053\u3068\u306f\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n## ListenableFuture\u306e\u5229\u7528\n\nSpring\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308bJava SE\u6a19\u6e96\u306e`java.util.concurrent.Future`\u306e\u30b5\u30d6\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u3059\u3002\u3053\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u4f7f\u3046\u3068\u3001\u975e\u540c\u671f\u51e6\u7406\u304c\u6210\u529f\u3057\u305f\u6642\u3068\u5931\u6557\u3057\u305f\u6642\u306b\u4efb\u610f\u306e\u51e6\u7406\u3092\u7d44\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Spring\u63d0\u4f9b\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306a\u306e\u3067Spring\u3068\u306e\u7d50\u5408\u5ea6\u306f\u6b8b\u308b\u3082\u306e\u306e\u3001\u30d9\u30fc\u30b9\u3068\u306a\u308b\u8003\u3048\u65b9\u304cJava SE\u6a19\u6e96\u306e`Future`\u306a\u306e\u3067\u3001`DeferredResult`\u306b\u6bd4\u3079\u308b\u3068\u72ec\u81ea\u8272\u306f\u8584\u304f\u306a\u308a\u307e\u3059\u3002\n\n```java\n@Controller\n@RequestMapping(\"/async\")\npublic class AsyncController {\n\n    // ...\n\n    @RequestMapping(path = \"listenable\", method = RequestMethod.GET)\n    public ListenableFuture<String> getListenable(@RequestParam(defaultValue = \"0\") long waitSec, Model model) {\n\n        Console.println(\"Start get.\");\n\n        model.addAttribute(\"acceptedTime\", LocalDateTime.now());\n\n        ListenableFuture<String> future = asyncHelper.asyncProcessingForListenable(model, waitSec);\n        future.addCallback(\n                Console::println, // \u6b63\u5e38\u7d42\u4e86\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\n                Console::println  // \u4f8b\u5916\u767a\u751f\u6642\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\n        );\n\n        Console.println(\"End get.\");\n        return future;\n    }\n}\n```\n\n```java\n@Component\npublic class AsyncHelper {\n    // ...\n    @Async // \u975e\u540c\u671f\u5b9f\u884c\u5bfe\u8c61\u306e\u30e1\u30bd\u30c3\u30c9\n    public ListenableFuture<String> asyncProcessingForListenable(Model model, long waitSec) {\n        Console.println(\"Start Async processing.\");\n        if (waitSec == 999) {\n            throw new IllegalStateException(\"Special parameter for confirm error.\");\n        }\n\n        sleep(waitSec);\n\n        model.addAttribute(\"completedTime\", LocalDateTime.now());\n\n        Console.println(\"End Async processing.\");\n\n        return new AsyncResult<>(\"complete\");\n    }\n    // ...\n}\n```\n\ncURL\u3084\u30d6\u30e9\u30a6\u30b6\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3001\u30b5\u30fc\u30d0\u5074\u306e\u52d5\u4f5c\u3092\u30ed\u30b0\u3092\u307f\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```base\n$ curl -D - http://localhost:8080/async/listenable?waitSec=1\n```\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb(\u30b5\u30fc\u30d0\u30fc)\n2016-10-05T00:46:19.949 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T00:46:19.954 Thread[http-nio-8080-exec-1,5,main]: End get.\n2016-10-05T00:46:19.959 Thread[taskExecutor-1,5,main]: Start Async processing.\n2016-10-05T00:46:20.964 Thread[taskExecutor-1,5,main]: End Async processing.\n2016-10-05T00:46:20.965 Thread[taskExecutor-1,5,main]: complete    \u2190 \u975e\u540c\u671f\u51e6\u7406\u6210\u529f\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u3067\u51fa\u529b\u3057\u305f\u30ed\u30b0\n2016-10-05T00:46:21.459 Thread[http-nio-8080-exec-2,5,main]: Called complete.jsp\n2016-10-05T00:46:21.459 Thread[http-nio-8080-exec-2,5,main]: FORWARD\n```\n\n\u30ed\u30b0\u3092\u307f\u308b\u3068\u3001\u975e\u540c\u671f\u51e6\u7406\u6210\u529f\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\n## CompletableFuture\u306e\u5229\u7528\n\n`CompletableFuture`\u306fJava SE 8\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u30af\u30e9\u30b9\u3067\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001Spring\u306b\u4f9d\u5b58\u3057\u306a\u3044\u5b9f\u88c5\u306b\u3059\u308b\u3053\u3068\u3067\u304d\u307e\u3059\u3002\uff08\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u5225\u306e\u7b87\u6240\u3067Spring\u306b\u4f9d\u5b58\u3057\u3061\u3083\u3063\u3066\u3044\u307e\u3059\u304c :smirk: \u3001\u7406\u8ad6\u7684\u306b\u306f\u5b8c\u5168\u306b\u975e\u4f9d\u5b58\u306b\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\uff01\uff01\uff09 \u500b\u4eba\u7684\u306b\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3092\u500b\u5225\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u306a\u3089\u3001`CompletableFuture`\u3092\u5229\u7528\u3059\u308b\u306e\u304c\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n```java\n@Controller\n@RequestMapping(\"/async\")\npublic class AsyncController {\n\n    // ...\n\n    @RequestMapping(path = \"completable\", method = RequestMethod.GET)\n    public CompletableFuture<String> getCompletable(@RequestParam(defaultValue = \"0\") long waitSec, Model model) {\n\n        Console.println(\"Start get.\");\n\n        model.addAttribute(\"acceptedTime\", LocalDateTime.now());\n\n        CompletableFuture<String> future = asyncHelper.asyncProcessingForCompletable(model, waitSec);\n        future.thenAccept(Console::println); // \u6b63\u5e38\u7d42\u4e86\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\n\n        Console.println(\"End get.\");\n        return future;\n    }\n}\n```\n\n```java\n@Component\npublic class AsyncHelper {\n    // ...\n    @Async // \u975e\u540c\u671f\u5b9f\u884c\u5bfe\u8c61\u306e\u30e1\u30bd\u30c3\u30c9\n    public CompletableFuture<String> asyncProcessingForCompletable(Model model, long waitSec) {\n        Console.println(\"Start Async processing.\");\n        if (waitSec == 999) {\n            throw new IllegalStateException(\"Special parameter for confirm error.\");\n        }\n\n        sleep(waitSec);\n\n        model.addAttribute(\"completedTime\", LocalDateTime.now());\n\n        Console.println(\"End Async processing.\");\n\n        return CompletableFuture.completedFuture(\"complete\");\n    }\n    // ...\n}\n```\n\ncURL\u3084\u30d6\u30e9\u30a6\u30b6\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3001\u30b5\u30fc\u30d0\u5074\u306e\u52d5\u4f5c\u3092\u30ed\u30b0\u3092\u307f\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```base\n$ curl -D - http://localhost:8080/async/completable?waitSec=1\n```\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb(\u30b5\u30fc\u30d0\u30fc)\n2016-10-05T00:49:58.061 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T00:49:58.070 Thread[http-nio-8080-exec-1,5,main]: End get.\n2016-10-05T00:49:58.076 Thread[taskExecutor-1,5,main]: Start Async processing.\n2016-10-05T00:49:59.081 Thread[taskExecutor-1,5,main]: End Async processing.\n2016-10-05T00:49:59.083 Thread[taskExecutor-1,5,main]: complete    \u2190 \u975e\u540c\u671f\u51e6\u7406\u6210\u529f\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u3067\u51fa\u529b\u3057\u305f\u30ed\u30b0\n2016-10-05T00:49:59.558 Thread[http-nio-8080-exec-2,5,main]: Called complete.jsp\n2016-10-05T00:49:59.558 Thread[http-nio-8080-exec-2,5,main]: FORWARD\n```\n\n\u30ed\u30b0\u3092\u307f\u308b\u3068\u3001\u975e\u540c\u671f\u51e6\u7406\u6210\u529f\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002`CompletableFuture`\u306b\u306f\u3001`thenAccept`\u30e1\u30bd\u30c3\u30c9\u4ee5\u5916\u306b\u3082\u69d8\u3005\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u8a73\u7d30\u306f\u300c[CompletableFuture\u306eJava Doc](https://docs.oracle.com/javase/jp/8/docs/api/java/util/concurrent/CompletableFuture.html)\u300d\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\n# \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u306e\u6307\u5b9a\n\n\u975e\u540c\u671f\u51e6\u7406\u306b\u306f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024(\u30df\u30ea\u79d2\u5358\u4f4d)\u3092\u8a2d\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u306e\u8a2d\u5b9a\u306b\u4f9d\u5b58\u3057\u307e\u3059\u304c\u3001Spring MVC\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067\u660e\u793a\u7684\u306b\u3057\u3066\u3044\u308b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u3053\u3053\u3067\u6307\u5b9a\u3057\u305f\u5024\u3092\u8d85\u3048\u3066\u3082\u975e\u540c\u671f\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u305f\u3081\u306b`DispatcherServlet`\u306b\u51e6\u7406\u8981\u6c42\u304c\u6765\u307e\u3059\u304c\u3001**\u975e\u540c\u671f\u51e6\u7406\u306f\u5b9f\u884c\u3055\u308c\u7d9a\u3051\u3066\u3044\u308b\u3068\u3044\u3046\u70b9\u3092\u610f\u8b58\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002**\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5f8c\u306b\u975e\u540c\u671f\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u305f\u5834\u5408\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u5b8c\u4e86\u5f8c\u306e\u9077\u79fb\u51e6\u7406(`AsyncContext#dispatch`)\u304c\u884c\u308f\u308c\u306a\u3044\u3088\u3046\u306bSpring MVC\u304c\u5236\u5fa1\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059 :+1: \n\n> **Note: \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5f8c\u306e\u9077\u79fb\u51e6\u7406\u306e\u6291\u6b62\u5236\u5fa1\u306e\u4ed5\u7d44\u307f**\n> [StandardServletAsyncWebRequest](https://github.com/spring-projects/spring-framework/blob/master/spring-web/src/main/java/org/springframework/web/context/request/async/StandardServletAsyncWebRequest.java)\u306e\u4e2d\u3067\u5236\u5fa1\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u306fServlet\u6a19\u6e96\u306e`javax.servlet.AsyncListener`\u3092\u5b9f\u88c5\u3057\u3066\u304a\u308a\u3001`onComplete`\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u51e6\u7406\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308b\u30d5\u30e9\u30b0(`AtomicBoolean`)\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u3067\u3001\uff12\u91cd\u3067\u9077\u79fb\u51e6\u7406\u304c\u884c\u308f\u308c\u306a\u3044\u3088\u3046\u306b\u5236\u5fa1\u3057\u3066\u3044\u307e\u3059\u3002\u5b9f\u969b\u306b\u9077\u79fb\u51e6\u7406\u3092\u5236\u5fa1\u3057\u3066\u3044\u308b\u306e\u306f\u3001`WebAsyncManager#setConcurrentResultAndDispatch`\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u3059\u3002\u3053\u308c\u306f\u3001[IBM\u306e\u30da\u30fc\u30b8](http://www.ibm.com/support/knowledgecenter/SSAW57_8.5.5/com.ibm.websphere.nd.doc/ae/cweb_asyncservlet.html?lang=ja)\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u305f\u5b9f\u88c5\u65b9\u6cd5\u3068\u540c\u3058\u3063\u307d\u3044\u3067\u3059\u306d\u3002\n\n## \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\nSpring MVC\u306e\u8a2d\u5b9a\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u30923\u79d2\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```java\n@EnableWebMvc // \u6ce8\u610f\uff1aSpring Boot\u306e\u5834\u5408\u306f\u3001@EnableWebMvc\u306f\u3064\u3051\u3061\u3083\u30c0\u30e1\uff01\uff01\n@ComponentScan(\"com.example.component\")\n@Configuration\npublic class WebMvcConfig extends WebMvcConfigurerAdapter {\n    // ...\n    @Override\n    public void configureAsyncSupport(AsyncSupportConfigurer configurer) {\n        configurer.setDefaultTimeout(3000); // \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u9593\u306e\u6307\u5b9a\n    }\n}\n```\n\n## Spring MVC\u7ba1\u7406\u4e0b\u306e\u30b9\u30ec\u30c3\u30c9\u4f7f\u7528\u6642\u306e\u51e6\u7406\u56fa\u6709\u306e\u6307\u5b9a\u5024\n\n`WebAsyncTask`\u306e\u4f7f\u7528\u3059\u308b\u3068\u3001\u51e6\u7406\u56fa\u6709\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u30922\u79d2\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```java\n@RequestMapping(method = RequestMethod.GET)\npublic WebAsyncTask<String> get(@RequestParam(defaultValue = \"0\") long waitSec, Model model) {\n    // ...\n    return new WebAsyncTask<>(2000, asyncProcessing);\n}\n```\n\n## Spring MVC\u7ba1\u7406\u5916\u306e\u30b9\u30ec\u30c3\u30c9\u4f7f\u7528\u6642\u306e\u51e6\u7406\u56fa\u6709\u306e\u6307\u5b9a\u5024\n\n`DeferredResult`\u306e\u4f7f\u7528\u3059\u308b\u3068\u3001\u51e6\u7406\u56fa\u6709\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u30924\u79d2\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```java\n@RequestMapping(path = \"deferred\", method = RequestMethod.GET)\npublic DeferredResult<String> getReferred(@RequestParam(defaultValue = \"0\") long waitSec, Model model) {\n    // ...\n    DeferredResult<String> deferredResult = new DeferredResult<>(4000L);\n    // ...\n}\n```\n\n# \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u306e\u52d5\u4f5c\n\n\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306b\u3088\u3063\u3066\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u304c\u691c\u77e5\u3055\u308c\u308b\u3068\u3001Spring MVC\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3060\u3068503(Service Unavailable)\u306b\u306a\u308a\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fbSpring 4.2\u7cfb\u306f4.2.7.RELEASE\u3001Spring 4.3\u7cfb\u306f4.3.2\u307e\u3067\u306f500(Internal Server Error)\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3057\u307e\u3057\u3087\u3046\u3002\n\n```text\n$ curl -D - http://localhost:8080/async/completable?waitSec=4\n```\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 503 \nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Tue, 04 Oct 2016 15:55:06 GMT\nConnection: close\n\n{\"timestamp\":1475596506606,\"status\":503,\"error\":\"Service Unavailable\",\"exception\":\"org.springframework.web.context.request.async.AsyncRequestTimeoutException\",\"message\":\"No message available\",\"path\":\"/async/completable\"}\n```\n\n\u306a\u304a\u3001\u4f8b\u5916\u3092`@ExceptionHandler`\u3092\u4f7f\u7528\u3057\u3066\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u5834\u5408\u306f\u3001Controller\u3084`@ControllerAdvice`\u30af\u30e9\u30b9\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3068\u671f\u5f85\u901a\u308a\u306b\u52d5\u4f5c\u3057\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u30fb\u30fb\u30fb\n\n```java\n@ExceptionHandler\n@ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)\npublic String handleException(Exception e) {\n    return \"error\";\n}\n```\n\n\u3068\u3044\u3063\u305f\u611f\u3058\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3068\u3001\u5148\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066`AsyncRequestTimeoutException`\u304c\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u3001`AsyncRequestTimeoutException`\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b`@ExceptionHandler`\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3059\u308b\u306e\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n```java\n@ExceptionHandler\n@ResponseStatus(HttpStatus.SERVICE_UNAVAILABLE)\npublic String handleAsyncRequestTimeoutException(AsyncRequestTimeoutException e) {\n    return \"timeout\";\n}\n```\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u7a7a\u3067\u3088\u3044\u5834\u5408\u306f\u8fd4\u308a\u5024\u3092void\u306b\u3059\u308c\u3070OK\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u304c\u767a\u751f\u3057\u305f\u3053\u3068\u3092\u901a\u77e5\u3059\u308bHTML\u3092\u8fd4\u5374\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u30a8\u30e9\u30fc\u7528\u306eView(JSP)\u3082\u7528\u610f\u3057\u307e\u3059\u3002\n\n```jsp:src/main/webapp/WEB-INF/timeout.jsp\n<%@ page import=\"com.example.component.Console\" trimDirectiveWhitespaces=\"true\" %>\n<% Console.println(\"Called timeout.jsp\"); %>\n<% Console.println(request.getDispatcherType()); %>\n\n<html>\n<body>\n<h2>Timeout!</h2>\n<p><a href=\"${pageContext.request.contextPath}/\">Go to Top</a></p>\n</body>\n</html>\n```\n\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u767a\u751f\u3059\u308b\u3088\u3046\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3068\u3001\u30a8\u30e9\u30fc\u753b\u9762\u306eHTML + 503(Service Unavailable)\u304c\u30ec\u30b9\u30dd\u30f3\u30b9\u3055\u308c\u307e\u3059 :tada:\n\n```bash\n$ curl -L -D - http://localhost:8080/async/completable?waitSec=4\n```\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 503 \nSet-Cookie: JSESSIONID=CE9005C6067914827C61E4B9B52B3A4A;path=/;HttpOnly\nContent-Type: text/html;charset=ISO-8859-1\nContent-Language: ja-JP\nContent-Length: 80\nDate: Tue, 04 Oct 2016 16:15:49 GMT\nConnection: close\n\n<html>\n<body>\n<h2>Timeout!</h2>\n<p><a href=\"/\">Go to Top</a></p>\n</body>\n</html>\n```\n\n# \u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n\n\u57fa\u672c\u7684\u306b\u306f\u975e\u540c\u671f\u51e6\u7406\u56fa\u6709\u306e\u5bfe\u51e6\u306f\u4e0d\u8981\u3067\u3001\u975e\u540c\u671f\u51e6\u7406\u4e2d\u306b\u767a\u751f\u3057\u305f\u4f8b\u5916\u306f\u3001Spring MVC\u306e`ExceptionResolver`\u306b\u3088\u3063\u3066\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059 :laughing: \n\n```java\n@Controller\n@RequestMapping(\"/async\")\npublic class AsyncController {\n    private static final Logger logger = LoggerFactory.getLogger(AsyncController.class);\n    // ...\n    @ExceptionHandler // ExceptionResolver\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u7528\u3057\u3066\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u53ef\u80fd\n    @ResponseStatus(HttpStatus.INTERNAL_SERVER_ERROR)\n    public String handleException(Exception e) {\n        logger.error(\"System error is occurred.\", e);\n        return \"error\";\n    }\n}\n```\n\n\u3053\u3053\u3067\u306f\u3001Controller\u306b\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u304c\u3001\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3067\u884c\u3046\u3053\u3068\u306e\u65b9\u304c\u591a\u3044\u3068\u601d\u3044\u306e\u3067\u3001\u5b9f\u969b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u306e\u73fe\u5834\u3067\u306f`@ControllerAdvice`\u3092\u5229\u7528\u3059\u308b\u306e\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002`@ControllerAdvice`\u306e\u5b9f\u88c5\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u300c[Spring MVC(+Spring Boot)\u4e0a\u3067\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u5171\u901a\u51e6\u7406\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u7406\u89e3\u3059\u308b](http://qiita.com/kazuki43zoo/items/757b557c05f548c6c5db#controlleradvice)\u300d\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u30a8\u30e9\u30fc\u753b\u9762\u3092\u5fdc\u7b54\u3059\u308bView(JSP)\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```jsp:src/main/webapp/WEB-INF/error.jsp\n<%@ page import=\"com.example.component.Console\" trimDirectiveWhitespaces=\"true\" %>\n<% Console.println(\"Called error.jsp\"); %>\n<% Console.println(request.getDispatcherType()); %>\n\n<html>\n<body>\n<h2>Error!</h2>\n<p><a href=\"${pageContext.request.contextPath}/\">Go to Top</a></p>\n</body>\n</html>\n```\n\n> **Note: Spring Boot\u4e0a\u3067JSP\u3092\u4f7f\u3046\u5834\u5408\u306f\u30fb\u30fb\u30fb**\n>\n> Spring Boot\u3067View\u3068\u3057\u3066JSP\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\"error\"\u3068\u3044\u3046\u540d\u524dView(JSP)\u3092\u914d\u7f6e\u3057\u305f\u3060\u3051\u3067\u306fSpring Boot\u304c\u63d0\u4f9b\u3059\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a8\u30e9\u30fc\u30da\u30fc\u30b8\u3092\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u30a8\u30e9\u30fc\u30da\u30fc\u30b8\u3092\u4e0a\u66f8\u304d\u3059\u308b\u5834\u5408\u306f\u3001error.jsp\u3092\u914d\u7f6e\u3057\u305f\u3046\u3048\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a8\u30e9\u30fc\u30da\u30fc\u30b8\u3092\u7121\u52b9\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n>\n> ```properties:application.properties\n> server.error.whitelabel.enabled=false\n> ```\n\n\n\n\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3068\u3001\u30a8\u30e9\u30fc\u753b\u9762\u304c\u30ec\u30b9\u30dd\u30f3\u30b9\u3055\u308c\u307e\u3059 :+1: \n\n```bash\n$ curl -L -D - http://localhost:8080/async/completable?waitSec=999\n```\n\n```text\nHTTP/1.1 500 \nSet-Cookie: JSESSIONID=F375D29720A50CA5A81A28EDB501BCB7;path=/;HttpOnly\nContent-Type: text/html;charset=ISO-8859-1\nContent-Language: ja-JP\nContent-Length: 78\nDate: Tue, 04 Oct 2016 16:26:16 GMT\nConnection: close\n\n<html>\n<body>\n<h2>Error!</h2>\n<p><a href=\"/\">Go to Top</a></p>\n</body>\n</html>\n```\n\n## DeferredResult\u4f7f\u7528\u6642\u306e\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n\nHandler\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\u3068\u3057\u3066`DeferredResult`\u3092\u8fd4\u5374\u3059\u308b\u5834\u5408\u306e\u307f\u3001\u500b\u5225\u306e\u5b9f\u88c5\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u30fb\u30fb\u30fb\uff08\u6b8b\u5ff5\u3060\uff09\n`DeferredResult`\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066`DeferredResult`\u306e`setErrorResult`\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u4f8b\u5916\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001Spring MVC\u306e`ExceptionResolver`\u306b\u3088\u3063\u3066\u4f8b\u5916\u304c\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\n\n```java\ntry {\n    service.anyProcessing();\n} catch (Exception e) { // \u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066\u304b\u3089\u306e\u30fb\u30fb\u30fb\n    deferredResult.setErrorResult(e); // \u3053\u308c\u304c\u5fc5\u8981\uff01\uff01 \uff08\u3053\u308c\u3092\u5fd8\u308c\u308b\u3068\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u304c\u691c\u77e5\u3055\u308c\u308b\u307e\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u5374\u3055\u308c\u306a\u304f\u306a\u308b\u30fb\u30fb\u30fb\uff09\n    return; // \uff0b\u5f8c\u7d9a\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3053\u3068\uff01\uff01\n}\n```\n\n\u3046\u301c\u3093\u30fb\u30fb\u30fb\u3084\u3063\u3071\u308a`DeferredResult`\u306f\u4f7f\u308f\u306a\u3044\u65b9\u304c\u3044\u3044\u306a\u30fb\u30fb\u30fb\u3002\n\n# \u5171\u901a\u51e6\u7406\u306e\u5b9f\u88c5\n\n## ProcessingInterceptor\u306e\u5229\u7528\n\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306e\u3068\u3053\u308d\u3067\u8efd\u304f\u7d39\u4ecb\u3057\u307e\u3057\u305f\u304c\u3001Spring MVC\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u30dd\u30a4\u30f3\u30c8(\u30bf\u30a4\u30df\u30f3\u30b0)\u3067\u5171\u901a\u7684\u306a\u51e6\u7406\u3092\u5b9f\u884c\u3067\u304d\u308b\u4ed5\u7d44\u307f(`CallableProcessingInterceptor` or `DeferredResultProcessingInterceptor`)\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\n| \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u540d | \u8aac\u660e |\n| ------------- | --- |\n| `CallableProcessingInterceptor` | Spring MVC\u7ba1\u7406\u4e0b\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3059\u308b\u975e\u540c\u671f\u51e6\u7406\u5411\u3051\u306e\u4ed5\u7d44\u307f\u3002 |\n| `DeferredResultProcessingInterceptor` | Spring MVC\u7ba1\u7406\u5916\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3059\u308b\u975e\u540c\u671f\u51e6\u7406\u5411\u3051\u306e\u4ed5\u7d44\u307f\u3002 |\n\n\u3053\u306e\uff12\u3064\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306f\u307b\u3068\u3093\u3069\u540c\u3058\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001\u547c\u3073\u51fa\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3082\u57fa\u672c\u7684\u306b\u306f\u4e00\u7dd2\u3067\u3059\u3002\n\n```java:org.springframework.web.context.request.async.CallableProcessingInterceptor\npublic interface CallableProcessingInterceptor {\n    static final Object RESULT_NONE = new Object();\n    static final Object RESPONSE_HANDLED = new Object();\n    <T> void beforeConcurrentHandling(NativeWebRequest request, Callable<T> task) throws Exception;\n    <T> void preProcess(NativeWebRequest request, Callable<T> task) throws Exception;\n    <T> void postProcess(NativeWebRequest request, Callable<T> task, Object concurrentResult) throws Exception;\n    <T> Object handleTimeout(NativeWebRequest request, Callable<T> task) throws Exception;\n    <T> void afterCompletion(NativeWebRequest request, Callable<T> task) throws Exception;\n}\n```\n\n```java:org.springframework.web.context.request.async.DeferredResultProcessingInterceptor\n    <T> void beforeConcurrentHandling(NativeWebRequest request, DeferredResult<T> deferredResult) throws Exception;\n    <T> void preProcess(NativeWebRequest request, DeferredResult<T> deferredResult) throws Exception;\n    <T> void postProcess(NativeWebRequest request, DeferredResult<T> deferredResult, Object concurrentResult) throws Exception;\n    <T> boolean handleTimeout(NativeWebRequest request, DeferredResult<T> deferredResult) throws Exception;\n    <T> void afterCompletion(NativeWebRequest request, DeferredResult<T> deferredResult) throws Exception;\n}\n```\n\n| \u30e1\u30bd\u30c3\u30c9\u540d | \u5b9f\u884c\u30b9\u30ec\u30c3\u30c9 | \u8aac\u660e |\n| ------- | ------ | ---- |\n| `beforeConcurrentHandling` | AP\u30b5\u30fc\u30d0\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u53d7\u4ed8\u30b9\u30ec\u30c3\u30c9 | `ServletRequest#startAsync`\u3092\u5b9f\u884c\u3059\u308b\u76f4\u524d\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 |\n| `preProcess` |  | `ServletRequest#startAsync`\u3092\u5b9f\u884c\u3057\u305f\u76f4\u5f8c\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 |\n| `postProcess` |  | \u975e\u540c\u671f\u51e6\u7406\u304c\u7d42\u4e86\u3057\u3001`AsyncContext#dispatch`\u3092\u5b9f\u884c\u3059\u308b\u76f4\u524d\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 |\n| `handleTimeout` | AP\u30b5\u30fc\u30d0\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u8fd4\u5374\u30b9\u30ec\u30c3\u30c9 | \u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u691c\u77e5\u3057\u305f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 (`AsyncListener#onTimeout`\u304c\u30c8\u30ea\u30ac\u30fc) |\n| `afterCompletion` |  | Servlet\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u3092\u7d42\u4e86\u3057\u305f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u3002 (`AsyncListener#onComplete`\u3068`onError`\u304c\u30c8\u30ea\u30ac\u30fc) |\n\n\u306a\u304a\u3001Servlet\u6a19\u6e96\u306e\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc(`AsyncListener`)\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u3064\u3044\u3066\u306f\u3001[\u3053\u3061\u3089](http://qiita.com/kazuki43zoo/items/8be79f98621f90865b78#%E9%9D%9E%E5%90%8C%E6%9C%9F%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E7%94%A8%E3%81%AE%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%83%AA%E3%82%B9%E3%83%8A%E3%83%BC)\u306b\u7c21\u5358\u306b\u8a18\u8f09\u3057\u3066\u3042\u308a\u307e\u3059\u3002\u8a00\u8449\u3060\u3051\u3060\u3068\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u7d75\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\n![spring-mvc-async-processing-interceptor.png](https://qiita-image-store.s3.amazonaws.com/0/117313/a418e84f-e374-8492-13b2-c9994b5293cc.png)\n\n\n\u7d75\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3059\u308b\u305f\u3081\u306b\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f\u7701\u7565\u3057\u307e\u3057\u305f\u304c\u3001\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u691c\u77e5\u3059\u308b\u3068\u3001\u7d75\u306e\u4e2d\u306e\u300c/async(2\u56de\u76ee)\u300d\u306e\u304b\u308f\u308a\u306b\u3001Spring MVC\u5074\u3067\u5b9f\u88c5\u3057\u3066\u3044\u308b`onTimeout`\u30e1\u30bd\u30c3\u30c9\u304c\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u307e\u3059\u3002\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u5f8c\u306f\u3001ProcessingInterceptor\u306e`handleTimeout`\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n## CallableProcessingInterceptor\u306e\u5b9f\u88c5\n\n`CallableProcessingInterceptor`\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306f\u3001\u7a7a\u5b9f\u88c5\u304c\u884c\u308f\u308c\u3066\u3044\u308bAdapter\u30af\u30e9\u30b9(`CallableProcessingInterceptorAdapter`)\u3092\u7d99\u627f\u3057\u3001 \u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u306e\u304c\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\n```java\npublic class CustomCallableProcessingInterceptor extends CallableProcessingInterceptorAdapter {\n    // \u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\n}\n```\n\n\u4f5c\u6210\u3057\u305f\u30af\u30e9\u30b9\u3092Spring MVC\u306b\u9069\u7528\u3057\u307e\u3059\u3002\n\n```java\n@EnableWebMvc // \u6ce8\u610f\uff1aSpring Boot\u306e\u5834\u5408\u306f\u3001@EnableWebMvc\u306f\u3064\u3051\u3061\u3083\u30c0\u30e1\uff01\uff01\n@ComponentScan(\"com.example.component\")\n@Configuration\npublic class WebMvcConfig extends WebMvcConfigurerAdapter {\n    // ...\n    @Override\n    public void configureAsyncSupport(AsyncSupportConfigurer configurer) {\n        // ...\n        configurer.registerCallableInterceptors(new CustomCallableProcessingInterceptor());\n    }\n}\n```\n\n## DeferredResultProcessingInterceptor\u306e\u5b9f\u88c5\n\n`DeferredResultProcessingInterceptor`\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306f\u3001\u7a7a\u5b9f\u88c5\u304c\u884c\u308f\u308c\u3066\u3044\u308bAdapter\u30af\u30e9\u30b9(`DeferredResultProcessingInterceptorAdapter`)\u3092\u7d99\u627f\u3057\u3001 \u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u306e\u304c\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\n```java\npublic class CustomDeferredResultProcessingInterceptor extends DeferredResultProcessingInterceptorAdapter {\n    // \u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\n}\n```\n\n```java\n@Override\npublic void configureAsyncSupport(AsyncSupportConfigurer configurer) {\n    // ...\n    configurer.registerDeferredResultInterceptors(new CustomDeferredResultProcessingInterceptor());\n}\n```\n\n## AsyncHandlerInterceptor\u306e\u5229\u7528\n\n`AsyncHandlerInterceptor`\u306f\u3001`HandlerInterceptor`\u306e\u30b5\u30d6\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u958b\u59cb\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u306b\u5bfe\u3059\u308b\u7d42\u4e86\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306e\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```java:org.springframework.web.servlet.AsyncHandlerInterceptor\npublic interface AsyncHandlerInterceptor extends HandlerInterceptor {\n    void afterConcurrentHandlingStarted(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception;\n}\n```\n\n`afterConcurrentHandlingStarted`\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306f\u3001ProcessingInterceptor\u306e`postProcess`\u30e1\u30bd\u30c3\u30c9\u3088\u308a\u5f8c\u3067\u3001\u6b63\u78ba\u306b\u3044\u3046\u3068`DispatcherServlet`\u306e\u30e1\u30a4\u30f3\u51e6\u7406\u306e\u6700\u5f8c\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u540c\u671f\u578b\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b`HandlerInterceptor#afterCompletion`\u30e1\u30bd\u30c3\u30c9\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb\u975e\u540c\u671f\u51e6\u7406\u3092\u958b\u59cb\u3057\u305f\u5834\u5408\u306f\u3001`HandlerInterceptor#postHandle`\n\u3068`afterCompletion`\u30e1\u30bd\u30c3\u30c9\u306f\u547c\u3073\u51fa\u3055\u308c\u307e\u305b\u3093\u3002\u3068\u3001\u66f8\u3044\u3066\u307f\u305f\u3082\u306e\u306e\u30fb\u30fb\u30fb\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u306d :sweat_smile: \u305d\u3093\u306a\u6642\u306f\u7d75\u3067\u8868\u73fe\u3059\u308b\u306e\u304c\u4e00\u756a\u3067\u3059\u3002\n\n![spring-mvc-async-handler-interceptor.png](https://qiita-image-store.s3.amazonaws.com/0/117313/5e5dcd75-d998-c884-4efe-aa91b9c2bc9d.png)\n\n## AsyncHandlerInterceptor\u306e\u5b9f\u88c5\n\n`AsyncHandlerInterceptor`\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306f\u3001\u7a7a\u5b9f\u88c5\u304c\u884c\u308f\u308c\u3066\u3044\u308bAdapter\u30af\u30e9\u30b9(`HandlerInterceptorAdapter`)\u3092\u7d99\u627f\u3057\u3001 \u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u306e\u304c\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\n```java\npublic class CustomHandlerInterceptor implements AsyncHandlerInterceptor {\n    // \u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\n    @Override\n    public void afterConcurrentHandlingStarted(\n            HttpServletRequest request, HttpServletResponse response, Object handler)\n            throws Exception {\n        Console.println(\"afterConcurrentHandlingStarted\");\n    }\n}\n```\n\n\u4f5c\u6210\u3057\u305f\u30af\u30e9\u30b9\u3092Spring MVC\u306b\u9069\u7528\u3057\u307e\u3059\u3002\n\n```java\n@EnableWebMvc // \u6ce8\u610f\uff1aSpring Boot\u306e\u5834\u5408\u306f\u3001@EnableWebMvc\u306f\u3064\u3051\u3061\u3083\u30c0\u30e1\uff01\uff01\n@ComponentScan(\"com.example.component\")\n@Configuration\npublic class WebMvcConfig extends WebMvcConfigurerAdapter {\n    // ...\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(new CustomHandlerInterceptor());\n    }\n}\n```\n\n# Spring Boot\u4e0a\u3067\u306e\u975e\u540c\u671f\u30ea\u30af\u30a8\u30b9\u30c8\n\n\u3053\u3053\u3067\u306f\u3001REST API\u3092\u4f7f\u3063\u3066\u52d5\u304d\u3092\u78ba\u8a8d\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305a\u30fb\u30fb\u30fb[SPRING INITIALIZR](https://start.spring.io/) \u53c8\u306fIDE(STS or IDEA)\u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u3066Web\u5411\u3051\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306e\u6295\u7a3f\u306b\u306f\u5168\u304f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u304c\u3001JSR-310 Date and Time API\u306e\u30af\u30e9\u30b9\u3092Jackson\u3067\u6b63\u3057\u304f\u6271\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3082\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u884c\u3063\u3066\u304a\u304d\u307e\u3059\u3002(\u8aac\u660e\u306f\u5272\u611b\u3057\u307e\u3059\u30fb\u30fb)\n\n```xml:pom.xml\n<dependency>\n    <groupId>com.fasterxml.jackson.datatype</groupId>\n    <artifactId>jackson-datatype-jsr310</artifactId>\n</dependency>\n``` \n\n```properties:src/main/resources/application.properties\nspring.jackson.serialization.write-dates-as-timestamps=false\n```\n\n## \u975e\u540c\u671f\u30ea\u30af\u30a8\u30b9\u30c8\u5bfe\u5fdc\u306eREST API\u3092\u4f5c\u3063\u3066\u307f\u308b\n\n\u3053\u3053\u3067\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u4ed8\u3051\u305f\u6642\u9593\u3068\u975e\u540c\u671f\u51e6\u7406\u304c\u7d42\u4e86\u3057\u305f\u6642\u9593\u3092\u8fd4\u5374\u3059\u308bREST API\u3092\u4f5c\u308a\u307e\u3059\u3002\uff08\u3063\u3066\u304b\u3001REST API\u3067\u306f\u306a\u3044\u3067\u3059\u306d\u30fb\u30fb\u30fb :sweat_smile: \uff09\n\n\u307e\u305a\u3001JSON\u3067\u8fd4\u5374\u3059\u308b\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308bJavaBean\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```java\npackage com.example.component;\n\nimport java.time.LocalDateTime;\n\npublic class ProcessingResult {\n    private LocalDateTime acceptedTime;\n    private LocalDateTime completedTime;\n    // ...\n}\n````\n\n\u3064\u304e\u306b\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u884c\u3046`@Async`\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\u3002\n\n```java\npackage com.example.component;\n\nimport org.springframework.scheduling.annotation.Async;\nimport org.springframework.stereotype.Component;\n\nimport java.time.LocalDateTime;\nimport java.util.concurrent.CompletableFuture;\nimport java.util.concurrent.TimeUnit;\n\n@Component\npublic class AsyncHelper {\n    // ...\n    @Async\n    public CompletableFuture<ProcessingResult> asyncProcessing(ProcessingResult result, long waitSec) {\n        Console.println(\"Start Async processing.\");\n\n        if (waitSec == 999) {\n            throw new IllegalStateException(\"Special parameter for confirm error.\");\n        }\n\n        sleep(waitSec);\n\n        result.setCompletedTime(LocalDateTime.now());\n\n        Console.println(\"End Async processing.\");\n\n        return CompletableFuture.completedFuture(result);\n    }\n    // ...\n}\n```\n\n\u3055\u3044\u3054\u306b\u3001`@RestController`\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```java\npackage com.example.component;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.time.LocalDateTime;\nimport java.util.concurrent.CompletableFuture;\n\n@RequestMapping(\"/api/async\")\n@RestController\npublic class AsyncRestController {\n    @Autowired\n    AsyncHelper asyncHelper;\n\n    @RequestMapping(method = RequestMethod.GET)\n    public CompletableFuture<ProcessingResult> get(@RequestParam(defaultValue = \"0\") long waitSec) {\n        Console.println(\"Start get.\");\n\n        ProcessingResult result = new ProcessingResult();\n        result.setAcceptedTime(LocalDateTime.now());\n\n        CompletableFuture<ProcessingResult> future = asyncHelper.asyncProcessing(result, waitSec);\n\n        Console.println(\"End get.\");\n        return future;\n    }\n}\n```\n\ncURL\u3067REST API\u3092\u547c\u3073\u51fa\u3059\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n\n```bash\n$ curl -D - http://localhost:8080/api/async?waitSec=1\n```\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 200 \nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Tue, 04 Oct 2016 16:45:30 GMT\n\n{\"acceptedTime\":\"2016-10-05T01:45:29.403\",\"completedTime\":\"2016-10-05T01:45:30.406\"}\n```\n\n\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u30ed\u30b0\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb(\u30b5\u30fc\u30d0\u30fc)\n2016-10-05T01:45:29.403 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T01:45:29.403 Thread[http-nio-8080-exec-1,5,main]: Start Async processing.\n2016-10-05T01:45:30.406 Thread[http-nio-8080-exec-1,5,main]: End Async processing.\n2016-10-05T01:45:30.408 Thread[http-nio-8080-exec-1,5,main]: End get.\n```\n\n\u3059\u3079\u3066\u540c\u3058\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u3061\u3083\u3063\u3066\u307e\u3059\u306d\u30fb\u30fb\u30fb :sob: \n\u3055\u3059\u304c\u306eSpring Boot\u3082\u81ea\u52d5\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u304f\u308c\u306a\u304b\u3063\u305f\u307f\u305f\u3044\u3067\u3059\u306d\u3002\u304a\u305d\u3089\u304f\u3001`@Async`\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u306e\u304c\u539f\u56e0\u3060\u3068\u601d\u3046\u306e\u3067\u3001`@EnableAsync`\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```java\npackage com.example;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.scheduling.annotation.EnableAsync;\n\n@EnableAsync // \u8ffd\u52a0\n@SpringBootApplication\npublic class DemoMvcAsyncApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(DemoMvcAsyncApplication.class, args);\n    }\n}\n```\n\nREST API\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u4eca\u5ea6\u306f\u5225\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u4f7f\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\n2016-10-05T01:48:08.342 Thread[http-nio-8080-exec-3,5,main]: Start get.\n2016-10-05T01:48:08.342 Thread[http-nio-8080-exec-3,5,main]: End get.\n2016-10-05T01:48:08.342 Thread[SimpleAsyncTaskExecutor-2,5,main]: Start Async processing.\n2016-10-05T01:48:09.346 Thread[SimpleAsyncTaskExecutor-2,5,main]: End Async processing.\n```\n\n\u3053\u306e\u30ed\u30b0\u304b\u3089\u3060\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u51e6\u7406\u304c\u3069\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b`HandlerInterceptor`\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```java\npackage com.example.component;\n\nimport org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\npublic class CompletionLoggingHandlerInterceptor extends HandlerInterceptorAdapter {\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n        Console.println(\"afterCompletion\");\n    }\n}\n```\n\n\u672c\u6295\u7a3f\u3067\u306f\u3001\u7c21\u6613\u7684\u306b`@SpringBootApplication`\u30af\u30e9\u30b9\u3067Spring MVC\u306e\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002(\u5b9f\u969b\u306e\u30a2\u30d7\u30ea\u958b\u767a\u3067\u306f\u3001`WebMvcConfig`\u7684\u306a\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\uff01\uff01)\n\n```java\n\n@EnableAsync\n@SpringBootApplication\npublic class DemoMvcAsyncApplication extends WebMvcConfigurerAdapter {\n    public static void main(String[] args) {\n        SpringApplication.run(DemoMvcAsyncApplication.class, args);\n    }\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(new CompletionLoggingHandlerInterceptor()); // HandlerInterceptor\u306e\u9069\u7528\n    }\n}\n```\n\nREST API\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001Spring Boot\u3067\u3082\u975e\u540c\u671f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u6271\u3048\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\n2016-10-05T01:51:08.065 Thread[http-nio-8080-exec-3,5,main]: Start get.\n2016-10-05T01:51:08.065 Thread[http-nio-8080-exec-3,5,main]: End get.\n2016-10-05T01:51:08.065 Thread[SimpleAsyncTaskExecutor-2,5,main]: Start Async processing.\n2016-10-05T01:51:09.069 Thread[SimpleAsyncTaskExecutor-2,5,main]: End Async processing.\n2016-10-05T01:51:09.074 Thread[http-nio-8080-exec-4,5,main]: afterCompletion\n```\n\n## \u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u3046\n\n\u30ed\u30b0\u3092\u307f\u308b\u3068\u3001\u3084\u306f\u308a\u6b8b\u5ff5\u306a\u304c\u3089\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u304c\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u3067\u3059\u306d\u30fb\u30fb\u30fb\u3002\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\uff01\uff01\uff01 `\"taskExecutor\"`\u3068\u3044\u3046\u540d\u524d\u3067\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u3046`AsyncTaskExecutor`\u3092Bean\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u3067OK\u3067\u3059\u3002\n\n```java\n@EnableAsync\n@SpringBootApplication\npublic class DemoMvcAsyncApplication extends WebMvcConfigurerAdapter {\n    // ...\n    @Bean // Bean\u5b9a\u7fa9\u3092\u8ffd\u52a0\n    public AsyncTaskExecutor taskExecutor() {\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n        executor.setMaxPoolSize(10);\n        return executor;\n    }\n}\n```\n\nREST API\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb(\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f`AsyncTaskExecutor`)\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\n2016-10-05T01:52:38.445 Thread[http-nio-8080-exec-1,5,main]: Start get.\n2016-10-05T01:52:38.449 Thread[http-nio-8080-exec-1,5,main]: End get.\n2016-10-05T01:52:38.456 Thread[taskExecutor-1,5,main]: Start Async processing.\n2016-10-05T01:52:39.461 Thread[taskExecutor-1,5,main]: End Async processing.\n2016-10-05T01:52:39.508 Thread[http-nio-8080-exec-2,5,main]: afterCompletion\n```\n\nSpring MVC\u7ba1\u7406\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u4f7f\u3046\u5834\u5408\u3082\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u304b\u3089\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n```java\n@EnableAsync\n@SpringBootApplication\npublic class DemoMvcAsyncApplication extends WebMvcConfigurerAdapter {\n    // ...\n    @Override\n    public void configureAsyncSupport(AsyncSupportConfigurer configurer) {\n        configurer.setTaskExecutor(taskExecutor()); // Spring MVC\u7ba1\u7406\u4e0b\u3067\u3082\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u3092\u4f7f\u3046\n    }\n    // ThreadPoolTaskExecutor\u306fDI\u30b3\u30f3\u30c6\u30ca\u4e0a\u3067\u7ba1\u7406\u3059\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\n    // Spring\u306eDI\u30b3\u30f3\u30c6\u30ca\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306b\u5408\u308f\u305b\u3066\u3001\u9069\u5207\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067initialize\u3068shutdown\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\n    @Bean\n    public AsyncTaskExecutor taskExecutor() {\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n        executor.setMaxPoolSize(10);\n        return executor;\n    }\n}\n```\n\n## \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u306e\u6307\u5b9a\n\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5024\u306e\u6307\u5b9a\u306f\u3001`WebMvcConfigurerAdapter`\u306e`configureAsyncSupport`\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u3059\u308b\u3053\u3068\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u304c\u3001Spring Boot\u3067\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f7f\u3063\u3066\u5168\u4f53\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```properties:src/main/resources/application.properties\nspring.mvc.async.request-timeout=3000\n```\n\n## \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u306e\u52d5\u4f5c\n\nSpring Boot\u56fa\u6709\u306e\u4ed5\u7d44\u307f\u306f\u7279\u306b\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306aJSON\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n\n```\n$ curl -D - http://localhost:8080/api/async?waitSec=4\n```\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 503 \nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Tue, 04 Oct 2016 16:58:17 GMT\nConnection: close\n\n{\"timestamp\":\"2016-10-04T16:58:17.939+0000\",\"status\":503,\"error\":\"Service Unavailable\",\"exception\":\"org.springframework.web.context.request.async.AsyncRequestTimeoutException\",\"message\":\"No message available\",\"path\":\"/api/async\"}\n```\n\n## \u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n\nSpring Boot\u56fa\u6709\u306e\u4ed5\u7d44\u307f\u306f\u7279\u306b\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306aJSON\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n\n```bash\n$ curl -D - http://localhost:8080/api/async?waitSec=999\n```\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\nHTTP/1.1 500 \nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Tue, 04 Oct 2016 17:00:39 GMT\nConnection: close\n\n{\"timestamp\":\"2016-10-04T17:00:39.558+0000\",\"status\":500,\"error\":\"Internal Server Error\",\"exception\":\"java.util.concurrent.CompletionException\",\"message\":\"java.lang.IllegalStateException: Special parameter for confirm error.\",\"path\":\"/api/async\"}\n```\n\nJSON\u3092\u898b\u3066\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3060\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u90e8\u306e\u60c5\u5831\u304c\u6f0f\u6d29\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u958b\u767a\u74b0\u5883\u306a\u3089\u3053\u306eJSON\u3067\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u5546\u7528\u74b0\u5883\u3067\u3053\u306eJSON\u3092\u8fd4\u5374\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u306a\u304a\u3001\u30a8\u30e9\u30fc\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u65b9\u6cd5\u306f\u672c\u6295\u7a3f\u3067\u306f\u6271\u308f\u306a\u3044\u306e\u3067\u3001\u300c[Spring Boot\u306e\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-error-handling)\u300d\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u307e\u3068\u3081\n\n\u4eca\u56de\u306f\u3001Servlet\u6a19\u6e96\u306e\u975e\u540c\u671f\u51e6\u7406\u3092Spring MVC\u3067\u3069\u3046\u3084\u3063\u3066\u5229\u7528\u3059\u308b\u306e\u304b\uff08\u5b9f\u88c5\u3059\u308b\u306e\u304b\uff09\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u7d39\u4ecb\u3057\u305f\u65b9\u5f0f\u306f\u3001AP\u30b5\u30fc\u30d0\u30fc\u306e\u30ea\u30bd\u30fc\u30b9(\u30b9\u30ec\u30c3\u30c9)\u3092\u3067\u304d\u308b\u3060\u3051\u5360\u6709\u305b\u305a\u306b\u52b9\u7387\u7684\u306b\u51e6\u7406\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306b\u5229\u7528\u3059\u308b\u51e6\u7406\u65b9\u5f0f\u3067\u3059\u3002\u6b21\u56de\u306f\u3001\u300c[HTTP\u306e\u5206\u5272\u30ec\u30b9\u30dd\u30f3\u30b9(`\"Transfer-Encoding: chunked\"`)\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3057\u305fPush\u578b\u306e\u975e\u540c\u671f\u51e6\u7406](http://qiita.com/kazuki43zoo/items/53b79fe91c41cc5c2e59)\u300d\u3092\u3001Spring MVC\u304c\u3069\u306e\u3088\u3046\u306b\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u30b5\u30fc\u30d0\u30fc\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u52b9\u7387\u7684\u306b\u4f7f\u3046\u3068\u3044\u3046\u89b3\u70b9\u3060\u3068\u3001Servlet 3.1\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305fNon-blocking I/O\u5411\u3051\u306eAPI(`javax.servlet.ReadListener`\u3068`javax.servlet.WriteListener`)\u304c\u3042\u308a\u307e\u3059\u3002Spring MVC\u306b\u304a\u3051\u308bNon-blocking I/O\u306e\u30b5\u30dd\u30fc\u30c8\u306f\u3001[Spring 5](https://jira.spring.io/browse/SPR-14152)\u304b\u3089\u306b\u306a\u308b\u4e88\u5b9a\u3067\u3059\u3002\u307e\u305f\u3001Spring 5\u304b\u3089\u306fReactive Programing\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u3068\u3057\u3066\u3082\bNon-blocking\u306a\u65b9\u5411\u306b\u5411\u304b\u3063\u3066\u3044\u307e\u3059\u3002Spring\u306eReactive\u5bfe\u5fdc\u306b\u3064\u3044\u3066\u306f\u3001@making@github \u306e\u30b9\u30e9\u30a4\u30c9\u300c[Reactive Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 - \u305d\u3057\u3066Spring 5\u3078](http://www.slideshare.net/makingx/reactive-web-spring-5-jjugccc-cccef3)\u300d\u304c\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\n\n# \u53c2\u8003\u30b5\u30a4\u30c8\n* http://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#mvc-ann-async\n* http://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#scheduling-annotation-support-async\n* http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/ \n* http://www.ibm.com/support/knowledgecenter/SSAW57_8.5.5/com.ibm.websphere.nd.doc/ae/cweb_asyncservlet.html?lang=ja\n* http://www.slideshare.net/makingx/reactive-web-spring-5-jjugccc-cccef3\n* http://qiita.com/kazuki43zoo/items/8be79f98621f90865b78\n* http://qiita.com/kazuki43zoo/items/757b557c05f548c6c5db\n", "tags": ["spring-boot", "spring-mvc", "Java", "spring", "JavaEE"]}