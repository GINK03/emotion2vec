{"tags": ["rust", "\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"], "context": " More than 1 year has passed since last update.Rust\u9762\u767d\u305d\u3046\u3060\u306a\u301c\u3068\u601d\u3044\u30011\u65e5\u904a\u3093\u3067\u307f\u305f\u6210\u679c\u3067\u3059\u3002\nRust\u306e\u7279\u5fb4\u3067\u3042\u308b\u30dd\u30a4\u30f3\u30bf\u306e\u501f\u7528\u306a\u3069\u306b\u3064\u3044\u3066\u306f\u3001\u307e\u3060\u7406\u89e3\u304c\u3067\u304d\u3066\u3044\u306a\u3044\u306e\u3067\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u306f\u3058\u3081\u306b\nRust\u306f\u9ad8\u30ab\u30a4\u30f3\u30c9\u578b(\u578b\u5909\u6570\u3092\u53d6\u308b\u578b)\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30e2\u30ca\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\ntrait Monad<X<_>> {\n    ...\n}\nimpl Monad<Option> for Option {\n    ...\n}\n\n\u3053\u308c\u3092\u529b\u696d\u3067\u89e3\u6c7a\u3057\u3001Either\u30e2\u30ca\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u306a\u304a\u3001\u4f7f\u7528\u3057\u305fRust\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306frustc 1.5.0\u3067\u3059\u3002\n\nEither\u578b\u3092\u4f5c\u308b\n\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306bEither\u578b\u304c\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nenum Either<E, A> {\n    Left(E),\n    Right(A),\n}\n\nEither\u578b\u306f\u3001E\u3042\u308b\u3044\u306fA\u306e\u3069\u3061\u3089\u304b\u306e\u578b\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\n\u4e00\u822c\u7684\u306bLeft\u306f\u30a8\u30e9\u30fc\u5024\u3092\u4fdd\u6301\u3057\u3001Right\u304c\u8a08\u7b97\u7d50\u679c\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\n\n\u578b\u30af\u30e9\u30b9\nRust\u306e\u30c8\u30ec\u30a4\u30c8\u306f\u30a2\u30c9\u30db\u30c3\u30af\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u3092\u5b9f\u73fe\u3059\u308b\u3082\u306e\u3067\u3042\u308a\u3001Haskell\u306b\u304a\u3051\u308b\u578b\u30af\u30e9\u30b9\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u5b9f\u969b\u306bShow\u578b\u3092\u5b9a\u7fa9\u3057\u3001Rust\u306b\u304a\u3051\u308b\u578b\u30af\u30e9\u30b9\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001Show\u578b\u306e\u5b9a\u7fa9\u3067\u3059\u3002\ntrait Show {\n    fn show(self) -> String;\n}\n\nShow\u306f\u81ea\u8eab\u3092\u6587\u5b57\u5217\u3067\u8868\u73fe\u3067\u304d\u308b\u3053\u3068\u3092\u5ba3\u8a00\u3057\u307e\u3059\u3002\ni32,String,Either\u578b\u306b\u3064\u3044\u3066\u5b9f\u969b\u306bShow\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nimpl Show for i32 {\n    fn show(self) -> String {\n        self.to_string()\n    }\n}\n\nimpl Show for String {\n    fn show(self) -> String {\n        self\n    }\n}\n\nimpl<E: Show, A: Show> Show for Either<E, A> {\n    fn show(self) -> String {\n        match self {\n            Right(a) => format!(\"Right({})\", a.show()),\n            Left(e) => format!(\"Left({})\", e.show()),\n        }\n    }\n}\n\ni32\u3068String\u578b\u306b\u3064\u3044\u3066\u306f\u898b\u305f\u307e\u307e\u306a\u306e\u3067\u3001Either\u578b\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\u307e\u305a\u3001Either\u306f\u578b\u5909\u6570\u30922\u3064\u53d6\u308b\u305f\u3081\u3001Either<String, i32>\u306e\u3088\u3046\u306b\u4e00\u610f\u306b\u578b\u3092\u6c7a\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u5fc5\u8981\u306a\u578b\u306e\u7d44\u307f\u5408\u308f\u305b\u5168\u3066\u306b\u3064\u3044\u3066Show\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u4eba\u9593\u306e\u3059\u308b\u4ed5\u4e8b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002impl<E, A>\u3068\u3059\u308b\u3053\u3068\u3067\u3001show()\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u3068\u304d\u306eEither\u306b\u5408\u308f\u305b\u3066Show\u3092\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001Either\u304cShow\u3092\u5b9f\u88c5\u3057\u3066\u3044\u3066\u3082\u3001\u5185\u90e8\u306b\u4fdd\u6301\u3059\u308b\u578bE\u3084A\u304cShow\u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u3001show()\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u306e\u304c\u56f0\u96e3\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001E: Show, A: Show\u3068\u3057\u3066\u3001\u5185\u90e8\u306b\u4fdd\u6301\u3059\u308b\u578b\u304cShow\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u5236\u7d04\u3092\u3064\u3051\u307e\u3059\u3002\n\u5b9f\u969b\u306bShow\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nlet r: Either<String, i32> = Right(100);\nprintln!(\"{}\", r.show());\n// Right(100)\n\nlet l: Either<String, i32> = Left(\"Hello\".to_string());\nprintln!(\"{}\", l.show());\n// Left(Hello)\n\ni32\u3068String\u306e\u3069\u3061\u3089\u3082Show\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u305f\u3081\u3001Either\u3067\u3042\u308bRight\u3068Left\u3067show()\u304c\u4f7f\u3048\u3066\u3044\u307e\u3059\u3002\n\n\u30e2\u30ca\u30c9\n\u30e2\u30ca\u30c9\u306b\u3064\u3044\u3066\u306e\u8aac\u660e\u306f\u7701\u304d\u307e\u3059\u3002\n\u30d5\u30a1\u30f3\u30af\u30bf\u7b49\u3092\u7121\u8996\u3057\u3066\u3001\u3044\u304d\u306a\u308a\u30e2\u30ca\u30c9\u5b9f\u88c5\u306b\u3068\u308a\u304b\u304b\u308a\u307e\u3059\u3002(\u30d5\u30a1\u30f3\u30af\u30bf\u306f\u6700\u5f8c\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u306f\u5165\u3063\u3066\u3044\u307e\u3059)\u3002\n\u307e\u305a\u306f\u3001\u30e2\u30ca\u30c9\u306e\u5b9a\u7fa9\u3067\u3059\u3002\ntrait Monad<A, B, MB> {\n    fn return_(a: A) -> Self;\n    fn bind<F>(self, f: F) -> MB where F: Fn(A) -> MB;\n}\n\n\u578b\u5909\u6570\u304c\u3054\u3061\u3083\u3054\u3061\u3083\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u306f\u3058\u3081\u306b\u3067\u8ff0\u3079\u305f\u3088\u3046\u306b\u9ad8\u30ab\u30a4\u30f3\u30c9\u578b\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u30e2\u30ca\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u5168\u3066\u306e\u578b\u3092\u5177\u8c61\u578b\u3067\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\u5404\u578b\u5909\u6570\u304c\u5177\u4f53\u7684\u306b\u306a\u306b\u3092\u8868\u3059\u304b\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\nA: \u73fe\u5728\u5185\u90e8\u306b\u6301\u3063\u3066\u3044\u308b\u578b\nB: \u8a08\u7b97\u5f8c\u5185\u90e8\u306b\u6301\u3064\u578b\nMB: \u8a08\u7b97\u5f8c\u306e\u81ea\u8eab\u306e\u578b\n\nreturn_()\u306fA\u578b\u306e\u5024\u3092\u73fe\u5728\u306e\u30e2\u30ca\u30c9\u306b\u5305\u3093\u3067\u8fd4\u3057\u307e\u3059\u3002\nbind()\u306f\u73fe\u5728\u4fdd\u6301\u3057\u3066\u3044\u308b\u5024\u3092\u4f7f\u3063\u3066\u8a08\u7b97\u3057\u3001\u305d\u306e\u7d50\u679c\u3092\u73fe\u5728\u306e\u30e2\u30ca\u30c9\u306b\u5305\u3093\u3067\u8fd4\u3057\u307e\u3059\u3002\n\u5b9f\u969b\u306bEither\u30e2\u30ca\u30c9\u306e\u5b9f\u88c5\u3092\u898b\u3066\u3082\u3089\u3063\u305f\u65b9\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nimpl<E, A, B> Monad<A, B, Either<E, B>> for Either<E, A> {\n    fn return_(a: A) -> Either<E, A> {\n        Right(a)\n    }\n\n    fn bind<F>(self, f: F) -> Either<E, B> where F: Fn(A) -> Either<E, B> {\n        match self {\n            Right(a) => f(a),\n            Left(e) => Left(e),\n        }\n    }\n}\n\nEither<E, A>\u306b\u3064\u3044\u3066Monad<A, B, Either<E, B>>\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\u5148\u307b\u3069\u578b\u5909\u6570\u306e\u8aac\u660e\u306e\u610f\u5473\u304c\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u307e\u305f\u3001Show\u306e\u3068\u304d\u3068\u540c\u3058\u3088\u3046\u306bimpl<E, A, B>\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30e2\u30ca\u30c9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3060\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u6b63\u78ba\u306a\u578b\u304c\u6c7a\u307e\u308a\u307e\u3059\u3002\nreturn_()\u3067\u306fA\u578b\u3092\u6210\u529f\u3092\u8868\u3059Right\u306b\u5305\u3093\u3067\u8fd4\u3057\u307e\u3059\u3002\nbind()\u3067\u306f\u81ea\u8eab\u304cRight\u3067\u3042\u308b\u306a\u3089\u5185\u90e8\u306e\u5024\u3092\u4f7f\u3063\u3066\u8a08\u7b97\u3092\u884c\u3044\u3001\u81ea\u8eab\u304cLeft\u3067\u3042\u308b\u306a\u3089\u305d\u306e\u307e\u307e\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u3053\u308c\u3067Either\u30e2\u30ca\u30c9\u306e\u5b8c\u6210\u3067\u3059\u3002\n\n\u30e2\u30ca\u30c9\u3092\u4f7f\u3046\n\u3067\u306f\u3001\u5b9f\u969b\u306bEither\u30e2\u30ca\u30c9\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nlet r: Either<String, i32> = Right(100);\nlet r2 = r.bind(|i|\n    Monad::<i32, i32, Either<String, i32>>::return_(i*2i32)\n);\nprintln!(\"{}\", r2.show());\n// Right(200)\n\nlet l: Either<String, i32> = Left(\"Hello\".to_string());\nlet l2 = l.bind(|i|\n    Monad::<i32, i32, Either<String, i32>>::return_(i*2i32)\n);\nprintln!(\"{}\", l2.show());\n// Left(Hello)\n\nRight\u306b\u5bfe\u3057\u3066\u306f\u8a08\u7b97\u304c\u884c\u308f\u308c\u3066\u3044\u3066\u3001Left\u306b\u5bfe\u3057\u3066\u306f\u8a08\u7b97\u304c\u884c\u308f\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u6210\u529f\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u305f\u3060\u3057\u3001\u4e00\u76ee\u3067\u5206\u304b\u308b\u3088\u3046\u306b\u3001return_()\u3092\u4f7f\u3046\u306e\u304c\u3082\u306e\u3059\u3054\u304f\u5927\u5909\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002Either::return_()\u3068\u66f8\u3051\u308b\u304b\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001Monad\u30c8\u30ec\u30a4\u30c8\u306eMB\u3092\u89e3\u6c7a\u3067\u304d\u306a\u3044\u305f\u3081\u304b\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3082\u3061\u308d\u3093return_()\u3092\u4f7f\u308f\u305a\u306bRight()\u3092\u4f7f\u3063\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u3053\u306f\u30e2\u30ca\u30c9\u306e\u4e16\u754c\u306a\u306e\u3067return_()\u4f7f\u3044\u305f\u3044\u3067\u3059\u3088\u306d\u3002\n\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3001return_()\u3068\u3044\u3046\u540c\u3058\u540d\u524d\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nfn return_<MA, A, M: Monad<A, A, MA>>(a: A) -> M {\n    M::return_(a)\n}\n\n\u3053\u306e\u95a2\u6570\u306fMonad::return_()\u306e\u578b\u5909\u6570\u3092\u89e3\u6c7a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u3053\u308c\u3067\u3001\u6e96\u5099\u306f\u6574\u3044\u307e\u3057\u305f\u3002\nEither\u30e2\u30ca\u30c9\u3092\u751f\u304b\u3057\u305f\u8a08\u7b97\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nfn div_by_3(i: i32) -> Either<String, i32> {\n    println!(\"div {}\", i);\n    if i%3 == 0 {\n        Right(i/3)\n    } else {\n        Left(format!(\"'div_by_3' failed when {}\", i))\n    }\n}\n\nfn try_div_by_3_twice(e: Either<String, i32>) -> Either<String, String> {\n    e.bind(|i1|\n        div_by_3(i1).bind(|i2|\n            div_by_3(i2).bind(|i3|\n                return_(format!(\"{} -> {} -> {}\", i1, i2, i3))\n    )))\n}\n\ndiv_by_3()\u306f\u305d\u306e\u540d\u306e\u901a\u308a\u3001\u5165\u529b\u5024\u30923\u3067\u5272\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u30013\u3067\u5272\u308a\u5207\u308c\u306a\u3044\u5024\u306b\u3064\u3044\u3066\u306f\u3001Left\u3092\u4f7f\u3063\u3066\u30a8\u30e9\u30fc\u3092\u5831\u544a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u95a2\u6570\u306e\u5148\u982d\u3067println!()\u3057\u3066\u3044\u308b\u306e\u306f\u8a08\u7b97\u904e\u7a0b\u3092\u898b\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u3067\u3059\u3002\ntry_div_by_3_twice()\u306fdiv_by_3()\u30922\u56de\u5b9f\u884c\u3057\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u8a08\u7b97\u904e\u7a0b\u3067\u5165\u529b\u5024\u304c\u3069\u306e\u3088\u3046\u306b\u5909\u5316\u3057\u305f\u306e\u304b\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u6559\u3048\u3066\u304f\u308c\u307e\u3059\u3002\u6ce8\u76ee\u3057\u3066\u6b32\u3057\u3044\u306e\u306freturn_()\u3092\u4f7f\u3063\u3066\u3044\u308b\u90e8\u5206\u3067\u3001\u6700\u521d\u3068\u6bd4\u3079\u308b\u3068\u660e\u3089\u304b\u306b\u7c21\u5358\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3067\u306f\u3001\u5b9f\u969b\u306b\u3044\u308d\u3044\u308d\u306aEither\u306e\u5024\u306b\u3064\u3044\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\nlet a = Right(9);\nlet b = try_div_by_3_twice(a);\nprintln!(\"{}\", b.show());\n// div 9\n// div 3\n// Right(9 -> 3 -> 1)\n\nlet a = Right(2);\nlet b = try_div_by_3_twice(a);\nprintln!(\"{}\", b.show());\n// div 2\n// Left('div_by_3' failed when 2)\n\nlet a = Left(\"I'm Left!\".to_string());\nlet b = try_div_by_3_twice(a);\nprintln!(\"{}\", b.show());\n// Left(I'm Left!)\n\nRight(9)\u3067\u306f\u3001Right(9 -> 3 -> 1)\u3068\u3044\u3046\u3088\u3046\u306b\u30013\u30672\u56de\u5272\u308a\u7b97\u3092\u884c\u3063\u305f\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nRight(2)\u3067\u306f\u30012\u306f3\u3067\u5272\u308a\u5207\u308c\u306a\u3044\u305f\u3081\u5931\u6557\u3057\u3001Left('div_by_3' failed when 2)\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u307e\u305fdiv 2\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001div_by_3()\u304c\u4e00\u5ea6\u547c\u3070\u308c\u305f\u3053\u3068\u306f\u78ba\u8a8d\u3067\u304d\u307e\u3059\u304c\u3001\u4e00\u5ea6\u5931\u6557\u3057\u305f\u306e\u3067\u3001\u4ee5\u964d\u306e\u8a08\u7b97\u306f\u7121\u8996\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nLeft(\"I'm Left!\".to_string())\u3067\u306f\u3001\u5165\u529b\u5024\u304c\u305d\u3082\u305d\u3082\u5931\u6557\u3057\u3066\u3044\u308b\u306e\u3067try_div_by_3_twice()\u3067\u306f\u4f55\u3082\u8a08\u7b97\u304c\u884c\u308f\u308c\u305a\u306b\u305d\u306e\u307e\u307e\u306e\u5024\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u3068\u3081\nRust\u3067\u306f\u9ad8\u30ab\u30a4\u30f3\u30c9\u578b\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u30e2\u30ca\u30c9\u30c8\u30ec\u30a4\u30c8\u3092\u4f5c\u6210\u3057\u3001Either\u30e2\u30ca\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u3082\u3061\u308d\u3093Either\u3060\u3051\u3067\u306a\u304f\u6a19\u6e96\u306eOption\u7b49\u306b\u3064\u3044\u3066\u3082\u5b9f\u88c5\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nRust\u306b\u306f\u30de\u30af\u30ed\u3082\u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u30e2\u30ca\u30c9\u7528\u306e\u69cb\u6587\u306a\u3069\u304c\u4f5c\u308c\u308c\u3070\u3088\u308a\u5145\u5b9f\u3057\u305f\u30e2\u30ca\u30c9\u30e9\u30a4\u30d5\u304c\u304a\u304f\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u8cea\u554f\u304c\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u9802\u3051\u308c\u3070\u56de\u7b54\u3057\u307e\u3059\u304c\u3001\u79c1\u81ea\u8eab\u304cRust\u521d\u5fc3\u8005\u306a\u306e\u3067\u3001\u7d30\u304b\u3044\u4ed5\u7d44\u307f\u306a\u3069\u306b\u3064\u3044\u3066\u306f\u5206\u304b\u3063\u3066\u3044\u306a\u3044\u90e8\u5206\u304c\u591a\u3044\u3067\u3059\u3002\n\u6700\u5f8c\u306b\u3001\u4eca\u56de\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306bFunctor\u3068\u3001Functor\u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570decorate()\u3092\u8ffd\u52a0\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u5f35\u3063\u3066\u304a\u304d\u307e\u3059\u3002\nuse self::Either::{Left, Right};\n\nenum Either<E, A> {\n    Left(E),\n    Right(A),\n}\n\ntrait Show {\n    fn show(self) -> String;\n}\n\nimpl<E: Show, A: Show> Show for Either<E, A> {\n    fn show(self) -> String {\n        match self {\n            Right(a) => format!(\"Right({})\", a.show()),\n            Left(e) => format!(\"Left({})\", e.show()),\n        }\n    }\n}\n\nimpl Show for i32 {\n    fn show(self) -> String {\n        self.to_string()\n    }\n}\n\nimpl Show for String {\n    fn show(self) -> String {\n        self\n    }\n}\n\ntrait Functor<A, B, FB> {\n    fn fmap<F>(self, f: F) -> FB where F: Fn(A) -> B;\n}\n\nimpl<E, A, B> Functor<A, B, Either<E, B>> for Either<E, A> {\n    fn fmap<F>(self, f: F) -> Either<E, B> where F: Fn(A) -> B {\n        match self {\n            Right(a) => Right(f(a)),\n            Left(e) => Left(e),\n        }\n    }\n}\n\ntrait Monad<A, B, MB>: Functor<A, B, MB> {\n    fn return_(a: A) -> Self;\n    fn bind<F>(self, f: F) -> MB where F: Fn(A) -> MB;\n}\n\nimpl<E, A, B> Monad<A, B, Either<E, B>> for Either<E, A> {\n    fn return_(a: A) -> Either<E, A> {\n        Right(a)\n    }\n\n    fn bind<F>(self, f: F) -> Either<E, B> where F: Fn(A) -> Either<E, B> {\n        match self {\n            Right(a) => f(a),\n            Left(e) => Left(e),\n        }\n    }\n}\n\nfn return_<MA, A, M: Monad<A, A, MA>>(a: A) -> M {\n    M::return_(a)\n}\n\nfn decorate<FA: Functor<A, String, FS>, FS: Functor<String, A, FA>, A: Show>(fa: FA) -> FS {\n    fa.fmap(|a| format!(\"***{}***\", a.show()))\n}\n\nfn div_by_3(i: i32) -> Either<String, i32> {\n    println!(\"div {}\", i);\n    if i%3 == 0 {\n        Right(i/3)\n    } else {\n        Left(format!(\"`div_by_3` failed when {}\", i))\n    }\n}\n\nfn try_div_by_3_twice(e: Either<String, i32>) -> Either<String, String> {\n    e.bind(|i1|\n        div_by_3(i1).bind(|i2|\n            div_by_3(i2).bind(|i3|\n                return_(format!(\"{} -> {} -> {}\", i1, i2, i3))\n    )))\n}\n\nfn main() {\n    let a = Right(9);\n    let b = try_div_by_3_twice(a);\n    let c = decorate(b);\n    println!(\"{}\", c.show());\n    // div 9\n    // div 3\n    // Right(***9 -> 3 -> 1***)\n\n    let a = Right(2);\n    let b = try_div_by_3_twice(a);\n    let c = decorate(b);\n    println!(\"{}\", c.show());\n    // div 2\n    // Left(`div_by_3` failed when 2)\n\n    let a = Left(\"I'm Left!\".to_string());\n    let b = try_div_by_3_twice(a);\n    let c = decorate(b);\n    println!(\"{}\", c.show());\n    // Left(I'm Left!)\n}\n\nRust\u9762\u767d\u305d\u3046\u3060\u306a\u301c\u3068\u601d\u3044\u30011\u65e5\u904a\u3093\u3067\u307f\u305f\u6210\u679c\u3067\u3059\u3002\n\nRust\u306e\u7279\u5fb4\u3067\u3042\u308b\u30dd\u30a4\u30f3\u30bf\u306e\u501f\u7528\u306a\u3069\u306b\u3064\u3044\u3066\u306f\u3001\u307e\u3060\u7406\u89e3\u304c\u3067\u304d\u3066\u3044\u306a\u3044\u306e\u3067\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n## \u306f\u3058\u3081\u306b\n\nRust\u306f\u9ad8\u30ab\u30a4\u30f3\u30c9\u578b(\u578b\u5909\u6570\u3092\u53d6\u308b\u578b)\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30e2\u30ca\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n```rust\ntrait Monad<X<_>> {\n    ...\n}\nimpl Monad<Option> for Option {\n    ...\n}\n```\n\n\u3053\u308c\u3092\u529b\u696d\u3067\u89e3\u6c7a\u3057\u3001`Either`\u30e2\u30ca\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u4f7f\u7528\u3057\u305fRust\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f`rustc 1.5.0`\u3067\u3059\u3002\n\n## Either\u578b\u3092\u4f5c\u308b\n\n\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b`Either`\u578b\u304c\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```rust\nenum Either<E, A> {\n    Left(E),\n    Right(A),\n}\n```\n\n`Either`\u578b\u306f\u3001`E`\u3042\u308b\u3044\u306f`A`\u306e\u3069\u3061\u3089\u304b\u306e\u578b\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\n\u4e00\u822c\u7684\u306b`Left`\u306f\u30a8\u30e9\u30fc\u5024\u3092\u4fdd\u6301\u3057\u3001`Right`\u304c\u8a08\u7b97\u7d50\u679c\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\n\n## \u578b\u30af\u30e9\u30b9\n\nRust\u306e\u30c8\u30ec\u30a4\u30c8\u306f\u30a2\u30c9\u30db\u30c3\u30af\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u3092\u5b9f\u73fe\u3059\u308b\u3082\u306e\u3067\u3042\u308a\u3001Haskell\u306b\u304a\u3051\u308b\u578b\u30af\u30e9\u30b9\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u3001\u5b9f\u969b\u306b`Show`\u578b\u3092\u5b9a\u7fa9\u3057\u3001Rust\u306b\u304a\u3051\u308b\u578b\u30af\u30e9\u30b9\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u3001`Show`\u578b\u306e\u5b9a\u7fa9\u3067\u3059\u3002\n\n```rust\ntrait Show {\n    fn show(self) -> String;\n}\n```\n\n`Show`\u306f\u81ea\u8eab\u3092\u6587\u5b57\u5217\u3067\u8868\u73fe\u3067\u304d\u308b\u3053\u3068\u3092\u5ba3\u8a00\u3057\u307e\u3059\u3002\n\n`i32`,`String`,`Either`\u578b\u306b\u3064\u3044\u3066\u5b9f\u969b\u306b`Show`\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```rust\nimpl Show for i32 {\n    fn show(self) -> String {\n        self.to_string()\n    }\n}\n\nimpl Show for String {\n    fn show(self) -> String {\n        self\n    }\n}\n\nimpl<E: Show, A: Show> Show for Either<E, A> {\n    fn show(self) -> String {\n        match self {\n            Right(a) => format!(\"Right({})\", a.show()),\n            Left(e) => format!(\"Left({})\", e.show()),\n        }\n    }\n}\n```\n\n`i32`\u3068`String`\u578b\u306b\u3064\u3044\u3066\u306f\u898b\u305f\u307e\u307e\u306a\u306e\u3067\u3001`Either`\u578b\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u3001`Either`\u306f\u578b\u5909\u6570\u30922\u3064\u53d6\u308b\u305f\u3081\u3001`Either<String, i32>`\u306e\u3088\u3046\u306b\u4e00\u610f\u306b\u578b\u3092\u6c7a\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u5fc5\u8981\u306a\u578b\u306e\u7d44\u307f\u5408\u308f\u305b\u5168\u3066\u306b\u3064\u3044\u3066`Show`\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u4eba\u9593\u306e\u3059\u308b\u4ed5\u4e8b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002`impl<E, A>`\u3068\u3059\u308b\u3053\u3068\u3067\u3001`show()`\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u3068\u304d\u306e`Either`\u306b\u5408\u308f\u305b\u3066`Show`\u3092\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u305f\u3001`Either`\u304c`Show`\u3092\u5b9f\u88c5\u3057\u3066\u3044\u3066\u3082\u3001\u5185\u90e8\u306b\u4fdd\u6301\u3059\u308b\u578b`E`\u3084`A`\u304c`Show`\u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u3001`show()`\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u306e\u304c\u56f0\u96e3\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001`E: Show, A: Show`\u3068\u3057\u3066\u3001\u5185\u90e8\u306b\u4fdd\u6301\u3059\u308b\u578b\u304c`Show`\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u5236\u7d04\u3092\u3064\u3051\u307e\u3059\u3002\n\n\u5b9f\u969b\u306b`Show`\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```rust\nlet r: Either<String, i32> = Right(100);\nprintln!(\"{}\", r.show());\n// Right(100)\n\nlet l: Either<String, i32> = Left(\"Hello\".to_string());\nprintln!(\"{}\", l.show());\n// Left(Hello)\n```\n\n`i32`\u3068`String`\u306e\u3069\u3061\u3089\u3082`Show`\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u305f\u3081\u3001`Either`\u3067\u3042\u308b`Right`\u3068`Left`\u3067`show()`\u304c\u4f7f\u3048\u3066\u3044\u307e\u3059\u3002\n\n## \u30e2\u30ca\u30c9\n\n\u30e2\u30ca\u30c9\u306b\u3064\u3044\u3066\u306e\u8aac\u660e\u306f\u7701\u304d\u307e\u3059\u3002\n\u30d5\u30a1\u30f3\u30af\u30bf\u7b49\u3092\u7121\u8996\u3057\u3066\u3001\u3044\u304d\u306a\u308a\u30e2\u30ca\u30c9\u5b9f\u88c5\u306b\u3068\u308a\u304b\u304b\u308a\u307e\u3059\u3002(\u30d5\u30a1\u30f3\u30af\u30bf\u306f\u6700\u5f8c\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u306f\u5165\u3063\u3066\u3044\u307e\u3059)\u3002\n\n\u307e\u305a\u306f\u3001\u30e2\u30ca\u30c9\u306e\u5b9a\u7fa9\u3067\u3059\u3002\n\n```rust\ntrait Monad<A, B, MB> {\n    fn return_(a: A) -> Self;\n    fn bind<F>(self, f: F) -> MB where F: Fn(A) -> MB;\n}\n```\n\n\u578b\u5909\u6570\u304c\u3054\u3061\u3083\u3054\u3061\u3083\u3057\u3066\u3044\u307e\u3059\u304c\u3001[\u306f\u3058\u3081\u306b](#\u306f\u3058\u3081\u306b)\u3067\u8ff0\u3079\u305f\u3088\u3046\u306b\u9ad8\u30ab\u30a4\u30f3\u30c9\u578b\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u30e2\u30ca\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u5168\u3066\u306e\u578b\u3092\u5177\u8c61\u578b\u3067\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\n\u5404\u578b\u5909\u6570\u304c\u5177\u4f53\u7684\u306b\u306a\u306b\u3092\u8868\u3059\u304b\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\n- A: \u73fe\u5728\u5185\u90e8\u306b\u6301\u3063\u3066\u3044\u308b\u578b\n- B: \u8a08\u7b97\u5f8c\u5185\u90e8\u306b\u6301\u3064\u578b\n- MB: \u8a08\u7b97\u5f8c\u306e\u81ea\u8eab\u306e\u578b\n\n`return_()`\u306f`A`\u578b\u306e\u5024\u3092\u73fe\u5728\u306e\u30e2\u30ca\u30c9\u306b\u5305\u3093\u3067\u8fd4\u3057\u307e\u3059\u3002\n`bind()`\u306f\u73fe\u5728\u4fdd\u6301\u3057\u3066\u3044\u308b\u5024\u3092\u4f7f\u3063\u3066\u8a08\u7b97\u3057\u3001\u305d\u306e\u7d50\u679c\u3092\u73fe\u5728\u306e\u30e2\u30ca\u30c9\u306b\u5305\u3093\u3067\u8fd4\u3057\u307e\u3059\u3002\n\n\u5b9f\u969b\u306bEither\u30e2\u30ca\u30c9\u306e\u5b9f\u88c5\u3092\u898b\u3066\u3082\u3089\u3063\u305f\u65b9\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```rust\nimpl<E, A, B> Monad<A, B, Either<E, B>> for Either<E, A> {\n    fn return_(a: A) -> Either<E, A> {\n        Right(a)\n    }\n\n    fn bind<F>(self, f: F) -> Either<E, B> where F: Fn(A) -> Either<E, B> {\n        match self {\n            Right(a) => f(a),\n            Left(e) => Left(e),\n        }\n    }\n}\n```\n\n`Either<E, A>`\u306b\u3064\u3044\u3066`Monad<A, B, Either<E, B>>`\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\u5148\u307b\u3069\u578b\u5909\u6570\u306e\u8aac\u660e\u306e\u610f\u5473\u304c\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u307e\u305f\u3001`Show`\u306e\u3068\u304d\u3068\u540c\u3058\u3088\u3046\u306b`impl<E, A, B>`\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30e2\u30ca\u30c9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3060\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u6b63\u78ba\u306a\u578b\u304c\u6c7a\u307e\u308a\u307e\u3059\u3002\n\n`return_()`\u3067\u306f`A`\u578b\u3092\u6210\u529f\u3092\u8868\u3059`Right`\u306b\u5305\u3093\u3067\u8fd4\u3057\u307e\u3059\u3002\n`bind()`\u3067\u306f\u81ea\u8eab\u304c`Right`\u3067\u3042\u308b\u306a\u3089\u5185\u90e8\u306e\u5024\u3092\u4f7f\u3063\u3066\u8a08\u7b97\u3092\u884c\u3044\u3001\u81ea\u8eab\u304c`Left`\u3067\u3042\u308b\u306a\u3089\u305d\u306e\u307e\u307e\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3067`Either`\u30e2\u30ca\u30c9\u306e\u5b8c\u6210\u3067\u3059\u3002\n\n## \u30e2\u30ca\u30c9\u3092\u4f7f\u3046\n\n\u3067\u306f\u3001\u5b9f\u969b\u306b`Either`\u30e2\u30ca\u30c9\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```rust\nlet r: Either<String, i32> = Right(100);\nlet r2 = r.bind(|i|\n    Monad::<i32, i32, Either<String, i32>>::return_(i*2i32)\n);\nprintln!(\"{}\", r2.show());\n// Right(200)\n\nlet l: Either<String, i32> = Left(\"Hello\".to_string());\nlet l2 = l.bind(|i|\n    Monad::<i32, i32, Either<String, i32>>::return_(i*2i32)\n);\nprintln!(\"{}\", l2.show());\n// Left(Hello)\n```\n\n`Right`\u306b\u5bfe\u3057\u3066\u306f\u8a08\u7b97\u304c\u884c\u308f\u308c\u3066\u3044\u3066\u3001`Left`\u306b\u5bfe\u3057\u3066\u306f\u8a08\u7b97\u304c\u884c\u308f\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u6210\u529f\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u305f\u3060\u3057\u3001\u4e00\u76ee\u3067\u5206\u304b\u308b\u3088\u3046\u306b\u3001`return_()`\u3092\u4f7f\u3046\u306e\u304c\u3082\u306e\u3059\u3054\u304f\u5927\u5909\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002`Either::return_()`\u3068\u66f8\u3051\u308b\u304b\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001`Monad`\u30c8\u30ec\u30a4\u30c8\u306e`MB`\u3092\u89e3\u6c7a\u3067\u304d\u306a\u3044\u305f\u3081\u304b\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3082\u3061\u308d\u3093`return_()`\u3092\u4f7f\u308f\u305a\u306b`Right()`\u3092\u4f7f\u3063\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u3053\u306f\u30e2\u30ca\u30c9\u306e\u4e16\u754c\u306a\u306e\u3067`return_()`\u4f7f\u3044\u305f\u3044\u3067\u3059\u3088\u306d\u3002\n\n\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3001`return_()`\u3068\u3044\u3046\u540c\u3058\u540d\u524d\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```rust\nfn return_<MA, A, M: Monad<A, A, MA>>(a: A) -> M {\n    M::return_(a)\n}\n```\n\n\u3053\u306e\u95a2\u6570\u306f`Monad::return_()`\u306e\u578b\u5909\u6570\u3092\u89e3\u6c7a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u3053\u308c\u3067\u3001\u6e96\u5099\u306f\u6574\u3044\u307e\u3057\u305f\u3002\n`Either`\u30e2\u30ca\u30c9\u3092\u751f\u304b\u3057\u305f\u8a08\u7b97\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```rust\n\nfn div_by_3(i: i32) -> Either<String, i32> {\n    println!(\"div {}\", i);\n    if i%3 == 0 {\n        Right(i/3)\n    } else {\n        Left(format!(\"'div_by_3' failed when {}\", i))\n    }\n}\n\nfn try_div_by_3_twice(e: Either<String, i32>) -> Either<String, String> {\n    e.bind(|i1|\n        div_by_3(i1).bind(|i2|\n            div_by_3(i2).bind(|i3|\n                return_(format!(\"{} -> {} -> {}\", i1, i2, i3))\n    )))\n}\n```\n\n`div_by_3()`\u306f\u305d\u306e\u540d\u306e\u901a\u308a\u3001\u5165\u529b\u5024\u30923\u3067\u5272\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u30013\u3067\u5272\u308a\u5207\u308c\u306a\u3044\u5024\u306b\u3064\u3044\u3066\u306f\u3001`Left`\u3092\u4f7f\u3063\u3066\u30a8\u30e9\u30fc\u3092\u5831\u544a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u95a2\u6570\u306e\u5148\u982d\u3067`println!()`\u3057\u3066\u3044\u308b\u306e\u306f\u8a08\u7b97\u904e\u7a0b\u3092\u898b\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\n`try_div_by_3_twice()`\u306f`div_by_3()`\u30922\u56de\u5b9f\u884c\u3057\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u8a08\u7b97\u904e\u7a0b\u3067\u5165\u529b\u5024\u304c\u3069\u306e\u3088\u3046\u306b\u5909\u5316\u3057\u305f\u306e\u304b\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u6559\u3048\u3066\u304f\u308c\u307e\u3059\u3002\u6ce8\u76ee\u3057\u3066\u6b32\u3057\u3044\u306e\u306f`return_()`\u3092\u4f7f\u3063\u3066\u3044\u308b\u90e8\u5206\u3067\u3001\u6700\u521d\u3068\u6bd4\u3079\u308b\u3068\u660e\u3089\u304b\u306b\u7c21\u5358\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3067\u306f\u3001\u5b9f\u969b\u306b\u3044\u308d\u3044\u308d\u306a`Either`\u306e\u5024\u306b\u3064\u3044\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```rust\nlet a = Right(9);\nlet b = try_div_by_3_twice(a);\nprintln!(\"{}\", b.show());\n// div 9\n// div 3\n// Right(9 -> 3 -> 1)\n\nlet a = Right(2);\nlet b = try_div_by_3_twice(a);\nprintln!(\"{}\", b.show());\n// div 2\n// Left('div_by_3' failed when 2)\n\nlet a = Left(\"I'm Left!\".to_string());\nlet b = try_div_by_3_twice(a);\nprintln!(\"{}\", b.show());\n// Left(I'm Left!)\n```\n\n`Right(9)`\u3067\u306f\u3001`Right(9 -> 3 -> 1)`\u3068\u3044\u3046\u3088\u3046\u306b\u30013\u30672\u56de\u5272\u308a\u7b97\u3092\u884c\u3063\u305f\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n`Right(2)`\u3067\u306f\u30012\u306f3\u3067\u5272\u308a\u5207\u308c\u306a\u3044\u305f\u3081\u5931\u6557\u3057\u3001`Left('div_by_3' failed when 2)`\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f`div 2`\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001`div_by_3()`\u304c\u4e00\u5ea6\u547c\u3070\u308c\u305f\u3053\u3068\u306f\u78ba\u8a8d\u3067\u304d\u307e\u3059\u304c\u3001\u4e00\u5ea6\u5931\u6557\u3057\u305f\u306e\u3067\u3001\u4ee5\u964d\u306e\u8a08\u7b97\u306f\u7121\u8996\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n`Left(\"I'm Left!\".to_string())`\u3067\u306f\u3001\u5165\u529b\u5024\u304c\u305d\u3082\u305d\u3082\u5931\u6557\u3057\u3066\u3044\u308b\u306e\u3067`try_div_by_3_twice()`\u3067\u306f\u4f55\u3082\u8a08\u7b97\u304c\u884c\u308f\u308c\u305a\u306b\u305d\u306e\u307e\u307e\u306e\u5024\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\n## \u307e\u3068\u3081\n\nRust\u3067\u306f\u9ad8\u30ab\u30a4\u30f3\u30c9\u578b\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u30e2\u30ca\u30c9\u30c8\u30ec\u30a4\u30c8\u3092\u4f5c\u6210\u3057\u3001`Either`\u30e2\u30ca\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u3082\u3061\u308d\u3093`Either`\u3060\u3051\u3067\u306a\u304f\u6a19\u6e96\u306e`Option`\u7b49\u306b\u3064\u3044\u3066\u3082\u5b9f\u88c5\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nRust\u306b\u306f\u30de\u30af\u30ed\u3082\u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u30e2\u30ca\u30c9\u7528\u306e\u69cb\u6587\u306a\u3069\u304c\u4f5c\u308c\u308c\u3070\u3088\u308a\u5145\u5b9f\u3057\u305f\u30e2\u30ca\u30c9\u30e9\u30a4\u30d5\u304c\u304a\u304f\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u8cea\u554f\u304c\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u9802\u3051\u308c\u3070\u56de\u7b54\u3057\u307e\u3059\u304c\u3001\u79c1\u81ea\u8eab\u304cRust\u521d\u5fc3\u8005\u306a\u306e\u3067\u3001\u7d30\u304b\u3044\u4ed5\u7d44\u307f\u306a\u3069\u306b\u3064\u3044\u3066\u306f\u5206\u304b\u3063\u3066\u3044\u306a\u3044\u90e8\u5206\u304c\u591a\u3044\u3067\u3059\u3002\n\n\u6700\u5f8c\u306b\u3001\u4eca\u56de\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306bFunctor\u3068\u3001Functor\u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570`decorate()`\u3092\u8ffd\u52a0\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u5f35\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n```rust\nuse self::Either::{Left, Right};\n\nenum Either<E, A> {\n    Left(E),\n    Right(A),\n}\n\ntrait Show {\n    fn show(self) -> String;\n}\n\nimpl<E: Show, A: Show> Show for Either<E, A> {\n    fn show(self) -> String {\n        match self {\n            Right(a) => format!(\"Right({})\", a.show()),\n            Left(e) => format!(\"Left({})\", e.show()),\n        }\n    }\n}\n\nimpl Show for i32 {\n    fn show(self) -> String {\n        self.to_string()\n    }\n}\n\nimpl Show for String {\n    fn show(self) -> String {\n        self\n    }\n}\n\ntrait Functor<A, B, FB> {\n    fn fmap<F>(self, f: F) -> FB where F: Fn(A) -> B;\n}\n\nimpl<E, A, B> Functor<A, B, Either<E, B>> for Either<E, A> {\n    fn fmap<F>(self, f: F) -> Either<E, B> where F: Fn(A) -> B {\n        match self {\n            Right(a) => Right(f(a)),\n            Left(e) => Left(e),\n        }\n    }\n}\n\ntrait Monad<A, B, MB>: Functor<A, B, MB> {\n    fn return_(a: A) -> Self;\n    fn bind<F>(self, f: F) -> MB where F: Fn(A) -> MB;\n}\n\nimpl<E, A, B> Monad<A, B, Either<E, B>> for Either<E, A> {\n    fn return_(a: A) -> Either<E, A> {\n        Right(a)\n    }\n\n    fn bind<F>(self, f: F) -> Either<E, B> where F: Fn(A) -> Either<E, B> {\n        match self {\n            Right(a) => f(a),\n            Left(e) => Left(e),\n        }\n    }\n}\n\nfn return_<MA, A, M: Monad<A, A, MA>>(a: A) -> M {\n    M::return_(a)\n}\n\nfn decorate<FA: Functor<A, String, FS>, FS: Functor<String, A, FA>, A: Show>(fa: FA) -> FS {\n    fa.fmap(|a| format!(\"***{}***\", a.show()))\n}\n\nfn div_by_3(i: i32) -> Either<String, i32> {\n    println!(\"div {}\", i);\n    if i%3 == 0 {\n        Right(i/3)\n    } else {\n        Left(format!(\"`div_by_3` failed when {}\", i))\n    }\n}\n\nfn try_div_by_3_twice(e: Either<String, i32>) -> Either<String, String> {\n    e.bind(|i1|\n        div_by_3(i1).bind(|i2|\n            div_by_3(i2).bind(|i3|\n                return_(format!(\"{} -> {} -> {}\", i1, i2, i3))\n    )))\n}\n\nfn main() {\n    let a = Right(9);\n    let b = try_div_by_3_twice(a);\n    let c = decorate(b);\n    println!(\"{}\", c.show());\n    // div 9\n    // div 3\n    // Right(***9 -> 3 -> 1***)\n\n    let a = Right(2);\n    let b = try_div_by_3_twice(a);\n    let c = decorate(b);\n    println!(\"{}\", c.show());\n    // div 2\n    // Left(`div_by_3` failed when 2)\n\n    let a = Left(\"I'm Left!\".to_string());\n    let b = try_div_by_3_twice(a);\n    let c = decorate(b);\n    println!(\"{}\", c.show());\n    // Left(I'm Left!)\n}\n```\n\n\n"}