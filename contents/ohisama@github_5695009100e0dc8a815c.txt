{"context": "\n\n\u6982\u8981\npaiza\u306ec\u3067\u30ba\u30f3\u30c9\u30b3\u30b2\u30c3\u30bf\u30fc\u3084\u3063\u3066\u307f\u305f\u3002\n\n\u5b9f\u969b\nhttps://paiza.io/projects/G2-MAQKW1VOseqb6_YeDew\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n#include <string.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n#include <netdb.h>\n\nchar * zundoko(void)\n{\n    struct sockaddr_in server;\n    int sock;\n    char buf[256];\n    char * deststr = \"ohijs0.paas.jp-e1.cloudn-service.com\";\n    unsigned int ** addrptr;\n    sock = socket(AF_INET, SOCK_STREAM, 0);\n    if (sock < 0) \n    {\n        perror(\"socket\");\n        return 1;\n    }\n    server.sin_family = AF_INET;\n    server.sin_port = htons(80);\n    server.sin_addr.s_addr = inet_addr(deststr);\n    if (server.sin_addr.s_addr == 0xffffffff) \n    {\n        struct hostent * host;\n        host = gethostbyname(deststr);\n        if (host == NULL) \n        {\n            if (h_errno == HOST_NOT_FOUND) \n            {\n                printf(\"host not found : %s\\n\", deststr);\n            } \n            else \n            {\n                printf(\"%s : %s\\n\", hstrerror(h_errno), deststr);\n            }\n            return 1;\n        }\n        addrptr = (unsigned int **) host->h_addr_list;\n        while (* addrptr != NULL) \n        {\n            server.sin_addr.s_addr = * (* addrptr);\n            if (connect(sock, (struct sockaddr *) &server, sizeof(server)) == 0) \n            {\n                break;\n            }\n            addrptr++;\n        }\n        if (* addrptr == NULL) \n        {\n            perror(\"connect\");\n            return 1;\n        }\n        else\n        {\n            //printf(\"ok connect\\n\");\n        }\n    } \n    else \n    {\n        if (connect(sock, (struct sockaddr *) &server, sizeof(server)) != 0) \n        {\n            perror(\"connect\");\n            return 1;\n        }\n    }\n    memset(buf, 0, sizeof(buf));\n    snprintf(buf, sizeof(buf), \"GET /zundoko HTTP/1.1\\r\\nHost: ohijs0.paas.jp-e1.cloudn-service.com\\r\\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\\r\\n\\r\\n\");\n    int n = write(sock, buf, (int) strlen(buf));\n    if (n < 0) \n    {\n        perror(\"write\");\n        return 1;\n    }\n    else\n    {\n        //printf(\"ok write %d\\n\", n);\n    }\n    memset(buf, 0, sizeof(buf));\n    n = read(sock, buf, sizeof(buf));\n    if (n < 0) \n    {\n        perror(\"read\");\n        return 1;\n    }\n    else\n    {\n        //printf(\"ok read %d\\n\", n);\n    }\n    char t[64];\n    char * g;\n    g = strstr(buf, \"\\r\\n\\r\\n\");\n    g += 4;\n    //puts(g);\n    close(sock);\n    return g;\n}\nint main() \n{\n    int i = 0;\n    int j = 0;\n    printf(\"\u3053\u3053\u304b\u3089\u3000\");\n    while (j < 1) \n    {\n        char * s = zundoko();\n        printf(\"%s \", s);\n        if (strcmp(s, \"\u30c9\u30b3\") == 0) \n        {\n            if (i == 4) j = 1;\n            i = 0;\n        }\n        else\n        {\n            i++;\n        }\n    }\n    printf(\"\u30ad\u30fb\u30e8\u30fb\u30b7\uff01\");\n}\n\n#\u6982\u8981\npaiza\u306ec\u3067\u30ba\u30f3\u30c9\u30b3\u30b2\u30c3\u30bf\u30fc\u3084\u3063\u3066\u307f\u305f\u3002\n#\u5b9f\u969b\nhttps://paiza.io/projects/G2-MAQKW1VOseqb6_YeDew\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n```\n#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n#include <string.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n#include <netdb.h>\n\nchar * zundoko(void)\n{\n    struct sockaddr_in server;\n    int sock;\n    char buf[256];\n    char * deststr = \"ohijs0.paas.jp-e1.cloudn-service.com\";\n    unsigned int ** addrptr;\n    sock = socket(AF_INET, SOCK_STREAM, 0);\n    if (sock < 0) \n    {\n\t    perror(\"socket\");\n\t    return 1;\n    }\n    server.sin_family = AF_INET;\n    server.sin_port = htons(80);\n    server.sin_addr.s_addr = inet_addr(deststr);\n    if (server.sin_addr.s_addr == 0xffffffff) \n    {\n\t    struct hostent * host;\n\t    host = gethostbyname(deststr);\n\t    if (host == NULL) \n\t    {\n\t\t    if (h_errno == HOST_NOT_FOUND) \n\t\t    {\n\t\t\t    printf(\"host not found : %s\\n\", deststr);\n\t\t    } \n\t\t    else \n\t\t    {\n\t\t\t    printf(\"%s : %s\\n\", hstrerror(h_errno), deststr);\n\t\t    }\n\t\t    return 1;\n\t    }\n\t    addrptr = (unsigned int **) host->h_addr_list;\n\t    while (* addrptr != NULL) \n\t    {\n\t\t    server.sin_addr.s_addr = * (* addrptr);\n    \t    if (connect(sock, (struct sockaddr *) &server, sizeof(server)) == 0) \n    \t    {\n\t\t\t    break;\n\t\t    }\n\t\t    addrptr++;\n\t    }\n\t    if (* addrptr == NULL) \n\t    {\n\t\t    perror(\"connect\");\n\t\t    return 1;\n\t    }\n\t    else\n\t    {\n\t        //printf(\"ok connect\\n\");\n\t    }\n    } \n    else \n    {\n\t    if (connect(sock, (struct sockaddr *) &server, sizeof(server)) != 0) \n\t    {\n\t\t    perror(\"connect\");\n\t\t    return 1;\n\t    }\n    }\n    memset(buf, 0, sizeof(buf));\n    snprintf(buf, sizeof(buf), \"GET /zundoko HTTP/1.1\\r\\nHost: ohijs0.paas.jp-e1.cloudn-service.com\\r\\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\\r\\n\\r\\n\");\n    int n = write(sock, buf, (int) strlen(buf));\n    if (n < 0) \n    {\n\t    perror(\"write\");\n\t    return 1;\n    }\n    else\n    {\n        //printf(\"ok write %d\\n\", n);\n    }\n    memset(buf, 0, sizeof(buf));\n    n = read(sock, buf, sizeof(buf));\n    if (n < 0) \n    {\n\t    perror(\"read\");\n\t    return 1;\n    }\n    else\n    {\n        //printf(\"ok read %d\\n\", n);\n    }\n    char t[64];\n    char * g;\n    g = strstr(buf, \"\\r\\n\\r\\n\");\n    g += 4;\n    //puts(g);\n    close(sock);\n    return g;\n}\nint main() \n{\n    int i = 0;\n    int j = 0;\n    printf(\"\u3053\u3053\u304b\u3089\u3000\");\n    while (j < 1) \n    {\n        char * s = zundoko();\n        printf(\"%s \", s);\n        if (strcmp(s, \"\u30c9\u30b3\") == 0) \n        {\n            if (i == 4) j = 1;\n            i = 0;\n        }\n        else\n        {\n            i++;\n        }\n    }\n    printf(\"\u30ad\u30fb\u30e8\u30fb\u30b7\uff01\");\n}\n```\n", "tags": ["C", "paiza"]}