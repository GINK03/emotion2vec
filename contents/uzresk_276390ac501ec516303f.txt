{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nSDK\u3092\u4f7f\u3063\u3066\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u505c\u6b62\u30fb\u8d77\u52d5\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n2014/11/05\uff1a\u30bf\u30b0\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u3092\u8ffd\u8a18\u3057\u307e\u3057\u305f\u3002\n\nEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u505c\u6b62\u65b9\u6cd5\n\u30b9\u30c6\u30fc\u30bf\u30b9\u304cRunning\u306b\u306a\u3063\u3066\u3044\u308bEC2\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID\u3092\u53d6\u5f97\u3057\u3001\u505c\u6b62\u3057\u307e\u3059\u3002\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.amazonaws.ClientConfiguration;\nimport com.amazonaws.auth.AWSCredentialsProvider;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Region;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.ec2.AmazonEC2;\nimport com.amazonaws.services.ec2.AmazonEC2Client;\nimport com.amazonaws.services.ec2.model.DescribeInstancesResult;\nimport com.amazonaws.services.ec2.model.Instance;\nimport com.amazonaws.services.ec2.model.InstanceStateName;\nimport com.amazonaws.services.ec2.model.Reservation;\nimport com.amazonaws.services.ec2.model.StopInstancesRequest;\n\npublic class Ec2InstanceStopSample {\n\npublic static void main(String[] args) {\n\n    AWSCredentialsProvider provider = new ProfileCredentialsProvider(\"uzr\");\n\n    AmazonEC2 ec2_tokyo = Region.getRegion(Regions.AP_NORTHEAST_1)\n            .createClient(AmazonEC2Client.class, provider,\n                    new ClientConfiguration());\n    DescribeInstancesResult instanceResult = ec2_tokyo.describeInstances();\n\n    List<String> runningIncetanceIds = new ArrayList<String>();\n    for (Reservation reservation : instanceResult.getReservations()) {\n        for (Instance instance : reservation.getInstances()) {\n            // \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u304cRunning\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID\u3092\u53d6\u5f97\u3059\u308b\u3002\n            if (InstanceStateName.Running.toString().equals(instance.getState().getName())) {\n                String instanceId = instance.getInstanceId();\n                System.out.println(instanceId + \"is Running\");\n                runningIncetanceIds.add(instanceId);\n            }\n        }\n    }\n    // \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u505c\u6b62\u3059\u308b\u3002\n    ec2_tokyo.stopInstances(new StopInstancesRequest(runningIncetanceIds));\n}\n\n\n}\n\n\nEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u8d77\u52d5\u65b9\u6cd5\n\u30b9\u30c6\u30fc\u30bf\u30b9\u304cStopped\u306b\u306a\u3063\u3066\u3044\u308bEC2\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3057\u3001\u8d77\u52d5\u3057\u307e\u3059\u3002\n\u505c\u6b62\u3059\u308b\u3053\u3068\u3068\u5b9f\u88c5\u306f\u307b\u307c\u540c\u3058\u3067\u3064\u307e\u3089\u306a\u3044\u306e\u3067\u30015\u79d2\u304a\u304d\u306b\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.amazonaws.ClientConfiguration;\nimport com.amazonaws.auth.AWSCredentialsProvider;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Region;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.ec2.AmazonEC2;\nimport com.amazonaws.services.ec2.AmazonEC2Client;\nimport com.amazonaws.services.ec2.model.DescribeInstancesResult;\nimport com.amazonaws.services.ec2.model.Instance;\nimport com.amazonaws.services.ec2.model.InstanceStateName;\nimport com.amazonaws.services.ec2.model.Reservation;\nimport com.amazonaws.services.ec2.model.StartInstancesRequest;\n\npublic class Ec2InstanceRestartSample {\n\npublic static void main(String[] args) throws Exception {\n\n    AWSCredentialsProvider provider = new ProfileCredentialsProvider(\"uzr\");\n\n    AmazonEC2 ec2_tokyo = Region.getRegion(Regions.AP_NORTHEAST_1)\n            .createClient(AmazonEC2Client.class, provider,\n                    new ClientConfiguration());\n    DescribeInstancesResult instanceResult = ec2_tokyo.describeInstances();\n\n    List<String> stoppedIncetanceIds = new ArrayList<String>();\n    for (Reservation reservation : instanceResult.getReservations()) {\n        for (Instance instance : reservation.getInstances()) {\n\n            if (InstanceStateName.Stopped.toString().equals(instance.getState().getName())) {\n                String instanceId = instance.getInstanceId();\n                System.out.println(instanceId + \"is Stopped\");\n                stoppedIncetanceIds.add(instanceId);\n            }\n        }\n    }\n    // \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8d77\u52d5\u3059\u308b\n    ec2_tokyo.startInstances(new StartInstancesRequest(stoppedIncetanceIds));\n\n    System.out.println(\"\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\");\n\n    boolean pending = true;\n\n\n    while(pending) {\n        AmazonEC2 ec2 = Region.getRegion(Regions.AP_NORTHEAST_1)\n                .createClient(AmazonEC2Client.class, provider,\n                        new ClientConfiguration());\n\n        for (Reservation reservation : ec2.describeInstances().getReservations()) {\n\n            int runningInstanceCnt = 0;\n            for (Instance instance : reservation.getInstances()) {\n                String instanceId = instance.getInstanceId();\n                System.out.println(instanceId + \" is \" + instance.getState().getName());\n\n                if (InstanceStateName.Running.toString().equals(instance.getState().getName())) {\n                    runningInstanceCnt++;\n                }\n            }\n\n            if (runningInstanceCnt == reservation.getInstances().size()) {\n                pending = false;\n            }\n        }\n        Thread.sleep(5000);\n    }\n    System.out.println(\"EC2\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u8d77\u52d5\u3057\u307e\u3057\u305f\u3002\");\n}\n\n\n}\n\n\n\u30bf\u30b0\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u505c\u6b62\u3059\u308b\u3002\nAAA\u3001BBB\u305d\u308c\u305e\u308c\u3067\u904b\u7528\u3055\u308c\u3066\u3044\u308b\u30b7\u30b9\u30c6\u30e0\u304c\u3042\u308a\u3001AAA\u306b\u6240\u5c5e\u3059\u308b\u30b5\u30fc\u30d0\u7fa4\u3092\u307e\u3068\u3081\u3066\u505c\u6b62\u3057\u305f\u3044\u3002\u3068\u3044\u3063\u305f\u5834\u5408\u306b\u306f\u30bf\u30b0\u3092\u4f7f\u3046\u3068\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n\u3053\u3053\u3067\u306fKey\u306bSystem,Value\u306b\u30b7\u30b9\u30c6\u30e0\u540d\u304c\u8a18\u8f09\u3055\u308c\u305fEC2\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f7f\u3063\u3066\u3001System\u304cAAA\u306b\u6240\u5c5e\u3059\u308b\u30b5\u30fc\u30d0\u7fa4\u3092\u62bd\u51fa\u3059\u308b\u306b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n        List systemAAAResourceIds = new ArrayList();\n\n    DescribeTagsResult tagsResult = ec2_tokyo\n            .describeTags(new DescribeTagsRequest());\n    for (TagDescription description : tagsResult.getTags()) {\n        if (\"System\".equals(description.getKey()) && \"AAA\".equals(description.getValue())) {\n            systemAAAResourceIds.add(description.getResourceId());\n        }\n    }\n    System.out.println(\"System AAA ResourceIds : \" + systemAAAResourceIds);\n\n\n\n\u3053\u3053\u3067\u53d6\u5f97\u3055\u308c\u305fResourceId\u306fEC2\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID\u3068\u540c\u3058\u3067\u3059\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3048\u3070\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4e00\u62ec\u505c\u6b62\u3082\u53ef\u80fd\u3067\u3059\u306d\u3002\n\n\n\u88dc\u8db3\u4e8b\u9805\n\nAWSCredentialProvider\u306b\u3064\u3044\u3066\nCredentialProvider\u306b\u306f\u4ed6\u306b\u3082Provider\u304c\u3042\u308a\u307e\u3059\u3002\n\uff11\uff0eEnvironmentVariableCredentialsProvider\nAWS_ACCESS_KEY_ID \u3068 AWS_SECRET_ACCESS_KEY\u3092export\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u305d\u308c\u3092\u8aad\u3093\u3067\u304f\u308c\u308bProvider\u3067\u3059\u3002\n\uff12\uff0eProfileCredentialProvider\n~/.aws/credentials\u306b\u8a18\u8f09\u3055\u308c\u305f\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4eca\u56de\u4f7f\u3063\u305f\u306e\u306f\u3053\u308c\u3067\u3059\u3002\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u540d\u306fcredential\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8f09\u3055\u308c\u305f\u5024\uff08uzr)\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nair:.aws xxxx$ cat credentials \n[uzr]\naws_access_key_id=XXXXXXXXXXXXXXXXX\naws_secret_access_key=XXXXXXXXXXXXXXXXXXXXX\n\n\n\uff13\uff0eSystemPropertiesCredentialProvider\naws.accessKeyId \u3068 aws.secretKey\u3092\u8d77\u52d5\u5f15\u6570\u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u305d\u308c\u3092\u8aad\u3093\u3067\u304f\u308c\u308bProvider\u3067\u3059\u3002\n\n\n\u72b6\u6cc1\u78ba\u8a8d\u306b\u3064\u3044\u3066\nSDK\u3067\u306fEC2\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u901a\u4fe1\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3057\u3066\u3001\u72b6\u6cc1\u78ba\u8a8d\u306e\u9593\u3001\u6bce\u56deCredential\u3092\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306b\u3057\u306a\u3044\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306fPending\u2192Running\u306b\u5909\u308f\u3063\u3066\u3044\u3063\u3066\u3044\u308b\u306e\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u53d6\u5f97\u3057\u305f\u30b9\u30c6\u30fc\u30bf\u30b9\u306fStopped\u306e\u307e\u307e\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u53c2\u8003\nhttp://docs.aws.amazon.com/AWSSdkDocsJava/latest/DeveloperGuide/credentials.html\n# \u306f\u3058\u3081\u306b\nSDK\u3092\u4f7f\u3063\u3066\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u505c\u6b62\u30fb\u8d77\u52d5\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n2014/11/05\uff1a\u30bf\u30b0\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u3092\u8ffd\u8a18\u3057\u307e\u3057\u305f\u3002\n\n# EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u505c\u6b62\u65b9\u6cd5\n\u30b9\u30c6\u30fc\u30bf\u30b9\u304cRunning\u306b\u306a\u3063\u3066\u3044\u308bEC2\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID\u3092\u53d6\u5f97\u3057\u3001\u505c\u6b62\u3057\u307e\u3059\u3002\n<pre><code class=java>\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.amazonaws.ClientConfiguration;\nimport com.amazonaws.auth.AWSCredentialsProvider;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Region;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.ec2.AmazonEC2;\nimport com.amazonaws.services.ec2.AmazonEC2Client;\nimport com.amazonaws.services.ec2.model.DescribeInstancesResult;\nimport com.amazonaws.services.ec2.model.Instance;\nimport com.amazonaws.services.ec2.model.InstanceStateName;\nimport com.amazonaws.services.ec2.model.Reservation;\nimport com.amazonaws.services.ec2.model.StopInstancesRequest;\n\npublic class Ec2InstanceStopSample {\n\n\tpublic static void main(String[] args) {\n\n\t\tAWSCredentialsProvider provider = new ProfileCredentialsProvider(\"uzr\");\n\n\t\tAmazonEC2 ec2_tokyo = Region.getRegion(Regions.AP_NORTHEAST_1)\n\t\t\t\t.createClient(AmazonEC2Client.class, provider,\n\t\t\t\t\t\tnew ClientConfiguration());\n\t\tDescribeInstancesResult instanceResult = ec2_tokyo.describeInstances();\n\n\t\tList<String> runningIncetanceIds = new ArrayList<String>();\n\t\tfor (Reservation reservation : instanceResult.getReservations()) {\n\t\t\tfor (Instance instance : reservation.getInstances()) {\n\t\t\t\t// \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u304cRunning\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID\u3092\u53d6\u5f97\u3059\u308b\u3002\n\t\t\t\tif (InstanceStateName.Running.toString().equals(instance.getState().getName())) {\n\t\t\t\t\tString instanceId = instance.getInstanceId();\n\t\t\t\t\tSystem.out.println(instanceId + \"is Running\");\n\t\t\t\t\trunningIncetanceIds.add(instanceId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u505c\u6b62\u3059\u308b\u3002\n\t\tec2_tokyo.stopInstances(new StopInstancesRequest(runningIncetanceIds));\n\t}\n}\n</code></pre>\n\n# EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u8d77\u52d5\u65b9\u6cd5\n\u30b9\u30c6\u30fc\u30bf\u30b9\u304cStopped\u306b\u306a\u3063\u3066\u3044\u308bEC2\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3057\u3001\u8d77\u52d5\u3057\u307e\u3059\u3002\n\u505c\u6b62\u3059\u308b\u3053\u3068\u3068\u5b9f\u88c5\u306f\u307b\u307c\u540c\u3058\u3067\u3064\u307e\u3089\u306a\u3044\u306e\u3067\u30015\u79d2\u304a\u304d\u306b\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n<pre><code class=\"java\">\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.amazonaws.ClientConfiguration;\nimport com.amazonaws.auth.AWSCredentialsProvider;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Region;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.ec2.AmazonEC2;\nimport com.amazonaws.services.ec2.AmazonEC2Client;\nimport com.amazonaws.services.ec2.model.DescribeInstancesResult;\nimport com.amazonaws.services.ec2.model.Instance;\nimport com.amazonaws.services.ec2.model.InstanceStateName;\nimport com.amazonaws.services.ec2.model.Reservation;\nimport com.amazonaws.services.ec2.model.StartInstancesRequest;\n\npublic class Ec2InstanceRestartSample {\n\n\tpublic static void main(String[] args) throws Exception {\n\n\t\tAWSCredentialsProvider provider = new ProfileCredentialsProvider(\"uzr\");\n\n\t\tAmazonEC2 ec2_tokyo = Region.getRegion(Regions.AP_NORTHEAST_1)\n\t\t\t\t.createClient(AmazonEC2Client.class, provider,\n\t\t\t\t\t\tnew ClientConfiguration());\n\t\tDescribeInstancesResult instanceResult = ec2_tokyo.describeInstances();\n\n\t\tList<String> stoppedIncetanceIds = new ArrayList<String>();\n\t\tfor (Reservation reservation : instanceResult.getReservations()) {\n\t\t\tfor (Instance instance : reservation.getInstances()) {\n\t\t\t\t\n\t\t\t\tif (InstanceStateName.Stopped.toString().equals(instance.getState().getName())) {\n\t\t\t\t\tString instanceId = instance.getInstanceId();\n\t\t\t\t\tSystem.out.println(instanceId + \"is Stopped\");\n\t\t\t\t\tstoppedIncetanceIds.add(instanceId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8d77\u52d5\u3059\u308b\n\t\tec2_tokyo.startInstances(new StartInstancesRequest(stoppedIncetanceIds));\n\t\t\n\t\tSystem.out.println(\"\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\");\n\t\t\n\t\tboolean pending = true;\n\t\t\n\n\t\twhile(pending) {\n\t\t\tAmazonEC2 ec2 = Region.getRegion(Regions.AP_NORTHEAST_1)\n\t\t\t\t\t.createClient(AmazonEC2Client.class, provider,\n\t\t\t\t\t\t\tnew ClientConfiguration());\n\n\t\t\tfor (Reservation reservation : ec2.describeInstances().getReservations()) {\n\t\t\t\t\n\t\t\t\tint runningInstanceCnt = 0;\n\t\t\t\tfor (Instance instance : reservation.getInstances()) {\n\t\t\t\t\tString instanceId = instance.getInstanceId();\n\t\t\t\t\tSystem.out.println(instanceId + \" is \" + instance.getState().getName());\n\t\t\t\t\t\n\t\t\t\t\tif (InstanceStateName.Running.toString().equals(instance.getState().getName())) {\n\t\t\t\t\t\trunningInstanceCnt++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (runningInstanceCnt == reservation.getInstances().size()) {\n\t\t\t\t\tpending = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tThread.sleep(5000);\n\t\t}\n\t\tSystem.out.println(\"EC2\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u8d77\u52d5\u3057\u307e\u3057\u305f\u3002\");\n\t}\n}\n</code></pre>\n\n# \u30bf\u30b0\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u505c\u6b62\u3059\u308b\u3002\n\nAAA\u3001BBB\u305d\u308c\u305e\u308c\u3067\u904b\u7528\u3055\u308c\u3066\u3044\u308b\u30b7\u30b9\u30c6\u30e0\u304c\u3042\u308a\u3001AAA\u306b\u6240\u5c5e\u3059\u308b\u30b5\u30fc\u30d0\u7fa4\u3092\u307e\u3068\u3081\u3066\u505c\u6b62\u3057\u305f\u3044\u3002\u3068\u3044\u3063\u305f\u5834\u5408\u306b\u306f\u30bf\u30b0\u3092\u4f7f\u3046\u3068\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n\u3053\u3053\u3067\u306fKey\u306bSystem,Value\u306b\u30b7\u30b9\u30c6\u30e0\u540d\u304c\u8a18\u8f09\u3055\u308c\u305fEC2\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f7f\u3063\u3066\u3001System\u304cAAA\u306b\u6240\u5c5e\u3059\u308b\u30b5\u30fc\u30d0\u7fa4\u3092\u62bd\u51fa\u3059\u308b\u306b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002\n<pre><code class=\"java\">\n\t\tList<String> systemAAAResourceIds = new ArrayList<String>();\n\n\t\tDescribeTagsResult tagsResult = ec2_tokyo\n\t\t\t\t.describeTags(new DescribeTagsRequest());\n\t\tfor (TagDescription description : tagsResult.getTags()) {\n\t\t\tif (\"System\".equals(description.getKey()) && \"AAA\".equals(description.getValue())) {\n\t\t\t\tsystemAAAResourceIds.add(description.getResourceId());\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"System AAA ResourceIds : \" + systemAAAResourceIds);\n</code></pre>\n\u3053\u3053\u3067\u53d6\u5f97\u3055\u308c\u305fResourceId\u306fEC2\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID\u3068\u540c\u3058\u3067\u3059\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3048\u3070\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4e00\u62ec\u505c\u6b62\u3082\u53ef\u80fd\u3067\u3059\u306d\u3002\n\n# \u88dc\u8db3\u4e8b\u9805\n\n## AWSCredentialProvider\u306b\u3064\u3044\u3066\nCredentialProvider\u306b\u306f\u4ed6\u306b\u3082Provider\u304c\u3042\u308a\u307e\u3059\u3002\n\uff11\uff0e[EnvironmentVariableCredentialsProvider](http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/auth/EnvironmentVariableCredentialsProvider.html)\nAWS_ACCESS_KEY_ID \u3068 AWS_SECRET_ACCESS_KEY\u3092export\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u305d\u308c\u3092\u8aad\u3093\u3067\u304f\u308c\u308bProvider\u3067\u3059\u3002\n\uff12\uff0e[ProfileCredentialProvider](http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/auth/profile/ProfileCredentialsProvider.html)\n~/.aws/credentials\u306b\u8a18\u8f09\u3055\u308c\u305f\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4eca\u56de\u4f7f\u3063\u305f\u306e\u306f\u3053\u308c\u3067\u3059\u3002\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u540d\u306fcredential\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8f09\u3055\u308c\u305f\u5024\uff08uzr)\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n<pre>\nair:.aws xxxx$ cat credentials \n[uzr]\naws_access_key_id=XXXXXXXXXXXXXXXXX\naws_secret_access_key=XXXXXXXXXXXXXXXXXXXXX\n\n</pre>\n\uff13\uff0e[SystemPropertiesCredentialProvider](http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/auth/SystemPropertiesCredentialsProvider.html)\naws.accessKeyId \u3068 aws.secretKey\u3092\u8d77\u52d5\u5f15\u6570\u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u305d\u308c\u3092\u8aad\u3093\u3067\u304f\u308c\u308bProvider\u3067\u3059\u3002\n\n## \u72b6\u6cc1\u78ba\u8a8d\u306b\u3064\u3044\u3066\nSDK\u3067\u306fEC2\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u901a\u4fe1\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3057\u3066\u3001\u72b6\u6cc1\u78ba\u8a8d\u306e\u9593\u3001\u6bce\u56deCredential\u3092\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306b\u3057\u306a\u3044\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306fPending\u2192Running\u306b\u5909\u308f\u3063\u3066\u3044\u3063\u3066\u3044\u308b\u306e\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u53d6\u5f97\u3057\u305f\u30b9\u30c6\u30fc\u30bf\u30b9\u306fStopped\u306e\u307e\u307e\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n## \u53c2\u8003\nhttp://docs.aws.amazon.com/AWSSdkDocsJava/latest/DeveloperGuide/credentials.html\n", "tags": ["AWS", "EC2", "AWS_SDK", "Java"]}