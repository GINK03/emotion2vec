{"context": "\n\n\u306f\u3058\u3081\u306b\nVuforia\u3092\u4f7f\u3063\u3066\u52d5\u753b\u3092\u518d\u751f\u3059\u308b\u3068\u3001\u5fc5\u305a\u6c7a\u307e\u3063\u305f\u30b5\u30a4\u30ba\u3067\u3057\u304b\u518d\u751f\u3067\u304d\u306a\u3044\u3002\n\u3053\u308c\u3092\u306a\u3093\u3068\u304b\u3057\u305f\u3044\u3002\n\n\u5bfe\u51e6\u65b9\u6cd5\n\u30b9\u30af\u30ea\u30d7\u30c8VideoPlaybackBehaviour.cs\u3067\u5f37\u5236\u7684\u306b\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u306b\u3042\u3063\u305f\u30b5\u30a4\u30ba\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u3053\u308c\u306b\u4fee\u6b63\u3092\u52a0\u3048\u308b\u3002\n\nVideoPlaybackBehaviour.cs\uff08\uff12\uff13\uff10\u884c\u524d\u5f8c\uff09\n                    if (videoWidth > 0 && videoHeight > 0)\n                    {\n                        // Scale the video plane to match the video aspect ratio\n                        float aspect = videoHeight / (float) videoWidth;\n\n                        // Flip the plane as the video texture is mirrored on the horizontal\n                        transform.localScale = new Vector3 (-0.1f, 0.1f, 0.1f * aspect);\n                    }\n\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3002\n\nVideoPlaybackBehaviour.cs\uff08\uff12\uff13\uff10\u884c\u524d\u5f8c\uff09\n                    if (videoWidth > 0 && videoHeight > 0)\n                    {\n                        // Scale the video plane to match the video aspect ratio\n                        float aspect = videoHeight / (float) videoWidth;\n\n                        if (KeepWidth) {\n                            transform.localScale = new Vector3 (transform.localScale.x, 0.1f, -transform.localScale.x * aspect);\n                        } else {\n                            // Flip the plane as the video texture is mirrored on the horizontal\n                            transform.localScale = new Vector3 (-0.1f, 0.1f, 0.1f * aspect);\n                        }\n                    }\n\n\n\u307e\u305f\u3001\uff15\uff10\u884c\u76ee\u4ed8\u8fd1\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u5909\u6570\u3092\u5ba3\u8a00\u3057\u3066\u3044\u308b\u3042\u305f\u308a\u306b\u3001\u6b21\u306e\u884c\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\nVideoPlaybackBehaviour.cs\n    public bool KeepWidth = true;\n\n\n\u4ee5\u4e0a\u3067\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8cbc\u308a\u4ed8\u3051\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5e45\uff08Scale\u306ex\uff09\u306b\u5408\u308f\u305b\u305f\u52d5\u753b\u30b5\u30a4\u30ba\u3067\u30d3\u30c7\u30aa\u304c\u518d\u751f\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nModifying the scale of the video plane in the Video Playback Sample app\n\n## \u306f\u3058\u3081\u306b\n\nVuforia\u3092\u4f7f\u3063\u3066\u52d5\u753b\u3092\u518d\u751f\u3059\u308b\u3068\u3001\u5fc5\u305a\u6c7a\u307e\u3063\u305f\u30b5\u30a4\u30ba\u3067\u3057\u304b\u518d\u751f\u3067\u304d\u306a\u3044\u3002\n\u3053\u308c\u3092\u306a\u3093\u3068\u304b\u3057\u305f\u3044\u3002\n\n## \u5bfe\u51e6\u65b9\u6cd5\n\n\u30b9\u30af\u30ea\u30d7\u30c8VideoPlaybackBehaviour.cs\u3067\u5f37\u5236\u7684\u306b\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u306b\u3042\u3063\u305f\u30b5\u30a4\u30ba\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u3053\u308c\u306b\u4fee\u6b63\u3092\u52a0\u3048\u308b\u3002\n\n```csharp:VideoPlaybackBehaviour.cs\uff08\uff12\uff13\uff10\u884c\u524d\u5f8c\uff09\n                    if (videoWidth > 0 && videoHeight > 0)\n                    {\n                        // Scale the video plane to match the video aspect ratio\n                        float aspect = videoHeight / (float) videoWidth;\n\n\t\t\t\t\t\t// Flip the plane as the video texture is mirrored on the horizontal\n\t\t\t\t\t\ttransform.localScale = new Vector3 (-0.1f, 0.1f, 0.1f * aspect);\n                    }\n```\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3002\n\n```csharp:VideoPlaybackBehaviour.cs\uff08\uff12\uff13\uff10\u884c\u524d\u5f8c\uff09\n                    if (videoWidth > 0 && videoHeight > 0)\n                    {\n                        // Scale the video plane to match the video aspect ratio\n                        float aspect = videoHeight / (float) videoWidth;\n\n\t\t\t\t\t\tif (KeepWidth) {\n\t\t\t\t\t\t\ttransform.localScale = new Vector3 (transform.localScale.x, 0.1f, -transform.localScale.x * aspect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Flip the plane as the video texture is mirrored on the horizontal\n\t\t\t\t\t\t\ttransform.localScale = new Vector3 (-0.1f, 0.1f, 0.1f * aspect);\n\t\t\t\t\t\t}\n                    }\n```\n\n\u307e\u305f\u3001\uff15\uff10\u884c\u76ee\u4ed8\u8fd1\u306e\u30d1\u30d6\u30ea\u30c3\u30af\u5909\u6570\u3092\u5ba3\u8a00\u3057\u3066\u3044\u308b\u3042\u305f\u308a\u306b\u3001\u6b21\u306e\u884c\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n```csharp:VideoPlaybackBehaviour.cs\n\tpublic bool KeepWidth = true;\n```\n\n\u4ee5\u4e0a\u3067\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8cbc\u308a\u4ed8\u3051\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5e45\uff08Scale\u306ex\uff09\u306b\u5408\u308f\u305b\u305f\u52d5\u753b\u30b5\u30a4\u30ba\u3067\u30d3\u30c7\u30aa\u304c\u518d\u751f\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n## \u53c2\u8003\u30b5\u30a4\u30c8\n\n[Modifying the scale of the video plane in the Video Playback Sample app](https://developer.vuforia.com/forum/unity-3-extension-technical-discussion/modifying-scale-video-plane-video-playback-sample-app)\n", "tags": ["vuforia", "Unity3D"]}