{"context": "PHP\u306e\u65e5\u4ed8\u8a08\u7b97\u3063\u3066\u7d50\u69cb\u5384\u4ecb\u306a\u601d\u3044\u51fa\u3042\u308a\u307e\u305b\u3093\u304b\uff1f\nPHP5.2\u304b\u3089DateTime\u30af\u30e9\u30b9\u304c\u767b\u5834\u3057\u5e7e\u5206\u30de\u30b7\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u305d\u308c\u3067\u3082\u307e\u3060\u307e\u3060\u306a\u3068\u3053\u308d\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3093\u306a\u5384\u4ecb\u306a\u3053\u3068\u3082Carbon\u3092\u4f7f\u3048\u3070\u89e3\u6c7a\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff01\n\nCarbon\u3068\u306f\nA simple PHP API extension for DateTime.\nCarbon\u3068\u306fPHP\u306eDateTime\u30af\u30e9\u30b9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30c3\u30d7\u3057\u305f\u65e5\u4ed8\u64cd\u4f5c\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\n\u6d41\u884c\u3063\u3066\u308b\u306e\uff1f\nGithub\u3067\u306f4300\u3092\u8d85\u3048\u308b\u2606\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3057\u3001\u300cLaravel\u300d\u306a\u3069\u306e\u4eba\u6c17\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\u3067\u306f\u4f7f\u3044\u65b9\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nComposer\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\nComposer\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u65b9\u306f\u3001\u3053\u3061\u3089\u304b\u3089\u304a\u4f7f\u3044\u306e\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\u3002\ncomposer require nesbot/carbon\n\n\n\u4f7f\u3044\u65b9\n\n\u73fe\u5728\u6642\u523b\u3084\u6307\u5b9a\u3057\u305f\u65e5\u6642\n\ncarbon.php\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Carbon\\Carbon;\n\n$dt = new Carbon();\necho $dt . \"\\n\"; // 2016-05-01 11:17:38\n\n// \u30b9\u30bf\u30c6\u30a3\u30c3\u30af\n$dt = Carbon::now();\necho $dt . \"\\n\"; // 2016-05-01 11:17:38\n\n$dt = new Carbon('2016-04-30');\necho $dt . \"\\n\"; // 2016-04-30 00:00:00\n\n$dt = Carbon::today();\necho $dt . \"\\n\"; // 2016-05-01 00:00:00\n\n$dt = Carbon::tomorrow();\necho $dt . \"\\n\"; // 2016-05-02 00:00:00\n\n$dt = Carbon::yesterday();\necho $dt . \"\\n\"; //2016-04-30 00:00:00\n\n$dt = Carbon::parse('2016-04-30 10:32:32');\necho $dt . \"\\n\"; //2016-04-30 10:32:32\n\n\n\nCarbon\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u5fc5\u8981\u306a\u65e5\u6642\u3092\u53d6\u5f97\n\ncarbon.php\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Carbon\\Carbon;\n\n$dt = Carbon::now();\n\necho $dt->year . \"\\n\"; // 2016\necho $dt->month . \"\\n\"; // 5\necho $dt->day. \"\\n\"; // 1\necho $dt->hour . \"\\n\"; // 11\necho $dt->minute . \"\\n\"; // 22\necho $dt->second. \"\\n\"; //56\necho $dt->format('Y\u5e74m\u6708d\u65e5'); // 2016\u5e7405\u670801\u65e5\n\n// \u9031\u306e\u3046\u3061\u306e\u4f55\u65e5\u76ee\u304b 0 (\u65e5\u66dc)\u304b\u3089 6 (\u571f\u66dc)\necho $dt->dayOfWeek . \"\\n\"; // 0\n\n// \u5e74\u306e\u3046\u3061\u306e\u4f55\u65e5\u76ee\u304b 0\u304b\u3089\u958b\u59cb\necho $dt->dayOfYear . \"\\n\"; // 121\n\n// \u6708\u306e\u3046\u3061\u306e\u4f55\u9031\u76ee\u304b\necho $dt->weekOfMonth . \"\\n\"; // 1\n\n// \u5e74\u306e\u3046\u3061\u306e\u4f55\u9031\u76ee\u304b\necho $dt->weekOfYear . \"\\n\"; // 17\n\n// \u6708\u306e\u65e5\u6570\necho $dt->daysInMonth . \"\\n\"; // 31\n\n// \u56db\u534a\u671f\necho $dt->quarter . \"\\n\"; // 2\n\n// \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\necho $dt->timestamp . \"\\n\"; //1462069596\n\n// \u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u540d\necho $dt->tzName . \"\\n\"; // Asia/Tokyo\n\n\n\n\u65e5\u4ed8\u306e\u5224\u5b9a\n\ncarbon.php\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Carbon\\Carbon;\n\n$dt = Carbon::now();\n\n// \u4eca\u65e5\u304b\u3069\u3046\u304b\nvar_dump($dt->isToday()); // true\n\n// \u660e\u65e5\u304b\u3069\u3046\u304b\nvar_dump($dt->isTomorrow()); // false\n\n// \u6628\u65e5\u304b\u3069\u3046\u304b\nvar_dump($dt->isYesterday()); // false\n\n// \u672a\u6765\u304b\u3069\u3046\u304b\nvar_dump($dt->isFuture()); // false\n\n// \u904e\u53bb\u304b\u3069\u3046\u304b\nvar_dump($dt->isPast()); // false\n\n// \u3046\u308b\u3046\u5e74\u304b\u3069\u3046\u304b\nvar_dump($dt->isLeapYear()); // true\n\n// \u5e73\u65e5\u304b\u3069\u3046\u304b\nvar_dump($dt->isWeekday()); // false\n\n// \u9031\u672b\u304b\u3069\u3046\u304b \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u571f\u65e5\u304c\u9031\u672b\u3063\u307d\u3044\u3002\nvar_dump($dt->isWeekend()); // true\n\n// \u9031\u672b\u306e\u5b9a\u7fa9\n$dt->setWeekendDays([\n    Carbon::MONDAY,\n    Carbon::TUESDAY,\n    Carbon::WEDNESDAY,\n    Carbon::THURSDAY,\n    Carbon::FRIDAY,\n    Carbon::SATURDAY,\n    Carbon::SUNDAY,\n]);\n\n// \u5168\u90e8\u8a2d\u5b9a\u3057\u305f\u306e\u3067\u3044\u3064\u3067\u3082true\nvar_dump($dt->isWeekend()); // true\n\n\n// \u540c\u3058\u65e5\u304b\u3069\u3046\u304b\nvar_dump($dt->isSameDay(Carbon::parse('2016-04-30'))); // false\n\n// \u65e5\u66dc\u304b\u3069\u3046\u304b\nvar_dump($dt->isSunday()); // true\n\n// \u6708\u66dc\u304b\u3069\u3046\u304b\nvar_dump($dt->isMonday()); // false\n\n// \u706b\u66dc\u304b\u3069\u3046\u304b\nvar_dump($dt->isTuesday()); // false\n\n// \u6c34\u66dc\u304b\u3069\u3046\u304b\nvar_dump($dt->isWednesday()); // false\n\n// \u6728\u66dc\u304b\u3069\u3046\u304b\nvar_dump($dt->isThursday()); // false\n\n// \u91d1\u66dc\u304b\u3069\u3046\u304b\nvar_dump($dt->isFriday()); // false\n\n// \u571f\u66dc\u304b\u3069\u3046\u304b\nvar_dump($dt->isSaturday()); // false\n\n\n\n\n\u65e5\u4ed8\u306e\u6bd4\u8f03\n\ncarbon.php\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Carbon\\Carbon;\n\n$dt1 = new Carbon('2016-05-01');\n$dt2 = new Carbon('2016-06-01');\n\n// \u30a4\u30b3\u30fc\u30eb\nvar_dump($dt1->eq($dt2)); // false\n\n// \u3088\u308a\u5927\u304d\u3044\nvar_dump($dt1->gt($dt2)); // false\n\n// \u4ee5\u4e0a\nvar_dump($dt1->gte($dt2)); // false\n\n// \u3088\u308a\u5c0f\u3055\u3044\nvar_dump($dt1->lt($dt2)); // true\n\n// \u4ee5\u4e0b\nvar_dump($dt1->lte($dt2)); // true\n\n// \u65e5\u4ed8\u304c\uff12\u3064\u306e\u65e5\u4ed8\u306e\u9593\u306b\u3042\u308b\u304b\nvar_dump(Carbon::parse('2016-05-15')->between($dt1, $dt2)); // true\n\n\n\n\u65e5\u4ed8\u306e\u52a0\u7b97\u6e1b\u7b97\n\ncarbon.php\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Carbon\\Carbon;\n\n/** \u52a0\u7b97 **/\n\n$dt = new Carbon('2016-05-01');\n\n// 1\u65e5\u5f8c\necho $dt->addDay() . \"\\n\"; // 2016-05-02 00:00:00\n\n// 1\u30f6\u6708\u5f8c\necho $dt->addMonth() . \"\\n\"; // 2016-06-02 00:00:00\n\n// 1\u5e74\u5f8c\u5f8c\necho $dt->addYear() . \"\\n\"; // 2017-06-02 00:00:00\n\n// 1\u6642\u9593\u5f8c\necho $dt->addHour() . \"\\n\"; // 2017-06-02 01:00:00\n\n// 1\u79d2\u5f8c\necho $dt->addSecond() . \"\\n\"; // 2017-06-02 01:00:01\n\n\n$dt = new Carbon('2016-05-01');\n\n// 5\u65e5\u5f8c\necho $dt->addDay(5) . \"\\n\"; // 2016-05-06 00:00:00\n\n// 5\u30f6\u6708\u5f8c\necho $dt->addMonth(5) . \"\\n\"; // 2016-10-06 00:00:00\n\n// 5\u5e74\u5f8c\necho $dt->addYear(5) . \"\\n\"; // 2021-10-06 00:00:00\n\n// 5\u6642\u9593\u5f8c\necho $dt->addHour(5) . \"\\n\"; // 2021-10-06 05:00:00\n\n// 5\u79d2\u5f8c\necho $dt->addSecond(5) . \"\\n\"; // 2021-10-06 05:00:05\n\n\n\n/** \u6e1b\u7b97 **/\n\n$dt = new Carbon('2016-05-01');\n\n// 1\u65e5\u524d\necho $dt->subDay() . \"\\n\"; // 2016-04-30 00:00:00\n\n// 1\u30f6\u6708\u524d\necho $dt->subMonth() . \"\\n\"; // 2016-03-30 00:00:00\n\n// 1\u5e74\u524d\necho $dt->subYear() . \"\\n\"; // 2015-03-30 00:00:00\n\n// 1\u6642\u9593\u524d\necho $dt->subHour() . \"\\n\"; // 2015-03-29 23:00:00\n\n// 1\u79d2\u524d\necho $dt->subSecond() . \"\\n\"; // 2015-03-29 22:59:59\n\n$dt = new Carbon('2016-05-01');\n\n// 5\u65e5\u524d\necho $dt->subDay(5) . \"\\n\"; // 2016-04-26 00:00:00\n\n// 5\u30f6\u6708\u524d\necho $dt->subMonth(5) . \"\\n\"; // 2015-11-26 00:00:00\n\n// 5\u5e74\u524d\necho $dt->subYear(5) . \"\\n\"; // 2010-11-26 00:00:00\n\n// 5\u6642\u9593\u524d\necho $dt->subHour(5) . \"\\n\"; // 2010-11-25 19:00:00\n\n// 5\u79d2\u524d\necho $dt->subSecond(5) . \"\\n\"; // 2010-11-25 18:59:55\n\n\n/** copy\u30e1\u30bd\u30c3\u30c9 **/\n$dt = new Carbon('2016-05-01');\n\n// \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30b3\u30d4\u30fc\u3092\u4f5c\u308b\necho $dt->copy()->subDay(); // 2016-04-30 00:00:00\n\n// \u5143\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306f\u5f71\u97ff\u304c\u306a\u3044\necho $dt->subDay(); // 2016-04-30 00:00:00\n\n\n\n\n\u65e5\u4ed8\u306e\u5dee\u5206\n\ncarbon.php\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Carbon\\Carbon;\n\n$dt1 = new Carbon('2016-05-01');\n$dt2 = Carbon::parse('2016-05-01')->endOfYear();\n\n// \u79d2\n$dt1->diffInSeconds($dt2); // 21167999\u79d2\n\n// \u5206\n$dt1->diffInMinutes($dt2); // 352799\u5206\n\n// \u6642\u9593\n$dt1->diffInHours($dt2); // 5879\u6642\u9593\n\n// \u65e5\n$dt1->diffInDays($dt2); // 244\u65e5\n\n// \u9031\n$dt1->diffInWeeks($dt2); // 34\u9031\n\n// \u5e74\n$dt1->diffInYears($dt2); // 0\u5e74\n\n// 2016-05-01\u304b\u3089\u5e74\u672b\u307e\u3067\u5e73\u65e5\u304c\u4f55\u65e5\u3042\u308b\u304b\necho $dt1->diffInDaysFiltered(function(Carbon $date) {\n    return $date->isWeekday();\n}, $dt2); // 175\u65e5\n\n\n\n\u4fbf\u5229\u7cfb\n\ncarbon.php\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Carbon\\Carbon;\n\n// \u8a95\u751f\u65e5\u306e\u8a2d\u5b9a\n$birthday = Carbon::parse('1987-02-18');\n\n// \u5e74\u9f62\necho $birthday->age . \"\\n\"; //29\n\n\n\n\nCarbon\u307e\u3068\u3081\n\u4ee5\u4e0a\u306eCarbon\u306e\u4f7f\u3044\u65b9\u3092\u307f\u3066\u3001\u76f4\u611f\u7684\u3067\u975e\u5e38\u306b\u4f7f\u3044\u3084\u3059\u3044\u3068\u601d\u308f\u308c\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\u305d\u306e\u307b\u304b\u306b\u3082\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u3002\n\u4f59\u529b\u306e\u3042\u308b\u65b9\u306f\u516c\u5f0f\u30b5\u30a4\u30c8\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\n\nPHP\u306e\u65e5\u4ed8\u8a08\u7b97\u3063\u3066\u7d50\u69cb\u5384\u4ecb\u306a\u601d\u3044\u51fa\u3042\u308a\u307e\u305b\u3093\u304b\uff1f\nPHP5.2\u304b\u3089DateTime\u30af\u30e9\u30b9\u304c\u767b\u5834\u3057\u5e7e\u5206\u30de\u30b7\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u305d\u308c\u3067\u3082\u307e\u3060\u307e\u3060\u306a\u3068\u3053\u308d\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u305d\u3093\u306a\u5384\u4ecb\u306a\u3053\u3068\u3082Carbon\u3092\u4f7f\u3048\u3070\u89e3\u6c7a\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff01\n\n### Carbon\u3068\u306f\n\n[A simple PHP API extension for DateTime.](http://carbon.nesbot.com/)\n\nCarbon\u3068\u306fPHP\u306eDateTime\u30af\u30e9\u30b9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30c3\u30d7\u3057\u305f\u65e5\u4ed8\u64cd\u4f5c\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\n### \u6d41\u884c\u3063\u3066\u308b\u306e\uff1f\n[Github](https://github.com/briannesbitt/Carbon)\u3067\u306f4300\u3092\u8d85\u3048\u308b\u2606\u3092\u7372\u5f97\u3057\u3066\u3044\u307e\u3059\u3057\u3001\u300cLaravel\u300d\u306a\u3069\u306e\u4eba\u6c17\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3067\u306f\u4f7f\u3044\u65b9\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n### \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nComposer\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\nComposer\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u65b9\u306f\u3001[\u3053\u3061\u3089](https://getcomposer.org/)\u304b\u3089\u304a\u4f7f\u3044\u306e\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\u3002\n\n```\ncomposer require nesbot/carbon\n```\n\n### \u4f7f\u3044\u65b9\n\n#### \u73fe\u5728\u6642\u523b\u3084\u6307\u5b9a\u3057\u305f\u65e5\u6642\n```carbon.php\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Carbon\\Carbon;\n\n$dt = new Carbon();\necho $dt . \"\\n\"; // 2016-05-01 11:17:38\n\n// \u30b9\u30bf\u30c6\u30a3\u30c3\u30af\n$dt = Carbon::now();\necho $dt . \"\\n\"; // 2016-05-01 11:17:38\n\n$dt = new Carbon('2016-04-30');\necho $dt . \"\\n\"; // 2016-04-30 00:00:00\n\n$dt = Carbon::today();\necho $dt . \"\\n\"; // 2016-05-01 00:00:00\n\n$dt = Carbon::tomorrow();\necho $dt . \"\\n\"; // 2016-05-02 00:00:00\n\n$dt = Carbon::yesterday();\necho $dt . \"\\n\"; //2016-04-30 00:00:00\n\n$dt = Carbon::parse('2016-04-30 10:32:32');\necho $dt . \"\\n\"; //2016-04-30 10:32:32\n```\n\n#### Carbon\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u5fc5\u8981\u306a\u65e5\u6642\u3092\u53d6\u5f97\n```carbon.php\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Carbon\\Carbon;\n\n$dt = Carbon::now();\n\necho $dt->year . \"\\n\"; // 2016\necho $dt->month . \"\\n\"; // 5\necho $dt->day. \"\\n\"; // 1\necho $dt->hour . \"\\n\"; // 11\necho $dt->minute . \"\\n\"; // 22\necho $dt->second. \"\\n\"; //56\necho $dt->format('Y\u5e74m\u6708d\u65e5'); // 2016\u5e7405\u670801\u65e5\n\n// \u9031\u306e\u3046\u3061\u306e\u4f55\u65e5\u76ee\u304b 0 (\u65e5\u66dc)\u304b\u3089 6 (\u571f\u66dc)\necho $dt->dayOfWeek . \"\\n\"; // 0\n\n// \u5e74\u306e\u3046\u3061\u306e\u4f55\u65e5\u76ee\u304b 0\u304b\u3089\u958b\u59cb\necho $dt->dayOfYear . \"\\n\"; // 121\n\n// \u6708\u306e\u3046\u3061\u306e\u4f55\u9031\u76ee\u304b\necho $dt->weekOfMonth . \"\\n\"; // 1\n\n// \u5e74\u306e\u3046\u3061\u306e\u4f55\u9031\u76ee\u304b\necho $dt->weekOfYear . \"\\n\"; // 17\n\n// \u6708\u306e\u65e5\u6570\necho $dt->daysInMonth . \"\\n\"; // 31\n\n// \u56db\u534a\u671f\necho $dt->quarter . \"\\n\"; // 2\n\n// \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\necho $dt->timestamp . \"\\n\"; //1462069596\n\n// \u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u540d\necho $dt->tzName . \"\\n\"; // Asia/Tokyo\n```\n\n#### \u65e5\u4ed8\u306e\u5224\u5b9a\n```carbon.php\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Carbon\\Carbon;\n\n$dt = Carbon::now();\n\n// \u4eca\u65e5\u304b\u3069\u3046\u304b\nvar_dump($dt->isToday()); // true\n\n// \u660e\u65e5\u304b\u3069\u3046\u304b\nvar_dump($dt->isTomorrow()); // false\n\n// \u6628\u65e5\u304b\u3069\u3046\u304b\nvar_dump($dt->isYesterday()); // false\n\n// \u672a\u6765\u304b\u3069\u3046\u304b\nvar_dump($dt->isFuture()); // false\n\n// \u904e\u53bb\u304b\u3069\u3046\u304b\nvar_dump($dt->isPast()); // false\n\n// \u3046\u308b\u3046\u5e74\u304b\u3069\u3046\u304b\nvar_dump($dt->isLeapYear()); // true\n\n// \u5e73\u65e5\u304b\u3069\u3046\u304b\nvar_dump($dt->isWeekday()); // false\n\n// \u9031\u672b\u304b\u3069\u3046\u304b \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u571f\u65e5\u304c\u9031\u672b\u3063\u307d\u3044\u3002\nvar_dump($dt->isWeekend()); // true\n\n// \u9031\u672b\u306e\u5b9a\u7fa9\n$dt->setWeekendDays([\n\tCarbon::MONDAY,\n\tCarbon::TUESDAY,\n\tCarbon::WEDNESDAY,\n\tCarbon::THURSDAY,\n\tCarbon::FRIDAY,\n\tCarbon::SATURDAY,\n\tCarbon::SUNDAY,\n]);\n\n// \u5168\u90e8\u8a2d\u5b9a\u3057\u305f\u306e\u3067\u3044\u3064\u3067\u3082true\nvar_dump($dt->isWeekend()); // true\n\n\n// \u540c\u3058\u65e5\u304b\u3069\u3046\u304b\nvar_dump($dt->isSameDay(Carbon::parse('2016-04-30'))); // false\n\n// \u65e5\u66dc\u304b\u3069\u3046\u304b\nvar_dump($dt->isSunday()); // true\n\n// \u6708\u66dc\u304b\u3069\u3046\u304b\nvar_dump($dt->isMonday()); // false\n\n// \u706b\u66dc\u304b\u3069\u3046\u304b\nvar_dump($dt->isTuesday()); // false\n\n// \u6c34\u66dc\u304b\u3069\u3046\u304b\nvar_dump($dt->isWednesday()); // false\n\n// \u6728\u66dc\u304b\u3069\u3046\u304b\nvar_dump($dt->isThursday()); // false\n\n// \u91d1\u66dc\u304b\u3069\u3046\u304b\nvar_dump($dt->isFriday()); // false\n\n// \u571f\u66dc\u304b\u3069\u3046\u304b\nvar_dump($dt->isSaturday()); // false\n\n```\n\n#### \u65e5\u4ed8\u306e\u6bd4\u8f03\n```carbon.php\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Carbon\\Carbon;\n\n$dt1 = new Carbon('2016-05-01');\n$dt2 = new Carbon('2016-06-01');\n\n// \u30a4\u30b3\u30fc\u30eb\nvar_dump($dt1->eq($dt2)); // false\n\n// \u3088\u308a\u5927\u304d\u3044\nvar_dump($dt1->gt($dt2)); // false\n\n// \u4ee5\u4e0a\nvar_dump($dt1->gte($dt2)); // false\n\n// \u3088\u308a\u5c0f\u3055\u3044\nvar_dump($dt1->lt($dt2)); // true\n\n// \u4ee5\u4e0b\nvar_dump($dt1->lte($dt2)); // true\n\n// \u65e5\u4ed8\u304c\uff12\u3064\u306e\u65e5\u4ed8\u306e\u9593\u306b\u3042\u308b\u304b\nvar_dump(Carbon::parse('2016-05-15')->between($dt1, $dt2)); // true\n```\n\n\n#### \u65e5\u4ed8\u306e\u52a0\u7b97\u6e1b\u7b97\n```carbon.php\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Carbon\\Carbon;\n\n/** \u52a0\u7b97 **/\n\n$dt = new Carbon('2016-05-01');\n\n// 1\u65e5\u5f8c\necho $dt->addDay() . \"\\n\"; // 2016-05-02 00:00:00\n\n// 1\u30f6\u6708\u5f8c\necho $dt->addMonth() . \"\\n\"; // 2016-06-02 00:00:00\n\n// 1\u5e74\u5f8c\u5f8c\necho $dt->addYear() . \"\\n\"; // 2017-06-02 00:00:00\n\n// 1\u6642\u9593\u5f8c\necho $dt->addHour() . \"\\n\"; // 2017-06-02 01:00:00\n\n// 1\u79d2\u5f8c\necho $dt->addSecond() . \"\\n\"; // 2017-06-02 01:00:01\n\n\n$dt = new Carbon('2016-05-01');\n\n// 5\u65e5\u5f8c\necho $dt->addDay(5) . \"\\n\"; // 2016-05-06 00:00:00\n\n// 5\u30f6\u6708\u5f8c\necho $dt->addMonth(5) . \"\\n\"; // 2016-10-06 00:00:00\n\n// 5\u5e74\u5f8c\necho $dt->addYear(5) . \"\\n\"; // 2021-10-06 00:00:00\n\n// 5\u6642\u9593\u5f8c\necho $dt->addHour(5) . \"\\n\"; // 2021-10-06 05:00:00\n\n// 5\u79d2\u5f8c\necho $dt->addSecond(5) . \"\\n\"; // 2021-10-06 05:00:05\n\n\n\n/** \u6e1b\u7b97 **/\n\n$dt = new Carbon('2016-05-01');\n\n// 1\u65e5\u524d\necho $dt->subDay() . \"\\n\"; // 2016-04-30 00:00:00\n\n// 1\u30f6\u6708\u524d\necho $dt->subMonth() . \"\\n\"; // 2016-03-30 00:00:00\n\n// 1\u5e74\u524d\necho $dt->subYear() . \"\\n\"; // 2015-03-30 00:00:00\n\n// 1\u6642\u9593\u524d\necho $dt->subHour() . \"\\n\"; // 2015-03-29 23:00:00\n\n// 1\u79d2\u524d\necho $dt->subSecond() . \"\\n\"; // 2015-03-29 22:59:59\n\n$dt = new Carbon('2016-05-01');\n\n// 5\u65e5\u524d\necho $dt->subDay(5) . \"\\n\"; // 2016-04-26 00:00:00\n\n// 5\u30f6\u6708\u524d\necho $dt->subMonth(5) . \"\\n\"; // 2015-11-26 00:00:00\n\n// 5\u5e74\u524d\necho $dt->subYear(5) . \"\\n\"; // 2010-11-26 00:00:00\n\n// 5\u6642\u9593\u524d\necho $dt->subHour(5) . \"\\n\"; // 2010-11-25 19:00:00\n\n// 5\u79d2\u524d\necho $dt->subSecond(5) . \"\\n\"; // 2010-11-25 18:59:55\n\n\n/** copy\u30e1\u30bd\u30c3\u30c9 **/\n$dt = new Carbon('2016-05-01');\n\n// \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30b3\u30d4\u30fc\u3092\u4f5c\u308b\necho $dt->copy()->subDay(); // 2016-04-30 00:00:00\n\n// \u5143\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306f\u5f71\u97ff\u304c\u306a\u3044\necho $dt->subDay(); // 2016-04-30 00:00:00\n\n```\n\n#### \u65e5\u4ed8\u306e\u5dee\u5206\n```carbon.php\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Carbon\\Carbon;\n\n$dt1 = new Carbon('2016-05-01');\n$dt2 = Carbon::parse('2016-05-01')->endOfYear();\n\n// \u79d2\n$dt1->diffInSeconds($dt2); // 21167999\u79d2\n\n// \u5206\n$dt1->diffInMinutes($dt2); // 352799\u5206\n\n// \u6642\u9593\n$dt1->diffInHours($dt2); // 5879\u6642\u9593\n\n// \u65e5\n$dt1->diffInDays($dt2); // 244\u65e5\n\n// \u9031\n$dt1->diffInWeeks($dt2); // 34\u9031\n\n// \u5e74\n$dt1->diffInYears($dt2); // 0\u5e74\n\n// 2016-05-01\u304b\u3089\u5e74\u672b\u307e\u3067\u5e73\u65e5\u304c\u4f55\u65e5\u3042\u308b\u304b\necho $dt1->diffInDaysFiltered(function(Carbon $date) {\n\treturn $date->isWeekday();\n}, $dt2); // 175\u65e5\n```\n\n\n#### \u4fbf\u5229\u7cfb\n```carbon.php\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Carbon\\Carbon;\n\n// \u8a95\u751f\u65e5\u306e\u8a2d\u5b9a\n$birthday = Carbon::parse('1987-02-18');\n\n// \u5e74\u9f62\necho $birthday->age . \"\\n\"; //29\n\n```\n\n### Carbon\u307e\u3068\u3081\n\u4ee5\u4e0a\u306eCarbon\u306e\u4f7f\u3044\u65b9\u3092\u307f\u3066\u3001\u76f4\u611f\u7684\u3067\u975e\u5e38\u306b\u4f7f\u3044\u3084\u3059\u3044\u3068\u601d\u308f\u308c\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\u305d\u306e\u307b\u304b\u306b\u3082\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u3002\n\u4f59\u529b\u306e\u3042\u308b\u65b9\u306f[\u516c\u5f0f\u30b5\u30a4\u30c8](http://carbon.nesbot.com/)\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\n", "tags": ["Carbon", "PHP", "Composer"]}