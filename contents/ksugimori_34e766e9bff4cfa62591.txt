{"context": "\n\n\u6982\u8981\n\u300cRuby\u306b\u3088\u308b\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u203b\u300d\u3092\u8aad\u3093\u3067\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3092\u52c9\u5f37\u4e2d\u3002\nJava\u3092\u3084\u3063\u3066\u3044\u305f\u4eba\u9593\u3068\u3057\u3066\u306e\u76ee\u7dda\u3067\u60c5\u5831\u3092\u6574\u7406\u3057\u3066\u307f\u307e\u3059\u3002\n\u203b\u6b8b\u5ff5\u306a\u304c\u3089\u65e5\u672c\u8a9e\u7248\u306f\u7d76\u7248\u3089\u3057\u3044\u3067\u3059\u304c\u539f\u8457\u306fKindle\u3067\u8cfc\u5165\u53ef\u80fd\u3067\u3059\u3002\u7d50\u69cb\u6587\u7ae0\u3082\u8aad\u307f\u3084\u3059\u3044\u306e\u3067\u6975\u7aef\u306a\u82f1\u8a9e\u30a2\u30ec\u30eb\u30ae\u30fc\u304c\u3042\u308b\u4eba\u3067\u306a\u3051\u308c\u3070\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\nTemplate Method Pattern\n\n\u300c\u5909\u308f\u3089\u306a\u3044\u3082\u306e\u300d\u3068\u300c\u5909\u308f\u308b\u3082\u306e\u300d\u3092\u89aa\u30af\u30e9\u30b9\u3068\u5b50\u30af\u30e9\u30b9\u306b\u5206\u96e2\u3059\u308b\n\u89aa\u30af\u30e9\u30b9\u3067\u306f\u51e6\u7406\u306e\u6d41\u308c\uff08\u5909\u308f\u3089\u306a\u3044\u3082\u306e\uff09\u306e\u307f\u3092\u5b9a\u7fa9\u3059\u308b\n\u5b50\u30af\u30e9\u30b9\u3067\u306f\u5177\u4f53\u7684\u306a\u51e6\u7406\uff08\u5909\u308f\u308b\u3082\u306e\uff09\u3092\u5b9f\u88c5\u3059\u308b\n\n\nAbstractClass#template_method \u5185\u3067\u306f\u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\uff08operation1, operation2, operation3\uff09\u306e\u547c\u3073\u51fa\u3057\u9806\u306a\u3069\u3001\u51e6\u7406\u306e\u9aa8\u683c\u306e\u307f\u3092\u5b9a\u7fa9\u3002operation1\u301coperation3 \u306e\u5177\u4f53\u7684\u306a\u51e6\u7406\u5185\u5bb9\u306f\u5b50\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u5b9f\u88c5\u306e\u5909\u66f4\u306b\u5bfe\u3059\u308b\u5f71\u97ff\u3092\u5c40\u6240\u5316\u3067\u304d\u308b\u3002\n\nJava \u3067\u306e\u5b9f\u88c5\n\nAbstractClass.java\npublic abstract class AbstractClass {\n  abstract protected void operation1();\n  abstract protected void operation2();\n  abstract protected void operation3();\n\n  public void templateMethod() {\n    operation1();\n    operation2();\n    operation3();\n  }\n}\n\n\n\nConcreteClass.java\npublic class ConcreteClass extends AbstractClass {\n  protected void operation1() {\n    System.out.println(\"This is op 1.\");\n  }\n  protected void operation2() {\n    System.out.println(\"This is op 2.\");\n  }\n  protected void operation3() {\n    System.out.println(\"This is op 3.\");\n  }\n}\n\n\n\nRuby \u3067\u306e\u5b9f\u88c5\nJava \u306e\u5834\u5408\u306f\u89aa\u30af\u30e9\u30b9\u3067\u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u5b50\u30af\u30e9\u30b9\u3067\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u3092\u5f37\u5236\u3067\u304d\u308b\u304c\u3001Ruby\u306b\u306f\u305d\u306e\u3088\u3046\u306a\u4ed5\u7d44\u307f\u306f\u5b58\u5728\u3057\u306a\u3044\u3002\n\u305d\u306e\u305f\u3081\u3001\u5b50\u30af\u30e9\u30b9\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3055\u308c\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u305f\u3081\u306b\u3001\u89aa\u30af\u30e9\u30b9\u3067\u306f\u4f8b\u5916\u3092\u6295\u3052\u308b\u3088\u3046\u306b\u3059\u308b\u3001\u3068\u3044\u3046\u65b9\u6cd5\u3092\u3068\u308b\u3002\n\nAbstractClass\nclass AbstractClass\n  def operation1\n    raise \"Must override method :operation1\"\n  end\n\n  def operation2\n    raise \"Must override method :operation2\"\n  end\n\n  def operation3\n    raise \"Must override method :operation3\"\n  end\n\n  def template_method\n    operation1\n    operation2\n    operation3\n  end\nend\n\n\n\nConcreteClass\nclass ConcreteClass < AbstractClass\n  def operation1\n    puts \"This is op 1.\"\n  end\n  def operation2\n    puts \"This is op 2.\"\n  end\n\n  # operation3 \u306e\u5b9f\u88c5\u6f0f\u308c\nend\n\n\n\u3053\u306e\u5834\u5408\u3001ConcreteClass.new.template_method \u306e\u3088\u3046\u306b\u5b9f\u884c\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b \u5b9f\u884c\u6642\u4f8b\u5916 \u304c\u767a\u751f\u3059\u308b\u3002\nThis is op 1.\nThis is op 2.\ntest.rb:11:in `operation3': Must override method :operation3 (RuntimeError)\n    from test.rb:17:in `template_method'\n    from test.rb:32:in `<main>'\n\n\u3082\u3061\u308d\u3093\u5b9f\u884c\u3057\u3066\u307f\u308b\u307e\u3067\u30a8\u30e9\u30fc\u306f\u767a\u898b\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u305d\u308c\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306a\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u884c\u3048\u3070\u826f\u3044\u3002\u3064\u307e\u308a\u3001Java \u3067\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u8a3c\u3055\u308c\u3066\u3044\u305f\u90e8\u5206\u3092\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306b\u3066\u691c\u8a3c\u3059\u308b\u306e\u3067\u3059\u3002\n\nSample Code\n\nAbstract Class\nclass Worker\n  def initialize\n    @output = 0\n  end\n\n  # template method. 9\u6642\u304b\u308918\u6642\u307e\u3067\u4ed5\u4e8b\u3092\u3057\u3066\u305d\u306e\u65e5\u306e\u9032\u6357\u3092\u4e0a\u53f8\u306b\u5831\u544a\u3057\u307e\u3059\n  # :do_task \u306e\u5b9f\u88c5\u65b9\u6cd5\u304c\u5909\u66f4\u3055\u308c\u3066\u3082\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u81ea\u4f53\u306b\u306f\u5f71\u97ff\u304c\u306a\u3044\n  def work\n    for hour in 9...12\n      hourly_log time: hour, memo: do_task()\n    end\n\n    hourly_log time: 12, memo: lunch()\n\n    for hour in 13...18\n      hourly_log time: hour, memo: do_task()\n    end\n\n    report\n  end\n\n  private\n\n  # \u62bd\u8c61\u30e1\u30bd\u30c3\u30c9. \u5b50\u30af\u30e9\u30b9\u3067\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\n  def do_task\n    raise \"Must override method :do_task\"\n  end\n\n  # \u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3092\u89aa\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3057\u3066\u304a\u3044\u3066\u3001\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u5b50\u30af\u30e9\u30b9\u306b\u4efb\u305b\u308b\u3053\u3068\u3082\n  def lunch\n    \"Lunch with colleagues.\"\n  end\n\n  def report\n    puts\n    puts \"Hi boss! I'm #{self.class}.\"\n    puts \"Today I have finished #{@output} tasks!\"\n    puts\n  end\n\n  def hourly_log(time: , memo: )\n    printf(\"%02d:00 %s\\n\", time, memo)\n  end\nend\n\n\nConcreteClass\nclass EarnestWorker < Worker\n  # \u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5. \u30b3\u30f3\u30b9\u30bf\u30f3\u30c8\u306b\u4ed5\u4e8b\u3092\u3057\u307e\u3059\n  def do_task\n    @output += 1\n    \"Working.\"\n  end\n\n  # \u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3068\u306f\u7570\u306a\u308b\u6319\u52d5\u306b\u3057\u305f\u3044\u306e\u3067\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\n  def lunch\n    @output += 1\n    \"Lunch and work!\"\n  end\nend\n\nclass LazyWorker < Worker\n  # \u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5. \u3068\u304d\u305f\u307e\u5bdd\u3066\u3057\u307e\u3044\u307e\u3059\n  def do_task\n    if [true, false].sample\n      @output += 1\n      \"Working.\"\n    else\n      \"Take a nap...\"\n    end\n  end\nend\n\n\n\u547c\u3073\u51fa\u3057\nworkers = [LazyWorker.new, EarnestWorker.new]\n\nworkers.each do |w|\n  w.work\nend\n\n\n\u5b9f\u884c\u7d50\u679c\n09:00 Working.\n10:00 Take a nap...\n11:00 Working.\n12:00 Lunch with colleagues.\n13:00 Working.\n14:00 Working.\n15:00 Working.\n16:00 Take a nap...\n17:00 Working.\n\nHi boss! I'm LazyWorker.\nToday I have finished 6 tasks!\n\n09:00 Working.\n10:00 Working.\n11:00 Working.\n12:00 Lunch and work!\n13:00 Working.\n14:00 Working.\n15:00 Working.\n16:00 Working.\n17:00 Working.\n\nHi boss! I'm EarnestWorker.\nToday I have finished 9 tasks!\n\n\n\u53c2\u8003\nOlsen, R. 2007. Design Patterns in Ruby\n# \u6982\u8981\n\u300cRuby\u306b\u3088\u308b\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u203b\u300d\u3092\u8aad\u3093\u3067\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3092\u52c9\u5f37\u4e2d\u3002\nJava\u3092\u3084\u3063\u3066\u3044\u305f\u4eba\u9593\u3068\u3057\u3066\u306e\u76ee\u7dda\u3067\u60c5\u5831\u3092\u6574\u7406\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u203b\u6b8b\u5ff5\u306a\u304c\u3089\u65e5\u672c\u8a9e\u7248\u306f\u7d76\u7248\u3089\u3057\u3044\u3067\u3059\u304c\u539f\u8457\u306fKindle\u3067\u8cfc\u5165\u53ef\u80fd\u3067\u3059\u3002\u7d50\u69cb\u6587\u7ae0\u3082\u8aad\u307f\u3084\u3059\u3044\u306e\u3067\u6975\u7aef\u306a\u82f1\u8a9e\u30a2\u30ec\u30eb\u30ae\u30fc\u304c\u3042\u308b\u4eba\u3067\u306a\u3051\u308c\u3070\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\n\n# Template Method Pattern\n- \u300c\u5909\u308f\u3089\u306a\u3044\u3082\u306e\u300d\u3068\u300c\u5909\u308f\u308b\u3082\u306e\u300d\u3092\u89aa\u30af\u30e9\u30b9\u3068\u5b50\u30af\u30e9\u30b9\u306b\u5206\u96e2\u3059\u308b\n- \u89aa\u30af\u30e9\u30b9\u3067\u306f\u51e6\u7406\u306e\u6d41\u308c\uff08\u5909\u308f\u3089\u306a\u3044\u3082\u306e\uff09\u306e\u307f\u3092\u5b9a\u7fa9\u3059\u308b\n- \u5b50\u30af\u30e9\u30b9\u3067\u306f\u5177\u4f53\u7684\u306a\u51e6\u7406\uff08\u5909\u308f\u308b\u3082\u306e\uff09\u3092\u5b9f\u88c5\u3059\u308b\n\n![png.png](https://qiita-image-store.s3.amazonaws.com/0/86330/a51f2697-ba0d-6f01-dc82-537a23582558.png)\n\nAbstractClass#template_method \u5185\u3067\u306f\u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\uff08operation1, operation2, operation3\uff09\u306e\u547c\u3073\u51fa\u3057\u9806\u306a\u3069\u3001\u51e6\u7406\u306e\u9aa8\u683c\u306e\u307f\u3092\u5b9a\u7fa9\u3002operation1\u301coperation3 \u306e\u5177\u4f53\u7684\u306a\u51e6\u7406\u5185\u5bb9\u306f\u5b50\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u5b9f\u88c5\u306e\u5909\u66f4\u306b\u5bfe\u3059\u308b\u5f71\u97ff\u3092\u5c40\u6240\u5316\u3067\u304d\u308b\u3002\n\n## Java \u3067\u306e\u5b9f\u88c5\n\n```java:AbstractClass.java\npublic abstract class AbstractClass {\n  abstract protected void operation1();\n  abstract protected void operation2();\n  abstract protected void operation3();\n\n  public void templateMethod() {\n    operation1();\n    operation2();\n    operation3();\n  }\n}\n```\n\n```java:ConcreteClass.java\npublic class ConcreteClass extends AbstractClass {\n  protected void operation1() {\n    System.out.println(\"This is op 1.\");\n  }\n  protected void operation2() {\n    System.out.println(\"This is op 2.\");\n  }\n  protected void operation3() {\n    System.out.println(\"This is op 3.\");\n  }\n}\n```\n\n\n## Ruby \u3067\u306e\u5b9f\u88c5\nJava \u306e\u5834\u5408\u306f\u89aa\u30af\u30e9\u30b9\u3067\u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u5b50\u30af\u30e9\u30b9\u3067\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u3092\u5f37\u5236\u3067\u304d\u308b\u304c\u3001Ruby\u306b\u306f\u305d\u306e\u3088\u3046\u306a\u4ed5\u7d44\u307f\u306f\u5b58\u5728\u3057\u306a\u3044\u3002\n\n\u305d\u306e\u305f\u3081\u3001\u5b50\u30af\u30e9\u30b9\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3055\u308c\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u305f\u3081\u306b\u3001\u89aa\u30af\u30e9\u30b9\u3067\u306f\u4f8b\u5916\u3092\u6295\u3052\u308b\u3088\u3046\u306b\u3059\u308b\u3001\u3068\u3044\u3046\u65b9\u6cd5\u3092\u3068\u308b\u3002\n\n```rb:AbstractClass\nclass AbstractClass\n  def operation1\n    raise \"Must override method :operation1\"\n  end\n\n  def operation2\n    raise \"Must override method :operation2\"\n  end\n\n  def operation3\n    raise \"Must override method :operation3\"\n  end\n\n  def template_method\n    operation1\n    operation2\n    operation3\n  end\nend\n```\n\n```rb:ConcreteClass\nclass ConcreteClass < AbstractClass\n  def operation1\n    puts \"This is op 1.\"\n  end\n  def operation2\n    puts \"This is op 2.\"\n  end\n\n  # operation3 \u306e\u5b9f\u88c5\u6f0f\u308c\nend\n```\n\n\u3053\u306e\u5834\u5408\u3001`ConcreteClass.new.template_method` \u306e\u3088\u3046\u306b\u5b9f\u884c\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b **\u5b9f\u884c\u6642\u4f8b\u5916** \u304c\u767a\u751f\u3059\u308b\u3002\n\n```\nThis is op 1.\nThis is op 2.\ntest.rb:11:in `operation3': Must override method :operation3 (RuntimeError)\n\tfrom test.rb:17:in `template_method'\n\tfrom test.rb:32:in `<main>'\n```\n\n\u3082\u3061\u308d\u3093\u5b9f\u884c\u3057\u3066\u307f\u308b\u307e\u3067\u30a8\u30e9\u30fc\u306f\u767a\u898b\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u305d\u308c\u3092\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306a\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u884c\u3048\u3070\u826f\u3044\u3002\u3064\u307e\u308a\u3001Java \u3067\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u8a3c\u3055\u308c\u3066\u3044\u305f\u90e8\u5206\u3092\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306b\u3066\u691c\u8a3c\u3059\u308b\u306e\u3067\u3059\u3002\n\n\n# Sample Code\n### Abstract Class\n```rb\nclass Worker\n  def initialize\n    @output = 0\n  end\n\n  # template method. 9\u6642\u304b\u308918\u6642\u307e\u3067\u4ed5\u4e8b\u3092\u3057\u3066\u305d\u306e\u65e5\u306e\u9032\u6357\u3092\u4e0a\u53f8\u306b\u5831\u544a\u3057\u307e\u3059\n  # :do_task \u306e\u5b9f\u88c5\u65b9\u6cd5\u304c\u5909\u66f4\u3055\u308c\u3066\u3082\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u81ea\u4f53\u306b\u306f\u5f71\u97ff\u304c\u306a\u3044\n  def work\n    for hour in 9...12\n      hourly_log time: hour, memo: do_task()\n    end\n\n    hourly_log time: 12, memo: lunch()\n\n    for hour in 13...18\n      hourly_log time: hour, memo: do_task()\n    end\n    \n    report\n  end\n\n  private\n\n  # \u62bd\u8c61\u30e1\u30bd\u30c3\u30c9. \u5b50\u30af\u30e9\u30b9\u3067\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\n  def do_task\n    raise \"Must override method :do_task\"\n  end\n\n  # \u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3092\u89aa\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3057\u3066\u304a\u3044\u3066\u3001\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u5b50\u30af\u30e9\u30b9\u306b\u4efb\u305b\u308b\u3053\u3068\u3082\n  def lunch\n    \"Lunch with colleagues.\"\n  end\n\n  def report\n    puts\n    puts \"Hi boss! I'm #{self.class}.\"\n    puts \"Today I have finished #{@output} tasks!\"\n    puts\n  end\n\n  def hourly_log(time: , memo: )\n    printf(\"%02d:00 %s\\n\", time, memo)\n  end\nend\n```\n\n###ConcreteClass\n\n```rb\nclass EarnestWorker < Worker\n  # \u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5. \u30b3\u30f3\u30b9\u30bf\u30f3\u30c8\u306b\u4ed5\u4e8b\u3092\u3057\u307e\u3059\n  def do_task\n    @output += 1\n    \"Working.\"\n  end\n\n  # \u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3068\u306f\u7570\u306a\u308b\u6319\u52d5\u306b\u3057\u305f\u3044\u306e\u3067\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\n  def lunch\n    @output += 1\n    \"Lunch and work!\"\n  end\nend\n```\n\n```rb\nclass LazyWorker < Worker\n  # \u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5. \u3068\u304d\u305f\u307e\u5bdd\u3066\u3057\u307e\u3044\u307e\u3059\n  def do_task\n    if [true, false].sample\n      @output += 1\n      \"Working.\"\n    else\n      \"Take a nap...\"\n    end\n  end\nend\n```\n\n###\u547c\u3073\u51fa\u3057\n\n```rb\nworkers = [LazyWorker.new, EarnestWorker.new]\n\nworkers.each do |w|\n  w.work\nend\n```\n\n####\u5b9f\u884c\u7d50\u679c\n\n```\n09:00 Working.\n10:00 Take a nap...\n11:00 Working.\n12:00 Lunch with colleagues.\n13:00 Working.\n14:00 Working.\n15:00 Working.\n16:00 Take a nap...\n17:00 Working.\n\nHi boss! I'm LazyWorker.\nToday I have finished 6 tasks!\n\n09:00 Working.\n10:00 Working.\n11:00 Working.\n12:00 Lunch and work!\n13:00 Working.\n14:00 Working.\n15:00 Working.\n16:00 Working.\n17:00 Working.\n\nHi boss! I'm EarnestWorker.\nToday I have finished 9 tasks!\n```\n\n# \u53c2\u8003\nOlsen, R. 2007. [*Design Patterns in Ruby*](https://www.amazon.co.jp/dp/B004YW6M6G/ref=cm_sw_r_tw_dp_JODHxb1S34F51)\n", "tags": ["Ruby", "DesignPatterns", "Java", "\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3"]}