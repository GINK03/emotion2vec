{"context": " More than 1 year has passed since last update.\n\n\u5f62\u72b6\u30de\u30c3\u30c1\u30f3\u30b0\u306e\u7279\u5fb4\n\u8f1d\u5ea6\u60c5\u5831\u3092\u7528\u3044\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u3068\u7570\u306a\u308a\u3001\u5f62\u72b6\u60c5\u5831\u3092\u7528\u3044\u305f\u30de\u30c3\u30c1\u30f3\u30b0\u306b\u306f\u4ee5\u4e0b\u306e\u5229\u70b9\u304c\u3042\u308b\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n    1. \u56de\u8ee2\u3084\u30b9\u30b1\u30fc\u30eb\u5909\u5316\u306b\u5bfe\u5fdc\u3067\u304d\u308b\n    2. \u8f1d\u5ea6\u5024\u306e\u5909\u5316\u306b\u5f37\u3044\n    3. \u7279\u5fb4\u7684\u306a\u5f62\u72b6\u3092\u6301\u3064\u30e2\u30ce(\u89d2\u304c\u3042\u308b\u3001\u306a\u3069)\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u7cbe\u5ea6\u304c\u9ad8\u3044\n\u90fd\u5408\u3088\u304fOpenCV\u306b\u306fcv::matchShapes\u3068\u3044\u3046\u95a2\u6570\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4f8b\u984c\n\u4ee5\u4e0b\u306e\u5165\u529b\u753b\u50cf\u304b\u3089\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u63a2\u3057\u307e\u3059\u3002\n\u5165\u529b\u753b\u50cf\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\n\n\u5177\u4f53\u7684\u306a\u624b\u9806\ncv::matchTemplate\u3068\u7570\u306a\u308a\u3001cv::matchShapes\u306f\u753b\u50cf\u540c\u58eb\u306e\u985e\u4f3c\u5ea6\u3092\u6c42\u3081\u308b\u3060\u3051\u306e\u95a2\u6570\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u300c\u30de\u30c3\u30c1\u30f3\u30b0\u3057\u305f\u3044\u5bfe\u8c61\u7269\u304c\u3069\u3053\u306b\u3042\u308b\u304b\u300d\u306f\u5225\u306b\u63a2\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u624b\u9806\u3092\u3068\u308a\u307e\u3057\u305f\u3002\n    1. \u5165\u529b\u753b\u50cf\u3068\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u753b\u50cf\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5316\u2192\u4e8c\u5024\u5316\n    2. \u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u6f14\u7b97\u3067\u30ce\u30a4\u30ba\u9664\u53bb\n    3. \u5165\u529b\u753b\u50cf\u306b\u30e9\u30d9\u30ea\u30f3\u30b0\u3092\u884c\u3044\u3001\u5404\u30d6\u30ed\u30d6\u306e\u60c5\u5831\u3092\u53d6\u5f97(OpenCV3.0\u4f7f\u7528)\n    4. \u5404\u30d6\u30ed\u30d6\u306b\u5bfe\u3057\u3066cv::matchShapes\u3092\u884c\u3044\u3001\u95be\u5024\u4ee5\u4e0b\u306a\u3089\u30de\u30c3\u30c1\u30f3\u30b0\n\u4e8c\u5024\u5316+\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u6f14\u7b97\u5f8c\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u5143\u3005\u9ed2\u304b\u3063\u305f\u90e8\u5206\u304c\u767d\u306b\u306a\u308b\u3088\u3046\u306b\u53cd\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\u5b9f\u7528\u7684\u306b\u306f\u4e8c\u5024\u5316\u95be\u5024\u306e\u6c7a\u5b9a\u3068\u3044\u3046\u91cd\u8981\u306a\u554f\u984c\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u6c7a\u3081\u6253\u3061\u3067\u3059\u3002\n\u524d\u51e6\u7406\u5f8c\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\n\u30d6\u30ed\u30d6\u306f\u4ee5\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u53d6\u5f97\u3067\u304d\u307e\u3057\u305f\u3002\u30d3\u30f3\u306e\u7d75\u306e\u90e8\u5206\u3060\u3051\u30de\u30c3\u30c1\u30f3\u30b0\u3057\u3066\u304f\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u304c\u2026\u3002\n\u30e9\u30d9\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u305f\u30d6\u30ed\u30d6\n\n\n\u7d50\u679c\n\u3059\u3044\u307e\u305b\u3093\u3001\u3053\u3053\u307e\u3067\u5049\u305d\u3046\u306b\u8a71\u3057\u3066\u304d\u307e\u3057\u305f\u304c100\u70b9\u6e80\u70b9\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3067\u3057\u305f\n\u4ee5\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u3001\u673a\u306e\u7aef\u3063\u3053\u304c\u30de\u30c3\u30c1\u30f3\u30b0\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3082\u56f0\u3063\u305f\u3053\u3068\u306b\u3001\u3053\u3053\u306e\u985e\u4f3c\u5ea6\u304c\u4e00\u756a\u9ad8\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002cv::matchShapes\u306fHu\u30e2\u30fc\u30e1\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u3044\u308b\u305d\u3046\u306a\u306e\u3067\u3001\u305d\u306e\u3042\u305f\u308a\u306b\u3064\u3044\u3066\u4e00\u5ea6\u6df1\u304f\u52c9\u5f37\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\uff08\u307e\u3042\u3001\u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3060\u3063\u305f\u3089\u3082\u3063\u3068\u8907\u96d1\u306a\u7279\u5fb4\u91cf\u3092\u4f7f\u3063\u305f\u65b9\u304c\u3044\u3044\u3088\u306d\u2026)\n\n\n\u30b3\u30fc\u30c9\n\u304a\u307e\u3051\u3002OpenCV3.0\u306f\u5fc5\u9808\u3002\u30d5\u30a1\u30a4\u30eb\u5165\u51fa\u529b\u306a\u3093\u304b\u306f\u304b\u306a\u308a\u9069\u5f53\u3067\u3059\u3002\n\nShapeMatching.cpp\n#include <iostream>\n#include \"opencv2\\\\opencv.hpp\"\n#include \"opencv2\\\\opencv_lib.hpp\"\n\n// \u5b9a\u6570\nconst int tempThres = 48;           // \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4e8c\u5024\u5316\u95be\u5024\nconst int srcThres  = 36;           // \u5165\u529b\u753b\u50cf\u4e8c\u5024\u5316\u95be\u5024\nconst double huMomentThres = 0.01;  // \u5f62\u72b6\u30de\u30c3\u30c1\u30f3\u30b0\u306e\u95be\u5024\n\nint main()\n{\n    cv::Mat temp = cv::imread(\"./image/temp.jpg\", 0); // \u30cb\u30c3\u30ab\u306e\u304a\u3058\u3055\u3093\u306e\u753b\u50cf\n    if (temp.empty()){\n        std::cout << \"\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u8aad\u307f\u8fbc\u307f\u30a8\u30e9\u30fc\" << std::endl;\n        return -1;\n    }\n\n    cv::Mat src = cv::imread(\"./image/src.jpg\"); // \u64ae\u5f71\u3055\u308c\u305f\u753b\u50cf\n    if (src.empty()){\n        std::cout << \"\u5165\u529b\u753b\u50cf\u8aad\u307f\u8fbc\u307f\u30a8\u30e9\u30fc\" << std::endl;\n        return -1;\n    }\n    cv::Mat src_gray;\n    cv::cvtColor(src, src_gray, CV_BGR2GRAY);\n\n    // \u4e8c\u5024\u5316\n    cv::Mat temp_bin, src_bin;\n    cv::threshold(temp, temp_bin, tempThres, 255, cv::THRESH_BINARY_INV);\n    cv::threshold(src_gray, src_bin, srcThres, 255, cv::THRESH_BINARY_INV);\n\n    // \u30ce\u30a4\u30ba\u9664\u53bb\n    cv::morphologyEx(temp_bin, temp_bin, cv::MORPH_OPEN, cv::Mat(), cv::Point(-1, -1), 2);\n    cv::morphologyEx(src_bin,  src_bin,  cv::MORPH_OPEN, cv::Mat(), cv::Point(-1, -1), 2);\n\n    // \u30e9\u30d9\u30ea\u30f3\u30b0\n    cv::Mat labelsImg;\n    cv::Mat stats;\n    cv::Mat centroids;\n    int nLabels = cv::connectedComponentsWithStats(src_bin, labelsImg, stats, centroids);\n\n    // \u30e9\u30d9\u30eb\u3054\u3068\u306eROI\u3092\u5f97\u308b(0\u756a\u76ee\u306f\u80cc\u666f\u306a\u306e\u3067\u7121\u8996)\n    cv::Mat roiImg;\n    cv::cvtColor(src_bin, roiImg, CV_GRAY2BGR);\n    std::vector<cv::Rect> roiRects;\n    for (int i = 1; i < nLabels; i++) {\n        int *param = stats.ptr<int>(i);\n\n        int x = param[cv::ConnectedComponentsTypes::CC_STAT_LEFT];\n        int y = param[cv::ConnectedComponentsTypes::CC_STAT_TOP];\n        int height = param[cv::ConnectedComponentsTypes::CC_STAT_HEIGHT];\n        int width = param[cv::ConnectedComponentsTypes::CC_STAT_WIDTH];\n        roiRects.push_back(cv::Rect(x, y, width, height));\n\n        cv::rectangle(roiImg, roiRects.at(i-1), cv::Scalar(0, 255, 0), 2);\n    }\n\n    // hu\u30e2\u30fc\u30e1\u30f3\u30c8\u306b\u3088\u308b\u5f62\u72b6\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u884c\u3046\n    cv::Mat dst = src.clone();\n    for (int i = 1; i < nLabels; i++){\n        cv::Mat roi = src_bin(roiRects.at(i-1));    // \u5bfe\u8c61\u3068\u3059\u308b\u30d6\u30ed\u30d6\u306e\u9818\u57df\u53d6\u308a\u51fa\u3057\n        double similarity = cv::matchShapes(temp_bin, roi, CV_CONTOURS_MATCH_I1, 0);    // hu\u30e2\u30fc\u30e1\u30f3\u30c8\u306b\u3088\u308b\u30de\u30c3\u30c1\u30f3\u30b0\n\n        if (similarity < huMomentThres){\n            cv::rectangle(dst, roiRects.at(i - 1), cv::Scalar(0, 255, 0), 2);\n        }\n    }\n\n    cv::imshow(\"template\", temp);\n    cv::imshow(\"src\", src);\n    cv::imshow(\"dst\", dst);\n    cv::waitKey();\n\n    cv::imwrite(\"dst.jpg\", dst);\n\n    return 0;\n}\n\n\n# \u5f62\u72b6\u30de\u30c3\u30c1\u30f3\u30b0\u306e\u7279\u5fb4\n\u8f1d\u5ea6\u60c5\u5831\u3092\u7528\u3044\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u3068\u7570\u306a\u308a\u3001\u5f62\u72b6\u60c5\u5831\u3092\u7528\u3044\u305f\u30de\u30c3\u30c1\u30f3\u30b0\u306b\u306f\u4ee5\u4e0b\u306e\u5229\u70b9\u304c\u3042\u308b\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\t1. \u56de\u8ee2\u3084\u30b9\u30b1\u30fc\u30eb\u5909\u5316\u306b\u5bfe\u5fdc\u3067\u304d\u308b\n\t2. \u8f1d\u5ea6\u5024\u306e\u5909\u5316\u306b\u5f37\u3044\n\t3. \u7279\u5fb4\u7684\u306a\u5f62\u72b6\u3092\u6301\u3064\u30e2\u30ce(\u89d2\u304c\u3042\u308b\u3001\u306a\u3069)\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u7cbe\u5ea6\u304c\u9ad8\u3044\n\u90fd\u5408\u3088\u304fOpenCV\u306b\u306fcv::matchShapes\u3068\u3044\u3046\u95a2\u6570\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n# \u4f8b\u984c\n\u4ee5\u4e0b\u306e\u5165\u529b\u753b\u50cf\u304b\u3089\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u63a2\u3057\u307e\u3059\u3002\n**\u5165\u529b\u753b\u50cf**\n![src.jpg](https://qiita-image-store.s3.amazonaws.com/0/111593/863ff86d-8249-a7f1-5940-5dbe520a2fbf.jpeg)\n\n**\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8**\n![temp.jpg](https://qiita-image-store.s3.amazonaws.com/0/111593/02de596c-6379-0883-be2e-086e75a199c4.jpeg)\n\n# \u5177\u4f53\u7684\u306a\u624b\u9806\ncv::matchTemplate\u3068\u7570\u306a\u308a\u3001cv::matchShapes\u306f\u753b\u50cf\u540c\u58eb\u306e\u985e\u4f3c\u5ea6\u3092\u6c42\u3081\u308b\u3060\u3051\u306e\u95a2\u6570\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u300c\u30de\u30c3\u30c1\u30f3\u30b0\u3057\u305f\u3044\u5bfe\u8c61\u7269\u304c\u3069\u3053\u306b\u3042\u308b\u304b\u300d\u306f\u5225\u306b\u63a2\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u624b\u9806\u3092\u3068\u308a\u307e\u3057\u305f\u3002\n\t1. \u5165\u529b\u753b\u50cf\u3068\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u753b\u50cf\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5316\u2192\u4e8c\u5024\u5316\n\t2. \u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u6f14\u7b97\u3067\u30ce\u30a4\u30ba\u9664\u53bb\n\t3. \u5165\u529b\u753b\u50cf\u306b\u30e9\u30d9\u30ea\u30f3\u30b0\u3092\u884c\u3044\u3001\u5404\u30d6\u30ed\u30d6\u306e\u60c5\u5831\u3092\u53d6\u5f97(OpenCV3.0\u4f7f\u7528)\n\t4. \u5404\u30d6\u30ed\u30d6\u306b\u5bfe\u3057\u3066cv::matchShapes\u3092\u884c\u3044\u3001\u95be\u5024\u4ee5\u4e0b\u306a\u3089\u30de\u30c3\u30c1\u30f3\u30b0\n\n\u4e8c\u5024\u5316+\u30e2\u30eb\u30d5\u30a9\u30ed\u30b8\u30fc\u6f14\u7b97\u5f8c\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u5143\u3005\u9ed2\u304b\u3063\u305f\u90e8\u5206\u304c\u767d\u306b\u306a\u308b\u3088\u3046\u306b\u53cd\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\u5b9f\u7528\u7684\u306b\u306f\u4e8c\u5024\u5316\u95be\u5024\u306e\u6c7a\u5b9a\u3068\u3044\u3046\u91cd\u8981\u306a\u554f\u984c\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u6c7a\u3081\u6253\u3061\u3067\u3059\u3002\n**\u524d\u51e6\u7406\u5f8c\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8**\n![temp.jpg](https://qiita-image-store.s3.amazonaws.com/0/111593/26998891-08a5-7f7c-0219-92b79e9d83b7.jpeg)\n\n\u30d6\u30ed\u30d6\u306f\u4ee5\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u53d6\u5f97\u3067\u304d\u307e\u3057\u305f\u3002\u30d3\u30f3\u306e\u7d75\u306e\u90e8\u5206\u3060\u3051\u30de\u30c3\u30c1\u30f3\u30b0\u3057\u3066\u304f\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u304c\u2026\u3002\n**\u30e9\u30d9\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u305f\u30d6\u30ed\u30d6**\n![match.jpg](https://qiita-image-store.s3.amazonaws.com/0/111593/e7e79c0a-922e-79c3-7323-64d975bb97af.jpeg)\n\n# \u7d50\u679c\n**\u3059\u3044\u307e\u305b\u3093\u3001\u3053\u3053\u307e\u3067\u5049\u305d\u3046\u306b\u8a71\u3057\u3066\u304d\u307e\u3057\u305f\u304c100\u70b9\u6e80\u70b9\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3067\u3057\u305f**\n\u4ee5\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u3001\u673a\u306e\u7aef\u3063\u3053\u304c\u30de\u30c3\u30c1\u30f3\u30b0\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3082\u56f0\u3063\u305f\u3053\u3068\u306b\u3001\u3053\u3053\u306e\u985e\u4f3c\u5ea6\u304c\u4e00\u756a\u9ad8\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002cv::matchShapes\u306fHu\u30e2\u30fc\u30e1\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u3044\u308b\u305d\u3046\u306a\u306e\u3067\u3001\u305d\u306e\u3042\u305f\u308a\u306b\u3064\u3044\u3066\u4e00\u5ea6\u6df1\u304f\u52c9\u5f37\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\n\uff08\u307e\u3042\u3001\u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3060\u3063\u305f\u3089\u3082\u3063\u3068\u8907\u96d1\u306a\u7279\u5fb4\u91cf\u3092\u4f7f\u3063\u305f\u65b9\u304c\u3044\u3044\u3088\u306d\u2026)\n![dst.jpg](https://qiita-image-store.s3.amazonaws.com/0/111593/2c0146ce-b1bf-8002-e6f9-b5a952465fd5.jpeg)\n\n# \u30b3\u30fc\u30c9\n\u304a\u307e\u3051\u3002OpenCV3.0\u306f\u5fc5\u9808\u3002\u30d5\u30a1\u30a4\u30eb\u5165\u51fa\u529b\u306a\u3093\u304b\u306f\u304b\u306a\u308a\u9069\u5f53\u3067\u3059\u3002\n\n```Cpp:ShapeMatching.cpp\n#include <iostream>\n#include \"opencv2\\\\opencv.hpp\"\n#include \"opencv2\\\\opencv_lib.hpp\"\n\n// \u5b9a\u6570\nconst int tempThres = 48;\t\t\t// \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4e8c\u5024\u5316\u95be\u5024\nconst int srcThres  = 36;\t\t\t// \u5165\u529b\u753b\u50cf\u4e8c\u5024\u5316\u95be\u5024\nconst double huMomentThres = 0.01;\t// \u5f62\u72b6\u30de\u30c3\u30c1\u30f3\u30b0\u306e\u95be\u5024\n\nint main()\n{\n\tcv::Mat temp = cv::imread(\"./image/temp.jpg\", 0); // \u30cb\u30c3\u30ab\u306e\u304a\u3058\u3055\u3093\u306e\u753b\u50cf\n\tif (temp.empty()){\n\t\tstd::cout << \"\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u8aad\u307f\u8fbc\u307f\u30a8\u30e9\u30fc\" << std::endl;\n\t\treturn -1;\n\t}\n\n\tcv::Mat src = cv::imread(\"./image/src.jpg\"); // \u64ae\u5f71\u3055\u308c\u305f\u753b\u50cf\n\tif (src.empty()){\n\t\tstd::cout << \"\u5165\u529b\u753b\u50cf\u8aad\u307f\u8fbc\u307f\u30a8\u30e9\u30fc\" << std::endl;\n\t\treturn -1;\n\t}\n\tcv::Mat src_gray;\n\tcv::cvtColor(src, src_gray, CV_BGR2GRAY);\n\n\t// \u4e8c\u5024\u5316\n\tcv::Mat temp_bin, src_bin;\n\tcv::threshold(temp, temp_bin, tempThres, 255, cv::THRESH_BINARY_INV);\n\tcv::threshold(src_gray, src_bin, srcThres, 255, cv::THRESH_BINARY_INV);\n\n\t// \u30ce\u30a4\u30ba\u9664\u53bb\n\tcv::morphologyEx(temp_bin, temp_bin, cv::MORPH_OPEN, cv::Mat(), cv::Point(-1, -1), 2);\n\tcv::morphologyEx(src_bin,  src_bin,  cv::MORPH_OPEN, cv::Mat(), cv::Point(-1, -1), 2);\n\n\t// \u30e9\u30d9\u30ea\u30f3\u30b0\n\tcv::Mat labelsImg;\n\tcv::Mat stats;\n\tcv::Mat centroids;\n\tint nLabels = cv::connectedComponentsWithStats(src_bin, labelsImg, stats, centroids);\n\n\t// \u30e9\u30d9\u30eb\u3054\u3068\u306eROI\u3092\u5f97\u308b(0\u756a\u76ee\u306f\u80cc\u666f\u306a\u306e\u3067\u7121\u8996)\n\tcv::Mat roiImg;\n\tcv::cvtColor(src_bin, roiImg, CV_GRAY2BGR);\n\tstd::vector<cv::Rect> roiRects;\n\tfor (int i = 1; i < nLabels; i++) {\n\t\tint *param = stats.ptr<int>(i);\n\n\t\tint x = param[cv::ConnectedComponentsTypes::CC_STAT_LEFT];\n\t\tint y = param[cv::ConnectedComponentsTypes::CC_STAT_TOP];\n\t\tint height = param[cv::ConnectedComponentsTypes::CC_STAT_HEIGHT];\n\t\tint width = param[cv::ConnectedComponentsTypes::CC_STAT_WIDTH];\n\t\troiRects.push_back(cv::Rect(x, y, width, height));\n\n\t\tcv::rectangle(roiImg, roiRects.at(i-1), cv::Scalar(0, 255, 0), 2);\n\t}\n\n\t// hu\u30e2\u30fc\u30e1\u30f3\u30c8\u306b\u3088\u308b\u5f62\u72b6\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u884c\u3046\n\tcv::Mat dst = src.clone();\n\tfor (int i = 1; i < nLabels; i++){\n\t\tcv::Mat roi = src_bin(roiRects.at(i-1));\t// \u5bfe\u8c61\u3068\u3059\u308b\u30d6\u30ed\u30d6\u306e\u9818\u57df\u53d6\u308a\u51fa\u3057\n\t\tdouble similarity = cv::matchShapes(temp_bin, roi, CV_CONTOURS_MATCH_I1, 0);\t// hu\u30e2\u30fc\u30e1\u30f3\u30c8\u306b\u3088\u308b\u30de\u30c3\u30c1\u30f3\u30b0\n\n\t\tif (similarity < huMomentThres){\n\t\t\tcv::rectangle(dst, roiRects.at(i - 1), cv::Scalar(0, 255, 0), 2);\n\t\t}\n\t}\n\n\tcv::imshow(\"template\", temp);\n\tcv::imshow(\"src\", src);\n\tcv::imshow(\"dst\", dst);\n\tcv::waitKey();\n\n\tcv::imwrite(\"dst.jpg\", dst);\n\n\treturn 0;\n}\n```\n\n", "tags": ["\u753b\u50cf\u51e6\u7406", "OpenCV"]}