{"context": " More than 1 year has passed since last update.\u4eca\u56de\u306fJava6\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305fAnnotation Processing\u3092\u4f7f\u3063\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u751f\u6210\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u307e\u3067\u306e\u904e\u7a0b\u3092\u8a18\u8f09\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nAnnotation Processing\u306b\u3064\u3044\u3066\u306f\u30cd\u30c3\u30c8\u3067\u691c\u7d22\u3057\u3066\u3044\u3051\u3070\u3069\u3046\u3044\u3046\u3082\u306e\u304b\u306f\u304a\u307c\u308d\u3052\u306a\u304c\u3089\u7406\u89e3\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n1. Processor\u3092\u89e6\u3063\u3066\u307f\u308b\u3002\n\nProcessor\u63d0\u4f9b\u5074\n1.1. Processor\u63d0\u4f9b\u7528\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3002\n1.2. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u306esrc\u30d5\u30a9\u30eb\u30c0\u5185\u306b\n\u30fbTargetClass.java      <- Annotation\u5b9a\u7fa9\u7528\u30af\u30e9\u30b9\u30d5\u30a1\u30a4\u30eb\n\u30fbSampleProcessor.java  <- Processor\u306e\u5b9f\u88c5\n1.3. TargetClass.java\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3002\n\nTargetClass.java\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.CLASS)\npublic @interface TargetClass{\n}\n\n\n\n1.4. AbstractProcessor\u3092\u7d99\u627f\u3057\u305fSimpleProcessor\u3092\u5b9f\u88c5\u3002\n\uff08process\u30e1\u30bd\u30c3\u30c9\u306fProcessor\u3092\u4f7f\u3046\u5074\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u6642\u70b9\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059)\n\nSimpleProcessor.java\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\n@SupportedAnnotationTypes({\"*\"})\npublic class Processor extends AbstractProcessor{\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations,\n            RoundEnvironment roundEnv) {\n        processingEnv.getMessager().printMessage(Kind.NOTE, \n                \"\u30b5\u30f3\u30d7\u30eb\");\n        return true;\n    }\n\n}\n\n\n\n1.5. src\u30d5\u30a9\u30eb\u30c0\u5185\u306bMETA-INF/services \u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3002\u305d\u306e\u4e2d\u306bjavax.annotation.processing.Processor\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3002\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u5185\u306b\u5b9f\u884c\u3057\u305f\u3044Processor\u306e\u30af\u30e9\u30b9\u540d\u3092\u8a18\u8f09\u3002\n1.6. src\u30d5\u30a9\u30eb\u30c0\u3092\u542b\u3093\u3060jar\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3002\n\nProcessor\u4f7f\u7528\u5074\n1.7. Processor\u4f7f\u7528\u5074\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3002\n1.8. 1.6.\u3067\u751f\u6210\u3057\u305fjar\u30d5\u30a1\u30a4\u30eb\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3001Java Build Path\u306b\u8a2d\u5b9a\u3059\u308b\u3002\n1.9. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9078\u629e\u2192\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u9078\u629e\u3002Java Compiler-Annotation Processing-Factory Path\u3092\u9078\u629e\u3057\u30011.6\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305fjar\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u5b9a\u3002\n\u305d\u3057\u3066\u3001Java Compiler-Annotation Processing\u3092\u9078\u629e\u3057\u3001\u4e0b\u306e\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u901a\u308a\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b\u3002\n[Java Compiler-Annotation Processing-Factory Path]\n\n[Java Compiler-Annotation Processing]\n\n1.10. \u4e00\u5ea6\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308b\u306e\u3067\u3053\u308c\u3067oK.\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u3053\u3053\u306b\u3067\u308b\uff01\nProcess\u30e1\u30bd\u30c3\u30c9\u306f2\u56de\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\uff08\u306a\u305cProcessor\u304c\uff12\u56de\u5b9f\u884c\u3055\u308c\u308b\u306e\u304b\u306f\u2026\u3059\u3044\u307e\u305b\u3093\u3001\u8abf\u67fb\u4e0d\u8db3\u3067\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u2026\uff09\nEclipse\u3067Error Log\u3092\u958b\u304f\u3068Processor\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\n2. javapoet\u3092\u4f7f\u3063\u305f\u30bd\u30fc\u30b9\u751f\u6210\n\u3044\u3088\u3044\u3088\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u751f\u6210\u306b\u5165\u308a\u307e\u3059\u304c\u2026\u4e0b\u624b\u306b\u66f8\u3053\u3046\u3068\u3059\u308b\u3068\u6b7b\u306b\u307e\u3059\u3002\u306a\u306e\u3067\u3001Square\u793e\u306ejavapoet\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u697d\u306b\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3059\u3002(\u3068\u3044\u3046\u304b\u6700\u8fd1\u306fjavapoet\u3092\u4f7f\u3046\u3084\u308a\u65b9\u304c\u30e1\u30b8\u30e3\u30fc\u3089\u3057\u3044\u3002)\nSquare/javapoet\nhttps://github.com/square/javapoet\n\nProcessor\u63d0\u4f9b\u5074\n2.1. javapoet.jar\u3092\u4e0a\u8a18\u30da\u30fc\u30b8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9(README.md\u306e\u4e0b\u90e8\u306b\u30ea\u30f3\u30af\u3042\u308a)\n2.2. Processor\u63d0\u4f9b\u5074\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fjavapoet.jar\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3001Java Build Path\u306b\u8a2d\u5b9a\u3059\u308b\u3002\n2.3. SampleProcessor.java\u306b\u30b3\u30fc\u30c9\u751f\u6210\u306e\u30ed\u30b8\u30c3\u30af\u3092\u66f8\u304f\u3002\n\nSampleProcessor.java\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\n@SupportedAnnotationTypes({\"*\"})\npublic class Processor extends AbstractProcessor{\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations,\n            RoundEnvironment roundEnv) {\n        processingEnv.getMessager().printMessage(Kind.NOTE, \n                \"\u30b5\u30f3\u30d7\u30eb\");\n        try{\n            makeSource();\n            processingEnv.getMessager().printMessage(Kind.NOTE, \"\u30af\u30e9\u30b9\u30d5\u30a1\u30a4\u30eb\u751f\u6210\");\n        }catch(IOException ex){\n            ex.printStackTrace();\n        }\n        return true;\n    }\n\n    private void makeSource() throws IOException{\n        MethodSpec main = MethodSpec.methodBuilder(\"create\")\n                .addModifiers(Modifier.PUBLIC, Modifier.STATIC)\n                .returns(void.class)\n                .addParameter(String[].class, \"args\")\n                .addStatement(\"Hello World!!\")\n                .build();\n\n        TypeSpec sampleMain = TypeSpec.classBuilder(\"SampleMain\")\n                .addModifiers(Modifier.PUBLIC, Modifier.FINAL)\n                .addMethod(main)\n                .build();\n\n        JavaFile javaFile = JavaFile.builder(\"com.lyricaloriginal\"\n                , sampleMain)\n                .build();\n        javaFile.writeTo(processingEnv.getFiler());\n    }\n}\n\n\n\n\u3053\u3053\u306b\u8a18\u8f09\u3057\u3066\u3044\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fjavapoet\u306eGithub\u306b\u63d0\u793a\u3055\u308c\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u306e\u539f\u578b\u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nJavaFile#writeTo\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u306f\u51fa\u529b\u5148\u30d5\u30a9\u30eb\u30c0\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002ProcessingEnv#getFiler()\u306fProcessor\u4f7f\u7528\u5074\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u306ebin\u30d5\u30a9\u30eb\u30c0\u3092\u3055\u3059\u306e\u3067\u3001\u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u306fbin\u30d5\u30a9\u30eb\u30c0\u5185\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n2.4. \u3082\u3046\u4e00\u5ea6jar\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\nProcessor\u4f7f\u7528\u5074\n2.5. 2.4.\u3067\u51fa\u529b\u3057\u305fjar\u3068javapoet.jar\u3092Processor\u4f7f\u7528\u5074\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3002\n2.6. 1.9.\u306e\u3088\u3046\u306b\u3001Java Compiler-Annotation Processing-Factory Path\u306e\u3068\u3053\u308d\u3067javapoet.jar\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n2.7. \u30ea\u30d3\u30eb\u30c9\u3092\u3059\u308b\u3068bin\u30d5\u30a9\u30eb\u30c0\u5185\u306bcom/lyricaloriginal/SampleMain.class\u30d5\u30a9\u30eb\u30c0\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n3. \u6307\u5b9a\u3057\u305fAnnotation\u306b\u95a2\u9023\u3059\u308bFactory\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u3002\n\nProcessor\u63d0\u4f9b\u5074\n3.1. TargetClass.java, TargetField.java\u3092\u4f5c\u6210\u3002\uff08\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002\uff09\n\nTargetClass.java\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.CLASS)\npublic @interface TargetClass {\n\n}\n\n\n\nTargetField.java\n@Target(ElementType.FIELD)\n@Retention(RetentionPolicy.CLASS)\npublic @interface TargetField {\n\n}\n\n\n3.2. MakeFactoryProcessor.java\u3092\u4f5c\u6210\u3002\n\nMakeFactoryProcessor.java\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\n@SupportedAnnotationTypes({\"*\"})\npublic class MakeFactoryProcessor extends AbstractProcessor{\n\n    private Filer _filer;\n\n    @Override\n    public synchronized void init(ProcessingEnvironment processingEnv) {\n        super.init(processingEnv);\n        processingEnv.getMessager().printMessage(Kind.NOTE, \"\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u521d\u671f\u5316\");\n        _filer = processingEnv.getFiler();\n    }\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations,\n            RoundEnvironment roundEnv) {\n        try{\n            for (TypeElement typeElement : annotations) {\n                for (Element element : roundEnv.getElementsAnnotatedWith(typeElement)) {\n                    TargetClass classAnno = element.getAnnotation(TargetClass.class);\n                    if(classAnno !=null){\n                        createFactoryClass(element);\n                    }\n                }\n            }\n            processingEnv.getMessager().printMessage(Kind.NOTE, \"\u30af\u30e9\u30b9\u30d5\u30a1\u30a4\u30eb\u751f\u6210\");\n            return true;\n        }catch(IOException ex){\n            ex.printStackTrace();\n        }\n        return false;\n    }\n\n    private void createFactoryClass(Element element) throws IOException{\n        ArgumentInfo argInfo = getArgumentInfo(element);\n\n        MethodSpec.Builder builder = MethodSpec.methodBuilder(\"create\")\n                .addModifiers(Modifier.PUBLIC, Modifier.STATIC)\n                .returns(TypeName.get(element.asType()))\n                .addStatement(\"return new $T(\" + argInfo.join() + \")\",\n                        TypeName.get(element.asType()));\n        for(String arg : argInfo.getArgNames()){\n            builder.addParameter(String.class, arg);\n        }\n        MethodSpec create = builder.build();\n\n        String className = element.getSimpleName() + \"Factory\";\n        TypeSpec factory = TypeSpec.classBuilder(className)\n                .addModifiers(Modifier.PUBLIC, Modifier.FINAL)\n                .addMethod(create)\n                .build();\n\n        JavaFile javaFile = JavaFile.builder(\n                getPackageName(element), factory).\n                build();\n        javaFile.writeTo(_filer);\n    }\n\n    private String getPackageName(Element element){\n        List<String> packNames = new ArrayList<String>();\n        Element packageElem = element.getEnclosingElement();\n        while(packageElem != null){\n            String packName = packageElem.\n                    getSimpleName().toString();\n            packNames.add(packName);\n            packageElem = packageElem.getEnclosingElement();\n        }\n\n        StringBuilder sb = new StringBuilder();\n        for(int i = packNames.size() - 1; i >= 0; i--){\n            if(sb.length() > 0){\n                sb.append(\".\");\n            }\n            sb.append(packNames.get(i));\n        }\n        return sb.toString();\n    }\n\n    private ArgumentInfo getArgumentInfo(Element element){\n        ArgumentInfo argInfo = new ArgumentInfo();\n        for(Element e : element.getEnclosedElements()){\n            if(e.getAnnotation(TargetField.class) != null){\n                argInfo.add(e.getSimpleName().toString());\n            }\n        }\n        return argInfo;\n    }\n\n    private class ArgumentInfo{\n        private List<String> _argNames = new ArrayList<String>();\n\n        public void add(String argName){\n            _argNames.add(argName);\n        }\n\n        public String[] getArgNames(){\n            return _argNames.toArray(new String[0]);\n        }\n\n        public String join(){\n            StringBuilder sb = new StringBuilder();\n            for(String argName : _argNames){\n                if(sb.length() > 0){\n                    sb.append(\",\");\n                }\n                sb.append(argName);\n            }\n            return sb.toString();\n        }\n    }\n}\n\n\n@TargetClass\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u30af\u30e9\u30b9\u306b\u3076\u3089\u4e0b\u304c\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u306b@TargetField\u304c\u3064\u3044\u3066\u3044\u308b\u3082\u306e\u3060\u3051\u5f15\u6570\u3068\u3057\u3066\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306e\u51e6\u7406\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001@TargetClass\u304c\u4ed8\u3044\u3066\u3044\u308b\u30af\u30e9\u30b9\u540d+Factory\u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u305f\u3044\u306e\u3067Element#getSimpleName()\u3067\u30af\u30e9\u30b9\u540d\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u3044\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\n3.3. src\u30d5\u30a9\u30eb\u30c0\u5185\u306bMETA-INF/services \u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3002\u305d\u306e\u4e2d\u306bjavax.annotation.processing.Processor\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3002\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u5185\u306b\u5b9f\u884c\u3057\u305f\u3044Processor\u306e\u30af\u30e9\u30b9\u540d\u3092\u8a18\u8f09\u3002\n3.4. Processor\u63d0\u4f9b\u5074\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306esrc\u30d5\u30a1\u30a4\u30eb\u3092\u542b\u3093\u3060jar\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3002\n\nProcessor\u4f7f\u7528\u5074\n3.5. 3.4.\u3067\u51fa\u529b\u3057\u305fjar\u30d5\u30a1\u30a4\u30eb\u3092Processor\u4f7f\u7528\u5074\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3002\n3.6. 1.9.\u306e\u3088\u3046\u306b\u3001Java Compiler-Annotation Processing-Factory Path\u306e\u3068\u3053\u308d\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305fjar\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n3.7. Item.java, Main.java\u306e\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\u3002\n\nMain.java\npublic class Main {\n\n    public static void main(String[] args) {\n        Item item = ItemFactory.create(\"taro\", \"\u3053\u308c\u306f\u732b\u3067\u3059\u3002\");\n        System.out.println(item.getName());\n        System.out.println(item.getDesc());\n    }\n\n}\n\n\n\nItem.java\n@TargetClass\npublic class Item {\n\n\n    @TargetField\n    private String _name;\n\n    @TargetField\n    private String _desc;\n\n    public Item(String name, String desc){\n        _name = name;\n        _desc = desc;\n    }\n\n    public String getName(){\n        return _name;\n    }\n\n    public String getDesc(){\n        return _desc;\n    }\n}\n\n\n3.8. \u4e00\u5ea6\u30d3\u30eb\u30c9\u3092\u8a66\u307f\u3066\u304f\u3060\u3055\u3044\u3002Main.java\u3067\u30d3\u30eb\u30c9\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u304c\u3001ItemFactory.class\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3088\u3046\u306b\u6307\u5b9a\u3059\u308c\u3070\u30d3\u30eb\u30c9\u30a8\u30e9\u30fc\u304c\u89e3\u6d88\u3055\u308c\u307e\u3059\u3002\n\n3.9. \u30d3\u30eb\u30c9\u30a8\u30e9\u30fc\u304c\u5b8c\u5168\u306b\u306a\u304f\u306a\u3063\u305f\u3089\u3001Main.java\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9f\u884c\u7d50\u679c\u304c\u51fa\u308c\u3070OK\u3067\u3059\u3002\n\n\n\u8ffd\u4f38\n\u624b\u524d\u5473\u564c\u3067\u3059\u304c\u3001\u3056\u3063\u304f\u308a\u81ea\u5206\u304c\u3084\u3063\u3066\u304d\u305f\u65b9\u6cd5\u3092\u8a18\u8f09\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n\u4eca\u56de\u4f5c\u3063\u305f\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30af\u30e9\u30b9\u751f\u6210\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306fGithub\u306b\u3042\u3052\u3066\u3044\u307e\u3059\u306e\u3067\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nProcessor\u63d0\u4f9b\u5074\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\nhttps://github.com/LyricalMaestro/ProcessorProvider\nProcessor\u4f7f\u7528\u5074\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\nhttps://github.com/LyricalMaestro/ProcessorUser\n\u5b9f\u306f\u30013.\u306eProcessor\u63d0\u4f9b\u5074\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3068\u304d\u306b\u4f55\u5ea6\u3082\u30c8\u30e9\u30a4\u30a2\u30f3\u30c9\u30a8\u30e9\u30fc\u3092\u3057\u307e\u3057\u305f\u3002\u305d\u306e\u3068\u304d\u306f\u3044\u3061\u3044\u3061jar\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u306f\u4f7f\u7528\u5074\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u2026\u3068\u3044\u3046\u306e\u3092\u3084\u3063\u3066\u3066\u3059\u3054\u3044\u624b\u9593\u3067\u3057\u305f\u3002Processor\u7528\u5358\u4f53\u30c6\u30b9\u30c8\u30c4\u30fc\u30ebAptinaTest\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u307f\u305f\u3044\u3067\u3059\u304c\u3001\u305d\u308c\u3092\u4f7f\u3048\u3070\u3082\u3063\u3068\u697d\u306b\u3067\u304d\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nAptinaUnit\nhttp://aptina.seasar.org/aptina-unit/index.html\n\u4eca\u56de\u306fJava6\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305fAnnotation Processing\u3092\u4f7f\u3063\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u751f\u6210\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u307e\u3067\u306e\u904e\u7a0b\u3092\u8a18\u8f09\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nAnnotation Processing\u306b\u3064\u3044\u3066\u306f\u30cd\u30c3\u30c8\u3067\u691c\u7d22\u3057\u3066\u3044\u3051\u3070\u3069\u3046\u3044\u3046\u3082\u306e\u304b\u306f\u304a\u307c\u308d\u3052\u306a\u304c\u3089\u7406\u89e3\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n# 1. Processor\u3092\u89e6\u3063\u3066\u307f\u308b\u3002\n##Processor\u63d0\u4f9b\u5074\n1.1. Processor\u63d0\u4f9b\u7528\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3002\n\n1.2. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u306esrc\u30d5\u30a9\u30eb\u30c0\u5185\u306b\n\u30fbTargetClass.java      <- Annotation\u5b9a\u7fa9\u7528\u30af\u30e9\u30b9\u30d5\u30a1\u30a4\u30eb\n\u30fbSampleProcessor.java  <- Processor\u306e\u5b9f\u88c5\n\n1.3. TargetClass.java\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3002\n\n```java:TargetClass.java\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.CLASS)\npublic @interface TargetClass{\n}\n\n```\n\n1.4. AbstractProcessor\u3092\u7d99\u627f\u3057\u305fSimpleProcessor\u3092\u5b9f\u88c5\u3002\n\uff08process\u30e1\u30bd\u30c3\u30c9\u306fProcessor\u3092\u4f7f\u3046\u5074\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u6642\u70b9\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059)\n\n```java:SimpleProcessor.java\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\n@SupportedAnnotationTypes({\"*\"})\npublic class Processor extends AbstractProcessor{\n\t\n\t@Override\n\tpublic boolean process(Set<? extends TypeElement> annotations,\n\t\t\tRoundEnvironment roundEnv) {\n\t\tprocessingEnv.getMessager().printMessage(Kind.NOTE, \n\t\t\t\t\"\u30b5\u30f3\u30d7\u30eb\");\n\t\treturn true;\n\t}\n\n}\n\n```\n\n1.5. src\u30d5\u30a9\u30eb\u30c0\u5185\u306bMETA-INF/services \u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3002\u305d\u306e\u4e2d\u306bjavax.annotation.processing.Processor\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3002\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u5185\u306b\u5b9f\u884c\u3057\u305f\u3044Processor\u306e\u30af\u30e9\u30b9\u540d\u3092\u8a18\u8f09\u3002\n\n1.6. src\u30d5\u30a9\u30eb\u30c0\u3092\u542b\u3093\u3060jar\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3002\n\n##Processor\u4f7f\u7528\u5074\n1.7. Processor\u4f7f\u7528\u5074\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3002\n\n1.8. 1.6.\u3067\u751f\u6210\u3057\u305fjar\u30d5\u30a1\u30a4\u30eb\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3001Java Build Path\u306b\u8a2d\u5b9a\u3059\u308b\u3002\n\n1.9. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9078\u629e\u2192\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u9078\u629e\u3002Java Compiler-Annotation Processing-Factory Path\u3092\u9078\u629e\u3057\u30011.6\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305fjar\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u5b9a\u3002\n\u305d\u3057\u3066\u3001Java Compiler-Annotation Processing\u3092\u9078\u629e\u3057\u3001\u4e0b\u306e\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u901a\u308a\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b\u3002\n\n[Java Compiler-Annotation Processing-Factory Path]\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-23 20.31.17.png](https://qiita-image-store.s3.amazonaws.com/0/14989/45ebc9ac-1401-d1c0-d8cf-36d4c3ca0673.png)\n\n[Java Compiler-Annotation Processing]\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-23 20.31.34.png](https://qiita-image-store.s3.amazonaws.com/0/14989/b0722fb2-7506-d9db-8f40-0c36e37289bf.png)\n\n1.10. \u4e00\u5ea6\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308b\u306e\u3067\u3053\u308c\u3067oK.\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u3053\u3053\u306b\u3067\u308b\uff01\nProcess\u30e1\u30bd\u30c3\u30c9\u306f2\u56de\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\uff08\u306a\u305cProcessor\u304c\uff12\u56de\u5b9f\u884c\u3055\u308c\u308b\u306e\u304b\u306f\u2026\u3059\u3044\u307e\u305b\u3093\u3001\u8abf\u67fb\u4e0d\u8db3\u3067\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u2026\uff09\n\nEclipse\u3067Error Log\u3092\u958b\u304f\u3068Processor\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-23 20.37.22.png](https://qiita-image-store.s3.amazonaws.com/0/14989/7000fe61-df1a-1977-07cd-fa797b997f94.png)\n\n\n# 2. javapoet\u3092\u4f7f\u3063\u305f\u30bd\u30fc\u30b9\u751f\u6210\n\u3044\u3088\u3044\u3088\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u751f\u6210\u306b\u5165\u308a\u307e\u3059\u304c\u2026\u4e0b\u624b\u306b\u66f8\u3053\u3046\u3068\u3059\u308b\u3068\u6b7b\u306b\u307e\u3059\u3002\u306a\u306e\u3067\u3001Square\u793e\u306ejavapoet\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u697d\u306b\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3059\u3002(\u3068\u3044\u3046\u304b\u6700\u8fd1\u306fjavapoet\u3092\u4f7f\u3046\u3084\u308a\u65b9\u304c\u30e1\u30b8\u30e3\u30fc\u3089\u3057\u3044\u3002)\n\nSquare/javapoet\nhttps://github.com/square/javapoet\n\n##Processor\u63d0\u4f9b\u5074\n2.1. javapoet.jar\u3092\u4e0a\u8a18\u30da\u30fc\u30b8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9(README.md\u306e\u4e0b\u90e8\u306b\u30ea\u30f3\u30af\u3042\u308a)\n\n2.2. Processor\u63d0\u4f9b\u5074\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fjavapoet.jar\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3001Java Build Path\u306b\u8a2d\u5b9a\u3059\u308b\u3002\n\n2.3. SampleProcessor.java\u306b\u30b3\u30fc\u30c9\u751f\u6210\u306e\u30ed\u30b8\u30c3\u30af\u3092\u66f8\u304f\u3002\n\n```java:SampleProcessor.java\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\n@SupportedAnnotationTypes({\"*\"})\npublic class Processor extends AbstractProcessor{\n\t@Override\n\tpublic boolean process(Set<? extends TypeElement> annotations,\n\t\t\tRoundEnvironment roundEnv) {\n\t\tprocessingEnv.getMessager().printMessage(Kind.NOTE, \n\t\t\t\t\"\u30b5\u30f3\u30d7\u30eb\");\n\t\ttry{\n\t\t\tmakeSource();\n\t\t\tprocessingEnv.getMessager().printMessage(Kind.NOTE, \"\u30af\u30e9\u30b9\u30d5\u30a1\u30a4\u30eb\u751f\u6210\");\n\t\t}catch(IOException ex){\n\t\t\tex.printStackTrace();\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tprivate void makeSource() throws IOException{\n\t\tMethodSpec main = MethodSpec.methodBuilder(\"create\")\n\t\t\t\t.addModifiers(Modifier.PUBLIC, Modifier.STATIC)\n\t\t\t\t.returns(void.class)\n\t\t\t\t.addParameter(String[].class, \"args\")\n\t\t\t\t.addStatement(\"Hello World!!\")\n\t\t\t\t.build();\n\t\t\n\t\tTypeSpec sampleMain = TypeSpec.classBuilder(\"SampleMain\")\n\t\t\t    .addModifiers(Modifier.PUBLIC, Modifier.FINAL)\n\t\t\t    .addMethod(main)\n\t\t\t    .build();\n\t\t\n\t\tJavaFile javaFile = JavaFile.builder(\"com.lyricaloriginal\"\n\t\t\t\t, sampleMain)\n\t\t\t    .build();\n\t\tjavaFile.writeTo(processingEnv.getFiler());\n\t}\n}\n\n```\n\n\u3053\u3053\u306b\u8a18\u8f09\u3057\u3066\u3044\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fjavapoet\u306eGithub\u306b\u63d0\u793a\u3055\u308c\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u306e\u539f\u578b\u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nJavaFile#writeTo\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u306f\u51fa\u529b\u5148\u30d5\u30a9\u30eb\u30c0\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002ProcessingEnv#getFiler()\u306fProcessor\u4f7f\u7528\u5074\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u306ebin\u30d5\u30a9\u30eb\u30c0\u3092\u3055\u3059\u306e\u3067\u3001\u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u306fbin\u30d5\u30a9\u30eb\u30c0\u5185\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n2.4. \u3082\u3046\u4e00\u5ea6jar\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n## Processor\u4f7f\u7528\u5074\n2.5. 2.4.\u3067\u51fa\u529b\u3057\u305fjar\u3068javapoet.jar\u3092Processor\u4f7f\u7528\u5074\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3002\n\n2.6. 1.9.\u306e\u3088\u3046\u306b\u3001Java Compiler-Annotation Processing-Factory Path\u306e\u3068\u3053\u308d\u3067javapoet.jar\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n2.7. \u30ea\u30d3\u30eb\u30c9\u3092\u3059\u308b\u3068bin\u30d5\u30a9\u30eb\u30c0\u5185\u306bcom/lyricaloriginal/SampleMain.class\u30d5\u30a9\u30eb\u30c0\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n# 3. \u6307\u5b9a\u3057\u305fAnnotation\u306b\u95a2\u9023\u3059\u308bFactory\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u3002\n\n##Processor\u63d0\u4f9b\u5074\n3.1. TargetClass.java, TargetField.java\u3092\u4f5c\u6210\u3002\uff08\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002\uff09\n\n```java:TargetClass.java\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.CLASS)\npublic @interface TargetClass {\n\n}\n```\n```java:TargetField.java\n@Target(ElementType.FIELD)\n@Retention(RetentionPolicy.CLASS)\npublic @interface TargetField {\n\n}\n```\n\n3.2. MakeFactoryProcessor.java\u3092\u4f5c\u6210\u3002\n\n```java:MakeFactoryProcessor.java\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\n@SupportedAnnotationTypes({\"*\"})\npublic class MakeFactoryProcessor extends AbstractProcessor{\n\n\tprivate Filer _filer;\n\t\n\t@Override\n\tpublic synchronized void init(ProcessingEnvironment processingEnv) {\n\t\tsuper.init(processingEnv);\n\t\tprocessingEnv.getMessager().printMessage(Kind.NOTE, \"\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u521d\u671f\u5316\");\n\t\t_filer = processingEnv.getFiler();\n\t}\n\n\t@Override\n\tpublic boolean process(Set<? extends TypeElement> annotations,\n\t\t\tRoundEnvironment roundEnv) {\n\t\ttry{\n\t\t\tfor (TypeElement typeElement : annotations) {\n\t\t\t\tfor (Element element : roundEnv.getElementsAnnotatedWith(typeElement)) {\n\t\t\t\t\tTargetClass classAnno = element.getAnnotation(TargetClass.class);\n\t\t            if(classAnno !=null){\n\t\t            \tcreateFactoryClass(element);\n\t\t            }\n\t\t        }\n\t\t\t}\n\t\t\tprocessingEnv.getMessager().printMessage(Kind.NOTE, \"\u30af\u30e9\u30b9\u30d5\u30a1\u30a4\u30eb\u751f\u6210\");\n\t\t\treturn true;\n\t\t}catch(IOException ex){\n\t\t\tex.printStackTrace();\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tprivate void createFactoryClass(Element element) throws IOException{\n\t\tArgumentInfo argInfo = getArgumentInfo(element);\n\t\t\n\t\tMethodSpec.Builder builder = MethodSpec.methodBuilder(\"create\")\n\t\t\t\t.addModifiers(Modifier.PUBLIC, Modifier.STATIC)\n\t\t\t\t.returns(TypeName.get(element.asType()))\n\t\t\t\t.addStatement(\"return new $T(\" + argInfo.join() + \")\",\n\t\t\t\t\t\tTypeName.get(element.asType()));\n\t\tfor(String arg : argInfo.getArgNames()){\n\t\t\tbuilder.addParameter(String.class, arg);\n\t\t}\n\t\tMethodSpec create = builder.build();\n\t\t\n\t\tString className = element.getSimpleName() + \"Factory\";\n\t\tTypeSpec factory = TypeSpec.classBuilder(className)\n\t\t\t    .addModifiers(Modifier.PUBLIC, Modifier.FINAL)\n\t\t\t    .addMethod(create)\n\t\t\t    .build();\n\t\t\n\t\tJavaFile javaFile = JavaFile.builder(\n\t\t\t\tgetPackageName(element), factory).\n\t\t\t\tbuild();\n\t\tjavaFile.writeTo(_filer);\n\t}\n\t\n\tprivate String getPackageName(Element element){\n\t\tList<String> packNames = new ArrayList<String>();\n\t\tElement packageElem = element.getEnclosingElement();\n\t\twhile(packageElem != null){\n\t\t\tString packName = packageElem.\n\t\t\t\t\tgetSimpleName().toString();\n\t\t\tpackNames.add(packName);\n\t\t\tpackageElem = packageElem.getEnclosingElement();\n\t\t}\n\t\t\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int i = packNames.size() - 1; i >= 0; i--){\n\t\t\tif(sb.length() > 0){\n\t\t\t\tsb.append(\".\");\n\t\t\t}\n\t\t\tsb.append(packNames.get(i));\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate ArgumentInfo getArgumentInfo(Element element){\n\t\tArgumentInfo argInfo = new ArgumentInfo();\n\t\tfor(Element e : element.getEnclosedElements()){\n\t\t\tif(e.getAnnotation(TargetField.class) != null){\n\t\t\t\targInfo.add(e.getSimpleName().toString());\n\t\t\t}\n\t\t}\n\t\treturn argInfo;\n\t}\n\t\n\tprivate class ArgumentInfo{\n\t\tprivate List<String> _argNames = new ArrayList<String>();\n\t\t\n\t\tpublic void add(String argName){\n\t\t\t_argNames.add(argName);\n\t\t}\n\t\t\n\t\tpublic String[] getArgNames(){\n\t\t\treturn _argNames.toArray(new String[0]);\n\t\t}\n\t\t\n\t\tpublic String join(){\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tfor(String argName : _argNames){\n\t\t\t\tif(sb.length() > 0){\n\t\t\t\t\tsb.append(\",\");\n\t\t\t\t}\n\t\t\t\tsb.append(argName);\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\t}\n}\n```\n\n@TargetClass\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u30af\u30e9\u30b9\u306b\u3076\u3089\u4e0b\u304c\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u306b@TargetField\u304c\u3064\u3044\u3066\u3044\u308b\u3082\u306e\u3060\u3051\u5f15\u6570\u3068\u3057\u3066\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306e\u51e6\u7406\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001@TargetClass\u304c\u4ed8\u3044\u3066\u3044\u308b\u30af\u30e9\u30b9\u540d+Factory\u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u305f\u3044\u306e\u3067Element#getSimpleName()\u3067\u30af\u30e9\u30b9\u540d\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u3044\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\n\n3.3. src\u30d5\u30a9\u30eb\u30c0\u5185\u306bMETA-INF/services \u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3002\u305d\u306e\u4e2d\u306bjavax.annotation.processing.Processor\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3002\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u5185\u306b\u5b9f\u884c\u3057\u305f\u3044Processor\u306e\u30af\u30e9\u30b9\u540d\u3092\u8a18\u8f09\u3002\n\n3.4. Processor\u63d0\u4f9b\u5074\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306esrc\u30d5\u30a1\u30a4\u30eb\u3092\u542b\u3093\u3060jar\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3002\n\n##Processor\u4f7f\u7528\u5074\n\n3.5. 3.4.\u3067\u51fa\u529b\u3057\u305fjar\u30d5\u30a1\u30a4\u30eb\u3092Processor\u4f7f\u7528\u5074\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3002\n\n3.6. 1.9.\u306e\u3088\u3046\u306b\u3001Java Compiler-Annotation Processing-Factory Path\u306e\u3068\u3053\u308d\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305fjar\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n3.7. Item.java, Main.java\u306e\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\u3002\n\n```java:Main.java\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tItem item = ItemFactory.create(\"taro\", \"\u3053\u308c\u306f\u732b\u3067\u3059\u3002\");\n\t\tSystem.out.println(item.getName());\n\t\tSystem.out.println(item.getDesc());\n\t}\n\n}\n```\n\n```java:Item.java\n@TargetClass\npublic class Item {\n\n\n\t@TargetField\n\tprivate String _name;\n\n\t@TargetField\n\tprivate String _desc;\n\n\tpublic Item(String name, String desc){\n\t\t_name = name;\n\t\t_desc = desc;\n\t}\n\t\n\tpublic String getName(){\n\t\treturn _name;\n\t}\n\t\n\tpublic String getDesc(){\n\t\treturn _desc;\n\t}\n}\n```\n\n3.8. \u4e00\u5ea6\u30d3\u30eb\u30c9\u3092\u8a66\u307f\u3066\u304f\u3060\u3055\u3044\u3002Main.java\u3067\u30d3\u30eb\u30c9\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u304c\u3001ItemFactory.class\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3088\u3046\u306b\u6307\u5b9a\u3059\u308c\u3070\u30d3\u30eb\u30c9\u30a8\u30e9\u30fc\u304c\u89e3\u6d88\u3055\u308c\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-23 22.49.38.png](https://qiita-image-store.s3.amazonaws.com/0/14989/e5511ea7-fa8e-04e6-39a0-ee9c7bdde98d.png)\n\n3.9. \u30d3\u30eb\u30c9\u30a8\u30e9\u30fc\u304c\u5b8c\u5168\u306b\u306a\u304f\u306a\u3063\u305f\u3089\u3001Main.java\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9f\u884c\u7d50\u679c\u304c\u51fa\u308c\u3070OK\u3067\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-23 22.53.36.png](https://qiita-image-store.s3.amazonaws.com/0/14989/4e9c1056-1a43-b630-14ae-35ef74587bea.png)\n\n\n# \u8ffd\u4f38\n\n\u624b\u524d\u5473\u564c\u3067\u3059\u304c\u3001\u3056\u3063\u304f\u308a\u81ea\u5206\u304c\u3084\u3063\u3066\u304d\u305f\u65b9\u6cd5\u3092\u8a18\u8f09\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n\u4eca\u56de\u4f5c\u3063\u305f\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30af\u30e9\u30b9\u751f\u6210\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306fGithub\u306b\u3042\u3052\u3066\u3044\u307e\u3059\u306e\u3067\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\nProcessor\u63d0\u4f9b\u5074\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\nhttps://github.com/LyricalMaestro/ProcessorProvider\n\nProcessor\u4f7f\u7528\u5074\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\nhttps://github.com/LyricalMaestro/ProcessorUser\n\n\u5b9f\u306f\u30013.\u306eProcessor\u63d0\u4f9b\u5074\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3068\u304d\u306b\u4f55\u5ea6\u3082\u30c8\u30e9\u30a4\u30a2\u30f3\u30c9\u30a8\u30e9\u30fc\u3092\u3057\u307e\u3057\u305f\u3002\u305d\u306e\u3068\u304d\u306f\u3044\u3061\u3044\u3061jar\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u306f\u4f7f\u7528\u5074\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u2026\u3068\u3044\u3046\u306e\u3092\u3084\u3063\u3066\u3066\u3059\u3054\u3044\u624b\u9593\u3067\u3057\u305f\u3002Processor\u7528\u5358\u4f53\u30c6\u30b9\u30c8\u30c4\u30fc\u30ebAptinaTest\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u307f\u305f\u3044\u3067\u3059\u304c\u3001\u305d\u308c\u3092\u4f7f\u3048\u3070\u3082\u3063\u3068\u697d\u306b\u3067\u304d\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nAptinaUnit\nhttp://aptina.seasar.org/aptina-unit/index.html\n\n\n", "tags": ["Java", "apt"]}