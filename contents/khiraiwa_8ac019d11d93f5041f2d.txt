{"tags": ["hadoop", "Scala", "MapReduce"], "context": " More than 1 year has passed since last update.\u4eca\u66f4\u306a\u304c\u3089\u306bHadoop\u3092\u52c9\u5f37\u4e2d\u3002 \n\u30aa\u30e9\u30a4\u30ea\u30fc\u306e\u8c61\u672c\u306e5\u7ae0(MapReduce\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a)\u306emap\u3068reduce\u306eJava\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u305d\u3057\u3066\u3001\u305f\u3060\u52d5\u304b\u3057\u3066\u3082\u9762\u767d\u304f\u7121\u3044\u306e\u3067\u3001Scala\u3092\u4f7f\u3063\u3066\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u30b5\u30f3\u30d7\u30eb\u306e\u5185\u5bb9\u306f\u3001\u6c17\u8c61\u30c7\u30fc\u30bf\u306e\u30ed\u30b0\u3092\u3082\u3068\u306b\u3057\u3066\u3001\u5e74\u3054\u3068\u306e\u6700\u9ad8\u6c17\u6e29\u3092\u96c6\u8a08\u3059\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\n\u74b0\u5883\u60c5\u5831\n\u8a66\u3057\u305f\u74b0\u5883\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n\n\n\n\u74b0\u5883\n\u30d0\u30fc\u30b8\u30e7\u30f3\u306a\u3069\n\n\n\n\nOS\nMac OS X Yosemite(10.10.4)\n\n\nJava\n1.7.0\n\n\nScala\n2.11.1\n\n\nGradle\n2.0\n\n\nHadoop\n2.7.0\n\n\n\nMac\u306a\u3089\u3053\u308c\u3089\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306fhomebrew\u3092\u4f7f\u3063\u3066\n\n$ brew install java scala gradle hadoop\n\n\u3067OK\u3067\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\u3068\u96c6\u8a08\u306e\u76ee\u7684\n\u306f\u3058\u3081\u306bhadoop\u3092\u8a66\u3059\u305f\u3081\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5165\u624b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u30d6\u30e9\u30a6\u30b6\u3067\u7c73\u56fd\u6c17\u5019\u30c6\u3099\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc(NCDC)\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30011901-2015\u307e\u3067\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u3044\u305a\u308c\u304b\u306e\u4e2d\u304b\u3089\u3001\u4e2d\u306egz\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\nftp://ftp.ncdc.noaa.gov/pub/data/noaa/\n\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u3063\u3066\u3044\u308b\u4eba\u3082\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3048\u3070\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u30c6\u30b9\u30c8\u3060\u3051\u306a\u30891\u30d5\u30a1\u30a4\u30eb\u3050\u3089\u3044\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308c\u3070OK\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n1\u30d5\u30a1\u30a4\u30eb\u306b\u306f1\u884c\u3054\u3068\u306b\u4e0b\u8a18\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30ed\u30b0\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u3066\u3001\u521d\u3081\u306e\u592a\u5b57\u304c\u5e74\u3001\u6b21\u306e\u592a\u5b57\u304c\u6c17\u6e29(\u6442\u6c0f\u306e10\u500d)\u3092\u793a\u3057\u3066\u3044\u308b\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n009201001099999\n1992010100004+70933-008667FM-12+0009ENJA V0200101N00931012001CN0400001N9\n-00361-00771096881ADDAA106000091AG14000GF108991081081008001999999MD1310051+9999OA149901801REMSYN011333   91135\n\nMapper\nMapper\u3067\u306f\u5165\u529b\u30c7\u30fc\u30bf\u304b\u3089\u96c6\u8a08\u306e\u305f\u3081\u306eKey\u3068Value\u306eMap\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u51e6\u7406\u3068\u3057\u3066\u306f\u5f15\u6570\u306evalue\u3067\u6e21\u3055\u308c\u3066\u304d\u305f\u6587\u5b57\u5217\u304b\u3089\u3001Map\u306eKey\u3068Value\u3092\u4f5c\u3063\u3066\u3001context\u306bwrite\u3059\u308c\u3070\u826f\u3044\u69d8\u5b50\u3002\nmissing\u30e1\u30bd\u30c3\u30c9\u306f\u6c17\u6e29\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u6642\u306e\u51e6\u7406\u3067\u3059\u3002\npackage hadoop\n\nimport org.apache.hadoop.mapreduce.Mapper\nimport org.apache.hadoop.io.IntWritable\nimport org.apache.hadoop.io.LongWritable\nimport org.apache.hadoop.io.Text\nimport java.io.IOException\nimport org.apache.hadoop.mrunit.mapreduce.MapDriver\n\nclass MaxTemperatureMapper extends Mapper[LongWritable, Text, Text, IntWritable] {\n  type Context = Mapper[LongWritable, Text, Text, IntWritable]#Context\n  override def map(\n      key: LongWritable,\n      value: Text,\n      context: Context) {\n    val line = value.toString()\n    val year = line.substring(\n        MaxTemperatureMapper.YEAR_BEGIN_INDEX,\n        MaxTemperatureMapper.YEAR_END_INDEX)\n    val temp = line.substring(\n        MaxTemperatureMapper.TEMP_BEGIN_INDEX,\n        MaxTemperatureMapper.TEMP_END_INDEX)\n    if (!missing(temp)) {\n      val airTemperature = Integer.parseInt(temp)\n      context.write(new Text(year), new IntWritable(airTemperature))\n    }\n  }\n\n  def missing(temp: String):Boolean = {\n    return temp eq \"+9999\"\n  }\n}\n\nobject MaxTemperatureMapper {\n  private val YEAR_BEGIN_INDEX = 15\n  private val YEAR_END_INDEX = 19\n  private val TEMP_BEGIN_INDEX = 87\n  private val TEMP_END_INDEX = 92\n}\n\n\u3053\u306e\u51e6\u7406\u3067\u3001\u4e0b\u8a18\u306e\u4f8b\u306e\u3088\u3046\u306aKey\u3092\u5e74\u3001Value\u3092\u6c17\u6e29\u3068\u3057\u305fMap\u304c\u51fa\u6765\u308b\u306f\u305a\u3002\n\n\n\nKey\nValue\n\n\n\n\n1901\n-30\n\n\n1901\n10\n\n\n1901\n5\n\n\n1902\n100\n\n\n1902\n-10\n\n\n\n\nReducer\nReducer\u3067\u306f\u5e74\u3054\u3068\u306e\u6700\u5927\u5024\u3092\u6c42\u3081\u307e\u3059\u3002\n\u5f15\u6570\u306b\u306fKey\u3054\u3068\u306eValue\u304c\u6e21\u3055\u308c\u308b\u305f\u3081\u3001\u305d\u306e\u6700\u5927\u306eValue\u3092\u898b\u3064\u3051\u308c\u3070\u3088\u3057\u3067\u3059\u3002\npackage hadoop\n\nimport org.apache.hadoop.mapreduce.Reducer\nimport org.apache.hadoop.io.IntWritable\nimport org.apache.hadoop.io.LongWritable\nimport org.apache.hadoop.io.Text\nimport org.apache.hadoop.io.Writable\nimport java.io.IOException\nimport collection.JavaConversions.iterableAsScalaIterable\n\nclass MaxTemperatureReducer extends Reducer[Text, IntWritable, Text, IntWritable] {\n  type Context = Reducer[Text, IntWritable, Text, IntWritable]#Context\n  override def reduce(\n      key: Text,\n      values: java.lang.Iterable[IntWritable],\n      context: Context) {\n      var maxValue = Integer.MIN_VALUE\n      for (value: IntWritable <- values) {\n        maxValue = Math.max(maxValue, value.get())\n      }\n      context.write(key, new IntWritable(maxValue))\n  }\n}\n\n\u3053\u306e\u51e6\u7406\u3067\u3001\u6700\u7d42\u7684\u306b\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u5e74\u3054\u3068\u306e\u6c17\u6e29\u306e\u6700\u5927\u5024\u3092\u96c6\u8a08\u3057\u305f\u7d50\u679c\u304c\u51fa\u6765\u4e0a\u304c\u308b\u306f\u305a\u3067\u3059\u3002\n\n\n\nKey\nValue\n\n\n\n\n1901\n10\n\n\n1902\n100\n\n\n\n\nDriver\n\u6b21\u306b\u3001\u30b8\u30e7\u30d6\u3092\u8d70\u3089\u305b\u308b\u305f\u3081\u306e\u30c9\u30e9\u30a4\u30d0\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nMain\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u96c6\u8a08\u51e6\u7406\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nMapper, Reducer, Combiner\u3092\u30bb\u30c3\u30c8\u3057\u3066\u3044\u308b\u3002\nCombiner\u306f\u4f5c\u6210\u3057\u3066\u3044\u306a\u3044\u3051\u308c\u3069\u3001\u4e0b\u8a18\u306e\u30b5\u30a4\u30c8\u306b\u3088\u308b\u3068\u3001Combiner\u3068\u306fReducer\u306b\u6e21\u3059\u524d\u306bMapper\u306e\u7d50\u679c\u3092\u4e2d\u9593\u51e6\u7406\u3059\u308b\u30af\u30e9\u30b9\u3068\u306e\u3053\u3068\u3068\u306e\u3053\u3068\u3002\nHadoop Combiner\npackage hadoop\n\nimport org.apache.hadoop.conf.Configured\nimport org.apache.hadoop.util.Tool\nimport org.apache.hadoop.util.ToolRunner\nimport org.apache.hadoop.mapreduce.Job\nimport org.apache.hadoop.mapreduce.lib.input.FileInputFormat\nimport org.apache.hadoop.fs.Path\nimport org.apache.hadoop.mapreduce.lib.output.FileOutputFormat\nimport org.apache.hadoop.io.IntWritable\nimport org.apache.hadoop.io.Text\nimport org.apache.hadoop.io.IntWritable\nimport org.apache.hadoop.io.Text\n\nclass MaxTemperatureDriver extends Configured with Tool {\n  override def run(args: Array[String]): Int = {\n    if (args.length != 2) {\n      println(\"Usage: %s [generic options] <input> <output>\\n\", getClass().getSimpleName())\n      ToolRunner.printGenericCommandUsage(System.err)\n      -1\n    }\n    val job = new Job(this.getConf(), \"Max temperature\")\n    job.setJarByClass(this.getClass())\n\n    FileInputFormat.addInputPath(job, new Path(args(0)))\n    FileOutputFormat.setOutputPath(job, new Path(args(1)))\n\n    job.setMapperClass(classOf[MaxTemperatureMapper]);\n    job.setCombinerClass(classOf[MaxTemperatureReducer])\n    job.setReducerClass(classOf[MaxTemperatureReducer])\n\n    job.setOutputKeyClass(classOf[Text])\n    job.setOutputValueClass(classOf[IntWritable])\n\n    if (job.waitForCompletion(true)) 0 else 1\n  }\n}\n\nobject MaxTemperatureDriver {\n  def main(args: Array[String]) {\n    val exitCode = ToolRunner.run(new MaxTemperatureDriver(), args)\n    System.exit(exitCode)\n  }\n}\n\n\n\u5b9f\u969b\u306b\u5b9f\u884c\u3057\u3066\u307f\u308b\n\u4e0a\u3067\u4f5c\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u969b\u306b\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\u3042\u3089\u304b\u3058\u3081\u3001\u4e8b\u524d\u6e96\u5099\u3068\u3057\u3066\u3069\u3053\u304b\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e.gz\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u304c\u683c\u7d0d\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n$ git clone git@github.com:khiraiwa/hadoop-mapreduce-test.git\n$ cd hadoop-mapreduce-test\n$ gradle jar\n$ hadoop jar build/libs/hadoop-mapreduce-test-0.1.jar hadoop.MaxTemperatureDriver [\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d1\u30b9(\u7d76\u5bfe\u30d1\u30b9\u306e\u5fc5\u8981\u3042\u308a\uff1f)] [\u7d50\u679c\u51fa\u529b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(\u76f8\u5bfe\u3001\u7d76\u5bfe\u4e21\u65b9\u53ef\u3002\u5b58\u5728\u3057\u306a\u3044\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u3092\u6307\u5b9a)] -conf src/main/resources/hadoop-cluster.xml\n\n\u3059\u308b\u3068\u3001\u51fa\u529b\u7d50\u679c\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u7d50\u679c\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u307e\u3059\u3002\n\u305d\u308c\u3092\u898b\u308b\u3068\u3001\u3069\u3046\u3084\u3089\u3046\u307e\u304f\u3044\u3063\u3066\u3044\u308b\u69d8\u5b50\u3002\u3002\u3002\n\n\u4eca\u66f4\u306a\u304c\u3089\u306bHadoop\u3092\u52c9\u5f37\u4e2d\u3002 \n\u30aa\u30e9\u30a4\u30ea\u30fc\u306e[\u8c61\u672c](http://www.oreilly.co.jp/books/9784873116297/)\u306e5\u7ae0(MapReduce\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a)\u306emap\u3068reduce\u306eJava\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002  \n\u305d\u3057\u3066\u3001\u305f\u3060\u52d5\u304b\u3057\u3066\u3082\u9762\u767d\u304f\u7121\u3044\u306e\u3067\u3001Scala\u3092\u4f7f\u3063\u3066\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u306e\u5185\u5bb9\u306f\u3001\u6c17\u8c61\u30c7\u30fc\u30bf\u306e\u30ed\u30b0\u3092\u3082\u3068\u306b\u3057\u3066\u3001\u5e74\u3054\u3068\u306e\u6700\u9ad8\u6c17\u6e29\u3092\u96c6\u8a08\u3059\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\n# \u74b0\u5883\u60c5\u5831\n\n\u8a66\u3057\u305f\u74b0\u5883\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n\n|\u74b0\u5883         |              \u30d0\u30fc\u30b8\u30e7\u30f3\u306a\u3069|\n|:-----------|-------------------------:|\n| OS         |Mac OS X Yosemite(10.10.4)|\n| Java       |                    1.7.0 |\n| Scala      |                   2.11.1 |\n| Gradle     |                      2.0 |\n| Hadoop     |                    2.7.0 |\nMac\u306a\u3089\u3053\u308c\u3089\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306fhomebrew\u3092\u4f7f\u3063\u3066\n```\n$ brew install java scala gradle hadoop\n```\n\u3067OK\u3067\u3059\u3002\n\n# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\u3068\u96c6\u8a08\u306e\u76ee\u7684\n\n\u306f\u3058\u3081\u306bhadoop\u3092\u8a66\u3059\u305f\u3081\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5165\u624b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002  \n\u30d6\u30e9\u30a6\u30b6\u3067\u7c73\u56fd\u6c17\u5019\u30c6\u3099\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc(NCDC)\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30011901-2015\u307e\u3067\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u3044\u305a\u308c\u304b\u306e\u4e2d\u304b\u3089\u3001\u4e2d\u306egz\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\nftp://ftp.ncdc.noaa.gov/pub/data/noaa/\n\n[\u30b9\u30af\u30ea\u30d7\u30c8](https://gist.github.com/rehevkor5/2e407950ca687b36fc54)\u3092\u4f5c\u3063\u3066\u3044\u308b\u4eba\u3082\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3048\u3070\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002  \n\u3057\u304b\u3057\u3001\u30c6\u30b9\u30c8\u3060\u3051\u306a\u30891\u30d5\u30a1\u30a4\u30eb\u3050\u3089\u3044\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308c\u3070OK\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n1\u30d5\u30a1\u30a4\u30eb\u306b\u306f1\u884c\u3054\u3068\u306b\u4e0b\u8a18\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30ed\u30b0\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u3066\u3001\u521d\u3081\u306e\u592a\u5b57\u304c\u5e74\u3001\u6b21\u306e\u592a\u5b57\u304c\u6c17\u6e29(\u6442\u6c0f\u306e10\u500d)\u3092\u793a\u3057\u3066\u3044\u308b\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\n009201001099999\n**_1992_**010100004+70933-008667FM-12+0009ENJA V0200101N00931012001CN0400001N9\n**_-0036_**1-00771096881ADDAA106000091AG14000GF108991081081008001999999MD1310051+9999OA149901801REMSYN011333   91135\n\n# Mapper\nMapper\u3067\u306f\u5165\u529b\u30c7\u30fc\u30bf\u304b\u3089\u96c6\u8a08\u306e\u305f\u3081\u306eKey\u3068Value\u306eMap\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002  \n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u51e6\u7406\u3068\u3057\u3066\u306f\u5f15\u6570\u306evalue\u3067\u6e21\u3055\u308c\u3066\u304d\u305f\u6587\u5b57\u5217\u304b\u3089\u3001Map\u306eKey\u3068Value\u3092\u4f5c\u3063\u3066\u3001context\u306bwrite\u3059\u308c\u3070\u826f\u3044\u69d8\u5b50\u3002\nmissing\u30e1\u30bd\u30c3\u30c9\u306f\u6c17\u6e29\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u6642\u306e\u51e6\u7406\u3067\u3059\u3002\n\n```scala\npackage hadoop\n\nimport org.apache.hadoop.mapreduce.Mapper\nimport org.apache.hadoop.io.IntWritable\nimport org.apache.hadoop.io.LongWritable\nimport org.apache.hadoop.io.Text\nimport java.io.IOException\nimport org.apache.hadoop.mrunit.mapreduce.MapDriver\n\nclass MaxTemperatureMapper extends Mapper[LongWritable, Text, Text, IntWritable] {\n  type Context = Mapper[LongWritable, Text, Text, IntWritable]#Context\n  override def map(\n      key: LongWritable,\n      value: Text,\n      context: Context) {\n    val line = value.toString()\n    val year = line.substring(\n        MaxTemperatureMapper.YEAR_BEGIN_INDEX,\n        MaxTemperatureMapper.YEAR_END_INDEX)\n    val temp = line.substring(\n        MaxTemperatureMapper.TEMP_BEGIN_INDEX,\n        MaxTemperatureMapper.TEMP_END_INDEX)\n    if (!missing(temp)) {\n      val airTemperature = Integer.parseInt(temp)\n      context.write(new Text(year), new IntWritable(airTemperature))\n    }\n  }\n\n  def missing(temp: String):Boolean = {\n    return temp eq \"+9999\"\n  }\n}\n\nobject MaxTemperatureMapper {\n  private val YEAR_BEGIN_INDEX = 15\n  private val YEAR_END_INDEX = 19\n  private val TEMP_BEGIN_INDEX = 87\n  private val TEMP_END_INDEX = 92\n}\n```\n\u3053\u306e\u51e6\u7406\u3067\u3001\u4e0b\u8a18\u306e\u4f8b\u306e\u3088\u3046\u306aKey\u3092\u5e74\u3001Value\u3092\u6c17\u6e29\u3068\u3057\u305fMap\u304c\u51fa\u6765\u308b\u306f\u305a\u3002\n\n|Key         |                     Value|\n|:-----------|-------------------------:|\n| 1901       |                       -30|\n| 1901       |                        10|\n| 1901       |                         5|\n| 1902       |                       100|\n| 1902       |                       -10|\n\n# Reducer\n\nReducer\u3067\u306f\u5e74\u3054\u3068\u306e\u6700\u5927\u5024\u3092\u6c42\u3081\u307e\u3059\u3002\n\u5f15\u6570\u306b\u306fKey\u3054\u3068\u306eValue\u304c\u6e21\u3055\u308c\u308b\u305f\u3081\u3001\u305d\u306e\u6700\u5927\u306eValue\u3092\u898b\u3064\u3051\u308c\u3070\u3088\u3057\u3067\u3059\u3002\n\n```scala\npackage hadoop\n\nimport org.apache.hadoop.mapreduce.Reducer\nimport org.apache.hadoop.io.IntWritable\nimport org.apache.hadoop.io.LongWritable\nimport org.apache.hadoop.io.Text\nimport org.apache.hadoop.io.Writable\nimport java.io.IOException\nimport collection.JavaConversions.iterableAsScalaIterable\n\nclass MaxTemperatureReducer extends Reducer[Text, IntWritable, Text, IntWritable] {\n  type Context = Reducer[Text, IntWritable, Text, IntWritable]#Context\n  override def reduce(\n      key: Text,\n      values: java.lang.Iterable[IntWritable],\n      context: Context) {\n      var maxValue = Integer.MIN_VALUE\n      for (value: IntWritable <- values) {\n        maxValue = Math.max(maxValue, value.get())\n      }\n      context.write(key, new IntWritable(maxValue))\n  }\n}\n```\n\u3053\u306e\u51e6\u7406\u3067\u3001\u6700\u7d42\u7684\u306b\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u5e74\u3054\u3068\u306e\u6c17\u6e29\u306e\u6700\u5927\u5024\u3092\u96c6\u8a08\u3057\u305f\u7d50\u679c\u304c\u51fa\u6765\u4e0a\u304c\u308b\u306f\u305a\u3067\u3059\u3002\n\n|Key         |                     Value|\n|:-----------|-------------------------:|\n| 1901       |                        10|\n| 1902       |                       100|\n\n# Driver\n\n\u6b21\u306b\u3001\u30b8\u30e7\u30d6\u3092\u8d70\u3089\u305b\u308b\u305f\u3081\u306e\u30c9\u30e9\u30a4\u30d0\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002  \nMain\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u96c6\u8a08\u51e6\u7406\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nMapper, Reducer, Combiner\u3092\u30bb\u30c3\u30c8\u3057\u3066\u3044\u308b\u3002\nCombiner\u306f\u4f5c\u6210\u3057\u3066\u3044\u306a\u3044\u3051\u308c\u3069\u3001\u4e0b\u8a18\u306e\u30b5\u30a4\u30c8\u306b\u3088\u308b\u3068\u3001Combiner\u3068\u306fReducer\u306b\u6e21\u3059\u524d\u306bMapper\u306e\u7d50\u679c\u3092\u4e2d\u9593\u51e6\u7406\u3059\u308b\u30af\u30e9\u30b9\u3068\u306e\u3053\u3068\u3068\u306e\u3053\u3068\u3002\n[Hadoop Combiner](http://www.ne.jp/asahi/hishidama/home/tech/apache/hadoop/Combiner.html)\n\n```scala\npackage hadoop\n\nimport org.apache.hadoop.conf.Configured\nimport org.apache.hadoop.util.Tool\nimport org.apache.hadoop.util.ToolRunner\nimport org.apache.hadoop.mapreduce.Job\nimport org.apache.hadoop.mapreduce.lib.input.FileInputFormat\nimport org.apache.hadoop.fs.Path\nimport org.apache.hadoop.mapreduce.lib.output.FileOutputFormat\nimport org.apache.hadoop.io.IntWritable\nimport org.apache.hadoop.io.Text\nimport org.apache.hadoop.io.IntWritable\nimport org.apache.hadoop.io.Text\n\nclass MaxTemperatureDriver extends Configured with Tool {\n  override def run(args: Array[String]): Int = {\n    if (args.length != 2) {\n      println(\"Usage: %s [generic options] <input> <output>\\n\", getClass().getSimpleName())\n      ToolRunner.printGenericCommandUsage(System.err)\n      -1\n    }\n    val job = new Job(this.getConf(), \"Max temperature\")\n    job.setJarByClass(this.getClass())\n\n    FileInputFormat.addInputPath(job, new Path(args(0)))\n    FileOutputFormat.setOutputPath(job, new Path(args(1)))\n\n    job.setMapperClass(classOf[MaxTemperatureMapper]);\n    job.setCombinerClass(classOf[MaxTemperatureReducer])\n    job.setReducerClass(classOf[MaxTemperatureReducer])\n\n    job.setOutputKeyClass(classOf[Text])\n    job.setOutputValueClass(classOf[IntWritable])\n\n    if (job.waitForCompletion(true)) 0 else 1\n  }\n}\n\nobject MaxTemperatureDriver {\n  def main(args: Array[String]) {\n    val exitCode = ToolRunner.run(new MaxTemperatureDriver(), args)\n    System.exit(exitCode)\n  }\n}\n```\n# \u5b9f\u969b\u306b\u5b9f\u884c\u3057\u3066\u307f\u308b\n\u4e0a\u3067\u4f5c\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u969b\u306b\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\u3042\u3089\u304b\u3058\u3081\u3001\u4e8b\u524d\u6e96\u5099\u3068\u3057\u3066\u3069\u3053\u304b\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e.gz\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u304c\u683c\u7d0d\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\n$ git clone git@github.com:khiraiwa/hadoop-mapreduce-test.git\n$ cd hadoop-mapreduce-test\n$ gradle jar\n$ hadoop jar build/libs/hadoop-mapreduce-test-0.1.jar hadoop.MaxTemperatureDriver [\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d1\u30b9(\u7d76\u5bfe\u30d1\u30b9\u306e\u5fc5\u8981\u3042\u308a\uff1f)] [\u7d50\u679c\u51fa\u529b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(\u76f8\u5bfe\u3001\u7d76\u5bfe\u4e21\u65b9\u53ef\u3002\u5b58\u5728\u3057\u306a\u3044\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u3092\u6307\u5b9a)] -conf src/main/resources/hadoop-cluster.xml\n```\n\n\u3059\u308b\u3068\u3001\u51fa\u529b\u7d50\u679c\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u7d50\u679c\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u307e\u3059\u3002  \n\u305d\u308c\u3092\u898b\u308b\u3068\u3001\u3069\u3046\u3084\u3089\u3046\u307e\u304f\u3044\u3063\u3066\u3044\u308b\u69d8\u5b50\u3002\u3002\u3002\n<script>\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n  ga('create', 'UA-66125452-1', 'auto');\n  ga('send', 'pageview');\n\n</script>\n"}