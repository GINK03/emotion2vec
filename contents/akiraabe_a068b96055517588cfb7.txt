{"context": "Java8\u306eJava.time API\u3092\u7528\u3044\u3066\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3092\u66f8\u3044\u3066\u307f\u305f\u3002\nJava8\u306enew DateTimeFormatter.ofPattern(\"yyyy/MM/dd\")\u306f\u30011980/1/1\u304cParse\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3002\n1980/01/01\u306a\u3089OK\u3002\n\u3053\u308c\u306a\u3089\u65e7\u6765\u306enew SimpleDateFormat(\"yyyy/MM/dd\")\u306e\u65b9\u304c\u4f7f\u3044\u52dd\u624b\u304c\u826f\u3044\u6c17\u304c\u3059\u308b\u3002\n\u3082\u3046\u3061\u3087\u3063\u3068\u7814\u7a76\u304c\u5fc5\u8981\u304b\u306a\u3002\n\nMyDateUtil.java\npackage com.example.util;\n\nimport java.text.DateFormat;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.time.LocalDate;\nimport java.time.ZoneId;\nimport java.time.ZonedDateTime;\nimport java.time.format.DateTimeFormatter;\nimport java.time.temporal.TemporalAccessor;\nimport java.util.Date;\n\npublic class MyDateUtil {\n\n    /**\n     * Parse String to Date.\n     * (Using Java8 java.time....)\n     * \n     * @param birthDay \"yyyy/MM/dd\" format\n     * @return java.util.Date\n     */\n    public static Date parse(String date) {\n\n        DateTimeFormatter fmt = DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");\n        TemporalAccessor ta = fmt.parse(date);\n            ZonedDateTime zdt = LocalDate.from(ta).atTime(0, 0).atZone(ZoneId.of(\"Asia/Tokyo\"));\n            return  Date.from(zdt.toInstant());\n    }\n\n    /**\n     * Using traditional Java.util.Date\n     *  @param Object \"yyyy/MM/dd\" format String\n     *  return java.util.Date\n     */\n    public static Date toDate(Object object) {\n        String in = object.toString();\n        Date date;\n        DateFormat formater = new SimpleDateFormat(\"yyyy/MM/dd\");\n        try {\n            date = formater.parse(in);\n            return date;\n        } catch (ParseException e) {\n            return null;\n        }\n    }\n}\n\n\nJava8\u306eJava.time API\u3092\u7528\u3044\u3066\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3092\u66f8\u3044\u3066\u307f\u305f\u3002\n\nJava8\u306enew DateTimeFormatter.ofPattern(\"yyyy/MM/dd\")\u306f\u30011980/1/1\u304cParse\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3002\n1980/01/01\u306a\u3089OK\u3002\n\n\u3053\u308c\u306a\u3089\u65e7\u6765\u306enew SimpleDateFormat(\"yyyy/MM/dd\")\u306e\u65b9\u304c\u4f7f\u3044\u52dd\u624b\u304c\u826f\u3044\u6c17\u304c\u3059\u308b\u3002\n\u3082\u3046\u3061\u3087\u3063\u3068\u7814\u7a76\u304c\u5fc5\u8981\u304b\u306a\u3002\n\n\n```MyDateUtil.java\npackage com.example.util;\n\nimport java.text.DateFormat;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.time.LocalDate;\nimport java.time.ZoneId;\nimport java.time.ZonedDateTime;\nimport java.time.format.DateTimeFormatter;\nimport java.time.temporal.TemporalAccessor;\nimport java.util.Date;\n\npublic class MyDateUtil {\n\n\t/**\n\t * Parse String to Date.\n\t * (Using Java8 java.time....)\n\t * \n\t * @param birthDay \"yyyy/MM/dd\" format\n\t * @return java.util.Date\n\t */\n\tpublic static Date parse(String date) {\n\t\t\n\t\tDateTimeFormatter fmt = DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");\n\t\tTemporalAccessor ta = fmt.parse(date);\n        \tZonedDateTime zdt = LocalDate.from(ta).atTime(0, 0).atZone(ZoneId.of(\"Asia/Tokyo\"));\n        \treturn  Date.from(zdt.toInstant());\n\t}\n\t\n\t/**\n\t * Using traditional Java.util.Date\n\t *  @param Object \"yyyy/MM/dd\" format String\n\t *  return java.util.Date\n\t */\n\tpublic static Date toDate(Object object) {\n\t\tString in = object.toString();\n\t\tDate date;\n\t\tDateFormat formater = new SimpleDateFormat(\"yyyy/MM/dd\");\n\t\ttry {\n\t\t\tdate = formater.parse(in);\n\t\t\treturn date;\n\t\t} catch (ParseException e) {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n```\n", "tags": ["java8"]}