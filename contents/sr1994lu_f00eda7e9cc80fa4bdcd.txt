{"tags": ["webpack"], "context": "\u3053\u306e\u8a18\u4e8b\u306fTypescript Tutorial React & Webpack\u3092\u51fa\u6c41\u306b\u3057\u3066\u3044\u307e\u3059\u3002 \n$ npm install -D webpack@beta typescript@beta ts-loader source-map-loader @types/react-dom @types/react\n$ npm install -S react@next react-dom@next \n\u9014\u4e2dwebpack\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3053\u306e\u8a18\u4e8b\u306b\u95a2\u3057\u3066\u306f\u554f\u984c\u306a\u3044\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u6c17\u306b\u306a\u308b\u65b9\u306f What's new in webpack 2 \n\n\u30a8\u30d4\u30bd\u30fc\u30c9 1 \u300cQiita \u65b0\u7740\u9806\u3067\u773a\u3081\u3066\u305f\u3089\u8a18\u4e8b\u767a\u898b\u300d\nwebpack\u306eDLL\u30d0\u30f3\u30c9\u30eb\u3092\u4f7f\u3063\u3066\u30d3\u30eb\u30c9\u3092\u901f\u304f\u3059\u308b\npirosikick\u3055\u3093\u306e\u6295\u7a3f\u3067HappyPack\u306e\u5b58\u5728\u3092\u77e5\u308b\u3002\nHappyPack\u306b\u95a2\u3059\u308b\u65e5\u672c\u8a9e\u306e\u8a18\u4e8b\u306f\u4e00\u3064\u3082\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068\u30bd\u30fc\u30b9\u3092\u3055\u3063\u3068\u6d41\u3057\u8aad\u307f\u3057\u3066\u8a66\u3057\u3066\u307f\u308b\u3002\n$ npm install -D happypack\n\nwebpack.config.js\nvar path = require('path');\nvar HappyPack = require('happypack');\n\nmodule.exports = {\n  entry: \"./src/index.tsx\",\n  output: {\n    path: __dirname + \"/dist\",\n    filename: \"bundle.js\",\n  },\n  devtool: \"source-map\",\n  resolve: {\n    extensions: [\"\", \".ts\", \".tsx\", \".js\"]\n  },\n  // externals\u3082\u6709\u52b9\n  externals: {\n    \"react\": \"React\",\n    \"react-dom\": \"ReactDOM\"\n  },\n  plugins: [\n    new HappyPack({\n      cache: true,\n      loaders: [\"ts!source-map\"],\n      threads: 4\n    })\n  ],\n  module: {\n    loaders: [\n      {\n        test: /\\.tsx?$/,\n        loader: path.resolve(__dirname, \"./node_modules/ts-loader\")\n      }\n    ],\n    preLoaders: [\n      {\n        test: /\\.js$/,\n        loader: path.resolve(__dirname, \"./node_modules/source-map-loader\")\n      }\n    ],\n  }\n};\n\n\n\nhappypack\u306f\u7279\u5225\u306b\n\nexternals(\u5f8c\u306b\u8a73\u7d30)\u6709\u52b9\nHappyPack\u306e\u6a5f\u80fd\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u6709\u52b9 \n\u30b9\u30ec\u30c3\u30c9\uff14\u3064\n\n\n\u30a8\u30d4\u30bd\u30fc\u30c9 2 \u300cDLL\u30d0\u30f3\u30c9\u30eb\u306f\uff1f\u300d\n\n\n\u30a8\u30d4\u30bd\u30fc\u30c9 3 \u300c\u4f55\u3082\u3057\u306a\u3044\u5834\u5408\uff1f\u300d\n\n\n\u30a8\u30d4\u30bd\u30fc\u30c9 4 \u300c\u4f55\u3082\u3057\u306a\u3044\u3088\u308a\u30de\u30b7\u3060\u3063\u305f\u3051\u3069\u3001\u6c17\u306b\u306a\u308b\u304b\u3089\u304a\u3068\u306a\u3057\u304f\u516c\u5f0fTutorial\u3067\u8a66\u3057\u3066\u307f\u308b\u300d\n\n\n\u30a8\u30d4\u30bd\u30fc\u30c9 5 \u7d50\u8ad6\n\nwebpack.config.js\nmodule.exports = {\n    entry: \"./src/index.tsx\",\n    output: {\n        filename: \"./dist/bundle.js\",\n    },\n\n    // Enable sourcemaps for debugging webpack's output.\n    devtool: \"source-map\",\n\n    resolve: {\n        // Add '.ts' and '.tsx' as resolvable extensions.\n        extensions: [\"\", \".webpack.js\", \".web.js\", \".ts\", \".tsx\", \".js\"]\n    },\n\n    module: {\n        loaders: [\n            // All files with a '.ts' or '.tsx' extension will be handled by 'ts-loader'.\n            { test: /\\.tsx?$/, loader: \"ts-loader\" }\n        ],\n\n        preLoaders: [\n            // All output '.js' files will have any sourcemaps re-processed by 'source-map-loader'.\n            { test: /\\.js$/, loader: \"source-map-loader\" }\n        ]\n    },\n\n    // When importing a module whose path matches one of the following, just\n    // assume a corresponding global variable exists and use that instead.\n    // This is important because it allows us to avoid bundling all of our\n    // dependencies, which allows browsers to cache those libraries between builds.\n    externals: {\n        \"react\": \"React\",\n        \"react-dom\": \"ReactDOM\"\n    },\n};\n\n\n\n\u3064\u3088\u3055\uff1a externals > dll >> happypack >>> default\n\nHappyPack\u306f\u898b\u8fbc\u307f\u7121\u3057 \ndll\u306f\u898b\u8fbc\u307f\u3042\u308a \nexternals\u306fwebpack.config.js\u306b\u8a18\u8ff0\u3059\u308b\u3060\u3051\u3067\u6700\u9ad8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\n\n\u8cb4\u91cd\u306a\u6642\u9593\u3092\u6d6a\u8cbb\u3057\u3066\u3057\u307e\u3063\u305f\ud83d\ude22\nexternals\u306b\u3064\u3044\u3066\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084Qiita\u3084Google\u691c\u7d22\u3067\u3002\n\u8aa4\u5b57\u8131\u5b57\u3001\u60c5\u5831\u306e\u8aa4\u308a\u306f\u304a\u6559\u3048\u304f\u3060\u3055\u3044\ud83d\ude22\n\u3053\u306e\u8a18\u4e8b\u306f[Typescript Tutorial React & Webpack](https://www.typescriptlang.org/docs/handbook/react-&-webpack.html)\u3092\u51fa\u6c41\u306b\u3057\u3066\u3044\u307e\u3059\u3002 \n$ `npm install -D webpack@beta typescript@beta ts-loader source-map-loader @types/react-dom @types/react`\n$ `npm install -S react@next react-dom@next` \n\n\u9014\u4e2dwebpack\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3053\u306e\u8a18\u4e8b\u306b\u95a2\u3057\u3066\u306f\u554f\u984c\u306a\u3044\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u6c17\u306b\u306a\u308b\u65b9\u306f [What's new in webpack 2](https://gist.github.com/sokra/27b24881210b56bbaff7) \n\n## \u30a8\u30d4\u30bd\u30fc\u30c9 1 \u300cQiita \u65b0\u7740\u9806\u3067\u773a\u3081\u3066\u305f\u3089\u8a18\u4e8b\u767a\u898b\u300d\n[webpack\u306eDLL\u30d0\u30f3\u30c9\u30eb\u3092\u4f7f\u3063\u3066\u30d3\u30eb\u30c9\u3092\u901f\u304f\u3059\u308b](http://qiita.com/pirosikick/items/c77db84dbed4c447a6fe)\n[pirosikick](http://qiita.com/pirosikick)\u3055\u3093\u306e\u6295\u7a3f\u3067[HappyPack](https://github.com/amireh/happypack)\u306e\u5b58\u5728\u3092\u77e5\u308b\u3002\n\nHappyPack\u306b\u95a2\u3059\u308b\u65e5\u672c\u8a9e\u306e\u8a18\u4e8b\u306f\u4e00\u3064\u3082\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068\u30bd\u30fc\u30b9\u3092\u3055\u3063\u3068\u6d41\u3057\u8aad\u307f\u3057\u3066\u8a66\u3057\u3066\u307f\u308b\u3002\n$ `npm install -D happypack`\n\n```js:webpack.config.js\nvar path = require('path');\nvar HappyPack = require('happypack');\n\nmodule.exports = {\n  entry: \"./src/index.tsx\",\n  output: {\n    path: __dirname + \"/dist\",\n    filename: \"bundle.js\",\n  },\n  devtool: \"source-map\",\n  resolve: {\n    extensions: [\"\", \".ts\", \".tsx\", \".js\"]\n  },\n  // externals\u3082\u6709\u52b9\n  externals: {\n    \"react\": \"React\",\n    \"react-dom\": \"ReactDOM\"\n  },\n  plugins: [\n    new HappyPack({\n      cache: true,\n      loaders: [\"ts!source-map\"],\n      threads: 4\n    })\n  ],\n  module: {\n    loaders: [\n      {\n        test: /\\.tsx?$/,\n        loader: path.resolve(__dirname, \"./node_modules/ts-loader\")\n      }\n    ],\n    preLoaders: [\n      {\n        test: /\\.js$/,\n        loader: path.resolve(__dirname, \"./node_modules/source-map-loader\")\n      }\n    ],\n  }\n};\n```\n\n![happpack.png](https://qiita-image-store.s3.amazonaws.com/0/115845/e9a97584-178d-e10e-41a8-666a644ce43f.png)\n\nhappypack\u306f\u7279\u5225\u306b\n\n- externals(\u5f8c\u306b\u8a73\u7d30)\u6709\u52b9\n- HappyPack\u306e\u6a5f\u80fd\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u6709\u52b9 \n- \u30b9\u30ec\u30c3\u30c9\uff14\u3064\n\n## \u30a8\u30d4\u30bd\u30fc\u30c9 2 \u300cDLL\u30d0\u30f3\u30c9\u30eb\u306f\uff1f\u300d\n\n![dll-used.png](https://qiita-image-store.s3.amazonaws.com/0/115845/0cabf08b-7f62-d585-4652-e50fbb7154f8.png)\n\n## \u30a8\u30d4\u30bd\u30fc\u30c9 3 \u300c\u4f55\u3082\u3057\u306a\u3044\u5834\u5408\uff1f\u300d\n\n![default.png](https://qiita-image-store.s3.amazonaws.com/0/115845/d94f19f6-9dcb-2423-a0a1-e8ed37354362.png)\n\n## \u30a8\u30d4\u30bd\u30fc\u30c9 4 \u300c\u4f55\u3082\u3057\u306a\u3044\u3088\u308a\u30de\u30b7\u3060\u3063\u305f\u3051\u3069\u3001\u6c17\u306b\u306a\u308b\u304b\u3089\u304a\u3068\u306a\u3057\u304f\u516c\u5f0fTutorial\u3067\u8a66\u3057\u3066\u307f\u308b\u300d \n\n![external.png](https://qiita-image-store.s3.amazonaws.com/0/115845/7b0f0550-478c-6430-775d-0ba5279af2b5.png)\n\n## \u30a8\u30d4\u30bd\u30fc\u30c9 5 \u7d50\u8ad6\n\n```js:webpack.config.js\nmodule.exports = {\n    entry: \"./src/index.tsx\",\n    output: {\n        filename: \"./dist/bundle.js\",\n    },\n\n    // Enable sourcemaps for debugging webpack's output.\n    devtool: \"source-map\",\n\n    resolve: {\n        // Add '.ts' and '.tsx' as resolvable extensions.\n        extensions: [\"\", \".webpack.js\", \".web.js\", \".ts\", \".tsx\", \".js\"]\n    },\n\n    module: {\n        loaders: [\n            // All files with a '.ts' or '.tsx' extension will be handled by 'ts-loader'.\n            { test: /\\.tsx?$/, loader: \"ts-loader\" }\n        ],\n\n        preLoaders: [\n            // All output '.js' files will have any sourcemaps re-processed by 'source-map-loader'.\n            { test: /\\.js$/, loader: \"source-map-loader\" }\n        ]\n    },\n\n    // When importing a module whose path matches one of the following, just\n    // assume a corresponding global variable exists and use that instead.\n    // This is important because it allows us to avoid bundling all of our\n    // dependencies, which allows browsers to cache those libraries between builds.\n    externals: {\n        \"react\": \"React\",\n        \"react-dom\": \"ReactDOM\"\n    },\n};\n```\n\n# \u3064\u3088\u3055\uff1a externals > dll >> happypack >>> default\n\n\n- HappyPack\u306f\u898b\u8fbc\u307f\u7121\u3057 \n- dll\u306f\u898b\u8fbc\u307f\u3042\u308a \n- externals\u306fwebpack.config.js\u306b\u8a18\u8ff0\u3059\u308b\u3060\u3051\u3067\u6700\u9ad8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\n\n\n\u8cb4\u91cd\u306a\u6642\u9593\u3092\u6d6a\u8cbb\u3057\u3066\u3057\u307e\u3063\u305f\ud83d\ude22\n\nexternals\u306b\u3064\u3044\u3066\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084Qiita\u3084Google\u691c\u7d22\u3067\u3002\n\n\u8aa4\u5b57\u8131\u5b57\u3001\u60c5\u5831\u306e\u8aa4\u308a\u306f\u304a\u6559\u3048\u304f\u3060\u3055\u3044\ud83d\ude22\n\n"}