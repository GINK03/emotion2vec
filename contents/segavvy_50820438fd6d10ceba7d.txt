{"context": "\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u306e\u6311\u6226\u8a18\u9332\u3067\u3059\u3002\u74b0\u5883\u306fUbuntu 16.04 LTS \uff0b Python 3.5.2 :: Anaconda 4.1.1 (64-bit)\u3067\u3059\u3002\u904e\u53bb\u306e\u30ce\u30c3\u30af\u306e\u4e00\u89a7\u306f\u3053\u3061\u3089\u304b\u3089\u3069\u3046\u305e\u3002\n\n\u7b2c8\u7ae0: \u6a5f\u68b0\u5b66\u7fd2\n\n\u672c\u7ae0\u3067\u306f\uff0cBo Pang\u6c0f\u3068Lillian Lee\u6c0f\u304c\u516c\u958b\u3057\u3066\u3044\u308bMovie Review Data\u306esentence polarity dataset v1.0\u3092\u7528\u3044\uff0c\u6587\u3092\u80af\u5b9a\u7684\uff08\u30dd\u30b8\u30c6\u30a3\u30d6\uff09\u3082\u3057\u304f\u306f\u5426\u5b9a\u7684\uff08\u30cd\u30ac\u30c6\u30a3\u30d6\uff09\u306b\u5206\u985e\u3059\u308b\u30bf\u30b9\u30af\uff08\u6975\u6027\u5206\u6790\uff09\u306b\u53d6\u308a\u7d44\u3080\uff0e\n\n\n78. 5\u5206\u5272\u4ea4\u5dee\u691c\u5b9a\n\n76-77\u306e\u5b9f\u9a13\u3067\u306f\uff0c\u5b66\u7fd2\u306b\u7528\u3044\u305f\u4e8b\u4f8b\u3092\u8a55\u4fa1\u306b\u3082\u7528\u3044\u305f\u305f\u3081\uff0c\u6b63\u5f53\u306a\u8a55\u4fa1\u3068\u306f\u8a00\u3048\u306a\u3044\uff0e\u3059\u306a\u308f\u3061\uff0c\u5206\u985e\u5668\u304c\u8a13\u7df4\u4e8b\u4f8b\u3092\u4e38\u6697\u8a18\u3059\u308b\u969b\u306e\u6027\u80fd\u3092\u8a55\u4fa1\u3057\u3066\u304a\u308a\uff0c\u30e2\u30c7\u30eb\u306e\u6c4e\u5316\u6027\u80fd\u3092\u6e2c\u5b9a\u3057\u3066\u3044\u306a\u3044\uff0e\u305d\u3053\u3067\uff0c5\u5206\u5272\u4ea4\u5dee\u691c\u5b9a\u306b\u3088\u308a\uff0c\u6975\u6027\u5206\u985e\u306e\u6b63\u89e3\u7387\uff0c\u9069\u5408\u7387\uff0c\u518d\u73fe\u7387\uff0cF1\u30b9\u30b3\u30a2\u3092\u6c42\u3081\u3088\uff0e\n\n\n\u51fa\u6765\u4e0a\u304c\u3063\u305f\u30b3\u30fc\u30c9\uff1a\n\nmain.py\n# coding: utf-8\nimport codecs\nimport snowballstemmer\nimport numpy as np\n\nfname_sentiment = 'sentiment.txt'\nfname_features = 'features.txt'\nfname_result = 'result.txt'\nfencoding = 'cp1252'        # Windows-1252\u3089\u3057\u3044\n\ndivision = 5            # \u30c7\u30fc\u30bf\u306e\u5206\u5272\u6570\nlearn_alpha = 6.0       # \u5b66\u7fd2\u30ec\u30fc\u30c8\nlearn_count = 1000      # \u5b66\u7fd2\u306e\u7e70\u308a\u8fd4\u3057\u6570\n\nstemmer = snowballstemmer.stemmer('english')\n\n# \u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u306e\u30ea\u30b9\u30c8  http://xpo6.com/list-of-english-stop-words/ \u306eCSV Format\u3088\u308a\nstop_words = (\n    'a,able,about,across,after,all,almost,also,am,among,an,and,any,are,'\n    'as,at,be,because,been,but,by,can,cannot,could,dear,did,do,does,'\n    'either,else,ever,every,for,from,get,got,had,has,have,he,her,hers,'\n    'him,his,how,however,i,if,in,into,is,it,its,just,least,let,like,'\n    'likely,may,me,might,most,must,my,neither,no,nor,not,of,off,often,'\n    'on,only,or,other,our,own,rather,said,say,says,she,should,since,so,'\n    'some,than,that,the,their,them,then,there,these,they,this,tis,to,too,'\n    'twas,us,wants,was,we,were,what,when,where,which,while,who,whom,why,'\n    'will,with,would,yet,you,your').lower().split(',')\n\n\ndef is_stopword(str):\n    '''\u6587\u5b57\u304c\u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u304b\u3069\u3046\u304b\u3092\u8fd4\u3059\n    \u5927\u5c0f\u6587\u5b57\u306f\u540c\u4e00\u8996\u3059\u308b\n\n    \u623b\u308a\u5024\uff1a\n    \u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u306a\u3089True\u3001\u9055\u3046\u5834\u5408\u306fFalse\n    '''\n    return str.lower() in stop_words\n\n\ndef hypothesis(data_x, theta):\n    '''\u4eee\u8aac\u95a2\u6570\n    data_x\u306b\u5bfe\u3057\u3066\u3001theta\u3092\u4f7f\u3063\u3066data_y\u3092\u4e88\u6e2c\n\n    \u623b\u308a\u5024\uff1a\n    \u4e88\u6e2c\u5024\u306e\u884c\u5217\n    '''\n    return 1.0 / (1.0 + np.exp(-data_x.dot(theta)))\n\n\ndef cost(data_x, theta, data_y):\n    '''\u76ee\u7684\u95a2\u6570\n    data_x\u306b\u5bfe\u3057\u3066\u4e88\u6e2c\u3057\u305f\u7d50\u679c\u3068\u6b63\u89e3\u3068\u306e\u5dee\u3092\u7b97\u51fa\n\n    \u623b\u308a\u5024\uff1a\n    \u4e88\u6e2c\u3068\u6b63\u89e3\u3068\u306e\u5dee\n    '''\n    m = data_y.size         # \u30c7\u30fc\u30bf\u4ef6\u6570\n    h = hypothesis(data_x, theta)       # data_y\u306e\u4e88\u6e2c\u5024\u306e\u884c\u5217\n    j = 1 / m * np.sum(-data_y * np.log(h) -\n            (np.ones(m) - data_y) * np.log(np.ones(m) - h))\n\n    return j\n\n\ndef gradient(data_x, theta, data_y):\n    '''\u6700\u6025\u964d\u4e0b\u306b\u304a\u3051\u308b\u52fe\u914d\u306e\u7b97\u51fa\n\n    \u623b\u308a\u5024\uff1a\n    theta\u306b\u5bfe\u3059\u308b\u52fe\u914d\u306e\u884c\u5217\n    '''\n    m = data_y.size         # \u30c7\u30fc\u30bf\u4ef6\u6570\n    h = hypothesis(data_x, theta)       # data_y\u306e\u4e88\u6e2c\u5024\u306e\u884c\u5217\n    grad = 1 / m * (h - data_y).dot(data_x)\n\n    return grad\n\n\ndef extract_features(data, dict_features):\n    '''\u6587\u7ae0\u304b\u3089\u7d20\u6027\u3092\u62bd\u51fa\n    \u6587\u7ae0\u304b\u3089dict_features\u306b\u542b\u307e\u308c\u308b\u7d20\u6027\u3092\u62bd\u51fa\u3057\u3001\n    dict_features['(\u7d20\u6027)']\u306e\u4f4d\u7f6e\u30921\u306b\u3057\u305f\u884c\u5217\u3092\u8fd4\u3059\u3002\n    \u306a\u304a\u3001\u5148\u982d\u8981\u7d20\u306f\u56fa\u5b9a\u30671\u3002\u7d20\u6027\u306b\u5bfe\u5fdc\u3057\u306a\u3044\u91cd\u307f\u7528\u3002\n\n    \u623b\u308a\u5024\uff1a\n    \u5148\u982d\u8981\u7d20\u3068\u3001\u8a72\u5f53\u7d20\u6027\u306e\u4f4d\u7f6e+1\u30921\u306b\u3057\u305f\u884c\u5217\n    '''\n    data_one_x = np.zeros(len(dict_features) + 1, dtype=np.float64)\n    data_one_x[0] = 1       # \u5148\u982d\u8981\u7d20\u306f\u56fa\u5b9a\u30671\u3001\u7d20\u6027\u306b\u5bfe\u5fdc\u3057\u306a\u3044\u91cd\u307f\u7528\u3002\n\n    for word in data.split(' '):\n\n        # \u524d\u5f8c\u306e\u7a7a\u767d\u6587\u5b57\u9664\u53bb\n        word = word.strip()\n\n        # \u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u9664\u53bb\n        if is_stopword(word):\n            continue\n\n        # \u30b9\u30c6\u30df\u30f3\u30b0\n        word = stemmer.stemWord(word)\n\n        # \u7d20\u6027\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u53d6\u5f97\u3001\u884c\u5217\u306e\u8a72\u5f53\u7b87\u6240\u30921\u306b\n        try:\n            data_one_x[dict_features[word]] = 1\n        except:\n            pass        # dict_features\u306b\u306a\u3044\u7d20\u6027\u306f\u7121\u8996\n\n    return data_one_x\n\n\ndef load_dict_features():\n    '''features.txt\u3092\u8aad\u307f\u8fbc\u307f\u3001\u7d20\u6027\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u8f9e\u66f8\u3092\u4f5c\u6210\n    \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5024\u306f1\u30d9\u30fc\u30b9\u3067\u3001features.txt\u306b\u304a\u3051\u308b\u884c\u756a\u53f7\u3068\u4e00\u81f4\u3059\u308b\u3002\n\n    \u623b\u308a\u5024\uff1a\n    \u7d20\u6027\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5909\u63db\u3059\u308b\u8f9e\u66f8\n    '''\n    with codecs.open(fname_features, 'r', fencoding) as file_in:\n        return {line.strip(): i for i, line in enumerate(file_in, start=1)}\n\n\ndef create_training_set(sentiments, dict_features):\n    '''\u6b63\u89e3\u30c7\u30fc\u30bfsentiments\u304b\u3089\u5b66\u7fd2\u5bfe\u8c61\u306e\u884c\u5217\u3068\u3001\u6975\u6027\u30e9\u30d9\u30eb\u306e\u884c\u5217\u3092\u4f5c\u6210\n    \u5b66\u7fd2\u5bfe\u8c61\u306e\u884c\u4f8b\u306e\u5927\u304d\u3055\u306f\u6b63\u89e3\u30c7\u30fc\u30bf\u306e\u30ec\u30d3\u30e5\u30fc\u6570\u00d7(\u7d20\u6027\u6570+1)\u3002\n    \u5217\u306e\u5024\u306f\u3001\u5404\u30ec\u30d3\u30e5\u30fc\u306b\u5bfe\u3057\u3066\u8a72\u5f53\u7d20\u6027\u304c\u3042\u308b\u5834\u5408\u306f1\u3001\u306a\u3051\u308c\u30700\u306b\u306a\u308b\u3002\n    \u5217\u306e\u7d20\u6027\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306fdict_features['(\u7d20\u6027)']\u3067\u6c7a\u307e\u308b\u3002\n    \u5148\u982d\u306e\u5217\u306f\u5e38\u306b1\u3067\u3001\u7d20\u6027\u306b\u5bfe\u5fdc\u3057\u306a\u3044\u91cd\u307f\u306e\u5b66\u7fd2\u7528\u3002\n    dict_features\u306b\u5b58\u5728\u3057\u306a\u3044\u7d20\u6027\u306f\u7121\u8996\u3002\n\n    \u6975\u6027\u30e9\u30d9\u30eb\u306e\u884c\u5217\u306e\u5927\u304d\u3055\u306f\u30ec\u30d3\u30e5\u30fc\u6570\u00d71\u3002\n    \u80af\u5b9a\u7684\u306a\u5185\u5bb9\u304c1\u3001\u5426\u5b9a\u7684\u306a\u5185\u5bb9\u304c0\u3002\n\n    \u623b\u308a\u5024\uff1a\n    \u5b66\u7fd2\u5bfe\u8c61\u306e\u884c\u5217,\u6975\u6027\u30e9\u30d9\u30eb\u306e\u884c\u5217\n    '''\n\n    # \u884c\u5217\u30920\u3067\u521d\u671f\u5316\n    data_x = np.zeros([len(sentiments), len(dict_features) + 1], dtype=np.float64)\n    data_y = np.zeros(len(sentiments), dtype=np.float64)\n\n    for i, line in enumerate(sentiments):\n\n        # \u7d20\u6027\u62bd\u51fa\n        data_x[i] = extract_features(line[3:], dict_features)\n\n        # \u6975\u6027\u30e9\u30d9\u30eb\u884c\u5217\u306e\u30bb\u30c3\u30c8\n        if line[0:2] == '+1':\n            data_y[i] = 1\n\n    return data_x, data_y\n\n\ndef learn(data_x, data_y, alpha, count):\n    '''\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u306e\u5b66\u7fd2\n\n    \u623b\u308a\u5024\uff1a\n    \u5b66\u7fd2\u6e08\u307f\u306etheta\n    '''\n    theta = np.zeros(data_x.shape[1])\n    c = cost(data_x, theta, data_y)\n    print('\\t\u5b66\u7fd2\u958b\u59cb\\tcost\uff1a{}'.format(c))\n\n    for i in range(1, count + 1):\n\n        grad = gradient(data_x, theta, data_y)\n        theta -= alpha * grad\n\n        # \u30b3\u30b9\u30c8\u3068theta\u306e\u6700\u5927\u8abf\u6574\u91cf\u3092\u7b97\u51fa\u3057\u3066\u7d4c\u904e\u8868\u793a\uff08100\u56de\u306b1\u56de\uff09\n        if i % 100 == 0:\n            c = cost(data_x, theta, data_y)\n            e = np.max(np.absolute(alpha * grad))\n            print('\\t\u5b66\u7fd2\u4e2d(#{})\\tcost\uff1a{}\\tE:{}'.format(i, c, e))\n\n    c = cost(data_x, theta, data_y)\n    e = np.max(np.absolute(alpha * grad))\n    print('\\t\u5b66\u7fd2\u5b8c\u4e86(#{}) \\tcost\uff1a{}\\tE:{}'.format(i, c, e))\n    return theta\n\n\ndef score(fname):\n    '''\u7d50\u679c\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30b9\u30b3\u30a2\u7b97\u51fa\n    fname\u3067\u6307\u5b9a\u3055\u308c\u305f\u7d50\u679c\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u6b63\u89e3\u7387\u3001\u9069\u5408\u7387\u3001\u518d\u73fe\u7387\u3001F1\u30b9\u30b3\u30a2\u3092\u8fd4\u3059\n\n    \u623b\u308a\u5024\uff1a\n    \u6b63\u89e3\u7387,\u9069\u5408\u7387,\u518d\u73fe\u7387,F1\u30b9\u30b3\u30a2\n    '''\n    # \u7d50\u679c\u3092\u8aad\u307f\u8fbc\u3093\u3067\u96c6\u8a08\n    TP = 0      # True-Positive     \u4e88\u60f3\u304c+1\u3001\u6b63\u89e3\u3082+1\n    FP = 0      # False-Positive    \u4e88\u60f3\u304c+1\u3001\u6b63\u89e3\u306f-1\n    FN = 0      # False-Negative    \u4e88\u60f3\u304c-1\u3001\u6b63\u89e3\u306f+1\n    TN = 0      # True-Negative     \u4e88\u60f3\u304c-1\u3001\u6b63\u89e3\u3082-1\n\n    with open(fname) as data_file:\n        for line in data_file:\n            cols = line.split('\\t')\n\n            if len(cols) < 3:\n                continue\n\n            if cols[0] == '+1':         # \u6b63\u89e3\n                if cols[1] == '+1':     # \u4e88\u60f3\n                    TP += 1\n                else:\n                    FN += 1\n            else:\n                if cols[1] == '+1':\n                    FP += 1\n                else:\n                    TN += 1\n\n    # \u7b97\u51fa\n    accuracy = (TP + TN) / (TP + FP + FN + TN)      # \u6b63\u89e3\u7387\n    precision = TP / (TP + FP)      # \u9069\u5408\u7387\n    recall = TP / (TP + FN)     # \u518d\u73fe\u7387\n    f1 = (2 * recall * precision) / (recall + precision)    # F1\u30b9\u30b3\u30a2\n\n    return accuracy, precision, recall, f1\n\n\n# \u7d20\u6027\u8f9e\u66f8\u306e\u8aad\u307f\u8fbc\u307f\ndict_features = load_dict_features()\n\n# \u6b63\u89e3\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\nwith codecs.open(fname_sentiment, 'r', fencoding) as file_in:\n    sentiments_all = list(file_in)\n\n# \u6b63\u89e3\u30c7\u30fc\u30bf\u30925\u5206\u5272\nsentiments = []\nunit = int(len(sentiments_all) / division)\nfor i in range(5):\n    sentiments.append(sentiments_all[i * unit:(i + 1) * unit])\n\n# 5\u5206\u5272\u4ea4\u5dee\u691c\u5b9a\nwith open(fname_result, 'w') as file_out:\n    for i in range(division):\n\n        print('{}/{}'.format(i + 1, division))\n\n        # \u5b66\u7fd2\u7528\u3068\u691c\u8a3c\u7528\u306b\u6b63\u89e3\u30c7\u30fc\u30bf\u3092\u5206\u5272\n        data_learn = []\n        for j in range(division):\n            if i == j:\n                data_validation = sentiments[j]\n            else:\n                data_learn += sentiments[j]\n\n        # \u5b66\u7fd2\u5bfe\u8c61\u306e\u914d\u5217\u3068\u6975\u6027\u30e9\u30d9\u30eb\u306e\u914d\u5217\u4f5c\u6210\n        data_x, data_y = create_training_set(data_learn, dict_features)\n\n        # \u5b66\u7fd2\n        theta = learn(data_x, data_y, alpha=learn_alpha, count=learn_count)\n\n        # \u691c\u8a3c\n        for line in data_validation:\n\n            # \u7d20\u6027\u62bd\u51fa\n            data_one_x = extract_features(line[3:], dict_features)\n\n            # \u4e88\u6e2c\u3001\u7d50\u679c\u51fa\u529b\n            h = hypothesis(data_one_x, theta)\n            if h > 0.5:\n                file_out.write('{}\\t{}\\t{}\\n'.format(line[0:2], '+1', h))\n            else:\n                file_out.write('{}\\t{}\\t{}\\n'.format(line[0:2], '-1', 1 - h))\n\n# \u7d50\u679c\u8868\u793a\nprint('\\n\u5b66\u7fd2\u30ec\u30fc\u30c8\uff1a{}\\t\u5b66\u7fd2\u7e70\u308a\u8fd4\u3057\u6570\uff1a{}'.format(learn_alpha, learn_count))\naccuracy, precision, recall, f1 = score(fname_result)\nprint('\u6b63\u89e3\u7387\u3000\\t{}\\n\u9069\u5408\u7387\u3000\\t{}\\n\u518d\u73fe\u7387\u3000\\t{}\\nF1\u30b9\u30b3\u30a2\u3000\\t{}'.format(\n    accuracy, precision, recall, f1\n))\n\n\n\n\u5b9f\u884c\u7d50\u679c\uff1a\n\n\u5b9f\u884c\u7d50\u679c\n1/5\n    \u5b66\u7fd2\u958b\u59cb    cost\uff1a0.6931471805599453\n    \u5b66\u7fd2\u4e2d(#100) cost\uff1a0.46843942718055814  E:0.006388382573910524\n    \u5b66\u7fd2\u4e2d(#200) cost\uff1a0.4155300488897057   E:0.003950176267083882\n    \u5b66\u7fd2\u4e2d(#300) cost\uff1a0.3855283848183693   E:0.002867235531957132\n    \u5b66\u7fd2\u4e2d(#400) cost\uff1a0.3648933651792237   E:0.0022495471367582247\n    \u5b66\u7fd2\u4e2d(#500) cost\uff1a0.3493282931816998   E:0.0018583498524543404\n    \u5b66\u7fd2\u4e2d(#600) cost\uff1a0.3369232080431452   E:0.0016771358183603987\n    \u5b66\u7fd2\u4e2d(#700) cost\uff1a0.32666634898652896  E:0.001528412108716516\n    \u5b66\u7fd2\u4e2d(#800) cost\uff1a0.31795919554061053  E:0.0014042508127869423\n    \u5b66\u7fd2\u4e2d(#900) cost\uff1a0.31041943220497686  E:0.0012990594970099315\n    \u5b66\u7fd2\u4e2d(#1000)    cost\uff1a0.30378857681325766  E:0.0012088047599478039\n    \u5b66\u7fd2\u5b8c\u4e86(#1000)     cost\uff1a0.30378857681325766  E:0.0012088047599478039\n2/5\n    \u5b66\u7fd2\u958b\u59cb    cost\uff1a0.6931471805599453\n    \u5b66\u7fd2\u4e2d(#100) cost\uff1a0.4741687433335998   E:0.006589814822192543\n    \u5b66\u7fd2\u4e2d(#200) cost\uff1a0.42144780985764596  E:0.003908261118677938\n    \u5b66\u7fd2\u4e2d(#300) cost\uff1a0.3912183151335336   E:0.002804459291483359\n    \u5b66\u7fd2\u4e2d(#400) cost\uff1a0.370303379815077    E:0.0023610369221010326\n    \u5b66\u7fd2\u4e2d(#500) cost\uff1a0.354477846021314    E:0.0020514997491309413\n    \u5b66\u7fd2\u4e2d(#600) cost\uff1a0.3418460542105294   E:0.0018224684562050484\n    \u5b66\u7fd2\u4e2d(#700) cost\uff1a0.33139550986560584  E:0.001645643112098399\n    \u5b66\u7fd2\u4e2d(#800) cost\uff1a0.3225230456812948   E:0.0015047097369745835\n    \u5b66\u7fd2\u4e2d(#900) cost\uff1a0.31484124228803834  E:0.0013896119787524179\n    \u5b66\u7fd2\u4e2d(#1000)    cost\uff1a0.3080871067835467   E:0.0012937962132790058\n    \u5b66\u7fd2\u5b8c\u4e86(#1000)     cost\uff1a0.3080871067835467   E:0.0012937962132790058\n3/5\n    \u5b66\u7fd2\u958b\u59cb    cost\uff1a0.6931471805599453\n    \u5b66\u7fd2\u4e2d(#100) cost\uff1a0.46891949543978517  E:0.006357216339527686\n    \u5b66\u7fd2\u4e2d(#200) cost\uff1a0.41580499264287696  E:0.003532830533162978\n    \u5b66\u7fd2\u4e2d(#300) cost\uff1a0.3854553165948075   E:0.0027301913427912735\n    \u5b66\u7fd2\u4e2d(#400) cost\uff1a0.3644760512004263   E:0.0022545615099526647\n    \u5b66\u7fd2\u4e2d(#500) cost\uff1a0.3485986820681382   E:0.001919021249806922\n    \u5b66\u7fd2\u4e2d(#600) cost\uff1a0.3359163761795678   E:0.0016705021198879075\n    \u5b66\u7fd2\u4e2d(#700) cost\uff1a0.32541428766128333  E:0.0014797071516709523\n    \u5b66\u7fd2\u4e2d(#800) cost\uff1a0.31648958311645375  E:0.0013367387334497819\n    \u5b66\u7fd2\u4e2d(#900) cost\uff1a0.3087557956043563   E:0.0012494627215075146\n    \u5b66\u7fd2\u4e2d(#1000)    cost\uff1a0.3019508027016161   E:0.0011779206121903469\n    \u5b66\u7fd2\u5b8c\u4e86(#1000)     cost\uff1a0.3019508027016161   E:0.0011779206121903469\n4/5\n    \u5b66\u7fd2\u958b\u59cb    cost\uff1a0.6931471805599453\n    \u5b66\u7fd2\u4e2d(#100) cost\uff1a0.4725342546493931   E:0.006182597071964639\n    \u5b66\u7fd2\u4e2d(#200) cost\uff1a0.4194276723005623   E:0.0034649497530972943\n    \u5b66\u7fd2\u4e2d(#300) cost\uff1a0.38918298242842136  E:0.0025501444797361994\n    \u5b66\u7fd2\u4e2d(#400) cost\uff1a0.36832204557828535  E:0.0021388621069763788\n    \u5b66\u7fd2\u4e2d(#500) cost\uff1a0.3525543611131982   E:0.001855410065711756\n    \u5b66\u7fd2\u4e2d(#600) cost\uff1a0.33996964450743344  E:0.0016480855756071824\n    \u5b66\u7fd2\u4e2d(#700) cost\uff1a0.32955351095109425  E:0.0014898405345723522\n    \u5b66\u7fd2\u4e2d(#800) cost\uff1a0.32070420313966275  E:0.001365069555771408\n    \u5b66\u7fd2\u4e2d(#900) cost\uff1a0.3130363527272276   E:0.0012842751555114352\n    \u5b66\u7fd2\u4e2d(#1000)    cost\uff1a0.3062888953703655   E:0.0012201511930926112\n    \u5b66\u7fd2\u5b8c\u4e86(#1000)     cost\uff1a0.3062888953703655   E:0.0012201511930926112\n5/5\n    \u5b66\u7fd2\u958b\u59cb    cost\uff1a0.6931471805599453\n    \u5b66\u7fd2\u4e2d(#100) cost\uff1a0.47367883038307196  E:0.006165844710913304\n    \u5b66\u7fd2\u4e2d(#200) cost\uff1a0.42196370471708444  E:0.0038294500786362744\n    \u5b66\u7fd2\u4e2d(#300) cost\uff1a0.39242868456409186  E:0.002903639748114128\n    \u5b66\u7fd2\u4e2d(#400) cost\uff1a0.3720216436950633   E:0.002348459481805761\n    \u5b66\u7fd2\u4e2d(#500) cost\uff1a0.3565815749862366   E:0.0019763223680587666\n    \u5b66\u7fd2\u4e2d(#600) cost\uff1a0.34425094991837796  E:0.001708469854933442\n    \u5b66\u7fd2\u4e2d(#700) cost\uff1a0.33404185010109005  E:0.0015059837001246833\n    \u5b66\u7fd2\u4e2d(#800) cost\uff1a0.32536765342218166  E:0.001357007404701798\n    \u5b66\u7fd2\u4e2d(#900) cost\uff1a0.3178523514158344   E:0.0012612117027114012\n    \u5b66\u7fd2\u4e2d(#1000)    cost\uff1a0.3112409530842421   E:0.0011798784899874886\n    \u5b66\u7fd2\u5b8c\u4e86(#1000)     cost\uff1a0.3112409530842421   E:0.0011798784899874886\n\n\u5b66\u7fd2\u30ec\u30fc\u30c8\uff1a6.0   \u5b66\u7fd2\u7e70\u308a\u8fd4\u3057\u6570\uff1a1000\n\u6b63\u89e3\u7387\u3000    0.7483114446529081\n\u9069\u5408\u7387\u3000    0.749058734939759\n\u518d\u73fe\u7387\u3000    0.7466691686995685\nF1\u30b9\u30b3\u30a2\u3000  0.7478620430410676\n\n\n\n\u4ea4\u5dee\u691c\u5b9a\u3068\u306f\n\u5b66\u7fd2\u7d50\u679c\u306e\u7cbe\u5ea6\u3092\u691c\u8a3c\u3059\u308b\u969b\u3001\u5b66\u7fd2\u306b\u4f7f\u3063\u305f\u30c7\u30fc\u30bf\u3067\u691c\u8a3c\u3057\u3066\u3082\u3001\u672a\u77e5\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u7cbe\u5ea6\u304c\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u5b66\u7fd2\u306b\u4f7f\u3063\u305f\u30c7\u30fc\u30bf\u3067\u306e\u691c\u8a3c\u306f\u3001\u3044\u308f\u3086\u308b\u6559\u79d1\u66f8\u4e38\u6697\u8a18\u3067\u5fdc\u7528\u304c\u52b9\u304b\u306a\u3044\u3088\u3046\u306a\u5b66\u7fd2\uff08\u904e\u5b66\u7fd2\u3068\u304b\u547c\u3073\u307e\u3059\uff09\u3067\u3082\u826f\u3044\u7d50\u679c\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u5b66\u7fd2\u306b\u4f7f\u3063\u3066\u3044\u306a\u3044\u30c7\u30fc\u30bf\u3067\u691c\u8a3c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u4ea4\u5dee\u691c\u5b9a\u3068\u547c\u3073\u307e\u3059\u3002\n\u4ea4\u5dee\u691c\u5b9a\u306b\u306f\u4e00\u822c\u7684\u306a\u65b9\u6cd5\u304c\u3044\u304f\u3064\u304b\u3042\u308b\u3088\u3046\u3067\u3059\u3002\u4eca\u56de\u306e\u554f\u984c\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u300cK-\u5206\u5272\u4ea4\u5dee\u691c\u5b9a\u300d\u306f\u3001\u30c7\u30fc\u30bf\u3092K\u5206\u5272\u3057\u3066\u3001\u305d\u306e\u3046\u3061\u306e1\u3064\u3092\u691c\u8a3c\u7528\u3001\u6b8b\u308a\u3092\u5b66\u7fd2\u7528\u3068\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\u3053\u308c\u3092\u691c\u8a3c\u7528\u306e\u30c7\u30fc\u30bf\u3092\u5207\u308a\u66ff\u3048\u306a\u304c\u3089K\u56de\u7e70\u308a\u8fd4\u3057\u3066\u5e73\u5747\u3057\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u6280\u8853\u8a55\u8ad6\u793e\u306e\u300cgihyo.jp\u300d\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u7b2c21\u56de\uff08\u6700\u7d42\u56de\uff09\u3000\u6a5f\u68b0\u5b66\u7fd2 \u306f\u3058\u3081\u3088\u3046\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\u307e\u305f\u3001\u4f8b\u306eCoursera\u306eMachine Learning\u3067\u306f\u5225\u306e\u65b9\u6cd5\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u3068\u8abf\u6574\u7528\u306e\u30c7\u30fc\u30bf\u3068\u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u306e3\u3064\u306b\u5206\u3051\u3066\u3001\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u3067\u5b66\u7fd2\u3057\u3001\u8abf\u6574\u7528\u306e\u30c7\u30fc\u30bf\u3067\u8abf\u6574\u3057\u3001\u6700\u7d42\u7684\u306b\u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u3067\u7d50\u679c\u306e\u7cbe\u5ea6\u3092\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\u3053\u3061\u3089\u306b\u3064\u3044\u3066\u306fkatsu1110\u3055\u3093\u306eCoursera Machine Learning (6): \u6a5f\u68b0\u5b66\u7fd2\u306e\u30e2\u30c7\u30eb\u8a55\u4fa1\uff08\u4ea4\u5dee\u691c\u5b9a\u3001Bias & Variance\u3001\u9069\u5408\u7387 & \u518d\u73fe\u7387\uff09\u306e\u307e\u3068\u3081\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\n5\u5206\u5272\u4ea4\u5dee\u691c\u5b9a\u306e\u5b9f\u88c5\n\u5358\u7d14\u306b\u30c7\u30fc\u30bf\u30925\u5206\u5272\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\u30c7\u30fc\u30bf\u306f\u5168\u90e8\u306710,662\u4ef6\u3042\u308b\u306e\u3067\u3001\u5272\u308c\u305a\u306b\u4f59\u308b2\u4ef6\u306f\u6271\u3044\u304c\u9762\u5012\u306a\u306e\u3067\u306a\u304b\u3063\u305f\u3053\u3068\u306b\u3057\u307e\u3057\u305f^^;\n\u306a\u304a\u3001\u95a2\u6570\u306f\u3059\u3079\u3066\u3053\u308c\u307e\u3067\u306e\u554f\u984c\u3067\u4f5c\u3063\u305f\u3082\u306e\u3067\u3059\u3002\n\u30b9\u30b3\u30a2\u306e\u7b97\u51fa\u306b\u3064\u3044\u3066\u3082\u554f\u984c77\u3067\u4f5c\u3063\u305fscore()\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u305f\u3081\u306b\u30015\u56de\u306b\u5206\u3051\u3066\u4e88\u6e2c\u3055\u305b\u305f\u7d50\u679c\u3092\u554f\u984c76\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30671\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u8ffd\u8a18\u3057\u3066\u3044\u304d\u3001\u51fa\u6765\u3042\u304c\u3063\u305f\u5927\u304d\u306a1\u3064\u306e\u7d50\u679c\u30d5\u30a1\u30a4\u30eb\u3092score()\u306b\u98df\u308f\u305b\u308b\u5f62\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u7cbe\u5ea6\u306e\u6539\u5584\u306b\u3064\u3044\u3066\n\u6b8b\u5ff5\u306a\u304c\u308975%\u5f31\u307e\u3067\u4e0b\u304c\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3061\u3087\u3063\u3068\u4f4e\u3044\u611f\u3058\u304c\u3057\u307e\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u6b21\u306e\u554f\u984c\u306b\u9032\u3082\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001\u7cbe\u5ea6\u3092\u6539\u5584\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u7d20\u6027\u3092\u5897\u3084\u3057\u305f\u308a\u3001\u30c7\u30fc\u30bf\u3092\u5897\u3084\u3057\u305f\u308a\u3001\u6b63\u898f\u5316\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8ffd\u52a0\u3057\u305f\u308a\u3001\u4eee\u8aac\u95a2\u6570\u306e\u591a\u9805\u5f0f\u3092\u5897\u3084\u3057\u305f\u308a\u3001\u7d20\u6027\u306e\u62bd\u51fa\u65b9\u6cd5\u3092\u898b\u76f4\u3057\u305f\u308a...\u3068\u3044\u308d\u3044\u308d\u306a\u624b\u6bb5\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3060\u3001\u601d\u3044\u3064\u304d\u3067\u3044\u308d\u3044\u308d\u8a66\u3057\u3066\u3082\u6642\u9593\u3092\u6d6a\u8cbb\u3059\u308b\u3060\u3051\u3067\u3001\u7cbe\u5ea6\u306f\u306a\u304b\u306a\u304b\u6539\u5584\u3067\u304d\u306a\u3044\u305d\u3046\u3067\u3059\u3002\nCoursera\u306eMachine Learning\u3067\u306f\u3001\u6539\u5584\u306e\u305f\u3081\u306b\u307e\u305a\u7cbe\u5ea6\u304c\u4f4e\u3044\u539f\u56e0\u304c\u30aa\u30fc\u30d0\u30fc\u30d5\u30a3\u30c3\u30c8\uff08\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u4f9d\u5b58\u3057\u3059\u304e\u3066\u3044\u308b\u72b6\u614b\u3001\u9ad8\u30d0\u30ea\u30a2\u30f3\u30b9\u3068\u304b\u547c\u3073\u307e\u3059\uff09\u306a\u306e\u304b\u30a2\u30f3\u30c0\u30fc\u30d5\u30a3\u30c3\u30c8\uff08\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u6d3b\u7528\u3057\u304d\u308c\u3066\u3044\u306a\u3044\u3001\u9ad8\u30d0\u30a4\u30a2\u30b9\uff09\u306a\u306e\u304b\u3092\u898b\u6975\u3081\u306a\u3055\u3044\u3068\u306e\u3053\u3068\u3067\u3057\u305f\u3002\u3053\u308c\u306f\u6b63\u898f\u5316\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u3092\u5c0e\u5165\u3059\u308b\u3068\u5224\u65ad\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u7d50\u679c\u306b\u3088\u3063\u3066\u6539\u5584\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u304c\u6c7a\u307e\u3063\u3066\u304d\u307e\u3059\u3002\u691c\u8a3c\u3084\u6539\u5584\u306b\u3064\u3044\u3066\u306fMachine Learning\u306eWeek6\u3067\u5b66\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3000\n79\u672c\u76ee\u306e\u30ce\u30c3\u30af\u306f\u4ee5\u4e0a\u3067\u3059\u3002\u8aa4\u308a\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5e78\u3044\u3067\u3059\u3002\n\n\u5b9f\u884c\u7d50\u679c\u306b\u306f\u3001100\u672c\u30ce\u30c3\u30af\u3067\u7528\u3044\u308b\u30b3\u30fc\u30d1\u30b9\u30fb\u30c7\u30fc\u30bf\u3067\u914d\u5e03\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u304c\u542b\u307e\u308c\u307e\u3059\u3002\n\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015](http://www.cl.ecei.tohoku.ac.jp/nlp100/)\u306e\u6311\u6226\u8a18\u9332\u3067\u3059\u3002\u74b0\u5883\u306fUbuntu 16.04 LTS \uff0b Python 3.5.2 \\:\\: Anaconda 4.1.1 (64-bit)\u3067\u3059\u3002\u904e\u53bb\u306e\u30ce\u30c3\u30af\u306e\u4e00\u89a7\u306f[\u3053\u3061\u3089](http://qiita.com/segavvy/items)\u304b\u3089\u3069\u3046\u305e\u3002\n\n## \u7b2c8\u7ae0: \u6a5f\u68b0\u5b66\u7fd2\n>\u672c\u7ae0\u3067\u306f\uff0cBo Pang\u6c0f\u3068Lillian Lee\u6c0f\u304c\u516c\u958b\u3057\u3066\u3044\u308bMovie Review Data\u306esentence polarity dataset v1.0\u3092\u7528\u3044\uff0c\u6587\u3092\u80af\u5b9a\u7684\uff08\u30dd\u30b8\u30c6\u30a3\u30d6\uff09\u3082\u3057\u304f\u306f\u5426\u5b9a\u7684\uff08\u30cd\u30ac\u30c6\u30a3\u30d6\uff09\u306b\u5206\u985e\u3059\u308b\u30bf\u30b9\u30af\uff08\u6975\u6027\u5206\u6790\uff09\u306b\u53d6\u308a\u7d44\u3080\uff0e\n\n###78. 5\u5206\u5272\u4ea4\u5dee\u691c\u5b9a\n>76-77\u306e\u5b9f\u9a13\u3067\u306f\uff0c\u5b66\u7fd2\u306b\u7528\u3044\u305f\u4e8b\u4f8b\u3092\u8a55\u4fa1\u306b\u3082\u7528\u3044\u305f\u305f\u3081\uff0c\u6b63\u5f53\u306a\u8a55\u4fa1\u3068\u306f\u8a00\u3048\u306a\u3044\uff0e\u3059\u306a\u308f\u3061\uff0c\u5206\u985e\u5668\u304c\u8a13\u7df4\u4e8b\u4f8b\u3092\u4e38\u6697\u8a18\u3059\u308b\u969b\u306e\u6027\u80fd\u3092\u8a55\u4fa1\u3057\u3066\u304a\u308a\uff0c\u30e2\u30c7\u30eb\u306e\u6c4e\u5316\u6027\u80fd\u3092\u6e2c\u5b9a\u3057\u3066\u3044\u306a\u3044\uff0e\u305d\u3053\u3067\uff0c5\u5206\u5272\u4ea4\u5dee\u691c\u5b9a\u306b\u3088\u308a\uff0c\u6975\u6027\u5206\u985e\u306e\u6b63\u89e3\u7387\uff0c\u9069\u5408\u7387\uff0c\u518d\u73fe\u7387\uff0cF1\u30b9\u30b3\u30a2\u3092\u6c42\u3081\u3088\uff0e\n\n####\u51fa\u6765\u4e0a\u304c\u3063\u305f\u30b3\u30fc\u30c9\uff1a\n\n```python:main.py\n# coding: utf-8\nimport codecs\nimport snowballstemmer\nimport numpy as np\n\nfname_sentiment = 'sentiment.txt'\nfname_features = 'features.txt'\nfname_result = 'result.txt'\nfencoding = 'cp1252'\t\t# Windows-1252\u3089\u3057\u3044\n\ndivision = 5\t\t\t# \u30c7\u30fc\u30bf\u306e\u5206\u5272\u6570\nlearn_alpha = 6.0\t\t# \u5b66\u7fd2\u30ec\u30fc\u30c8\nlearn_count = 1000\t\t# \u5b66\u7fd2\u306e\u7e70\u308a\u8fd4\u3057\u6570\n\nstemmer = snowballstemmer.stemmer('english')\n\n# \u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u306e\u30ea\u30b9\u30c8\t http://xpo6.com/list-of-english-stop-words/ \u306eCSV Format\u3088\u308a\nstop_words = (\n\t'a,able,about,across,after,all,almost,also,am,among,an,and,any,are,'\n\t'as,at,be,because,been,but,by,can,cannot,could,dear,did,do,does,'\n\t'either,else,ever,every,for,from,get,got,had,has,have,he,her,hers,'\n\t'him,his,how,however,i,if,in,into,is,it,its,just,least,let,like,'\n\t'likely,may,me,might,most,must,my,neither,no,nor,not,of,off,often,'\n\t'on,only,or,other,our,own,rather,said,say,says,she,should,since,so,'\n\t'some,than,that,the,their,them,then,there,these,they,this,tis,to,too,'\n\t'twas,us,wants,was,we,were,what,when,where,which,while,who,whom,why,'\n\t'will,with,would,yet,you,your').lower().split(',')\n\n\ndef is_stopword(str):\n\t'''\u6587\u5b57\u304c\u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u304b\u3069\u3046\u304b\u3092\u8fd4\u3059\n\t\u5927\u5c0f\u6587\u5b57\u306f\u540c\u4e00\u8996\u3059\u308b\n\n\t\u623b\u308a\u5024\uff1a\n\t\u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u306a\u3089True\u3001\u9055\u3046\u5834\u5408\u306fFalse\n\t'''\n\treturn str.lower() in stop_words\n\n\ndef hypothesis(data_x, theta):\n\t'''\u4eee\u8aac\u95a2\u6570\n\tdata_x\u306b\u5bfe\u3057\u3066\u3001theta\u3092\u4f7f\u3063\u3066data_y\u3092\u4e88\u6e2c\n\n\t\u623b\u308a\u5024\uff1a\n\t\u4e88\u6e2c\u5024\u306e\u884c\u5217\n\t'''\n\treturn 1.0 / (1.0 + np.exp(-data_x.dot(theta)))\n\n\ndef cost(data_x, theta, data_y):\n\t'''\u76ee\u7684\u95a2\u6570\n\tdata_x\u306b\u5bfe\u3057\u3066\u4e88\u6e2c\u3057\u305f\u7d50\u679c\u3068\u6b63\u89e3\u3068\u306e\u5dee\u3092\u7b97\u51fa\n\n\t\u623b\u308a\u5024\uff1a\n\t\u4e88\u6e2c\u3068\u6b63\u89e3\u3068\u306e\u5dee\n\t'''\n\tm = data_y.size\t\t\t# \u30c7\u30fc\u30bf\u4ef6\u6570\n\th = hypothesis(data_x, theta)\t\t# data_y\u306e\u4e88\u6e2c\u5024\u306e\u884c\u5217\n\tj = 1 / m * np.sum(-data_y * np.log(h) -\n\t\t\t(np.ones(m) - data_y) * np.log(np.ones(m) - h))\n\n\treturn j\n\n\ndef gradient(data_x, theta, data_y):\n\t'''\u6700\u6025\u964d\u4e0b\u306b\u304a\u3051\u308b\u52fe\u914d\u306e\u7b97\u51fa\n\n\t\u623b\u308a\u5024\uff1a\n\ttheta\u306b\u5bfe\u3059\u308b\u52fe\u914d\u306e\u884c\u5217\n\t'''\n\tm = data_y.size\t\t\t# \u30c7\u30fc\u30bf\u4ef6\u6570\n\th = hypothesis(data_x, theta)\t\t# data_y\u306e\u4e88\u6e2c\u5024\u306e\u884c\u5217\n\tgrad = 1 / m * (h - data_y).dot(data_x)\n\n\treturn grad\n\n\ndef extract_features(data, dict_features):\n\t'''\u6587\u7ae0\u304b\u3089\u7d20\u6027\u3092\u62bd\u51fa\n\t\u6587\u7ae0\u304b\u3089dict_features\u306b\u542b\u307e\u308c\u308b\u7d20\u6027\u3092\u62bd\u51fa\u3057\u3001\n\tdict_features['(\u7d20\u6027)']\u306e\u4f4d\u7f6e\u30921\u306b\u3057\u305f\u884c\u5217\u3092\u8fd4\u3059\u3002\n\t\u306a\u304a\u3001\u5148\u982d\u8981\u7d20\u306f\u56fa\u5b9a\u30671\u3002\u7d20\u6027\u306b\u5bfe\u5fdc\u3057\u306a\u3044\u91cd\u307f\u7528\u3002\n\n\t\u623b\u308a\u5024\uff1a\n\t\u5148\u982d\u8981\u7d20\u3068\u3001\u8a72\u5f53\u7d20\u6027\u306e\u4f4d\u7f6e+1\u30921\u306b\u3057\u305f\u884c\u5217\n\t'''\n\tdata_one_x = np.zeros(len(dict_features) + 1, dtype=np.float64)\n\tdata_one_x[0] = 1\t\t# \u5148\u982d\u8981\u7d20\u306f\u56fa\u5b9a\u30671\u3001\u7d20\u6027\u306b\u5bfe\u5fdc\u3057\u306a\u3044\u91cd\u307f\u7528\u3002\n\n\tfor word in data.split(' '):\n\n\t\t# \u524d\u5f8c\u306e\u7a7a\u767d\u6587\u5b57\u9664\u53bb\n\t\tword = word.strip()\n\n\t\t# \u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u9664\u53bb\n\t\tif is_stopword(word):\n\t\t\tcontinue\n\n\t\t# \u30b9\u30c6\u30df\u30f3\u30b0\n\t\tword = stemmer.stemWord(word)\n\n\t\t# \u7d20\u6027\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u53d6\u5f97\u3001\u884c\u5217\u306e\u8a72\u5f53\u7b87\u6240\u30921\u306b\n\t\ttry:\n\t\t\tdata_one_x[dict_features[word]] = 1\n\t\texcept:\n\t\t\tpass\t\t# dict_features\u306b\u306a\u3044\u7d20\u6027\u306f\u7121\u8996\n\n\treturn data_one_x\n\n\ndef load_dict_features():\n\t'''features.txt\u3092\u8aad\u307f\u8fbc\u307f\u3001\u7d20\u6027\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u8f9e\u66f8\u3092\u4f5c\u6210\n\t\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5024\u306f1\u30d9\u30fc\u30b9\u3067\u3001features.txt\u306b\u304a\u3051\u308b\u884c\u756a\u53f7\u3068\u4e00\u81f4\u3059\u308b\u3002\n\n\t\u623b\u308a\u5024\uff1a\n\t\u7d20\u6027\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5909\u63db\u3059\u308b\u8f9e\u66f8\n\t'''\n\twith codecs.open(fname_features, 'r', fencoding) as file_in:\n\t\treturn {line.strip(): i for i, line in enumerate(file_in, start=1)}\n\n\ndef create_training_set(sentiments, dict_features):\n\t'''\u6b63\u89e3\u30c7\u30fc\u30bfsentiments\u304b\u3089\u5b66\u7fd2\u5bfe\u8c61\u306e\u884c\u5217\u3068\u3001\u6975\u6027\u30e9\u30d9\u30eb\u306e\u884c\u5217\u3092\u4f5c\u6210\n\t\u5b66\u7fd2\u5bfe\u8c61\u306e\u884c\u4f8b\u306e\u5927\u304d\u3055\u306f\u6b63\u89e3\u30c7\u30fc\u30bf\u306e\u30ec\u30d3\u30e5\u30fc\u6570\u00d7(\u7d20\u6027\u6570+1)\u3002\n\t\u5217\u306e\u5024\u306f\u3001\u5404\u30ec\u30d3\u30e5\u30fc\u306b\u5bfe\u3057\u3066\u8a72\u5f53\u7d20\u6027\u304c\u3042\u308b\u5834\u5408\u306f1\u3001\u306a\u3051\u308c\u30700\u306b\u306a\u308b\u3002\n\t\u5217\u306e\u7d20\u6027\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306fdict_features['(\u7d20\u6027)']\u3067\u6c7a\u307e\u308b\u3002\n\t\u5148\u982d\u306e\u5217\u306f\u5e38\u306b1\u3067\u3001\u7d20\u6027\u306b\u5bfe\u5fdc\u3057\u306a\u3044\u91cd\u307f\u306e\u5b66\u7fd2\u7528\u3002\n\tdict_features\u306b\u5b58\u5728\u3057\u306a\u3044\u7d20\u6027\u306f\u7121\u8996\u3002\n\n\t\u6975\u6027\u30e9\u30d9\u30eb\u306e\u884c\u5217\u306e\u5927\u304d\u3055\u306f\u30ec\u30d3\u30e5\u30fc\u6570\u00d71\u3002\n\t\u80af\u5b9a\u7684\u306a\u5185\u5bb9\u304c1\u3001\u5426\u5b9a\u7684\u306a\u5185\u5bb9\u304c0\u3002\n\n\t\u623b\u308a\u5024\uff1a\n\t\u5b66\u7fd2\u5bfe\u8c61\u306e\u884c\u5217,\u6975\u6027\u30e9\u30d9\u30eb\u306e\u884c\u5217\n\t'''\n\n\t# \u884c\u5217\u30920\u3067\u521d\u671f\u5316\n\tdata_x = np.zeros([len(sentiments), len(dict_features) + 1], dtype=np.float64)\n\tdata_y = np.zeros(len(sentiments), dtype=np.float64)\n\n\tfor i, line in enumerate(sentiments):\n\n\t\t# \u7d20\u6027\u62bd\u51fa\n\t\tdata_x[i] = extract_features(line[3:], dict_features)\n\n\t\t# \u6975\u6027\u30e9\u30d9\u30eb\u884c\u5217\u306e\u30bb\u30c3\u30c8\n\t\tif line[0:2] == '+1':\n\t\t\tdata_y[i] = 1\n\n\treturn data_x, data_y\n\n\ndef learn(data_x, data_y, alpha, count):\n\t'''\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u306e\u5b66\u7fd2\n\n\t\u623b\u308a\u5024\uff1a\n\t\u5b66\u7fd2\u6e08\u307f\u306etheta\n\t'''\n\ttheta = np.zeros(data_x.shape[1])\n\tc = cost(data_x, theta, data_y)\n\tprint('\\t\u5b66\u7fd2\u958b\u59cb\\tcost\uff1a{}'.format(c))\n\n\tfor i in range(1, count + 1):\n\n\t\tgrad = gradient(data_x, theta, data_y)\n\t\ttheta -= alpha * grad\n\n\t\t# \u30b3\u30b9\u30c8\u3068theta\u306e\u6700\u5927\u8abf\u6574\u91cf\u3092\u7b97\u51fa\u3057\u3066\u7d4c\u904e\u8868\u793a\uff08100\u56de\u306b1\u56de\uff09\n\t\tif i % 100 == 0:\n\t\t\tc = cost(data_x, theta, data_y)\n\t\t\te = np.max(np.absolute(alpha * grad))\n\t\t\tprint('\\t\u5b66\u7fd2\u4e2d(#{})\\tcost\uff1a{}\\tE:{}'.format(i, c, e))\n\n\tc = cost(data_x, theta, data_y)\n\te = np.max(np.absolute(alpha * grad))\n\tprint('\\t\u5b66\u7fd2\u5b8c\u4e86(#{}) \\tcost\uff1a{}\\tE:{}'.format(i, c, e))\n\treturn theta\n\n\ndef score(fname):\n\t'''\u7d50\u679c\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30b9\u30b3\u30a2\u7b97\u51fa\n\tfname\u3067\u6307\u5b9a\u3055\u308c\u305f\u7d50\u679c\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u6b63\u89e3\u7387\u3001\u9069\u5408\u7387\u3001\u518d\u73fe\u7387\u3001F1\u30b9\u30b3\u30a2\u3092\u8fd4\u3059\n\n\t\u623b\u308a\u5024\uff1a\n\t\u6b63\u89e3\u7387,\u9069\u5408\u7387,\u518d\u73fe\u7387,F1\u30b9\u30b3\u30a2\n\t'''\n\t# \u7d50\u679c\u3092\u8aad\u307f\u8fbc\u3093\u3067\u96c6\u8a08\n\tTP = 0\t\t# True-Positive\t\t\u4e88\u60f3\u304c+1\u3001\u6b63\u89e3\u3082+1\n\tFP = 0\t\t# False-Positive\t\u4e88\u60f3\u304c+1\u3001\u6b63\u89e3\u306f-1\n\tFN = 0\t\t# False-Negative\t\u4e88\u60f3\u304c-1\u3001\u6b63\u89e3\u306f+1\n\tTN = 0\t\t# True-Negative\t\t\u4e88\u60f3\u304c-1\u3001\u6b63\u89e3\u3082-1\n\n\twith open(fname) as data_file:\n\t\tfor line in data_file:\n\t\t\tcols = line.split('\\t')\n\n\t\t\tif len(cols) < 3:\n\t\t\t\tcontinue\n\n\t\t\tif cols[0] == '+1':\t\t\t# \u6b63\u89e3\n\t\t\t\tif cols[1] == '+1':\t\t# \u4e88\u60f3\n\t\t\t\t\tTP += 1\n\t\t\t\telse:\n\t\t\t\t\tFN += 1\n\t\t\telse:\n\t\t\t\tif cols[1] == '+1':\n\t\t\t\t\tFP += 1\n\t\t\t\telse:\n\t\t\t\t\tTN += 1\n\n\t# \u7b97\u51fa\n\taccuracy = (TP + TN) / (TP + FP + FN + TN)\t\t# \u6b63\u89e3\u7387\n\tprecision = TP / (TP + FP)\t\t# \u9069\u5408\u7387\n\trecall = TP / (TP + FN)\t\t# \u518d\u73fe\u7387\n\tf1 = (2 * recall * precision) / (recall + precision) \t# F1\u30b9\u30b3\u30a2\n\n\treturn accuracy, precision, recall, f1\n\n\n# \u7d20\u6027\u8f9e\u66f8\u306e\u8aad\u307f\u8fbc\u307f\ndict_features = load_dict_features()\n\n# \u6b63\u89e3\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\nwith codecs.open(fname_sentiment, 'r', fencoding) as file_in:\n\tsentiments_all = list(file_in)\n\n# \u6b63\u89e3\u30c7\u30fc\u30bf\u30925\u5206\u5272\nsentiments = []\nunit = int(len(sentiments_all) / division)\nfor i in range(5):\n\tsentiments.append(sentiments_all[i * unit:(i + 1) * unit])\n\n# 5\u5206\u5272\u4ea4\u5dee\u691c\u5b9a\nwith open(fname_result, 'w') as file_out:\n\tfor i in range(division):\n\n\t\tprint('{}/{}'.format(i + 1, division))\n\n\t\t# \u5b66\u7fd2\u7528\u3068\u691c\u8a3c\u7528\u306b\u6b63\u89e3\u30c7\u30fc\u30bf\u3092\u5206\u5272\n\t\tdata_learn = []\n\t\tfor j in range(division):\n\t\t\tif i == j:\n\t\t\t\tdata_validation = sentiments[j]\n\t\t\telse:\n\t\t\t\tdata_learn += sentiments[j]\n\n\t\t# \u5b66\u7fd2\u5bfe\u8c61\u306e\u914d\u5217\u3068\u6975\u6027\u30e9\u30d9\u30eb\u306e\u914d\u5217\u4f5c\u6210\n\t\tdata_x, data_y = create_training_set(data_learn, dict_features)\n\n\t\t# \u5b66\u7fd2\n\t\ttheta = learn(data_x, data_y, alpha=learn_alpha, count=learn_count)\n\n\t\t# \u691c\u8a3c\n\t\tfor line in data_validation:\n\n\t\t\t# \u7d20\u6027\u62bd\u51fa\n\t\t\tdata_one_x = extract_features(line[3:], dict_features)\n\n\t\t\t# \u4e88\u6e2c\u3001\u7d50\u679c\u51fa\u529b\n\t\t\th = hypothesis(data_one_x, theta)\n\t\t\tif h > 0.5:\n\t\t\t\tfile_out.write('{}\\t{}\\t{}\\n'.format(line[0:2], '+1', h))\n\t\t\telse:\n\t\t\t\tfile_out.write('{}\\t{}\\t{}\\n'.format(line[0:2], '-1', 1 - h))\n\n# \u7d50\u679c\u8868\u793a\nprint('\\n\u5b66\u7fd2\u30ec\u30fc\u30c8\uff1a{}\\t\u5b66\u7fd2\u7e70\u308a\u8fd4\u3057\u6570\uff1a{}'.format(learn_alpha, learn_count))\naccuracy, precision, recall, f1 = score(fname_result)\nprint('\u6b63\u89e3\u7387\u3000\\t{}\\n\u9069\u5408\u7387\u3000\\t{}\\n\u518d\u73fe\u7387\u3000\\t{}\\nF1\u30b9\u30b3\u30a2\u3000\\t{}'.format(\n\taccuracy, precision, recall, f1\n))\n```\n\n####\u5b9f\u884c\u7d50\u679c\uff1a\n\n```console:\u5b9f\u884c\u7d50\u679c\n1/5\n\t\u5b66\u7fd2\u958b\u59cb\tcost\uff1a0.6931471805599453\n\t\u5b66\u7fd2\u4e2d(#100)\tcost\uff1a0.46843942718055814\tE:0.006388382573910524\n\t\u5b66\u7fd2\u4e2d(#200)\tcost\uff1a0.4155300488897057\tE:0.003950176267083882\n\t\u5b66\u7fd2\u4e2d(#300)\tcost\uff1a0.3855283848183693\tE:0.002867235531957132\n\t\u5b66\u7fd2\u4e2d(#400)\tcost\uff1a0.3648933651792237\tE:0.0022495471367582247\n\t\u5b66\u7fd2\u4e2d(#500)\tcost\uff1a0.3493282931816998\tE:0.0018583498524543404\n\t\u5b66\u7fd2\u4e2d(#600)\tcost\uff1a0.3369232080431452\tE:0.0016771358183603987\n\t\u5b66\u7fd2\u4e2d(#700)\tcost\uff1a0.32666634898652896\tE:0.001528412108716516\n\t\u5b66\u7fd2\u4e2d(#800)\tcost\uff1a0.31795919554061053\tE:0.0014042508127869423\n\t\u5b66\u7fd2\u4e2d(#900)\tcost\uff1a0.31041943220497686\tE:0.0012990594970099315\n\t\u5b66\u7fd2\u4e2d(#1000)\tcost\uff1a0.30378857681325766\tE:0.0012088047599478039\n\t\u5b66\u7fd2\u5b8c\u4e86(#1000) \tcost\uff1a0.30378857681325766\tE:0.0012088047599478039\n2/5\n\t\u5b66\u7fd2\u958b\u59cb\tcost\uff1a0.6931471805599453\n\t\u5b66\u7fd2\u4e2d(#100)\tcost\uff1a0.4741687433335998\tE:0.006589814822192543\n\t\u5b66\u7fd2\u4e2d(#200)\tcost\uff1a0.42144780985764596\tE:0.003908261118677938\n\t\u5b66\u7fd2\u4e2d(#300)\tcost\uff1a0.3912183151335336\tE:0.002804459291483359\n\t\u5b66\u7fd2\u4e2d(#400)\tcost\uff1a0.370303379815077\tE:0.0023610369221010326\n\t\u5b66\u7fd2\u4e2d(#500)\tcost\uff1a0.354477846021314\tE:0.0020514997491309413\n\t\u5b66\u7fd2\u4e2d(#600)\tcost\uff1a0.3418460542105294\tE:0.0018224684562050484\n\t\u5b66\u7fd2\u4e2d(#700)\tcost\uff1a0.33139550986560584\tE:0.001645643112098399\n\t\u5b66\u7fd2\u4e2d(#800)\tcost\uff1a0.3225230456812948\tE:0.0015047097369745835\n\t\u5b66\u7fd2\u4e2d(#900)\tcost\uff1a0.31484124228803834\tE:0.0013896119787524179\n\t\u5b66\u7fd2\u4e2d(#1000)\tcost\uff1a0.3080871067835467\tE:0.0012937962132790058\n\t\u5b66\u7fd2\u5b8c\u4e86(#1000) \tcost\uff1a0.3080871067835467\tE:0.0012937962132790058\n3/5\n\t\u5b66\u7fd2\u958b\u59cb\tcost\uff1a0.6931471805599453\n\t\u5b66\u7fd2\u4e2d(#100)\tcost\uff1a0.46891949543978517\tE:0.006357216339527686\n\t\u5b66\u7fd2\u4e2d(#200)\tcost\uff1a0.41580499264287696\tE:0.003532830533162978\n\t\u5b66\u7fd2\u4e2d(#300)\tcost\uff1a0.3854553165948075\tE:0.0027301913427912735\n\t\u5b66\u7fd2\u4e2d(#400)\tcost\uff1a0.3644760512004263\tE:0.0022545615099526647\n\t\u5b66\u7fd2\u4e2d(#500)\tcost\uff1a0.3485986820681382\tE:0.001919021249806922\n\t\u5b66\u7fd2\u4e2d(#600)\tcost\uff1a0.3359163761795678\tE:0.0016705021198879075\n\t\u5b66\u7fd2\u4e2d(#700)\tcost\uff1a0.32541428766128333\tE:0.0014797071516709523\n\t\u5b66\u7fd2\u4e2d(#800)\tcost\uff1a0.31648958311645375\tE:0.0013367387334497819\n\t\u5b66\u7fd2\u4e2d(#900)\tcost\uff1a0.3087557956043563\tE:0.0012494627215075146\n\t\u5b66\u7fd2\u4e2d(#1000)\tcost\uff1a0.3019508027016161\tE:0.0011779206121903469\n\t\u5b66\u7fd2\u5b8c\u4e86(#1000) \tcost\uff1a0.3019508027016161\tE:0.0011779206121903469\n4/5\n\t\u5b66\u7fd2\u958b\u59cb\tcost\uff1a0.6931471805599453\n\t\u5b66\u7fd2\u4e2d(#100)\tcost\uff1a0.4725342546493931\tE:0.006182597071964639\n\t\u5b66\u7fd2\u4e2d(#200)\tcost\uff1a0.4194276723005623\tE:0.0034649497530972943\n\t\u5b66\u7fd2\u4e2d(#300)\tcost\uff1a0.38918298242842136\tE:0.0025501444797361994\n\t\u5b66\u7fd2\u4e2d(#400)\tcost\uff1a0.36832204557828535\tE:0.0021388621069763788\n\t\u5b66\u7fd2\u4e2d(#500)\tcost\uff1a0.3525543611131982\tE:0.001855410065711756\n\t\u5b66\u7fd2\u4e2d(#600)\tcost\uff1a0.33996964450743344\tE:0.0016480855756071824\n\t\u5b66\u7fd2\u4e2d(#700)\tcost\uff1a0.32955351095109425\tE:0.0014898405345723522\n\t\u5b66\u7fd2\u4e2d(#800)\tcost\uff1a0.32070420313966275\tE:0.001365069555771408\n\t\u5b66\u7fd2\u4e2d(#900)\tcost\uff1a0.3130363527272276\tE:0.0012842751555114352\n\t\u5b66\u7fd2\u4e2d(#1000)\tcost\uff1a0.3062888953703655\tE:0.0012201511930926112\n\t\u5b66\u7fd2\u5b8c\u4e86(#1000) \tcost\uff1a0.3062888953703655\tE:0.0012201511930926112\n5/5\n\t\u5b66\u7fd2\u958b\u59cb\tcost\uff1a0.6931471805599453\n\t\u5b66\u7fd2\u4e2d(#100)\tcost\uff1a0.47367883038307196\tE:0.006165844710913304\n\t\u5b66\u7fd2\u4e2d(#200)\tcost\uff1a0.42196370471708444\tE:0.0038294500786362744\n\t\u5b66\u7fd2\u4e2d(#300)\tcost\uff1a0.39242868456409186\tE:0.002903639748114128\n\t\u5b66\u7fd2\u4e2d(#400)\tcost\uff1a0.3720216436950633\tE:0.002348459481805761\n\t\u5b66\u7fd2\u4e2d(#500)\tcost\uff1a0.3565815749862366\tE:0.0019763223680587666\n\t\u5b66\u7fd2\u4e2d(#600)\tcost\uff1a0.34425094991837796\tE:0.001708469854933442\n\t\u5b66\u7fd2\u4e2d(#700)\tcost\uff1a0.33404185010109005\tE:0.0015059837001246833\n\t\u5b66\u7fd2\u4e2d(#800)\tcost\uff1a0.32536765342218166\tE:0.001357007404701798\n\t\u5b66\u7fd2\u4e2d(#900)\tcost\uff1a0.3178523514158344\tE:0.0012612117027114012\n\t\u5b66\u7fd2\u4e2d(#1000)\tcost\uff1a0.3112409530842421\tE:0.0011798784899874886\n\t\u5b66\u7fd2\u5b8c\u4e86(#1000) \tcost\uff1a0.3112409530842421\tE:0.0011798784899874886\n\n\u5b66\u7fd2\u30ec\u30fc\u30c8\uff1a6.0\t\u5b66\u7fd2\u7e70\u308a\u8fd4\u3057\u6570\uff1a1000\n\u6b63\u89e3\u7387\u3000\t0.7483114446529081\n\u9069\u5408\u7387\u3000\t0.749058734939759\n\u518d\u73fe\u7387\u3000\t0.7466691686995685\nF1\u30b9\u30b3\u30a2\u3000\t0.7478620430410676\n```\n\n###\u4ea4\u5dee\u691c\u5b9a\u3068\u306f\n\u5b66\u7fd2\u7d50\u679c\u306e\u7cbe\u5ea6\u3092\u691c\u8a3c\u3059\u308b\u969b\u3001\u5b66\u7fd2\u306b\u4f7f\u3063\u305f\u30c7\u30fc\u30bf\u3067\u691c\u8a3c\u3057\u3066\u3082\u3001\u672a\u77e5\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u7cbe\u5ea6\u304c\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u5b66\u7fd2\u306b\u4f7f\u3063\u305f\u30c7\u30fc\u30bf\u3067\u306e\u691c\u8a3c\u306f\u3001\u3044\u308f\u3086\u308b\u6559\u79d1\u66f8\u4e38\u6697\u8a18\u3067\u5fdc\u7528\u304c\u52b9\u304b\u306a\u3044\u3088\u3046\u306a\u5b66\u7fd2\uff08\u904e\u5b66\u7fd2\u3068\u304b\u547c\u3073\u307e\u3059\uff09\u3067\u3082\u826f\u3044\u7d50\u679c\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u5b66\u7fd2\u306b\u4f7f\u3063\u3066\u3044\u306a\u3044\u30c7\u30fc\u30bf\u3067\u691c\u8a3c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u4ea4\u5dee\u691c\u5b9a\u3068\u547c\u3073\u307e\u3059\u3002\n\n\u4ea4\u5dee\u691c\u5b9a\u306b\u306f\u4e00\u822c\u7684\u306a\u65b9\u6cd5\u304c\u3044\u304f\u3064\u304b\u3042\u308b\u3088\u3046\u3067\u3059\u3002\u4eca\u56de\u306e\u554f\u984c\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u300cK-\u5206\u5272\u4ea4\u5dee\u691c\u5b9a\u300d\u306f\u3001\u30c7\u30fc\u30bf\u3092K\u5206\u5272\u3057\u3066\u3001\u305d\u306e\u3046\u3061\u306e1\u3064\u3092\u691c\u8a3c\u7528\u3001\u6b8b\u308a\u3092\u5b66\u7fd2\u7528\u3068\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\u3053\u308c\u3092\u691c\u8a3c\u7528\u306e\u30c7\u30fc\u30bf\u3092\u5207\u308a\u66ff\u3048\u306a\u304c\u3089K\u56de\u7e70\u308a\u8fd4\u3057\u3066\u5e73\u5747\u3057\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u6280\u8853\u8a55\u8ad6\u793e\u306e\u300cgihyo.jp\u300d\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b[\u7b2c21\u56de\uff08\u6700\u7d42\u56de\uff09\u3000\u6a5f\u68b0\u5b66\u7fd2 \u306f\u3058\u3081\u3088\u3046](http://gihyo.jp/dev/serial/01/machine-learning/0021)\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u4f8b\u306eCoursera\u306e[Machine Learning](https://www.coursera.org/learn/machine-learning)\u3067\u306f\u5225\u306e\u65b9\u6cd5\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u3068\u8abf\u6574\u7528\u306e\u30c7\u30fc\u30bf\u3068\u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u306e3\u3064\u306b\u5206\u3051\u3066\u3001\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u3067\u5b66\u7fd2\u3057\u3001\u8abf\u6574\u7528\u306e\u30c7\u30fc\u30bf\u3067\u8abf\u6574\u3057\u3001\u6700\u7d42\u7684\u306b\u691c\u8a3c\u7528\u30c7\u30fc\u30bf\u3067\u7d50\u679c\u306e\u7cbe\u5ea6\u3092\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\u3053\u3061\u3089\u306b\u3064\u3044\u3066\u306fkatsu1110\u3055\u3093\u306e[Coursera Machine Learning (6): \u6a5f\u68b0\u5b66\u7fd2\u306e\u30e2\u30c7\u30eb\u8a55\u4fa1\uff08\u4ea4\u5dee\u691c\u5b9a\u3001Bias & Variance\u3001\u9069\u5408\u7387 & \u518d\u73fe\u7387\uff09](http://qiita.com/katsu1110/items/97c3f98a987ea92b2cc1)\u306e\u307e\u3068\u3081\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\n###5\u5206\u5272\u4ea4\u5dee\u691c\u5b9a\u306e\u5b9f\u88c5\n\u5358\u7d14\u306b\u30c7\u30fc\u30bf\u30925\u5206\u5272\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\u30c7\u30fc\u30bf\u306f\u5168\u90e8\u306710,662\u4ef6\u3042\u308b\u306e\u3067\u3001\u5272\u308c\u305a\u306b\u4f59\u308b2\u4ef6\u306f\u6271\u3044\u304c\u9762\u5012\u306a\u306e\u3067\u306a\u304b\u3063\u305f\u3053\u3068\u306b\u3057\u307e\u3057\u305f^^;\n\n\u306a\u304a\u3001\u95a2\u6570\u306f\u3059\u3079\u3066\u3053\u308c\u307e\u3067\u306e\u554f\u984c\u3067\u4f5c\u3063\u305f\u3082\u306e\u3067\u3059\u3002\n\u30b9\u30b3\u30a2\u306e\u7b97\u51fa\u306b\u3064\u3044\u3066\u3082[\u554f\u984c77](http://qiita.com/segavvy/items/9444aecd0345a532fc9d)\u3067\u4f5c\u3063\u305f`score()`\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u305f\u3081\u306b\u30015\u56de\u306b\u5206\u3051\u3066\u4e88\u6e2c\u3055\u305b\u305f\u7d50\u679c\u3092[\u554f\u984c76](http://qiita.com/segavvy/items/e107f764534f01c5b105)\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30671\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u8ffd\u8a18\u3057\u3066\u3044\u304d\u3001\u51fa\u6765\u3042\u304c\u3063\u305f\u5927\u304d\u306a1\u3064\u306e\u7d50\u679c\u30d5\u30a1\u30a4\u30eb\u3092`score()`\u306b\u98df\u308f\u305b\u308b\u5f62\u306b\u3057\u307e\u3057\u305f\u3002\n\n###\u7cbe\u5ea6\u306e\u6539\u5584\u306b\u3064\u3044\u3066\n\u6b8b\u5ff5\u306a\u304c\u308975%\u5f31\u307e\u3067\u4e0b\u304c\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3061\u3087\u3063\u3068\u4f4e\u3044\u611f\u3058\u304c\u3057\u307e\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u6b21\u306e\u554f\u984c\u306b\u9032\u3082\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u7cbe\u5ea6\u3092\u6539\u5584\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u7d20\u6027\u3092\u5897\u3084\u3057\u305f\u308a\u3001\u30c7\u30fc\u30bf\u3092\u5897\u3084\u3057\u305f\u308a\u3001\u6b63\u898f\u5316\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8ffd\u52a0\u3057\u305f\u308a\u3001\u4eee\u8aac\u95a2\u6570\u306e\u591a\u9805\u5f0f\u3092\u5897\u3084\u3057\u305f\u308a\u3001\u7d20\u6027\u306e\u62bd\u51fa\u65b9\u6cd5\u3092\u898b\u76f4\u3057\u305f\u308a...\u3068\u3044\u308d\u3044\u308d\u306a\u624b\u6bb5\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3060\u3001\u601d\u3044\u3064\u304d\u3067\u3044\u308d\u3044\u308d\u8a66\u3057\u3066\u3082\u6642\u9593\u3092\u6d6a\u8cbb\u3059\u308b\u3060\u3051\u3067\u3001\u7cbe\u5ea6\u306f\u306a\u304b\u306a\u304b\u6539\u5584\u3067\u304d\u306a\u3044\u305d\u3046\u3067\u3059\u3002\n\nCoursera\u306e[Machine Learning](https://www.coursera.org/learn/machine-learning)\u3067\u306f\u3001\u6539\u5584\u306e\u305f\u3081\u306b\u307e\u305a\u7cbe\u5ea6\u304c\u4f4e\u3044\u539f\u56e0\u304c\u30aa\u30fc\u30d0\u30fc\u30d5\u30a3\u30c3\u30c8\uff08\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u4f9d\u5b58\u3057\u3059\u304e\u3066\u3044\u308b\u72b6\u614b\u3001\u9ad8\u30d0\u30ea\u30a2\u30f3\u30b9\u3068\u304b\u547c\u3073\u307e\u3059\uff09\u306a\u306e\u304b\u30a2\u30f3\u30c0\u30fc\u30d5\u30a3\u30c3\u30c8\uff08\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u6d3b\u7528\u3057\u304d\u308c\u3066\u3044\u306a\u3044\u3001\u9ad8\u30d0\u30a4\u30a2\u30b9\uff09\u306a\u306e\u304b\u3092\u898b\u6975\u3081\u306a\u3055\u3044\u3068\u306e\u3053\u3068\u3067\u3057\u305f\u3002\u3053\u308c\u306f\u6b63\u898f\u5316\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u3092\u5c0e\u5165\u3059\u308b\u3068\u5224\u65ad\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u7d50\u679c\u306b\u3088\u3063\u3066\u6539\u5584\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u304c\u6c7a\u307e\u3063\u3066\u304d\u307e\u3059\u3002\u691c\u8a3c\u3084\u6539\u5584\u306b\u3064\u3044\u3066\u306f[Machine Learning](https://www.coursera.org/learn/machine-learning)\u306eWeek6\u3067\u5b66\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3000\n79\u672c\u76ee\u306e\u30ce\u30c3\u30af\u306f\u4ee5\u4e0a\u3067\u3059\u3002\u8aa4\u308a\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5e78\u3044\u3067\u3059\u3002\n<hr>\n\n*\u5b9f\u884c\u7d50\u679c\u306b\u306f\u3001[100\u672c\u30ce\u30c3\u30af\u3067\u7528\u3044\u308b\u30b3\u30fc\u30d1\u30b9\u30fb\u30c7\u30fc\u30bf](http://www.cl.ecei.tohoku.ac.jp/nlp100/#data)\u3067\u914d\u5e03\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u304c\u542b\u307e\u308c\u307e\u3059\u3002*\n", "tags": ["\u6a5f\u68b0\u5b66\u7fd2", "\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af", "Python"]}