{"tags": ["C++11", "C++11", "\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002std::conditional\u3092\u304c\u3057\u304c\u3057\u66f8\u3044\u3066\u308b\u3068\u3001\u306a\u3093\u3060\u304b\u5197\u9577\u3060\u3057\u3069\u3046\u3084\u3063\u3066\u6574\u5f62\u3057\u305f\u3089\u3044\u3044\u306e\u304b\u5206\u304b\u3089\u306a\u3044\u3067\u3059\u3002\n\nc++\ntemplate<bool condition, typename IfTrue, typename IfFalse>\nusing conditional_t = typename std::conditional<condition, IfTrue, IfFalse>::type;\n\ntemplate<typename T>\nusing bar =\n    conditional_t<cond1, type1,\n        conditional_t<cond2, type2,\n            conditional_t<cond3, type3,\n                default_type>>>;\n\n\n\u30cd\u30b9\u30c8\u304c\u3088\u304f\u5206\u304b\u308a\u307e\u305b\u3093\u3002\n\nc++\ntemplate<typename T>\nusing bar =\n    conditional_t<cond1,\n        type1,\n        conditional_t<cond2,\n            type2,\n            conditional_t<cond3,\n                type3,\n                default_type\n            >\n        >\n    >;\n\n\nif\u6587\u3063\u307d\u304f\u6574\u5f62\u3057\u3066\u307f\u3066\u3082\u30c0\u30b5\u3044\u3002\n\nc++\ntemplate<typename T>\nusing bar =\n    conditional_t<cond1, type1,\n    conditional_t<cond2, type2,\n    conditional_t<cond3, type3,\n    default_type>>>;\n\n\n\u3080\u3057\u308d\u3053\u306e\u65b9\u304c\u30de\u30b7\u306a\u3088\u3046\u306a\u6c17\u3082\u3057\u307e\u3059\u304c\u3001\u6700\u5f8c\u306e\u9023\u7d9a\u3059\u308b\u5c71\u62ec\u5f27\u306f\u3069\u3046\u306b\u304b\u306a\u3089\u306a\u3044\u3082\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u3068\u3044\u3046\u8a33\u3067\u3001\u3053\u3093\u306a\u89e3\u6c7a\u7b56\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u3002\n\nc++\ntemplate<typename ...Args>\nstruct first_enabled {};\n\ntemplate<typename T, typename ...Args>\nstruct first_enabled<std::enable_if<true, T>, Args...> { using type = T; };\ntemplate<typename T, typename ...Args>\nstruct first_enabled<std::enable_if<false, T>, Args...>: first_enabled<Args...> {};\ntemplate<typename T, typename ...Args>\nstruct first_enabled<T, Args...> { using type = T; };\n\ntemplate<typename ...Args>\nusing first_enabled_t = typename first_enabled<Args...>::type;\n\n\nstd::enable_if<T>\u3092\u4e26\u3079\u3066\u3001\u6700\u521d\u306b\u6761\u4ef6\u304c\u771f\u306b\u306a\u3063\u305f\u578b\u306b\u306a\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30a4\u30ea\u30a2\u30b9\u3002\nstd::enable_if<T>\u4ee5\u5916\u306e\u578b\u304c\u6e21\u3055\u308c\u308b\u3068\u5e38\u306b\u6761\u4ef6\u304c\u771f\u3068\u307f\u306a\u3057\u3066\u305d\u306e\u578b\u306b\u306a\u308b\u306e\u3067\u3001\u6700\u5f8c\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3002\n\u4e0a\u306e\u4f8b\u3092\u3053\u308c\u3092\u3064\u304b\u3063\u3066\u66f8\u304d\u76f4\u3059\u3068\u3001\u3053\u3046\u306a\u308b\u3002\n\nc++\ntemplate<typename T>\nusing bar = first_enabled_t<\n    std::enbale_if<cond1, type1>,\n    std::enbale_if<cond2, type2>,\n    std::enbale_if<cond3, type3>,\n    default_type\n>;\n\n\n\u5f0f\u304c\u77ed\u304f\u306a\u3063\u305f\u308a\u306f\u3057\u306a\u3044\u304c\u3001\u5206\u304b\u308a\u3084\u3059\u304f\u306f\u306a\u3063\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\n`std::conditional`\u3092\u304c\u3057\u304c\u3057\u66f8\u3044\u3066\u308b\u3068\u3001\u306a\u3093\u3060\u304b\u5197\u9577\u3060\u3057\u3069\u3046\u3084\u3063\u3066\u6574\u5f62\u3057\u305f\u3089\u3044\u3044\u306e\u304b\u5206\u304b\u3089\u306a\u3044\u3067\u3059\u3002\n\n```cpp:c++\ntemplate<bool condition, typename IfTrue, typename IfFalse>\nusing conditional_t = typename std::conditional<condition, IfTrue, IfFalse>::type;\n\ntemplate<typename T>\nusing bar =\n    conditional_t<cond1, type1,\n        conditional_t<cond2, type2,\n            conditional_t<cond3, type3,\n                default_type>>>;\n```\n\u30cd\u30b9\u30c8\u304c\u3088\u304f\u5206\u304b\u308a\u307e\u305b\u3093\u3002\n\n```cpp:c++\ntemplate<typename T>\nusing bar =\n    conditional_t<cond1,\n        type1,\n        conditional_t<cond2,\n            type2,\n            conditional_t<cond3,\n                type3,\n                default_type\n            >\n        >\n    >;\n```\nif\u6587\u3063\u307d\u304f\u6574\u5f62\u3057\u3066\u307f\u3066\u3082\u30c0\u30b5\u3044\u3002\n\n```cpp:c++\ntemplate<typename T>\nusing bar =\n    conditional_t<cond1, type1,\n    conditional_t<cond2, type2,\n    conditional_t<cond3, type3,\n    default_type>>>;\n```\n\u3080\u3057\u308d\u3053\u306e\u65b9\u304c\u30de\u30b7\u306a\u3088\u3046\u306a\u6c17\u3082\u3057\u307e\u3059\u304c\u3001\u6700\u5f8c\u306e\u9023\u7d9a\u3059\u308b\u5c71\u62ec\u5f27\u306f\u3069\u3046\u306b\u304b\u306a\u3089\u306a\u3044\u3082\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u3068\u3044\u3046\u8a33\u3067\u3001\u3053\u3093\u306a\u89e3\u6c7a\u7b56\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u3002\n\n```cpp:c++\ntemplate<typename ...Args>\nstruct first_enabled {};\n\ntemplate<typename T, typename ...Args>\nstruct first_enabled<std::enable_if<true, T>, Args...> { using type = T; };\ntemplate<typename T, typename ...Args>\nstruct first_enabled<std::enable_if<false, T>, Args...>: first_enabled<Args...> {};\ntemplate<typename T, typename ...Args>\nstruct first_enabled<T, Args...> { using type = T; };\n\ntemplate<typename ...Args>\nusing first_enabled_t = typename first_enabled<Args...>::type;\n```\n`std::enable_if<T>`\u3092\u4e26\u3079\u3066\u3001\u6700\u521d\u306b\u6761\u4ef6\u304c\u771f\u306b\u306a\u3063\u305f\u578b\u306b\u306a\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30a4\u30ea\u30a2\u30b9\u3002\n`std::enable_if<T>`\u4ee5\u5916\u306e\u578b\u304c\u6e21\u3055\u308c\u308b\u3068\u5e38\u306b\u6761\u4ef6\u304c\u771f\u3068\u307f\u306a\u3057\u3066\u305d\u306e\u578b\u306b\u306a\u308b\u306e\u3067\u3001\u6700\u5f8c\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3002\n\u4e0a\u306e\u4f8b\u3092\u3053\u308c\u3092\u3064\u304b\u3063\u3066\u66f8\u304d\u76f4\u3059\u3068\u3001\u3053\u3046\u306a\u308b\u3002\n\n```cpp:c++\ntemplate<typename T>\nusing bar = first_enabled_t<\n    std::enbale_if<cond1, type1>,\n    std::enbale_if<cond2, type2>,\n    std::enbale_if<cond3, type3>,\n    default_type\n>;\n```\n\u5f0f\u304c\u77ed\u304f\u306a\u3063\u305f\u308a\u306f\u3057\u306a\u3044\u304c\u3001\u5206\u304b\u308a\u3084\u3059\u304f\u306f\u306a\u3063\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\n\n##\n"}