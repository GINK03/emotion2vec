{"tags": ["AWS", "Scala", "Kinesis"], "context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f5c\u308a\u3001Scala\u3067\u5185\u5bb9\u3092tail\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3092\u3002\u66f8\u3044\u3066\u3044\u308b\u3068\u304a\u308a\u306b\u5b9f\u884c\u3059\u308c\u3070\u52d5\u304f\u3053\u3068\u3092\u76ee\u6a19\u306b\u3057\u3066\u307e\u3059\u3002\nKinesis\u306f\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\u5927\u898f\u6a21OK Pub/Sub\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u3068\u3044\u3046\u7406\u89e3\u3067\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u30b9\u30c8\u30ea\u30fc\u30e0\u304cPub/Sub\u30ad\u30e5\u30fc\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3001\u30ec\u30b3\u30fc\u30c9\u306f24\u6642\u9593\u4fdd\u6301\u3055\u308c\u307e\u3059\u3002\u30b7\u30e3\u30fc\u30c9\u3092\u3044\u304f\u3064\u304b\u675f\u306d\u3066\u69cb\u6210\u3055\u308c\u3066\u3044\u3066\u3001\u30b7\u30e3\u30fc\u30c9\u3092\u5897\u3084\u3059\u3053\u3068\u3067Put/Get\u306eQPS\u3092\u5897\u3084\u3059\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u306b\u3088\u308a\u3069\u306e\u30b7\u30e3\u30fc\u30c9\u306b\u5165\u308b\u304b\u6c7a\u307e\u308a\u307e\u3059\u3002\u306a\u306e\u3067\u30db\u30c3\u30c8\u30b7\u30e3\u30fc\u30c9\u304c\u8d77\u304d\u306a\u3044\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u3068\u306a\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u8ff7\u3063\u305f\u3089\u4e71\u6570\u3092\u5165\u308c\u308b\u3068\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u504f\u308a\u304c\u3067\u304d\u3066\u3001\u3042\u308b\u30b7\u30e3\u30fc\u30c9\u3060\u3051\u304c\u5fd9\u3057\u3044\u3001\u307f\u305f\u3044\u306a\u72b6\u6cc1\u306b\u306a\u308b\u3068\u30b7\u30e3\u30fc\u30c9\u3092\u5897\u3084\u3057\u3066\u3082\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\nPut\u5f8c\u306b\u30b7\u30e3\u30fc\u30c9\u632f\u308a\u5206\u3051\u308b\u4ed5\u7d44\u307f\n\u30ec\u30b3\u30fc\u30c9\u306ePut\u306f\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u5bfe\u3057\u3066\u884c\u3044\u307e\u3059\u3002Put\u3057\u305f\u3068\u304d\u3001\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u306fmd5\u3067hash\u5316\u3055\u308c10\u9032\u6570\u5316\u3055\u308c\u307e\u3059\u3002\u30b7\u30e3\u30fc\u30c9\u306f\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u306eRange\u3092\u6301\u3063\u3066\u3044\u3066\u3001Range\u304c\u306b\u3042\u3046\u30b7\u30e3\u30fc\u30c9\u306b\u30ec\u30b3\u30fc\u30c9\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\nRecord\u306f\u30c7\u30fc\u30bf + \u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u306e\u69cb\u9020\u3067\u3059\u3002\n\nGet\u3059\u308b\u3068\u304d\n\u30ec\u30b3\u30fc\u30c9\u306f\u30b7\u30e3\u30fc\u30c9\u306b\u5206\u6563\u3055\u308c\u3066\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001Get\u306f\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u306f\u306a\u304f\u30b7\u30e3\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u884c\u3044\u307e\u3059\u3002\u30b7\u30e3\u30fc\u30c9\u306b\u5165\u3063\u305f\u30ec\u30b3\u30fc\u30c9\u306f\u30b7\u30fc\u30b1\u30f3\u30b9\u756a\u53f7\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u756a\u53f7\u306b\u3088\u308a\u3001\u4f55\u51e6\u307e\u3067\u30ec\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u8fbc\u3093\u3060\u304b\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002\nKinesis\u306fPull\u578b\u306ePub/Sub\u3067\u3059\u3002Google Pub/Sub\u306f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u7528\u610f\u3059\u308c\u3070\u305d\u3053\u306bPush\u3059\u308b\u4ed5\u7d44\u307f\u3092\u53d6\u308c\u308b\u3089\u3057\u3044\u3067\u3059\u3002\n\nKCL\u304c\u3084\u3063\u3066\u304f\u308c\u308b\u3053\u3068\n\u4f55\u51e6\u307e\u3067\u30ec\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u8fbc\u3093\u3060\u306e\u304b\u3001\u8907\u6570\u30b5\u30fc\u30d0\u30fc\u3067\u51e6\u7406\u3059\u308b\u3068\u304d\u3068\u304b\u30fb\u30fb\u3001\u30b7\u30e3\u30fc\u30c9\u3092\u5897\u3084\u3057\u305f\u3068\u304d\u3068\u304b\u30fb\u30fb\u3001\u30dd\u30fc\u30ea\u30f3\u30b0\u3057\u306a\u304d\u3083\uff1f\u30fb\u30fb\u30fb\u306a\u3093\u304b\u5b9f\u88c5\u3081\u3093\u3069\u304f\u3055\u305d\u3046\u3067\u3059\u30fb\u30fb\u30fb\u304c\u3001\u3053\u306e\u8fba\u306fKinesis Clinet Library\u304c\u5168\u90e8\u3084\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u51e6\u7406\n\n\n\u4f55\u51e6\u307e\u3067\u51e6\u7406\u3057\u305f\u304b\u3092DynamoDB\u306e\u4fdd\u5b58\u3059\u308b\n\n\n\u30ef\u30fc\u30ab\u30fc\u306e\u7ba1\u7406\n\n\n\u305d\u306e\u30b7\u30e3\u30fc\u30c9\u306f\u3069\u306e\u30ef\u30fc\u30ab\u30fc\u304c\u62c5\u5f53\u3057\u3066\u3044\u308b\u306e\u304b\n\u30ef\u30fc\u30ab\u30fc\u304c\u6b7b\u3093\u3067\u3044\u305f\u3089\u958b\u3044\u3066\u308b\u30ef\u30fc\u30ab\u30fc\u306b\u30b9\u30a4\u30c3\u30c1\n\n\n\n\uff08\u3042\u308c\u3001\u610f\u5916\u3068\u9577\u304f\u306a\u3063\u3066\u304d\u305f\u3002\uff09\u8a73\u3057\u3044\u3053\u3068\u306fAmazon\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u65e5\u672c\u8a9e\u3067\u306e\u3063\u3066\u3044\u307e\u3059\u3002\n\u306a\u306e\u3067\u6211\u3005\u306f\u300c\u30ec\u30b3\u30fc\u30c9\u3092\u3069\u3046\u51e6\u7406\u3059\u308b\u304b\u300d\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306fIRecordProcessor\u3092\u7d99\u627f\u3057\u305fRecordProcessor\u3092\u4f5c\u308a\u307e\u3059\u3002\n\nKCL\u3092\u52d5\u304b\u3059\n\n\u307e\u305a\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f5c\u308b\n# stream\u540d\u3092\u304d\u3081\u3066\u304a\u304f\nstream_name=\"kinesis-test-stream\"\n\n# stream\u3092\u4f5c\u6210\u3059\u308b\naws kinesis create-stream --stream-name $stream_name --shard-count 1\n\n# StreamStatus\u304cCREATING\u304b\u3089ACTIVE\u306b\u306a\u308b\u306e\u3092\u78ba\u8a8d\u3059\u308b\u3002\naws kinesis describe-stream --stream-name $stream_name\n\n\nscala\u306e\u74b0\u5883\u3092\u4f5c\u308a\u307e\u3059\n\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u4f5c\u3089\u308c\u308b\u306e\u3092\u5f85\u3063\u3066\u3044\u308b\u9593\u306bScala\u3067Kinesis Consumer\u306e\u6e96\u5099\u3092\u3057\u307e\u3059\u3002\n1.\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\nmkdir kinesis-consumer\ncd kinesis-consumer\nvim build.sbt\n\n2.build.sbt\u4f5c\u6210\n\nbuild.sbt\nname := \"kinesis-client-library-start\"\n\nversion := \"1.0\"\n\nscalaVersion := \"2.11.7\"\n\nlibraryDependencies ++= Seq(\n  \"com.amazonaws\" % \"amazon-kinesis-client\" % \"1.6.1\"\n)\n\n\n3.scala\nsrc/main/scala/Main.scala\nimport java.net.InetAddress\nimport java.util\nimport java.util.UUID\nimport com.amazonaws.internal.StaticCredentialsProvider\nimport com.amazonaws.auth.{BasicAWSCredentials, AWSCredentialsProvider}\nimport com.amazonaws.services.kinesis.clientlibrary.interfaces.{IRecordProcessorCheckpointer, IRecordProcessor, IRecordProcessorFactory}\nimport com.amazonaws.services.kinesis.clientlibrary.lib.worker.InitialPositionInStream\nimport com.amazonaws.services.kinesis.clientlibrary.lib.worker.{Worker, KinesisClientLibConfiguration}\nimport com.amazonaws.services.kinesis.clientlibrary.types.{UserRecord, ShutdownReason}\nimport com.amazonaws.services.kinesis.model.Record\n\nobject Main {\n  val accessKeyId = System.getProperty(\"accessKeyId\")\n  val secretAccessKey = System.getProperty(\"secretAccessKey\")\n\n  val appName = \"kinesis-test-app\"\n  val streamName = \"kinesis-test-stream\"\n\n  val initialPosition = \"LATEST\"\n  val region = \"ap-northeast-1\"\n  val idleTimeBetweenReadsInMillis = 3000\n\n  def main(args: Array[String]): Unit = {\n    val workerId = InetAddress.getLocalHost.getCanonicalHostName + \":\" + UUID.randomUUID\n    val credentialsProvider: AWSCredentialsProvider = new StaticCredentialsProvider(new BasicAWSCredentials(accessKeyId, secretAccessKey))\n\n    val kclConf = new KinesisClientLibConfiguration(appName, streamName, credentialsProvider, workerId)\n      .withInitialPositionInStream(InitialPositionInStream.valueOf(initialPosition))\n      .withRegionName(region)\n      .withIdleTimeBetweenReadsInMillis(idleTimeBetweenReadsInMillis)\n\n    val worker = new Worker(StreamTailProcessor.processorFactory, kclConf)\n    println(s\"worker start. name:$appName stream:$streamName workerId:$workerId\")\n    worker.run()\n\n  }\n}\n\nclass StreamTailProcessor extends IRecordProcessor{\n  override def shutdown(checkpointer: IRecordProcessorCheckpointer, reason: ShutdownReason): Unit = {\n    println(s\"Shutting down record processor\")\n  }\n\n  override def initialize(shardId: String): Unit = {\n    println(s\"Initialising record processor for shard: $shardId\")\n  }\n\n  override def processRecords(records: util.List[Record], checkpointer: IRecordProcessorCheckpointer): Unit = {\n    import scala.collection.JavaConversions._\n    records foreach { r =>\n      val line = new String(r.getData.array)\n      println(s\"[stream-tail] $line\")\n    }\n  }\n}\n\nobject StreamTailProcessor {\n  def processorFactory = new IRecordProcessorFactory {\n    def createProcessor(): IRecordProcessor = new StreamTailProcessor\n  }\n}\n\n\n\u5b9f\u884c\u3057\u307e\u3059\n\u30b9\u30c8\u30ea\u30fc\u30e0\u304cACTIVE\u306b\u306a\u3063\u305f\u3089\u3001scala\u306ekinesis consumer\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n1.\u5b9f\u884c\u3057\u307e\u3059\nsbt run -DaccessKeyId=XXX -DsecretAccessKey=XXX\n\n2.\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u30c7\u30fc\u30bf\u3092\u6295\u5165\u3057\u307e\u3059\naws kinesis put-record --stream-name $stream_name --data hogehoge_$RANDOM --partition-key $RANDOM\n\n3.\u6b63\u5ea7\u5f85\u6a5f\nkinesis\u306einfo\u30ed\u30b0\u3068\u5171\u306b\u4ee5\u4e0b\u306e\u69d8\u306a\u6a19\u6e96\u51fa\u529b\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\n[stream-tail] hogehoge_18591\n\n4.\u30af\u30ed\u30fc\u30b8\u30f3\u30b0\n\u6e80\u8db3\u3057\u305f\u3089\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u524a\u9664\u3057\u307e\u3059\u3002\u653e\u7f6e\u3059\u308b\u3068\u8ab2\u91d1\u3055\u308c\u307e\u3059\u3002\naws kinesis delete-stream --stream-name $stream_name\n\n\n\u7d42\u308f\u308a\nKinesis\u306b\u30c7\u30fc\u30bf\u3092\u5165\u308c\u3066\uff08Producer\uff09\u3001\u51e6\u7406\u3059\u308b\uff08Consumer\uff09\u3068\u3053\u308d\u307e\u3067\u4f53\u9a13\u3067\u304d\u307e\u3057\u305f\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u304a\u3044\u3066\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/oshiro-kazuma/kinesis-client-library-start\n\n## \u6982\u8981\n\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f5c\u308a\u3001Scala\u3067\u5185\u5bb9\u3092tail\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3092\u3002\u66f8\u3044\u3066\u3044\u308b\u3068\u304a\u308a\u306b\u5b9f\u884c\u3059\u308c\u3070\u52d5\u304f\u3053\u3068\u3092\u76ee\u6a19\u306b\u3057\u3066\u307e\u3059\u3002\n\nKinesis\u306f\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\u5927\u898f\u6a21OK Pub/Sub\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u3068\u3044\u3046\u7406\u89e3\u3067\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30b9\u30c8\u30ea\u30fc\u30e0\u304cPub/Sub\u30ad\u30e5\u30fc\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3001\u30ec\u30b3\u30fc\u30c9\u306f24\u6642\u9593\u4fdd\u6301\u3055\u308c\u307e\u3059\u3002\u30b7\u30e3\u30fc\u30c9\u3092\u3044\u304f\u3064\u304b\u675f\u306d\u3066\u69cb\u6210\u3055\u308c\u3066\u3044\u3066\u3001\u30b7\u30e3\u30fc\u30c9\u3092\u5897\u3084\u3059\u3053\u3068\u3067Put/Get\u306eQPS\u3092\u5897\u3084\u3059\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u306b\u3088\u308a\u3069\u306e\u30b7\u30e3\u30fc\u30c9\u306b\u5165\u308b\u304b\u6c7a\u307e\u308a\u307e\u3059\u3002\u306a\u306e\u3067\u30db\u30c3\u30c8\u30b7\u30e3\u30fc\u30c9\u304c\u8d77\u304d\u306a\u3044\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u3068\u306a\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u8ff7\u3063\u305f\u3089\u4e71\u6570\u3092\u5165\u308c\u308b\u3068\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u504f\u308a\u304c\u3067\u304d\u3066\u3001\u3042\u308b\u30b7\u30e3\u30fc\u30c9\u3060\u3051\u304c\u5fd9\u3057\u3044\u3001\u307f\u305f\u3044\u306a\u72b6\u6cc1\u306b\u306a\u308b\u3068\u30b7\u30e3\u30fc\u30c9\u3092\u5897\u3084\u3057\u3066\u3082\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n### Put\u5f8c\u306b\u30b7\u30e3\u30fc\u30c9\u632f\u308a\u5206\u3051\u308b\u4ed5\u7d44\u307f\n\n\u30ec\u30b3\u30fc\u30c9\u306ePut\u306f\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u5bfe\u3057\u3066\u884c\u3044\u307e\u3059\u3002Put\u3057\u305f\u3068\u304d\u3001\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u306fmd5\u3067hash\u5316\u3055\u308c10\u9032\u6570\u5316\u3055\u308c\u307e\u3059\u3002\u30b7\u30e3\u30fc\u30c9\u306f\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u306eRange\u3092\u6301\u3063\u3066\u3044\u3066\u3001Range\u304c\u306b\u3042\u3046\u30b7\u30e3\u30fc\u30c9\u306b\u30ec\u30b3\u30fc\u30c9\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\n\nRecord\u306f`\u30c7\u30fc\u30bf + \u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc`\u306e\u69cb\u9020\u3067\u3059\u3002\n\n### Get\u3059\u308b\u3068\u304d\n\n\u30ec\u30b3\u30fc\u30c9\u306f\u30b7\u30e3\u30fc\u30c9\u306b\u5206\u6563\u3055\u308c\u3066\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001Get\u306f\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u306f\u306a\u304f\u30b7\u30e3\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u884c\u3044\u307e\u3059\u3002\u30b7\u30e3\u30fc\u30c9\u306b\u5165\u3063\u305f\u30ec\u30b3\u30fc\u30c9\u306f\u30b7\u30fc\u30b1\u30f3\u30b9\u756a\u53f7\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u756a\u53f7\u306b\u3088\u308a\u3001\u4f55\u51e6\u307e\u3067\u30ec\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u8fbc\u3093\u3060\u304b\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002\n\nKinesis\u306fPull\u578b\u306ePub/Sub\u3067\u3059\u3002Google Pub/Sub\u306f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u7528\u610f\u3059\u308c\u3070\u305d\u3053\u306bPush\u3059\u308b\u4ed5\u7d44\u307f\u3092\u53d6\u308c\u308b\u3089\u3057\u3044\u3067\u3059\u3002\n\n## KCL\u304c\u3084\u3063\u3066\u304f\u308c\u308b\u3053\u3068\n\n\u4f55\u51e6\u307e\u3067\u30ec\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u8fbc\u3093\u3060\u306e\u304b\u3001\u8907\u6570\u30b5\u30fc\u30d0\u30fc\u3067\u51e6\u7406\u3059\u308b\u3068\u304d\u3068\u304b\u30fb\u30fb\u3001\u30b7\u30e3\u30fc\u30c9\u3092\u5897\u3084\u3057\u305f\u3068\u304d\u3068\u304b\u30fb\u30fb\u3001\u30dd\u30fc\u30ea\u30f3\u30b0\u3057\u306a\u304d\u3083\uff1f\u30fb\u30fb\u30fb\u306a\u3093\u304b\u5b9f\u88c5\u3081\u3093\u3069\u304f\u3055\u305d\u3046\u3067\u3059\u30fb\u30fb\u30fb\u304c\u3001\u3053\u306e\u8fba\u306fKinesis Clinet Library\u304c\u5168\u90e8\u3084\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n- \u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u51e6\u7406\n\t- \u4f55\u51e6\u307e\u3067\u51e6\u7406\u3057\u305f\u304b\u3092DynamoDB\u306e\u4fdd\u5b58\u3059\u308b\n- \u30ef\u30fc\u30ab\u30fc\u306e\u7ba1\u7406\n\t- \u305d\u306e\u30b7\u30e3\u30fc\u30c9\u306f\u3069\u306e\u30ef\u30fc\u30ab\u30fc\u304c\u62c5\u5f53\u3057\u3066\u3044\u308b\u306e\u304b\n\t- \u30ef\u30fc\u30ab\u30fc\u304c\u6b7b\u3093\u3067\u3044\u305f\u3089\u958b\u3044\u3066\u308b\u30ef\u30fc\u30ab\u30fc\u306b\u30b9\u30a4\u30c3\u30c1\n\n\uff08\u3042\u308c\u3001\u610f\u5916\u3068\u9577\u304f\u306a\u3063\u3066\u304d\u305f\u3002\uff09\u8a73\u3057\u3044\u3053\u3068\u306fAmazon\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u65e5\u672c\u8a9e\u3067\u306e\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u306a\u306e\u3067\u6211\u3005\u306f\u300c\u30ec\u30b3\u30fc\u30c9\u3092\u3069\u3046\u51e6\u7406\u3059\u308b\u304b\u300d\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306fIRecordProcessor\u3092\u7d99\u627f\u3057\u305fRecordProcessor\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n## KCL\u3092\u52d5\u304b\u3059\n\n### \u307e\u305a\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f5c\u308b\n\n```bash\n# stream\u540d\u3092\u304d\u3081\u3066\u304a\u304f\nstream_name=\"kinesis-test-stream\"\n\n# stream\u3092\u4f5c\u6210\u3059\u308b\naws kinesis create-stream --stream-name $stream_name --shard-count 1\n\n# StreamStatus\u304cCREATING\u304b\u3089ACTIVE\u306b\u306a\u308b\u306e\u3092\u78ba\u8a8d\u3059\u308b\u3002\naws kinesis describe-stream --stream-name $stream_name\n```\n\n### scala\u306e\u74b0\u5883\u3092\u4f5c\u308a\u307e\u3059\n\n\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u4f5c\u3089\u308c\u308b\u306e\u3092\u5f85\u3063\u3066\u3044\u308b\u9593\u306bScala\u3067Kinesis Consumer\u306e\u6e96\u5099\u3092\u3057\u307e\u3059\u3002\n\n1.\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\n\n```bash\nmkdir kinesis-consumer\ncd kinesis-consumer\nvim build.sbt\n```\n\n2.build.sbt\u4f5c\u6210\n\n```scala:build.sbt\nname := \"kinesis-client-library-start\"\n\nversion := \"1.0\"\n\nscalaVersion := \"2.11.7\"\n\nlibraryDependencies ++= Seq(\n  \"com.amazonaws\" % \"amazon-kinesis-client\" % \"1.6.1\"\n)\n``` \n\n3.scala\nsrc/main/scala/Main.scala\n\n```scala\nimport java.net.InetAddress\nimport java.util\nimport java.util.UUID\nimport com.amazonaws.internal.StaticCredentialsProvider\nimport com.amazonaws.auth.{BasicAWSCredentials, AWSCredentialsProvider}\nimport com.amazonaws.services.kinesis.clientlibrary.interfaces.{IRecordProcessorCheckpointer, IRecordProcessor, IRecordProcessorFactory}\nimport com.amazonaws.services.kinesis.clientlibrary.lib.worker.InitialPositionInStream\nimport com.amazonaws.services.kinesis.clientlibrary.lib.worker.{Worker, KinesisClientLibConfiguration}\nimport com.amazonaws.services.kinesis.clientlibrary.types.{UserRecord, ShutdownReason}\nimport com.amazonaws.services.kinesis.model.Record\n\nobject Main {\n  val accessKeyId = System.getProperty(\"accessKeyId\")\n  val secretAccessKey = System.getProperty(\"secretAccessKey\")\n\n  val appName = \"kinesis-test-app\"\n  val streamName = \"kinesis-test-stream\"\n\n  val initialPosition = \"LATEST\"\n  val region = \"ap-northeast-1\"\n  val idleTimeBetweenReadsInMillis = 3000\n\n  def main(args: Array[String]): Unit = {\n    val workerId = InetAddress.getLocalHost.getCanonicalHostName + \":\" + UUID.randomUUID\n    val credentialsProvider: AWSCredentialsProvider = new StaticCredentialsProvider(new BasicAWSCredentials(accessKeyId, secretAccessKey))\n\n    val kclConf = new KinesisClientLibConfiguration(appName, streamName, credentialsProvider, workerId)\n      .withInitialPositionInStream(InitialPositionInStream.valueOf(initialPosition))\n      .withRegionName(region)\n      .withIdleTimeBetweenReadsInMillis(idleTimeBetweenReadsInMillis)\n\n    val worker = new Worker(StreamTailProcessor.processorFactory, kclConf)\n    println(s\"worker start. name:$appName stream:$streamName workerId:$workerId\")\n    worker.run()\n\n  }\n}\n\nclass StreamTailProcessor extends IRecordProcessor{\n  override def shutdown(checkpointer: IRecordProcessorCheckpointer, reason: ShutdownReason): Unit = {\n    println(s\"Shutting down record processor\")\n  }\n\n  override def initialize(shardId: String): Unit = {\n    println(s\"Initialising record processor for shard: $shardId\")\n  }\n\n  override def processRecords(records: util.List[Record], checkpointer: IRecordProcessorCheckpointer): Unit = {\n    import scala.collection.JavaConversions._\n    records foreach { r =>\n      val line = new String(r.getData.array)\n      println(s\"[stream-tail] $line\")\n    }\n  }\n}\n\nobject StreamTailProcessor {\n  def processorFactory = new IRecordProcessorFactory {\n    def createProcessor(): IRecordProcessor = new StreamTailProcessor\n  }\n}\n```\n\n### \u5b9f\u884c\u3057\u307e\u3059\n\n\u30b9\u30c8\u30ea\u30fc\u30e0\u304cACTIVE\u306b\u306a\u3063\u305f\u3089\u3001scala\u306ekinesis consumer\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n1.\u5b9f\u884c\u3057\u307e\u3059\n\n```bash\nsbt run -DaccessKeyId=XXX -DsecretAccessKey=XXX\n```\n\n2.\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u30c7\u30fc\u30bf\u3092\u6295\u5165\u3057\u307e\u3059\n\n```bash\naws kinesis put-record --stream-name $stream_name --data hogehoge_$RANDOM --partition-key $RANDOM\n```\n\n3.\u6b63\u5ea7\u5f85\u6a5f\n\nkinesis\u306einfo\u30ed\u30b0\u3068\u5171\u306b\u4ee5\u4e0b\u306e\u69d8\u306a\u6a19\u6e96\u51fa\u529b\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\n\n```\n[stream-tail] hogehoge_18591\n```\n\n4.\u30af\u30ed\u30fc\u30b8\u30f3\u30b0\n\n\u6e80\u8db3\u3057\u305f\u3089\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u524a\u9664\u3057\u307e\u3059\u3002\u653e\u7f6e\u3059\u308b\u3068\u8ab2\u91d1\u3055\u308c\u307e\u3059\u3002\n\n```bash\naws kinesis delete-stream --stream-name $stream_name\n```\n\n## \u7d42\u308f\u308a\n\nKinesis\u306b\u30c7\u30fc\u30bf\u3092\u5165\u308c\u3066\uff08Producer\uff09\u3001\u51e6\u7406\u3059\u308b\uff08Consumer\uff09\u3068\u3053\u308d\u307e\u3067\u4f53\u9a13\u3067\u304d\u307e\u3057\u305f\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u304a\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\nhttps://github.com/oshiro-kazuma/kinesis-client-library-start\n"}