{"context": "Arduino\u306f\u4fbf\u5229\u3067\u3001PC\u3068\u63a5\u7d9a\u3059\u308c\u3070\u69d8\u3005\u306a\u30bb\u30f3\u30b5\u30fc\u304b\u3089\u60c5\u5831\u3092\u53d6\u3063\u3066\u304d\u305f\u308a\u3001\u5236\u5fa1\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u3053\u306e\u3064\u306a\u3050\u554f\u90e8\u5206\u304c\u30cd\u30c3\u30af\u306b\u306a\u308a\u3001\u5b9f\u73fe\u3057\u3048\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u4f8b\u3048\u3070\u3001\u8108\u62cd\u306e\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30ba\u3002\u8108\u62cd\u30bb\u30f3\u30b5\u30fc\u306f\u6570\u7a2e\u985eArduino\u306b\u3042\u308b\u306e\u3067\u3001\u307b\u3069\u307b\u3069\u63a5\u7d9a\u3057\u3066\u3057\u307e\u3048\u3070\u4f55\u3068\u304b\u306a\u308a\u307e\u3059\u3002\u3067\u3082\u3001\u5bfe\u8c61\u8005\u304c\u52d5\u304f\u5834\u5408\u3001\u914d\u7dda\u3067\u3064\u306a\u304e\u7559\u3081\u3066\u304a\u304f\u308f\u3051\u306b\u306f\u3044\u304d\u307e\u305b\u3093\u3002\n\u7121\u7dda\u3067\u60c5\u5831\u3092\u9001\u3063\u3066\u304f\u308c\u308b\u300cArduino\u3063\u307d\u3044\u3082\u306e\u300d\u304c\u3042\u308c\u3070\u2026\n\u305d\u3093\u306a\u3042\u306a\u305f\u306b\u305c\u3072\u7d39\u4ecb\u3057\u305f\u3044\uff01\u305d\u3093\u306a\u30dc\u30fc\u30c9\u304c\u304c\u3042\u308b\u3093\u3067\u3059\uff01\n\nESP-WROOM-02\u958b\u767a\u30dc\u30fc\u30c9(ESPr Developer)\n\n\u51fa\u5c55\uff1a\u30b9\u30a4\u30c3\u30c1\u30b5\u30a4\u30a8\u30f3\u30b9\n\u304a\u5024\u6bb5\u306a\u3093\u30682,580\u5186\uff01\n\u304a\u624b\u9803\uff01\n\u3055\u3066\u3001\u3069\u306e\u3088\u3046\u306b\u7121\u7dda\u3067\u63a5\u7d9a\u3059\u304b\u3068\u3044\u3046\u3068\u3001\u3053\u3046\u3044\u3046\u611f\u3058\u3067\u3059\u3002\n\nSoftAP\u30e2\u30fc\u30c9\u3067\u306fESP-WROOM-02\u81ea\u4f53\u304c\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u8fbc\u3093\u3060ESP-WROOM-02\u3092\u30e2\u30d0\u30a4\u30eb\u30d0\u30c3\u30c6\u30ea\u30fc\u306b\u63a5\u7d9a\u3057\u305f\u77ac\u9593\u3001Wifi\u304c\u98db\u3073\u307e\u3059\u3002\nPC\u5074\u3067\u306f\u3001\u3053\u306e\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306b\u63a5\u7d9a\u3059\u308b\u3060\u3051\u3067OK\u3067\u3059\u3002\nStationMode\u306f\u3001\u4ed6\u306eWifi\u3092\u7d4c\u7531\u3057\u3066\u63a5\u7d9a\u3057\u307e\u3059\u3002\u3053\u3063\u3061\u306e\u307b\u3046\u304c\u30a4\u30e1\u30fc\u30b8\u3057\u3084\u3059\u3044\u3067\u3059\u304b\u306d\u3002\n\u898b\u3066\u308f\u304b\u308b\u901a\u308a\u3001\u30b8\u30e3\u30f3\u30d1\u30ef\u30a4\u30e4\u30fc\u3092\u5dee\u3057\u8fbc\u3080\u7a74\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u3042\u305f\u308a\u3082Arudino\u3068\u540c\u3058\u306a\u306e\u3067\u3001\u89aa\u3057\u307f\u3084\u3059\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\u5927\u304d\u3055\u306f\u3053\u3061\u3089\u306e\u753b\u50cf\u3092\u898b\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u308f\u304b\u308b\u901a\u308a\u3001\u5c0f\u3055\u3044\u3067\u3059\u3002\n(\u91cd\u306a\u3063\u3066\u3044\u308b\u767d\u3044\u7bb1\u306e\u3088\u3046\u306a\u3082\u306e\u306f\u3001\u30bb\u30f3\u30b5\u30fc\u5074\u306e\u88c5\u7f6e\u3067\u3059\u3002)\n\n\u30e2\u30d0\u30a4\u30eb\u30d0\u30c3\u30c6\u30ea\u30fc\u304b\u3089\u306e\u7d66\u96fb\u3067\u3082\u52d5\u304d\u307e\u3057\u305f\u3002\n\n\u5b9f\u7528\u4f8b\n\u30e2\u30d0\u30a4\u30eb\u30d0\u30c3\u30c6\u30ea\u30fc\u304b\u3089\u306e\u7d66\u96fb\u3067ESP-WROOM-02\u3092\u99c6\u52d5(\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u30e2\u30fc\u30c9)\u3002\u8108\u62cd\u30bb\u30f3\u30b5\u30fc\u304b\u3089\u306e\u60c5\u5831\u3092TOUT\u304b\u3089\u8aad\u307f\u8fbc\u307f\u3001UDP\u3067\u98db\u3070\u3057\u3066\u3044\u307e\u3059\u3002\n\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30ba\u306f\u304a\u306a\u3058\u307f\u306evvvv\u3067\u3059\u3002\n\n\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u3061\u3089\u306e\u60c5\u5831\u306b\u6cbf\u3063\u3066\u884c\u3044\u307e\u3057\u305f\u3002\nESP8266\u3092\u4f7f\u3063\u3066Arduino\u304b\u3089\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u63a5\u7d9a\u3057\u3066\u307f\u308b\nESP8266\u306bArduino\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u3093\u3067UDP\u30c7\u30fc\u30bf\u9001\u53d7\u4fe1\n(\u7b46\u8005\u306e\u30a4\u30b7\u30a4\u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002)\n\u30a2\u30ca\u30ed\u30b0\u306e\u30bb\u30f3\u30b5\u30fc\u5024\u3092\u3001TOPUT\u30d4\u30f3\u304b\u3089\u53d6\u3063\u3066\u304f\u308b\u306b\u306f\u3084\u3084\u30b3\u30c4\u304c\u3042\u3063\u3066\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002http://qiita.com/azusa9/items/26e74e4e0d5773ce9c41\n\u307e\u305f\u3001\u30d5\u30a1\u30fc\u30e0\u30a6\u30a8\u30a2\u66f4\u65b0\u3092\u624b\u63a2\u308a\u3067\u3084\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30e1\u30e2\u30ea\u306e\u756a\u5730\u6307\u5b9a\u3068\u304b\u3042\u3063\u3066\u3001\u308f\u3051\u3082\u308f\u304b\u3089\u305a\u3084\u3063\u305f\u3089\u8d77\u52d5\u3059\u3089\u3057\u306a\u304f\u306a\u3063\u3066\u8a70\u307f\u304b\u3051\u307e\u3057\u305f\u3002\u305d\u3093\u306a\u3068\u304d\u3001\u3053\u3061\u3089\u306e\u30b5\u30a4\u30c8\u306b\u6551\u308f\u308c\u307e\u3057\u305f\u306e\u3067\u3001\u3082\u3057\u540c\u69d8\u306e\u3053\u3068\u3067\u56f0\u3063\u305f\u3089\u898b\u3066\u307f\u308b\u3068\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nhttp://nemuisan.blog.bai.ne.jp/?eid=215341\n\u6700\u7d42\u7684\u306b\u79c1\u304c\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3002\n\nESP\n#include <ESP8266WiFi.h>\n#include <WiFiUDP.h>\nextern \"C\" {\n#include \"user_interface.h\"\n}\n\n//Access Point Setting\nconst char *APSSID = \"ESP_WROOM_02\";\nconst char *APPASS = \"hoge4009\";\nunsigned int localPort = 8888;\n\nWiFiUDP UDP;\nchar packetBuffer[255];\n\nstatic const char *udpReturnAddr = \"192.168.4.2\";\nstatic const int udpReturnPort = 8889;\n\nvoid setup() {\n\n  Serial.begin(115200);\n  Serial.println();\n\n  WiFi.softAP(APSSID, APPASS);\n\n  IPAddress myIP = WiFi.softAPIP();\n  Serial.print(\"AP IP address: \");\n  Serial.println(myIP);\n  UDP.begin(localPort);\n\n}\n\nvoid loop() {\n\n  int packetSize = UDP.parsePacket();\n\n if (packetSize) {\n\n    int len = UDP.read(packetBuffer, packetSize);\n    //\u7d42\u7aef\u6587\u5b57\u8a2d\u5b9a\n    if (len > 0) packetBuffer[len] = '\\0';\n\n\n\n  uint ADC_Value = 0;\n  ADC_Value = system_adc_read();\n  Serial.println(\"=======ANALOG \" + String(ADC_Value) + \"ANALOG \");\n\n\nString str = String(ADC_Value) ;\nint a = str.length();\n char msg[a+1];\n  str.toCharArray(msg, a+1);\n\n\n    UDP.beginPacket(udpReturnAddr, udpReturnPort);\n    UDP.write(msg,a+1);\n    UDP.endPacket();  \n\n} \n\n}\n\n\n\u203b\u8a18\u61b6\u304c\u6b63\u3057\u3051\u308c\u3070\u3001PC\u5074\u304b\u3089\u30dd\u30fc\u30c88888\u3078UDP\u3067\u300c\uff11\u300d\u3092\u98db\u3070\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3068\u3044\u3046\u306e\u306f\u3001\u3053\u306e\u51e6\u7406\u3092\u5165\u308c\u305a\u306b\u3001\u96fb\u6e90\u5165\u308c\u305f\u3089\u3059\u3050UDP\u8d70\u3089\u305b\u3066\u306d\u3063\u3066\u3084\u308b\u3068\u3001\u30dc\u30fc\u30c9\u81ea\u4f53\u304c\u3046\u307e\u304f\u52d5\u304b\u306a\u3044\u304b\u3089\u3067\u3059\u3002\n\u3088\u304dvvvvLife\u3092\uff01\nArduino\u306f\u4fbf\u5229\u3067\u3001PC\u3068\u63a5\u7d9a\u3059\u308c\u3070\u69d8\u3005\u306a\u30bb\u30f3\u30b5\u30fc\u304b\u3089\u60c5\u5831\u3092\u53d6\u3063\u3066\u304d\u305f\u308a\u3001\u5236\u5fa1\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3001\u3053\u306e\u3064\u306a\u3050\u554f\u90e8\u5206\u304c\u30cd\u30c3\u30af\u306b\u306a\u308a\u3001\u5b9f\u73fe\u3057\u3048\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u4f8b\u3048\u3070\u3001\u8108\u62cd\u306e\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30ba\u3002\u8108\u62cd\u30bb\u30f3\u30b5\u30fc\u306f\u6570\u7a2e\u985eArduino\u306b\u3042\u308b\u306e\u3067\u3001\u307b\u3069\u307b\u3069\u63a5\u7d9a\u3057\u3066\u3057\u307e\u3048\u3070\u4f55\u3068\u304b\u306a\u308a\u307e\u3059\u3002\u3067\u3082\u3001\u5bfe\u8c61\u8005\u304c\u52d5\u304f\u5834\u5408\u3001\u914d\u7dda\u3067\u3064\u306a\u304e\u7559\u3081\u3066\u304a\u304f\u308f\u3051\u306b\u306f\u3044\u304d\u307e\u305b\u3093\u3002\n\n\u7121\u7dda\u3067\u60c5\u5831\u3092\u9001\u3063\u3066\u304f\u308c\u308b\u300cArduino\u3063\u307d\u3044\u3082\u306e\u300d\u304c\u3042\u308c\u3070\u2026\n\n\u305d\u3093\u306a\u3042\u306a\u305f\u306b\u305c\u3072\u7d39\u4ecb\u3057\u305f\u3044\uff01\u305d\u3093\u306a\u30dc\u30fc\u30c9\u304c\u304c\u3042\u308b\u3093\u3067\u3059\uff01\n\n# ESP-WROOM-02\u958b\u767a\u30dc\u30fc\u30c9(ESPr Developer)\n![ESP-WROOM-02\u958b\u767a\u30dc\u30fc\u30c9.PNG](https://qiita-image-store.s3.amazonaws.com/0/100231/a5a53d54-2ddd-c3b2-68db-d113e77799af.png)\n\u51fa\u5c55\uff1a[\u30b9\u30a4\u30c3\u30c1\u30b5\u30a4\u30a8\u30f3\u30b9](https://www.switch-science.com/catalog/2652/)\n\n\u304a\u5024\u6bb5\u306a\u3093\u30682,580\u5186\uff01\n\u304a\u624b\u9803\uff01\n\n\u3055\u3066\u3001\u3069\u306e\u3088\u3046\u306b\u7121\u7dda\u3067\u63a5\u7d9a\u3059\u304b\u3068\u3044\u3046\u3068\u3001\u3053\u3046\u3044\u3046\u611f\u3058\u3067\u3059\u3002\n![ESP-WROOM-02\u958b\u767a\u30dc\u30fc\u30c92.PNG](https://qiita-image-store.s3.amazonaws.com/0/100231/c67719a9-a68d-2cfc-31ce-9833da0adb85.png)\n\nSoftAP\u30e2\u30fc\u30c9\u3067\u306fESP-WROOM-02\u81ea\u4f53\u304c\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u8fbc\u3093\u3060ESP-WROOM-02\u3092\u30e2\u30d0\u30a4\u30eb\u30d0\u30c3\u30c6\u30ea\u30fc\u306b\u63a5\u7d9a\u3057\u305f\u77ac\u9593\u3001Wifi\u304c\u98db\u3073\u307e\u3059\u3002\nPC\u5074\u3067\u306f\u3001\u3053\u306e\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306b\u63a5\u7d9a\u3059\u308b\u3060\u3051\u3067OK\u3067\u3059\u3002\n\nStationMode\u306f\u3001\u4ed6\u306eWifi\u3092\u7d4c\u7531\u3057\u3066\u63a5\u7d9a\u3057\u307e\u3059\u3002\u3053\u3063\u3061\u306e\u307b\u3046\u304c\u30a4\u30e1\u30fc\u30b8\u3057\u3084\u3059\u3044\u3067\u3059\u304b\u306d\u3002\n\n\n\u898b\u3066\u308f\u304b\u308b\u901a\u308a\u3001\u30b8\u30e3\u30f3\u30d1\u30ef\u30a4\u30e4\u30fc\u3092\u5dee\u3057\u8fbc\u3080\u7a74\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u3042\u305f\u308a\u3082Arudino\u3068\u540c\u3058\u306a\u306e\u3067\u3001\u89aa\u3057\u307f\u3084\u3059\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\n\u5927\u304d\u3055\u306f\u3053\u3061\u3089\u306e\u753b\u50cf\u3092\u898b\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u308f\u304b\u308b\u901a\u308a\u3001\u5c0f\u3055\u3044\u3067\u3059\u3002\n(\u91cd\u306a\u3063\u3066\u3044\u308b\u767d\u3044\u7bb1\u306e\u3088\u3046\u306a\u3082\u306e\u306f\u3001\u30bb\u30f3\u30b5\u30fc\u5074\u306e\u88c5\u7f6e\u3067\u3059\u3002)\n![14595586_1598741463763581_6273077075903958125_n.jpg](https://qiita-image-store.s3.amazonaws.com/0/100231/37c5efa7-4c55-a93b-07e9-100c587859e4.jpeg)\n\n\u30e2\u30d0\u30a4\u30eb\u30d0\u30c3\u30c6\u30ea\u30fc\u304b\u3089\u306e\u7d66\u96fb\u3067\u3082\u52d5\u304d\u307e\u3057\u305f\u3002\n\n\n# \u5b9f\u7528\u4f8b\n\n\u30e2\u30d0\u30a4\u30eb\u30d0\u30c3\u30c6\u30ea\u30fc\u304b\u3089\u306e\u7d66\u96fb\u3067ESP-WROOM-02\u3092\u99c6\u52d5(\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u30e2\u30fc\u30c9)\u3002\u8108\u62cd\u30bb\u30f3\u30b5\u30fc\u304b\u3089\u306e\u60c5\u5831\u3092TOUT\u304b\u3089\u8aad\u307f\u8fbc\u307f\u3001UDP\u3067\u98db\u3070\u3057\u3066\u3044\u307e\u3059\u3002\n\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30ba\u306f\u304a\u306a\u3058\u307f\u306evvvv\u3067\u3059\u3002\n\n![test3.gif](https://qiita-image-store.s3.amazonaws.com/0/100231/87072a23-31c8-45ab-bee5-66d2f3d580a7.gif)\n\n\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u3061\u3089\u306e\u60c5\u5831\u306b\u6cbf\u3063\u3066\u884c\u3044\u307e\u3057\u305f\u3002\n[ESP8266\u3092\u4f7f\u3063\u3066Arduino\u304b\u3089\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u63a5\u7d9a\u3057\u3066\u307f\u308b](http://4009.jp/post/2015-12-25-esp8266/)\n[ESP8266\u306bArduino\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u3093\u3067UDP\u30c7\u30fc\u30bf\u9001\u53d7\u4fe1](http://4009.jp/post/2016-04-25-esp-wroom-02/)\n(\u7b46\u8005\u306e\u30a4\u30b7\u30a4\u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002)\n\n\u30a2\u30ca\u30ed\u30b0\u306e\u30bb\u30f3\u30b5\u30fc\u5024\u3092\u3001TOPUT\u30d4\u30f3\u304b\u3089\u53d6\u3063\u3066\u304f\u308b\u306b\u306f\u3084\u3084\u30b3\u30c4\u304c\u3042\u3063\u3066\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002http://qiita.com/azusa9/items/26e74e4e0d5773ce9c41\n\n\u307e\u305f\u3001\u30d5\u30a1\u30fc\u30e0\u30a6\u30a8\u30a2\u66f4\u65b0\u3092\u624b\u63a2\u308a\u3067\u3084\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30e1\u30e2\u30ea\u306e\u756a\u5730\u6307\u5b9a\u3068\u304b\u3042\u3063\u3066\u3001\u308f\u3051\u3082\u308f\u304b\u3089\u305a\u3084\u3063\u305f\u3089\u8d77\u52d5\u3059\u3089\u3057\u306a\u304f\u306a\u3063\u3066\u8a70\u307f\u304b\u3051\u307e\u3057\u305f\u3002\u305d\u3093\u306a\u3068\u304d\u3001\u3053\u3061\u3089\u306e\u30b5\u30a4\u30c8\u306b\u6551\u308f\u308c\u307e\u3057\u305f\u306e\u3067\u3001\u3082\u3057\u540c\u69d8\u306e\u3053\u3068\u3067\u56f0\u3063\u305f\u3089\u898b\u3066\u307f\u308b\u3068\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nhttp://nemuisan.blog.bai.ne.jp/?eid=215341\n\n\u6700\u7d42\u7684\u306b\u79c1\u304c\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3002\n\n```ruby:ESP\n#include <ESP8266WiFi.h>\n#include <WiFiUDP.h>\nextern \"C\" {\n#include \"user_interface.h\"\n}\n \n//Access Point Setting\nconst char *APSSID = \"ESP_WROOM_02\";\nconst char *APPASS = \"hoge4009\";\nunsigned int localPort = 8888;\n \nWiFiUDP UDP;\nchar packetBuffer[255];\n\nstatic const char *udpReturnAddr = \"192.168.4.2\";\nstatic const int udpReturnPort = 8889;\n \nvoid setup() {\n \n  Serial.begin(115200);\n  Serial.println();\n \n  WiFi.softAP(APSSID, APPASS);\n \n  IPAddress myIP = WiFi.softAPIP();\n  Serial.print(\"AP IP address: \");\n  Serial.println(myIP);\n  UDP.begin(localPort);\n \n}\n \nvoid loop() {\n\n  int packetSize = UDP.parsePacket();\n \n if (packetSize) {\n \n    int len = UDP.read(packetBuffer, packetSize);\n    //\u7d42\u7aef\u6587\u5b57\u8a2d\u5b9a\n    if (len > 0) packetBuffer[len] = '\\0';\n\n\n\n  uint ADC_Value = 0;\n  ADC_Value = system_adc_read();\n  Serial.println(\"=======ANALOG \" + String(ADC_Value) + \"ANALOG \");\n\n\nString str = String(ADC_Value) ;\nint a = str.length();\n char msg[a+1];\n  str.toCharArray(msg, a+1);\n\n \n    UDP.beginPacket(udpReturnAddr, udpReturnPort);\n    UDP.write(msg,a+1);\n    UDP.endPacket();  \n    \n} \n \n}\n```\n\u203b\u8a18\u61b6\u304c\u6b63\u3057\u3051\u308c\u3070\u3001PC\u5074\u304b\u3089\u30dd\u30fc\u30c88888\u3078UDP\u3067\u300c\uff11\u300d\u3092\u98db\u3070\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3068\u3044\u3046\u306e\u306f\u3001\u3053\u306e\u51e6\u7406\u3092\u5165\u308c\u305a\u306b\u3001\u96fb\u6e90\u5165\u308c\u305f\u3089\u3059\u3050UDP\u8d70\u3089\u305b\u3066\u306d\u3063\u3066\u3084\u308b\u3068\u3001\u30dc\u30fc\u30c9\u81ea\u4f53\u304c\u3046\u307e\u304f\u52d5\u304b\u306a\u3044\u304b\u3089\u3067\u3059\u3002\n\n\u3088\u304dvvvvLife\u3092\uff01\n\n", "tags": ["vvvv", "Arduino", "ESP8266"]}