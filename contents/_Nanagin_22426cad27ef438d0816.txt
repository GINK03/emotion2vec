{"context": "\n\npython\u3067\u4eee\u60f3\u95a2\u6570\u3092\u4f5c\u308b\n\u624b\u9806\u306e\u6982\u8981\n1 \u30af\u30e9\u30b9\u3092\u4f5c\u308b\n2 abc\u3092\u4f7f\u3046\n3 abstract method\u306e\u30de\u30fc\u30af\u3092\u3064\u3051\u308b\n\n\u30af\u30e9\u30b9\u3092\u4f5c\u308b\n\u307e\u305a\u306f\u3001\u3044\u308f\u3086\u308b\u7d99\u627f\u95a2\u4fc2\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nMyClassAbstract\u3092\u7d99\u627f\u3057\u305f\u3001MyClass\u3092\u4f5c\u6210\n\nsample_method\u3092\u6301\u3064\u30af\u30e9\u30b9\n\nabstract.py\n#coding: UTF-8\n\nclass MyClassAbstract(object):\n    '''\n    classdocs\n    '''\n    def __init__(self):\n        '''\n        Constructor\n        '''\n        pass\n    def sample_method(self):\n        pass\n\n\nMyClassAbstract\u3092\u7d99\u627f\u3059\u308b\u30af\u30e9\u30b9\u3092\u4f5c\u6210\n\u3053\u306e\u6642\u70b9\u3067\u306f\u4eee\u60f3\u95a2\u6570\u3092\u4f5c\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3001\nsample_method\u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u304f\u3066\u3082\u30a8\u30e9\u30fc\u306f\u51fa\u307e\u305b\u3093\u3002\n\nhontai.py\nfrom abstract import MyClassAbstract\n\nclass MyClass(MyClassAbstract):\n    def hontai_method(self):\n        print(\"Hontai\")\n    pass\n\n\n\n\nmain\u95a2\u6570\u304b\u3089MyClass\u306esample_method()\u3092\u547c\u3073\u51fa\u3057\u3066\u307f\u308b\u3002\n\nmain.py\nfrom hontai import MyClass\n\nif __name__ == '__main__':\n    MyClass().sample_method()\n\n\n\n\u5b9f\u884c\u7d50\u679c\nabstract\n\n\n\nMyClassAbstract\u306esample_method\u3092\u4eee\u60f3\u95a2\u6570\u306b\u3059\u308b\nMyClassAbstract\u306esample_method\u3092\u4eee\u60f3\u95a2\u6570\u306b\u3059\u308b\n\u5909\u66f4\u7b87\u6240\u306f\uff13\u7b87\u6240\n - abc\u304b\u3089ABCMeta\u3068abstract method\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n - metaclass \u306bABCMeta\u3092\u8a2d\u5b9a\n - \u62bd\u8c61\u5316\u3057\u305f\u3044\u30af\u30e9\u30b9\u306e\u76f4\u524d\u306b[@abstractmethod]\u3092\u4ed8\u4e0e\n\nabstract.py\n#coding: UTF-8\nfrom abc import ABCMeta, abstractmethod # \u5909\u66f4\n\nclass MyClassAbstract(object):\n    '''\n    classdocs\n    '''\n    __metaclass__ = ABCMeta # \u5909\u66f4\n\n    def __init__(self):\n        '''\n        Constructor\n        '''\n        pass\n\n    # \u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\n    @abstractmethod # \u5909\u66f4\n    def sample_method(self):\n        print(\"abstract\")\n\n\n\u3053\u306e\u307e\u307emain\u95a2\u6570\u3092\u518d\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\n\n\u5b9f\u884c\u7d50\u679c\nTraceback (most recent call last):\n  File \"/Users/shibatanorihiro/Documents/workspace/testprj/src/main.py\", line 4, in <module>\n    MyClass().sample_method()\nTypeError: Can't instantiate abstract class MyClass with abstract methods sample_method\n\n\n\u7d99\u627f\u5148\u304c\u4eee\u60f3\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u306a\u3044\u5834\u5408\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u52d5\u4f5c\u691c\u8a3c\nMyClass\u5074\u306bsample_method\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\nbontai.py\nfrom abstract import MyClassAbstract\n\nclass MyClass(MyClassAbstract):\n    def hontai_method(self):\n        self.sample_method()\n        print(\"Hontai\")\n    pass\n\n    def sample_method(self):                 #\u8ffd\u52a0\n        super(MyClass, self).sample_method() #\u8ffd\u52a0\n        print(\"Hontai sample\")               #\u8ffd\u52a0\n    pass\n\n\n\nmain.py\nfrom hontai import MyClass\n\nif __name__ == '__main__':\n    MyClass().hontai_method() #hontai_method\u3092\u547c\u3076\u3088\u3046\u306b\u3059\u308b\n\n\n\n\u5b9f\u884c\u7d50\u679c\nabstract\nHontai sample\nHontai\n\n\n\u60f3\u5b9a\u901a\u308a\u3001\nmain\n\u3000-> MyClass.hontai_method\n\u3000\u3000-> MyClass.sample_method\n\u3000\u3000\u3000-> MyClassAbstract.sample_method\n\u3068\u3044\u3046\u52d5\u304d\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n# python\u3067\u4eee\u60f3\u95a2\u6570\u3092\u4f5c\u308b\n\n\u624b\u9806\u306e\u6982\u8981\n1 \u30af\u30e9\u30b9\u3092\u4f5c\u308b\n2 abc\u3092\u4f7f\u3046\n3 abstract method\u306e\u30de\u30fc\u30af\u3092\u3064\u3051\u308b\n\n\n## \u30af\u30e9\u30b9\u3092\u4f5c\u308b\n\u307e\u305a\u306f\u3001\u3044\u308f\u3086\u308b\u7d99\u627f\u95a2\u4fc2\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nMyClassAbstract\u3092\u7d99\u627f\u3057\u305f\u3001MyClass\u3092\u4f5c\u6210\n\n ![\u7d99\u627f.png](https://qiita-image-store.s3.amazonaws.com/0/98558/ee423bf5-437e-2dc8-4172-2dac6256b1a9.png)\n\n\nsample_method\u3092\u6301\u3064\u30af\u30e9\u30b9\n\n```py:abstract.py\n#coding: UTF-8\n\nclass MyClassAbstract(object):\n    '''\n    classdocs\n    '''\n    def __init__(self):\n        '''\n        Constructor\n        '''\n        pass\n    def sample_method(self):\n        pass\n```\n\nMyClassAbstract\u3092\u7d99\u627f\u3059\u308b\u30af\u30e9\u30b9\u3092\u4f5c\u6210\n\u3053\u306e\u6642\u70b9\u3067\u306f\u4eee\u60f3\u95a2\u6570\u3092\u4f5c\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3001\nsample_method\u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u304f\u3066\u3082\u30a8\u30e9\u30fc\u306f\u51fa\u307e\u305b\u3093\u3002\n\n```py:hontai.py\nfrom abstract import MyClassAbstract\n\nclass MyClass(MyClassAbstract):\n    def hontai_method(self):\n        print(\"Hontai\")\n    pass\n\n\n```\n\nmain\u95a2\u6570\u304b\u3089MyClass\u306esample_method()\u3092\u547c\u3073\u51fa\u3057\u3066\u307f\u308b\u3002\n\n```py:main.py\nfrom hontai import MyClass\n   \nif __name__ == '__main__':\n    MyClass().sample_method()\n```\n\n\n```py:\u5b9f\u884c\u7d50\u679c\nabstract\n```\n\n\n## MyClassAbstract\u306esample_method\u3092\u4eee\u60f3\u95a2\u6570\u306b\u3059\u308b\n\nMyClassAbstract\u306esample_method\u3092\u4eee\u60f3\u95a2\u6570\u306b\u3059\u308b\n\u5909\u66f4\u7b87\u6240\u306f\uff13\u7b87\u6240\n - abc\u304b\u3089ABCMeta\u3068abstract method\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n - __metaclass__ \u306bABCMeta\u3092\u8a2d\u5b9a\n - \u62bd\u8c61\u5316\u3057\u305f\u3044\u30af\u30e9\u30b9\u306e\u76f4\u524d\u306b[@abstractmethod]\u3092\u4ed8\u4e0e\n\n```py:abstract.py\n#coding: UTF-8\nfrom abc import ABCMeta, abstractmethod # \u5909\u66f4\n\nclass MyClassAbstract(object):\n    '''\n    classdocs\n    '''\n    __metaclass__ = ABCMeta # \u5909\u66f4\n\n    def __init__(self):\n        '''\n        Constructor\n        '''\n        pass\n    \n    # \u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\n    @abstractmethod # \u5909\u66f4\n    def sample_method(self):\n        print(\"abstract\")\n```\n\n\u3053\u306e\u307e\u307emain\u95a2\u6570\u3092\u518d\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\n\n```py:\u5b9f\u884c\u7d50\u679c\nTraceback (most recent call last):\n  File \"/Users/shibatanorihiro/Documents/workspace/testprj/src/main.py\", line 4, in <module>\n    MyClass().sample_method()\nTypeError: Can't instantiate abstract class MyClass with abstract methods sample_method\n```\n\n\u7d99\u627f\u5148\u304c\u4eee\u60f3\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u306a\u3044\u5834\u5408\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n## \u52d5\u4f5c\u691c\u8a3c\n\nMyClass\u5074\u306bsample_method\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```py:bontai.py\nfrom abstract import MyClassAbstract\n\nclass MyClass(MyClassAbstract):\n    def hontai_method(self):\n        self.sample_method()\n        print(\"Hontai\")\n    pass\n\n    def sample_method(self):                 #\u8ffd\u52a0\n        super(MyClass, self).sample_method() #\u8ffd\u52a0\n        print(\"Hontai sample\")               #\u8ffd\u52a0\n    pass\n```\n\n```py:main.py\nfrom hontai import MyClass\n   \nif __name__ == '__main__':\n    MyClass().hontai_method() #hontai_method\u3092\u547c\u3076\u3088\u3046\u306b\u3059\u308b\n```\n\n```py:\u5b9f\u884c\u7d50\u679c\nabstract\nHontai sample\nHontai\n```\n\n\u60f3\u5b9a\u901a\u308a\u3001\nmain\n\u3000-> MyClass.hontai_method\n\u3000\u3000-> MyClass.sample_method\n\u3000\u3000\u3000-> MyClassAbstract.sample_method\n\n\n\u3068\u3044\u3046\u52d5\u304d\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n\n\n", "tags": ["python2.7"]}