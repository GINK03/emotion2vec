{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nElixir \u7528\u306e GraphQL \u30d1\u30fc\u30b5\u30fc\u306f awesome-graphql \u306b\u3088\u308b\u3068\uff13\u3064\u3042\u308a\u307e\u3059\u3002\n\nasonge/graphql\njoshprice/graphql-elixir\npeburrows/plot\n\n\u3053\u306e\u4e2d\u3067\u958b\u767a\u304c\u4e00\u756a\u6d3b\u767a\u306a graphql-elixir \u3092\u8abf\u3079\u307e\u3057\u305f\u3002\n\n\u30af\u30a8\u30ea\u30fc\u306e\u30d1\u30fc\u30b9\nGraphQL \u306e\u30d1\u30fc\u30b9\u306f\u6b21\u306e\u3088\u3046\u306b\u884c\u3044\u307e\u3059\u3002\n\nhello\nGraphQL.parse \"{ hello }\"\n\n\n\u307e\u305a\u306f \u4ee5\u524d\u306e\u8a18\u4e8b \u3067\u8a66\u3057\u305f\u7c21\u5358\u306a\u30af\u30a8\u30ea\u30fc\u3092\u30d1\u30fc\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n{game {\n  id\n}}\n\n\u6b21\u306e\u3088\u3046\u306b \u4ed5\u69d8\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u8981\u7d20 \u306b\u5206\u89e3\u3055\u308c\u307e\u3059\u3002\n[kind: :Document, loc: [start: 0],\n definitions: [[kind: :OperationDefinition, loc: [start: 0], operation: :query,\n   selectionSet: [kind: :SelectionSet, loc: [start: 0],\n    selections: [[kind: :Field, loc: [start: 0], name: 'game',\n      selectionSet: [kind: :SelectionSet, loc: [start: 0],\n       selections: [[kind: :Field, loc: [start: 0], name: 'id']]]]]]]]]\n\nmutation \u3082\u6b63\u3057\u304f\u30d1\u30fc\u30b9\u3067\u304d\u307e\u3059\u3002\nmutation Mutation($input:CheckHidingSpotForTreasureInput!) {\n  checkHidingSpotForTreasure(input:$input) {\n    clientMutationId\n  }\n}\n\n[kind: :Document, loc: [start: 0],\n definitions: [[kind: :OperationDefinition, loc: [start: 0],\n   operation: :mutation, name: 'Mutation',\n   variableDefinitions: [[kind: :VariableDefinition, loc: [start: 0],\n     variable: [kind: :Variable, loc: [start: 0], name: 'input'],\n     type: [kind: :NonNullType, loc: [start: 0],\n      type: [kind: :NamedType, loc: [start: 0],\n       name: 'CheckHidingSpotForTreasureInput']]]],\n   selectionSet: [kind: :SelectionSet, loc: [start: 0],\n    selections: [[kind: :Field, loc: [start: 0],\n      name: 'checkHidingSpotForTreasure',\n      arguments: [[kind: :Argument, loc: [start: 0], name: 'input',\n        value: [kind: :Variable, loc: [start: 0], name: 'input']]],\n      selectionSet: [kind: :SelectionSet, loc: [start: 0],\n       selections: [[kind: :Field, loc: [start: 0],\n         name: 'clientMutationId']]]]]]]]]\n\n\u5909\u6570 $input \u3082 kind: :Variable \u3068\u3057\u3066\u30d1\u30fc\u30b9\u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\u5909\u6570\u3078\u306e\u4ee3\u5165\u306f\u5f8c\u8ff0\u306e executor \u3067\u5b9f\u88c5\u3055\u308c\u305d\u3046\u3067\u3059\u3002\n\u4ed6\u306e\u30d1\u30bf\u30fc\u30f3\u306f graphql-elixir \u306e test/graphql_parser_test.exs\u3000\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\nschema \u306e\u30d1\u30fc\u30b9\nschema \u306e\u30d1\u30fc\u30b9\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001\u3053\u3061\u3089\u306e \u30b5\u30f3\u30d7\u30eb \u3067 npm run update-schema \u3057\u305f\u3068\u304d\u306b\u751f\u6210\u3055\u308c\u308b data/schema.graphql \u3067\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\ndata/schema.graphql\ninput CheckHidingSpotForTreasureInput {\n  id: ID!\n  clientMutationId: String!\n}\n\ntype CheckHidingSpotForTreasurePayload {\n  hidingSpot: HidingSpot\n  game: Game\n  clientMutationId: String!\n}\n\n\uff1c\u4e2d\u7565\uff1e\n\ntype Query {\n  node(id: ID!): Node\n  game: Game\n}\n\n\n[kind: :Document, loc: [start: 0],\n definitions: [[kind: :InputObjectTypeDefinition, loc: [start: 0],\n   name: 'CheckHidingSpotForTreasureInput',\n   fields: [[kind: :InputValueDefinition, loc: [start: 0], name: 'id',\n     type: [kind: :NonNullType, loc: [start: 0],\n      type: [kind: :NamedType, loc: [start: 0], name: 'ID']]],\n    [kind: :InputValueDefinition, loc: [start: 0], name: 'clientMutationId',\n     type: [kind: :NonNullType, loc: [start: 0],\n      type: [kind: :NamedType, loc: [start: 0], name: 'String']]]]],\n  [kind: :ObjectTypeDefinition, loc: [start: 0],\n   name: 'CheckHidingSpotForTreasurePayload',\n   fields: [[kind: :FieldDefinition, loc: [start: 0], name: 'hidingSpot',\n     type: [kind: :NamedType, loc: [start: 0], name: 'HidingSpot']],\n    [kind: :FieldDefinition, loc: [start: 0], name: 'game',\n     type: [kind: :NamedType, loc: [start: 0], name: 'Game']],\n    [kind: :FieldDefinition, loc: [start: 0], name: 'clientMutationId',\n     type: [kind: :NonNullType, loc: [start: 0],\n      type: [kind: :NamedType, loc: [start: 0], name: 'String']]]]],\n\n\uff1c\u4e2d\u7565\uff1e\n\n  [kind: :ObjectTypeDefinition, loc: [start: 0], name: 'Query',\n   fields: [[kind: :FieldDefinition, loc: [start: 0], name: 'node',\n     arguments: [[kind: :InputValueDefinition, loc: [start: 0], name: 'id',\n       type: [kind: :NonNullType, loc: [start: 0],\n        type: [kind: :NamedType, loc: [start: 0], name: 'ID']]]],\n     type: [kind: :NamedType, loc: [start: 0], name: 'Node']],\n    [kind: :FieldDefinition, loc: [start: 0], name: 'game',\n     type: [kind: :NamedType, loc: [start: 0], name: 'Game']]]]]]\n\n\u30af\u30a8\u30ea\u30fc\u3068 schema \u306e\u6574\u5408\u6027\u30c1\u30a7\u30c3\u30af\u306e\u6a5f\u80fd\u306f\u4eca\u306e\u3068\u3053\u308d\u7121\u3044\u3088\u3046\u3067\u3059\u3002\n\nexecutor\nschema \u306b elixir \u306e\u95a2\u6570\u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u30af\u30a8\u30ea\u30fc\u306e\u3067\u6307\u5b9a\u3057\u305f\u5909\u6570\u3092\u95a2\u6570\u306b\u6e21\u3059\u3053\u3068\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n\u203b \u6700\u65b0\u306e Version 0.0.2 \u3068 master \u30d6\u30e9\u30f3\u30c1\u3067\u306f\u4ed5\u69d8\u304c\u5909\u308f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u307e\u3060\u5927\u304d\u304f\u5909\u308f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\ndefmodule TestSchema do\n    def schema do\n      %GraphQL.Schema{\n        query: %GraphQL.ObjectType{\n          name: \"RootQueryType\",\n          fields: [\n            %GraphQL.FieldDefinition{\n              name: \"greeting\",\n              type: \"String\",\n              resolve: &greeting/1,\n            }\n          ]\n        }\n      }\n    end\n\n    def greeting(name: name), do: \"Hello, #{name}!\"\n    def greeting(_), do: greeting(name: \"world\")\n  end\n\n  test \"query arguments\" do\n    query = \"{ greeting }\"\n    assert GraphQL.execute(TestSchema.schema, query) == [data: [greeting: \"Hello, world!\"]]\n\n    query = \"{ greeting(name: \\\"Elixir\\\") }\"\n    assert GraphQL.execute(TestSchema.schema, query) == [data: [greeting: \"Hello, Elixir!\"]]\n  end\n\n\n\u6700\u5f8c\u306b\n\u4ed6\u306e\uff12\u3064\u306b\u6bd4\u3079\u3066\u30b3\u30df\u30c3\u30c8\u6570\u3082\u591a\u304f\u6700\u8fd1\u3082\u958b\u767a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u7c21\u5358\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u306b\u306f\u3082\u3046\u5c11\u3057\u6642\u9593\u304c\u304b\u304b\u308a\u305d\u3046\u3067\u3059\u3002\nPlot \u3082\u8efd\u304f\u3055\u308f\u3063\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u6b21\u306e\u3088\u3046\u306a\u554f\u984c\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\nvariables \u304c\u3042\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\nschema \u306e\u30d1\u30fc\u30b9\u3067\u30a8\u30e9\u30fc\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3068\u30a8\u30e9\u30fc (\u6587\u5b57\u3068\u6570\u5b57\u306fok)\n\n\u3053\u3061\u3089\u306f\u3055\u3089\u306b\u6642\u9593\u304c\u304b\u304b\u308a\u305d\u3046\u3067\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\nsample_elixir_graphql-elixir\nsample_elixir_plot\n\n# \u6982\u8981\n\nElixir \u7528\u306e GraphQL \u30d1\u30fc\u30b5\u30fc\u306f [awesome-graphql](https://github.com/chentsulin/awesome-graphql) \u306b\u3088\u308b\u3068\uff13\u3064\u3042\u308a\u307e\u3059\u3002\n\n1. [asonge/graphql](https://github.com/asonge/graphql)\n2. [joshprice/graphql-elixir](https://github.com/joshprice/graphql-elixir)\n3. [peburrows/plot](https://github.com/peburrows/plot)\n\n\u3053\u306e\u4e2d\u3067\u958b\u767a\u304c\u4e00\u756a\u6d3b\u767a\u306a [graphql-elixir](https://github.com/joshprice/graphql-elixir) \u3092\u8abf\u3079\u307e\u3057\u305f\u3002\n\n\n# \u30af\u30a8\u30ea\u30fc\u306e\u30d1\u30fc\u30b9\n\nGraphQL \u306e\u30d1\u30fc\u30b9\u306f\u6b21\u306e\u3088\u3046\u306b\u884c\u3044\u307e\u3059\u3002\n\n```ex:hello\nGraphQL.parse \"{ hello }\"\n```\n\n\u307e\u305a\u306f [\u4ee5\u524d\u306e\u8a18\u4e8b](http://qiita.com/yasuhiro-okada-aktsk/items/2e4d3878ed0c62688913) \u3067\u8a66\u3057\u305f\u7c21\u5358\u306a\u30af\u30a8\u30ea\u30fc\u3092\u30d1\u30fc\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n\n```GraphQL\n{game {\n  id\n}}\n```\n\n\u6b21\u306e\u3088\u3046\u306b [\u4ed5\u69d8\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u8981\u7d20](http://facebook.github.io/graphql/) \u306b\u5206\u89e3\u3055\u308c\u307e\u3059\u3002\n\n```ex\n[kind: :Document, loc: [start: 0],\n definitions: [[kind: :OperationDefinition, loc: [start: 0], operation: :query,\n   selectionSet: [kind: :SelectionSet, loc: [start: 0],\n    selections: [[kind: :Field, loc: [start: 0], name: 'game',\n      selectionSet: [kind: :SelectionSet, loc: [start: 0],\n       selections: [[kind: :Field, loc: [start: 0], name: 'id']]]]]]]]]\n```\n\n```mutation``` \u3082\u6b63\u3057\u304f\u30d1\u30fc\u30b9\u3067\u304d\u307e\u3059\u3002\n\n```GraphQL\nmutation Mutation($input:CheckHidingSpotForTreasureInput!) {\n  checkHidingSpotForTreasure(input:$input) {\n    clientMutationId\n  }\n}\n```\n\n```ex\n[kind: :Document, loc: [start: 0],\n definitions: [[kind: :OperationDefinition, loc: [start: 0],\n   operation: :mutation, name: 'Mutation',\n   variableDefinitions: [[kind: :VariableDefinition, loc: [start: 0],\n     variable: [kind: :Variable, loc: [start: 0], name: 'input'],\n     type: [kind: :NonNullType, loc: [start: 0],\n      type: [kind: :NamedType, loc: [start: 0],\n       name: 'CheckHidingSpotForTreasureInput']]]],\n   selectionSet: [kind: :SelectionSet, loc: [start: 0],\n    selections: [[kind: :Field, loc: [start: 0],\n      name: 'checkHidingSpotForTreasure',\n      arguments: [[kind: :Argument, loc: [start: 0], name: 'input',\n        value: [kind: :Variable, loc: [start: 0], name: 'input']]],\n      selectionSet: [kind: :SelectionSet, loc: [start: 0],\n       selections: [[kind: :Field, loc: [start: 0],\n         name: 'clientMutationId']]]]]]]]]\n```\n\n\u5909\u6570 ```$input``` \u3082 ```kind: :Variable``` \u3068\u3057\u3066\u30d1\u30fc\u30b9\u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\n\u5909\u6570\u3078\u306e\u4ee3\u5165\u306f\u5f8c\u8ff0\u306e executor \u3067\u5b9f\u88c5\u3055\u308c\u305d\u3046\u3067\u3059\u3002\n\n\u4ed6\u306e\u30d1\u30bf\u30fc\u30f3\u306f ```graphql-elixir``` \u306e [```test/graphql_parser_test.exs```](https://github.com/joshprice/graphql-elixir/blob/master/test/graphql_parser_test.exs)\u3000\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n# schema \u306e\u30d1\u30fc\u30b9\n\nschema \u306e\u30d1\u30fc\u30b9\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001\u3053\u3061\u3089\u306e [\u30b5\u30f3\u30d7\u30eb](https://github.com/yasuhiro-okada-aktsk/sample_relay) \u3067 ```npm run update-schema``` \u3057\u305f\u3068\u304d\u306b\u751f\u6210\u3055\u308c\u308b ```data/schema.graphql``` \u3067\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```GraphQL:data/schema.graphql\ninput CheckHidingSpotForTreasureInput {\n  id: ID!\n  clientMutationId: String!\n}\n\ntype CheckHidingSpotForTreasurePayload {\n  hidingSpot: HidingSpot\n  game: Game\n  clientMutationId: String!\n}\n\n\uff1c\u4e2d\u7565\uff1e\n\ntype Query {\n  node(id: ID!): Node\n  game: Game\n}\n```\n\n```ex\n[kind: :Document, loc: [start: 0],\n definitions: [[kind: :InputObjectTypeDefinition, loc: [start: 0],\n   name: 'CheckHidingSpotForTreasureInput',\n   fields: [[kind: :InputValueDefinition, loc: [start: 0], name: 'id',\n     type: [kind: :NonNullType, loc: [start: 0],\n      type: [kind: :NamedType, loc: [start: 0], name: 'ID']]],\n    [kind: :InputValueDefinition, loc: [start: 0], name: 'clientMutationId',\n     type: [kind: :NonNullType, loc: [start: 0],\n      type: [kind: :NamedType, loc: [start: 0], name: 'String']]]]],\n  [kind: :ObjectTypeDefinition, loc: [start: 0],\n   name: 'CheckHidingSpotForTreasurePayload',\n   fields: [[kind: :FieldDefinition, loc: [start: 0], name: 'hidingSpot',\n     type: [kind: :NamedType, loc: [start: 0], name: 'HidingSpot']],\n    [kind: :FieldDefinition, loc: [start: 0], name: 'game',\n     type: [kind: :NamedType, loc: [start: 0], name: 'Game']],\n    [kind: :FieldDefinition, loc: [start: 0], name: 'clientMutationId',\n     type: [kind: :NonNullType, loc: [start: 0],\n      type: [kind: :NamedType, loc: [start: 0], name: 'String']]]]],\n\n\uff1c\u4e2d\u7565\uff1e\n\n  [kind: :ObjectTypeDefinition, loc: [start: 0], name: 'Query',\n   fields: [[kind: :FieldDefinition, loc: [start: 0], name: 'node',\n     arguments: [[kind: :InputValueDefinition, loc: [start: 0], name: 'id',\n       type: [kind: :NonNullType, loc: [start: 0],\n        type: [kind: :NamedType, loc: [start: 0], name: 'ID']]]],\n     type: [kind: :NamedType, loc: [start: 0], name: 'Node']],\n    [kind: :FieldDefinition, loc: [start: 0], name: 'game',\n     type: [kind: :NamedType, loc: [start: 0], name: 'Game']]]]]]\n```\n\n\u30af\u30a8\u30ea\u30fc\u3068 schema \u306e\u6574\u5408\u6027\u30c1\u30a7\u30c3\u30af\u306e\u6a5f\u80fd\u306f\u4eca\u306e\u3068\u3053\u308d\u7121\u3044\u3088\u3046\u3067\u3059\u3002\n\n# executor\n\nschema \u306b elixir \u306e\u95a2\u6570\u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u30af\u30a8\u30ea\u30fc\u306e\u3067\u6307\u5b9a\u3057\u305f\u5909\u6570\u3092\u95a2\u6570\u306b\u6e21\u3059\u3053\u3068\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n\u203b \u6700\u65b0\u306e Version 0.0.2 \u3068 master \u30d6\u30e9\u30f3\u30c1\u3067\u306f\u4ed5\u69d8\u304c\u5909\u308f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u307e\u3060\u5927\u304d\u304f\u5909\u308f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n```ex\ndefmodule TestSchema do\n    def schema do\n      %GraphQL.Schema{\n        query: %GraphQL.ObjectType{\n          name: \"RootQueryType\",\n          fields: [\n            %GraphQL.FieldDefinition{\n              name: \"greeting\",\n              type: \"String\",\n              resolve: &greeting/1,\n            }\n          ]\n        }\n      }\n    end\n    \n    def greeting(name: name), do: \"Hello, #{name}!\"\n    def greeting(_), do: greeting(name: \"world\")\n  end\n      \n  test \"query arguments\" do\n    query = \"{ greeting }\"\n    assert GraphQL.execute(TestSchema.schema, query) == [data: [greeting: \"Hello, world!\"]]\n\n    query = \"{ greeting(name: \\\"Elixir\\\") }\"\n    assert GraphQL.execute(TestSchema.schema, query) == [data: [greeting: \"Hello, Elixir!\"]]\n  end\n```\n\n# \u6700\u5f8c\u306b\n\n\u4ed6\u306e\uff12\u3064\u306b\u6bd4\u3079\u3066\u30b3\u30df\u30c3\u30c8\u6570\u3082\u591a\u304f\u6700\u8fd1\u3082\u958b\u767a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u7c21\u5358\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u306b\u306f\u3082\u3046\u5c11\u3057\u6642\u9593\u304c\u304b\u304b\u308a\u305d\u3046\u3067\u3059\u3002\n\n[Plot](https://github.com/peburrows/plot) \u3082\u8efd\u304f\u3055\u308f\u3063\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u6b21\u306e\u3088\u3046\u306a\u554f\u984c\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n* variables \u304c\u3042\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\n* schema \u306e\u30d1\u30fc\u30b9\u3067\u30a8\u30e9\u30fc\n* \u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3068\u30a8\u30e9\u30fc (\u6587\u5b57\u3068\u6570\u5b57\u306fok)\n\n\u3053\u3061\u3089\u306f\u3055\u3089\u306b\u6642\u9593\u304c\u304b\u304b\u308a\u305d\u3046\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n* [sample_elixir_graphql-elixir](https://github.com/yasuhiro-okada-aktsk/sample_elixir_graphql-elixir)\n* [sample_elixir_plot](https://github.com/yasuhiro-okada-aktsk/sample_elixir_plot)\n\n", "tags": ["Elixir", "GraphQL"]}