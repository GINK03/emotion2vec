{"tags": ["React", "reactjs"], "context": " More than 1 year has passed since last update.\n\n\u80cc\u666f\nflux \u3092\u4f7f\u3063\u3066\u307f\u305f\u304f\u3066\u3001\u6700\u521d\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u308f\u305a\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3002\u7279\u306b\u4e0d\u6e80\u306f\u306a\u3044\u3082\u306e\u306e\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u3066\u307f\u308b\u3068\u3069\u306e\u3088\u3046\u306a\u52b9\u679c\u304c\u3042\u308b\u306e\u304b\u306a\uff1f\u3068\u8a66\u3057\u3066\u307f\u305f\u304f\u3066\u3001alt\u3092\u9069\u7528\u3057\u3066\u307f\u305f\u3002\nalt\u306f\u3001\u6d3b\u767a\u306b\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3055\u308c\u3066\u304a\u308a\u3001\u5546\u7528\u3068\u3057\u3066\u3064\u304b\u308f\u308c\u3066\u3044\u308b\u5b9f\u7e3e\u3082\u3042\u308b\u3088\u3046\u3060\u3002\n\n\nIt is pure flux. Stores have no setters, the flow is unidirectional.\nIsomorphic and works with react-native.\nActively maintained and being used in production.\nExtremely flexible and unopinionated in how you use flux. Create traditional singletons or use dependency injection.\nIt is terse. No boilerplate.\n\n\n\n\u611f\u60f3\n\nalt\u3092\u5c11\u3057\u304b\u3058\u3063\u3066\u3044\u306a\u3044\u3068\u3001\u66f8\u3044\u3066\u3042\u308b\u3053\u3068\u306e\u610f\u5473\u304c\u63b4\u3081\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\n\u30b9\u30c8\u30ec\u30fc\u30c8\u306bFlux\u3092\u9069\u7528\u3059\u308b\u3088\u308a\u3082\u4fbf\u5229\u3060\u306a\u3001\u3068\u611f\u3058\u305f\u3053\u3068\n\n\u30a2\u30af\u30b7\u30e7\u30f3\u30bf\u30a4\u30d7\u3092\u308f\u3056\u308f\u3056\u5b9a\u6570\u5316\u3057\u305f\u308a\u3001\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\n\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306b\u30b9\u30c8\u30a2\u5185\u90e8\u306b\u5b9f\u88c5\u3059\u308b\u306e\u306f\u3001\ndestroy (id) {\nreturn id;\n}\n\n\u3053\u308c\u3060\u3051\u3002alt\u304c\u516c\u958b\u3057\u3066\u3044\u308b\u95a2\u6570 createActions \u306b\u5305\u3080\u3053\u3068\u3067\u3001\u81ea\u5206\u304c\u5b9f\u88c5\u3057\u305f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5f37\u5316\u3057\u3066\u304f\u308c\u308b\u304b\u3089\u3001\u3053\u308c\u3060\u3051\u3067\u6e08\u3080\u3002\n\u3061\u306a\u307f\u306b\u666e\u901a\u306b\u66f8\u304f\u3068\u3053\u306e\u3088\u3046\u306b\u306a\u308b\u3002\ndestroy: (id) => {\n  AppDispatcher.dispatch({\n    actionType: TodoConstants.TODO_DESTROY,\n    id: id\n  });\n}\n\nimport keyMirror from 'keyMirror';\n\nmodule.exports = keyMirror({\n  TODO_CREATE: null,\n  TODO_COMPLETE: null,\n  TODO_DESTROY: null,\n  TODO_DESTROY_COMPLETED: null,\n  TODO_TOGGLE_COMPLETE_ALL: null,\n  TODO_UNDO_COMPLETE: null,\n  TODO_UPDATE_TEXT: null\n});\n\nactionType \u5411\u3051\u306b\u3001\u5b9a\u6570\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u3002\u307e\u305f\u3001\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u3059\u308b\u305f\u3081\u306b AppDispatcher.dispatch\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3002\n\n\u30b9\u30c8\u30a2\u5185\u90e8\u306e switch \u3092\u8a18\u8ff0\u3057\u306a\u304f\u3066\u3082\u3001\u30cf\u30f3\u30c9\u30e9\u3068\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u4ed5\u7d44\u307f\u304c\u3042\u308b\n\u30b9\u30c8\u30a2\u5185\u90e8\u306b\u3001 bindListener \u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\u3001 alt \u304c\u30cf\u30f3\u30c9\u30e9\u3068\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u95a2\u9023\u3065\u3051\u3066\u304f\u308c\u308b\u3002\nthis.bindListeners({\n  handleCreate: TodoActions.CREATE,\n  handleUpdateText: TodoActions.UPDATE_TEXT,\n  handleToggleComplete: TodoActions.TOGGLE_COMPLETE,\n  handleTodoUndoComplete: TodoActions.TODO_UNDO_COMPLETE,\n  handleTodoComplete: TodoActions.TODO_COMPLETE,\n  handleToggleCompleteAll: TodoActions.TOGGLE_COMPLETE_ALL,\n  handleDestroy: TodoActions.DESTROY,\n  handleDestroyCompleted: TodoActions.DESTROY_COMPLETED,\n  handleUpdateTodos: TodoActions.UPDATE_TODOS,\n  handleTodoFailed: TodoActions.TODO_FAILED,\n  handleFetchTodos: TodoActions.FETCH_TODOS\n});\n\n\u666e\u901a\u306f\u3001\u3053\u306e\u3088\u3046\u306a switch\u6587\u3092\u7528\u610f\u3059\u308b\u3002\ndispatcherIndex: AppDispatcher.register(function(payload) {\n  var action = payload.action;\n  var text;\n\n  switch(action.actionType) {\n    case TodoConstants.TODO_CREATE:\n      text = action.text.trim();\n      if (text !== '') {\n        create(text);\n        TodoStore.emitChange();\n      }\n      break;\n\n    case TodoConstants.TODO_DESTROY:\n      destroy(action.id);\n      TodoStore.emitChange();\n      break;\n\n    // add more cases for other actionTypes, like TODO_UPDATE, etc.\n  }\n\n  return true; // No errors. Needed by promise in Dispatcher.\n})\n\n\n\u30b9\u30c8\u30a2\u5185\u90e8\u3067 change \u30a4\u30d9\u30f3\u30c8\u3092\u660e\u793a\u7684\u306b\u767a\u706b\u3057\u306a\u304f\u3066\u826f\u3044\n\nStores automatically emit a change event when an action is dispatched through the store and the action handler ends.\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u304b\u3089\u3082\u308f\u304b\u308b\u3088\u3046\u306b\u3001change \u30a4\u30d9\u30f3\u30c8\u3092\u660e\u793a\u7684\u306b\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002\u30b9\u30c8\u30a2\u5185\u90e8\u3067\u81ea\u5206\u304c\u66f8\u304f\u30b3\u30fc\u30c9\u306f\u3001\u7279\u5b9a\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u30cf\u30f3\u30c9\u30e9\u3060\u3051\u3067\u3042\u308b\u3002\n//\u5358\u7d14\u306b\u3001\u30da\u30a4\u30ed\u30fc\u30c9\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u5024\u306b\u3064\u3044\u3066\u51e6\u7406\u3059\u308b\u3060\u3051\nconst destroy = (id) => {\n  delete _todos[id];\n}\n\n\n\u975e\u540c\u671f\u901a\u4fe1\u6642\u306e\u72b6\u614b\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3067\u304d\u308b\n\u30bd\u30fc\u30b9\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3001\u975e\u540c\u671f\u901a\u4fe1\u306e\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u6642\u3001\u6210\u529f\u6642\u3001\u5931\u6557\u6642\u306e\u305d\u308c\u305e\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3002\u307e\u305f\u3001isLoading()\u3092\u4f7f\u3046\u3053\u3068\u3067\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5236\u5fa1\u3057\u3001\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u4e2d\u306f\u753b\u50cf\u3092\u8868\u793a\u3055\u305b\u308b\u306a\u3069\u306e\u5206\u5c90\u3092\u7c21\u5358\u306b\u3001Functional \u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n// \u975e\u540c\u671f\u51e6\u7406\u3092\u6271\u3046\u3001\u30bd\u30fc\u30b9\u30e2\u30b8\u30e5\u30fc\u30eb\n// \u975e\u540c\u671f\u3067\u3042\u308bfetchTodos\u95a2\u6570\u3092\u3001success/error/loading \u306b\u305d\u308c\u305e\u308c\u95a2\u9023\u4ed8\u3051\u305f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u5b9f\u73fe\u3059\u308b\n// \nconst TodoSource = {\n  fetchTodos() {\n    return {\n      remote(state) {\n        return new Promise((resolve, reject) => {\n          setTimeout(() => {\n            if (true) {\n              resolve(mockData);\n            }else {\n              reject('Things have broken');\n            }\n          }, 500);\n        });\n      },\n\n      local() {\n        return null;\n      },\n\n      success: TodoActions.updateTodos,\n      error: TodoActions.todoFailed,\n      loading: TodoActions.fetchTodos,\n\n      shouldFetch(state){\n        return true;\n      }\n    };\n  }\n}\n\n// Component#render()\u5185\u306e\u30b3\u30fc\u30c9\nif(TodoStore.isLoading()) {\n  return (\n    <div>\n      <img src=\"ajax-loader.gif\" />\n    </div>\n  )\n}\n\n\nalt\u306e\u601d\u60f3\nFlux\u306e\u8003\u3048\u65b9\u3092\u8e0f\u8972\u3057\u3066\u3044\u308b\u3002\n\nThe basic idea is that you have a container that wraps your component, the duty of this container component is to handle all the data fetching and communication with the stores, it then renders the corresponding children. The sub-components just render markup and are data agnostic thus making them highly reusable.\n\n\u30b3\u30f3\u30c6\u30ca\u3068\u306a\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u4ee5\u5916\u306f\u72b6\u614b\u3092\u6301\u3064\u3053\u3068\u306a\u304f\u3001\u4e0e\u3048\u3089\u308c\u305f\u30c7\u30fc\u30bf\u306b\u3088\u3063\u3066\u306e\u307fDOM\u3092render\u3059\u308b\u3053\u3068\u3067\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u9ad8\u3044\u518d\u5229\u7528\u6027\u3092\u6301\u3064\u3002\u3053\u308c\u306f alt \u306b\u9650\u3063\u305f\u3053\u3068\u3067\u306f\u306a\u304f\u3001 Flux \u306e\u601d\u60f3\u3068\u8a00\u3048\u308b\u3002\n\nmixin\u3068\u3044\u3046\u3082\u306e\u306b\u521d\u3081\u3066\u89e6\u308c\u305f\nalt\u306eStoreMixin\u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3088\u3063\u3066\u3001\u3044\u308d\u3044\u308d\u3068\u4fbf\u5229\u306a\u95a2\u6570\u304c\u81ea\u5206\u306e\u66f8\u3044\u305f\u30b9\u30c8\u30a2\u306b\u8ffd\u52a0\u3055\u308c\u308b\u3002\n\u3053\u308c\u304c\u3069\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u304b\u3068\u3044\u3046\u3068\u3001\u5168\u304f\u5b9a\u7fa9\u3057\u3066\u3044\u306a\u3044\uff08\u3088\u3046\u306b\u601d\u3048\u308b)\u95a2\u6570\u3092\u3001\u81ea\u5206\u304c\u30b9\u30c8\u30a2\u306b\u8a18\u8ff0\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308b\u3002\u5b9f\u884c\u6642\u306b\u3053\u306e\u95a2\u6570\u304c\u8ffd\u52a0\u3055\u308c\u308b\u305f\u3081\u3001\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u308b\u6642\u70b9\u3067\u306f\u5c11\u3005\u3001\u982d\u306e\u4e2d\u306b\u30cf\u30c6\u30ca\u304c\u6d6e\u304b\u3076\u3002\u3053\u308c\u306f\u6163\u308c\u308b\u3057\u304b\u306a\u3044\u304b\u3002\n\u305f\u3060\u3057\u3001ES6\u304b\u3089\u306f mixin \u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u6a5f\u80fd\u304c React \u304b\u3089\u843d\u3068\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u4eca\u5f8c\u306f\u5225\u306e\u624b\u6bb5\u3067\u554f\u984c\u89e3\u6c7a\u3059\u308b\u306e\u304c\u4e3b\u6d41\u3068\u306a\u308b\u3002\n\nHOC (High Order Component) \u306b\u89e6\u308c\u305f\n\u5225\u306e\u624b\u6bb5\u3068\u3044\u3046\u306e\u304c\u3001\u3053\u306e HOC \u306e\u3053\u3068\u3067\u3001\u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u306b\u66f8\u3044\u3066\u3042\u308b\u3002\nMixins are Dead.\nHOC\u306e\u7279\u5fb4\u306f\u5408\u6210\u3067\u3001React \u3067\u306f\u3042\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8d77\u70b9\u3068\u3057\u3066\u3001\u65b0\u305f\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f5c\u308b\u3053\u3068\u3092\u6307\u3059\u3002\u3053\u306e\u5408\u6210\u306f\u7e70\u308a\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u70b9\u3082\u5229\u70b9\u3068\u3057\u3066\u3042\u3052\u3089\u308c\u308b\u3002\n\u3068\u3053\u308d\u3067\u3001\u3082\u3068\u3082\u3068 mixin \u3084 HOC \u306f\u3001React\u306b\u304a\u3044\u3066\u306f\u5927\u304d\u304f2\u3064\u306e\u91cd\u8981\u306a\u5f79\u5272\u3092\u62c5\u3063\u3066\u3044\u308b\u3002\n\n\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u95a2\u6570\u3092\u63d0\u4f9b\u3059\u308b\n\u5171\u901a\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u95a2\u6570( lifecycle hook )\u3092\u63d0\u4f9b\u3059\u308b\n\n\u305d\u306e\u969b\u306b\u3001mixin\u306e\u6301\u3064\u6b21\u306e\u3088\u3046\u306a\u8ab2\u984c\u3092\u89e3\u6d88\u3059\u308b\u671f\u5f85\u3092\u6301\u305f\u308c\u3066\u3044\u308b\u306e\u304c HOC \u3068\u3044\u3046\u3053\u3068\u3060\u3002\n\nmixin \u3068\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u306e\u4f9d\u5b58\u95a2\u4fc2\u304c\u6697\u9ed9\u7684\n\u4e00\u3064\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b mixin \u3092\u591a\u7528\u3059\u308b\u3068\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\nmixin \u306f\u3001\u672c\u6765\u3067\u304d\u308b\u9650\u308a\u5c11\u306a\u304f\u3059\u3079\u304dstate\u3092\u5897\u3084\u3059\u50be\u5411\u304c\u3042\u308b\n\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u8907\u96d1\u306b\u3059\u308b\n\n\nReact\u6e96\u62e0\u3067\u30c9\u30e9\u30c3\u30b0\u30a2\u30f3\u30c9\u30c9\u30ed\u30c3\u30d7\u3092\u5236\u5fa1\u3059\u308bReact DnD\u3082\u4f3c\u305f\u3088\u3046\u306a\u4f5c\u308a\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\u307e\u3060\u66f8\u3044\u3066\u3044\u306a\u3044\u30fb\u30fb\u3002\n\n\u307e\u3060\u3061\u3087\u3063\u3068\u7406\u89e3\u304c\u8ffd\u3044\u3064\u3044\u3066\u3044\u306a\u3044\u3053\u3068\n. BootStrap/Snapshot \u306a\u3069\u306eAPI\n. Isomorphic \u306a alt \u306e\u5229\u7528\u30b7\u30fc\u30f3\n. altjs\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u4f7f\u3044\u65b9\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nhttps://github.com/rooooomania/new-todo\n\nhttps://facebook.github.io/react/docs/flux-todo-list.html\n\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u30b3\u30fc\u30c9\u3092\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u4fee\u6b63\u3057\u3066\u3044\u3063\u305f\u3002\n\nES6\u5316\nalt \u306e\u9069\u7528\n\n\n\n## \u80cc\u666f\nflux \u3092\u4f7f\u3063\u3066\u307f\u305f\u304f\u3066\u3001\u6700\u521d\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u308f\u305a\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3002\u7279\u306b\u4e0d\u6e80\u306f\u306a\u3044\u3082\u306e\u306e\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u3066\u307f\u308b\u3068\u3069\u306e\u3088\u3046\u306a\u52b9\u679c\u304c\u3042\u308b\u306e\u304b\u306a\uff1f\u3068\u8a66\u3057\u3066\u307f\u305f\u304f\u3066\u3001[alt](http://alt.js.org/guide/)\u3092\u9069\u7528\u3057\u3066\u307f\u305f\u3002\nalt\u306f\u3001\u6d3b\u767a\u306b\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3055\u308c\u3066\u304a\u308a\u3001\u5546\u7528\u3068\u3057\u3066\u3064\u304b\u308f\u308c\u3066\u3044\u308b\u5b9f\u7e3e\u3082\u3042\u308b\u3088\u3046\u3060\u3002\n\n> * It is pure flux. Stores have no setters, the flow is unidirectional.\n* Isomorphic and works with react-native.\n* Actively maintained and being used in production.\n* Extremely flexible and unopinionated in how you use flux. Create traditional singletons or use dependency injection.\n* It is terse. No boilerplate.\n\n## \u611f\u60f3\n> [alt\u3092\u5c11\u3057\u304b\u3058\u3063\u3066](http://alt.js.org/guide/)\u3044\u306a\u3044\u3068\u3001\u66f8\u3044\u3066\u3042\u308b\u3053\u3068\u306e\u610f\u5473\u304c\u63b4\u3081\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n### \u30b9\u30c8\u30ec\u30fc\u30c8\u306bFlux\u3092\u9069\u7528\u3059\u308b\u3088\u308a\u3082\u4fbf\u5229\u3060\u306a\u3001\u3068\u611f\u3058\u305f\u3053\u3068\n#### \u30a2\u30af\u30b7\u30e7\u30f3\u30bf\u30a4\u30d7\u3092\u308f\u3056\u308f\u3056\u5b9a\u6570\u5316\u3057\u305f\u308a\u3001\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\n\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306b\u30b9\u30c8\u30a2\u5185\u90e8\u306b\u5b9f\u88c5\u3059\u308b\u306e\u306f\u3001\n\n```javascript\ndestroy (id) {\nreturn id;\n}\n```\n\n\u3053\u308c\u3060\u3051\u3002alt\u304c\u516c\u958b\u3057\u3066\u3044\u308b\u95a2\u6570 `createActions` \u306b\u5305\u3080\u3053\u3068\u3067\u3001\u81ea\u5206\u304c\u5b9f\u88c5\u3057\u305f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5f37\u5316\u3057\u3066\u304f\u308c\u308b\u304b\u3089\u3001\u3053\u308c\u3060\u3051\u3067\u6e08\u3080\u3002\n\u3061\u306a\u307f\u306b\u666e\u901a\u306b\u66f8\u304f\u3068\u3053\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n```javascript \ndestroy: (id) => {\n  AppDispatcher.dispatch({\n    actionType: TodoConstants.TODO_DESTROY,\n    id: id\n  });\n}\n```\n\n```javascript\nimport keyMirror from 'keyMirror';\n\nmodule.exports = keyMirror({\n  TODO_CREATE: null,\n  TODO_COMPLETE: null,\n  TODO_DESTROY: null,\n  TODO_DESTROY_COMPLETED: null,\n  TODO_TOGGLE_COMPLETE_ALL: null,\n  TODO_UNDO_COMPLETE: null,\n  TODO_UPDATE_TEXT: null\n});\n```\n\n`actionType` \u5411\u3051\u306b\u3001\u5b9a\u6570\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u3002\u307e\u305f\u3001\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u3059\u308b\u305f\u3081\u306b `AppDispatcher.dispatch`\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3002\n\n#### \u30b9\u30c8\u30a2\u5185\u90e8\u306e `switch` \u3092\u8a18\u8ff0\u3057\u306a\u304f\u3066\u3082\u3001\u30cf\u30f3\u30c9\u30e9\u3068\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u4ed5\u7d44\u307f\u304c\u3042\u308b\n\u30b9\u30c8\u30a2\u5185\u90e8\u306b\u3001 `bindListener` \u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\u3001 alt \u304c\u30cf\u30f3\u30c9\u30e9\u3068\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u95a2\u9023\u3065\u3051\u3066\u304f\u308c\u308b\u3002\n\n```javascript\nthis.bindListeners({\n  handleCreate: TodoActions.CREATE,\n  handleUpdateText: TodoActions.UPDATE_TEXT,\n  handleToggleComplete: TodoActions.TOGGLE_COMPLETE,\n  handleTodoUndoComplete: TodoActions.TODO_UNDO_COMPLETE,\n  handleTodoComplete: TodoActions.TODO_COMPLETE,\n  handleToggleCompleteAll: TodoActions.TOGGLE_COMPLETE_ALL,\n  handleDestroy: TodoActions.DESTROY,\n  handleDestroyCompleted: TodoActions.DESTROY_COMPLETED,\n  handleUpdateTodos: TodoActions.UPDATE_TODOS,\n  handleTodoFailed: TodoActions.TODO_FAILED,\n  handleFetchTodos: TodoActions.FETCH_TODOS\n});\n```\n\n\u666e\u901a\u306f\u3001[\u3053\u306e\u3088\u3046\u306a `switch`\u6587\u3092\u7528\u610f](https://facebook.github.io/flux/docs/todo-list.html#creating-stores)\u3059\u308b\u3002\n\n```javascript\ndispatcherIndex: AppDispatcher.register(function(payload) {\n  var action = payload.action;\n  var text;\n\n  switch(action.actionType) {\n    case TodoConstants.TODO_CREATE:\n      text = action.text.trim();\n      if (text !== '') {\n        create(text);\n        TodoStore.emitChange();\n      }\n      break;\n\n    case TodoConstants.TODO_DESTROY:\n      destroy(action.id);\n      TodoStore.emitChange();\n      break;\n\n    // add more cases for other actionTypes, like TODO_UPDATE, etc.\n  }\n\n  return true; // No errors. Needed by promise in Dispatcher.\n})\n```\n\n#### \u30b9\u30c8\u30a2\u5185\u90e8\u3067 `change` \u30a4\u30d9\u30f3\u30c8\u3092\u660e\u793a\u7684\u306b\u767a\u706b\u3057\u306a\u304f\u3066\u826f\u3044\n> Stores automatically emit a change event when an action is dispatched through the store and the action handler ends.\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u304b\u3089\u3082\u308f\u304b\u308b\u3088\u3046\u306b\u3001`change` \u30a4\u30d9\u30f3\u30c8\u3092\u660e\u793a\u7684\u306b\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002\u30b9\u30c8\u30a2\u5185\u90e8\u3067\u81ea\u5206\u304c\u66f8\u304f\u30b3\u30fc\u30c9\u306f\u3001\u7279\u5b9a\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u30cf\u30f3\u30c9\u30e9\u3060\u3051\u3067\u3042\u308b\u3002\n\n```javascript\n//\u5358\u7d14\u306b\u3001\u30da\u30a4\u30ed\u30fc\u30c9\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u5024\u306b\u3064\u3044\u3066\u51e6\u7406\u3059\u308b\u3060\u3051\nconst destroy = (id) => {\n  delete _todos[id];\n}\n```\n\n\n#### \u975e\u540c\u671f\u901a\u4fe1\u6642\u306e\u72b6\u614b\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3067\u304d\u308b\n\u30bd\u30fc\u30b9\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3001\u975e\u540c\u671f\u901a\u4fe1\u306e\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u6642\u3001\u6210\u529f\u6642\u3001\u5931\u6557\u6642\u306e\u305d\u308c\u305e\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3002\u307e\u305f\u3001`isLoading()`\u3092\u4f7f\u3046\u3053\u3068\u3067\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5236\u5fa1\u3057\u3001\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u4e2d\u306f\u753b\u50cf\u3092\u8868\u793a\u3055\u305b\u308b\u306a\u3069\u306e\u5206\u5c90\u3092\u7c21\u5358\u306b\u3001Functional \u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```javascript\n// \u975e\u540c\u671f\u51e6\u7406\u3092\u6271\u3046\u3001\u30bd\u30fc\u30b9\u30e2\u30b8\u30e5\u30fc\u30eb\n// \u975e\u540c\u671f\u3067\u3042\u308bfetchTodos\u95a2\u6570\u3092\u3001success/error/loading \u306b\u305d\u308c\u305e\u308c\u95a2\u9023\u4ed8\u3051\u305f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u5b9f\u73fe\u3059\u308b\n// \nconst TodoSource = {\n  fetchTodos() {\n    return {\n      remote(state) {\n        return new Promise((resolve, reject) => {\n          setTimeout(() => {\n            if (true) {\n              resolve(mockData);\n            }else {\n              reject('Things have broken');\n            }\n          }, 500);\n        });\n      },\n\n      local() {\n        return null;\n      },\n\n      success: TodoActions.updateTodos,\n      error: TodoActions.todoFailed,\n      loading: TodoActions.fetchTodos,\n\n      shouldFetch(state){\n        return true;\n      }\n    };\n  }\n}\n```\n\n\n```javascript\n// Component#render()\u5185\u306e\u30b3\u30fc\u30c9\nif(TodoStore.isLoading()) {\n  return (\n    <div>\n      <img src=\"ajax-loader.gif\" />\n    </div>\n  )\n}\n```\n\n### alt\u306e\u601d\u60f3\nFlux\u306e\u8003\u3048\u65b9\u3092\u8e0f\u8972\u3057\u3066\u3044\u308b\u3002\n\n> The basic idea is that you have a container that wraps your component, the duty of this container component is to handle all the data fetching and communication with the stores, it then renders the corresponding children. The sub-components just render markup and are data agnostic thus making them highly reusable.\n\n\u30b3\u30f3\u30c6\u30ca\u3068\u306a\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u4ee5\u5916\u306f\u72b6\u614b\u3092\u6301\u3064\u3053\u3068\u306a\u304f\u3001\u4e0e\u3048\u3089\u308c\u305f\u30c7\u30fc\u30bf\u306b\u3088\u3063\u3066\u306e\u307fDOM\u3092`render`\u3059\u308b\u3053\u3068\u3067\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u9ad8\u3044\u518d\u5229\u7528\u6027\u3092\u6301\u3064\u3002\u3053\u308c\u306f alt \u306b\u9650\u3063\u305f\u3053\u3068\u3067\u306f\u306a\u304f\u3001 Flux \u306e\u601d\u60f3\u3068\u8a00\u3048\u308b\u3002\n\n### mixin\u3068\u3044\u3046\u3082\u306e\u306b\u521d\u3081\u3066\u89e6\u308c\u305f\nalt\u306e[StoreMixin](https://docs.omniref.com/js/npm/alt/0.13.11/symbols/StoreMixin)\u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3088\u3063\u3066\u3001\u3044\u308d\u3044\u308d\u3068\u4fbf\u5229\u306a\u95a2\u6570\u304c\u81ea\u5206\u306e\u66f8\u3044\u305f\u30b9\u30c8\u30a2\u306b\u8ffd\u52a0\u3055\u308c\u308b\u3002\n\u3053\u308c\u304c\u3069\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u304b\u3068\u3044\u3046\u3068\u3001\u5168\u304f\u5b9a\u7fa9\u3057\u3066\u3044\u306a\u3044\uff08\u3088\u3046\u306b\u601d\u3048\u308b)\u95a2\u6570\u3092\u3001\u81ea\u5206\u304c\u30b9\u30c8\u30a2\u306b\u8a18\u8ff0\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308b\u3002\u5b9f\u884c\u6642\u306b\u3053\u306e\u95a2\u6570\u304c\u8ffd\u52a0\u3055\u308c\u308b\u305f\u3081\u3001\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u308b\u6642\u70b9\u3067\u306f\u5c11\u3005\u3001\u982d\u306e\u4e2d\u306b\u30cf\u30c6\u30ca\u304c\u6d6e\u304b\u3076\u3002\u3053\u308c\u306f\u6163\u308c\u308b\u3057\u304b\u306a\u3044\u304b\u3002\n\n\u305f\u3060\u3057\u3001ES6\u304b\u3089\u306f mixin \u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u6a5f\u80fd\u304c React \u304b\u3089\u843d\u3068\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u4eca\u5f8c\u306f\u5225\u306e\u624b\u6bb5\u3067\u554f\u984c\u89e3\u6c7a\u3059\u308b\u306e\u304c\u4e3b\u6d41\u3068\u306a\u308b\u3002\n\n### HOC (High Order Component) \u306b\u89e6\u308c\u305f\n\u5225\u306e\u624b\u6bb5\u3068\u3044\u3046\u306e\u304c\u3001\u3053\u306e HOC \u306e\u3053\u3068\u3067\u3001\u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u306b\u66f8\u3044\u3066\u3042\u308b\u3002\n[Mixins are Dead.](https://medium.com/@dan_abramov/mixins-are-dead-long-live-higher-order-components-94a0d2f9e750#.6bo9kqbzl)\n\nHOC\u306e\u7279\u5fb4\u306f\u5408\u6210\u3067\u3001React \u3067\u306f\u3042\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8d77\u70b9\u3068\u3057\u3066\u3001\u65b0\u305f\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f5c\u308b\u3053\u3068\u3092\u6307\u3059\u3002\u3053\u306e\u5408\u6210\u306f\u7e70\u308a\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u70b9\u3082\u5229\u70b9\u3068\u3057\u3066\u3042\u3052\u3089\u308c\u308b\u3002\n\n\u3068\u3053\u308d\u3067\u3001\u3082\u3068\u3082\u3068 mixin \u3084 HOC \u306f\u3001React\u306b\u304a\u3044\u3066\u306f\u5927\u304d\u304f2\u3064\u306e\u91cd\u8981\u306a\u5f79\u5272\u3092\u62c5\u3063\u3066\u3044\u308b\u3002\n\n* \u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u95a2\u6570\u3092\u63d0\u4f9b\u3059\u308b\n* \u5171\u901a\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u95a2\u6570( lifecycle hook )\u3092\u63d0\u4f9b\u3059\u308b\n\n\u305d\u306e\u969b\u306b\u3001mixin\u306e\u6301\u3064\u6b21\u306e\u3088\u3046\u306a\u8ab2\u984c\u3092\u89e3\u6d88\u3059\u308b\u671f\u5f85\u3092\u6301\u305f\u308c\u3066\u3044\u308b\u306e\u304c HOC \u3068\u3044\u3046\u3053\u3068\u3060\u3002\n\n* mixin \u3068\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u306e\u4f9d\u5b58\u95a2\u4fc2\u304c\u6697\u9ed9\u7684\n* \u4e00\u3064\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b mixin \u3092\u591a\u7528\u3059\u308b\u3068\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\n* mixin \u306f\u3001\u672c\u6765\u3067\u304d\u308b\u9650\u308a\u5c11\u306a\u304f\u3059\u3079\u304d`state`\u3092\u5897\u3084\u3059\u50be\u5411\u304c\u3042\u308b\n* \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u8907\u96d1\u306b\u3059\u308b\n\n> React\u6e96\u62e0\u3067\u30c9\u30e9\u30c3\u30b0\u30a2\u30f3\u30c9\u30c9\u30ed\u30c3\u30d7\u3092\u5236\u5fa1\u3059\u308b[React DnD](https://gaearon.github.io/react-dnd/)\u3082\u4f3c\u305f\u3088\u3046\u306a\u4f5c\u308a\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n\n### \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\u307e\u3060\u66f8\u3044\u3066\u3044\u306a\u3044\u30fb\u30fb\u3002\n\n## \u307e\u3060\u3061\u3087\u3063\u3068\u7406\u89e3\u304c\u8ffd\u3044\u3064\u3044\u3066\u3044\u306a\u3044\u3053\u3068\n. BootStrap/Snapshot \u306a\u3069\u306eAPI\n. Isomorphic \u306a alt \u306e\u5229\u7528\u30b7\u30fc\u30f3\n. [altjs\u306e\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/alt)\u306e\u4f7f\u3044\u65b9\n\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nhttps://github.com/rooooomania/new-todo\n\n> https://facebook.github.io/react/docs/flux-todo-list.html\n\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u30b3\u30fc\u30c9\u3092\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u4fee\u6b63\u3057\u3066\u3044\u3063\u305f\u3002\n\n> 1. ES6\u5316\n> 1. alt \u306e\u9069\u7528\n\n\n"}