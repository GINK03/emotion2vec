{"tags": ["Java", "Stream"], "context": " More than 1 year has passed since last update.\u3059\u3050\u5fd8\u308c\u308b\u306e\u3067\u30e1\u30e2\u3002\nid\u304c\u91cd\u8907\u3059\u308b\u3068java.lang.IllegalStateException: Duplicate key\u304c\u767a\u751f\u3059\u308b\u306e\u3067\u6ce8\u610f\u3002\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.function.UnaryOperator;\nimport java.util.stream.Collectors;\n\n\npublic class ListToMapSample {\n    public static void main(String[] args) {\n        List<Foo> fooList = new ArrayList<>();\n        fooList.add(new Foo(123, \"aiueo\"));\n        fooList.add(new Foo(234, \"ateawgareg\"));\n        fooList.add(new Foo(456, \"faaewfgwaiaef\"));\n\n        Map<Integer, Foo> map = fooList.stream()\n                .collect(Collectors.toMap(Foo::getId, UnaryOperator.identity()));\n        System.out.println(map);\n    }\n\n    private static class Foo {\n        private int id;\n        private String name;\n        public Foo(int id, String name) {\n            this.id = id;\n            this.name = name;\n        }\n\n        public int getId() {\n            return id;\n        }\n\n        public String toString() {\n            return \"{id:\" + id + \", name:\" + name + \"}\";\n        }\n    }\n}\n\n\n{456={id:456, name:faaewfgwaiaef}, 234={id:234, name:ateawgareg}, 123={id:123, name:aiueo}}\n\n\n\u3059\u3050\u5fd8\u308c\u308b\u306e\u3067\u30e1\u30e2\u3002\n\nid\u304c\u91cd\u8907\u3059\u308b\u3068`java.lang.IllegalStateException: Duplicate key`\u304c\u767a\u751f\u3059\u308b\u306e\u3067\u6ce8\u610f\u3002\n\n```java\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.function.UnaryOperator;\nimport java.util.stream.Collectors;\n\n\npublic class ListToMapSample {\n\tpublic static void main(String[] args) {\n\t\tList<Foo> fooList = new ArrayList<>();\n\t\tfooList.add(new Foo(123, \"aiueo\"));\n\t\tfooList.add(new Foo(234, \"ateawgareg\"));\n\t\tfooList.add(new Foo(456, \"faaewfgwaiaef\"));\n\t\t\n\t\tMap<Integer, Foo> map = fooList.stream()\n\t\t\t\t.collect(Collectors.toMap(Foo::getId, UnaryOperator.identity()));\n\t\tSystem.out.println(map);\n\t}\n\t\n\tprivate static class Foo {\n\t\tprivate int id;\n\t\tprivate String name;\n\t\tpublic Foo(int id, String name) {\n\t\t\tthis.id = id;\n\t\t\tthis.name = name;\n\t\t}\n\t\t\n\t\tpublic int getId() {\n\t\t\treturn id;\n\t\t}\n\t\t\n\t\tpublic String toString() {\n\t\t\treturn \"{id:\" + id + \", name:\" + name + \"}\";\n\t\t}\n\t}\n}\n\n```\n\n```stdout\n{456={id:456, name:faaewfgwaiaef}, 234={id:234, name:ateawgareg}, 123={id:123, name:aiueo}}\n```\n"}