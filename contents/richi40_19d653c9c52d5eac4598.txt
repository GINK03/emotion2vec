{"context": "\n\n\u3068\u308a\u3042\u3048\u305a\u5b8c\u6210\u3057\u307e\u3057\u305f\u3002\nNginx\u306f\u5168\u7136\u89e6\u3063\u305f\u3053\u3068\u304c\u306a\u3044\u306e\u3067\u3001\u89e6\u308b\u6a5f\u4f1a\u304c\u3042\u308c\u3070\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u3053\u306eDockerfile\u3067chainer GPU\u3001Stan\u3001server Juman++\u3001monary mongo\u7b49\u304cpython\u304b\u3089\u76f4\u3050\u306b\u4f7f\u3048\u307e\u3059\u3002\n\u5927\u5909\u3067\u3057\u305f\u3002\u8272\u3005\u3084\u308a\u3053\u306eDockerfile\u306b\u843d\u3061\u7740\u304d\u307e\u3057\u305f\u3002\u3053\u308c\u3067OS\u304c\u7acb\u3061\u4e0a\u304c\u3089\u306a\u304f\u306a\u3063\u3066\u3082\u3001\u76f4\u3050\u306b\u5206\u6790\u74b0\u5883\u3092\u5fa9\u5143\u3067\u304d\u307e\u3059\u3002\nimage \u3092 docker hub\u306bput\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001image\u304c\u30c7\u30ab\u3059\u304e\u308b\u306e\u3067\u3084\u3081\u307e\u3057\u305f\u3002\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306fdocker\u3078\u306e\u30c7\u30a3\u30b9\u30af\u5272\u5f53\u3092\u591a\u304f\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3059\u308c\u3070\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nhttp://stackoverflow.com/questions/33784295/setting-dns-for-docker-daemon-on-os-with-systemd\nhttp://qiita.com/dempasong/items/fafa4b1fe1fc8d9f452d\n/var/lib/docker\u306e\u524a\u9664\u306f\u76f2\u70b9\u306b\u306a\u308a\u3084\u3059\u3044\u306e\u3067\u3001\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\ngithub\nhttps://github.com/richi40/plenty\n\nDockerfile\n# ---------------------\n# hostos is centos7.3\n# ---------------------\n\nFROM nvidia/cuda:8.0-cudnn5-devel-centos7\n\n# ------------\n# adding user\n# ------------\n#RUN useradd -m plenty\n#RUN echo \"plenty ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\nWORKDIR /home/plenty\n#USER plenty\n\n# ---------------------------------\n# install packages on centos\n# ---------------------------------\nRUN yum -y install epel-release && yum clean all\nRUN yum -y update && yum clean all\nRUN yum -y install wget sudo vim python-pip && yum clean all\nRUN pip install --upgrade pip\n\n# --------------\n# install pyenv\n# --------------\nRUN yum -y install gcc zlib-devel bzip2 bzip2-devel readline readline-devel \\\n                   sqlite sqlite-devel openssl openssl-devel git && yum clean all\nRUN git clone git://github.com/yyuu/pyenv.git .pyenv\nENV HOME /home/plenty\nENV PYENV_ROOT $HOME/.pyenv\nENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH\n\n# ------------------------\n# install juman++ server\n# ------------------------\nRUN rpm -ivh http://packages.groonga.org/centos/groonga-release-1.1.0-1.noarch.rpm\nRUN yum -y install mecab mecab-devel mecab-ipadic && yum clean all\n\nRUN wget -O juman7.0.1.tar.bz2 \"http://nlp.ist.i.kyoto-u.ac.jp/DLcounter/lime.cgi?down=http://nlp.ist.i.kyoto-u.ac.jp/nl-resource/juman/juman-7.01.tar.bz2&name=juman-7.01.tar.bz2\"\nRUN bzip2 -dc juman7.0.1.tar.bz2  | tar xvf -\nRUN cd juman-7.01 && ./configure && make && make install\n\nRUN yum -y install python-devel && yum clean all\nRUN wget https://sourceforge.net/projects/boost/files/boost/1.62.0/boost_1_62_0.tar.gz\nRUN tar xvzf boost_1_62_0.tar.gz\nRUN cd boost_1_62_0 && sh bootstrap.sh && ./b2 install -j2\n\nRUN yum -y install ruby \nRUN wget http://lotus.kuee.kyoto-u.ac.jp/nl-resource/jumanpp/jumanpp-1.01.tar.xz\nRUN tar xJvf jumanpp-1.01.tar.xz\nRUN cd jumanpp-1.01/ && ./configure && make && make install\nRUN sed -i -e \"s/\\('command'=>'jumanpp',\\)/\\1 'host'=>'localhost',/g\" ./jumanpp-1.01/script/server.rb\nRUN echo 'ruby jumanpp-1.01/script/server.rb --cmd \"jumanpp -B 5\" &' >> .bashrc\n\nENV LIBRARY_PATH /usr/lib64:$LIBRARY_PATH \nRUN yum -y install make\nRUN wget http://www.phontron.com/kytea/download/kytea-0.4.7.tar.gz\nRUN tar -xvf kytea-0.4.7.tar.gz\nRUN cd kytea-0.4.7 && ./configure && make && make install\nRUN pip install kytea\n\n# ------------------------\n# install mongodb\n# ------------------------\nRUN echo -e \"[mongodb-org-3.4]\\nname=MongoDB Repository\\nbaseurl=https://repo.mongodb.org/yum/redhat/\\$releasever/mongodb-org/3.4/x86_64/\\ngpgcheck=1\\nenabled=1\\ngpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc\" > /etc/yum.repos.d/mongodb-org-3.4.repo\nRUN yum -y install mongodb-org\nRUN mkdir -p data/db\nRUN echo '/usr/bin/mongod --dbpath /home/plenty/data/db &' >> .bashrc\n\n# ----------------\n# install python3\n# ----------------\nRUN yum -y install libX11-devel libXext-devel libXdmcp-devel\nRUN pyenv install anaconda3-4.2.0\nRUN pyenv global anaconda3-4.2.0\nRUN pyenv rehash\nRUN pip install --upgrade pip\nRUN sed -i -e \"s/Qt5Agg/Agg/g\" .pyenv/versions/anaconda3-4.2.0/lib/python3.5/site-packages/matplotlib/mpl-data/matplotlibrc\nRUN sed -i -e \"s/Qt5Agg/Agg/g\" .pyenv/versions/anaconda3-4.2.0/pkgs/matplotlib-1.5.3-np111py35_0/lib/python3.5/site-packages/matplotlib/mpl-data/matplotlibrc\n\n# --------------------------------\n# install modules on python\n# --------------------------------\nRUN yum -y install libxml2-devel libffi-devel python-devel libxslt-devel\nRUN pip install scrapy\nRUN pip install chainer\nRUN pip install seaborn\nRUN pip install -U scikit-learn\nRUN pip install pystan\nRUN pip install pymongo\nRUN pip install nimfa\n\nRUN wget https://github.com/mongodb/mongo-c-driver/releases/download/1.5.3/mongo-c-driver-1.5.3.tar.gz\nRUN tar xzf mongo-c-driver-1.5.3.tar.gz\nRUN cd mongo-c-driver-1.5.3 && ./configure && make && make install\nRUN yum -y install cyrus-sasl-devel\nENV LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH\nRUN pip install monary\n\n# -----------------\n# setting japanese\n# -----------------\nRUN yum -y reinstall glibc-common && yum clean all\nRUN localedef -v -c -i ja_JP -f UTF-8 ja_JP.UTF-8; echo \"\";\nENV LANG ja_JP.UTF-8\nRUN rm -f /etc/localtime\nRUN ln -fs /usr/share/zoneinfo/Asia/Tokyo /etc/localtime\n\nRUN pip install JapaneseTokenizer\n\n# ------------------\n# entry point\n# ------------------\nRUN echo 'export HOME=/share' >> .bashrc\nRUN echo 'cd $HOME' >> .bashrc\nENTRYPOINT [\"/bin/bash\"]\n\n\n#\u3068\u308a\u3042\u3048\u305a\u5b8c\u6210\u3057\u307e\u3057\u305f\u3002\n\nNginx\u306f\u5168\u7136\u89e6\u3063\u305f\u3053\u3068\u304c\u306a\u3044\u306e\u3067\u3001\u89e6\u308b\u6a5f\u4f1a\u304c\u3042\u308c\u3070\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u3053\u306eDockerfile\u3067chainer GPU\u3001Stan\u3001server Juman++\u3001monary mongo\u7b49\u304cpython\u304b\u3089\u76f4\u3050\u306b\u4f7f\u3048\u307e\u3059\u3002\n\n\u5927\u5909\u3067\u3057\u305f\u3002\u8272\u3005\u3084\u308a\u3053\u306eDockerfile\u306b\u843d\u3061\u7740\u304d\u307e\u3057\u305f\u3002\u3053\u308c\u3067OS\u304c\u7acb\u3061\u4e0a\u304c\u3089\u306a\u304f\u306a\u3063\u3066\u3082\u3001\u76f4\u3050\u306b\u5206\u6790\u74b0\u5883\u3092\u5fa9\u5143\u3067\u304d\u307e\u3059\u3002\n\nimage \u3092 docker hub\u306bput\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001image\u304c\u30c7\u30ab\u3059\u304e\u308b\u306e\u3067\u3084\u3081\u307e\u3057\u305f\u3002\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306fdocker\u3078\u306e\u30c7\u30a3\u30b9\u30af\u5272\u5f53\u3092\u591a\u304f\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3059\u308c\u3070\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nhttp://stackoverflow.com/questions/33784295/setting-dns-for-docker-daemon-on-os-with-systemd\n\nhttp://qiita.com/dempasong/items/fafa4b1fe1fc8d9f452d\n\n/var/lib/docker\u306e\u524a\u9664\u306f\u76f2\u70b9\u306b\u306a\u308a\u3084\u3059\u3044\u306e\u3067\u3001\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\ngithub\nhttps://github.com/richi40/plenty\n\n```:Dockerfile\n# ---------------------\n# hostos is centos7.3\n# ---------------------\n\nFROM nvidia/cuda:8.0-cudnn5-devel-centos7\n\n# ------------\n# adding user\n# ------------\n#RUN useradd -m plenty\n#RUN echo \"plenty ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\nWORKDIR /home/plenty\n#USER plenty\n\n# ---------------------------------\n# install packages on centos\n# ---------------------------------\nRUN yum -y install epel-release && yum clean all\nRUN yum -y update && yum clean all\nRUN yum -y install wget sudo vim python-pip && yum clean all\nRUN pip install --upgrade pip\n\n# --------------\n# install pyenv\n# --------------\nRUN yum -y install gcc zlib-devel bzip2 bzip2-devel readline readline-devel \\\n                   sqlite sqlite-devel openssl openssl-devel git && yum clean all\nRUN git clone git://github.com/yyuu/pyenv.git .pyenv\nENV HOME /home/plenty\nENV PYENV_ROOT $HOME/.pyenv\nENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH\n\n# ------------------------\n# install juman++ server\n# ------------------------\nRUN rpm -ivh http://packages.groonga.org/centos/groonga-release-1.1.0-1.noarch.rpm\nRUN yum -y install mecab mecab-devel mecab-ipadic && yum clean all\n\nRUN wget -O juman7.0.1.tar.bz2 \"http://nlp.ist.i.kyoto-u.ac.jp/DLcounter/lime.cgi?down=http://nlp.ist.i.kyoto-u.ac.jp/nl-resource/juman/juman-7.01.tar.bz2&name=juman-7.01.tar.bz2\"\nRUN bzip2 -dc juman7.0.1.tar.bz2  | tar xvf -\nRUN cd juman-7.01 && ./configure && make && make install\n\nRUN yum -y install python-devel && yum clean all\nRUN wget https://sourceforge.net/projects/boost/files/boost/1.62.0/boost_1_62_0.tar.gz\nRUN tar xvzf boost_1_62_0.tar.gz\nRUN cd boost_1_62_0 && sh bootstrap.sh && ./b2 install -j2\n\nRUN yum -y install ruby \nRUN wget http://lotus.kuee.kyoto-u.ac.jp/nl-resource/jumanpp/jumanpp-1.01.tar.xz\nRUN tar xJvf jumanpp-1.01.tar.xz\nRUN cd jumanpp-1.01/ && ./configure && make && make install\nRUN sed -i -e \"s/\\('command'=>'jumanpp',\\)/\\1 'host'=>'localhost',/g\" ./jumanpp-1.01/script/server.rb\nRUN echo 'ruby jumanpp-1.01/script/server.rb --cmd \"jumanpp -B 5\" &' >> .bashrc\n\nENV LIBRARY_PATH /usr/lib64:$LIBRARY_PATH \nRUN yum -y install make\nRUN wget http://www.phontron.com/kytea/download/kytea-0.4.7.tar.gz\nRUN tar -xvf kytea-0.4.7.tar.gz\nRUN cd kytea-0.4.7 && ./configure && make && make install\nRUN pip install kytea\n\n# ------------------------\n# install mongodb\n# ------------------------\nRUN echo -e \"[mongodb-org-3.4]\\nname=MongoDB Repository\\nbaseurl=https://repo.mongodb.org/yum/redhat/\\$releasever/mongodb-org/3.4/x86_64/\\ngpgcheck=1\\nenabled=1\\ngpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc\" > /etc/yum.repos.d/mongodb-org-3.4.repo\nRUN yum -y install mongodb-org\nRUN mkdir -p data/db\nRUN echo '/usr/bin/mongod --dbpath /home/plenty/data/db &' >> .bashrc\n\n# ----------------\n# install python3\n# ----------------\nRUN yum -y install libX11-devel libXext-devel libXdmcp-devel\nRUN pyenv install anaconda3-4.2.0\nRUN pyenv global anaconda3-4.2.0\nRUN pyenv rehash\nRUN pip install --upgrade pip\nRUN sed -i -e \"s/Qt5Agg/Agg/g\" .pyenv/versions/anaconda3-4.2.0/lib/python3.5/site-packages/matplotlib/mpl-data/matplotlibrc\nRUN sed -i -e \"s/Qt5Agg/Agg/g\" .pyenv/versions/anaconda3-4.2.0/pkgs/matplotlib-1.5.3-np111py35_0/lib/python3.5/site-packages/matplotlib/mpl-data/matplotlibrc\n\n# --------------------------------\n# install modules on python\n# --------------------------------\nRUN yum -y install libxml2-devel libffi-devel python-devel libxslt-devel\nRUN pip install scrapy\nRUN pip install chainer\nRUN pip install seaborn\nRUN pip install -U scikit-learn\nRUN pip install pystan\nRUN pip install pymongo\nRUN pip install nimfa\n\nRUN wget https://github.com/mongodb/mongo-c-driver/releases/download/1.5.3/mongo-c-driver-1.5.3.tar.gz\nRUN tar xzf mongo-c-driver-1.5.3.tar.gz\nRUN cd mongo-c-driver-1.5.3 && ./configure && make && make install\nRUN yum -y install cyrus-sasl-devel\nENV LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH\nRUN pip install monary\n\n# -----------------\n# setting japanese\n# -----------------\nRUN yum -y reinstall glibc-common && yum clean all\nRUN localedef -v -c -i ja_JP -f UTF-8 ja_JP.UTF-8; echo \"\";\nENV LANG ja_JP.UTF-8\nRUN rm -f /etc/localtime\nRUN ln -fs /usr/share/zoneinfo/Asia/Tokyo /etc/localtime\n\nRUN pip install JapaneseTokenizer\n\n# ------------------\n# entry point\n# ------------------\nRUN echo 'export HOME=/share' >> .bashrc\nRUN echo 'cd $HOME' >> .bashrc\nENTRYPOINT [\"/bin/bash\"]\n```\n", "tags": ["centos7", "nvidia-docker", "Chainer", "Stan", "juman++"]}