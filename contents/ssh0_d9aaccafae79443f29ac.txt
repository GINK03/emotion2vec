{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u666e\u6bb5\u304b\u3089\u8907\u6570\u30de\u30b7\u30f3\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u5171\u6709\u3057\u305f\u3044\u3053\u3068\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002\u7c21\u5358\u306a\u65b9\u6cd5\u3068\u3057\u3066GitHub\u306bdotfiles\u3068\u3057\u3066\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u7fa4\u3092\u4e0a\u3052\u3066\u304a\u3044\u3066\u3001\u5fc5\u8981\u306a\u3068\u304d\u306bpull\u3057\u3066\u304d\u3066\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u5f35\u308b\u3068\u3044\u3046\u306e\u304c\u666e\u901a\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b?\n\u4eca\u3069\u304d\u6d41\u884c\u308a\u306e\u30c4\u30fc\u30eb\u3092\u5165\u308c\u3066\u52dd\u624b\u306b\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u5f35\u3063\u3066\u3082\u3089\u3046\u3084\u308a\u65b9\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u304c\u3001\u7d50\u5c40\u305d\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304f\u3053\u3068\u306b\u8ffd\u308f\u308c\u308b\u3060\u308d\u3046\u306a\u3041\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u521d\u3081\u306bdotfiles\u5185\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u914d\u7f6e\u3059\u308b\u4f4d\u7f6e\u306e\u95a2\u4fc2\u3092\u66f8\u3044\u3066\u304a\u3044\u3066\u3001\u305d\u308c\u3092\u53c2\u7167\u3057\u3066\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u5f35\u3063\u3066\u3044\u304f\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4f7f\u3044\u65b9\n\u4f7f\u3044\u65b9\u306f\u7c21\u5358\u3067\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30ebsetup_config_link\u306b\u30ea\u30f3\u30af\u306e\u5bfe\u5fdc\u3092\u8f09\u305b\u3066\u304a\u3044\u305f\u72b6\u614b\u3067(\u4e88\u3081\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059)\u3001setup.sh\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3059\u3002\u8a72\u5f53\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u7121\u3044\u5834\u5408\u306b\u306f\u3001\u305d\u3053\u307e\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u304b\u805e\u3044\u3066\u304b\u3089\u4f5c\u6210\u3057\u305f\u308a\u3001\u3059\u3067\u306b\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u304c\u5f35\u3063\u3066\u3042\u308b\u6642\u306b\u306f\u7121\u8996\u3057\u305f\u308a\u3001\u3059\u3067\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306b\u306f\u3001\u305d\u306e\u5dee\u5206\u3092\u8868\u793a\u3059\u308b\u304b\u3001\u5f37\u5236\u7684\u306b\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u5f35\u308b\u304b\u3001\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u30ea\u30f3\u30af\u3092\u5f35\u308b\u304b\u3001\u4f55\u3082\u3057\u306a\u3044\u304b\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n(\u8ffd\u8a18: 2015/05/23)\n\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u3066\u3001\u7d50\u5c40\u4e00\u756a\u9762\u5012\u306a\u306e\u306f\u30c9\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u767b\u9332\u3059\u308b\u64cd\u4f5c\u306a\u306e\u3060\u3068\u6c17\u304c\u3064\u3044\u305f\u306e\u3067\u3001\u7c21\u5358\u306a\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304d\u307e\u3059(dotmv)\u3002\u4efb\u610f\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(\u4eca\u306e\u3068\u3053\u308d\u30db\u30fc\u30e0\u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059)\u5185\u3067\u3001\n$ dotmv hoge.config\n\n\u3082\u3057\u304f\u306f\n$ dotmv -m \"for application hoge\" hoge.config\n\n\u306a\u3069\u3068\u3059\u308c\u3070\u3001dotfiles\u76f4\u4e0b\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u79fb\u52d5\u3055\u308c\u3001\u305d\u308c\u307e\u3067\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u3063\u305f\u4f4d\u7f6e\u306b\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u304c\u5f35\u3089\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u5225\u306e\u30de\u30b7\u30f3\u3067\u3082\u540c\u3058\u64cd\u4f5c\u3092\u3059\u308b\u305f\u3081\u306b\u3001setup_config_link\u306e\u6700\u5f8c\u306b\u5bfe\u5fdc\u95a2\u4fc2\u3092\u8ffd\u8a18\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u30aa\u30d7\u30b7\u30e7\u30f3-m\u3092\u3064\u3051\u308c\u3070\u3001\u30ea\u30f3\u30af\u306b\u3064\u3044\u3066\u30b3\u30e1\u30f3\u30c8\u3092\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\n\u4ee5\u4e0b\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u5168\u4f53\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u304c\u3001\u96e3\u3057\u3044\u3053\u3068\u8003\u3048\u305a\u306b\u4f7f\u3044\u305f\u3044\u4eba\u306f\u3001GitHub\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u306a\u3089\n$ curl https://raw.githubusercontent.com/ssh0/dotfiles/master/setup.sh -o setup.sh\n$ curl https://raw.githubusercontent.com/ssh0/dotfiles/master/setup_config_link -o setup_config_link\n$ curl https://raw.githubusercontent.com/ssh0/dotfiles/master/bin/dotmv ~/bin/dotmv\n\n\u3082\u3057\u304f\u306f\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u8868\u793a\u3057\u3066\u30b3\u30d4\u30da\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n- setup.sh\n- setup_config_link\n- dotmv\n\nsetup.sh\n#!/bin/sh\n# written by Shotaro Fujimoto (https://github.com/ssh0)\n# read link configuration from ./setup_config_link\n\ndotdir=$(cd \"$(dirname \"$0\")\"; pwd)\nhome=$HOME\n\nred=31\n# green=32\nyellow=33\n# blue=34\n# cyan=36\n\ncecho() {\n  color=$1\n  shift\n  echo \"\\033[${color}m$@\\033[m\"\n}\n\ninfo() {\n  # verbose confirmation\n  echo \"\"\n  echo \"${1} -> ${2}\"\n}\n\nfor l in $(grep -Ev '^#' setup_config_link | grep -Ev '^$'); do\n    dotfile=\"${dotdir}/$(echo \"$l\" | awk 'BEGIN {FS=\",\"; }  { print $1; }')\"\n    orig=\"${home}/$(echo \"$l\" | awk 'BEGIN {FS=\",\"; }  { print $2; }')\"\n  if [ ! -e \"${dotfile}\" ]; then\n    echo \"\"\n    cecho $red \"dotfile '${dotfile}' doesn't exist.\"\n    continue\n  fi\n\n  # if dir is not exist: mkdir\n  origdir=$(dirname \"${orig}\")\n  if [ ! -d \"${origdir}\" ]; then\n    info \"${dotfile}\" \"${orig}\"\n    flag=false\n    cecho $red \"'${origdir}' doesn't exist.\"\n    echo \"[message] mkdir '${origdir}'? (y/n):\"\n    while read yn; do\n      case $yn in\n        [Yy] ) mkdir -p \"${origdir}\"; break ;;\n        [Nn] ) flag=true; break ;;\n        * ) echo \"Please answer with y or n.\" ;;\n      esac\n    done\n    if $flag; then\n      continue\n    fi\n  fi\n\n  # if file already exists: open interaction menu\n  if [ -e \"${orig}\" ]; then\n    if [ -L \"${orig}\" ]; then\n      continue\n    else\n      info \"${dotfile}\" \"${orig}\"\n      cecho $yellow \"file or directory already exists.\"\n      while true; do\n        echo \"(d):show diff, (f):overwrite, (b):make backup, (n):do nothing\"\n        read line\n        case $line in\n          [Dd] ) diff -u \"${dotfile}\" \"${orig}\"\n            echo \"\" ;;\n          [Ff] ) if [ -d \"${orig}\" ]; then\n                    rm -r \"${orig}\"\n                  else\n                    rm \"${orig}\"\n                  fi\n                  echo \"'${orig}' -> '${dotfile}'\"\n                  ln -s \"${dotfile}\" \"${orig}\"\n                  break ;;\n          [Bb] ) ln -sbv --suffix '.orig' \"${dotfile}\" \"${orig}\"\n            break ;;\n          [Nn] ) break ;;\n          # ? ) echo \"Please answer with d, f, b or n.\" ;;\n        esac\n      done\n    fi\n  else\n    # otherwise make symbolic file normally\n    echo \"'${orig}' -> '${dotfile}'\"\n    ln -si \"${dotfile}\" \"${orig}\"\n  fi\ndone\n\n\n\nsetup_config_link\n#!/bin/sh <- this is for easy writing with editor.\n# This file is config file for setup.sh\n# You can comment out by adding \"#\" at the beginning of the line.\n# And an empty line is ignored by setup.sh.\n#\n# Format:\n# <dotfile>,<linkto>\n#\n# the script automatically add directory information to the file path.\n# So, you should write like below\n#     .vimrc,.vimrc\n\n# ~/.Xmodmap:\n# xmodmap is a utility for modifying keymaps and pointing button mappings in Xorg.\n.Xmodmap,.Xmodmap\n\n# ~/.Xdefaults\n.Xdefaults,.Xdefaults\n\n# ~/.Xresources:\n# Xresources is a user-level configuration dotfile\n# https://wiki.archlinux.org/index.php/X_resources#XScreenSaver_resources\n.Xresources,.Xresources\n\n# ~/.xscreensaver:\n# XScreenSaver Preferences File\n.xscreensaver,.xscreensaver\n\n# ~/.profile:\n# executed by the command interpreter for login shells.\n.profile,.profile\n\n# [vim](http://www.vim.org/):\n# Vim is an advanced text editor that seeks to provide the power of the de-facto\n# Unix editor 'Vi', with a more complete feature set.\nvimfiles/vimrc,.vimrc\nvimfiles/ftplugin/tex_quickrun.vim,.vim/ftplugin/tex_quickrun.vim\nvimfiles/ftplugin/markdown_quickrun.vim,.vim/ftplugin/markdown_quickrun.vim\n# markdown template\nvimfiles/template/template.md,.vim/template/template.md\nvimfiles/template/template.mkd,.vim/template/template.mkd\n# Tex template\nvimfiles/template/template.tex,.vim/template/template.tex\n# Python template\nvimfiles/template/template.py,.vim/template/template.py\n# Shell script template\nvimfiles/template/template.sh,.vim/template/template.sh\n\n# [zsh](http://zsh.sourceforge.net/):\n# Zsh is a shell designed for interactive use, although it is also a powerful\n# scripting language.\nzshfiles/zshrc,.zshrc\nzshfiles/zshrc.mine,.zshrc.mine\nzshfiles/aliases.mine,.aliases.mine\nzshfiles/aliases.zsh,.oh-my-zsh/lib/aliases.zsh\nzshfiles/themes/agnoster.zsh-theme,.oh-my-zsh/themes/agnoster.zsh-theme\nzshfiles/history.zsh,.oh-my-zsh/lib/history.zsh\n\n# [ranger](http://ranger.nongnu.org/):\n# ranger is a file manager with VI key bindings.\nranger/colorschemes/mycolor.py,.config/ranger/colorschemes/mycolor.py\nranger/rc.conf,.config/ranger/rc.conf\nranger/rifle.conf,.config/ranger/rifle.conf\nranger/scope.sh,.config/ranger/scope.sh\nranger/commands.py,.config/ranger/commands.py\n\n# [compton](https://github.com/chjj/compton):\n# Compton is a compositor for X, and a fork of xcompmgr-dana.\ncompton/compton.conf,.config/compton/compton.conf\n\n# [ipython](http://ipython.org/):\n# IPython provides a rich architecture for interactive computing with:\n#     - Powerful interactive shells (terminal and Qt-based).\n#     - A browser-based notebook with support for code, rich text, mathematical\n#       expressions, inline plots and other rich media.\n#     - Support for interactive data visualization and use of GUI toolkits.\n#     - Flexible, embeddable interpreters to load into your own projects.\n#     - Easy to use, high performance tools for parallel computing.\nipython/nbextensions/livereveal/main.css,.ipython/nbextensions/livereveal/main.css\nipython/profile_default/static/custom/custom.css,.ipython/profile_default/static/custom/custom.css\nipython/profile_slide/static/custom/custom.css,.ipython/profile_slide/static/custom/custom.css\nipython/nbextensions/livereveal/main.css,ipython/nbextensions/livereveal/main.css\nipython/profile_default/static/custom/custom.css,ipython/profile_default/static/custom/custom.css\nipython/profile_slide/static/custom/custom.css,ipython/profile_slide/static/custom/custom.css\n\n# [tudu](http://cli-apps.org/content/show.php/TuDu?content=129325):\n# TuDu is a comand line interface to manage hierarchical todos. Each task has a\n# title, a long text description, a deadline (tudu warns you when the date is\n# close), and a scheduled date. There are categories and priorities.\ntudurc,.tudurc\n\n# [latexmk](http://www.ctan.org/pkg/latexmk/):\n# Latexmk completely automates the process of generating a LaTeX document.\n.latexmkrc,.latexmkrc\n\n# [notify-osd](https://wiki.ubuntu.com/NotifyOSD):\n# Canonical's on-screen-display notification agent, implementing the\n# freedesktop.org Desktop Notifications Specification with semi-transparent\n# click-through bubbles.\n.notify-osd,.notify-osd\n\n# [vimperator](https://addons.mozilla.org/ja/firefox/addon/vimperator/):\n# Make Firefox look and behave like Vim\n.vimperatorrc,.vimperatorrc\n\n# [mpv](http://mpv.io/):\n# mpv is a fork of mplayer2 and MPlayer. It shares some features with the former\n# projects while introducing many more.\n.mpv,.mpv\n\n# [cmus](https://cmus.github.io/):\n# cmus is a small, fast and powerful console music player for Unix-like\n# operating systems.\ncmus,.cmus\n\n# [mutt](http://www.mutt.org/):\n# E-Mail Client\nmutt/muttrc,.mutt/muttrc\n\n# [xmonad](http://xmonad.org/):\n# xmonad is a dynamically tiling X11 window manager that is written and\n# configured in Haskell. In a normal WM, you spend half your time aligning and\n# searching for windows. xmonad makes work easier, by automating this.\n.xmonad/xmonad.hs,.xmonad/xmonad.hs\n.xmonad/xmobarrc,.xmonad/xmobarrc\n\n\n\ndotmv\n#!/bin/sh\n#\nset -e\n\nusage() {\n  echo \"Move the file to dotfiles dir, make the link, and edit setup config\"\n  echo \"Usage: $0 [OPTION] SOURCE DEST(must be set into dotfiles)\"\n  echo \"\"\n  echo \"OPTION:\"\n  echo \"  -m: Add your message for setup configuration file.\"\n  echo \"  -h: Show this message.\"\n  exit 1\n}\n\n# TODO: crop $HOME string automatically. (Now it is done manually, so you\n# should replace the below command by your name.)\nhome_pattern='s/\\/home\\/shotaro\\///'\ndotfile_pattern='s/\\/home\\/shotaro\\/\\.dotfiles\\///'\n\n# set dotfiles config file\ndotfiles_config_file=\"$HOME/.dotfiles/setup_config_link\"\n\n# default message\nmessage=\"\"\n\ntrap 'usage' 1 2 3 15\n\n# option handling\nwhile getopts m:h OPT\ndo\n  case $OPT in\n    \"m\" ) message=\"${OPTARG}\";;\n    \"h\" ) usage ;;\n  esac\ndone\n\n# two arguments must be taken\nshift $((OPTIND-1))\nif [ ! $# = 2 ];then\n  usage\n  exit 1\nfi\n\nname=\"$(basename $1)\"\norig=\"$(cd $(dirname $1); pwd)\"/\"${name}\"\ndot=\"$2\"\n\noriginal=\"$(echo \"$orig\" | sed -e \"${home_pattern}\")\"\ndotfile=\"$(echo \"$dot\" | sed -e \"${dotfile_pattern}\")\"\n\n# mv from original path to dotfiles dir\ndotdir=\"$(dirname \"${dot}\")\"\nif [ ! -e \"${dotdir}\" ]; then\n  mkdir -p \"${dotdir}\"\nfi\nmv -i \"$orig\" \"$dot\"\n\n# link to orig path from dotfiles\nln -siv \"$dot\" \"$orig\"\n\n# add the cofigration to the config file.\nif [ ! \"${message}\" = \"\" ]; then\n  echo \"# ${message}\" >> \"${dotfiles_config_file}\"\nfi\necho \"${dotfile},${original}\" >> \"${dotfiles_config_file}\"\n\n# Open config file\nvim + \"${dotfiles_config_file}\"\n\n\n\n\u307e\u3068\u3081\n\u7c21\u5358\u306a\u304c\u3089\u3082\u5fdc\u7528\u306e\u52b9\u304d\u305d\u3046\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u66f8\u3051\u305f\u3002\u81ea\u5206\u306edotfiles\u898b\u306a\u304a\u3057\u3066\u307f\u305f\u3089\u4f7f\u3063\u3066\u306a\u3044\u306e\u3068\u304b\u7d50\u69cb\u3054\u3061\u3083\u3054\u3061\u3083\u3057\u3066\u305f\u304b\u3089\u3001\u3053\u308c\u3092\u6a5f\u306b\u6574\u7406\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u306f\u3058\u3081\u306b\n\n\u666e\u6bb5\u304b\u3089\u8907\u6570\u30de\u30b7\u30f3\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u5171\u6709\u3057\u305f\u3044\u3053\u3068\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002\u7c21\u5358\u306a\u65b9\u6cd5\u3068\u3057\u3066GitHub\u306bdotfiles\u3068\u3057\u3066\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u7fa4\u3092\u4e0a\u3052\u3066\u304a\u3044\u3066\u3001\u5fc5\u8981\u306a\u3068\u304d\u306bpull\u3057\u3066\u304d\u3066\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u5f35\u308b\u3068\u3044\u3046\u306e\u304c\u666e\u901a\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b?\n\u4eca\u3069\u304d\u6d41\u884c\u308a\u306e\u30c4\u30fc\u30eb\u3092\u5165\u308c\u3066\u52dd\u624b\u306b\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u5f35\u3063\u3066\u3082\u3089\u3046\u3084\u308a\u65b9\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u304c\u3001\u7d50\u5c40\u305d\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304f\u3053\u3068\u306b\u8ffd\u308f\u308c\u308b\u3060\u308d\u3046\u306a\u3041\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u521d\u3081\u306bdotfiles\u5185\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u914d\u7f6e\u3059\u308b\u4f4d\u7f6e\u306e\u95a2\u4fc2\u3092\u66f8\u3044\u3066\u304a\u3044\u3066\u3001\u305d\u308c\u3092\u53c2\u7167\u3057\u3066\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u5f35\u3063\u3066\u3044\u304f\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u4f7f\u3044\u65b9\n\n\u4f7f\u3044\u65b9\u306f\u7c21\u5358\u3067\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb`setup_config_link`\u306b\u30ea\u30f3\u30af\u306e\u5bfe\u5fdc\u3092\u8f09\u305b\u3066\u304a\u3044\u305f\u72b6\u614b\u3067(\u4e88\u3081\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059)\u3001setup.sh\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3059\u3002\u8a72\u5f53\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u7121\u3044\u5834\u5408\u306b\u306f\u3001\u305d\u3053\u307e\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u304b\u805e\u3044\u3066\u304b\u3089\u4f5c\u6210\u3057\u305f\u308a\u3001\u3059\u3067\u306b\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u304c\u5f35\u3063\u3066\u3042\u308b\u6642\u306b\u306f\u7121\u8996\u3057\u305f\u308a\u3001\u3059\u3067\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306b\u306f\u3001\u305d\u306e\u5dee\u5206\u3092\u8868\u793a\u3059\u308b\u304b\u3001\u5f37\u5236\u7684\u306b\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u5f35\u308b\u304b\u3001\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u30ea\u30f3\u30af\u3092\u5f35\u308b\u304b\u3001\u4f55\u3082\u3057\u306a\u3044\u304b\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n![optimised.gif](https://qiita-image-store.s3.amazonaws.com/0/54869/28c42ccc-7b4e-b966-4df9-423b485964a1.gif)\n\n**(\u8ffd\u8a18: 2015/05/23)**\n\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u3066\u3001\u7d50\u5c40\u4e00\u756a\u9762\u5012\u306a\u306e\u306f\u30c9\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u767b\u9332\u3059\u308b\u64cd\u4f5c\u306a\u306e\u3060\u3068\u6c17\u304c\u3064\u3044\u305f\u306e\u3067\u3001\u7c21\u5358\u306a\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304d\u307e\u3059([dotmv](https://github.com/ssh0/dotfiles/blob/master/bin/dotmv))\u3002\u4efb\u610f\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(\u4eca\u306e\u3068\u3053\u308d\u30db\u30fc\u30e0\u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059)\u5185\u3067\u3001\n\n```bash\n$ dotmv hoge.config\n```\n\n\u3082\u3057\u304f\u306f\n\n```bash\n$ dotmv -m \"for application hoge\" hoge.config\n```\n\n\u306a\u3069\u3068\u3059\u308c\u3070\u3001dotfiles\u76f4\u4e0b\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u79fb\u52d5\u3055\u308c\u3001\u305d\u308c\u307e\u3067\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u3063\u305f\u4f4d\u7f6e\u306b\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u304c\u5f35\u3089\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u5225\u306e\u30de\u30b7\u30f3\u3067\u3082\u540c\u3058\u64cd\u4f5c\u3092\u3059\u308b\u305f\u3081\u306b\u3001`setup_config_link`\u306e\u6700\u5f8c\u306b\u5bfe\u5fdc\u95a2\u4fc2\u3092\u8ffd\u8a18\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u30aa\u30d7\u30b7\u30e7\u30f3`-m`\u3092\u3064\u3051\u308c\u3070\u3001\u30ea\u30f3\u30af\u306b\u3064\u3044\u3066\u30b3\u30e1\u30f3\u30c8\u3092\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n![optimised.gif](https://qiita-image-store.s3.amazonaws.com/0/54869/f2d2e0ee-ae25-4e5e-8f40-e12dfb546b13.gif)\n\n\n## \u30b9\u30af\u30ea\u30d7\u30c8\n\n\u4ee5\u4e0b\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u5168\u4f53\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u304c\u3001\u96e3\u3057\u3044\u3053\u3068\u8003\u3048\u305a\u306b\u4f7f\u3044\u305f\u3044\u4eba\u306f\u3001GitHub\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u306a\u3089\n\n```bash\n$ curl https://raw.githubusercontent.com/ssh0/dotfiles/master/setup.sh -o setup.sh\n$ curl https://raw.githubusercontent.com/ssh0/dotfiles/master/setup_config_link -o setup_config_link\n$ curl https://raw.githubusercontent.com/ssh0/dotfiles/master/bin/dotmv ~/bin/dotmv\n```\n\n\n\u3082\u3057\u304f\u306f\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u8868\u793a\u3057\u3066\u30b3\u30d4\u30da\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n- [setup.sh](https://raw.githubusercontent.com/ssh0/dotfiles/master/setup.sh)\n- [setup_config_link](https://raw.githubusercontent.com/ssh0/dotfiles/master/setup_config_link)\n- [dotmv](https://raw.githubusercontent.com/ssh0/dotfiles/master/bin/dotmv)\n\n```bash:setup.sh\n#!/bin/sh\n# written by Shotaro Fujimoto (https://github.com/ssh0)\n# read link configuration from ./setup_config_link\n\ndotdir=$(cd \"$(dirname \"$0\")\"; pwd)\nhome=$HOME\n\nred=31\n# green=32\nyellow=33\n# blue=34\n# cyan=36\n\ncecho() {\n  color=$1\n  shift\n  echo \"\\033[${color}m$@\\033[m\"\n}\n\ninfo() {\n  # verbose confirmation\n  echo \"\"\n  echo \"${1} -> ${2}\"\n}\n\nfor l in $(grep -Ev '^#' setup_config_link | grep -Ev '^$'); do\n    dotfile=\"${dotdir}/$(echo \"$l\" | awk 'BEGIN {FS=\",\"; }  { print $1; }')\"\n    orig=\"${home}/$(echo \"$l\" | awk 'BEGIN {FS=\",\"; }  { print $2; }')\"\n  if [ ! -e \"${dotfile}\" ]; then\n    echo \"\"\n    cecho $red \"dotfile '${dotfile}' doesn't exist.\"\n    continue\n  fi\n\n  # if dir is not exist: mkdir\n  origdir=$(dirname \"${orig}\")\n  if [ ! -d \"${origdir}\" ]; then\n    info \"${dotfile}\" \"${orig}\"\n    flag=false\n    cecho $red \"'${origdir}' doesn't exist.\"\n    echo \"[message] mkdir '${origdir}'? (y/n):\"\n    while read yn; do\n      case $yn in\n        [Yy] ) mkdir -p \"${origdir}\"; break ;;\n        [Nn] ) flag=true; break ;;\n        * ) echo \"Please answer with y or n.\" ;;\n      esac\n    done\n    if $flag; then\n      continue\n    fi\n  fi\n\n  # if file already exists: open interaction menu\n  if [ -e \"${orig}\" ]; then\n    if [ -L \"${orig}\" ]; then\n      continue\n    else\n      info \"${dotfile}\" \"${orig}\"\n      cecho $yellow \"file or directory already exists.\"\n      while true; do\n        echo \"(d):show diff, (f):overwrite, (b):make backup, (n):do nothing\"\n        read line\n        case $line in\n          [Dd] ) diff -u \"${dotfile}\" \"${orig}\"\n            echo \"\" ;;\n          [Ff] ) if [ -d \"${orig}\" ]; then\n                    rm -r \"${orig}\"\n                  else\n                    rm \"${orig}\"\n                  fi\n                  echo \"'${orig}' -> '${dotfile}'\"\n                  ln -s \"${dotfile}\" \"${orig}\"\n                  break ;;\n          [Bb] ) ln -sbv --suffix '.orig' \"${dotfile}\" \"${orig}\"\n            break ;;\n          [Nn] ) break ;;\n          # ? ) echo \"Please answer with d, f, b or n.\" ;;\n        esac\n      done\n    fi\n  else\n    # otherwise make symbolic file normally\n    echo \"'${orig}' -> '${dotfile}'\"\n    ln -si \"${dotfile}\" \"${orig}\"\n  fi\ndone\n```\n\n\n```bash:setup_config_link\n#!/bin/sh <- this is for easy writing with editor.\n# This file is config file for setup.sh\n# You can comment out by adding \"#\" at the beginning of the line.\n# And an empty line is ignored by setup.sh.\n#\n# Format:\n# <dotfile>,<linkto>\n#\n# the script automatically add directory information to the file path.\n# So, you should write like below\n#     .vimrc,.vimrc\n\n# ~/.Xmodmap:\n# xmodmap is a utility for modifying keymaps and pointing button mappings in Xorg.\n.Xmodmap,.Xmodmap\n\n# ~/.Xdefaults\n.Xdefaults,.Xdefaults\n\n# ~/.Xresources:\n# Xresources is a user-level configuration dotfile\n# https://wiki.archlinux.org/index.php/X_resources#XScreenSaver_resources\n.Xresources,.Xresources\n\n# ~/.xscreensaver:\n# XScreenSaver Preferences File\n.xscreensaver,.xscreensaver\n\n# ~/.profile:\n# executed by the command interpreter for login shells.\n.profile,.profile\n\n# [vim](http://www.vim.org/):\n# Vim is an advanced text editor that seeks to provide the power of the de-facto\n# Unix editor 'Vi', with a more complete feature set.\nvimfiles/vimrc,.vimrc\nvimfiles/ftplugin/tex_quickrun.vim,.vim/ftplugin/tex_quickrun.vim\nvimfiles/ftplugin/markdown_quickrun.vim,.vim/ftplugin/markdown_quickrun.vim\n# markdown template\nvimfiles/template/template.md,.vim/template/template.md\nvimfiles/template/template.mkd,.vim/template/template.mkd\n# Tex template\nvimfiles/template/template.tex,.vim/template/template.tex\n# Python template\nvimfiles/template/template.py,.vim/template/template.py\n# Shell script template\nvimfiles/template/template.sh,.vim/template/template.sh\n\n# [zsh](http://zsh.sourceforge.net/):\n# Zsh is a shell designed for interactive use, although it is also a powerful\n# scripting language.\nzshfiles/zshrc,.zshrc\nzshfiles/zshrc.mine,.zshrc.mine\nzshfiles/aliases.mine,.aliases.mine\nzshfiles/aliases.zsh,.oh-my-zsh/lib/aliases.zsh\nzshfiles/themes/agnoster.zsh-theme,.oh-my-zsh/themes/agnoster.zsh-theme\nzshfiles/history.zsh,.oh-my-zsh/lib/history.zsh\n\n# [ranger](http://ranger.nongnu.org/):\n# ranger is a file manager with VI key bindings.\nranger/colorschemes/mycolor.py,.config/ranger/colorschemes/mycolor.py\nranger/rc.conf,.config/ranger/rc.conf\nranger/rifle.conf,.config/ranger/rifle.conf\nranger/scope.sh,.config/ranger/scope.sh\nranger/commands.py,.config/ranger/commands.py\n\n# [compton](https://github.com/chjj/compton):\n# Compton is a compositor for X, and a fork of xcompmgr-dana.\ncompton/compton.conf,.config/compton/compton.conf\n\n# [ipython](http://ipython.org/):\n# IPython provides a rich architecture for interactive computing with:\n#     - Powerful interactive shells (terminal and Qt-based).\n#     - A browser-based notebook with support for code, rich text, mathematical\n#       expressions, inline plots and other rich media.\n#     - Support for interactive data visualization and use of GUI toolkits.\n#     - Flexible, embeddable interpreters to load into your own projects.\n#     - Easy to use, high performance tools for parallel computing.\nipython/nbextensions/livereveal/main.css,.ipython/nbextensions/livereveal/main.css\nipython/profile_default/static/custom/custom.css,.ipython/profile_default/static/custom/custom.css\nipython/profile_slide/static/custom/custom.css,.ipython/profile_slide/static/custom/custom.css\nipython/nbextensions/livereveal/main.css,ipython/nbextensions/livereveal/main.css\nipython/profile_default/static/custom/custom.css,ipython/profile_default/static/custom/custom.css\nipython/profile_slide/static/custom/custom.css,ipython/profile_slide/static/custom/custom.css\n\n# [tudu](http://cli-apps.org/content/show.php/TuDu?content=129325):\n# TuDu is a comand line interface to manage hierarchical todos. Each task has a\n# title, a long text description, a deadline (tudu warns you when the date is\n# close), and a scheduled date. There are categories and priorities.\ntudurc,.tudurc\n\n# [latexmk](http://www.ctan.org/pkg/latexmk/):\n# Latexmk completely automates the process of generating a LaTeX document.\n.latexmkrc,.latexmkrc\n\n# [notify-osd](https://wiki.ubuntu.com/NotifyOSD):\n# Canonical's on-screen-display notification agent, implementing the\n# freedesktop.org Desktop Notifications Specification with semi-transparent\n# click-through bubbles.\n.notify-osd,.notify-osd\n\n# [vimperator](https://addons.mozilla.org/ja/firefox/addon/vimperator/):\n# Make Firefox look and behave like Vim\n.vimperatorrc,.vimperatorrc\n\n# [mpv](http://mpv.io/):\n# mpv is a fork of mplayer2 and MPlayer. It shares some features with the former\n# projects while introducing many more.\n.mpv,.mpv\n\n# [cmus](https://cmus.github.io/):\n# cmus is a small, fast and powerful console music player for Unix-like\n# operating systems.\ncmus,.cmus\n\n# [mutt](http://www.mutt.org/):\n# E-Mail Client\nmutt/muttrc,.mutt/muttrc\n\n# [xmonad](http://xmonad.org/):\n# xmonad is a dynamically tiling X11 window manager that is written and\n# configured in Haskell. In a normal WM, you spend half your time aligning and\n# searching for windows. xmonad makes work easier, by automating this.\n.xmonad/xmonad.hs,.xmonad/xmonad.hs\n.xmonad/xmobarrc,.xmonad/xmobarrc\n```\n\n\n```bash:dotmv\n#!/bin/sh\n#\nset -e\n\nusage() {\n  echo \"Move the file to dotfiles dir, make the link, and edit setup config\"\n  echo \"Usage: $0 [OPTION] SOURCE DEST(must be set into dotfiles)\"\n  echo \"\"\n  echo \"OPTION:\"\n  echo \"  -m: Add your message for setup configuration file.\"\n  echo \"  -h: Show this message.\"\n  exit 1\n}\n\n# TODO: crop $HOME string automatically. (Now it is done manually, so you\n# should replace the below command by your name.)\nhome_pattern='s/\\/home\\/shotaro\\///'\ndotfile_pattern='s/\\/home\\/shotaro\\/\\.dotfiles\\///'\n\n# set dotfiles config file\ndotfiles_config_file=\"$HOME/.dotfiles/setup_config_link\"\n\n# default message\nmessage=\"\"\n\ntrap 'usage' 1 2 3 15\n\n# option handling\nwhile getopts m:h OPT\ndo\n  case $OPT in\n    \"m\" ) message=\"${OPTARG}\";;\n    \"h\" ) usage ;;\n  esac\ndone\n\n# two arguments must be taken\nshift $((OPTIND-1))\nif [ ! $# = 2 ];then\n  usage\n  exit 1\nfi\n\nname=\"$(basename $1)\"\norig=\"$(cd $(dirname $1); pwd)\"/\"${name}\"\ndot=\"$2\"\n\noriginal=\"$(echo \"$orig\" | sed -e \"${home_pattern}\")\"\ndotfile=\"$(echo \"$dot\" | sed -e \"${dotfile_pattern}\")\"\n\n# mv from original path to dotfiles dir\ndotdir=\"$(dirname \"${dot}\")\"\nif [ ! -e \"${dotdir}\" ]; then\n  mkdir -p \"${dotdir}\"\nfi\nmv -i \"$orig\" \"$dot\"\n\n# link to orig path from dotfiles\nln -siv \"$dot\" \"$orig\"\n\n# add the cofigration to the config file.\nif [ ! \"${message}\" = \"\" ]; then\n  echo \"# ${message}\" >> \"${dotfiles_config_file}\"\nfi\necho \"${dotfile},${original}\" >> \"${dotfiles_config_file}\"\n\n# Open config file\nvim + \"${dotfiles_config_file}\"\n```\n\n\n## \u307e\u3068\u3081\n\n\u7c21\u5358\u306a\u304c\u3089\u3082\u5fdc\u7528\u306e\u52b9\u304d\u305d\u3046\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u66f8\u3051\u305f\u3002\u81ea\u5206\u306edotfiles\u898b\u306a\u304a\u3057\u3066\u307f\u305f\u3089\u4f7f\u3063\u3066\u306a\u3044\u306e\u3068\u304b\u7d50\u69cb\u3054\u3061\u3083\u3054\u3061\u3083\u3057\u3066\u305f\u304b\u3089\u3001\u3053\u308c\u3092\u6a5f\u306b\u6574\u7406\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["dotfiles", "ShellScript", "Linux"]}