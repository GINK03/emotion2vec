{"context": "trace(x) \u3068\u304b trace(f(x)) \u3068\u304b\u3084\u3063\u3066\n>>> x=3\n>>> f(x)=0\n\n\u307f\u305f\u3044\u306b\u5f0f\u306e\u5f62 (? \u3064\u307e\u308a\u30de\u30af\u30ed\u306b\u4e0e\u3048\u308b\u30d1\u30e9\u30e1\u30fc\u30bf) \u3068\u305d\u306e\u5024\u3092\u51fa\u529b\u3055\u305b\u308b.\n\nC++ (g++)\n#define trace(var) cerr<<\">>> \"<<#var<<\" = \"<<var<<endl;\n\n#var \u3067\u7c21\u5358\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6587\u5b57\u5217\u5316\u3067\u304d\u308b.\n\u3064\u3044\u3067\u306b\u3044\u3046\u3068\u6587\u5b57\u5217\u306b\u3057\u3066\u9023\u7d50\u3059\u308b ## \u3063\u3066\u306e\u3082\u3042\u308b.\n\nRust 1.7.0\n# \u3068\u540c\u7b49\u306e\u3082\u306e\u3068\u3057\u3066 std::stringify! \u30de\u30af\u30ed\u304c\u3042\u308b (\u51e6\u7406\u7cfb\u5b9f\u88c5).\nuse std::io::Write;\nmacro_rules! trace {\n    ($var:expr) => ({\n        let _ = writeln!(&mut std::io::stderr(), \">>> {} = {:?}\", stringify!($var), $var);\n    })\n}\n\nfn main() {\n    let x: i32 = 2;\n    let s: &str = \"hoge\";\n    trace!(x);\n    trace!(s);\n    trace!((x, s));\n}\n\nfn \u3067\u306e\u95a2\u6570\u5b9a\u7fa9\u306f\u5f8c\u65b9\u306e\u5ba3\u8a00\u3092\u547c\u3073\u51fa\u305b\u308b\u3051\u3069\u3001\u30de\u30af\u30ed\u306f\u524d\u65b9\u306b\u5ba3\u8a00\u3057\u305f\u3082\u306e\u3057\u304b\u547c\u3079\u306a\u3044\u3093\u3060\u306d\n`trace(x)` \u3068\u304b `trace(f(x))` \u3068\u304b\u3084\u3063\u3066\n\n```\n>>> x=3\n>>> f(x)=0\n```\n\n\u307f\u305f\u3044\u306b\u5f0f\u306e\u5f62 (? \u3064\u307e\u308a\u30de\u30af\u30ed\u306b\u4e0e\u3048\u308b\u30d1\u30e9\u30e1\u30fc\u30bf) \u3068\u305d\u306e\u5024\u3092\u51fa\u529b\u3055\u305b\u308b.\n\n### C++ (g++)\n\n```\n#define trace(var) cerr<<\">>> \"<<#var<<\" = \"<<var<<endl;\n```\n\n`#var` \u3067\u7c21\u5358\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6587\u5b57\u5217\u5316\u3067\u304d\u308b.\n\u3064\u3044\u3067\u306b\u3044\u3046\u3068\u6587\u5b57\u5217\u306b\u3057\u3066\u9023\u7d50\u3059\u308b `##` \u3063\u3066\u306e\u3082\u3042\u308b.\n\n### Rust 1.7.0\n\n`#` \u3068\u540c\u7b49\u306e\u3082\u306e\u3068\u3057\u3066 `std::stringify!` \u30de\u30af\u30ed\u304c\u3042\u308b (\u51e6\u7406\u7cfb\u5b9f\u88c5).\n\n```rust\nuse std::io::Write;\nmacro_rules! trace {\n    ($var:expr) => ({\n        let _ = writeln!(&mut std::io::stderr(), \">>> {} = {:?}\", stringify!($var), $var);\n    })\n}\n```\n\n```rust\nfn main() {\n    let x: i32 = 2;\n    let s: &str = \"hoge\";\n    trace!(x);\n    trace!(s);\n    trace!((x, s));\n}\n```\n\n`fn` \u3067\u306e\u95a2\u6570\u5b9a\u7fa9\u306f\u5f8c\u65b9\u306e\u5ba3\u8a00\u3092\u547c\u3073\u51fa\u305b\u308b\u3051\u3069\u3001\u30de\u30af\u30ed\u306f\u524d\u65b9\u306b\u5ba3\u8a00\u3057\u305f\u3082\u306e\u3057\u304b\u547c\u3079\u306a\u3044\u3093\u3060\u306d\n\n\n\n", "tags": ["rust"]}