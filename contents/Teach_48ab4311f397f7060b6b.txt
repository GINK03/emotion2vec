{"context": "\n\n\u7d50\u679c\n\n\n\u5185\u5bb9\n\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30a2\u30bf\u30c3\u30c1\u3057\u305f\u5b50\u4ee5\u4e0b\u306eImage\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u3046\u3061\uff0c\nImageType\u304cFilled\u306e\u3082\u306e\u306b\u305f\u3044\u3057\u3066\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\uff0e\n\n\u4ed5\u69d8\u30a2\u30bb\u30c3\u30c8\n\nUniRx\nLinq to GameObject\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\nusing UnityEngine;\nusing System.Collections;\nusing UniRx;\nusing Unity.Linq;\nusing System.Linq;\nusing UnityEngine.UI;\nusing UniRx.Triggers;\n\npublic class FillLoop : MonoBehaviour {\n\n\n    public float speed = 1.0f;\n    public bool isLoop = true;\n\n\n    void Start () {\n\n        // \u5b50\u4ee5\u4e0b\u304b\u3089ImageType\u304cFilled\u306eImage\u3092\u53d6\u5f97\n        var images = this.gameObject.Descendants ().OfComponent<Image> ()\n            .Where (x => x.type == Image.Type.Filled);\n\n        foreach (var item in images) {\n\n            var currentImage = item;\n            float coeff = 1.0f; // fillAmount\u3092\u5897\u3084\u3059\u304b\u6e1b\u3089\u3059\u304b\n\n            // fillAmount\u304c1\u304b0\u3067\u65b9\u5411\u3092\u9006\u8ee2\n            currentImage\n                .ObserveEveryValueChanged (ci => ci.fillAmount)\n                .Where (x => x == 1.0f || x == 0.0f)\n                .Subscribe (_ => {\n                    currentImage.fillClockwise = !currentImage.fillClockwise;\n                    coeff = 1.0f - (2.0f * currentImage.fillAmount);\n                })\n                .AddTo (currentImage.gameObject);\n\n            // fillAmount\u306e\u5897\u6e1b\n            this.UpdateAsObservable ()\n                .Where (_ => isLoop)\n                .Where(_=> currentImage != null)\n                .Subscribe (_ => \n                    {\n                        currentImage.fillAmount += Time.deltaTime * speed * coeff;\n                    });\n        }\n    }\n}\n\n\n\n# \u7d50\u679c\n\n![FillLoop.gif](https://qiita-image-store.s3.amazonaws.com/0/113504/c66c7d7c-8d6d-543c-f231-5e17fb9172a2.gif \"FillLoop.gif\")\n\n# \u5185\u5bb9\n\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30a2\u30bf\u30c3\u30c1\u3057\u305f\u5b50\u4ee5\u4e0b\u306eImage\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u3046\u3061\uff0c\nImageType\u304cFilled\u306e\u3082\u306e\u306b\u305f\u3044\u3057\u3066\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\uff0e\n\n# \u4ed5\u69d8\u30a2\u30bb\u30c3\u30c8\n- UniRx\n- Linq to GameObject\n\n\n# \u30b9\u30af\u30ea\u30d7\u30c8\n\n```\nusing UnityEngine;\nusing System.Collections;\nusing UniRx;\nusing Unity.Linq;\nusing System.Linq;\nusing UnityEngine.UI;\nusing UniRx.Triggers;\n\npublic class FillLoop : MonoBehaviour {\n\n\n\tpublic float speed = 1.0f;\n\tpublic bool isLoop = true;\n\n\n\tvoid Start () {\n\n\t\t// \u5b50\u4ee5\u4e0b\u304b\u3089ImageType\u304cFilled\u306eImage\u3092\u53d6\u5f97\n\t\tvar images = this.gameObject.Descendants ().OfComponent<Image> ()\n\t\t\t.Where (x => x.type == Image.Type.Filled);\n\n\t\tforeach (var item in images) {\n\t\t\t\n\t\t\tvar currentImage = item;\n\t\t\tfloat coeff = 1.0f; // fillAmount\u3092\u5897\u3084\u3059\u304b\u6e1b\u3089\u3059\u304b\n\n\t\t\t// fillAmount\u304c1\u304b0\u3067\u65b9\u5411\u3092\u9006\u8ee2\n\t\t\tcurrentImage\n\t\t\t\t.ObserveEveryValueChanged (ci => ci.fillAmount)\n\t\t\t\t.Where (x => x == 1.0f || x == 0.0f)\n\t\t\t\t.Subscribe (_ => {\n\t\t\t\t\tcurrentImage.fillClockwise = !currentImage.fillClockwise;\n\t\t\t\t\tcoeff = 1.0f - (2.0f * currentImage.fillAmount);\n\t\t\t\t})\n\t\t\t\t.AddTo (currentImage.gameObject);\n\n\t\t\t// fillAmount\u306e\u5897\u6e1b\n\t\t\tthis.UpdateAsObservable ()\n\t\t\t\t.Where (_ => isLoop)\n\t\t\t\t.Where(_=> currentImage != null)\n\t\t\t\t.Subscribe (_ => \n\t\t\t\t\t{\n\t\t\t\t\t\tcurrentImage.fillAmount += Time.deltaTime * speed * coeff;\n\t\t\t\t\t});\n\t\t}\n\t}\n}\n\n```\n", "tags": ["Unity", "GUI"]}