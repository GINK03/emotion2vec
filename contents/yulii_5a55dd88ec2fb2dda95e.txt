{"context": " More than 1 year has passed since last update.\u300c\u30dd\u30a8\u30e0\u300d\u306e\u30bf\u30b0\u3092\u4ed8\u3051\u305f\u6295\u7a3f\u3092 #poem \u30c1\u30e3\u30f3\u30cd\u30eb\u306b\u96c6\u7d04\u3059\u308b\u305f\u3081\u306bAPI Gateway \u3068Lambda \u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nQiita::Team \u306eWebhook => API Gateway => Lambda => Slack \u306e\u6d41\u308c\u3067\u3001Qiita::Team \u306e\u6295\u7a3f\u3092Slack \u306b\u901a\u77e5\u3059\u308b\u6d41\u308c\u3067\u3059\u3002\n\u7d30\u304b\u3044\u8a2d\u5b9a\u306f\u516c\u5f0f\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u4e01\u5be7\u306b\u8aac\u660e\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001API Gateway + Lambda \u306e\u9023\u643a\u306f\u66f8\u3044\u3066\u304f\u308c\u3066\u3044\u308b\u4eba\u304c\u591a\u3044\u306e\u3067\u8aac\u660e\u306f\u5272\u611b\u3002\n\n\u6f14\u7fd2: API Gateway \u3068 Lambda \u95a2\u6570\n\u3010Python\u3011AWS\u306eAPI Gateway\u3068Lambda\u3092\u4f7f\u3063\u3066REST API\u3092\u66f8\u3044\u3066\u307f\u305f\n\n\nLambda \u306e\u8a2d\u5b9a\nAPI Gateway \u3067\u9069\u5b9cWebhook \u306ePOST \u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308c\u308b\u69d8\u306b\u3059\u308b\u3068\u3001 event \u5909\u6570\u306bJSON \u30c7\u30fc\u30bf\u304c\u53d7\u3051\u6e21\u3055\u308c\u307e\u3059\u3002\nvar https = require('https');\nexports.handler = function(event, context) {\n    console.log('event: ' + JSON.stringify(event, null, 4));\n    var payload = event;\n\n    // \u4e0d\u8981\u306a\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u30b9\u30ad\u30c3\u30d7\n    // cf. https://qiita.com/api/webhook/docs\n    var nop = true;\n    if (payload.action === 'created') { \n        payload.item.tags.some(function(e, index) {\n            if (e.name === '\u30dd\u30a8\u30e0') {\n                nop = false;\n                return true;\n            }\n        });\n    }\n    if (nop) {\n        context.succeed('NOP');\n        return;\n    }\n\n    var options = {\n        host: 'hooks.slack.com',\n        port: 443,\n        path: '/services/xxx/xxxxxx', // NOTE: Slack \u306eIncoming Webhook URL \u3092\u6307\u5b9a\u3059\u308b \n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n    };\n\n    // Slack \u3078\u306e\u6295\u7a3f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6307\u5b9a\n    // cf. https://api.slack.com/incoming-webhooks\n    var response = {\n        channel: '#poem', \n        username: 'poemer', \n        text: '\u30dd\u30a8\u30e0\u5165\u8377\u3057\u307e\u3057\u305f\uff01',\n        icon_emoji: ':kissing_cat:',\n        attachments: [\n            {\n                \"title\": payload.item.title,\n                \"title_link\": payload.item.url,\n                \"fields\": [\n                    {\n                        \"title\": \"Author\",\n                        \"value\": payload.user.url_name,\n                        \"short\": true\n                    }\n                ]\n            }\n        ]\n    };\n\n    // Slack \u3078\u306ePOST\n    var req = https.request(options, function(res) {\n        var body = '';\n        console.log('Status:', res.statusCode);\n        console.log('Headers:', JSON.stringify(res.headers));\n        res.setEncoding('utf8');\n        res.on('data', function(chunk) {\n            body += chunk;\n        });\n        res.on('end', function() {\n            console.log('Successfully processed HTTPS response');\n            // If we know it's JSON, parse it\n            if (res.headers['content-type'] === 'application/json') {\n                body = JSON.parse(body);\n            }\n            context.succeed(body);\n        });\n    });\n    req.on('error', context.fail);\n    req.write(JSON.stringify(response));\n    req.end();\n};\n\nQiita::Team \u306eWebhook \u901a\u77e5\u306eToken \u306f\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7684\u306a\u90e8\u5206\u304c\u6c17\u306b\u306a\u308b\u4eba\u306f\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3068\u3088\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nQiita::Team \u304b\u3089\u98db\u3093\u3067\u304f\u308b\u30c7\u30fc\u30bf\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nAWS \u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u30dd\u30c1\u30dd\u30c1\u3059\u308c\u3070\u7c21\u5358\u306b\u4f5c\u308c\u308b\u306e\u3067\u304a\u8a66\u3057\u3042\u308c\u3002\n\n\u8ffd\u8a18\uff1a\u3053\u3093\u306a\u611f\u3058\u3067\u901a\u77e5\u3055\u308c\u307e\u3059\n\n\u300c\u30dd\u30a8\u30e0\u300d\u306e\u30bf\u30b0\u3092\u4ed8\u3051\u305f\u6295\u7a3f\u3092 #poem \u30c1\u30e3\u30f3\u30cd\u30eb\u306b\u96c6\u7d04\u3059\u308b\u305f\u3081\u306bAPI Gateway \u3068Lambda \u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\nQiita::Team \u306eWebhook => API Gateway => Lambda => Slack \u306e\u6d41\u308c\u3067\u3001Qiita::Team \u306e\u6295\u7a3f\u3092Slack \u306b\u901a\u77e5\u3059\u308b\u6d41\u308c\u3067\u3059\u3002\n\n\u7d30\u304b\u3044\u8a2d\u5b9a\u306f\u516c\u5f0f\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u4e01\u5be7\u306b\u8aac\u660e\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001API Gateway + Lambda \u306e\u9023\u643a\u306f\u66f8\u3044\u3066\u304f\u308c\u3066\u3044\u308b\u4eba\u304c\u591a\u3044\u306e\u3067\u8aac\u660e\u306f\u5272\u611b\u3002\n\n- [\u6f14\u7fd2: API Gateway \u3068 Lambda \u95a2\u6570](https://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/getting-started.html)\n- [\u3010Python\u3011AWS\u306eAPI Gateway\u3068Lambda\u3092\u4f7f\u3063\u3066REST API\u3092\u66f8\u3044\u3066\u307f\u305f](http://qiita.com/Hironsan/items/de5dcd42e1c6f6a9b5c7)\n\n## Lambda \u306e\u8a2d\u5b9a\n\nAPI Gateway \u3067\u9069\u5b9cWebhook \u306ePOST \u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308c\u308b\u69d8\u306b\u3059\u308b\u3068\u3001 `event` \u5909\u6570\u306bJSON \u30c7\u30fc\u30bf\u304c\u53d7\u3051\u6e21\u3055\u308c\u307e\u3059\u3002\n\n```\nvar https = require('https');\nexports.handler = function(event, context) {\n    console.log('event: ' + JSON.stringify(event, null, 4));\n    var payload = event;\n\n    // \u4e0d\u8981\u306a\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u30b9\u30ad\u30c3\u30d7\n    // cf. https://qiita.com/api/webhook/docs\n    var nop = true;\n    if (payload.action === 'created') { \n        payload.item.tags.some(function(e, index) {\n            if (e.name === '\u30dd\u30a8\u30e0') {\n                nop = false;\n                return true;\n            }\n        });\n    }\n    if (nop) {\n        context.succeed('NOP');\n        return;\n    }\n    \n    var options = {\n        host: 'hooks.slack.com',\n        port: 443,\n        path: '/services/xxx/xxxxxx', // NOTE: Slack \u306eIncoming Webhook URL \u3092\u6307\u5b9a\u3059\u308b \n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n    };\n    \n    // Slack \u3078\u306e\u6295\u7a3f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6307\u5b9a\n    // cf. https://api.slack.com/incoming-webhooks\n    var response = {\n        channel: '#poem', \n        username: 'poemer', \n        text: '\u30dd\u30a8\u30e0\u5165\u8377\u3057\u307e\u3057\u305f\uff01',\n        icon_emoji: ':kissing_cat:',\n        attachments: [\n            {\n                \"title\": payload.item.title,\n                \"title_link\": payload.item.url,\n                \"fields\": [\n                    {\n                        \"title\": \"Author\",\n                        \"value\": payload.user.url_name,\n                        \"short\": true\n                    }\n                ]\n            }\n        ]\n    };\n    \n    // Slack \u3078\u306ePOST\n    var req = https.request(options, function(res) {\n        var body = '';\n        console.log('Status:', res.statusCode);\n        console.log('Headers:', JSON.stringify(res.headers));\n        res.setEncoding('utf8');\n        res.on('data', function(chunk) {\n            body += chunk;\n        });\n        res.on('end', function() {\n            console.log('Successfully processed HTTPS response');\n            // If we know it's JSON, parse it\n            if (res.headers['content-type'] === 'application/json') {\n                body = JSON.parse(body);\n            }\n            context.succeed(body);\n        });\n    });\n    req.on('error', context.fail);\n    req.write(JSON.stringify(response));\n    req.end();\n};\n```\n\nQiita::Team \u306eWebhook \u901a\u77e5\u306eToken \u306f\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7684\u306a\u90e8\u5206\u304c\u6c17\u306b\u306a\u308b\u4eba\u306f\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3068\u3088\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nQiita::Team \u304b\u3089\u98db\u3093\u3067\u304f\u308b\u30c7\u30fc\u30bf\u306f[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://qiita.com/api/webhook/docs)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nAWS \u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u30dd\u30c1\u30dd\u30c1\u3059\u308c\u3070\u7c21\u5358\u306b\u4f5c\u308c\u308b\u306e\u3067\u304a\u8a66\u3057\u3042\u308c\u3002\n\n# \u8ffd\u8a18\uff1a\u3053\u3093\u306a\u611f\u3058\u3067\u901a\u77e5\u3055\u308c\u307e\u3059\n\n![Screen Shot 2016-02-09 at 13.01.23.png](https://qiita-image-store.s3.amazonaws.com/0/257/c133acb1-17c4-7bc5-0474-9f102d90a6e6.png)\n", "tags": ["AWS", "APIGateway", "lambda", "Slack", "QiitaTeam"]}