{"context": "\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u306e\u6311\u6226\u8a18\u9332\u3067\u3059\u3002\u74b0\u5883\u306fUbuntu 16.04 LTS \uff0b Python 3.5.2 :: Anaconda 4.1.1 (64-bit)\u3067\u3059\u3002\u904e\u53bb\u306e\u30ce\u30c3\u30af\u306e\u4e00\u89a7\u306f\u3053\u3061\u3089\u304b\u3089\u3069\u3046\u305e\u3002\n\n\u7b2c4\u7ae0: \u5f62\u614b\u7d20\u89e3\u6790\n\n\u590f\u76ee\u6f31\u77f3\u306e\u5c0f\u8aac\u300e\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300f\u306e\u6587\u7ae0\uff08neko.txt\uff09\u3092MeCab\u3092\u4f7f\u3063\u3066\u5f62\u614b\u7d20\u89e3\u6790\u3057\uff0c\u305d\u306e\u7d50\u679c\u3092neko.txt.mecab\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u305b\u3088\uff0e\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u3044\u3066\uff0c\u4ee5\u4e0b\u306e\u554f\u306b\u5bfe\u5fdc\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u88c5\u305b\u3088\uff0e\n\u306a\u304a\uff0c\u554f\u984c37, 38, 39\u306fmatplotlib\u3082\u3057\u304f\u306fGnuplot\u3092\u7528\u3044\u308b\u3068\u3088\u3044\uff0e\n\n\n37. \u983b\u5ea6\u4e0a\u4f4d10\u8a9e\n\n\u51fa\u73fe\u983b\u5ea6\u304c\u9ad8\u304410\u8a9e\u3068\u305d\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u30b0\u30e9\u30d5\uff08\u4f8b\u3048\u3070\u68d2\u30b0\u30e9\u30d5\u306a\u3069\uff09\u3067\u8868\u793a\u305b\u3088\uff0e\n\n\n\u51fa\u6765\u4e0a\u304c\u3063\u305f\u30b3\u30fc\u30c9\uff1a\n\nmain.py\n# coding: utf-8\nimport MeCab\nfrom collections import Counter\nimport matplotlib.pyplot as plt\nfrom matplotlib.font_manager import FontProperties\n\nfname = 'neko.txt'\nfname_parsed = 'neko.txt.mecab'\n\n\ndef parse_neko():\n    '''\u300c\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300d\u3092\u5f62\u614b\u7d20\u89e3\u6790\n    \u300c\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300d(neko.txt)\u3092\u5f62\u614b\u7d20\u89e3\u6790\u3057\u3066neko.txt.mecab\u306b\u4fdd\u5b58\u3059\u308b\n    '''\n\n    with open(fname) as data_file, \\\n            open(fname_parsed, mode='w') as out_file:\n\n        mecab = MeCab.Tagger()\n        out_file.write(mecab.parse(data_file.read()))\n\n\ndef neco_lines():\n    '''\u300c\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300d\u306e\u5f62\u614b\u7d20\u89e3\u6790\u7d50\u679c\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\n    \u300c\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300d\u306e\u5f62\u614b\u7d20\u89e3\u6790\u7d50\u679c\u3092\u9806\u6b21\u8aad\u307f\u8fbc\u3093\u3067\u3001\u5404\u5f62\u614b\u7d20\u3092\n    \u30fb\u8868\u5c64\u5f62\uff08surface\uff09\n    \u30fb\u57fa\u672c\u5f62\uff08base\uff09\n    \u30fb\u54c1\u8a5e\uff08pos\uff09\n    \u30fb\u54c1\u8a5e\u7d30\u5206\u985e1\uff08pos1\uff09\n    \u306e4\u3064\u3092\u30ad\u30fc\u3068\u3059\u308b\u8f9e\u66f8\u306b\u683c\u7d0d\u3057\u30011\u6587\u305a\u3064\u3001\u3053\u306e\u8f9e\u66f8\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u8fd4\u3059\n\n    \u623b\u308a\u5024\uff1a\n    1\u6587\u306e\u5404\u5f62\u614b\u7d20\u3092\u8f9e\u66f8\u5316\u3057\u305f\u30ea\u30b9\u30c8\n    '''\n    with open(fname_parsed) as file_parsed:\n\n        morphemes = []\n        for line in file_parsed:\n\n            # \u8868\u5c64\u5f62\u306ftab\u533a\u5207\u308a\u3001\u305d\u308c\u4ee5\u5916\u306f','\u533a\u5207\u308a\u3067\u30d0\u30e9\u3059\n            cols = line.split('\\t')\n            if(len(cols) < 2):\n                raise StopIteration     # \u533a\u5207\u308a\u304c\u306a\u3051\u308c\u3070\u7d42\u4e86\n            res_cols = cols[1].split(',')\n\n            # \u8f9e\u66f8\u4f5c\u6210\u3001\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\n            morpheme = {\n                'surface': cols[0],\n                'base': res_cols[6],\n                'pos': res_cols[0],\n                'pos1': res_cols[1]\n            }\n            morphemes.append(morpheme)\n\n            # \u54c1\u8a5e\u7d30\u5206\u985e1\u304c'\u53e5\u70b9'\u306a\u3089\u6587\u306e\u7d42\u308f\u308a\u3068\u5224\u5b9a\n            if res_cols[1] == '\u53e5\u70b9':\n                yield morphemes\n                morphemes = []\n\n\n# \u5f62\u614b\u7d20\u89e3\u6790\nparse_neko()\n\n# Counter\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5358\u8a9e\u3092\u30bb\u30c3\u30c8\nword_counter = Counter()\nfor line in neco_lines():\n    word_counter.update([morpheme['surface'] for morpheme in line])\n\n# \u983b\u5ea6\u4e0a\u4f4d10\u8a9e\u306e\u53d6\u5f97\nsize = 10\nlist_word = word_counter.most_common(size)\nprint(list_word)\n\n# \u5358\u8a9e\uff08x\u8ef8\u7528\uff09\u3068\u51fa\u73fe\u6570\uff08y\u8ef8\u7528\uff09\u306e\u30ea\u30b9\u30c8\u306b\u5206\u89e3\nlist_zipped = list(zip(*list_word))\nwords = list_zipped[0]\ncounts = list_zipped[1]\n\n# \u30b0\u30e9\u30d5\u3067\u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\u60c5\u5831(\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u307e\u307e\u3067\u306f\u65e5\u672c\u8a9e\u304c\u8868\u793a\u3067\u304d\u306a\u3044)\nfp = FontProperties(\n    fname='/usr/share/fonts/truetype/takao-gothic/TakaoGothic.ttf'\n)\n\n# \u68d2\u30b0\u30e9\u30d5\u306e\u30c7\u30fc\u30bf\u6307\u5b9a\nplt.bar(\n    range(0, size),     # x\u8ef8\u306e\u5024\uff080,1,2...9\uff09\n    counts,             # \u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308by\u8ef8\u306e\u5024\n    align='center'      # x\u8ef8\u306b\u304a\u3051\u308b\u68d2\u30b0\u30e9\u30d5\u306e\u8868\u793a\u4f4d\u7f6e\n)\n\n# x\u8ef8\u306e\u30e9\u30d9\u30eb\u306e\u6307\u5b9a\nplt.xticks(\n    range(0, size),     # x\u8ef8\u306e\u5024\uff080,1,2...9\uff09\n    words,              # \u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb\n    fontproperties=fp   # \u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\u60c5\u5831\n)\n\n# x\u8ef8\u306e\u5024\u306e\u7bc4\u56f2\u306e\u8abf\u6574\nplt.xlim(\n    xmin=-1, xmax=size  # -1\u301c10\uff08\u5de6\u53f3\u306b1\u306e\u4f59\u88d5\u3092\u6301\u305f\u305b\u3066\u898b\u6804\u3048\u826f\u304f\uff09\n)\n\n# \u30b0\u30e9\u30d5\u306e\u30bf\u30a4\u30c8\u30eb\u3001\u30e9\u30d9\u30eb\u6307\u5b9a\nplt.title(\n    '37. \u983b\u5ea6\u4e0a\u4f4d10\u8a9e',    # \u30bf\u30a4\u30c8\u30eb\n    fontproperties=fp   # \u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\u60c5\u5831\n)\nplt.xlabel(\n    '\u51fa\u73fe\u983b\u5ea6\u304c\u9ad8\u304410\u8a9e',# x\u8ef8\u30e9\u30d9\u30eb\n    fontproperties=fp   # \u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\u60c5\u5831\n)\nplt.ylabel(\n    '\u51fa\u73fe\u983b\u5ea6',         # y\u8ef8\u30e9\u30d9\u30eb\n    fontproperties=fp   # \u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\u60c5\u5831\n)\n\n# \u30b0\u30ea\u30c3\u30c9\u3092\u8868\u793a\nplt.grid(axis='y')\n\n# \u8868\u793a\nplt.show()\n\n\n\n\u5b9f\u884c\u7d50\u679c\uff1a\n\n\u7aef\u672b\n[('\u306e', 9198), ('\u3002', 7486), ('\u3066', 6798), ('\u3001', 6772), ('\u306f', 6418), ('\u306b', 6177), ('\u3092', 6047), ('\u3068', 5486), ('\u304c', 5339), ('\u305f', 3968)]\n\n\n\n\nmatplotlib\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u554f\u984c\u3067\u5968\u3081\u3089\u308c\u3066\u3044\u308bmatplotlib\u306f\u3059\u3067\u306b\u5165\u3063\u3066\u3044\u307e\u3057\u305f\u3002\u554f\u984c02\u3067\u5165\u308c\u305fAnaconda\u306b\u542b\u307e\u308c\u3066\u3044\u305f\u3088\u3046\u3067\u3059\u3002\u826f\u304b\u3063\u305f^^\n\nmatplotlib\u306e\u4f7f\u3044\u65b9\nparse_neko()\u3068neco_lines()\u3001\u304a\u3088\u3073word_counter\u3092\u6c42\u3081\u308b\u6240\u307e\u3067\u306f\u524d\u554f\u3068\u540c\u3058\u3067\u3059\u3002\nmatplotlib\u305d\u306e\u3082\u306e\u306b\u3064\u3044\u3066\u306f\u3001\u30cd\u30c3\u30c8\u306b\u89e3\u8aac\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u306e\u3067\u8a73\u7d30\u306f\u5272\u611b\u3057\u307e\u3059\u3002\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30b5\u30a4\u30c8\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\u4ee5\u4e0b\u3001\u3044\u304f\u3064\u304b\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\u30b3\u30fc\u30c9\u306b\u3082\u591a\u3081\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u5165\u308c\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u521d\u3081\u3066\u5b9f\u884c\u3057\u305f\u6642\u306ewarning\nmatplotlib\u3092\u521d\u3081\u3066import\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u8b66\u544a\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u7aef\u672b\nsegavvy@ubuntu:~/\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8/\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af2015/37$ python main.py \n/home/segavvy/anaconda3/lib/python3.5/site-packages/matplotlib/font_manager.py:273: UserWarning: Matplotlib is building the font cache using fc-list. This may take a moment.\n  warnings.warn('Matplotlib is building the font cache using fc-list. This may take a moment.')\n\n\n\u3053\u308c\u306f\u3001\u30d5\u30a9\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u30d3\u30eb\u30c9\u3059\u308b\u4f5c\u696d\u3060\u305d\u3046\u3067\u3001\u521d\u56de\u3060\u3051\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u6b21\u56de\u4ee5\u964d\u306f\u51fa\u3066\u3053\u306a\u3044\u306e\u3067\u3001\u7279\u306b\u6c17\u306b\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u68d2\u30b0\u30e9\u30d5\n\u68d2\u30b0\u30e9\u30d5\u306fpyplot.bar()\u3092\u4f7f\u3044\u307e\u3059\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u5fc5\u9808\u306a\u306e\u306f\u3001x\u8ef8\u306e\u5024\u306e\u30ea\u30b9\u30c8\u3068\u3001\u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308by\u8ef8\u306e\u5024\u306e\u30ea\u30b9\u30c8\u3060\u3051\u3067\u3059\u3002align='center'\u306f\u8868\u793a\u3092\u4e2d\u592e\u306b\u3057\u305f\u304b\u3063\u305f\u305f\u3081\u306b\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u6307\u5b9a\u3057\u306a\u3044\u3068\u5de6\u306b\u5bc4\u308a\u307e\u3059\u306e\u3067\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30b0\u30e9\u30d5\u7528\u306b\u7d50\u679c\u3092\u5909\u63db\nword_counter.most_common(10)\u306e\u53d6\u5f97\u7d50\u679c\u306f\u3001\n\nlist_word\n[('\u306e', 9198), ('\u3002', 7486), ('\u3066', 6798), ('\u3001', 6772), ('\u306f', 6418), ('\u306b', 6177), ('\u3092', 6047), ('\u3068', 5486), ('\u304c', 5339), ('\u305f', 3968)]\n\n\n\u3068\u3044\u3046\u5f62\u3067\u3059\u304c\u3001\u30b0\u30e9\u30d5\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001x\u8ef8\uff08\u5358\u8a9e\uff09\u3068y\u8ef8\uff08\u305d\u306e\u51fa\u73fe\u983b\u5ea6\uff09\u306e\u30ea\u30b9\u30c8\u306b\u5206\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u554f\u984c02\u3067\u51fa\u3066\u304d\u305fzip()\u3092\u4f7f\u3046\u3068\u7c21\u5358\u3067\u3059\u3002\n\nlist(zip(*list_word))\n[('\u306e', '\u3002', '\u3066', '\u3001', '\u306f', '\u306b', '\u3092', '\u3068', '\u304c', '\u305f'), (9198, 7486, 6798, 6772, 6418, 6177, 6047, 5486, 5339, 3968)]\n\n\n\n\u30b0\u30e9\u30d5\u3067\u65e5\u672c\u8a9e\u3092\u4f7f\u3046\u5834\u5408\u306e\u6ce8\u610f\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d5\u30a9\u30f3\u30c8\u306b\u306f\u65e5\u672c\u8a9e\u306e\u6587\u5b57\u306e\u30c7\u30fc\u30bf\u304c\u306a\u3044\u305f\u3081\u3001\u65e5\u672c\u8a9e\u3092\u8868\u793a\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u56db\u89d2\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\uff08\u8c46\u8150\u3068\u304b\u547c\u3070\u308c\u3066\u3044\u307e\u3059\uff09\u3002\u305d\u306e\u305f\u3081\u3001FontProperties\u30af\u30e9\u30b9\u3067\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4eca\u56de\u306fUbuntu 16.04 LTS\u306b\u5165\u3063\u3066\u3044\u305fTakaoGothic.ttf\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u5207\u308a\u66ff\u3048\u3066\u3057\u307e\u3046\u65b9\u6cd5\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\nx\u8ef8\u306e\u5024\u306e\u7bc4\u56f2\n\u30b0\u30e9\u30d5\u306e\u8ef8\u306e\u7bc4\u56f2\u306fmatplotlib\u304c\u9069\u5f53\u306b\u6c7a\u3081\u3066\u304f\u308c\u308b\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306e\u5834\u5408\u3001x\u8ef8\u304c-2\u301c10\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u3001\u305d\u306e\u307e\u307e\u3060\u3068\u5de6\u306b\u4f59\u767d\u304c\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u305d\u306e\u305f\u3081\u3001plt.xlim()\u3067\u7bc4\u56f2\u3092-1\u301c10\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30b0\u30ea\u30c3\u30c9\u306e\u8868\u793a\n\u30b0\u30ea\u30c3\u30c9\u304c\u3042\u3063\u305f\u65b9\u304c\u898b\u3084\u3059\u3044\u306e\u3067\u3001plt.grid()\u3067y\u8ef8\u3060\u3051\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3000\n38\u672c\u76ee\u306e\u30ce\u30c3\u30af\u306f\u4ee5\u4e0a\u3067\u3059\u3002\u8aa4\u308a\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5e78\u3044\u3067\u3059\u3002\n\n\u5b9f\u884c\u7d50\u679c\u306b\u306f\u3001100\u672c\u30ce\u30c3\u30af\u3067\u7528\u3044\u308b\u30b3\u30fc\u30d1\u30b9\u30fb\u30c7\u30fc\u30bf\u3067\u914d\u5e03\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u304c\u542b\u307e\u308c\u307e\u3059\u3002\u3053\u306e\u7b2c4\u7ae0\u3067\u7528\u3044\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306f\u9752\u7a7a\u6587\u5eab\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u590f\u76ee\u6f31\u77f3\u306e\u9577\u7de8\u5c0f\u8aac\u300e\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300f\u304c\u5143\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015](http://www.cl.ecei.tohoku.ac.jp/nlp100/)\u306e\u6311\u6226\u8a18\u9332\u3067\u3059\u3002\u74b0\u5883\u306fUbuntu 16.04 LTS \uff0b Python 3.5.2 \\:\\: Anaconda 4.1.1 (64-bit)\u3067\u3059\u3002\u904e\u53bb\u306e\u30ce\u30c3\u30af\u306e\u4e00\u89a7\u306f[\u3053\u3061\u3089](http://qiita.com/segavvy/items)\u304b\u3089\u3069\u3046\u305e\u3002\n\n## \u7b2c4\u7ae0: \u5f62\u614b\u7d20\u89e3\u6790\n>\u590f\u76ee\u6f31\u77f3\u306e\u5c0f\u8aac\u300e\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300f\u306e\u6587\u7ae0\uff08neko.txt\uff09\u3092MeCab\u3092\u4f7f\u3063\u3066\u5f62\u614b\u7d20\u89e3\u6790\u3057\uff0c\u305d\u306e\u7d50\u679c\u3092neko.txt.mecab\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u305b\u3088\uff0e\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u3044\u3066\uff0c\u4ee5\u4e0b\u306e\u554f\u306b\u5bfe\u5fdc\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u88c5\u305b\u3088\uff0e\n>\n>\u306a\u304a\uff0c\u554f\u984c37, 38, 39\u306fmatplotlib\u3082\u3057\u304f\u306fGnuplot\u3092\u7528\u3044\u308b\u3068\u3088\u3044\uff0e\n\n###37. \u983b\u5ea6\u4e0a\u4f4d10\u8a9e\n>\u51fa\u73fe\u983b\u5ea6\u304c\u9ad8\u304410\u8a9e\u3068\u305d\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u30b0\u30e9\u30d5\uff08\u4f8b\u3048\u3070\u68d2\u30b0\u30e9\u30d5\u306a\u3069\uff09\u3067\u8868\u793a\u305b\u3088\uff0e\n\n####\u51fa\u6765\u4e0a\u304c\u3063\u305f\u30b3\u30fc\u30c9\uff1a\n\n```python:main.py\n# coding: utf-8\nimport MeCab\nfrom collections import Counter\nimport matplotlib.pyplot as plt\nfrom matplotlib.font_manager import FontProperties\n\nfname = 'neko.txt'\nfname_parsed = 'neko.txt.mecab'\n\n\ndef parse_neko():\n\t'''\u300c\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300d\u3092\u5f62\u614b\u7d20\u89e3\u6790\n\t\u300c\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300d(neko.txt)\u3092\u5f62\u614b\u7d20\u89e3\u6790\u3057\u3066neko.txt.mecab\u306b\u4fdd\u5b58\u3059\u308b\n\t'''\n\n\twith open(fname) as data_file, \\\n\t\t\topen(fname_parsed, mode='w') as out_file:\n\n\t\tmecab = MeCab.Tagger()\n\t\tout_file.write(mecab.parse(data_file.read()))\n\n\ndef neco_lines():\n\t'''\u300c\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300d\u306e\u5f62\u614b\u7d20\u89e3\u6790\u7d50\u679c\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\n\t\u300c\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300d\u306e\u5f62\u614b\u7d20\u89e3\u6790\u7d50\u679c\u3092\u9806\u6b21\u8aad\u307f\u8fbc\u3093\u3067\u3001\u5404\u5f62\u614b\u7d20\u3092\n\t\u30fb\u8868\u5c64\u5f62\uff08surface\uff09\n\t\u30fb\u57fa\u672c\u5f62\uff08base\uff09\n\t\u30fb\u54c1\u8a5e\uff08pos\uff09\n\t\u30fb\u54c1\u8a5e\u7d30\u5206\u985e1\uff08pos1\uff09\n\t\u306e4\u3064\u3092\u30ad\u30fc\u3068\u3059\u308b\u8f9e\u66f8\u306b\u683c\u7d0d\u3057\u30011\u6587\u305a\u3064\u3001\u3053\u306e\u8f9e\u66f8\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u8fd4\u3059\n\n\t\u623b\u308a\u5024\uff1a\n\t1\u6587\u306e\u5404\u5f62\u614b\u7d20\u3092\u8f9e\u66f8\u5316\u3057\u305f\u30ea\u30b9\u30c8\n\t'''\n\twith open(fname_parsed) as file_parsed:\n\n\t\tmorphemes = []\n\t\tfor line in file_parsed:\n\n\t\t\t# \u8868\u5c64\u5f62\u306ftab\u533a\u5207\u308a\u3001\u305d\u308c\u4ee5\u5916\u306f','\u533a\u5207\u308a\u3067\u30d0\u30e9\u3059\n\t\t\tcols = line.split('\\t')\n\t\t\tif(len(cols) < 2):\n\t\t\t\traise StopIteration\t\t# \u533a\u5207\u308a\u304c\u306a\u3051\u308c\u3070\u7d42\u4e86\n\t\t\tres_cols = cols[1].split(',')\n\n\t\t\t# \u8f9e\u66f8\u4f5c\u6210\u3001\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\n\t\t\tmorpheme = {\n\t\t\t\t'surface': cols[0],\n\t\t\t\t'base': res_cols[6],\n\t\t\t\t'pos': res_cols[0],\n\t\t\t\t'pos1': res_cols[1]\n\t\t\t}\n\t\t\tmorphemes.append(morpheme)\n\n\t\t\t# \u54c1\u8a5e\u7d30\u5206\u985e1\u304c'\u53e5\u70b9'\u306a\u3089\u6587\u306e\u7d42\u308f\u308a\u3068\u5224\u5b9a\n\t\t\tif res_cols[1] == '\u53e5\u70b9':\n\t\t\t\tyield morphemes\n\t\t\t\tmorphemes = []\n\n\n# \u5f62\u614b\u7d20\u89e3\u6790\nparse_neko()\n\n# Counter\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5358\u8a9e\u3092\u30bb\u30c3\u30c8\nword_counter = Counter()\nfor line in neco_lines():\n\tword_counter.update([morpheme['surface'] for morpheme in line])\n\n# \u983b\u5ea6\u4e0a\u4f4d10\u8a9e\u306e\u53d6\u5f97\nsize = 10\nlist_word = word_counter.most_common(size)\nprint(list_word)\n\n# \u5358\u8a9e\uff08x\u8ef8\u7528\uff09\u3068\u51fa\u73fe\u6570\uff08y\u8ef8\u7528\uff09\u306e\u30ea\u30b9\u30c8\u306b\u5206\u89e3\nlist_zipped = list(zip(*list_word))\nwords = list_zipped[0]\ncounts = list_zipped[1]\n\n# \u30b0\u30e9\u30d5\u3067\u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\u60c5\u5831(\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u307e\u307e\u3067\u306f\u65e5\u672c\u8a9e\u304c\u8868\u793a\u3067\u304d\u306a\u3044)\nfp = FontProperties(\n\tfname='/usr/share/fonts/truetype/takao-gothic/TakaoGothic.ttf'\n)\n\n# \u68d2\u30b0\u30e9\u30d5\u306e\u30c7\u30fc\u30bf\u6307\u5b9a\nplt.bar(\n\trange(0, size),\t\t# x\u8ef8\u306e\u5024\uff080,1,2...9\uff09\n\tcounts,\t\t\t\t# \u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308by\u8ef8\u306e\u5024\n\talign='center'\t\t# x\u8ef8\u306b\u304a\u3051\u308b\u68d2\u30b0\u30e9\u30d5\u306e\u8868\u793a\u4f4d\u7f6e\n)\n\n# x\u8ef8\u306e\u30e9\u30d9\u30eb\u306e\u6307\u5b9a\nplt.xticks(\n\trange(0, size),\t\t# x\u8ef8\u306e\u5024\uff080,1,2...9\uff09\n\twords,\t\t\t\t# \u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb\n\tfontproperties=fp\t# \u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\u60c5\u5831\n)\n\n# x\u8ef8\u306e\u5024\u306e\u7bc4\u56f2\u306e\u8abf\u6574\nplt.xlim(\n\txmin=-1, xmax=size\t# -1\u301c10\uff08\u5de6\u53f3\u306b1\u306e\u4f59\u88d5\u3092\u6301\u305f\u305b\u3066\u898b\u6804\u3048\u826f\u304f\uff09\n)\n\n# \u30b0\u30e9\u30d5\u306e\u30bf\u30a4\u30c8\u30eb\u3001\u30e9\u30d9\u30eb\u6307\u5b9a\nplt.title(\n\t'37. \u983b\u5ea6\u4e0a\u4f4d10\u8a9e',\t# \u30bf\u30a4\u30c8\u30eb\n\tfontproperties=fp\t# \u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\u60c5\u5831\n)\nplt.xlabel(\n\t'\u51fa\u73fe\u983b\u5ea6\u304c\u9ad8\u304410\u8a9e',# x\u8ef8\u30e9\u30d9\u30eb\n\tfontproperties=fp\t# \u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\u60c5\u5831\n)\nplt.ylabel(\n\t'\u51fa\u73fe\u983b\u5ea6',\t\t\t# y\u8ef8\u30e9\u30d9\u30eb\n\tfontproperties=fp\t# \u4f7f\u3046\u30d5\u30a9\u30f3\u30c8\u60c5\u5831\n)\n\n# \u30b0\u30ea\u30c3\u30c9\u3092\u8868\u793a\nplt.grid(axis='y')\n\n# \u8868\u793a\nplt.show()\n```\n\n####\u5b9f\u884c\u7d50\u679c\uff1a\n\n```console:\u7aef\u672b\n[('\u306e', 9198), ('\u3002', 7486), ('\u3066', 6798), ('\u3001', 6772), ('\u306f', 6418), ('\u306b', 6177), ('\u3092', 6047), ('\u3068', 5486), ('\u304c', 5339), ('\u305f', 3968)]\n```\n\n![Kobito.RYO5Er.png](https://qiita-image-store.s3.amazonaws.com/0/139624/e66ae60f-86ed-9d56-2e89-fe375250e155.png \"Kobito.RYO5Er.png\")\n\n###matplotlib\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u554f\u984c\u3067\u5968\u3081\u3089\u308c\u3066\u3044\u308bmatplotlib\u306f\u3059\u3067\u306b\u5165\u3063\u3066\u3044\u307e\u3057\u305f\u3002[\u554f\u984c02](http://qiita.com/segavvy/items/725b20f21951975a06fd)\u3067\u5165\u308c\u305fAnaconda\u306b\u542b\u307e\u308c\u3066\u3044\u305f\u3088\u3046\u3067\u3059\u3002\u826f\u304b\u3063\u305f^^\n\n###matplotlib\u306e\u4f7f\u3044\u65b9\n\n`parse_neko()`\u3068`neco_lines()`\u3001\u304a\u3088\u3073`word_counter`\u3092\u6c42\u3081\u308b\u6240\u307e\u3067\u306f[\u524d\u554f](http://qiita.com/segavvy/items/932c1413e2552f208dfc)\u3068\u540c\u3058\u3067\u3059\u3002\n\nmatplotlib\u305d\u306e\u3082\u306e\u306b\u3064\u3044\u3066\u306f\u3001\u30cd\u30c3\u30c8\u306b\u89e3\u8aac\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u306e\u3067\u8a73\u7d30\u306f\u5272\u611b\u3057\u307e\u3059\u3002\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30b5\u30a4\u30c8\u306f[\u3053\u3061\u3089](http://matplotlib.org)\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u3001\u3044\u304f\u3064\u304b\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\u30b3\u30fc\u30c9\u306b\u3082\u591a\u3081\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u5165\u308c\u3066\u307f\u307e\u3057\u305f\u3002\n\n####\u521d\u3081\u3066\u5b9f\u884c\u3057\u305f\u6642\u306ewarning\n\nmatplotlib\u3092\u521d\u3081\u3066`import`\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u8b66\u544a\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```console:\u7aef\u672b\nsegavvy@ubuntu:~/\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8/\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af2015/37$ python main.py \n/home/segavvy/anaconda3/lib/python3.5/site-packages/matplotlib/font_manager.py:273: UserWarning: Matplotlib is building the font cache using fc-list. This may take a moment.\n  warnings.warn('Matplotlib is building the font cache using fc-list. This may take a moment.')\n```\n\n\u3053\u308c\u306f\u3001\u30d5\u30a9\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u30d3\u30eb\u30c9\u3059\u308b\u4f5c\u696d\u3060\u305d\u3046\u3067\u3001\u521d\u56de\u3060\u3051\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u6b21\u56de\u4ee5\u964d\u306f\u51fa\u3066\u3053\u306a\u3044\u306e\u3067\u3001\u7279\u306b\u6c17\u306b\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n####\u68d2\u30b0\u30e9\u30d5\n\n\u68d2\u30b0\u30e9\u30d5\u306f[`pyplot.bar()`](http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.bar)\u3092\u4f7f\u3044\u307e\u3059\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u5fc5\u9808\u306a\u306e\u306f\u3001x\u8ef8\u306e\u5024\u306e\u30ea\u30b9\u30c8\u3068\u3001\u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308by\u8ef8\u306e\u5024\u306e\u30ea\u30b9\u30c8\u3060\u3051\u3067\u3059\u3002`align='center'`\u306f\u8868\u793a\u3092\u4e2d\u592e\u306b\u3057\u305f\u304b\u3063\u305f\u305f\u3081\u306b\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u6307\u5b9a\u3057\u306a\u3044\u3068\u5de6\u306b\u5bc4\u308a\u307e\u3059\u306e\u3067\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n####\u30b0\u30e9\u30d5\u7528\u306b\u7d50\u679c\u3092\u5909\u63db\n`word_counter.most_common(10)`\u306e\u53d6\u5f97\u7d50\u679c\u306f\u3001\n\n```console:list_word\n[('\u306e', 9198), ('\u3002', 7486), ('\u3066', 6798), ('\u3001', 6772), ('\u306f', 6418), ('\u306b', 6177), ('\u3092', 6047), ('\u3068', 5486), ('\u304c', 5339), ('\u305f', 3968)]\n```\n\n\u3068\u3044\u3046\u5f62\u3067\u3059\u304c\u3001\u30b0\u30e9\u30d5\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001x\u8ef8\uff08\u5358\u8a9e\uff09\u3068y\u8ef8\uff08\u305d\u306e\u51fa\u73fe\u983b\u5ea6\uff09\u306e\u30ea\u30b9\u30c8\u306b\u5206\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f[\u554f\u984c02](http://qiita.com/segavvy/items/725b20f21951975a06fd)\u3067\u51fa\u3066\u304d\u305f`zip()`\u3092\u4f7f\u3046\u3068\u7c21\u5358\u3067\u3059\u3002\n\n```console:list(zip(*list_word))\n[('\u306e', '\u3002', '\u3066', '\u3001', '\u306f', '\u306b', '\u3092', '\u3068', '\u304c', '\u305f'), (9198, 7486, 6798, 6772, 6418, 6177, 6047, 5486, 5339, 3968)]\n```\n\n####\u30b0\u30e9\u30d5\u3067\u65e5\u672c\u8a9e\u3092\u4f7f\u3046\u5834\u5408\u306e\u6ce8\u610f\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d5\u30a9\u30f3\u30c8\u306b\u306f\u65e5\u672c\u8a9e\u306e\u6587\u5b57\u306e\u30c7\u30fc\u30bf\u304c\u306a\u3044\u305f\u3081\u3001\u65e5\u672c\u8a9e\u3092\u8868\u793a\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u56db\u89d2\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\uff08\u8c46\u8150\u3068\u304b\u547c\u3070\u308c\u3066\u3044\u307e\u3059\uff09\u3002\u305d\u306e\u305f\u3081\u3001[`FontProperties`\u30af\u30e9\u30b9](http://matplotlib.org/api/font_manager_api.html#matplotlib.font_manager.FontProperties)\u3067\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4eca\u56de\u306fUbuntu 16.04 LTS\u306b\u5165\u3063\u3066\u3044\u305f`TakaoGothic.ttf`\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u5207\u308a\u66ff\u3048\u3066\u3057\u307e\u3046\u65b9\u6cd5\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n####x\u8ef8\u306e\u5024\u306e\u7bc4\u56f2\n\n\u30b0\u30e9\u30d5\u306e\u8ef8\u306e\u7bc4\u56f2\u306fmatplotlib\u304c\u9069\u5f53\u306b\u6c7a\u3081\u3066\u304f\u308c\u308b\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306e\u5834\u5408\u3001x\u8ef8\u304c-2\u301c10\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u3001\u305d\u306e\u307e\u307e\u3060\u3068\u5de6\u306b\u4f59\u767d\u304c\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n![Kobito.gvp7cv.png](https://qiita-image-store.s3.amazonaws.com/0/139624/cb93d845-b449-60b7-c2a1-ef7c4cc2a920.png \"Kobito.gvp7cv.png\")\n\n\u305d\u306e\u305f\u3081\u3001[`plt.xlim()`](http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.xlim)\u3067\u7bc4\u56f2\u3092-1\u301c10\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n####\u30b0\u30ea\u30c3\u30c9\u306e\u8868\u793a\n\n\u30b0\u30ea\u30c3\u30c9\u304c\u3042\u3063\u305f\u65b9\u304c\u898b\u3084\u3059\u3044\u306e\u3067\u3001[`plt.grid()`](http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.grid)\u3067y\u8ef8\u3060\u3051\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u3000\n38\u672c\u76ee\u306e\u30ce\u30c3\u30af\u306f\u4ee5\u4e0a\u3067\u3059\u3002\u8aa4\u308a\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5e78\u3044\u3067\u3059\u3002\n<hr>\n\n*\u5b9f\u884c\u7d50\u679c\u306b\u306f\u3001[100\u672c\u30ce\u30c3\u30af\u3067\u7528\u3044\u308b\u30b3\u30fc\u30d1\u30b9\u30fb\u30c7\u30fc\u30bf](http://www.cl.ecei.tohoku.ac.jp/nlp100/#data)\u3067\u914d\u5e03\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u304c\u542b\u307e\u308c\u307e\u3059\u3002\u3053\u306e\u7b2c4\u7ae0\u3067\u7528\u3044\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306f[\u9752\u7a7a\u6587\u5eab](http://www.aozora.gr.jp)\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u590f\u76ee\u6f31\u77f3\u306e\u9577\u7de8\u5c0f\u8aac\u300e\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300f\u304c\u5143\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002*\n", "tags": ["\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af", "mecab", "Python", "\u5f62\u614b\u7d20\u89e3\u6790", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406"]}