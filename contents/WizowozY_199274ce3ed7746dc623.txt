{"context": " More than 1 year has passed since last update.\u3059\u3054\u3044\u5358\u7d14\u306a\u3053\u3068\u3067\u3059\u304c\u306f\u307e\u3063\u305f\u6240\u3060\u3063\u305f\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\n\u30fb\u3084\u308a\u305f\u3044\u3053\u3068\n\u9023\u60f3\u914d\u5217\u306e\u5024\u3092\u3082\u3068\u306b\u3057\u305fsort    -> map\u3060\u3068\u30ad\u30fc\u3092\u3082\u3068\u306b\u52dd\u624b\u306bsort\u3057\u3066\u308b\u305f\u3081\u5024\u3067sort\u3067\u304d\u306a\u3044\n\u30fbvector\u3068pair\u3092\u4f7f\u3063\u3066\u9023\u60f3\u914d\u5217\u3092\u4f5c\u6210\n\u30ad\u30fc : string\n\u5024 : int\u306e\u9023\u60f3\u914d\u5217\u306e\u5834\u5408\n\nassociativearr.cpp\n#include<iostream>\n#include<string>\n#include<vector>            //<-vector\u7528\n#include<algorithm>         //<-sort\u7528\nusing namespace std;\ntypedef pair<string, int> ass_arr;\nbool sort_less(const ass_arr& left,const ass_arr& right){\n    return left.second < right.second;\n}\nbool sort_greater(const ass_arr& left,const ass_arr& right){\n    return left.second > right.second;\n}\nint main(){\n    int n;\n    string str;\n    vector<pair<string, int> > arr;\n    vector<pair<string, int> >::iterator it;\n    cin >> n;\n    //\u30c7\u30fc\u30bf\u8ffd\u52a0\u90e8\n    while(n--){\n        cin >> str;\n        arr.push_back(pair<string, int>(str,rand()%10));\n    }\n\n    //\u964d\u9806\u30bd\u30fc\u30c8\n    sort(arr.begin(),arr.end(),sort_greater);\n    it = arr.begin();\n    while(it!=arr.end()){\n        cout << it->first << \" \" << it->second << endl;\n        it++;\n    }\n\n    //\u6607\u9806\u30bd\u30fc\u30c8\n    sort(arr.begin(),arr.end(),sort_less);\n    it = arr.begin();\n    while(it!=arr.end()){\n        cout << it->first << \" \" << it->second << endl;\n        it++;\n    }\n}\n\n\n\u3059\u3054\u3044\u5358\u7d14\u306a\u3053\u3068\u3067\u3059\u304c\u306f\u307e\u3063\u305f\u6240\u3060\u3063\u305f\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\n\n\u30fb\u3084\u308a\u305f\u3044\u3053\u3068\n\u9023\u60f3\u914d\u5217\u306e\u5024\u3092\u3082\u3068\u306b\u3057\u305fsort\t-> map\u3060\u3068\u30ad\u30fc\u3092\u3082\u3068\u306b\u52dd\u624b\u306bsort\u3057\u3066\u308b\u305f\u3081\u5024\u3067sort\u3067\u304d\u306a\u3044\n\n\u30fbvector\u3068pair\u3092\u4f7f\u3063\u3066\u9023\u60f3\u914d\u5217\u3092\u4f5c\u6210\n\u30ad\u30fc : string\n\u5024 : int\u306e\u9023\u60f3\u914d\u5217\u306e\u5834\u5408\n\n```cpp:associativearr.cpp\n#include<iostream>\n#include<string>\n#include<vector>            //<-vector\u7528\n#include<algorithm>         //<-sort\u7528\nusing namespace std;\ntypedef pair<string, int> ass_arr;\nbool sort_less(const ass_arr& left,const ass_arr& right){\n    return left.second < right.second;\n}\nbool sort_greater(const ass_arr& left,const ass_arr& right){\n    return left.second > right.second;\n}\nint main(){\n    int n;\n    string str;\n    vector<pair<string, int> > arr;\n    vector<pair<string, int> >::iterator it;\n    cin >> n;\n    //\u30c7\u30fc\u30bf\u8ffd\u52a0\u90e8\n    while(n--){\n        cin >> str;\n        arr.push_back(pair<string, int>(str,rand()%10));\n    }\n\n    //\u964d\u9806\u30bd\u30fc\u30c8\n    sort(arr.begin(),arr.end(),sort_greater);\n    it = arr.begin();\n    while(it!=arr.end()){\n        cout << it->first << \" \" << it->second << endl;\n        it++;\n    }\n\n    //\u6607\u9806\u30bd\u30fc\u30c8\n    sort(arr.begin(),arr.end(),sort_less);\n    it = arr.begin();\n    while(it!=arr.end()){\n        cout << it->first << \" \" << it->second << endl;\n        it++;\n    }\n}\n```\n", "tags": ["C++", "algorithm"]}