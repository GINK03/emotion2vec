{"context": "\n\n\u3084\u308a\u305f\u3044\u3053\u3068\nNodeJS \u306e cluster \u30e2\u30b8\u30e5\u30fc\u30eb \u306f\u3001\u89aa\u30d7\u30ed\u30bb\u30b9 (Master) \u304b\u3089 \u5b50\u30d7\u30ed\u30bb\u30b9 (Worker) \u3092 fork \u3057, \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092 Worker \u306b\u5206\u6563\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059. \u5b50\u30d7\u30ed\u30bb\u30b9\u3054\u3068\u306b\u5225\u3005\u306e port \u3092 listen \u3057\u306a\u304f\u3066\u3082\u3001 \u3042\u308b\u5358\u4e00\u306e port \u3078\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c Worker \u3078\u3068\u81ea\u52d5\u3067\u5272\u308a\u632f\u3089\u308c\u307e\u3059. \n\u3053\u306e\u3042\u305f\u308a\u306e\u4ed5\u7d44\u307f\u306b\u95a2\u3057\u3066\u306f\u3001\u3053\u306e\u8a18\u4e8b\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u304b\u3068\u601d\u3044\u307e\u3059.\nNode.js\u306eCluster\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u3001\u51e6\u7406\u3092\u4e26\u5217\u5316\u30fb\u9ad8\u901f\u5316\u3059\u308b\ncluster \u3092\u4f7f\u3046\u5927\u304d\u306a\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u306f\u3001 CPU \u306e\u30ea\u30bd\u30fc\u30b9\u3092\u3046\u307e\u304f\u4f7f\u3046\u3053\u3068\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\n\u4ed6\u306b\u306f\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3001 Worker \u30d7\u30ed\u30bb\u30b9\u3092\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u306a\u3057\u306b\u53cd\u6620\u304c\u884c\u3048\u308b\u3053\u3068\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059. \u65e2\u5b58 Worker \u306e\u51e6\u7406\u4e2d\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4e2d\u65ad\u3059\u308b\u3053\u3068\u306a\u304f\u3001\u65b0\u3057\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u65b0\u3057\u304f\u4e0a\u304c\u3063\u3066\u304d\u305f Worker \u306b\u5272\u308a\u632f\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\n\u3053\u308c\u306f\u3001\u901a\u5e38\u306e HTTP \u306e\u30b5\u30fc\u30d0\u3067\u3082\u6709\u52b9\u3067\u3059\u3057\u3001\u6bd4\u8f03\u7684\u9577\u3044\u63a5\u7d9a\u3092\u7dad\u6301\u3059\u308b WebSocket \u30b5\u30fc\u30d0\u3067\u3046\u307e\u304f\u4f7f\u3048\u305f\u3089\u5b09\u3057\u3044\u3068\u601d\u3044\u307e\u3059.\n\u3067\u306f\u3001 cluster \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u3001\u307f\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059.\n\ncluster.fork \u3067 Worker \u3092\u3064\u304f\u3063\u3066\u307f\u308b\ncluster.fork \u3067 WebSocket \u30b5\u30fc\u30d0\u3092 Worker \u3068\u3057\u3066\u751f\u6210\u3059\u308b\u57fa\u672c\u7684\u306a\u30b3\u30fc\u30c9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059. \n\u307e\u305f\u3001\u305d\u306e\u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\u3092\u884c\u306a\u3063\u3066\u307f\u307e\u3059.\nWebSocket \u306e\u30b5\u30fc\u30d0\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306f\u3001 ws \u3092\u4f7f\u7528\u3057\u307e\u3057\u305f.\n\u30b5\u30fc\u30d0\u5074\u306e\u30b3\u30fc\u30c9\n\nserver.1.js\nlet cluster = require('cluster');\n\nconst WORKER_NUM = 2;\n\nif (cluster.isMaster) {\n  runMaster();\n} else {\n  runWorker();\n}\n\nfunction runMaster() {\n  for (let i=0; i<WORKER_NUM; ++i) {\n    cluster.fork();\n  }\n  console.log('master start (PID: %d)', process.pid);\n}\n\nfunction runWorker() {\n  let WebSocketServer = require('ws').Server\n  let wss = new WebSocketServer({ port: 8080 });\n\n  console.log('worker start (workerId: %d, PID: %d)', cluster.worker.id, process.pid);\n\n  wss.on('connection', (socket) => {\n    let connectionId = getConnectionId();\n\n    console.log('socket open (workerId: %d, connId: %d)', cluster.worker.id, connectionId);\n\n    socket.on('message', (message) => {\n      console.log('server received (workerId: %d, connId: %d): %s', cluster.worker.id, connectionId, message);\n    });\n\n    socket.on('close', () => {\n      console.log('socket close (workerId: %d, connId: %d)', cluster.worker.id, connectionId);\n    });\n  });\n\n\n  let _connectionId = 0;\n  function getConnectionId() {\n    return ++ _connectionId;\n  }\n}\n\n\n\u7279\u306b\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u3001 Worker \u30d7\u30ed\u30bb\u30b9\u306f\u3001 Master \u30d7\u30ed\u30bb\u30b9\u3068\u540c\u3058 js \u30d5\u30a1\u30a4\u30eb\u304c\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u308a\u307e\u3059. \u306a\u306e\u3067\u3001 cluster.isMaster \u3067 \u4eca\u5b9f\u884c\u4e2d\u306e\u30d7\u30ed\u30bb\u30b9\u304c Master \u306a\u306e\u304b\u3001 Worker \u306a\u306e\u304b\u3092\u8abf\u3079\u307e\u3059.\nMaster \u306f cluster.fork \u3067 Worker \u3092\u751f\u6210\u3057\u307e\u3059.\nWorker \u306f\u3001 \u666e\u901a\u306b\u30b5\u30fc\u30d0\u3092\u7acb\u3061\u4e0a\u3052\u3066 listen \u3059\u308c\u3070\u3088\u3044\u3060\u3051\u3067\u3059. \u4e0a\u306e\u4f8b\u3067\u306f\u3001 8080 \u30dd\u30fc\u30c8\u3067 WebSocket \u306e\u63a5\u7d9a\u3092\u5f85\u3061\u53d7\u3051\u307e\u3059. Worker \u306f 2\u3064\u751f\u6210\u3055\u308c\u3001\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3\u3067\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5206\u6563\u3055\u308c\u307e\u3059.\n\u3053\u306e\u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\u3092\u884c\u3046\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u30b3\u30fc\u30c9\u3067\u3059.\n\nclient.1.js\nlet WebSocket = require('ws');\nlet ws = new WebSocket('ws://localhost:8080/');\n\nlet intervalId;\nws.on('open', () => {\n  intervalId = setInterval(() => {\n    let message = 'hello';\n    ws.send(message);\n    console.log('client sent: %s', message);\n  }, 1000);\n});\n\nws.on('close', () => {\n  clearInterval(intervalId);\n});\n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306f\u3001WebSocket \u306e\u63a5\u7d9a\u30921\u3064\u958b\u304d\u30011\u79d2\u3054\u3068\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u7d9a\u3051\u308b\u30b3\u30fc\u30c9\u3067\u3059.\n\u3067\u306f\u3001\u3053\u308c\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059.\n\u30b5\u30fc\u30d0\u5074\u306e\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\u306f node server.1.js \u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\u306f node client.1.js \u3067\u3059. \u30bf\u30fc\u30df\u30ca\u30eb\u3092\u8907\u6570\u7acb\u3061\u4e0a\u3052\u3066\u3001\u4f8b\u3048\u3070\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092 3\u3064\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046. \u3059\u308b\u3068 \u30b5\u30fc\u30d0\u5074\u306e\u51fa\u529b\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f.\n$ node server.1.js \nmaster start (PID: 28600)\nworker start (workerId: 1, PID: 28601)\nworker start (workerId: 2, PID: 28602)\nsocket open (workerId: 1, connId: 1)\nserver received (workerId: 1, connId: 1): hello\nserver received (workerId: 1, connId: 1): hello\n...\nsocket open (workerId: 2, connId: 1)\nserver received (workerId: 1, connId: 1): hello\nserver received (workerId: 2, connId: 1): hello\nserver received (workerId: 1, connId: 1): hello\nserver received (workerId: 2, connId: 1): hello\n...\nsocket open (workerId: 1, connId: 2)\nserver received (workerId: 1, connId: 1): hello\nserver received (workerId: 2, connId: 1): hello\nserver received (workerId: 1, connId: 2): hello\nserver received (workerId: 1, connId: 1): hello\nserver received (workerId: 2, connId: 1): hello\nserver received (workerId: 1, connId: 2): hello\n...\n\n\u307e\u305a\u3001 Master \u304c\u8d77\u52d5\u5f8c\u3001 Worker\u304c2\u3064\u7acb\u3061\u4e0a\u304c\u3063\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059.\n\u305d\u306e\u5f8c\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u63a5\u7d9a\u3092\u884c\u3046\u3068\u3001 Worker \u5074\u3067\u3001Websocket \u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u78ba\u7acb\u3067\u304d\u3066\u304a\u308a\u3001\u3055\u3089\u306b\u63a5\u7d9a\u3092\u5897\u3084\u3057\u3066\u3044\u304f\u3068\u3001Worker \u9593\u3067\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5206\u6563\u3067\u304d\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059.\n\nworker.disconnect \u3092\u4f7f\u3063\u3066 Worker \u3092\u5165\u308c\u66ff\u3048\u308b\nWorker \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f\u3001 disconnect \u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059.\n\u3053\u308c\u306f\u4f55\u304b\u3068\u3044\u3046\u3068\u3001\u305d\u306e Worker \u914d\u4e0b\u306e net.Server \u306e close \u304c\u547c\u3070\u308c\u3001\u65b0\u898f\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u53d7\u3051\u4ed8\u3051\u306a\u304f\u306a\u308a\u307e\u3059. \u30dd\u30a4\u30f3\u30c8\u306f\u3001\u65e2\u5b58\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5f37\u5236\u7684\u306b\u3059\u3050\u9589\u3058\u3089\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u306a\u304f\u3001\u6b63\u5e38\u306b\u9589\u3058\u3089\u308c\u308b\u306e\u304c\u5f85\u305f\u308c\u308b\u3068\u3053\u308d\u3067\u3059. \u5168\u3066\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u9589\u3058\u3089\u308c\u308b\u3068\u3001 Worker \u306f\u30d7\u30ed\u30bb\u30b9\u3092\u7d42\u4e86\u3057\u307e\u3059.\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001 fork\u3067\u65b0\u3057\u3044 Worker \u3092\u751f\u6210\u3057\u3064\u3064\u3001 disconnect \u3067\u53e4\u3044 Worker \u304c\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u53d7\u3051\u4ed8\u3051\u306a\u3044\u3088\u3046\u306b\u3059\u308c\u3070\u3001\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u306a\u3057\u306b Worker \u3092\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\n\u30b5\u30fc\u30d0\u5074\u306e\u30b3\u30fc\u30c9\u306b\u5c11\u3057\u51e6\u7406\u3092\u52a0\u3048\u307e\u3059.\n\nserver.2.js\nlet cluster = require('cluster');\n\nconst WORKER_NUM = 2;\n\nif (cluster.isMaster) {\n  runMaster();\n} else {\n  runWorker();\n}\n\nfunction runMaster() {\n  for (let i=0; i<WORKER_NUM; ++i) {\n    cluster.fork();\n  }\n\n  cluster.on('disconnect', (worker) => {\n    console.log('worker disconnected (workerId: %d)', worker.id);\n  });\n\n  cluster.on('exit', (worker) => {\n    console.log('worker died (workerId: %d)', worker.id);\n  });\n\n  process.on('SIGUSR2', () => {\n    for (let id in cluster.workers) {\n      let worker = cluster.workers[id];\n      worker.disconnect();\n    }\n    for (let i=0; i<WORKER_NUM; ++i) {\n      cluster.fork();\n    }\n  });\n\n  console.log('master start (PID: %d)', process.pid);\n}\n\nfunction runWorker() {\n  let WebSocketServer = require('ws').Server\n  let wss = new WebSocketServer({ port: 8080 });\n\n  console.log('worker start (workerId: %d, PID: %d)', cluster.worker.id, process.pid);\n\n  wss.on('connection', (socket) => {\n    let connectionId = getConnectionId();\n\n    console.log('socket open (workerId: %d, connId: %d)', cluster.worker.id, connectionId);\n\n    socket.on('message', (message) => {\n      console.log('server received (workerId: %d, connId: %d): %s', cluster.worker.id, connectionId, message);\n    });\n\n    socket.on('close', () => {\n      console.log('socket close (workerId: %d, connId: %d)', cluster.worker.id, connectionId);\n    });\n  });\n\n\n  let _connectionId = 0;\n  function getConnectionId() {\n    return ++ _connectionId;\n  }\n}\n\n\nUSR2 \u30b7\u30b0\u30ca\u30eb\u3092\u53d7\u3051\u53d6\u3063\u305f\u969b\u306b\u3001 Worker \u306e \u5165\u308c\u66ff\u3048\u3092\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f. (\u5225\u306b USR2 \u30b7\u30b0\u30ca\u30eb\u3067\u306a\u304f\u3066\u3082\u69cb\u3044\u307e\u305b\u3093)\n\u30b7\u30b0\u30ca\u30eb\u30cf\u30f3\u30c9\u30e9\u5185\u3067\u3001 \u5168\u3066\u306e Worker \u306b\u5bfe\u3057\u3066\u3001 disconnect \u3092\u547c\u3073\u51fa\u3057\u3001 \u305d\u306e\u5f8c\u3001\u65b0 Worker \u3092 fork \u3057\u3066\u3044\u307e\u3059. \n(\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u304c\u306a\u3044\u3088\u3046\u306b\u53b3\u5bc6\u306b\u3084\u308b\u306a\u3089\u3070\u3001 \u65b0 Worker \u3067 server listen \u304c\u3055\u308c\u305f\u306e\u3092\u78ba\u8a8d\u3057\u305f\u5f8c\u3067 \u53e4 Worker \u3092 disconnect \u3059\u308b\u3079\u304d\u3067\u3059.)\n\u3067\u306f\u3001\u52d5\u304b\u3057\u3066\u307f\u307e\u3059.\n\u307e\u305a\u3001 \u30b5\u30fc\u30d0\u5074\u3092\u52d5\u304b\u3057\u305f\u5f8c\u3001 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30921\u3064\u63a5\u7d9a\u3057\u3066\u307f\u307e\u3059.\n$ node server.2.js\nmaster start (PID: 30167)\nworker start (workerId: 2, PID: 30169)\nworker start (workerId: 1, PID: 30168)\nsocket open (workerId: 2, connId: 1)\nserver received (workerId: 2, connId: 1): hello\nserver received (workerId: 2, connId: 1): hello\n...\n\n\u305d\u306e\u5f8c\u3001 \u30b5\u30fc\u30d0\u30fc\u5074\u306e Master \u30d7\u30ed\u30bb\u30b9\u306b\u5bfe\u3057\u3066 USR2 \u30b7\u30b0\u30ca\u30eb \u3092\u9001\u3063\u3066\u307f\u307e\u3059. \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059.\nkill -USR2 30167\n\n\u3059\u308b\u3068\u3001 Server \u5074\u306e\u51fa\u529b\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f.\n...\nworker died (workerId: 1)\nworker disconnected (workerId: 1)\nserver received (workerId: 2, connId: 1): hello\nworker start (workerId: 3, PID: 30211)\nworker start (workerId: 4, PID: 30212)\nserver received (workerId: 2, connId: 1): hello\nserver received (workerId: 2, connId: 1): hello\n...\n\n\u3068\u308a\u3042\u3048\u305a\u3001 workerId: 1 \u306e Worker \u306f\u6b7b\u3093\u3060\u3088\u3046\u3067\u3059. \u3053\u308c\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u53d7\u3051\u3066\u3044\u306a\u3044\u65b9\u306e\u3088\u3046\u3067\u3059. workerId: 2 \u306e Worker \u306f\u5f15\u304d\u7d9a\u304d \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u7d9a\u3051\u3066\u3044\u307e\u3059.\n\u305d\u3057\u3066\u3001 \u65b0\u305f\u306b2\u3064\u306e Worker \u304c\u751f\u6210\u3055\u308c\u307e\u3057\u305f.\n\u3053\u3053\u3067\u3001 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3057\u307e\u3059. (\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u52d5\u304b\u3057\u3066\u308b\u30bf\u30fc\u30df\u30ca\u30eb\u3067Ctrl-C\u3068\u304b\u3067\u5927\u4e08\u592b\u3067\u3059.)\n\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d0\u5074\u306e\u51fa\u529b\u306f\u3053\u3046\u306a\u308a\u307e\u3057\u305f.\n...\nserver received (workerId: 2, connId: 1): hello\nsocket close (workerId: 2, connId: 1)\nworker disconnected (workerId: 2)\nworker died (workerId: 2)\n\nworkerId: 2 \u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u9589\u3058\u3089\u308c\u3001\u30d7\u30ed\u30bb\u30b9\u3082\u7d42\u4e86\u3057\u305f\u3088\u3046\u3067\u3059.\n\u4ee5\u4e0a\u304c\u3001\u30b7\u30f3\u30d7\u30eb\u306a Worker \u5165\u308c\u66ff\u3048\u306e\u4ed5\u7d44\u307f\u3067\u3059.\n\ngraceful reload \u3068\u30c7\u30d7\u30ed\u30a4\n\u5c11\u3057\u307e\u3068\u307e\u3063\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u3064\u3089\u3064\u3089\u3068\u66f8\u304d\u307e\u3059. \u77e5\u898b\u4e0d\u8db3\u3082\u3042\u308b\u3068\u304a\u3082\u3044\u307e\u3059.\n\u4e0a\u3067\u8aac\u660e\u3057\u305f\u4ed5\u7d44\u307f\u3092\u3082\u3046\u5c11\u3057\u6d17\u7df4\u3055\u305b\u3066\u3044\u3051\u3070\u3001\u7d99\u7d9a\u7684\u306a\u30c7\u30d7\u30ed\u30a4\u306b\u7d44\u307f\u8fbc\u3093\u3067\u3044\u3051\u305d\u3046\u3067\u3059. \u5b9f\u969b\u306b\u81ea\u5206\u3067\u66f8\u304d\u4e0a\u3052\u3066\u3082\u3088\u3044\u3057\u3001pm2 \u306e\u3088\u3046\u306a\u9ad8\u6a5f\u80fd\u306a\u3082\u306e\u3092\u4f7f\u3046\u306e\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059.\n\u79c1\u81ea\u8eab\u306f\u3001\u6700\u8fd1\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3001\u540c\u69d8\u306e\u65b9\u6cd5\u3067\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3046\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u307e\u3057\u305f\u304c\u3001\n\u4e00\u5fdc\u3001\u305d\u306e\u69cb\u6210\u3092\u8aac\u660e\u3059\u308b\u3068\u3001AWS\u4e0a\u306b\u69cb\u7bc9\u3057\u3066\u304a\u308a\u3001\u524d\u6bb5\u306b ALB \u3001\u5f8c\u308d\u306eEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4e0a\u306b NodeJS \u306e\u30b5\u30fc\u30d0\u304c\u52d5\u3044\u3066\u304a\u308a\u3001\u30c7\u30d7\u30ed\u30a4\u306f\u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4e0a\u306b\u65b0\u3057\u3044\u30b3\u30fc\u30c9\u3092\u914d\u5e03\u3057\u3066 reload \u3059\u308b\u3068\u3044\u3046\u3088\u3046\u306a\u3082\u306e\u3067\u3059. \u5c0f\u898f\u6a21\u306a\u3082\u306e\u3067\u3059.\n\u5358\u306b\u3001 WebSocket \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3044\u3063\u3066\u3082\u3001\u8981\u6c42\u3084\u898f\u6a21\u611f\u3068\u3044\u3046\u306e\u306f\u7570\u306a\u3063\u3066\u3044\u3066\u3001\u3069\u306e\u3088\u3046\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3084\u30c7\u30d7\u30ed\u30a4\u6226\u7565\u3092\u3068\u308b\u304b\u3068\u3044\u3046\u306e\u306f\u3001\u305d\u308c\u305e\u308c\u3001\u3068\u3044\u3046\u611f\u3058\u304c\u3057\u3066\u3044\u307e\u3059.\n\u8ca0\u8377\u5206\u6563\u3092\u3069\u3046\u3059\u308b\u304b\u3068\u3044\u3046\u554f\u984c\u3092\u307f\u3066\u3082\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u3092\u7f6e\u304f\u65b9\u6cd5\u3068\u3001\u30b5\u30fc\u30d0\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u4e00\u89a7\u3092\u6301\u3063\u3066\u3044\u3066\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u3064\u306a\u3050\u3079\u304d\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8fd4\u3059\u65b9\u6cd5\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u30c7\u30d7\u30ed\u30a4\u3082\u3001\u7a3c\u50cd\u4e2d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u30b3\u30fc\u30c9\u3092\u914d\u5e03\u3057\u3066 reload \u3059\u308b\u65b9\u6cd5\u3082\u3042\u308c\u3070\u3001\u65b0\u3057\u3044\u30b3\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30b5\u30fc\u30d3\u30b9\u30a4\u30f3\u3055\u305b\u3066\u53e4\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30b5\u30fc\u30d3\u30b9\u30a2\u30a6\u30c8\u3055\u305b\u308b\u65b9\u6cd5\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059. \u6642\u4ee3\u7684\u306b\u306f\u5f8c\u8005\u306a\u6c17\u304c\u3057\u307e\u3059. \u6d41\u884c\u3063\u3066\u3044\u308b Docker\u30b3\u30f3\u30c6\u30ca\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3088\u3046\u306a\u5f62\u3067\u3042\u308c\u3070\u5fc5\u7136\u7684\u306b\u305d\u3046\u306a\u308a\u307e\u3059\u3057\u306d. \u305d\u306e\u5834\u5408\u306f\u3001\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u306a\u304f\u306a\u308b\u306e\u3092\u307e\u3063\u3066\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u3059\u308b\u306b\u306f\u3069\u3046\u3057\u305f\u3089\u306e\u304b\u3068\u304b\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059.\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u3001\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5207\u308c\u3066\u3082\u518d\u63a5\u7d9a\u3059\u308c\u3070\u554f\u984c\u306a\u3044\u3082\u306e\u3082\u3042\u308c\u3070\u3001\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5207\u308c\u305f\u3089\u4f53\u9a13\u3092\u81f4\u547d\u7684\u306b\u60aa\u304f\u3059\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059. \u3082\u3061\u308d\u3093\u3001\u518d\u63a5\u7d9a\u3092\u3061\u3083\u3093\u3068\u8003\u616e\u3057\u3066\u3046\u307e\u304f\u3084\u308b\u3001\u3068\u3044\u3046\u306e\u306f\u91cd\u8981\u306a\u3093\u3067\u3059\u304c\u306a\u304b\u306a\u304b\u5168\u3066\u3092\u5b8c\u74a7\u306b\u3084\u308b\u306e\u306f\u96e3\u3057\u3044\u5834\u5408\u3082\u591a\u3044\u3068\u601d\u3044\u307e\u3059.\nWebSocket \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u8a08\u3059\u308b\u969b\u306f\u3001\u3069\u3046\u3084\u3063\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u306e\u304b\u3001\u3068\u3044\u3046\u70b9\u3082\u521d\u3081\u304b\u3089\u8003\u616e\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u5f8c\u304b\u3089\u82e6\u52b4\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093.\n## \u3084\u308a\u305f\u3044\u3053\u3068\n\nNodeJS \u306e [cluster \u30e2\u30b8\u30e5\u30fc\u30eb](https://nodejs.org/api/cluster.html) \u306f\u3001\u89aa\u30d7\u30ed\u30bb\u30b9 (Master) \u304b\u3089 \u5b50\u30d7\u30ed\u30bb\u30b9 (Worker) \u3092 fork \u3057, \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092 Worker \u306b\u5206\u6563\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059. \u5b50\u30d7\u30ed\u30bb\u30b9\u3054\u3068\u306b\u5225\u3005\u306e port \u3092 listen \u3057\u306a\u304f\u3066\u3082\u3001 \u3042\u308b\u5358\u4e00\u306e port \u3078\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c Worker \u3078\u3068\u81ea\u52d5\u3067\u5272\u308a\u632f\u3089\u308c\u307e\u3059. \n\n\u3053\u306e\u3042\u305f\u308a\u306e\u4ed5\u7d44\u307f\u306b\u95a2\u3057\u3066\u306f\u3001\u3053\u306e\u8a18\u4e8b\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u304b\u3068\u601d\u3044\u307e\u3059.\n\n[Node.js\u306eCluster\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u3001\u51e6\u7406\u3092\u4e26\u5217\u5316\u30fb\u9ad8\u901f\u5316\u3059\u308b](http://postd.cc/setting-up-a-node-js-cluster/)\n\n<!--\nNodeJS \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u307f\u308b\u3068\u3053\u306e\u3042\u305f\u308a\u306b\u306a\u308a\u307e\u3059. \u7d30\u304b\u304f\u8ffd\u3046\u306e\u306f\u53b3\u3057\u304f\u3066\u3082\u306a\u3093\u3068\u306a\u304f\u96f0\u56f2\u6c17\u306f\u3064\u304b\u3081\u307e\u3059.\n\n- [lib/cluster.js](https://github.com/nodejs/node/blob/master/lib/cluster.js)\n- [lib/internal/cluster](https://github.com/nodejs/node/tree/master/lib/internal/cluster)\n\n-->\n\ncluster \u3092\u4f7f\u3046\u5927\u304d\u306a\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u306f\u3001 CPU \u306e\u30ea\u30bd\u30fc\u30b9\u3092\u3046\u307e\u304f\u4f7f\u3046\u3053\u3068\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\n\u4ed6\u306b\u306f\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3001 Worker \u30d7\u30ed\u30bb\u30b9\u3092\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u306a\u3057\u306b\u53cd\u6620\u304c\u884c\u3048\u308b\u3053\u3068\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059. \u65e2\u5b58 Worker \u306e\u51e6\u7406\u4e2d\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4e2d\u65ad\u3059\u308b\u3053\u3068\u306a\u304f\u3001\u65b0\u3057\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u65b0\u3057\u304f\u4e0a\u304c\u3063\u3066\u304d\u305f Worker \u306b\u5272\u308a\u632f\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\n\n\u3053\u308c\u306f\u3001\u901a\u5e38\u306e HTTP \u306e\u30b5\u30fc\u30d0\u3067\u3082\u6709\u52b9\u3067\u3059\u3057\u3001\u6bd4\u8f03\u7684\u9577\u3044\u63a5\u7d9a\u3092\u7dad\u6301\u3059\u308b WebSocket \u30b5\u30fc\u30d0\u3067\u3046\u307e\u304f\u4f7f\u3048\u305f\u3089\u5b09\u3057\u3044\u3068\u601d\u3044\u307e\u3059.\n\n\u3067\u306f\u3001 cluster \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u3001\u307f\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059.\n\n## cluster.fork \u3067 Worker \u3092\u3064\u304f\u3063\u3066\u307f\u308b\n\n`cluster.fork` \u3067 WebSocket \u30b5\u30fc\u30d0\u3092 Worker \u3068\u3057\u3066\u751f\u6210\u3059\u308b\u57fa\u672c\u7684\u306a\u30b3\u30fc\u30c9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059. \n\u307e\u305f\u3001\u305d\u306e\u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\u3092\u884c\u306a\u3063\u3066\u307f\u307e\u3059.\n\nWebSocket \u306e\u30b5\u30fc\u30d0\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306f\u3001 [ws](https://github.com/websockets/ws) \u3092\u4f7f\u7528\u3057\u307e\u3057\u305f.\n\n\u30b5\u30fc\u30d0\u5074\u306e\u30b3\u30fc\u30c9\n\n```js:server.1.js\nlet cluster = require('cluster');\n\nconst WORKER_NUM = 2;\n\nif (cluster.isMaster) {\n  runMaster();\n} else {\n  runWorker();\n}\n\nfunction runMaster() {\n  for (let i=0; i<WORKER_NUM; ++i) {\n    cluster.fork();\n  }\n  console.log('master start (PID: %d)', process.pid);\n}\n\nfunction runWorker() {\n  let WebSocketServer = require('ws').Server\n  let wss = new WebSocketServer({ port: 8080 });\n\n  console.log('worker start (workerId: %d, PID: %d)', cluster.worker.id, process.pid);\n\n  wss.on('connection', (socket) => {\n    let connectionId = getConnectionId();\n\n    console.log('socket open (workerId: %d, connId: %d)', cluster.worker.id, connectionId);\n\n    socket.on('message', (message) => {\n      console.log('server received (workerId: %d, connId: %d): %s', cluster.worker.id, connectionId, message);\n    });\n\n    socket.on('close', () => {\n      console.log('socket close (workerId: %d, connId: %d)', cluster.worker.id, connectionId);\n    });\n  });\n\n\n  let _connectionId = 0;\n  function getConnectionId() {\n    return ++ _connectionId;\n  }\n}\n```\n\n\u7279\u306b\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u3001 Worker \u30d7\u30ed\u30bb\u30b9\u306f\u3001 Master \u30d7\u30ed\u30bb\u30b9\u3068\u540c\u3058 js \u30d5\u30a1\u30a4\u30eb\u304c\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u308a\u307e\u3059. \u306a\u306e\u3067\u3001 `cluster.isMaster` \u3067 \u4eca\u5b9f\u884c\u4e2d\u306e\u30d7\u30ed\u30bb\u30b9\u304c Master \u306a\u306e\u304b\u3001 Worker \u306a\u306e\u304b\u3092\u8abf\u3079\u307e\u3059.\n\nMaster \u306f `cluster.fork` \u3067 Worker \u3092\u751f\u6210\u3057\u307e\u3059.\n\nWorker \u306f\u3001 \u666e\u901a\u306b\u30b5\u30fc\u30d0\u3092\u7acb\u3061\u4e0a\u3052\u3066 listen \u3059\u308c\u3070\u3088\u3044\u3060\u3051\u3067\u3059. \u4e0a\u306e\u4f8b\u3067\u306f\u3001 `8080` \u30dd\u30fc\u30c8\u3067 WebSocket \u306e\u63a5\u7d9a\u3092\u5f85\u3061\u53d7\u3051\u307e\u3059. Worker \u306f 2\u3064\u751f\u6210\u3055\u308c\u3001\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3\u3067\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5206\u6563\u3055\u308c\u307e\u3059.\n\n\u3053\u306e\u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\u3092\u884c\u3046\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u30b3\u30fc\u30c9\u3067\u3059.\n\n```js:client.1.js\nlet WebSocket = require('ws');\nlet ws = new WebSocket('ws://localhost:8080/');\n\nlet intervalId;\nws.on('open', () => {\n  intervalId = setInterval(() => {\n    let message = 'hello';\n    ws.send(message);\n    console.log('client sent: %s', message);\n  }, 1000);\n});\n\nws.on('close', () => {\n  clearInterval(intervalId);\n});\n```\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306f\u3001WebSocket \u306e\u63a5\u7d9a\u30921\u3064\u958b\u304d\u30011\u79d2\u3054\u3068\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u7d9a\u3051\u308b\u30b3\u30fc\u30c9\u3067\u3059.\n\n\u3067\u306f\u3001\u3053\u308c\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059.\n\n\u30b5\u30fc\u30d0\u5074\u306e\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\u306f `node server.1.js` \u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\u306f `node client.1.js` \u3067\u3059. \u30bf\u30fc\u30df\u30ca\u30eb\u3092\u8907\u6570\u7acb\u3061\u4e0a\u3052\u3066\u3001\u4f8b\u3048\u3070\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092 3\u3064\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046. \u3059\u308b\u3068 \u30b5\u30fc\u30d0\u5074\u306e\u51fa\u529b\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f.\n\n```shell-session\n$ node server.1.js \nmaster start (PID: 28600)\nworker start (workerId: 1, PID: 28601)\nworker start (workerId: 2, PID: 28602)\nsocket open (workerId: 1, connId: 1)\nserver received (workerId: 1, connId: 1): hello\nserver received (workerId: 1, connId: 1): hello\n...\nsocket open (workerId: 2, connId: 1)\nserver received (workerId: 1, connId: 1): hello\nserver received (workerId: 2, connId: 1): hello\nserver received (workerId: 1, connId: 1): hello\nserver received (workerId: 2, connId: 1): hello\n...\nsocket open (workerId: 1, connId: 2)\nserver received (workerId: 1, connId: 1): hello\nserver received (workerId: 2, connId: 1): hello\nserver received (workerId: 1, connId: 2): hello\nserver received (workerId: 1, connId: 1): hello\nserver received (workerId: 2, connId: 1): hello\nserver received (workerId: 1, connId: 2): hello\n...\n```\n\u307e\u305a\u3001 Master \u304c\u8d77\u52d5\u5f8c\u3001 Worker\u304c2\u3064\u7acb\u3061\u4e0a\u304c\u3063\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059.\n\u305d\u306e\u5f8c\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u63a5\u7d9a\u3092\u884c\u3046\u3068\u3001 Worker \u5074\u3067\u3001Websocket \u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u78ba\u7acb\u3067\u304d\u3066\u304a\u308a\u3001\u3055\u3089\u306b\u63a5\u7d9a\u3092\u5897\u3084\u3057\u3066\u3044\u304f\u3068\u3001Worker \u9593\u3067\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5206\u6563\u3067\u304d\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059.\n\n## worker.disconnect \u3092\u4f7f\u3063\u3066 Worker \u3092\u5165\u308c\u66ff\u3048\u308b\n\nWorker \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f\u3001 [disconnect](https://nodejs.org/api/cluster.html#cluster_worker_disconnect) \u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059.\n\u3053\u308c\u306f\u4f55\u304b\u3068\u3044\u3046\u3068\u3001\u305d\u306e Worker \u914d\u4e0b\u306e `net.Server` \u306e [close](https://nodejs.org/api/net.html#net_server_close_callback) \u304c\u547c\u3070\u308c\u3001\u65b0\u898f\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u53d7\u3051\u4ed8\u3051\u306a\u304f\u306a\u308a\u307e\u3059. \u30dd\u30a4\u30f3\u30c8\u306f\u3001\u65e2\u5b58\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5f37\u5236\u7684\u306b\u3059\u3050\u9589\u3058\u3089\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u306a\u304f\u3001\u6b63\u5e38\u306b\u9589\u3058\u3089\u308c\u308b\u306e\u304c\u5f85\u305f\u308c\u308b\u3068\u3053\u308d\u3067\u3059. \u5168\u3066\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u9589\u3058\u3089\u308c\u308b\u3068\u3001 Worker \u306f\u30d7\u30ed\u30bb\u30b9\u3092\u7d42\u4e86\u3057\u307e\u3059.\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001 `fork`\u3067\u65b0\u3057\u3044 Worker \u3092\u751f\u6210\u3057\u3064\u3064\u3001 `disconnect` \u3067\u53e4\u3044 Worker \u304c\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u53d7\u3051\u4ed8\u3051\u306a\u3044\u3088\u3046\u306b\u3059\u308c\u3070\u3001\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u306a\u3057\u306b Worker \u3092\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\n\n\u30b5\u30fc\u30d0\u5074\u306e\u30b3\u30fc\u30c9\u306b\u5c11\u3057\u51e6\u7406\u3092\u52a0\u3048\u307e\u3059.\n\n```js:server.2.js\nlet cluster = require('cluster');\n\nconst WORKER_NUM = 2;\n\nif (cluster.isMaster) {\n  runMaster();\n} else {\n  runWorker();\n}\n\nfunction runMaster() {\n  for (let i=0; i<WORKER_NUM; ++i) {\n    cluster.fork();\n  }\n\n  cluster.on('disconnect', (worker) => {\n    console.log('worker disconnected (workerId: %d)', worker.id);\n  });\n\n  cluster.on('exit', (worker) => {\n    console.log('worker died (workerId: %d)', worker.id);\n  });\n\n  process.on('SIGUSR2', () => {\n    for (let id in cluster.workers) {\n      let worker = cluster.workers[id];\n      worker.disconnect();\n    }\n    for (let i=0; i<WORKER_NUM; ++i) {\n      cluster.fork();\n    }\n  });\n\n  console.log('master start (PID: %d)', process.pid);\n}\n\nfunction runWorker() {\n  let WebSocketServer = require('ws').Server\n  let wss = new WebSocketServer({ port: 8080 });\n\n  console.log('worker start (workerId: %d, PID: %d)', cluster.worker.id, process.pid);\n\n  wss.on('connection', (socket) => {\n    let connectionId = getConnectionId();\n\n    console.log('socket open (workerId: %d, connId: %d)', cluster.worker.id, connectionId);\n\n    socket.on('message', (message) => {\n      console.log('server received (workerId: %d, connId: %d): %s', cluster.worker.id, connectionId, message);\n    });\n\n    socket.on('close', () => {\n      console.log('socket close (workerId: %d, connId: %d)', cluster.worker.id, connectionId);\n    });\n  });\n\n\n  let _connectionId = 0;\n  function getConnectionId() {\n    return ++ _connectionId;\n  }\n}\n```\n\n`USR2` \u30b7\u30b0\u30ca\u30eb\u3092\u53d7\u3051\u53d6\u3063\u305f\u969b\u306b\u3001 Worker \u306e \u5165\u308c\u66ff\u3048\u3092\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f. (\u5225\u306b `USR2` \u30b7\u30b0\u30ca\u30eb\u3067\u306a\u304f\u3066\u3082\u69cb\u3044\u307e\u305b\u3093)\n\u30b7\u30b0\u30ca\u30eb\u30cf\u30f3\u30c9\u30e9\u5185\u3067\u3001 \u5168\u3066\u306e Worker \u306b\u5bfe\u3057\u3066\u3001 disconnect \u3092\u547c\u3073\u51fa\u3057\u3001 \u305d\u306e\u5f8c\u3001\u65b0 Worker \u3092 fork \u3057\u3066\u3044\u307e\u3059. \n(\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u304c\u306a\u3044\u3088\u3046\u306b\u53b3\u5bc6\u306b\u3084\u308b\u306a\u3089\u3070\u3001 \u65b0 Worker \u3067 server listen \u304c\u3055\u308c\u305f\u306e\u3092\u78ba\u8a8d\u3057\u305f\u5f8c\u3067 \u53e4 Worker \u3092 disconnect \u3059\u308b\u3079\u304d\u3067\u3059.)\n \n\u3067\u306f\u3001\u52d5\u304b\u3057\u3066\u307f\u307e\u3059.\n\n\u307e\u305a\u3001 \u30b5\u30fc\u30d0\u5074\u3092\u52d5\u304b\u3057\u305f\u5f8c\u3001 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30921\u3064\u63a5\u7d9a\u3057\u3066\u307f\u307e\u3059.\n\n```shell-session\n$ node server.2.js\nmaster start (PID: 30167)\nworker start (workerId: 2, PID: 30169)\nworker start (workerId: 1, PID: 30168)\nsocket open (workerId: 2, connId: 1)\nserver received (workerId: 2, connId: 1): hello\nserver received (workerId: 2, connId: 1): hello\n...\n```\n\n\u305d\u306e\u5f8c\u3001 \u30b5\u30fc\u30d0\u30fc\u5074\u306e Master \u30d7\u30ed\u30bb\u30b9\u306b\u5bfe\u3057\u3066 `USR2` \u30b7\u30b0\u30ca\u30eb \u3092\u9001\u3063\u3066\u307f\u307e\u3059. \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059.\n\n```bash\nkill -USR2 30167\n```\n\n\u3059\u308b\u3068\u3001 Server \u5074\u306e\u51fa\u529b\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f.\n\n```shell-session\n...\nworker died (workerId: 1)\nworker disconnected (workerId: 1)\nserver received (workerId: 2, connId: 1): hello\nworker start (workerId: 3, PID: 30211)\nworker start (workerId: 4, PID: 30212)\nserver received (workerId: 2, connId: 1): hello\nserver received (workerId: 2, connId: 1): hello\n...\n```\n\n\u3068\u308a\u3042\u3048\u305a\u3001 `workerId: 1` \u306e Worker \u306f\u6b7b\u3093\u3060\u3088\u3046\u3067\u3059. \u3053\u308c\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u53d7\u3051\u3066\u3044\u306a\u3044\u65b9\u306e\u3088\u3046\u3067\u3059. `workerId: 2` \u306e Worker \u306f\u5f15\u304d\u7d9a\u304d \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u7d9a\u3051\u3066\u3044\u307e\u3059.\n\u305d\u3057\u3066\u3001 \u65b0\u305f\u306b2\u3064\u306e Worker \u304c\u751f\u6210\u3055\u308c\u307e\u3057\u305f.\n\n\u3053\u3053\u3067\u3001 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3057\u307e\u3059. (\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u52d5\u304b\u3057\u3066\u308b\u30bf\u30fc\u30df\u30ca\u30eb\u3067Ctrl-C\u3068\u304b\u3067\u5927\u4e08\u592b\u3067\u3059.)\n\n\u3059\u308b\u3068\u3001\u30b5\u30fc\u30d0\u5074\u306e\u51fa\u529b\u306f\u3053\u3046\u306a\u308a\u307e\u3057\u305f.\n\n```shell-session\n...\nserver received (workerId: 2, connId: 1): hello\nsocket close (workerId: 2, connId: 1)\nworker disconnected (workerId: 2)\nworker died (workerId: 2)\n```\n\n`workerId: 2` \u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u9589\u3058\u3089\u308c\u3001\u30d7\u30ed\u30bb\u30b9\u3082\u7d42\u4e86\u3057\u305f\u3088\u3046\u3067\u3059.\n\n\u4ee5\u4e0a\u304c\u3001\u30b7\u30f3\u30d7\u30eb\u306a Worker \u5165\u308c\u66ff\u3048\u306e\u4ed5\u7d44\u307f\u3067\u3059.\n\n## graceful reload \u3068\u30c7\u30d7\u30ed\u30a4\n\n\u5c11\u3057\u307e\u3068\u307e\u3063\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u3064\u3089\u3064\u3089\u3068\u66f8\u304d\u307e\u3059. \u77e5\u898b\u4e0d\u8db3\u3082\u3042\u308b\u3068\u304a\u3082\u3044\u307e\u3059.\n\n\u4e0a\u3067\u8aac\u660e\u3057\u305f\u4ed5\u7d44\u307f\u3092\u3082\u3046\u5c11\u3057\u6d17\u7df4\u3055\u305b\u3066\u3044\u3051\u3070\u3001\u7d99\u7d9a\u7684\u306a\u30c7\u30d7\u30ed\u30a4\u306b\u7d44\u307f\u8fbc\u3093\u3067\u3044\u3051\u305d\u3046\u3067\u3059. \u5b9f\u969b\u306b\u81ea\u5206\u3067\u66f8\u304d\u4e0a\u3052\u3066\u3082\u3088\u3044\u3057\u3001[pm2](https://github.com/Unitech/pm2) \u306e\u3088\u3046\u306a\u9ad8\u6a5f\u80fd\u306a\u3082\u306e\u3092\u4f7f\u3046\u306e\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059.\n\n\u79c1\u81ea\u8eab\u306f\u3001\u6700\u8fd1\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3001\u540c\u69d8\u306e\u65b9\u6cd5\u3067\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3046\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u307e\u3057\u305f\u304c\u3001\n\u4e00\u5fdc\u3001\u305d\u306e\u69cb\u6210\u3092\u8aac\u660e\u3059\u308b\u3068\u3001AWS\u4e0a\u306b\u69cb\u7bc9\u3057\u3066\u304a\u308a\u3001\u524d\u6bb5\u306b ALB \u3001\u5f8c\u308d\u306eEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4e0a\u306b NodeJS \u306e\u30b5\u30fc\u30d0\u304c\u52d5\u3044\u3066\u304a\u308a\u3001\u30c7\u30d7\u30ed\u30a4\u306f\u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4e0a\u306b\u65b0\u3057\u3044\u30b3\u30fc\u30c9\u3092\u914d\u5e03\u3057\u3066 reload \u3059\u308b\u3068\u3044\u3046\u3088\u3046\u306a\u3082\u306e\u3067\u3059. \u5c0f\u898f\u6a21\u306a\u3082\u306e\u3067\u3059.\n\n\u5358\u306b\u3001 WebSocket \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3044\u3063\u3066\u3082\u3001\u8981\u6c42\u3084\u898f\u6a21\u611f\u3068\u3044\u3046\u306e\u306f\u7570\u306a\u3063\u3066\u3044\u3066\u3001\u3069\u306e\u3088\u3046\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3084\u30c7\u30d7\u30ed\u30a4\u6226\u7565\u3092\u3068\u308b\u304b\u3068\u3044\u3046\u306e\u306f\u3001\u305d\u308c\u305e\u308c\u3001\u3068\u3044\u3046\u611f\u3058\u304c\u3057\u3066\u3044\u307e\u3059.\n\n\u8ca0\u8377\u5206\u6563\u3092\u3069\u3046\u3059\u308b\u304b\u3068\u3044\u3046\u554f\u984c\u3092\u307f\u3066\u3082\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u3092\u7f6e\u304f\u65b9\u6cd5\u3068\u3001\u30b5\u30fc\u30d0\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u4e00\u89a7\u3092\u6301\u3063\u3066\u3044\u3066\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u3064\u306a\u3050\u3079\u304d\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8fd4\u3059\u65b9\u6cd5\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30c7\u30d7\u30ed\u30a4\u3082\u3001\u7a3c\u50cd\u4e2d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u30b3\u30fc\u30c9\u3092\u914d\u5e03\u3057\u3066 reload \u3059\u308b\u65b9\u6cd5\u3082\u3042\u308c\u3070\u3001\u65b0\u3057\u3044\u30b3\u30fc\u30c9\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30b5\u30fc\u30d3\u30b9\u30a4\u30f3\u3055\u305b\u3066\u53e4\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30b5\u30fc\u30d3\u30b9\u30a2\u30a6\u30c8\u3055\u305b\u308b\u65b9\u6cd5\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059. \u6642\u4ee3\u7684\u306b\u306f\u5f8c\u8005\u306a\u6c17\u304c\u3057\u307e\u3059. \u6d41\u884c\u3063\u3066\u3044\u308b Docker\u30b3\u30f3\u30c6\u30ca\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3088\u3046\u306a\u5f62\u3067\u3042\u308c\u3070\u5fc5\u7136\u7684\u306b\u305d\u3046\u306a\u308a\u307e\u3059\u3057\u306d. \u305d\u306e\u5834\u5408\u306f\u3001\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u306a\u304f\u306a\u308b\u306e\u3092\u307e\u3063\u3066\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u3059\u308b\u306b\u306f\u3069\u3046\u3057\u305f\u3089\u306e\u304b\u3068\u304b\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059.\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u3001\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5207\u308c\u3066\u3082\u518d\u63a5\u7d9a\u3059\u308c\u3070\u554f\u984c\u306a\u3044\u3082\u306e\u3082\u3042\u308c\u3070\u3001\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5207\u308c\u305f\u3089\u4f53\u9a13\u3092\u81f4\u547d\u7684\u306b\u60aa\u304f\u3059\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059. \u3082\u3061\u308d\u3093\u3001\u518d\u63a5\u7d9a\u3092\u3061\u3083\u3093\u3068\u8003\u616e\u3057\u3066\u3046\u307e\u304f\u3084\u308b\u3001\u3068\u3044\u3046\u306e\u306f\u91cd\u8981\u306a\u3093\u3067\u3059\u304c\u306a\u304b\u306a\u304b\u5168\u3066\u3092\u5b8c\u74a7\u306b\u3084\u308b\u306e\u306f\u96e3\u3057\u3044\u5834\u5408\u3082\u591a\u3044\u3068\u601d\u3044\u307e\u3059.\n\nWebSocket \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u8a08\u3059\u308b\u969b\u306f\u3001\u3069\u3046\u3084\u3063\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u306e\u304b\u3001\u3068\u3044\u3046\u70b9\u3082\u521d\u3081\u304b\u3089\u8003\u616e\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u5f8c\u304b\u3089\u82e6\u52b4\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093.\n", "tags": ["JavaScript", "websocket"]}