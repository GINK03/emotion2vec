{"tags": ["Python", "ProjectEuler", "python3"], "context": " More than 1 year has passed since last update.\u5b9f\u8cea\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3067\u66f8\u3051\u305f\n# -*- coding: utf-8 -*-\n'''\nIf we list all the natural numbers below 10 that are multiples of 3 or 5,\nwe get 3, 5, 6 and 9. The sum of these multiples is 23.\n\nFind the sum of all the multiples of 3 or 5 below 1000.\n'''\nimport doctest\nfrom functools import reduce\n\n\ndef problem(i,j):\n    '''\n    >>> problem(1,10)\n    23\n    '''\n    return reduce(lambda x,y:x+y, [i for i in range(i,j) if not i % 5 or not i % 3])\n\n\nif __name__ == \"__main__\":\n    doctest.testmod()\n    print(problem(1,1000))\n\n\u5b9f\u8cea\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3067\u66f8\u3051\u305f\n\n```Python\n# -*- coding: utf-8 -*-\n'''\nIf we list all the natural numbers below 10 that are multiples of 3 or 5,\nwe get 3, 5, 6 and 9. The sum of these multiples is 23.\n\nFind the sum of all the multiples of 3 or 5 below 1000.\n'''\nimport doctest\nfrom functools import reduce\n\n\ndef problem(i,j):\n    '''\n    >>> problem(1,10)\n    23\n    '''\n    return reduce(lambda x,y:x+y, [i for i in range(i,j) if not i % 5 or not i % 3])\n\n\nif __name__ == \"__main__\":\n    doctest.testmod()\n    print(problem(1,1000))\n```\n"}