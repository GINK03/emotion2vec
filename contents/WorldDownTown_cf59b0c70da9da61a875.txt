{"tags": ["Swift", "swift3", "iOS", "uicolor"], "context": "\n\u3053\u306e\u8a18\u4e8b\u306fVASILY DEVELOPERS BLOG\u306b\u3082\u540c\u3058\u5185\u5bb9\u3067\u6295\u7a3f\u3057\u3066\u3044\u307e\u3059\u3002\u3088\u308d\u3057\u3051\u308c\u3070\u4ed6\u306e\u8a18\u4e8b\u3082\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u6700\u8fd1\u3001\u696d\u52d9\u3067\u65b0\u3057\u3044iOS\u30a2\u30d7\u30ea\u3092\u7acb\u3066\u7d9a\u3051\u306b\u3044\u304f\u3064\u304b\u958b\u767a\u3059\u308b\u6a5f\u4f1a\u306b\u6075\u307e\u308c\u307e\u3057\u305f\u3002\n\u305d\u3093\u306a\u4e2d\u3001\u3044\u304f\u3064\u3082\u30a2\u30d7\u30ea\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001\u3069\u306e\u30a2\u30d7\u30ea\u3067\u3082\u3088\u304f\u4f7f\u3046\u51e6\u7406\u304c\u3042\u3076\u308a\u51fa\u3055\u308c\u3066\u304d\u307e\u3059\u3002\n\u305d\u3046\u3044\u3046\u51e6\u7406\u306fSwift\u306eExtension\u3068\u3057\u3066\u5225\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u3001\u4ed6\u306e\u30a2\u30d7\u30ea\u3078\u3082\u5207\u308a\u51fa\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u500b\u5225\u306eFramework\u306b\u3057\u3066\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\u4eca\u8a18\u4e8b\u3067\u306f\u3001\u6700\u8fd1\u306e\u958b\u767a\u3067\u3088\u304f\u4f7f\u3063\u305fExtension\u96c6\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\nSwift\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\n\nDate\nprivate let formatter: DateFormatter = {\n    let formatter: DateFormatter = DateFormatter()\n    formatter.timeZone = NSTimeZone.system\n    formatter.locale = Locale(identifier: \"en_US_POSIX\")\n    formatter.calendar = Calendar(identifier: .gregorian)\n    return formatter\n}()\n\npublic extension Date {\n\n    // Date\u2192String\n    func string(format: String = \"yyyy-MM-dd'T'HH:mm:ssZ\") -> String {\n        formatter.dateFormat = format\n        return formatter.string(from: self)\n    }\n\n    // String \u2192 Date\n    init?(dateString: String, dateFormat: String = \"yyyy-MM-dd'T'HH:mm:ssZ\") {\n        formatter.dateFormat = dateFormat\n        guard let date = formatter.date(from: dateString) else { return nil }\n        self = date\n    }\n}\n\nDate().string(format: \"yyyy/MM/dd\") // 2017/02/26\nDate(dateString: \"2016-02-26T10:17:30Z\")  // Date\n\n\u540c\u3058\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u65e5\u4ed8\u3092\u8868\u793a\u3059\u308b\u5834\u5408\u3067\u3082\u3001\u30ea\u30b9\u30c8\u30da\u30fc\u30b8\u3067\u306f\u65e5\u4ed8\u3060\u3051\u3001\u8a73\u7d30\u30da\u30fc\u30b8\u3067\u306f\u6642\u9593\u3082\u8868\u793a\u3057\u305f\u3044\u3068\u3044\u3046\u3068\u304d\u306b\u4fbf\u5229\u3067\u3059\u3002\n\u307e\u305f\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u306e\u65b9\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u5165\u529b\u3057\u305f\u65e5\u4ed8\u6587\u5b57\u5217\u304b\u3089 Date \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\nDictionary\n// Dictionary\u540c\u58eb\u3092`+`\u6f14\u7b97\u5b50\u3067\u30de\u30fc\u30b8\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\npublic func +<K, V>(lhs: [K: V], rhs: [K: V]) -> [K: V] {\n    var lhs = lhs\n    for (key, value) in rhs {\n        lhs[key] = value\n    }\n    return lhs\n}\n\n[\"key1\": 0] + [\"key1\": 1, \"key2\": 2]    // [\"key2\": 2, \"key1\": 1]\n\nAPI\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306e\u52d5\u7684\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u56fa\u5b9a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306eDictionary\u3092\u30de\u30fc\u30b8\u3059\u308b\u3068\u304d\u306a\u3069\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n\nInt\nprivate let formatter: NumberFormatter = NumberFormatter()\n\npublic extension Int {\n\n    private func formattedString(style: NumberFormatter.Style, localeIdentifier: String) -> String {\n        formatter.numberStyle = style\n        formatter.locale = Locale(identifier: localeIdentifier)\n        return formatter.string(from: self as NSNumber) ?? \"\"\n    }\n\n    // \u30ab\u30f3\u30de\u533a\u5207\u308aString\n    var formattedJPString: String {\n        return formattedString(style: .decimal, localeIdentifier: \"ja_JP\")\n    }\n\n    // \u65e5\u672c\u5186\u8868\u8a18\u306eString\n    var JPYString: String {\n        return formattedString(style: .currency, localeIdentifier: \"ja_JP\")\n    }\n\n    // US\u30c9\u30eb\u8868\u8a18\u306eString\n    var USDString: String {\n        return formattedString(style: .currency, localeIdentifier: \"en_US\")\n    }\n}\n\nlet million: Int = 1_000_000\nmillion.formattedJPString   // 1,000,000\nmillion.JPYString           // \u00a51,000,000\nmillion.USDString           // $1,000,000.00\n\n\u3069\u306e\u30a2\u30d7\u30ea\u3082\u4fa1\u683c\u3092\u8868\u793a\u3059\u308b\u3068\u3053\u308d\u306f\u591a\u6570\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u8a08\u7b97\u578b\u30d7\u30ed\u30d1\u30c6\u30a3\u4e00\u3064\u3067\u9762\u5012\u306a\u30ab\u30f3\u30de\u533a\u5207\u308a\u51e6\u7406\u3092\u66f8\u3051\u308b\u306e\u3067\u3001\u30b3\u30fc\u30c9\u304c\u304b\u306a\u308a\u30b9\u30c3\u30ad\u30ea\u3057\u307e\u3059\u3002\n\n\nUIKit\n\nUIColor\npublic extension UIColor {\n\n    // RGB\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\n    public convenience init(rgb: UInt, alpha: CGFloat = 1.0) {\n        let red: CGFloat = CGFloat((rgb & 0xff0000) >> 16) / 255.0\n        let green: CGFloat = CGFloat((rgb & 0x00ff00) >> 8) / 255.0\n        let blue: CGFloat = CGFloat(rgb & 0x0000ff) / 255.0\n        self.init(red: red, green: green, blue: blue, alpha: alpha)\n    }\n\n    public struct iq {  // \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5408\u308f\u305b\u305f\u540d\u524d\u3067\u826f\u3044\n        public static let pink: UIColor = UIColor(rgb: 0xfa4664)\n        public static let textBlack: UIColor = UIColor(rgb: 0x333333)\n    }\n}\n\nUIColor.iq.pink         // #fa4664\nUIColor.iq.textBlack    // #333333\n\n\u4e00\u3064\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u3046\u8272\u6570\u306f\u3001\u6570\u3048\u5207\u308c\u308b\u7a0b\u5ea6\u306b\u306a\u308b\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u3001UIColor\u306eExtension\u306b\u540d\u524d\u3092\u4ed8\u3051\u3066\u7ba1\u7406\u3057\u307e\u3059\u3002\nExtension\u306e\u4e2d\u3067struct\u3092\u5b9a\u7fa9\u3057\u3066\u3001\u305d\u306e\u4e2d\u306b\u8272\u3092\u307e\u3068\u3081\u308b\u3053\u3068\u3067\u3001UIColor\u306e\u672c\u6765\u306e\u540d\u524d\u7a7a\u9593\u3092\u6c5a\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3057\u3001\u958b\u767a\u8005\u304c\u62e1\u5f35\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u306e\u304c\u30b3\u30fc\u30c9\u306e\u8aad\u307f\u624b\u306b\u3082\u4f1d\u308f\u308a\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\n\nUIView\npublic extension UIView {\n\n    // \u5b50View\u3092\u89aaView\u306e\u30b5\u30a4\u30ba\u3044\u3063\u3071\u3044\u306b\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u5236\u7d04\u3092\u8a2d\u5b9a\u3059\u308b\n    func addConstraints(for childView: UIView, insets: UIEdgeInsets = .zero) {\n        childView.translatesAutoresizingMaskIntoConstraints = false\n\n        topAnchor.constraint(equalTo: childView.topAnchor, constant: insets.top).isActive = true\n        bottomAnchor.constraint(equalTo: childView.bottomAnchor, constant: insets.bottom).isActive = true\n        leadingAnchor.constraint(equalTo: childView.leadingAnchor, constant: insets.left).isActive = true\n        trailingAnchor.constraint(equalTo: childView.trailingAnchor, constant: insets.right).isActive = true\n    }\n}\n\nview.addSubview(childView)\nview.addConstraints(for: childView)\n\nlet insets: UIEdgeInsets = UIEdgeInsets(top: 10.0, left: 10.0, bottom: 10.0, right: 10.0)\nview.addConstraints(for: childView, insets: insets)\n\nInterface Builder\u3067\u306f\u306a\u304f\u3001\u30b3\u30fc\u30c9\u3067view\u3092addSubview\u3059\u308b\u3068\u304d\u3001\u89aaView\u3068\u540c\u3058\u30b5\u30a4\u30ba\u306b\u3057\u305f\u3044\u3068\u304d\u306b\u4f7f\u3044\u307e\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u306f\u7701\u7565\u53ef\u80fd\u3067\u3059\u304c\u3001UIEdgeInsets\u3067\u30de\u30fc\u30b8\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\nUIViewController\npublic extension UIViewController {\n\n    // ViewController\u306e\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30e1\u30bd\u30c3\u30c9\n    static func create() -> Self {\n        let name: String = \"\\(type(of: self))\".components(separatedBy: \".\").first!\n        return instantiate(storyboardName: name)\n    }\n\n    private static func instantiate<T>(storyboardName: String) -> T {\n        let storyboard: UIStoryboard = UIStoryboard(name: storyboardName, bundle: nil)\n        let vc: UIViewController? = storyboard.instantiateInitialViewController()\n        return vc as! T\n    }\n}\n\nlet vc = SomeViewController.create()\n\nVASILY\u306eiOS\u958b\u767a\u3067\u306f\u3001 1ViewController / 1Storyboard \u3067ViewController\u3092\u7ba1\u7406\u3057\u3001ViewController\u306e\u30af\u30e9\u30b9\u540d\u3068Storyboard\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u63c3\u3048\u308b\u30eb\u30fc\u30eb\u3067\u904b\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001\u6587\u5b57\u5217\u3092\u4f7f\u308f\u305a\u306bViewController\u3092\u521d\u671f\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\n\nSVProgressHUD\nimport SVProgressHUD\n\npublic extension SVProgressHUD {\n\n    public struct iq {  // \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5408\u308f\u305b\u305f\u540d\u524d\u3067\u826f\u3044\n\n        // \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u56fa\u6709\u306e\u521d\u671f\u8a2d\u5b9a\n        public static func setup() {\n            SVProgressHUD.setDefaultStyle(.custom)\n            SVProgressHUD.setFont(UIFont.boldSystemFont(ofSize: 14.0))\n            SVProgressHUD.setForegroundColor(UIColor.iq.pink)\n            SVProgressHUD.setBackgroundColor(UIColor.white.withAlphaComponent(0.9))\n            SVProgressHUD.setMinimumDismissTimeInterval(2.0)\n        }\n\n        public static func show(maskType: SVProgressHUDMaskType = .none) {\n            SVProgressHUD.setDefaultMaskType(maskType)\n            SVProgressHUD.show()\n        }\n    }\n}\n\n\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001\u30a2\u30d7\u30ea\u5168\u4f53\u3067\u8a2d\u5b9a\u3092\u6709\u52b9\u306b\u3059\u308b\u305f\u3081\u306b\u3001AppDelegate\u306b\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002\n\u8907\u6570\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001application(_:didFinishLaunchingWithOptions:) -> Bool\u304c \u5404\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u521d\u671f\u8a2d\u5b9a\u51e6\u7406\u3067\u81a8\u308c\u4e0a\u304c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u4e0a\u8a18\u306eExtension\u306f\u3001\u8907\u6570\u884c\u306e\u51e6\u7406\u3092Extension\u306b\u307e\u3068\u3081\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3053\u306e\u554f\u984c\u3092\u56de\u907f\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u3082\u3001\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u540d\u524d\u7a7a\u9593\u3092\u6c5a\u3055\u306a\u3044\u3088\u3046\u306b\u51e6\u7406\u3092struct\u306e\u4e2d\u306b\u5206\u3051\u3066\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n// AppDelegate\n\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions options: [Hashale: Any]) -> Bool {\n    SVProgressHUD.iq.setup()\n    ...\n    return true\n}\n\n\n\u307e\u305f\u3001\u73fe\u5728\u306eSVProgressHUD\u306fMaskType\u304c\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3001MaskType\u3092\u5909\u66f4\u3057\u305f\u3044\u3068\u304d\u306f\u3001setDefaultMaskType(_:)\u3092\u5b9f\u884c\u3057\u3066\u304b\u3089\u8868\u793a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306eExtension\u3067\u306f2\u884c\u5fc5\u8981\u306a\u51e6\u7406\u3092\u4e00\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3067MaskType\u3092\u5f15\u6570\u306b\u53d6\u308c\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\n\u5c0f\u3055\u306a\u5909\u66f4\u3067\u3059\u304c\u3001SVProgressHUD\u306f\u3069\u306e\u30a2\u30d7\u30ea\u3067\u3082\u983b\u7e41\u306b\u767b\u5834\u3059\u308b\u305f\u3081\u3001\u5197\u9577\u306a\u30b3\u30fc\u30c9\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n// \u5f93\u6765\nSVProgressHUD.setDefaultMaskType(.clear)\nSVProgressHUD.show()\n\nSVProgressHUD.setDefaultMaskType(.none)\nSVProgressHUD.show()\n\n// Extension\nSVProgressHUD.iq.show(maskType: .clear)\nSVProgressHUD.iq.show()    // \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\uff1a.none\n\n\n\n\u307e\u3068\u3081\niOS\u30a2\u30d7\u30ea\u958b\u767a\u3067\u3088\u304f\u3042\u308b\u51e6\u7406\u306eExtension\u306e\u6570\u3005\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n\u3053\u308c\u3089\u306e\u51e6\u7406\u304c\u4e00\u3064\u306eFramework\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u3068\u3001\u65b0\u3057\u3044\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u6642\u306b\u3082\u5171\u901a\u51e6\u7406\u3092\u6301\u3063\u3066\u304f\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u65b0\u898f\u958b\u767a\u6642\u306b\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n> \u3053\u306e\u8a18\u4e8b\u306f[VASILY DEVELOPERS BLOG](http://tech.vasily.jp/entry/swift_extensions)\u306b\u3082\u540c\u3058\u5185\u5bb9\u3067\u6295\u7a3f\u3057\u3066\u3044\u307e\u3059\u3002\u3088\u308d\u3057\u3051\u308c\u3070\u4ed6\u306e\u8a18\u4e8b\u3082\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u6700\u8fd1\u3001\u696d\u52d9\u3067\u65b0\u3057\u3044iOS\u30a2\u30d7\u30ea\u3092\u7acb\u3066\u7d9a\u3051\u306b\u3044\u304f\u3064\u304b\u958b\u767a\u3059\u308b\u6a5f\u4f1a\u306b\u6075\u307e\u308c\u307e\u3057\u305f\u3002\n\u305d\u3093\u306a\u4e2d\u3001\u3044\u304f\u3064\u3082\u30a2\u30d7\u30ea\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001\u3069\u306e\u30a2\u30d7\u30ea\u3067\u3082\u3088\u304f\u4f7f\u3046\u51e6\u7406\u304c\u3042\u3076\u308a\u51fa\u3055\u308c\u3066\u304d\u307e\u3059\u3002\n\u305d\u3046\u3044\u3046\u51e6\u7406\u306fSwift\u306eExtension\u3068\u3057\u3066\u5225\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u3001\u4ed6\u306e\u30a2\u30d7\u30ea\u3078\u3082\u5207\u308a\u51fa\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u500b\u5225\u306eFramework\u306b\u3057\u3066\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u8a18\u4e8b\u3067\u306f\u3001\u6700\u8fd1\u306e\u958b\u767a\u3067\u3088\u304f\u4f7f\u3063\u305fExtension\u96c6\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n<!-- more -->\n\n<br />\n\n# Swift\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\n## Date\n\n```swift\nprivate let formatter: DateFormatter = {\n    let formatter: DateFormatter = DateFormatter()\n    formatter.timeZone = NSTimeZone.system\n    formatter.locale = Locale(identifier: \"en_US_POSIX\")\n    formatter.calendar = Calendar(identifier: .gregorian)\n    return formatter\n}()\n\npublic extension Date {\n\n    // Date\u2192String\n    func string(format: String = \"yyyy-MM-dd'T'HH:mm:ssZ\") -> String {\n        formatter.dateFormat = format\n        return formatter.string(from: self)\n    }\n\n    // String \u2192 Date\n    init?(dateString: String, dateFormat: String = \"yyyy-MM-dd'T'HH:mm:ssZ\") {\n        formatter.dateFormat = dateFormat\n        guard let date = formatter.date(from: dateString) else { return nil }\n        self = date\n    }\n}\n\nDate().string(format: \"yyyy/MM/dd\") // 2017/02/26\nDate(dateString: \"2016-02-26T10:17:30Z\")  // Date\n```\n\n\u540c\u3058\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u65e5\u4ed8\u3092\u8868\u793a\u3059\u308b\u5834\u5408\u3067\u3082\u3001\u30ea\u30b9\u30c8\u30da\u30fc\u30b8\u3067\u306f\u65e5\u4ed8\u3060\u3051\u3001\u8a73\u7d30\u30da\u30fc\u30b8\u3067\u306f\u6642\u9593\u3082\u8868\u793a\u3057\u305f\u3044\u3068\u3044\u3046\u3068\u304d\u306b\u4fbf\u5229\u3067\u3059\u3002\n\u307e\u305f\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u306e\u65b9\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u5165\u529b\u3057\u305f\u65e5\u4ed8\u6587\u5b57\u5217\u304b\u3089 `Date` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n<br />\n\n## Dictionary\n\n```swift\n// Dictionary\u540c\u58eb\u3092`+`\u6f14\u7b97\u5b50\u3067\u30de\u30fc\u30b8\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\npublic func +<K, V>(lhs: [K: V], rhs: [K: V]) -> [K: V] {\n    var lhs = lhs\n    for (key, value) in rhs {\n        lhs[key] = value\n    }\n    return lhs\n}\n\n[\"key1\": 0] + [\"key1\": 1, \"key2\": 2]    // [\"key2\": 2, \"key1\": 1]\n```\n\nAPI\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306e\u52d5\u7684\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u56fa\u5b9a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306eDictionary\u3092\u30de\u30fc\u30b8\u3059\u308b\u3068\u304d\u306a\u3069\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n<br />\n\n## Int\n\n```swift\nprivate let formatter: NumberFormatter = NumberFormatter()\n\npublic extension Int {\n\n    private func formattedString(style: NumberFormatter.Style, localeIdentifier: String) -> String {\n        formatter.numberStyle = style\n        formatter.locale = Locale(identifier: localeIdentifier)\n        return formatter.string(from: self as NSNumber) ?? \"\"\n    }\n\n    // \u30ab\u30f3\u30de\u533a\u5207\u308aString\n    var formattedJPString: String {\n        return formattedString(style: .decimal, localeIdentifier: \"ja_JP\")\n    }\n\n    // \u65e5\u672c\u5186\u8868\u8a18\u306eString\n    var JPYString: String {\n        return formattedString(style: .currency, localeIdentifier: \"ja_JP\")\n    }\n\n    // US\u30c9\u30eb\u8868\u8a18\u306eString\n    var USDString: String {\n        return formattedString(style: .currency, localeIdentifier: \"en_US\")\n    }\n}\n\nlet million: Int = 1_000_000\nmillion.formattedJPString   // 1,000,000\nmillion.JPYString           // \u00a51,000,000\nmillion.USDString           // $1,000,000.00\n```\n\n\u3069\u306e\u30a2\u30d7\u30ea\u3082\u4fa1\u683c\u3092\u8868\u793a\u3059\u308b\u3068\u3053\u308d\u306f\u591a\u6570\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u8a08\u7b97\u578b\u30d7\u30ed\u30d1\u30c6\u30a3\u4e00\u3064\u3067\u9762\u5012\u306a\u30ab\u30f3\u30de\u533a\u5207\u308a\u51e6\u7406\u3092\u66f8\u3051\u308b\u306e\u3067\u3001\u30b3\u30fc\u30c9\u304c\u304b\u306a\u308a\u30b9\u30c3\u30ad\u30ea\u3057\u307e\u3059\u3002\n\n<br />\n\n# UIKit\n## UIColor\n\n```swift\npublic extension UIColor {\n\n    // RGB\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\n    public convenience init(rgb: UInt, alpha: CGFloat = 1.0) {\n        let red: CGFloat = CGFloat((rgb & 0xff0000) >> 16) / 255.0\n        let green: CGFloat = CGFloat((rgb & 0x00ff00) >> 8) / 255.0\n        let blue: CGFloat = CGFloat(rgb & 0x0000ff) / 255.0\n        self.init(red: red, green: green, blue: blue, alpha: alpha)\n    }\n\n    public struct iq {  // \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5408\u308f\u305b\u305f\u540d\u524d\u3067\u826f\u3044\n        public static let pink: UIColor = UIColor(rgb: 0xfa4664)\n        public static let textBlack: UIColor = UIColor(rgb: 0x333333)\n    }\n}\n\nUIColor.iq.pink         // #fa4664\nUIColor.iq.textBlack    // #333333\n```\n\n\u4e00\u3064\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u3046\u8272\u6570\u306f\u3001\u6570\u3048\u5207\u308c\u308b\u7a0b\u5ea6\u306b\u306a\u308b\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u3001`UIColor`\u306eExtension\u306b\u540d\u524d\u3092\u4ed8\u3051\u3066\u7ba1\u7406\u3057\u307e\u3059\u3002\nExtension\u306e\u4e2d\u3067struct\u3092\u5b9a\u7fa9\u3057\u3066\u3001\u305d\u306e\u4e2d\u306b\u8272\u3092\u307e\u3068\u3081\u308b\u3053\u3068\u3067\u3001`UIColor`\u306e\u672c\u6765\u306e\u540d\u524d\u7a7a\u9593\u3092\u6c5a\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3057\u3001\u958b\u767a\u8005\u304c\u62e1\u5f35\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u306e\u304c\u30b3\u30fc\u30c9\u306e\u8aad\u307f\u624b\u306b\u3082\u4f1d\u308f\u308a\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\n<br />\n\n## UIView\n\n```swift\npublic extension UIView {\n\n    // \u5b50View\u3092\u89aaView\u306e\u30b5\u30a4\u30ba\u3044\u3063\u3071\u3044\u306b\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u5236\u7d04\u3092\u8a2d\u5b9a\u3059\u308b\n    func addConstraints(for childView: UIView, insets: UIEdgeInsets = .zero) {\n        childView.translatesAutoresizingMaskIntoConstraints = false\n\n        topAnchor.constraint(equalTo: childView.topAnchor, constant: insets.top).isActive = true\n        bottomAnchor.constraint(equalTo: childView.bottomAnchor, constant: insets.bottom).isActive = true\n        leadingAnchor.constraint(equalTo: childView.leadingAnchor, constant: insets.left).isActive = true\n        trailingAnchor.constraint(equalTo: childView.trailingAnchor, constant: insets.right).isActive = true\n    }\n}\n\nview.addSubview(childView)\nview.addConstraints(for: childView)\n\nlet insets: UIEdgeInsets = UIEdgeInsets(top: 10.0, left: 10.0, bottom: 10.0, right: 10.0)\nview.addConstraints(for: childView, insets: insets)\n```\n\nInterface Builder\u3067\u306f\u306a\u304f\u3001\u30b3\u30fc\u30c9\u3067view\u3092`addSubview`\u3059\u308b\u3068\u304d\u3001\u89aaView\u3068\u540c\u3058\u30b5\u30a4\u30ba\u306b\u3057\u305f\u3044\u3068\u304d\u306b\u4f7f\u3044\u307e\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u306f\u7701\u7565\u53ef\u80fd\u3067\u3059\u304c\u3001`UIEdgeInsets`\u3067\u30de\u30fc\u30b8\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n<br />\n\n## UIViewController\n\n```swift\npublic extension UIViewController {\n\n    // ViewController\u306e\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30e1\u30bd\u30c3\u30c9\n    static func create() -> Self {\n        let name: String = \"\\(type(of: self))\".components(separatedBy: \".\").first!\n        return instantiate(storyboardName: name)\n    }\n\n    private static func instantiate<T>(storyboardName: String) -> T {\n        let storyboard: UIStoryboard = UIStoryboard(name: storyboardName, bundle: nil)\n        let vc: UIViewController? = storyboard.instantiateInitialViewController()\n        return vc as! T\n    }\n}\n\nlet vc = SomeViewController.create()\n```\n\nVASILY\u306eiOS\u958b\u767a\u3067\u306f\u3001 1ViewController / 1Storyboard \u3067ViewController\u3092\u7ba1\u7406\u3057\u3001ViewController\u306e\u30af\u30e9\u30b9\u540d\u3068Storyboard\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u63c3\u3048\u308b\u30eb\u30fc\u30eb\u3067\u904b\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001\u6587\u5b57\u5217\u3092\u4f7f\u308f\u305a\u306bViewController\u3092\u521d\u671f\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n<br />\n\n# \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\n## SVProgressHUD\n\n```swift\nimport SVProgressHUD\n\npublic extension SVProgressHUD {\n\n    public struct iq {  // \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5408\u308f\u305b\u305f\u540d\u524d\u3067\u826f\u3044\n\n        // \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u56fa\u6709\u306e\u521d\u671f\u8a2d\u5b9a\n        public static func setup() {\n            SVProgressHUD.setDefaultStyle(.custom)\n            SVProgressHUD.setFont(UIFont.boldSystemFont(ofSize: 14.0))\n            SVProgressHUD.setForegroundColor(UIColor.iq.pink)\n            SVProgressHUD.setBackgroundColor(UIColor.white.withAlphaComponent(0.9))\n            SVProgressHUD.setMinimumDismissTimeInterval(2.0)\n        }\n\n        public static func show(maskType: SVProgressHUDMaskType = .none) {\n            SVProgressHUD.setDefaultMaskType(maskType)\n            SVProgressHUD.show()\n        }\n    }\n}\n```\n\n\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001\u30a2\u30d7\u30ea\u5168\u4f53\u3067\u8a2d\u5b9a\u3092\u6709\u52b9\u306b\u3059\u308b\u305f\u3081\u306b\u3001AppDelegate\u306b\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002\n\u8907\u6570\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001`application(_:didFinishLaunchingWithOptions:) -> Bool`\u304c \u5404\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u521d\u671f\u8a2d\u5b9a\u51e6\u7406\u3067\u81a8\u308c\u4e0a\u304c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u4e0a\u8a18\u306eExtension\u306f\u3001\u8907\u6570\u884c\u306e\u51e6\u7406\u3092Extension\u306b\u307e\u3068\u3081\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3053\u306e\u554f\u984c\u3092\u56de\u907f\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u3082\u3001\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u540d\u524d\u7a7a\u9593\u3092\u6c5a\u3055\u306a\u3044\u3088\u3046\u306b\u51e6\u7406\u3092struct\u306e\u4e2d\u306b\u5206\u3051\u3066\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\n```swift\n// AppDelegate\n\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions options: [Hashale: Any]) -> Bool {\n    SVProgressHUD.iq.setup()\n    ...\n    return true\n}\n```\n\n<br />\n\n\u307e\u305f\u3001\u73fe\u5728\u306eSVProgressHUD\u306fMaskType\u304c\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3001MaskType\u3092\u5909\u66f4\u3057\u305f\u3044\u3068\u304d\u306f\u3001`setDefaultMaskType(_:)`\u3092\u5b9f\u884c\u3057\u3066\u304b\u3089\u8868\u793a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306eExtension\u3067\u306f2\u884c\u5fc5\u8981\u306a\u51e6\u7406\u3092\u4e00\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3067MaskType\u3092\u5f15\u6570\u306b\u53d6\u308c\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\n\u5c0f\u3055\u306a\u5909\u66f4\u3067\u3059\u304c\u3001SVProgressHUD\u306f\u3069\u306e\u30a2\u30d7\u30ea\u3067\u3082\u983b\u7e41\u306b\u767b\u5834\u3059\u308b\u305f\u3081\u3001\u5197\u9577\u306a\u30b3\u30fc\u30c9\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```swift\n// \u5f93\u6765\nSVProgressHUD.setDefaultMaskType(.clear)\nSVProgressHUD.show()\n\nSVProgressHUD.setDefaultMaskType(.none)\nSVProgressHUD.show()\n\n// Extension\nSVProgressHUD.iq.show(maskType: .clear)\nSVProgressHUD.iq.show()    // \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\uff1a.none\n```\n\n<br />\n\n# \u307e\u3068\u3081\niOS\u30a2\u30d7\u30ea\u958b\u767a\u3067\u3088\u304f\u3042\u308b\u51e6\u7406\u306eExtension\u306e\u6570\u3005\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n\u3053\u308c\u3089\u306e\u51e6\u7406\u304c\u4e00\u3064\u306eFramework\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u3068\u3001\u65b0\u3057\u3044\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u6642\u306b\u3082\u5171\u901a\u51e6\u7406\u3092\u6301\u3063\u3066\u304f\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u65b0\u898f\u958b\u767a\u6642\u306b\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n"}