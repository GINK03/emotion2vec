{"context": "\n\n \u306f\u3058\u3081\u306b\nswift\u306f\u307b\u3068\u3093\u3069\u672a\u7d4c\u9a13\u3067\u3059\u304c\u3001SmartNews\u98a8\u30cb\u30e5\u30fc\u30b9\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u3066\u3001\u305d\u306e\u904e\u7a0b\u3092\u3055\u3089\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u524d\u56de\u306f\u3001\u3053\u3093\u306a\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\nswift\u521d\u5fc3\u8005\u304cSmartNews\u98a8\u30cb\u30e5\u30fc\u30b9\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u308b\u904e\u7a0b\u3092\u6652\u3059(7)\u3000- MVVM\u3067\u95a2\u5fc3\u4e8b\u3092\u5206\u96e2\u3059\u308b\u624b\u6cd5\u3092\u5b66\u3076 - Qiita\n\u4eca\u56de\u306f\u3001RxSwift\u3092\u7528\u3044\u3066\u5b9f\u969b\u306bMVVM\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u4f7f\u7528\u3057\u305f\u5b9f\u88c5\u3092\u884c\u3044\u307e\u3059\u3002\n\n RxSwift\u3092\u4f7f\u7528\u3057\u305fMVVM\n\u53d6\u5f97\u3057\u305f\u8a18\u4e8b\u3092\u8868\u793a\u3059\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u30cb\u30e5\u30fc\u30b9\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30cb\u30e5\u30fc\u30b9\u8a18\u4e8b\u306e\u30c7\u30fc\u30bf\u306f\u3001\u3053\u3053\u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n Model\nEntry\u30e2\u30c7\u30eb\u306f\u4e00\u3064\u4e00\u3064\u306e\u8a18\u4e8b\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\nJSON\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092parse\u3057\u3001\u5404\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u3067\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002\n\nEntry.swift\nimport Foundation\nimport RealmSwift\n\nclass Entry: Object {\n\n    dynamic var title: String = \"\"\n    dynamic var link: String = \"\"\n    dynamic var contentSnippet: String = \"\"\n}\n\n\n\n ViewModel\nViewModel\u306b\u306f\u4ee5\u4e0b\u306e\u8cac\u52d9\u3092\u3082\u305f\u305b\u307e\u3059\u3002\n\n\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af(\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u767a\u751f\u3055\u305b\u308betc)\n\u8868\u793a\u306b\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u3092ViewController\u306b\u5c4a\u3051\u308b\nModel\u306e\u66f4\u65b0\u3092\u76e3\u8996\u3059\u308b\n\n\nEntriesViewModel.swift\nimport RxSwift\nimport RxCocoa\n\nfinal class EntriesViewModel {\n\n    //MARK: - Dependecies\n\n    //MARK: - Model\n\n    var entries: Driver<[Entry]> = Driver.never()\n\n    //MARK: - Set up\n\n    init() {\n        //Initialise dependencies\n\n    }\n\n    func reloadData(title: String) {\n        entries = EntryAPIService().fetchEntries(q: title)\n    }\n}\n\n\nDriver\u306fUI\u30ec\u30a4\u30e4\u30fc\u3092\u76f4\u611f\u7684\u306b\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u90e8\u54c1\u3067\u3059\u3002\nDriver\u3063\u3066\u4f55\u306a\u3093\u3060\u3001\u3068\u3044\u3046\u3053\u3068\u306b\u95a2\u3057\u3066\u306f\u3001\u3053\u3061\u3089\u306b\u8a73\u3057\u304f\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nUnits are totally optional. You can use raw observable sequences everywhere in your program and all RxCocoa APIs work with observable sequences.\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3082\u8a18\u8f09\u304c\u3042\u308b\u3088\u3046\u306b\u3001\u4f7f\u7528\u3057\u306a\u3044\u3068\u5b9f\u88c5\u3067\u304d\u306a\u3044\u3082\u306e\u3067\u3082\u306a\u3044\u3067\u3059\u304c\u3001\u4fbf\u5229\u306a\u306e\u3067\u4f7f\u3044\u307e\u3057\u3087\u3046\u3001\u3068\u3044\u3046\u4f4d\u7f6e\u4ed8\u3051\u306e\u3088\u3046\u3067\u3059\u3002\n\nDriver\u306e\u7279\u5fb4\nDriver\u306e\u7279\u5fb4\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n\u30a8\u30e9\u30fc\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u7d42\u4e86\u3057\u306a\u3044\n\n\nJSON\u306eparse\u30a8\u30e9\u30fc\u3084API\u3068\u306e\u901a\u4fe1\u5931\u6557\u304c\u8d77\u304d\u305f\u5834\u5408\u306b\u3001UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u66f4\u65b0\u3067\u304d\u306a\u304f\u306a\u308b\u3088\u3046\u306a\u3053\u3068\u3092\u9632\u304e\u307e\u3059\n\n\nmain scheduler\u3067subscribe, observe\u3059\u308b\n\n\nAPI\u901a\u4fe1\u306e\u7d50\u679c\u3092\u4f7f\u7528\u3057\u3066\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u66f4\u65b0\u3059\u308b\u3088\u3046\u306a\u3053\u3068\u3092\u3059\u308b\u3068Crash\u306e\u539f\u56e0\u306b\u306a\u308a\u307e\u3059\n\n\n\u526f\u4f5c\u7528\u3092\u30b7\u30a7\u30a2\u3059\u308b\n\n\nAPI\u901a\u4fe1\u306e\u7d50\u679c\u3092\u8907\u6570\u306eUI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u305f\u6642\u306b\u3001\uff12\u56deHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u306a\u4e8b\u3092\u56de\u907f\u3057\u307e\u3059\n\n\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3001\u5178\u578b\u7684\u306a\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4ea4\u3048\u3066\u975e\u5e38\u306b\u8a73\u3057\u304f\u89e3\u8aac\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u4e00\u8aad\u3092\u304a\u52e7\u3081\u3057\u307e\u3059  \n\n ViewController\n\nTableViewController.swift\n\n   @IBOutlet weak var tableView: UITableView!\n\n    private let bag = DisposeBag()\n    private var entryList: [Entry]  = []\n\n    // create ViewModel\n    let viewModel = EntriesViewModel()\n\n    override func viewDidLoad() {\n\n        super.viewDidLoad()\n        self.tableView.registerNib(UINib(nibName: \"EntryTableViewCell\", bundle: nil), forCellReuseIdentifier: \"EntryTableViewCell\")\n\n        viewModel.reloadData(self.title!) //1\n\n        // see http://yannickloriot.com/2016/01/make-uitableview-reactive-with-rxswift/\n        // bind articles to UITableView\n\n        // If there is a `drive` method available instead of `bindTo`,\n        // that means that the compiler has proven that all properties\n        // are satisfied.\n        viewModel.entries.drive(self.tableView.rx_itemsWithCellIdentifier(\"EntryTableViewCell\")) { //2\n            (index, entry: Entry, cell:EntryTableViewCell) in\n            cell.updateCell(entry)\n        }.addDisposableTo(bag) //3\n\n        viewModel.entries.driveNext { [unowned self] in //4\n            self.entryList = $0\n        }.addDisposableTo(bag)\n\n    }\n\n\n\n1. API\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u8a18\u4e8b\u306e\u53d6\u5f97\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n2. entries\u306e\u66f4\u65b0\u3092\u30c8\u30ea\u30ac\u30fc\u306b\u3057\u3066\u3001tableview\u306e\u66f4\u65b0\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n3. unsubscribe\u3092\u81ea\u52d5\u7684\u306b\u884c\u3063\u3066\u3001\u30ea\u30bd\u30fc\u30b9\u3092\u89e3\u653e\u3059\u308b\u305f\u3081\u306e\u8a18\u8ff0\u3067\u3059\u3002\n\n\nUsing dispose bags or takeUntil operator is a robust way of making sure resources are cleaned up. We recommend using them in production even if the sequences will terminate in finite time.\n\n\n\u611f\u60f3\n\n\u5404\u30af\u30e9\u30b9\u306e\u8cac\u52d9\u304c\u660e\u78ba\u306b\u306a\u308a\u3001\u4ed5\u69d8\u5909\u8ffd\u52a0\u6642\u306e\u5909\u66f4\u7b87\u6240\u304c\u660e\u78ba\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u30c6\u30b9\u30c8\u304c\u66f8\u304d\u3084\u3059\u304f\u306a\u308a\u305d\u3046\u3067\u3059\u3002\n\n\n\u304a\u308f\u308a\u306b\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\u6b21\u56de\u306f\u3001\u5c11\u3057\u8da3\u3092\u5909\u3048\u3066\u3001\u5b9f\u88c5\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u53c2\u8003\n\nIntroduction to Rx\nReactiveX - Intro\nRxSwiftCommunity/RxDataSources: Table and Collection View Data Sources for RxSwift\nRxSwift + MVVM - SSSSLIDE\n\u3010\u7ffb\u8a33\u3011\u3042\u306a\u305f\u304c\u6c42\u3081\u3066\u3044\u305f\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580 - ninjinkun's diary\n[\u521d\u5fc3\u8005]RxSwift\u306e\u9053\u6a19[\u5165\u9580] - Qiita\ntailec - Pawel Krawiec iOS blog\nA practical MVVM example in Swift \u2013 Part 2 (featuring RxSwift) \u2013 Candy Code\nRxSwift\u3067\u5b9f\u884c\u3059\u308bScheduler\u306e\u4f5c\u308a\u65b9\u3068\u304a\u884c\u5100\u826f\u304f\u6271\u3046\u305f\u3081\u306e\u30e1\u30e2 \u00b7 Tomorrow Never Comes.\n\n\n## <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> \u306f\u3058\u3081\u306b\n\nswift\u306f\u307b\u3068\u3093\u3069\u672a\u7d4c\u9a13\u3067\u3059\u304c\u3001SmartNews\u98a8\u30cb\u30e5\u30fc\u30b9\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u3066\u3001\u305d\u306e\u904e\u7a0b\u3092\u3055\u3089\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-07-03 11.39.55.png](https://qiita-image-store.s3.amazonaws.com/0/34321/21241a1d-6807-a7e7-ae0f-93b099835419.png)\n\n\u524d\u56de\u306f\u3001\u3053\u3093\u306a\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\n[swift\u521d\u5fc3\u8005\u304cSmartNews\u98a8\u30cb\u30e5\u30fc\u30b9\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u308b\u904e\u7a0b\u3092\u6652\u3059(7)\u3000- MVVM\u3067\u95a2\u5fc3\u4e8b\u3092\u5206\u96e2\u3059\u308b\u624b\u6cd5\u3092\u5b66\u3076 - Qiita](http://qiita.com/tjnet/items/e26efd33b896434b0f66)\n\n\u4eca\u56de\u306f\u3001RxSwift\u3092\u7528\u3044\u3066\u5b9f\u969b\u306bMVVM\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u4f7f\u7528\u3057\u305f\u5b9f\u88c5\u3092\u884c\u3044\u307e\u3059\u3002\n\n## <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> RxSwift\u3092\u4f7f\u7528\u3057\u305fMVVM\n\n\u53d6\u5f97\u3057\u305f\u8a18\u4e8b\u3092\u8868\u793a\u3059\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u30cb\u30e5\u30fc\u30b9\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30cb\u30e5\u30fc\u30b9\u8a18\u4e8b\u306e\u30c7\u30fc\u30bf\u306f\u3001[\u3053\u3053](http://menthas.com/top/rss)\u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n## <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> Model\n\nEntry\u30e2\u30c7\u30eb\u306f\u4e00\u3064\u4e00\u3064\u306e\u8a18\u4e8b\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\nJSON\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092parse\u3057\u3001\u5404\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u3067\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002\n\n```Entry.swift\nimport Foundation\nimport RealmSwift\n\nclass Entry: Object {\n    \n    dynamic var title: String = \"\"\n    dynamic var link: String = \"\"\n    dynamic var contentSnippet: String = \"\"\n}\n```\n\n## <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> ViewModel\n\nViewModel\u306b\u306f\u4ee5\u4e0b\u306e\u8cac\u52d9\u3092\u3082\u305f\u305b\u307e\u3059\u3002\n\n- \u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af(\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u767a\u751f\u3055\u305b\u308betc)\n- \u8868\u793a\u306b\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u3092ViewController\u306b\u5c4a\u3051\u308b\n- Model\u306e\u66f4\u65b0\u3092\u76e3\u8996\u3059\u308b\n\n```EntriesViewModel.swift\nimport RxSwift\nimport RxCocoa\n\nfinal class EntriesViewModel {\n    \n    //MARK: - Dependecies\n    \n    //MARK: - Model\n    \n    var entries: Driver<[Entry]> = Driver.never()\n    \n    //MARK: - Set up\n    \n    init() {\n        //Initialise dependencies\n\n    }\n    \n    func reloadData(title: String) {\n        entries = EntryAPIService().fetchEntries(q: title)\n    }\n}\n```\n\nDriver\u306fUI\u30ec\u30a4\u30e4\u30fc\u3092\u76f4\u611f\u7684\u306b\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u90e8\u54c1\u3067\u3059\u3002\nDriver\u3063\u3066\u4f55\u306a\u3093\u3060\u3001\u3068\u3044\u3046\u3053\u3068\u306b\u95a2\u3057\u3066\u306f\u3001[\u3053\u3061\u3089](http://www.finneycanhelp.com/2015/12/rxswift-driver/)\u306b\u8a73\u3057\u304f\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n>Units are totally optional. You can use raw observable sequences everywhere in your program and all RxCocoa APIs work with observable sequences.\n\n[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/ReactiveX/RxSwift/blob/master/Documentation/Units.md#driver-unit)\u306b\u3082\u8a18\u8f09\u304c\u3042\u308b\u3088\u3046\u306b\u3001\u4f7f\u7528\u3057\u306a\u3044\u3068\u5b9f\u88c5\u3067\u304d\u306a\u3044\u3082\u306e\u3067\u3082\u306a\u3044\u3067\u3059\u304c\u3001\u4fbf\u5229\u306a\u306e\u3067\u4f7f\u3044\u307e\u3057\u3087\u3046\u3001\u3068\u3044\u3046\u4f4d\u7f6e\u4ed8\u3051\u306e\u3088\u3046\u3067\u3059\u3002\n\n\n### Driver\u306e\u7279\u5fb4\n\nDriver\u306e\u7279\u5fb4\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n- \u30a8\u30e9\u30fc\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u7d42\u4e86\u3057\u306a\u3044\n - JSON\u306eparse\u30a8\u30e9\u30fc\u3084API\u3068\u306e\u901a\u4fe1\u5931\u6557\u304c\u8d77\u304d\u305f\u5834\u5408\u306b\u3001UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u66f4\u65b0\u3067\u304d\u306a\u304f\u306a\u308b\u3088\u3046\u306a\u3053\u3068\u3092\u9632\u304e\u307e\u3059\n- main scheduler\u3067subscribe, observe\u3059\u308b\n - API\u901a\u4fe1\u306e\u7d50\u679c\u3092\u4f7f\u7528\u3057\u3066\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u66f4\u65b0\u3059\u308b\u3088\u3046\u306a\u3053\u3068\u3092\u3059\u308b\u3068Crash\u306e\u539f\u56e0\u306b\u306a\u308a\u307e\u3059\n- \u526f\u4f5c\u7528\u3092\u30b7\u30a7\u30a2\u3059\u308b\n - API\u901a\u4fe1\u306e\u7d50\u679c\u3092\u8907\u6570\u306eUI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u305f\u6642\u306b\u3001\uff12\u56deHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u306a\u4e8b\u3092\u56de\u907f\u3057\u307e\u3059\n\n[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/ReactiveX/RxSwift/blob/master/Documentation/Units.md#driver-unit)\u3067\u306f\u3001\u5178\u578b\u7684\u306a\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4ea4\u3048\u3066\u975e\u5e38\u306b\u8a73\u3057\u304f\u89e3\u8aac\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u4e00\u8aad\u3092\u304a\u52e7\u3081\u3057\u307e\u3059 :bow: \n\n## <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> ViewController\n\n```TableViewController.swift\n\n   @IBOutlet weak var tableView: UITableView!\n    \n    private let bag = DisposeBag()\n    private var entryList: [Entry]  = []\n    \n    // create ViewModel\n    let viewModel = EntriesViewModel()\n\n    override func viewDidLoad() {\n        \n        super.viewDidLoad()\n        self.tableView.registerNib(UINib(nibName: \"EntryTableViewCell\", bundle: nil), forCellReuseIdentifier: \"EntryTableViewCell\")\n        \n        viewModel.reloadData(self.title!) //1\n        \n        // see http://yannickloriot.com/2016/01/make-uitableview-reactive-with-rxswift/\n        // bind articles to UITableView\n        \n        // If there is a `drive` method available instead of `bindTo`,\n        // that means that the compiler has proven that all properties\n        // are satisfied.\n        viewModel.entries.drive(self.tableView.rx_itemsWithCellIdentifier(\"EntryTableViewCell\")) { //2\n            (index, entry: Entry, cell:EntryTableViewCell) in\n            cell.updateCell(entry)\n        }.addDisposableTo(bag) //3\n        \n        viewModel.entries.driveNext { [unowned self] in //4\n            self.entryList = $0\n        }.addDisposableTo(bag)\n        \n    }\n```\n\n- 1. API\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u8a18\u4e8b\u306e\u53d6\u5f97\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n- 2. entries\u306e\u66f4\u65b0\u3092\u30c8\u30ea\u30ac\u30fc\u306b\u3057\u3066\u3001tableview\u306e\u66f4\u65b0\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n- 3. unsubscribe\u3092\u81ea\u52d5\u7684\u306b\u884c\u3063\u3066\u3001\u30ea\u30bd\u30fc\u30b9\u3092\u89e3\u653e\u3059\u308b\u305f\u3081\u306e\u8a18\u8ff0\u3067\u3059\u3002\n\n> Using dispose bags or takeUntil operator is a robust way of making sure resources are cleaned up. We recommend using them in production even if the sequences will terminate in finite time.\n\n\n\n## <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i>\u611f\u60f3\n\n- \u5404\u30af\u30e9\u30b9\u306e\u8cac\u52d9\u304c\u660e\u78ba\u306b\u306a\u308a\u3001\u4ed5\u69d8\u5909\u8ffd\u52a0\u6642\u306e\u5909\u66f4\u7b87\u6240\u304c\u660e\u78ba\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n- \u30c6\u30b9\u30c8\u304c\u66f8\u304d\u3084\u3059\u304f\u306a\u308a\u305d\u3046\u3067\u3059\u3002\n\n## <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i>\u304a\u308f\u308a\u306b\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f[\u3053\u3061\u3089](https://github.com/tjnet/NewsAppSwiftMVVM)\u3067\u3059\u3002\n\n\u6b21\u56de\u306f\u3001\u5c11\u3057\u8da3\u3092\u5909\u3048\u3066\u3001\u5b9f\u88c5\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n\n## <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i>\u53c2\u8003\n\n- [Introduction to Rx](http://www.introtorx.com/)\n- [ReactiveX - Intro](http://reactivex.io/intro.html)\n- [RxSwiftCommunity/RxDataSources: Table and Collection View Data Sources for RxSwift](https://github.com/RxSwiftCommunity/RxDataSources)\n- [RxSwift + MVVM - SSSSLIDE](http://sssslide.com/speakerdeck.com/ishkawa/rxswift-plus-mvvm)\n- [\u3010\u7ffb\u8a33\u3011\u3042\u306a\u305f\u304c\u6c42\u3081\u3066\u3044\u305f\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580 - ninjinkun's diary](http://ninjinkun.hatenablog.com/entry/introrxja)\n- [[\u521d\u5fc3\u8005]RxSwift\u306e\u9053\u6a19[\u5165\u9580] - Qiita](http://qiita.com/nakailand/items/8b54dc9b4b39b0809c57)\n- [tailec - Pawel Krawiec iOS blog](http://www.tailec.com/blog/reactive-recipe-2)\n- [A practical MVVM example in Swift \u2013 Part 2 (featuring RxSwift) \u2013 Candy Code](http://candycode.io/a-practical-mvvm-example-in-swift-part-2/)\n- [RxSwift\u3067\u5b9f\u884c\u3059\u308bScheduler\u306e\u4f5c\u308a\u65b9\u3068\u304a\u884c\u5100\u826f\u304f\u6271\u3046\u305f\u3081\u306e\u30e1\u30e2 \u00b7 Tomorrow Never Comes.](http://blog.sgr-ksmt.org/2016/03/15/rxswift_scheduler/)\n", "tags": ["Swift", "Swift2.0", "iOS", "RxSwift", "iPhone"]}