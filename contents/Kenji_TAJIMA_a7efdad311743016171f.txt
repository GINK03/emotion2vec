{"context": "\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u306a\u304c\u3089Kafka consumer\u3092\u4f5c\u3063\u3066\u5b9f\u884c\u3057\u305f\u3089\u3001\njava.io.IOException: Can't resolve address: fluentd01.example.com:9092\u3063\u3066\u8a00\u308f\u308c\u305f\u3002\n17:51:56.640 [main] DEBUG o.apache.kafka.clients.NetworkClient - No node found. Trying previously-seen node with ID 0\n17:51:56.640 [main] DEBUG o.apache.kafka.clients.NetworkClient - Give up sending metadata request since no node is available\n17:51:56.740 [main] DEBUG o.apache.kafka.clients.NetworkClient - Initialize connection to node 0 for sending metadata request\n17:51:56.740 [main] DEBUG o.apache.kafka.clients.NetworkClient - Initiating connection to node 0 at fluentd01.example.com:9092.\n17:51:56.742 [main] DEBUG o.apache.kafka.clients.NetworkClient - Error connecting to node 0 at fluentd01.example.com:9092:\njava.io.IOException: Can't resolve address: fluentd01.example.com:9092\n    at org.apache.kafka.common.network.Selector.connect(Selector.java:156) ~[kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:514) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.NetworkClient.access$600(NetworkClient.java:49) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:672) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:568) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:268) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.clientPoll(ConsumerNetworkClient.java:303) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:197) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:187) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.awaitMetadataUpdate(ConsumerNetworkClient.java:126) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureCoordinatorKnown(AbstractCoordinator.java:186) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.consumer.KafkaConsumer.pollOnce(KafkaConsumer.java:857) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:829) [kafka-clients-0.9.0.0.jar:na]\n    at poc.AtMostOnceConsumer.processRecords(AtMostOnceConsumer.java:95) [classes/:na]\n    at poc.AtMostOnceConsumer.execute(AtMostOnceConsumer.java:62) [classes/:na]\n    at poc.AtMostOnceConsumer.main(AtMostOnceConsumer.java:50) [classes/:na]\nCaused by: java.nio.channels.UnresolvedAddressException: null\n    at sun.nio.ch.Net.checkAddress(Net.java:101) ~[na:1.8.0_101]\n    at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622) ~[na:1.8.0_101]\n    at org.apache.kafka.common.network.Selector.connect(Selector.java:153) ~[kafka-clients-0.9.0.0.jar:na]\n    ... 15 common frames omitted\n\n\u300cfluentd01.example.com\u300d\u306a\u3093\u3066\u30bd\u30fc\u30b9\u306e\u3069\u3053\u306b\u3082\u66f8\u3044\u3066\u306d\u30fc\u305e...\u3068\u304b\u601d\u3063\u305f\u304c\u3001/etc/hosts \u306b\u66f8\u3044\u3066\u3042\u3063\u305f\u3002\n\u306a\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3068\u304a\u308aadvertised.listeners\u3067\u8a2d\u5b9a\u3057\u3066\u3042\u3052\u308b\u3068\u3001\n\u3046\u307e\u3044\u3053\u3068Broker\u304b\u3089\u30c8\u30d4\u30c3\u30af\u3092\u53d6\u5f97\u3067\u304d\u305f\u3002\n\n/opt/kafka/config/server.properties\n# Hostname and port the broker will advertise to producers and consumers. If not set,\n# it uses the value for \"listeners\" if configured.  Otherwise, it will use the value\n# returned from java.net.InetAddress.getCanonicalHostName().\n#advertised.listeners=PLAINTEXT://your.host.name:9092\nadvertised.listeners=PLAINTEXT://[\u30b5\u30fc\u30d0\u30fc\u306eIP]:9092\n\n\n\n[\u3053\u3061\u3089](https://dzone.com/articles/kafka-clients-at-most-once-at-least-once-exactly-o)\u3092\u53c2\u8003\u306b\u3057\u306a\u304c\u3089Kafka consumer\u3092\u4f5c\u3063\u3066\u5b9f\u884c\u3057\u305f\u3089\u3001\njava.io.IOException: Can't resolve address: fluentd01.example.com:9092\u3063\u3066\u8a00\u308f\u308c\u305f\u3002\n\n```\n17:51:56.640 [main] DEBUG o.apache.kafka.clients.NetworkClient - No node found. Trying previously-seen node with ID 0\n17:51:56.640 [main] DEBUG o.apache.kafka.clients.NetworkClient - Give up sending metadata request since no node is available\n17:51:56.740 [main] DEBUG o.apache.kafka.clients.NetworkClient - Initialize connection to node 0 for sending metadata request\n17:51:56.740 [main] DEBUG o.apache.kafka.clients.NetworkClient - Initiating connection to node 0 at fluentd01.example.com:9092.\n17:51:56.742 [main] DEBUG o.apache.kafka.clients.NetworkClient - Error connecting to node 0 at fluentd01.example.com:9092:\njava.io.IOException: Can't resolve address: fluentd01.example.com:9092\n    at org.apache.kafka.common.network.Selector.connect(Selector.java:156) ~[kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.NetworkClient.initiateConnect(NetworkClient.java:514) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.NetworkClient.access$600(NetworkClient.java:49) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:672) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.NetworkClient$DefaultMetadataUpdater.maybeUpdate(NetworkClient.java:568) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.NetworkClient.poll(NetworkClient.java:268) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.clientPoll(ConsumerNetworkClient.java:303) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:197) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll(ConsumerNetworkClient.java:187) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.awaitMetadataUpdate(ConsumerNetworkClient.java:126) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.consumer.internals.AbstractCoordinator.ensureCoordinatorKnown(AbstractCoordinator.java:186) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.consumer.KafkaConsumer.pollOnce(KafkaConsumer.java:857) [kafka-clients-0.9.0.0.jar:na]\n    at org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:829) [kafka-clients-0.9.0.0.jar:na]\n    at poc.AtMostOnceConsumer.processRecords(AtMostOnceConsumer.java:95) [classes/:na]\n    at poc.AtMostOnceConsumer.execute(AtMostOnceConsumer.java:62) [classes/:na]\n    at poc.AtMostOnceConsumer.main(AtMostOnceConsumer.java:50) [classes/:na]\nCaused by: java.nio.channels.UnresolvedAddressException: null\n    at sun.nio.ch.Net.checkAddress(Net.java:101) ~[na:1.8.0_101]\n    at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:622) ~[na:1.8.0_101]\n    at org.apache.kafka.common.network.Selector.connect(Selector.java:153) ~[kafka-clients-0.9.0.0.jar:na]\n    ... 15 common frames omitted\n```\n\n\u300cfluentd01.example.com\u300d\u306a\u3093\u3066\u30bd\u30fc\u30b9\u306e\u3069\u3053\u306b\u3082\u66f8\u3044\u3066\u306d\u30fc\u305e...\u3068\u304b\u601d\u3063\u305f\u304c\u3001/etc/hosts \u306b\u66f8\u3044\u3066\u3042\u3063\u305f\u3002\n\u306a\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3068\u304a\u308aadvertised.listeners\u3067\u8a2d\u5b9a\u3057\u3066\u3042\u3052\u308b\u3068\u3001\n\u3046\u307e\u3044\u3053\u3068Broker\u304b\u3089\u30c8\u30d4\u30c3\u30af\u3092\u53d6\u5f97\u3067\u304d\u305f\u3002\n\n```/opt/kafka/config/server.properties\n# Hostname and port the broker will advertise to producers and consumers. If not set,\n# it uses the value for \"listeners\" if configured.  Otherwise, it will use the value\n# returned from java.net.InetAddress.getCanonicalHostName().\n#advertised.listeners=PLAINTEXT://your.host.name:9092\nadvertised.listeners=PLAINTEXT://[\u30b5\u30fc\u30d0\u30fc\u306eIP]:9092\n```\n", "tags": ["Kafka"]}