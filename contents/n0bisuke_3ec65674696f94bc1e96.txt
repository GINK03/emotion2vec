{"context": "\u524d\u56de\u306b\u7d9a\u304d\u3001Nefry\u3067Grove\u306e\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\nGrove - 3-Axis Digital Accelerometer(\u00b11.5g)\n\nhttp://wiki.seeed.cc/Grove-3-Axis_Digital_Accelerometer-1.5g/\n\n\n\u30b9\u30da\u30c3\u30af\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002 Nefry\u3060\u30683.3V\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u30bb\u30f3\u30b5\u3092\u4f7f\u3048\u308b\u306e\u3067\u3053\u306e\u30bb\u30f3\u30b5\u30fc\u306f\u554f\u984c\u306a\u304f\u4f7f\u3048\u307e\u3059\u3002\nWorking voltage: 3.0 - 5.5V\nOff Mode Current: 0.4\u03bcA\nStandby Mode Current: 2\u03bcA\nActive Mode Current: 47 \u03bcA at 1 ODR\nTest Range: \u00b11.5g\nSensitivity: 21LSB/g\nSuli-compatible Library\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u3080\n\u30bb\u30f3\u30b5\u30fc\u3092\u6271\u3046\u305f\u3081\u306b\u3001Seeed\u306e\u516c\u5f0f\u30b5\u30a4\u30c8\u7d4c\u7531\u3067Accelerometer_MMA7660\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\n\nhttps://github.com/Seeed-Studio/Accelerometer_MMA7660\n\n\n3\u8ef8\u306e\u52a0\u901f\u5ea6\u306b\u5408\u308f\u305b\u3066LED\u306e\u8272\u3092\u5909\u3048\u308b\n\u3053\u3093\u306a\u611f\u3058\u3067\u30bb\u30f3\u30b5\u30fc\u3092\u632f\u308b\u3068\u65b9\u5411\u306b\u3088\u3063\u3066\u8272\u304c\u5909\u308f\u308b\u3082\u306e\u3092\u4f5c\u308a\u307e\u3059\u3002\n\nx\u8ef8\u65b9\u5411 \u8d64\u8272\ny\u8ef8\u65b9\u5411 \u7dd1\u8272\nz\u8ef8\u65b9\u5411 \u9752\u8272\n\n\nArduino\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u6bdb\u304c\u751f\u3048\u305f\u304f\u3089\u3044\u3067\u3059\u304c\u4ee5\u4e0b\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306a\u308a\u307e\u3059\u3002\n#include <Nefry.h>\n#include <Wire.h>\n#include \"MMA7660.h\"\nMMA7660 accelemeter;\n\nvoid setup()\n{\n  Nefry.print(\"Grove 3-Axis Digital Accelerometer\");\n  Nefry.setLed(0,0,0);\n  accelemeter.init();  \n}\n\nvoid loop()\n{\n  int8_t x;\n  int8_t y;\n  int8_t z;\n  float ax,ay,az;\n  accelemeter.getXYZ(&x,&y,&z);\n  Nefry.setLed(x,y,z,50);\n\n  Nefry.print(\"x = \");\n    Nefry.println(x); \n    Nefry.print(\"y = \");\n    Nefry.println(y);   \n    Nefry.print(\"z = \");\n    Nefry.println(z);\n\n  accelemeter.getAcceleration(&ax,&ay,&az);\n    Nefry.println(\"accleration of X/Y/Z: \");\n  Nefry.print(ax);\n  Nefry.println(\" g\");\n  Nefry.print(ay);\n  Nefry.println(\" g\");\n  Nefry.print(az);\n  Nefry.println(\" g\");\n  Nefry.println(\"*************\");\n  delay(500);\n}\n\n\n[\u524d\u56de](http://qiita.com/n0bisuke/items/0abe67b0d293e24a5628)\u306b\u7d9a\u304d\u3001[Nefry](https://dotstud.io/shop/nefry-connect-internet/)\u3067Grove\u306e\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n## Grove - 3-Axis Digital Accelerometer(\u00b11.5g)\n\n* http://wiki.seeed.cc/Grove-3-Axis_Digital_Accelerometer-1.5g/\n\n![](https://i.gyazo.com/279b9cb5597debbcbeb78ef02254bfe8.png)\n\n\u30b9\u30da\u30c3\u30af\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002 Nefry\u3060\u30683.3V\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u30bb\u30f3\u30b5\u3092\u4f7f\u3048\u308b\u306e\u3067\u3053\u306e\u30bb\u30f3\u30b5\u30fc\u306f\u554f\u984c\u306a\u304f\u4f7f\u3048\u307e\u3059\u3002\n\n```\nWorking voltage: 3.0 - 5.5V\nOff Mode Current: 0.4\u03bcA\nStandby Mode Current: 2\u03bcA\nActive Mode Current: 47 \u03bcA at 1 ODR\nTest Range: \u00b11.5g\nSensitivity: 21LSB/g\nSuli-compatible Library\n```\n\n## \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u3080\n\n\u30bb\u30f3\u30b5\u30fc\u3092\u6271\u3046\u305f\u3081\u306b\u3001Seeed\u306e\u516c\u5f0f\u30b5\u30a4\u30c8\u7d4c\u7531\u3067Accelerometer_MMA7660\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\n\n> https://github.com/Seeed-Studio/Accelerometer_MMA7660\n\n## 3\u8ef8\u306e\u52a0\u901f\u5ea6\u306b\u5408\u308f\u305b\u3066LED\u306e\u8272\u3092\u5909\u3048\u308b\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u30bb\u30f3\u30b5\u30fc\u3092\u632f\u308b\u3068\u65b9\u5411\u306b\u3088\u3063\u3066\u8272\u304c\u5909\u308f\u308b\u3082\u306e\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n* x\u8ef8\u65b9\u5411 \u8d64\u8272\n* y\u8ef8\u65b9\u5411 \u7dd1\u8272\n* z\u8ef8\u65b9\u5411 \u9752\u8272\n\n![](https://i.gyazo.com/f4743f0d427a31aa7b7b0ea7a360e994.gif)\n\nArduino\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u6bdb\u304c\u751f\u3048\u305f\u304f\u3089\u3044\u3067\u3059\u304c\u4ee5\u4e0b\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n#include <Nefry.h>\n#include <Wire.h>\n#include \"MMA7660.h\"\nMMA7660 accelemeter;\n\nvoid setup()\n{\n  Nefry.print(\"Grove 3-Axis Digital Accelerometer\");\n  Nefry.setLed(0,0,0);\n  accelemeter.init();  \n}\n\nvoid loop()\n{\n  int8_t x;\n  int8_t y;\n  int8_t z;\n  float ax,ay,az;\n  accelemeter.getXYZ(&x,&y,&z);\n  Nefry.setLed(x,y,z,50);\n  \n  Nefry.print(\"x = \");\n    Nefry.println(x); \n    Nefry.print(\"y = \");\n    Nefry.println(y);   \n    Nefry.print(\"z = \");\n    Nefry.println(z);\n  \n  accelemeter.getAcceleration(&ax,&ay,&az);\n    Nefry.println(\"accleration of X/Y/Z: \");\n  Nefry.print(ax);\n  Nefry.println(\" g\");\n  Nefry.print(ay);\n  Nefry.println(\" g\");\n  Nefry.print(az);\n  Nefry.println(\" g\");\n  Nefry.println(\"*************\");\n  delay(500);\n}\n```\n", "tags": ["Grove", "nefry", "IoT", "Arduino", "dotstudio"]}