{"context": "Akka\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u958b\u767a\u3057\u3066\u3044\u308b\u6642\u3001\u74b0\u5883\u306b\u3088\u3063\u3066\u306fCtrl-C\u3067\u7d42\u4e86\u304c\u51fa\u6765\u307e\u305b\u3093\u3002\u306a\u306e\u3067\u3001Enter\u3092\u62bc\u3059\u3068Akka\u3092\u7d42\u4e86\u3055\u305b\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f\u7c21\u5358\u306aSpray\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002Boot\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6700\u5f8c2\u884c\u3067Enter\u304c\u62bc\u3055\u308c\u305f\u6642\u306e\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\nimport akka.actor.{Actor, ActorSystem, Props}\nimport akka.io.IO\nimport spray.can.Http\nimport akka.pattern.ask\nimport akka.util.Timeout\nimport spray.http.MediaTypes._\nimport spray.routing.HttpService\nimport scala.concurrent.duration._\n\nobject Boot extends App {\n  implicit val system = ActorSystem(\"on-spray-can\")\n  val service = system.actorOf(Props[MyServiceActor], \"demo-service\")\n  implicit val timeout = Timeout(5.seconds)\n  IO(Http) ? Http.Bind(service, interface = \"localhost\", port = 8080)\n\n\n  // Enter\u3092\u62bc\u3057\u305f\u3089\u7d42\u4e86\u3059\u308b Docker\u7b49\u306e\u5834\u5408Null\u304c\u5e30\u308b\n  if(io.StdIn.readLine() != null)\n    system.terminate()\n}\n\nclass MyServiceActor extends Actor with MyService {\n  def actorRefFactory = context\n  def receive = runRoute(myRoute)\n}\ntrait MyService extends HttpService {\n  val myRoute =\n    path(\"\") {\n      get {\n        respondWithMediaType(`text/html`) {\n          complete {\n            <html>\n              <body>\n                <h1>Say hello to <i>spray-routing</i> on <i>spray-can</i>!</h1>\n              </body>\n            </html>\n          }\n        }\n      }\n    }\n}\n\nbuild.sbt\nlibraryDependencies ++= {\n  val akkaV = \"2.4.8\"\n  val sprayV = \"1.3.3\"\n  Seq(\n    \"io.spray\" %% \"spray-can\" % sprayV,\n    \"io.spray\" %% \"spray-routing\" % sprayV,\n    \"io.spray\" %%  \"spray-json\" % \"1.3.2\"\n  )\n}\n\nRevolver.settings\n\nfork in run := true\nconnectInput in run := true\n\nAkka\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u958b\u767a\u3057\u3066\u3044\u308b\u6642\u3001\u74b0\u5883\u306b\u3088\u3063\u3066\u306fCtrl-C\u3067\u7d42\u4e86\u304c\u51fa\u6765\u307e\u305b\u3093\u3002\u306a\u306e\u3067\u3001Enter\u3092\u62bc\u3059\u3068Akka\u3092\u7d42\u4e86\u3055\u305b\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306f\u7c21\u5358\u306aSpray\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002Boot\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6700\u5f8c2\u884c\u3067Enter\u304c\u62bc\u3055\u308c\u305f\u6642\u306e\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n```scala\nimport akka.actor.{Actor, ActorSystem, Props}\nimport akka.io.IO\nimport spray.can.Http\nimport akka.pattern.ask\nimport akka.util.Timeout\nimport spray.http.MediaTypes._\nimport spray.routing.HttpService\nimport scala.concurrent.duration._\n\nobject Boot extends App {\n  implicit val system = ActorSystem(\"on-spray-can\")\n  val service = system.actorOf(Props[MyServiceActor], \"demo-service\")\n  implicit val timeout = Timeout(5.seconds)\n  IO(Http) ? Http.Bind(service, interface = \"localhost\", port = 8080)\n\n\n  // Enter\u3092\u62bc\u3057\u305f\u3089\u7d42\u4e86\u3059\u308b Docker\u7b49\u306e\u5834\u5408Null\u304c\u5e30\u308b\n  if(io.StdIn.readLine() != null)\n    system.terminate()\n}\n\nclass MyServiceActor extends Actor with MyService {\n  def actorRefFactory = context\n  def receive = runRoute(myRoute)\n}\ntrait MyService extends HttpService {\n  val myRoute =\n    path(\"\") {\n      get {\n        respondWithMediaType(`text/html`) {\n          complete {\n            <html>\n              <body>\n                <h1>Say hello to <i>spray-routing</i> on <i>spray-can</i>!</h1>\n              </body>\n            </html>\n          }\n        }\n      }\n    }\n}\n```\n\nbuild.sbt\n\n```scala\nlibraryDependencies ++= {\n  val akkaV = \"2.4.8\"\n  val sprayV = \"1.3.3\"\n  Seq(\n    \"io.spray\" %% \"spray-can\" % sprayV,\n    \"io.spray\" %% \"spray-routing\" % sprayV,\n    \"io.spray\" %%  \"spray-json\" % \"1.3.2\"\n  )\n}\n\nRevolver.settings\n\nfork in run := true\nconnectInput in run := true\n```\n", "tags": ["Scala", "Akka", "spray"]}