{"tags": ["C++", "C++14", "constexpr"], "context": "\u3069\u3046\u3082\u3002\nf(n) n={0,1,2,3....k-1}\n\u3068\u3044\u3063\u305f\u6570\u5217\u3092constexpr\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u8a08\u7b97\u3057\u305f\u3044\u3068\u3057\u3066\n\u3069\u3046\u3044\u3063\u305f\u8868\u73fe\u306b\u306a\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\nc++14\u3067\u958b\u767a\u3057\u307e\u3059\u3002\n\u6700\u521d\u3044\u308d\u3093\u306a\u30a8\u30e9\u30fc\u306b\u3076\u3061\u3042\u305f\u3063\u3066\n\u306f\u308b\u304f\u3093\uff08@hal1437\uff09\u3068\u4e8c\u65e5\u306b\u308f\u305f\u3063\u3066\u8b70\u8ad6\u3057\u3001\u3084\u3063\u3068\u5b9f\u88c5\u306b\u3053\u304e\u3064\u3051\u307e\u3057\u305f\u3002\n\u307e\u3060\u307e\u3060constexpr\u3078\u306e\u7406\u89e3\u304c\u6d45\u304b\u3063\u305f\u307f\u305f\u3044\u3067\u3059\u3001\u4eca\u56de\u306f\u305d\u306e\u30a8\u30e9\u30fc\u4e00\u89a7\u3068\u6700\u7d42\u7684\u306a\u5b9f\u88c5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u306d\u3002\n\u307e\u305a\u3001\u6570\u5217\u306e\u8a08\u7b97\u306a\u306e\u3067\u914d\u5217\u306b{0,1,2,3....k-1}\u3068\u3044\u3046\u5024\u3067\u8a08\u7b97\u3057\u305f\u3001constexpr\u95a2\u6570f(x)\u306e\u8fd4\u308a\u5024\u3092\u9010\u6b21\u4ee3\u5165\u3059\u308b\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001\u666e\u901a\u306a\u3089\u3070\u914d\u5217\u5909\u6570\u3092\u53c2\u7167\u6e21\u3057\u3057\u3066\u95a2\u6570\u306b\u8a08\u7b97\u3057\u3066\u3082\u3089\u3046\u306e\u3067\u3059\u304c\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u8a08\u7b97\u306b\u53c2\u7167\u6e21\u3057\u3082\u30af\u30bd\u3082\u3042\u308b\u304b\uff01\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001std::array\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059constexpr\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u3092\u8003\u3048\u307e\u3059\u3002\n\ntemplate<typename T,int LENGTH>\nconstexpr std::array<T,LENGTH> calc_sequence(){\n std::array<T,LENGTH> sequence;\n for(int i=0;i<LENGTH;i++){\n  sequence[i] = f(i);   //function f \u306f\u5b9a\u7fa9\u6e08\u307f\u3068\u3059\u308b\n }\n}\n\nint main(){\n constexpr int N = 10;\n constexpr auto sequence = calc_sequence<int,n>(N);\n return 0;\n}\n\n\nclang main.cpp -std=c++1y\n\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\u3002\n\u307e\u3042\u3001\u3060\u3081\u3067\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3067\u3059\u3002\nnon-constexpr constructor 'array cannot be used in a constant expression\nstd::array sequence;\n\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304cnon-constexpr\u3060\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306d\u3001\u307e\u3042\u5f53\u305f\u308a\u524d\u3067\u3059\u3002\n\u3061\u3087\u3063\u3068\u6c17\u6301\u3061\u60aa\u304f\u306a\u308a\u307e\u3059\u304c\u3001\u3053\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002\nstd::array<T,LENGTH> sequence{};\n\n\u3067\u3001\u3082\u3046\u4e00\u56de\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\nerror: constexpr variable 'sequence' must be initialized by a constant expression\nconstexpr auto sequence = calm_sequence();\n\u3093\uff1f\nsequence\u304c\u5b9a\u6570\u5f0f\u3067\u521d\u671f\u5316\u3055\u308c\u3066\u306a\u3044\u3001\u3068\u3002\n\u3044\u3084\u3044\u3084\u3001constexpr\u95a2\u6570\u3067\u521d\u671f\u5316\u3057\u3066\u308b\u3067\u3057\u3087...\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30a8\u30e9\u30fc\u306f\u3053\u3046\u7d9a\u304d\u307e\u3059\u3002\nnote: non-constexpr function 'operator[]' cannot be used in a constant expression\nsequence[i] = f(i);\n^\n\n\u3048\u3063\uff1f\nstd::array\u306e[]\u30aa\u30da\u30ec\u30fc\u30bf\u304cconstexpr\u3058\u3083\u306a\u3044\uff1f\n\u3061\u3087\u3063\u3068\u3073\u3063\u304f\u308a\u3001\u3066\u3063\u304d\u308a\u5bfe\u5fdc\u3057\u3066\u308b\u3082\u306e\u304b\u3068\u3002\n\u3046\u30fc\u3093\u3001\u3069\u3046\u3057\u307e\u3057\u3087\n\u8abf\u3079\u3066\u307f\u308b\u3068\u3001std::get\u304cconstexpr\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3089\u3057\u3044\u3002\nstd::get<0>(sequence)\u306a\u3069\u3068\u8a18\u8ff0\u3059\u308b\u3068\u3001squence[0]\u306bconstexpr\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3002\n\n\ntemplate<typename T,int LENGTH>\nconstexpr std::array<T,LENGTH> calm_sequence(int k){\n std::array<T,LENGTH> sequence;\n for(int i=0;i<k;i++){\n  std::get<i>(sequence) = f(i);   //function f \u306f\u5b9a\u7fa9\u6e08\u307f\u3068\u3059\u308b\n }\n}\n\n\u3048\uff1f\u3053\u306e\u30b3\u30fc\u30c9\u3060\u3081\u3058\u3083\u3093\u3001\u3063\u3066\u601d\u3063\u305f\u4eba\u306fC++\u3064\u3088\u3044\u4eba\u306a\u3093\u3067\u3059\u306d\u3002\n\u79c1\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6012\u3089\u308c\u308b\u307e\u3067\u6c17\u3065\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5c55\u958b\u306f\u3088\u308a\u9ad8\u6b21\u306a\u51e6\u7406\u3067\u3059\u306e\u3067\n\u9ad8\u6b21\u5316\u3055\u308c\u305f\u95a2\u6570calc_sequence\u3088\u308a\u3082\u3055\u3089\u306b\u9ad8\u6b21\u306b\u306a\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a\u771f\u3063\u5148\u306b\u51e6\u7406\u3055\u308c\u307e\u3059\u3002\n\u305d\u3046\u306a\u308b\u3068\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u304c\u5909\u6570\u306a\u306e\u306f\u8a8d\u3081\u3089\u308c\u306a\u3044\u3093\u3067\u3059\u306d\u3002\n\u4ee5\u4e0b\u306f\u65b0\u3057\u304f\u5b9a\u7fa9\u3057\u305f\u30ea\u30c6\u30e9\u30eb\u30af\u30e9\u30b9\u3067\u3059\u3002\n\ntemplate <typename T,int LENGTH>\n  struct array{\n      T v[LENGTH];\n       constexpr T& operator[](size_t l){\n             return v[l];\n       }\n}\n\n\u307b\u3044\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u3059\u308c\u3070\u3001\u5148\u307b\u3069\u306e\u95a2\u6570\u3068\u5168\u3066\u5dee\u3057\u66ff\u3048\u308b\u3053\u3068\u3067\u52d5\u304d\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u3061\u3087\u3063\u3068\u5f85\u3063\u3066\u4e0b\u3055\u3044\u3002\n\u3053\u306e\u30a2\u30af\u30bb\u30c3\u30b5\u30aa\u30da\u30ec\u30fc\u30bf[]\u3001\u306a\u306b\u304b\u304a\u304b\u3057\u304f\u306a\u3044\u3067\u3059\u304b\uff1f\n\u5148\u307b\u3069\u306e\u30ea\u30c6\u30e9\u30eb\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3068\nconstexpr auto sequence = calc_sequence<int,N>(N);\n\u3053\u306e\u578b\u63a8\u8ad6\u306e\u7d50\u679c\u3001sequence\u306fconstexpr array\u578b\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u304c\n[]\u30a2\u30af\u30bb\u30c3\u30b5\u306f\u3001\u53c2\u7167\u3092\u8fd4\u3059\u30aa\u30da\u30ec\u30fc\u30bf\u3067\u3059\u3002\n\u5b9f\u884c\u6642\u306bconstexpr\u8981\u7d20\u306e\u975econst\u53c2\u7167\u3092\u8fd4\u3059\u306e\u306f...\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\nmain\u95a2\u6570\u5185\u3067\n\nfor(int i=0;i<N;i++){\n std::cout << sequence[i] << std::endl;\n}\n\n\u306a\u3069\u3068\u8a18\u8ff0\u3059\u308b\u3068\u3001\u30a2\u30a6\u30c8\u3067\u3059\u306d\u3002\n\u5b9f\u884c\u6642\u306bconstexpr\u8981\u7d20\u306e\u53c2\u7167\u3092\u8fd4\u3059\u969b\u306f\u3001const\u4fee\u98fe\u3092\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\nC++\u306f\u5f15\u6570\u304c\u4e00\u7dd2\u3067\u3082\u3001const\u4fee\u98fe\u306e\u6709\u7121\u3067\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u304c\u53ef\u80fd\u3067\u3059\u306e\u3067\u3001[]\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u3068\u5b9f\u884c\u6642\u306b\u5206\u3051\u3066\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\u3002\n\ntemplate <typename T, int LENGTH>\n struct array{\n  T v[LENGTH];\n  constexpr T& operator[](size_t l){ //accessor\n   return v[l];\n  }\n  constexpr T const& operator[](size_t l)const{ //accessor (allow reading)\n       return v[l];\n    }\n };\n\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u5b9f\u884c\u6642\u306fconst\u4fee\u98fe\u3055\u308c\u305f\u30a2\u30af\u30bb\u30c3\u30b5\u304c\u547c\u3070\u308c\u3001\u5b89\u5168\u306b\u6271\u308f\u308c\u307e\u3059\u3002\n\u6674\u308c\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u914d\u5217\u8a08\u7b97\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u9577\u304b\u3063\u305f\u3067\u3059\u306d\u3002\n\u30ea\u30f3\u30af(\u3053\u306e\u8a18\u4e8b\u3092\u4f5c\u308b\u304d\u3063\u304b\u3051\u306b\u306a\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0)\nb-spline curve calculated in compile time\n\u3069\u3046\u3082\u3002\n\nf(n) n={0,1,2,3....k-1}\n\u3068\u3044\u3063\u305f\u6570\u5217\u3092constexpr\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u8a08\u7b97\u3057\u305f\u3044\u3068\u3057\u3066\n\n\u3069\u3046\u3044\u3063\u305f\u8868\u73fe\u306b\u306a\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\nc++14\u3067\u958b\u767a\u3057\u307e\u3059\u3002\n\n\u6700\u521d\u3044\u308d\u3093\u306a\u30a8\u30e9\u30fc\u306b\u3076\u3061\u3042\u305f\u3063\u3066\n\u306f\u308b\u304f\u3093\uff08@hal1437\uff09\u3068\u4e8c\u65e5\u306b\u308f\u305f\u3063\u3066\u8b70\u8ad6\u3057\u3001\u3084\u3063\u3068\u5b9f\u88c5\u306b\u3053\u304e\u3064\u3051\u307e\u3057\u305f\u3002\n\u307e\u3060\u307e\u3060constexpr\u3078\u306e\u7406\u89e3\u304c\u6d45\u304b\u3063\u305f\u307f\u305f\u3044\u3067\u3059\u3001\u4eca\u56de\u306f\u305d\u306e\u30a8\u30e9\u30fc\u4e00\u89a7\u3068\u6700\u7d42\u7684\u306a\u5b9f\u88c5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u306d\u3002\n\n\u307e\u305a\u3001\u6570\u5217\u306e\u8a08\u7b97\u306a\u306e\u3067\u914d\u5217\u306b{0,1,2,3....k-1}\u3068\u3044\u3046\u5024\u3067\u8a08\u7b97\u3057\u305f\u3001constexpr\u95a2\u6570f(x)\u306e\u8fd4\u308a\u5024\u3092\u9010\u6b21\u4ee3\u5165\u3059\u308b\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u305d\u306e\u305f\u3081\u3001\u666e\u901a\u306a\u3089\u3070\u914d\u5217\u5909\u6570\u3092\u53c2\u7167\u6e21\u3057\u3057\u3066\u95a2\u6570\u306b\u8a08\u7b97\u3057\u3066\u3082\u3089\u3046\u306e\u3067\u3059\u304c\n**\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u8a08\u7b97\u306b\u53c2\u7167\u6e21\u3057\u3082\u30af\u30bd\u3082\u3042\u308b\u304b\uff01**\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001std::array\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059constexpr\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u3092\u8003\u3048\u307e\u3059\u3002\n\n```cpp\n\t\ntemplate<typename T,int LENGTH>\nconstexpr std::array<T,LENGTH> calc_sequence(){\n std::array<T,LENGTH> sequence;\n for(int i=0;i<LENGTH;i++){\n  sequence[i] = f(i);   //function f \u306f\u5b9a\u7fa9\u6e08\u307f\u3068\u3059\u308b\n }\n}\n \nint main(){\n constexpr int N = 10;\n constexpr auto sequence = calc_sequence<int,n>(N);\n return 0;\n}\n\n```\n \n`clang main.cpp -std=c++1y`\n\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\u3002\n\n\u307e\u3042\u3001\u3060\u3081\u3067\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3067\u3059\u3002\n\n`non-constexpr constructor 'array cannot be used in a constant expression\nstd::array sequence;`\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304cnon-constexpr\u3060\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306d\u3001\u307e\u3042\u5f53\u305f\u308a\u524d\u3067\u3059\u3002\n\n\u3061\u3087\u3063\u3068\u6c17\u6301\u3061\u60aa\u304f\u306a\u308a\u307e\u3059\u304c\u3001\u3053\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002\n\n```cpp\nstd::array<T,LENGTH> sequence{};\n```\n\n\u3067\u3001\u3082\u3046\u4e00\u56de\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\n\n`error: constexpr variable 'sequence' must be initialized by a constant expression\nconstexpr auto sequence = calm_sequence();`\n\n\n\u3093\uff1f\n\nsequence\u304c\u5b9a\u6570\u5f0f\u3067\u521d\u671f\u5316\u3055\u308c\u3066\u306a\u3044\u3001\u3068\u3002\n\u3044\u3084\u3044\u3084\u3001constexpr\u95a2\u6570\u3067\u521d\u671f\u5316\u3057\u3066\u308b\u3067\u3057\u3087...\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30a8\u30e9\u30fc\u306f\u3053\u3046\u7d9a\u304d\u307e\u3059\u3002\n\n`note: non-constexpr function 'operator[]' cannot be used in a constant expression\nsequence[i] = f(i);\n^\n`\n\n\n\u3048\u3063\uff1f\n\n**std::array\u306e[]\u30aa\u30da\u30ec\u30fc\u30bf\u304cconstexpr\u3058\u3083\u306a\u3044\uff1f**\n\n\n\u3061\u3087\u3063\u3068\u3073\u3063\u304f\u308a\u3001\u3066\u3063\u304d\u308a\u5bfe\u5fdc\u3057\u3066\u308b\u3082\u306e\u304b\u3068\u3002\n\n\u3046\u30fc\u3093\u3001\u3069\u3046\u3057\u307e\u3057\u3087\n\u8abf\u3079\u3066\u307f\u308b\u3068\u3001std::get\u304cconstexpr\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3089\u3057\u3044\u3002\n\nstd::get<0>(sequence)\u306a\u3069\u3068\u8a18\u8ff0\u3059\u308b\u3068\u3001squence[0]\u306bconstexpr\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3002\n\n```cpp\n\n\t\ntemplate<typename T,int LENGTH>\nconstexpr std::array<T,LENGTH> calm_sequence(int k){\n std::array<T,LENGTH> sequence;\n for(int i=0;i<k;i++){\n  std::get<i>(sequence) = f(i);   //function f \u306f\u5b9a\u7fa9\u6e08\u307f\u3068\u3059\u308b\n }\n}\n```\n\n\n\n\u3048\uff1f\u3053\u306e\u30b3\u30fc\u30c9\u3060\u3081\u3058\u3083\u3093\u3001\u3063\u3066\u601d\u3063\u305f\u4eba\u306fC++\u3064\u3088\u3044\u4eba\u306a\u3093\u3067\u3059\u306d\u3002\n\u79c1\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6012\u3089\u308c\u308b\u307e\u3067\u6c17\u3065\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5c55\u958b\u306f\u3088\u308a\u9ad8\u6b21\u306a\u51e6\u7406\u3067\u3059\u306e\u3067\n\u9ad8\u6b21\u5316\u3055\u308c\u305f\u95a2\u6570calc_sequence\u3088\u308a\u3082\u3055\u3089\u306b\u9ad8\u6b21\u306b\u306a\u308a\u307e\u3059\u3002\n**\u3064\u307e\u308a\u771f\u3063\u5148\u306b\u51e6\u7406\u3055\u308c\u307e\u3059\u3002**\n\n\u305d\u3046\u306a\u308b\u3068\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u304c\u5909\u6570\u306a\u306e\u306f\u8a8d\u3081\u3089\u308c\u306a\u3044\u3093\u3067\u3059\u306d\u3002\n\n\n\u4ee5\u4e0b\u306f\u65b0\u3057\u304f\u5b9a\u7fa9\u3057\u305f\u30ea\u30c6\u30e9\u30eb\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```cpp\n\ntemplate <typename T,int LENGTH>\n  struct array{\n      T v[LENGTH];\n       constexpr T& operator[](size_t l){\n             return v[l];\n       }\n}\n```\n\n\u307b\u3044\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u3059\u308c\u3070\u3001\u5148\u307b\u3069\u306e\u95a2\u6570\u3068\u5168\u3066\u5dee\u3057\u66ff\u3048\u308b\u3053\u3068\u3067\u52d5\u304d\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3001\u3061\u3087\u3063\u3068\u5f85\u3063\u3066\u4e0b\u3055\u3044\u3002\n\u3053\u306e\u30a2\u30af\u30bb\u30c3\u30b5\u30aa\u30da\u30ec\u30fc\u30bf[]\u3001\u306a\u306b\u304b\u304a\u304b\u3057\u304f\u306a\u3044\u3067\u3059\u304b\uff1f\n\n\u5148\u307b\u3069\u306e\u30ea\u30c6\u30e9\u30eb\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3068\n\n`constexpr auto sequence = calc_sequence<int,N>(N);`\n\n\u3053\u306e\u578b\u63a8\u8ad6\u306e\u7d50\u679c\u3001sequence\u306fconstexpr array<int,10>\u578b\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u304c\n[]\u30a2\u30af\u30bb\u30c3\u30b5\u306f\u3001\u53c2\u7167\u3092\u8fd4\u3059\u30aa\u30da\u30ec\u30fc\u30bf\u3067\u3059\u3002\n\n\u5b9f\u884c\u6642\u306bconstexpr\u8981\u7d20\u306e\u975econst\u001e\u53c2\u7167\u3092\u8fd4\u3059\u306e\u306f...\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\nmain\u95a2\u6570\u5185\u3067\n\n```cpp\n\nfor(int i=0;i<N;i++){\n std::cout << sequence[i] << std::endl;\n}\n```\n\n\u306a\u3069\u3068\u8a18\u8ff0\u3059\u308b\u3068\u3001\u30a2\u30a6\u30c8\u3067\u3059\u306d\u3002\n\n\u5b9f\u884c\u6642\u306bconstexpr\u8981\u7d20\u306e\u53c2\u7167\u3092\u8fd4\u3059\u969b\u306f\u3001const\u4fee\u98fe\u3092\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n\nC++\u306f\u5f15\u6570\u304c\u4e00\u7dd2\u3067\u3082\u3001const\u4fee\u98fe\u306e\u6709\u7121\u3067\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u304c\u53ef\u80fd\u3067\u3059\u306e\u3067\u3001[]\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u3068\u5b9f\u884c\u6642\u306b\u5206\u3051\u3066\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\u3002\n\n```cpp\n\ntemplate <typename T, int LENGTH>\n struct array{\n  T v[LENGTH];\n  constexpr T& operator[](size_t l){ //accessor\n   return v[l];\n  }\n  constexpr T const& operator[](size_t l)const{ //accessor (allow reading)\n       return v[l];\n    }\n };\n\n```\n\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u5b9f\u884c\u6642\u306fconst\u4fee\u98fe\u3055\u308c\u305f\u30a2\u30af\u30bb\u30c3\u30b5\u304c\u547c\u3070\u308c\u3001\u5b89\u5168\u306b\u6271\u308f\u308c\u307e\u3059\u3002\n\n\u6674\u308c\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u914d\u5217\u8a08\u7b97\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u9577\u304b\u3063\u305f\u3067\u3059\u306d\u3002\n\n\u30ea\u30f3\u30af(\u3053\u306e\u8a18\u4e8b\u3092\u4f5c\u308b\u304d\u3063\u304b\u3051\u306b\u306a\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0)\n[b-spline curve calculated in compile time](https://github.com/Riyaaaaa/ANCTPCC/blob/master/constexpr_bspline/bspline.cpp)\n"}