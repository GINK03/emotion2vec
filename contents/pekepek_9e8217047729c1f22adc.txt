{"context": "\n\n\u6982\u8981\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 Elixir\n\u540d\u524d\u4ed8\u304d\u95a2\u6570\u306b\u95a2\u3057\u3066\u89e3\u8aac\u3057\u3066\u3044\u308b\u7ae0\u3002\n\ncalculator.exs\ndefmodule Calculator do\n  def add_one(n) do\n    n + 1\n  end\nend\n\n\n\u4e0a\u8a18\u306e\u69d8\u306b\u540d\u524d\u4ed8\u304d\u95a2\u6570\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u306b\u5b9a\u7fa9\u3059\u308b\u3002\n\u3053\u306e\u95a2\u6570\u306f\u4e00\u3064\u306e\u5f15\u6570\u3092\u53d6\u308a\u3001add_one/1 \u3068\u3044\u3046\u540d\u524d\u306e\u95a2\u6570\u3067\u3042\u308b\u3002\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\niex \u306b\u5bfe\u3057\u3066 2 \u901a\u308a\u306e\u81ea\u4f5c\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3002\n\u4e00\u3064\u76ee\u306f iex \u3092\u7acb\u3061\u4e0a\u3052\u308b\u969b\u306b\u8aad\u307f\u8fbc\u3080\u65b9\u6cd5\n$ iex calculator.exs\n\n\u4e8c\u3064\u76ee\u304c iex \u4e0a\u3067 c \u30d8\u30eb\u30d1\u30fc\u3067\u8aad\u307f\u8fbc\u3080\u65b9\u6cd5\niex> c \"calculator.exs\"\n[Calculator]\niex> Calculator.add_one(2)\n3\niex> Calculator.add_one(\"2\")\n** (ArithmeticError) bad argument in arithmetic expression\n    calculator.exs:3: Calculator.add_one/1\n\n\u4e0a\u8a18\u306e\u69d8\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u5f8c\u306f\u81ea\u7531\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u3001\u554f\u984c\u304c\u3042\u308b\u5834\u5408\u306f\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u3066\u6559\u3048\u3066\u304f\u308c\u308b\u3002\n\u307e\u305f\u3001\u30a8\u30e9\u30fc\u3067\u306f add_one/1 \u3068\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304c\u308b\u304c\u3001Elixir \u3067\u306f\u540d\u524d\u4ed8\u304d\u95a2\u6570\u3092\u540d\u524d\u3068\u30a2\u30ea\u30c6\u30a3 (arity, \u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u6570) \u3067\u8b58\u5225\u3059\u308b\u3002\n\n\u95a2\u6570\u306e\u30dc\u30c7\u30a3\u306e\u8a18\u8ff0\u65b9\u6cd5\n\u6982\u8981\u3067\u306f do...end \u30d6\u30ed\u30c3\u30af\u3092\u4f7f\u3044\u3001\u8907\u6570\u5f0f\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u8a18\u8ff0\u3057\u3066\u3044\u308b\u304c\u3001do...end \u306f\u57fa\u672c\u7684\u306a\u69cb\u6587\u3067\u306f\u306a\u304f\u3001\u5b9f\u969b\u306e\u69cb\u6587\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\ndef add_one(n), do: n + 1\n\ndo: \u3067\u8907\u6570\u884c\u3092\u8a18\u8ff0\u3059\u308b\u5834\u5408\u306f () \u3067\u56f2\u3080\ndef greet(greeting, name), do: (\n  IO.puts greeting\n  IO.puts \"How're you doing, #{name}?\"\n)\n\ndo...end \u306f\u305f\u3060\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b do: \u5f62\u5f0f\u306b\u5909\u63db\u3055\u308c\u308b\u3002\n\u305f\u3060\u3001\u8907\u6570\u884c\u306b\u6e21\u308b\u3068\u304d\u306f\u901a\u5e38 do...end \u3092\u4f7f\u3046\u3002\n\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\n5 \u7ae0\u3067 Elixir \u306e\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306b\u3088\u308b\u5f37\u529b\u306a\u95a2\u6570\u547c\u3073\u51fa\u3057\u65b9\u6cd5\u3092\u5b66\u3093\u3060\u304c\u3001\u540d\u524d\u4ed8\u304d\u95a2\u6570\u3067\u3082\u540c\u3058\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u9055\u3044\u306f\u3001\u540d\u524d\u4ed8\u304d\u95a2\u6570\u306e\u5834\u5408\u306f\u6bce\u56de\u95a2\u6570\u540d\u306e\u5ba3\u8a00\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u3060\u304c\u3001\u3053\u308c\u306b\u3088\u3063\u3066\u95a2\u6570\u3092\u3068\u3066\u3082\u6570\u5b66\u306e\u5b9a\u7fa9\u8fd1\u3044\u5f62\u3067\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u4f8b\u3048\u3070\u968e\u4e57\u306e\u5b9a\u7fa9\u306f\nfactorial(0) -> 1\nfactorial(n) -> n * factorial(n - 1)\n\n\u3068\u306a\u308b\u304c\u3001Elixir \u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\ndefmodule Factorial do\n  def of(0), do: 1\n  def of(n), do: n * of(n - 1)\nend\n\n0 \u304c\u6e21\u3055\u308c\u308b\u307e\u3067\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3067 of(n) \u304c\u547c\u3073\u51fa\u3055\u308c\u7d9a\u3051\u3066\u30010 \u304c\u6e21\u3055\u308c\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067 of(0) \u304c\u30de\u30c3\u30c1\u3057\u3066 1 \u304c\u8fd4\u3055\u308c\u3001\u518d\u5e30\u304c\u7d42\u4e86\u3059\u308b\u3002\niex> Factorial.of(3)\n6\niex> Factorial.of(7)\n5040\niex> Factorial.of(10)\n3628800\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e\u7279\u6027\u306b\u3088\u308a\u3001\u3068\u3066\u3082\u81ea\u7136\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u3053\u306e\u969b\u3001\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u306e\u306f\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306f\u30b3\u30fc\u30c9\u306e\u4e0a\u304b\u3089\u4e0b\u306b\u884c\u308f\u308c\u308b\u3053\u3068\u3067\u3042\u308b\u3002\u305d\u306e\u305f\u3081\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u8a18\u8ff0\u3059\u308b\u3068\u52d5\u304b\u306a\u3044\u3002\n\nfactorial.exs\ndefmodule Factorial do\n  def of(n), do: n * of(n - 1)\n  def of(0), do: 1\nend\n\n\n\u3053\u306e\u3088\u3046\u306a\u30df\u30b9\u3092\u7121\u304f\u3059\u305f\u3081\u306b\u3001Elixir \u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a warning \u3092\u51fa\u3057\u3066\u304f\u308c\u308b\u3002\niex> c \"factorial.exs\"\nwarning: this clause cannot match because a previous clause at line 2 always matches\n  factorial.exs:3\n\n\n\u30ac\u30fc\u30c9\u7bc0\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e\u529b\u306f\u524d\u56de\u306e\u7121\u540d\u95a2\u6570\u3067\u3082\u898b\u3066\u304d\u305f\u304c\u3001\u52d5\u4f5c\u3092\u5024\u306e\u578b\u3084\u6761\u4ef6\u3067\u533a\u5225\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u30de\u30c3\u30c1\u30f3\u30b0\u3060\u3051\u3067\u306f\u4e0d\u5341\u5206\u3067\u3042\u308b\u3002\u305d\u306e\u969b\u306b\u4f7f\u3046\u306e\u304c when \u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3063\u305f\u30ac\u30fc\u30c9\u7bc0\u3067\u3042\u308b\u3002\ndefmodule Guard do\n  def what_is(x) when is_number(x) do\n    IO.puts \"#{x} is a number\"\n  end\n\n  def what_is(x) when is_list(x) do\n    IO.puts \"#{inspect(x)} is a list\"\n  end\n\n  def what_is(x) when is_atom(x) do\n    IO.puts \"#{x} is a atom\"\n  end\nend\n\niex> Guard.what_is(99)\n99 is a number\n:ok\niex> Guard.what_is(:cat)\ncat is a atom\n:ok\niex> Guard.what_is([1, 2, 3])\n[1, 2, 3] is a list\n:ok\n\n\u4e0a\u8a18\u306e\u968e\u4e57\u306e\u5b9f\u88c5\u3092\u898b\u76f4\u3059\u3068\u3001\u8ca0\u306e\u5024\u3092\u6e21\u3057\u305f\u3068\u304d\u306b\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\u305d\u3053\u3067\u30ac\u30fc\u30c9\u7bc0\u3092\u4f7f\u3063\u3066\u3053\u306e\u554f\u984c\u3092\u89e3\u6d88\u3059\u308b\u3002\ndefmodule Factorial do\n  def of(0), do: 1\n  def of(n) when n > 0 do\n    n * of(n - 1)\n  end\nend\n\niex> Factorial.of(-10)\n** (FunctionClauseError) no function clause matching in Factorial.of/1\n    iex:6: Factorial.of(-10)\n\n\u30ac\u30fc\u30c9\u7bc0\u3067\u4f7f\u3048\u308b\u6f14\u7b97\u5b50\u306f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u308b\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\n\u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306f (\u30d1\u30e9\u30e1\u30fc\u30bf) \\\\ (\u5024) \u3068\u3044\u3046\u5f62\u5f0f\u3067\u66f8\u304f\u3002\ndefmodule DefaultParameter do\n  def test(p1, p2 \\\\ 2, p3 \\\\ 3, p4) do\n    IO.puts \"p1: #{p1}, p2: #{p2}, p3: #{p3}, p4: #{p4}\"\n  end\nend\n\n\u95a2\u6570\u306b\u6e21\u3055\u308c\u305f\u5024\u306f\u5de6\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304b\u3089\u675f\u7e1b\u3055\u308c\u3066\u3044\u304d\u3001\u5c11\u306a\u3044\u5206\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5024\u304c\u4f7f\u308f\u308c\u308b\u3002\n\u5fc5\u9808\u30d1\u30e9\u30e1\u30fc\u30bf\u3088\u308a\u3082\u5f15\u6570\u304c\u5c11\u306a\u3051\u308c\u3070\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3002\niex> DefaultParameter.test(\"a\", \"b\")\np1: a, p2: 2, p3: 3, p4: b\niex> DefaultParameter.test(\"a\", \"b\", \"c\")\np1: a, p2: b, p3: 3, p4: c\niex> DefaultParameter.test(\"a\", \"b\", \"c\", \"d\")\np1: a, p2: b, p3: c, p4: d\niex> DefaultParameter.test(\"a\")\n** (UndefinedFunctionError) function DefaultParameter.test/1 is undefined or private. Did you mean one of:\n\n      * test/2\n      * test/3\n      * test/4\n\n    DefaultParameter.test(\"a\")\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\ndefmodule DefaultParameter do\n  def test(p1, p2 \\\\ 2, p3 \\\\ 3, p4) do\n    IO.puts \"p1: #{p1}, p2: #{p2}, p3: #{p3}, p4: #{p4}\"\n  end\n\n  def test(p1, p2) do\n    IO.puts \"p1: #{p1}, p2: #{p2}\"\n  end\nend\n\n** (CompileError) iex:18: def test/2 conflicts with defaults from def test/4\n\n\u6700\u521d\u306e\u95a2\u6570\u5b9a\u7fa9\u304c\u5f15\u6570 2, 3, 4 \u306e\u5834\u5408\u3001\u5168\u3066\u306b\u30de\u30c3\u30c1\u3057\u3066\u3057\u307e\u3046\u305f\u3081\u3067\u3042\u308b\u3002\n\u8907\u6570\u306e\u30dc\u30c7\u30a3\u3092\u6301\u3064\u95a2\u6570\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u4e0e\u3048\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u30dc\u30c7\u30a3\u306a\u3057\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u542b\u3080\u95a2\u6570\u3092\u6700\u521d\u306b\u5b9a\u7fa9\u3057\u3066\u3001\u305d\u308c\u4ee5\u964d\u306b\u30dc\u30c7\u30a3\u306e\u5b9a\u7fa9\u3092\u3057\u3066\u3044\u304f\u3002\ndefmodule DefaultParameter do\n  def test(p1, p2 \\\\ :default)\n\n  def test(p1, p2) when is_list(p1) do\n    IO.puts \"p1 is list, p2: #{p2}\"\n  end\n\n  def test(p1, p2) do\n    IO.puts \"p1: #{p1}, p2: #{p2}\"\n  end\nend\n\niex> DefaultParameter.test(\"a\")\np1: a, p2: default\niex> DefaultParameter.test(\"a\", \"b\")\np1: a, p2: b\niex> DefaultParameter.test([\"a\"], \"b\")\np1 is list, p2: b\n\n\n\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u95a2\u6570\n\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u95a2\u6570\u306f defp \u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u5b9a\u7fa9\u3059\u308b\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u95a2\u6570\u306f\u3001\u5b9a\u7fa9\u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u3067\u3057\u304b\u547c\u3073\u51fa\u305b\u306a\u3044\u3002\ndefmodule PrivateSample do\n  def func do\n    IO.puts pfunc\n  end\n\n  defp pfunc do\n    \"private function\"\n  end\nend\n\niex> PrivateSample.func\nprivate function\niex> PrivateSample.pfunc\n** (UndefinedFunctionError) function PrivateSample.pfunc/0 is undefined or private. Did you mean one of:\n\n      * func/0\n\n    PrivateSample.pfunc()\n\n\u901a\u5e38\u306e\u95a2\u6570\u3068\u540c\u69d8\u306b\u8907\u6570\u306e\u30d8\u30c3\u30c9\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304c\u3001\u3042\u308b\u30d8\u30c3\u30c9\u3092\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306b\u3001\u4ed6\u3092\u30d1\u30d6\u30ea\u30c3\u30af\u306b\u3068\u3044\u3046\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002\ndefmodule PrivateSample do\n  def pfunc(0) do\n    IO.puts 0\n  end\n\n  defp pfunc(n) do\n    IO.puts n\n  end\nend\n\n== Compilation error on file sample.exs ==\n** (CompileError) sample.exs:6: defp pfunc/1 already defined as def\n    (stdlib) erl_eval.erl:670: :erl_eval.do_apply/6\n\n\n\u30d1\u30a4\u30d7\u6f14\u7b97\u5b50\n\u4f8b\u3048\u3070\u4ed6\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3060\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u3088\u304f\u66f8\u304f\npeople = DB.find_customers\norders = Orders.for_customers(people)\ntax    = sales_tax(orders, 2016)\nfiling = prepare_filing(tax)\n\n\u3053\u308c\u3092\u300c\u4e00\u5ea6\u3057\u304b\u4f7f\u308f\u306a\u3044\u306e\u306b\u5909\u6570\u306b\u5165\u308c\u308b\u306e\u306f\u5acc\u3060\u300d\u3068\u306a\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306a\u308b\u3002\nprepare_filing(sales_tax(Orders.for_customers(DB.find_customers), 2016))\n\n\u6d41\u77f3\u306b\u3001\u8aad\u307f\u3065\u3089\u3044\u4e0a\u306b\u3001\u5b9f\u884c\u3059\u308b\u9806\u756a\u304c\u76f4\u89b3\u7684\u3067\u306a\u304f\u3001\u96e3\u3057\u3044\u3002\n\u3057\u304b\u3057\u3001Elixir \u306a\u3089\u30d1\u30a4\u30d7\u6f14\u7b97\u5b50 |> \u3092\u4f7f\u3063\u3066\u3001\u3053\u308c\u3092\u7c21\u6f54\u306b\u66f8\u3051\u308b\u3002\nfiling = DB.find_customers\n           |> Orders.for_customers\n           |> sales_tax(2016)\n           |> prepare_filing\n\n\u5de6\u306e\u5f0f\u306e\u7d50\u679c\u3092\u3001\u53f3\u306e\u5f0f\u306e\u7b2c\u4e00\u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u3066\u5b9f\u884c\u3059\u308b\u3002\n\u3064\u307e\u308a\u3001val |> f(a, b) \u306f f(val, a, b) \u3068\u540c\u3058\u610f\u5473\u3067\u3042\u308b\u3002\n\u4e0a\u8a18\u306e\u69d8\u306b\u6539\u884c\u305b\u305a\u306b\u4e00\u884c\u3067\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u308b\u3002\niex> (1..5) |> Enum.map(&(&1 + 1)) |> Enum.map(&(&1 * 2))\n[4, 6, 8, 10, 12]\n\n\u305f\u3060\u3057\u3001\u30d1\u30a4\u30d7\u6f14\u7b97\u5b50\u3092\u4f7f\u3063\u3066\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u4ed8\u304d\u3067\u95a2\u6570\u3092\u547c\u3076\u5834\u5408\u306f\u62ec\u5f27\u3092\u4f7f\u3046\u3002\n\u3053\u306e\u3088\u3046\u306b\u3001\u30d1\u30a4\u30d7\u6f14\u7b97\u5b50\u3092\u4f7f\u3048\u3070\u3001\u300c\u3053\u308c\u3092\u3084\u3063\u3066\u3001\u3053\u308c\u3092\u3084\u3063\u3066\u3001\u3001\u3001\u300d\u3068\u601d\u8003\u306e\u6d41\u308c\u3068\u8fd1\u3044\u5f62\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u3068\u3066\u3082\u5f37\u529b\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3002\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\n\u5b9a\u7fa9\u3059\u308b\u3082\u306e\u306b\u3001\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u3002\ndefmodule OuterModule do\n  defmodule InnerModule do\n    def func1 do\n      IO.puts \"func1 in InnerModule\"\n    end\n\n    def func2 do\n      func1\n      IO.puts \"func2 in InnerModule\"\n    end\n  end\n\n  def func1 do\n    InnerModule.func1\n    IO.puts \"func1 in OuterModule\"\n  end\nend\n\niex> OuterModule.func1\nfunc1 in InnerModule\nfunc1 in OuterModule\niex> OuterModule.InnerModule.func1\nfunc1 in InnerModule\niex> OuterModule.InnerModule.func2\nfunc1 in InnerModule\nfunc2 in InnerModule\n\n\u540c\u3058\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u5185\u3067\u306f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u3092\u7701\u7565\u3057\u3066\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u5168\u3066\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u3068 Elixir \u306f\u30c9\u30c3\u30c8\u3067\u3064\u306a\u3052\u3066\u5b9a\u7fa9\u3059\u308b\u3002\n\u305d\u306e\u305f\u3081\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\ndefmodule OuterModule.InnerModule do\n  def func3, do: \"func3 in InnerModule\"\nend\n\niex> OuterModule.InnerModule.func3\n\"func3 in InnerModule\"\n\n\n\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306f\u4e09\u7a2e\u985e\u306e\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\nimport\nimport Module [, only: | except: ]\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u95a2\u6570\u3084\u30de\u30af\u30ed\u3092\u30ab\u30ec\u30f3\u30c8\u30b9\u30b3\u30fc\u30d7\u306b\u6301\u3063\u3066\u304f\u308b\u3002\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u4f8b\u306f String \u306e split/2 \u95a2\u6570\u3092 import \u3057\u3066\u3044\u308b\u3002\ndefmodule ImportSample do\n  def split_by_space1(str) do\n    String.split(str, \" \")\n  end\n\n  def split_by_space2(str) do\n    import String, only: [split: 2]\n\n    split(str, \" \")\n  end\nend\n\niex> ImportSample.split_by_space1(\"hoge fuga\")\n[\"hoge\", \"fuga\"]\niex> ImportSample.split_by_space2(\"hoge fuga\")\n[\"hoge\", \"fuga\"]\n\nimport \u3057\u3066\u304f\u308b\u3053\u3068\u3067\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nonly, except \u30aa\u30d7\u30b7\u30e7\u30f3\u306f function_name: arity \u3092\u6e21\u3059\u3053\u3068\u3067\u3001import \u3059\u308b\u95a2\u6570\u3092\u7d5e\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u307e\u305f\u3001:function, :macros \u3092\u6e21\u3057\u3066\u3001\u95a2\u6570\u304b\u30de\u30af\u30ed\u304b\u3092\u7d5e\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\nalias\nalias Module [, as:]\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4f5c\u6210\u3057\u3066\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\ndefmodule Too.Long.Name.SampleModule do\n  def func1 do\n    \"alias sample\"\n  end\nend\n\ndefmodule AliasModule do\n  def func1 do\n    alias Too.Long.Name.SampleModule, as: SampleModule\n\n    SampleModule.func1()\n  end\nend\n\nSampleModule.func1() \u3060\u3051\u3067\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u304c\u308f\u304b\u308b\u3002\n\u307e\u305f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u306e\u6700\u5f8c\u306e\u5024\u3092\u30a8\u30a4\u30ea\u30a2\u30b9\u306b\u3059\u308b\u306e\u3067\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306a\u5834\u5408 as: \u3092\u7701\u7565\u3067\u304d\u308b\u3002\nalias Too.Long.Name.SampleModule\n\n\u307e\u305f\u3001\u8907\u6570\u3042\u308b\u5834\u5408\u306f\u30bf\u30d7\u30eb\u3067\u6e21\u305b\u308b\u3002\nalias Too.Long.Name.{SampleModule1, SampleModule2, SampleModule3}\n\n\nrequire\nrequire Module\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u5b9a\u7fa9\u3057\u305f\u30de\u30af\u30ed\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\u5c5e\u6027\n\u5404\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u6301\u3063\u3066\u304a\u308a\u3001\u305d\u308c\u305e\u308c\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5c5e\u6027\u3068\u3044\u3046\u3002\n\u8a2d\u5b9a\u3084\u30e1\u30bf\u30c7\u30fc\u30bf\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u3002\n\u5c5e\u6027\u540d\u306b\u306f @ \u304c\u3064\u3044\u3066\u304a\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3002\n@name value\n\n\u5024\u306e\u30bb\u30c3\u30c8\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u307f\u53ef\u80fd\u3067\u3001\u95a2\u6570\u304b\u3089\u306f\u30a2\u30af\u30bb\u30b9\u306e\u307f\u53ef\u80fd\u3002\ndefmodule AttributeSample do\n  @name \"Yamada Taro\"\n\n  def user_name do\n    @name\n  end\nend\n\niex> AttributeSample.user_name\n\"Yamada Taro\"\n\n\u95a2\u6570\u5185\u3067\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\niex> defmodule AttributeSample do\n...>   @name \"Yamada Taro\"\n...>\n...>   def set_user_name do\n...>     @name \"Yamada Jiro\"\n...>   end\n...> end\nwarning: redefining module AttributeSample (current version defined in memory)\n  iex:49\n\n** (ArgumentError) cannot set attribute @name inside function/macro\n    (elixir) lib/kernel.ex:2336: Kernel.do_at/4\n    (elixir) expanding macro: Kernel.@/1\n             iex:53: AttributeSample.set_user_name/0\n\n\u5024\u306e\u30bb\u30c3\u30c8\u306f\u4f55\u5ea6\u3067\u3082\u53ef\u80fd\u3067\u3001\u95a2\u6570\u5185\u3067\u5c5e\u6027\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u76f4\u524d\u3067\u30bb\u30c3\u30c8\u3055\u308c\u305f\u5024\u304c\u4f7f\u308f\u308c\u308b\u3002\ndefmodule AttributeSample do\n  @name \"Yamada Taro\"\n\n  def user_name1 do\n    @name \n  end\n\n  @name \"Yamada Jiro\"\n\n  def user_name2 do\n    @name \n  end\nend\n\niex> AttributeSample.user_name1\n\"Yamada Taro\"\niex> AttributeSample.user_name2\n\"Yamada Jiro\"\n\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u540d\u524d\u306b\u3064\u3044\u3066\nElixir \u306f String.length(\"hoge\") \u306e\u3088\u3046\u306b\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u304c\u3001\u5185\u90e8\u3067\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u3092\u30a2\u30c8\u30e0\u306b\u5909\u63db\u3057\u3066\u3044\u308b\u3002\niex> to_string String\n\"Elixir.String\"\niex> :\"Elixir.String\"\nString\n\n\u305d\u306e\u305f\u3081\u4ee5\u4e0b\u306e\u69d8\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u3067\u304d\u308b\u3002\niex> :\"Elixir.String\".length(\"hoge\")\n4\n\n\nErlang \u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\nErlang \u306f Elixir \u3068\u9055\u3044\u3001\u5909\u6570\u306f\u5927\u6587\u5b57\u304b\u3089\u59cb\u307e\u308a\u3001\u30a2\u30c8\u30e0\u306f\u5c0f\u6587\u5b57\u3067\u547d\u540d\u3055\u308c\u308b\u3002\u305d\u306e\u305f\u3081\u3001Erlang \u306e timer \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u305f\u3051\u308c\u3070\u3001timer \u3092\u30a2\u30c8\u30e0\u306b\u3057\u3066\u547c\u3079\u3070\u826f\u3044\u3002\niex> :timer.minutes(1)\n60000\n\n# \u6982\u8981\n\n[\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 Elixir](https://www.amazon.co.jp/dp/4274219151)\n\n\u540d\u524d\u4ed8\u304d\u95a2\u6570\u306b\u95a2\u3057\u3066\u89e3\u8aac\u3057\u3066\u3044\u308b\u7ae0\u3002\n\n```ex:calculator.exs\ndefmodule Calculator do\n  def add_one(n) do\n    n + 1\n  end\nend\n```\n\n\u4e0a\u8a18\u306e\u69d8\u306b\u540d\u524d\u4ed8\u304d\u95a2\u6570\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u306b\u5b9a\u7fa9\u3059\u308b\u3002\n\u3053\u306e\u95a2\u6570\u306f\u4e00\u3064\u306e\u5f15\u6570\u3092\u53d6\u308a\u3001`add_one/1` \u3068\u3044\u3046\u540d\u524d\u306e\u95a2\u6570\u3067\u3042\u308b\u3002\n\n# \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\n\niex \u306b\u5bfe\u3057\u3066 2 \u901a\u308a\u306e\u81ea\u4f5c\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3002\n\n\u4e00\u3064\u76ee\u306f iex \u3092\u7acb\u3061\u4e0a\u3052\u308b\u969b\u306b\u8aad\u307f\u8fbc\u3080\u65b9\u6cd5\n\n```\n$ iex calculator.exs\n```\n\n\u4e8c\u3064\u76ee\u304c iex \u4e0a\u3067 c \u30d8\u30eb\u30d1\u30fc\u3067\u8aad\u307f\u8fbc\u3080\u65b9\u6cd5\n\n```iex\niex> c \"calculator.exs\"\n[Calculator]\niex> Calculator.add_one(2)\n3\niex> Calculator.add_one(\"2\")\n** (ArithmeticError) bad argument in arithmetic expression\n    calculator.exs:3: Calculator.add_one/1\n```\n\n\u4e0a\u8a18\u306e\u69d8\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u5f8c\u306f\u81ea\u7531\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u3001\u554f\u984c\u304c\u3042\u308b\u5834\u5408\u306f\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u3066\u6559\u3048\u3066\u304f\u308c\u308b\u3002\n\n\u307e\u305f\u3001\u30a8\u30e9\u30fc\u3067\u306f `add_one/1` \u3068\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304c\u308b\u304c\u3001Elixir \u3067\u306f\u540d\u524d\u4ed8\u304d\u95a2\u6570\u3092\u540d\u524d\u3068\u30a2\u30ea\u30c6\u30a3 (arity, \u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u6570) \u3067\u8b58\u5225\u3059\u308b\u3002\n\n# \u95a2\u6570\u306e\u30dc\u30c7\u30a3\u306e\u8a18\u8ff0\u65b9\u6cd5\n\n\u6982\u8981\u3067\u306f `do...end` \u30d6\u30ed\u30c3\u30af\u3092\u4f7f\u3044\u3001\u8907\u6570\u5f0f\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u8a18\u8ff0\u3057\u3066\u3044\u308b\u304c\u3001`do...end` \u306f\u57fa\u672c\u7684\u306a\u69cb\u6587\u3067\u306f\u306a\u304f\u3001\u5b9f\u969b\u306e\u69cb\u6587\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n```ex\ndef add_one(n), do: n + 1\n```\n\n`do:` \u3067\u8907\u6570\u884c\u3092\u8a18\u8ff0\u3059\u308b\u5834\u5408\u306f `()` \u3067\u56f2\u3080\n\n```ex\ndef greet(greeting, name), do: (\n  IO.puts greeting\n  IO.puts \"How're you doing, #{name}?\"\n)\n```\n\n`do...end` \u306f\u305f\u3060\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b `do:` \u5f62\u5f0f\u306b\u5909\u63db\u3055\u308c\u308b\u3002\n\u305f\u3060\u3001\u8907\u6570\u884c\u306b\u6e21\u308b\u3068\u304d\u306f\u901a\u5e38 `do...end` \u3092\u4f7f\u3046\u3002\n\n# \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\n\n[5 \u7ae0](http://qiita.com/pekepek/items/13c69aff51ce6fcdf798)\u3067 Elixir \u306e\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306b\u3088\u308b\u5f37\u529b\u306a\u95a2\u6570\u547c\u3073\u51fa\u3057\u65b9\u6cd5\u3092\u5b66\u3093\u3060\u304c\u3001\u540d\u524d\u4ed8\u304d\u95a2\u6570\u3067\u3082\u540c\u3058\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u9055\u3044\u306f\u3001\u540d\u524d\u4ed8\u304d\u95a2\u6570\u306e\u5834\u5408\u306f\u6bce\u56de\u95a2\u6570\u540d\u306e\u5ba3\u8a00\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u3060\u304c\u3001\u3053\u308c\u306b\u3088\u3063\u3066\u95a2\u6570\u3092\u3068\u3066\u3082\u6570\u5b66\u306e\u5b9a\u7fa9\u8fd1\u3044\u5f62\u3067\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u4f8b\u3048\u3070\u968e\u4e57\u306e\u5b9a\u7fa9\u306f\n\n```\nfactorial(0) -> 1\nfactorial(n) -> n * factorial(n - 1)\n```\n\n\u3068\u306a\u308b\u304c\u3001Elixir \u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\n\n```ex\ndefmodule Factorial do\n  def of(0), do: 1\n  def of(n), do: n * of(n - 1)\nend\n```\n\n0 \u304c\u6e21\u3055\u308c\u308b\u307e\u3067\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3067 `of(n)` \u304c\u547c\u3073\u51fa\u3055\u308c\u7d9a\u3051\u3066\u30010 \u304c\u6e21\u3055\u308c\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067 `of(0)` \u304c\u30de\u30c3\u30c1\u3057\u3066 1 \u304c\u8fd4\u3055\u308c\u3001\u518d\u5e30\u304c\u7d42\u4e86\u3059\u308b\u3002\n\n```iex\niex> Factorial.of(3)\n6\niex> Factorial.of(7)\n5040\niex> Factorial.of(10)\n3628800\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e\u7279\u6027\u306b\u3088\u308a\u3001\u3068\u3066\u3082\u81ea\u7136\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u3053\u306e\u969b\u3001\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u306e\u306f\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306f\u30b3\u30fc\u30c9\u306e\u4e0a\u304b\u3089\u4e0b\u306b\u884c\u308f\u308c\u308b\u3053\u3068\u3067\u3042\u308b\u3002\u305d\u306e\u305f\u3081\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u8a18\u8ff0\u3059\u308b\u3068\u52d5\u304b\u306a\u3044\u3002\n\n```ex:factorial.exs\ndefmodule Factorial do\n  def of(n), do: n * of(n - 1)\n  def of(0), do: 1\nend\n```\n\n\u3053\u306e\u3088\u3046\u306a\u30df\u30b9\u3092\u7121\u304f\u3059\u305f\u3081\u306b\u3001Elixir \u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a warning \u3092\u51fa\u3057\u3066\u304f\u308c\u308b\u3002\n\n```iex\niex> c \"factorial.exs\"\nwarning: this clause cannot match because a previous clause at line 2 always matches\n  factorial.exs:3\n```\n\n# \u30ac\u30fc\u30c9\u7bc0\n\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e\u529b\u306f\u524d\u56de\u306e[\u7121\u540d\u95a2\u6570](http://qiita.com/pekepek/items/13c69aff51ce6fcdf798)\u3067\u3082\u898b\u3066\u304d\u305f\u304c\u3001\u52d5\u4f5c\u3092\u5024\u306e\u578b\u3084\u6761\u4ef6\u3067\u533a\u5225\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u30de\u30c3\u30c1\u30f3\u30b0\u3060\u3051\u3067\u306f\u4e0d\u5341\u5206\u3067\u3042\u308b\u3002\u305d\u306e\u969b\u306b\u4f7f\u3046\u306e\u304c `when` \u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3063\u305f\u30ac\u30fc\u30c9\u7bc0\u3067\u3042\u308b\u3002\n\n```ex\ndefmodule Guard do\n  def what_is(x) when is_number(x) do\n    IO.puts \"#{x} is a number\"\n  end\n  \n  def what_is(x) when is_list(x) do\n    IO.puts \"#{inspect(x)} is a list\"\n  end\n\n  def what_is(x) when is_atom(x) do\n    IO.puts \"#{x} is a atom\"\n  end\nend\n```\n\n```iex\niex> Guard.what_is(99)\n99 is a number\n:ok\niex> Guard.what_is(:cat)\ncat is a atom\n:ok\niex> Guard.what_is([1, 2, 3])\n[1, 2, 3] is a list\n:ok\n```\n\n\u4e0a\u8a18\u306e\u968e\u4e57\u306e\u5b9f\u88c5\u3092\u898b\u76f4\u3059\u3068\u3001\u8ca0\u306e\u5024\u3092\u6e21\u3057\u305f\u3068\u304d\u306b\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\u305d\u3053\u3067\u30ac\u30fc\u30c9\u7bc0\u3092\u4f7f\u3063\u3066\u3053\u306e\u554f\u984c\u3092\u89e3\u6d88\u3059\u308b\u3002\n\n```ex\ndefmodule Factorial do\n  def of(0), do: 1\n  def of(n) when n > 0 do\n    n * of(n - 1)\n  end\nend\n```\n\n```iex\niex> Factorial.of(-10)\n** (FunctionClauseError) no function clause matching in Factorial.of/1\n    iex:6: Factorial.of(-10)\n```\n\n\u30ac\u30fc\u30c9\u7bc0\u3067\u4f7f\u3048\u308b\u6f14\u7b97\u5b50\u306f[\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](http://elixir-lang.org/getting-started/case-cond-and-if.html#expressions-in-guard-clauses)\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u308b\n\n# \u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306f `(\u30d1\u30e9\u30e1\u30fc\u30bf) \\\\ (\u5024)` \u3068\u3044\u3046\u5f62\u5f0f\u3067\u66f8\u304f\u3002\n\n```ex\ndefmodule DefaultParameter do\n  def test(p1, p2 \\\\ 2, p3 \\\\ 3, p4) do\n    IO.puts \"p1: #{p1}, p2: #{p2}, p3: #{p3}, p4: #{p4}\"\n  end\nend\n```\n\n\u95a2\u6570\u306b\u6e21\u3055\u308c\u305f\u5024\u306f\u5de6\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304b\u3089\u675f\u7e1b\u3055\u308c\u3066\u3044\u304d\u3001\u5c11\u306a\u3044\u5206\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5024\u304c\u4f7f\u308f\u308c\u308b\u3002\n\u5fc5\u9808\u30d1\u30e9\u30e1\u30fc\u30bf\u3088\u308a\u3082\u5f15\u6570\u304c\u5c11\u306a\u3051\u308c\u3070\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3002\n\n```iex\niex> DefaultParameter.test(\"a\", \"b\")\np1: a, p2: 2, p3: 3, p4: b\niex> DefaultParameter.test(\"a\", \"b\", \"c\")\np1: a, p2: b, p3: 3, p4: c\niex> DefaultParameter.test(\"a\", \"b\", \"c\", \"d\")\np1: a, p2: b, p3: c, p4: d\niex> DefaultParameter.test(\"a\")\n** (UndefinedFunctionError) function DefaultParameter.test/1 is undefined or private. Did you mean one of:\n\n      * test/2\n      * test/3\n      * test/4\n\n    DefaultParameter.test(\"a\")\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\n```ex\ndefmodule DefaultParameter do\n  def test(p1, p2 \\\\ 2, p3 \\\\ 3, p4) do\n    IO.puts \"p1: #{p1}, p2: #{p2}, p3: #{p3}, p4: #{p4}\"\n  end\n\n  def test(p1, p2) do\n    IO.puts \"p1: #{p1}, p2: #{p2}\"\n  end\nend\n```\n\n```iex\n** (CompileError) iex:18: def test/2 conflicts with defaults from def test/4\n```\n\n\u6700\u521d\u306e\u95a2\u6570\u5b9a\u7fa9\u304c\u5f15\u6570 2, 3, 4 \u306e\u5834\u5408\u3001\u5168\u3066\u306b\u30de\u30c3\u30c1\u3057\u3066\u3057\u307e\u3046\u305f\u3081\u3067\u3042\u308b\u3002\n\n\u8907\u6570\u306e\u30dc\u30c7\u30a3\u3092\u6301\u3064\u95a2\u6570\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u4e0e\u3048\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u30dc\u30c7\u30a3\u306a\u3057\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u542b\u3080\u95a2\u6570\u3092\u6700\u521d\u306b\u5b9a\u7fa9\u3057\u3066\u3001\u305d\u308c\u4ee5\u964d\u306b\u30dc\u30c7\u30a3\u306e\u5b9a\u7fa9\u3092\u3057\u3066\u3044\u304f\u3002\n\n```ex\ndefmodule DefaultParameter do\n  def test(p1, p2 \\\\ :default)\n\n  def test(p1, p2) when is_list(p1) do\n    IO.puts \"p1 is list, p2: #{p2}\"\n  end\n\n  def test(p1, p2) do\n    IO.puts \"p1: #{p1}, p2: #{p2}\"\n  end\nend\n```\n\n```iex\niex> DefaultParameter.test(\"a\")\np1: a, p2: default\niex> DefaultParameter.test(\"a\", \"b\")\np1: a, p2: b\niex> DefaultParameter.test([\"a\"], \"b\")\np1 is list, p2: b\n```\n\n# \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u95a2\u6570\n\n\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u95a2\u6570\u306f `defp` \u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u5b9a\u7fa9\u3059\u308b\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u95a2\u6570\u306f\u3001\u5b9a\u7fa9\u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u3067\u3057\u304b\u547c\u3073\u51fa\u305b\u306a\u3044\u3002\n\n```ex\ndefmodule PrivateSample do\n  def func do\n    IO.puts pfunc\n  end\n\n  defp pfunc do\n    \"private function\"\n  end\nend\n```\n\n```iex\niex> PrivateSample.func\nprivate function\niex> PrivateSample.pfunc\n** (UndefinedFunctionError) function PrivateSample.pfunc/0 is undefined or private. Did you mean one of:\n\n      * func/0\n\n    PrivateSample.pfunc()\n```\n\n\u901a\u5e38\u306e\u95a2\u6570\u3068\u540c\u69d8\u306b\u8907\u6570\u306e\u30d8\u30c3\u30c9\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304c\u3001\u3042\u308b\u30d8\u30c3\u30c9\u3092\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306b\u3001\u4ed6\u3092\u30d1\u30d6\u30ea\u30c3\u30af\u306b\u3068\u3044\u3046\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002\n\n```ex\ndefmodule PrivateSample do\n  def pfunc(0) do\n    IO.puts 0\n  end\n\n  defp pfunc(n) do\n    IO.puts n\n  end\nend\n```\n\n```iex\n== Compilation error on file sample.exs ==\n** (CompileError) sample.exs:6: defp pfunc/1 already defined as def\n    (stdlib) erl_eval.erl:670: :erl_eval.do_apply/6\n```\n\n# \u30d1\u30a4\u30d7\u6f14\u7b97\u5b50\n\n\u4f8b\u3048\u3070\u4ed6\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3060\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u3088\u304f\u66f8\u304f\n\n```\npeople = DB.find_customers\norders = Orders.for_customers(people)\ntax    = sales_tax(orders, 2016)\nfiling = prepare_filing(tax)\n```\n\n\u3053\u308c\u3092\u300c\u4e00\u5ea6\u3057\u304b\u4f7f\u308f\u306a\u3044\u306e\u306b\u5909\u6570\u306b\u5165\u308c\u308b\u306e\u306f\u5acc\u3060\u300d\u3068\u306a\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306a\u308b\u3002\n\n```\nprepare_filing(sales_tax(Orders.for_customers(DB.find_customers), 2016))\n```\n\n\u6d41\u77f3\u306b\u3001\u8aad\u307f\u3065\u3089\u3044\u4e0a\u306b\u3001\u5b9f\u884c\u3059\u308b\u9806\u756a\u304c\u76f4\u89b3\u7684\u3067\u306a\u304f\u3001\u96e3\u3057\u3044\u3002\n\u3057\u304b\u3057\u3001Elixir \u306a\u3089\u30d1\u30a4\u30d7\u6f14\u7b97\u5b50 `|>` \u3092\u4f7f\u3063\u3066\u3001\u3053\u308c\u3092\u7c21\u6f54\u306b\u66f8\u3051\u308b\u3002\n\n```ex\nfiling = DB.find_customers\n           |> Orders.for_customers\n           |> sales_tax(2016)\n           |> prepare_filing\n```\n\n\u5de6\u306e\u5f0f\u306e\u7d50\u679c\u3092\u3001\u53f3\u306e\u5f0f\u306e\u7b2c\u4e00\u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u3066\u5b9f\u884c\u3059\u308b\u3002\n\u3064\u307e\u308a\u3001`val |> f(a, b)` \u306f `f(val, a, b)` \u3068\u540c\u3058\u610f\u5473\u3067\u3042\u308b\u3002\n\n\u4e0a\u8a18\u306e\u69d8\u306b\u6539\u884c\u305b\u305a\u306b\u4e00\u884c\u3067\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n```iex\niex> (1..5) |> Enum.map(&(&1 + 1)) |> Enum.map(&(&1 * 2))\n[4, 6, 8, 10, 12]\n```\n\n\u305f\u3060\u3057\u3001\u30d1\u30a4\u30d7\u6f14\u7b97\u5b50\u3092\u4f7f\u3063\u3066\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u4ed8\u304d\u3067\u95a2\u6570\u3092\u547c\u3076\u5834\u5408\u306f\u62ec\u5f27\u3092\u4f7f\u3046\u3002\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u30d1\u30a4\u30d7\u6f14\u7b97\u5b50\u3092\u4f7f\u3048\u3070\u3001\u300c\u3053\u308c\u3092\u3084\u3063\u3066\u3001\u3053\u308c\u3092\u3084\u3063\u3066\u3001\u3001\u3001\u300d\u3068\u601d\u8003\u306e\u6d41\u308c\u3068\u8fd1\u3044\u5f62\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u3068\u3066\u3082\u5f37\u529b\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3002\n\n# \u30e2\u30b8\u30e5\u30fc\u30eb\n\n\u5b9a\u7fa9\u3059\u308b\u3082\u306e\u306b\u3001\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u3002\n\n```ex\ndefmodule OuterModule do\n  defmodule InnerModule do\n    def func1 do\n      IO.puts \"func1 in InnerModule\"\n    end\n\n    def func2 do\n      func1\n      IO.puts \"func2 in InnerModule\"\n    end\n  end\n\n  def func1 do\n    InnerModule.func1\n    IO.puts \"func1 in OuterModule\"\n  end\nend\n```\n\n```iex\niex> OuterModule.func1\nfunc1 in InnerModule\nfunc1 in OuterModule\niex> OuterModule.InnerModule.func1\nfunc1 in InnerModule\niex> OuterModule.InnerModule.func2\nfunc1 in InnerModule\nfunc2 in InnerModule\n```\n\n\u540c\u3058\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u5185\u3067\u306f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u3092\u7701\u7565\u3057\u3066\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u5168\u3066\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u3068 Elixir \u306f\u30c9\u30c3\u30c8\u3067\u3064\u306a\u3052\u3066\u5b9a\u7fa9\u3059\u308b\u3002\n\u305d\u306e\u305f\u3081\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n```ex\ndefmodule OuterModule.InnerModule do\n  def func3, do: \"func3 in InnerModule\"\nend\n```\n\n```iex\niex> OuterModule.InnerModule.func3\n\"func3 in InnerModule\"\n```\n\n## \u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306f\u4e09\u7a2e\u985e\u306e\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\n### import\n\n```ex\nimport Module [, only: | except: ]\n```\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u95a2\u6570\u3084\u30de\u30af\u30ed\u3092\u30ab\u30ec\u30f3\u30c8\u30b9\u30b3\u30fc\u30d7\u306b\u6301\u3063\u3066\u304f\u308b\u3002\n\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u4f8b\u306f String \u306e split/2 \u95a2\u6570\u3092 import \u3057\u3066\u3044\u308b\u3002\n\n```ex\ndefmodule ImportSample do\n  def split_by_space1(str) do\n    String.split(str, \" \")\n  end\n\n  def split_by_space2(str) do\n    import String, only: [split: 2]\n\n    split(str, \" \")\n  end\nend\n```\n\n```iex\niex> ImportSample.split_by_space1(\"hoge fuga\")\n[\"hoge\", \"fuga\"]\niex> ImportSample.split_by_space2(\"hoge fuga\")\n[\"hoge\", \"fuga\"]\n```\n\nimport \u3057\u3066\u304f\u308b\u3053\u3068\u3067\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n`only`, `except` \u30aa\u30d7\u30b7\u30e7\u30f3\u306f `function_name: arity` \u3092\u6e21\u3059\u3053\u3068\u3067\u3001import \u3059\u308b\u95a2\u6570\u3092\u7d5e\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u307e\u305f\u3001`:function`, `:macros` \u3092\u6e21\u3057\u3066\u3001\u95a2\u6570\u304b\u30de\u30af\u30ed\u304b\u3092\u7d5e\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n### alias\n\n```\nalias Module [, as:]\n```\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4f5c\u6210\u3057\u3066\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n```ex\ndefmodule Too.Long.Name.SampleModule do\n  def func1 do\n    \"alias sample\"\n  end\nend\n\ndefmodule AliasModule do\n  def func1 do\n    alias Too.Long.Name.SampleModule, as: SampleModule\n\n    SampleModule.func1()\n  end\nend\n```\n\n`SampleModule.func1()` \u3060\u3051\u3067\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u304c\u308f\u304b\u308b\u3002\n\u307e\u305f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u306e\u6700\u5f8c\u306e\u5024\u3092\u30a8\u30a4\u30ea\u30a2\u30b9\u306b\u3059\u308b\u306e\u3067\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306a\u5834\u5408 `as:` \u3092\u7701\u7565\u3067\u304d\u308b\u3002\n\n```\nalias Too.Long.Name.SampleModule\n```\n\n\u307e\u305f\u3001\u8907\u6570\u3042\u308b\u5834\u5408\u306f\u30bf\u30d7\u30eb\u3067\u6e21\u305b\u308b\u3002\n\n```\nalias Too.Long.Name.{SampleModule1, SampleModule2, SampleModule3}\n```\n\n### require\n\n```\nrequire Module\n```\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u5b9a\u7fa9\u3057\u305f\u30de\u30af\u30ed\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\n# \u5c5e\u6027\n\n\u5404\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u6301\u3063\u3066\u304a\u308a\u3001\u305d\u308c\u305e\u308c\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5c5e\u6027\u3068\u3044\u3046\u3002\n\u8a2d\u5b9a\u3084\u30e1\u30bf\u30c7\u30fc\u30bf\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u3002\n\n\u5c5e\u6027\u540d\u306b\u306f `@` \u304c\u3064\u3044\u3066\u304a\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3002\n\n```\n@name value\n```\n\n\u5024\u306e\u30bb\u30c3\u30c8\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u307f\u53ef\u80fd\u3067\u3001\u95a2\u6570\u304b\u3089\u306f\u30a2\u30af\u30bb\u30b9\u306e\u307f\u53ef\u80fd\u3002\n\n```ex\ndefmodule AttributeSample do\n  @name \"Yamada Taro\"\n\n  def user_name do\n    @name\n  end\nend\n```\n\n```iex\niex> AttributeSample.user_name\n\"Yamada Taro\"\n```\n\n\u95a2\u6570\u5185\u3067\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n\n```iex\niex> defmodule AttributeSample do\n...>   @name \"Yamada Taro\"\n...>\n...>   def set_user_name do\n...>     @name \"Yamada Jiro\"\n...>   end\n...> end\nwarning: redefining module AttributeSample (current version defined in memory)\n  iex:49\n\n** (ArgumentError) cannot set attribute @name inside function/macro\n    (elixir) lib/kernel.ex:2336: Kernel.do_at/4\n    (elixir) expanding macro: Kernel.@/1\n             iex:53: AttributeSample.set_user_name/0\n```\n\n\u5024\u306e\u30bb\u30c3\u30c8\u306f\u4f55\u5ea6\u3067\u3082\u53ef\u80fd\u3067\u3001\u95a2\u6570\u5185\u3067\u5c5e\u6027\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u76f4\u524d\u3067\u30bb\u30c3\u30c8\u3055\u308c\u305f\u5024\u304c\u4f7f\u308f\u308c\u308b\u3002\n\n```ex\ndefmodule AttributeSample do\n  @name \"Yamada Taro\"\n\n  def user_name1 do\n    @name \n  end\n\n  @name \"Yamada Jiro\"\n\n  def user_name2 do\n    @name \n  end\nend\n```\n\n```iex\niex> AttributeSample.user_name1\n\"Yamada Taro\"\niex> AttributeSample.user_name2\n\"Yamada Jiro\"\n```\n\n# \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u540d\u524d\u306b\u3064\u3044\u3066\n\nElixir \u306f `String.length(\"hoge\")` \u306e\u3088\u3046\u306b\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u304c\u3001\u5185\u90e8\u3067\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u3092\u30a2\u30c8\u30e0\u306b\u5909\u63db\u3057\u3066\u3044\u308b\u3002\n\n```iex\niex> to_string String\n\"Elixir.String\"\niex> :\"Elixir.String\"\nString\n```\n\n\u305d\u306e\u305f\u3081\u4ee5\u4e0b\u306e\u69d8\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n```iex\niex> :\"Elixir.String\".length(\"hoge\")\n4\n```\n\n# Erlang \u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\n\nErlang \u306f Elixir \u3068\u9055\u3044\u3001\u5909\u6570\u306f\u5927\u6587\u5b57\u304b\u3089\u59cb\u307e\u308a\u3001\u30a2\u30c8\u30e0\u306f\u5c0f\u6587\u5b57\u3067\u547d\u540d\u3055\u308c\u308b\u3002\u305d\u306e\u305f\u3081\u3001Erlang \u306e timer \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u305f\u3051\u308c\u3070\u3001timer \u3092\u30a2\u30c8\u30e0\u306b\u3057\u3066\u547c\u3079\u3070\u826f\u3044\u3002\n\n```iex\niex> :timer.minutes(1)\n60000\n```\n\n", "tags": ["Elixir", "\u521d\u5fc3\u8005", "\u52c9\u5f37\u30e1\u30e2"]}