{"context": " More than 1 year has passed since last update.\u5199\u771f\u30c7\u30fc\u30bf\u3092\u767d\u9ed2\u306e\uff12\u5024\u306b\u3057\u3066\u3001Blender\u306e\u5165\u529b\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u8abf\u67fb\u3057\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059\u3002\npython - Converting an OpenCV Image to Black and White - Stack Overflow\n\n\uff12\u5024\u5316\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u8868\u793a\nimport cv as cv1\nimport cv2 as cv\nimport numpy as np\nimport sys\n\nargvs = sys.argv\n\n# \u5199\u771f\u30d5\u30a1\u30a4\u30eb\nsrc = argvs[1]\n# \u51fa\u529b\u30c7\u30fc\u30bf\noutput = argvs[2] \n\nim_gray = cv.imread(src, cv.CV_LOAD_IMAGE_GRAYSCALE)\nim_gray_mat = cv1.fromarray(im_gray)\nim_bw = cv1.CreateImage(cv1.GetSize(im_gray_mat), cv1.IPL_DEPTH_8U, 1)\nim_bw_mat = cv1.GetMat(im_bw)\n\nthreshold = 0\ncv1.Threshold(im_gray_mat, im_bw_mat, threshold, 255, cv1.CV_THRESH_BINARY | cv1.CV_THRESH_OTSU)\n\ncv.imshow('gray image', np.asarray(im_bw_mat))\ncv.waitKey(0)\ncv.destroyAllWindows()\n\n\n\uff12\u5024\u5316\u3057\u305f\u884c\u5217\u3092savatxt\u3067\u30c7\u30fc\u30bf\u51fa\u529b\nimport cv as cv1\nimport cv2 as cv\nimport numpy as np\nimport sys\n\nargvs = sys.argv\n\nsrc = argvs[1] \noutput = argvs[2]\n\nim_gray = cv.imread(src, cv.CV_LOAD_IMAGE_GRAYSCALE)\nim_gray_mat = cv1.fromarray(im_gray)\nim_bw = cv1.CreateImage(cv1.GetSize(im_gray_mat), cv1.IPL_DEPTH_8U, 1)\nim_bw_mat = cv1.GetMat(im_bw)\n\nthreshold = 0\ncv1.Threshold(im_gray_mat, im_bw_mat, threshold, 255, cv1.CV_THRESH_BINARY | cv1.CV_THRESH_OTSU)\n\nprint np.asarray(im_bw_mat)\na = np.asarray(im_bw_mat)\n\nnp.savetxt(output, a, fmt='%10.5f', delimiter='\\t')\n\n\n\u7dda\u5f62\u4ee3\u6570\u3068\u304b\u3001\u5fc5\u8981\u306b\u306a\u308b\u3093\u3060\u308d\u3046\u306a\u3068\u611f\u3058\u307e\u3057\u305f\u3002\n\n\u5199\u771f\u30c7\u30fc\u30bf\u3092\u767d\u9ed2\u306e\uff12\u5024\u306b\u3057\u3066\u3001Blender\u306e\u5165\u529b\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u8abf\u67fb\u3057\u307e\u3057\u305f\u3002\n\n\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n[python - Converting an OpenCV Image to Black and White - Stack Overflow](http://stackoverflow.com/questions/7624765/converting-an-opencv-image-to-black-and-white)\n\n## \uff12\u5024\u5316\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u8868\u793a\n\n```\nimport cv as cv1\nimport cv2 as cv\nimport numpy as np\nimport sys\n\nargvs = sys.argv\n\n# \u5199\u771f\u30d5\u30a1\u30a4\u30eb\nsrc = argvs[1]\n# \u51fa\u529b\u30c7\u30fc\u30bf\noutput = argvs[2] \n\nim_gray = cv.imread(src, cv.CV_LOAD_IMAGE_GRAYSCALE)\nim_gray_mat = cv1.fromarray(im_gray)\nim_bw = cv1.CreateImage(cv1.GetSize(im_gray_mat), cv1.IPL_DEPTH_8U, 1)\nim_bw_mat = cv1.GetMat(im_bw)\n\nthreshold = 0\ncv1.Threshold(im_gray_mat, im_bw_mat, threshold, 255, cv1.CV_THRESH_BINARY | cv1.CV_THRESH_OTSU)\n\ncv.imshow('gray image', np.asarray(im_bw_mat))\ncv.waitKey(0)\ncv.destroyAllWindows()\n```\n\n## \uff12\u5024\u5316\u3057\u305f\u884c\u5217\u3092savatxt\u3067\u30c7\u30fc\u30bf\u51fa\u529b\n```\nimport cv as cv1\nimport cv2 as cv\nimport numpy as np\nimport sys\n\nargvs = sys.argv\n\nsrc = argvs[1] \noutput = argvs[2]\n\nim_gray = cv.imread(src, cv.CV_LOAD_IMAGE_GRAYSCALE)\nim_gray_mat = cv1.fromarray(im_gray)\nim_bw = cv1.CreateImage(cv1.GetSize(im_gray_mat), cv1.IPL_DEPTH_8U, 1)\nim_bw_mat = cv1.GetMat(im_bw)\n\nthreshold = 0\ncv1.Threshold(im_gray_mat, im_bw_mat, threshold, 255, cv1.CV_THRESH_BINARY | cv1.CV_THRESH_OTSU)\n\nprint np.asarray(im_bw_mat)\na = np.asarray(im_bw_mat)\n\nnp.savetxt(output, a, fmt='%10.5f', delimiter='\\t')\n\n```\n\n\n\u7dda\u5f62\u4ee3\u6570\u3068\u304b\u3001\u5fc5\u8981\u306b\u306a\u308b\u3093\u3060\u308d\u3046\u306a\u3068\u611f\u3058\u307e\u3057\u305f\u3002\n", "tags": ["OpenCV", "Python", "Blender"]}