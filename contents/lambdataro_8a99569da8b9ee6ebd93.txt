{"tags": ["OCamlBER-4.02.1"], "context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nBER-MetaOCaml\u306fOCaml\u3092\u62e1\u5f35\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002BER-MetaOCaml\u3092\u4f7f\u3046\u3068\u3001\u578b\u5b89\u5168\u306b\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nBER-MetaOCaml\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u3084\u7c21\u5358\u306a\u4f7f\u3044\u65b9\u306f\u4ee5\u4e0b\u306epasberth\u3055\u3093\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nBER MetaOCaml \u306b\u3064\u3044\u3066\n\n\n\u7c21\u5358\u306a\u4f7f\u3044\u65b9\u306e\u5fa9\u7fd2\n\n\u30b3\u30fc\u30c9\u306e\u69cb\u7bc9\nBER-MetaOCaml\u3067\u306f\u30b3\u30fc\u30c9\u304cfirst-class\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\u30b3\u30fc\u30c9\u3092\u69cb\u7bc9\u3059\u308b\u306b\u306f\u3001\u5f0f\u3092.<\u3068>.\u3067\u56f2\u307f\u307e\u3059\u3002\u3053\u306e.<\u3068>.\u306e\u3053\u3068\u3092\u30d6\u30e9\u30b1\u30c3\u30c8\u3068\u3088\u3073\u307e\u3059\u3002\n$ metaocaml\nBER MetaOCaml toplevel, version N 102\n        OCaml version 4.02.1\n\n# let a = .<1 + 2>.;;\nval a : int code = .<1 + 2>. \n\n\u30b3\u30fc\u30c9\u306e\u578b\u306f'a code\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\n# .<\"hello\">.;;\n- : string code = .<\"hello\">. \n- \n# .<fun x -> x * 2>.;;\n- : (int -> int) code = .<fun x_1  -> x_1 * 2>. \n- \n# .< .< 123 >. >.;;\n- : int code code = .<.< 123  >.>. \n\n\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\u95a2\u6570\u306e\u30b3\u30fc\u30c9\u3084\u30b3\u30fc\u30c9\u306e\u30b3\u30fc\u30c9\u3092\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u306e\u5408\u6210\n.~\u30aa\u30da\u30ec\u30fc\u30bf\u3092\u4f7f\u3046\u3068\u3001\u30b3\u30fc\u30c9\u306e\u4e2d\u306b\u5225\u306e\u30b3\u30fc\u30c9\u3092\u57cb\u3081\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n# let a = .<1 + 2>.;;\nval a : int code = .<1 + 2>. \n\n# let b = .<.~a + .~a>.;;\nval b : int code = .<(1 + 2) + (1 + 2)>. \n\n.~a\u3068\u66f8\u3044\u305f\u5834\u6240\u306ba\u306b\u675f\u7e1b\u3055\u308c\u305f\u30b3\u30fc\u30c9.<1 + 2>.\u304c\u30d6\u30e9\u30b1\u30c3\u30c8\u3092\u5916\u3055\u308c\u305f\u72b6\u614b\u3067\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e.~\u306e\u3053\u3068\u3092\u30a8\u30b9\u30b1\u30fc\u30d7\u3068\u3088\u3073\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30a8\u30b9\u30b1\u30fc\u30d7\u306e\u4e2d\u306b\u5225\u306e\u30d6\u30e9\u30b1\u30c3\u30c8\u3092\u5165\u308c\u3066\u3001\u305d\u306e\u4e2d\u306b\u3055\u3089\u306b\u5225\u306e\u30d6\u30e9\u30b1\u30c3\u30c8\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n# .< .~.< .~a >. >.;;\n- : int code = .<1 + 2>. \n\n\n\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\n\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001Runcode\u30e2\u30b8\u30e5\u30fc\u30eb\u306erun\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002\n# Runcode.run;;\n- : 'a code -> 'a = <fun>\n# Runcode.run .<2 * 3>.;;\n- : int = 6\n\n\u30b3\u30fc\u30c9\u751f\u6210\u3067\u3088\u308a\u826f\u3044(\u4f8b\u3048\u3070\u9ad8\u901f\u3060\u3068\u304b\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u5c11\u306a\u3044\u3068\u304b)\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u3001run\u95a2\u6570\u3067\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u306e\u4fdd\u5b58\n\u30b3\u30fc\u30c9\u306f\u4ed6\u306eOCaml\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540c\u69d8\u30de\u30fc\u30b7\u30e3\u30ea\u30f3\u30b0\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u3060\u3057\u305f\u308a\u3001\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3060\u308a\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u7d4c\u7531\u3067\u8ee2\u9001\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\n\n\u4fdd\u5b58\n# let a = .<1 + 2>.;;\nval a : int code = .<1 + 2>.\n\n# let och = open_out \"test.code\";;\nval och : out_channel = <abstr>\n\n# Marshal.to_channel och a [];;\n- : unit = ()\n\n# close_out och;;\n- : unit = ()\n\n\n\u8aad\u307f\u8fbc\u307f\n# let ich = open_in \"test.code\";;\nval ich : in_channel = <abstr>\n\n# let code : int code = Marshal.from_channel ich;;\nval code : int code = .<1 + 2>. \n\n# Runcode.run code;;\n- : int = 3\n\n\nCSP (Cross-Stage Persistent)\n\u3055\u3066\u3001\u30d6\u30e9\u30b1\u30c3\u30c8\u306b\u3088\u3063\u3066\u69cb\u7bc9\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306f\u3001\u5185\u90e8\u3067\u306f\u62bd\u8c61\u69cb\u6587\u6728\u306e\u5f62\u3067\u4fdd\u6301\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4e00\u65b9\u3001\u30d6\u30e9\u30b1\u30c3\u30c8\u306e\u5916\u3067\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u52d5\u3044\u3066\u3044\u307e\u3059\u3002\u30d6\u30e9\u30b1\u30c3\u30c8\u306e\u5185\u90e8\u304b\u3089\u3001\u3053\u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306e\u4e16\u754c\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u4fbf\u5229\u306a\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u5916\u306e\u4e16\u754c\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u53c2\u7167\u3059\u308b\u6a5f\u80fd\u306e\u3053\u3068\u3092CSP (Cross-Stage Persistent)\u3068\u3088\u3073\u307e\u30591\u3002\u307e\u305a\u306f\u7c21\u5358\u306a\u4f8b\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n# let f x = x * 2;;\nval f : int -> int = <fun>\n\n# let c = .< f 10 >.;;\nCharacters 11-12:\n  let c = .< f 10 >.;;\n             ^\nWarning 22: The CSP value is a closure or too deep to serialize\nval c : int code = .<(* CSP f *) 10>. \n\n\u3053\u306e\u4f8b\u3067\u306f\u30b3\u30fc\u30c9\u306e\u4e2d\u3067\u3001\u30b3\u30fc\u30c9\u306e\u5916\u306e\u95a2\u6570f\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002f\u306f\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306a\u306e\u3067\u3001MetaOCaml\u306e\u30d7\u30ea\u30f3\u30bf\u306f\u8868\u793a\u3059\u308b\u8853\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081(* CSP f *)\u3068\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306bCSP\u3092\u542b\u3080\u30b3\u30fc\u30c9\u51fa\u4f1a\u3063\u3066\u3082\u3001\u5b9f\u884c\u6642\u306bf\u304c\u5b58\u5728\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f55\u306e\u554f\u984c\u3082\u306a\u304f\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n# Runcode.run c;;\n- : int = 20\n\n\u4ee5\u4e0b\u3082CSP\u306e\u4f8b\u3067\u3059\u3002\n# let x = 12;;\nval x : int = 12\n# .< x >.;;\n- : int code = .<12>. \n\nx\u306f\u30d6\u30e9\u30b1\u30c3\u30c8\u306e\u5916\u306e\u5024\u3067\u3059\u3002\u4eca\u56de\u306f\u5358\u7d14\u306a\u5024\u306a\u306e\u3067MetaOCaml\u3092.<12>.\u3068\u5206\u304b\u308a\u3084\u304f\u8868\u793a\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u306f\u3053\u308c\u307e\u3067\u3082\u51fa\u3066\u304d\u305f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u3059\u304c\u3053\u308c\u3082CSP\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u3069\u3053\u304cCSP\u304b\u308f\u304b\u308a\u307e\u3059\u304b\uff1f\n# .<1 + 2>.;;\n- : int code = .<1 + 2>. \n\n\u7b54\u3048\u306f+\u306e\u90e8\u5206\u3067\u3059\u3002+\u3068\u3044\u3046\u95a2\u6570\u306f\u30d6\u30e9\u30b1\u30c3\u30c8\u306e\u5916\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u3067\u3059\u3002\u305d\u308c\u3092\u30d6\u30e9\u30b1\u30c3\u30c8\u306e\u5185\u90e8\u3067\u4f7f\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u304b\u3089CSP\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3082MetaOCaml\u306f+\u3092\u77e5\u3063\u3066\u3044\u308b\u306e\u3067\u898b\u3084\u3059\u304f\u8868\u793a\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u5b9a\u756a\u306e\u4f8b (power\u95a2\u6570)\n\u3053\u3053\u3067\u306fMetaOCaml\u306e\u5b9a\u756a\u306e\u4f8b\u984c\u3067\u3042\u308bpower\u95a2\u6570\u3092\u8a73\u3057\u304f\u898b\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\npower\u95a2\u6570\u306fxnxnx^n\u3092\u6c42\u3081\u308b\u95a2\u6570\u306e\u3053\u3068\u3067\u3059\u3002power\u95a2\u6570\u306fOCaml\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u81ea\u7136\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n# let rec power n x =\n    if n == 0 then 1\n    else x * power (n - 1) x;;\nval power : int -> int -> int = <fun>\n\n# power 5 2;;\n- : int = 32\n\n\u3053\u306epower\u95a2\u6570\u3092\u30b3\u30fc\u30c9\u751f\u6210\u306b\u3088\u308a\u5f15\u6570n\u306b\u7279\u5316\u3057\u305f\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u30d6\u30e9\u30b1\u30c3\u30c8\u3068\u30a8\u30b9\u30b1\u30fc\u30d7\u3092\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u5909\u66f4\u3092\u65bd\u3057\u305f\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n# let rec spower n x =\n    if n == 0 then .<1>.\n    else .< .~x * .~(spower (n - 1) x) >.;;\nval spower : int -> int code -> int code = <fun>\n\n\u3053\u306espower\u95a2\u6570\u3092\u4f7f\u3063\u3066n = 5\u306b\u7279\u5316\u3057\u305f\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n# let power5_code = .<fun x -> .~(spower 5 .<x>.)>.;;\nval power5_code : (int -> int) code = .<\n  fun x_1  -> x_1 * (x_1 * (x_1 * (x_1 * (x_1 * 1))))>. \n\n\u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u7279\u306b\u6ce8\u76ee\u3057\u3066\u6b32\u3057\u3044\u306e\u306f\u3001spower\u95a2\u6570\u306b\u9589\u3058\u3066\u3044\u306a\u3044(fun\u3067\u675f\u7e1b\u3055\u308c\u3066\u3044\u306a\u3044)\u30b3\u30fc\u30c9\u3067\u3042\u308b.<x>.\u3092\u6e21\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002MetaOCaml\u3067\u306f\u3053\u306e\u3088\u3046\u306b\u9589\u3058\u3066\u3044\u306a\u3044\u30b3\u30fc\u30c9\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b3\u30fc\u30c9.<x>.\u306fspower\u95a2\u6570\u306e\u5f15\u6570x\u3068\u306a\u3063\u3066\u3001\u958b\u3044\u305f\u30b3\u30fc\u30c9\u306e\u307e\u307e\u518d\u5e30\u306b\u3088\u308a\u30b3\u30fc\u30c9\u304c\u751f\u6210\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002spower\u306e\u623b\u308a\u5024\u306f\u3001.<x * (x * (x * (x * (x * 1))))>.\u3068\u3044\u3046\u958b\u3044\u305f\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u958b\u3044\u305f\u30b3\u30fc\u30c9\u304c.<fun x -> .~(...)>.\u306e...\u306e\u90e8\u5206\u306b\u57cb\u3081\u8fbc\u307e\u308c\u308b\u3053\u3068\u3067\u3001\u9589\u3058\u305f\u30b3\u30fc\u30c9\u3068\u306a\u308a\u6700\u7d42\u7684\u306b\u9589\u3058\u305f\u95a2\u6570\u306e\u30b3\u30fc\u30c9\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u3053\u306e\u30b3\u30fc\u30c9\u306f\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001power5\u95a2\u6570\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n# let power5 = Runcode.run power5_code;;\nval power5 : int -> int = <fun>\n\n# power5 2;;\n- : int = 32\n\n\u3053\u306epower5\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u90e8\u5206\u9069\u7528\u3057\u3066\u5f97\u3089\u308c\u308bpower5\u95a2\u6570\u3068\u306f\u610f\u5473\u306f\u540c\u3058\u3067\u3059\u304c\u52d5\u4f5c\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n# let power5 = power 5;;\nval power5 : int -> int = <fun>\n\n\u30b3\u30fc\u30c9\u751f\u6210\u3092\u4f7f\u3063\u305f\u7248\u3067\u306f\u5b8c\u5168\u306b\u30eb\u30fc\u30d7\u304c\u5c55\u958b\u3055\u308c\u3066\u3044\u3066\u518d\u5e30\u547c\u3073\u51fa\u3057\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u5b8c\u5168\u306b\u306a\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u6539\u5584\u3057\u305fpower\u95a2\u6570\n\u4e0a\u306e\u4f8b\u3067\u306f\u308f\u304b\u308a\u3084\u3059\u3055\u306e\u305f\u3081\u306b\u611a\u76f4\u306bx\u30925\u56de\u639b\u3051\u3066\u3044\u307e\u3059\u304c\u3001\u51fa\u6765\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u3063\u3068\u52b9\u7387\u306e\u826f\u3044\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u305f\u3044\u3068\u601d\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u3002\nlet power5 x =\n  let x' = x * x in\n  let x'' = x' * x' in\n  x'' * x;\n\n\u3053\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u306e\u306fMetaOCaml\u306e\u975e\u5e38\u306b\u826f\u3044\u7df4\u7fd2\u554f\u984c\u306b\u306a\u308b\u306e\u3067\u305c\u3072\u4e00\u5ea6\u81ea\u529b\u3067\u8003\u3048\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u5b9f\u88c5\u4f8b\u306f\u3053\u306e\u8a18\u4e8b\u306e\u4e00\u756a\u6700\u5f8c\u306b\u63b2\u8f09\u3057\u307e\u3059\u3002\u79c1\u306e\u5b9f\u88c5\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u307e\u3057\u305f\u3002\nfun x_1  ->\n  x_1 * (let x'_2 = x_1 * x_1 in let x'_3 = x'_2 * x'_2 in x'_3 * 1)>.\n\n\u6700\u5f8c\u306e* 1\u3092\u6d88\u3057\u3066\u4ee3\u308f\u308a\u306bx_1\u3092\u639b\u3051\u308b\u3088\u3046\u306a\u5b9f\u88c5\u306b\u6311\u6226\u3059\u308b\u306e\u3082\u9762\u767d\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nref\u578b\u3092\u4f7f\u3063\u305fpower\u95a2\u6570\nBER-MetaOCaml\u3067\u306f\u30b3\u30fc\u30c9\u751f\u6210\u306bref\u578b\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306fref\u578b\u3092\u4f7f\u3063\u3066\u624b\u7d9a\u304d\u7684\u306bpower\u95a2\u6570\u3092\u751f\u6210\u3059\u308b\u4f8b\u3067\u3059\u3002\n# let mpower n x =\n    let code = ref .<1>. in\n    for i = 1 to n do\n      code := .<.~x * .~(!code)>.\n    done;\n    !code;;\nval mpower : int -> int code -> int code = <fun>\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u518d\u5e30\u3067\u66f8\u3044\u305f\u5834\u5408\u3068\u540c\u69d8\u306b\u52d5\u304d\u307e\u3059\u3002\n# let power5_code = .<fun x -> .~(mpower 5 .<x>.)>.;;\nval power5_code : (int -> int) code = .<\n  fun x_1  -> x_1 * (x_1 * (x_1 * (x_1 * (x_1 * 1))))>.\n\n# let power5 = Runcode.run power5_code;;\nval power5 : int -> int = <fun>\n\n# power5 2;;\n- : int = 32\n\n\nMetaOCaml\u306f\u672c\u5f53\u306b\u5b89\u5168\u304b\n\u3053\u3053\u3067\u306f\u3044\u304f\u3064\u304b\u306e\u5b9f\u9a13\u7684\u306a\u30b3\u30fc\u30c9\u3067MetaOCaml\u304c\u672c\u5f53\u306b\u5b89\u5168\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nref\u578b\u3092\u4f7f\u3063\u305f\u5b9f\u9a13\n\u4ee5\u4e0b\u306fref\u578b\u3092\u7528\u3044\u3066\u4f5c\u3063\u305f\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u9589\u3058\u3066\u3044\u306a\u3044\u30b3\u30fc\u30c9\u3092\u4ee3\u5165\u3057\u3066\u5b9f\u884c\u3067\u304d\u308b\u304b\u3092\u8a66\u3057\u3066\u307f\u305f\u4f8b\u3067\u3059\u3002\n\u307e\u305a\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3092\u4f5c\u308a\u307e\u3059\u3002\n# let g = ref .<1>.;;\nval g : int code ref = {contents = .<1>. }\n\n\u6b21\u306b\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u306e\u4e2d\u304b\u3089g\u306b\u4ee3\u5165\u3057\u307e\u3059\u3002\n# .<fun x -> .~( g := .<x + 1>.; .<1>. )>.;;\n- : (int -> int) code = .<fun x_1  -> 1>. \n\n\u3053\u3053\u307e\u3067\u306f\u30a8\u30e9\u30fc\u304c\u3067\u307e\u305b\u3093\u3002\u6b21\u306bg\u3092\u5b9f\u884c\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002\n# Runcode.run !g;;\nException:\nFailure\n \"The code built at Characters 22-27:\\n   is not closed: identifier x_1 bound at Characters 6-7:\\n  Runcode.run !g;;\\n        ^\\n is free\".\n\n\u4f8b\u5916Failure\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u9589\u3058\u305f\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u4f8b\u5916\u306a\u306e\u3067\u3001try-with\u3067\u5b9f\u884c\u6642\u306b\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002\n\u3068\u3053\u308d\u3067\u3053\u306e\u3088\u3046\u306b\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u30b3\u30fc\u30c9\u3092\u4ee3\u5165\u3059\u308b\u4f8b\u306f\u5168\u3066\u30a8\u30e9\u30fc\u306a\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u4ee5\u4e0b\u3092\u8a66\u3057\u3066\u898b\u307e\u3057\u305f\u3002\n\u307e\u305a\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3092\u4f5c\u308a\u307e\u3059\u3002\n# let g = ref .<1>.;;\nval g : int code ref = {contents = .<1>. }\n\n\u6b21\u306b\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u306e\u4e2d\u304b\u3089g\u306b\u4ee3\u5165\u3057\u307e\u3059\u3002\n# .<fun x -> .~( g := .<1 + 2>.; .<1>.) + x>.;;\n- : (int -> int) code = .<fun x_2  -> 1 + x_2>. \n\n\u4f55\u4e8b\u3082\u306a\u304f\u5b9f\u884c\u3067\u304d\u307e\u3057\u305f\u3002\u554f\u984c\u306f\u6b21\u3067\u3059\u3002\n# Runcode.run !g;;\n- : int = 3\n\n\u306a\u3093\u3068\u4eca\u5ea6\u306f\u6b63\u3057\u304f\u5b9f\u884c\u3067\u304d\u307e\u3057\u305f\u3002MetaOCaml\u3067\u306f\u3053\u306e\u3088\u3046\u306b\u3001\u5b9f\u884c\u6642\u306b\u30b3\u30fc\u30c9\u304c\u9589\u3058\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u3092\u884c\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4f8b\u5916\u3092\u4f7f\u3063\u305f\u5b9f\u9a13\n\u4f8b\u5916\u3067\u30a8\u30b9\u30b1\u30fc\u30d7\u306e\u4e2d\u304b\u3089\u5916\u306b\u5411\u304b\u3063\u3066\u30b3\u30fc\u30c9\u3092\u6295\u3052\u3066\u3001\u305d\u306e\u30b3\u30fc\u30c9\u3092\u53d7\u3051\u53d6\u3063\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u53ef\u80fd\u3067\u3057\u3087\u3046\u304b\u3002\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n# exception Code of int code;;\nexception Code of int code\n\n# let f () = raise (Code .<1 + 2>.);;\nval f : unit -> 'a = <fun>\n\n# try f () with Code c -> Runcode.run c;;\n- : int = 3\n\n\u95a2\u6570f\u306e\u5185\u90e8\u3067\u30b3\u30fc\u30c9\u3092\u6295\u3052\u3066\u5916\u5074\u3067\u30ad\u30e3\u30c3\u30c1\u3057\u3066\u6b63\u3057\u304f\u5b9f\u884c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u6b21\u306b\u3001\u9589\u3058\u3066\u3044\u306a\u3044\u30b3\u30fc\u30c9\u3092\u6295\u3052\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n# try .<fun x -> .~(raise (Code .<x>.); .<x>.)>.\n  with Code c -> .<fun y -> .~c>.;;\nCharacters 18-36:\n  try .<fun x -> .~(raise (Code .<x>.); .<x>.)>. with Code c -> .<fun y -> .~c>.;;\n                    ^^^^^^^^^^^^^^^^^^\nWarning 21: this statement never returns (or has an unsound type.)\nException:\nFailure\n \"Scope extrusion detected at Characters 64-76:\\n  try .<fun x -> .~(raise (Code .<x>.); .<x>.)>. with Code c -> .<fun y -> .~c>.;;\\n                                                                  ^^^^^^^^^^^^\\n for code built at Characters 10-11:\\n  try .<fun x -> .~(raise (Code .<x>.); .<x>.)>. with Code c -> .<fun y -> .~c>.;;\\n            ^\\n for the identifier x_3 bound at Characters 10-11:\\n  try .<fun x -> .~(raise (Code .<x>.); .<x>.)>. with Code c -> .<fun y -> .~c>.;;\\n            ^\\n\".\n\n\u306a\u3093\u304b\u3054\u3061\u3083\u3054\u3061\u3083\u3068\u51fa\u3066\u304d\u307e\u3057\u305f\u304c\u3001\u3084\u306f\u308a\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\nMetaOCaml\u306f\u4e00\u5fdc\u5b89\u5168\u3060\u304c...\nBER-MetaOCaml\u3067\u306f\u9589\u3058\u3066\u3044\u306a\u3044\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u5b9f\u884c\u6642\u306b\u4f8b\u5916\u3068\u3057\u3066\u5831\u544a\u3057\u3001\u6c7a\u3057\u3066\u9589\u3058\u3066\u3044\u306a\u3044\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u3068\u3044\u3046\u4e8b\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u5b9f\u884c\u6642\u3067\u306f\u306a\u304f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3053\u306e\u3088\u3046\u306a\u5224\u5b9a\u304c\u884c\u308f\u308c\u308b\u3068\u30e6\u30fc\u30b6\u3068\u3057\u3066\u306f\u3068\u3066\u3082\u3042\u308a\u304c\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u3084\u306f\u308a\u6280\u8853\u7684\u306b\u56f0\u96e3\u3060\u3068\u3044\u3046\u4e8b\u3067\u3057\u3087\u3046\u304b\u3002\u4eca\u5f8c\u306e\u6280\u8853\u9032\u6b69\u306b\u671f\u5f85\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u3068\u3081\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001MetaOCaml\u306e\u7c21\u5358\u306a\u4f7f\u3044\u65b9\u3092\u5fa9\u7fd2\u3057\u3066\u3001MetaOCaml\u5b9a\u756a\u306e\u4f8b\u3067\u3042\u308bpower\u95a2\u6570\u3092\u8a73\u3057\u304f\u898b\u3066\u307f\u307e\u3057\u305f\u3002\u305d\u3057\u3066\u3001\u5b9f\u9a13\u7684\u306a\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066MetaOCaml\u304c\u672c\u5f53\u306b\u5b89\u5168\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u306e\u691c\u8a3c\u3092\u884c\u3044\u307e\u3057\u305f\u3002\u3053\u3053\u307e\u3067\u8aad\u3093\u3067\u3044\u305f\u3060\u3051\u305f\u65b9\u3067\u3042\u308c\u3070\u3001MetaOCaml\u3067\u4f55\u304c\u3067\u304d\u3066\u4f55\u304c\u3067\u304d\u306a\u3044\u306e\u304b\u3068\u3044\u3063\u305f\u5168\u4f53\u50cf\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3068\u601d\u3044\u307e\u3059\u3002\u3042\u3068\u306f\u30d0\u30ea\u30d0\u30eaMetaOCaml\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u7df4\u7fd2\u554f\u984c\u306e\u89e3\u7b54\n\n\u89e3\u7b54\u4f8b1\nlet rec spower_opt1 n x =\n  if n == 0 then .<1>.\n  else if n mod 2 == 0 then\n    .<let x' = .~x * .~x in\n      .~(spower_opt1 (n / 2) .<x'>.)>.\n  else\n    .< .~x * .~(spower_opt1 (n - 1) x) >.\n\n\n\u89e3\u7b54\u4f8b2\nlet spower_opt2 n x =\n  let rec loop n x k=\n    if n == 0 then\n      k .<1>.\n    else if n == 1 then\n      k x\n    else if n mod 2 == 0 then\n      .<let x' = .~x * .~x in\n        .~(loop (n / 2) .<x'>. (fun c ->\n          k c))>.\n    else\n      loop (n - 1) x (fun c -> k .< .~c * .~x >.)\n  in\n  loop n x (fun y -> y)\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n# .<fun x -> .~(spower_opt2 5 .<x>.)>.;;\n- : (int -> int) code = .<\nfun x_1  -> let x'_2 = x_1 * x_1 in let x'_3 = x'_2 * x'_2 in x'_3 * x_1>. \n\n\n\n\n\n\u53b3\u5bc6\u306b\u306f\u81ea\u5206\u81ea\u8eab\u3088\u308a\u4e0a\u4f4d\u306b\u5c5e\u3059\u308b\u30b9\u30c6\u30fc\u30b8(\u30ec\u30d9\u30eb)\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002\u00a0\u21a9\n\n\n\n# \u306f\u3058\u3081\u306b\nBER-MetaOCaml\u306fOCaml\u3092\u62e1\u5f35\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002BER-MetaOCaml\u3092\u4f7f\u3046\u3068\u3001\u578b\u5b89\u5168\u306b\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nBER-MetaOCaml\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u3084\u7c21\u5358\u306a\u4f7f\u3044\u65b9\u306f\u4ee5\u4e0b\u306e[pasberth\u3055\u3093](http://qiita.com/pasberth)\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n* [BER MetaOCaml \u306b\u3064\u3044\u3066](http://qiita.com/pasberth/items/e321851d3f59007f4980)\n\n# \u7c21\u5358\u306a\u4f7f\u3044\u65b9\u306e\u5fa9\u7fd2\n## \u30b3\u30fc\u30c9\u306e\u69cb\u7bc9\nBER-MetaOCaml\u3067\u306f\u30b3\u30fc\u30c9\u304cfirst-class\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\u30b3\u30fc\u30c9\u3092\u69cb\u7bc9\u3059\u308b\u306b\u306f\u3001\u5f0f\u3092`.<`\u3068`>.`\u3067\u56f2\u307f\u307e\u3059\u3002\u3053\u306e`.<`\u3068`>.`\u306e\u3053\u3068\u3092\u30d6\u30e9\u30b1\u30c3\u30c8\u3068\u3088\u3073\u307e\u3059\u3002\n\n```\n$ metaocaml\nBER MetaOCaml toplevel, version N 102\n        OCaml version 4.02.1\n\n# let a = .<1 + 2>.;;\nval a : int code = .<1 + 2>. \n```\n\n\u30b3\u30fc\u30c9\u306e\u578b\u306f`'a code`\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001\n\n```\n# .<\"hello\">.;;\n- : string code = .<\"hello\">. \n- \n# .<fun x -> x * 2>.;;\n- : (int -> int) code = .<fun x_1  -> x_1 * 2>. \n- \n# .< .< 123 >. >.;;\n- : int code code = .<.< 123  >.>. \n```\n\n\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\u95a2\u6570\u306e\u30b3\u30fc\u30c9\u3084\u30b3\u30fc\u30c9\u306e\u30b3\u30fc\u30c9\u3092\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n## \u30b3\u30fc\u30c9\u306e\u5408\u6210\n`.~`\u30aa\u30da\u30ec\u30fc\u30bf\u3092\u4f7f\u3046\u3068\u3001\u30b3\u30fc\u30c9\u306e\u4e2d\u306b\u5225\u306e\u30b3\u30fc\u30c9\u3092\u57cb\u3081\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\n# let a = .<1 + 2>.;;\nval a : int code = .<1 + 2>. \n\n# let b = .<.~a + .~a>.;;\nval b : int code = .<(1 + 2) + (1 + 2)>. \n```\n`.~a`\u3068\u66f8\u3044\u305f\u5834\u6240\u306b`a`\u306b\u675f\u7e1b\u3055\u308c\u305f\u30b3\u30fc\u30c9`.<1 + 2>.`\u304c\u30d6\u30e9\u30b1\u30c3\u30c8\u3092\u5916\u3055\u308c\u305f\u72b6\u614b\u3067\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e`.~`\u306e\u3053\u3068\u3092\u30a8\u30b9\u30b1\u30fc\u30d7\u3068\u3088\u3073\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30a8\u30b9\u30b1\u30fc\u30d7\u306e\u4e2d\u306b\u5225\u306e\u30d6\u30e9\u30b1\u30c3\u30c8\u3092\u5165\u308c\u3066\u3001\u305d\u306e\u4e2d\u306b\u3055\u3089\u306b\u5225\u306e\u30d6\u30e9\u30b1\u30c3\u30c8\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\n# .< .~.< .~a >. >.;;\n- : int code = .<1 + 2>. \n```\n\n## \u30b3\u30fc\u30c9\u306e\u5b9f\u884c\n\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001`Runcode`\u30e2\u30b8\u30e5\u30fc\u30eb\u306e`run`\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```\n# Runcode.run;;\n- : 'a code -> 'a = <fun>\n# Runcode.run .<2 * 3>.;;\n- : int = 6\n```\n\n\u30b3\u30fc\u30c9\u751f\u6210\u3067\u3088\u308a\u826f\u3044(\u4f8b\u3048\u3070\u9ad8\u901f\u3060\u3068\u304b\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u5c11\u306a\u3044\u3068\u304b)\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u3001`run`\u95a2\u6570\u3067\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\n## \u30b3\u30fc\u30c9\u306e\u4fdd\u5b58\n\u30b3\u30fc\u30c9\u306f\u4ed6\u306eOCaml\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540c\u69d8\u30de\u30fc\u30b7\u30e3\u30ea\u30f3\u30b0\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u3060\u3057\u305f\u308a\u3001\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3060\u308a\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u7d4c\u7531\u3067\u8ee2\u9001\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\n\n### \u4fdd\u5b58\n```\n# let a = .<1 + 2>.;;\nval a : int code = .<1 + 2>.\n \n# let och = open_out \"test.code\";;\nval och : out_channel = <abstr>\n\n# Marshal.to_channel och a [];;\n- : unit = ()\n\n# close_out och;;\n- : unit = ()\n```\n\n### \u8aad\u307f\u8fbc\u307f\n```\n# let ich = open_in \"test.code\";;\nval ich : in_channel = <abstr>\n\n# let code : int code = Marshal.from_channel ich;;\nval code : int code = .<1 + 2>. \n\n# Runcode.run code;;\n- : int = 3\n```\n\n## CSP (Cross-Stage Persistent)\n\u3055\u3066\u3001\u30d6\u30e9\u30b1\u30c3\u30c8\u306b\u3088\u3063\u3066\u69cb\u7bc9\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306f\u3001\u5185\u90e8\u3067\u306f\u62bd\u8c61\u69cb\u6587\u6728\u306e\u5f62\u3067\u4fdd\u6301\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4e00\u65b9\u3001\u30d6\u30e9\u30b1\u30c3\u30c8\u306e\u5916\u3067\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u52d5\u3044\u3066\u3044\u307e\u3059\u3002\u30d6\u30e9\u30b1\u30c3\u30c8\u306e\u5185\u90e8\u304b\u3089\u3001\u3053\u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306e\u4e16\u754c\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u4fbf\u5229\u306a\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u5916\u306e\u4e16\u754c\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u53c2\u7167\u3059\u308b\u6a5f\u80fd\u306e\u3053\u3068\u3092CSP (Cross-Stage Persistent)\u3068\u3088\u3073\u307e\u3059[^1]\u3002\u307e\u305a\u306f\u7c21\u5358\u306a\u4f8b\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n[^1]: \u53b3\u5bc6\u306b\u306f\u81ea\u5206\u81ea\u8eab\u3088\u308a\u4e0a\u4f4d\u306b\u5c5e\u3059\u308b\u30b9\u30c6\u30fc\u30b8(\u30ec\u30d9\u30eb)\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\n```\n# let f x = x * 2;;\nval f : int -> int = <fun>\n\n# let c = .< f 10 >.;;\nCharacters 11-12:\n  let c = .< f 10 >.;;\n             ^\nWarning 22: The CSP value is a closure or too deep to serialize\nval c : int code = .<(* CSP f *) 10>. \n```\n\n\u3053\u306e\u4f8b\u3067\u306f\u30b3\u30fc\u30c9\u306e\u4e2d\u3067\u3001\u30b3\u30fc\u30c9\u306e\u5916\u306e\u95a2\u6570`f`\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002`f`\u306f\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306a\u306e\u3067\u3001MetaOCaml\u306e\u30d7\u30ea\u30f3\u30bf\u306f\u8868\u793a\u3059\u308b\u8853\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081`(* CSP f *)`\u3068\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306bCSP\u3092\u542b\u3080\u30b3\u30fc\u30c9\u51fa\u4f1a\u3063\u3066\u3082\u3001\u5b9f\u884c\u6642\u306b`f`\u304c\u5b58\u5728\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f55\u306e\u554f\u984c\u3082\u306a\u304f\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\n```\n# Runcode.run c;;\n- : int = 20\n```\n\n\u4ee5\u4e0b\u3082CSP\u306e\u4f8b\u3067\u3059\u3002\n\n```\n# let x = 12;;\nval x : int = 12\n# .< x >.;;\n- : int code = .<12>. \n```\n\n`x`\u306f\u30d6\u30e9\u30b1\u30c3\u30c8\u306e\u5916\u306e\u5024\u3067\u3059\u3002\u4eca\u56de\u306f\u5358\u7d14\u306a\u5024\u306a\u306e\u3067MetaOCaml\u3092`.<12>.`\u3068\u5206\u304b\u308a\u3084\u304f\u8868\u793a\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u5b9f\u306f\u3053\u308c\u307e\u3067\u3082\u51fa\u3066\u304d\u305f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u3059\u304c\u3053\u308c\u3082CSP\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u3069\u3053\u304cCSP\u304b\u308f\u304b\u308a\u307e\u3059\u304b\uff1f\n\n```\n# .<1 + 2>.;;\n- : int code = .<1 + 2>. \n```\n\n\u7b54\u3048\u306f`+`\u306e\u90e8\u5206\u3067\u3059\u3002`+`\u3068\u3044\u3046\u95a2\u6570\u306f\u30d6\u30e9\u30b1\u30c3\u30c8\u306e\u5916\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u3067\u3059\u3002\u305d\u308c\u3092\u30d6\u30e9\u30b1\u30c3\u30c8\u306e\u5185\u90e8\u3067\u4f7f\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u304b\u3089CSP\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3082MetaOCaml\u306f`+`\u3092\u77e5\u3063\u3066\u3044\u308b\u306e\u3067\u898b\u3084\u3059\u304f\u8868\u793a\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\n\n# \u5b9a\u756a\u306e\u4f8b (power\u95a2\u6570)\n\u3053\u3053\u3067\u306fMetaOCaml\u306e\u5b9a\u756a\u306e\u4f8b\u984c\u3067\u3042\u308bpower\u95a2\u6570\u3092\u8a73\u3057\u304f\u898b\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\npower\u95a2\u6570\u306f$x^n$\u3092\u6c42\u3081\u308b\u95a2\u6570\u306e\u3053\u3068\u3067\u3059\u3002power\u95a2\u6570\u306fOCaml\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u81ea\u7136\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\n# let rec power n x =\n    if n == 0 then 1\n    else x * power (n - 1) x;;\nval power : int -> int -> int = <fun>\n\n# power 5 2;;\n- : int = 32\n```\n\n\u3053\u306epower\u95a2\u6570\u3092\u30b3\u30fc\u30c9\u751f\u6210\u306b\u3088\u308a\u5f15\u6570`n`\u306b\u7279\u5316\u3057\u305f\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u30d6\u30e9\u30b1\u30c3\u30c8\u3068\u30a8\u30b9\u30b1\u30fc\u30d7\u3092\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u5909\u66f4\u3092\u65bd\u3057\u305f\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n# let rec spower n x =\n    if n == 0 then .<1>.\n    else .< .~x * .~(spower (n - 1) x) >.;;\nval spower : int -> int code -> int code = <fun>\n```\n\n\u3053\u306e`spower`\u95a2\u6570\u3092\u4f7f\u3063\u3066`n = 5`\u306b\u7279\u5316\u3057\u305f\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```\n# let power5_code = .<fun x -> .~(spower 5 .<x>.)>.;;\nval power5_code : (int -> int) code = .<\n  fun x_1  -> x_1 * (x_1 * (x_1 * (x_1 * (x_1 * 1))))>. \n```\n\n\u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u7279\u306b\u6ce8\u76ee\u3057\u3066\u6b32\u3057\u3044\u306e\u306f\u3001`spower`\u95a2\u6570\u306b\u9589\u3058\u3066\u3044\u306a\u3044(fun\u3067\u675f\u7e1b\u3055\u308c\u3066\u3044\u306a\u3044)\u30b3\u30fc\u30c9\u3067\u3042\u308b`.<x>.`\u3092\u6e21\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002MetaOCaml\u3067\u306f\u3053\u306e\u3088\u3046\u306b\u9589\u3058\u3066\u3044\u306a\u3044\u30b3\u30fc\u30c9\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b3\u30fc\u30c9`.<x>.`\u306f`spower`\u95a2\u6570\u306e\u5f15\u6570`x`\u3068\u306a\u3063\u3066\u3001\u958b\u3044\u305f\u30b3\u30fc\u30c9\u306e\u307e\u307e\u518d\u5e30\u306b\u3088\u308a\u30b3\u30fc\u30c9\u304c\u751f\u6210\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002`spower`\u306e\u623b\u308a\u5024\u306f\u3001`.<x * (x * (x * (x * (x * 1))))>.`\u3068\u3044\u3046\u958b\u3044\u305f\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u958b\u3044\u305f\u30b3\u30fc\u30c9\u304c`.<fun x -> .~(...)>.`\u306e`...`\u306e\u90e8\u5206\u306b\u57cb\u3081\u8fbc\u307e\u308c\u308b\u3053\u3068\u3067\u3001\u9589\u3058\u305f\u30b3\u30fc\u30c9\u3068\u306a\u308a\u6700\u7d42\u7684\u306b\u9589\u3058\u305f\u95a2\u6570\u306e\u30b3\u30fc\u30c9\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u3053\u306e\u30b3\u30fc\u30c9\u306f\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001`power5`\u95a2\u6570\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\n# let power5 = Runcode.run power5_code;;\nval power5 : int -> int = <fun>\n\n# power5 2;;\n- : int = 32\n```\n\n\u3053\u306e`power5`\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u90e8\u5206\u9069\u7528\u3057\u3066\u5f97\u3089\u308c\u308b`power5`\u95a2\u6570\u3068\u306f\u610f\u5473\u306f\u540c\u3058\u3067\u3059\u304c\u52d5\u4f5c\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\n```\n# let power5 = power 5;;\nval power5 : int -> int = <fun>\n```\n\n\u30b3\u30fc\u30c9\u751f\u6210\u3092\u4f7f\u3063\u305f\u7248\u3067\u306f\u5b8c\u5168\u306b\u30eb\u30fc\u30d7\u304c\u5c55\u958b\u3055\u308c\u3066\u3044\u3066\u518d\u5e30\u547c\u3073\u51fa\u3057\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u5b8c\u5168\u306b\u306a\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n# \u6539\u5584\u3057\u305fpower\u95a2\u6570\n\u4e0a\u306e\u4f8b\u3067\u306f\u308f\u304b\u308a\u3084\u3059\u3055\u306e\u305f\u3081\u306b\u611a\u76f4\u306b`x`\u30925\u56de\u639b\u3051\u3066\u3044\u307e\u3059\u304c\u3001\u51fa\u6765\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u3063\u3068\u52b9\u7387\u306e\u826f\u3044\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u305f\u3044\u3068\u601d\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u3002\n\n```\nlet power5 x =\n  let x' = x * x in\n  let x'' = x' * x' in\n  x'' * x;\n```\n\n\u3053\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u306e\u306fMetaOCaml\u306e\u975e\u5e38\u306b\u826f\u3044\u7df4\u7fd2\u554f\u984c\u306b\u306a\u308b\u306e\u3067\u305c\u3072\u4e00\u5ea6\u81ea\u529b\u3067\u8003\u3048\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u5b9f\u88c5\u4f8b\u306f\u3053\u306e\u8a18\u4e8b\u306e\u4e00\u756a\u6700\u5f8c\u306b\u63b2\u8f09\u3057\u307e\u3059\u3002\u79c1\u306e\u5b9f\u88c5\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u307e\u3057\u305f\u3002\n\n```\nfun x_1  ->\n  x_1 * (let x'_2 = x_1 * x_1 in let x'_3 = x'_2 * x'_2 in x'_3 * 1)>.\n```\n\n\u6700\u5f8c\u306e`* 1`\u3092\u6d88\u3057\u3066\u4ee3\u308f\u308a\u306b`x_1`\u3092\u639b\u3051\u308b\u3088\u3046\u306a\u5b9f\u88c5\u306b\u6311\u6226\u3059\u308b\u306e\u3082\u9762\u767d\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# ref\u578b\u3092\u4f7f\u3063\u305fpower\u95a2\u6570\nBER-MetaOCaml\u3067\u306f\u30b3\u30fc\u30c9\u751f\u6210\u306bref\u578b\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306fref\u578b\u3092\u4f7f\u3063\u3066\u624b\u7d9a\u304d\u7684\u306bpower\u95a2\u6570\u3092\u751f\u6210\u3059\u308b\u4f8b\u3067\u3059\u3002\n\n```\n# let mpower n x =\n    let code = ref .<1>. in\n    for i = 1 to n do\n      code := .<.~x * .~(!code)>.\n    done;\n    !code;;\nval mpower : int -> int code -> int code = <fun>\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u518d\u5e30\u3067\u66f8\u3044\u305f\u5834\u5408\u3068\u540c\u69d8\u306b\u52d5\u304d\u307e\u3059\u3002\n\n```\n# let power5_code = .<fun x -> .~(mpower 5 .<x>.)>.;;\nval power5_code : (int -> int) code = .<\n  fun x_1  -> x_1 * (x_1 * (x_1 * (x_1 * (x_1 * 1))))>.\n \n# let power5 = Runcode.run power5_code;;\nval power5 : int -> int = <fun>\n\n# power5 2;;\n- : int = 32\n```\n\n# MetaOCaml\u306f\u672c\u5f53\u306b\u5b89\u5168\u304b\n\u3053\u3053\u3067\u306f\u3044\u304f\u3064\u304b\u306e\u5b9f\u9a13\u7684\u306a\u30b3\u30fc\u30c9\u3067MetaOCaml\u304c\u672c\u5f53\u306b\u5b89\u5168\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## ref\u578b\u3092\u4f7f\u3063\u305f\u5b9f\u9a13\n\u4ee5\u4e0b\u306fref\u578b\u3092\u7528\u3044\u3066\u4f5c\u3063\u305f\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u9589\u3058\u3066\u3044\u306a\u3044\u30b3\u30fc\u30c9\u3092\u4ee3\u5165\u3057\u3066\u5b9f\u884c\u3067\u304d\u308b\u304b\u3092\u8a66\u3057\u3066\u307f\u305f\u4f8b\u3067\u3059\u3002\n\n\u307e\u305a\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```\n# let g = ref .<1>.;;\nval g : int code ref = {contents = .<1>. }\n```\n\n\u6b21\u306b\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u306e\u4e2d\u304b\u3089`g`\u306b\u4ee3\u5165\u3057\u307e\u3059\u3002\n\n```\n# .<fun x -> .~( g := .<x + 1>.; .<1>. )>.;;\n- : (int -> int) code = .<fun x_1  -> 1>. \n```\n\n\u3053\u3053\u307e\u3067\u306f\u30a8\u30e9\u30fc\u304c\u3067\u307e\u305b\u3093\u3002\u6b21\u306b`g`\u3092\u5b9f\u884c\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002\n\n```\n# Runcode.run !g;;\nException:\nFailure\n \"The code built at Characters 22-27:\\n   is not closed: identifier x_1 bound at Characters 6-7:\\n  Runcode.run !g;;\\n        ^\\n is free\".\n```\n\n\u4f8b\u5916`Failure`\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u9589\u3058\u305f\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u4f8b\u5916\u306a\u306e\u3067\u3001try-with\u3067\u5b9f\u884c\u6642\u306b\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002\n\n\u3068\u3053\u308d\u3067\u3053\u306e\u3088\u3046\u306b\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u30b3\u30fc\u30c9\u3092\u4ee3\u5165\u3059\u308b\u4f8b\u306f\u5168\u3066\u30a8\u30e9\u30fc\u306a\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u4ee5\u4e0b\u3092\u8a66\u3057\u3066\u898b\u307e\u3057\u305f\u3002\n\n\u307e\u305a\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```\n# let g = ref .<1>.;;\nval g : int code ref = {contents = .<1>. }\n```\n\n\u6b21\u306b\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u306e\u4e2d\u304b\u3089`g`\u306b\u4ee3\u5165\u3057\u307e\u3059\u3002\n\n```\n# .<fun x -> .~( g := .<1 + 2>.; .<1>.) + x>.;;\n- : (int -> int) code = .<fun x_2  -> 1 + x_2>. \n```\n\n\u4f55\u4e8b\u3082\u306a\u304f\u5b9f\u884c\u3067\u304d\u307e\u3057\u305f\u3002\u554f\u984c\u306f\u6b21\u3067\u3059\u3002\n\n```\n# Runcode.run !g;;\n- : int = 3\n```\n\n\u306a\u3093\u3068\u4eca\u5ea6\u306f\u6b63\u3057\u304f\u5b9f\u884c\u3067\u304d\u307e\u3057\u305f\u3002MetaOCaml\u3067\u306f\u3053\u306e\u3088\u3046\u306b\u3001\u5b9f\u884c\u6642\u306b\u30b3\u30fc\u30c9\u304c\u9589\u3058\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u3092\u884c\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n## \u4f8b\u5916\u3092\u4f7f\u3063\u305f\u5b9f\u9a13\n\u4f8b\u5916\u3067\u30a8\u30b9\u30b1\u30fc\u30d7\u306e\u4e2d\u304b\u3089\u5916\u306b\u5411\u304b\u3063\u3066\u30b3\u30fc\u30c9\u3092\u6295\u3052\u3066\u3001\u305d\u306e\u30b3\u30fc\u30c9\u3092\u53d7\u3051\u53d6\u3063\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u53ef\u80fd\u3067\u3057\u3087\u3046\u304b\u3002\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n```\n# exception Code of int code;;\nexception Code of int code\n\n# let f () = raise (Code .<1 + 2>.);;\nval f : unit -> 'a = <fun>\n\n# try f () with Code c -> Runcode.run c;;\n- : int = 3\n```\n\n\u95a2\u6570`f`\u306e\u5185\u90e8\u3067\u30b3\u30fc\u30c9\u3092\u6295\u3052\u3066\u5916\u5074\u3067\u30ad\u30e3\u30c3\u30c1\u3057\u3066\u6b63\u3057\u304f\u5b9f\u884c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u6b21\u306b\u3001\u9589\u3058\u3066\u3044\u306a\u3044\u30b3\u30fc\u30c9\u3092\u6295\u3052\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```\n# try .<fun x -> .~(raise (Code .<x>.); .<x>.)>.\n  with Code c -> .<fun y -> .~c>.;;\nCharacters 18-36:\n  try .<fun x -> .~(raise (Code .<x>.); .<x>.)>. with Code c -> .<fun y -> .~c>.;;\n                    ^^^^^^^^^^^^^^^^^^\nWarning 21: this statement never returns (or has an unsound type.)\nException:\nFailure\n \"Scope extrusion detected at Characters 64-76:\\n  try .<fun x -> .~(raise (Code .<x>.); .<x>.)>. with Code c -> .<fun y -> .~c>.;;\\n                                                                  ^^^^^^^^^^^^\\n for code built at Characters 10-11:\\n  try .<fun x -> .~(raise (Code .<x>.); .<x>.)>. with Code c -> .<fun y -> .~c>.;;\\n            ^\\n for the identifier x_3 bound at Characters 10-11:\\n  try .<fun x -> .~(raise (Code .<x>.); .<x>.)>. with Code c -> .<fun y -> .~c>.;;\\n            ^\\n\".\n```\n\n\u306a\u3093\u304b\u3054\u3061\u3083\u3054\u3061\u3083\u3068\u51fa\u3066\u304d\u307e\u3057\u305f\u304c\u3001\u3084\u306f\u308a\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n## MetaOCaml\u306f\u4e00\u5fdc\u5b89\u5168\u3060\u304c...\nBER-MetaOCaml\u3067\u306f\u9589\u3058\u3066\u3044\u306a\u3044\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u5b9f\u884c\u6642\u306b\u4f8b\u5916\u3068\u3057\u3066\u5831\u544a\u3057\u3001\u6c7a\u3057\u3066\u9589\u3058\u3066\u3044\u306a\u3044\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u3068\u3044\u3046\u4e8b\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u5b9f\u884c\u6642\u3067\u306f\u306a\u304f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3053\u306e\u3088\u3046\u306a\u5224\u5b9a\u304c\u884c\u308f\u308c\u308b\u3068\u30e6\u30fc\u30b6\u3068\u3057\u3066\u306f\u3068\u3066\u3082\u3042\u308a\u304c\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u3084\u306f\u308a\u6280\u8853\u7684\u306b\u56f0\u96e3\u3060\u3068\u3044\u3046\u4e8b\u3067\u3057\u3087\u3046\u304b\u3002\u4eca\u5f8c\u306e\u6280\u8853\u9032\u6b69\u306b\u671f\u5f85\u3057\u307e\u3057\u3087\u3046\u3002\n\n# \u307e\u3068\u3081\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001MetaOCaml\u306e\u7c21\u5358\u306a\u4f7f\u3044\u65b9\u3092\u5fa9\u7fd2\u3057\u3066\u3001MetaOCaml\u5b9a\u756a\u306e\u4f8b\u3067\u3042\u308bpower\u95a2\u6570\u3092\u8a73\u3057\u304f\u898b\u3066\u307f\u307e\u3057\u305f\u3002\u305d\u3057\u3066\u3001\u5b9f\u9a13\u7684\u306a\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066MetaOCaml\u304c\u672c\u5f53\u306b\u5b89\u5168\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u306e\u691c\u8a3c\u3092\u884c\u3044\u307e\u3057\u305f\u3002\u3053\u3053\u307e\u3067\u8aad\u3093\u3067\u3044\u305f\u3060\u3051\u305f\u65b9\u3067\u3042\u308c\u3070\u3001MetaOCaml\u3067\u4f55\u304c\u3067\u304d\u3066\u4f55\u304c\u3067\u304d\u306a\u3044\u306e\u304b\u3068\u3044\u3063\u305f\u5168\u4f53\u50cf\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3068\u601d\u3044\u307e\u3059\u3002\u3042\u3068\u306f\u30d0\u30ea\u30d0\u30eaMetaOCaml\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n# \u7df4\u7fd2\u554f\u984c\u306e\u89e3\u7b54\n## \u89e3\u7b54\u4f8b1\n```\nlet rec spower_opt1 n x =\n  if n == 0 then .<1>.\n  else if n mod 2 == 0 then\n    .<let x' = .~x * .~x in\n      .~(spower_opt1 (n / 2) .<x'>.)>.\n  else\n    .< .~x * .~(spower_opt1 (n - 1) x) >.\n```\n\n## \u89e3\u7b54\u4f8b2\n```\nlet spower_opt2 n x =\n  let rec loop n x k=\n    if n == 0 then\n      k .<1>.\n    else if n == 1 then\n      k x\n    else if n mod 2 == 0 then\n      .<let x' = .~x * .~x in\n        .~(loop (n / 2) .<x'>. (fun c ->\n          k c))>.\n    else\n      loop (n - 1) x (fun c -> k .< .~c * .~x >.)\n  in\n  loop n x (fun y -> y)\n```\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```\n# .<fun x -> .~(spower_opt2 5 .<x>.)>.;;\n- : (int -> int) code = .<\nfun x_1  -> let x'_2 = x_1 * x_1 in let x'_3 = x'_2 * x'_2 in x'_3 * x_1>. \n```\n"}