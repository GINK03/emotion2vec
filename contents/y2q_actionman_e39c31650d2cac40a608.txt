{"context": " More than 1 year has passed since last update.\u3053\u306e\u6587\u7ae0\u306f\u3001 Lisp Advent Calendar 2014 \u306e 12/18 \u62c5\u5f53\u5206\u306e\u8a18\u4e8b\u3068\u3057\u3066\u66f8\u304b\u308c\u307e\u3057\u305f\u3002\n\n\u80cc\u666f(\u9806\u4e0d\u540c)\n\n\nstreem \u8a00\u8a9e\n\nMatz \u6c0f\u306b\u3088\u308a\u3001 streem \u3068\u3044\u3046\u3001 stream based concurrent scripting language \u306a\u308b\u3082\u306e\u306e\u8a2d\u8a08\u304c\u9032\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n https://github.com/matz/streem\n\n\n\u9762\u767d\u305d\u3046\u3067\u3059\u306d\u3002\n\nstreeem \u8a00\u8a9e\n\nstreem \u8a00\u8a9e\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30e4\u3055\u308c\u305f mattn \u6c0f\u306b\u3088\u308a\u3001 streeem \u3068\u3044\u3046 Go \u8a00\u8a9e\u3067\u306e\u5b9f\u88c5\u304c\u884c\u308f\u308c\u307e\u3057\u305f\u3002\n\n https://github.com/mattn/streeem\n\n http://qiita.com/mattn/items/20c7eb056ed8921547a8\n\n\n\u306a\u3093\u3066\u7d20\u65e9\u3044\u3093\u3067\u3057\u3087\u3046\u3002\u304b\u3063\u3053\u3044\u3044\u3067\u3059\u306d\u3002\n\nCommon Lisp \u3067\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\n\nCommon Lisp \u3067\u3001 UNIX \u30b7\u30a7\u30eb\u306e\u3088\u3046\u306a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u51e6\u7406\u3063\u3066\u3069\u3046\u7d44\u3080\u306e\uff1f\u3063\u3066\u3044\u3046\u554f\u984c\u63d0\u8d77\u304c\u3042\u308a\u307e\u3059\u3002\n\n http://ja.stackoverflow.com/questions/1724/unix%E3%81%AE%E3%83%91%E3%82%A4%E3%83%97%E5%87%A6%E7%90%86%E3%81%AE%E3%82%88%E3%81%86%E3%81%AB%E3%82%B9%E3%83%88%E3%83%AA%E3%83%BC%E3%83%A0%E3%82%92%E6%89%B1%E3%81%84%E3%81%9F%E3%81%84\n\n\n\u3069\u3046\u3082\u3001\u3042\u3093\u307e\u308a\u300c\u6c7a\u5b9a\u7684\u300d\u306a\u65b9\u6cd5\u304c\u306a\u3044\u306a\u30fc\u3001\u3068\u3044\u3046\u6c17\u304c\u3057\u3066\u307e\u3057\u305f\u3002\n\n\u7b46\u8005\u306e\u4e8b\u60c5\n\n\u3053\u306e\u65e5 (2014-12-18) \u306e Lisp Advent Calender \u306e\u305f\u3081\u306b\u5143\u3005\u8003\u3048\u3066\u305f\u30cd\u30bf\u304c\u3042\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u8133\u5185\u3067\u653e\u3063\u3066\u304a\u3044\u305f\u3089\u3069\u3046\u3067\u3082\u3088\u304f\u306a\u3063\u3066\u304d\u3066\u2026\n\u306a\u3093\u304b\u3082\u3063\u3068\u9762\u767d\u3044\u3053\u3068\u306a\u3044\u304b\u306a\u3001\u3068\u601d\u3063\u3066\u304d\u3066\u307e\u3057\u305f\u3002\n\n\u7d50\u679c\n\n\u4f55\u304b\u3088\u3046\u308f\u304b\u3089\u3093\u304c\u3001 Lisp \u306b\u5bc4\u305b\u3066 streem \u5b9f\u88c5\u3057\u3066\u307f\u308b\u304b\n\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u305f\u3002 https://github.com/y2q-actionman/stleem\n\u540d\u524d\u306f\u3001 stleem \u306b\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001 \u50d5\u304c l \u3068 r \u306e\u767a\u97f3\u4e0a\u306e\u533a\u5225\u304c\u4ed8\u304b\u306a\u3044 Engrish \u91ce\u90ce\u3067\u3042\u308b\u3053\u3068\u306b\u7531\u6765\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u4f8b\n\n\u672c\u5bb6 streem \u306e\u4f8b\u306b\u3042\u308b FizzBuzz \u304b\u3089\u3002\n(defun fizzbuzz ()\n  (stleem ()\n    (seq 100)\n    (lambda (x)\n      (cond ((= (mod x 15) 0)\n             \"FizzBuzz\")\n            ((= (mod x 3) 0)\n             \"Fizz\")\n            ((= (mod x 5) 0)\n             \"Buzz\")\n            (t\n             x)))\n    stdout))\n\n\u3053\u308c\u306b\u3088\u308a\u3001\n1.  1 \u304b\u3089 100 \u307e\u3067\u5217\u6319\u3002\n2.  3 \u3084 5 \u306e\u500d\u6570\u3060\u3063\u305f\u7f6e\u304d\u304b\u3048\u308b\u3002\n3.  \u6a19\u6e96\u51fa\u529b\u306b\u66f8\u304f\n4.  \u7d50\u679c\u306e\u30ea\u30b9\u30c8\u3092\u5f97\u308b\u3002\n\u3053\u3068\u304c\u9054\u6210\u3055\u308c\u307e\u3059\u3002\n\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u3067\u3059\u3002\nSTLEEM-EXAMPLE> (fizzbuzz)\n1\n2\nFizz\n4\nBuzz\nFizz\n7\n8\nFizz\nBuzz\n\n;; \u4e2d\u7565\n\nFizz\nBuzz\n(1 2 \"Fizz\" 4 \"Buzz\" \"Fizz\" 7 8 \"Fizz\" \"Buzz\" 11 \"Fizz\" 13 14\n \"FizzBuzz\" 16 17 \"Fizz\" 19 \"Buzz\" \"Fizz\" 22 23 \"Fizz\" \"Buzz\" 26 \"Fizz\"\n 28 29 \"FizzBuzz\" 31 32 \"Fizz\" 34 \"Buzz\" \"Fizz\" 37 38 \"Fizz\" \"Buzz\" 41\n \"Fizz\" 43 44 \"FizzBuzz\" 46 47 \"Fizz\" 49 \"Buzz\" \"Fizz\" 52 53 \"Fizz\"\n \"Buzz\" 56 \"Fizz\" 58 59 \"FizzBuzz\" 61 62 \"Fizz\" 64 \"Buzz\" \"Fizz\" 67 68\n \"Fizz\" \"Buzz\" 71 \"Fizz\" 73 74 \"FizzBuzz\" 76 77 \"Fizz\" 79 \"Buzz\" \"Fizz\"\n 82 83 \"Fizz\" \"Buzz\" 86 \"Fizz\" 88 89 \"FizzBuzz\" 91 92 \"Fizz\" 94 \"Buzz\"\n \"Fizz\" 97 98 \"Fizz\" \"Buzz\")\nSTLEEM-EXAMPLE>\n\n\n\u5b9f\u88c5\n\n\n\u4e26\u5217\u5316\n\n\nThreading\n\nGo \u8a00\u8a9e\u306b\u306f goroutine \u3068\u3044\u3046\u3001\u8a00\u8a9e\u306b\u5bc6\u306b\u7d50\u5408\u3055\u308c\u305f\u4e26\u5217\u5316\u6a5f\u69cb\u304c\u3042\u308b\u305d\u3046\u3067\u3059\u3002Go \u8a00\u8a9e\u5b9f\u88c5\u306e streeem \u3067\u3082\u4f7f\u308f\u308c\u3066\u304a\u308a\u3001\u4e0a\u8a18\u5b9f\u88c5\u89e3\u8aac\u8a18\u4e8b\u3067\u306f\u307e\u308b\u3067\u7a7a\u6c17\u306e\u3088\u3046\u306b\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\u3044\u3044\u306a\u3042\u3002\n\u3055\u3066\u3001 ANSI Common Lisp (1994\u5e74\u306b\u6a19\u6e96\u5316)\u306b\u306f\u3001\u4e26\u5217\u5316 API \u306f\u3042\u308a\u307e\u305b\u3093\u3002\u306a\u3093\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u3002 C\u8a00\u8a9e\u306b\u30822011\u5e74\u306e\u898f\u683c\u3067\u4e26\u5217\u5316API\u304c\u52a0\u308f\u3063\u305f\u3068\u3044\u3046\u3001\u3053\u306e\u3054\u6642\u4e16\u306b\u306b\u3082\u95a2\u308f\u3089\u305a\u3001\u3067\u3059\u3002\n(\u4f59\u8ac7: \u7b46\u8005\u304c\u5143\u3005\u8003\u3048\u3066\u3044\u305f Lisp Advent Calender \u306e\u30cd\u30bf\u3068\u3044\u3046\u306e\u306f\u3001\u3053\u306e\u4ef6\u306b\u3064\u3044\u3066\u6ed4\u3005\u3068\u6068\u307f\u7bc0\u3092\u8ff0\u3079\u308b\u2026\u3068\u3044\u3046\u3082\u306e\u3067\u3057\u305f\u3002\u3053\u306e\u8fba\u306e API \u304c\u52a0\u308f\u3063\u305f Common Lisp \u6a19\u6e96\u306e\u5236\u5b9a\u3092\u5f85\u3063\u3066\u3044\u307e\u3059\u3002\n\u3044\u3064\u307e\u3067\u3082\u3002)\n\u3068\u306f\u3044\u3048\u3001\u5404\u7a2e ANSI Common Lisp \u6e96\u62e0\u306e Common Lisp \u51e6\u7406\u7cfb\u306f\u3001\u5927\u62b5\u3001\u72ec\u81ea\u62e1\u5f35\u3068\u3057\u3066\u4e26\u5217\u5316 API \u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3089\u3092\u7d71\u4e00\u3057\u3066\u4f7f\u3046\u305f\u3081\u306e Bordeaux Threads \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067\u30b9\u30ec\u30c3\u30c9\u304c\u7acb\u3066\u3089\u308c\u307e\u3059:\n;; \"Hello, World\" \u3092\u5410\u304f\u30b9\u30ec\u30c3\u30c9\u306e\u4f5c\u6210\n(make-thread #'(lambda () (print \"Hello, World!\")))\n\n;; \u30b9\u30ec\u30c3\u30c9\u306e\u7d42\u4e86\u3092\u5f85\u3064\n(join-thread *)\n\n\nChannel\n\nGo \u8a00\u8a9e\u306b\u306f channel \u3068\u3044\u3046\u3001\u30b9\u30ec\u30c3\u30c9\u9593\u901a\u4fe1\u6a5f\u69cb\u304c\u3042\u308b\u305d\u3046\u3067\u3059\u3002\u540c\u3058\u304f streeem \u3067\u4f7f\u308f\u308c\u3066\u304a\u308a\u3001\u3053\u308c\u3082\u307e\u305f\u7a7a\u6c17\u306e\u3088\u3046\u306b\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\u3044\u3044\u306a\u3042\u3002\n\u3055\u3066\u3001\u524d\u8ff0\u306e Bordeaux Threads \u306e API \u306b\u306f\u3001\u305d\u3093\u306a\u4fbf\u5229\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u666e\u901a\u306e\u30ed\u30c3\u30af\u3068\u6761\u4ef6\u5909\u6570\u3057\u304b\u306a\u304f\u3001\u307e\u3042\u9811\u5f35\u308c\u3070\u3053\u3053\u304b\u3089\u7d44\u3080\u3053\u3068\u3082\u53ef\u80fd\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u79c1\u3081\u306b\u306f\u7121\u7406\u3067\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306e\u7528\u9014\u3067\u306f\u3001\u300c\u8981\u7d20\u304c\u6295\u5165\u3055\u308c\u308b\u307e\u3067\u30d6\u30ed\u30c3\u30af\u3057\u3066\u5f85\u3063\u3066\u304f\u308c\u308b\u30ad\u30e5\u30fc\u300d\u304c\u3042\u308c\u3070\u5341\u5206\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u3001 lparallel \u30e9\u30a4\u30d6\u30e9\u30ea\u306e lparallel.queue \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u5316\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u5b9f\u88c5\u30b3\u30fc\u30c9\n\n;;; \u5404\u30b9\u30ec\u30c3\u30c9\u304c\u3084\u308b\u3053\u3068\n(defun make-stleem-thread-function (pipeline-func from-pipe to-pipe end-symbol)\n  #'(lambda ()\n      (unwind-protect\n           (loop for in = (pipe-pop from-pipe end-symbol) ; \u5165\u529b pipe \u304b\u3089\u8981\u7d20\u3092\u62fe\u3063\u3066\n              until (eq in end-symbol)                    ; EOF \u306a\u3089\u7d42\u4e86\n              as out = (funcall pipeline-func in)         ; \u30d5\u30a3\u30eb\u30bf\u95a2\u6570\u3092\u901a\u3057\u3066\n              until (eq out end-symbol)                   ; EOF \u306a\u3089\u7d42\u4e86\n              do (pipe-push to-pipe out))                 ; \u51fa\u529b pipe \u306b\u5410\u304f\n        (pipe-close to-pipe)))) ; \u30a8\u30e9\u30fc\u304c\u8d77\u304d\u3066\u3082 pipe \u3092\u9589\u3058\u308b\u3053\u3068\u3092\u4fdd\u8a3c (unwind-protect)\n\n;;; Main loop\n(defun run-stleem (pipeline-funcs\n                   &key (start-symbol t) (end-symbol nil) (extract-values t))\n  (let ((threads nil)\n        (last-pipe nil))\n    (unwind-protect\n         (loop for pipeline-func in pipeline-funcs ; \u5404 pipeline \u3092\u69cb\u6210\u3059\u308b\u95a2\u6570\u306b\u3064\u3044\u3066\u30fb\u30fb\n            as from-pipe = (make-instance 'constant-pipe :value start-symbol) ; \u5165\u529b pipe\n            then to-pipe\n            as to-pipe = (make-instance 'tekitou-pipe) ; \u51fa\u529b pipe\n            do (push (make-thread                      ; \u30b9\u30ec\u30c3\u30c9\u4f5c\u6210\n                      (make-stleem-thread-function\n                       pipeline-func from-pipe to-pipe end-symbol)\n                      :name \"streem worker thread\")\n                     threads)\n            finally\n              (setf last-pipe to-pipe)\n              (mapc #'join-thread threads)) ; \u5168\u30b9\u30ec\u30c3\u30c9\u306e\u7d42\u4e86\u3092\u5f85\u3064\n      (mapc #'destroy-thread threads)) ; \u30a8\u30e9\u30fc\u3067\u4e2d\u65ad\u3057\u3066\u3082\u30b9\u30ec\u30c3\u30c9\u3092\u7d76\u5bfe\u6bba\u3059\n    (cond ((null last-pipe)\n           (values nil nil))\n          (extract-values\n           (values (pipe-extract last-pipe) t)) ; \u6700\u5f8c\u306e\u51fa\u529b pipe \u306e\u4e2d\u8eab\u3092\u53d6\u308a\u51fa\u3057\u3066\u8fd4\u3059\u3002\n          (t\n           (values last-pipe t)))))\n\n\n\u69cb\u6587\u89e3\u6790\n\n\nS\u5f0f\u306b\u3057\u3066\u3055\u307c\u308b\n\nstreem \u3084 streeem \u3067\u306f\u3001\u69cb\u6587\u89e3\u6790\u306b\u591a\u304f\u306e\u30b3\u30fc\u30c9\u304c\u5272\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u69cb\u6587\u89e3\u6790\u5668\u3092\u4f5c\u308b\u3068\u3044\u3046\u306e\u306f\u76f8\u5f53\u306b\u624b\u9593\u3069\u308b\u4f5c\u696d\u3067\u3042\u308b\u3053\u3068\u306f\u3001\u7686\u3005\u69d8\u3054\u5b58\u77e5\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u4e00\u65b9 stleem \u3067\u306f\u3001\u601d\u3044\u5207\u3063\u3066\u3001 \u69cb\u6587\u3092\u5168\u90e8S\u5f0f\u3067\u8a18\u8ff0\u3057\u3066\u4e0b\u3055\u3044 \u3068\u30e6\u30fc\u30b6\u306e\u7686\u69d8\u306b\u304a\u9858\u3044\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u69cb\u6587\u89e3\u6790\u304b\u3089\u89e3\u653e\u3055\u308c\u3001\u6a19\u6e96\u7684\u306a\u30ea\u30b9\u30c8\u64cd\u4f5c\u95a2\u6570\u3060\u3051\u3067\u5b9f\u88c5\u306f\u5b8c\u7d50\u3057\u307e\u3059\u3002\n(\u4f59\u8ac7: Lisper \u304cS\u5f0f\u306b\u9589\u3058\u3053\u3082\u3063\u3066\u3057\u307e\u3046\u4e00\u56e0\u306f\u3001\u3053\u3046\u3044\u3046\u69cb\u6587\u89e3\u6790\u304b\u3089\u89e3\u653e\u3055\u308c\u305f\u3044\u3068\u3044\u3046\u9858\u671b\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u305f\u3076\u3093\u3002)\n\u30b3\u30fc\u30c9\n;;; Entry point\n(defmacro stleem ((&key (start-symbol t) (end-symbol nil) (extract-values t))\n                  &body pipelines)\n  `(run-stleem\n    (list ,@pipelines) ; \u30e6\u30fc\u30b6\u304c\u6e21\u3057\u305fS\u5f0f\u3092\u8a70\u3081\u76f4\u3057\u3066\u3044\u308b\u3060\u3051!\n    :start-symbol ,start-symbol\n    :end-symbol ,end-symbol\n    :extract-values ,extract-values))\n\n\n\u30b7\u30f3\u30dc\u30eb\u306e\u51e6\u9047\n\nstreem \u306e\u4f8b\u306b\u306f\u3001 STDIN, STDOUT \u3068\u3044\u3046\u8b0e\u306e\u30b7\u30f3\u30dc\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3069\u3046\u6271\u3063\u305f\u3082\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u3053\u308c\u3089\u3060\u3051\u3092 stleem \u3067\u7279\u6b8a\u306b\u6271\u3063\u3066\u3042\u3052\u308b\u306e\u306f\u3001\u5999\u306a\u8907\u96d1\u5ea6\u3092\u5897\u3057\u3066\u3057\u307e\u3044\u305d\u3046\u3067\u3059\u3002\u304b\u3068\u3044\u3063\u3066 (STDIN), (STDOUT) \u306a\u3093\u3066\u66f8\u304b\u305b\u308b\u3068\u3001 \u300c\u3046\u308f\u3042\u3042 Lisper \u3060\u3042\u3042\u3042\u300d \u3068\u8a00\u308f\u308c\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u2026\u3068\u7b46\u8005\u306f\u88ab\u5bb3\u5984\u60f3\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u7d50\u5c40\u3001 define-symbol-macro \u3067\u9069\u5f53\u306b\u7f6e\u304d\u304b\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n;; \u4efb\u610f stream \u3078\u306e\u51fa\u529b\u7528\u30d5\u30a3\u30eb\u30bf\n(defun stleem-write-driver (stream)\n  #'(lambda (obj)\n      (format stream \"~&~A~%\" obj)\n      obj))\n\n;; stdout \u3068\u3044\u3046\u30b7\u30f3\u30dc\u30eb\u3092\u3001\u4e0a\u306e\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u306b\u304a\u304d\u304b\u3048\u308b\n(define-symbol-macro stdout\n    (stleem-write-driver *standard-output*))\n\n\n\u5c06\u6765\u6027\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u6307\u5411\u3063\u307d\u3044\u66f8\u304d\u65b9\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u50d5\u81ea\u8eab\u306f\u3053\u308c\u3092\u4f7f\u308f\u306a\u3044\u6c17\u304c\u3057\u307e\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001 Common Lisp \u306e\u5f37\u529b\u306a\u53cd\u5fa9\u51e6\u7406\u8a18\u8ff0\u7528 DSL \u3067\u3042\u308b iterate \u3068\u306e\u7d71\u5408\u3092\u8003\u3048\u305f\u3044\u305f\u3081\u3067\u3059\u3002\n\u524d\u8ff0\u306e\u4f8b\u3092\u3001\u305d\u308c\u305e\u308c iterate \u3067\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046:\n(defun cat ()\n  (iterate:iter\n    (for l next (read-line *standard-input* nil nil))\n    (while l)\n    (write-line l *standard-output*)))\n\n(defun fizzbuzz ()\n  (iterate:iter\n    (for x from 1 to 100)\n    (for y = (cond ((= (mod x 15) 0)\n                    \"FizzBuzz\")\n                   ((= (mod x 3) 0)\n                    \"Fizz\")\n                   ((= (mod x 5) 0)\n                    \"Buzz\")\n                   (t\n                    x)))\n    (print y)))\n\n\u3053\u308c\u3092\u898b\u308b\u9650\u308a\u3001 iterate \u3060\u3051\u3067\u3001\u300c\u3082\u3046\u5341\u5206\u305d\u308c\u3063\u307d\u3044\u300d\u8a18\u8ff0\u304c\u51fa\u6765\u3066\u3044\u308b\u3088\u3046\u306b\u611f\u3058\u3089\u308c\u3066\u3057\u307e\u3063\u3066\u304a\u308a\u307e\u3059\u3002\n\u306a\u3093\u304b\u4e0a\u624b\u3044\u3053\u3068\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3063\u307d\u304f\u898b\u3048\u308b\u3088\u3046\u306a\u9805\u3092 iterate \u306b\u5c0e\u5165\u3057\u305f\u65b9\u304c\u3001\u65e2\u5b58\u306e\u30b3\u30fc\u30c9\u3068\u3082\u3063\u3068\u878d\u548c\u3067\u304d\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u2026\n\u3068\u601d\u3044\u306f\u3058\u3081\u305f\u3068\u3053\u308d\u3067\u3001\u3053\u306e\u8a18\u4e8b\u306f\u7d42\u308f\u308a\u3067\u3059\u3002\n\n\u3053\u306e\u6587\u7ae0\u306f\u3001 [Lisp Advent Calendar 2014](http://qiita.com/advent-calendar/2014/lisp) \u306e 12/18 \u62c5\u5f53\u5206\u306e\u8a18\u4e8b\u3068\u3057\u3066\u66f8\u304b\u308c\u307e\u3057\u305f\u3002\n\n# \u80cc\u666f(\u9806\u4e0d\u540c)<a id=\"sec-1\" name=\"sec-1\"></a>\n\n## streem \u8a00\u8a9e<a id=\"sec-1-1\" name=\"sec-1-1\"></a>\n\nMatz \u6c0f\u306b\u3088\u308a\u3001 **streem** \u3068\u3044\u3046\u3001 stream based concurrent scripting language \u306a\u308b\u3082\u306e\u306e\u8a2d\u8a08\u304c\u9032\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n-   <https://github.com/matz/streem>\n\n\u9762\u767d\u305d\u3046\u3067\u3059\u306d\u3002\n\n## streeem \u8a00\u8a9e<a id=\"sec-1-2\" name=\"sec-1-2\"></a>\n\nstreem \u8a00\u8a9e\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30e4\u3055\u308c\u305f mattn \u6c0f\u306b\u3088\u308a\u3001 **streeem** \u3068\u3044\u3046 Go \u8a00\u8a9e\u3067\u306e\u5b9f\u88c5\u304c\u884c\u308f\u308c\u307e\u3057\u305f\u3002\n\n-   <https://github.com/mattn/streeem>\n-   <http://qiita.com/mattn/items/20c7eb056ed8921547a8>\n\n\u306a\u3093\u3066\u7d20\u65e9\u3044\u3093\u3067\u3057\u3087\u3046\u3002\u304b\u3063\u3053\u3044\u3044\u3067\u3059\u306d\u3002\n\n## Common Lisp \u3067\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406<a id=\"sec-1-3\" name=\"sec-1-3\"></a>\n\nCommon Lisp \u3067\u3001 UNIX \u30b7\u30a7\u30eb\u306e\u3088\u3046\u306a\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u51e6\u7406\u3063\u3066\u3069\u3046\u7d44\u3080\u306e\uff1f\u3063\u3066\u3044\u3046\u554f\u984c\u63d0\u8d77\u304c\u3042\u308a\u307e\u3059\u3002\n\n-   <http://ja.stackoverflow.com/questions/1724/unix%E3%81%AE%E3%83%91%E3%82%A4%E3%83%97%E5%87%A6%E7%90%86%E3%81%AE%E3%82%88%E3%81%86%E3%81%AB%E3%82%B9%E3%83%88%E3%83%AA%E3%83%BC%E3%83%A0%E3%82%92%E6%89%B1%E3%81%84%E3%81%9F%E3%81%84>\n\n\u3069\u3046\u3082\u3001\u3042\u3093\u307e\u308a\u300c\u6c7a\u5b9a\u7684\u300d\u306a\u65b9\u6cd5\u304c\u306a\u3044\u306a\u30fc\u3001\u3068\u3044\u3046\u6c17\u304c\u3057\u3066\u307e\u3057\u305f\u3002\n\n## \u7b46\u8005\u306e\u4e8b\u60c5<a id=\"sec-1-4\" name=\"sec-1-4\"></a>\n\n\u3053\u306e\u65e5 (2014-12-18) \u306e Lisp Advent Calender \u306e\u305f\u3081\u306b\u5143\u3005\u8003\u3048\u3066\u305f\u30cd\u30bf\u304c\u3042\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u8133\u5185\u3067\u653e\u3063\u3066\u304a\u3044\u305f\u3089\u3069\u3046\u3067\u3082\u3088\u304f\u306a\u3063\u3066\u304d\u3066\u2026\n\n\u306a\u3093\u304b\u3082\u3063\u3068\u9762\u767d\u3044\u3053\u3068\u306a\u3044\u304b\u306a\u3001\u3068\u601d\u3063\u3066\u304d\u3066\u307e\u3057\u305f\u3002\n\n## \u7d50\u679c<a id=\"sec-1-5\" name=\"sec-1-5\"></a>\n\n**[\u4f55\u304b\u3088\u3046\u308f\u304b\u3089\u3093\u304c\u3001 Lisp \u306b\u5bc4\u305b\u3066 streem \u5b9f\u88c5\u3057\u3066\u307f\u308b\u304b](http://dic.nicovideo.jp/a/%E4%BD%95%E3%81%8B%E3%82%8F%E3%81%8B%E3%82%89%E3%82%93%E3%81%8C%E3%81%8F%E3%82%89%E3%81%88%E3%83%83!)**\n\n\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u305f\u3002 <https://github.com/y2q-actionman/stleem>\n\n\u540d\u524d\u306f\u3001 **stleem** \u306b\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001 \u50d5\u304c l \u3068 r \u306e\u767a\u97f3\u4e0a\u306e\u533a\u5225\u304c\u4ed8\u304b\u306a\u3044 [Engrish](http://ja.wikipedia.org/wiki/Engrish) \u91ce\u90ce\u3067\u3042\u308b\u3053\u3068\u306b\u7531\u6765\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u30b3\u30fc\u30c9\u4f8b<a id=\"sec-2\" name=\"sec-2\"></a>\n\n\u672c\u5bb6 streem \u306e\u4f8b\u306b\u3042\u308b FizzBuzz \u304b\u3089\u3002\n\n```cl\n(defun fizzbuzz ()\n  (stleem ()\n    (seq 100)\n    (lambda (x)\n      (cond ((= (mod x 15) 0)\n             \"FizzBuzz\")\n            ((= (mod x 3) 0)\n             \"Fizz\")\n            ((= (mod x 5) 0)\n             \"Buzz\")\n            (t\n             x)))\n    stdout))\n```\n\n\u3053\u308c\u306b\u3088\u308a\u3001\n1.  1 \u304b\u3089 100 \u307e\u3067\u5217\u6319\u3002\n2.  3 \u3084 5 \u306e\u500d\u6570\u3060\u3063\u305f\u7f6e\u304d\u304b\u3048\u308b\u3002\n3.  \u6a19\u6e96\u51fa\u529b\u306b\u66f8\u304f\n4.  \u7d50\u679c\u306e\u30ea\u30b9\u30c8\u3092\u5f97\u308b\u3002\n\u3053\u3068\u304c\u9054\u6210\u3055\u308c\u307e\u3059\u3002\n\n\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n    STLEEM-EXAMPLE> (fizzbuzz)\n    1\n    2\n    Fizz\n    4\n    Buzz\n    Fizz\n    7\n    8\n    Fizz\n    Buzz\n    \n    ;; \u4e2d\u7565\n    \n    Fizz\n    Buzz\n    (1 2 \"Fizz\" 4 \"Buzz\" \"Fizz\" 7 8 \"Fizz\" \"Buzz\" 11 \"Fizz\" 13 14\n     \"FizzBuzz\" 16 17 \"Fizz\" 19 \"Buzz\" \"Fizz\" 22 23 \"Fizz\" \"Buzz\" 26 \"Fizz\"\n     28 29 \"FizzBuzz\" 31 32 \"Fizz\" 34 \"Buzz\" \"Fizz\" 37 38 \"Fizz\" \"Buzz\" 41\n     \"Fizz\" 43 44 \"FizzBuzz\" 46 47 \"Fizz\" 49 \"Buzz\" \"Fizz\" 52 53 \"Fizz\"\n     \"Buzz\" 56 \"Fizz\" 58 59 \"FizzBuzz\" 61 62 \"Fizz\" 64 \"Buzz\" \"Fizz\" 67 68\n     \"Fizz\" \"Buzz\" 71 \"Fizz\" 73 74 \"FizzBuzz\" 76 77 \"Fizz\" 79 \"Buzz\" \"Fizz\"\n     82 83 \"Fizz\" \"Buzz\" 86 \"Fizz\" 88 89 \"FizzBuzz\" 91 92 \"Fizz\" 94 \"Buzz\"\n     \"Fizz\" 97 98 \"Fizz\" \"Buzz\")\n    STLEEM-EXAMPLE>\n\n# \u5b9f\u88c5<a id=\"sec-3\" name=\"sec-3\"></a>\n\n## \u4e26\u5217\u5316<a id=\"sec-3-1\" name=\"sec-3-1\"></a>\n\n### Threading<a id=\"sec-3-1-1\" name=\"sec-3-1-1\"></a>\n\nGo \u8a00\u8a9e\u306b\u306f [goroutine](https://gobyexample.com/goroutines) \u3068\u3044\u3046\u3001\u8a00\u8a9e\u306b\u5bc6\u306b\u7d50\u5408\u3055\u308c\u305f\u4e26\u5217\u5316\u6a5f\u69cb\u304c\u3042\u308b\u305d\u3046\u3067\u3059\u3002Go \u8a00\u8a9e\u5b9f\u88c5\u306e streeem \u3067\u3082\u4f7f\u308f\u308c\u3066\u304a\u308a\u3001\u4e0a\u8a18\u5b9f\u88c5\u89e3\u8aac\u8a18\u4e8b\u3067\u306f\u307e\u308b\u3067\u7a7a\u6c17\u306e\u3088\u3046\u306b\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\u3044\u3044\u306a\u3042\u3002\n\n\u3055\u3066\u3001 ANSI Common Lisp (1994\u5e74\u306b\u6a19\u6e96\u5316)\u306b\u306f\u3001\u4e26\u5217\u5316 API \u306f\u3042\u308a\u307e\u305b\u3093\u3002\u306a\u3093\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u3002 C\u8a00\u8a9e\u306b\u3082[2011\u5e74\u306e\u898f\u683c](http://en.wikipedia.org/wiki/C11_(C_standard_revision))\u3067\u4e26\u5217\u5316API\u304c\u52a0\u308f\u3063\u305f\u3068\u3044\u3046\u3001\u3053\u306e\u3054\u6642\u4e16\u306b\u306b\u3082\u95a2\u308f\u3089\u305a\u3001\u3067\u3059\u3002\n\n(\u4f59\u8ac7: \u7b46\u8005\u304c\u5143\u3005\u8003\u3048\u3066\u3044\u305f Lisp Advent Calender \u306e\u30cd\u30bf\u3068\u3044\u3046\u306e\u306f\u3001\u3053\u306e\u4ef6\u306b\u3064\u3044\u3066\u6ed4\u3005\u3068\u6068\u307f\u7bc0\u3092\u8ff0\u3079\u308b\u2026\u3068\u3044\u3046\u3082\u306e\u3067\u3057\u305f\u3002\u3053\u306e\u8fba\u306e API \u304c\u52a0\u308f\u3063\u305f Common Lisp \u6a19\u6e96\u306e\u5236\u5b9a\u3092\u5f85\u3063\u3066\u3044\u307e\u3059\u3002\n\u3044\u3064\u307e\u3067\u3082\u3002)\n\n\u3068\u306f\u3044\u3048\u3001\u5404\u7a2e ANSI Common Lisp \u6e96\u62e0\u306e Common Lisp \u51e6\u7406\u7cfb\u306f\u3001\u5927\u62b5\u3001\u72ec\u81ea\u62e1\u5f35\u3068\u3057\u3066\u4e26\u5217\u5316 API \u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3089\u3092\u7d71\u4e00\u3057\u3066\u4f7f\u3046\u305f\u3081\u306e [Bordeaux Threads](http://common-lisp.net/project/bordeaux-threads/) \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u30b9\u30ec\u30c3\u30c9\u304c\u7acb\u3066\u3089\u308c\u307e\u3059:\n\n```cl\n;; \"Hello, World\" \u3092\u5410\u304f\u30b9\u30ec\u30c3\u30c9\u306e\u4f5c\u6210\n(make-thread #'(lambda () (print \"Hello, World!\")))\n\n;; \u30b9\u30ec\u30c3\u30c9\u306e\u7d42\u4e86\u3092\u5f85\u3064\n(join-thread *)\n```\n\n### Channel<a id=\"sec-3-1-2\" name=\"sec-3-1-2\"></a>\n\nGo \u8a00\u8a9e\u306b\u306f [channel](http://www.golang-book.com/10/index.htm) \u3068\u3044\u3046\u3001\u30b9\u30ec\u30c3\u30c9\u9593\u901a\u4fe1\u6a5f\u69cb\u304c\u3042\u308b\u305d\u3046\u3067\u3059\u3002\u540c\u3058\u304f streeem \u3067\u4f7f\u308f\u308c\u3066\u304a\u308a\u3001\u3053\u308c\u3082\u307e\u305f\u7a7a\u6c17\u306e\u3088\u3046\u306b\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\u3044\u3044\u306a\u3042\u3002\n\n\u3055\u3066\u3001\u524d\u8ff0\u306e [Bordeaux Threads \u306e API](http://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation) \u306b\u306f\u3001\u305d\u3093\u306a\u4fbf\u5229\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u666e\u901a\u306e\u30ed\u30c3\u30af\u3068\u6761\u4ef6\u5909\u6570\u3057\u304b\u306a\u304f\u3001\u307e\u3042\u9811\u5f35\u308c\u3070\u3053\u3053\u304b\u3089\u7d44\u3080\u3053\u3068\u3082\u53ef\u80fd\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u79c1\u3081\u306b\u306f\u7121\u7406\u3067\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u306e\u7528\u9014\u3067\u306f\u3001\u300c\u8981\u7d20\u304c\u6295\u5165\u3055\u308c\u308b\u307e\u3067\u30d6\u30ed\u30c3\u30af\u3057\u3066\u5f85\u3063\u3066\u304f\u308c\u308b\u30ad\u30e5\u30fc\u300d\u304c\u3042\u308c\u3070\u5341\u5206\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u3001 [lparallel](http://lparallel.org/) \u30e9\u30a4\u30d6\u30e9\u30ea\u306e [lparallel.queue](http://lparallel.org/api/queues/) \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n### \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u5316\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u5b9f\u88c5\u30b3\u30fc\u30c9<a id=\"sec-3-1-3\" name=\"sec-3-1-3\"></a>\n\n```cl\n;;; \u5404\u30b9\u30ec\u30c3\u30c9\u304c\u3084\u308b\u3053\u3068\n(defun make-stleem-thread-function (pipeline-func from-pipe to-pipe end-symbol)\n  #'(lambda ()\n      (unwind-protect\n           (loop for in = (pipe-pop from-pipe end-symbol) ; \u5165\u529b pipe \u304b\u3089\u8981\u7d20\u3092\u62fe\u3063\u3066\n              until (eq in end-symbol)                    ; EOF \u306a\u3089\u7d42\u4e86\n              as out = (funcall pipeline-func in)         ; \u30d5\u30a3\u30eb\u30bf\u95a2\u6570\u3092\u901a\u3057\u3066\n              until (eq out end-symbol)                   ; EOF \u306a\u3089\u7d42\u4e86\n              do (pipe-push to-pipe out))                 ; \u51fa\u529b pipe \u306b\u5410\u304f\n        (pipe-close to-pipe)))) ; \u30a8\u30e9\u30fc\u304c\u8d77\u304d\u3066\u3082 pipe \u3092\u9589\u3058\u308b\u3053\u3068\u3092\u4fdd\u8a3c (unwind-protect)\n\n;;; Main loop\n(defun run-stleem (pipeline-funcs\n                   &key (start-symbol t) (end-symbol nil) (extract-values t))\n  (let ((threads nil)\n        (last-pipe nil))\n    (unwind-protect\n         (loop for pipeline-func in pipeline-funcs ; \u5404 pipeline \u3092\u69cb\u6210\u3059\u308b\u95a2\u6570\u306b\u3064\u3044\u3066\u30fb\u30fb\n            as from-pipe = (make-instance 'constant-pipe :value start-symbol) ; \u5165\u529b pipe\n            then to-pipe\n            as to-pipe = (make-instance 'tekitou-pipe) ; \u51fa\u529b pipe\n            do (push (make-thread                      ; \u30b9\u30ec\u30c3\u30c9\u4f5c\u6210\n                      (make-stleem-thread-function\n                       pipeline-func from-pipe to-pipe end-symbol)\n                      :name \"streem worker thread\")\n                     threads)\n            finally\n              (setf last-pipe to-pipe)\n              (mapc #'join-thread threads)) ; \u5168\u30b9\u30ec\u30c3\u30c9\u306e\u7d42\u4e86\u3092\u5f85\u3064\n      (mapc #'destroy-thread threads)) ; \u30a8\u30e9\u30fc\u3067\u4e2d\u65ad\u3057\u3066\u3082\u30b9\u30ec\u30c3\u30c9\u3092\u7d76\u5bfe\u6bba\u3059\n    (cond ((null last-pipe)\n           (values nil nil))\n          (extract-values\n           (values (pipe-extract last-pipe) t)) ; \u6700\u5f8c\u306e\u51fa\u529b pipe \u306e\u4e2d\u8eab\u3092\u53d6\u308a\u51fa\u3057\u3066\u8fd4\u3059\u3002\n          (t\n           (values last-pipe t)))))\n```\n\n## \u69cb\u6587\u89e3\u6790<a id=\"sec-3-2\" name=\"sec-3-2\"></a>\n\n### S\u5f0f\u306b\u3057\u3066\u3055\u307c\u308b<a id=\"sec-3-2-1\" name=\"sec-3-2-1\"></a>\n\nstreem \u3084 streeem \u3067\u306f\u3001\u69cb\u6587\u89e3\u6790\u306b\u591a\u304f\u306e\u30b3\u30fc\u30c9\u304c\u5272\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u69cb\u6587\u89e3\u6790\u5668\u3092\u4f5c\u308b\u3068\u3044\u3046\u306e\u306f\u76f8\u5f53\u306b\u624b\u9593\u3069\u308b\u4f5c\u696d\u3067\u3042\u308b\u3053\u3068\u306f\u3001\u7686\u3005\u69d8\u3054\u5b58\u77e5\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4e00\u65b9 stleem \u3067\u306f\u3001\u601d\u3044\u5207\u3063\u3066\u3001 **\u69cb\u6587\u3092\u5168\u90e8S\u5f0f\u3067\u8a18\u8ff0\u3057\u3066\u4e0b\u3055\u3044** \u3068\u30e6\u30fc\u30b6\u306e\u7686\u69d8\u306b\u304a\u9858\u3044\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u69cb\u6587\u89e3\u6790\u304b\u3089\u89e3\u653e\u3055\u308c\u3001\u6a19\u6e96\u7684\u306a\u30ea\u30b9\u30c8\u64cd\u4f5c\u95a2\u6570\u3060\u3051\u3067\u5b9f\u88c5\u306f\u5b8c\u7d50\u3057\u307e\u3059\u3002\n\n(\u4f59\u8ac7: Lisper \u304cS\u5f0f\u306b\u9589\u3058\u3053\u3082\u3063\u3066\u3057\u307e\u3046\u4e00\u56e0\u306f\u3001\u3053\u3046\u3044\u3046\u69cb\u6587\u89e3\u6790\u304b\u3089\u89e3\u653e\u3055\u308c\u305f\u3044\u3068\u3044\u3046\u9858\u671b\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u305f\u3076\u3093\u3002)\n\n\u30b3\u30fc\u30c9\n\n```cl\n;;; Entry point\n(defmacro stleem ((&key (start-symbol t) (end-symbol nil) (extract-values t))\n                  &body pipelines)\n  `(run-stleem\n    (list ,@pipelines) ; \u30e6\u30fc\u30b6\u304c\u6e21\u3057\u305fS\u5f0f\u3092\u8a70\u3081\u76f4\u3057\u3066\u3044\u308b\u3060\u3051!\n    :start-symbol ,start-symbol\n    :end-symbol ,end-symbol\n    :extract-values ,extract-values))\n```\n\n### \u30b7\u30f3\u30dc\u30eb\u306e\u51e6\u9047<a id=\"sec-3-2-2\" name=\"sec-3-2-2\"></a>\n\nstreem \u306e\u4f8b\u306b\u306f\u3001 `STDIN`, `STDOUT` \u3068\u3044\u3046\u8b0e\u306e\u30b7\u30f3\u30dc\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3069\u3046\u6271\u3063\u305f\u3082\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u3053\u308c\u3089\u3060\u3051\u3092 stleem \u3067\u7279\u6b8a\u306b\u6271\u3063\u3066\u3042\u3052\u308b\u306e\u306f\u3001\u5999\u306a\u8907\u96d1\u5ea6\u3092\u5897\u3057\u3066\u3057\u307e\u3044\u305d\u3046\u3067\u3059\u3002\u304b\u3068\u3044\u3063\u3066 `(STDIN)`, `(STDOUT)` \u306a\u3093\u3066\u66f8\u304b\u305b\u308b\u3068\u3001 **\u300c\u3046\u308f\u3042\u3042 Lisper \u3060\u3042\u3042\u3042\u300d** \u3068\u8a00\u308f\u308c\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u2026\u3068\u7b46\u8005\u306f\u88ab\u5bb3\u5984\u60f3\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u7d50\u5c40\u3001 `define-symbol-macro` \u3067\u9069\u5f53\u306b\u7f6e\u304d\u304b\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```cl\n;; \u4efb\u610f stream \u3078\u306e\u51fa\u529b\u7528\u30d5\u30a3\u30eb\u30bf\n(defun stleem-write-driver (stream)\n  #'(lambda (obj)\n      (format stream \"~&~A~%\" obj)\n      obj))\n\n;; stdout \u3068\u3044\u3046\u30b7\u30f3\u30dc\u30eb\u3092\u3001\u4e0a\u306e\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u306b\u304a\u304d\u304b\u3048\u308b\n(define-symbol-macro stdout\n    (stleem-write-driver *standard-output*))\n```\n\n# \u5c06\u6765\u6027<a id=\"sec-4\" name=\"sec-4\"></a>\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u6307\u5411\u3063\u307d\u3044\u66f8\u304d\u65b9\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u50d5\u81ea\u8eab\u306f\u3053\u308c\u3092\u4f7f\u308f\u306a\u3044\u6c17\u304c\u3057\u307e\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001 Common Lisp \u306e\u5f37\u529b\u306a\u53cd\u5fa9\u51e6\u7406\u8a18\u8ff0\u7528 DSL \u3067\u3042\u308b [iterate](http://common-lisp.net/projects/iterate/index.html) \u3068\u306e\u7d71\u5408\u3092\u8003\u3048\u305f\u3044\u305f\u3081\u3067\u3059\u3002\n\u524d\u8ff0\u306e\u4f8b\u3092\u3001\u305d\u308c\u305e\u308c iterate \u3067\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046:\n\n```cl\n(defun cat ()\n  (iterate:iter\n    (for l next (read-line *standard-input* nil nil))\n    (while l)\n    (write-line l *standard-output*)))\n```\n\n```cl\n(defun fizzbuzz ()\n  (iterate:iter\n    (for x from 1 to 100)\n    (for y = (cond ((= (mod x 15) 0)\n                    \"FizzBuzz\")\n                   ((= (mod x 3) 0)\n                    \"Fizz\")\n                   ((= (mod x 5) 0)\n                    \"Buzz\")\n                   (t\n                    x)))\n    (print y)))\n```\n\n\u3053\u308c\u3092\u898b\u308b\u9650\u308a\u3001 iterate \u3060\u3051\u3067\u3001\u300c\u3082\u3046\u5341\u5206\u305d\u308c\u3063\u307d\u3044\u300d\u8a18\u8ff0\u304c\u51fa\u6765\u3066\u3044\u308b\u3088\u3046\u306b\u611f\u3058\u3089\u308c\u3066\u3057\u307e\u3063\u3066\u304a\u308a\u307e\u3059\u3002\n\n\u306a\u3093\u304b\u4e0a\u624b\u3044\u3053\u3068\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3063\u307d\u304f\u898b\u3048\u308b\u3088\u3046\u306a\u9805\u3092 iterate \u306b\u5c0e\u5165\u3057\u305f\u65b9\u304c\u3001\u65e2\u5b58\u306e\u30b3\u30fc\u30c9\u3068\u3082\u3063\u3068\u878d\u548c\u3067\u304d\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u2026\n\n\u3068\u601d\u3044\u306f\u3058\u3081\u305f\u3068\u3053\u308d\u3067\u3001\u3053\u306e\u8a18\u4e8b\u306f\u7d42\u308f\u308a\u3067\u3059\u3002\n", "tags": ["common-lisp", "streem"]}