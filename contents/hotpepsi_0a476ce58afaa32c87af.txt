{"context": "Google Code Jam\u306e\u96c6\u8a08\u30b5\u30a4\u30c8 Code Jam Statistics \u306b\u4f55\u7a2e\u985e\u306e\u8a00\u8a9e\u3092\u4f7f\u3063\u305f\u304b\u3068\u3044\u3046 Contestants using multiple languages \u306e\u30b3\u30fc\u30ca\u30fc\u304c\u3042\u308a\u3001\u4eca\u5e74\u306f\u305d\u308c\u306b\u6311\u6226\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\u4e88\u9078\u306f27\u6642\u9593\u3042\u308b\u306e\u3067\u3001Small\u3068Large\u3067\u5225\u306e\u8a00\u8a9e\u3092\u4f7f\u3046\u4f59\u88d5\u304c\u3042\u308b\u3002\n\u554f\u984c\u306f\u57fa\u672c\u7684\u306b\u7c21\u5358\u306a\u9806\u306a\u306e\u3067\u3001\u6163\u308c\u3066\u3044\u306a\u3044\u74b0\u5883\u304b\u3089\u9806\u756a\u306b\u4f7f\u3046\u65b9\u91dd\u3067\u3002\n\nClojure (1.8.0)\n\u4e88\u9078\u554f\u984cA Counting Sheep\u306b\u4f7f\u3063\u305f\u3002\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u306e\u5b9f\u884c\nlein-exec\u3092\u4f7f\u3046\u3002\n\u4ee5\u4e0b\u306e\u5185\u5bb9\u3067 $HOME/.lein/profiles.clj \u3092\u4f5c\u6210\u3057\u305f\u3002\n{:user {:plugins [[lein-exec \"0.3.6\"]]}}\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u5b9f\u884c\u3067\u304d\u308b\u3002\n$ lein exec QR_A.clj < in.txt > out.txt\n\n\n\u6570\u5024\u306e\u4e00\u884c\u5165\u529b\n(read-string (read-line))\n\n\n[N, 2N, 3N, ...]\u306e\u7121\u9650\u306e\u9577\u3055\u306e\u914d\u5217\niterate\u3067\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u305f\u3002\n(defn gen[n] (iterate (fn[x] (+ x n)) n))\n\n\n\u6587\u5b57\u5217\u304c\u6587\u5b57\u5217\u3092\u542b\u3080\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\n\u63d0\u51fa\u3057\u305f\u30b3\u30fc\u30c9\u3067\u306f (split (str n) #\"\") \u3067\u4e00\u6587\u5b57\u305a\u3064\u306b\u5206\u96e2\u3057\u3066\u5224\u5b9a\u3057\u3066\u3044\u305f\u306e\u3060\u304c\u3001clojure.string/includes? \u3067\u3044\u3044\u3002Java\u306e\u95a2\u6570\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3082\u3088\u3044\u3002\n\nstdout\u3078\u306e\u51fa\u529b\nformat\u3060\u3068\u578b\u3092\u3042\u308f\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002str\u3060\u3068ans\u304c\u6587\u5b57\u5217\u3067\u3082\u6570\u5024\u3067\u3082\u3044\u3051\u308b\u3002\n(println (format \"Case #%d: %s\" t ans))  ; ans\u306f\u6587\u5b57\u5217\n(println (str \"Case #\" t \": \" ans))  ; ans\u306f\u6570\u5024\u3067\u3082\u3044\u3044\n\n\n\u305d\u306e\u4ed6\n\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u305d\u306e\u307e\u307e\u51fa\u529b\u3059\u308b\u3068 clojure.lang.LazySeq@299945fc \u307f\u305f\u3044\u306a\u6587\u5b57\u5217\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\napply \u3068\u304b\u3067\u8a55\u4fa1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_A.clj\n\nHaskell (GHC 7.10.3)\n\u4e88\u9078\u554f\u984cA Counting Sheep\u306elarge\u306b\u4f7f\u3063\u305f\u3002\n\n\u6570\u5024\u306e\u4e00\u884c\u5165\u529b\nbetaveros \u3055\u3093\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u62dd\u501f\u3057\u305f\u3002\u4e00\u884c\u8aad\u307f\u8fbc\u3093\u3067IO\u578b\u3092\u8fd4\u3059\u3002\nreadInt = (read <$> getLine) :: IO Int\n\n\nT\u56de\u7e70\u308a\u8fd4\u3057\u3066\u51fa\u529b\n\u51fa\u529b\u306e\u30eb\u30fc\u30d7\u306fforM_\u3067\u624b\u7d9a\u304d\u578b\u8a00\u8a9e\u3063\u307d\u304f\u66f8\u3051\u308b\u3002IO\u578b\u306f\u3044\u3063\u305f\u3093\u666e\u901a\u306e\u5909\u6570\u306b\u675f\u7e1b\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3088\u3046\u3060\u3002(\u7406\u89e3\u3057\u3066\u306a\u3044)\n  forM_ [1..t] $ \\i -> do\n    n <- readInt\n    printf \"Case #%d: %s\\n\" i $ solve n\n\n\n\u6570\u5024N\u306b\u6841D\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u5224\u5b9a\nshow n\u3067\u6570\u5024\u3092\u6587\u5b57\u5217\u5316\u3002$\u3092\u4f7f\u3046\u3068\u4f55\u3068\u306a\u304fHaskell\u3092\u4f7f\u3063\u3066\u3044\u308b\u611f\nelem d $ map digitToInt $ show n\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_A.hs\n\nJava (1.8.0)\n\u4e88\u9078\u554f\u984cB Revenge of the Pancakes\u306b\u4f7f\u3063\u305f\u3002\n\n\u6570\u5024\u306e\u4e00\u884c\u5165\u529b\nJava\u306f\u4f55\u3092\u3059\u308b\u306b\u3082\u30b3\u30fc\u30c9\u304c\u9577\u3044(\u504f\u898b)\n    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n    String s = reader.readLine();\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_B.java\n\nScala (2.11.8)\n\u4e88\u9078\u554f\u984cB Revenge of the Pancakes\u306b\u4f7f\u3063\u305f\u3002\n\n\u6570\u5024\u306e\u4e00\u884c\u5165\u529b\n\u6163\u308c\u305f\u3089Java\u3088\u308a\u5feb\u9069\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n        val T = scala.io.StdIn.readLine.toInt\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_B.scala\n\nJavaScript (node.js 4.4.3)\n\u4e88\u9078\u554f\u984cC Coin Jam\u306b\u4f7f\u3063\u305f\u3002\n\n\u5165\u529b\nWindows\u3060\u3068\u7c21\u5358\u306bstdin\u304b\u3089\u5165\u529b\u3059\u308b\u65b9\u6cd5\u304c\u306a\u3055\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u5165\u529b\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\nfs.readFile('./in_c.txt', 'utf8', function (err, text) {\n\n\nN\u9032\u6570\u5bfe\u5fdc\n\u63d0\u51fa\u30b3\u30fc\u30c9\u3067\u306fparseInt\u3092\u4f7f\u3046\u306e\u3092\u5fd8\u308c\u3066\u3057\u307e\u3063\u305f\u3002\nn = parseInt(digits.join(''), radix);\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_C.js\n\nC# (5.0)\n\u4e88\u9078\u554f\u984cC Coin Jam\u306b\u4f7f\u3063\u305f\u3002\n\u5358\u7d14\u306b\u5de8\u5927\u306a\u4e71\u6570\u3092\u751f\u6210\u3057\u3066\u89e3\u3044\u305f\u305f\u3081\u3001large\u306fBigInteger\u304c\u4f7f\u3048\u308bC#\u306b\u3057\u3066\u307f\u305f\u3002\nVisual Studio\u304c\u697d\u3059\u304e\u3066\u611f\u6fc0\u3057\u305f\u3002\n\n\u6570\u5024\u306e\u4e00\u884c\u5165\u529b\n\u5272\u3068Java\u3063\u307d\u3044\u3002\n            TextReader input = Console.In;\n            int T = int.Parse(input.ReadLine());\n\n(static\u304a\u3058\u3055\u3093)\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_C.cs\n\nGo (1.6)\n\u4e88\u9078\u554f\u984cD Fractiles\u306b\u4f7f\u3063\u305f\u3002\n\u3053\u3061\u3089\u304b\u3089\u5165\u529b\u90e8\u3092\u3082\u3089\u3063\u3066\u304d\u305f\u3002\nGo \u8a00\u8a9e\u3067\u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u3080\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u30a2\u30ec --- \u6539\u8a02\u7b2c\u4e8c\u7248\nsmall\u306f1\uff5ek\u3092\u51fa\u529b\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u7279\u5225\u306a\u3053\u3068\u306f\u4f55\u3082\u3057\u3066\u3044\u306a\u3044\u3002\n\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5834\u6240\u3092\u4f5c\u6210\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u304b\u3001\u672a\u4f7f\u7528\u5909\u6570\u304c\u3042\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u306a\u3044\u3068\u304b\u3001\u5c11\u3057\u7e1b\u308a\u304c\u304d\u3064\u304b\u3063\u305f\u3002\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_D.go\n\nPHP (5.6)\nRound 1A A. The Last Word\u306b\u4f7f\u3063\u305f\u3002\n\n\u8907\u6570\u306e\u6570\u5024\u306e\u5165\u529b\n    $params = explode(\" \", fgets(STDIN));\n\n\u3044\u307e\u3069\u304d\u306ePHP\u306farray_push\u3068\u304b\u66f8\u304b\u306a\u304f\u3066\u3044\u3044\u306e\u3067\u697d\u3002(\u3053\u306e\u554f\u984c\u3067\u306f\u672a\u4f7f\u7528)\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/R1A_A.php\n\nPerl (5.22.1)\nRound 1A B. Rank and File\u306b\u4f7f\u3063\u305f\u3002\n\u8d85\u4e45\u3057\u3076\u308a\u3067\u914d\u5217\u3084\u30cf\u30c3\u30b7\u30e5\u3078\u306e\u4ee3\u5165\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u304f\u3066\u3050\u3050\u308a\u307e\u304f\u308a\u3002\n\n\u7d50\u679c\u3092\u30bd\u30fc\u30c8\u3057\u3066\u7a7a\u767d\u533a\u5207\u308a\u3067\u51fa\u529b\n\u3061\u3087\u3063\u3068\u3060\u3051Perl\u3092\u4f7f\u3063\u3066\u3044\u308b\u611f\n    printf \"Case #$t: %s\\n\", join(' ', sort {$a <=> $b} @a);\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/R1A_B.pl\n\nC\nRound 1A C. BFFs\u306b\u4f7f\u3063\u305f\u3002\nRuby\u306epermutation\u3067\u66f8\u3044\u305f\u3089\u5236\u9650\u6642\u9593\u5185\u306b\u7d42\u308f\u3089\u305a\u3001C\u3067\u66f8\u304d\u76f4\u3057\u305f\u3002\n\u87fb\u672c \u306enext_permutation\u3092\u5199\u7d4c\u3002\n\u3053\u306e\u30b3\u30fc\u30c9\u4f55\u56de\u898b\u3066\u3082\u3059\u3054\u3044\u3002\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/R1A_C.c\n\n\u305d\u306e\u4ed6\n@kobae964 \u3055\u3093\u306e Rust\u306e\u7af6\u30d7\u30ed\u30c6\u30f3\u30d7\u30ec \u3092\u898b\u3066Rust\u3082\u4f7f\u3063\u3066\u307f\u305f\u3002\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_A.rs\n\u306a\u3093\u3068\u3044\u3046\u304b\u30b3\u30f3\u30d1\u30a4\u30eb\u901a\u308b\u3060\u3051\u3067\u559c\u3073\u304c\u5473\u308f\u3048\u308b\u8a00\u8a9e\u3002\nRacket\u3067\u3082\u3084\u3063\u3066\u307f\u305f\u304c\u3001main\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u4e00\u82e6\u52b4\u3002\u63d0\u51fa\u3057\u3066\u3044\u308b\u4eba\u305f\u3061\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u306e\u8d77\u52d5\u3067\u306f\u306a\u304f\u3001IDE\u306e\u4e2d\u3067\u3084\u3063\u3066\u3044\u308b\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u3002\u305d\u306e\u3046\u3061\u30ea\u30d9\u30f3\u30b8\u3059\u308b\u3002\n#lang racket\n(provide main)\n(define (main)\n\n\n\u7d50\u679c\n\u4e88\u9078\u306fC++\u3067\u89e3\u3044\u305f\u308aRuby\u3067\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u304b\u3089\u4ed6\u306e\u8a00\u8a9e\u3067\u66f8\u304d\u76f4\u3057\u305f\u308a\u3057\u306612\u6642\u9593\u304f\u3089\u3044\u304b\u304b\u3063\u305f\u3002\nRound 1A\u7d42\u308f\u3063\u305f\u6642\u70b9\u306710\u8a00\u8a9e\u307e\u3067\u304d\u305f\u3002\n\u610f\u5916\u3068\u697d\u3057\u3044\u306e\u3067\u6765\u5e74\u3082\u3053\u306e\u8def\u7dda\u3067\u884c\u304d\u305f\u3044\u3068\u601d\u3046\u3002\n\nGoogle Code Jam\u306e\u96c6\u8a08\u30b5\u30a4\u30c8 [Code Jam Statistics](https://www.go-hero.net/jam/) \u306b\u4f55\u7a2e\u985e\u306e\u8a00\u8a9e\u3092\u4f7f\u3063\u305f\u304b\u3068\u3044\u3046 [Contestants using multiple languages](https://www.go-hero.net/jam/16/multilang) \u306e\u30b3\u30fc\u30ca\u30fc\u304c\u3042\u308a\u3001\u4eca\u5e74\u306f\u305d\u308c\u306b\u6311\u6226\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\u4e88\u9078\u306f27\u6642\u9593\u3042\u308b\u306e\u3067\u3001Small\u3068Large\u3067\u5225\u306e\u8a00\u8a9e\u3092\u4f7f\u3046\u4f59\u88d5\u304c\u3042\u308b\u3002\n\u554f\u984c\u306f\u57fa\u672c\u7684\u306b\u7c21\u5358\u306a\u9806\u306a\u306e\u3067\u3001\u6163\u308c\u3066\u3044\u306a\u3044\u74b0\u5883\u304b\u3089\u9806\u756a\u306b\u4f7f\u3046\u65b9\u91dd\u3067\u3002\n\n# Clojure (1.8.0)\n\n\u4e88\u9078\u554f\u984cA Counting Sheep\u306b\u4f7f\u3063\u305f\u3002\n\n###  \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u306e\u5b9f\u884c\n\nlein-exec\u3092\u4f7f\u3046\u3002\n\u4ee5\u4e0b\u306e\u5185\u5bb9\u3067 $HOME/.lein/profiles.clj \u3092\u4f5c\u6210\u3057\u305f\u3002\n\n```\n{:user {:plugins [[lein-exec \"0.3.6\"]]}}\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u5b9f\u884c\u3067\u304d\u308b\u3002\n\n```bash\n$ lein exec QR_A.clj < in.txt > out.txt\n```\n\n### \u6570\u5024\u306e\u4e00\u884c\u5165\u529b\n\n```clojure\n(read-string (read-line))\n```\n\n### [N, 2N, 3N, ...]\u306e\u7121\u9650\u306e\u9577\u3055\u306e\u914d\u5217\n\niterate\u3067\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u305f\u3002\n\n```clojure\n(defn gen[n] (iterate (fn[x] (+ x n)) n))\n```\n\n### \u6587\u5b57\u5217\u304c\u6587\u5b57\u5217\u3092\u542b\u3080\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\n\n\u63d0\u51fa\u3057\u305f\u30b3\u30fc\u30c9\u3067\u306f (split (str n) #\"\") \u3067\u4e00\u6587\u5b57\u305a\u3064\u306b\u5206\u96e2\u3057\u3066\u5224\u5b9a\u3057\u3066\u3044\u305f\u306e\u3060\u304c\u3001clojure.string/includes? \u3067\u3044\u3044\u3002Java\u306e\u95a2\u6570\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3082\u3088\u3044\u3002\n\n### stdout\u3078\u306e\u51fa\u529b\n\nformat\u3060\u3068\u578b\u3092\u3042\u308f\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002str\u3060\u3068ans\u304c\u6587\u5b57\u5217\u3067\u3082\u6570\u5024\u3067\u3082\u3044\u3051\u308b\u3002\n\n```clojure\n(println (format \"Case #%d: %s\" t ans))  ; ans\u306f\u6587\u5b57\u5217\n(println (str \"Case #\" t \": \" ans))  ; ans\u306f\u6570\u5024\u3067\u3082\u3044\u3044\n```\n\n### \u305d\u306e\u4ed6\n\n\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u305d\u306e\u307e\u307e\u51fa\u529b\u3059\u308b\u3068 clojure.lang.LazySeq@299945fc \u307f\u305f\u3044\u306a\u6587\u5b57\u5217\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\napply \u3068\u304b\u3067\u8a55\u4fa1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_A.clj\n\n# Haskell (GHC 7.10.3)\n\n\u4e88\u9078\u554f\u984cA Counting Sheep\u306elarge\u306b\u4f7f\u3063\u305f\u3002\n\n### \u6570\u5024\u306e\u4e00\u884c\u5165\u529b\n\n[betaveros](https://www.go-hero.net/jam/15/name/betaveros) \u3055\u3093\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u62dd\u501f\u3057\u305f\u3002\u4e00\u884c\u8aad\u307f\u8fbc\u3093\u3067IO\u578b\u3092\u8fd4\u3059\u3002\n\n```haskell\nreadInt = (read <$> getLine) :: IO Int\n```\n\n### T\u56de\u7e70\u308a\u8fd4\u3057\u3066\u51fa\u529b\n\n\u51fa\u529b\u306e\u30eb\u30fc\u30d7\u306fforM_\u3067\u624b\u7d9a\u304d\u578b\u8a00\u8a9e\u3063\u307d\u304f\u66f8\u3051\u308b\u3002IO\u578b\u306f\u3044\u3063\u305f\u3093\u666e\u901a\u306e\u5909\u6570\u306b\u675f\u7e1b\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3088\u3046\u3060\u3002(\u7406\u89e3\u3057\u3066\u306a\u3044)\n\n```haskell\n  forM_ [1..t] $ \\i -> do\n    n <- readInt\n    printf \"Case #%d: %s\\n\" i $ solve n\n```\n\n### \u6570\u5024N\u306b\u6841D\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u5224\u5b9a\n\nshow n\u3067\u6570\u5024\u3092\u6587\u5b57\u5217\u5316\u3002$\u3092\u4f7f\u3046\u3068\u4f55\u3068\u306a\u304fHaskell\u3092\u4f7f\u3063\u3066\u3044\u308b\u611f\n\n```haskell\nelem d $ map digitToInt $ show n\n```\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_A.hs\n\n# Java (1.8.0)\n\n\u4e88\u9078\u554f\u984cB Revenge of the Pancakes\u306b\u4f7f\u3063\u305f\u3002\n\n### \u6570\u5024\u306e\u4e00\u884c\u5165\u529b\n\nJava\u306f\u4f55\u3092\u3059\u308b\u306b\u3082\u30b3\u30fc\u30c9\u304c\u9577\u3044(\u504f\u898b)\n\n```java\n    BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n    String s = reader.readLine();\n```\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_B.java\n\n# Scala (2.11.8)\n\n\u4e88\u9078\u554f\u984cB Revenge of the Pancakes\u306b\u4f7f\u3063\u305f\u3002\n\n### \u6570\u5024\u306e\u4e00\u884c\u5165\u529b\n\n\u6163\u308c\u305f\u3089Java\u3088\u308a\u5feb\u9069\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n```scala\n        val T = scala.io.StdIn.readLine.toInt\n```\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_B.scala\n\n# JavaScript (node.js 4.4.3)\n\n\u4e88\u9078\u554f\u984cC Coin Jam\u306b\u4f7f\u3063\u305f\u3002\n\n### \u5165\u529b\n\nWindows\u3060\u3068\u7c21\u5358\u306bstdin\u304b\u3089\u5165\u529b\u3059\u308b\u65b9\u6cd5\u304c\u306a\u3055\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u5165\u529b\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n```javascript\nfs.readFile('./in_c.txt', 'utf8', function (err, text) {\n```\n\n### N\u9032\u6570\u5bfe\u5fdc\n\n\u63d0\u51fa\u30b3\u30fc\u30c9\u3067\u306fparseInt\u3092\u4f7f\u3046\u306e\u3092\u5fd8\u308c\u3066\u3057\u307e\u3063\u305f\u3002\n\n```javascript\nn = parseInt(digits.join(''), radix);\n```\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_C.js\n\n# C# (5.0)\n\n\u4e88\u9078\u554f\u984cC Coin Jam\u306b\u4f7f\u3063\u305f\u3002\n\u5358\u7d14\u306b\u5de8\u5927\u306a\u4e71\u6570\u3092\u751f\u6210\u3057\u3066\u89e3\u3044\u305f\u305f\u3081\u3001large\u306fBigInteger\u304c\u4f7f\u3048\u308bC#\u306b\u3057\u3066\u307f\u305f\u3002\nVisual Studio\u304c\u697d\u3059\u304e\u3066\u611f\u6fc0\u3057\u305f\u3002\n\n### \u6570\u5024\u306e\u4e00\u884c\u5165\u529b\n\n\u5272\u3068Java\u3063\u307d\u3044\u3002\n\n```csharp\n            TextReader input = Console.In;\n            int T = int.Parse(input.ReadLine());\n```\n\n(static\u304a\u3058\u3055\u3093)\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_C.cs\n\n# Go (1.6)\n\n\u4e88\u9078\u554f\u984cD Fractiles\u306b\u4f7f\u3063\u305f\u3002\n\n\u3053\u3061\u3089\u304b\u3089\u5165\u529b\u90e8\u3092\u3082\u3089\u3063\u3066\u304d\u305f\u3002\n[Go \u8a00\u8a9e\u3067\u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u3080\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u30a2\u30ec --- \u6539\u8a02\u7b2c\u4e8c\u7248](http://qiita.com/tnoda_/items/b503a72eac82862d30c6)\n\nsmall\u306f1\uff5ek\u3092\u51fa\u529b\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u7279\u5225\u306a\u3053\u3068\u306f\u4f55\u3082\u3057\u3066\u3044\u306a\u3044\u3002\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5834\u6240\u3092\u4f5c\u6210\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u304b\u3001\u672a\u4f7f\u7528\u5909\u6570\u304c\u3042\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u306a\u3044\u3068\u304b\u3001\u5c11\u3057\u7e1b\u308a\u304c\u304d\u3064\u304b\u3063\u305f\u3002\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_D.go\n\n# PHP (5.6)\n\nRound 1A A. The Last Word\u306b\u4f7f\u3063\u305f\u3002\n\n### \u8907\u6570\u306e\u6570\u5024\u306e\u5165\u529b\n\n```php\n    $params = explode(\" \", fgets(STDIN));\n```\n\n\u3044\u307e\u3069\u304d\u306ePHP\u306farray_push\u3068\u304b\u66f8\u304b\u306a\u304f\u3066\u3044\u3044\u306e\u3067\u697d\u3002(\u3053\u306e\u554f\u984c\u3067\u306f\u672a\u4f7f\u7528)\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/R1A_A.php\n\n# Perl (5.22.1)\n\nRound 1A B. Rank and File\u306b\u4f7f\u3063\u305f\u3002\n\u8d85\u4e45\u3057\u3076\u308a\u3067\u914d\u5217\u3084\u30cf\u30c3\u30b7\u30e5\u3078\u306e\u4ee3\u5165\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u304f\u3066\u3050\u3050\u308a\u307e\u304f\u308a\u3002\n\n### \u7d50\u679c\u3092\u30bd\u30fc\u30c8\u3057\u3066\u7a7a\u767d\u533a\u5207\u308a\u3067\u51fa\u529b\n\n\u3061\u3087\u3063\u3068\u3060\u3051Perl\u3092\u4f7f\u3063\u3066\u3044\u308b\u611f\n\n```perl\n\tprintf \"Case #$t: %s\\n\", join(' ', sort {$a <=> $b} @a);\n```\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/R1A_B.pl\n\n# C\n\nRound 1A C. BFFs\u306b\u4f7f\u3063\u305f\u3002\nRuby\u306epermutation\u3067\u66f8\u3044\u305f\u3089\u5236\u9650\u6642\u9593\u5185\u306b\u7d42\u308f\u3089\u305a\u3001C\u3067\u66f8\u304d\u76f4\u3057\u305f\u3002\n[\u87fb\u672c](http://www.amazon.co.jp/dp/4839931992) \u306enext_permutation\u3092\u5199\u7d4c\u3002\n\u3053\u306e\u30b3\u30fc\u30c9\u4f55\u56de\u898b\u3066\u3082\u3059\u3054\u3044\u3002\n\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/R1A_C.c\n\n# \u305d\u306e\u4ed6\n\n@kobae964 \u3055\u3093\u306e [Rust\u306e\u7af6\u30d7\u30ed\u30c6\u30f3\u30d7\u30ec](https://github.com/koba-e964/contest/blob/07217152aec769491e2a3787093b805a6d0df4d0/rust.rs) \u3092\u898b\u3066Rust\u3082\u4f7f\u3063\u3066\u307f\u305f\u3002\nhttps://github.com/firewood/topcoder/blob/master/gcj_2016/QR_A.rs\n\u306a\u3093\u3068\u3044\u3046\u304b\u30b3\u30f3\u30d1\u30a4\u30eb\u901a\u308b\u3060\u3051\u3067\u559c\u3073\u304c\u5473\u308f\u3048\u308b\u8a00\u8a9e\u3002\n\nRacket\u3067\u3082\u3084\u3063\u3066\u307f\u305f\u304c\u3001main\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u4e00\u82e6\u52b4\u3002\u63d0\u51fa\u3057\u3066\u3044\u308b\u4eba\u305f\u3061\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u306e\u8d77\u52d5\u3067\u306f\u306a\u304f\u3001IDE\u306e\u4e2d\u3067\u3084\u3063\u3066\u3044\u308b\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u3002\u305d\u306e\u3046\u3061\u30ea\u30d9\u30f3\u30b8\u3059\u308b\u3002\n\n```scheme\n#lang racket\n(provide main)\n(define (main)\n```\n\n# \u7d50\u679c\n\n\u4e88\u9078\u306fC++\u3067\u89e3\u3044\u305f\u308aRuby\u3067\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u304b\u3089\u4ed6\u306e\u8a00\u8a9e\u3067\u66f8\u304d\u76f4\u3057\u305f\u308a\u3057\u306612\u6642\u9593\u304f\u3089\u3044\u304b\u304b\u3063\u305f\u3002\nRound 1A\u7d42\u308f\u3063\u305f\u6642\u70b9\u306710\u8a00\u8a9e\u307e\u3067\u304d\u305f\u3002\n\u610f\u5916\u3068\u697d\u3057\u3044\u306e\u3067\u6765\u5e74\u3082\u3053\u306e\u8def\u7dda\u3067\u884c\u304d\u305f\u3044\u3068\u601d\u3046\u3002\n", "tags": ["\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"]}