{"context": " More than 1 year has passed since last update.This is just a FYI about a proposal: Real ES6 JS with Coffeescript syntax.\nI like coffeescript and livescript in ES5 world. But I also know the great power of ES6 now.\nSo, I'm interested in a possible AltJS in ES6 era.\nI find mark-hahn's cool jsw trial.\nMark-hahn says:\n\"Unlike Coffeescript, JSW does not provide a new language with differing semantics. It is a thin skin over Javascript that only changes the syntax. ... JSW is a great way for Coffeescript users to migrate to real Javascript with ES6.\"\nSo,\nJSW will turn jsw code such as\n\nexample.jsw\n-> func1 arg1, arg2                 \n  var hash1 = key1: val1            \n              key2: val2            \n              key3:                 \n  block                             \n    let x = y                       \n    func2 x                         \n    if q and z                      \n      func1 \"This is text spread    \n             over two lines.\"    \n\n\ninto  Javascript code like that:\n\nexample.js\nfunction func1 (arg1, arg2) {\n  var hash1 = {\n    key1: val1,\n    key2: val2,\n    key3: key3\n  }\n  {\n    let x = y;\n    func2(x);\n    if (q && z) {\n      func1(\"This is text spread \" +\n            \"over two lines.\");\n    }\n  }\n}\n\n\nA possible future ;)\nThis is just a FYI about a proposal:[ Real ES6 JS with Coffeescript syntax](https://discuss.atom.io/t/proposal-real-es6-js-with-coffeescript-syntax/21396).\n\nI like coffeescript and [livescript](http://livescript.net/) in ES5 world. But I also know the great power of ES6 now.\nSo, I'm interested in a possible AltJS in ES6 era.\nI find mark-hahn's cool [jsw](https://github.com/mark-hahn/jsw) trial.\n\nMark-hahn says:\n*\"Unlike Coffeescript, JSW does not provide a new language with differing semantics. It is a thin skin over Javascript that only changes the syntax. ... JSW is a great way for Coffeescript users to migrate to real Javascript with ES6.\"*\n\nSo,\nJSW will turn jsw code such as\n\n```example.jsw\n-> func1 arg1, arg2                 \n  var hash1 = key1: val1            \n              key2: val2            \n              key3:                 \n  block                             \n    let x = y                       \n    func2 x                         \n    if q and z                      \n      func1 \"This is text spread    \n             over two lines.\"    \n```\ninto  Javascript code like that:\n\n```example.js                                    \nfunction func1 (arg1, arg2) {\n  var hash1 = {\n    key1: val1,\n    key2: val2,\n    key3: key3\n  }\n  {\n    let x = y;\n    func2(x);\n    if (q && z) {\n      func1(\"This is text spread \" +\n            \"over two lines.\");\n    }\n  }\n}\n```\n\nA possible future ;)\n", "tags": ["es6", "JavaScript", "JSW", "CoffeeScript"]}