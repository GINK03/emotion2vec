{"context": "\u3053\u3061\u3089\u306fGetWild AdventCalender\u306e22\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u30cd\u30bf\u304c...\u601d\u3044\u6d6e\u304b\u3070\u306a\u3044...\n\n\u3057\u304b\u3057\u3001\u66f8\u304b\u306d\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n\u305d\u3046\u3060go\u306b\u306fgoroutine\u304c\u3042\u3063\u305f\n\u305d\u3053\u3067\u79c1\u306f\u601d\u3044\u51fa\u3057\u307e\u3057\u305f\u3002\u666e\u6bb5\u4f7f\u3063\u3066\u3044\u308bgo\u306b\u306fgoroutine\u304c\u3042\u308b\u3053\u3068\u3092\u3002\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u79c1\u3082\u3044\u3064\u3067\u3082\u6c17\u8efd\u306bWild\u3092\u5f97\u308b\u4e8b\u304c\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u65e9\u901f\u5b9f\u88c5\u3057\u307e\u3059\n\u4eca\u56de\u306fgoroutine\u3092\u7528\u3044\u3066\u6a19\u6e96\u51fa\u529b\u306b\"G\" \"e\" \"t\" \"W\" \"i\" \"l\" \"d\" \u306e\n7\u6587\u5b57\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b1\u6587\u5b57\u62bd\u51fa\u3057\u3001\"GetWild\"\u306b\u306a\u3063\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u4f55\u304b\u304c\u8d77\u3053\u308b\u4e8b\u306b\u3057\u307e\u3059\u3002\npackage main\n\nimport (\n    \"fmt\"\n    \"math/rand\"\n    \"time\"\n)\n\nvar (\n    getWildWords = []string{\"G\", \"e\", \"t\", \"W\", \"i\", \"l\", \"d\"}\n)\n\nfunc main() {\n    c := make(chan string)\n    w := \"\"\n\n    for {\n        go getWildAndTough(c)\n        w += <-c\n        if len(w) == len(getWildWords) {\n            fmt.Println(w)\n            w = \"\"\n        }\n    }\n}\n\nfunc getWildAndTough(c chan string) {\n    rand.Seed(time.Now().UnixNano())\n    c <- getWildWords[rand.Intn(len(getWildWords))]\n}\n\n\u3053\u308c\u3067goroutine\u3092\u4f7f\u7528\u3057\u3066\u3001\u30c1\u30e3\u30f3\u30cd\u30eb\u7d4c\u7531\u30677\u6587\u5b57\u306e\u6587\u5b57\u5217\u3092\u53d7\u3051\u53d6\u308b\u4e8b\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u3053\u308c\u306f if len(r) == len(getWildWords) { \u3042\u305f\u308a\u304c\u304b\u3063\u3053\u60aa\u3044\u306e\u30677\u672c\u306e\u30ef\u30fc\u30ab\u30fc\u3067\u305d\u308c\u305e\u308c1\u6587\u5b57\u3065\u3064\u8fd4\u5374\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\npackage main\n\nimport (\n    \"fmt\"\n    \"math/rand\"\n    \"sync\"\n    \"time\"\n)\n\nvar (\n    getWildWords = []string{\"G\", \"e\", \"t\", \"W\", \"i\", \"l\", \"d\"}\n)\n\nfunc main() {\n    wg := &sync.WaitGroup{}\n    c := make(chan string)\n\n    for {\n        r := \"\"\n        for i := 0; i < 7; i++ {\n            wg.Add(1)\n            go getWildAndTough(wg, c)\n            r += <-c\n        }\n        wg.Wait()\n        fmt.Println(r)\n        r = \"\"\n    }\n    close(c)\n}\n\nfunc getWildAndTough(wg *sync.WaitGroup, c chan string) {\n    defer wg.Done()\n    rand.Seed(time.Now().UnixNano())\n    c <- getWildWords[rand.Intn(len(getWildWords))]\n}\n\nsync\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5229\u7528\u3057\u3001\u305d\u308c\u305e\u308c\u306egoroutine\u304c\u51e6\u7406\u3092\u7d42\u3048\u308b\u307e\u3067\u5f85\u3061\u6587\u5b57\u3092\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u99c5\u306e\u63b2\u793a\u677f\u306bXYZ\u3068\u66f8\u3044\u3066\u5f85\u3063\u3066\u3044\u308b\u6642\u306e\u5fc3\u3067\u66f8\u304d\u307e\u3059\u3002\npackage main\n\nimport (\n    \"fmt\"\n    \"math/rand\"\n    \"os/exec\"\n    \"sync\"\n    \"time\"\n)\n\nvar (\n    getWildWords = []string{\"G\", \"e\", \"t\", \"W\", \"i\", \"l\", \"d\"}\n    g            string\n)\n\nconst (\n    textGetWild = `\n  ____      _    __        ___ _     _\n / ___| ___| |_  \\ \\      / (_) | __| |\n| |  _ / _ \\ __|  \\ \\ /\\ / /| | |/ _  |\n| |_| |  __/ |_    \\ V  V / | | | (_| |\n \\____|\\___|\\__|    \\_/\\_/  |_|_|\\__,_|\n`\n)\n\nfunc init() {\n    for _, v := range getWildWords {\n        g += v\n    }\n}\n\nfunc main() {\n    wg := &sync.WaitGroup{}\n    c := make(chan string)\n\n    for {\n        w := \"\"\n        for i := 0; i < 7; i++ {\n            wg.Add(1)\n            go getWildAndTough(wg, c)\n            w += <-c\n        }\n        wg.Wait()\n        if isGetWild(w) {\n            fmt.Println(textGetWild)\n            exec.Command(\"say\", \"-v\", \"Ava\", w).Run()\n            break\n        }\n        w = \"\"\n    }\n    close(c)\n}\n\nfunc getWildAndTough(wg *sync.WaitGroup, c chan string) {\n    defer wg.Done()\n    rand.Seed(time.Now().UnixNano())\n    c <- getWildWords[rand.Intn(len(getWildWords))]\n}\n\nfunc isGetWild(w string) bool {\n    if g == w {\n        return true\n    }\n    return false\n}\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u4e0b\u8a18\u306e\u3088\u3046\u306bGetWild\u3068AA\u3092\u51fa\u529b\u3055\u305b\u3064\u3064\n\u69c7\u6751\u9999\u306e\u3088\u3046\u306b\u300cGet Wild\u300d\u3068\u558b\u308a\u307e\u3059\u3002\n  ____      _    __        ___ _     _\n / ___| ___| |_  \\ \\      / (_) | __| |\n| |  _ / _ \\ __|  \\ \\ /\\ / /| | |/ _  |\n| |_| |  __/ |_    \\ V  V / | | | (_| |\n \\____|\\___|\\__|    \\_/\\_/  |_|_|\\__,_|\n\n\u7686\u69d8\u30012016\u5e74\u3082\u6b8b\u308a\u77ed\u304f\u306a\u308a\u307e\u3057\u305f\u304c2017\u5e74\u3082\u30bf\u30a4\u30e4\u3092\u5207\u308a\u3064\u3051\u308b\u52e2\u3044\u3067\nGetWild\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u304f\u308c\u3050\u308c\u3082Wild\u306a\u30b3\u30fc\u30c9\u306f\u66f8\u304d\u307e\u305b\u3093\u3088\u3046\u306b\u3002\n\u3053\u3061\u3089\u306f[GetWild AdventCalender](http://qiita.com/advent-calendar/2016/getwild)\u306e22\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\u30cd\u30bf\u304c...\u601d\u3044\u6d6e\u304b\u3070\u306a\u3044...\n![image](https://qiita-image-store.s3.amazonaws.com/0/126/738ee7e6-9d20-6161-fc60-a969fd891a29.png)\n\n\u3057\u304b\u3057\u3001\u66f8\u304b\u306d\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n# \u305d\u3046\u3060go\u306b\u306fgoroutine\u304c\u3042\u3063\u305f\n\n\u305d\u3053\u3067\u79c1\u306f\u601d\u3044\u51fa\u3057\u307e\u3057\u305f\u3002\u666e\u6bb5\u4f7f\u3063\u3066\u3044\u308bgo\u306b\u306f[goroutine](http://golang.jp/effective_go#goroutines\n)\u304c\u3042\u308b\u3053\u3068\u3092\u3002\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u79c1\u3082\u3044\u3064\u3067\u3082\u6c17\u8efd\u306bWild\u3092\u5f97\u308b\u4e8b\u304c\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n\n# \u65e9\u901f\u5b9f\u88c5\u3057\u307e\u3059\n\u4eca\u56de\u306fgoroutine\u3092\u7528\u3044\u3066\u6a19\u6e96\u51fa\u529b\u306b\"G\" \"e\" \"t\" \"W\" \"i\" \"l\" \"d\" \u306e\n7\u6587\u5b57\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b1\u6587\u5b57\u62bd\u51fa\u3057\u3001\"GetWild\"\u306b\u306a\u3063\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u4f55\u304b\u304c\u8d77\u3053\u308b\u4e8b\u306b\u3057\u307e\u3059\u3002\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math/rand\"\n\t\"time\"\n)\n\nvar (\n\tgetWildWords = []string{\"G\", \"e\", \"t\", \"W\", \"i\", \"l\", \"d\"}\n)\n\nfunc main() {\n\tc := make(chan string)\n\tw := \"\"\n\n\tfor {\n\t\tgo getWildAndTough(c)\n\t\tw += <-c\n\t\tif len(w) == len(getWildWords) {\n\t\t\tfmt.Println(w)\n\t\t\tw = \"\"\n\t\t}\n\t}\n}\n\nfunc getWildAndTough(c chan string) {\n\trand.Seed(time.Now().UnixNano())\n\tc <- getWildWords[rand.Intn(len(getWildWords))]\n}\n```\n\n\u3053\u308c\u3067goroutine\u3092\u4f7f\u7528\u3057\u3066\u3001\u30c1\u30e3\u30f3\u30cd\u30eb\u7d4c\u7531\u30677\u6587\u5b57\u306e\u6587\u5b57\u5217\u3092\u53d7\u3051\u53d6\u308b\u4e8b\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u3053\u308c\u306f `if len(r) == len(getWildWords) {` \u3042\u305f\u308a\u304c\u304b\u3063\u3053\u60aa\u3044\u306e\u30677\u672c\u306e\u30ef\u30fc\u30ab\u30fc\u3067\u305d\u308c\u305e\u308c1\u6587\u5b57\u3065\u3064\u8fd4\u5374\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math/rand\"\n\t\"sync\"\n\t\"time\"\n)\n\nvar (\n\tgetWildWords = []string{\"G\", \"e\", \"t\", \"W\", \"i\", \"l\", \"d\"}\n)\n\nfunc main() {\n\twg := &sync.WaitGroup{}\n\tc := make(chan string)\n\n\tfor {\n\t\tr := \"\"\n\t\tfor i := 0; i < 7; i++ {\n\t\t\twg.Add(1)\n\t\t\tgo getWildAndTough(wg, c)\n\t\t\tr += <-c\n\t\t}\n\t\twg.Wait()\n\t\tfmt.Println(r)\n\t\tr = \"\"\n\t}\n\tclose(c)\n}\n\nfunc getWildAndTough(wg *sync.WaitGroup, c chan string) {\n\tdefer wg.Done()\n\trand.Seed(time.Now().UnixNano())\n\tc <- getWildWords[rand.Intn(len(getWildWords))]\n}\n```\n\nsync\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5229\u7528\u3057\u3001\u305d\u308c\u305e\u308c\u306egoroutine\u304c\u51e6\u7406\u3092\u7d42\u3048\u308b\u307e\u3067\u5f85\u3061\u6587\u5b57\u3092\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u99c5\u306e\u63b2\u793a\u677f\u306bXYZ\u3068\u66f8\u3044\u3066\u5f85\u3063\u3066\u3044\u308b\u6642\u306e\u5fc3\u3067\u66f8\u304d\u307e\u3059\u3002\n\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math/rand\"\n\t\"os/exec\"\n\t\"sync\"\n\t\"time\"\n)\n\nvar (\n\tgetWildWords = []string{\"G\", \"e\", \"t\", \"W\", \"i\", \"l\", \"d\"}\n\tg            string\n)\n\nconst (\n\ttextGetWild = `\n  ____      _    __        ___ _     _\n / ___| ___| |_  \\ \\      / (_) | __| |\n| |  _ / _ \\ __|  \\ \\ /\\ / /| | |/ _  |\n| |_| |  __/ |_    \\ V  V / | | | (_| |\n \\____|\\___|\\__|    \\_/\\_/  |_|_|\\__,_|\n`\n)\n\nfunc init() {\n\tfor _, v := range getWildWords {\n\t\tg += v\n\t}\n}\n\nfunc main() {\n\twg := &sync.WaitGroup{}\n\tc := make(chan string)\n\n\tfor {\n\t\tw := \"\"\n\t\tfor i := 0; i < 7; i++ {\n\t\t\twg.Add(1)\n\t\t\tgo getWildAndTough(wg, c)\n\t\t\tw += <-c\n\t\t}\n\t\twg.Wait()\n\t\tif isGetWild(w) {\n\t\t\tfmt.Println(textGetWild)\n\t\t\texec.Command(\"say\", \"-v\", \"Ava\", w).Run()\n\t\t\tbreak\n\t\t}\n\t\tw = \"\"\n\t}\n\tclose(c)\n}\n\nfunc getWildAndTough(wg *sync.WaitGroup, c chan string) {\n\tdefer wg.Done()\n\trand.Seed(time.Now().UnixNano())\n\tc <- getWildWords[rand.Intn(len(getWildWords))]\n}\n\nfunc isGetWild(w string) bool {\n\tif g == w {\n\t\treturn true\n\t}\n\treturn false\n}\n```\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u4e0b\u8a18\u306e\u3088\u3046\u306bGetWild\u3068AA\u3092\u51fa\u529b\u3055\u305b\u3064\u3064\n\u69c7\u6751\u9999\u306e\u3088\u3046\u306b\u300cGet Wild\u300d\u3068\u558b\u308a\u307e\u3059\u3002\n\n```\n  ____      _    __        ___ _     _\n / ___| ___| |_  \\ \\      / (_) | __| |\n| |  _ / _ \\ __|  \\ \\ /\\ / /| | |/ _  |\n| |_| |  __/ |_    \\ V  V / | | | (_| |\n \\____|\\___|\\__|    \\_/\\_/  |_|_|\\__,_|\n```\n\n\u7686\u69d8\u30012016\u5e74\u3082\u6b8b\u308a\u77ed\u304f\u306a\u308a\u307e\u3057\u305f\u304c2017\u5e74\u3082\u30bf\u30a4\u30e4\u3092\u5207\u308a\u3064\u3051\u308b\u52e2\u3044\u3067\nGetWild\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u304f\u308c\u3050\u308c\u3082Wild\u306a\u30b3\u30fc\u30c9\u306f\u66f8\u304d\u307e\u305b\u3093\u3088\u3046\u306b\u3002\n", "tags": ["AdventCalendar2016", "golang", "Go", "GetWild"]}