{"context": "\n\n\u6f22\u5b57\u306e\u5224\u5225\n\u6587\u5b57\u5217\u4e2d\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u6f22\u5b57\u30921\u30641\u3064\u533a\u5225\u3057\u305f\u304b\u3063\u305f\u306e\u3067\n\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u5229\u7528\u3057\u3066\u3084\u3063\u3066\u307f\u305f.\n\u3084\u3063\u305f\u3053\u3068\u5fd8\u308c\u306a\u3044\u305f\u3081\u306e\u81ea\u5206\u7528\u30e1\u30e2.\n\n\u6587\u5b57\u5217\u306b\u542b\u307e\u308c\u308b\u6f22\u5b57\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u30fb\u8868\u793a\n\nsample.cpp\n#include \"stdafx.h\"\n#include <stdio.h>\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\n//s_jis\u306e\u5168\u89d2\u6587\u5b57\u306e1\u30d0\u30a4\u30c8\u76ee\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\nint check_s_jis_zenkaku(unsigned char c){\n   if(((c>=0x81)&&(c<=0x9f))||((c>=0xe0)&&(c<=0xfc)))return 1;\n   else return 0;\n} \n\n//\u5165\u529b\u3055\u308c\u305f\u6587\u5b57\u5217\u306b\u6f22\u5b57\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u8abf\u3079\u308b\u95a2\u6570\n//\u3000\u5f15\u6570\u3000\uff3bchar\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u578b\u5909\u6570\uff3d\n//\u3000\u8fd4\u308a\u5024\uff3b\u6f22\u5b57\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u304c\u5165\u3063\u305fint\u578b\u306evector\uff3d\nvector<int> checkKanji(char *str){\n    unsigned int moji_code;//\u6587\u5b57\u30b3\u30fc\u30c9(16bit\u30b3\u30fc\u30c9)\n    unsigned char first_byte, second_byte;//\u7b2c1byte\u3001\u7b2c2byte(8bit\u30b3\u30fc\u30c9)\n    char *ch;//\u6587\u5b57\u5217\u8d70\u67fb\u7528\n    vector<int> res;//\u8fd4\u308a\u5024\u306e\u30d9\u30af\u30c8\u30eb\n\n    ch = str; //\u6587\u5b57\u5217\u53d7\u3051\u53d6\u308a\n    while(*(ch) != '\\0'){\n        first_byte  = (unsigned char)*ch;//\u7b2c1\u30d0\u30a4\u30c8\u306b\u5909\u63db\n        second_byte = (unsigned char)*(ch+1);//\u7b2c2\u30d0\u30a4\u30c8\u306b\u5909\u63db\n        moji_code   = first_byte*256 + second_byte;//\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u5909\u63db\n\n        //\u6587\u5b57\u30b3\u30fc\u30c9\u304c\uff08s_jis\u306e\uff09\u6f22\u5b57\u306e\u90e8\u5206\u306a\u3089vector\u306b\u683c\u7d0d\n        if( ((moji_code >= 0x889f) && (moji_code<=0x9872)) || ((moji_code >= 0x989f) && (moji_code<=0xEAA4)) && \n              ((second_byte>=0x40) && (second_byte<=0xFC)) &&  ((first_byte < 0xA0) || (first_byte > 0xDF)) && (second_byte!=0x7F)\n            ){\n                res.push_back(moji_code);\n        }\n        //\u5168\u89d2\u304b\u534a\u89d2\u304b\u3067\u9032\u3081\u308b\u30d0\u30a4\u30c8\u6570\u3092\u5909\u3048\u308b\n        if(check_s_jis_zenkaku(*ch)==1){ ch+=2; }\n        else{ ch+=1; }\n    }\n    return res;\n}\n\nvoid main(){\n    int ii;\n    string str;\n    vector<int> code_list;\n    cout << \"q\u3067\u7d42\u4e86...\" << endl;\n    while(true){\n        cout << \"input >> \"; cin >> str;//\u6587\u5b57\u5217\u306e\u53d6\u5f97\n        if(str==\"q\" || str==\"\uff51\"){ break; }//\u7d42\u4e86\u51e6\u7406\n        code_list = checkKanji(const_cast<char*>(str.c_str()));\n        //\u53d6\u5f97\u3057\u305f\u6587\u5b57\u30b3\u30fc\u30c9\u309216\u9032\u6570\u3067\u8868\u793a\n        if(code_list.size()==0){ continue; }\n        for(ii=0; ii<code_list.size(); ii++){ cout << \"[\" << hex << code_list[ii] << dec << \"]\" << \"\\t\"; }\n        cout << endl;\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\n\nq\u3067\u7d42\u4e86...\ninput >> \u72ac\n[8ca2]\ninput >> \u3044\u306c\ninput >> inu\ninput >> inu\u72ac\n[8ca2]\ninput >> \u72ac\u732b\n[8ca2]  [944c]\ninput >> \u72ac\u732b\u72ac\n[8ca2]  [944c]  [8ca2]\n\n\n\u611f\u60f3\ns-jis\u3068euc\u3067\u88ab\u3063\u3066\u308b\u90e8\u5206\u304c\u3042\u308b\u305d\u3046\u3067\u4eca\u56de\u306f\u3068\u308a\u3042\u3048\u305as-jis\u3067\u3084\u3063\u3066\u307f\u305f.\n\u6700\u5f8c\u306b\u74b0\u5883\u3092... win7 64bit, visual studio 2010 \n\u8272\u3005\u3068\u62d9\u3044\u304c\u5099\u5fd8\u9332\u3060\u3057\u6700\u521d\u306e\u6295\u7a3f\u306f\u3053\u3093\u306a\u611f\u3058\u3067.\n\n\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u30da\u30fc\u30b8\nhttp://www.tohoho-web.com/wwwkanji.htm\nhttp://vivi.dyndns.org/tech/cpp/binHex.html\nhttp://www5f.biglobe.ne.jp/~fuku-labo/library/program/cpp/2/076.htm\n#\u6f22\u5b57\u306e\u5224\u5225\n\u6587\u5b57\u5217\u4e2d\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u6f22\u5b57\u30921\u30641\u3064\u533a\u5225\u3057\u305f\u304b\u3063\u305f\u306e\u3067\n\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u5229\u7528\u3057\u3066\u3084\u3063\u3066\u307f\u305f.\n\u3084\u3063\u305f\u3053\u3068\u5fd8\u308c\u306a\u3044\u305f\u3081\u306e\u81ea\u5206\u7528\u30e1\u30e2.\n##\u6587\u5b57\u5217\u306b\u542b\u307e\u308c\u308b\u6f22\u5b57\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u30fb\u8868\u793a\n```cpp:sample.cpp\n#include \"stdafx.h\"\n#include <stdio.h>\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\n//s_jis\u306e\u5168\u89d2\u6587\u5b57\u306e1\u30d0\u30a4\u30c8\u76ee\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\nint check_s_jis_zenkaku(unsigned char c){\n   if(((c>=0x81)&&(c<=0x9f))||((c>=0xe0)&&(c<=0xfc)))return 1;\n   else return 0;\n} \n\n//\u5165\u529b\u3055\u308c\u305f\u6587\u5b57\u5217\u306b\u6f22\u5b57\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u8abf\u3079\u308b\u95a2\u6570\n//\u3000\u5f15\u6570\u3000\uff3bchar\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u578b\u5909\u6570\uff3d\n//\u3000\u8fd4\u308a\u5024\uff3b\u6f22\u5b57\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u304c\u5165\u3063\u305fint\u578b\u306evector\uff3d\nvector<int> checkKanji(char *str){\n\tunsigned int moji_code;//\u6587\u5b57\u30b3\u30fc\u30c9(16bit\u30b3\u30fc\u30c9)\n\tunsigned char first_byte, second_byte;//\u7b2c1byte\u3001\u7b2c2byte(8bit\u30b3\u30fc\u30c9)\n\tchar *ch;//\u6587\u5b57\u5217\u8d70\u67fb\u7528\n\tvector<int> res;//\u8fd4\u308a\u5024\u306e\u30d9\u30af\u30c8\u30eb\n\n\tch = str; //\u6587\u5b57\u5217\u53d7\u3051\u53d6\u308a\n\twhile(*(ch) != '\\0'){\n\t\tfirst_byte\t= (unsigned char)*ch;//\u7b2c1\u30d0\u30a4\u30c8\u306b\u5909\u63db\n\t\tsecond_byte = (unsigned char)*(ch+1);//\u7b2c2\u30d0\u30a4\u30c8\u306b\u5909\u63db\n\t\tmoji_code\t= first_byte*256 + second_byte;//\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u5909\u63db\n\n\t\t//\u6587\u5b57\u30b3\u30fc\u30c9\u304c\uff08s_jis\u306e\uff09\u6f22\u5b57\u306e\u90e8\u5206\u306a\u3089vector\u306b\u683c\u7d0d\n\t\tif( ((moji_code >= 0x889f) && (moji_code<=0x9872)) || ((moji_code >= 0x989f) && (moji_code<=0xEAA4)) && \n\t\t\t  ((second_byte>=0x40) && (second_byte<=0xFC)) &&  ((first_byte < 0xA0) || (first_byte > 0xDF)) && (second_byte!=0x7F)\n\t\t\t){\n\t\t\t\tres.push_back(moji_code);\n\t\t}\n\t\t//\u5168\u89d2\u304b\u534a\u89d2\u304b\u3067\u9032\u3081\u308b\u30d0\u30a4\u30c8\u6570\u3092\u5909\u3048\u308b\n\t\tif(check_s_jis_zenkaku(*ch)==1){ ch+=2; }\n\t\telse{ ch+=1; }\n\t}\n\treturn res;\n}\n\nvoid main(){\n\tint ii;\n\tstring str;\n\tvector<int> code_list;\n\tcout << \"q\u3067\u7d42\u4e86...\" << endl;\n\twhile(true){\n\t\tcout << \"input >> \"; cin >> str;//\u6587\u5b57\u5217\u306e\u53d6\u5f97\n\t\tif(str==\"q\" || str==\"\uff51\"){ break; }//\u7d42\u4e86\u51e6\u7406\n\t\tcode_list = checkKanji(const_cast<char*>(str.c_str()));\n        //\u53d6\u5f97\u3057\u305f\u6587\u5b57\u30b3\u30fc\u30c9\u309216\u9032\u6570\u3067\u8868\u793a\n\t\tif(code_list.size()==0){ continue; }\n\t\tfor(ii=0; ii<code_list.size(); ii++){ cout << \"[\" << hex << code_list[ii] << dec << \"]\" << \"\\t\"; }\n\t\tcout << endl;\n\t}\n}\n```\n\n\u5b9f\u884c\u7d50\u679c\n* * *\nq\u3067\u7d42\u4e86...\ninput >> \u72ac\n[8ca2]\ninput >> \u3044\u306c\ninput >> inu\ninput >> inu\u72ac\n[8ca2]\ninput >> \u72ac\u732b\n[8ca2]  [944c]\ninput >> \u72ac\u732b\u72ac\n[8ca2]  [944c]  [8ca2]\n* * *\n##\u611f\u60f3\ns-jis\u3068euc\u3067\u88ab\u3063\u3066\u308b\u90e8\u5206\u304c\u3042\u308b\u305d\u3046\u3067\u4eca\u56de\u306f\u3068\u308a\u3042\u3048\u305as-jis\u3067\u3084\u3063\u3066\u307f\u305f.\n\u6700\u5f8c\u306b\u74b0\u5883\u3092... win7 64bit, visual studio 2010 \n\n\u8272\u3005\u3068\u62d9\u3044\u304c\u5099\u5fd8\u9332\u3060\u3057\u6700\u521d\u306e\u6295\u7a3f\u306f\u3053\u3093\u306a\u611f\u3058\u3067.\n###\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u30da\u30fc\u30b8\nhttp://www.tohoho-web.com/wwwkanji.htm\nhttp://vivi.dyndns.org/tech/cpp/binHex.html\nhttp://www5f.biglobe.ne.jp/~fuku-labo/library/program/cpp/2/076.htm\n", "tags": ["C++", "\u6587\u5b57\u30b3\u30fc\u30c9", "\u6587\u5b57\u5217"]}