{"tags": ["Linux", "zynq", "Cache", "ARM"], "context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u6700\u8fd1\u306eCPU\u306b\u306f\u4f8b\u5916\u306a\u304f\u547d\u4ee4\u30ad\u30e3\u30c3\u30b7\u30e5\u3068\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\u3042\u307e\u308a\u306b\u3082\u4e00\u822c\u7684\u306b\u306a\u308a\u3059\u304e\u3066\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u3069\u306e\u304f\u3089\u3044\u52b9\u679c\u304c\u3042\u308b\u306e\u304b\u77e5\u3089\u306a\u3044\u4eba\u3082\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u5148\u65e5\u6295\u7a3f\u3057\u305f Linux\u3067\u30e6\u30fc\u30b6\u30fc\u7a7a\u9593\u3067\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u30e1\u30e2\u30ea\u3092\u5171\u6709\u3059\u308b\u305f\u3081\u306e\u30c7\u30d0\u30a4\u30b9\u30c9\u30e9\u30a4\u30d0 \u3067\u7d39\u4ecb\u3057\u305f udmabuf\u3092\u4f7f\u3048\u3070\u3001\u30d0\u30c3\u30d5\u30a1\u306e\u30e1\u30e2\u30ea\u7a7a\u9593\u306e\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\u3053\u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u3001\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u3069\u306e\u304f\u3089\u3044\u52b9\u679c\u304c\u3042\u308b\u304b\u6e2c\u5b9a\u3057\u307e\u3057\u305f\u3002\n\n\u6e2c\u5b9a\u74b0\u5883\n\n\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2 : ZYBO Zynq-7000\nCPU : ARM Cortex-A9\n\u30ec\u30d9\u30eb1 \u30ad\u30e3\u30c3\u30b7\u30e5 : 32KB  4\u30a6\u30a7\u30a4\u30bb\u30c3\u30c8\u30a2\u30bd\u30b7\u30a8\u30a4\u30c6\u30a3\u30d6\n\u30ec\u30d9\u30eb2 \u30ad\u30e3\u30c3\u30b7\u30e5 : 512KB 8\u30a6\u30a7\u30a4\u30bb\u30c3\u30c8\u30a2\u30bd\u30b7\u30a8\u30a4\u30c6\u30a3\u30d6\n\u5916\u90e8\u30e1\u30e2\u30ea : DDR3 512MB x32 1050Mbps\n\u52d5\u4f5c\u5468\u6ce2\u6570 : 650MHz\nOS : Linux Kernel Version 3.8\n\n\n\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u8a2d\u5b9a\nudmabuf \u3067\u51fa\u6765\u308b\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u8a2d\u5b9a\u306f\u6b21\u306e\uff14\u901a\u308a\u3002\u8a73\u7d30\u306f udmabuf \u306e\u8aac\u660e\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u3042\u308a\n\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u306a\u3057 + \u30e9\u30a4\u30c8\u30b3\u30f3\u30d0\u30a4\u30f3\u306a\u3057\n\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u306a\u3057 + \u30e9\u30a4\u30c8\u30b3\u30f3\u30d0\u30a4\u30f3\u3042\u308a\nDMA\u30b3\u30d2\u30fc\u30ec\u30f3\u30b7\u30e2\u30fc\u30c9\n\n\u305f\u3060\u3057\u3001\u6700\u5f8c\u306eDMA\u30b3\u30d2\u30fc\u30ec\u30f3\u30b7\u30e2\u30fc\u30c9\u306b\u95a2\u3057\u3066\u306f\u672a\u3060\u8a73\u7d30\u306f\u4e0d\u660e\u3067\u3059\u3002\u4eca\u56de\u306e\u6e2c\u5b9a\u3067\u306f\u9664\u5916\u3057\u307e\u3059\u3002\n\u30e9\u30a4\u30c8\u30b3\u30f3\u30d0\u30a4\u30f3\u306f\u3001\u9023\u7d9a\u3057\u305f\u30a2\u30c9\u30ec\u30b9\u306b\u9023\u7d9a\u3057\u3066\u66f8\u304d\u8fbc\u3080\u5834\u5408\u3001\u305d\u308c\u3089\u306e\u66f8\u304d\u8fbc\u307f\u3092\u307e\u3068\u3081\u3066\u884c\u3044\u307e\u3059\u3002\n\n\u6e2c\u5b9a\u7528\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\n\u6b21\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8d70\u3089\u305b\u3066\u51e6\u7406\u6642\u9593\u3092\u8a08\u6e2c\u3057\u307e\u3057\u305f\u3002\n\nudmabuf_test.c\nint check_buf(unsigned char* buf, unsigned int size)   \n{   \n    int m = 256;   \n    int n = 10;   \n    int i, k;   \n    int error_count = 0;   \n    while(--n > 0) {   \n      for(i = 0; i < size; i = i + m) {   \n        m = (i+256 < size) ? 256 : (size-i);   \n        for(k = 0; k < m; k++) {   \n          buf[i+k] = (k & 0xFF);   \n        }   \n        for(k = 0; k < m; k++) {   \n          if (buf[i+k] != (k & 0xFF)) {   \n            error_count++;   \n          }   \n        }   \n      }   \n    }   \n    return error_count;   \n}   \nint clear_buf(unsigned char* buf, unsigned int size)\n{\n    int n = 100;\n    int error_count = 0;\n    while(--n > 0) {\n      memset((void*)buf, 0, size);\n    }\n    return error_count;\n}\n\n\n\n\u6e2c\u5b9a\u7d50\u679c\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\n\u30e9\u30a4\u30c8\u30b3\u30f3\u30d0\u30a4\u30f3\nDMA\u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\n\n\n1MByte\n5MByte\n10MByte\n\n\ncheck_buf\n\u6709\u52b9\n-\n0.437[sec]\n2.171[sec]\n4.375[sec]\n\n\n\u7121\u52b9\n\u7121\n2.283[sec]\n11.414[sec]\n22.830[sec]\n\n\n\u6709\n1.655[sec]\n8.391[sec]\n16.587[sec]\n\n\nclear_buf\n\u6709\u52b9\n-\n0.067[sec]\n0.362[sec]\n0.717[sec]\n\n\n\u7121\u52b9\n\u7121\n0.914[sec]\n4.563[sec]\n9.128[sec]\n\n\n\u6709\n0.062[sec]\n0.310[sec]\n0.621[sec]\n\n\n\n## \u306f\u3058\u3081\u306b ##\n\n\u6700\u8fd1\u306eCPU\u306b\u306f\u4f8b\u5916\u306a\u304f\u547d\u4ee4\u30ad\u30e3\u30c3\u30b7\u30e5\u3068\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\u3042\u307e\u308a\u306b\u3082\u4e00\u822c\u7684\u306b\u306a\u308a\u3059\u304e\u3066\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u3069\u306e\u304f\u3089\u3044\u52b9\u679c\u304c\u3042\u308b\u306e\u304b\u77e5\u3089\u306a\u3044\u4eba\u3082\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5148\u65e5\u6295\u7a3f\u3057\u305f [Linux\u3067\u30e6\u30fc\u30b6\u30fc\u7a7a\u9593\u3067\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u30e1\u30e2\u30ea\u3092\u5171\u6709\u3059\u308b\u305f\u3081\u306e\u30c7\u30d0\u30a4\u30b9\u30c9\u30e9\u30a4\u30d0](http://qiita.com/ikwzm/items/cc1bb33ff43a491440ea) \u3067\u7d39\u4ecb\u3057\u305f [udmabuf](http://github.com/ikwzm/udmabuf)\u3092\u4f7f\u3048\u3070\u3001\u30d0\u30c3\u30d5\u30a1\u306e\u30e1\u30e2\u30ea\u7a7a\u9593\u306e\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\u3053\u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u3001\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u3069\u306e\u304f\u3089\u3044\u52b9\u679c\u304c\u3042\u308b\u304b\u6e2c\u5b9a\u3057\u307e\u3057\u305f\u3002\n\n## \u6e2c\u5b9a\u74b0\u5883 ##\n\n * \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2 : ZYBO Zynq-7000\n * CPU : ARM Cortex-A9\n * \u30ec\u30d9\u30eb1 \u30ad\u30e3\u30c3\u30b7\u30e5 : 32KB  4\u30a6\u30a7\u30a4\u30bb\u30c3\u30c8\u30a2\u30bd\u30b7\u30a8\u30a4\u30c6\u30a3\u30d6\n * \u30ec\u30d9\u30eb2 \u30ad\u30e3\u30c3\u30b7\u30e5 : 512KB 8\u30a6\u30a7\u30a4\u30bb\u30c3\u30c8\u30a2\u30bd\u30b7\u30a8\u30a4\u30c6\u30a3\u30d6\n * \u5916\u90e8\u30e1\u30e2\u30ea : DDR3 512MB x32 1050Mbps\n * \u52d5\u4f5c\u5468\u6ce2\u6570 : 650MHz\n * OS : Linux Kernel Version 3.8\n\n## \u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u8a2d\u5b9a ##\n\nudmabuf \u3067\u51fa\u6765\u308b\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u8a2d\u5b9a\u306f\u6b21\u306e\uff14\u901a\u308a\u3002\u8a73\u7d30\u306f udmabuf \u306e\u8aac\u660e\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n  * \u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u3042\u308a\n\n  * \u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u306a\u3057 + \u30e9\u30a4\u30c8\u30b3\u30f3\u30d0\u30a4\u30f3\u306a\u3057\n\n  * \u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u306a\u3057 + \u30e9\u30a4\u30c8\u30b3\u30f3\u30d0\u30a4\u30f3\u3042\u308a\n\n  * DMA\u30b3\u30d2\u30fc\u30ec\u30f3\u30b7\u30e2\u30fc\u30c9\n\n\u305f\u3060\u3057\u3001\u6700\u5f8c\u306eDMA\u30b3\u30d2\u30fc\u30ec\u30f3\u30b7\u30e2\u30fc\u30c9\u306b\u95a2\u3057\u3066\u306f\u672a\u3060\u8a73\u7d30\u306f\u4e0d\u660e\u3067\u3059\u3002\u4eca\u56de\u306e\u6e2c\u5b9a\u3067\u306f\u9664\u5916\u3057\u307e\u3059\u3002\n\n\u30e9\u30a4\u30c8\u30b3\u30f3\u30d0\u30a4\u30f3\u306f\u3001\u9023\u7d9a\u3057\u305f\u30a2\u30c9\u30ec\u30b9\u306b\u9023\u7d9a\u3057\u3066\u66f8\u304d\u8fbc\u3080\u5834\u5408\u3001\u305d\u308c\u3089\u306e\u66f8\u304d\u8fbc\u307f\u3092\u307e\u3068\u3081\u3066\u884c\u3044\u307e\u3059\u3002\n\n## \u6e2c\u5b9a\u7528\u306e\u30d7\u30ed\u30b0\u30e9\u30e0 ##\n\n\u6b21\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8d70\u3089\u305b\u3066\u51e6\u7406\u6642\u9593\u3092\u8a08\u6e2c\u3057\u307e\u3057\u305f\u3002\n\n```C:udmabuf_test.c\nint check_buf(unsigned char* buf, unsigned int size)   \n{   \n    int m = 256;   \n    int n = 10;   \n    int i, k;   \n    int error_count = 0;   \n    while(--n > 0) {   \n      for(i = 0; i < size; i = i + m) {   \n        m = (i+256 < size) ? 256 : (size-i);   \n        for(k = 0; k < m; k++) {   \n          buf[i+k] = (k & 0xFF);   \n        }   \n        for(k = 0; k < m; k++) {   \n          if (buf[i+k] != (k & 0xFF)) {   \n            error_count++;   \n          }   \n        }   \n      }   \n    }   \n    return error_count;   \n}   \nint clear_buf(unsigned char* buf, unsigned int size)\n{\n    int n = 100;\n    int error_count = 0;\n    while(--n > 0) {\n      memset((void*)buf, 0, size);\n    }\n    return error_count;\n}\n```\n\n## \u6e2c\u5b9a\u7d50\u679c ##\n\n<table border=\"2\">\n  <tr>\n    <td align=\"center\" rowspan=\"2\">\u30d7\u30ed\u30b0\u30e9\u30e0</td>\n    <td align=\"center\" rowspan=\"2\">\u30c7\u30fc\u30bf<br>\u30ad\u30e3\u30c3\u30b7\u30e5</td>\n    <td align=\"center\" rowspan=\"2\">\u30e9\u30a4\u30c8<br>\u30b3\u30f3\u30d0\u30a4\u30f3</td>\n    <td align=\"center\" colspan=\"3\">DMA\u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba</td>\n  </tr>\n  <tr>\n    <td align=\"center\">1MByte</td>\n    <td align=\"center\">5MByte</td>\n    <td align=\"center\">10MByte</td>\n  </tr>\n  <tr>\n    <td rowspan=\"3\">check_buf</td>\n    <td>\u6709\u52b9</td>\n    <td>-</td>\n    <td align=\"right\">0.437[sec]</td>\n    <td align=\"right\">2.171[sec]</td>\n    <td align=\"right\">4.375[sec]</td>\n  </tr>\n  <tr>\n    <td rowspan=\"2\">\u7121\u52b9</td>\n    <td>\u7121</td>\n    <td align=\"right\">2.283[sec]</td>\n    <td align=\"right\">11.414[sec]</td>\n    <td align=\"right\">22.830[sec]</td>\n  </tr>\n  <tr>\n    <td>\u6709</td>\n    <td align=\"right\">1.655[sec]</td>\n    <td align=\"right\">8.391[sec]</td>\n    <td align=\"right\">16.587[sec]</td>\n  </tr>\n  <tr>\n    <td rowspan=\"3\">clear_buf</td>\n    <td>\u6709\u52b9</td>\n    <td>-</td>\n    <td align=\"right\">0.067[sec]</td>\n    <td align=\"right\">0.362[sec]</td>\n    <td align=\"right\">0.717[sec]</td>\n  </tr>\n  <tr>\n    <td rowspan=\"2\">\u7121\u52b9</td>\n    <td>\u7121</td>\n    <td align=\"right\">0.914[sec]</td>\n    <td align=\"right\">4.563[sec]</td>\n    <td align=\"right\">9.128[sec]</td>\n  </tr>\n  <tr>\n    <td>\u6709</td>\n    <td align=\"right\">0.062[sec]</td>\n    <td align=\"right\">0.310[sec]</td>\n    <td align=\"right\">0.621[sec]</td>\n  </tr>\n</table>\n\n\n"}