{"context": " More than 1 year has passed since last update.Qiita\u3067Python\u306ePackage\u95a2\u9023\u306e\u60c5\u5831\u3092\u66f8\u304f\u3068\u304d\u306b\u3001\nPackage\u304c\u591a\u3044\u3068Github\u3068PyPI\u3092\u4e21\u65b9\u307f\u3066\u3001\n\u624b\u52d5\u3067\u30c6\u30fc\u30d6\u30eb\u306b\u3059\u308b\u306e\u306f\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3057\u307e\u3057\u305f\u3002\nPython3\u7cfb\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\nimport os\nimport sys\nimport datetime\nimport argparse\nimport requests\nimport bs4\n\n\nclass PackageTable(object):\n    def __init__(self,\n                 github_url,\n                 pypi_url,\n                 watch_count,\n                 star_count,\n                 fork_count,\n                 py_target,\n                 download_last_month,\n                 ):\n        self.github_url = github_url\n        self.pypi_url = pypi_url\n        self.watch_count = watch_count\n        self.star_count = star_count\n        self.fork_count = fork_count\n        self.py_target = py_target\n        self.download_last_month = download_last_month\n\n    def show(self):\n        table_data = (\n            ('Github URL', self.github_url),\n            ('PyPI URL', self.pypi_url),\n            ('watch\u6570', self.watch_count),\n            ('star\u6570', self.star_count),\n            ('fork\u6570', self.fork_count),\n            ('\u5bfe\u8c61version', self.py_target),\n            ('download last month', self.download_last_month),\n        )\n\n        header_max = max(len(header) for header, data in table_data)\n        data_max = max(len(data) for header, data in table_data)\n        header_pad_len = header_max + 10\n        data_pad_len = data_max + 10\n\n        header_pad_len = header_pad_len + 1 if header_pad_len % 2 else header_pad_len\n        data_pad_len = data_pad_len + 1 if data_pad_len % 2 else data_pad_len\n\n        fmt = '|{{:<{}}}|{{:<{}}}|'.format(header_pad_len, data_pad_len)\n        print(fmt.format('  \u9805\u76ee', datetime.datetime.now().strftime('  \u8a73\u7d30(%Y/%m/%d\u306e\u60c5\u5831)')))\n        print(fmt.format('-'*header_pad_len, '-'*data_pad_len))\n        for header, data in table_data:\n            print(fmt.format(header, data))\n\n\ndef main(argv=sys.argv[1:]):\n    parser = argparse.ArgumentParser()\n    parser.add_argument('url')\n    args = parser.parse_args(argv)\n\n    github_url = args.url\n    package_name = os.path.basename(github_url)\n    pypi_url = 'https://pypi.python.org/pypi/{}'.format(package_name)\n    res = requests.get(pypi_url)\n    py_target = '-'\n    download_last_month = '-'\n    if res.status_code == 200:\n        soup = bs4.BeautifulSoup(res.text)\n        download_last_month = soup.select('.nodot li span')[2].text.strip()\n        versions = [t.text.strip().strip('Programming Language :: Python ::')\n                    for t in soup.select('ul.nodot li a')\n                    if t.text.strip().startswith('Programming Language :: Python ::')]\n        py_target = ', '.join(versions) if versions else '???'\n    else:\n        pypi_url = '-'\n\n    res = requests.get(github_url)\n    soup = bs4.BeautifulSoup(res.text)\n    tags = soup.find_all('a', class_='social-count')\n    watch_count = tags[0].text.strip()\n    star_count = tags[1].text.strip()\n    fork_count = tags[2].text.strip()\n\n    table = PackageTable(\n        github_url=github_url,\n        pypi_url=pypi_url,\n        watch_count=watch_count,\n        star_count=star_count,\n        fork_count=fork_count,\n        py_target=py_target,\n        download_last_month=download_last_month,\n        )\n    table.show()\n\nif __name__ == '__main__':\n    sys.exit(main())\n\ngist\u306b\u3057\u3066\u3042\u308b\u306e\u3067\u3053\u3061\u3089\u3082\u3069\u3046\u305e\nhttps://gist.github.com/TakesxiSximada/38731e50428f7e163546\nQiita\u3067Python\u306ePackage\u95a2\u9023\u306e\u60c5\u5831\u3092\u66f8\u304f\u3068\u304d\u306b\u3001\nPackage\u304c\u591a\u3044\u3068Github\u3068PyPI\u3092\u4e21\u65b9\u307f\u3066\u3001\n\u624b\u52d5\u3067\u30c6\u30fc\u30d6\u30eb\u306b\u3059\u308b\u306e\u306f\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3057\u307e\u3057\u305f\u3002\nPython3\u7cfb\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\n```\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\nimport os\nimport sys\nimport datetime\nimport argparse\nimport requests\nimport bs4\n\n\nclass PackageTable(object):\n    def __init__(self,\n                 github_url,\n                 pypi_url,\n                 watch_count,\n                 star_count,\n                 fork_count,\n                 py_target,\n                 download_last_month,\n                 ):\n        self.github_url = github_url\n        self.pypi_url = pypi_url\n        self.watch_count = watch_count\n        self.star_count = star_count\n        self.fork_count = fork_count\n        self.py_target = py_target\n        self.download_last_month = download_last_month\n\n    def show(self):\n        table_data = (\n            ('Github URL', self.github_url),\n            ('PyPI URL', self.pypi_url),\n            ('watch\u6570', self.watch_count),\n            ('star\u6570', self.star_count),\n            ('fork\u6570', self.fork_count),\n            ('\u5bfe\u8c61version', self.py_target),\n            ('download last month', self.download_last_month),\n        )\n\n        header_max = max(len(header) for header, data in table_data)\n        data_max = max(len(data) for header, data in table_data)\n        header_pad_len = header_max + 10\n        data_pad_len = data_max + 10\n\n        header_pad_len = header_pad_len + 1 if header_pad_len % 2 else header_pad_len\n        data_pad_len = data_pad_len + 1 if data_pad_len % 2 else data_pad_len\n\n        fmt = '|{{:<{}}}|{{:<{}}}|'.format(header_pad_len, data_pad_len)\n        print(fmt.format('  \u9805\u76ee', datetime.datetime.now().strftime('  \u8a73\u7d30(%Y/%m/%d\u306e\u60c5\u5831)')))\n        print(fmt.format('-'*header_pad_len, '-'*data_pad_len))\n        for header, data in table_data:\n            print(fmt.format(header, data))\n\n\ndef main(argv=sys.argv[1:]):\n    parser = argparse.ArgumentParser()\n    parser.add_argument('url')\n    args = parser.parse_args(argv)\n\n    github_url = args.url\n    package_name = os.path.basename(github_url)\n    pypi_url = 'https://pypi.python.org/pypi/{}'.format(package_name)\n    res = requests.get(pypi_url)\n    py_target = '-'\n    download_last_month = '-'\n    if res.status_code == 200:\n        soup = bs4.BeautifulSoup(res.text)\n        download_last_month = soup.select('.nodot li span')[2].text.strip()\n        versions = [t.text.strip().strip('Programming Language :: Python ::')\n                    for t in soup.select('ul.nodot li a')\n                    if t.text.strip().startswith('Programming Language :: Python ::')]\n        py_target = ', '.join(versions) if versions else '???'\n    else:\n        pypi_url = '-'\n\n    res = requests.get(github_url)\n    soup = bs4.BeautifulSoup(res.text)\n    tags = soup.find_all('a', class_='social-count')\n    watch_count = tags[0].text.strip()\n    star_count = tags[1].text.strip()\n    fork_count = tags[2].text.strip()\n\n    table = PackageTable(\n        github_url=github_url,\n        pypi_url=pypi_url,\n        watch_count=watch_count,\n        star_count=star_count,\n        fork_count=fork_count,\n        py_target=py_target,\n        download_last_month=download_last_month,\n        )\n    table.show()\n\nif __name__ == '__main__':\n    sys.exit(main())\n```\n\ngist\u306b\u3057\u3066\u3042\u308b\u306e\u3067\u3053\u3061\u3089\u3082\u3069\u3046\u305e\nhttps://gist.github.com/TakesxiSximada/38731e50428f7e163546\n", "tags": ["Python,", "scraping"]}