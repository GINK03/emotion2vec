{"context": "\n\n\u306f\u3058\u3081\u306b\n\u4e8b\u524d\u306b\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\nApache POI\n\n\nhttps://poi.apache.org/download.html\n\u203b\"poi-bin-3.15-20160924.tar.gz\"\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\n\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u4ee5\u4e0b\u306ejar\u304c\u3042\u308c\u3070\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\npoi-3.15.jar\npoi-ooxml-3.15.jar\npoi-ooxml-schemas-3.15.jar\nxmlbeans-2.6.0.jar\ncommons-collections4-4.1.jar\n\n\n\u5b9f\u88c5\u4f8b\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u8907\u6570\u306e\u30b7\u30fc\u30c8\u3092\u4f5c\u6210\u3059\u308b\n\u30a6\u30a3\u30f3\u30c9\u30a6\u67a0\u306e\u56fa\u5b9a\u3092\u8a2d\u5b9a\u3059\u308b\n\u30aa\u30fc\u30c8\u30d5\u30a3\u30eb\u30bf\u3092\u8a2d\u5b9a\u3059\u308b\n\u5217\u5e45\u3092\u81ea\u52d5\u8abf\u6574\u3059\u308b\n\u30bb\u30eb\u306b\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\n\u30bb\u30eb\u306b\u6539\u884c\u5165\u308a\u306e\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\n\u30bb\u30eb\u306b\u6574\u6570\u3092\u8868\u793a\u3059\u308b\n\u30bb\u30eb\u306b\u5c0f\u6570\u3092\u8868\u793a\u3059\u308b\n\u30bb\u30eb\u306b\u5186\u3092\u8868\u793a\u3059\u308b\n\u30bb\u30eb\u306b\u30d1\u30fc\u30bb\u30f3\u30c8\u3092\u8868\u793a\u3059\u308b\n\u30bb\u30eb\u306b\u6570\u5f0f\u3092\u8a2d\u5b9a\u3059\u308b\n\u4e0d\u8981\u3068\u306a\u3063\u305f\u30b7\u30fc\u30c8\u3092\u524a\u9664\u3059\u308b\n\n\u52d5\u4f5c\u78ba\u8a8d\u3057\u3084\u3059\u3044\u3088\u3046\u306bmain\u30e1\u30bd\u30c3\u30c9\u3067\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\nXLSXWriteTest.java\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.Date;\nimport org.apache.poi.ss.util.CellRangeAddress;\nimport org.apache.poi.hssf.util.HSSFColor;\nimport org.apache.poi.ss.usermodel.BorderStyle;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.CellStyle;\nimport org.apache.poi.ss.usermodel.CellType;\nimport org.apache.poi.ss.usermodel.DataFormat;\nimport org.apache.poi.ss.usermodel.FillPatternType;\nimport org.apache.poi.ss.usermodel.Font;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.VerticalAlignment;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.xssf.streaming.SXSSFSheet;\nimport org.apache.poi.xssf.streaming.SXSSFWorkbook;\n\n/**\n *\n * @author tool-taro.com\n */\npublic class XLSXWriteTest {\n\n    public static void main(String[] args) throws FileNotFoundException, IOException {\n\n        String outputFilePath = \"out.xlsx\";\n        Workbook book = null;\n        FileOutputStream fout = null;\n\n        try {\n            book = new SXSSFWorkbook();\n\n            Font font = book.createFont();\n            font.setFontName(\"\uff2d\uff33 \u30b4\u30b7\u30c3\u30af\");\n            font.setFontHeightInPoints((short) 9);\n\n            DataFormat format = book.createDataFormat();\n\n            //\u30d8\u30c3\u30c0\u6587\u5b57\u5217\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n            CellStyle style_header = book.createCellStyle();\n            style_header.setBorderBottom(BorderStyle.THIN);\n            XLSXWriteTest.setBorder(style_header, BorderStyle.THIN);\n            style_header.setFillForegroundColor(HSSFColor.LIGHT_CORNFLOWER_BLUE.index);\n            style_header.setFillPattern(FillPatternType.SOLID_FOREGROUND);\n            style_header.setVerticalAlignment(VerticalAlignment.TOP);\n            style_header.setFont(font);\n\n            //\u6587\u5b57\u5217\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n            CellStyle style_string = book.createCellStyle();\n            XLSXWriteTest.setBorder(style_string, BorderStyle.THIN);\n            style_string.setVerticalAlignment(VerticalAlignment.TOP);\n            style_string.setFont(font);\n\n            //\u6539\u884c\u304c\u5165\u3063\u305f\u6587\u5b57\u5217\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n            CellStyle style_string_wrap = book.createCellStyle();\n            XLSXWriteTest.setBorder(style_string_wrap, BorderStyle.THIN);\n            style_string_wrap.setVerticalAlignment(VerticalAlignment.TOP);\n            style_string_wrap.setWrapText(true);\n            style_string_wrap.setFont(font);\n\n            //\u6574\u6570\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n            CellStyle style_int = book.createCellStyle();\n            XLSXWriteTest.setBorder(style_int, BorderStyle.THIN);\n            style_int.setDataFormat(format.getFormat(\"#,##0;-#,##0\"));\n            style_int.setVerticalAlignment(VerticalAlignment.TOP);\n            style_int.setFont(font);\n\n            //\u5c0f\u6570\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n            CellStyle style_double = book.createCellStyle();\n            XLSXWriteTest.setBorder(style_double, BorderStyle.THIN);\n            style_double.setDataFormat(format.getFormat(\"#,##0.0;-#,##0.0\"));\n            style_double.setVerticalAlignment(VerticalAlignment.TOP);\n            style_double.setFont(font);\n\n            //\u5186\u8868\u793a\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n            CellStyle style_yen = book.createCellStyle();\n            XLSXWriteTest.setBorder(style_yen, BorderStyle.THIN);\n            style_yen.setDataFormat(format.getFormat(\"\\\"\\\\\\\"#,##0;\\\"\\\\\\\"-#,##0\"));\n            style_yen.setVerticalAlignment(VerticalAlignment.TOP);\n            style_yen.setFont(font);\n\n            //\u30d1\u30fc\u30bb\u30f3\u30c8\u8868\u793a\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n            CellStyle style_percent = book.createCellStyle();\n            XLSXWriteTest.setBorder(style_percent, BorderStyle.THIN);\n            style_percent.setDataFormat(format.getFormat(\"0.0%\"));\n            style_percent.setVerticalAlignment(VerticalAlignment.TOP);\n            style_percent.setFont(font);\n\n            //\u65e5\u6642\u8868\u793a\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n            CellStyle style_datetime = book.createCellStyle();\n            XLSXWriteTest.setBorder(style_datetime, BorderStyle.THIN);\n            style_datetime.setDataFormat(format.getFormat(\"yyyy/mm/dd hh:mm:ss\"));\n            style_datetime.setVerticalAlignment(VerticalAlignment.TOP);\n            style_datetime.setFont(font);\n\n            Row row;\n            int rowNumber;\n            Cell cell;\n            int colNumber;\n\n            //\u30b7\u30fc\u30c8\u306e\u4f5c\u6210(3\u30b7\u30fc\u30c8\u4f5c\u3063\u3066\u307f\u308b)\n            Sheet sheet;\n\n            for (int i = 0; i < 3; i++) {\n                sheet = book.createSheet();\n                if (sheet instanceof SXSSFSheet) {\n                    ((SXSSFSheet) sheet).trackAllColumnsForAutoSizing();\n                }\n\n                //\u30b7\u30fc\u30c8\u540d\u79f0\u306e\u8a2d\u5b9a\n                book.setSheetName(i, \"\u30b7\u30fc\u30c8\" + (i + 1));\n\n                //\u30d8\u30c3\u30c0\u884c\u306e\u4f5c\u6210\n                rowNumber = 0;\n                colNumber = 0;\n                row = sheet.createRow(rowNumber);\n                cell = row.createCell(colNumber++);\n                cell.setCellStyle(style_header);\n                cell.setCellType(CellType.STRING);\n                cell.setCellValue(\"No.\");\n\n                cell = row.createCell(colNumber++);\n                cell.setCellStyle(style_header);\n                cell.setCellType(CellType.STRING);\n                cell.setCellValue(\"\u6587\u5b57\u5217\");\n\n                cell = row.createCell(colNumber++);\n                cell.setCellStyle(style_header);\n                cell.setCellType(CellType.STRING);\n                cell.setCellValue(\"\u6539\u884c\u306e\u5165\u3063\u305f\u6587\u5b57\u5217\");\n\n                cell = row.createCell(colNumber++);\n                cell.setCellStyle(style_header);\n                cell.setCellType(CellType.STRING);\n                cell.setCellValue(\"\u6574\u6570\");\n\n                cell = row.createCell(colNumber++);\n                cell.setCellStyle(style_header);\n                cell.setCellType(CellType.STRING);\n                cell.setCellValue(\"\u5c0f\u6570\");\n\n                cell = row.createCell(colNumber++);\n                cell.setCellStyle(style_header);\n                cell.setCellType(CellType.STRING);\n                cell.setCellValue(\"\u5186\");\n\n                cell = row.createCell(colNumber++);\n                cell.setCellStyle(style_header);\n                cell.setCellType(CellType.STRING);\n                cell.setCellValue(\"\u30d1\u30fc\u30bb\u30f3\u30c8\");\n\n                cell = row.createCell(colNumber++);\n                cell.setCellStyle(style_header);\n                cell.setCellType(CellType.STRING);\n                cell.setCellValue(\"\u65e5\u6642\");\n\n                cell = row.createCell(colNumber);\n                cell.setCellStyle(style_header);\n                cell.setCellType(CellType.STRING);\n                cell.setCellValue(\"\u5186(8%\u306e\u7a0e\u8fbc)\");\n\n                //\u30a6\u30a3\u30f3\u30c9\u30a6\u67a0\u306e\u56fa\u5b9a\n                sheet.createFreezePane(1, 1);\n\n                //\u30d8\u30c3\u30c0\u884c\u306b\u30aa\u30fc\u30c8\u30d5\u30a3\u30eb\u30bf\u306e\u8a2d\u5b9a\n                sheet.setAutoFilter(new CellRangeAddress(0, 0, 0, colNumber));\n\n                //\u5217\u5e45\u306e\u81ea\u52d5\u8abf\u6574\n                for (int j = 0; j <= colNumber; j++) {\n                    sheet.autoSizeColumn(j, true);\n                }\n\n                //\u30c7\u30fc\u30bf\u884c\u306e\u751f\u6210(10\u884c\u4f5c\u3063\u3066\u307f\u308b)\n                for (int j = 0; j < 10; j++) {\n                    rowNumber++;\n                    colNumber = 0;\n                    row = sheet.createRow(rowNumber);\n                    cell = row.createCell(colNumber++);\n                    cell.setCellStyle(style_int);\n                    cell.setCellType(CellType.NUMERIC);\n                    cell.setCellValue(j + 1);\n\n                    cell = row.createCell(colNumber++);\n                    cell.setCellStyle(style_string);\n                    cell.setCellType(CellType.STRING);\n                    cell.setCellValue(\"\u3053\u308c\u306f\" + (j + 1) + \"\u884c\u76ee\u306e\u30c7\u30fc\u30bf\u3067\u3059\u3002\");\n\n                    cell = row.createCell(colNumber++);\n                    cell.setCellStyle(style_string_wrap);\n                    cell.setCellType(CellType.STRING);\n                    cell.setCellValue(\"\u3053\u308c\u306f\\n\" + (j + 1) + \"\u884c\u76ee\u306e\\n\u30c7\u30fc\u30bf\u3067\u3059\u3002\");\n\n                    cell = row.createCell(colNumber++);\n                    cell.setCellStyle(style_int);\n                    cell.setCellType(CellType.STRING);\n                    cell.setCellValue((j + 1) * 1000);\n\n                    cell = row.createCell(colNumber++);\n                    cell.setCellStyle(style_double);\n                    cell.setCellType(CellType.STRING);\n                    cell.setCellValue((double) (j + 1) * 1000);\n\n                    cell = row.createCell(colNumber++);\n                    cell.setCellStyle(style_yen);\n                    cell.setCellType(CellType.STRING);\n                    cell.setCellValue((j + 1) * 1000);\n\n                    cell = row.createCell(colNumber++);\n                    cell.setCellStyle(style_percent);\n                    cell.setCellType(CellType.STRING);\n                    cell.setCellValue((double) (j + 1));\n\n                    cell = row.createCell(colNumber++);\n                    cell.setCellStyle(style_datetime);\n                    cell.setCellType(CellType.STRING);\n                    cell.setCellValue(new Date());\n\n                    cell = row.createCell(colNumber);\n                    cell.setCellStyle(style_yen);\n                    cell.setCellType(CellType.FORMULA);\n                    cell.setCellFormula(\"ROUND(\" + XLSXWriteTest.getExcelColumnString(colNumber - 3) + (rowNumber + 1) + \"*1.08, 0)\");\n\n                    //\u5217\u5e45\u306e\u81ea\u52d5\u8abf\u6574\n                    for (int k = 0; k <= colNumber; k++) {\n                        sheet.autoSizeColumn(k, true);\n                    }\n                }\n            }\n\n            //\u30b7\u30fc\u30c83\u3092\u6d88\u3057\u3066\u307f\u308b\n            book.removeSheetAt(2);\n\n            //\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\n            fout = new FileOutputStream(outputFilePath);\n            book.write(fout);\n        }\n        finally {\n            if (fout != null) {\n                try {\n                    fout.close();\n                }\n                catch (IOException e) {\n                }\n            }\n            if (book != null) {\n                try {\n                    /*\n                        SXSSFWorkbook\u306f\u30e1\u30e2\u30ea\u7a7a\u9593\u3092\u7bc0\u7d04\u3059\u308b\u4ee3\u308f\u308a\u306b\u30c6\u30f3\u30dd\u30e9\u30ea\u30d5\u30a1\u30a4\u30eb\u3092\u5927\u91cf\u306b\u751f\u6210\u3059\u308b\u305f\u3081\u3001\n                        \u4e0d\u8981\u306b\u306a\u3063\u305f\u6bb5\u968e\u3067dispose\u3057\u3066\u30c6\u30f3\u30dd\u30e9\u30ea\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n                     */\n                    ((SXSSFWorkbook) book).dispose();\n                }\n                catch (Exception e) {\n                }\n            }\n        }\n    }\n\n    private static void setBorder(CellStyle style, BorderStyle border) {\n        style.setBorderBottom(border);\n        style.setBorderTop(border);\n        style.setBorderLeft(border);\n        style.setBorderRight(border);\n    }\n\n    private final static String[] LIST_ALPHA = {\n        \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"\n    };\n\n    private static String getExcelColumnString(int column) {\n        String result = \"\";\n\n        if (column >= 0) {\n            if (column / XLSXWriteTest.LIST_ALPHA.length > 0) {\n                result += getExcelColumnString(column / XLSXWriteTest.LIST_ALPHA.length - 1);\n            }\n            result += XLSXWriteTest.LIST_ALPHA[column % XLSXWriteTest.LIST_ALPHA.length];\n        }\n\n        return result;\n    }\n}\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n$ javac XLSXWriteTest.java\n$ java XLSXWriteTest\n\n\u4f5c\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u5217\u5e45\u306e\u81ea\u52d5\u8abf\u6574\u306f\u5c11\u3057\u7518\u3044\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\n\u74b0\u5883\n\n\n\u958b\u767a\n\nWindows 10 Pro\nJDK 1.8.0_121\nNetBeans IDE 8.2\n\n\n\n\u52d5\u4f5c\u691c\u8a3c\n\nCentOS Linux release 7.3\nJDK 1.8.0_121\n\n\n\n\u4e0a\u8a18\u306e\u5b9f\u88c5\u3092\u30d9\u30fc\u30b9\u306bWeb\u30c4\u30fc\u30eb\u3082\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\nWeb\u30b5\u30a4\u30c8\u306e\u30af\u30ed\u30fc\u30eb\uff5cWeb\u4fbf\u5229\u30c4\u30fc\u30eb@\u30c4\u30fc\u30eb\u30bf\u30ed\u30a6\n\u5f62\u614b\u7d20\u89e3\u6790\u30fb\u96c6\u8a08\uff5cWeb\u4fbf\u5229\u30c4\u30fc\u30eb@\u30c4\u30fc\u30eb\u30bf\u30ed\u30a6\n## \u306f\u3058\u3081\u306b\n\u4e8b\u524d\u306b\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n- Apache POI\n    - https://poi.apache.org/download.html\n    - \u203b\"poi-bin-3.15-20160924.tar.gz\"\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u4ee5\u4e0b\u306ejar\u304c\u3042\u308c\u3070\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\n- poi-3.15.jar\n- poi-ooxml-3.15.jar\n- poi-ooxml-schemas-3.15.jar\n- xmlbeans-2.6.0.jar\n- commons-collections4-4.1.jar\n\n## \u5b9f\u88c5\u4f8b\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n- \u8907\u6570\u306e\u30b7\u30fc\u30c8\u3092\u4f5c\u6210\u3059\u308b\n- \u30a6\u30a3\u30f3\u30c9\u30a6\u67a0\u306e\u56fa\u5b9a\u3092\u8a2d\u5b9a\u3059\u308b\n- \u30aa\u30fc\u30c8\u30d5\u30a3\u30eb\u30bf\u3092\u8a2d\u5b9a\u3059\u308b\n- \u5217\u5e45\u3092\u81ea\u52d5\u8abf\u6574\u3059\u308b\n- \u30bb\u30eb\u306b\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\n- \u30bb\u30eb\u306b\u6539\u884c\u5165\u308a\u306e\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\n- \u30bb\u30eb\u306b\u6574\u6570\u3092\u8868\u793a\u3059\u308b\n- \u30bb\u30eb\u306b\u5c0f\u6570\u3092\u8868\u793a\u3059\u308b\n- \u30bb\u30eb\u306b\u5186\u3092\u8868\u793a\u3059\u308b\n- \u30bb\u30eb\u306b\u30d1\u30fc\u30bb\u30f3\u30c8\u3092\u8868\u793a\u3059\u308b\n- \u30bb\u30eb\u306b\u6570\u5f0f\u3092\u8a2d\u5b9a\u3059\u308b\n- \u4e0d\u8981\u3068\u306a\u3063\u305f\u30b7\u30fc\u30c8\u3092\u524a\u9664\u3059\u308b\n\n\u52d5\u4f5c\u78ba\u8a8d\u3057\u3084\u3059\u3044\u3088\u3046\u306bmain\u30e1\u30bd\u30c3\u30c9\u3067\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n```java:XLSXWriteTest.java\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.Date;\nimport org.apache.poi.ss.util.CellRangeAddress;\nimport org.apache.poi.hssf.util.HSSFColor;\nimport org.apache.poi.ss.usermodel.BorderStyle;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.CellStyle;\nimport org.apache.poi.ss.usermodel.CellType;\nimport org.apache.poi.ss.usermodel.DataFormat;\nimport org.apache.poi.ss.usermodel.FillPatternType;\nimport org.apache.poi.ss.usermodel.Font;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.VerticalAlignment;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.xssf.streaming.SXSSFSheet;\nimport org.apache.poi.xssf.streaming.SXSSFWorkbook;\n\n/**\n *\n * @author tool-taro.com\n */\npublic class XLSXWriteTest {\n\n\tpublic static void main(String[] args) throws FileNotFoundException, IOException {\n\n\t\tString outputFilePath = \"out.xlsx\";\n\t\tWorkbook book = null;\n\t\tFileOutputStream fout = null;\n\n\t\ttry {\n\t\t\tbook = new SXSSFWorkbook();\n\n\t\t\tFont font = book.createFont();\n\t\t\tfont.setFontName(\"\uff2d\uff33 \u30b4\u30b7\u30c3\u30af\");\n\t\t\tfont.setFontHeightInPoints((short) 9);\n\n\t\t\tDataFormat format = book.createDataFormat();\n\n\t\t\t//\u30d8\u30c3\u30c0\u6587\u5b57\u5217\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n\t\t\tCellStyle style_header = book.createCellStyle();\n\t\t\tstyle_header.setBorderBottom(BorderStyle.THIN);\n\t\t\tXLSXWriteTest.setBorder(style_header, BorderStyle.THIN);\n\t\t\tstyle_header.setFillForegroundColor(HSSFColor.LIGHT_CORNFLOWER_BLUE.index);\n\t\t\tstyle_header.setFillPattern(FillPatternType.SOLID_FOREGROUND);\n\t\t\tstyle_header.setVerticalAlignment(VerticalAlignment.TOP);\n\t\t\tstyle_header.setFont(font);\n\n\t\t\t//\u6587\u5b57\u5217\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n\t\t\tCellStyle style_string = book.createCellStyle();\n\t\t\tXLSXWriteTest.setBorder(style_string, BorderStyle.THIN);\n\t\t\tstyle_string.setVerticalAlignment(VerticalAlignment.TOP);\n\t\t\tstyle_string.setFont(font);\n\n\t\t\t//\u6539\u884c\u304c\u5165\u3063\u305f\u6587\u5b57\u5217\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n\t\t\tCellStyle style_string_wrap = book.createCellStyle();\n\t\t\tXLSXWriteTest.setBorder(style_string_wrap, BorderStyle.THIN);\n\t\t\tstyle_string_wrap.setVerticalAlignment(VerticalAlignment.TOP);\n\t\t\tstyle_string_wrap.setWrapText(true);\n\t\t\tstyle_string_wrap.setFont(font);\n\n\t\t\t//\u6574\u6570\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n\t\t\tCellStyle style_int = book.createCellStyle();\n\t\t\tXLSXWriteTest.setBorder(style_int, BorderStyle.THIN);\n\t\t\tstyle_int.setDataFormat(format.getFormat(\"#,##0;-#,##0\"));\n\t\t\tstyle_int.setVerticalAlignment(VerticalAlignment.TOP);\n\t\t\tstyle_int.setFont(font);\n\n\t\t\t//\u5c0f\u6570\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n\t\t\tCellStyle style_double = book.createCellStyle();\n\t\t\tXLSXWriteTest.setBorder(style_double, BorderStyle.THIN);\n\t\t\tstyle_double.setDataFormat(format.getFormat(\"#,##0.0;-#,##0.0\"));\n\t\t\tstyle_double.setVerticalAlignment(VerticalAlignment.TOP);\n\t\t\tstyle_double.setFont(font);\n\n\t\t\t//\u5186\u8868\u793a\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n\t\t\tCellStyle style_yen = book.createCellStyle();\n\t\t\tXLSXWriteTest.setBorder(style_yen, BorderStyle.THIN);\n\t\t\tstyle_yen.setDataFormat(format.getFormat(\"\\\"\\\\\\\"#,##0;\\\"\\\\\\\"-#,##0\"));\n\t\t\tstyle_yen.setVerticalAlignment(VerticalAlignment.TOP);\n\t\t\tstyle_yen.setFont(font);\n\n\t\t\t//\u30d1\u30fc\u30bb\u30f3\u30c8\u8868\u793a\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n\t\t\tCellStyle style_percent = book.createCellStyle();\n\t\t\tXLSXWriteTest.setBorder(style_percent, BorderStyle.THIN);\n\t\t\tstyle_percent.setDataFormat(format.getFormat(\"0.0%\"));\n\t\t\tstyle_percent.setVerticalAlignment(VerticalAlignment.TOP);\n\t\t\tstyle_percent.setFont(font);\n\n\t\t\t//\u65e5\u6642\u8868\u793a\u7528\u306e\u30b9\u30bf\u30a4\u30eb\n\t\t\tCellStyle style_datetime = book.createCellStyle();\n\t\t\tXLSXWriteTest.setBorder(style_datetime, BorderStyle.THIN);\n\t\t\tstyle_datetime.setDataFormat(format.getFormat(\"yyyy/mm/dd hh:mm:ss\"));\n\t\t\tstyle_datetime.setVerticalAlignment(VerticalAlignment.TOP);\n\t\t\tstyle_datetime.setFont(font);\n\n\t\t\tRow row;\n\t\t\tint rowNumber;\n\t\t\tCell cell;\n\t\t\tint colNumber;\n\n\t\t\t//\u30b7\u30fc\u30c8\u306e\u4f5c\u6210(3\u30b7\u30fc\u30c8\u4f5c\u3063\u3066\u307f\u308b)\n\t\t\tSheet sheet;\n\n\t\t\tfor (int i = 0; i < 3; i++) {\n\t\t\t\tsheet = book.createSheet();\n\t\t\t\tif (sheet instanceof SXSSFSheet) {\n\t\t\t\t\t((SXSSFSheet) sheet).trackAllColumnsForAutoSizing();\n\t\t\t\t}\n\n\t\t\t\t//\u30b7\u30fc\u30c8\u540d\u79f0\u306e\u8a2d\u5b9a\n\t\t\t\tbook.setSheetName(i, \"\u30b7\u30fc\u30c8\" + (i + 1));\n\n\t\t\t\t//\u30d8\u30c3\u30c0\u884c\u306e\u4f5c\u6210\n\t\t\t\trowNumber = 0;\n\t\t\t\tcolNumber = 0;\n\t\t\t\trow = sheet.createRow(rowNumber);\n\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\tcell.setCellStyle(style_header);\n\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\tcell.setCellValue(\"No.\");\n\n\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\tcell.setCellStyle(style_header);\n\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\tcell.setCellValue(\"\u6587\u5b57\u5217\");\n\n\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\tcell.setCellStyle(style_header);\n\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\tcell.setCellValue(\"\u6539\u884c\u306e\u5165\u3063\u305f\u6587\u5b57\u5217\");\n\n\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\tcell.setCellStyle(style_header);\n\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\tcell.setCellValue(\"\u6574\u6570\");\n\n\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\tcell.setCellStyle(style_header);\n\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\tcell.setCellValue(\"\u5c0f\u6570\");\n\n\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\tcell.setCellStyle(style_header);\n\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\tcell.setCellValue(\"\u5186\");\n\n\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\tcell.setCellStyle(style_header);\n\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\tcell.setCellValue(\"\u30d1\u30fc\u30bb\u30f3\u30c8\");\n\n\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\tcell.setCellStyle(style_header);\n\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\tcell.setCellValue(\"\u65e5\u6642\");\n\n\t\t\t\tcell = row.createCell(colNumber);\n\t\t\t\tcell.setCellStyle(style_header);\n\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\tcell.setCellValue(\"\u5186(8%\u306e\u7a0e\u8fbc)\");\n\n\t\t\t\t//\u30a6\u30a3\u30f3\u30c9\u30a6\u67a0\u306e\u56fa\u5b9a\n\t\t\t\tsheet.createFreezePane(1, 1);\n\n\t\t\t\t//\u30d8\u30c3\u30c0\u884c\u306b\u30aa\u30fc\u30c8\u30d5\u30a3\u30eb\u30bf\u306e\u8a2d\u5b9a\n\t\t\t\tsheet.setAutoFilter(new CellRangeAddress(0, 0, 0, colNumber));\n\n\t\t\t\t//\u5217\u5e45\u306e\u81ea\u52d5\u8abf\u6574\n\t\t\t\tfor (int j = 0; j <= colNumber; j++) {\n\t\t\t\t\tsheet.autoSizeColumn(j, true);\n\t\t\t\t}\n\n\t\t\t\t//\u30c7\u30fc\u30bf\u884c\u306e\u751f\u6210(10\u884c\u4f5c\u3063\u3066\u307f\u308b)\n\t\t\t\tfor (int j = 0; j < 10; j++) {\n\t\t\t\t\trowNumber++;\n\t\t\t\t\tcolNumber = 0;\n\t\t\t\t\trow = sheet.createRow(rowNumber);\n\t\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\t\tcell.setCellStyle(style_int);\n\t\t\t\t\tcell.setCellType(CellType.NUMERIC);\n\t\t\t\t\tcell.setCellValue(j + 1);\n\n\t\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\t\tcell.setCellStyle(style_string);\n\t\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\t\tcell.setCellValue(\"\u3053\u308c\u306f\" + (j + 1) + \"\u884c\u76ee\u306e\u30c7\u30fc\u30bf\u3067\u3059\u3002\");\n\n\t\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\t\tcell.setCellStyle(style_string_wrap);\n\t\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\t\tcell.setCellValue(\"\u3053\u308c\u306f\\n\" + (j + 1) + \"\u884c\u76ee\u306e\\n\u30c7\u30fc\u30bf\u3067\u3059\u3002\");\n\n\t\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\t\tcell.setCellStyle(style_int);\n\t\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\t\tcell.setCellValue((j + 1) * 1000);\n\n\t\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\t\tcell.setCellStyle(style_double);\n\t\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\t\tcell.setCellValue((double) (j + 1) * 1000);\n\n\t\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\t\tcell.setCellStyle(style_yen);\n\t\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\t\tcell.setCellValue((j + 1) * 1000);\n\n\t\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\t\tcell.setCellStyle(style_percent);\n\t\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\t\tcell.setCellValue((double) (j + 1));\n\n\t\t\t\t\tcell = row.createCell(colNumber++);\n\t\t\t\t\tcell.setCellStyle(style_datetime);\n\t\t\t\t\tcell.setCellType(CellType.STRING);\n\t\t\t\t\tcell.setCellValue(new Date());\n\n\t\t\t\t\tcell = row.createCell(colNumber);\n\t\t\t\t\tcell.setCellStyle(style_yen);\n\t\t\t\t\tcell.setCellType(CellType.FORMULA);\n\t\t\t\t\tcell.setCellFormula(\"ROUND(\" + XLSXWriteTest.getExcelColumnString(colNumber - 3) + (rowNumber + 1) + \"*1.08, 0)\");\n\n\t\t\t\t\t//\u5217\u5e45\u306e\u81ea\u52d5\u8abf\u6574\n\t\t\t\t\tfor (int k = 0; k <= colNumber; k++) {\n\t\t\t\t\t\tsheet.autoSizeColumn(k, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//\u30b7\u30fc\u30c83\u3092\u6d88\u3057\u3066\u307f\u308b\n\t\t\tbook.removeSheetAt(2);\n\n\t\t\t//\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\n\t\t\tfout = new FileOutputStream(outputFilePath);\n\t\t\tbook.write(fout);\n\t\t}\n\t\tfinally {\n\t\t\tif (fout != null) {\n\t\t\t\ttry {\n\t\t\t\t\tfout.close();\n\t\t\t\t}\n\t\t\t\tcatch (IOException e) {\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (book != null) {\n\t\t\t\ttry {\n\t\t\t\t\t/*\n\t\t\t\t\t\tSXSSFWorkbook\u306f\u30e1\u30e2\u30ea\u7a7a\u9593\u3092\u7bc0\u7d04\u3059\u308b\u4ee3\u308f\u308a\u306b\u30c6\u30f3\u30dd\u30e9\u30ea\u30d5\u30a1\u30a4\u30eb\u3092\u5927\u91cf\u306b\u751f\u6210\u3059\u308b\u305f\u3081\u3001\n\t\t\t\t\t    \u4e0d\u8981\u306b\u306a\u3063\u305f\u6bb5\u968e\u3067dispose\u3057\u3066\u30c6\u30f3\u30dd\u30e9\u30ea\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\t\t\t\t\t */\n\t\t\t\t\t((SXSSFWorkbook) book).dispose();\n\t\t\t\t}\n\t\t\t\tcatch (Exception e) {\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void setBorder(CellStyle style, BorderStyle border) {\n\t\tstyle.setBorderBottom(border);\n\t\tstyle.setBorderTop(border);\n\t\tstyle.setBorderLeft(border);\n\t\tstyle.setBorderRight(border);\n\t}\n\n\tprivate final static String[] LIST_ALPHA = {\n\t\t\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"\n\t};\n\n\tprivate static String getExcelColumnString(int column) {\n\t\tString result = \"\";\n\n\t\tif (column >= 0) {\n\t\t\tif (column / XLSXWriteTest.LIST_ALPHA.length > 0) {\n\t\t\t\tresult += getExcelColumnString(column / XLSXWriteTest.LIST_ALPHA.length - 1);\n\t\t\t}\n\t\t\tresult += XLSXWriteTest.LIST_ALPHA[column % XLSXWriteTest.LIST_ALPHA.length];\n\t\t}\n\n\t\treturn result;\n\t}\n}\n```\n## \u52d5\u4f5c\u78ba\u8a8d\n\n```\n$ javac XLSXWriteTest.java\n$ java XLSXWriteTest\n```\n\u4f5c\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u5217\u5e45\u306e\u81ea\u52d5\u8abf\u6574\u306f\u5c11\u3057\u7518\u3044\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n<img width=\"787\" alt=\"\u7121\u984c.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/111947/5d428d61-f90b-49ba-dfd8-1119c5e8d3f4.png\">\n## \u74b0\u5883\n- \u958b\u767a\n\t- Windows 10 Pro\n\t- JDK 1.8.0_121\n\t- NetBeans IDE 8.2\n\n- \u52d5\u4f5c\u691c\u8a3c\n\t- CentOS Linux release 7.3\n\t- JDK 1.8.0_121\n\n\u4e0a\u8a18\u306e\u5b9f\u88c5\u3092\u30d9\u30fc\u30b9\u306bWeb\u30c4\u30fc\u30eb\u3082\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n[Web\u30b5\u30a4\u30c8\u306e\u30af\u30ed\u30fc\u30eb\uff5cWeb\u4fbf\u5229\u30c4\u30fc\u30eb@\u30c4\u30fc\u30eb\u30bf\u30ed\u30a6](http://tool-taro.com/crawl/)\n[\u5f62\u614b\u7d20\u89e3\u6790\u30fb\u96c6\u8a08\uff5cWeb\u4fbf\u5229\u30c4\u30fc\u30eb@\u30c4\u30fc\u30eb\u30bf\u30ed\u30a6](http://tool-taro.com/tokenize/)\n", "tags": ["Java", "java8", "POI", "Excel", "XLSX"]}