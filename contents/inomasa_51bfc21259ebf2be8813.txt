{"context": "\u4eca\u56de\u306f\u5a92\u4ecb\u5909\u6570\u3092\u7528\u3044\u305f\u66f2\u7dda\u306e\u63cf\u753b\u3092\u3084\u3063\u3066\u307f\u307e\u3057\u305f\uff01\n\u307e\u305a\u306fcycloid\u66f2\u7dda\nvoid Cld(){                                                               \n    float a = 0.5 / en;\n\n    glBegin(GL_POINTS);\n    glColor3d(0.0, 0.0, 1.0);\n    for(int i = 0; i < 360; ++i){\n        glVertex2d(a * (rad(i) - sin(rad(i))), a * (1 - cos(rad(i))));\n    }\n    glEnd();\n}\n\n\nasteroid\u66f2\u7dda\nvoid ast(){                                                               \n    float a = 0.5;\n\n    glBegin(GL_POINTS);\n    glColor3d(1.0, 0.0, 0.0);\n    for(int i = 0; i < 360; ++i){\n        glVertex2d(a * (cos(i) * cos(i) * cos(i)), a * (sin(i) * sin(i) * sin(i)));\n    }\n    glEnd();\n}\n\nCardioid\u66f2\u7dda\nvoid Crd(){                                                               \n    float a = 0.5;\n\n    glBegin(GL_POINTS);\n    glColor3d(0.0, 1.0, 1.0);\n    for(int i = 0; i < 360; ++i){\n        glVertex2d(a * (1 + cos(i)) * cos(i), a * (1 + cos(i)) * sin(i));\n    }\n    glEnd();\n}\n\nInvolute\u66f2\u7dda\nvoid Ivl(){                                                               \n    float a = 0.05;\n\n    glBegin(GL_POINTS);\n    glColor3d(1.0, 0.0, 1.0);\n    for(int i = 0; i < 1460; ++i){\n        glVertex2d(a * (cos(rad(i)) + (rad(i) * sin(rad(i)))), a * (sin(rad(i)) - (rad(i) * cos(rad(i)))));\n    }\n    glEnd();\n}\n\nLissajous\u66f2\u7dda\nvoid Lsj(){                                                                \n    float A = 1.0;\n    float B = 1.0;\n    float a = 3.0;\n    float b = 4.0;\n    float v = 0.0;\n    // A , B \u306f\u632f\u308a\u5e45  a,b \u306f\u5404\u5468\u6ce2\u6570 v \u306f\u4f4d\u76f8\u5dee\n    glBegin(GL_POINTS);\n    glColor3d(1.0, 1.0, 0.0);\n    for(int i = 0; i < 1080; ++i){\n        glVertex2f(A * sin(a * i + v), B * sin(b * i));\n    }\n    glEnd();\n}\n\n\u3068\u3053\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u5185\u5bb9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n#include <GLUT/glut.h>\n#include <cmath>\n#include <iostream>\nusing namespace std;\n\n#define en 3.141592 // \u5186\u5468\u7387\n\nfloat r = 0.5;      // \u534a\u5f84\n\nfloat rad(int i){   // \u30e9\u30b8\u30a2\u30f3\n    return (i * en / 180);\n}\n\n// \u30b5\u30a4\u30af\u30ed\u30a4\u30c9\u66f2\u7dda\n\nvoid Cld(){                                                               \n    float a = 0.5 / en;\n\n    glBegin(GL_POINTS);\n    glColor3d(0.0, 0.0, 1.0);\n    for(int i = 0; i < 360; ++i){\n        glVertex2d(a * (rad(i) - sin(rad(i))), a * (1 - cos(rad(i))));\n    }\n    glEnd();\n}\n\n// \u30a2\u30b9\u30c6\u30ed\u30a4\u30c9\u66f2\u7dda(\u661f\u8292\u5f62)\n\nvoid ast(){                                                               \n    float a = 0.5;\n\n    glBegin(GL_POINTS);\n    glColor3d(1.0, 0.0, 0.0);\n    for(int i = 0; i < 360; ++i){\n        glVertex2d(a * (cos(i) * cos(i) * cos(i)), a * (sin(i) * sin(i) * sin(i)));\n    }\n    glEnd();\n}\n\n// \u30ab\u30fc\u30b8\u30aa\u30a4\u30c9\u66f2\u7dda(\u5fc3\u81d3\u578b)\n\nvoid Crd(){                                                               \n    float a = 0.5;\n\n    glBegin(GL_POINTS);\n    glColor3d(0.0, 1.0, 1.0);\n    for(int i = 0; i < 360; ++i){\n        glVertex2d(a * (1 + cos(i)) * cos(i), a * (1 + cos(i)) * sin(i));\n    }\n    glEnd();\n}\n\n// \u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c9\u66f2\u7dda\n\nvoid Ivl(){                                                               \n    float a = 0.05;\n\n    glBegin(GL_POINTS);\n    glColor3d(1.0, 0.0, 1.0);\n    for(int i = 0; i < 1460; ++i){\n        glVertex2d(a * (cos(rad(i)) + (rad(i) * sin(rad(i)))), a * (sin(rad(i)) - (rad(i) * cos(rad(i)))));\n    }\n    glEnd();\n}\n\n//\u30ea\u30b5\u30fc\u30b8\u30e5\u66f2\u7dda\n\nvoid Lsj(){                                                                \n    float A = 1.0;\n    float B = 1.0;\n    float a = 3.0;\n    float b = 4.0;\n    float v = 0.0;\n    // A , B \u306f\u632f\u308a\u5e45  a,b \u306f\u5404\u5468\u6ce2\u6570 v \u306f\u4f4d\u76f8\u5dee\n    glBegin(GL_POINTS);\n    glColor3d(1.0, 1.0, 0.0);\n    for(int i = 0; i < 1080; ++i){\n        glVertex2f(A * sin(a * i + v), B * sin(b * i));\n    }\n    glEnd();\n}\n\nvoid display(){\n    glClear(GL_COLOR_BUFFER_BIT);\n    glBegin(GL_LINES);\n    glColor3d(1.0, 1.0, 1.0);   // \u57fa\u6e96\u7dda\u306e\u63cf\u753b\n    glVertex2d(-1.0, 0.0);\n    glVertex2d(1.0, 0.0);\n    glVertex2d(0.0, 1.0);\n    glVertex2d(0.0, -1.0);\n    glEnd();\n\n    Cld();  // \u30b5\u30a4\u30af\u30ed\u30a4\u30c9\n    ast();  // \u30a2\u30b9\u30c6\u30ed\u30a4\u30c9\n    Crd();  // \u30ab\u30fc\u30b8\u30aa\u30a4\u30c9\n    Ivl();  // \u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c9\n    Lsj();  // \u30ea\u30b5\u30fc\u30b8\u30e5\n    glFlush();\n\n}\n\nvoid init(){\n    glClearColor(0.0, 0.0, 0.0, 1.0);   // \u80cc\u666f\u8272\u3000\u9ed2\n}\n\nint main(int argc, char *argv[]){\n    glutInitWindowPosition(100, 200);   // \u30a6\u30a3\u30f3\u30c9\u30a6\u4f5c\u6210\u6642\u306e\u5ea7\u6a19\u6307\u5b9a\n    glutInitWindowSize(500,500);        // \u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\n    glutInit(&argc, argv);          \n    glutInitDisplayMode(GLUT_RGBA); // Red Green Brue +\u03b1(\u900f\u660e\u5ea6)= RGBA \n    glutCreateWindow(argv[0]);          // \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u751f\u6210\u3002 argv[0]\u3060\u3068\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u305d\u306e\u307e\u307e\u30a6\u30a3\u30f3\u30c9\u30a6\u540d\u306b\u306a\u308b\n    glutDisplayFunc(display);           // display\u95a2\u6570\u5185\u3092\u8868\u793a\n    init();\n    glutMainLoop();\n    return 0;\n}\n\n\n\u7dba\u9e97\u3067\u3059\u306d\uff01\n\u73fe\u5728\u306eMac_os version 10.10.3\n\u30bf\u30fc\u30df\u30ca\u30eb\u30b3\u30de\u30f3\u30c9\u306f\n\ng++ -o parameter.out parameter.cpp -mmacosx-version-min=10.8 -framework GLUT -framework OpenGL \n\n\u3068\u306a\u3063\u3066\u307e\u3059\uff01\n\u4eca\u56de\u53c2\u8003\u306b\u3055\u305b\u3066\u3082\u3089\u3063\u305f\u30b5\u30a4\u30c8\u306f\u30b3\u30b3\u3067\u3059\u3002\nhttp://mathtrain.jp/sevencurve\n\n\u4eca\u56de\u306f\u5a92\u4ecb\u5909\u6570\u3092\u7528\u3044\u305f\u66f2\u7dda\u306e\u63cf\u753b\u3092\u3084\u3063\u3066\u307f\u307e\u3057\u305f\uff01\n\n\u307e\u305a\u306fcycloid\u66f2\u7dda\n\n```\nvoid Cld(){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\tfloat a = 0.5 / en;\n\n\tglBegin(GL_POINTS);\n\tglColor3d(0.0, 0.0, 1.0);\n\tfor(int i = 0; i < 360; ++i){\n\t\tglVertex2d(a * (rad(i) - sin(rad(i))), a * (1 - cos(rad(i))));\n\t}\n\tglEnd();\n}\n\n```\n\nasteroid\u66f2\u7dda\n\n```\nvoid ast(){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\tfloat a = 0.5;\n\n\tglBegin(GL_POINTS);\n\tglColor3d(1.0, 0.0, 0.0);\n\tfor(int i = 0; i < 360; ++i){\n\t\tglVertex2d(a * (cos(i) * cos(i) * cos(i)), a * (sin(i) * sin(i) * sin(i)));\n\t}\n\tglEnd();\n}\n```\n\nCardioid\u66f2\u7dda\n\n```\nvoid Crd(){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\tfloat a = 0.5;\n\n\tglBegin(GL_POINTS);\n\tglColor3d(0.0, 1.0, 1.0);\n\tfor(int i = 0; i < 360; ++i){\n\t\tglVertex2d(a * (1 + cos(i)) * cos(i), a * (1 + cos(i)) * sin(i));\n\t}\n\tglEnd();\n}\n```\n\nInvolute\u66f2\u7dda\n\n```\nvoid Ivl(){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\tfloat a = 0.05;\n\n\tglBegin(GL_POINTS);\n\tglColor3d(1.0, 0.0, 1.0);\n\tfor(int i = 0; i < 1460; ++i){\n\t\tglVertex2d(a * (cos(rad(i)) + (rad(i) * sin(rad(i)))), a * (sin(rad(i)) - (rad(i) * cos(rad(i)))));\n\t}\n\tglEnd();\n}\n```\n\nLissajous\u66f2\u7dda\n\n```\nvoid Lsj(){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \n\tfloat A = 1.0;\n\tfloat B = 1.0;\n\tfloat a = 3.0;\n\tfloat b = 4.0;\n\tfloat v = 0.0;\n\t// A , B \u306f\u632f\u308a\u5e45  a,b \u306f\u5404\u5468\u6ce2\u6570 v \u306f\u4f4d\u76f8\u5dee\n\tglBegin(GL_POINTS);\n\tglColor3d(1.0, 1.0, 0.0);\n\tfor(int i = 0; i < 1080; ++i){\n\t\tglVertex2f(A * sin(a * i + v), B * sin(b * i));\n\t}\n\tglEnd();\n}\n```\n\n\u3068\u3053\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u5185\u5bb9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n```\n#include <GLUT/glut.h>\n#include <cmath>\n#include <iostream>\nusing namespace std;\n\n#define en 3.141592\t// \u5186\u5468\u7387\n\nfloat r = 0.5;\t\t// \u534a\u5f84\n\nfloat rad(int i){\t// \u30e9\u30b8\u30a2\u30f3\n\treturn (i * en / 180);\n}\n\n// \u30b5\u30a4\u30af\u30ed\u30a4\u30c9\u66f2\u7dda\n\nvoid Cld(){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\tfloat a = 0.5 / en;\n\n\tglBegin(GL_POINTS);\n\tglColor3d(0.0, 0.0, 1.0);\n\tfor(int i = 0; i < 360; ++i){\n\t\tglVertex2d(a * (rad(i) - sin(rad(i))), a * (1 - cos(rad(i))));\n\t}\n\tglEnd();\n}\n\n// \u30a2\u30b9\u30c6\u30ed\u30a4\u30c9\u66f2\u7dda(\u661f\u8292\u5f62)\n\nvoid ast(){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\tfloat a = 0.5;\n\n\tglBegin(GL_POINTS);\n\tglColor3d(1.0, 0.0, 0.0);\n\tfor(int i = 0; i < 360; ++i){\n\t\tglVertex2d(a * (cos(i) * cos(i) * cos(i)), a * (sin(i) * sin(i) * sin(i)));\n\t}\n\tglEnd();\n}\n\n// \u30ab\u30fc\u30b8\u30aa\u30a4\u30c9\u66f2\u7dda(\u5fc3\u81d3\u578b)\n\nvoid Crd(){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\tfloat a = 0.5;\n\n\tglBegin(GL_POINTS);\n\tglColor3d(0.0, 1.0, 1.0);\n\tfor(int i = 0; i < 360; ++i){\n\t\tglVertex2d(a * (1 + cos(i)) * cos(i), a * (1 + cos(i)) * sin(i));\n\t}\n\tglEnd();\n}\n\n// \u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c9\u66f2\u7dda\n\nvoid Ivl(){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\tfloat a = 0.05;\n\n\tglBegin(GL_POINTS);\n\tglColor3d(1.0, 0.0, 1.0);\n\tfor(int i = 0; i < 1460; ++i){\n\t\tglVertex2d(a * (cos(rad(i)) + (rad(i) * sin(rad(i)))), a * (sin(rad(i)) - (rad(i) * cos(rad(i)))));\n\t}\n\tglEnd();\n}\n\n//\u30ea\u30b5\u30fc\u30b8\u30e5\u66f2\u7dda\n\nvoid Lsj(){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \n\tfloat A = 1.0;\n\tfloat B = 1.0;\n\tfloat a = 3.0;\n\tfloat b = 4.0;\n\tfloat v = 0.0;\n\t// A , B \u306f\u632f\u308a\u5e45  a,b \u306f\u5404\u5468\u6ce2\u6570 v \u306f\u4f4d\u76f8\u5dee\n\tglBegin(GL_POINTS);\n\tglColor3d(1.0, 1.0, 0.0);\n\tfor(int i = 0; i < 1080; ++i){\n\t\tglVertex2f(A * sin(a * i + v), B * sin(b * i));\n\t}\n\tglEnd();\n}\n\nvoid display(){\n\tglClear(GL_COLOR_BUFFER_BIT);\n\tglBegin(GL_LINES);\n\tglColor3d(1.0, 1.0, 1.0);\t// \u57fa\u6e96\u7dda\u306e\u63cf\u753b\n\tglVertex2d(-1.0, 0.0);\n\tglVertex2d(1.0, 0.0);\n\tglVertex2d(0.0, 1.0);\n\tglVertex2d(0.0, -1.0);\n\tglEnd();\n\n\tCld();\t// \u30b5\u30a4\u30af\u30ed\u30a4\u30c9\n\tast();\t// \u30a2\u30b9\u30c6\u30ed\u30a4\u30c9\n\tCrd();\t// \u30ab\u30fc\u30b8\u30aa\u30a4\u30c9\n\tIvl();\t// \u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c9\n\tLsj();\t// \u30ea\u30b5\u30fc\u30b8\u30e5\n\tglFlush();\n\n}\n\nvoid init(){\n\tglClearColor(0.0, 0.0, 0.0, 1.0);\t// \u80cc\u666f\u8272\u3000\u9ed2\n}\n\nint main(int argc, char *argv[]){\n\tglutInitWindowPosition(100, 200);\t// \u30a6\u30a3\u30f3\u30c9\u30a6\u4f5c\u6210\u6642\u306e\u5ea7\u6a19\u6307\u5b9a\n\tglutInitWindowSize(500,500);\t\t// \u30a6\u30a3\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\n\tglutInit(&argc, argv);\t\t\t\n\tglutInitDisplayMode(GLUT_RGBA);\t// Red Green Brue +\u03b1(\u900f\u660e\u5ea6)= RGBA \n\tglutCreateWindow(argv[0]);\t\t\t// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u751f\u6210\u3002 argv[0]\u3060\u3068\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u305d\u306e\u307e\u307e\u30a6\u30a3\u30f3\u30c9\u30a6\u540d\u306b\u306a\u308b\n\tglutDisplayFunc(display);\t\t\t// display\u95a2\u6570\u5185\u3092\u8868\u793a\n\tinit();\n\tglutMainLoop();\n\treturn 0;\n}\n```\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-07-17 11.33.37.png](https://qiita-image-store.s3.amazonaws.com/0/85547/f0afc9d8-c1b0-76f9-8dc4-becd5ab11928.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-07-17 11.33.37.png\")\n\n\u7dba\u9e97\u3067\u3059\u306d\uff01\n\n\u73fe\u5728\u306eMac_os version 10.10.3\n\n\u30bf\u30fc\u30df\u30ca\u30eb\u30b3\u30de\u30f3\u30c9\u306f\n```\ng++ -o parameter.out parameter.cpp -mmacosx-version-min=10.8 -framework GLUT -framework OpenGL \n```\n\u3068\u306a\u3063\u3066\u307e\u3059\uff01\n\n\u4eca\u56de\u53c2\u8003\u306b\u3055\u305b\u3066\u3082\u3089\u3063\u305f\u30b5\u30a4\u30c8\u306f\u30b3\u30b3\u3067\u3059\u3002\nhttp://mathtrain.jp/sevencurve\n", "tags": ["C++", "glut", "OpenGL", "\u5a92\u4ecb\u5909\u6570"]}