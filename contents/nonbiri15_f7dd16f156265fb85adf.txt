{"context": "\u3088\u3044\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u4f7f\u3046\u3068\u3001\u30b3\u30fc\u30c9\u304c\u7c21\u6f54\u306b\u306a\u308b\u3002\n\n\u4f8b\uff1aswicth\u6587\u304b\u3089\u914d\u5217\u306e\u53c2\u7167\u3078\n\nswicth\u6587\u3092\u4f7f\u3063\u3066\u6587\u5b57\u5217\u3092\u8fd4\u3059\u95a2\u6570\nswicth\u6587\u306e\u5909\u6570\u304cenum\u578b(\u5024\u304c0\u4ee5\u4e0a)\u3067\u3042\u308b\u5834\u5408\u3001\n\u914d\u5217[enum\u578b\u306e\u5909\u6570]\n\u3068\u3057\u3066\u5024\u3092\u8fd4\u3059\u3053\u3068\u3067\u3001\u8a18\u8ff0\u304c\u7c21\u5358\u306b\u306a\u308b\u3002\n\nenumString.cpp\n#include <iostream>\n#include <string>\n#include <vector>\nenum Idx { a = 0, b, c };\n// vector\u578b\u3092\u4f7f\u3046\u4f8b\nstd::string getMessage(Idx idx){\n    const std::vector<std::string> strList =\n    {\n        \"messageA\", \"messageB\", \"messageC\"\n    };\n    return strList[idx];\n}\n\n//switch\u6587\u3092\u4f7f\u3046\u4f8b\nstd::string getMessage2(Idx idx){\n    std::string str = \"\";\n    switch (idx){\n    case a:\n        str = \"messageA\";\n        break;\n    case b:\n        str = \"messageB\";\n        break;\n    case c:\n        str = \"messageC\";\n        break;\n    default:\n        break;\n    }\n    return str;\n}\n\n\nint main(int argc, char* argv[]){\n    //enum\u3068vector\u578b\u306b\u3088\u308b\u8a18\u8ff0\u306e\u7c21\u7565\u5316\n    for(int i = 0; i < 3; i++){\n        std::cout << i << \" \" << getMessage(static_cast<Idx>(i)) << std::endl;\n    }\n\n    //switch\u6587\u3092\u4f7f\u3063\u3066string\u578b\u3092\u8fd4\u3059\u95a2\u6570\u306e\u4f8b\n    for (int i = 0; i < 3; i++){\n        std::cout << i << \" \" << getMessage2(static_cast<Idx>(i)) << std::endl;\n    }\n\n    //\u4ee5\u4e0b\u306f\u3042\u308a\u304c\u3061\u306aC\u3067\u306e\u8a18\u8ff0\n    for (int i = 0; i < 3; i++){\n        switch (i){\n            case a:\n                printf(\"%d messageA\\n\", i);\n                break;\n            case b:\n                printf(\"%d messageB\\n\", i);\n                break;\n            case c:\n                printf(\"%d messageC\\n\", i);\n                break;\n            default:\n                break;\n        }\n    }\n}\n\n\n\u88dc\u8db3\uff1a\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\nconst std::vector<std::string> strList =\n    {\n        \"messageA\", \"messageB\", \"messageC\"\n    };\n\n\u306e\u90e8\u5206\u3092\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u3057\u3066\u3057\u307e\u3063\u3066\u3001\u305d\u306e\u914d\u5217\u3092\u76f4\u63a5strList[idx]\u3068\u3057\u3066\u53c2\u7167\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3060\u308d\u3046\u3002\u305d\u306e\u5834\u5408\u3001\u914d\u5217\u540d\u3068enum\u578b\u306e\u540d\u79f0\u304c\u3001\u305d\u306e\u5f79\u5272\u306b\u3075\u3055\u308f\u3057\u3044\u540d\u524d\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3042\u308b\u3002\n\n\u4f8b\uff1a\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u5f62\u5f0f\u306bXML\u5f62\u5f0f\u3092\u4f7f\u3046\u3002\n\n\u3000OpenCV\u306b\u3082XML\u306e\u5165\u51fa\u529b\u304c\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u3002\nhttp://opencv.jp/opencv2-x-samples/xml_yaml\n\u753b\u50cf\u30c7\u30fc\u30bf\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u4e00\u822c\u306e\u591a\u6b21\u5143\u306e\u6570\u5024\u30c7\u30fc\u30bf\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u305d\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u4fdd\u5b58\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u53ef\u8aad\u6027\u304c\u3088\u3044\u5f62\u5f0f\u3067\u4fdd\u5b58\u3067\u304d\u3001\u4fdd\u5b58\u3057\u305f\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u969b\u306e\u30d1\u30fc\u30b5\u30fc\u3092\u81ea\u5206\u3067\u66f8\u304f\u5fc5\u8981\u3082\u306a\u304f\u306a\u308a\u3001\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3059\u3079\u304d\u30b3\u30fc\u30c9\u304c\u5927\u5e45\u306b\u524a\u6e1b\u3055\u308c\u308b\u3002\n\n\u4f8b\uff1a\u95a2\u6570\u306e\u5f15\u6570\u306b\u8f9e\u66f8\u3092\u4f7f\u3046\u3068\u3001\u30b3\u30fc\u30c9\u306e\u8a18\u8ff0\u304c\u7c21\u6f54\u306b\u306a\u308b\u3002(python)\n\n\u8a00\u8a9e\u306b\u3082\u3088\u308b\u3051\u308c\u3069\u3082\u3001\u305f\u304f\u3055\u3093\u3042\u308b\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3092\u8f9e\u66f8\u3067\u53d7\u3051\u6e21\u3057\u3067\u304d\u308b\u3068\u8a18\u8ff0\u304c\u5927\u5e45\u306b\u7c21\u6f54\u306b\u306a\u308b\u3002Python\u306e\u5834\u5408\u306b\u306f\u305d\u308c\u304c\u3067\u304d\u308b\u3002\n\ndef cheeseshop(kind, arguments, *keywords):\n\u4eee\u5f15\u6570\u306e\u6700\u5f8c\u306b *name \u306e\u5f62\u5f0f\u306e\u3082\u306e\u304c\u3042\u308b\u3068\u3001\u305d\u308c\u307e\u3067\u306e\u4eee\u5f15\u6570\u306b\u5bfe\u5fdc\u3057\u305f\u3082\u306e\u3092\u9664\u304f\u3059\u3079\u3066\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u304c\u5165\u3063\u305f\u8f9e\u66f8 (\u30de\u30c3\u30d7\u578b \u3092\u53c2\u7167) \u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002 **name \u306f *name \u306e\u5f62\u5f0f\u3092\u3068\u308b\u3001\u4eee\u5f15\u6570\u306e\u30ea\u30b9\u30c8\u3092\u8d85\u3048\u305f\u4f4d\u7f6e\u6307\u5b9a\u5f15\u6570\u306e\u5165\u3063\u305f\u30bf\u30d7\u30eb\u3092\u53d7\u3051\u53d6\u308b\u5f15\u6570 (\u6b21\u306e\u7bc0\u3067\u8ff0\u3079\u307e\u3059) \u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 (name \u306f **name \u3088\u308a\u524d\u306b\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093)\u3002\n\nhttp://docs.python.jp/2.7/tutorial/controlflow.html#tut-functions\n\u305f\u3068\u3048\u3070\u3001python\u306eOpenCV\u3067\u306f\u6b21\u306e\u3088\u3046\u306b\u304b\u3051\u307e\u3059\u3002\nhog = cv2.HOGDescriptor()\nhog.setSVMDetector(cv2.HOGDescriptor_getDefaultPeopleDetector())\nhuman, r = hog.detectMultiScale(img, winStride=(8, 8), padding=(32, 32), scale=1.05)\n\n\u306ewinStride=(8, 8), padding=(32, 32), scale=1.05\u306e\u90e8\u5206\u306f\n\u8f9e\u66f8\u3067\u4e0e\u3048\u308b\u3053\u3068\u3067\u3001\u8a18\u8ff0\u3092\u7c21\u6f54\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nhogParams = {\"winStride\":(8, 8), \"padding\":(32, 32), \"scale\":1.05}\nhuman, r = hog.detectMultiScale(im, **hogParams)\n\n\u305d\u308c\u3089\u306e\u8f9e\u66f8\u306e\u8a18\u8ff0\u30921\u7b87\u6240\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u691c\u51fa\u65b9\u5f0f\u306b\u3088\u308b\u56fa\u6709\u306e\u90e8\u5206\u3092\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u3042\u3061\u3053\u3061\u306b\u3070\u3089\u307e\u304b\u306a\u304f\u3066\u3088\u304f\u306a\u308a\u307e\u3059\u3002\n\u307e\u3068\u3081\n\u4f8b\uff1aswicth\u6587\u304b\u3089\u914d\u5217\u306e\u53c2\u7167\u3078\n\u4f8b\uff1a\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u5f62\u5f0f\u306bXML\u5f62\u5f0f\u3092\u4f7f\u3046\u3002\n\u4f8b\uff1a\u95a2\u6570\u306e\u5f15\u6570\u306b\u8f9e\u66f8\u3092\u4f7f\u3046\u3068\u3001\u30b3\u30fc\u30c9\u306e\u8a18\u8ff0\u304c\u7c21\u6f54\u306b\u306a\u308b\u3002(python)\n\u8ffd\u8a18\uff1a\nmap\u578b\u3092\u4f7f\u3046\u3053\u3068\u3082\u30b3\u30fc\u30c9\u3092\u7c21\u6f54\u306b\u3057\u307e\u3059\u3002\nyaml\u30d5\u30a1\u30a4\u30eb\u3084JSON\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u3082\u4fbf\u5229\u3067\u3059\u3002\n\u3088\u3044\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u4f7f\u3046\u3068\u3001\u30b3\u30fc\u30c9\u304c\u7c21\u6f54\u306b\u306a\u308b\u3002\n\n####**\u4f8b\uff1aswicth\u6587\u304b\u3089\u914d\u5217\u306e\u53c2\u7167\u3078**\nswicth\u6587\u3092\u4f7f\u3063\u3066\u6587\u5b57\u5217\u3092\u8fd4\u3059\u95a2\u6570\nswicth\u6587\u306e\u5909\u6570\u304cenum\u578b(\u5024\u304c0\u4ee5\u4e0a)\u3067\u3042\u308b\u5834\u5408\u3001\n\u914d\u5217[enum\u578b\u306e\u5909\u6570]\n\u3068\u3057\u3066\u5024\u3092\u8fd4\u3059\u3053\u3068\u3067\u3001\u8a18\u8ff0\u304c\u7c21\u5358\u306b\u306a\u308b\u3002\n\n```cpp:enumString.cpp\n#include <iostream>\n#include <string>\n#include <vector>\nenum Idx { a = 0, b, c };\n// vector\u578b\u3092\u4f7f\u3046\u4f8b\nstd::string getMessage(Idx idx){\n\tconst std::vector<std::string> strList =\n\t{\n\t\t\"messageA\", \"messageB\", \"messageC\"\n\t};\n\treturn strList[idx];\n}\n\n//switch\u6587\u3092\u4f7f\u3046\u4f8b\nstd::string getMessage2(Idx idx){\n\tstd::string str = \"\";\n\tswitch (idx){\n\tcase a:\n\t\tstr = \"messageA\";\n\t\tbreak;\n\tcase b:\n\t\tstr = \"messageB\";\n\t\tbreak;\n\tcase c:\n\t\tstr = \"messageC\";\n\t\tbreak;\n\tdefault:\n\t\tbreak;\n\t}\n\treturn str;\n}\n\n\nint main(int argc, char* argv[]){\n\t//enum\u3068vector\u578b\u306b\u3088\u308b\u8a18\u8ff0\u306e\u7c21\u7565\u5316\n\tfor(int i = 0; i < 3; i++){\n\t\tstd::cout << i << \" \" << getMessage(static_cast<Idx>(i)) << std::endl;\n\t}\n\n\t//switch\u6587\u3092\u4f7f\u3063\u3066string\u578b\u3092\u8fd4\u3059\u95a2\u6570\u306e\u4f8b\n\tfor (int i = 0; i < 3; i++){\n\t\tstd::cout << i << \" \" << getMessage2(static_cast<Idx>(i)) << std::endl;\n\t}\n\n\t//\u4ee5\u4e0b\u306f\u3042\u308a\u304c\u3061\u306aC\u3067\u306e\u8a18\u8ff0\n\tfor (int i = 0; i < 3; i++){\n\t\tswitch (i){\n\t\t\tcase a:\n\t\t\t\tprintf(\"%d messageA\\n\", i);\n\t\t\t\tbreak;\n\t\t\tcase b:\n\t\t\t\tprintf(\"%d messageB\\n\", i);\n\t\t\t\tbreak;\n\t\t\tcase c:\n\t\t\t\tprintf(\"%d messageC\\n\", i);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n```\n\n\u88dc\u8db3\uff1a\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\n\n```cpp:\nconst std::vector<std::string> strList =\n\t{\n\t\t\"messageA\", \"messageB\", \"messageC\"\n\t};\n```\n\n\u306e\u90e8\u5206\u3092\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u3057\u3066\u3057\u307e\u3063\u3066\u3001\u305d\u306e\u914d\u5217\u3092\u76f4\u63a5strList[idx]\u3068\u3057\u3066\u53c2\u7167\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3060\u308d\u3046\u3002\u305d\u306e\u5834\u5408\u3001\u914d\u5217\u540d\u3068enum\u578b\u306e\u540d\u79f0\u304c\u3001\u305d\u306e\u5f79\u5272\u306b\u3075\u3055\u308f\u3057\u3044\u540d\u524d\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3042\u308b\u3002\n\n\n\n\n\n####**\u4f8b\uff1a\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u5f62\u5f0f\u306bXML\u5f62\u5f0f\u3092\u4f7f\u3046\u3002**\n\u3000OpenCV\u306b\u3082XML\u306e\u5165\u51fa\u529b\u304c\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u3002\nhttp://opencv.jp/opencv2-x-samples/xml_yaml\n\u753b\u50cf\u30c7\u30fc\u30bf\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u4e00\u822c\u306e\u591a\u6b21\u5143\u306e\u6570\u5024\u30c7\u30fc\u30bf\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u305d\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u4fdd\u5b58\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u53ef\u8aad\u6027\u304c\u3088\u3044\u5f62\u5f0f\u3067\u4fdd\u5b58\u3067\u304d\u3001\u4fdd\u5b58\u3057\u305f\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u969b\u306e\u30d1\u30fc\u30b5\u30fc\u3092\u81ea\u5206\u3067\u66f8\u304f\u5fc5\u8981\u3082\u306a\u304f\u306a\u308a\u3001\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3059\u3079\u304d\u30b3\u30fc\u30c9\u304c\u5927\u5e45\u306b\u524a\u6e1b\u3055\u308c\u308b\u3002\n\n####**\u4f8b\uff1a\u95a2\u6570\u306e\u5f15\u6570\u306b\u8f9e\u66f8\u3092\u4f7f\u3046\u3068\u3001\u30b3\u30fc\u30c9\u306e\u8a18\u8ff0\u304c\u7c21\u6f54\u306b\u306a\u308b\u3002(python)**\n\n\u8a00\u8a9e\u306b\u3082\u3088\u308b\u3051\u308c\u3069\u3082\u3001\u305f\u304f\u3055\u3093\u3042\u308b\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3092\u8f9e\u66f8\u3067\u53d7\u3051\u6e21\u3057\u3067\u304d\u308b\u3068\u8a18\u8ff0\u304c\u5927\u5e45\u306b\u7c21\u6f54\u306b\u306a\u308b\u3002Python\u306e\u5834\u5408\u306b\u306f\u305d\u308c\u304c\u3067\u304d\u308b\u3002\n\n> def cheeseshop(kind, *arguments, **keywords):\n\n> \u4eee\u5f15\u6570\u306e\u6700\u5f8c\u306b **name \u306e\u5f62\u5f0f\u306e\u3082\u306e\u304c\u3042\u308b\u3068\u3001\u305d\u308c\u307e\u3067\u306e\u4eee\u5f15\u6570\u306b\u5bfe\u5fdc\u3057\u305f\u3082\u306e\u3092\u9664\u304f\u3059\u3079\u3066\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u304c\u5165\u3063\u305f\u8f9e\u66f8 (\u30de\u30c3\u30d7\u578b \u3092\u53c2\u7167) \u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002 **name \u306f *name \u306e\u5f62\u5f0f\u3092\u3068\u308b\u3001\u4eee\u5f15\u6570\u306e\u30ea\u30b9\u30c8\u3092\u8d85\u3048\u305f\u4f4d\u7f6e\u6307\u5b9a\u5f15\u6570\u306e\u5165\u3063\u305f\u30bf\u30d7\u30eb\u3092\u53d7\u3051\u53d6\u308b\u5f15\u6570 (\u6b21\u306e\u7bc0\u3067\u8ff0\u3079\u307e\u3059) \u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 (*name \u306f **name \u3088\u308a\u524d\u306b\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093)\u3002\n\nhttp://docs.python.jp/2.7/tutorial/controlflow.html#tut-functions\n\n\u305f\u3068\u3048\u3070\u3001python\u306eOpenCV\u3067\u306f\u6b21\u306e\u3088\u3046\u306b\u304b\u3051\u307e\u3059\u3002\n\n```py:\nhog = cv2.HOGDescriptor()\nhog.setSVMDetector(cv2.HOGDescriptor_getDefaultPeopleDetector())\nhuman, r = hog.detectMultiScale(img, winStride=(8, 8), padding=(32, 32), scale=1.05)\n```\n\n\u306ewinStride=(8, 8), padding=(32, 32), scale=1.05\u306e\u90e8\u5206\u306f\n\u8f9e\u66f8\u3067\u4e0e\u3048\u308b\u3053\u3068\u3067\u3001\u8a18\u8ff0\u3092\u7c21\u6f54\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```py:\nhogParams = {\"winStride\":(8, 8), \"padding\":(32, 32), \"scale\":1.05}\nhuman, r = hog.detectMultiScale(im, **hogParams)\n```\n\n\u305d\u308c\u3089\u306e\u8f9e\u66f8\u306e\u8a18\u8ff0\u30921\u7b87\u6240\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u691c\u51fa\u65b9\u5f0f\u306b\u3088\u308b\u56fa\u6709\u306e\u90e8\u5206\u3092\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u3042\u3061\u3053\u3061\u306b\u3070\u3089\u307e\u304b\u306a\u304f\u3066\u3088\u304f\u306a\u308a\u307e\u3059\u3002\n\n\n\u307e\u3068\u3081\n\u4f8b\uff1aswicth\u6587\u304b\u3089\u914d\u5217\u306e\u53c2\u7167\u3078\n\u4f8b\uff1a\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u5f62\u5f0f\u306bXML\u5f62\u5f0f\u3092\u4f7f\u3046\u3002\n\u4f8b\uff1a\u95a2\u6570\u306e\u5f15\u6570\u306b\u8f9e\u66f8\u3092\u4f7f\u3046\u3068\u3001\u30b3\u30fc\u30c9\u306e\u8a18\u8ff0\u304c\u7c21\u6f54\u306b\u306a\u308b\u3002(python)\n\n\u8ffd\u8a18\uff1a\nmap\u578b\u3092\u4f7f\u3046\u3053\u3068\u3082\u30b3\u30fc\u30c9\u3092\u7c21\u6f54\u306b\u3057\u307e\u3059\u3002\nyaml\u30d5\u30a1\u30a4\u30eb\u3084JSON\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u3082\u4fbf\u5229\u3067\u3059\u3002\n\n", "tags": ["C++", "XML", "OpenCV", "\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0", "\u30d7\u30ed\u30b0\u30e9\u30e0\u8a2d\u8a08"]}