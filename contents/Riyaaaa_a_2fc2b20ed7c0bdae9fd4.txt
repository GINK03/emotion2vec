{"context": " More than 1 year has passed since last update.\n\nstd::tuple\u3063\u3066\u306a\u3093\u305e\n\u7121\u9650\u500b\u306e\u578b\u3092\u6301\u3064\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u3044\u308f\u3086\u308b\u30bf\u30d7\u30eb\uff08\u305d\u306e\u307e\u307e\uff09\n\u52d5\u7684\u578b\u4ed8\u3051\u306b\u306f\u3068\u3066\u3082\u3088\u304f\u898b\u3089\u308c\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3060\u304c\u3001\u9759\u7684\u578b\u4ed8\u3051\u306eC++\u3067\u30bf\u30d7\u30eb\u3092\u6271\u3046\u306e\u306f\u3068\u3066\u3082\u9762\u5012\u304f\u3055\u3044\u3002\n\u518d\u5e30\u7684\u306b\u5c55\u958b\u3057\u305f\u308a\u3001\u30e1\u30bf\u306a\u3053\u3068\u3057\u305f\u308a\u3001\u305d\u3093\u306a\u3053\u3068\u306b\u3044\u3061\u3044\u3061\u88dc\u52a9\u95a2\u6570\u3092\u4f5c\u3063\u3066\u3044\u3066\u306f\u6642\u9593\u3068\u52b4\u529b\u306e\u7121\u99c4\u3067\u3042\u308b\u3002\n\u7279\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u30a2\u30f3\u307f\u305f\u3044\u306a\u4eba\u306b\u306f\u3001\u6c4e\u7528\u7684\u306b\u30bf\u30d7\u30eb\u3092\u6271\u3046\u6280\u8853\u304c\u5fc5\u9808\u306b\u306a\u308b\u3001\u3068\u601d\u3046\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u79c1\u304c\u30ce\u30ea\u3068\u52e2\u3044\u3067\u4f5c\u3063\u305f\u6c4e\u7528\u7684\u306a\u30bf\u30d7\u30eb\u5c02\u7528\u306e\u88dc\u52a9\u95a2\u6570\u3092\u7d39\u4ecb\u3057\u3066\u307f\u308b\u3002\n\u6b63\u76f4\u3069\u3063\u304b\u3067\u60f3\u5b9a\u3057\u306a\u3044\u30b3\u30d4\u30fc\u306a\u3069\u304c\u767a\u751f\u3057\u3066\u305d\u3046\u3060\u3051\u308c\u3069\u3001\u307e\u3042\u3001\u3053\u3046\u3044\u3046\u98a8\u306b\u3084\u308b\u3068\u5272\u3068\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306b\u306a\u308b\u3088\u3001\u304f\u3089\u3044\u306b\u7559\u3081\u3066\u8aad\u3093\u3067\u307b\u3057\u3044\u3002\n\u30b5\u30f3\u30d7\u30eb\u306e\u305f\u3081\u306b\u7528\u610f\u3057\u305f\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30c1\u30eb\u30c9\u30ec\u30f3\u3068\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7d39\u4ecb\u3059\u308b\u3002\nstruct A{\npublic:\nA(int init):value(init){}\nint value;\nvoid print(){ std::cout << \"I am A, value is \" << value << std::endl; }\n};\n\nstruct B{\npublic:\nB(int init):value(init){}\nint value;\nvoid print(){ std::cout << \"I am B, value is \" << value << std::endl; }\n};\n\nstruct C{\npublic:\nC(int init):value(init){}\nint value;\nvoid print(){ std::cout << \"I am C, value is \" << value << std::endl; }\n};\n\nstruct f{\n    template<typename T>\n    int operator()(T& object,int result, int n){\n    object.value = (object.value * n)+result;\n    object.print();\n    return object.value;\n    }\n\n     template<typename T>\n    int operator()(T& object,int n){\n    object.value *= n;\n    object.print();\n    return object.value;\n    }\n\n};\n\n\n\u306a\u3093\u304b\u81ea\u5df1\u7d39\u4ecb\u3068value\u3092\u30d7\u30ea\u30f3\u30c8\u3059\u308b\u3060\u3051\u306e\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3060\u3002\n\u30d5\u30ea\u30fc\u95a2\u6570\u306f\u3001value\u3092n\u500d\u3001\u307e\u305fresult\u3082\u53d7\u3051\u53d6\u3063\u305f\u5834\u5408\u306f\u52a0\u7b97\u3057\u305f\u308a\u3059\u308b\u3082\u306e\u3060\u3002\u3064\u3044\u3067\u306b\u578b\u60c5\u5831\u3092\u81ea\u5df1\u7d39\u4ecb\u3059\u308b\u3002\n\u3055\u3066\u3001\u3053\u3044\u3064\u3089\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u540c\u3058print\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u3002\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540c\u58eb\u306b\u8a00\u8a9e\u7684\u306e\u95a2\u4fc2\u6027\u306f\u306a\u3044\u304c\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5171\u901a\u306e\u305f\u3081\u30c0\u30c3\u30af\u30bf\u30a4\u30d4\u30f3\u30b0\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u30bf\u30d7\u30eb\u3068\u304b\u306f\u305d\u3046\u3044\u3046\u306e\u304c\u5f97\u610f\u3089\u3057\u3044\u3002\u4ed5\u65b9\u306a\u3044\u306e\u3067\u4f7f\u3044\u3065\u3089\u3044\u3053\u3044\u3064\u3092\u4e00\u3064\u8155\u8a66\u3057\u3057\u3066\u3084\u308d\u3046\u3002\n\n\u524d\u65b9\u5c55\u958b\n\u30bf\u30d7\u30eb\u306e\u30b5\u30a4\u30ba\u3092N\u3068\u3057\u3066\n\u30bf\u30d7\u30eb\u306e0~N-1\u306e\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u3001\u9010\u6b21\u95a2\u6570\u306b\u3076\u3093\u6295\u3052\u308b\u88dc\u52a9\u95a2\u6570\u3002\ntemplate<size_t index, size_t end, bool isEnd = index == end>\n    struct forwardExecute;\n\n    template<size_t index, size_t end>\n    struct forwardExecute<index, end, false>\n    {\n        template<typename Tuple, typename F, typename... Args>\n        static void Execute(Tuple&& tuple, F&& f, Args&&... args)\n        {\n            f(std::get<index>(tuple),std::forward<Args>(args)...);\n            forwardExecute<index+1,end>::Execute(\n                                                 std::forward<Tuple>(tuple),\n                                                 std::forward<F>(f),\n                                                 std::forward<Args>(args)...\n                                                 );\n\n        }\n    };\n\n    template<size_t index, size_t end>\n    struct forwardExecute<index, end, true>\n    {\n        template<typename Tuple, class F, typename... Args>\n        static void Execute(Tuple&& tuple, F&& f, Args&&... args)\n        {\n           //end\n        }\n    };\n\ntemplate< std::size_t begin, std::size_t end,typename Tuple, typename F,typename... Args>\n    void forwardExecuteApply(Tuple&& tuple, F&& f, Args&&... args)\n    {\n        forwardExecute<begin, end>::Execute(\n                                            std::forward<Tuple>(tuple),\n                                            std::forward<F>(f),\n                                            std::forward<Args>(args)...\n                                        );\n    }\n\n\n\u5272\u3068\u3088\u304f\u3042\u308b\u30a4\u30c7\u30a3\u30aa\u30e0\u3060\u3068\u306f\u601d\u3046\u3002\n\u30c7\u30fc\u30bf\u69cb\u9020\u304b\u3089\u95a2\u6570\u304b\u3089\u5f15\u6570\u307e\u3067\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306a\u305f\u3081\u3001\u307e\u3041\u6c4e\u7528\u7684\u3068\u8a00\u3048\u308b\u3002\n\u4f7f\u3063\u3066\u308b\u6280\u8853\u306fC++11\u3067\u306f\u30e1\u30b8\u30e3\u30fc\u306a\u3082\u306e\u3060\u3002\n1. \u53ef\u5909\u9577\u5f15\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n2. \u30e0\u30fc\u30d6\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\n\u3053\u306e\u8fba\u308a\u306f\u305f\u3076\u3093\u3053\u3053\u3067\u8aac\u660e\u3059\u308b\u3088\u308a\u3001C++er\u305f\u3061\u306e\u30d6\u30ed\u30b0\u3092\u898b\u305f\u65b9\u304c\u65e9\u3044\u3002\n\u4f7f\u3063\u3066\u307f\u308b\u3002\nint main(){\n    A a(1);\n    B b(2);\n    C c(3);\n\n    auto tuple = std::make_tuple(a,b,c);\n\n    forwardExecuteApply<0,3>(tuple,f(),2);\n\n    return 0; \n}\n\n\n\u5b9f\u884c\u7d50\u679c\n\nI am A, value is 2\nI am B, value is 4\nI am C, value is 6\n\n\n\n\u5168\u90e8\u306b\u5f15\u6570\u306e2\u304c\u304b\u3051\u3089\u308c\u3066\u3001forward\u306b\u5c55\u958b\u3055\u308c\u3066\u3044\u308b\u3002\n\n\u4e8c\u5206\u5c55\u958b\ntemplate<size_t begin, size_t end, bool isEnd = begin + 1 == end>\n    struct partExecute;\n\n    template<size_t begin, size_t end>\n    struct partExecute<begin, end, true>\n    {\n        template<typename Tuple, typename F, typename... Args>\n        static void Execute(Tuple && tuple, F&& f, Args&&... args)\n        {\n            f(std::get<begin>(tuple),std::forward<Args>(args)...);\n        }\n    };\n\n    template<size_t begin, size_t end>\n    struct partExecute<begin, end, false>\n    {\n        template<typename Tuple, typename F, typename... Args>\n        static void Execute(Tuple&& tuple, F&& f, Args&&... args)\n        {\n            partExecute<begin, (begin + end) / 2>::Execute\n            (std::forward<Tuple>(tuple), std::forward<F>(f), std::forward<Args>(args)...);\n\n            partExecute<(begin + end) / 2, end>::Execute\n            (std::forward<Tuple>(tuple), std::forward<F>(f), std::forward<Args>(args)...);\n        }\n    };\n\n    template<std::size_t begin, std::size_t end,typename Tuple, typename F, typename... Args>\n    void partExecuteApply(Tuple&& tuple, F&& f, Args&&... args)\n    {\n        partExecute<begin, end>::Execute(\n                                                std::forward<Tuple>(tuple),\n                                                std::forward<F>(f),\n                                                std::forward<Args>(args)...\n                                                );\n    }\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u505c\u6b62\u6027\u554f\u984c\uff1f\n\u306a\u3093\u304b\u305d\u3093\u306a\u611f\u3058\u306e\u554f\u984c\u304c\u8a3c\u660e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u7d42\u308f\u308b\u3053\u3068\u3092\u7acb\u8a3c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u518d\u5e30\u306b\u5236\u9650\u3092\u304b\u3051\u3066\u3044\u308b\u3002\nC++11\u3067\u306f16\u3068\u304b32\u3068\u304b\u305d\u3053\u3089\u3078\u3093\u3060\u3063\u305f\u6c17\u304c\u3059\u308b\u304c\u3001\u305d\u3093\u306a\u3061\u3063\u3053\u3044\u5024\u3060\u3068\u975e\u5e38\u306b\u56f0\u308b\u306e\u3067\u3001\u4e8c\u5206\u518d\u5e30\u3057\u3066\u3084\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\u3053\u3046\u3059\u308b\u3068log2(N)\u3057\u304b\u518d\u5e30\u3057\u306a\u304f\u306a\u308b\u306e\u3067\u3001\u3088\u307b\u3069\u5927\u304d\u304f\u306a\u3051\u308c\u3070\u3060\u3044\u305f\u3044\u51e6\u7406\u3067\u304d\u308b\u3002\n\u4e8c\u5206\u518d\u5e30\u3092\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3092\u3001\u9069\u5f53\u306b\u4e26\u5217\u5316\u3059\u308c\u3070\u901f\u5ea6\u3082\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u305f\u3060\u3057\u3001\u305d\u308c\u306b\u306f\u4e26\u5217\u5316\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u524d\u65b9\u5c55\u958b\u3068\u7279\u306b\u5909\u308f\u3063\u305f\u3053\u3068\u306f\u3057\u3066\u306a\u3044\u3002\n\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\nint main(){\n    A a(1);\n    B b(2);\n    C c(3);\n\n    auto tuple = std::make_tuple(a,b,c);\n\n    partExecuteApply<0,3>(tuple,f(),2);\n\n    return 0; \n}\n\n\n\u5b9f\u884c\u7d50\u679c\n\nI am A, value is 2\nI am B, value is 4\nI am C, value is 6\n\n\n\n\n\u518d\u5e30\u5c55\u958b\n/* recursive and propagate return value. */\n    template<std::size_t index>\n    struct propagationTuple{\n        template<class Tuple, class F, class R,typename... Args>\n        static auto Execute(Tuple&& tuple,\n                            F&& f,\n                            R&& result,\n                            Args&&... args){\n                return propagationTuple<index-1>::Execute(std::forward<Tuple>(tuple),\n                                                          std::forward<F>(f),\n                                                          std::forward<F>(f)(std::get<index>(tuple),\n                                                                             std::forward<Args>(args)...,\n                                                                             std::forward<R>(result)\n                                                                             ),\n                                                          std::forward<Args>(args)...\n                                                          );\n        }\n    };\n\n    template<>\n    struct propagationTuple<0>{\n        template<class Tuple,class F, class R,typename... Args>\n        static auto Execute(Tuple&& tuple,\n                            F&&     f,\n                            R&&     result,\n                            Args&&... args)\n        {\n            return std::forward<F>(f)(std::get<0>(tuple),std::forward<Args>(args)...,std::forward<R>(result));\n        }\n    };\n\n    template<std::size_t index,class Tuple, class F, typename... Args>\n    auto propagationTupleApply(Tuple&& tuple,F&& f, Args&&... args){\n        return propagationTuple<index-1>::Execute(std::forward<Tuple>(tuple),\n                                                  std::forward<F>(f),\n                                                  std::forward<F>(f)(std::get<index>(tuple),std::forward<Args>(args)...),\n                                                  std::forward<Args>(args)...\n                                                  );\n    }\n\n\u9a5a\u6115\u306e\u30af\u30bd\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f....\n\u3053\u3093\u306a\u3064\u3082\u308a\u306f\u306a\u304b\u3063\u305f....\n9/16 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u8ffd\u52a0\u3001\u8fd4\u308a\u5024\u3092\u63a8\u8ad6\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u7c21\u7565\u5316\n\u4f7f\u3063\u305f\u6280\u8853\n1. expression\u578b\u63a8\u8ad6(decltype)\n2. \u95a2\u6570\u8fd4\u308a\u5024\u63a8\u8ad6\n3. \u30bf\u30d7\u30eb\u306e\u30b5\u30a4\u30ba\u3068\u3063\u305f\u308a\u3068\u304b\u53c2\u7167\u5916\u3057\u305f\u308a\u307f\u305f\u3044\u306a\u30e1\u30bf\u95a2\u6570\n_t\u304c\u3064\u3044\u3066\u308b\u30e1\u30bf\u95a2\u6570\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30a4\u30ea\u30a2\u30b9\u306b\u3088\u3063\u3066::type\u304c\u7701\u7565\u3055\u308c\u305f\u3082\u306e\u3060\u3002\nC++14\u304b\u3089\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u3002\u6700the\u9ad8\u3002\n\u306f\u3041\u3001\u79c1\u306f\u305f\u3060\u5f8c\u65b9\u5c55\u958b\u3057\u3064\u3064\u3001\u8a08\u7b97\u7d50\u679c\u3092\u4f1d\u64ad\u3057\u3066\u3044\u304f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u308a\u305f\u304b\u3063\u305f\u3060\u3051\u306a\u306e\u306b\u3069\u3046\u3057\u3066\u3053\u3046\u306a\u3063\u305f...\n\u307e\u3001\u307e\u3041\u3053\u3046\u3044\u3046\u30b3\u30fc\u30c9\u306f\u5927\u6982\u30d6\u30e9\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u5316\u3059\u308b\u3057\u3001\u591a\u5c11\u306f\u306d\uff1f\n\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\nint main(){\n\n    A a(1);\n    B b(2);\n    C c(3);\n\n    auto tuple = std::make_tuple(a,b,c);\n\n    std::cout << backPropagationApply(tuple,f(),2) << std::endl;\n\n    return 0; \n}\n\n\n\u5b9f\u884c\u7d50\u679c\nI am C, value is 6\nI am B, value is 10\nI am A, value is 12\n12\n\n\nn\u500d\u3055\u308c\u304b\u3064\u3001\u7d50\u679c\u304c\u5f8c\u65b9\u4f1d\u64ad\u3057\u52a0\u7b97\u3055\u308c\u3066\u3044\u308b\u3002\nA*2 + B*2 + C*2\u3068\u3044\u3063\u305f\u611f\u3058\u3002\n\u307e\u3041\u3001\u305d\u308c\u3063\u307d\u304f\u52d5\u3044\u3066\u308b\u3093\u3058\u3083\u306a\u304b\u308d\u3046\u304b\u3002\n\u3053\u3053\u307e\u3067\u306f\u3042\u304f\u307e\u3067\u5b9f\u88c5\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3001\u3053\u308c\u3089\u304c\u4e07\u80fd\u3068\u3044\u3046\u3053\u3068\u3067\u306f\u6c7a\u3057\u3066\u306a\u3044\u3002\n\u3064\u307e\u308a\u7dcf\u5408\u7684\u306b\u4f55\u304c\u8a00\u3044\u305f\u3044\u304b\u3068\u3044\u3046\u3068\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u7279\u6b8a\u5316\u3068\u53ef\u5909\u9577\u5f15\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3042\u305f\u308a\u3092\u3046\u307e\u304f\u4f7f\u3048\u3070\u3001\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306a\u30bf\u30d7\u30eb\u6d3b\u7528\u30b3\u30fc\u30c9\u304b\u66f8\u3051\u308b\u3063\u3066\u3053\u3068\u3002\n\u3053\u306e\u30af\u30bd\u30b3\u30fc\u30c9\u3092\u898b\u3066\u5410\u304d\u6c17\u3092\u50ac\u3057\u3066\u3057\u307e\u3063\u305f\u65b9\u306f\u662f\u975e\u6dfb\u524a\u3092\u304a\u9858\u3044\u3057\u305f\u3044\u3082\u306e\u3060\u3002\n\u81ea\u5206\u81ea\u8eab\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3068\u30a4\u30f3\u30c7\u30f3\u30c8\u3092\u653e\u308a\u6295\u3052\u308b\u304f\u3089\u3044\u9762\u5012\u306b\u306a\u3063\u305f\u3002\u53cd\u7701\u3002\n\u8ffd\u8a18: \u518d\u5e30\u5c55\u958b\u306e\u3084\u3064\u3001\u3068\u3053\u308d\u3069\u3053\u308d\u30b3\u30d4\u30fc\u3057\u3066\u3044\u308b\u3002\u30e0\u30fc\u30d6\u3057\u5fd8\u308c\u305f\u3002\u8133\u5185\u7f6e\u63db\u3057\u3066\u3002\n\n\u7d50\u8ad6\nstd::tuple\u306f\u3080\u305a\u304b\u3057\u3044\u3002\n#std::tuple\u3063\u3066\u306a\u3093\u305e\n\n\u7121\u9650\u500b\u306e\u578b\u3092\u6301\u3064\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u3044\u308f\u3086\u308b\u30bf\u30d7\u30eb\uff08\u305d\u306e\u307e\u307e\uff09\n\u52d5\u7684\u578b\u4ed8\u3051\u306b\u306f\u3068\u3066\u3082\u3088\u304f\u898b\u3089\u308c\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3060\u304c\u3001\u9759\u7684\u578b\u4ed8\u3051\u306eC++\u3067\u30bf\u30d7\u30eb\u3092\u6271\u3046\u306e\u306f\u3068\u3066\u3082\u9762\u5012\u304f\u3055\u3044\u3002\n\n\u518d\u5e30\u7684\u306b\u5c55\u958b\u3057\u305f\u308a\u3001\u30e1\u30bf\u306a\u3053\u3068\u3057\u305f\u308a\u3001\u305d\u3093\u306a\u3053\u3068\u306b\u3044\u3061\u3044\u3061\u88dc\u52a9\u95a2\u6570\u3092\u4f5c\u3063\u3066\u3044\u3066\u306f\u6642\u9593\u3068\u52b4\u529b\u306e\u7121\u99c4\u3067\u3042\u308b\u3002\n\n\u7279\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u30a2\u30f3\u307f\u305f\u3044\u306a\u4eba\u306b\u306f\u3001\u6c4e\u7528\u7684\u306b\u30bf\u30d7\u30eb\u3092\u6271\u3046\u6280\u8853\u304c\u5fc5\u9808\u306b\u306a\u308b\u3001\u3068\u601d\u3046\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u79c1\u304c\u30ce\u30ea\u3068\u52e2\u3044\u3067\u4f5c\u3063\u305f\u6c4e\u7528\u7684\u306a\u30bf\u30d7\u30eb\u5c02\u7528\u306e\u88dc\u52a9\u95a2\u6570\u3092\u7d39\u4ecb\u3057\u3066\u307f\u308b\u3002\n\u6b63\u76f4\u3069\u3063\u304b\u3067\u60f3\u5b9a\u3057\u306a\u3044\u30b3\u30d4\u30fc\u306a\u3069\u304c\u767a\u751f\u3057\u3066\u305d\u3046\u3060\u3051\u308c\u3069\u3001\u307e\u3042\u3001\u3053\u3046\u3044\u3046\u98a8\u306b\u3084\u308b\u3068\u5272\u3068\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306b\u306a\u308b\u3088\u3001\u304f\u3089\u3044\u306b\u7559\u3081\u3066\u8aad\u3093\u3067\u307b\u3057\u3044\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u306e\u305f\u3081\u306b\u7528\u610f\u3057\u305f\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30c1\u30eb\u30c9\u30ec\u30f3\u3068\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7d39\u4ecb\u3059\u308b\u3002\n\n```cpp\nstruct A{\npublic:\nA(int init):value(init){}\nint value;\nvoid print(){ std::cout << \"I am A, value is \" << value << std::endl; }\n};\n\nstruct B{\npublic:\nB(int init):value(init){}\nint value;\nvoid print(){ std::cout << \"I am B, value is \" << value << std::endl; }\n};\n\nstruct C{\npublic:\nC(int init):value(init){}\nint value;\nvoid print(){ std::cout << \"I am C, value is \" << value << std::endl; }\n};\n\nstruct f{\n    template<typename T>\n    int operator()(T& object,int result, int n){\n    object.value = (object.value * n)+result;\n    object.print();\n    return object.value;\n    }\n\n     template<typename T>\n    int operator()(T& object,int n){\n    object.value *= n;\n    object.print();\n    return object.value;\n    }\n\n};\n\n```\n\n\u306a\u3093\u304b\u81ea\u5df1\u7d39\u4ecb\u3068value\u3092\u30d7\u30ea\u30f3\u30c8\u3059\u308b\u3060\u3051\u306e\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3060\u3002\n\n\u30d5\u30ea\u30fc\u95a2\u6570\u306f\u3001value\u3092n\u500d\u3001\u307e\u305fresult\u3082\u53d7\u3051\u53d6\u3063\u305f\u5834\u5408\u306f\u52a0\u7b97\u3057\u305f\u308a\u3059\u308b\u3082\u306e\u3060\u3002\u3064\u3044\u3067\u306b\u578b\u60c5\u5831\u3092\u81ea\u5df1\u7d39\u4ecb\u3059\u308b\u3002\n\n\u3055\u3066\u3001\u3053\u3044\u3064\u3089\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u540c\u3058print\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u308b\u3002\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540c\u58eb\u306b\u8a00\u8a9e\u7684\u306e\u95a2\u4fc2\u6027\u306f\u306a\u3044\u304c\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5171\u901a\u306e\u305f\u3081\u30c0\u30c3\u30af\u30bf\u30a4\u30d4\u30f3\u30b0\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u30bf\u30d7\u30eb\u3068\u304b\u306f\u305d\u3046\u3044\u3046\u306e\u304c\u5f97\u610f\u3089\u3057\u3044\u3002\u4ed5\u65b9\u306a\u3044\u306e\u3067\u4f7f\u3044\u3065\u3089\u3044\u3053\u3044\u3064\u3092\u4e00\u3064\u8155\u8a66\u3057\u3057\u3066\u3084\u308d\u3046\u3002\n\n\n#\u524d\u65b9\u5c55\u958b\n\u30bf\u30d7\u30eb\u306e\u30b5\u30a4\u30ba\u3092N\u3068\u3057\u3066\n\u30bf\u30d7\u30eb\u306e0~N-1\u306e\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u3001\u9010\u6b21\u95a2\u6570\u306b\u3076\u3093\u6295\u3052\u308b\u88dc\u52a9\u95a2\u6570\u3002\n\n```cpp\ntemplate<size_t index, size_t end, bool isEnd = index == end>\n    struct forwardExecute;\n    \n    template<size_t index, size_t end>\n    struct forwardExecute<index, end, false>\n    {\n        template<typename Tuple, typename F, typename... Args>\n        static void Execute(Tuple&& tuple, F&& f, Args&&... args)\n        {\n            f(std::get<index>(tuple),std::forward<Args>(args)...);\n            forwardExecute<index+1,end>::Execute(\n                                                 std::forward<Tuple>(tuple),\n                                                 std::forward<F>(f),\n                                                 std::forward<Args>(args)...\n                                                 );\n\n        }\n    };\n    \n    template<size_t index, size_t end>\n    struct forwardExecute<index, end, true>\n    {\n        template<typename Tuple, class F, typename... Args>\n        static void Execute(Tuple&& tuple, F&& f, Args&&... args)\n        {\n           //end\n        }\n    };\n    \ntemplate< std::size_t begin, std::size_t end,typename Tuple, typename F,typename... Args>\n    void forwardExecuteApply(Tuple&& tuple, F&& f, Args&&... args)\n    {\n        forwardExecute<begin, end>::Execute(\n                                            std::forward<Tuple>(tuple),\n                                            std::forward<F>(f),\n                                            std::forward<Args>(args)...\n                                        );\n    }\n\n```\n\n\u5272\u3068\u3088\u304f\u3042\u308b\u30a4\u30c7\u30a3\u30aa\u30e0\u3060\u3068\u306f\u601d\u3046\u3002\n\u30c7\u30fc\u30bf\u69cb\u9020\u304b\u3089\u95a2\u6570\u304b\u3089\u5f15\u6570\u307e\u3067\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306a\u305f\u3081\u3001\u307e\u3041\u6c4e\u7528\u7684\u3068\u8a00\u3048\u308b\u3002\n\n\u4f7f\u3063\u3066\u308b\u6280\u8853\u306fC++11\u3067\u306f\u30e1\u30b8\u30e3\u30fc\u306a\u3082\u306e\u3060\u3002\n1. \u53ef\u5909\u9577\u5f15\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n2. \u30e0\u30fc\u30d6\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\n\n\u3053\u306e\u8fba\u308a\u306f\u305f\u3076\u3093\u3053\u3053\u3067\u8aac\u660e\u3059\u308b\u3088\u308a\u3001C++er\u305f\u3061\u306e\u30d6\u30ed\u30b0\u3092\u898b\u305f\u65b9\u304c\u65e9\u3044\u3002\n\n\u4f7f\u3063\u3066\u307f\u308b\u3002\n\n```cpp\nint main(){\n    A a(1);\n    B b(2);\n    C c(3);\n\n    auto tuple = std::make_tuple(a,b,c);\n\n    forwardExecuteApply<0,3>(tuple,f(),2);\n\n    return 0; \n}\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n\nI am A, value is 2\nI am B, value is 4\nI am C, value is 6\n\n```\n\n\u5168\u90e8\u306b\u5f15\u6570\u306e2\u304c\u304b\u3051\u3089\u308c\u3066\u3001forward\u306b\u5c55\u958b\u3055\u308c\u3066\u3044\u308b\u3002\n\n\n#\u4e8c\u5206\u5c55\u958b\n\n```cpp\ntemplate<size_t begin, size_t end, bool isEnd = begin + 1 == end>\n    struct partExecute;\n    \n    template<size_t begin, size_t end>\n    struct partExecute<begin, end, true>\n    {\n        template<typename Tuple, typename F, typename... Args>\n        static void Execute(Tuple && tuple, F&& f, Args&&... args)\n        {\n            f(std::get<begin>(tuple),std::forward<Args>(args)...);\n        }\n    };\n    \n    template<size_t begin, size_t end>\n    struct partExecute<begin, end, false>\n    {\n        template<typename Tuple, typename F, typename... Args>\n        static void Execute(Tuple&& tuple, F&& f, Args&&... args)\n        {\n            partExecute<begin, (begin + end) / 2>::Execute\n            (std::forward<Tuple>(tuple), std::forward<F>(f), std::forward<Args>(args)...);\n            \n            partExecute<(begin + end) / 2, end>::Execute\n            (std::forward<Tuple>(tuple), std::forward<F>(f), std::forward<Args>(args)...);\n        }\n    };\n    \n    template<std::size_t begin, std::size_t end,typename Tuple, typename F, typename... Args>\n    void partExecuteApply(Tuple&& tuple, F&& f, Args&&... args)\n    {\n        partExecute<begin, end>::Execute(\n                                                std::forward<Tuple>(tuple),\n                                                std::forward<F>(f),\n                                                std::forward<Args>(args)...\n                                                );\n    }\n```\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u505c\u6b62\u6027\u554f\u984c\uff1f\n\u306a\u3093\u304b\u305d\u3093\u306a\u611f\u3058\u306e\u554f\u984c\u304c\u8a3c\u660e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u7d42\u308f\u308b\u3053\u3068\u3092\u7acb\u8a3c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u518d\u5e30\u306b\u5236\u9650\u3092\u304b\u3051\u3066\u3044\u308b\u3002\nC++11\u3067\u306f16\u3068\u304b32\u3068\u304b\u305d\u3053\u3089\u3078\u3093\u3060\u3063\u305f\u6c17\u304c\u3059\u308b\u304c\u3001\u305d\u3093\u306a\u3061\u3063\u3053\u3044\u5024\u3060\u3068\u975e\u5e38\u306b\u56f0\u308b\u306e\u3067\u3001\u4e8c\u5206\u518d\u5e30\u3057\u3066\u3084\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\u3053\u3046\u3059\u308b\u3068log2(N)\u3057\u304b\u518d\u5e30\u3057\u306a\u304f\u306a\u308b\u306e\u3067\u3001\u3088\u307b\u3069\u5927\u304d\u304f\u306a\u3051\u308c\u3070\u3060\u3044\u305f\u3044\u51e6\u7406\u3067\u304d\u308b\u3002\n\n\u4e8c\u5206\u518d\u5e30\u3092\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3092\u3001\u9069\u5f53\u306b\u4e26\u5217\u5316\u3059\u308c\u3070\u901f\u5ea6\u3082\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u305f\u3060\u3057\u3001\u305d\u308c\u306b\u306f\u4e26\u5217\u5316\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u524d\u65b9\u5c55\u958b\u3068\u7279\u306b\u5909\u308f\u3063\u305f\u3053\u3068\u306f\u3057\u3066\u306a\u3044\u3002\n\n\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\n\n```cpp\nint main(){\n    A a(1);\n    B b(2);\n    C c(3);\n\n    auto tuple = std::make_tuple(a,b,c);\n\n    partExecuteApply<0,3>(tuple,f(),2);\n\n    return 0; \n}\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n\nI am A, value is 2\nI am B, value is 4\nI am C, value is 6\n\n```\n\n#\u518d\u5e30\u5c55\u958b\n\n```cpp\n/* recursive and propagate return value. */\n    template<std::size_t index>\n    struct propagationTuple{\n        template<class Tuple, class F, class R,typename... Args>\n        static auto Execute(Tuple&& tuple,\n                            F&& f,\n                            R&& result,\n                            Args&&... args){\n                return propagationTuple<index-1>::Execute(std::forward<Tuple>(tuple),\n                                                          std::forward<F>(f),\n                                                          std::forward<F>(f)(std::get<index>(tuple),\n                                                                             std::forward<Args>(args)...,\n                                                                             std::forward<R>(result)\n                                                                             ),\n                                                          std::forward<Args>(args)...\n                                                          );\n        }\n    };\n    \n    template<>\n    struct propagationTuple<0>{\n        template<class Tuple,class F, class R,typename... Args>\n        static auto Execute(Tuple&& tuple,\n                            F&&     f,\n                            R&&     result,\n                            Args&&... args)\n        {\n            return std::forward<F>(f)(std::get<0>(tuple),std::forward<Args>(args)...,std::forward<R>(result));\n        }\n    };\n    \n    template<std::size_t index,class Tuple, class F, typename... Args>\n    auto propagationTupleApply(Tuple&& tuple,F&& f, Args&&... args){\n        return propagationTuple<index-1>::Execute(std::forward<Tuple>(tuple),\n                                                  std::forward<F>(f),\n                                                  std::forward<F>(f)(std::get<index>(tuple),std::forward<Args>(args)...),\n                                                  std::forward<Args>(args)...\n                                                  );\n    }\n```\n\n\n~~\u9a5a\u6115\u306e\u30af\u30bd\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f....\n\u3053\u3093\u306a\u3064\u3082\u308a\u306f\u306a\u304b\u3063\u305f....~~\n\n*9/16 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u8ffd\u52a0\u3001\u8fd4\u308a\u5024\u3092\u63a8\u8ad6\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u7c21\u7565\u5316*\n\n\u4f7f\u3063\u305f\u6280\u8853\n1. expression\u578b\u63a8\u8ad6(decltype)\n2. \u95a2\u6570\u8fd4\u308a\u5024\u63a8\u8ad6\n3. \u30bf\u30d7\u30eb\u306e\u30b5\u30a4\u30ba\u3068\u3063\u305f\u308a\u3068\u304b\u53c2\u7167\u5916\u3057\u305f\u308a\u307f\u305f\u3044\u306a\u30e1\u30bf\u95a2\u6570\n\n_t\u304c\u3064\u3044\u3066\u308b\u30e1\u30bf\u95a2\u6570\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30a4\u30ea\u30a2\u30b9\u306b\u3088\u3063\u3066::type\u304c\u7701\u7565\u3055\u308c\u305f\u3082\u306e\u3060\u3002\nC++14\u304b\u3089\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u3002\u6700the\u9ad8\u3002\n\n\u306f\u3041\u3001\u79c1\u306f\u305f\u3060\u5f8c\u65b9\u5c55\u958b\u3057\u3064\u3064\u3001\u8a08\u7b97\u7d50\u679c\u3092\u4f1d\u64ad\u3057\u3066\u3044\u304f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u308a\u305f\u304b\u3063\u305f\u3060\u3051\u306a\u306e\u306b\u3069\u3046\u3057\u3066\u3053\u3046\u306a\u3063\u305f...\n\n\u307e\u3001\u307e\u3041\u3053\u3046\u3044\u3046\u30b3\u30fc\u30c9\u306f\u5927\u6982\u30d6\u30e9\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u5316\u3059\u308b\u3057\u3001\u591a\u5c11\u306f\u306d\uff1f\n\n\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\n\n```cpp\nint main(){\n    \n    A a(1);\n    B b(2);\n    C c(3);\n\n    auto tuple = std::make_tuple(a,b,c);\n    \n    std::cout << backPropagationApply(tuple,f(),2) << std::endl;\n\n    return 0; \n}\n```\n\n\n```:\u5b9f\u884c\u7d50\u679c\nI am C, value is 6\nI am B, value is 10\nI am A, value is 12\n12\n```\n\nn\u500d\u3055\u308c\u304b\u3064\u3001\u7d50\u679c\u304c\u5f8c\u65b9\u4f1d\u64ad\u3057\u52a0\u7b97\u3055\u308c\u3066\u3044\u308b\u3002\nA*2 + B*2 + C*2\u3068\u3044\u3063\u305f\u611f\u3058\u3002\n\n\u307e\u3041\u3001\u305d\u308c\u3063\u307d\u304f\u52d5\u3044\u3066\u308b\u3093\u3058\u3083\u306a\u304b\u308d\u3046\u304b\u3002\n\n\u3053\u3053\u307e\u3067\u306f\u3042\u304f\u307e\u3067\u5b9f\u88c5\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3001\u3053\u308c\u3089\u304c\u4e07\u80fd\u3068\u3044\u3046\u3053\u3068\u3067\u306f\u6c7a\u3057\u3066\u306a\u3044\u3002\n\u3064\u307e\u308a\u7dcf\u5408\u7684\u306b\u4f55\u304c\u8a00\u3044\u305f\u3044\u304b\u3068\u3044\u3046\u3068\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u7279\u6b8a\u5316\u3068\u53ef\u5909\u9577\u5f15\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3042\u305f\u308a\u3092\u3046\u307e\u304f\u4f7f\u3048\u3070\u3001\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306a\u30bf\u30d7\u30eb\u6d3b\u7528\u30b3\u30fc\u30c9\u304b\u66f8\u3051\u308b\u3063\u3066\u3053\u3068\u3002\n\n\u3053\u306e\u30af\u30bd\u30b3\u30fc\u30c9\u3092\u898b\u3066\u5410\u304d\u6c17\u3092\u50ac\u3057\u3066\u3057\u307e\u3063\u305f\u65b9\u306f\u662f\u975e\u6dfb\u524a\u3092\u304a\u9858\u3044\u3057\u305f\u3044\u3082\u306e\u3060\u3002\n\u81ea\u5206\u81ea\u8eab\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3068\u30a4\u30f3\u30c7\u30f3\u30c8\u3092\u653e\u308a\u6295\u3052\u308b\u304f\u3089\u3044\u9762\u5012\u306b\u306a\u3063\u305f\u3002\u53cd\u7701\u3002\n\n\u8ffd\u8a18: \u518d\u5e30\u5c55\u958b\u306e\u3084\u3064\u3001\u3068\u3053\u308d\u3069\u3053\u308d\u30b3\u30d4\u30fc\u3057\u3066\u3044\u308b\u3002\u30e0\u30fc\u30d6\u3057\u5fd8\u308c\u305f\u3002\u8133\u5185\u7f6e\u63db\u3057\u3066\u3002\n\n#\u7d50\u8ad6\n\nstd::tuple\u306f\u3080\u305a\u304b\u3057\u3044\u3002\n", "tags": ["C++14", "C++"]}