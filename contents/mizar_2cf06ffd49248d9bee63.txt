{"context": "\u7279\u306b\u5f8c\u534a\u3001\u3060\u308c\u3066\u3057\u307e\u3063\u3066\u8352\u3044\u8aac\u660e\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4e0a\u4e0b\u65b9\u5411\u306e\u753b\u89d2\u4e00\u676f\u306b\u7269\u4f53\u3092\u63cf\u753b\u3059\u308b\u30ab\u30e1\u30e9\u306e\u4f8b\n\n\u8996\u9310\u53f0\u306e\u4f8b\uff08\u53f3\u624b\u7cfb\uff09\u3001Unity\u3067\u306f\u4e3b\u306b\u5de6\u624b\u7cfb\u304c\u7528\u3044\u3089\u308c\u3066\u3044\u308b\u3002(\u53f3\u624b\u7cfb - Wikipedia)\n\n\u3084\u308a\u305f\u304b\u3063\u305f\u4e8b\n\uff3b\u3053\u306e\u8a18\u4e8b\u3067\u306f\u6b63\u6295\u5f71(orthographic)\u30e2\u30fc\u30c9\u306e\u30ab\u30e1\u30e9\u306f\u5bfe\u8c61\u5916\u3067\u3059: <Unity - \u30de\u30cb\u30e5\u30a2\u30eb: \u30ab\u30e1\u30e9>\uff3d\n\u900f\u904e\u6295\u5f71(perspective)\u30e2\u30fc\u30c9\u306e\u30ab\u30e1\u30e9\u3067\u898b\u305b\u305f\u30443D\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8272\u3005\u306a\u89d2\u5ea6\u304b\u3089\u753b\u9762\u4e00\u676f\u306b\u8868\u793a\u3057\u305f\u3044\u6642\u3001\n\n\u753b\u9762\u306e\u7e26\u6a2a\u6bd4\u304c\u60f3\u5b9a\u3068\u9055\u3063\u3066\u308b\u3068\u5c0f\u3055\u3059\u304e\u305f\u308a\u306f\u307f\u51fa\u3057\u305f\u308a\n\u8868\u793a\u30a8\u30ea\u30a2\u306e\u30b5\u30a4\u30ba\u3092\u81ea\u7531\u306b\u8a2d\u5b9a\u3059\u308b\u306a\u3089\u7e26\u6a2a\u6bd4\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u591a\u3059\u304e\u308b\n\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u5411\u3051\u306a\u3089\u753b\u9762\u306e\u5411\u304d\u304c\u7e26\u3060\u3063\u305f\u308a\u6a2a\u3060\u3063\u305f\u308a\n\u3068\u306b\u304b\u304f\u624b\u52d5\u3067\u306e\u30ab\u30e1\u30e9\u30a2\u30f3\u30b0\u30eb\u8abf\u6574\u304c\u9762\u5012\n\n\u3068\u3044\u3046\u4e8b\u3067\u3001\u4eca\u56de\u306f\u900f\u904e\u6295\u5f71(perspective)\u30e2\u30fc\u30c9\u306e\u30ab\u30e1\u30e9\u306e\u305f\u3081\u306e\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5165\u529b\n\n\n\u30ab\u30e1\u30e9\u306e\u5411\u304d\u306e\u89d2\u5ea6\uff08Unity\u3067\u306f Quaternion \u3067\u8868\u73fe\uff09\n\u753b\u9762\u5185\u306b\u53ce\u3081\u305f\u3044\u7269\u4f53\u3082\u3057\u304f\u306f\u7a7a\u9593\u3092\u4ee3\u8868\u3059\u308b\u70b9\u306e\u96c6\u5408\n\u30ab\u30e1\u30e9\u306e\u753b\u89d2\uff08\u7e26\u30fb\u6a2a\uff09\nnear\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\n\n\n\u51fa\u529b\n\n\n\u6307\u5b9a\u3057\u305f\u70b9\u306e\u96c6\u5408\u3067\u69cb\u6210\u3055\u308c\u308b\u7a7a\u9593\u304c\u753b\u89d2\u304b\u3089\u306f\u307f\u51fa\u3055\u306a\u3044\u30ab\u30e1\u30e9\u306e\u4f4d\u7f6e\n\n\n\n\u4f46\u3057\u3001\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4e8b\u306f\u8003\u616e\u3057\u307e\u305b\u3093\u3002\n\n\u30ab\u30e1\u30e9\u4f4d\u7f6e\u306e\u62d8\u675f\u6761\u4ef6\n\n\n\u90e8\u5c4b\uff08\u5e8a\u3001\u58c1\uff09\u3084\u30d5\u30a3\u30fc\u30eb\u30c9\u306a\u3069\u306e\u5883\u754c\u306e\u5916\u5074\u306b\u30ab\u30e1\u30e9\u3092\u7f6e\u304f\u3088\u3046\u306a\u63cf\u753b\u3092\u907f\u3051\u305f\u3044\u3001\u76ee\u6a19\u7269\u3068\u30ab\u30e1\u30e9\u306e\u9593\u306b\u969c\u5bb3\u7269\u304c\u3042\u308b\u30a2\u30f3\u30b0\u30eb\u3092\u907f\u3051\u305f\u3044\u3001\u306a\u3069\u306e\u305d\u3082\u305d\u3082\u524d\u63d0\u3068\u306a\u308b\u30ab\u30e1\u30e9\u306e\u5411\u304d\u3084\u753b\u89d2\u306a\u3069\u3082\u8abf\u6574\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306e\u8003\u5bdf\u306f\u4eca\u56de\u306f\u884c\u3044\u307e\u305b\u3093\u3002\n\n\n\u8996\u9310\u53f0\u306efar\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\u306e\u8003\u616e\n\n\n\u7269\u4f53\u306e\u5f62\u72b6\u306b\u3088\u3063\u3066\u306f\u3001\u753b\u89d2\u306b\u5408\u308f\u305b\u308b\u3060\u3051\u3067\u306f\u30ab\u30e1\u30e9\u306b\u8fd1\u3059\u304e/\u9060\u3059\u304e\u3066\u8996\u9310\u53f0\u304b\u3089\u306f\u307f\u51fa\u3057\u3001\u4e00\u90e8\u3082\u3057\u304f\u306f\u5168\u90e8\u304c\u63cf\u753b\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\nnear\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\u306b\u3064\u3044\u3066\u306f\u30cf\u30df\u51fa\u3055\u306a\u3044\u3088\u3046\u8003\u616e\u3057\u307e\u3059\u304c\u3001far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\u306b\u3064\u3044\u3066\u306f\u6700\u7d42\u7684\u306b\u30cf\u30df\u51fa\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u306b\u89e6\u308c\u308b\u306e\u307f\u3068\u3057\u3001\u3053\u3053\u3067\u306f\u57fa\u672c\u7684\u306b\u8003\u616e\u3057\u307e\u305b\u3093\u3002\n\n\n\u5747\u7b49\u306a\u4f59\u767d\n\n\n\u4f8b\u3048\u3070\u4e0a\u4e0b\u65b9\u5411\u306f\u753b\u89d2\u3074\u3063\u305f\u308a\u3067\u5de6\u53f3\u65b9\u5411\u306b\u306f\u4f59\u767d\u304c\u751f\u3058\u308b\u5834\u5408\u3001\u5de6\u8fba\u3068\u53f3\u8fba\u306e\u4f59\u767d\u5e45\u304c\u5927\u304d\u304f\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u3063\u3059\u3050\u30ab\u30e1\u30e9\u3092\u5f15\u3044\u305f\u5834\u5408\u3001\u305d\u308c\u305e\u308c\u306e\u7aef\u306b\u306a\u308b\u70b9\u306e\u8ddd\u96e2\u304c\u7b49\u3057\u304f\u306a\u3044\u3068\u4f59\u767d\u306f\u5747\u7b49\u306b\u306f\u306a\u308a\u307e\u305b\u3093\uff08\u4f8b\uff1a\u4e0b\u56f3\uff09\u3002\u4eca\u56de\u306f\u7c21\u6613\u5316\u306e\u305f\u3081\u3001\u4f59\u767d\u3092\u4f59\u3089\u305b\u308b\u5834\u5408\u306f\u3053\u306e\uff08\u307e\u3063\u3059\u3050\u30ab\u30e1\u30e9\u3092\u5f15\u304f\uff09\u51e6\u7406\u306e\u307e\u307e\u3067\u89e3\u3092\u6c42\u3081\u307e\u3059\u3002\uff08\u6700\u60aa\u8a08\u7b97\u91cf\u3092\u4e0b\u624b\u306b\u5897\u3084\u3059\u3088\u308a\u306f $O(n)$ \u3067\u51fa\u6765\u308b\u7bc4\u56f2\u3068\u3044\u3046\u4e8b\u3067\u3002\uff09\n\u307e\u305f\u3001\u3053\u306e\u30ab\u30e1\u30e9\u3092\u5f15\u304f\u51e6\u7406\u306b\u3088\u3063\u3066\u5143\u3068\u306f\u5225\u306e\u70b9\u304c\u3088\u308a\u753b\u9762\u7aef\u306b\u73fe\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u753b\u89d2\u304b\u3089\u306f\u307f\u51fa\u3059\u3053\u3068\u306f\u7121\u3044\u306e\u3067\u4eca\u56de\u306f\u8e0f\u307f\u8fbc\u307f\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u767a\u5c55\u8ab2\u984c\u3068\u3057\u3066\u4f59\u767d\u3092\u5747\u7b49\u306b\u306a\u3089\u3059\u5834\u5408\u306f\u3053\u306e\u3088\u3046\u306a\u70b9\u304c\u73fe\u308c\u306a\u3044\u304b\u3082\u540c\u6642\u306b\u78ba\u8a8d\u3059\u308b\u65b9\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u4e0b\u56f3\u3067\u306f\u30ab\u30e1\u30e9\u304c $(0,0,0)$ \u306b\u3042\u3063\u305f\u6642\u306f $(-20,0,20)$ \u3068 $(10,0,10)$ \u304c\u753b\u9762\u7aef\u306b\u3042\u308b\u4f8b\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30ab\u30e1\u30e9\u3092 $(0,0,-10)$ \u307e\u3067\u5f15\u3044\u305f\u5834\u5408\u3001 $(36,0,40)$ \u306e\u70b9\u304c $(10,0,10)$ \u3088\u308a\u753b\u9762\u7aef\u65b9\u5411\u306b\u98db\u3073\u51fa\u3057\u3066\u898b\u3048\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002$x$\u8ef8\u65b9\u5411\u306b\u30ab\u30e1\u30e9\u3092\u52d5\u304b\u3057\u3066\u5de6\u53f3\u306e\u4f59\u767d\u3092\u5747\u7b49\u306b\u306a\u3089\u3059\u5834\u5408\u3001 $(-20,0,20)$ \u3068 $(10,0,10)$ \u306e\u70b9\u3060\u3051\u3092\u6ce8\u8996\u3059\u308b\u3068 $(-2,0,-10)$ \u306e\u4f4d\u7f6e\u306b\u30ab\u30e1\u30e9\u3092\u52d5\u304b\u3059\u306e\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u304c\u3001 $(36,0,40)$ \u306e\u70b9\u3082\u610f\u8b58\u3059\u308b\u3068\u9006\u306b $(1,0,-10)$ \u306e\u4f4d\u7f6e\u306b\u30ab\u30e1\u30e9\u3092\u52d5\u304b\u3057\u305f\u65b9\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\n\n\n\n\n\u3084\u3063\u3066\u307f\u305f\u4f8b\n\u4eca\u56de\u63d0\u793a\u3059\u308b\u624b\u6cd5\u3067\u3001\u3055\u307e\u3056\u307e\u306a\u65b9\u5411\u306b\u304a\u3051\u308b\u30ab\u30e1\u30e9\u4f4d\u7f6e\u3092\u8a08\u7b97\u3057\u305f\u4f8b\uff1a\n\nhttps://www.geogebra.org/o/rzqChVjh\nhttps://ggbm.at/rzqChVjh\nUnity\u3067\u3001\u3055\u307e\u3056\u307e\u306a\u65b9\u5411\u306b\u304a\u3051\u308b\u30ab\u30e1\u30e9\u4f4d\u7f6e\u3092\u8a08\u7b97\u3057\u305f\u4f8b\uff1a\n\nWebGL\u7248\u30b5\u30f3\u30d7\u30eb\u30d3\u30eb\u30c9 (\u5bb6\u30e2\u30c7\u30eb\u306f Asset Store: Town Houses Pack \u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002)\n\u30de\u30a6\u30b9\u306b\u3088\u308b\u30dc\u30bf\u30f3\u64cd\u4f5c\u306e\u4ed6\u3001q,w,e,a,s,d\u30ad\u30fc\u3067\u30ab\u30e1\u30e9\u306e\u56de\u8ee2\u64cd\u4f5c\u304c\u3067\u304d\u307e\u3059\u3002\nSetCamPos.cs: \u30ab\u30e1\u30e9\u65b9\u5411\u30fbGUI\u5468\u308a\u306a\u3069\u306e\u5236\u5fa1\n\nSetCamPos.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\npublic class SetCamPos : MonoBehaviour {\n    // \u753b\u9762\u5185\u306b\u53ce\u3081\u305f\u3044\u5bfe\u8c61\u7269\n    public GameObject[] targetObject = {};\n    public float lastUpdateTime = 0f;\n    public GUISkin guiskin;\n    // \u524d\u56de\u306e\u30ab\u30e1\u30e9\u60c5\u5831\u306e\u4fdd\u5b58\n    CamAutoPos prevCam = null;\n    Vector3[] transVec(Matrix4x4 mat, Vector3[] vec) {\n        Vector3[] trvec = new Vector3[vec.Length];\n        for(int i = 0; i < vec.Length; ++i) {\n            trvec[i] = mat.MultiplyPoint3x4(vec[i]);\n        }\n        return trvec;\n    }\n    Vector3[] combVec(Vector3[][] v) {\n        int ofs = 0, len = 0;\n        foreach(Vector3[] vi in v) {\n            len += vi.Length;\n        }\n        Vector3[] c = new Vector3[len];\n        foreach(Vector3[] vi in v) {\n            vi.CopyTo(c, ofs);\n            ofs += vi.Length;\n        }\n        return c;\n    }\n    Vector3[] getMeshVerts(GameObject[] gobj) {\n        List<Vector3[]> lvec = new List<Vector3[]>();\n        foreach(GameObject o in gobj) {\n            foreach(MeshFilter m in o.GetComponentsInChildren<MeshFilter>()) {\n                if(m.gameObject.activeInHierarchy) {\n                    lvec.Add(transVec(\n                        m.transform.localToWorldMatrix, \n                        m.mesh.vertices\n                    ));\n                }\n            }\n        }\n        return combVec(lvec.ToArray());\n    }\n    void OnGUI() {\n        GUI.skin = guiskin;\n        Transform tr = gameObject.transform;\n        // \u30dc\u30bf\u30f3\u30b5\u30a4\u30ba\u8a08\u7b97\n        int sH = Screen.height, sW = Screen.width;\n        int cmvBtn = Math.Max(Math.Max(sH, sW) / 12, 20), cmvBtnS = cmvBtn + 10;\n        // \u30ab\u30e1\u30e9\u56de\u8ee2\u30dc\u30bf\u30f3\n        if(GUI.RepeatButton(new Rect(sW - cmvBtnS * 3, 50 + cmvBtnS * 0, cmvBtn, cmvBtn), \"\u2199\")) {\n            tr.localRotation *= Quaternion.Euler( 0f,  0f,  0.1f);\n        }\n        if(GUI.RepeatButton(new Rect(sW - cmvBtnS * 1, 50 + cmvBtnS * 0, cmvBtn, cmvBtn), \"\u2198\")) {\n            tr.localRotation *= Quaternion.Euler( 0f,  0f, -0.1f);\n        }\n        if(GUI.RepeatButton(new Rect(sW - cmvBtnS * 2, 50 + cmvBtnS * 0, cmvBtn, cmvBtn), \"\u2191\")) {\n            tr.localRotation *= Quaternion.Euler( 0.1f,  0f,  0f);\n        }\n        if(GUI.RepeatButton(new Rect(sW - cmvBtnS * 2, 50 + cmvBtnS * 1, cmvBtn, cmvBtn), \"\u2193\")) {\n            tr.localRotation *= Quaternion.Euler(-0.1f,  0f,  0f);\n        }\n        if(GUI.RepeatButton(new Rect(sW - cmvBtnS * 3, 50 + cmvBtnS * 1, cmvBtn, cmvBtn), \"\u2190\")) {\n            tr.localRotation *= Quaternion.Euler( 0f,  0.1f,  0f);\n        }\n        if(GUI.RepeatButton(new Rect(sW - cmvBtnS * 1, 50 + cmvBtnS * 1, cmvBtn, cmvBtn), \"\u2192\")) {\n            tr.localRotation *= Quaternion.Euler( 0f, -0.1f,  0f);\n        }\n        GUI.Box(new Rect(sW - 360, 10, 350, 30), \n            tr.localRotation.eulerAngles.ToString() + \" : \" + tr.localPosition.ToString()\n        );\n    }\n    void Start() {\n    }\n    void Update() {\n        float nowRealtime = Time.realtimeSinceStartup;\n        Transform tr = gameObject.transform;\n        Camera cam = gameObject.GetComponent<Camera>();\n        // \u30ad\u30fc\u5165\u529b\u306b\u3088\u308b\u56de\u8ee2\n        if(Input.GetKey(\"a\")) { tr.localRotation *= Quaternion.Euler( 0f,  0.1f,  0f); }\n        if(Input.GetKey(\"d\")) { tr.localRotation *= Quaternion.Euler( 0f, -0.1f,  0f); }\n        if(Input.GetKey(\"w\")) { tr.localRotation *= Quaternion.Euler( 0.1f,  0f,  0f); }\n        if(Input.GetKey(\"s\")) { tr.localRotation *= Quaternion.Euler(-0.1f,  0f,  0f); }\n        if(Input.GetKey(\"q\")) { tr.localRotation *= Quaternion.Euler( 0f,  0f,  0.1f); }\n        if(Input.GetKey(\"e\")) { tr.localRotation *= Quaternion.Euler( 0f,  0f, -0.1f); }\n        // \u73fe\u5728\u306e\u30ab\u30e1\u30e9\u306e\u56de\u8ee2\u89d2\u30fb\u753b\u89d2\u306a\u3069\u3092\u53d6\u5f97\n        CamAutoPos newCam = new CamAutoPos(\n            tr.rotation, 0.5f * cam.fieldOfView,\n            Mathf.Rad2Deg * Mathf.Atan(Mathf.Tan(0.5f * Mathf.Deg2Rad * cam.fieldOfView) * Screen.width / Screen.height),\n            cam.nearClipPlane, cam.farClipPlane);\n        // \u5909\u66f4\u304c\u3042\u308c\u3070\u30ab\u30e1\u30e9\u4f4d\u7f6e\u3092\u518d\u8a08\u7b97\u3057\u3066\u8a2d\u5b9a\n        if(!newCam.Equals(this.prevCam) || nowRealtime > lastUpdateTime + 1f) {\n            lastUpdateTime = nowRealtime;\n            this.prevCam = newCam;\n            tr.position = newCam.getCamPos(getMeshVerts(targetObject));\n        }\n    }\n}\n\n\nCamAutoPos.cs: \u30ab\u30e1\u30e9\u4f4d\u7f6e\u306e\u8a08\u7b97\n\nCamAutoPos.cs\nusing UnityEngine;\n\n/**\n<summary>\u900f\u904e\u6295\u5f71\u306b\u3066\u5bfe\u8c61\u7269\u3092\u6307\u5b9a\u65b9\u5411\u304b\u3089\u6307\u5b9a\u753b\u89d2\u306b\u304a\u3055\u3081\u308b\u30ab\u30e1\u30e9\u4f4d\u7f6e\u306e\u8a08\u7b97</summary>\n<example>\nCamera\u306b\u7d10\u4ed8\u3051\u308bScript\u306e\u4f8b\uff1a\n<code><![CDATA[\npublic class CamRotateTest : MonoBehaviour {\n    // \u753b\u9762\u5185\u306b\u53ce\u3081\u305f\u3044\u5bfe\u8c61\u7269\u3082\u3057\u304f\u306f\u305d\u308c\u3092\u8986\u3046\u9802\u70b9\u7fa4\n    // \u4f8b: \u539f\u70b9\u4e2d\u5fc3\u306e1\u8fba\u306e\u9577\u30551\u306e\u7acb\u65b9\u4f53\n    public Vector3[] targetVerts = {\n        new Vector3(-0.5f, -0.5f, -0.5f),\n        new Vector3(+0.5f, -0.5f, -0.5f),\n        new Vector3(-0.5f, +0.5f, -0.5f),\n        new Vector3(+0.5f, +0.5f, -0.5f),\n        new Vector3(-0.5f, -0.5f, +0.5f),\n        new Vector3(+0.5f, -0.5f, +0.5f),\n        new Vector3(-0.5f, +0.5f, +0.5f),\n        new Vector3(+0.5f, +0.5f, +0.5f)\n    };\n    // \u524d\u56de\u306e\u30ab\u30e1\u30e9\u60c5\u5831\u306e\u4fdd\u5b58\n    CamAutoPos prevCam = null;\n    void Start() {}\n    void Update() {\n        Transform tr = gameObject.transform;\n        Camera cam = gameObject.GetComponent<Camera>();\n        // \u30ad\u30fc\u5165\u529b\u306b\u3088\u308b\u56de\u8ee2\n        if(Input.GetKey(\"a\")) { tr.localRotation *= Quaternion.Euler( 0f,  0.1f,  0f); }\n        if(Input.GetKey(\"d\")) { tr.localRotation *= Quaternion.Euler( 0f, -0.1f,  0f); }\n        if(Input.GetKey(\"w\")) { tr.localRotation *= Quaternion.Euler( 0.1f,  0f,  0f); }\n        if(Input.GetKey(\"s\")) { tr.localRotation *= Quaternion.Euler(-0.1f,  0f,  0f); }\n        if(Input.GetKey(\"q\")) { tr.localRotation *= Quaternion.Euler( 0f,  0f,  0.1f); }\n        if(Input.GetKey(\"e\")) { tr.localRotation *= Quaternion.Euler( 0f,  0f, -0.1f); }\n        // \u73fe\u5728\u306e\u30ab\u30e1\u30e9\u306e\u56de\u8ee2\u89d2\u30fb\u753b\u89d2\u306a\u3069\u3092\u53d6\u5f97\n        CamAutoPos newCam = new CamAutoPos(\n            tr.localRotation, 0.5f * cam.fieldOfView,\n            Mathf.Rad2Deg * Mathf.Atan(Mathf.Tan(0.5f * Mathf.Deg2Rad * cam.fieldOfView) * Screen.width / Screen.height),\n            cam.nearClipPlane, cam.farClipPlane);\n        // \u5909\u66f4\u304c\u3042\u308c\u3070\u30ab\u30e1\u30e9\u4f4d\u7f6e\u3092\u518d\u8a08\u7b97\u3057\u3066\u8a2d\u5b9a\n        if(!newCam.Equals(this.prevCam)) {\n            this.prevCam = newCam;\n            tr.localPosition = newCam.getCamPos(targetVerts);\n        }\n    }\n}\n]]></code>\n</example>\n*/\npublic class CamAutoPos : System.Object {\n    public Quaternion rot;\n    public float vfv, hfv, Znear, Zfar;\n    /**\n    <summary>\u30ab\u30e1\u30e9\u8a2d\u5b9a\u69cb\u7bc9</summary>\n    */\n    public CamAutoPos(Quaternion? rot = null, float vfv = float.NaN, float hfv = float.NaN, float Znear = -1f, float Zfar = -1f) {\n        this.rot = rot ?? Camera.main.transform.localRotation;\n        this.vfv = float.IsNaN(vfv) ? 0.5f * Camera.main.fieldOfView : vfv;\n        this.hfv = float.IsNaN(hfv) ? Mathf.Rad2Deg * Mathf.Atan(Mathf.Tan(Mathf.Deg2Rad * this.vfv) * Screen.width / Screen.height) : hfv;\n        this.Znear = Znear = (Znear >= 0f)? Znear: Camera.main.nearClipPlane;\n        this.Zfar = Zfar = (Zfar >= 0f)? Zfar: Camera.main.farClipPlane;\n    }\n    /** \n    <summary>\u30ab\u30e1\u30e9\u8a2d\u5b9a\u6bd4\u8f03</summary>\n    */\n    public override bool Equals(System.Object obj) {\n        if(obj == null) {\n            return false;\n        }\n        CamAutoPos p = obj as CamAutoPos;\n        if((System.Object)p == null) {\n            return false;\n        }\n        return \n            (this.rot == p.rot) &&\n            (this.vfv == p.vfv) &&\n            (this.hfv == p.hfv) &&\n            (this.Znear == p.Znear) &&\n            (this.Zfar == p.Zfar);\n    }\n    /**\n    <summary>\u30cf\u30c3\u30b7\u30e5</summary>\n    */\n    public override int GetHashCode() {\n        return (int)(vfv * hfv);\n    }\n    /**\n    <summary>\u6700\u5927\u5185\u7a4d</summary>\n    */\n    static public float maxDotVec(Vector3[] posTrCam, Vector3 vVec) {\n        float u, v = float.NaN;\n        for(int i = 0; i < posTrCam.Length; ++i) {\n            u = Vector3.Dot(posTrCam[i], vVec);\n            if(u > v || float.IsNaN(v)) { v = u; }\n        }\n        return v;\n    }\n    /**\n    <summary>\u30ab\u30e1\u30e9\u4f4d\u7f6e\u8a08\u7b97</summary>\n    <param name=\"targetPos\">\u76ee\u6a19\u7269\u3001\u82e5\u3057\u304f\u306f\u305d\u308c\u3092\u8986\u3046\u70b9\u7fa4</param>\n    <param name=\"rot\">\u9802\u70b9\u7fa4\u306e\u5ea7\u6a19\u306b\u5bfe\u3059\u308b\u30ab\u30e1\u30e9\u306e\u7e26\u753b\u89d2</param>\n    <param name=\"vfv\">\u30ab\u30e1\u30e9\u306e\u5782\u76f4\u65b9\u5411\u306e\u753b\u89d2\u306e\u534a\u5206\uff08\u5ea6\uff09 [vfv > 0f && vfv < 90f]</param>\n    <param name=\"hfv\">\u30ab\u30e1\u30e9\u306e\u6c34\u5e73\u65b9\u5411\u306e\u753b\u89d2\u306e\u534a\u5206\uff08\u5ea6\uff09 [hfv > 0f && hfv < 90f]</param>\n    <param name=\"Znear\">near\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2</param>\n    <param name=\"Zfar\">far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2</param>\n    */\n    static public Vector3 calcCamPos(Vector3[] targetPos, Quaternion? rot = null, float vfv = float.NaN, float hfv = float.NaN, float Znear = 0f, float Zfar = float.PositiveInfinity) {\n        // \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u8a2d\u5b9a\n        Quaternion _rot = rot ?? Camera.main.transform.localRotation;\n        vfv = float.IsNaN(vfv) ? 0.5f * Camera.main.fieldOfView : vfv;\n        hfv = float.IsNaN(hfv) ? Mathf.Rad2Deg * Mathf.Atan(Mathf.Tan(Mathf.Deg2Rad * vfv) * Screen.width / Screen.height) : hfv;\n        // \u7e26\u753b\u89d2/2, \u6a2a\u753b\u89d2/2\n        float\n            Yrad = Mathf.Deg2Rad * vfv,\n            Ysin = Mathf.Sin(Yrad),\n            Ycos = Mathf.Cos(Yrad),\n            Xrad = Mathf.Deg2Rad * hfv,\n            Xsin = Mathf.Sin(Xrad),\n            Xcos = Mathf.Cos(Xrad);\n        // \u5782\u7dda\u65b9\u5411\u306e\u5358\u4f4d\u30d9\u30af\u30c8\u30eb\n        Vector3\n            YNperp = new Vector3(0f, -Ycos, -Ysin),\n            YPperp = new Vector3(0f, +Ycos, -Ysin),\n            XNperp = new Vector3(-Xcos, 0f, -Xsin),\n            XPperp = new Vector3(+Xcos, 0f, -Xsin);\n        // \u539f\u70b9\u304b\u3089\u753b\u89d2\u9762\u307e\u3067\u306e\u5782\u7dda\u9577\u3055\n        float\n            maxYN = maxDotVec(targetPos, _rot * YNperp),\n            maxYP = maxDotVec(targetPos, _rot * YPperp),\n            maxXN = maxDotVec(targetPos, _rot * XNperp),\n            maxXP = maxDotVec(targetPos, _rot * XPperp),\n            maxNear = maxDotVec(targetPos, _rot * Vector3.back);\n        // \u30ab\u30e1\u30e9\u4f4d\u7f6e\u6c7a\u5b9a\n        return _rot * new Vector3(\n            0.5f * (maxXP - maxXN) / Xcos, \n            0.5f * (maxYP - maxYN) / Ycos, \n            -Mathf.Max(\n                0.5f * (maxXN + maxXP) / Xsin, \n                0.5f * (maxYN + maxYP) / Ysin,\n                maxNear + Znear));\n    }\n    /**\n    <summary>\u30ab\u30e1\u30e9\u4f4d\u7f6e\u53d6\u5f97</summary>\n    */\n    public Vector3 getCamPos(Vector3[] targetPos) {\n        return calcCamPos(targetPos, rot, vfv, hfv, Znear, Zfar);\n    }\n}\n\n\n\n\u30ab\u30e1\u30e9\u306e\u65b9\u5411\u30fb\u753b\u89d2\u30fbnear\u8ddd\u96e2\n\n\"\u8996\u9310\u53f0\" (View frustum, Viewing fustum) \u306e\u89e3\u8aac\u8a18\u4e8b\n\n\n\u8996\u9310\u53f0 - MSDN - Microsoft\nUnity - \u30de\u30cb\u30e5\u30a2\u30eb: \u8996\u9310\u53f0\u3092\u7406\u89e3\u3059\u308b\nViewing frustum - Wikipedia(en)\n\n\n\u30ab\u30e1\u30e9\u8996\u91ce\u57fa\u6e96\u306e\u30d9\u30af\u30c8\u30eb$P$ $\\to$ \u5b9f\u5ea7\u6a19\u3067\u306e\u30d9\u30af\u30c8\u30eb$P'$ \u306b\u56de\u8ee2\u3059\u308b\u95a2\u6570$T$\u3092 $T(P) = P'$ \u3068\u3059\u308b\n\n\nT = (Camera cam, Vector3 P) => cam.transform.localRotation * P\nUnity \u3067\u306f\u56de\u8ee2\u306e\u8868\u73fe\u306b\u306f Quaternion \u3092\u7528\u3044\u3001Quaternion \u3084 Vector3 \u306e\u56de\u8ee2\u306f \u4e57\u7b97\u30aa\u30da\u30ec\u30fc\u30bf \"*\" \u306b\u3066\u884c\u3046\n\n\n\u753b\u9762\u4e2d\u592e\u304b\u3089\u753b\u9762\u4e0a\u7aef\u4e2d\u592e\u307e\u305f\u306f\u753b\u9762\u4e0b\u7aef\u4e2d\u592e\u307e\u3067\u306e\u5782\u76f4\u65b9\u5411\u306e\u8996\u91ce\u89d2\u3092$\\theta_y$\u3068\u3059\u308b\n\n\n\u753b\u9762\u7e26\u65b9\u5411\u306e\u7aef\u304b\u3089\u7aef\u307e\u3067\u306e\u5782\u76f4\u65b9\u5411\u306e\u8996\u91ce\u89d2\u306e\u534a\u5206\u304c $\\theta_y$ \u3002\n$0^\\circ < \\theta_y < 90^\\circ$\nUnity\u3067\u306f Camera.fieldOfView \u304c $2\\theta_y$ \u306b\u76f8\u5f53\uff08\u4f46\u3057\u3001\u5358\u4f4d\u306f\u30e9\u30b8\u30a2\u30f3\u3067\u306f\u306a\u304f\u5ea6\uff09\u3002\nfloat theta_y = 0.5f * Mathf.Deg2Rad * cam.fieldOfView;\n\n\n\u753b\u9762\u4e2d\u5fc3\u304b\u3089\u753b\u9762\u5de6\u7aef\u4e2d\u592e\u307e\u305f\u306f\u753b\u9762\u53f3\u7aef\u4e2d\u592e\u307e\u3067\u306e\u8996\u91ce\u89d2\u3092$\\theta_x$\u3068\u3059\u308b\n\n\n\u753b\u9762\u6a2a\u65b9\u5411\u306e\u7aef\u304b\u3089\u7aef\u307e\u3067\u306e\u6c34\u5e73\u65b9\u5411\u306e\u8996\u91ce\u89d2\u306e\u534a\u5206\u304c $\\theta_x$ \u3002\n$0^\\circ < \\theta_x < 90^\\circ$\nUnity\u3067\u306f\u76f4\u63a5\u3053\u308c\u3092\u793a\u3059\u3082\u306e\u306f\u306a\u3044\u306e\u3067\u3001\u753b\u9762\u4e00\u676f\u306b\u63cf\u5199\u3057\u305f\u3044\u5834\u5408\u306f Camera.fieldOfView, Screen.width, Screen.height \u3092\u7528\u3044\u3066\u7b97\u51fa\nfloat theta_x = Mathf.Atan(Mathf.Tan(theta_y) * (float)Width / (float)Height);\n\n\nnear/far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\n\n\nUnity\u3067\u306f Camera.nearClipPlane, Camera.farClipPlane \u3002\n\n\n\n\n\u5e73\u9762\u306b\u5bfe\u3059\u308b\u70b9\u306e\u9ad8\u3055\n\u5e73\u9762$P$\u306e\u5358\u4f4d\u6cd5\u7dda\u30d9\u30af\u30c8\u30eb\u3092$\\vec{n}$\uff08$|\\vec{n}|=1$\uff09\u3001\u5e73\u9762$P$\u4e0a\u306e\u4efb\u610f\u306e\u70b9\u3092$Q$\u3068\u3057\u305f\u6642\u3001\u7a7a\u9593\u4e0a\u306e\u4efb\u610f\u306e\u70b9$R$\u306e\u5e73\u9762$P$\u306b\u5bfe\u3059\u308b$\\vec{n}$\u65b9\u5411\u306e\u9ad8\u3055$h$\u306f\u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u3092\u7528\u3044\u3066 $h=\\vec{QR}\\cdot\\vec{n}$ \u3068\u8868\u3055\u308c\u308b\u3002\n\nUnity \u3067\u306f Vector3 \u306e\u5185\u7a4d\u306f Vector3.Dot \u306b\u3066\u884c\u3046\n\n\n\u753b\u89d2\u5883\u754c\u9762\u306e\u5358\u4f4d\u6cd5\u7dda\u30d9\u30af\u30c8\u30eb\n\u753b\u9762\u306e\u5916\u5074\u65b9\u5411\u3092\u5411\u304f\u5358\u4f4d\u6cd5\u7dda\u30d9\u30af\u30c8\u30eb\u30924\u65b9\u5411\u305d\u308c\u305e\u308c\u306b\u5b9a\u7fa9\u3059\u308b\u3068\u3001\n\n\u753b\u9762\u4e0b\u7aef\u9762: $\\vec{Y^-}=(0,-\\cos\\theta_y,-\\sin\\theta_y)$\n\u753b\u9762\u4e0a\u7aef\u9762: $\\vec{Y^+}=(0,+\\cos\\theta_y,-\\sin\\theta_y)$\n\u753b\u9762\u5de6\u7aef\u9762: $\\vec{X^-}=(-\\cos\\theta_x,0,-\\sin\\theta_x)$\n\u753b\u9762\u53f3\u7aef\u9762: $\\vec{X^+}=(+\\cos\\theta_x,0,-\\sin\\theta_x)$\n\n\n\u6700\u3082\u753b\u9762\u9685\u306b\u3042\u308b\u70b9\u3092\u901a\u3059\u9762\u306e\u4f4d\u7f6e\u306e\u691c\u51fa\n\u539f\u70b9\u3092$O$\u3001\u76ee\u6a19\u306e\u70b9\u306e\u96c6\u5408\u3092$\\{R_i\\}$\u3068\u3057\u3066\u3001\u539f\u70b9$O$\u306b\u30ab\u30e1\u30e9\u3092\u7f6e\u3044\u305f\u5834\u5408\u306e\u753b\u89d2\u9762\uff08\u8a08\u7b97\u306e\u305f\u3081\u306e\u57fa\u6e96\u9762\uff09\u3068\u3001\u6700\u3082\u753b\u9762\u9685\u306b\u3042\u308b\u70b9\u3092\u901a\u308b\u305d\u308c\u306b\u5e73\u884c\u306a\u5e73\u9762\uff08\u305d\u308c\u305e\u308c\u306e\u65b9\u5411\u3067\u671b\u3080\u753b\u89d2\u306b\u53ce\u3081\u308b\u305f\u3081\u306e\u9762\u3001\u6c42\u3081\u308b\u3079\u304d\u30ab\u30e1\u30e9\u4f4d\u7f6e\u306e\u9006\u7b97\u7528\uff09\u3068\u306e\u8ddd\u96e2\u306f\u305d\u308c\u305e\u308c\n\n\u753b\u9762\u4e0b\u7aef\u9762: $\\mathcal{Y^-}=\\max\\{\\vec{OR_i}\\cdot T(\\vec{Y^-})\\}$\n\u753b\u9762\u4e0a\u7aef\u9762: $\\mathcal{Y^+}=\\max\\{\\vec{OR_i}\\cdot T(\\vec{Y^+})\\}$\n\u753b\u9762\u5de6\u7aef\u9762: $\\mathcal{X^-}=\\max\\{\\vec{OR_i}\\cdot T(\\vec{X^-})\\}$\n\u753b\u9762\u53f3\u7aef\u9762: $\\mathcal{X^+}=\\max\\{\\vec{OR_i}\\cdot T(\\vec{X^+})\\}$\n\n\nnear/far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\n\nnear\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\u3092 $l_{near}$ \u3001far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\u3092 $l_{far}$ $(0 \\le l_{near} < l_{far})$ \u3068\u3057\u3066\u3001\n\u753b\u9762\u624b\u524d\u65b9\u5411\u306e\u5358\u4f4d\u30d9\u30af\u30c8\u30eb: $\\vec{Z^-}=(0,0,-1)$\n\u753b\u9762\u5965\u65b9\u5411\u306e\u5358\u4f4d\u30d9\u30af\u30c8\u30eb: $\\vec{Z^+}=(0,0,1)$\n\u6700\u8fd1\u70b9: $\\mathcal{Z^-}=\\max\\{\\vec{OR_i}\\cdot T(\\vec{Z^-})\\}=-\\min\\{\\vec{OR_i}\\cdot T(\\vec{Z^+})\\}$\n\n\nnear\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u9762\u3068\u306e\u76f8\u5bfe\u4f4d\u7f6e\u6bd4\u8f03\u7528\n\n\n\u6700\u9060\u70b9: $\\mathcal{Z^+}=\\min\\{\\vec{OR_i}\\cdot T(\\vec{Z^-})\\}=-\\max\\{\\vec{OR_i}\\cdot T(\\vec{Z^+})\\}$\n\n\nfar\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u9762\u3068\u306e\u76f8\u5bfe\u4f4d\u7f6e\u6bd4\u8f03\u7528\n\n\n\n\n\u30ab\u30e1\u30e9\u4f4d\u7f6e\u306e\u89e3\n\u4ee5\u4e0a\u3088\u308a\u3001\u30ab\u30e1\u30e9\u306e\u4f4d\u7f6e\u30d9\u30af\u30c8\u30eb\u306f\nT\\left(\\left(\n\\frac{\\mathcal{X^+}-\\mathcal{X^-}}{2\\cos\\theta_x},\n\\frac{\\mathcal{Y^+}-\\mathcal{Y^-}}{2\\cos\\theta_y},\n-\\max\\left\\{\n\\frac{\\mathcal{X^+}+\\mathcal{X^-}}{2\\sin\\theta_x},\n\\frac{\\mathcal{Y^+}+\\mathcal{Y^-}}{2\\sin\\theta_y},\n\\left(\\mathcal{Z^-}+l_{near}\\right)\n\\right\\}\n\\right)\\right)\n$${T\\left(\\left(\n\\frac{\\mathcal{X^+}-\\mathcal{X^-}}{2\\cos\\theta_x},\n\\frac{\\mathcal{Y^+}-\\mathcal{Y^-}}{2\\cos\\theta_y},\n-\\max\\left\\{\n\\frac{\\mathcal{X^+}+\\mathcal{X^-}}{2\\sin\\theta_x},\n\\frac{\\mathcal{Y^+}+\\mathcal{Y^-}}{2\\sin\\theta_y},\n\\left(\\mathcal{Z^-}+l_{near}\\right)\n\\right\\}\n\\right)\\right)\n}$$\n\u3068\u306a\u308b\u3002\u307e\u305f\u3001\u76ee\u6a19\u70b9\u304c\u5168\u3066far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\u306b\u53ce\u307e\u308b\u304b\u306f\u3001\u4ee5\u4e0b\u306e\u4e0d\u7b49\u5f0f\u3067\u5224\u5225\u3059\u308b\uff08\u4e0d\u7b49\u5f0f\u304c\u6210\u308a\u7acb\u3066\u3070far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\u304b\u3089\u306f\u307f\u51fa\u3055\u306a\u3044\u3068\u898b\u306a\u3059\uff09\u3002\n(\\mathcal{Z^+}+l_{far}) \\ge \\max\\left\\{\\frac{\\mathcal{X^+}+\\mathcal{X^-}}{2\\sin\\theta_x},\\frac{\\mathcal{Y^+}+\\mathcal{Y^-}}{2\\sin\\theta_y},\\left(\\mathcal{Z^-}+l_{near}\\right)\\right\\}\n$${(\\mathcal{Z^+}+l_{far}) \\ge \\max\\left\\{\\frac{\\mathcal{X^+}+\\mathcal{X^-}}{2\\sin\\theta_x},\\frac{\\mathcal{Y^+}+\\mathcal{Y^-}}{2\\sin\\theta_y},\\left(\\mathcal{Z^-}+l_{near}\\right)\\right\\}\n}$$\n\u7279\u306b\u5f8c\u534a\u3001\u3060\u308c\u3066\u3057\u307e\u3063\u3066\u8352\u3044\u8aac\u660e\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/106474/e0b4808f-9bb0-0318-8643-2316388b9f34.png)\n\u4e0a\u4e0b\u65b9\u5411\u306e\u753b\u89d2\u4e00\u676f\u306b\u7269\u4f53\u3092\u63cf\u753b\u3059\u308b\u30ab\u30e1\u30e9\u306e\u4f8b\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/106474/1ab5acde-9abf-d4f8-9e8f-3b173e8064c4.png)\n\u8996\u9310\u53f0\u306e\u4f8b\uff08\u53f3\u624b\u7cfb\uff09\u3001Unity\u3067\u306f\u4e3b\u306b\u5de6\u624b\u7cfb\u304c\u7528\u3044\u3089\u308c\u3066\u3044\u308b\u3002([\u53f3\u624b\u7cfb - Wikipedia](https://ja.wikipedia.org/wiki/%E5%8F%B3%E6%89%8B%E7%B3%BB))\n\n# \u3084\u308a\u305f\u304b\u3063\u305f\u4e8b\n\n\uff3b\u3053\u306e\u8a18\u4e8b\u3067\u306f\u6b63\u6295\u5f71(orthographic)\u30e2\u30fc\u30c9\u306e\u30ab\u30e1\u30e9\u306f\u5bfe\u8c61\u5916\u3067\u3059: <[Unity - \u30de\u30cb\u30e5\u30a2\u30eb: \u30ab\u30e1\u30e9](https://docs.unity3d.com/jp/current/Manual/CamerasOverview.html)>\uff3d\n\n\u900f\u904e\u6295\u5f71(perspective)\u30e2\u30fc\u30c9\u306e\u30ab\u30e1\u30e9\u3067\u898b\u305b\u305f\u30443D\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8272\u3005\u306a\u89d2\u5ea6\u304b\u3089\u753b\u9762\u4e00\u676f\u306b\u8868\u793a\u3057\u305f\u3044\u6642\u3001\n\n* \u753b\u9762\u306e\u7e26\u6a2a\u6bd4\u304c\u60f3\u5b9a\u3068\u9055\u3063\u3066\u308b\u3068\u5c0f\u3055\u3059\u304e\u305f\u308a\u306f\u307f\u51fa\u3057\u305f\u308a\n* \u8868\u793a\u30a8\u30ea\u30a2\u306e\u30b5\u30a4\u30ba\u3092\u81ea\u7531\u306b\u8a2d\u5b9a\u3059\u308b\u306a\u3089\u7e26\u6a2a\u6bd4\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u591a\u3059\u304e\u308b\n* \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u5411\u3051\u306a\u3089\u753b\u9762\u306e\u5411\u304d\u304c\u7e26\u3060\u3063\u305f\u308a\u6a2a\u3060\u3063\u305f\u308a\n* \u3068\u306b\u304b\u304f\u624b\u52d5\u3067\u306e\u30ab\u30e1\u30e9\u30a2\u30f3\u30b0\u30eb\u8abf\u6574\u304c\u9762\u5012\n\n\u3068\u3044\u3046\u4e8b\u3067\u3001\u4eca\u56de\u306f\u900f\u904e\u6295\u5f71(perspective)\u30e2\u30fc\u30c9\u306e\u30ab\u30e1\u30e9\u306e\u305f\u3081\u306e\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n* \u5165\u529b\n   * \u30ab\u30e1\u30e9\u306e\u5411\u304d\u306e\u89d2\u5ea6\uff08Unity\u3067\u306f [`Quaternion`](https://docs.unity3d.com/jp/current/ScriptReference/Quaternion.html) \u3067\u8868\u73fe\uff09\n   * \u753b\u9762\u5185\u306b\u53ce\u3081\u305f\u3044\u7269\u4f53\u3082\u3057\u304f\u306f\u7a7a\u9593\u3092\u4ee3\u8868\u3059\u308b\u70b9\u306e\u96c6\u5408\n   * \u30ab\u30e1\u30e9\u306e\u753b\u89d2\uff08\u7e26\u30fb\u6a2a\uff09\n   * near\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\n* \u51fa\u529b\n   * \u6307\u5b9a\u3057\u305f\u70b9\u306e\u96c6\u5408\u3067\u69cb\u6210\u3055\u308c\u308b\u7a7a\u9593\u304c\u753b\u89d2\u304b\u3089\u306f\u307f\u51fa\u3055\u306a\u3044\u30ab\u30e1\u30e9\u306e\u4f4d\u7f6e\n\n\u4f46\u3057\u3001\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4e8b\u306f\u8003\u616e\u3057\u307e\u305b\u3093\u3002\n\n* \u30ab\u30e1\u30e9\u4f4d\u7f6e\u306e\u62d8\u675f\u6761\u4ef6\n   * \u90e8\u5c4b\uff08\u5e8a\u3001\u58c1\uff09\u3084\u30d5\u30a3\u30fc\u30eb\u30c9\u306a\u3069\u306e\u5883\u754c\u306e\u5916\u5074\u306b\u30ab\u30e1\u30e9\u3092\u7f6e\u304f\u3088\u3046\u306a\u63cf\u753b\u3092\u907f\u3051\u305f\u3044\u3001\u76ee\u6a19\u7269\u3068\u30ab\u30e1\u30e9\u306e\u9593\u306b\u969c\u5bb3\u7269\u304c\u3042\u308b\u30a2\u30f3\u30b0\u30eb\u3092\u907f\u3051\u305f\u3044\u3001\u306a\u3069\u306e\u305d\u3082\u305d\u3082\u524d\u63d0\u3068\u306a\u308b\u30ab\u30e1\u30e9\u306e\u5411\u304d\u3084\u753b\u89d2\u306a\u3069\u3082\u8abf\u6574\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306e\u8003\u5bdf\u306f\u4eca\u56de\u306f\u884c\u3044\u307e\u305b\u3093\u3002\n* \u8996\u9310\u53f0\u306efar\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\u306e\u8003\u616e\n   * \u7269\u4f53\u306e\u5f62\u72b6\u306b\u3088\u3063\u3066\u306f\u3001\u753b\u89d2\u306b\u5408\u308f\u305b\u308b\u3060\u3051\u3067\u306f\u30ab\u30e1\u30e9\u306b\u8fd1\u3059\u304e/\u9060\u3059\u304e\u3066\u8996\u9310\u53f0\u304b\u3089\u306f\u307f\u51fa\u3057\u3001\u4e00\u90e8\u3082\u3057\u304f\u306f\u5168\u90e8\u304c\u63cf\u753b\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n   * near\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\u306b\u3064\u3044\u3066\u306f\u30cf\u30df\u51fa\u3055\u306a\u3044\u3088\u3046\u8003\u616e\u3057\u307e\u3059\u304c\u3001far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\u306b\u3064\u3044\u3066\u306f\u6700\u7d42\u7684\u306b\u30cf\u30df\u51fa\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u306b\u89e6\u308c\u308b\u306e\u307f\u3068\u3057\u3001\u3053\u3053\u3067\u306f\u57fa\u672c\u7684\u306b\u8003\u616e\u3057\u307e\u305b\u3093\u3002\n* \u5747\u7b49\u306a\u4f59\u767d\n   * \u4f8b\u3048\u3070\u4e0a\u4e0b\u65b9\u5411\u306f\u753b\u89d2\u3074\u3063\u305f\u308a\u3067\u5de6\u53f3\u65b9\u5411\u306b\u306f\u4f59\u767d\u304c\u751f\u3058\u308b\u5834\u5408\u3001\u5de6\u8fba\u3068\u53f3\u8fba\u306e\u4f59\u767d\u5e45\u304c\u5927\u304d\u304f\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n   * \u307e\u3063\u3059\u3050\u30ab\u30e1\u30e9\u3092\u5f15\u3044\u305f\u5834\u5408\u3001\u305d\u308c\u305e\u308c\u306e\u7aef\u306b\u306a\u308b\u70b9\u306e\u8ddd\u96e2\u304c\u7b49\u3057\u304f\u306a\u3044\u3068\u4f59\u767d\u306f\u5747\u7b49\u306b\u306f\u306a\u308a\u307e\u305b\u3093\uff08\u4f8b\uff1a\u4e0b\u56f3\uff09\u3002\u4eca\u56de\u306f\u7c21\u6613\u5316\u306e\u305f\u3081\u3001\u4f59\u767d\u3092\u4f59\u3089\u305b\u308b\u5834\u5408\u306f\u3053\u306e\uff08\u307e\u3063\u3059\u3050\u30ab\u30e1\u30e9\u3092\u5f15\u304f\uff09\u51e6\u7406\u306e\u307e\u307e\u3067\u89e3\u3092\u6c42\u3081\u307e\u3059\u3002\uff08\u6700\u60aa\u8a08\u7b97\u91cf\u3092\u4e0b\u624b\u306b\u5897\u3084\u3059\u3088\u308a\u306f $O(n)$ \u3067\u51fa\u6765\u308b\u7bc4\u56f2\u3068\u3044\u3046\u4e8b\u3067\u3002\uff09\n   * \u307e\u305f\u3001\u3053\u306e\u30ab\u30e1\u30e9\u3092\u5f15\u304f\u51e6\u7406\u306b\u3088\u3063\u3066\u5143\u3068\u306f\u5225\u306e\u70b9\u304c\u3088\u308a\u753b\u9762\u7aef\u306b\u73fe\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u753b\u89d2\u304b\u3089\u306f\u307f\u51fa\u3059\u3053\u3068\u306f\u7121\u3044\u306e\u3067\u4eca\u56de\u306f\u8e0f\u307f\u8fbc\u307f\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u767a\u5c55\u8ab2\u984c\u3068\u3057\u3066\u4f59\u767d\u3092\u5747\u7b49\u306b\u306a\u3089\u3059\u5834\u5408\u306f\u3053\u306e\u3088\u3046\u306a\u70b9\u304c\u73fe\u308c\u306a\u3044\u304b\u3082\u540c\u6642\u306b\u78ba\u8a8d\u3059\u308b\u65b9\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n   * \u4e0b\u56f3\u3067\u306f\u30ab\u30e1\u30e9\u304c $(0,0,0)$ \u306b\u3042\u3063\u305f\u6642\u306f $(-20,0,20)$ \u3068 $(10,0,10)$ \u304c\u753b\u9762\u7aef\u306b\u3042\u308b\u4f8b\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30ab\u30e1\u30e9\u3092 $(0,0,-10)$ \u307e\u3067\u5f15\u3044\u305f\u5834\u5408\u3001 $(36,0,40)$ \u306e\u70b9\u304c $(10,0,10)$ \u3088\u308a\u753b\u9762\u7aef\u65b9\u5411\u306b\u98db\u3073\u51fa\u3057\u3066\u898b\u3048\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002$x$\u8ef8\u65b9\u5411\u306b\u30ab\u30e1\u30e9\u3092\u52d5\u304b\u3057\u3066\u5de6\u53f3\u306e\u4f59\u767d\u3092\u5747\u7b49\u306b\u306a\u3089\u3059\u5834\u5408\u3001 $(-20,0,20)$ \u3068 $(10,0,10)$ \u306e\u70b9\u3060\u3051\u3092\u6ce8\u8996\u3059\u308b\u3068 $(-2,0,-10)$ \u306e\u4f4d\u7f6e\u306b\u30ab\u30e1\u30e9\u3092\u52d5\u304b\u3059\u306e\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u304c\u3001 $(36,0,40)$ \u306e\u70b9\u3082\u610f\u8b58\u3059\u308b\u3068\u9006\u306b $(1,0,-10)$ \u306e\u4f4d\u7f6e\u306b\u30ab\u30e1\u30e9\u3092\u52d5\u304b\u3057\u305f\u65b9\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/106474/6d7aed79-4104-15e7-242e-16b32329f86e.png)\n\n# \u3084\u3063\u3066\u307f\u305f\u4f8b\n\n\u4eca\u56de\u63d0\u793a\u3059\u308b\u624b\u6cd5\u3067\u3001\u3055\u307e\u3056\u307e\u306a\u65b9\u5411\u306b\u304a\u3051\u308b\u30ab\u30e1\u30e9\u4f4d\u7f6e\u3092\u8a08\u7b97\u3057\u305f\u4f8b\uff1a\n![Frustum.gif](https://qiita-image-store.s3.amazonaws.com/0/106474/6cfe8552-332e-869c-4afb-e68b4f866971.gif)\nhttps://www.geogebra.org/o/rzqChVjh\nhttps://ggbm.at/rzqChVjh\n\nUnity\u3067\u3001\u3055\u307e\u3056\u307e\u306a\u65b9\u5411\u306b\u304a\u3051\u308b\u30ab\u30e1\u30e9\u4f4d\u7f6e\u3092\u8a08\u7b97\u3057\u305f\u4f8b\uff1a\n![image](https://qiita-image-store.s3.amazonaws.com/0/106474/c75ee5f8-53cc-698c-2a42-5ae1f667fab9.png)\n[WebGL\u7248\u30b5\u30f3\u30d7\u30eb\u30d3\u30eb\u30c9](https://lab.mzr.jp/unity/camera/) (\u5bb6\u30e2\u30c7\u30eb\u306f [Asset Store: Town Houses Pack](https://www.assetstore.unity3d.com/jp/#!/content/42717) \u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002)\n\u30de\u30a6\u30b9\u306b\u3088\u308b\u30dc\u30bf\u30f3\u64cd\u4f5c\u306e\u4ed6\u3001q,w,e,a,s,d\u30ad\u30fc\u3067\u30ab\u30e1\u30e9\u306e\u56de\u8ee2\u64cd\u4f5c\u304c\u3067\u304d\u307e\u3059\u3002\n\n`SetCamPos.cs`: \u30ab\u30e1\u30e9\u65b9\u5411\u30fbGUI\u5468\u308a\u306a\u3069\u306e\u5236\u5fa1\n\n```csharp:SetCamPos.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\npublic class SetCamPos : MonoBehaviour {\n\t// \u753b\u9762\u5185\u306b\u53ce\u3081\u305f\u3044\u5bfe\u8c61\u7269\n\tpublic GameObject[] targetObject = {};\n\tpublic float lastUpdateTime = 0f;\n\tpublic GUISkin guiskin;\n\t// \u524d\u56de\u306e\u30ab\u30e1\u30e9\u60c5\u5831\u306e\u4fdd\u5b58\n\tCamAutoPos prevCam = null;\n\tVector3[] transVec(Matrix4x4 mat, Vector3[] vec) {\n\t\tVector3[] trvec = new Vector3[vec.Length];\n\t\tfor(int i = 0; i < vec.Length; ++i) {\n\t\t\ttrvec[i] = mat.MultiplyPoint3x4(vec[i]);\n\t\t}\n\t\treturn trvec;\n\t}\n\tVector3[] combVec(Vector3[][] v) {\n\t\tint ofs = 0, len = 0;\n\t\tforeach(Vector3[] vi in v) {\n\t\t\tlen += vi.Length;\n\t\t}\n\t\tVector3[] c = new Vector3[len];\n\t\tforeach(Vector3[] vi in v) {\n\t\t\tvi.CopyTo(c, ofs);\n\t\t\tofs += vi.Length;\n\t\t}\n\t\treturn c;\n\t}\n\tVector3[] getMeshVerts(GameObject[] gobj) {\n\t\tList<Vector3[]> lvec = new List<Vector3[]>();\n\t\tforeach(GameObject o in gobj) {\n\t\t\tforeach(MeshFilter m in o.GetComponentsInChildren<MeshFilter>()) {\n\t\t\t\tif(m.gameObject.activeInHierarchy) {\n\t\t\t\t\tlvec.Add(transVec(\n\t\t\t\t\t\tm.transform.localToWorldMatrix, \n\t\t\t\t\t\tm.mesh.vertices\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn combVec(lvec.ToArray());\n\t}\n\tvoid OnGUI() {\n\t\tGUI.skin = guiskin;\n\t\tTransform tr = gameObject.transform;\n\t\t// \u30dc\u30bf\u30f3\u30b5\u30a4\u30ba\u8a08\u7b97\n\t\tint sH = Screen.height, sW = Screen.width;\n\t\tint cmvBtn = Math.Max(Math.Max(sH, sW) / 12, 20), cmvBtnS = cmvBtn + 10;\n\t\t// \u30ab\u30e1\u30e9\u56de\u8ee2\u30dc\u30bf\u30f3\n\t\tif(GUI.RepeatButton(new Rect(sW - cmvBtnS * 3, 50 + cmvBtnS * 0, cmvBtn, cmvBtn), \"\u2199\")) {\n\t\t\ttr.localRotation *= Quaternion.Euler( 0f,  0f,  0.1f);\n\t\t}\n\t\tif(GUI.RepeatButton(new Rect(sW - cmvBtnS * 1, 50 + cmvBtnS * 0, cmvBtn, cmvBtn), \"\u2198\")) {\n\t\t\ttr.localRotation *= Quaternion.Euler( 0f,  0f, -0.1f);\n\t\t}\n\t\tif(GUI.RepeatButton(new Rect(sW - cmvBtnS * 2, 50 + cmvBtnS * 0, cmvBtn, cmvBtn), \"\u2191\")) {\n\t\t\ttr.localRotation *= Quaternion.Euler( 0.1f,  0f,  0f);\n\t\t}\n\t\tif(GUI.RepeatButton(new Rect(sW - cmvBtnS * 2, 50 + cmvBtnS * 1, cmvBtn, cmvBtn), \"\u2193\")) {\n\t\t\ttr.localRotation *= Quaternion.Euler(-0.1f,  0f,  0f);\n\t\t}\n\t\tif(GUI.RepeatButton(new Rect(sW - cmvBtnS * 3, 50 + cmvBtnS * 1, cmvBtn, cmvBtn), \"\u2190\")) {\n\t\t\ttr.localRotation *= Quaternion.Euler( 0f,  0.1f,  0f);\n\t\t}\n\t\tif(GUI.RepeatButton(new Rect(sW - cmvBtnS * 1, 50 + cmvBtnS * 1, cmvBtn, cmvBtn), \"\u2192\")) {\n\t\t\ttr.localRotation *= Quaternion.Euler( 0f, -0.1f,  0f);\n\t\t}\n\t\tGUI.Box(new Rect(sW - 360, 10, 350, 30), \n\t\t\ttr.localRotation.eulerAngles.ToString() + \" : \" + tr.localPosition.ToString()\n\t\t);\n\t}\n\tvoid Start() {\n\t}\n\tvoid Update() {\n\t\tfloat nowRealtime = Time.realtimeSinceStartup;\n\t\tTransform tr = gameObject.transform;\n\t\tCamera cam = gameObject.GetComponent<Camera>();\n\t\t// \u30ad\u30fc\u5165\u529b\u306b\u3088\u308b\u56de\u8ee2\n\t\tif(Input.GetKey(\"a\")) { tr.localRotation *= Quaternion.Euler( 0f,  0.1f,  0f); }\n\t\tif(Input.GetKey(\"d\")) { tr.localRotation *= Quaternion.Euler( 0f, -0.1f,  0f); }\n\t\tif(Input.GetKey(\"w\")) { tr.localRotation *= Quaternion.Euler( 0.1f,  0f,  0f); }\n\t\tif(Input.GetKey(\"s\")) { tr.localRotation *= Quaternion.Euler(-0.1f,  0f,  0f); }\n\t\tif(Input.GetKey(\"q\")) { tr.localRotation *= Quaternion.Euler( 0f,  0f,  0.1f); }\n\t\tif(Input.GetKey(\"e\")) { tr.localRotation *= Quaternion.Euler( 0f,  0f, -0.1f); }\n\t\t// \u73fe\u5728\u306e\u30ab\u30e1\u30e9\u306e\u56de\u8ee2\u89d2\u30fb\u753b\u89d2\u306a\u3069\u3092\u53d6\u5f97\n\t\tCamAutoPos newCam = new CamAutoPos(\n\t\t\ttr.rotation, 0.5f * cam.fieldOfView,\n\t\t\tMathf.Rad2Deg * Mathf.Atan(Mathf.Tan(0.5f * Mathf.Deg2Rad * cam.fieldOfView) * Screen.width / Screen.height),\n\t\t\tcam.nearClipPlane, cam.farClipPlane);\n\t\t// \u5909\u66f4\u304c\u3042\u308c\u3070\u30ab\u30e1\u30e9\u4f4d\u7f6e\u3092\u518d\u8a08\u7b97\u3057\u3066\u8a2d\u5b9a\n\t\tif(!newCam.Equals(this.prevCam) || nowRealtime > lastUpdateTime + 1f) {\n\t\t\tlastUpdateTime = nowRealtime;\n\t\t\tthis.prevCam = newCam;\n\t\t\ttr.position = newCam.getCamPos(getMeshVerts(targetObject));\n\t\t}\n\t}\n}\n```\n\n`CamAutoPos.cs`: \u30ab\u30e1\u30e9\u4f4d\u7f6e\u306e\u8a08\u7b97\n\n```csharp:CamAutoPos.cs\nusing UnityEngine;\n\n/**\n<summary>\u900f\u904e\u6295\u5f71\u306b\u3066\u5bfe\u8c61\u7269\u3092\u6307\u5b9a\u65b9\u5411\u304b\u3089\u6307\u5b9a\u753b\u89d2\u306b\u304a\u3055\u3081\u308b\u30ab\u30e1\u30e9\u4f4d\u7f6e\u306e\u8a08\u7b97</summary>\n<example>\nCamera\u306b\u7d10\u4ed8\u3051\u308bScript\u306e\u4f8b\uff1a\n<code><![CDATA[\npublic class CamRotateTest : MonoBehaviour {\n\t// \u753b\u9762\u5185\u306b\u53ce\u3081\u305f\u3044\u5bfe\u8c61\u7269\u3082\u3057\u304f\u306f\u305d\u308c\u3092\u8986\u3046\u9802\u70b9\u7fa4\n\t// \u4f8b: \u539f\u70b9\u4e2d\u5fc3\u306e1\u8fba\u306e\u9577\u30551\u306e\u7acb\u65b9\u4f53\n\tpublic Vector3[] targetVerts = {\n\t\tnew Vector3(-0.5f, -0.5f, -0.5f),\n\t\tnew Vector3(+0.5f, -0.5f, -0.5f),\n\t\tnew Vector3(-0.5f, +0.5f, -0.5f),\n\t\tnew Vector3(+0.5f, +0.5f, -0.5f),\n\t\tnew Vector3(-0.5f, -0.5f, +0.5f),\n\t\tnew Vector3(+0.5f, -0.5f, +0.5f),\n\t\tnew Vector3(-0.5f, +0.5f, +0.5f),\n\t\tnew Vector3(+0.5f, +0.5f, +0.5f)\n\t};\n\t// \u524d\u56de\u306e\u30ab\u30e1\u30e9\u60c5\u5831\u306e\u4fdd\u5b58\n\tCamAutoPos prevCam = null;\n\tvoid Start() {}\n\tvoid Update() {\n\t\tTransform tr = gameObject.transform;\n\t\tCamera cam = gameObject.GetComponent<Camera>();\n\t\t// \u30ad\u30fc\u5165\u529b\u306b\u3088\u308b\u56de\u8ee2\n\t\tif(Input.GetKey(\"a\")) { tr.localRotation *= Quaternion.Euler( 0f,  0.1f,  0f); }\n\t\tif(Input.GetKey(\"d\")) { tr.localRotation *= Quaternion.Euler( 0f, -0.1f,  0f); }\n\t\tif(Input.GetKey(\"w\")) { tr.localRotation *= Quaternion.Euler( 0.1f,  0f,  0f); }\n\t\tif(Input.GetKey(\"s\")) { tr.localRotation *= Quaternion.Euler(-0.1f,  0f,  0f); }\n\t\tif(Input.GetKey(\"q\")) { tr.localRotation *= Quaternion.Euler( 0f,  0f,  0.1f); }\n\t\tif(Input.GetKey(\"e\")) { tr.localRotation *= Quaternion.Euler( 0f,  0f, -0.1f); }\n\t\t// \u73fe\u5728\u306e\u30ab\u30e1\u30e9\u306e\u56de\u8ee2\u89d2\u30fb\u753b\u89d2\u306a\u3069\u3092\u53d6\u5f97\n\t\tCamAutoPos newCam = new CamAutoPos(\n\t\t\ttr.localRotation, 0.5f * cam.fieldOfView,\n\t\t\tMathf.Rad2Deg * Mathf.Atan(Mathf.Tan(0.5f * Mathf.Deg2Rad * cam.fieldOfView) * Screen.width / Screen.height),\n\t\t\tcam.nearClipPlane, cam.farClipPlane);\n\t\t// \u5909\u66f4\u304c\u3042\u308c\u3070\u30ab\u30e1\u30e9\u4f4d\u7f6e\u3092\u518d\u8a08\u7b97\u3057\u3066\u8a2d\u5b9a\n\t\tif(!newCam.Equals(this.prevCam)) {\n\t\t\tthis.prevCam = newCam;\n\t\t\ttr.localPosition = newCam.getCamPos(targetVerts);\n\t\t}\n\t}\n}\n]]></code>\n</example>\n*/\npublic class CamAutoPos : System.Object {\n\tpublic Quaternion rot;\n\tpublic float vfv, hfv, Znear, Zfar;\n\t/**\n\t<summary>\u30ab\u30e1\u30e9\u8a2d\u5b9a\u69cb\u7bc9</summary>\n\t*/\n\tpublic CamAutoPos(Quaternion? rot = null, float vfv = float.NaN, float hfv = float.NaN, float Znear = -1f, float Zfar = -1f) {\n\t\tthis.rot = rot ?? Camera.main.transform.localRotation;\n\t\tthis.vfv = float.IsNaN(vfv) ? 0.5f * Camera.main.fieldOfView : vfv;\n\t\tthis.hfv = float.IsNaN(hfv) ? Mathf.Rad2Deg * Mathf.Atan(Mathf.Tan(Mathf.Deg2Rad * this.vfv) * Screen.width / Screen.height) : hfv;\n\t\tthis.Znear = Znear = (Znear >= 0f)? Znear: Camera.main.nearClipPlane;\n\t\tthis.Zfar = Zfar = (Zfar >= 0f)? Zfar: Camera.main.farClipPlane;\n\t}\n\t/** \n\t<summary>\u30ab\u30e1\u30e9\u8a2d\u5b9a\u6bd4\u8f03</summary>\n\t*/\n\tpublic override bool Equals(System.Object obj) {\n\t\tif(obj == null) {\n\t\t\treturn false;\n\t\t}\n\t\tCamAutoPos p = obj as CamAutoPos;\n\t\tif((System.Object)p == null) {\n\t\t\treturn false;\n\t\t}\n\t\treturn \n\t\t\t(this.rot == p.rot) &&\n\t\t\t(this.vfv == p.vfv) &&\n\t\t\t(this.hfv == p.hfv) &&\n\t\t\t(this.Znear == p.Znear) &&\n\t\t\t(this.Zfar == p.Zfar);\n\t}\n\t/**\n\t<summary>\u30cf\u30c3\u30b7\u30e5</summary>\n\t*/\n\tpublic override int GetHashCode() {\n\t\treturn (int)(vfv * hfv);\n\t}\n\t/**\n\t<summary>\u6700\u5927\u5185\u7a4d</summary>\n\t*/\n\tstatic public float maxDotVec(Vector3[] posTrCam, Vector3 vVec) {\n\t\tfloat u, v = float.NaN;\n\t\tfor(int i = 0; i < posTrCam.Length; ++i) {\n\t\t\tu = Vector3.Dot(posTrCam[i], vVec);\n\t\t\tif(u > v || float.IsNaN(v)) { v = u; }\n\t\t}\n\t\treturn v;\n\t}\n\t/**\n\t<summary>\u30ab\u30e1\u30e9\u4f4d\u7f6e\u8a08\u7b97</summary>\n\t<param name=\"targetPos\">\u76ee\u6a19\u7269\u3001\u82e5\u3057\u304f\u306f\u305d\u308c\u3092\u8986\u3046\u70b9\u7fa4</param>\n\t<param name=\"rot\">\u9802\u70b9\u7fa4\u306e\u5ea7\u6a19\u306b\u5bfe\u3059\u308b\u30ab\u30e1\u30e9\u306e\u7e26\u753b\u89d2</param>\n\t<param name=\"vfv\">\u30ab\u30e1\u30e9\u306e\u5782\u76f4\u65b9\u5411\u306e\u753b\u89d2\u306e\u534a\u5206\uff08\u5ea6\uff09 [vfv > 0f && vfv < 90f]</param>\n\t<param name=\"hfv\">\u30ab\u30e1\u30e9\u306e\u6c34\u5e73\u65b9\u5411\u306e\u753b\u89d2\u306e\u534a\u5206\uff08\u5ea6\uff09 [hfv > 0f && hfv < 90f]</param>\n\t<param name=\"Znear\">near\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2</param>\n\t<param name=\"Zfar\">far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2</param>\n\t*/\n\tstatic public Vector3 calcCamPos(Vector3[] targetPos, Quaternion? rot = null, float vfv = float.NaN, float hfv = float.NaN, float Znear = 0f, float Zfar = float.PositiveInfinity) {\n\t\t// \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u8a2d\u5b9a\n\t\tQuaternion _rot = rot ?? Camera.main.transform.localRotation;\n\t\tvfv = float.IsNaN(vfv) ? 0.5f * Camera.main.fieldOfView : vfv;\n\t\thfv = float.IsNaN(hfv) ? Mathf.Rad2Deg * Mathf.Atan(Mathf.Tan(Mathf.Deg2Rad * vfv) * Screen.width / Screen.height) : hfv;\n\t\t// \u7e26\u753b\u89d2/2, \u6a2a\u753b\u89d2/2\n\t\tfloat\n\t\t\tYrad = Mathf.Deg2Rad * vfv,\n\t\t\tYsin = Mathf.Sin(Yrad),\n\t\t\tYcos = Mathf.Cos(Yrad),\n\t\t\tXrad = Mathf.Deg2Rad * hfv,\n\t\t\tXsin = Mathf.Sin(Xrad),\n\t\t\tXcos = Mathf.Cos(Xrad);\n\t\t// \u5782\u7dda\u65b9\u5411\u306e\u5358\u4f4d\u30d9\u30af\u30c8\u30eb\n\t\tVector3\n\t\t\tYNperp = new Vector3(0f, -Ycos, -Ysin),\n\t\t\tYPperp = new Vector3(0f, +Ycos, -Ysin),\n\t\t\tXNperp = new Vector3(-Xcos, 0f, -Xsin),\n\t\t\tXPperp = new Vector3(+Xcos, 0f, -Xsin);\n\t\t// \u539f\u70b9\u304b\u3089\u753b\u89d2\u9762\u307e\u3067\u306e\u5782\u7dda\u9577\u3055\n\t\tfloat\n\t\t\tmaxYN = maxDotVec(targetPos, _rot * YNperp),\n\t\t\tmaxYP = maxDotVec(targetPos, _rot * YPperp),\n\t\t\tmaxXN = maxDotVec(targetPos, _rot * XNperp),\n\t\t\tmaxXP = maxDotVec(targetPos, _rot * XPperp),\n\t\t\tmaxNear = maxDotVec(targetPos, _rot * Vector3.back);\n\t\t// \u30ab\u30e1\u30e9\u4f4d\u7f6e\u6c7a\u5b9a\n\t\treturn _rot * new Vector3(\n\t\t\t0.5f * (maxXP - maxXN) / Xcos, \n\t\t\t0.5f * (maxYP - maxYN) / Ycos, \n\t\t\t-Mathf.Max(\n\t\t\t\t0.5f * (maxXN + maxXP) / Xsin, \n\t\t\t\t0.5f * (maxYN + maxYP) / Ysin,\n\t\t\t\tmaxNear + Znear));\n\t}\n\t/**\n\t<summary>\u30ab\u30e1\u30e9\u4f4d\u7f6e\u53d6\u5f97</summary>\n\t*/\n\tpublic Vector3 getCamPos(Vector3[] targetPos) {\n\t\treturn calcCamPos(targetPos, rot, vfv, hfv, Znear, Zfar);\n\t}\n}\n```\n\n# \u30ab\u30e1\u30e9\u306e\u65b9\u5411\u30fb\u753b\u89d2\u30fbnear\u8ddd\u96e2\n\n- \"\u8996\u9310\u53f0\" (View frustum, Viewing fustum) \u306e\u89e3\u8aac\u8a18\u4e8b\n - [\u8996\u9310\u53f0 - MSDN - Microsoft](https://msdn.microsoft.com/ja-jp/library/cc324601.aspx)\n - [Unity - \u30de\u30cb\u30e5\u30a2\u30eb: \u8996\u9310\u53f0\u3092\u7406\u89e3\u3059\u308b](http://docs.unity3d.com/ja/current/Manual/UnderstandingFrustum.html)\n - [Viewing frustum - Wikipedia(en)](https://en.wikipedia.org/wiki/Viewing_frustum)\n- \u30ab\u30e1\u30e9\u8996\u91ce\u57fa\u6e96\u306e\u30d9\u30af\u30c8\u30eb$P$ $\\to$ \u5b9f\u5ea7\u6a19\u3067\u306e\u30d9\u30af\u30c8\u30eb$P'$ \u306b\u56de\u8ee2\u3059\u308b\u95a2\u6570$T$\u3092 $T(P) = P'$ \u3068\u3059\u308b\n - `T = (Camera cam, Vector3 P) => cam.transform.localRotation * P`\n - Unity \u3067\u306f\u56de\u8ee2\u306e\u8868\u73fe\u306b\u306f [`Quaternion`](http://docs.unity3d.com/jp/current/ScriptReference/Quaternion.html) \u3092\u7528\u3044\u3001`Quaternion` \u3084 [`Vector3`](http://docs.unity3d.com/jp/current/ScriptReference/Vector3.html) \u306e\u56de\u8ee2\u306f [\u4e57\u7b97\u30aa\u30da\u30ec\u30fc\u30bf \"`*`\"](http://docs.unity3d.com/jp/current/ScriptReference/Quaternion-operator_multiply.html) \u306b\u3066\u884c\u3046\n- \u753b\u9762\u4e2d\u592e\u304b\u3089\u753b\u9762\u4e0a\u7aef\u4e2d\u592e\u307e\u305f\u306f\u753b\u9762\u4e0b\u7aef\u4e2d\u592e\u307e\u3067\u306e\u5782\u76f4\u65b9\u5411\u306e\u8996\u91ce\u89d2\u3092$\\theta_y$\u3068\u3059\u308b\n - \u753b\u9762\u7e26\u65b9\u5411\u306e\u7aef\u304b\u3089\u7aef\u307e\u3067\u306e\u5782\u76f4\u65b9\u5411\u306e\u8996\u91ce\u89d2\u306e\u534a\u5206\u304c $\\\\theta_y$ \u3002\n - $0^\\circ < \\theta_y < 90^\\circ$\n - Unity\u3067\u306f [`Camera.fieldOfView`](http://docs.unity3d.com/jp/current/ScriptReference/Camera-fieldOfView.html) \u304c $2\\\\theta_y$ \u306b\u76f8\u5f53\uff08\u4f46\u3057\u3001\u5358\u4f4d\u306f\u30e9\u30b8\u30a2\u30f3\u3067\u306f\u306a\u304f\u5ea6\uff09\u3002\n - `float theta_y = 0.5f * Mathf.Deg2Rad * cam.fieldOfView;`\n- \u753b\u9762\u4e2d\u5fc3\u304b\u3089\u753b\u9762\u5de6\u7aef\u4e2d\u592e\u307e\u305f\u306f\u753b\u9762\u53f3\u7aef\u4e2d\u592e\u307e\u3067\u306e\u8996\u91ce\u89d2\u3092$\\theta_x$\u3068\u3059\u308b\n - \u753b\u9762\u6a2a\u65b9\u5411\u306e\u7aef\u304b\u3089\u7aef\u307e\u3067\u306e\u6c34\u5e73\u65b9\u5411\u306e\u8996\u91ce\u89d2\u306e\u534a\u5206\u304c $\\\\theta_x$ \u3002\n - $0^\\circ < \\theta_x < 90^\\circ$\n - Unity\u3067\u306f\u76f4\u63a5\u3053\u308c\u3092\u793a\u3059\u3082\u306e\u306f\u306a\u3044\u306e\u3067\u3001\u753b\u9762\u4e00\u676f\u306b\u63cf\u5199\u3057\u305f\u3044\u5834\u5408\u306f [`Camera.fieldOfView`](http://docs.unity3d.com/jp/current/ScriptReference/Camera-fieldOfView.html), [`Screen.width`](http://docs.unity3d.com/jp/current/ScriptReference/Screen-width.html), [`Screen.height`](http://docs.unity3d.com/jp/current/ScriptReference/Screen-height.html) \u3092\u7528\u3044\u3066\u7b97\u51fa\n - `float theta_x = Mathf.Atan(Mathf.Tan(theta_y) * (float)Width / (float)Height);`\n- near/far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\n - Unity\u3067\u306f [`Camera.nearClipPlane`](http://docs.unity3d.com/jp/current/ScriptReference/Camera-nearClipPlane.html), [`Camera.farClipPlane`](http://docs.unity3d.com/jp/current/ScriptReference/Camera-farClipPlane.html) \u3002\n\n# \u5e73\u9762\u306b\u5bfe\u3059\u308b\u70b9\u306e\u9ad8\u3055\n\n\u5e73\u9762$P$\u306e\u5358\u4f4d\u6cd5\u7dda\u30d9\u30af\u30c8\u30eb\u3092$\\vec{n}$\uff08$|\\vec{n}|=1$\uff09\u3001\u5e73\u9762$P$\u4e0a\u306e\u4efb\u610f\u306e\u70b9\u3092$Q$\u3068\u3057\u305f\u6642\u3001\u7a7a\u9593\u4e0a\u306e\u4efb\u610f\u306e\u70b9$R$\u306e\u5e73\u9762$P$\u306b\u5bfe\u3059\u308b$\\vec{n}$\u65b9\u5411\u306e\u9ad8\u3055$h$\u306f\u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u3092\u7528\u3044\u3066 $h=\\vec{QR}\\cdot\\vec{n}$ \u3068\u8868\u3055\u308c\u308b\u3002\n\n- Unity \u3067\u306f [`Vector3`](http://docs.unity3d.com/jp/current/ScriptReference/Vector3.html) \u306e\u5185\u7a4d\u306f [`Vector3.Dot`](http://docs.unity3d.com/jp/current/ScriptReference/Vector3.Dot.html) \u306b\u3066\u884c\u3046\n\n# \u753b\u89d2\u5883\u754c\u9762\u306e\u5358\u4f4d\u6cd5\u7dda\u30d9\u30af\u30c8\u30eb\n\n\u753b\u9762\u306e\u5916\u5074\u65b9\u5411\u3092\u5411\u304f\u5358\u4f4d\u6cd5\u7dda\u30d9\u30af\u30c8\u30eb\u30924\u65b9\u5411\u305d\u308c\u305e\u308c\u306b\u5b9a\u7fa9\u3059\u308b\u3068\u3001\n\n* \u753b\u9762\u4e0b\u7aef\u9762: $\\vec{Y^-}=(0,-\\\\cos\\\\theta_y,-\\\\sin\\\\theta_y)$\n* \u753b\u9762\u4e0a\u7aef\u9762: $\\vec{Y^+}=(0,+\\\\cos\\\\theta_y,-\\\\sin\\\\theta_y)$\n* \u753b\u9762\u5de6\u7aef\u9762: $\\vec{X^-}=(-\\\\cos\\\\theta_x,0,-\\\\sin\\\\theta_x)$\n* \u753b\u9762\u53f3\u7aef\u9762: $\\vec{X^+}=(+\\\\cos\\\\theta_x,0,-\\\\sin\\\\theta_x)$\n\n# \u6700\u3082\u753b\u9762\u9685\u306b\u3042\u308b\u70b9\u3092\u901a\u3059\u9762\u306e\u4f4d\u7f6e\u306e\u691c\u51fa\n\n\u539f\u70b9\u3092$O$\u3001\u76ee\u6a19\u306e\u70b9\u306e\u96c6\u5408\u3092$\\\\{R_i\\\\}$\u3068\u3057\u3066\u3001\u539f\u70b9$O$\u306b\u30ab\u30e1\u30e9\u3092\u7f6e\u3044\u305f\u5834\u5408\u306e\u753b\u89d2\u9762\uff08\u8a08\u7b97\u306e\u305f\u3081\u306e\u57fa\u6e96\u9762\uff09\u3068\u3001\u6700\u3082\u753b\u9762\u9685\u306b\u3042\u308b\u70b9\u3092\u901a\u308b\u305d\u308c\u306b\u5e73\u884c\u306a\u5e73\u9762\uff08\u305d\u308c\u305e\u308c\u306e\u65b9\u5411\u3067\u671b\u3080\u753b\u89d2\u306b\u53ce\u3081\u308b\u305f\u3081\u306e\u9762\u3001\u6c42\u3081\u308b\u3079\u304d\u30ab\u30e1\u30e9\u4f4d\u7f6e\u306e\u9006\u7b97\u7528\uff09\u3068\u306e\u8ddd\u96e2\u306f\u305d\u308c\u305e\u308c\n\n* \u753b\u9762\u4e0b\u7aef\u9762: $\\mathcal{Y^-}=\\max\\\\{\\vec{OR_i}\\cdot T(\\vec{Y^-})\\\\}$\n* \u753b\u9762\u4e0a\u7aef\u9762: $\\mathcal{Y^+}=\\max\\\\{\\vec{OR_i}\\cdot T(\\vec{Y^+})\\\\}$\n* \u753b\u9762\u5de6\u7aef\u9762: $\\mathcal{X^-}=\\max\\\\{\\vec{OR_i}\\cdot T(\\vec{X^-})\\\\}$\n* \u753b\u9762\u53f3\u7aef\u9762: $\\mathcal{X^+}=\\max\\\\{\\vec{OR_i}\\cdot T(\\vec{X^+})\\\\}$\n\n# near/far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\n\n* near\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\u3092 $l_{near}$ \u3001far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\u3092 $l_{far}$ $(0 \\le l_{near} < l_{far})$ \u3068\u3057\u3066\u3001\n* \u753b\u9762\u624b\u524d\u65b9\u5411\u306e\u5358\u4f4d\u30d9\u30af\u30c8\u30eb: $\\vec{Z^-}=(0,0,-1)$\n* \u753b\u9762\u5965\u65b9\u5411\u306e\u5358\u4f4d\u30d9\u30af\u30c8\u30eb: $\\vec{Z^+}=(0,0,1)$\n* \u6700\u8fd1\u70b9: $\\mathcal{Z^-}=\\max\\\\{\\vec{OR_i}\\cdot T(\\vec{Z^-})\\\\}=-\\min\\\\{\\vec{OR_i}\\cdot T(\\vec{Z^+})\\\\}$\n * near\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u9762\u3068\u306e\u76f8\u5bfe\u4f4d\u7f6e\u6bd4\u8f03\u7528\n* \u6700\u9060\u70b9: $\\mathcal{Z^+}=\\min\\\\{\\vec{OR_i}\\cdot T(\\vec{Z^-})\\\\}=-\\max\\\\{\\vec{OR_i}\\cdot T(\\vec{Z^+})\\\\}$\n * far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u9762\u3068\u306e\u76f8\u5bfe\u4f4d\u7f6e\u6bd4\u8f03\u7528\n\n# \u30ab\u30e1\u30e9\u4f4d\u7f6e\u306e\u89e3\n\n\u4ee5\u4e0a\u3088\u308a\u3001\u30ab\u30e1\u30e9\u306e\u4f4d\u7f6e\u30d9\u30af\u30c8\u30eb\u306f\n\n```math\nT\\left(\\left(\n\\frac{\\mathcal{X^+}-\\mathcal{X^-}}{2\\cos\\theta_x},\n\\frac{\\mathcal{Y^+}-\\mathcal{Y^-}}{2\\cos\\theta_y},\n-\\max\\left\\{\n\\frac{\\mathcal{X^+}+\\mathcal{X^-}}{2\\sin\\theta_x},\n\\frac{\\mathcal{Y^+}+\\mathcal{Y^-}}{2\\sin\\theta_y},\n\\left(\\mathcal{Z^-}+l_{near}\\right)\n\\right\\}\n\\right)\\right)\n```\n\n\u3068\u306a\u308b\u3002\u307e\u305f\u3001\u76ee\u6a19\u70b9\u304c\u5168\u3066far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\u306b\u53ce\u307e\u308b\u304b\u306f\u3001\u4ee5\u4e0b\u306e\u4e0d\u7b49\u5f0f\u3067\u5224\u5225\u3059\u308b\uff08\u4e0d\u7b49\u5f0f\u304c\u6210\u308a\u7acb\u3066\u3070far\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u8ddd\u96e2\u304b\u3089\u306f\u307f\u51fa\u3055\u306a\u3044\u3068\u898b\u306a\u3059\uff09\u3002\n\n```math\n(\\mathcal{Z^+}+l_{far}) \\ge \\max\\left\\{\\frac{\\mathcal{X^+}+\\mathcal{X^-}}{2\\sin\\theta_x},\\frac{\\mathcal{Y^+}+\\mathcal{Y^-}}{2\\sin\\theta_y},\\left(\\mathcal{Z^-}+l_{near}\\right)\\right\\}\n```\n", "tags": ["Unity", "Unity3D", "\u6570\u5b66", "3DCG", "GeoGebra"]}