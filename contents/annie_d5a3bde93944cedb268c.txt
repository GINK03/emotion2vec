{"context": "Microsoft Bot Framework (V3.0) \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u305d\u306e\u307e\u307e\u52d5\u304b\u3057\u3066\u307f\u308b\u3001\u305d\u306e\u6b21\u306b\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u6271\u3046 Dialog \u3067\u57fa\u672c\u7684\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u3092\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u305d\u308c\u3092\u5fdc\u7528\u3057\u3066\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u57fa\u672c\u7684\u306a Dialog \u3092\u4f7f\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u53d7\u4fe1\u306b\u4f1a\u8a71\u6570\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u300cX\u756a\u76ee\u306bY\u3068\u3044\u3046\u8cea\u554f\u3092\u3059\u308b/\u78ba\u8a8d\u3059\u308b\u300d\u3068\u3044\u3046\u30d5\u30ed\u30fc\u3092\u5165\u308c\u305f\u3044\u306a\u3069\u3001\u73fe\u5728\u4f55\u30e1\u30c3\u30bb\u30fc\u30b8\u76ee\u306a\u306e\u304b\u30ab\u30a6\u30f3\u30c8\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u3048\u307e\u3059\u3002\u307e\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u30c0\u30a4\u30a2\u30ed\u30b0(Yes/No)\u3092\u8868\u793a\u3057\u3001\u5165\u529b\u3055\u308c\u305f\u64cd\u4f5c\u306e\u78ba\u8a8d\u3092\u884c\u3044\u307e\u3059\u3002\n\nMicrosoft Bot Framework v3.0 \u304b\u3089\u306f\u3058\u3081\u308bBOT\u958b\u767a: \u6700\u521d\u306e\u4e00\u6b69\u7de8\nMicrosoft Bot Framework v3.0 \u304b\u3089\u306f\u3058\u3081\u308bBOT\u958b\u767a: \u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u57fa\u672c\u30af\u30e9\u30b9 Dialog(1)\n\n\nDialog \u3092\u4f7f\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u53d7\u4fe1(\u4e0b\u6e96\u5099)\n\u958b\u767a\u74b0\u5883\u306e\u6e96\u5099\u306f Bot Framework \u3092\u4f7f\u3046\u305f\u3081\u306e\u958b\u767a\u74b0\u5883 \u304b\u3089\u3002\nVisual Studio \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u65b0\u898f BOT \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\uff5e\u4e0b\u6e96\u5099 \u3067 Bot Framework \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3046\u6e96\u5099\u3092\u884c\u3044\u3001Dialog \u3092\u4f7f\u3063\u305f\u5358\u7d14\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u4fe1\u3001\u8fd4\u4fe1 \u306e\u901a\u308a\u3001MessageController.cs \u3092\u7de8\u96c6\u3057\u307e\u3059\u3002\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b (\u305d\u306e1)\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u306e\u30ab\u30a6\u30f3\u30c8\n\u8fd4\u7b54\u3092\u4f5c\u6210\u3059\u308b EcoDialog \u30af\u30e9\u30b9\u306e\u4ee3\u308f\u308a\u306b\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b EchoCountDialog \u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002count \u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u304a\u304d\u3001\u8fd4\u7b54\u6587\u3092\u4f5c\u308b\u3068\u304d\u306b\u30ab\u30a6\u30f3\u30c8\u3092\u5897\u3084\u3057\u307e\u3059(this.count++)\u3002\"reset\" \u3068\u3044\u3046\u5165\u529b\u3092\u53d7\u4fe1\u3057\u305f\u3089\u30ab\u30a6\u30f3\u30c8\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u8fd4\u7b54\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6700\u521d\u306b\u30ab\u30a6\u30f3\u30c8\u6570\u3092\u6587\u7ae0\u306e\u982d\u306b\u3064\u3051\u3066\u3044\u307e\u3059\u3002\n\nMessagesController.cs\n[Serializable]\npublic class EchoCountDialog : IDialog<object>\n{\n    protected int count = 1;\n    public async Task StartAsync(IDialogContext context)\n    {\n        context.Wait(MessageReceivedAsync);\n    }\n    public async Task MessageReceivedAsync(IDialogContext context, IAwaitable<IMessageActivity> argument)\n    {\n        var message = await argument;\n        if (message.Text == \"reset\")\n        {\n            await context.PostAsync($\"\u4f1a\u8a71\u6570\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\");\n            this.count = 1;\n        }\n        else\n        {\n            await context.PostAsync(string.Format(\"{0}:{1}\u3063\u3066\u8a00\u3063\u305f\u306d\u3002\", this.count++, message.Text));\n        }\n        context.Wait(MessageReceivedAsync);\n    }\n}\n\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u3092\u884c\u3046 Post \u3067\u3082 EchoCountDialog \u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\nMessageController.cs\n[ResponseType(typeof(void))]\npublic virtual async Task<HttpResponseMessage> Post ([FromBody] Activity activity)\n{\n    if (activity != null)\n    {\n        if (activity.GetActivityType()==ActivityTypes.Message)\n        {\n            //await Conversation.SendAsync(activity, () => new EchoDialog());\n            await Conversation.SendAsync(activity, () => new EchoCountDialog());\n        }\n        else\n        {\n            HandleSystemMessage(activity);\n        }\n    }\n    return new HttpResponseMessage(System.Net.HttpStatusCode.Accepted);\n}\n\n\n\nEmulator\u3067\u52d5\u4f5c\u78ba\u8a8d(\u305d\u306e1)\nBot\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30fc\u30ab\u30eb\u5b9f\u884c\u3068\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u306b\u3088\u308b\u30a2\u30af\u30bb\u30b9 \u3092\u53c2\u7167\u3057\u3066\u3001Visual Studio \u304b\u3089 F5 \u3067\u30d3\u30eb\u30c9\uff06\u30c7\u30d0\u30c3\u30af\u5b9f\u884c\u3092\u958b\u59cb\u3057\u3001Bot Framework Channel Emulator \u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\n\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u304c\u8fd4\u7b54\u306e\u982d\u306b\u8868\u793a\u3055\u308c\u3001\"reset\" \u3068\u9001\u4fe1\u3059\u308b\u3068\u30ab\u30a6\u30f3\u30c8\u304c\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b\u306e\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b (\u305d\u306e2): \u30ea\u30bb\u30c3\u30c8\u6642\u306b\u78ba\u8a8d\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\n\u305d\u306e1 \u3067\u306f \"reset\" \u3092\u53d7\u4fe1\u3059\u308b\u3068\u5373\u30ea\u30bb\u30c3\u30c8\u3092\u884c\u3044\u307e\u3059\u304c\u3001\u305d\u306e2\u3067\u306f\u78ba\u8a8d\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u3066\u53ef\u5426\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\nMicrosoft.Bot.Builder.Dialogs.PromptDialog \u3067 Yes/No \u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u8868\u793a\u3057\u3001Yes \u307e\u305f\u306f No \u306e\u9078\u629e\u3092\u3082\u3068\u306b ResetCountAsync \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\nMessagesController.cs\n[Serializable]\npublic class EchoCountDialog2 : IDialog<object>\n{\n    protected int count = 1;\n    public async Task StartAsync(IDialogContext context)\n    {\n        context.Wait(MessageReceivedAsync);\n    }\n    public async Task MessageReceivedAsync(IDialogContext context, IAwaitable<IMessageActivity> argument)\n    {\n        var message = await argument;\n        if (message.Text == \"reset\")\n        {\n            PromptDialog.Confirm(context, ResetCountAsync, \"\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u304b?\");\n        }\n        else\n        {\n            await context.PostAsync(string.Format(\"{0}:{1}\u3063\u3066\u8a00\u3063\u305f\u306d\u3002\", this.count++, message.Text));\n            context.Wait(MessageReceivedAsync);\n        }\n    }\n    public async Task ResetCountAsync(IDialogContext context, IAwaitable<bool> argument)\n    {\n        var confirm = await argument;\n        if (confirm)\n        {\n        this.count = 1;\n            await context.PostAsync(\"\u4f1a\u8a71\u6570\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3057\u305f\u3002\");\n        }\n        else\n        {\n            await context.PostAsync(\"\u4f1a\u8a71\u6570\u30ea\u30bb\u30c3\u30c8\u3092\u4e2d\u6b62\u3057\u307e\u3057\u305f\u3002\");\n        }\n            context.Wait(MessageReceivedAsync);\n        }\n    }\n\n\nPost \u304b\u3089\u306e\u547c\u3073\u51fa\u3057\u3082 EchoCountDialog2 \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\nMessageController.cs\n[ResponseType(typeof(void))]\npublic virtual async Task<HttpResponseMessage> Post ([FromBody] Activity activity)\n{\n    if (activity != null)\n    {\n        if (activity.GetActivityType()==ActivityTypes.Message)\n        {\n            //await Conversation.SendAsync(activity, () => new EchoDialog());\n            //await Conversation.SendAsync(activity, () => new EchoCountDialog());\n            await Conversation.SendAsync(activity, () => new EchoCountDialog2());\n        }\n        else\n        {\n            HandleSystemMessage(activity);\n        }\n    }\n    return new HttpResponseMessage(System.Net.HttpStatusCode.Accepted);\n}\n\n\n\nEmulator\u3067\u52d5\u4f5c\u78ba\u8a8d(\u305d\u306e2)\n\u4eca\u56de\u306f \"Reset\" \u3068\u9001\u4fe1\u3059\u308b\u3068\u3001\u78ba\u8a8d\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002Emulator \u306e\u53f3\u4e0a\u306b\u3042\u308b Locale \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 OS \u306e\u8a00\u8a9e\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b(\u306f\u305a)\u3001Locale:ja-jp \u3067\u306f [\u306f\u3044][\u3044\u3044\u3048] \u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\nLocale:en-us \u306a\u3069\u82f1\u8a9e\u306b\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u78ba\u8a8d\u30c0\u30a4\u30a2\u30ed\u30b0\u306f [Yes][No] \u306b\u306a\u308a\u307e\u3059\u3002\n\nMicrosoft Bot Framework (V3.0) \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u305d\u306e\u307e\u307e\u52d5\u304b\u3057\u3066\u307f\u308b\u3001\u305d\u306e\u6b21\u306b\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u6271\u3046 Dialog \u3067\u57fa\u672c\u7684\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u3092\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u305d\u308c\u3092\u5fdc\u7528\u3057\u3066\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u57fa\u672c\u7684\u306a Dialog \u3092\u4f7f\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u53d7\u4fe1\u306b\u4f1a\u8a71\u6570\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u300cX\u756a\u76ee\u306bY\u3068\u3044\u3046\u8cea\u554f\u3092\u3059\u308b/\u78ba\u8a8d\u3059\u308b\u300d\u3068\u3044\u3046\u30d5\u30ed\u30fc\u3092\u5165\u308c\u305f\u3044\u306a\u3069\u3001\u73fe\u5728\u4f55\u30e1\u30c3\u30bb\u30fc\u30b8\u76ee\u306a\u306e\u304b\u30ab\u30a6\u30f3\u30c8\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u3048\u307e\u3059\u3002\u307e\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u30c0\u30a4\u30a2\u30ed\u30b0(Yes/No)\u3092\u8868\u793a\u3057\u3001\u5165\u529b\u3055\u308c\u305f\u64cd\u4f5c\u306e\u78ba\u8a8d\u3092\u884c\u3044\u307e\u3059\u3002\n\n>[Microsoft Bot Framework v3.0 \u304b\u3089\u306f\u3058\u3081\u308bBOT\u958b\u767a: \u6700\u521d\u306e\u4e00\u6b69\u7de8](http://qiita.com/annie/items/edc26c0ee9603e84a2e4)\n>[Microsoft Bot Framework v3.0 \u304b\u3089\u306f\u3058\u3081\u308bBOT\u958b\u767a: \u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u57fa\u672c\u30af\u30e9\u30b9 Dialog(1)](http://qiita.com/annie/items/bd4248bb07eafcf83a3a)\n\n#Dialog \u3092\u4f7f\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u53d7\u4fe1(\u4e0b\u6e96\u5099)\n\u958b\u767a\u74b0\u5883\u306e\u6e96\u5099\u306f [Bot Framework \u3092\u4f7f\u3046\u305f\u3081\u306e\u958b\u767a\u74b0\u5883](http://qiita.com/annie/items/edc26c0ee9603e84a2e4#bot-framework-%E3%82%92%E4%BD%BF%E3%81%86%E3%81%9F%E3%82%81%E3%81%AE%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83) \u304b\u3089\u3002\n[Visual Studio \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u65b0\u898f BOT \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\uff5e\u4e0b\u6e96\u5099](http://qiita.com/annie/items/bd4248bb07eafcf83a3a#visual-studio-%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%81%8B%E3%82%89%E6%96%B0%E8%A6%8F-bot-%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E4%BD%9C%E6%88%90%E4%B8%8B%E6%BA%96%E5%82%99) \u3067 Bot Framework \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3046\u6e96\u5099\u3092\u884c\u3044\u3001[Dialog \u3092\u4f7f\u3063\u305f\u5358\u7d14\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u4fe1\u3001\u8fd4\u4fe1](http://qiita.com/annie/items/bd4248bb07eafcf83a3a#dialog-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E5%8D%98%E7%B4%94%E3%81%AA%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%AE%E5%8F%97%E4%BF%A1%E8%BF%94%E4%BF%A1) \u306e\u901a\u308a\u3001MessageController.cs \u3092\u7de8\u96c6\u3057\u307e\u3059\u3002\n\n#\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b (\u305d\u306e1)\n##\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u306e\u30ab\u30a6\u30f3\u30c8\n\u8fd4\u7b54\u3092\u4f5c\u6210\u3059\u308b EcoDialog \u30af\u30e9\u30b9\u306e\u4ee3\u308f\u308a\u306b\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b EchoCountDialog \u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002count \u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u304a\u304d\u3001\u8fd4\u7b54\u6587\u3092\u4f5c\u308b\u3068\u304d\u306b\u30ab\u30a6\u30f3\u30c8\u3092\u5897\u3084\u3057\u307e\u3059(this.count++)\u3002\"reset\" \u3068\u3044\u3046\u5165\u529b\u3092\u53d7\u4fe1\u3057\u305f\u3089\u30ab\u30a6\u30f3\u30c8\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u8fd4\u7b54\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6700\u521d\u306b\u30ab\u30a6\u30f3\u30c8\u6570\u3092\u6587\u7ae0\u306e\u982d\u306b\u3064\u3051\u3066\u3044\u307e\u3059\u3002\n\n```MessagesController.cs\n[Serializable]\npublic class EchoCountDialog : IDialog<object>\n{\n    protected int count = 1;\n    public async Task StartAsync(IDialogContext context)\n    {\n        context.Wait(MessageReceivedAsync);\n    }\n    public async Task MessageReceivedAsync(IDialogContext context, IAwaitable<IMessageActivity> argument)\n    {\n        var message = await argument;\n        if (message.Text == \"reset\")\n        {\n            await context.PostAsync($\"\u4f1a\u8a71\u6570\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\");\n            this.count = 1;\n        }\n        else\n        {\n            await context.PostAsync(string.Format(\"{0}:{1}\u3063\u3066\u8a00\u3063\u305f\u306d\u3002\", this.count++, message.Text));\n        }\n        context.Wait(MessageReceivedAsync);\n    }\n}\n```\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u3092\u884c\u3046 Post \u3067\u3082 EchoCountDialog \u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```MessageController.cs\n[ResponseType(typeof(void))]\npublic virtual async Task<HttpResponseMessage> Post ([FromBody] Activity activity)\n{\n    if (activity != null)\n    {\n        if (activity.GetActivityType()==ActivityTypes.Message)\n        {\n            //await Conversation.SendAsync(activity, () => new EchoDialog());\n            await Conversation.SendAsync(activity, () => new EchoCountDialog());\n        }\n        else\n        {\n            HandleSystemMessage(activity);\n        }\n    }\n    return new HttpResponseMessage(System.Net.HttpStatusCode.Accepted);\n}\n```\n\n##Emulator\u3067\u52d5\u4f5c\u78ba\u8a8d(\u305d\u306e1)\n[Bot\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30fc\u30ab\u30eb\u5b9f\u884c\u3068\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u306b\u3088\u308b\u30a2\u30af\u30bb\u30b9](http://qiita.com/annie/items/edc26c0ee9603e84a2e4#bot%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E5%AE%9F%E8%A1%8C%E3%81%A8%E3%82%A8%E3%83%9F%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%AB%E3%82%88%E3%82%8B%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9) \u3092\u53c2\u7167\u3057\u3066\u3001Visual Studio \u304b\u3089 F5 \u3067\u30d3\u30eb\u30c9\uff06\u30c7\u30d0\u30c3\u30af\u5b9f\u884c\u3092\u958b\u59cb\u3057\u3001Bot Framework Channel Emulator \u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\n\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u304c\u8fd4\u7b54\u306e\u982d\u306b\u8868\u793a\u3055\u308c\u3001\"reset\" \u3068\u9001\u4fe1\u3059\u308b\u3068\u30ab\u30a6\u30f3\u30c8\u304c\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b\u306e\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n![\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u306e\u30ab\u30a6\u30f3\u30c8](https://msdnshared.blob.core.windows.net/media/2016/08/bluesky_20160805_011-e1470292760527.png)\n\n\n#\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b (\u305d\u306e2): \u30ea\u30bb\u30c3\u30c8\u6642\u306b\u78ba\u8a8d\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\n\u305d\u306e1 \u3067\u306f \"reset\" \u3092\u53d7\u4fe1\u3059\u308b\u3068\u5373\u30ea\u30bb\u30c3\u30c8\u3092\u884c\u3044\u307e\u3059\u304c\u3001\u305d\u306e2\u3067\u306f\u78ba\u8a8d\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u3066\u53ef\u5426\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\nMicrosoft.Bot.Builder.Dialogs.PromptDialog \u3067 Yes/No \u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u8868\u793a\u3057\u3001Yes \u307e\u305f\u306f No \u306e\u9078\u629e\u3092\u3082\u3068\u306b ResetCountAsync \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```MessagesController.cs\n[Serializable]\npublic class EchoCountDialog2 : IDialog<object>\n{\n    protected int count = 1;\n    public async Task StartAsync(IDialogContext context)\n    {\n        context.Wait(MessageReceivedAsync);\n    }\n    public async Task MessageReceivedAsync(IDialogContext context, IAwaitable<IMessageActivity> argument)\n    {\n        var message = await argument;\n        if (message.Text == \"reset\")\n        {\n            PromptDialog.Confirm(context, ResetCountAsync, \"\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u304b?\");\n        }\n        else\n        {\n            await context.PostAsync(string.Format(\"{0}:{1}\u3063\u3066\u8a00\u3063\u305f\u306d\u3002\", this.count++, message.Text));\n            context.Wait(MessageReceivedAsync);\n        }\n    }\n    public async Task ResetCountAsync(IDialogContext context, IAwaitable<bool> argument)\n    {\n        var confirm = await argument;\n        if (confirm)\n        {\n        this.count = 1;\n            await context.PostAsync(\"\u4f1a\u8a71\u6570\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3057\u305f\u3002\");\n        }\n        else\n        {\n            await context.PostAsync(\"\u4f1a\u8a71\u6570\u30ea\u30bb\u30c3\u30c8\u3092\u4e2d\u6b62\u3057\u307e\u3057\u305f\u3002\");\n        }\n            context.Wait(MessageReceivedAsync);\n        }\n    }\n```\n\nPost \u304b\u3089\u306e\u547c\u3073\u51fa\u3057\u3082 EchoCountDialog2 \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```MessageController.cs\n[ResponseType(typeof(void))]\npublic virtual async Task<HttpResponseMessage> Post ([FromBody] Activity activity)\n{\n    if (activity != null)\n    {\n        if (activity.GetActivityType()==ActivityTypes.Message)\n        {\n            //await Conversation.SendAsync(activity, () => new EchoDialog());\n            //await Conversation.SendAsync(activity, () => new EchoCountDialog());\n            await Conversation.SendAsync(activity, () => new EchoCountDialog2());\n        }\n        else\n        {\n            HandleSystemMessage(activity);\n        }\n    }\n    return new HttpResponseMessage(System.Net.HttpStatusCode.Accepted);\n}\n```\n\n##Emulator\u3067\u52d5\u4f5c\u78ba\u8a8d(\u305d\u306e2)\n\u4eca\u56de\u306f \"Reset\" \u3068\u9001\u4fe1\u3059\u308b\u3068\u3001\u78ba\u8a8d\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002Emulator \u306e\u53f3\u4e0a\u306b\u3042\u308b Locale \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 OS \u306e\u8a00\u8a9e\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b(\u306f\u305a)\u3001Locale:ja-jp \u3067\u306f [\u306f\u3044][\u3044\u3044\u3048] \u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n![\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u306e\u30ab\u30a6\u30f3\u30c8(Yes/No \u78ba\u8a8d\u30c0\u30a4\u30a2\u30ed\u30b0(\u65e5\u672c\u8a9e))](https://msdnshared.blob.core.windows.net/media/2016/08/bluesky_20160805_021-e1470292517131.png)\n\nLocale:en-us \u306a\u3069\u82f1\u8a9e\u306b\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u78ba\u8a8d\u30c0\u30a4\u30a2\u30ed\u30b0\u306f [Yes][No] \u306b\u306a\u308a\u307e\u3059\u3002\n![\u30e1\u30c3\u30bb\u30fc\u30b8\u6570\u306e\u30ab\u30a6\u30f3\u30c8(Yes/No \u78ba\u8a8d\u30c0\u30a4\u30a2\u30ed\u30b0(\u82f1\u8a9e))](https://msdnshared.blob.core.windows.net/media/2016/08/bluesky_20160805_031-e1470292549200.png)\n", "tags": ["Microsoft", "BotFramework", "bot", "C#", "VisualStudio2015"]}