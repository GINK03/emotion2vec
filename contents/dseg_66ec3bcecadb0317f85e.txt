{"context": "\n\n\u306f\u3058\u3081\u306b\nRust\u521d\u5fc3\u8005\u3067\u3059\u3001\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\u6570\u65e5\u524d\u3088\u308a'The Rust Programming Language' E-Books\u306e\u30da\u30fc\u30b8\u304b\u3089PDF\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u8aad\u307f\u59cb\u3081\u305f\u306e\u3067\u3059\u304c\u3001323\u30da\u30fc\u30b8\u3068\u304b\u306a\u308a\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u3067\u5168\u304f\u9032\u307f\u307e\u305b\u3093\u2026\u3002\n\u6298\u308c\u305d\u3046\u5c11\u3057\u624b\u3092\u52d5\u304b\u3057\u305f\u3044\u306a\u3068\u601d\u3044\u3001Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306aWeb\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3057\u3066\u307f\u308b\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\n\u74b0\u5883\u69cb\u7bc9\u306b\u306f\u3001\u5148\u65e5\u306e@nacika_ins\u3055\u3093\u306e\u8a18\u4e8b\u3001Rust\u3092\u306f\u3058\u3081\u3088\u3046\uff01 Rust\u306e\u74b0\u5883\u69cb\u7bc9 Atom & SublimeText\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\n\n\u52d5\u4f5c\u78ba\u8a8d\u74b0\u5883\n\nRust 1.4.0 (on Ubuntu 14.04)\nnickel 0.7.3\nPostgreSQL 9.3.10\n\n\nnickel.rs\u3068\u306f\n\u516c\u5f0f\u30b5\u30a4\u30c8\u306e\u7d39\u4ecb\u306b\u3088\u308b\u3068\u3001\n\nnickel.rs is a simple and lightweight foundation for web applications written in Rust. Its API is inspired by the popular >express framework for JavaScript.\n\u3068\u306e\u3053\u3068\u3002\n\n\n\u30b7\u30f3\u30d7\u30eb\n\u8efd\u91cf\nNode.js\u306eExpress.js\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u305f(API\u304c\u4f3c\u3066\u3044\u308b?)\n\n\u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u306d\u3002\nGitHub\u306e\u661f\u306e\u6570\u304b\u3089\u5224\u65ad\u3059\u308b\u3068\u3001Rust\u306eWeb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u4e00\u756a\u4eba\u6c17\u306a\u306e\u306firon\u3067\u3059\u304c(iron:2365 vs nickel:1225)\u3001\nnickel.rs\u3082\u30b7\u30f3\u30d7\u30eb\u3055\u3001\u4f7f\u3044\u3084\u3059\u3055\u3067\u5229\u70b9\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\nRust web framework comparison\n\u307e\u305f\u3001nickel\u3067\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u304c\u4e00\u901a\u308a\u63c3\u3063\u3066\u3044\u307e\u3059\u3002\n\nPostgreSQL\nMySQL\nSQLite\nRedis\n\n\u4eca\u56de\u306fPostgreSQL\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u901f\u5ea6\u306f?\n\u8272\u3005\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u53d6\u3063\u3066\u3044\u308bTechEmpower\u306e\u6700\u65b0\u7d50\u679c\u306b\u3088\u308b\u3068\u3001nickel.rs\u306fJSON Serialization\u90e8\u9580\u306741\u4f4d\u3002\u4f59\u308a\u632f\u3044\u307e\u305b\u3093\u304c\u3001rack\u3084node.js\u3088\u308a\u5c11\u3057\u901f\u3044\u7d50\u679c\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\u65e9\u901f\u59cb\u3081\u3066\u307f\u308b\n\u516c\u5f0f\u306eGetting Started \u30ac\u30a4\u30c9\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\u57fa\u672c\u7684\u306b\u30ac\u30a4\u30c9\u306e\u901a\u308a\u9032\u3081\u308c\u3070OK\u3002\n\nUbuntu 14.04 \u306b rust / cargo \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u307e\u305a\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\nsudo -i\nadd-apt-repository -y ppa:hansjorg/rust\napt-get update\napt-get install rust-stable cargo-nightly\nexit\n\nrustc --version\nrustc 1.4.0-dev\n\nls -lH $(which rustc)\n-rwxr-xr-x 1 root root 6064 Nov  1 19:59 /usr/bin/rustc\n\ncargo --version\ncargo 0.7.0 (b6cc27a 2015-11-28)\n\n\nHello World\n\n\u3072\u306a\u578b\u306e\u4f5c\u6210\n\u300c--bin\u300d\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3001\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u5b9f\u884c\u53ef\u80fd\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308b\u3053\u3068\u306e\u6307\u793a\u306b\u306a\u308a\u307e\u3059\u3002\n--bin\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001\u300ccargo run\u300d\u3067\u5b9f\u884c\u53ef\u80fd\u3067\u3059\u3002\n$ cargo new nickel-helloworld --bin\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306e\u8a18\u8ff0(Cargo.toml)\n\nCargo.toml\n[package]\nname = \"nickel-helloworld\"\nversion = \"0.1.0\"\nauthors = [\"johndoe\"]\n\n[dependencies]\nnickel = \"*\"\n\n\n\n\u30a2\u30d7\u30ea\u672c\u4f53\u306e\u8a18\u8ff0\n\u30b5\u30fc\u30d0\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u5b9a\u7fa9\u3001\u30cf\u30f3\u30c9\u30e9\u3092\u767b\u9332\u3057\u3066\u5b8c\u4e86\u3002\n\u6163\u308c\u89aa\u3057\u3093\u3060\u3084\u308a\u65b9\u3067\u3059\u306d\u3002\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u53d6\u5f97\u306f request.param(\"name\")\u3002\n\nmain.rs\n#[macro_use] extern crate nickel;\n\nuse nickel::{Nickel, HttpRouter};\n\nfn main() {\n    let mut serv = Nickel::new();\n\n    serv.get(\"/bar\", middleware!(\"This is the /bar handler\"));\n    serv.get(\"/user/:userid\", middleware! { |request|\n      format!(\"<h1>This is user: {:?}</h1>\", request.param(\"userid\").unwrap())\n    });\n    serv.get(\"/a/*/d\", middleware!(\"matches /a/b/d but not /a/b/c/d\"));\n    serv.get(\"/a/**/d\", middleware!(\"This matches /a/b/d and also /a/b/c/d\"));\n    serv.listen(\"127.0.0.1:6767\");\n}\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n# cargo run\u3060\u3068 \u30d3\u30eb\u30c9\u30fb\u5b9f\u884c\u3092\u9023\u7d9a\u3067\u884c\u3046\n#\n$ cargo build\n\n   Compiling rand v0.3.12\n   Compiling matches v0.1.2\n   Compiling rustc-serialize v0.3.16\n   Compiling mustache v0.6.3\n   Compiling num v0.1.28\n   Compiling serde v0.6.6\n   Compiling unicase v1.0.1\n   Compiling modifier v0.1.0\n   Compiling time v0.1.34\n   Compiling num_cpus v0.2.10\n   Compiling uuid v0.1.18\n   Compiling url v0.2.38\n   Compiling cookie v0.1.21\n   Compiling mime v0.1.1\n   Compiling typemap v0.3.3\n   Compiling plugin v0.2.6\n   Compiling memchr v0.1.7\n   Compiling aho-corasick v0.4.0\n   Compiling regex v0.1.43\n   Compiling language-tags v0.0.7\n   Compiling hyper v0.6.16\n   Compiling nickel v0.7.3\n   Compiling nickel-helloworld v0.1.0 (file:///home/ubuntu/devel/rust/nickel-helloworld)\n\n$ cargo run\n     Running `target/debug/nickel-helloworld`\nListening on http://127.0.0.1:6767\nCtrl-C to shutdown server\n\n$ curl http://127.0.0.1:6767/user/dseg\n<h1>This is user: \"dseg\"</h1>\n\n\u4e00\u756a\u30b7\u30f3\u30d7\u30eb\u306aHello world\u306f\u3053\u308c\u306b\u3066\u5b8c\u6210\u3067\u3059\u3002\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3046 (Mustache)\nnickel\u3067\u306f\u3001Mustache\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u6a19\u6e96\u3067\u4f7f\u3048\u307e\u3059(\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u8ffd\u52a0\u4e0d\u8981)\u3002\nResponse\u306erender\u30e1\u30bd\u30c3\u30c9\u306b\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u3057\u3066\u547c\u3076\u3068\u3001\u7d50\u679c\u306e\u6587\u5b57\u5217\u304c\u5e30\u3063\u3066\u304d\u307e\u3059\u3002\n\u7c21\u5358\u3067\u3059\u306d\u3002\n\nsrc/main.rs\n// Mustache\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3046\u30d0\u30fc\u30b8\u30e7\u30f3\n#[macro_use] extern crate nickel;\n\nuse std::collections::HashMap;\nuse nickel::{Nickel, HttpRouter};\n\nfn main() {\n    let mut server = Nickel::new();\n\n    server.get(\"/\", middleware! {|_, response|\n        let mut data = HashMap::new();\n        data.insert(\"color\", \"Green\");\n        data.insert(\"name\", \"California Apple\");\n        data.insert(\"price\", \"2.50\");\n        return response.render(\"assets/hello.tpl\", &data);\n    });\n\n    server.listen(\"127.0.0.1:6767\");\n}\n\n\n\nassets/hello.tpl\n<html> \n  <head> \n  <title>A Simple Mustache Demo</title> \n  <meta charset=\"utf-8\">\n</head> \n<body> \n  <h1>A Simple Mustache Demo</h1>\n    <h4>Product Info: {{name}}</h4>\n    <ul>\n      <li>Product: {{name}}</li>\n      <li>Color: {{color}}</li>\n      <li>Price: ${{price}}</li>\n    </ul>\n</body> \n</html> \n\n\n$ cargo run\n~/devel/rust/nickel-helloworld$ cargo run\n     Running `target/debug/nickel-helloworld`\nListening on http://127.0.0.1:6767\nCtrl-C to shutdown server\n\n\ncurl\u3067\u52d5\u4f5c\u78ba\u8a8d\n$:~/devel/rust/nickel-helloworld$ curl http://localhost:6767\n<html>\n  <head>\n    <title>A Simple Mustache Demo</title>\n    <meta charset=\"utf-8\">\n  </head>\n  <body>\n      <h1>A Simple Mustache Demo</h1>\n      <h4>Product Info: California Apple</h4>\n      <ul>\n          <li>Product: California Apple</li>\n          <li>Color: Green</li>\n          <li>Price: $2.50</li>\n      </ul>\n  </body>\n</html>\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5909\u6570\u304c\u5c55\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002OK\u3067\u3059\u3002\n\nPostgreSQL\u3068\u9023\u643a\nnickel-postgres\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f7f\u3063\u3066\u3001PostgreSQL\u3068\u9023\u643a\u3057\u3066\u307f\u307e\u3059\u3002\nhttps://github.com/nickel-org/nickel-postgres/\n\nnickel-helloworld-postgress\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\ncargo new nickel-helloworld-postgres --bin\n\n\nCargo.toml\u306bnickel-postgres\u3001\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u8ffd\u52a0\n\nCargo.toml\n[package]\nname = \"nickel-helloworld-postgres\"\nversion = \"0.1.0\"\nauthors = [\"johndoe\"]\n\n[dependencies]\nnickel = \"*\"\nr2d2 = \"*\"\npostgres = \"*\"\nopenssl = \"*\"\n\n[dependencies.nickel_postgres]\ngit = \"https://github.com/nickel-org/nickel-postgres.git\"\n\n\n\ncounter.sql\n-- \u30b9\u30ad\u30fc\u30de\u3068\u521d\u671f\u30c7\u30fc\u30bf\nCREATE TABLE counter (\n  id SERIAL,\n  counter SMALLINT NOT NULL DEFAULT 0\n);\n\nINSERT INTO counter (id, counter) VALUES (0, 1);\n\n\n\nmain.rs\n#[macro_use] extern crate nickel;\n\nextern crate r2d2;\nextern crate postgres;\nextern crate openssl;\nextern crate nickel_postgres;\n\nuse nickel::{Nickel,HttpRouter};\nuse r2d2::NopErrorHandler;\nuse postgres::SslMode;\nuse nickel_postgres::{PostgresMiddleware, PostgresRequestExtensions};\n\nfn main() {\n    let mut serv = Nickel::new();\n    let dsn = \"postgres://dbuser:dbpassword@127.0.0.1/counter\";\n    let dbpool = PostgresMiddleware::new(&*dsn,\n                                         SslMode::None,\n                                         5,\n                                         Box::new(NopErrorHandler)).unwrap();\n    serv.utilize(dbpool);\n    serv.get(\"/count\",\n             middleware! {|req, res|\n              let conn = req.db_conn();\n              let stmt = conn.prepare(\"SELECT counter FROM counter WHERE id = 0\").unwrap();\n              let rows = &stmt.query(&[]).unwrap();\n              let mut counter:i16 = 0; // Int2(smallint) of Postgres is i16\n              for row in rows {\n                counter = row.get(0);\n              }\n              // also print to stdout\n              println!(\"counter value is {}\", counter);\n\n              // Up and save the counter value (+1)\n              conn.execute(\"UPDATE counter SET counter = counter + 1 WHERE id = 0\", &[]).unwrap();\n\n              format!(\"<h1>Hello</h1><br>your are the visitor # {}.\\n\", counter)\n            });\n    serv.listen(\"localhost:6767\");\n}\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n$ ~/devel/rust/nickel-helloworld-postgres$ curl http://localhost:6767/count\n<h1>Hello</h1><br>your are the visitor # 21.\n\n$ ~/devel/rust/nickel-helloworld-postgres$ curl http://localhost:6767/count\n<h1>Hello</h1><br>your are the visitor # 22.\n\n$ ~/devel/rust/nickel-helloworld-postgres$ curl http://localhost:6767/count\n<h1>Hello</h1><br>your are the visitor # 23.\n\n\nHelloWorld\u30b5\u30fc\u30d0\u30fc\u306e\u5fdc\u7b54\u901f\u5ea6\u306e\u78ba\u8a8d\nab \u3067\u7c21\u6613\u7684\u306b\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u53d6\u3063\u3066\u307f\u307e\u3059\u3002\n$ cd devel/rust/nickel-helloworld\n~/devel/rust/nickel-helloworld$ ab -n 10 -c 1 http://localhost:6767/\nThis is ApacheBench, Version 2.3 <$Revision: 1528965 $>\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking localhost (be patient).....done\n\n\nServer Software:        Nickel\nServer Hostname:        localhost\nServer Port:            6767\n\nDocument Path:          /\nDocument Length:        23 bytes\n\nConcurrency Level:      1\nTime taken for tests:   0.009 seconds\nComplete requests:      10\nFailed requests:        0\nTotal transferred:      1670 bytes\nHTML transferred:       230 bytes\nRequests per second:    1133.92 [#/sec] (mean)\nTime per request:       0.882 [ms] (mean)\nTime per request:       0.882 [ms] (mean, across all concurrent requests)\nTransfer rate:          184.93 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   0.1      0       0\nProcessing:     0    1   0.9      1       3\nWaiting:        0    1   0.9      1       3\nTotal:          1    1   1.0      1       4\n\nPercentage of the requests served within a certain time (ms)\n  50%      1\n  66%      1\n  75%      1\n  80%      1\n  90%      4\n  95%      4\n  98%      4\n  99%      4\n 100%      4 (longest request)\n\n\u2026\u3080\u3080\u3001\u9045\u3044?\n\u5e73\u5747\u5fdc\u7b54\u6642\u9593\u304c500ms?\n\u3042\u3002\u30c7\u30d0\u30c3\u30b0\u7248\u3060\u304b\u3089\u3067\u3059\u306d\u3002\n\u30d3\u30eb\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u30c7\u30d0\u30c3\u30b0\u7248\u306a\u306e\u304b\u3001\u6ce8\u610f\u3057\u306a\u3044\u3068\u3002\n\u30ea\u30ea\u30fc\u30b9\u7248\u3092\u30d3\u30eb\u30c9\u3002\n# cargo build --release\ncargo run --release # build & run\n\n     Running `target/release/nickel-helloworld`\nListening on http://127.0.0.1:6767\nCtrl-C to shutdown server\n\n$ ab -n 10 -c 1 http://localhost:6767/\nThis is ApacheBench, Version 2.3 <$Revision: 1528965 $>\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking localhost (be patient).....done\n\n\nServer Software:        Nickel\nServer Hostname:        localhost\nServer Port:            6767\n\nDocument Path:          /\nDocument Length:        23 bytes\n\nConcurrency Level:      1\nTime taken for tests:   0.001 seconds\nComplete requests:      10\nFailed requests:        0\nTotal transferred:      1670 bytes\nHTML transferred:       230 bytes\nRequests per second:    9433.96 [#/sec] (mean)\nTime per request:       0.106 [ms] (mean)\nTime per request:       0.106 [ms] (mean, across all concurrent requests)\nTransfer rate:          1538.55 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   0.0      0       0\nProcessing:     0    0   0.0      0       0\nWaiting:        0    0   0.0      0       0\nTotal:          0    0   0.0      0       0\n\nPercentage of the requests served within a certain time (ms)\n  50%      0\n  66%      0\n  75%      0\n  80%      0\n  90%      0\n  95%      0\n  98%      0\n  99%      0\n 100%      0 (longest request)\n\n\u5fdc\u7b54\u6642\u9593\u304c\u5e73\u57470.1\u79d2\u3068\u3001\u30c7\u30d0\u30c3\u30b0\u7248\u306e5\u500d\u306b\u30b9\u30d4\u30fc\u30c9\u30a2\u30c3\u30d7\u3002\u826f\u3044\u3067\u3059\u3002\n\n\u304a\u308f\u308a\u306b\nRust\u3067\u306eWeb\u958b\u767a\u3001\u300c\u4f59\u308aRust\u3063\u307d\u3055\u304c\u751f\u304d\u306a\u3044\u5206\u91ce\u304b\u3082?\u300d\u3068\u601d\u3063\u3066\u3001\u59cb\u3081\u306f\u5c11\u3057\u6d88\u6975\u7684\u3067\u3057\u305f\u304c\u3001\n\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u308b\u3068\u3001\u3068\u3066\u3082\u826f\u3044\u5370\u8c61\u3092\u6301\u3061\u307e\u3057\u305f\u3002\n\n\u30b7\u30f3\u30d7\u30eb\nCargo\u3092\u4f7f\u3063\u305f\u30d3\u30eb\u30c9\u30fb\u4f9d\u5b58\u95a2\u4fc2\u89e3\u6c7a\u30fb\u30c6\u30b9\u30c8\u304c\u4fbf\u5229\n\u30b3\u30f3\u30d1\u30a4\u30eb\u30fb\u5b9f\u884c\u901f\u5ea6\u3082\u305d\u3053\u305d\u3053\u901f\u304f\u5feb\u9069\n\u53b3\u683c\u306a\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u578b\u30c1\u30a7\u30c3\u30af\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bf\u60c5\u5831\u30fb\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u306fCargo.toml\u306b\u66f8\u304d\u307e\u3059\u304c\u3001\u66f8\u5f0f\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u3063\u304d\u308a\u3057\u3066\u3044\u307e\u3059\u3002\ncargo\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u3082\u65e9\u3044\u3067\u3059\u3002\nScaffold\u3082\u51fa\u6765\u308b\u3057\u3001cargo\u3067\u30d3\u30eb\u30c9\u30fb\u5b9f\u884c\u30fb\u30c6\u30b9\u30c8\u53ef\u80fd\u3002\n\u898f\u6a21\u306e\u5927\u304d\u306aWeb\u30a2\u30d7\u30ea\u958b\u767a\u3092\u3059\u308b\u306e\u306b\u306f\u6642\u671f\u304c\u5c11\u3057\u65e9\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\n\u500b\u4eba\u7684\u306b\u306f\u3001Node.js\u3067\u4f5c\u3063\u3066\u3044\u305f\u3001DB\u306b\u8aad\u307f\u66f8\u304d\u3059\u308b\u30d0\u30c3\u30c1\u30b9\u30af\u30ea\u30d7\u30c8\u3084\u305d\u306eWeb\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u7b49\u3092\u3001\nrust\u3067\u7f6e\u304d\u63db\u3048\u3066\u307f\u3088\u3046\u304b\u306a\u3001\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u59cb\u3081\u3068\u3057\u305f\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u304c\u6210\u9577\u3059\u308c\u3070\u3001\u66f4\u306b\u5229\u70b9\u304c\u5897\u3048\u308b\u8a33\u3067\u3001\u3053\u308c\u304b\u3089\u304c\u697d\u3057\u307f\u3067\u3059\u3002\n\u3068\u3053\u308d\u3067\u3001\u4eca\u56de\u306e\u3088\u3046\u306aHello World\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3082\u3001\u30de\u30af\u30ed\u3084\u30e0\u30fc\u30d6\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u7b49\u3092\u306f\u3063\u304d\u308a\u7406\u89e3\u3057\u306a\u3044\u3068\u30b9\u30e0\u30fc\u30ba\u306b\u5148\u306b\u9032\u3081\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u30cf\u30f3\u30c9\u30e9\u3067\u306f\u6587\u5b57\u5217\u8fd4\u305b\u3070\u3068\u308a\u3042\u3048\u305a\u8868\u793a\u3055\u308c\u308b\u3060\u308d\u3001\u7684\u306a\u8003\u3048\u3067\u30b5\u30f3\u30d7\u30eb\u3092\u6539\u9020\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u3053\u308d\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308a\u3001\u305d\u306e\u6642\u5185\u5bb9\u306e\u7406\u89e3\u304c\u7d50\u69cb\u96e3\u3057\u304b\u3063\u305f\u3067\u3059\u3002\n\u611f\u899a\u7684\u3067\u7533\u3057\u8a33\u306a\u3044\u3067\u3059\u304c\u3001C++\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u306e\u3088\u3046\u306a\u611f\u3058\u3068\u3044\u3046\u304b\u3001\u30a8\u30e9\u30fc\u306e\u5185\u5bb9\u304c\u8907\u96d1\u3067\u4e00\u7b4b\u7e04\u3067\u306f\u884c\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\nnickel\u3092\u62e1\u5f35\u3059\u308b\u969b\u306f\u3001middleware\u3092\u30de\u30b9\u30bf\u30fc\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u3053\u308c\u304c\u306a\u304b\u306a\u304b\u624b\u3054\u308f\u305d\u3046\u306a\u96f0\u56f2\u6c17\u304c\u3002\n\u2026\u3068\u3044\u3046\u8a33\u3067\u5b66\u7fd2\u306b\u623b\u308a\u307e\u3059\u3002\u9053\u306f\u9577\u3044\u3002\n\n\u53c2\u8003\n\nnickel \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n24daysofrust Day 11 - postgres \u5b9f\u8df5\u7684\u306a\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\nRust by Examples\nRust\u306estruct\u3001trait\u306e\u4f7f\u3044\u65b9\nA Practical Intro to Macros in Rust 1.0 \u30a4\u30f3\u30c8\u30ed\u3068\u8a00\u3063\u3066\u3082\u5b9f\u306f\u5927\u4f5c\u3002\nCrate postgres\nRust \u8a00\u8a9e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb (\u975e\u516c\u5f0f\u65e5\u672c\u8a9e\u8a33)\n\n# \u306f\u3058\u3081\u306b\n\nRust\u521d\u5fc3\u8005\u3067\u3059\u3001\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\u6570\u65e5\u524d\u3088\u308a['The Rust Programming Language' E-Books](https://killercup.github.io/trpl-ebook/)\u306e\u30da\u30fc\u30b8\u304b\u3089PDF\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u8aad\u307f\u59cb\u3081\u305f\u306e\u3067\u3059\u304c\u3001323\u30da\u30fc\u30b8\u3068\u304b\u306a\u308a\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u3067\u5168\u304f\u9032\u307f\u307e\u305b\u3093\u2026\u3002\n\n~~\u6298\u308c\u305d\u3046~~\u5c11\u3057\u624b\u3092\u52d5\u304b\u3057\u305f\u3044\u306a\u3068\u601d\u3044\u3001Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306aWeb\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3057\u3066\u307f\u308b\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u74b0\u5883\u69cb\u7bc9\u306b\u306f\u3001\u5148\u65e5\u306e@nacika_ins\u3055\u3093\u306e\u8a18\u4e8b\u3001[Rust\u3092\u306f\u3058\u3081\u3088\u3046\uff01 Rust\u306e\u74b0\u5883\u69cb\u7bc9 Atom & SublimeText](http://qiita.com/nacika_ins/items/044c87fd8bd1d7c41191)\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\n\n# \u52d5\u4f5c\u78ba\u8a8d\u74b0\u5883\n- Rust 1.4.0 (on Ubuntu 14.04)\n- [nickel 0.7.3](https://crates.io/crates/nickel)\n- PostgreSQL 9.3.10\n\n# nickel.rs\u3068\u306f\n[\u516c\u5f0f\u30b5\u30a4\u30c8](http://nickel.rs/)\u306e\u7d39\u4ecb\u306b\u3088\u308b\u3068\u3001\n>nickel.rs is a simple and lightweight foundation for web applications written in Rust. Its API is inspired by the popular >express framework for JavaScript.\n\u3068\u306e\u3053\u3068\u3002\n\n- \u30b7\u30f3\u30d7\u30eb\n- \u8efd\u91cf\n- Node.js\u306e[Express.js](http://expressjs.com/en/)\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u305f(API\u304c\u4f3c\u3066\u3044\u308b?)\n\n\u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u306d\u3002\n\nGitHub\u306e\u661f\u306e\u6570\u304b\u3089\u5224\u65ad\u3059\u308b\u3068\u3001Rust\u306eWeb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u4e00\u756a\u4eba\u6c17\u306a\u306e\u306firon\u3067\u3059\u304c(iron:2365 vs nickel:1225)\u3001\nnickel.rs\u3082\u30b7\u30f3\u30d7\u30eb\u3055\u3001\u4f7f\u3044\u3084\u3059\u3055\u3067\u5229\u70b9\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\n[Rust web framework comparison](https://github.com/flosse/rust-web-framework-comparison)\n\n\u307e\u305f\u3001nickel\u3067\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u304c\u4e00\u901a\u308a\u63c3\u3063\u3066\u3044\u307e\u3059\u3002\n\n - PostgreSQL\n - MySQL\n - SQLite\n - Redis\n\n\u4eca\u56de\u306fPostgreSQL\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n# \u901f\u5ea6\u306f?\n\u8272\u3005\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u53d6\u3063\u3066\u3044\u308bTechEmpower\u306e\u6700\u65b0\u7d50\u679c\u306b\u3088\u308b\u3068\u3001nickel.rs\u306f[JSON Serialization\u90e8\u9580\u306741\u4f4d](https://www.techempower.com/benchmarks/#section=data-r11&hw=peak&test=json)\u3002\u4f59\u308a\u632f\u3044\u307e\u305b\u3093\u304c\u3001rack\u3084node.js\u3088\u308a\u5c11\u3057\u901f\u3044\u7d50\u679c\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n![](https://raw.githubusercontent.com/dseg/dseg.github.io/master/img/qiita/05-nickel/bench.png)\n\n# \u65e9\u901f\u59cb\u3081\u3066\u307f\u308b\n[\u516c\u5f0f\u306eGetting Started \u30ac\u30a4\u30c9](http://nickel.rs/getting-started.html)\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\u57fa\u672c\u7684\u306b\u30ac\u30a4\u30c9\u306e\u901a\u308a\u9032\u3081\u308c\u3070OK\u3002\n\n## Ubuntu 14.04 \u306b rust / cargo \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u307e\u305a\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n~~~bash\nsudo -i\nadd-apt-repository -y ppa:hansjorg/rust\napt-get update\napt-get install rust-stable cargo-nightly\nexit\n\nrustc --version\nrustc 1.4.0-dev\n\nls -lH $(which rustc)\n-rwxr-xr-x 1 root root 6064 Nov  1 19:59 /usr/bin/rustc\n\ncargo --version\ncargo 0.7.0 (b6cc27a 2015-11-28)\n~~~\n\n# Hello World\n\n## \u3072\u306a\u578b\u306e\u4f5c\u6210\n\n\u300c*--bin*\u300d\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3001\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u5b9f\u884c\u53ef\u80fd\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308b\u3053\u3068\u306e\u6307\u793a\u306b\u306a\u308a\u307e\u3059\u3002\n*--bin*\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001\u300ccargo run\u300d\u3067\u5b9f\u884c\u53ef\u80fd\u3067\u3059\u3002\n\n~~~bash\n$ cargo new nickel-helloworld --bin\n~~~\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306e\u8a18\u8ff0(Cargo.toml)\n~~~yaml:Cargo.toml\n[package]\nname = \"nickel-helloworld\"\nversion = \"0.1.0\"\nauthors = [\"johndoe\"]\n\n[dependencies]\nnickel = \"*\"\n~~~\n\n## \u30a2\u30d7\u30ea\u672c\u4f53\u306e\u8a18\u8ff0\n\u30b5\u30fc\u30d0\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u5b9a\u7fa9\u3001\u30cf\u30f3\u30c9\u30e9\u3092\u767b\u9332\u3057\u3066\u5b8c\u4e86\u3002\n\u6163\u308c\u89aa\u3057\u3093\u3060\u3084\u308a\u65b9\u3067\u3059\u306d\u3002\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u53d6\u5f97\u306f `request.param(\"name\")`\u3002\n\n~~~rust:main.rs\n#[macro_use] extern crate nickel;\n\nuse nickel::{Nickel, HttpRouter};\n\nfn main() {\n    let mut serv = Nickel::new();\n\n    serv.get(\"/bar\", middleware!(\"This is the /bar handler\"));\n    serv.get(\"/user/:userid\", middleware! { |request|\n      format!(\"<h1>This is user: {:?}</h1>\", request.param(\"userid\").unwrap())\n    });\n    serv.get(\"/a/*/d\", middleware!(\"matches /a/b/d but not /a/b/c/d\"));\n    serv.get(\"/a/**/d\", middleware!(\"This matches /a/b/d and also /a/b/c/d\"));\n    serv.listen(\"127.0.0.1:6767\");\n}\n~~~\n\n## \u52d5\u4f5c\u78ba\u8a8d\n\n```shell-session\n# cargo run\u3060\u3068 \u30d3\u30eb\u30c9\u30fb\u5b9f\u884c\u3092\u9023\u7d9a\u3067\u884c\u3046\n#\n$ cargo build\n\n   Compiling rand v0.3.12\n   Compiling matches v0.1.2\n   Compiling rustc-serialize v0.3.16\n   Compiling mustache v0.6.3\n   Compiling num v0.1.28\n   Compiling serde v0.6.6\n   Compiling unicase v1.0.1\n   Compiling modifier v0.1.0\n   Compiling time v0.1.34\n   Compiling num_cpus v0.2.10\n   Compiling uuid v0.1.18\n   Compiling url v0.2.38\n   Compiling cookie v0.1.21\n   Compiling mime v0.1.1\n   Compiling typemap v0.3.3\n   Compiling plugin v0.2.6\n   Compiling memchr v0.1.7\n   Compiling aho-corasick v0.4.0\n   Compiling regex v0.1.43\n   Compiling language-tags v0.0.7\n   Compiling hyper v0.6.16\n   Compiling nickel v0.7.3\n   Compiling nickel-helloworld v0.1.0 (file:///home/ubuntu/devel/rust/nickel-helloworld)\n```\n\n```shell-session\n$ cargo run\n     Running `target/debug/nickel-helloworld`\nListening on http://127.0.0.1:6767\nCtrl-C to shutdown server\n\n$ curl http://127.0.0.1:6767/user/dseg\n<h1>This is user: \"dseg\"</h1>\n```\n\n\u4e00\u756a\u30b7\u30f3\u30d7\u30eb\u306aHello world\u306f\u3053\u308c\u306b\u3066\u5b8c\u6210\u3067\u3059\u3002\n\n# \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3046 (Mustache)\nnickel\u3067\u306f\u3001[Mustache](https://mustache.github.io/)\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u6a19\u6e96\u3067\u4f7f\u3048\u307e\u3059(\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u8ffd\u52a0\u4e0d\u8981)\u3002\nResponse\u306erender\u30e1\u30bd\u30c3\u30c9\u306b\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u3057\u3066\u547c\u3076\u3068\u3001\u7d50\u679c\u306e\u6587\u5b57\u5217\u304c\u5e30\u3063\u3066\u304d\u307e\u3059\u3002\n\u7c21\u5358\u3067\u3059\u306d\u3002\n\n```rust:src/main.rs\n// Mustache\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3046\u30d0\u30fc\u30b8\u30e7\u30f3\n#[macro_use] extern crate nickel;\n\nuse std::collections::HashMap;\nuse nickel::{Nickel, HttpRouter};\n\nfn main() {\n    let mut server = Nickel::new();\n\n    server.get(\"/\", middleware! {|_, response|\n        let mut data = HashMap::new();\n        data.insert(\"color\", \"Green\");\n        data.insert(\"name\", \"California Apple\");\n        data.insert(\"price\", \"2.50\");\n        return response.render(\"assets/hello.tpl\", &data);\n    });\n\n    server.listen(\"127.0.0.1:6767\");\n}\n```\n\n```html:assets/hello.tpl\n<html> \n  <head> \n  <title>A Simple Mustache Demo</title> \n  <meta charset=\"utf-8\">\n</head> \n<body> \n  <h1>A Simple Mustache Demo</h1>\n    <h4>Product Info: {{name}}</h4>\n    <ul>\n      <li>Product: {{name}}</li>\n      <li>Color: {{color}}</li>\n      <li>Price: ${{price}}</li>\n    </ul>\n</body> \n</html> \n```\n\n~~~bash\n$ cargo run\n~/devel/rust/nickel-helloworld$ cargo run\n     Running `target/debug/nickel-helloworld`\nListening on http://127.0.0.1:6767\nCtrl-C to shutdown server\n~~~\n\n## curl\u3067\u52d5\u4f5c\u78ba\u8a8d\n\n~~~shell-session\n$:~/devel/rust/nickel-helloworld$ curl http://localhost:6767\n<html>\n  <head>\n    <title>A Simple Mustache Demo</title>\n    <meta charset=\"utf-8\">\n  </head>\n  <body>\n      <h1>A Simple Mustache Demo</h1>\n      <h4>Product Info: California Apple</h4>\n      <ul>\n          <li>Product: California Apple</li>\n          <li>Color: Green</li>\n          <li>Price: $2.50</li>\n      </ul>\n  </body>\n</html>\n~~~\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5909\u6570\u304c\u5c55\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002OK\u3067\u3059\u3002\n\n# PostgreSQL\u3068\u9023\u643a\nnickel-postgres\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f7f\u3063\u3066\u3001PostgreSQL\u3068\u9023\u643a\u3057\u3066\u307f\u307e\u3059\u3002\n<https://github.com/nickel-org/nickel-postgres/>\n\n## nickel-helloworld-postgress\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\n~~~bash\ncargo new nickel-helloworld-postgres --bin\n~~~\n\n## Cargo.toml\u306bnickel-postgres\u3001\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u8ffd\u52a0\n\n~~~yaml:Cargo.toml\n[package]\nname = \"nickel-helloworld-postgres\"\nversion = \"0.1.0\"\nauthors = [\"johndoe\"]\n\n[dependencies]\nnickel = \"*\"\nr2d2 = \"*\"\npostgres = \"*\"\nopenssl = \"*\"\n\n[dependencies.nickel_postgres]\ngit = \"https://github.com/nickel-org/nickel-postgres.git\"\n~~~\n\n~~~sql:counter.sql\n-- \u30b9\u30ad\u30fc\u30de\u3068\u521d\u671f\u30c7\u30fc\u30bf\nCREATE TABLE counter (\n  id SERIAL,\n  counter SMALLINT NOT NULL DEFAULT 0\n);\n\nINSERT INTO counter (id, counter) VALUES (0, 1);\n~~~\n\n~~~rust:main.rs\n#[macro_use] extern crate nickel;\n\nextern crate r2d2;\nextern crate postgres;\nextern crate openssl;\nextern crate nickel_postgres;\n\nuse nickel::{Nickel,HttpRouter};\nuse r2d2::NopErrorHandler;\nuse postgres::SslMode;\nuse nickel_postgres::{PostgresMiddleware, PostgresRequestExtensions};\n\nfn main() {\n    let mut serv = Nickel::new();\n    let dsn = \"postgres://dbuser:dbpassword@127.0.0.1/counter\";\n    let dbpool = PostgresMiddleware::new(&*dsn,\n                                         SslMode::None,\n                                         5,\n                                         Box::new(NopErrorHandler)).unwrap();\n    serv.utilize(dbpool);\n    serv.get(\"/count\",\n             middleware! {|req, res|\n              let conn = req.db_conn();\n              let stmt = conn.prepare(\"SELECT counter FROM counter WHERE id = 0\").unwrap();\n              let rows = &stmt.query(&[]).unwrap();\n              let mut counter:i16 = 0; // Int2(smallint) of Postgres is i16\n              for row in rows {\n                counter = row.get(0);\n              }\n              // also print to stdout\n              println!(\"counter value is {}\", counter);\n\n              // Up and save the counter value (+1)\n              conn.execute(\"UPDATE counter SET counter = counter + 1 WHERE id = 0\", &[]).unwrap();\n\n              format!(\"<h1>Hello</h1><br>your are the visitor # {}.\\n\", counter)\n            });\n    serv.listen(\"localhost:6767\");\n}\n~~~\n\n## \u52d5\u4f5c\u78ba\u8a8d\n\n~~~shell-session\n$ ~/devel/rust/nickel-helloworld-postgres$ curl http://localhost:6767/count\n<h1>Hello</h1><br>your are the visitor # 21.\n\n$ ~/devel/rust/nickel-helloworld-postgres$ curl http://localhost:6767/count\n<h1>Hello</h1><br>your are the visitor # 22.\n\n$ ~/devel/rust/nickel-helloworld-postgres$ curl http://localhost:6767/count\n<h1>Hello</h1><br>your are the visitor # 23.\n~~~\n\n# HelloWorld\u30b5\u30fc\u30d0\u30fc\u306e\u5fdc\u7b54\u901f\u5ea6\u306e\u78ba\u8a8d\nab \u3067\u7c21\u6613\u7684\u306b\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u53d6\u3063\u3066\u307f\u307e\u3059\u3002\n\n~~~shell-session\n$ cd devel/rust/nickel-helloworld\n~/devel/rust/nickel-helloworld$ ab -n 10 -c 1 http://localhost:6767/\nThis is ApacheBench, Version 2.3 <$Revision: 1528965 $>\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking localhost (be patient).....done\n\n\nServer Software:        Nickel\nServer Hostname:        localhost\nServer Port:            6767\n\nDocument Path:          /\nDocument Length:        23 bytes\n\nConcurrency Level:      1\nTime taken for tests:   0.009 seconds\nComplete requests:      10\nFailed requests:        0\nTotal transferred:      1670 bytes\nHTML transferred:       230 bytes\nRequests per second:    1133.92 [#/sec] (mean)\nTime per request:       0.882 [ms] (mean)\nTime per request:       0.882 [ms] (mean, across all concurrent requests)\nTransfer rate:          184.93 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   0.1      0       0\nProcessing:     0    1   0.9      1       3\nWaiting:        0    1   0.9      1       3\nTotal:          1    1   1.0      1       4\n\nPercentage of the requests served within a certain time (ms)\n  50%      1\n  66%      1\n  75%      1\n  80%      1\n  90%      4\n  95%      4\n  98%      4\n  99%      4\n 100%      4 (longest request)\n~~~\n\n\u2026\u3080\u3080\u3001\u9045\u3044?\n\u5e73\u5747\u5fdc\u7b54\u6642\u9593\u304c500ms?\n\n\u3042\u3002\u30c7\u30d0\u30c3\u30b0\u7248\u3060\u304b\u3089\u3067\u3059\u306d\u3002\n\u30d3\u30eb\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u30c7\u30d0\u30c3\u30b0\u7248\u306a\u306e\u304b\u3001\u6ce8\u610f\u3057\u306a\u3044\u3068\u3002\n\n\u30ea\u30ea\u30fc\u30b9\u7248\u3092\u30d3\u30eb\u30c9\u3002\n\n~~~bash\n# cargo build --release\ncargo run --release # build & run\n\n     Running `target/release/nickel-helloworld`\nListening on http://127.0.0.1:6767\nCtrl-C to shutdown server\n~~~\n\n~~~shell-session\n$ ab -n 10 -c 1 http://localhost:6767/\nThis is ApacheBench, Version 2.3 <$Revision: 1528965 $>\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking localhost (be patient).....done\n\n\nServer Software:        Nickel\nServer Hostname:        localhost\nServer Port:            6767\n\nDocument Path:          /\nDocument Length:        23 bytes\n\nConcurrency Level:      1\nTime taken for tests:   0.001 seconds\nComplete requests:      10\nFailed requests:        0\nTotal transferred:      1670 bytes\nHTML transferred:       230 bytes\nRequests per second:    9433.96 [#/sec] (mean)\nTime per request:       0.106 [ms] (mean)\nTime per request:       0.106 [ms] (mean, across all concurrent requests)\nTransfer rate:          1538.55 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   0.0      0       0\nProcessing:     0    0   0.0      0       0\nWaiting:        0    0   0.0      0       0\nTotal:          0    0   0.0      0       0\n\nPercentage of the requests served within a certain time (ms)\n  50%      0\n  66%      0\n  75%      0\n  80%      0\n  90%      0\n  95%      0\n  98%      0\n  99%      0\n 100%      0 (longest request)\n~~~\n\u5fdc\u7b54\u6642\u9593\u304c\u5e73\u57470.1\u79d2\u3068\u3001\u30c7\u30d0\u30c3\u30b0\u7248\u306e5\u500d\u306b\u30b9\u30d4\u30fc\u30c9\u30a2\u30c3\u30d7\u3002\u826f\u3044\u3067\u3059\u3002\n\n\n# \u304a\u308f\u308a\u306b\nRust\u3067\u306eWeb\u958b\u767a\u3001\u300c\u4f59\u308aRust\u3063\u307d\u3055\u304c\u751f\u304d\u306a\u3044\u5206\u91ce\u304b\u3082?\u300d\u3068\u601d\u3063\u3066\u3001\u59cb\u3081\u306f\u5c11\u3057\u6d88\u6975\u7684\u3067\u3057\u305f\u304c\u3001\n\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u308b\u3068\u3001\u3068\u3066\u3082\u826f\u3044\u5370\u8c61\u3092\u6301\u3061\u307e\u3057\u305f\u3002\n\n- \u30b7\u30f3\u30d7\u30eb\n- Cargo\u3092\u4f7f\u3063\u305f\u30d3\u30eb\u30c9\u30fb\u4f9d\u5b58\u95a2\u4fc2\u89e3\u6c7a\u30fb\u30c6\u30b9\u30c8\u304c\u4fbf\u5229\n- \u30b3\u30f3\u30d1\u30a4\u30eb\u30fb\u5b9f\u884c\u901f\u5ea6\u3082\u305d\u3053\u305d\u3053\u901f\u304f\u5feb\u9069\n- \u53b3\u683c\u306a\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u578b\u30c1\u30a7\u30c3\u30af\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bf\u60c5\u5831\u30fb\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u306fCargo.toml\u306b\u66f8\u304d\u307e\u3059\u304c\u3001\u66f8\u5f0f\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u3063\u304d\u308a\u3057\u3066\u3044\u307e\u3059\u3002\ncargo\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u3082\u65e9\u3044\u3067\u3059\u3002\nScaffold\u3082\u51fa\u6765\u308b\u3057\u3001cargo\u3067\u30d3\u30eb\u30c9\u30fb\u5b9f\u884c\u30fb\u30c6\u30b9\u30c8\u53ef\u80fd\u3002\n\n\u898f\u6a21\u306e\u5927\u304d\u306aWeb\u30a2\u30d7\u30ea\u958b\u767a\u3092\u3059\u308b\u306e\u306b\u306f\u6642\u671f\u304c\u5c11\u3057\u65e9\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\n\u500b\u4eba\u7684\u306b\u306f\u3001Node.js\u3067\u4f5c\u3063\u3066\u3044\u305f\u3001DB\u306b\u8aad\u307f\u66f8\u304d\u3059\u308b\u30d0\u30c3\u30c1\u30b9\u30af\u30ea\u30d7\u30c8\u3084\u305d\u306eWeb\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u7b49\u3092\u3001\nrust\u3067\u7f6e\u304d\u63db\u3048\u3066\u307f\u3088\u3046\u304b\u306a\u3001\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u59cb\u3081\u3068\u3057\u305f\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u304c\u6210\u9577\u3059\u308c\u3070\u3001\u66f4\u306b\u5229\u70b9\u304c\u5897\u3048\u308b\u8a33\u3067\u3001\u3053\u308c\u304b\u3089\u304c\u697d\u3057\u307f\u3067\u3059\u3002\n\n\u3068\u3053\u308d\u3067\u3001\u4eca\u56de\u306e\u3088\u3046\u306aHello World\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3082\u3001\u30de\u30af\u30ed\u3084\u30e0\u30fc\u30d6\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9\u7b49\u3092\u306f\u3063\u304d\u308a\u7406\u89e3\u3057\u306a\u3044\u3068\u30b9\u30e0\u30fc\u30ba\u306b\u5148\u306b\u9032\u3081\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u30cf\u30f3\u30c9\u30e9\u3067\u306f\u6587\u5b57\u5217\u8fd4\u305b\u3070\u3068\u308a\u3042\u3048\u305a\u8868\u793a\u3055\u308c\u308b\u3060\u308d\u3001\u7684\u306a\u8003\u3048\u3067\u30b5\u30f3\u30d7\u30eb\u3092\u6539\u9020\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u3053\u308d\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308a\u3001\u305d\u306e\u6642\u5185\u5bb9\u306e\u7406\u89e3\u304c\u7d50\u69cb\u96e3\u3057\u304b\u3063\u305f\u3067\u3059\u3002\n\u611f\u899a\u7684\u3067\u7533\u3057\u8a33\u306a\u3044\u3067\u3059\u304c\u3001C++\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u306e\u3088\u3046\u306a\u611f\u3058\u3068\u3044\u3046\u304b\u3001\u30a8\u30e9\u30fc\u306e\u5185\u5bb9\u304c\u8907\u96d1\u3067\u4e00\u7b4b\u7e04\u3067\u306f\u884c\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\nnickel\u3092\u62e1\u5f35\u3059\u308b\u969b\u306f\u3001[middleware](http://docs.nickel.rs/nickel/macro.middleware!.html)\u3092\u30de\u30b9\u30bf\u30fc\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u3053\u308c\u304c\u306a\u304b\u306a\u304b\u624b\u3054\u308f\u305d\u3046\u306a\u96f0\u56f2\u6c17\u304c\u3002\n\n\u2026\u3068\u3044\u3046\u8a33\u3067\u5b66\u7fd2\u306b\u623b\u308a\u307e\u3059\u3002\u9053\u306f\u9577\u3044\u3002\n\n# \u53c2\u8003\n\n- [nickel \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://docs.nickel.rs/nickel/)\n\n- [24daysofrust](http://zsiciarz.github.io/24daysofrust/) [Day 11 - postgres](http://zsiciarz.github.io/24daysofrust/book/day11.html) \u5b9f\u8df5\u7684\u306a\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\n\n- [Rust by Examples](http://rustbyexample.com/)\n\n- [Rust\u306estruct\u3001trait\u306e\u4f7f\u3044\u65b9](http://qiita.com/yasuyuky/items/8894f731da9a4e8cac4c)\n\n- [A Practical Intro to Macros in Rust 1.0](https://danielkeep.github.io/practical-intro-to-macros.html) \u30a4\u30f3\u30c8\u30ed\u3068\u8a00\u3063\u3066\u3082\u5b9f\u306f\u5927\u4f5c\u3002\n\n- [Crate postgres](http://sfackler.github.io/rust-postgres/doc/v0.10.2/postgres/)\n\n- [Rust \u8a00\u8a9e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb (\u975e\u516c\u5f0f\u65e5\u672c\u8a9e\u8a33)](http://mimosa-pudica.net/rust-tutorial/)\n", "tags": ["AdventCalendar2015", "rust", "nickel"]}