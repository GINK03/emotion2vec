{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u7269\u7406\u6f14\u7b97\u3092\u4f7f\u3063\u3066\u3001\u30b0\u30e9\u30d5\u306e\u30ce\u30fc\u30c9\u3092\u3044\u3044\u611f\u3058\u3067\u914d\u7f6e\u3059\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\n\n\u57fa\u672c\u5f62\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Force Layout</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var width = 640;\n        var height = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: width,\n            height: height\n        });\n\n        var data = {\n            nodes: [\n                { name: 'aki' },\n                { name: 'mii' },\n                { name: 'akiton' }\n            ],\n            links: [\n                { source: 0, target: 2 },\n                { source: 1, target: 2 }\n            ]\n        };\n\n        var force = d3.layout.force()\n            .nodes(data.nodes)\n            .links(data.links)\n            .size([width, height])\n            .gravity(0.1)\n            .charge([-100])\n            .friction(0.95)\n            .linkDistance([100])\n            .linkStrength(1);\n\n        // \u30ec\u30a4\u30a2\u30a6\u30c8\u8a08\u7b97\u958b\u59cb\n        force.start();\n\n        // line\u3092\u751f\u6210\n        var line = svg.selectAll('line')\n            .data(data.links)\n            .enter()\n            .append('line')\n            .attr({\n                'stroke': 'black',\n                'x1': function(d, i) { return d.source.x; },\n                'y1': function(d, i) { return d.source.y; },\n                'x2': function(d, i) { return d.target.x; },\n                'y2': function(d, i) { return d.target.y; }\n            })\n            .style({\n            });\n\n        var circle = svg.selectAll('circle')\n            .data(data.nodes)\n            .enter()\n            .append('circle')\n            .attr({\n                'r': 8,\n                'fill': 'black',\n                'cx': function(d, i) { return d.x; },\n                'cy': function(d, i) { return d.y; }\n            })\n            .style({\n            })\n            .call(force.drag);\n\n        circle\n            .on('mousedown', function(d, i) {\n                console.log(d.name + '(' + d.x + ',' + d.y + ')');\n            });\n\n        force.on('tick', function() {\n            line\n                .attr({\n                    'x1': function(d) { return d.source.x; },\n                    'y1': function(d) { return d.source.y; },\n                    'x2': function(d) { return d.target.x; },\n                    'y2': function(d) { return d.target.y; }\n                });\n            circle\n                .attr({\n                    'cx': function(d) { return d.x; },\n                    'cy': function(d) { return d.y; }\n                });\n        });\n    </script>\n</body>\n</html>\n\n\n\u9759\u7684\u306b\u8868\u793a\u3059\u308b\u5834\u5408\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Force Layout</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var width = 640;\n        var height = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: width,\n            height: height\n        });\n\n        var data = {\n            nodes: [\n                { name: 'aki' },\n                { name: 'mii' },\n                { name: 'akiton' }\n            ],\n            links: [\n                { source: 0, target: 2 },\n                { source: 1, target: 2 }\n            ]\n        };\n\n        var force = d3.layout.force()\n            .nodes(data.nodes)\n            .links(data.links)\n            .size([width, height])\n            .gravity(0.1)\n            .charge([-100])\n            .friction(0.95)\n            .linkDistance([100])\n            .linkStrength(1);\n\n        // \u30ec\u30a4\u30a2\u30a6\u30c8\u8a08\u7b97\u958b\u59cb\n        force.start();\n        for (var i = 0; i < 10000; i++) {\n            force.tick();\n        }\n        force.stop();\n\n        // line\u3092\u751f\u6210\n        var line = svg.selectAll('line')\n            .data(data.links)\n            .enter()\n            .append('line')\n            .attr({\n                'stroke': 'black',\n                'x1': function(d, i) { return d.source.x; },\n                'y1': function(d, i) { return d.source.y; },\n                'x2': function(d, i) { return d.target.x; },\n                'y2': function(d, i) { return d.target.y; }\n            })\n            .style({\n            });\n\n        var circle = svg.selectAll('circle')\n            .data(data.nodes)\n            .enter()\n            .append('circle')\n            .attr({\n                'r': 8,\n                'fill': 'black',\n                'cx': function(d, i) { return d.x; },\n                'cy': function(d, i) { return d.y; }\n            })\n            .style({\n            })\n            .call(force.drag);\n    </script>\n</body>\n</html>\n\n\n\u9759\u7684\u30ec\u30a4\u30a2\u30a6\u30c8\u5f8c\u306b\u3057\u3087\u307c\u3044\u30c9\u30e9\u30c3\u30b0\u8ffd\u52a0\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Force Layout</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var width = 640;\n        var height = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: width,\n            height: height\n        });\n\n        var data = {\n            nodes: [\n                { name: 'aki' },\n                { name: 'mii' },\n                { name: 'akiton' }\n            ],\n            links: [\n                { source: 0, target: 2 },\n                { source: 1, target: 2 }\n            ]\n        };\n\n        var force = d3.layout.force()\n            .nodes(data.nodes)\n            .links(data.links)\n            .size([width, height])\n            .gravity(0.1)\n            .charge([-100])\n            .friction(0.95)\n            .linkDistance([100])\n            .linkStrength(1);\n\n        // \u30ec\u30a4\u30a2\u30a6\u30c8\u8a08\u7b97\u958b\u59cb\n        force.start();\n        for (var i = 0; i < 10000; i++) {\n            force.tick();\n        }\n        force.stop();\n\n        // line\u3092\u751f\u6210\n        var line = svg.selectAll('line')\n            .data(data.links)\n            .enter()\n            .append('line')\n            .attr({\n                'stroke': 'black',\n                'x1': function(d, i) { return d.source.x; },\n                'y1': function(d, i) { return d.source.y; },\n                'x2': function(d, i) { return d.target.x; },\n                'y2': function(d, i) { return d.target.y; }\n            })\n            .style({\n            });\n\n        var circle = svg.selectAll('circle')\n            .data(data.nodes)\n            .enter()\n            .append('circle')\n            .attr({\n                'r': 8,\n                'fill': 'black',\n                'cx': function(d, i) { return d.x; },\n                'cy': function(d, i) { return d.y; }\n            })\n            .style({\n            });\n\n        var moveTarget = null;\n        circle\n            .on('mousedown', function(d, i) {\n                console.log(d.name + '(' + d.x + ',' + d.y + ')');\n                moveTarget = d;\n            })\n            .on('mouseup', function(d, i) {\n                moveTarget = null;\n            });\n\n        svg.on('mousemove', function(e) {\n            if (moveTarget != null) {\n                var mousePos = d3.mouse(this);\n                console.log('moveTarget = ' + moveTarget.name + ' (' + mousePos[0] + ',' + mousePos[1] + ')');\n                moveTarget.x = mousePos[0];\n                moveTarget.y = mousePos[1];\n\n                line\n                    .attr({\n                        'x1': function(d) { return d.source.x; },\n                        'y1': function(d) { return d.source.y; },\n                        'x2': function(d) { return d.target.x; },\n                        'y2': function(d) { return d.target.y; }\n                    });\n                circle\n                    .attr({\n                        'cx': function(d) { return d.x; },\n                        'cy': function(d) { return d.y; }\n                    });\n            }\n        });\n    </script>\n</body>\n</html>\n\n\n\u30c7\u30fc\u30bf\u3092\u8907\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30d0\u30a4\u30f3\u30c9\u30fb\u30c7\u30fc\u30bf\u306e\u8ffd\u52a0\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Force Layout</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var width = 640;\n        var height = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: width,\n            height: height\n        });\n\n        var data = {\n            nodes: [\n                { name: 'aki' },\n                { name: 'mii' },\n                { name: 'akiton' }\n            ],\n            links: [\n                { source: 0, target: 2 },\n                { source: 1, target: 2 }\n            ]\n        };\n\n        var force = d3.layout.force()\n            .nodes(data.nodes)\n            .links(data.links)\n            .size([width, height])\n            .gravity(0.1)\n            .charge([-100])\n            .friction(0.95)\n            .linkDistance([100])\n            .linkStrength(1);\n\n        // \u30ec\u30a4\u30a2\u30a6\u30c8\u8a08\u7b97\u958b\u59cb\n        force.start();\n        for (var i = 0; i < 10000; i++) {\n            force.tick();\n        }\n        force.stop();\n\n        // line\u3092\u751f\u6210\n        var line = svg.selectAll('line')\n            .data(data.links)\n            .enter()\n            .append('line')\n            .attr({\n                'stroke': 'black',\n                'x1': function(d, i) { return d.source.x; },\n                'y1': function(d, i) { return d.source.y; },\n                'x2': function(d, i) { return d.target.x; },\n                'y2': function(d, i) { return d.target.y; }\n            })\n            .style({\n            });\n\n        var circle = svg.selectAll('circle')\n            .data(data.nodes)\n            .enter()\n            .append('circle')\n            .attr({\n                'r': 8,\n                'fill': 'black',\n                'cx': function(d, i) { return d.x; },\n                'cy': function(d, i) { return d.y; }\n            })\n            .style({\n            });\n            // .call(force.drag);\n\n        var moveTarget = null;\n        circle\n            .on('mousedown', function(d, i) {\n                console.log(d.name + '(' + d.x + ',' + d.y + ')');\n                moveTarget = d;\n            })\n            .on('mouseup', function(d, i) {\n                moveTarget = null;\n            });\n\n        svg.on('mousemove', function(e) {\n            if (moveTarget != null) {\n                var mousePos = d3.mouse(this);\n                console.log('moveTarget = ' + moveTarget.name + ' (' + mousePos[0] + ',' + mousePos[1] + ')');\n                moveTarget.x = mousePos[0];\n                moveTarget.y = mousePos[1];\n\n                d3.selectAll('line')\n                    .attr({\n                        'x1': function(d) { return d.source.x; },\n                        'y1': function(d) { return d.source.y; },\n                        'x2': function(d) { return d.target.x; },\n                        'y2': function(d) { return d.target.y; }\n                    });\n                d3.selectAll('circle')\n                    .attr({\n                        'cx': function(d) { return d.x; },\n                        'cy': function(d) { return d.y; }\n                    });\n            }\n        });\n\n        svg.on('mousedown', function() {\n            if (moveTarget != null) return;\n            var newCircle = svg.append('circle');\n            var mousePos = d3.mouse(this);\n            var newData = {\n                name: 'super',\n                age: 10,\n                x: mousePos[0],\n                y: mousePos[1]\n            };\n            data.nodes.push(newData);\n            console.log('add circle: ' + newData.x + ',' + newData.y);\n            newCircle\n                .datum(newData)\n                .attr({\n                    'cx': function(d, i) { console.log(d);return d.x; },\n                    'cy': function(d, i) { return d.y; },\n                    'r': 10,\n                    'fill': 'red'\n                })\n                .on('mousedown', function(d) {\n                    moveTarget = d;\n                })\n                .on('mouseup', function(d) {\n                    moveTarget = null;\n                });\n            svg.append('text')\n                .datum(newData)\n                .text(function(d, i) { return d.name; })\n                .attr({\n                    'font-size': '32',\n                    'fill': 'white',\n                    'stroke': 'black',\n                    'x': function(d, i) { return d.x; },\n                    'y': function(d, i) { return d.y; }\n                });\n        });\n\n        function randomMove() {\n            for (var i = 0; i < data.nodes.length; i++) {\n                var d = data.nodes[i];\n                d.x += Math.random() * 2 <= 1 ? Math.random()*10 : -Math.random()*10;\n                d.y += Math.random() * 2 <= 1 ? Math.random()*10 : -Math.random()*10;\n\n                d3.selectAll('line')\n                    .attr({\n                        'x1': function(d) { return d.source.x; },\n                        'y1': function(d) { return d.source.y; },\n                        'x2': function(d) { return d.target.x; },\n                        'y2': function(d) { return d.target.y; }\n                    });\n                d3.selectAll('circle')\n                    .attr({\n                        'cx': function(d) { return d.x; },\n                        'cy': function(d) { return d.y; }\n                    });\n                d3.selectAll('text')\n                    .attr({\n                        'x': function(d) { return d.x; },\n                        'y': function(d) { return d.y; }\n                    });\n            }\n        }\n    </script>\n    <input type=\"button\" value=\"randomMove\" onClick=\"randomMove()\"/>\n</body>\n</html>\n\n\n\u53c2\u8003\n\nD3.js\u306eforce layout\u3067\u904a\u3076\n\u3010D3.js\u3011\u30ce\u30fc\u30c9\u3092\u30c9\u30e9\u30c3\u30b0\u3067\u304d\u308b\u9759\u7684\u306aForce\u30ec\u30a4\u30a2\u30a6\u30c8\n\u30de\u30a6\u30b9\u30fb\u30a4\u30d9\u30f3\u30c8\u3084\u30bf\u30c3\u30c1\u30fb\u30a4\u30d9\u30f3\u30c8\u306e\u6271\u3044\u65b9\nD3.js\u306eForce Layout (\u529b\u5b66\u30e2\u30c7\u30eb\u3067\u30b0\u30e9\u30d5\u63cf\u753b\u3059\u308b\u30ec\u30a4\u30a2\u30a6\u30c8)\u3092\u52d5\u304b\u3057\u3066\u307f\u305f\n\u30bb\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u4ed5\u7d44\u307f\n\n\n\n## \u6982\u8981\n\n\u7269\u7406\u6f14\u7b97\u3092\u4f7f\u3063\u3066\u3001\u30b0\u30e9\u30d5\u306e\u30ce\u30fc\u30c9\u3092\u3044\u3044\u611f\u3058\u3067\u914d\u7f6e\u3059\u308b\u3002\n\n\n## \u30b5\u30f3\u30d7\u30eb\n\n### \u57fa\u672c\u5f62\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Force Layout</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var width = 640;\n        var height = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: width,\n            height: height\n        });\n\n        var data = {\n            nodes: [\n                { name: 'aki' },\n                { name: 'mii' },\n                { name: 'akiton' }\n            ],\n            links: [\n                { source: 0, target: 2 },\n                { source: 1, target: 2 }\n            ]\n        };\n\n        var force = d3.layout.force()\n            .nodes(data.nodes)\n            .links(data.links)\n            .size([width, height])\n            .gravity(0.1)\n            .charge([-100])\n            .friction(0.95)\n            .linkDistance([100])\n            .linkStrength(1);\n\n        // \u30ec\u30a4\u30a2\u30a6\u30c8\u8a08\u7b97\u958b\u59cb\n        force.start();\n\n        // line\u3092\u751f\u6210\n        var line = svg.selectAll('line')\n            .data(data.links)\n            .enter()\n            .append('line')\n            .attr({\n                'stroke': 'black',\n                'x1': function(d, i) { return d.source.x; },\n                'y1': function(d, i) { return d.source.y; },\n                'x2': function(d, i) { return d.target.x; },\n                'y2': function(d, i) { return d.target.y; }\n            })\n            .style({\n            });\n\n        var circle = svg.selectAll('circle')\n            .data(data.nodes)\n            .enter()\n            .append('circle')\n            .attr({\n                'r': 8,\n                'fill': 'black',\n                'cx': function(d, i) { return d.x; },\n                'cy': function(d, i) { return d.y; }\n            })\n            .style({\n            })\n            .call(force.drag);\n\n        circle\n            .on('mousedown', function(d, i) {\n                console.log(d.name + '(' + d.x + ',' + d.y + ')');\n            });\n\n        force.on('tick', function() {\n            line\n                .attr({\n                    'x1': function(d) { return d.source.x; },\n                    'y1': function(d) { return d.source.y; },\n                    'x2': function(d) { return d.target.x; },\n                    'y2': function(d) { return d.target.y; }\n                });\n            circle\n                .attr({\n                    'cx': function(d) { return d.x; },\n                    'cy': function(d) { return d.y; }\n                });\n        });\n    </script>\n</body>\n</html>\n```\n\n### \u9759\u7684\u306b\u8868\u793a\u3059\u308b\u5834\u5408\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Force Layout</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var width = 640;\n        var height = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: width,\n            height: height\n        });\n\n        var data = {\n            nodes: [\n                { name: 'aki' },\n                { name: 'mii' },\n                { name: 'akiton' }\n            ],\n            links: [\n                { source: 0, target: 2 },\n                { source: 1, target: 2 }\n            ]\n        };\n\n        var force = d3.layout.force()\n            .nodes(data.nodes)\n            .links(data.links)\n            .size([width, height])\n            .gravity(0.1)\n            .charge([-100])\n            .friction(0.95)\n            .linkDistance([100])\n            .linkStrength(1);\n\n        // \u30ec\u30a4\u30a2\u30a6\u30c8\u8a08\u7b97\u958b\u59cb\n        force.start();\n        for (var i = 0; i < 10000; i++) {\n            force.tick();\n        }\n        force.stop();\n\n        // line\u3092\u751f\u6210\n        var line = svg.selectAll('line')\n            .data(data.links)\n            .enter()\n            .append('line')\n            .attr({\n                'stroke': 'black',\n                'x1': function(d, i) { return d.source.x; },\n                'y1': function(d, i) { return d.source.y; },\n                'x2': function(d, i) { return d.target.x; },\n                'y2': function(d, i) { return d.target.y; }\n            })\n            .style({\n            });\n\n        var circle = svg.selectAll('circle')\n            .data(data.nodes)\n            .enter()\n            .append('circle')\n            .attr({\n                'r': 8,\n                'fill': 'black',\n                'cx': function(d, i) { return d.x; },\n                'cy': function(d, i) { return d.y; }\n            })\n            .style({\n            })\n            .call(force.drag);\n    </script>\n</body>\n</html>\n```\n\n### \u9759\u7684\u30ec\u30a4\u30a2\u30a6\u30c8\u5f8c\u306b\u3057\u3087\u307c\u3044\u30c9\u30e9\u30c3\u30b0\u8ffd\u52a0\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Force Layout</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var width = 640;\n        var height = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: width,\n            height: height\n        });\n\n        var data = {\n            nodes: [\n                { name: 'aki' },\n                { name: 'mii' },\n                { name: 'akiton' }\n            ],\n            links: [\n                { source: 0, target: 2 },\n                { source: 1, target: 2 }\n            ]\n        };\n\n        var force = d3.layout.force()\n            .nodes(data.nodes)\n            .links(data.links)\n            .size([width, height])\n            .gravity(0.1)\n            .charge([-100])\n            .friction(0.95)\n            .linkDistance([100])\n            .linkStrength(1);\n\n        // \u30ec\u30a4\u30a2\u30a6\u30c8\u8a08\u7b97\u958b\u59cb\n        force.start();\n        for (var i = 0; i < 10000; i++) {\n            force.tick();\n        }\n        force.stop();\n\n        // line\u3092\u751f\u6210\n        var line = svg.selectAll('line')\n            .data(data.links)\n            .enter()\n            .append('line')\n            .attr({\n                'stroke': 'black',\n                'x1': function(d, i) { return d.source.x; },\n                'y1': function(d, i) { return d.source.y; },\n                'x2': function(d, i) { return d.target.x; },\n                'y2': function(d, i) { return d.target.y; }\n            })\n            .style({\n            });\n\n        var circle = svg.selectAll('circle')\n            .data(data.nodes)\n            .enter()\n            .append('circle')\n            .attr({\n                'r': 8,\n                'fill': 'black',\n                'cx': function(d, i) { return d.x; },\n                'cy': function(d, i) { return d.y; }\n            })\n            .style({\n            });\n\n        var moveTarget = null;\n        circle\n            .on('mousedown', function(d, i) {\n                console.log(d.name + '(' + d.x + ',' + d.y + ')');\n                moveTarget = d;\n            })\n            .on('mouseup', function(d, i) {\n                moveTarget = null;\n            });\n\n        svg.on('mousemove', function(e) {\n            if (moveTarget != null) {\n                var mousePos = d3.mouse(this);\n                console.log('moveTarget = ' + moveTarget.name + ' (' + mousePos[0] + ',' + mousePos[1] + ')');\n                moveTarget.x = mousePos[0];\n                moveTarget.y = mousePos[1];\n\n                line\n                    .attr({\n                        'x1': function(d) { return d.source.x; },\n                        'y1': function(d) { return d.source.y; },\n                        'x2': function(d) { return d.target.x; },\n                        'y2': function(d) { return d.target.y; }\n                    });\n                circle\n                    .attr({\n                        'cx': function(d) { return d.x; },\n                        'cy': function(d) { return d.y; }\n                    });\n            }\n        });\n    </script>\n</body>\n</html>\n```\n\n### \u30c7\u30fc\u30bf\u3092\u8907\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30d0\u30a4\u30f3\u30c9\u30fb\u30c7\u30fc\u30bf\u306e\u8ffd\u52a0\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>D3.js Force Layout</title>\n</head>\n<body>\n    <script src=\"http://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n    <script>\n        var width = 640;\n        var height = 480;\n\n        var svg = d3.select('body').append('svg').attr({\n            width: width,\n            height: height\n        });\n\n        var data = {\n            nodes: [\n                { name: 'aki' },\n                { name: 'mii' },\n                { name: 'akiton' }\n            ],\n            links: [\n                { source: 0, target: 2 },\n                { source: 1, target: 2 }\n            ]\n        };\n\n        var force = d3.layout.force()\n            .nodes(data.nodes)\n            .links(data.links)\n            .size([width, height])\n            .gravity(0.1)\n            .charge([-100])\n            .friction(0.95)\n            .linkDistance([100])\n            .linkStrength(1);\n\n        // \u30ec\u30a4\u30a2\u30a6\u30c8\u8a08\u7b97\u958b\u59cb\n        force.start();\n        for (var i = 0; i < 10000; i++) {\n            force.tick();\n        }\n        force.stop();\n\n        // line\u3092\u751f\u6210\n        var line = svg.selectAll('line')\n            .data(data.links)\n            .enter()\n            .append('line')\n            .attr({\n                'stroke': 'black',\n                'x1': function(d, i) { return d.source.x; },\n                'y1': function(d, i) { return d.source.y; },\n                'x2': function(d, i) { return d.target.x; },\n                'y2': function(d, i) { return d.target.y; }\n            })\n            .style({\n            });\n\n        var circle = svg.selectAll('circle')\n            .data(data.nodes)\n            .enter()\n            .append('circle')\n            .attr({\n                'r': 8,\n                'fill': 'black',\n                'cx': function(d, i) { return d.x; },\n                'cy': function(d, i) { return d.y; }\n            })\n            .style({\n            });\n            // .call(force.drag);\n\n        var moveTarget = null;\n        circle\n            .on('mousedown', function(d, i) {\n                console.log(d.name + '(' + d.x + ',' + d.y + ')');\n                moveTarget = d;\n            })\n            .on('mouseup', function(d, i) {\n                moveTarget = null;\n            });\n\n        svg.on('mousemove', function(e) {\n            if (moveTarget != null) {\n                var mousePos = d3.mouse(this);\n                console.log('moveTarget = ' + moveTarget.name + ' (' + mousePos[0] + ',' + mousePos[1] + ')');\n                moveTarget.x = mousePos[0];\n                moveTarget.y = mousePos[1];\n\n                d3.selectAll('line')\n                    .attr({\n                        'x1': function(d) { return d.source.x; },\n                        'y1': function(d) { return d.source.y; },\n                        'x2': function(d) { return d.target.x; },\n                        'y2': function(d) { return d.target.y; }\n                    });\n                d3.selectAll('circle')\n                    .attr({\n                        'cx': function(d) { return d.x; },\n                        'cy': function(d) { return d.y; }\n                    });\n            }\n        });\n\n        svg.on('mousedown', function() {\n            if (moveTarget != null) return;\n            var newCircle = svg.append('circle');\n            var mousePos = d3.mouse(this);\n            var newData = {\n                name: 'super',\n                age: 10,\n                x: mousePos[0],\n                y: mousePos[1]\n            };\n            data.nodes.push(newData);\n            console.log('add circle: ' + newData.x + ',' + newData.y);\n            newCircle\n                .datum(newData)\n                .attr({\n                    'cx': function(d, i) { console.log(d);return d.x; },\n                    'cy': function(d, i) { return d.y; },\n                    'r': 10,\n                    'fill': 'red'\n                })\n                .on('mousedown', function(d) {\n                    moveTarget = d;\n                })\n                .on('mouseup', function(d) {\n                    moveTarget = null;\n                });\n            svg.append('text')\n                .datum(newData)\n                .text(function(d, i) { return d.name; })\n                .attr({\n                    'font-size': '32',\n                    'fill': 'white',\n                    'stroke': 'black',\n                    'x': function(d, i) { return d.x; },\n                    'y': function(d, i) { return d.y; }\n                });\n        });\n\n        function randomMove() {\n            for (var i = 0; i < data.nodes.length; i++) {\n                var d = data.nodes[i];\n                d.x += Math.random() * 2 <= 1 ? Math.random()*10 : -Math.random()*10;\n                d.y += Math.random() * 2 <= 1 ? Math.random()*10 : -Math.random()*10;\n\n                d3.selectAll('line')\n                    .attr({\n                        'x1': function(d) { return d.source.x; },\n                        'y1': function(d) { return d.source.y; },\n                        'x2': function(d) { return d.target.x; },\n                        'y2': function(d) { return d.target.y; }\n                    });\n                d3.selectAll('circle')\n                    .attr({\n                        'cx': function(d) { return d.x; },\n                        'cy': function(d) { return d.y; }\n                    });\n                d3.selectAll('text')\n                    .attr({\n                        'x': function(d) { return d.x; },\n                        'y': function(d) { return d.y; }\n                    });\n            }\n        }\n    </script>\n    <input type=\"button\" value=\"randomMove\" onClick=\"randomMove()\"/>\n</body>\n</html>\n```\n\n\n## \u53c2\u8003\n\n- [D3.js\u306eforce layout\u3067\u904a\u3076](http://lisia.hatenadiary.jp/entry/2014/07/11/225904)\n- [\u3010D3.js\u3011\u30ce\u30fc\u30c9\u3092\u30c9\u30e9\u30c3\u30b0\u3067\u304d\u308b\u9759\u7684\u306aForce\u30ec\u30a4\u30a2\u30a6\u30c8](http://shimz.me/blog/d3-js/3803)\n- [\u30de\u30a6\u30b9\u30fb\u30a4\u30d9\u30f3\u30c8\u3084\u30bf\u30c3\u30c1\u30fb\u30a4\u30d9\u30f3\u30c8\u306e\u6271\u3044\u65b9](http://koyamatch.com/d3js/d3js11.html)\n- [D3.js\u306eForce Layout (\u529b\u5b66\u30e2\u30c7\u30eb\u3067\u30b0\u30e9\u30d5\u63cf\u753b\u3059\u308b\u30ec\u30a4\u30a2\u30a6\u30c8)\u3092\u52d5\u304b\u3057\u3066\u307f\u305f](http://totech.hateblo.jp/entry/2014/11/18/104137)\n- [\u30bb\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u4ed5\u7d44\u307f](http://ja.d3js.info/mike/selection/)\n", "tags": ["d3.js"]}