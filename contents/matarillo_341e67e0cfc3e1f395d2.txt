{"context": " More than 1 year has passed since last update.F#\u306b\u521d\u6311\u6226\u3002\n\u6700\u521d\u306f\u306a\u3093\u304bC#\u3063\u307d\u3044F#\u306b\u306a\u3063\u3066\u305f\u306e\u3060\u304c\u3001\nyield! \u3068 seq {for .. do if ... then ...} \u3092\u899a\u3048\u305f\u306e\u3067\u3001\n\u95a2\u6570\u578b\u3063\u307d\u304f\u306a\u3063\u3066\u304d\u305f\u6c17\u304c\u3059\u308b\u3002\n\u3082\u3068\u306b\u3057\u305f\u306e\u306fHaskell\u306e\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3002\n\nprimes.hs\nprimes = 2:f [3,5..] where f (x:xs) = x:f [y | y <- xs, mod y x /= 0]\n\n\n\n  F#\u306e\u914d\u5217\u306f\u56fa\u5b9a\u9577\u3002 [|1; 2; 3;|]\n  F#\u306e\u30ea\u30b9\u30c8\u306f\u6b63\u683c\u8a55\u4fa1\u3002 [1; 2; 3;] \u3042\u308b\u3044\u306f [1..3] \u3068\u66f8\u304f\u3002\n\nF#\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u306f\u9045\u5ef6\u8a55\u4fa1\u3060\u3051\u3069\u3001Haskell\u306e\u30ea\u30b9\u30c8\u3068\u306f\u7d50\u69cb\u9055\u3046\u3002\n\u4e00\u756a\u9055\u3046\u306e\u306f\u3001\u30b3\u30f3\u30b9\u30bb\u30eb\u3067\u306f\u306a\u3044\u3053\u3068\u3002\u5b9f\u614b\u306fIEnumerable<T>\u3002head\u3068tail\u306b\u5206\u3051\u3066\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3067\u304d\u306a\u3044\u3089\u3057\u3044\u306e\u3067\u6ce8\u610f\u3002\n\u306a\u3093\u3060\u304b\u3044\u308d\u3044\u308d\u66f8\u304d\u65b9\u304c\u3042\u308b\u3002\n\u500b\u3005\u306e\u8981\u7d20\u3092\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u3059\u308b\u306b\u306f\u3001seq [1; 2; 3;] \u3002\n\u7bc4\u56f2\u6307\u5b9a\u306a\u3089 seq {1..3} \u307e\u305f\u306f seq [1..3] \u307e\u305f\u306f {1..3} \u3002\nyield\u3092\u542b\u3080\u5834\u5408\u306f seq { yield\u3092\u542b\u3080\u5f0f } \u307e\u305f\u306f seq [ yield\u3092\u542b\u3080\u5f0f ] \u3002\n\u30b7\u30fc\u30b1\u30f3\u30b9\u5f0f\u306e\u4e2d\u3067\u30b7\u30fc\u30b1\u30f3\u30b9\u3092yield\u3059\u308b\u306b\u306f\u3001yield! \u3068\u3084\u308b\u3068\u3044\u3044\u3089\u3057\u3044\u3002\n\n\n\nprimes.fs\nopen System\n\nlet primes = \n    let odds = Seq.initInfinite (fun i -> 2 * i + 1)\n    let rec f src =\n        let (x, xs) = (Seq.head src, Seq.skip 1 src)\n        seq {yield x; for i in f xs do if i % x <> 0 then yield i}\n    seq {yield 2; yield! f (Seq.skip 1 odds)}\n\nlet list = primes |> Seq.take 10 |> Seq.toList\n\nprintfn \"%A\" list\n\n\n\u3061\u306a\u307f\u306b\u3001\u30b7\u30fc\u30b1\u30f3\u30b9\u3058\u3083\u306a\u304f\u3066\u9045\u5ef6\u30ea\u30b9\u30c8\u304c\u6b32\u3057\u3044\u4eba\u306f\u3001F# PowerPack\u306eLazyList\u3092\u4f7f\u3046\u3068\u3044\u3044\u3002\nF#\u306b\u521d\u6311\u6226\u3002\n\u6700\u521d\u306f\u306a\u3093\u304bC#\u3063\u307d\u3044F#\u306b\u306a\u3063\u3066\u305f\u306e\u3060\u304c\u3001\nyield! \u3068 seq {for .. do if ... then ...} \u3092\u899a\u3048\u305f\u306e\u3067\u3001\n\u95a2\u6570\u578b\u3063\u307d\u304f\u306a\u3063\u3066\u304d\u305f\u6c17\u304c\u3059\u308b\u3002\n\n\u3082\u3068\u306b\u3057\u305f\u306e\u306fHaskell\u306e\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3002\n\n```hs:primes.hs\nprimes = 2:f [3,5..] where f (x:xs) = x:f [y | y <- xs, mod y x /= 0]\n```\n\n*   F#\u306e\u914d\u5217\u306f\u56fa\u5b9a\u9577\u3002 [|1; 2; 3;|]\n*   F#\u306e\u30ea\u30b9\u30c8\u306f\u6b63\u683c\u8a55\u4fa1\u3002 [1; 2; 3;] \u3042\u308b\u3044\u306f [1..3] \u3068\u66f8\u304f\u3002\n*   F#\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u306f\u9045\u5ef6\u8a55\u4fa1\u3060\u3051\u3069\u3001Haskell\u306e\u30ea\u30b9\u30c8\u3068\u306f\u7d50\u69cb\u9055\u3046\u3002\n    \u4e00\u756a\u9055\u3046\u306e\u306f\u3001\u30b3\u30f3\u30b9\u30bb\u30eb\u3067\u306f\u306a\u3044\u3053\u3068\u3002\u5b9f\u614b\u306fIEnumerable&lt;T&gt;\u3002head\u3068tail\u306b\u5206\u3051\u3066\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3067\u304d\u306a\u3044\u3089\u3057\u3044\u306e\u3067\u6ce8\u610f\u3002\n\n    \u306a\u3093\u3060\u304b\u3044\u308d\u3044\u308d\u66f8\u304d\u65b9\u304c\u3042\u308b\u3002\n    \u500b\u3005\u306e\u8981\u7d20\u3092\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u3059\u308b\u306b\u306f\u3001seq [1; 2; 3;] \u3002\n    \u7bc4\u56f2\u6307\u5b9a\u306a\u3089 seq {1..3} \u307e\u305f\u306f seq [1..3] \u307e\u305f\u306f {1..3} \u3002\n    yield\u3092\u542b\u3080\u5834\u5408\u306f seq { yield\u3092\u542b\u3080\u5f0f } \u307e\u305f\u306f seq [ yield\u3092\u542b\u3080\u5f0f ] \u3002\n\n    \u30b7\u30fc\u30b1\u30f3\u30b9\u5f0f\u306e\u4e2d\u3067\u30b7\u30fc\u30b1\u30f3\u30b9\u3092yield\u3059\u308b\u306b\u306f\u3001yield! \u3068\u3084\u308b\u3068\u3044\u3044\u3089\u3057\u3044\u3002\n\n```fsharp:primes.fs\nopen System\n\nlet primes = \n    let odds = Seq.initInfinite (fun i -> 2 * i + 1)\n    let rec f src =\n        let (x, xs) = (Seq.head src, Seq.skip 1 src)\n        seq {yield x; for i in f xs do if i % x <> 0 then yield i}\n    seq {yield 2; yield! f (Seq.skip 1 odds)}\n\nlet list = primes |> Seq.take 10 |> Seq.toList\n\nprintfn \"%A\" list\n```\n\n\u3061\u306a\u307f\u306b\u3001\u30b7\u30fc\u30b1\u30f3\u30b9\u3058\u3083\u306a\u304f\u3066\u9045\u5ef6\u30ea\u30b9\u30c8\u304c\u6b32\u3057\u3044\u4eba\u306f\u3001F# PowerPack\u306eLazyList\u3092\u4f7f\u3046\u3068\u3044\u3044\u3002", "tags": ["F#"]}