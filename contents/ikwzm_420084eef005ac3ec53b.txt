{"context": "\n\nXORSHIFT-ADD(XSAdd) Pseudo Random Number Generator\n\u3053\u3061\u3089\u306e\u8a18\u4e8b(\u300cXorShift-Add\u6cd5\u306b\u3088\u308b\u64ec\u4f3c\u4e71\u6570\u751f\u6210VHDL\u30d1\u30c3\u30b1\u30fc\u30b8\u300d )\u3067\u306f XORSHIFT-ADD(XSadd)\u6cd5\u3067\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u3059\u308b\u305f\u3081\u306e VHDL \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u304c\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u305d\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3063\u3066\u5b9f\u969b\u306b\u56de\u8def\u3092\u4f5c\u3063\u3066FPGA\u306b\u5b9f\u88c5\u3057\u305f\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3084FPGA\u306e\u958b\u767a\u74b0\u5883\u306a\u3069\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/ikwzm/XSadd_Rand_Gen\n\nOverview\n\nIntroduction\n\u3053\u306eIP\u306f XORSHFIT-ADD(XSAdd)\u6cd5\u306b\u3088\u308b\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u56de\u8def\u3067\u3059\u3002\n\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\nXORSHIFT-ADD (XSadd): A variant of XORSHIFT\n\nFeatures\n\nXORSHFIT-ADD(XSAdd)\u6cd5\u306b\u3088\u308b\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u56de\u8def\u3067\u3059\u3002\nVHDL\u3067\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\u8ad6\u7406\u5408\u6210\u53ef\u80fd\u3067\u3059\u3002Xilinx\u793e\u306eVivado\u3001Altera\u793e\u306eQuartusII\u3067\u78ba\u8a8d\u6e08\u307f\u3002\n\uff11\u30af\u30ed\u30c3\u30af\u30671\u301c\u6570\u30ef\u30fc\u30c9(1\u30ef\u30fc\u30c9\u306f32bit)\u306e\u4e71\u6570\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u5909\u6570\u3067SEED\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\u72b6\u614b\u30c6\u30fc\u30d6\u30eb\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\nFig.1 Top-Level Signaling Interface\n\n\nLicensing\n\u4e8c\u6761\u9805BSD\u30e9\u30a4\u30bb\u30f3\u30b9 (2-clause BSD license) \u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\nSpecification\n\nParameter Descriptions\nTable.1 Parameter Descriptions\n\n\nName\nTYPE\nDefault\nDescription\n\n\nL\nInteger\n1\n1\u30af\u30ed\u30c3\u30af\u3067\u751f\u6210\u3059\u308b\u4e71\u6570\u306e\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3053\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u6307\u5b9a\u3067\u304d\u308b\u6570\u306f\uff11\u4ee5\u4e0a\u306e\u6574\u6570\u3067\u3059\n\n\nSEED\nInteger\n1234\n\u4e71\u6570\u306e\u30b7\u30fc\u30c9\u5024\u3092\u6307\u5b9a\u3057\u307e\u3059\u3053\u306e\u30b7\u30fc\u30c9\u5024\u3092\u5143\u306b\u72b6\u614b\u30c6\u30fc\u30d6\u30eb\u304c\u521d\u671f\u5316\u3055\u308c\u307e\u3059\n\n\n\nPort Descriptions\nTable.2 Port  Descriptions\n\n\nName\nType\nWidth\nI/O\nDescription\n\n\nCLK\nSTD_LOGIC\n1\nin\n\u30af\u30ed\u30c3\u30af\u4fe1\u53f7\n\n\nRST\nSTD_LOGIC\n1\nin\n\u975e\u540c\u671f\u30ea\u30bb\u30c3\u30c8\u4fe1\u53f7\n\n\nRND_RUN\nSTD_LOGIC\n1\nin\n\u4e71\u6570\u751f\u6210\u958b\u59cb\u4fe1\u53f7\u3053\u306e\u4fe1\u53f7\u304c'1'\u306b\u306a\u3063\u3066\u304b\u30891\u30af\u30ed\u30c3\u30af\u5f8c\u306b\u4e71\u6570\u3092\u51fa\u529b\u3057\u307e\u3059TBL_INIT\u304c'1'\u306e\u6642\u3001\u3053\u306e\u4fe1\u53f7\u3092'1'\u306b\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\n\n\nRND_NUM\nSTD_LOGIC_VECTOR\n32*L\nout\n\u4e71\u6570\u51fa\u529b\u4fe1\u53f7\u751f\u6210\u3055\u308c\u305f\u4e71\u6570\u3092\u51fa\u529b\u3059\u308b\u4fe1\u53f7RND_VAL\u304c'1'\u306e\u6642\u306e\u307f\u6709\u52b9\u306a\u5024\u3092\u51fa\u529b\u3057\u307e\u3059RND_VAL='1'\u304b\u3064RND_RDY='1'\u3067\u6b21\u306e\u4e71\u6570\u3092\u751f\u6210\u3057\u307e\u3059\n\n\nRND_VAL\nSTD_LOGIC\n1\nout\n\u4e71\u6570\u6709\u52b9\u4fe1\u53f7RND_NUM\u304b\u3089\u51fa\u529b\u3055\u308c\u305f\u4e71\u6570\u304c\u6709\u52b9\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u4fe1\u53f7\n\n\nRND_RDY\nSTD_LOGIC\n1\nin\n\u4e71\u6570\u5fdc\u7b54\u4fe1\u53f7RND_NUM\u306e\u5024\u3092\u53d6\u308a\u51fa\u3057\u305f\u3053\u3068\u3092\u793a\u3059\u4fe1\u53f7RND_VAL='1'\u304b\u3064RND_RDY='1'\u3067\u6b21\u306e\u4e71\u6570\u3092\u751f\u6210\u3057\u307e\u3059\n\n\nTBL_INIT\nSTD_LOGIC\n1\nin\n\u72b6\u614b\u30c6\u30fc\u30d6\u30eb\u30fb\u521d\u671f\u5316\u4fe1\u53f7\u72b6\u614b\u30c6\u30fc\u30d6\u30eb\u3092\u521d\u671f\u5316\u3059\u308b\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u72b6\u614b\u30c6\u30fc\u30d6\u30eb\u3092\u660e\u793a\u7684\u306b\u521d\u671f\u5316\u3057\u306a\u3044\u5834\u5408\u306f\u3053\u306e\u4fe1\u53f7\u3092'0'\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002TBL_INIT\u3092'0'\u306b\u3057\u3066\u304b\u3089\u4e71\u6570\u304c\u751f\u6210\u3055\u308c\u308b\u307e\u30672\u30af\u30ed\u30c3\u30af\u306e\u9045\u308c\u304c\u751f\u3058\u307e\u3059\u3002\n\n\nTBL_WDATA\nSTD_LOGIC_VECTOR\n128\nin\n\u72b6\u614b\u30c6\u30fc\u30d6\u30eb\u30fb\u30e9\u30a4\u30c8\u30c7\u30fc\u30bf\n\n\nTBL_RDATA\nSTD_LOGIC_VECTOR\n128\nout\n\u72b6\u614b\u30c6\u30fc\u30d6\u30eb\u30fb\u30ea\u30fc\u30c9\u30c7\u30fc\u30bf\n\n\n\nTiming Diagram\n\nFig.2 Generate Timing (L=1)\n\n\nFig.3 Generate Timing (L=4)\n\n\nResouces and Performance\nXilinx\u793e\u306eFPGA\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\u7d50\u679c\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\u3002\nPerformance\u306e\u751f\u6210\u901f\u5ea6\u306f\uff11\u79d2\u9593\u306b\u751f\u6210\u3067\u304d\u308b\u30ef\u30fc\u30c9\u6570(1\u30ef\u30fc\u30c9\u306f32bit)\u306e\u7406\u8ad6\u5024\u3067\u3059\u3002\nTable.3 Resouces and Performance(Xilinx)\n\n\nDevice\nParameter\nResouces\nPerformance\n\n\nSlices\nLUT\n\n\nFamily\nSpeed\nL\nLogic\nF/F\nFmax\nGenerate word/sec\n\n\nArtix-7\n3\n1\n28\n66\n106\n250[MHz]\n250[Mword/sec]\n\n\n2\n49\n162\n186\n250[MHz]\n500[Mword/sec]\n\n\n3\n78\n258\n283\n250[MHz]\n750[Mword/sec]\n\n\n4\n110\n372\n388\n250[MHz]\n1000[Mword/sec]\n\n\n5\n134\n454\n495\n250[MHz]\n1250[Mword/sec]\n\n\n6\n159\n551\n575\n250[MHz]\n1500[Mword/sec]\n\n\n7\n182\n664\n681\n250[MHz]\n1750[Mword/sec]\n\n\n8\n211\n764\n797\n250[MHz]\n2000[Mword/sec]\n\n\n12\n344\n1275\n1313\n250[MHz]\n3000[Mword/sec]\n\n\n16\n471\n1759\n1798\n250[MHz]\n4000[Mword/sec]\n\n\n20\n627\n2317\n2359\n250[MHz]\n5000[Mword/sec]\n\n\n24\n798\n2911\n2985\n250[MHz]\n6000[Mword/sec]\n\n\n28\n963\n3566\n3657\n250[MHz]\n7000[Mword/sec]\n\n\n32\n1102\n4113\n4226\n250[MHz]\n8000[Mword/sec]\n\n\n\nArchitecture\n\nBlock Diagram\n\nFig.4 Block Diagram\n\n\nSource Code Description\n\u3053\u3053\u3067\u306fXSADD_RAND_GEN\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u7c21\u5358\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\nlibrary ieee;\nuse     ieee.std_logic_1164.all;\nentity  XSADD_RAND_GEN is\n    generic (\n        L           :     integer   := 1;\n        SEED        :     integer   := 1234\n    );\n    port (\n        CLK         : in  std_logic;\n        RST         : in  std_logic;\n        TBL_INIT    : in  std_logic := '0';\n        TBL_WDATA   : in  std_logic_vector(127 downto 0) := (others => '0');\n        TBL_RDATA   : out std_logic_vector(127 downto 0);\n        RND_RUN     : in  std_logic := '1';\n        RND_VAL     : out std_logic;\n        RND_NUM     : out std_logic_vector(L*32-1 downto 0);\n        RND_RDY     : in  std_logic := '1'\n    );\nend     XSADD_RAND_GEN;\n\n\nXSADD_RAND_GEN \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5916\u90e8\u3068\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9(Parameter \u3068 Port)\u3092\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002Parameter \u3068 Port \u306e\u8a73\u7d30\u306f\u524d\u7bc0\u306eSpecification \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5ba3\u8a00\nlibrary ieee;\nuse     ieee.std_logic_1164.all;\nuse     ieee.numeric_std.all;\nlibrary XSADD;\nuse     XSADD.XSADD.all;\narchitecture RTL of XSADD_RAND_GEN is\n\n\n\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u5ba3\u8a00\u306e\u524d\u306b\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\nXSADD\u30d1\u30c3\u30b1\u30fc\u30b8\u306f XORSHIFT-ADD(XSadd)\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u7528\u306eVHDL\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3059\u3002\u3053\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u64ec\u4f3c\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u5404\u7a2e\u30bf\u30a4\u30d7\u3084\u95a2\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b(\u300cXorShift-Add\u6cd5\u306b\u3088\u308b\u64ec\u4f3c\u4e71\u6570\u751f\u6210VHDL\u30d1\u30c3\u30b1\u30fc\u30b8\u300d )\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3059\u308b\u30ec\u30b8\u30b9\u30bf\u306e\u5ba3\u8a00\u3068\u521d\u671f\u5024\u306e\u5b9a\u7fa9\n    type      STATUS_VECTOR    is array(integer range <>) of PSEUDO_RANDOM_NUMBER_GENERATOR_TYPE;\n    constant  RESET_STATUSES   :  STATUS_VECTOR(L-1 downto 0)\n                               := (others => NEW_PSEUDO_RANDOM_NUMBER_GENERATOR(TO_SEED_TYPE(SEED)));\n    signal    curr_statuses    :  STATUS_VECTOR(L-1 downto 0);\n\n\nXSADD_RAND_GEN \u3067\u306f\u4e00\u5ea6\u306b\u8907\u6570\u306e\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u4fdd\u6301\u3059\u308b\u4e71\u6570\u306e\u72b6\u614b\u3082\u305d\u306e\u5206\u3060\u3051\u7528\u610f\u3059\u308b\u305f\u3081\u306b\u914d\u5217\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u30ea\u30bb\u30c3\u30c8\u6642\u306b\u306f SEED parameter \u3067\u6307\u5b9a\u3055\u308c\u305f\u30b7\u30fc\u30c9\u5024\u3067\u5185\u90e8\u72b6\u614b\u3092\u521d\u671f\u5316\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u306e\u521d\u671f\u5024\u3092\u3053\u3053\u3067\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5185\u90e8\u4fe1\u53f7\u306e\u5ba3\u8a00\n    signal    random_number    :  RANDOM_NUMBER_VECTOR(L-1 downto 0);\n    signal    random_valid     :  boolean;\n    signal    initial_next     :  boolean;\n    signal    status_valid     :  boolean;\n    signal    status_ready     :  boolean;\nbegin\n\n\n\u521d\u671f\u5316\u76f4\u5f8c\u306b\u72b6\u614b\u3092\u9077\u79fb\u3055\u305b\u308b\u305f\u3081\u306e\u4fe1\u53f7\n    process(CLK, RST) begin\n        if (RST = '1') then\n            initial_next <= TRUE;\n        elsif (CLK'event and CLK = '1') then\n            initial_next <= (TBL_INIT = '1');\n        end if;\n    end process;\n\n\nXORSHIFT-ADD(XSadd)\u3067\u306f\u3001\u5185\u90e8\u72b6\u614b\u3092\u9077\u79fb\u3057\u3066\u304b\u3089\u4e71\u6570\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081XSADD_RAND_GEN \u3067\u306f\u3001\u30ea\u30bb\u30c3\u30c8\u89e3\u9664\u76f4\u5f8c\u307e\u305f\u306fTBL_INIT\u4fe1\u53f7\u30cd\u30b2\u30fc\u30c8\u76f4\u5f8c\u306b\u3001\u4e00\u56de\u3060\u3051\u72b6\u614b\u3092\u9077\u79fb\u3055\u305b\u308b\u305f\u3081\u306einitial_next\u4fe1\u53f7\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u72b6\u614b\u9077\u79fb\n    process(CLK, RST)\n        variable next_status   :  PSEUDO_RANDOM_NUMBER_GENERATOR_TYPE;\n    begin\n        if (RST = '1') then\n            curr_statuses <= RESET_STATUSES;\n        elsif (CLK'event and CLK = '1') then\n            if (TBL_INIT = '1') then\n                for i in 0 to 3 loop\n                    next_status.status(i) := unsigned(TBL_WDATA(32*(i+1)-1 downto 32*i));\n                end loop;\n                curr_statuses(curr_statuses'high) <= next_status;\n            elsif (initial_next = TRUE) or\n                  (status_valid = TRUE and status_ready = TRUE) then\n                next_status := curr_statuses(curr_statuses'high);\n                for i in curr_statuses'low to curr_statuses'high loop\n                    NEXT_PSEUDO_RANDOM_NUMBER_GENERATOR(next_status);\n                    curr_statuses(i) <= next_status;\n                end loop;\n            end if;\n        end if;\n    end process;\n    status_valid <= (initial_next = FALSE and TBL_INIT = '0' and RND_RUN = '1');\n\n\n\u3053\u3053\u3067\u306f\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u73fe\u5728\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3059\u308b\u30ec\u30b8\u30b9\u30bf\u306e\u521d\u671f\u5316\u3068\u66f4\u65b0\u3092\u884c\u3044\u307e\u3059\u3002\n\u540c\u671f\u30ea\u30bb\u30c3\u30c8(RST)\u4fe1\u53f7\u306e\u30a2\u30b5\u30fc\u30c8\u6642\u306b\u306f SEED \u3067\u6307\u5b9a\u3055\u308c\u305f\u521d\u671f\u5024\u3092\u30ec\u30b8\u30b9\u30bf\u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\nTBL_INIT\u4fe1\u53f7\u306e\u30a2\u30b5\u30fc\u30c8\u6642\u306b\u306fTBL_WDATA\u306e\u5024\u3092\u30ec\u30b8\u30b9\u30bf\u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\ninitial_next\u4fe1\u53f7\u306e\u30a2\u30b5\u30fc\u30c8\u6642(\u30ea\u30bb\u30c3\u30c8\u4fe1\u53f7\u306e\u30cd\u30b2\u30fc\u30c8\u76f4\u5f8c\u307e\u305f\u306fTBL_INIT\u4fe1\u53f7\u306e\u30cd\u30b2\u30fc\u30c8\u76f4\u5f8c)\u3001\u307e\u305f\u306f\u5f8c\u6bb5\u306e\u4e71\u6570\u751f\u6210\u5668\u304c\u6b21\u306e\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3001\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u72b6\u614b\u3092\u6b21\u306e\u72b6\u614b\u306b\u66f4\u65b0\u3057\u307e\u3059\u3002\n\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u304c\u4e71\u6570\u3092\u751f\u6210\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u6642\u3001status_valid\u4fe1\u53f7\u3092\u30a2\u30b5\u30fc\u30c8\u3057\u307e\u3059\u3002\u306a\u304a\u3001\u30ea\u30bb\u30c3\u30c8\u6642\u307e\u305f\u306fTBL_INIT\u4fe1\u53f7\u306e\u30a2\u30b5\u30fc\u30c8\u6642\u306e\u30ec\u30b8\u30b9\u30bf\u521d\u671f\u5316\u6642\u3001\u304a\u3088\u3073\u3001\u30ea\u30bb\u30c3\u30c8\u4fe1\u53f7\u306e\u30cd\u30b2\u30fc\u30c8\u76f4\u5f8c\u307e\u305f\u306fTBL_INIT\u4fe1\u53f7\u306e\u30cd\u30b2\u30fc\u30c8\u76f4\u5f8c\u306e\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u66f4\u65b0\u6642\u306f\u3001\u4e71\u6570\u3092\u751f\u6210\u51fa\u6765\u306a\u3044\u306e\u3067status_valid\u4fe1\u53f7\u306f\u30a2\u30b5\u30fc\u30c8\u3055\u308c\u307e\u305b\u3093\u3002\n\n\u4e71\u6570\u751f\u6210\u5668\n    process(CLK, RST) begin\n        if (RST = '1') then\n            random_valid  <= FALSE;\n            random_number <= (others => (others => '0'));\n        elsif (CLK'event and CLK = '1') then\n            random_valid  <= status_valid;\n            if (status_valid = TRUE and status_ready = TRUE) then\n                for i in curr_statuses'range loop\n                    random_number(i) <= GENERATE_TEMPER(curr_statuses(i));\n                end loop;\n            end if;\n        end if;\n    end process;\n    status_ready <= ((random_valid = FALSE) or\n                     (random_valid = TRUE  and RND_RDY = '1'));\n\n\n\u3053\u3053\u3067\u306f\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u73fe\u5728\u306e\u72b6\u614b\u304b\u3089\u4e71\u6570\u3092\u751f\u6210\u3057\u307e\u3059\u3002\nrandom_valid\u4fe1\u53f7\u306f\u751f\u6210\u3057\u305f\u4e71\u6570\u304c\u6709\u52b9\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001status_valid\u4fe1\u53f7\u304c\u30a2\u30b5\u30fc\u30c8\u3055\u308c\u305f\u6642\u3064\u307e\u308a\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u304c\u4e71\u6570\u3092\u751f\u6210\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u6642\u3001random_valid\u4fe1\u53f7\u3092\u30a2\u30b5\u30fc\u30c8\u3057\u307e\u3059\u3002\nstatus_valid\u4fe1\u53f7\u304c\u30a2\u30b5\u30fc\u30c8\u3055\u308c\u305f\u6642\u3001\u4e71\u6570\u3092\u751f\u6210\u3057\u3066random_number\u30ec\u30b8\u30b9\u30bf\u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u4e71\u6570\u3092\u51fa\u529b\u3057\u3066\u3044\u308b\u72b6\u614b(random_valid\u4fe1\u53f7\u304c\u30a2\u30b5\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u72b6\u614b)\u3067RND_RDY\u4fe1\u53f7\u304c\u30cd\u30b2\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001random_number\u30ec\u30b8\u30b9\u30bf\u306f\u524d\u306e\u4e71\u6570\u306e\u5024\u3092\u4fdd\u6301\u3057\u305f\u307e\u307e\u3001\u6b21\u306e\u4e71\u6570\u306f\u751f\u6210\u3057\u307e\u305b\u3093\u3002\n\u6b21\u306e\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3068\u540c\u6642\u306b\u524d\u6bb5\u306e\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u72b6\u614b\u3092\u6b21\u306e\u72b6\u614b\u306b\u66f4\u65b0\u3057\u307e\u3059\u3002status_ready\u4fe1\u53f7\u306f\u305d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u793a\u3057\u307e\u3059\u3002\n\n\u51fa\u529b\u4fe1\u53f7\u306e\u751f\u6210\n    RND_VAL <= '1' when (random_valid = TRUE) else '0';\n    RND_NUM_GEN: for i in 0 to L-1 generate\n        RND_NUM(32*(i+1)-1 downto 32*i) <= std_logic_vector(random_number(i));\n    end generate;\n    TBL_RDATA_GEN: for i in 0 to 3 generate\n        TBL_RDATA(32*(i+1)-1 downto 32*i) <= std_logic_vector(curr_statuses(L-1).status(i));\n    end generate;\nend RTL;\n\n\n\u3053\u3053\u3067\u306f\u751f\u6210\u3057\u305f\u5185\u90e8\u4fe1\u53f7(random_valid\u4fe1\u53f7\u3001random_number\u30ec\u30b8\u30b9\u30bf)\u304a\u3088\u3073\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u73fe\u5728\u306e\u72b6\u614b\u3092\u5916\u90e8\u30dd\u30fc\u30c8\u306b\u51fa\u529b\u3057\u307e\u3059\u3002\n\nSimulation\n\nGHDL\u306b\u3088\u308b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\n\nGHDL\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\nGHDL\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f0.29\u3067\u3059\u3002\nGHDL\u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u306f\u3053\u3061\u3089(http://ghdl.free.fr)\n\nMakefile\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306b Makefile \u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\nMakefile\nGHDL=ghdl\nGHDLFLAGS=--mb-comments\nWORK=XSADD\nTEST_BENCH = test_bench \\\\\n             $(END_LIST)\nall: $(TEST_BENCH)\nclean:\n    rm -f *.o *.cf $(TEST_BENCH)\ntest_bench: xsadd.o xsadd_rand_gen.o test_bench.o \n     $(GHDL) -e $(GHDLFLAGS) $@\n    -$(GHDL) -r $(GHDLRUNFLAGS) $@\ntest_bench.o:      ../../src/test/vhdl/test_bench.vhd xsadd_rand_gen.o\n    $(GHDL) -a $(GHDLFLAGS) --work=work $<\nxsadd.o:           ../../src/main/vhdl/xsadd.vhd\n    $(GHDL) -a $(GHDLFLAGS) --work=$(WORK) $<\nxsadd_rand_gen.o:  ../../src/main/vhdl/xsadd_rand_gen.vhd xsadd.o\n    $(GHDL) -a $(GHDLFLAGS) --work=$(WORK) $<\n\n\n\n\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\n$ cd sim/ghdl\n$ cd make\nghdl -a --mb-comments --work=XSADD ../../src/main/vhdl/xsadd.vhd\nghdl -a --mb-comments --work=XSADD ../../src/main/vhdl/xsadd_rand_gen.vhd\nghdl -a --mb-comments --work=work ../../src/test/vhdl/test_bench.vhd\n../../src/test/vhdl/test_bench.vhd:174:18:warning: function \"to_dec_string\" is never referenced\nghdl -e --mb-comments test_bench\nghdl -r  test_bench\nxsadd_init(1234)\n32-bit unsigned integers r, where 0 <= r < 2^32 \n1823491521 1658333335 1467485721   45623648 \n3336175492 2561136018  181953608  768231638 \n3747468990  633754442 1317015417 2329323117 \n 688642499 1053686614 1029905208 3711673957 \n2701869769  695757698 3819984643 1221024953 \n 110368470 2794248395 2962485574 3345205107 \n 592707216 1730979969 2620763022  670475981 \n1891156367 3882783688 1913420887 1592951790 \n2760991171 1168232321 1650237229 2083267498 \n2743918768 3876980974 2059187728 3236392632 \nxsadd_init([0x0a, 0x0b, 0x0c, 0x0d])\n32-bit unsigned integers r, where 0 <= r < 2^32 \n138a38f9 b396fa84 a55a2ee8 24b7ed06 \nf0bae2fe d8ace1a7 d4b09a3f d7fcf441 \nfc55ee1b 5b4ab585 d4bf254b 5b0f77ba \n31161b97 b21ccc3b ab418bfb 4cc8476a \n06a1a28f cb1f50c6 f0ba2ed3 7907f372 \n3256d76c d843e864 d63a60b7 eff88358 \nddc3b083 b5734b65 f08d644d e5f6c809 \n95bf2ae3 e5867758 f260d462 39d244dc \nb9fbb8d7 63e8f3d9 b34ea936 8fe4ee75 \n8803c8f1 d74e420e a5c14d22 20be253f \n../../src/test/vhdl/test_bench.vhd:373:9:@530ns:(assertion failure):   Run complete...\n./test_bench:error: assertion failed\n./test_bench:error: simulation failed\nMakefile:14: recipe for target 'test_bench' failed\nmake: [test_bench] Error 1 (\u7121\u8996\u3055\u308c\u307e\u3057\u305f)\n\n\u6700\u5f8c\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u308b\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u3053\u308c\u306fassert(FALSE)\u3067\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3057\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002\n\nVivado\u306b\u3088\u308b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\n\nVivado\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\nVivado 2015.4\n\nVivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\u3059\u3067\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u7701\u7565\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306eTcl\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\nsim/vivado/create_project.tcl\n\u4e0a\u8a18\u306eTcl\u30b9\u30af\u30ea\u30d7\u30c8\u3092Vivado \u3067\u5b9f\u884c\u3059\u308b\u3068\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\nVivado > Tools > Run Tcl Script > create_project.tcl\n\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\nVivado > Open Project > xsadd_rand_gen.xpr\nFlow Navigator > Run Simulation > Run Behavioral Simulation\n\nSynthesis and Implementation\n\nVivado\u306b\u3088\u308b\u8ad6\u7406\u5408\u6210\n\nVivado\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\nVivado 2015.4\n\nVivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\u3059\u3067\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u7701\u7565\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306eTcl\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\nfpga/xilinx/vivado2015.4/xsadd_rand_gen/create_project.tcl\n\u4e0a\u8a18\u306eTcl\u30b9\u30af\u30ea\u30d7\u30c8\u3092Vivado \u3067\u5b9f\u884c\u3059\u308b\u3068\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\nVivado > Tools > Run Tcl Script > create_project.tcl\n\u30c7\u30d0\u30a4\u30b9\u306f\u3068\u308a\u3042\u3048\u305axc7a15tcsg324-3\u3092\u6307\u5b9a\u3057\u307e\u3059\u304c\u3001\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\u3001create_project.tcl \u3092\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nSynthesis\nFlow Navigator > Run Synthesis\n\nImplementation\nFlow Navigator > Run Implementation\n\nQuartusII\u306b\u3088\u308b\u8ad6\u7406\u5408\u6210\n\nQuartusII\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\nQuartus Prime 15.1\n\nQuartusII\u7528\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\nfpga/altera/15.1/xsadd_rand_gen.qpf\n\nAcknowledgments\n\u3053\u306e\u3088\u3046\u306a\u8cb4\u91cd\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u60dc\u3057\u3052\u3082\u306a\u304f\u516c\u958b\u3057\u3066\u304f\u3060\u3055\u3063\u305f\u65b9\u3005\u306b\u306f\u3072\u305f\u3059\u3089\u611f\u8b1d\u3067\u3059\u3002\nXORSHIFT-ADD(XSAdd) Pseudo Random Number Generator\n==================================================\n\n\u3053\u3061\u3089\u306e\u8a18\u4e8b([\u300cXorShift-Add\u6cd5\u306b\u3088\u308b\u64ec\u4f3c\u4e71\u6570\u751f\u6210VHDL\u30d1\u30c3\u30b1\u30fc\u30b8\u300d](http://qiita.com/ikwzm/items/dd853f8b17cd276383e7) )\u3067\u306f XORSHIFT-ADD(XSadd)\u6cd5\u3067\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u3059\u308b\u305f\u3081\u306e VHDL \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u304c\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u305d\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3063\u3066\u5b9f\u969b\u306b\u56de\u8def\u3092\u4f5c\u3063\u3066FPGA\u306b\u5b9f\u88c5\u3057\u305f\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3084FPGA\u306e\u958b\u767a\u74b0\u5883\u306a\u3069\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\n[https://github.com/ikwzm/XSadd_Rand_Gen](https://github.com/ikwzm/XSadd_Rand_Gen)\n\n\n\n# Overview\n\n\n## Introduction\n\n\n\u3053\u306eIP\u306f XORSHFIT-ADD(XSAdd)\u6cd5\u306b\u3088\u308b\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u56de\u8def\u3067\u3059\u3002\n\n\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n[XORSHIFT-ADD (XSadd): A variant of XORSHIFT](http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/XSADD/index-jp.html)\n\n\n\n\n## Features\n\n\n* XORSHFIT-ADD(XSAdd)\u6cd5\u306b\u3088\u308b\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u56de\u8def\u3067\u3059\u3002\n\n* VHDL\u3067\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n* \u8ad6\u7406\u5408\u6210\u53ef\u80fd\u3067\u3059\u3002Xilinx\u793e\u306eVivado\u3001Altera\u793e\u306eQuartusII\u3067\u78ba\u8a8d\u6e08\u307f\u3002\n\n* \uff11\u30af\u30ed\u30c3\u30af\u30671\u301c\u6570\u30ef\u30fc\u30c9(1\u30ef\u30fc\u30c9\u306f32bit)\u306e\u4e71\u6570\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n* \u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u5909\u6570\u3067SEED\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n* \u72b6\u614b\u30c6\u30fc\u30d6\u30eb\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\n![Fig.1 Top-Level Signaling Interface](https://qiita-image-store.s3.amazonaws.com/0/24981/04589392-12e7-a0e2-1df3-88ce05e6f435.jpeg \"Fig.1 Top-Level Signaling Interface\")\n\n\nFig.1 Top-Level Signaling Interface\n\n<br />\n\n\n## Licensing\n\n\n\u4e8c\u6761\u9805BSD\u30e9\u30a4\u30bb\u30f3\u30b9 (2-clause BSD license) \u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n# Specification\n\n## Parameter Descriptions\n\nTable.1 Parameter Descriptions\n\n<table border=\"2\">\n  <tr>\n    <td align=\"center\">Name</td>\n    <td align=\"center\">TYPE</td>\n    <td align=\"center\">Default</td>\n    <td align=\"center\">Description</td>\n  </tr>\n  <tr>\n    <td>L</td>\n    <td align=\"center\">Integer</td>\n    <td align=\"center\">1</td>\n    <td>1\u30af\u30ed\u30c3\u30af\u3067\u751f\u6210\u3059\u308b\u4e71\u6570\u306e\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059<br />\u3053\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u6307\u5b9a\u3067\u304d\u308b\u6570\u306f\uff11\u4ee5\u4e0a\u306e\u6574\u6570\u3067\u3059</td>\n  </tr>\n  <tr>\n    <td>SEED</td>\n    <td align=\"center\">Integer</td>\n    <td align=\"center\">1234</td>\n    <td>\u4e71\u6570\u306e\u30b7\u30fc\u30c9\u5024\u3092\u6307\u5b9a\u3057\u307e\u3059\u3053\u306e\u30b7\u30fc\u30c9\u5024\u3092\u5143\u306b\u72b6\u614b\u30c6\u30fc\u30d6\u30eb\u304c\u521d\u671f\u5316\u3055\u308c\u307e\u3059</td>\n  </tr>\n</table>\n\n## Port Descriptions\n\n\nTable.2 Port  Descriptions\n\n<table border=\"2\">\n  <tr>\n    <td align=\"center\">Name</td>\n    <td align=\"center\">Type</td>\n    <td align=\"center\">Width</td>\n    <td align=\"center\">I/O</td>\n    <td align=\"center\">Description</td>\n  </tr>\n  <tr>\n    <td>CLK</td>\n    <td align=\"center\">STD_LOGIC</td>\n    <td align=\"center\">1</td>\n    <td align=\"center\">in</td>\n    <td>\u30af\u30ed\u30c3\u30af\u4fe1\u53f7</td>\n  </tr>\n  <tr>\n    <td>RST</td>\n    <td align=\"center\">STD_LOGIC</td>\n    <td align=\"center\">1</td>\n    <td align=\"center\">in</td>\n    <td>\u975e\u540c\u671f\u30ea\u30bb\u30c3\u30c8\u4fe1\u53f7</td>\n  </tr>\n  <tr>\n    <td>RND_RUN</td>\n    <td align=\"center\">STD_LOGIC</td>\n    <td align=\"center\">1</td>\n    <td align=\"center\">in</td>\n    <td>\u4e71\u6570\u751f\u6210\u958b\u59cb\u4fe1\u53f7<br />\u3053\u306e\u4fe1\u53f7\u304c&#39;1&#39;\u306b\u306a\u3063\u3066\u304b\u30891\u30af\u30ed\u30c3\u30af\u5f8c\u306b\u4e71\u6570\u3092\u51fa\u529b\u3057\u307e\u3059<br />TBL_INIT\u304c&#39;1&#39;\u306e\u6642\u3001\u3053\u306e\u4fe1\u53f7\u3092&#39;1&#39;\u306b\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093</td>\n  </tr>\n  <tr>\n    <td>RND_NUM</td>\n    <td align=\"center\">STD_LOGIC_VECTOR</td>\n    <td align=\"center\">32*L</td>\n    <td align=\"center\">out</td>\n    <td>\u4e71\u6570\u51fa\u529b\u4fe1\u53f7<br />\u751f\u6210\u3055\u308c\u305f\u4e71\u6570\u3092\u51fa\u529b\u3059\u308b\u4fe1\u53f7RND_VAL\u304c&#39;1&#39;\u306e\u6642\u306e\u307f\u6709\u52b9\u306a\u5024\u3092\u51fa\u529b\u3057\u307e\u3059RND_VAL=&#39;1&#39;\u304b\u3064RND_RDY=&#39;1&#39;\u3067\u6b21\u306e\u4e71\u6570\u3092\u751f\u6210\u3057\u307e\u3059</td>\n  </tr>\n  <tr>\n    <td>RND_VAL</td>\n    <td align=\"center\">STD_LOGIC</td>\n    <td align=\"center\">1</td>\n    <td align=\"center\">out</td>\n    <td>\u4e71\u6570\u6709\u52b9\u4fe1\u53f7<br />RND_NUM\u304b\u3089\u51fa\u529b\u3055\u308c\u305f\u4e71\u6570\u304c\u6709\u52b9\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u4fe1\u53f7</td>\n  </tr>\n  <tr>\n    <td>RND_RDY</td>\n    <td align=\"center\">STD_LOGIC</td>\n    <td align=\"center\">1</td>\n    <td align=\"center\">in</td>\n    <td>\u4e71\u6570\u5fdc\u7b54\u4fe1\u53f7<br />RND_NUM\u306e\u5024\u3092\u53d6\u308a\u51fa\u3057\u305f\u3053\u3068\u3092\u793a\u3059\u4fe1\u53f7RND_VAL=&#39;1&#39;\u304b\u3064RND_RDY=&#39;1&#39;\u3067\u6b21\u306e\u4e71\u6570\u3092\u751f\u6210\u3057\u307e\u3059</td>\n  </tr>\n  <tr>\n    <td>TBL_INIT</td>\n    <td align=\"center\">STD_LOGIC</td>\n    <td align=\"center\">1</td>\n    <td align=\"center\">in</td>\n    <td>\u72b6\u614b\u30c6\u30fc\u30d6\u30eb\u30fb\u521d\u671f\u5316\u4fe1\u53f7<br />\u72b6\u614b\u30c6\u30fc\u30d6\u30eb\u3092\u521d\u671f\u5316\u3059\u308b\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u72b6\u614b\u30c6\u30fc\u30d6\u30eb\u3092\u660e\u793a\u7684\u306b\u521d\u671f\u5316\u3057\u306a\u3044\u5834\u5408\u306f\u3053\u306e\u4fe1\u53f7\u3092&#39;0&#39;\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002TBL_INIT\u3092&#39;0&#39;\u306b\u3057\u3066\u304b\u3089\u4e71\u6570\u304c\u751f\u6210\u3055\u308c\u308b\u307e\u30672\u30af\u30ed\u30c3\u30af\u306e\u9045\u308c\u304c\u751f\u3058\u307e\u3059\u3002</td>\n  </tr>\n  <tr>\n    <td>TBL_WDATA</td>\n    <td align=\"center\">STD_LOGIC_VECTOR</td>\n    <td align=\"center\">128</td>\n    <td align=\"center\">in</td>\n    <td>\u72b6\u614b\u30c6\u30fc\u30d6\u30eb\u30fb\u30e9\u30a4\u30c8\u30c7\u30fc\u30bf</td>\n  </tr>\n  <tr>\n    <td>TBL_RDATA</td>\n    <td align=\"center\">STD_LOGIC_VECTOR</td>\n    <td align=\"center\">128</td>\n    <td align=\"center\">out</td>\n    <td>\u72b6\u614b\u30c6\u30fc\u30d6\u30eb\u30fb\u30ea\u30fc\u30c9\u30c7\u30fc\u30bf</td>\n  </tr>\n</table>\n\n\n## Timing Diagram\n\n![Fig.2 Generate Timing (L=1)](https://qiita-image-store.s3.amazonaws.com/0/24981/175aeaee-efb7-0a79-1037-226e04e0101e.jpeg \"Fig.2 Generate Timing (L=1)\")\n\nFig.2 Generate Timing (L=1)\n\n<br />\n\n\n![Fig.3 Generate Timing (L=4)](https://qiita-image-store.s3.amazonaws.com/0/24981/8f4e239d-f5eb-6ca5-a2d7-896fb00638d1.jpeg \"Fig.3 Generate Timing (L=4)\")\n\n\n\nFig.3 Generate Timing (L=4)\n\n<br />\n\n\n\n\n## Resouces and Performance\n\n\nXilinx\u793e\u306eFPGA\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\u7d50\u679c\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\u3002\n\nPerformance\u306e\u751f\u6210\u901f\u5ea6\u306f\uff11\u79d2\u9593\u306b\u751f\u6210\u3067\u304d\u308b\u30ef\u30fc\u30c9\u6570(1\u30ef\u30fc\u30c9\u306f32bit)\u306e\u7406\u8ad6\u5024\u3067\u3059\u3002\n\nTable.3 Resouces and Performance(Xilinx)\n\n<table border=\"2\">\n  <tr>\n    <td align=\"center\" colspan=\"2\" rowspan=\"2\">Device</td>\n    <td align=\"center\" rowspan=\"2\">Parameter</td>\n    <td align=\"center\" colspan=\"3\">Resouces</td>\n    <td align=\"center\" colspan=\"2\" rowspan=\"2\">Performance</td>\n  </tr>\n  <tr>\n    <td align=\"center\" rowspan=\"2\">Slices</td>\n    <td align=\"center\" colspan=\"2\">LUT</td>\n  <tr>\n    <td align=\"center\">Family</td>\n    <td align=\"center\">Speed</td>\n    <td align=\"center\">L</td>\n    <td align=\"center\">Logic</td>\n    <td align=\"center\">F/F</td>\n    <td align=\"center\">Fmax</td>\n    <td align=\"center\">Generate word/sec</td>\n  </tr>\n  <tr>\n    <td rowspan=\"14\">Artix-7</td>\n    <td align=\"center\" rowspan=\"14\">3</td>\n    <td align=\"center\">1</td>\n    <td align=\"right\">28</td>\n    <td align=\"right\">66</td>\n    <td align=\"right\">106</td>\n    <td align=\"right\">250[MHz]</td>\n    <td align=\"right\">250[Mword/sec]</td>\n  </tr>\n  <tr>\n    <td align=\"center\">2</td>\n    <td align=\"right\">49</td>\n    <td align=\"right\">162</td>\n    <td align=\"right\">186</td>\n    <td align=\"right\">250[MHz]</td>\n    <td align=\"right\">500[Mword/sec]</td>\n  </tr>\n  <tr>\n    <td align=\"center\">3</td>\n    <td align=\"right\">78</td>\n    <td align=\"right\">258</td>\n    <td align=\"right\">283</td>\n    <td align=\"right\">250[MHz]</td>\n    <td align=\"right\">750[Mword/sec]</td>\n  </tr>\n  <tr>\n    <td align=\"center\">4</td>\n    <td align=\"right\">110</td>\n    <td align=\"right\">372</td>\n    <td align=\"right\">388</td>\n    <td align=\"right\">250[MHz]</td>\n    <td align=\"right\">1000[Mword/sec]</td>\n  </tr>\n  <tr>\n    <td align=\"center\">5</td>\n    <td align=\"right\">134</td>\n    <td align=\"right\">454</td>\n    <td align=\"right\">495</td>\n    <td align=\"right\">250[MHz]</td>\n    <td align=\"right\">1250[Mword/sec]</td>\n  </tr>\n  <tr>\n    <td align=\"center\">6</td>\n    <td align=\"right\">159</td>\n    <td align=\"right\">551</td>\n    <td align=\"right\">575</td>\n    <td align=\"right\">250[MHz]</td>\n    <td align=\"right\">1500[Mword/sec]</td>\n  </tr>\n  <tr>\n    <td align=\"center\">7</td>\n    <td align=\"right\">182</td>\n    <td align=\"right\">664</td>\n    <td align=\"right\">681</td>\n    <td align=\"right\">250[MHz]</td>\n    <td align=\"right\">1750[Mword/sec]</td>\n  </tr>\n  <tr>\n    <td align=\"center\">8</td>\n    <td align=\"right\">211</td>\n    <td align=\"right\">764</td>\n    <td align=\"right\">797</td>\n    <td align=\"right\">250[MHz]</td>\n    <td align=\"right\">2000[Mword/sec]</td>\n  </tr>\n  <tr>\n    <td align=\"center\">12</td>\n    <td align=\"right\">344</td>\n    <td align=\"right\">1275</td>\n    <td align=\"right\">1313</td>\n    <td align=\"right\">250[MHz]</td>\n    <td align=\"right\">3000[Mword/sec]</td>\n  </tr>\n  <tr>\n    <td align=\"center\">16</td>\n    <td align=\"right\">471</td>\n    <td align=\"right\">1759</td>\n    <td align=\"right\">1798</td>\n    <td align=\"right\">250[MHz]</td>\n    <td align=\"right\">4000[Mword/sec]</td>\n  </tr>\n  <tr>\n    <td align=\"center\">20</td>\n    <td align=\"right\">627</td>\n    <td align=\"right\">2317</td>\n    <td align=\"right\">2359</td>\n    <td align=\"right\">250[MHz]</td>\n    <td align=\"right\">5000[Mword/sec]</td>\n  </tr>\n  <tr>\n    <td align=\"center\">24</td>\n    <td align=\"right\">798</td>\n    <td align=\"right\">2911</td>\n    <td align=\"right\">2985</td>\n    <td align=\"right\">250[MHz]</td>\n    <td align=\"right\">6000[Mword/sec]</td>\n  </tr>\n  <tr>\n    <td align=\"center\">28</td>\n    <td align=\"right\">963</td>\n    <td align=\"right\">3566</td>\n    <td align=\"right\">3657</td>\n    <td align=\"right\">250[MHz]</td>\n    <td align=\"right\">7000[Mword/sec]</td>\n  </tr>\n  <tr>\n    <td align=\"center\">32</td>\n    <td align=\"right\">1102</td>\n    <td align=\"right\">4113</td>\n    <td align=\"right\">4226</td>\n    <td align=\"right\">250[MHz]</td>\n    <td align=\"right\">8000[Mword/sec]</td>\n  </tr>\n</table>\n\n\n\n\n# Architecture\n\n\n## Block Diagram\n\n![Fig.4 Block Diagram](https://qiita-image-store.s3.amazonaws.com/0/24981/2ecea5a9-619c-3a80-477d-96febabe2b8f.jpeg \"Fig.4 Block Diagram\")\n\nFig.4 Block Diagram\n\n<br />\n\n## Source Code Description\n\n\n\u3053\u3053\u3067\u306fXSADD_RAND_GEN\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u7c21\u5358\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\n### \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\n\n\n\n```VHDL\nlibrary ieee;\nuse     ieee.std_logic_1164.all;\nentity  XSADD_RAND_GEN is\n    generic (\n        L           :     integer   := 1;\n        SEED        :     integer   := 1234\n    );\n    port (\n        CLK         : in  std_logic;\n        RST         : in  std_logic;\n        TBL_INIT    : in  std_logic := '0';\n        TBL_WDATA   : in  std_logic_vector(127 downto 0) := (others => '0');\n        TBL_RDATA   : out std_logic_vector(127 downto 0);\n        RND_RUN     : in  std_logic := '1';\n        RND_VAL     : out std_logic;\n        RND_NUM     : out std_logic_vector(L*32-1 downto 0);\n        RND_RDY     : in  std_logic := '1'\n    );\nend     XSADD_RAND_GEN;\n \n```\n\n\nXSADD_RAND_GEN \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5916\u90e8\u3068\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9(Parameter \u3068 Port)\u3092\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002Parameter \u3068 Port \u306e\u8a73\u7d30\u306f\u524d\u7bc0\u306eSpecification \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n\n### \u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5ba3\u8a00\n\n\n\n```VHDL\nlibrary ieee;\nuse     ieee.std_logic_1164.all;\nuse     ieee.numeric_std.all;\nlibrary XSADD;\nuse     XSADD.XSADD.all;\narchitecture RTL of XSADD_RAND_GEN is\n\n```\n\n\n\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u5ba3\u8a00\u306e\u524d\u306b\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\n\nXSADD\u30d1\u30c3\u30b1\u30fc\u30b8\u306f XORSHIFT-ADD(XSadd)\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u7528\u306eVHDL\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3059\u3002\u3053\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u64ec\u4f3c\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u5404\u7a2e\u30bf\u30a4\u30d7\u3084\u95a2\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b([\u300cXorShift-Add\u6cd5\u306b\u3088\u308b\u64ec\u4f3c\u4e71\u6570\u751f\u6210VHDL\u30d1\u30c3\u30b1\u30fc\u30b8\u300d](http://qiita.com/ikwzm/items/dd853f8b17cd276383e7) )\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n\n### \u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3059\u308b\u30ec\u30b8\u30b9\u30bf\u306e\u5ba3\u8a00\u3068\u521d\u671f\u5024\u306e\u5b9a\u7fa9\n\n\n\n```VHDL\n    type      STATUS_VECTOR    is array(integer range <>) of PSEUDO_RANDOM_NUMBER_GENERATOR_TYPE;\n    constant  RESET_STATUSES   :  STATUS_VECTOR(L-1 downto 0)\n                               := (others => NEW_PSEUDO_RANDOM_NUMBER_GENERATOR(TO_SEED_TYPE(SEED)));\n    signal    curr_statuses    :  STATUS_VECTOR(L-1 downto 0);\n\n```\n\n\nXSADD_RAND_GEN \u3067\u306f\u4e00\u5ea6\u306b\u8907\u6570\u306e\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u4fdd\u6301\u3059\u308b\u4e71\u6570\u306e\u72b6\u614b\u3082\u305d\u306e\u5206\u3060\u3051\u7528\u610f\u3059\u308b\u305f\u3081\u306b\u914d\u5217\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30ea\u30bb\u30c3\u30c8\u6642\u306b\u306f SEED parameter \u3067\u6307\u5b9a\u3055\u308c\u305f\u30b7\u30fc\u30c9\u5024\u3067\u5185\u90e8\u72b6\u614b\u3092\u521d\u671f\u5316\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u306e\u521d\u671f\u5024\u3092\u3053\u3053\u3067\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n\n\n### \u5185\u90e8\u4fe1\u53f7\u306e\u5ba3\u8a00\n\n\n\n```VHDL\n    signal    random_number    :  RANDOM_NUMBER_VECTOR(L-1 downto 0);\n    signal    random_valid     :  boolean;\n    signal    initial_next     :  boolean;\n    signal    status_valid     :  boolean;\n    signal    status_ready     :  boolean;\nbegin\n```\n\n\n\n\n\n### \u521d\u671f\u5316\u76f4\u5f8c\u306b\u72b6\u614b\u3092\u9077\u79fb\u3055\u305b\u308b\u305f\u3081\u306e\u4fe1\u53f7\n\n\n\n```VHDL\n    process(CLK, RST) begin\n        if (RST = '1') then\n            initial_next <= TRUE;\n        elsif (CLK'event and CLK = '1') then\n            initial_next <= (TBL_INIT = '1');\n        end if;\n    end process;\n\n```\n\n\nXORSHIFT-ADD(XSadd)\u3067\u306f\u3001\u5185\u90e8\u72b6\u614b\u3092\u9077\u79fb\u3057\u3066\u304b\u3089\u4e71\u6570\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081XSADD_RAND_GEN \u3067\u306f\u3001\u30ea\u30bb\u30c3\u30c8\u89e3\u9664\u76f4\u5f8c\u307e\u305f\u306fTBL_INIT\u4fe1\u53f7\u30cd\u30b2\u30fc\u30c8\u76f4\u5f8c\u306b\u3001\u4e00\u56de\u3060\u3051\u72b6\u614b\u3092\u9077\u79fb\u3055\u305b\u308b\u305f\u3081\u306einitial_next\u4fe1\u53f7\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n### \u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u72b6\u614b\u9077\u79fb\n\n\n\n```VHDL\n    process(CLK, RST)\n        variable next_status   :  PSEUDO_RANDOM_NUMBER_GENERATOR_TYPE;\n    begin\n        if (RST = '1') then\n            curr_statuses <= RESET_STATUSES;\n        elsif (CLK'event and CLK = '1') then\n            if (TBL_INIT = '1') then\n                for i in 0 to 3 loop\n                    next_status.status(i) := unsigned(TBL_WDATA(32*(i+1)-1 downto 32*i));\n                end loop;\n                curr_statuses(curr_statuses'high) <= next_status;\n            elsif (initial_next = TRUE) or\n                  (status_valid = TRUE and status_ready = TRUE) then\n                next_status := curr_statuses(curr_statuses'high);\n                for i in curr_statuses'low to curr_statuses'high loop\n                    NEXT_PSEUDO_RANDOM_NUMBER_GENERATOR(next_status);\n                    curr_statuses(i) <= next_status;\n                end loop;\n            end if;\n        end if;\n    end process;\n    status_valid <= (initial_next = FALSE and TBL_INIT = '0' and RND_RUN = '1');\n\n```\n\n\n\u3053\u3053\u3067\u306f\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u73fe\u5728\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3059\u308b\u30ec\u30b8\u30b9\u30bf\u306e\u521d\u671f\u5316\u3068\u66f4\u65b0\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u540c\u671f\u30ea\u30bb\u30c3\u30c8(RST)\u4fe1\u53f7\u306e\u30a2\u30b5\u30fc\u30c8\u6642\u306b\u306f SEED \u3067\u6307\u5b9a\u3055\u308c\u305f\u521d\u671f\u5024\u3092\u30ec\u30b8\u30b9\u30bf\u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\nTBL_INIT\u4fe1\u53f7\u306e\u30a2\u30b5\u30fc\u30c8\u6642\u306b\u306fTBL_WDATA\u306e\u5024\u3092\u30ec\u30b8\u30b9\u30bf\u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\ninitial_next\u4fe1\u53f7\u306e\u30a2\u30b5\u30fc\u30c8\u6642(\u30ea\u30bb\u30c3\u30c8\u4fe1\u53f7\u306e\u30cd\u30b2\u30fc\u30c8\u76f4\u5f8c\u307e\u305f\u306fTBL_INIT\u4fe1\u53f7\u306e\u30cd\u30b2\u30fc\u30c8\u76f4\u5f8c)\u3001\u307e\u305f\u306f\u5f8c\u6bb5\u306e\u4e71\u6570\u751f\u6210\u5668\u304c\u6b21\u306e\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3001\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u72b6\u614b\u3092\u6b21\u306e\u72b6\u614b\u306b\u66f4\u65b0\u3057\u307e\u3059\u3002\n\n\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u304c\u4e71\u6570\u3092\u751f\u6210\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u6642\u3001status_valid\u4fe1\u53f7\u3092\u30a2\u30b5\u30fc\u30c8\u3057\u307e\u3059\u3002\u306a\u304a\u3001\u30ea\u30bb\u30c3\u30c8\u6642\u307e\u305f\u306fTBL_INIT\u4fe1\u53f7\u306e\u30a2\u30b5\u30fc\u30c8\u6642\u306e\u30ec\u30b8\u30b9\u30bf\u521d\u671f\u5316\u6642\u3001\u304a\u3088\u3073\u3001\u30ea\u30bb\u30c3\u30c8\u4fe1\u53f7\u306e\u30cd\u30b2\u30fc\u30c8\u76f4\u5f8c\u307e\u305f\u306fTBL_INIT\u4fe1\u53f7\u306e\u30cd\u30b2\u30fc\u30c8\u76f4\u5f8c\u306e\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u66f4\u65b0\u6642\u306f\u3001\u4e71\u6570\u3092\u751f\u6210\u51fa\u6765\u306a\u3044\u306e\u3067status_valid\u4fe1\u53f7\u306f\u30a2\u30b5\u30fc\u30c8\u3055\u308c\u307e\u305b\u3093\u3002\n\n\n### \u4e71\u6570\u751f\u6210\u5668\n\n\n\n```VHDL\n    process(CLK, RST) begin\n        if (RST = '1') then\n            random_valid  <= FALSE;\n            random_number <= (others => (others => '0'));\n        elsif (CLK'event and CLK = '1') then\n            random_valid  <= status_valid;\n            if (status_valid = TRUE and status_ready = TRUE) then\n                for i in curr_statuses'range loop\n                    random_number(i) <= GENERATE_TEMPER(curr_statuses(i));\n                end loop;\n            end if;\n        end if;\n    end process;\n    status_ready <= ((random_valid = FALSE) or\n                     (random_valid = TRUE  and RND_RDY = '1'));\n\n```\n\n\n\u3053\u3053\u3067\u306f\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u73fe\u5728\u306e\u72b6\u614b\u304b\u3089\u4e71\u6570\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\nrandom_valid\u4fe1\u53f7\u306f\u751f\u6210\u3057\u305f\u4e71\u6570\u304c\u6709\u52b9\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001status_valid\u4fe1\u53f7\u304c\u30a2\u30b5\u30fc\u30c8\u3055\u308c\u305f\u6642\u3064\u307e\u308a\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u304c\u4e71\u6570\u3092\u751f\u6210\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u6642\u3001random_valid\u4fe1\u53f7\u3092\u30a2\u30b5\u30fc\u30c8\u3057\u307e\u3059\u3002\n\nstatus_valid\u4fe1\u53f7\u304c\u30a2\u30b5\u30fc\u30c8\u3055\u308c\u305f\u6642\u3001\u4e71\u6570\u3092\u751f\u6210\u3057\u3066random_number\u30ec\u30b8\u30b9\u30bf\u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u4e71\u6570\u3092\u51fa\u529b\u3057\u3066\u3044\u308b\u72b6\u614b(random_valid\u4fe1\u53f7\u304c\u30a2\u30b5\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u72b6\u614b)\u3067RND_RDY\u4fe1\u53f7\u304c\u30cd\u30b2\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001random_number\u30ec\u30b8\u30b9\u30bf\u306f\u524d\u306e\u4e71\u6570\u306e\u5024\u3092\u4fdd\u6301\u3057\u305f\u307e\u307e\u3001\u6b21\u306e\u4e71\u6570\u306f\u751f\u6210\u3057\u307e\u305b\u3093\u3002\n\n\u6b21\u306e\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3068\u540c\u6642\u306b\u524d\u6bb5\u306e\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u72b6\u614b\u3092\u6b21\u306e\u72b6\u614b\u306b\u66f4\u65b0\u3057\u307e\u3059\u3002status_ready\u4fe1\u53f7\u306f\u305d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u793a\u3057\u307e\u3059\u3002\n\n\n\n\n### \u51fa\u529b\u4fe1\u53f7\u306e\u751f\u6210\n\n\n\n```VHDL\n    RND_VAL <= '1' when (random_valid = TRUE) else '0';\n    RND_NUM_GEN: for i in 0 to L-1 generate\n        RND_NUM(32*(i+1)-1 downto 32*i) <= std_logic_vector(random_number(i));\n    end generate;\n    TBL_RDATA_GEN: for i in 0 to 3 generate\n        TBL_RDATA(32*(i+1)-1 downto 32*i) <= std_logic_vector(curr_statuses(L-1).status(i));\n    end generate;\nend RTL;\n\n```\n\n\n\u3053\u3053\u3067\u306f\u751f\u6210\u3057\u305f\u5185\u90e8\u4fe1\u53f7(random_valid\u4fe1\u53f7\u3001random_number\u30ec\u30b8\u30b9\u30bf)\u304a\u3088\u3073\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306e\u73fe\u5728\u306e\u72b6\u614b\u3092\u5916\u90e8\u30dd\u30fc\u30c8\u306b\u51fa\u529b\u3057\u307e\u3059\u3002\n\n\n\n\n\n\n\n# Simulation\n\n\n## GHDL\u306b\u3088\u308b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\n\n\n### GHDL\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\n\nGHDL\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f0.29\u3067\u3059\u3002\n\nGHDL\u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u306f\u3053\u3061\u3089(http://ghdl.free.fr)\n\n\n### Makefile\n\n\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306b Makefile \u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n```Makefile:Makefile\nGHDL=ghdl\nGHDLFLAGS=--mb-comments\nWORK=XSADD\nTEST_BENCH = test_bench \\\\\n             $(END_LIST)\nall: $(TEST_BENCH)\nclean:\n\trm -f *.o *.cf $(TEST_BENCH)\ntest_bench: xsadd.o xsadd_rand_gen.o test_bench.o \n\t $(GHDL) -e $(GHDLFLAGS) $@\n\t-$(GHDL) -r $(GHDLRUNFLAGS) $@\ntest_bench.o:      ../../src/test/vhdl/test_bench.vhd xsadd_rand_gen.o\n\t$(GHDL) -a $(GHDLFLAGS) --work=work $<\nxsadd.o:           ../../src/main/vhdl/xsadd.vhd\n\t$(GHDL) -a $(GHDLFLAGS) --work=$(WORK) $<\nxsadd_rand_gen.o:  ../../src/main/vhdl/xsadd_rand_gen.vhd xsadd.o\n\t$(GHDL) -a $(GHDLFLAGS) --work=$(WORK) $<\n\n```\n\n\n\n### \u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\n\n\n\n```Shell\n$ cd sim/ghdl\n$ cd make\nghdl -a --mb-comments --work=XSADD ../../src/main/vhdl/xsadd.vhd\nghdl -a --mb-comments --work=XSADD ../../src/main/vhdl/xsadd_rand_gen.vhd\nghdl -a --mb-comments --work=work ../../src/test/vhdl/test_bench.vhd\n../../src/test/vhdl/test_bench.vhd:174:18:warning: function \"to_dec_string\" is never referenced\nghdl -e --mb-comments test_bench\nghdl -r  test_bench\nxsadd_init(1234)\n32-bit unsigned integers r, where 0 <= r < 2^32 \n1823491521 1658333335 1467485721   45623648 \n3336175492 2561136018  181953608  768231638 \n3747468990  633754442 1317015417 2329323117 \n 688642499 1053686614 1029905208 3711673957 \n2701869769  695757698 3819984643 1221024953 \n 110368470 2794248395 2962485574 3345205107 \n 592707216 1730979969 2620763022  670475981 \n1891156367 3882783688 1913420887 1592951790 \n2760991171 1168232321 1650237229 2083267498 \n2743918768 3876980974 2059187728 3236392632 \nxsadd_init([0x0a, 0x0b, 0x0c, 0x0d])\n32-bit unsigned integers r, where 0 <= r < 2^32 \n138a38f9 b396fa84 a55a2ee8 24b7ed06 \nf0bae2fe d8ace1a7 d4b09a3f d7fcf441 \nfc55ee1b 5b4ab585 d4bf254b 5b0f77ba \n31161b97 b21ccc3b ab418bfb 4cc8476a \n06a1a28f cb1f50c6 f0ba2ed3 7907f372 \n3256d76c d843e864 d63a60b7 eff88358 \nddc3b083 b5734b65 f08d644d e5f6c809 \n95bf2ae3 e5867758 f260d462 39d244dc \nb9fbb8d7 63e8f3d9 b34ea936 8fe4ee75 \n8803c8f1 d74e420e a5c14d22 20be253f \n../../src/test/vhdl/test_bench.vhd:373:9:@530ns:(assertion failure):   Run complete...\n./test_bench:error: assertion failed\n./test_bench:error: simulation failed\nMakefile:14: recipe for target 'test_bench' failed\nmake: [test_bench] Error 1 (\u7121\u8996\u3055\u308c\u307e\u3057\u305f)\n```\n\n\n\u6700\u5f8c\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u308b\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u3053\u308c\u306fassert(FALSE)\u3067\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3057\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002\n\n\n\n## Vivado\u306b\u3088\u308b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\n\n\n### Vivado\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\n\nVivado 2015.4\n\n\n### Vivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\n\n\u3059\u3067\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u7701\u7565\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306eTcl\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\nsim/vivado/create_project.tcl\n\n\n\n\u4e0a\u8a18\u306eTcl\u30b9\u30af\u30ea\u30d7\u30c8\u3092Vivado \u3067\u5b9f\u884c\u3059\u308b\u3068\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n\n\nVivado > Tools > Run Tcl Script > create_project.tcl\n\n\n\n\n### \u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\n\n\nVivado > Open Project > xsadd_rand_gen.xpr\n\nFlow Navigator > Run Simulation > Run Behavioral Simulation\n\n\n\n\n# Synthesis and Implementation\n\n\n## Vivado\u306b\u3088\u308b\u8ad6\u7406\u5408\u6210\n\n\n### Vivado\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\n\nVivado 2015.4\n\n\n### Vivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\n\n\u3059\u3067\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u7701\u7565\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306eTcl\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\nfpga/xilinx/vivado2015.4/xsadd_rand_gen/create_project.tcl\n\n\n\n\u4e0a\u8a18\u306eTcl\u30b9\u30af\u30ea\u30d7\u30c8\u3092Vivado \u3067\u5b9f\u884c\u3059\u308b\u3068\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n\n\nVivado > Tools > Run Tcl Script > create_project.tcl\n\n\n\n\u30c7\u30d0\u30a4\u30b9\u306f\u3068\u308a\u3042\u3048\u305axc7a15tcsg324-3\u3092\u6307\u5b9a\u3057\u307e\u3059\u304c\u3001\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\u3001create_project.tcl \u3092\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n\n### Synthesis\n\n\nFlow Navigator > Run Synthesis\n\n\n### Implementation\n\n\nFlow Navigator > Run Implementation\n\n\n\n\n\n## QuartusII\u306b\u3088\u308b\u8ad6\u7406\u5408\u6210\n\n\n### QuartusII\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\n\nQuartus Prime 15.1\n\n\n\n\n### QuartusII\u7528\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\n\nfpga/altera/15.1/xsadd_rand_gen.qpf\n\n\n\n\n\n\n# Acknowledgments\n\n\n\u3053\u306e\u3088\u3046\u306a\u8cb4\u91cd\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u60dc\u3057\u3052\u3082\u306a\u304f\u516c\u958b\u3057\u3066\u304f\u3060\u3055\u3063\u305f\u65b9\u3005\u306b\u306f\u3072\u305f\u3059\u3089\u611f\u8b1d\u3067\u3059\u3002\n\n", "tags": ["VHDL", "HDL", "FPGA", "Random"]}