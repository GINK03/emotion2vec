{"context": "\n\n\u6982\u8981\nSWEST18\u306e\u4f1a\u5834\u3067\u304c\u3058\u3047\u3063\u3068\u30eb\u30cd\u30b5\u30b9\u306eGR-COTTON\u30d7\u30ec\u30bc\u30f3\u30c8\u30ad\u30e3\u30f3\u30da\u30fc\u30f3\u3092\u3057\u3066\u3044\u305f\u306e\u3067Arduino\u30e9\u30a4\u30af\u306a\u958b\u767a\u74b0\u5883\u3092\u89e6\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n \u3068\u308a\u3042\u3048\u305a\u3001\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u306e\u53d7\u4fe1\u6a5f\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002GR-COTTON\u306e\u30da\u30fc\u30b8\u306b\u8d64\u5916\u7dda\u53d7\u4fe1\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u4eba\u306e\u4f5c\u3063\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3060\u3051\u3067\u306f\u3064\u307e\u3089\u306a\u3044\u306e\u3067\u81ea\u524d\u3067\u958b\u767a\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306fNEC\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u8d64\u5916\u7dda\u4fe1\u53f7\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u30b3\u30f3\u30bd\u30ed\u30fc\u30eb\u306b\u51fa\u529b\u3059\u308b\u307e\u3067\u3067\u3059\u3002\n\n\u4f7f\u7528\u6a5f\u6750\n\nGR-COTTON (http://akizukidenshi.com/catalog/g/gK-09867/)\n\u8d64\u5916\u7dda\u53d7\u4fe1\u30b8\u30e5\u30fc\u30eb SPS440-1 (http://akizukidenshi.com/catalog/g/gI-00614/)\n\n\n\u79cb\u6708\u3067\u8cfc\u5165\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u79cb\u6708\u3067\u8cfc\u5165\u3059\u308b\u3068\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u307b\u304b\u306b\u89e3\u8aac\u66f8\u304c\u540c\u68b1\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30d4\u30f3\u914d\u7f6e\u304c\u8aa4\u3063\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u51fa\u529b\u7aef\u5b50\u306f\u53d7\u4fe1\u4fe1\u53f7\u304c\u6709\u308a\u306e\u6642\u306fLow\u3001\u7121\u306e\u6642\u306fHigh\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 \n\n\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3068\u30b1\u30fc\u30d6\u30eb\n\n\n\u53c2\u8003\u306b\u3057\u305fWeb\u30da\u30fc\u30b8\n\n\nGR-COTTON\u95a2\u4fc2\n\n\u30ac\u30b8\u30a7\u30c3\u30c8\u30eb\u30cd\u30b5\u30b9\n\n\nhttp://gadget.renesas.com/ja/\n\u304c\u3058\u3047\u3063\u3068\u30eb\u30cd\u30b5\u30b9\u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u3001Web\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u516c\u958b\u3055\u308c\u3066\u304a\u308a\u30e6\u30fc\u30b6\u767b\u9332\u3059\u308c\u3070\u30ed\u30fc\u30ab\u30eb\u306b\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u7528\u610f\u3057\u306a\u304f\u3066\u3082\u958b\u767a\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306fweb\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n\n\nGR-COTTON\u7279\u8a2d\u30da\u30fc\u30b8\n\n\n\nhttp://gadget.renesas.com/ja/product/cotton_sp1.html \nWeb\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u4f7f\u3044\u65b9\u3084GR-COTTON\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u624b\u9806\u3092\u89e3\u8aac\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n\n\u8d64\u5916\u7dda\u901a\u4fe1\u95a2\u4fc2\n\n\u30eb\u30cd\u30b5\u30b9\u306e\u8d64\u5916\u7dda\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u89e3\u8aac \n\n\nhttps://support.renesas.com/hc/ja/articles/210901268\nNEC\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u958b\u767a\u5143\u306b\u3088\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u89e3\u8aac\u3067\u3059\u3002\u6b63\u898f\u306e\u898f\u683c\u66f8\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u5e73\u6613\u306b\u89e3\u8aac\u3055\u308c\u305f\u8a18\u4e8b\u3060\u3068\u601d\u3044\u307e\u3059\n\n\nArduino\u3067\u904a\u3076\u30da\u30fc\u30b8\u3055\u3093\u306e\u89e3\u8aac\n\n\nhttp://garretlab.web.fc2.com/arduino/make/infrared_sensor_nec_format/\n\u3053\u3061\u3089\u3082\u826f\u304f\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u8a18\u4e8b\u3067\u3059\u3002\n\n\n\n\n\n\n\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u69cb\u6210\n\u8d64\u5916\u7dda\u53d7\u4fe1\u30b8\u30e5\u30fc\u30eb(SPS440-1)\u3092\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u306b\u5b9f\u88c5\u3057\u3066\u3001\u914d\u7dda\u3092\u753b\u50cf\u306e\u3088\u3046\u306b\u63a5\u7d9a\u3057\u307e\u3057\u305f\u3002\u79cb\u6708\u304c\u540c\u68b1\u3057\u3066\u3044\u308b\u89e3\u8aac\u66f8\u3067\u306f\u53f3\u304b\u3089GND\u3001\u4fe1\u53f7\u51fa\u529b\u3001Vcc\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u5b9f\u7269\u306f\u53f3\u304b\u3089Vcc\u3001\u4fe1\u53f7\u51fa\u529b\u3001GND\u3067\u3059\u3002Vcc\u306b\u306f5V\u3092\u4f9b\u7d66\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nGR-COTTON\u3068\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u63a5\u7d9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u96fb\u6e90\u306f5V\u51fa\u529b\u3001\u4fe1\u53f7\u7dda\u306f6\u756a\u30d4\u30f3\u306b\u63a5\u7d9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u53d7\u4fe1\u30c7\u30fc\u30bf\u306e\u30c7\u30fc\u30bf\u5e45\u3092\u8a08\u6e2c\u3057\u3066\u898f\u5b9a\u5024\u306b\u53ce\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u306e\u307f\u53d7\u4fe1\u30c7\u30fc\u30bf\u3092\u30b3\u30f3\u30bd\u30ed\u30fc\u30eb\u306b\u51fa\u529b\u3057\u307e\u3059\u3002\nSPS440-1\u306f\u53d7\u4fe1\u4fe1\u53f7\u304c\u6709\u308b\u6642\u306b\u306fLow\u3001\u7121\u3044\u6642\u306b\u306fHigh\u3092\u51fa\u529b\u3057\u307e\u3059\u3002SPS440-1\u306e\u9006\u76f8\u51fa\u529b\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u5834\u5408\u306fR_LOW\u3001R_HIGH\u306edefine\u6587\u3092\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\nir_read.c\n\ufeff/*GR-COTTON Sketch Template Version: V1.01*/\n#include <Arduino.h>\n\n#define RCV_PIN 6\n#define R_LED 22\n#define G_LED 23\n#define B_LED 24\n#define R_LOW 1\n#define R_HIGH 0\n#define D_T 562 //\u30c7\u30fc\u30bf\u4fe1\u53f7\u306e\u5358\u4f4d\u5e45 (562us)\n#define D_T_HALF 281 //281us\n#define BIT_1_LOW_W (D_T*3)\n#define BIT_0_LOW_W D_T\n\nvoid setup(){\n  Serial.begin(9600);\n  pinMode(RCV_PIN,INPUT);\n  pinMode(R_LED,OUTPUT);\n  pinMode(G_LED,OUTPUT);\n  pinMode(B_LED,OUTPUT);\n  digitalWrite(G_LED, HIGH);\n  digitalWrite(B_LED, HIGH);\n  digitalWrite(R_LED, HIGH);\n}\n\n#define INF_ERROR 0\n#define INF_OK 1  \n\n//NEC\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u4fe1\u53f71bit\u53d7\u4fe1\u53d7\u4fe1\u3059\u308b\nunsigned int inf_rcv_bit(unsigned long *edge_time, unsigned char *r_bit) {\n  unsigned long edge_low, low_width, time_out, current;\n  unsigned int rcv_data;\n\n\n  //\u4ed5\u69d8\u3067\u306fHIGH\u4fe1\u53f7\u3092D_T(0.56ms)\u53d7\u4fe1\u3059\u308b\n  //  \u30de\u30fc\u30b8\u30f3\u3092\u3068\u3063\u3066D_T+D_T_HALF\u4ee5\u4e0aHIGH\n  //  \u53d7\u4fe1\u3057\u305f\u3089\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5224\u5b9a\u3059\u308b\n  time_out = *edge_time + D_T + D_T_HALF;\n\n  while(micros() < time_out){\n    if(digitalRead(RCV_PIN) == R_LOW ){\n        edge_low = micros();\n        //HIGH\u4fe1\u53f7\u3092D_T_HALF\u4ee5\u4e0a\u306e\u671f\u9593\u53d7\u4fe1\u3057\u305f\u3089LOW\u533a\u9593\u8a08\u6e2c\u306b\u79fb\u308b\n        if((edge_low - *edge_time) > D_T_HALF){\n          break;\n        }\n        else{\n            //HIGH\u4fe1\u53f7\u304cD_T_HALF\u672a\u6e80\u306e\u6642\u9593\u3067LOW\u306b\u306a\u3063\u305f\u3089\u30a8\u30e9\u30fc\n            return INF_ERROR;\n        }\n    }\n  }\n\n  //\u4ed5\u69d8\u4e0aLOW\u533a\u9593\u306fBIT_1_LOW_W(1.685ms)\u4ee5\u4e0a\u306f\u7d99\u7d9a\u3057\u306a\u3044\n  //  \u30de\u30fc\u30b8\u30f3\u3092\u3068\u3063\u3066BIT_1_LOW_W+D_T_HALF\u4ee5\u4e0a\u306eLOW\u4fe1\u53f7\u3092\n  //  \u53d7\u4fe1\u3057\u305f\u3089\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5224\u5b9a\u3059\u308b\n  time_out = edge_low + BIT_1_LOW_W + D_T_HALF;\n  while(micros() < time_out){\n    if (digitalRead(RCV_PIN) == R_HIGH) {\n      *edge_time = micros();\n      break;\n    }\n  }\n\n  low_width = *edge_time - edge_low;\n\n  if(low_width < (D_T + D_T_HALF)){\n    *r_bit = 0x00;\n\n  }\n  else{\n    *r_bit = 0x80;\n  }\n  return INF_OK;\n}\n\n//\u30b7\u30ea\u30a2\u30eb\u4fe1\u53f7\u30928bit\u30d1\u30e9\u30ec\u30eb\u306b\u5909\u63db\nunsigned int inf_rcv_byte(unsigned long *edge_time, unsigned char* rcv_byte) {\n  unsigned long current;\n  unsigned char r_byte, r_bit;\n  unsigned int rcv_data, i, status;\n\n  r_byte = 0;\n\n  for(i=0;i<8;i++){\n    status = inf_rcv_bit(edge_time, &r_bit);\n    r_byte = (r_byte>>1) | r_bit;\n    if(status == INF_ERROR) return INF_ERROR;\n  }\n  *rcv_byte = r_byte;\n  return INF_OK;\n}\n\n//\u6b63\u76f8\u3068\u9006\u8d70\u306e\u30c7\u30fc\u30bf\u30b3\u30fc\u30c9\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\nunsigned int inf_rcv_byte_with_check(unsigned long *edge_time, unsigned char *rcv_byte) {\n    unsigned char r_byte, r_byte_n, status;\n\n    r_byte = r_byte_n = 0;\n    status = INF_OK;\n\n    status &= inf_rcv_byte(edge_time, &r_byte);\n    status &= inf_rcv_byte(edge_time, &r_byte_n);\n\n    if(status == INF_ERROR) return INF_ERROR;\n\n    if(r_byte != (~r_byte_n & 0xFF)){\n        //for debug\n        Serial.print(\"Error: recived data don't match check code(\");\n        Serial.print(r_byte, HEX);\n        Serial.print(\",\");\n        Serial.print(r_byte_n, HEX);\n        Serial.print(\")\\n\");\n        return INF_ERROR;\n    }\n    *rcv_byte =  r_byte;\n    return INF_OK;\n}\n\nvoid wait_1ms(unsigned long *edge_time){\n    while(micros() < (*edge_time+500));\n    *edge_time += 1000; \n}\n\n\n#define READER_HIGH_W 9000\n#define READER_LOW_W 4500\n#define READER_MARGIN 500\n\n//\u4fe1\u53f7\u304c\u30ea\u30fc\u30c0\u30fc\u30b3\u30fc\u30c9\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n//  \u30ea\u30fc\u30c0\u30fc\u30b3\u30fc\u30c9\u306e\u5834\u5408\u306ftrue\u3092\u8fd4\u3059\nboolean check_reader(unsigned long *edge_time){\n  unsigned long time_out, width, current, low_edge;\n  current = *edge_time;\n  //wait high\n  time_out = current + READER_HIGH_W + READER_MARGIN;\n  //HIGH\u4fe1\u53f7\u306e\u671f\u9593\u3092\u8a08\u6e2c\n  while((digitalRead(RCV_PIN) == R_HIGH) && (micros() < time_out));\n  low_edge = micros();\n  width = low_edge - *edge_time;\n\n  //\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u305f\u304bHIGH\u4fe1\u53f7\u306e\u671f\u9593\u304c\u77ed\u3044\u3068\u30ea\u30d4\u30fc\u30c8\u3067\u306f\u306a\u3044\u3002\n  if ((digitalRead(RCV_PIN) == R_HIGH) || width < (READER_HIGH_W - READER_MARGIN))\n    return false;\n\n  //wait low\n  time_out = low_edge + READER_LOW_W +READER_MARGIN;\n  while((digitalRead(RCV_PIN) == R_LOW) && (micros() < time_out));\n  current = micros();\n  width = current - low_edge;\n  if ((digitalRead(RCV_PIN) == R_LOW) || width < (READER_LOW_W - READER_MARGIN)) \n    return false;\n\n  *edge_time = current;\n  return true;\n}\n\nunsigned int inf_rcv_data(unsigned long *start_time, unsigned char *rcv_code){\n    unsigned int status;\n\n    status = inf_rcv_byte(start_time, rcv_code+2);\n    if(status == INF_ERROR) return INF_ERROR;\n    status = inf_rcv_byte(start_time, rcv_code+1);\n    if(status == INF_ERROR) return INF_ERROR;\n    status = inf_rcv_byte_with_check(start_time, rcv_code);\n    if(status == INF_ERROR) return INF_ERROR;\n}\n\nvoid print_code(unsigned char *rcv_code){\n    Serial.print(\"Customer code = \");\n    Serial.print(rcv_code[2], HEX);\n    Serial.print(rcv_code[1], HEX);\n    Serial.print(\"\\ndata = \");\n    Serial.print(rcv_code[0], HEX);\n    Serial.print(\"\\n\");\n}\n\n\nvoid loop() {\n    unsigned long wait_count;\n    unsigned long edge_det_time;\n    unsigned long next_time;\n    unsigned char status;\n    unsigned char rcv_data[3] = {0,0};\n\n    if(digitalRead(RCV_PIN) == R_HIGH){\n        edge_det_time = micros();\n        if(check_reader(&edge_det_time)){\n            if(inf_rcv_data(&edge_det_time, rcv_data) == INF_OK){\n              print_code(rcv_data);\n            }\n        }\n        //\u53d7\u4fe1\u4fe1\u53f7\u304cLOW\u306b\u306a\u308b\u306e\u3092\u5f85\u3064\n        while(digitalRead(RCV_PIN) == R_HIGH);\n    }\n\n}\n\n\n\n\u5b9f\u884c\u4f8b\nKurumi Write\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u8fbc\u3093\u3067Serial Monito\u306eOpen\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u8d64\u5916\u7dda\u4fe1\u53f7\u304c\u53d7\u4fe1\u6e96\u5099\u304c\u5b8c\u4e86\u3057\u307e\u3059\u3002NEC\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u8d64\u5916\u7dda\u4fe1\u53f7\u3092\u53d7\u4fe1\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u51fa\u529b\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u753b\u50cf\u306e\u4f8b\u306f\u6771\u829d\u306e\u30c6\u30ec\u30d3\u30ea\u30e2\u30b3\u30f3\u3067\u8a66\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\n\nArduino\u306a\u958b\u767a\u74b0\u5883\u3092\u4f7f\u3063\u3066\u307f\u3066\n\u500b\u4eba\u7684\u306b\u304c\u3058\u3047\u3063\u3068\u30eb\u30cd\u30b5\u30b9\u7cfb\u306e\u30dc\u30fc\u30c9\u306f\u5927\u91cf\u306b\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304cArduino\u306a\u958b\u767a\u74b0\u5883\u3092\u4f7f\u3063\u3066\u307f\u305f\u306e\u306f\u521d\u3081\u3066\u3067\u3057\u305f\u3002\n\u4f7f\u3063\u3066\u307f\u305f\u611f\u60f3\u3068\u3057\u3066\u306f\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u30eb\u30fc\u30c1\u30f3\u3084IO\u306e\u521d\u671f\u5316\u7b49\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u5b9f\u969b\u306b\u52d5\u304b\u3059\u307e\u3067\u306e\u671f\u9593\u304c\u77ed\u304f\u6e08\u3080\u306e\u306f\u3044\u3044\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u306e\u3088\u3046\u306a\u8907\u96d1\u306a\u51e6\u7406\u3084\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u7d30\u304b\u304f\u64cd\u4f5c\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u9762\u5012\u306b\u306a\u308b\u6c17\u304c\u3057\u307e\u3059\u3002(\u3053\u308c\u306f\u79c1\u304cArduino\u306e\u4f7f\u3044\u65b9\u3092\u7406\u89e3\u3067\u304d\u3066\u306a\u3044\u3060\u3051\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c)\n\u3042\u3068\u3001\u3069\u3046\u3067\u3082\u826f\u3044\u611f\u60f3\u3067\u3059\u304cArudino\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u308b\u3068\u3001\u30e9\u30c0\u30fc\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u305f\u3053\u308d\u3092\u601d\u3044\u51fa\u3057\u307e\u3057\u305f\u3002\n\u73fe\u5728\u306fRX\u5411\u3051\u306etoppers\u3067\u624b\u4e00\u676f\u306a\u306e\u3067\u7a4d\u6975\u7684\u306b\u89e6\u308b\u306e\u306f\u96e3\u3057\u3044\u3067\u3059\u304c\u3001\u6642\u9593\u304c\u3067\u304d\u308c\u3070\u3082\u3046\u5c11\u3057\u89e6\u3063\u3066\u884c\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u6982\u8981\n SWEST18\u306e\u4f1a\u5834\u3067\u304c\u3058\u3047\u3063\u3068\u30eb\u30cd\u30b5\u30b9\u306eGR-COTTON\u30d7\u30ec\u30bc\u30f3\u30c8\u30ad\u30e3\u30f3\u30da\u30fc\u30f3\u3092\u3057\u3066\u3044\u305f\u306e\u3067Arduino\u30e9\u30a4\u30af\u306a\u958b\u767a\u74b0\u5883\u3092\u89e6\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n \u3068\u308a\u3042\u3048\u305a\u3001\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u306e\u53d7\u4fe1\u6a5f\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002GR-COTTON\u306e\u30da\u30fc\u30b8\u306b\u8d64\u5916\u7dda\u53d7\u4fe1\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u4eba\u306e\u4f5c\u3063\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3060\u3051\u3067\u306f\u3064\u307e\u3089\u306a\u3044\u306e\u3067\u81ea\u524d\u3067\u958b\u767a\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306fNEC\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u8d64\u5916\u7dda\u4fe1\u53f7\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u30b3\u30f3\u30bd\u30ed\u30fc\u30eb\u306b\u51fa\u529b\u3059\u308b\u307e\u3067\u3067\u3059\u3002\n\n# \u4f7f\u7528\u6a5f\u6750\n  - GR-COTTON (http://akizukidenshi.com/catalog/g/gK-09867/)\n  - \u8d64\u5916\u7dda\u53d7\u4fe1\u30b8\u30e5\u30fc\u30eb SPS440-1 (http://akizukidenshi.com/catalog/g/gI-00614/)\n    - \u79cb\u6708\u3067\u8cfc\u5165\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u79cb\u6708\u3067\u8cfc\u5165\u3059\u308b\u3068\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u307b\u304b\u306b\u89e3\u8aac\u66f8\u304c\u540c\u68b1\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30d4\u30f3\u914d\u7f6e\u304c\u8aa4\u3063\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n    - \u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u51fa\u529b\u7aef\u5b50\u306f\u53d7\u4fe1\u4fe1\u53f7\u304c\u6709\u308a\u306e\u6642\u306fLow\u3001\u7121\u306e\u6642\u306fHigh\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 \n  - \u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3068\u30b1\u30fc\u30d6\u30eb\n  \n# \u53c2\u8003\u306b\u3057\u305fWeb\u30da\u30fc\u30b8\n - GR-COTTON\u95a2\u4fc2\n    - \u30ac\u30b8\u30a7\u30c3\u30c8\u30eb\u30cd\u30b5\u30b9\n        - http://gadget.renesas.com/ja/\n        - \u304c\u3058\u3047\u3063\u3068\u30eb\u30cd\u30b5\u30b9\u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u3001Web\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u516c\u958b\u3055\u308c\u3066\u304a\u308a\u30e6\u30fc\u30b6\u767b\u9332\u3059\u308c\u3070\u30ed\u30fc\u30ab\u30eb\u306b\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u7528\u610f\u3057\u306a\u304f\u3066\u3082\u958b\u767a\u3067\u304d\u307e\u3059\u3002\n        - \u4eca\u56de\u306fweb\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n    - GR-COTTON\u7279\u8a2d\u30da\u30fc\u30b8\n        - http://gadget.renesas.com/ja/product/cotton_sp1.html \n        - Web\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u4f7f\u3044\u65b9\u3084GR-COTTON\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u624b\u9806\u3092\u89e3\u8aac\u3057\u3066\u3044\u307e\u3059\u3002\n        \n - \u8d64\u5916\u7dda\u901a\u4fe1\u95a2\u4fc2\n    - \u30eb\u30cd\u30b5\u30b9\u306e\u8d64\u5916\u7dda\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u89e3\u8aac \n        - https://support.renesas.com/hc/ja/articles/210901268\n        - NEC\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u958b\u767a\u5143\u306b\u3088\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u89e3\u8aac\u3067\u3059\u3002\u6b63\u898f\u306e\u898f\u683c\u66f8\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u5e73\u6613\u306b\u89e3\u8aac\u3055\u308c\u305f\u8a18\u4e8b\u3060\u3068\u601d\u3044\u307e\u3059\n    - Arduino\u3067\u904a\u3076\u30da\u30fc\u30b8\u3055\u3093\u306e\u89e3\u8aac\n        - http://garretlab.web.fc2.com/arduino/make/infrared_sensor_nec_format/\n        - \u3053\u3061\u3089\u3082\u826f\u304f\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u8a18\u4e8b\u3067\u3059\u3002\n\n# \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u69cb\u6210\n\u8d64\u5916\u7dda\u53d7\u4fe1\u30b8\u30e5\u30fc\u30eb(SPS440-1)\u3092\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u306b\u5b9f\u88c5\u3057\u3066\u3001\u914d\u7dda\u3092\u753b\u50cf\u306e\u3088\u3046\u306b\u63a5\u7d9a\u3057\u307e\u3057\u305f\u3002\u79cb\u6708\u304c\u540c\u68b1\u3057\u3066\u3044\u308b\u89e3\u8aac\u66f8\u3067\u306f\u53f3\u304b\u3089GND\u3001\u4fe1\u53f7\u51fa\u529b\u3001Vcc\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u5b9f\u7269\u306f\u53f3\u304b\u3089Vcc\u3001\u4fe1\u53f7\u51fa\u529b\u3001GND\u3067\u3059\u3002Vcc\u306b\u306f5V\u3092\u4f9b\u7d66\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n![senser.jpg](https://qiita-image-store.s3.amazonaws.com/0/81077/da770baa-2732-8c79-a85b-6f450cf4e3cd.jpeg)\nGR-COTTON\u3068\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u63a5\u7d9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u96fb\u6e90\u306f5V\u51fa\u529b\u3001\u4fe1\u53f7\u7dda\u306f6\u756a\u30d4\u30f3\u306b\u63a5\u7d9a\u3057\u3066\u3044\u307e\u3059\u3002\n![cotton.jpg](https://qiita-image-store.s3.amazonaws.com/0/81077/8e1e523c-9ce5-1e6e-3627-113193d4f7e0.jpeg)\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u53d7\u4fe1\u30c7\u30fc\u30bf\u306e\u30c7\u30fc\u30bf\u5e45\u3092\u8a08\u6e2c\u3057\u3066\u898f\u5b9a\u5024\u306b\u53ce\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u306e\u307f\u53d7\u4fe1\u30c7\u30fc\u30bf\u3092\u30b3\u30f3\u30bd\u30ed\u30fc\u30eb\u306b\u51fa\u529b\u3057\u307e\u3059\u3002\nSPS440-1\u306f\u53d7\u4fe1\u4fe1\u53f7\u304c\u6709\u308b\u6642\u306b\u306fLow\u3001\u7121\u3044\u6642\u306b\u306fHigh\u3092\u51fa\u529b\u3057\u307e\u3059\u3002SPS440-1\u306e\u9006\u76f8\u51fa\u529b\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u5834\u5408\u306fR_LOW\u3001R_HIGH\u306edefine\u6587\u3092\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n```c:ir_read.c\n\ufeff/*GR-COTTON Sketch Template Version: V1.01*/\n#include <Arduino.h>\n\n#define RCV_PIN 6\n#define R_LED 22\n#define G_LED 23\n#define B_LED 24\n#define R_LOW 1\n#define R_HIGH 0\n#define D_T 562 //\u30c7\u30fc\u30bf\u4fe1\u53f7\u306e\u5358\u4f4d\u5e45 (562us)\n#define D_T_HALF 281 //281us\n#define BIT_1_LOW_W (D_T*3)\n#define BIT_0_LOW_W D_T\n \nvoid setup(){\n  Serial.begin(9600);\n  pinMode(RCV_PIN,INPUT);\n  pinMode(R_LED,OUTPUT);\n  pinMode(G_LED,OUTPUT);\n  pinMode(B_LED,OUTPUT);\n  digitalWrite(G_LED, HIGH);\n  digitalWrite(B_LED, HIGH);\n  digitalWrite(R_LED, HIGH);\n}\n \n#define INF_ERROR 0\n#define INF_OK 1  \n \n//NEC\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u4fe1\u53f71bit\u53d7\u4fe1\u53d7\u4fe1\u3059\u308b\nunsigned int inf_rcv_bit(unsigned long *edge_time, unsigned char *r_bit) {\n  unsigned long edge_low, low_width, time_out, current;\n  unsigned int rcv_data;\n  \n  \n  //\u4ed5\u69d8\u3067\u306fHIGH\u4fe1\u53f7\u3092D_T(0.56ms)\u53d7\u4fe1\u3059\u308b\n  //  \u30de\u30fc\u30b8\u30f3\u3092\u3068\u3063\u3066D_T+D_T_HALF\u4ee5\u4e0aHIGH\n  //  \u53d7\u4fe1\u3057\u305f\u3089\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5224\u5b9a\u3059\u308b\n  time_out = *edge_time + D_T + D_T_HALF;\n  \n  while(micros() < time_out){\n  \tif(digitalRead(RCV_PIN) == R_LOW ){\n  \t\tedge_low = micros();\n  \t\t//HIGH\u4fe1\u53f7\u3092D_T_HALF\u4ee5\u4e0a\u306e\u671f\u9593\u53d7\u4fe1\u3057\u305f\u3089LOW\u533a\u9593\u8a08\u6e2c\u306b\u79fb\u308b\n  \t\tif((edge_low - *edge_time) > D_T_HALF){\n  \t\t  break;\n  \t\t}\n  \t\telse{\n  \t\t\t//HIGH\u4fe1\u53f7\u304cD_T_HALF\u672a\u6e80\u306e\u6642\u9593\u3067LOW\u306b\u306a\u3063\u305f\u3089\u30a8\u30e9\u30fc\n  \t\t\treturn INF_ERROR;\n  \t\t}\n  \t}\n  }\n  \n  //\u4ed5\u69d8\u4e0aLOW\u533a\u9593\u306fBIT_1_LOW_W(1.685ms)\u4ee5\u4e0a\u306f\u7d99\u7d9a\u3057\u306a\u3044\n  //  \u30de\u30fc\u30b8\u30f3\u3092\u3068\u3063\u3066BIT_1_LOW_W+D_T_HALF\u4ee5\u4e0a\u306eLOW\u4fe1\u53f7\u3092\n  //  \u53d7\u4fe1\u3057\u305f\u3089\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5224\u5b9a\u3059\u308b\n  time_out = edge_low + BIT_1_LOW_W + D_T_HALF;\n  while(micros() < time_out){\n    if (digitalRead(RCV_PIN) == R_HIGH) {\n      *edge_time = micros();\n      break;\n    }\n  }\n  \n  low_width = *edge_time - edge_low;\n  \n  if(low_width < (D_T + D_T_HALF)){\n  \t*r_bit = 0x00;\n\n  }\n  else{\n  \t*r_bit = 0x80;\n  }\n  return INF_OK;\n}\n\n//\u30b7\u30ea\u30a2\u30eb\u4fe1\u53f7\u30928bit\u30d1\u30e9\u30ec\u30eb\u306b\u5909\u63db\nunsigned int inf_rcv_byte(unsigned long *edge_time, unsigned char* rcv_byte) {\n  unsigned long current;\n  unsigned char r_byte, r_bit;\n  unsigned int rcv_data, i, status;\n  \n  r_byte = 0;\n  \n  for(i=0;i<8;i++){\n  \tstatus = inf_rcv_bit(edge_time, &r_bit);\n  \tr_byte = (r_byte>>1) | r_bit;\n  \tif(status == INF_ERROR) return INF_ERROR;\n  }\n  *rcv_byte = r_byte;\n  return INF_OK;\n}\n\n//\u6b63\u76f8\u3068\u9006\u8d70\u306e\u30c7\u30fc\u30bf\u30b3\u30fc\u30c9\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\nunsigned int inf_rcv_byte_with_check(unsigned long *edge_time, unsigned char *rcv_byte) {\n\tunsigned char r_byte, r_byte_n, status;\n\t\n\tr_byte = r_byte_n = 0;\n    status = INF_OK;\n    \n    status &= inf_rcv_byte(edge_time, &r_byte);\n\tstatus &= inf_rcv_byte(edge_time, &r_byte_n);\n\t\n\tif(status == INF_ERROR) return INF_ERROR;\n\t\n\tif(r_byte != (~r_byte_n & 0xFF)){\n\t\t//for debug\n\t\tSerial.print(\"Error: recived data don't match check code(\");\n\t\tSerial.print(r_byte, HEX);\n\t\tSerial.print(\",\");\n\t\tSerial.print(r_byte_n, HEX);\n\t\tSerial.print(\")\\n\");\n\t\treturn INF_ERROR;\n\t}\n\t*rcv_byte =  r_byte;\n\treturn INF_OK;\n}\n\nvoid wait_1ms(unsigned long *edge_time){\n\twhile(micros() < (*edge_time+500));\n\t*edge_time += 1000; \n}\n\n\n#define READER_HIGH_W 9000\n#define READER_LOW_W 4500\n#define READER_MARGIN 500\n\n//\u4fe1\u53f7\u304c\u30ea\u30fc\u30c0\u30fc\u30b3\u30fc\u30c9\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n//  \u30ea\u30fc\u30c0\u30fc\u30b3\u30fc\u30c9\u306e\u5834\u5408\u306ftrue\u3092\u8fd4\u3059\nboolean check_reader(unsigned long *edge_time){\n  unsigned long time_out, width, current, low_edge;\n  current = *edge_time;\n  //wait high\n  time_out = current + READER_HIGH_W + READER_MARGIN;\n  //HIGH\u4fe1\u53f7\u306e\u671f\u9593\u3092\u8a08\u6e2c\n  while((digitalRead(RCV_PIN) == R_HIGH) && (micros() < time_out));\n  low_edge = micros();\n  width = low_edge - *edge_time;\n  \n  //\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u305f\u304bHIGH\u4fe1\u53f7\u306e\u671f\u9593\u304c\u77ed\u3044\u3068\u30ea\u30d4\u30fc\u30c8\u3067\u306f\u306a\u3044\u3002\n  if ((digitalRead(RCV_PIN) == R_HIGH) || width < (READER_HIGH_W - READER_MARGIN))\n    return false;\n  \n  //wait low\n  time_out = low_edge + READER_LOW_W +READER_MARGIN;\n  while((digitalRead(RCV_PIN) == R_LOW) && (micros() < time_out));\n  current = micros();\n  width = current - low_edge;\n  if ((digitalRead(RCV_PIN) == R_LOW) || width < (READER_LOW_W - READER_MARGIN)) \n    return false;\n  \n  *edge_time = current;\n  return true;\n}\n\nunsigned int inf_rcv_data(unsigned long *start_time, unsigned char *rcv_code){\n\tunsigned int status;\n\t\n\tstatus = inf_rcv_byte(start_time, rcv_code+2);\n\tif(status == INF_ERROR) return INF_ERROR;\n\tstatus = inf_rcv_byte(start_time, rcv_code+1);\n\tif(status == INF_ERROR) return INF_ERROR;\n\tstatus = inf_rcv_byte_with_check(start_time, rcv_code);\n\tif(status == INF_ERROR) return INF_ERROR;\n}\n\nvoid print_code(unsigned char *rcv_code){\n\tSerial.print(\"Customer code = \");\n\tSerial.print(rcv_code[2], HEX);\n\tSerial.print(rcv_code[1], HEX);\n\tSerial.print(\"\\ndata = \");\n\tSerial.print(rcv_code[0], HEX);\n\tSerial.print(\"\\n\");\n}\n \n \nvoid loop() {\n\tunsigned long wait_count;\n\tunsigned long edge_det_time;\n\tunsigned long next_time;\n\tunsigned char status;\n\tunsigned char rcv_data[3] = {0,0};\n\t\n\tif(digitalRead(RCV_PIN) == R_HIGH){\n\t\tedge_det_time = micros();\n\t\tif(check_reader(&edge_det_time)){\n\t\t\tif(inf_rcv_data(&edge_det_time, rcv_data) == INF_OK){\n\t\t\t  print_code(rcv_data);\n\t\t\t}\n\t\t}\n\t    //\u53d7\u4fe1\u4fe1\u53f7\u304cLOW\u306b\u306a\u308b\u306e\u3092\u5f85\u3064\n\t\twhile(digitalRead(RCV_PIN) == R_HIGH);\n\t}\n\t\n}\n```\n# \u5b9f\u884c\u4f8b\nKurumi Write\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u8fbc\u3093\u3067Serial Monito\u306eOpen\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u8d64\u5916\u7dda\u4fe1\u53f7\u304c\u53d7\u4fe1\u6e96\u5099\u304c\u5b8c\u4e86\u3057\u307e\u3059\u3002NEC\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u8d64\u5916\u7dda\u4fe1\u53f7\u3092\u53d7\u4fe1\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u51fa\u529b\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u753b\u50cf\u306e\u4f8b\u306f\u6771\u829d\u306e\u30c6\u30ec\u30d3\u30ea\u30e2\u30b3\u30f3\u3067\u8a66\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n![ir_result.png](https://qiita-image-store.s3.amazonaws.com/0/81077/16af990d-742e-12ba-9bae-72c01cd97725.png)\n\n# Arduino\u306a\u958b\u767a\u74b0\u5883\u3092\u4f7f\u3063\u3066\u307f\u3066\n \u500b\u4eba\u7684\u306b\u304c\u3058\u3047\u3063\u3068\u30eb\u30cd\u30b5\u30b9\u7cfb\u306e\u30dc\u30fc\u30c9\u306f\u5927\u91cf\u306b\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304cArduino\u306a\u958b\u767a\u74b0\u5883\u3092\u4f7f\u3063\u3066\u307f\u305f\u306e\u306f\u521d\u3081\u3066\u3067\u3057\u305f\u3002\n\u4f7f\u3063\u3066\u307f\u305f\u611f\u60f3\u3068\u3057\u3066\u306f\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u30eb\u30fc\u30c1\u30f3\u3084IO\u306e\u521d\u671f\u5316\u7b49\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u5b9f\u969b\u306b\u52d5\u304b\u3059\u307e\u3067\u306e\u671f\u9593\u304c\u77ed\u304f\u6e08\u3080\u306e\u306f\u3044\u3044\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u306e\u3088\u3046\u306a\u8907\u96d1\u306a\u51e6\u7406\u3084\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u7d30\u304b\u304f\u64cd\u4f5c\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u9762\u5012\u306b\u306a\u308b\u6c17\u304c\u3057\u307e\u3059\u3002(\u3053\u308c\u306f\u79c1\u304cArduino\u306e\u4f7f\u3044\u65b9\u3092\u7406\u89e3\u3067\u304d\u3066\u306a\u3044\u3060\u3051\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c)\n\u3042\u3068\u3001\u3069\u3046\u3067\u3082\u826f\u3044\u611f\u60f3\u3067\u3059\u304cArudino\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u308b\u3068\u3001\u30e9\u30c0\u30fc\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u305f\u3053\u308d\u3092\u601d\u3044\u51fa\u3057\u307e\u3057\u305f\u3002\n\n\u73fe\u5728\u306fRX\u5411\u3051\u306etoppers\u3067\u624b\u4e00\u676f\u306a\u306e\u3067\u7a4d\u6975\u7684\u306b\u89e6\u308b\u306e\u306f\u96e3\u3057\u3044\u3067\u3059\u304c\u3001\u6642\u9593\u304c\u3067\u304d\u308c\u3070\u3082\u3046\u5c11\u3057\u89e6\u3063\u3066\u884c\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["\u7d44\u307f\u8fbc\u307f"]}