{"context": "\u4eca\u66f4\u3067\u3059\u304cJava8\u3089\u3057\u3044\u30b3\u30fc\u30c9\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u305f\u3044\u306a\u30fc\u3068\u601d\u3063\u305f\u306e\u3067\u3055\u308f\u308a\u306e\u90e8\u5206\u8efd\u304f\u307e\u3068\u3081\u3066\u307f\u307e\u3059\u3002\n\nJava8\u306e\u4e3b\u306a\u65b0\u6a5f\u80fd\n\n\u30e9\u30e0\u30c0\u5f0f\n\u30e1\u30bd\u30c3\u30c9\u53c2\u7167\nStream API\n\n\u4eca\u56de\u306fStream API\u306b\u3064\u3044\u3066\n\u30e9\u30e0\u30c0\u5f0f\u3092\u77e5\u3089\u306a\u3044\u65b9\u306f\u307e\u305a\u306f\u30e9\u30e0\u30c0\u5f0f\u306e\u8a18\u4e8b\u3092\u898b\u3066\u30a4\u30e1\u30fc\u30b8\u3092\u6301\u3063\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\nStream API\n\u3053\u3053\u3067\u3044\u3046\uff62Stream(\u30b9\u30c8\u30ea\u30fc\u30e0)\uff63\u3068\u306f\u4f55\u3067\u3057\u3087\u3046\u304b\uff1f\ne-words\u306b\u3088\u308b\u3068\n\n\u30b9\u30c8\u30ea\u30fc\u30e0\u3068\u306f\u3001\u5c0f\u5ddd\u3001\u6d41\u308c\u3001\u9023\u7d9a\u306a\u3069\u306e\u610f\u5473\u3092\u6301\u3064\u82f1\u5358\u8a9e\u3067\u3001IT\u306e\u5206\u91ce\u3067\u306f\u9023\u7d9a\u3057\u305f\u30c7\u30fc\u30bf\u306e\u6d41\u308c\u3084\u3001\u30c7\u30fc\u30bf\u306e\u9001\u53d7\u4fe1\u3084\u51e6\u7406\u3092\u9023\u7d9a\u7684\u306b\u884c\u3046\u3053\u3068\u306a\u3069\u3092\u610f\u5473\u3059\u308b\u3002\n\nJava SE 8\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f7f\u7528\u3057\u305f\u30c7\u30fc\u30bf\u51e6\u7406\u3001\u30d1\u30fc\u30c81\u3067\u306f\n\n\u30bd\u30fc\u30b9\u304b\u3089\u53d6\u5f97\u3057\u305f\u4e00\u9023\u306e\u8981\u7d20\u3067\u3042\u308a\u3001\u96c6\u8a08\u64cd\u4f5c\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3082\u306e\n\n\u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u30d1\u30c3\u30b1\u30fc\u30b8java.util.stream\u3067\u306f\n\u96c6\uff62\u8a08\uff63\u64cd\u4f5c\u3092\u96c6\uff62\u7d04\uff63\u64cd\u4f5c\u3068\u547c\u3093\u3067\u3044\u307e\u3059\u3002\n\u4e00\u822c\u7684\u306a\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u64cd\u4f5c\u3092\n\n\n\u554f\u5408\u305b\u306e\u5bfe\u8c61\u3068\u306a\u308b\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\uff08\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306a\u3069\uff09\n\u4e00\u9023\u306e\u4e2d\u9593\u64cd\u4f5c\uff08\u30b9\u30c8\u30ea\u30fc\u30e0\u30fb\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u5f62\u6210\uff09\n1\u3064\u306e\u7d42\u7aef\u64cd\u4f5c\uff08\u30b9\u30c8\u30ea\u30fc\u30e0\u30fb\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u751f\u6210\uff09 \n\n\n\u3068\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\n\n\u30b9\u30c8\u30ea\u30fc\u30e0\u30fb\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u9589\u3058\u308b\u64cd\u4f5c\u306f\u7d42\u7aef\u64cd\u4f5c\u3068\u547c\u3070\u308c\u307e\u3059\u3002\u7d42\u7aef\u64cd\u4f5c\u306f\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u7d50\u679c\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n\u3064\u307e\u308a\u64cd\u4f5c\u306e\u6d41\u308c\u306f\n\n\u30b9\u30c8\u30ea\u30fc\u30e0\u4f7f\u7528\u306e\u6d41\u308c\n\u30bd\u30fc\u30b9\n\u2193\n\u30b9\u30c8\u30ea\u30fc\u30e0\n\u2193\n\u4e2d\u9593\u64cd\u4f5c(\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u3064\u306a\u3052\u3066\u3044\u304f)\n\u2193\n\u7d42\u7aef\u64cd\u4f5c(\u64cd\u4f5c\u9069\u7528)\n\u2193\n\u7d50\u679c\n\n\n\u3067\u3059\u3002\n\u3053\u3053\u3067\u3044\u3046\uff62Stream(\u30b9\u30c8\u30ea\u30fc\u30e0)\uff63\u306f\u30bd\u30fc\u30b9\u306b\u96c6\u7d04\u64cd\u4f5c(\u4e2d\u9593\u64cd\u4f5c\u3084\u7d42\u7aef\u64cd\u4f5c)\u3092\u9023\u7d9a\u7684\u306b(\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u3064\u306a\u3052\u3066)\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3082\u306e\u3063\u3066\u3053\u3068\u3067\u3059\u306d\u3002\n\u7528\u8a9e\u3084\u30b9\u30c8\u30ea\u30fc\u30e0\u4f7f\u7528\u306e\u6d41\u308c\u306f\u3056\u3063\u304f\u308a\u8aac\u660e\u3057\u305f\u306e\u3067Java8\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u66f8\u304d\u65b9\u3068Stream API\u306e\u66f8\u304d\u65b9\u306e\u5177\u4f53\u7684\u306a\u30b3\u30fc\u30c9\u3092\u6bd4\u8f03\u3057\u3066\u898b\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nJava8\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u66f8\u304d\u65b9\u3068Stream API\u306e\u66f8\u304d\u65b9\u306e\u6bd4\u8f03\n\n\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class Test {\n  public static void main(String[] args) {\n    List<String> list = Arrays.asList(\"1\", \"2\", \"\");\n\n    List<Integer> intList = new ArrayList<Integer>();\n    Pattern p = Pattern.compile(\"^-?\\\\d+$\");\n    for (String s : list) {\n      Matcher m = p.matcher(s);\n      if (m.find()) { // \u6b63\u898f\u8868\u73fe\u3067\u6570\u5024\u306e\u307f\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\n        int i = Integer.parseInt(s); // \u6587\u5b57\u5217\u3092\u6570\u5024\u306b\u5909\u66f4\n        if (i < 2) { // \u6761\u4ef6\u306b\u5408\u3046\u3082\u306e\u306e\u307f\u8ffd\u52a0\n          intList.add(i);\n        }\n      }\n    }\n    for (Integer i : intList) { // \u6b8b\u3063\u305f\u3082\u306e\u3092\u66f8\u304d\u51fa\u3057\n      System.out.println(i.toString());\n    }\n  }\n}\n\n\n\u3042\u308c\u3053\u308c\u5165\u308a\u53ef\u8aad\u6027\u304c\u60aa\u3044\u3067\u3059\u3002\n\nStreamAPI\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Test {\n  public static void main(String[] args) {\n    List<String> list = Arrays.asList(\"1\", \"2\", \"\");\n    list.stream() // \u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u53d6\u5f97\n        .filter(s -> s.matches(\"^-?\\\\d+$\")) // \u6b63\u898f\u8868\u73fe\u3067\u6570\u5024\u306e\u307f\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\n        .mapToInt(s -> Integer.parseInt(s)) // \u6587\u5b57\u5217\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u6570\u5024\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u5909\u66f4\n        .filter(n -> (n < 2)) // \u6761\u4ef6\u306b\u5408\u3046\u3082\u306e\u306e\u307f\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\n        .forEach( // \u6b8b\u3063\u305f\u3082\u306e\u3092\u66f8\u304d\u51fa\u3057\n          i -> System.out.println(i)\n        );\n  }\n}\n\n\nfilter\u3067\u6761\u4ef6\u304c\u308f\u304b\u308a\u3084\u3059\u304f\u53ef\u8aad\u6027\u304c\u4e0a\u304c\u308a\u307e\u3057\u305f\u3002\n\u4e0a\u3067\u8aac\u660e\u3057\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u4f7f\u7528\u306e\u6d41\u308c\u306b\u6cbf\u3063\u3066\u898b\u3066\u3044\u304f\u3068\n\n\u30b9\u30c8\u30ea\u30fc\u30e0\u751f\u6210\n\n\u30bd\u30fc\u30b9\u2192\u30b9\u30c8\u30ea\u30fc\u30e0\n    list.stream()\n\n\n\u307e\u305a\u306f\u96c6\u7d04\u64cd\u4f5c\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u30b9\u30c8\u30ea\u30fc\u30e0\u3078\u5909\u63db\n\n\u4e2d\u9593\u64cd\u4f5c\n\n\u4e2d\u9593\u64cd\u4f5c(\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u3064\u306a\u3052\u3066\u3044\u304f)\n        .filter(s -> s.matches(\"^-?\\\\d+$\")) // \u6b63\u898f\u8868\u73fe\u3067\u6570\u5024\u306e\u307f\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\n        .mapToInt(s -> Integer.parseInt(s)) // \u6587\u5b57\u5217\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u6570\u5024\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u5909\u66f4\n        .filter(n -> (n < 2)) // \u6761\u4ef6\u306b\u5408\u3046\u3082\u306e\u306e\u307f\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\n\n\n\u5404\u30e1\u30bd\u30c3\u30c9\u304c\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u8fd4\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u3064\u306a\u3052\u307e\u3059\u3002\n\n\nfilter\u306f\u30011\u3064\u306e\u5f15\u6570\u306e\u8ff0\u8a9e(boolean\u5024\u95a2\u6570)\u3092\u8868\u3059Predicate\u304c\u5f15\u6570\u306a\u306e\u3067\u3001\u30e9\u30e0\u30c0\u5f0f\u3067boolean\u8fd4\u3059\u6761\u4ef6\u3092\u66f8\u304d\u307e\u3059\u3002\n{return ;}\u306e\u90e8\u5206\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u3002\n\nmapToInt\u306f\u3001int\u5024\u306e\u7d50\u679c\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\u3092\u8868\u3059ToIntFunction\u304c\u5f15\u6570\u306a\u306e\u3067\u3001\u30e9\u30e0\u30c0\u5f0f\u3067int\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002\nmapToInt\u4ee5\u5916\u306b\u3082mapToXx\u3068\u3044\u3046\u66f8\u304d\u65b9\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u578b\u3092\u5909\u63db\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u3044\u304f\u3064\u304b\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u6574\u6570\u306e\u5834\u5408\u3068\u8003\u3048\u3066\u6b63\u898f\u8868\u73fe\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3057\u307e\u3057\u305f\u304c\n\u4f8b\u5916\u3067\u5224\u5b9a\u3059\u308b\u306a\u3089\u4ee5\u4e0b\u3067\u66f8\u3051\u30fb\u30fb\u30fb\n\n\u4f8b\u5916\u30ad\u30e3\u30c3\u30c1\u306e\u66f8\u304d\uff4b\u30fb\u30fb\u30fb\u30c0\u30e1\u3060\u3053\u308c\uff01\n        .mapToInt(s -> {\n          try {\n            return Integer.parseInt(s);\n          } catch (NumberFormatException e) {\n          }\n          return 0;\n        })\n\n\nInteger\u306e\u5024\u3092\u4f55\u304b\u8fd4\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304b\u3089\u6570\u5b57\u3067\u306a\u3044\u5834\u5408\u306b0\u8fd4\u3059\u3060\u306a\u3093\u3066\n\u306a\u3093\u3066\u9177\u3044\u30b3\u30fc\u30c9\u30fb\u30fb\u30fb\nmapToXx\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u578b\u3092\u5909\u63db\u3092\u3059\u308b\u5834\u5408\u306f\u4e8b\u524d\u306bfilter\u3067\u306e\u5de5\u592b\u304c\u5fc5\u8981\u3067\u3059\u306d\u3002\n\n\u7d42\u7aef\u64cd\u4f5c\n\n\u7d42\u7aef\u64cd\u4f5c(\u64cd\u4f5c\u9069\u7528)\u2192\u7d50\u679c\n        .forEach( // \u6b8b\u3063\u305f\u3082\u306e\u3092\u66f8\u304d\u51fa\u3057\n          i -> System.out.println(i)\n        );\n\n\nJava8\u304b\u3089\u5c0e\u5165\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u53c2\u7167\u3092\u4f7f\u3048\u3070\u3055\u3089\u306b\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u8a71\u306f\u307e\u305f\u5f8c\u307b\u3069\u3002\n\n\u53c2\u8003\nJava SE 8\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f7f\u7528\u3057\u305f\u30c7\u30fc\u30bf\u51e6\u7406\u3001\u30d1\u30fc\u30c81\n\u4eca\u66f4\u3067\u3059\u304cJava8\u3089\u3057\u3044\u30b3\u30fc\u30c9\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u305f\u3044\u306a\u30fc\u3068\u601d\u3063\u305f\u306e\u3067\u3055\u308f\u308a\u306e\u90e8\u5206\u8efd\u304f\u307e\u3068\u3081\u3066\u307f\u307e\u3059\u3002\n\n# Java8\u306e\u4e3b\u306a\u65b0\u6a5f\u80fd\n1. \u30e9\u30e0\u30c0\u5f0f\n2. \u30e1\u30bd\u30c3\u30c9\u53c2\u7167\n3. Stream API\n\n\u4eca\u56de\u306fStream API\u306b\u3064\u3044\u3066\n\u30e9\u30e0\u30c0\u5f0f\u3092\u77e5\u3089\u306a\u3044\u65b9\u306f\u307e\u305a\u306f[\u30e9\u30e0\u30c0\u5f0f](http://qiita.com/dev_npon/items/4edd925f0fafe969bd06)\u306e\u8a18\u4e8b\u3092\u898b\u3066\u30a4\u30e1\u30fc\u30b8\u3092\u6301\u3063\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n## Stream API\n\u3053\u3053\u3067\u3044\u3046\uff62Stream(\u30b9\u30c8\u30ea\u30fc\u30e0)\uff63\u3068\u306f\u4f55\u3067\u3057\u3087\u3046\u304b\uff1f\n[e-words](http://e-words.jp/w/%E3%82%B9%E3%83%88%E3%83%AA%E3%83%BC%E3%83%A0.html)\u306b\u3088\u308b\u3068\n\n> \u30b9\u30c8\u30ea\u30fc\u30e0\u3068\u306f\u3001\u5c0f\u5ddd\u3001\u6d41\u308c\u3001\u9023\u7d9a\u306a\u3069\u306e\u610f\u5473\u3092\u6301\u3064\u82f1\u5358\u8a9e\u3067\u3001IT\u306e\u5206\u91ce\u3067\u306f\u9023\u7d9a\u3057\u305f\u30c7\u30fc\u30bf\u306e\u6d41\u308c\u3084\u3001\u30c7\u30fc\u30bf\u306e\u9001\u53d7\u4fe1\u3084\u51e6\u7406\u3092\u9023\u7d9a\u7684\u306b\u884c\u3046\u3053\u3068\u306a\u3069\u3092\u610f\u5473\u3059\u308b\u3002\n\n\n[Java SE 8\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f7f\u7528\u3057\u305f\u30c7\u30fc\u30bf\u51e6\u7406\u3001\u30d1\u30fc\u30c81](http://www.oracle.com/technetwork/jp/articles/java/ma14-java-se-8-streams-2177646-ja.html)\u3067\u306f\n\n> \u30bd\u30fc\u30b9\u304b\u3089\u53d6\u5f97\u3057\u305f\u4e00\u9023\u306e\u8981\u7d20\u3067\u3042\u308a\u3001\u96c6\u8a08\u64cd\u4f5c\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3082\u306e\n\n\u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b[\u30d1\u30c3\u30b1\u30fc\u30b8java.util.stream](https://docs.oracle.com/javase/jp/8/docs/api/java/util/stream/package-summary.html)\u3067\u306f\n\u96c6\uff62\u8a08\uff63\u64cd\u4f5c\u3092\u96c6\uff62\u7d04\uff63\u64cd\u4f5c\u3068\u547c\u3093\u3067\u3044\u307e\u3059\u3002\n\n\n\u4e00\u822c\u7684\u306a\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u64cd\u4f5c\u3092\n> - \u554f\u5408\u305b\u306e\u5bfe\u8c61\u3068\u306a\u308b\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\uff08\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306a\u3069\uff09\n> - \u4e00\u9023\u306e\u4e2d\u9593\u64cd\u4f5c\uff08\u30b9\u30c8\u30ea\u30fc\u30e0\u30fb\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u5f62\u6210\uff09\n> - 1\u3064\u306e\u7d42\u7aef\u64cd\u4f5c\uff08\u30b9\u30c8\u30ea\u30fc\u30e0\u30fb\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u751f\u6210\uff09 \n\n\u3068\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u305f\n> \u30b9\u30c8\u30ea\u30fc\u30e0\u30fb\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3092\u9589\u3058\u308b\u64cd\u4f5c\u306f\u7d42\u7aef\u64cd\u4f5c\u3068\u547c\u3070\u308c\u307e\u3059\u3002\u7d42\u7aef\u64cd\u4f5c\u306f\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u7d50\u679c\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n\u3064\u307e\u308a\u64cd\u4f5c\u306e\u6d41\u308c\u306f\n\n```:\u30b9\u30c8\u30ea\u30fc\u30e0\u4f7f\u7528\u306e\u6d41\u308c\n\u30bd\u30fc\u30b9\n\u2193\n\u30b9\u30c8\u30ea\u30fc\u30e0\n\u2193\n\u4e2d\u9593\u64cd\u4f5c(\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u3064\u306a\u3052\u3066\u3044\u304f)\n\u2193\n\u7d42\u7aef\u64cd\u4f5c(\u64cd\u4f5c\u9069\u7528)\n\u2193\n\u7d50\u679c\n```\n\n\u3067\u3059\u3002\n\n\u3053\u3053\u3067\u3044\u3046\uff62Stream(\u30b9\u30c8\u30ea\u30fc\u30e0)\uff63\u306f\u30bd\u30fc\u30b9\u306b\u96c6\u7d04\u64cd\u4f5c(\u4e2d\u9593\u64cd\u4f5c\u3084\u7d42\u7aef\u64cd\u4f5c)\u3092\u9023\u7d9a\u7684\u306b(\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u3064\u306a\u3052\u3066)\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3082\u306e\u3063\u3066\u3053\u3068\u3067\u3059\u306d\u3002\n\n\n\u7528\u8a9e\u3084\u30b9\u30c8\u30ea\u30fc\u30e0\u4f7f\u7528\u306e\u6d41\u308c\u306f\u3056\u3063\u304f\u308a\u8aac\u660e\u3057\u305f\u306e\u3067Java8\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u66f8\u304d\u65b9\u3068Stream API\u306e\u66f8\u304d\u65b9\u306e\u5177\u4f53\u7684\u306a\u30b3\u30fc\u30c9\u3092\u6bd4\u8f03\u3057\u3066\u898b\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n### Java8\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u66f8\u304d\u65b9\u3068Stream API\u306e\u66f8\u304d\u65b9\u306e\u6bd4\u8f03\n```java:\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class Test {\n  public static void main(String[] args) {\n    List<String> list = Arrays.asList(\"1\", \"2\", \"\");\n\n    List<Integer> intList = new ArrayList<Integer>();\n    Pattern p = Pattern.compile(\"^-?\\\\d+$\");\n    for (String s : list) {\n      Matcher m = p.matcher(s);\n      if (m.find()) { // \u6b63\u898f\u8868\u73fe\u3067\u6570\u5024\u306e\u307f\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\n        int i = Integer.parseInt(s); // \u6587\u5b57\u5217\u3092\u6570\u5024\u306b\u5909\u66f4\n        if (i < 2) { // \u6761\u4ef6\u306b\u5408\u3046\u3082\u306e\u306e\u307f\u8ffd\u52a0\n          intList.add(i);\n        }\n      }\n    }\n    for (Integer i : intList) { // \u6b8b\u3063\u305f\u3082\u306e\u3092\u66f8\u304d\u51fa\u3057\n      System.out.println(i.toString());\n    }\n  }\n}\n```\n\n\u3042\u308c\u3053\u308c\u5165\u308a\u53ef\u8aad\u6027\u304c\u60aa\u3044\u3067\u3059\u3002\n\n```java:StreamAPI\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Test {\n  public static void main(String[] args) {\n    List<String> list = Arrays.asList(\"1\", \"2\", \"\");\n    list.stream() // \u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u53d6\u5f97\n        .filter(s -> s.matches(\"^-?\\\\d+$\")) // \u6b63\u898f\u8868\u73fe\u3067\u6570\u5024\u306e\u307f\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\n        .mapToInt(s -> Integer.parseInt(s)) // \u6587\u5b57\u5217\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u6570\u5024\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u5909\u66f4\n        .filter(n -> (n < 2)) // \u6761\u4ef6\u306b\u5408\u3046\u3082\u306e\u306e\u307f\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\n        .forEach( // \u6b8b\u3063\u305f\u3082\u306e\u3092\u66f8\u304d\u51fa\u3057\n          i -> System.out.println(i)\n        );\n  }\n}\n```\n\nfilter\u3067\u6761\u4ef6\u304c\u308f\u304b\u308a\u3084\u3059\u304f\u53ef\u8aad\u6027\u304c\u4e0a\u304c\u308a\u307e\u3057\u305f\u3002\n\n\u4e0a\u3067\u8aac\u660e\u3057\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u4f7f\u7528\u306e\u6d41\u308c\u306b\u6cbf\u3063\u3066\u898b\u3066\u3044\u304f\u3068\n\n#### \u30b9\u30c8\u30ea\u30fc\u30e0\u751f\u6210\n```java:\u30bd\u30fc\u30b9\u2192\u30b9\u30c8\u30ea\u30fc\u30e0\n    list.stream()\n```\n\u307e\u305a\u306f\u96c6\u7d04\u64cd\u4f5c\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u30b9\u30c8\u30ea\u30fc\u30e0\u3078\u5909\u63db\n\n#### \u4e2d\u9593\u64cd\u4f5c\n```java:\u4e2d\u9593\u64cd\u4f5c(\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u3064\u306a\u3052\u3066\u3044\u304f)\n        .filter(s -> s.matches(\"^-?\\\\d+$\")) // \u6b63\u898f\u8868\u73fe\u3067\u6570\u5024\u306e\u307f\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\n        .mapToInt(s -> Integer.parseInt(s)) // \u6587\u5b57\u5217\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u6570\u5024\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u5909\u66f4\n        .filter(n -> (n < 2)) // \u6761\u4ef6\u306b\u5408\u3046\u3082\u306e\u306e\u307f\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\n```\n\u5404\u30e1\u30bd\u30c3\u30c9\u304c\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u8fd4\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u3064\u306a\u3052\u307e\u3059\u3002\n\n - [filter](https://docs.oracle.com/javase/jp/8/docs/api/java/util/stream/Stream.html#filter-java.util.function.Predicate-)\u306f\u30011\u3064\u306e\u5f15\u6570\u306e\u8ff0\u8a9e(boolean\u5024\u95a2\u6570)\u3092\u8868\u3059[Predicate<T>](https://docs.oracle.com/javase/jp/8/docs/api/java/util/function/Predicate.html)\u304c\u5f15\u6570\u306a\u306e\u3067\u3001\u30e9\u30e0\u30c0\u5f0f\u3067boolean\u8fd4\u3059\u6761\u4ef6\u3092\u66f8\u304d\u307e\u3059\u3002\n{return ;}\u306e\u90e8\u5206\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u3002\n - [mapToInt](https://docs.oracle.com/javase/jp/8/docs/api/java/util/stream/Stream.html#mapToInt-java.util.function.ToIntFunction-)\u306f\u3001int\u5024\u306e\u7d50\u679c\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\u3092\u8868\u3059[ToIntFunction<T>](https://docs.oracle.com/javase/jp/8/docs/api/java/util/function/ToIntFunction.html)\u304c\u5f15\u6570\u306a\u306e\u3067\u3001\u30e9\u30e0\u30c0\u5f0f\u3067int\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002\nmapToInt\u4ee5\u5916\u306b\u3082mapToXx\u3068\u3044\u3046\u66f8\u304d\u65b9\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u578b\u3092\u5909\u63db\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u3044\u304f\u3064\u304b\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u6574\u6570\u306e\u5834\u5408\u3068\u8003\u3048\u3066\u6b63\u898f\u8868\u73fe\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3057\u307e\u3057\u305f\u304c\n\u4f8b\u5916\u3067\u5224\u5b9a\u3059\u308b\u306a\u3089\u4ee5\u4e0b\u3067\u66f8\u3051\u30fb\u30fb\u30fb\n\n```java:\u4f8b\u5916\u30ad\u30e3\u30c3\u30c1\u306e\u66f8\u304d\uff4b\u30fb\u30fb\u30fb\u30c0\u30e1\u3060\u3053\u308c\uff01\n        .mapToInt(s -> {\n          try {\n            return Integer.parseInt(s);\n          } catch (NumberFormatException e) {\n          }\n          return 0;\n        })\n```\n\nInteger\u306e\u5024\u3092\u4f55\u304b\u8fd4\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304b\u3089\u6570\u5b57\u3067\u306a\u3044\u5834\u5408\u306b0\u8fd4\u3059\u3060\u306a\u3093\u3066\n\u306a\u3093\u3066\u9177\u3044\u30b3\u30fc\u30c9\u30fb\u30fb\u30fb\nmapToXx\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u578b\u3092\u5909\u63db\u3092\u3059\u308b\u5834\u5408\u306f\u4e8b\u524d\u306bfilter\u3067\u306e\u5de5\u592b\u304c\u5fc5\u8981\u3067\u3059\u306d\u3002\n\n#### \u7d42\u7aef\u64cd\u4f5c\n```java:\u7d42\u7aef\u64cd\u4f5c(\u64cd\u4f5c\u9069\u7528)\u2192\u7d50\u679c\n        .forEach( // \u6b8b\u3063\u305f\u3082\u306e\u3092\u66f8\u304d\u51fa\u3057\n          i -> System.out.println(i)\n        );\n```\n\nJava8\u304b\u3089\u5c0e\u5165\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u53c2\u7167\u3092\u4f7f\u3048\u3070\u3055\u3089\u306b\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u8a71\u306f\u307e\u305f\u5f8c\u307b\u3069\u3002\n\n### \u53c2\u8003\n[Java SE 8\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f7f\u7528\u3057\u305f\u30c7\u30fc\u30bf\u51e6\u7406\u3001\u30d1\u30fc\u30c81](http://www.oracle.com/technetwork/jp/articles/java/ma14-java-se-8-streams-2177646-ja.html)\n", "tags": ["java8", "StreamAPI"]}