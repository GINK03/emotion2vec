{"tags": ["Clojure"], "context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\ntest.check\u306f\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002(\u4ee5\u524d\u306fsimple-check\u3068\u3044\u3046\u540d\u524d\u3067\u3057\u305f)\n\u30e9\u30f3\u30c0\u30e0\u306b\u751f\u6210\u3057\u305f\u5024\u3092\u30c6\u30b9\u30c8\u5bfe\u8c61\u306b\u5165\u529b\u3057\u3066\u3001\u7c21\u5358\u306b\u305d\u306e\u6319\u52d5\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u958b\u767a\u8005\u304c\u8003\u3048\u305f\u5177\u4f53\u7684\u306a\u5165\u529b\u5024\u3067\u30c6\u30b9\u30c8\u3092\u884c\u3046\u3060\u3051\u3067\u306f\u3069\u3053\u304b\u306b\u629c\u3051\u6f0f\u308c\u304c\u751f\u3058\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u304c\u3001\ntest.check\u3067\u306f\u6bce\u56de\u9055\u3046\u5024\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u629c\u3051\u6f0f\u308c\u3092\u898b\u3064\u3051\u3084\u3059\u304f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4fe1\u983c\u6027\u3092\u3088\u308a\u9ad8\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001test.check\u306fHaskell\u306eQuickCheck\u3092\u5143\u306bClojure\u3078\u5411\u3051\u306b\u79fb\u690d\u3055\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001Clojure\u4ee5\u5916\u306b\u3082Scala, Ruby, Python\u306a\u3069\u591a\u304f\u306e\u8a00\u8a9e\u306b\u79fb\u690d\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u3055\u3063\u305d\u304f\u89e6\u3063\u3066\u307f\u308b\n\ntest.check\u306e\u5c0e\u5165\ntest.check\u3092\u4f7f\u3046\u306b\u306fprojec.clj\u306e:dependencies\u306btest.check\u3092\u8ffd\u52a0\u3057\u307e\u3059\n\nproject.clj\n...\n\n[org.clojure/test.check \"0.9.0\"]\n\n...\n\n\n\n\u30e9\u30f3\u30c0\u30e0\u30c6\u30b9\u30c8\n\u3053\u3053\u3067\u306f\u4ee5\u4e0b\u306eproduct\u30b3\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u30c6\u30b9\u30c8\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\n\nsrc/sample_testcheck/core.clj\n(ns sample-testcheck.core)\n\n(defn hello\n  [x]\n  (str \"Hello, \" x))\n\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\n\ntest/sample_testcheck/core_test.clj\n(ns sample-testcheck.core-test\n  (:require [clojure.test :refer :all]\n            [sample-testcheck.core :refer :all]\n            [clojure.test.check.generators :as gen]\n            [clojure.test.check.properties :as prop]\n            [clojure.test.check.clojure-test :refer [defspec]]))\n\n(defspec  ; clojure.test integration\n  hello-test  ; test\u540d\n  100 ; \u8a66\u884c\u56de\u6570\n  (prop/for-all\n    [x gen/string] ; \u30e9\u30f3\u30c0\u30e0\u5024\u306e\u751f\u6210\n    (= (hello x) (str \"Hello, \" x)))) ; check\n\n\n(\u672c\u6765\u306a\u3089\u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30fc\u30c9\u3068\u540c\u7b49\u306eIn/Out\u306b\u306a\u308b\u30ed\u30b8\u30c3\u30af\u3067\u78ba\u8a8d\u3059\u308b\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u7c21\u5358\u306e\u305f\u3081product\u30b3\u30fc\u30c9\u306e\u4e2d\u8eab\u3067\u305d\u306e\u3082\u306e\u3067\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059)\n\u5b9f\u969b\u306b\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u3066\u307f\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n$ lein test\n\nlein test sample-testcheck.core-test\n{:result true, :num-tests 100, :seed 1449985781679, :test-var \"hello-test\"}\n\nRan 1 tests containing 1 assertions.\n0 failures, 0 errors.\n\n\n\u3053\u308c\u3060\u3051\u3067\u30e9\u30f3\u30c0\u30e0\u306b\u751f\u6210\u3057\u305f100\u30d1\u30bf\u30fc\u30f3\u306e\u5165\u529b\u5024\u3067\u30c6\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\ndefspec\ndefspec \u30de\u30af\u30ed\u3092\u4f7f\u3046\u3068\u3001test.check\u3067\u66f8\u304b\u308c\u305f\u30c6\u30b9\u30c8\u3092clojure.test\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3068\u3057\u3066\u53d6\u308a\u6271\u3063\u3066\u304f\u308c\u307e\u3059\n\ngenerators\n\u30e9\u30f3\u30c0\u30e0\u5024\u306fgenerators\u3092\u4f7f\u3046\u3053\u3068\u3067\u7c21\u5358\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u3053\u3067\u306fstring\u3092\u4f8b\u306b\u3057\u3066\u3044\u307e\u3059\u304c\u3001int, list, map\u306a\u3069\u3082\u751f\u6210\u53ef\u80fd\u3067\u3059\u3002\n\u307e\u305f\u3001\u30d1\u30bf\u30fc\u30f3\u306e\u591a\u304f\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u3063\u3066\u3044\u308b\u30b1\u30fc\u30b9\u3067\u306f\u3001generators/element\u3092\u4f7f\u3063\u3066\u7279\u5b9a\u306e\u8981\u7d20\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u5024\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\ngenerators\u306f\u3044\u308d\u3044\u308d\u306a\u30e9\u30f3\u30c0\u30e0\u5024\u3092\u751f\u6210\u3067\u304d\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306echeat sheet\u306b\u76ee\u3092\u901a\u3057\u3066\u304a\u304f\u3068\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nhttps://github.com/clojure/test.check/blob/master/doc/cheatsheet.md\n\n\u304a\u308f\u308a\u306b\ntest.check\u3092\u4f7f\u3046\u3053\u3068\u3067\u7c21\u5358\u306b\u30e9\u30f3\u30c0\u30e0\u30c6\u30b9\u30c8\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001\u4eca\u56de\u306fClojure\u306e\u30c6\u30b9\u30c8\u3092\u884c\u3044\u307e\u3057\u305f\u304c\u3001\u3082\u3061\u308d\u3093ClojureScript\u306b\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\ngenerators\u306e\u7a2e\u985e\u306f\u7d50\u69cb\u8c4a\u5bcc\u3067\u3059\u304c\u3001\u4ed6\u306e\u70b9\u306f\u3068\u3066\u3082\u5358\u7d14\u306a\u306e\u3067\u975e\u5e38\u306b\u4f7f\u3044\u3084\u3059\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3088\u308a\u591a\u304f\u306e\u5165\u529b\u5024\u3067\u78ba\u8a8d\u3057\u3066\u304a\u304d\u305f\u3044\u3088\u3046\u306a\u30b1\u30fc\u30b9(parser\u3084\u6697\u53f7\u5316/\u8907\u53f7\u5316\u306a\u3069)\u3067\u306f\u3068\u3066\u3082\u5f79\u7acb\u3064\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002\n\n\u53c2\u8003\ntest.check\ntest.check API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\u306f\u3058\u3081\u3066\u306e test.check 0.7.0 - tnoda-clojure\nQuickCheck - Wikipedia, the free encyclopedia\n\n# \u306f\u3058\u3081\u306b\n\ntest.check\u306f\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002(\u4ee5\u524d\u306fsimple-check\u3068\u3044\u3046\u540d\u524d\u3067\u3057\u305f)\n\n\u30e9\u30f3\u30c0\u30e0\u306b\u751f\u6210\u3057\u305f\u5024\u3092\u30c6\u30b9\u30c8\u5bfe\u8c61\u306b\u5165\u529b\u3057\u3066\u3001\u7c21\u5358\u306b\u305d\u306e\u6319\u52d5\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u958b\u767a\u8005\u304c\u8003\u3048\u305f\u5177\u4f53\u7684\u306a\u5165\u529b\u5024\u3067\u30c6\u30b9\u30c8\u3092\u884c\u3046\u3060\u3051\u3067\u306f\u3069\u3053\u304b\u306b\u629c\u3051\u6f0f\u308c\u304c\u751f\u3058\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u304c\u3001\ntest.check\u3067\u306f\u6bce\u56de\u9055\u3046\u5024\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u629c\u3051\u6f0f\u308c\u3092\u898b\u3064\u3051\u3084\u3059\u304f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4fe1\u983c\u6027\u3092\u3088\u308a\u9ad8\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u305f\u3001test.check\u306fHaskell\u306eQuickCheck\u3092\u5143\u306bClojure\u3078\u5411\u3051\u306b\u79fb\u690d\u3055\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001Clojure\u4ee5\u5916\u306b\u3082Scala, Ruby, Python\u306a\u3069\u591a\u304f\u306e\u8a00\u8a9e\u306b\u79fb\u690d\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n# \u3055\u3063\u305d\u304f\u89e6\u3063\u3066\u307f\u308b\n\n## test.check\u306e\u5c0e\u5165\n\ntest.check\u3092\u4f7f\u3046\u306b\u306fprojec.clj\u306e```:dependencies```\u306btest.check\u3092\u8ffd\u52a0\u3057\u307e\u3059\n\n```project.clj\n...\n\n[org.clojure/test.check \"0.9.0\"]\n\n...\n```\n\n## \u30e9\u30f3\u30c0\u30e0\u30c6\u30b9\u30c8\n\n\u3053\u3053\u3067\u306f\u4ee5\u4e0b\u306eproduct\u30b3\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u30c6\u30b9\u30c8\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\n\n```src/sample_testcheck/core.clj\n(ns sample-testcheck.core)\n\n(defn hello\n  [x]\n  (str \"Hello, \" x))\n\n```\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\n\n```test/sample_testcheck/core_test.clj\n(ns sample-testcheck.core-test\n  (:require [clojure.test :refer :all]\n            [sample-testcheck.core :refer :all]\n            [clojure.test.check.generators :as gen]\n            [clojure.test.check.properties :as prop]\n            [clojure.test.check.clojure-test :refer [defspec]]))\n\n(defspec  ; clojure.test integration\n  hello-test  ; test\u540d\n  100 ; \u8a66\u884c\u56de\u6570\n  (prop/for-all\n    [x gen/string] ; \u30e9\u30f3\u30c0\u30e0\u5024\u306e\u751f\u6210\n    (= (hello x) (str \"Hello, \" x)))) ; check\n```\n\n(\u672c\u6765\u306a\u3089\u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30fc\u30c9\u3068\u540c\u7b49\u306eIn/Out\u306b\u306a\u308b\u30ed\u30b8\u30c3\u30af\u3067\u78ba\u8a8d\u3059\u308b\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u7c21\u5358\u306e\u305f\u3081product\u30b3\u30fc\u30c9\u306e\u4e2d\u8eab\u3067\u305d\u306e\u3082\u306e\u3067\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059)\n\n\n\u5b9f\u969b\u306b\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u3066\u307f\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```\n$ lein test\n\nlein test sample-testcheck.core-test\n{:result true, :num-tests 100, :seed 1449985781679, :test-var \"hello-test\"}\n\nRan 1 tests containing 1 assertions.\n0 failures, 0 errors.\n\n```\n\n\u3053\u308c\u3060\u3051\u3067\u30e9\u30f3\u30c0\u30e0\u306b\u751f\u6210\u3057\u305f100\u30d1\u30bf\u30fc\u30f3\u306e\u5165\u529b\u5024\u3067\u30c6\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n### defspec\n\n```defspec``` \u30de\u30af\u30ed\u3092\u4f7f\u3046\u3068\u3001test.check\u3067\u66f8\u304b\u308c\u305f\u30c6\u30b9\u30c8\u3092clojure.test\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3068\u3057\u3066\u53d6\u308a\u6271\u3063\u3066\u304f\u308c\u307e\u3059\n\n### generators\n\n\u30e9\u30f3\u30c0\u30e0\u5024\u306fgenerators\u3092\u4f7f\u3046\u3053\u3068\u3067\u7c21\u5358\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306fstring\u3092\u4f8b\u306b\u3057\u3066\u3044\u307e\u3059\u304c\u3001int, list, map\u306a\u3069\u3082\u751f\u6210\u53ef\u80fd\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u30d1\u30bf\u30fc\u30f3\u306e\u591a\u304f\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u3063\u3066\u3044\u308b\u30b1\u30fc\u30b9\u3067\u306f\u3001``` generators/element ```\u3092\u4f7f\u3063\u3066\u7279\u5b9a\u306e\u8981\u7d20\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u5024\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\ngenerators\u306f\u3044\u308d\u3044\u308d\u306a\u30e9\u30f3\u30c0\u30e0\u5024\u3092\u751f\u6210\u3067\u304d\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306echeat sheet\u306b\u76ee\u3092\u901a\u3057\u3066\u304a\u304f\u3068\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nhttps://github.com/clojure/test.check/blob/master/doc/cheatsheet.md\n\n# \u304a\u308f\u308a\u306b\n\ntest.check\u3092\u4f7f\u3046\u3053\u3068\u3067\u7c21\u5358\u306b\u30e9\u30f3\u30c0\u30e0\u30c6\u30b9\u30c8\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n\u307e\u305f\u3001\u4eca\u56de\u306fClojure\u306e\u30c6\u30b9\u30c8\u3092\u884c\u3044\u307e\u3057\u305f\u304c\u3001\u3082\u3061\u308d\u3093ClojureScript\u306b\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\ngenerators\u306e\u7a2e\u985e\u306f\u7d50\u69cb\u8c4a\u5bcc\u3067\u3059\u304c\u3001\u4ed6\u306e\u70b9\u306f\u3068\u3066\u3082\u5358\u7d14\u306a\u306e\u3067\u975e\u5e38\u306b\u4f7f\u3044\u3084\u3059\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3088\u308a\u591a\u304f\u306e\u5165\u529b\u5024\u3067\u78ba\u8a8d\u3057\u3066\u304a\u304d\u305f\u3044\u3088\u3046\u306a\u30b1\u30fc\u30b9(parser\u3084\u6697\u53f7\u5316/\u8907\u53f7\u5316\u306a\u3069)\u3067\u306f\u3068\u3066\u3082\u5f79\u7acb\u3064\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002\n\n# \u53c2\u8003\n[test.check](https://github.com/clojure/test.check)\n[test.check API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://clojure.github.io/test.check/clojure.test.check.html)\n[\u306f\u3058\u3081\u3066\u306e test.check 0.7.0 - tnoda-clojure](http://tnoda-clojure.tumblr.com/post/119297629796/%E3%81%AF%E3%81%98%E3%82%81%E3%81%A6%E3%81%AE-testcheck-070)\n[QuickCheck - Wikipedia, the free encyclopedia](https://en.wikipedia.org/wiki/QuickCheck)\n"}