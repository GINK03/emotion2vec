{"context": "\n\n\u306f\u3058\u3081\u306b\n\u4eca\u307e\u3067\u306f\u6574\u6570\u578b\u3068\u3044\u3048\u3070\nchar\u3001short\u3001int\u3001long\u3001long long\u30fb\u30fb\u30fb\u3000\u7b49\u3068\u306a\u3063\u3066\u304a\u308a\n\u74b0\u5883\u306b\u3088\u3063\u3066\u30d3\u30c3\u30c8\u6570\u304c\u9055\u3046\u5834\u5408\u3082\u3042\u308a\u3001\u4e0d\u5177\u5408\u306e\u5143\u306b\u306a\u3063\u3066\u307e\u3057\u305f\nC++11\u306b\u306f\u3001\u53b3\u5bc6\u306a\u6574\u6570\u578b\u304c\u3042\u308b\u306e\u3067\u3001\u30ec\u30ac\u30b7\u30fc\u3068\u306e\u4e92\u63db\u6027\u306e\u90e8\u5206\u4ee5\u5916\u306f\n\u65b0\u3057\u3044\u578b\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\n\u8a73\u7d30\u306f\u4e0b\u8a18\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\ncpprefjp\n\n\u578b\u304c\u591a\u3059\u304e\u308b\uff01\nint8_t\u3001int16_t\u3001int32_t\u3001int64_t\u3001uint8_t\u3001uint16_t\u3001uint32_t\u3001uint64_t\u3001int_fast8_t\u3001int_fast16_t\u3001int_fast32_t\u3001int_fast64_t\u3001uint_fast8_t\u3001uint_fast16_t\u3001uint_fast32_t\u3001uint_fast64_t\u3001int_least8_t\u3001int_least16_t\u3001int_least32_t\u3001int_least64_t\u3001uint_least8_t\u3001uint_least16_t\u3001uint_least32_t\u3001uint_least64_t\u3001intmax_t\u3001uintmax_t\u3001intptr_t\u3001uintptr_t\n\u591a\u3059\u304e\u308b\u306e\u3067\u5206\u985e\n\n[u]intX_t\noptional\nint32_t\u3000\u3068\u304b\u3001\u4e00\u756a\u4f7f\u3063\u3066\u3057\u307e\u3046\u3093\u3060\u3051\u3069\u3001\u306a\u3093\u3068\u3000optional\u306a\u306e\u3067\n\u51e6\u7406\u7cfb\u306b\u3088\u3063\u3066\u306f\u672a\u5b9f\u88c5\u306a\u306e\u3067\u3000\u305d\u306e\u5834\u5408\u306f\u4e0b\u8a18\u306e\n[u]int_fastX_t \u304b\u3000[u]int_leastX_t\n\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u30fb\u30fb\u30fb\n\u4f8b\u3048\u3070 \uff11\u30d0\u30a4\u30c8\u304c\uff19\u30d3\u30c3\u30c8\u306e\u51e6\u7406\u7cfb\u3067\u306f\u3001\uff14Byte=\uff13\uff16bit \u306a\u306e\u3067\u3001int32_t\u306f\u5b9a\u7fa9\u3055\u308c\u306a\u3044\n\u4e8b\u304c\u591a\u3044\u3093\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\u304b\u308f\u308a\u306b int36_t\u304c\u5b9a\u7fa9\u3055\u308c\u308b\u3068\u304b\u3055\u308c\u306a\u3044\u3068\u304b\u30fb\u30fb\u30fb\n\u3053\u306e\u578b\u306f\u3001\u53b3\u5bc6\u306a\u30d3\u30c3\u30c8\u6570\u3067\u3001\u30d1\u30c7\u30a3\u30f3\u30b0\u7121\u3057\u306e\u5927\u304d\u3055\u3067\u78ba\u4fdd\u3055\u308c\u307e\u3059\nsizeof(int8_t) = 1\nsizeof(int16_t) = 2\nsizeof(int32_t) = 4\nsizeof(int64_t) = 8\n\n\n[u]int_fastX_t\n\u6700\u3082\u5b9f\u884c\u901f\u5ea6\u304c\u901f\u304f\u306a\u308b\u30d0\u30a4\u30c8\u6570\u304c\u78ba\u4fdd\u3055\u308c\u307e\u3059\uff08\u51e6\u7406\u7cfb\u4f9d\u5b58\uff09\n\u3064\u307e\u308a\u3000\u30d1\u30c7\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\n\u4e00\u4f8b\nsizeof(int_fast8_t) = 1\nsizeof(int_fast16_t) = 8\nsizeof(int_fast32_t) = 8\nsizeof(int_fast64_t) = 8\n\n\n[u]int_leastX_t\n\u683c\u7d0d\u53ef\u80fd\u306a\u6700\u3082\u5c0f\u3055\u3044\u30b5\u30a4\u30ba\u304c\u78ba\u4fdd\u3055\u308c\u307e\u3059\uff08\u51e6\u7406\u7cfb\u4f9d\u5b58\uff09\n\u3064\u307e\u308a\u3000\u30d1\u30c7\u30a3\u30f3\u30b0\u306a\u3057\n\u4e00\u4f8b\nsizeof(int_least8_t) = 1\nsizeof(int_least16_t) = 2\nsizeof(int_least32_t) = 4\nsizeof(int_least64_t) = 8\n\n\n[u]intmax_t\n\u6700\u5927\u306e\u30b5\u30a4\u30ba\u306e\u6574\u6570\u578b\u304c\u78ba\u4fdd\u3055\u308c\u307e\u3059\n\u4e00\u4f8b\nsizeof(intmax_t) = 8\n\n\n[u]intptr_t\noptional\n\u30dd\u30a4\u30f3\u30bf\u30b5\u30a4\u30ba\u304c\u78ba\u4fdd\u3055\u308c\u307e\u3059\n\u4e00\u4f8b\nsizeof(intptr_t) = 8\n\n\n\u69cb\u9020\u4f53\u306b\u3057\u305f\u3068\u304d\u306e\u30d1\u30c6\u30a3\u30f3\u30b0\u306f\uff1f\n\u4e00\u4f8b\u3092\u51fa\u3057\u307e\u3059\n\nstruct\n#include<iostream>\n\n\nstruct INT16{\n    int16_t n;\n    int8_t d;\n};\n\nstruct FAST16{\n    int_fast16_t n;\n    int_fast8_t d;\n};\n\nstruct LEAST16{\n    int_least16_t n;\n    int_least8_t d;\n};\n\n\n\nstruct PINT16{\n    int16_t n;\n    int8_t d;\n}__attribute__((__packed__));\n\nstruct PFAST16{\n    int_fast16_t n;\n    int_fast8_t d;\n}__attribute__((__packed__));\n\nstruct PLEAST16{\n    int_least16_t n;\n    int_least8_t d;\n}__attribute__((__packed__));\n\n\nusing namespace std;\n\nint main(){    \n    cout << \"sizeof(int16_t)=\" << sizeof(int16_t) << endl;\n    cout << \"sizeof(int32_t)=\" << sizeof(int32_t) << endl;\n\n    cout << \"sizeof(int_fast16_t)=\" << sizeof(int_fast16_t) << endl;\n    cout << \"sizeof(int_fast32_t)=\" << sizeof(int_fast32_t) << endl;\n\n    cout << \"sizeof(int_least16_t)=\" << sizeof(int_least16_t) << endl;\n    cout << \"sizeof(int_least32_t)=\" << sizeof(int_least32_t) << endl;\n\n    cout << \"sizeof(intmax_t)=\" << sizeof(intmax_t) << endl;\n    cout << \"sizeof(intptr_t)=\" << sizeof(intptr_t) << endl;\n\n    cout << \"sizeof(INT16)=\" << sizeof(INT16) << endl;\n    cout << \"sizeof(FAST16)=\" << sizeof(FAST16) << endl;\n    cout << \"sizeof(LEAST16)=\" << sizeof(LEAST16) << endl;\n\n    cout << \"sizeof(PINT16)=\" << sizeof(PINT16) << endl;\n    cout << \"sizeof(PFAST16)=\" << sizeof(PFAST16) << endl;\n    cout << \"sizeof(PLEAST16)=\" << sizeof(PLEAST16) << endl;\n\n    return 1;\n}\n\n\n\u7d50\u679c\nsizeof(int16_t)=2\nsizeof(int32_t)=4\nsizeof(int_fast16_t)=8\nsizeof(int_fast32_t)=8\nsizeof(int_least16_t)=2\nsizeof(int_least32_t)=4\nsizeof(intmax_t)=8\nsizeof(intptr_t)=8\nsizeof(INT16)=4\nsizeof(FAST16)=16\nsizeof(LEAST16)=4\nsizeof(PINT16)=3\nsizeof(PFAST16)=9\nsizeof(PLEAST16)=3\n\n\n\nint16_t\u3001int_least16_t\u306f\u3001\uff12\u30d0\u30a4\u30c8\u3068\u3057\u3066\u3001\u3061\u3083\u3093\u3068\u5207\u308a\u8a70\u3081\u3089\u308c\u3066\u3044\u308b\u304c\nint_fast16_t\u306f \u305d\u3082\u305d\u3082\uff18\u30d0\u30a4\u30c8\u3068\u3057\u3066\u6271\u308f\u308c\u3066\u3044\u308b\n(int_fast8_t \u306f\uff11\u30d0\u30a4\u30c8)\n\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u306d\u3002\n\n#\u306f\u3058\u3081\u306b\n\u4eca\u307e\u3067\u306f\u6574\u6570\u578b\u3068\u3044\u3048\u3070\nchar\u3001short\u3001int\u3001long\u3001long long\u30fb\u30fb\u30fb\u3000\u7b49\u3068\u306a\u3063\u3066\u304a\u308a\n\u74b0\u5883\u306b\u3088\u3063\u3066\u30d3\u30c3\u30c8\u6570\u304c\u9055\u3046\u5834\u5408\u3082\u3042\u308a\u3001\u4e0d\u5177\u5408\u306e\u5143\u306b\u306a\u3063\u3066\u307e\u3057\u305f\n\nC++11\u306b\u306f\u3001\u53b3\u5bc6\u306a\u6574\u6570\u578b\u304c\u3042\u308b\u306e\u3067\u3001\u30ec\u30ac\u30b7\u30fc\u3068\u306e\u4e92\u63db\u6027\u306e\u90e8\u5206\u4ee5\u5916\u306f\n\u65b0\u3057\u3044\u578b\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\n\n\u8a73\u7d30\u306f\u4e0b\u8a18\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\n[cpprefjp](https://cpprefjp.github.io/reference/cstdint.html)\n\n\n#\u578b\u304c\u591a\u3059\u304e\u308b\uff01\nint8_t\u3001int16_t\u3001int32_t\u3001int64_t\u3001uint8_t\u3001uint16_t\u3001uint32_t\u3001uint64_t\u3001int_fast8_t\u3001int_fast16_t\u3001int_fast32_t\u3001int_fast64_t\u3001uint_fast8_t\u3001uint_fast16_t\u3001uint_fast32_t\u3001uint_fast64_t\u3001int_least8_t\u3001int_least16_t\u3001int_least32_t\u3001int_least64_t\u3001uint_least8_t\u3001uint_least16_t\u3001uint_least32_t\u3001uint_least64_t\u3001intmax_t\u3001uintmax_t\u3001intptr_t\u3001uintptr_t\n\n\u591a\u3059\u304e\u308b\u306e\u3067\u5206\u985e\n\n##[u]intX_t\noptional\nint32_t\u3000\u3068\u304b\u3001\u4e00\u756a\u4f7f\u3063\u3066\u3057\u307e\u3046\u3093\u3060\u3051\u3069\u3001\u306a\u3093\u3068\u3000optional\u306a\u306e\u3067\n\u51e6\u7406\u7cfb\u306b\u3088\u3063\u3066\u306f\u672a\u5b9f\u88c5\u306a\u306e\u3067\u3000\u305d\u306e\u5834\u5408\u306f\u4e0b\u8a18\u306e\n[u]int_fastX_t \u304b\u3000[u]int_leastX_t\n\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u30fb\u30fb\u30fb\n\u4f8b\u3048\u3070 \uff11\u30d0\u30a4\u30c8\u304c\uff19\u30d3\u30c3\u30c8\u306e\u51e6\u7406\u7cfb\u3067\u306f\u3001\uff14Byte=\uff13\uff16bit \u306a\u306e\u3067\u3001int32_t\u306f\u5b9a\u7fa9\u3055\u308c\u306a\u3044\n\u4e8b\u304c\u591a\u3044\u3093\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\u304b\u308f\u308a\u306b int36_t\u304c\u5b9a\u7fa9\u3055\u308c\u308b\u3068\u304b\u3055\u308c\u306a\u3044\u3068\u304b\u30fb\u30fb\u30fb\n\n\u3053\u306e\u578b\u306f\u3001\u53b3\u5bc6\u306a\u30d3\u30c3\u30c8\u6570\u3067\u3001\u30d1\u30c7\u30a3\u30f3\u30b0\u7121\u3057\u306e\u5927\u304d\u3055\u3067\u78ba\u4fdd\u3055\u308c\u307e\u3059\n\n```\nsizeof(int8_t) = 1\nsizeof(int16_t) = 2\nsizeof(int32_t) = 4\nsizeof(int64_t) = 8\n```\n\n##[u]int_fastX_t\n\u6700\u3082\u5b9f\u884c\u901f\u5ea6\u304c\u901f\u304f\u306a\u308b\u30d0\u30a4\u30c8\u6570\u304c\u78ba\u4fdd\u3055\u308c\u307e\u3059\uff08\u51e6\u7406\u7cfb\u4f9d\u5b58\uff09\n\u3064\u307e\u308a\u3000\u30d1\u30c7\u30a3\u30f3\u30b0\u3055\u308c\u307e\u3059\n\u4e00\u4f8b\n\n```\nsizeof(int_fast8_t) = 1\nsizeof(int_fast16_t) = 8\nsizeof(int_fast32_t) = 8\nsizeof(int_fast64_t) = 8\n```\n\n##[u]int_leastX_t\n\u683c\u7d0d\u53ef\u80fd\u306a\u6700\u3082\u5c0f\u3055\u3044\u30b5\u30a4\u30ba\u304c\u78ba\u4fdd\u3055\u308c\u307e\u3059\uff08\u51e6\u7406\u7cfb\u4f9d\u5b58\uff09\n\u3064\u307e\u308a\u3000\u30d1\u30c7\u30a3\u30f3\u30b0\u306a\u3057\n\u4e00\u4f8b\n\n```\nsizeof(int_least8_t) = 1\nsizeof(int_least16_t) = 2\nsizeof(int_least32_t) = 4\nsizeof(int_least64_t) = 8\n```\n\n##[u]intmax_t\n\u6700\u5927\u306e\u30b5\u30a4\u30ba\u306e\u6574\u6570\u578b\u304c\u78ba\u4fdd\u3055\u308c\u307e\u3059\n\u4e00\u4f8b\n\n```\nsizeof(intmax_t) = 8\n```\n\n\n##[u]intptr_t\noptional\n\u30dd\u30a4\u30f3\u30bf\u30b5\u30a4\u30ba\u304c\u78ba\u4fdd\u3055\u308c\u307e\u3059\n\u4e00\u4f8b\n\n```\nsizeof(intptr_t) = 8\n```\n\n\n#\u69cb\u9020\u4f53\u306b\u3057\u305f\u3068\u304d\u306e\u30d1\u30c6\u30a3\u30f3\u30b0\u306f\uff1f\n\u4e00\u4f8b\u3092\u51fa\u3057\u307e\u3059\n\n```cpp:struct\n#include<iostream>\n\n\nstruct INT16{\n    int16_t n;\n    int8_t d;\n};\n\nstruct FAST16{\n    int_fast16_t n;\n    int_fast8_t d;\n};\n\nstruct LEAST16{\n    int_least16_t n;\n    int_least8_t d;\n};\n\n\n\nstruct PINT16{\n    int16_t n;\n    int8_t d;\n}__attribute__((__packed__));\n\nstruct PFAST16{\n    int_fast16_t n;\n    int_fast8_t d;\n}__attribute__((__packed__));\n\nstruct PLEAST16{\n    int_least16_t n;\n    int_least8_t d;\n}__attribute__((__packed__));\n\n\nusing namespace std;\n\nint main(){    \n    cout << \"sizeof(int16_t)=\" << sizeof(int16_t) << endl;\n    cout << \"sizeof(int32_t)=\" << sizeof(int32_t) << endl;\n    \n    cout << \"sizeof(int_fast16_t)=\" << sizeof(int_fast16_t) << endl;\n    cout << \"sizeof(int_fast32_t)=\" << sizeof(int_fast32_t) << endl;\n\n    cout << \"sizeof(int_least16_t)=\" << sizeof(int_least16_t) << endl;\n    cout << \"sizeof(int_least32_t)=\" << sizeof(int_least32_t) << endl;\n    \n    cout << \"sizeof(intmax_t)=\" << sizeof(intmax_t) << endl;\n    cout << \"sizeof(intptr_t)=\" << sizeof(intptr_t) << endl;\n    \n    cout << \"sizeof(INT16)=\" << sizeof(INT16) << endl;\n    cout << \"sizeof(FAST16)=\" << sizeof(FAST16) << endl;\n    cout << \"sizeof(LEAST16)=\" << sizeof(LEAST16) << endl;\n    \n    cout << \"sizeof(PINT16)=\" << sizeof(PINT16) << endl;\n    cout << \"sizeof(PFAST16)=\" << sizeof(PFAST16) << endl;\n    cout << \"sizeof(PLEAST16)=\" << sizeof(PLEAST16) << endl;\n    \n    return 1;\n}\n\n\n\u7d50\u679c\nsizeof(int16_t)=2\nsizeof(int32_t)=4\nsizeof(int_fast16_t)=8\nsizeof(int_fast32_t)=8\nsizeof(int_least16_t)=2\nsizeof(int_least32_t)=4\nsizeof(intmax_t)=8\nsizeof(intptr_t)=8\nsizeof(INT16)=4\nsizeof(FAST16)=16\nsizeof(LEAST16)=4\nsizeof(PINT16)=3\nsizeof(PFAST16)=9\nsizeof(PLEAST16)=3\n\n```\n\nint16_t\u3001int_least16_t\u306f\u3001\uff12\u30d0\u30a4\u30c8\u3068\u3057\u3066\u3001\u3061\u3083\u3093\u3068\u5207\u308a\u8a70\u3081\u3089\u308c\u3066\u3044\u308b\u304c\nint_fast16_t\u306f \u305d\u3082\u305d\u3082\uff18\u30d0\u30a4\u30c8\u3068\u3057\u3066\u6271\u308f\u308c\u3066\u3044\u308b\n(int_fast8_t \u306f\uff11\u30d0\u30a4\u30c8)\n\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u306d\u3002\n\n\n\n\n\n\n", "tags": ["C++", "C++11"]}