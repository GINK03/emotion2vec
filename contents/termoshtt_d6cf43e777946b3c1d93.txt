{"context": " More than 1 year has passed since last update.Inspired by numpy\u3067\u660e\u793a\u7684\u306b\u30eb\u30fc\u30d7\u3092\u66f8\u304f\u3068\u6975\u7aef\u306b\u9045\u304f\u306a\u308b\n\u4e0a\u8ff0\u306e\u8a18\u4e8b\u3067\u306f\u660e\u793a\u7684\u306bfor\u3092\u66f8\u304f\u3068\u6975\u7aef\u306b\u9045\u304f\u306a\u308b\u3068\u3044\u3046\u8a71\u3067\u3057\u305f\u3002\n\u4f8b\u3048\u3070\ndef matmul1(a, b):\n    lenI = a.shape[0]\n    lenJ = a.shape[1]\n    lenK = b.shape[1]\n    c = np.zeros((lenI, lenJ))\n    for i in range(lenI):\n        for j in range(lenJ):\n            for k in range(lenK):\n                c[i, j] += a[i, k] * b[k, j]\n    return c\n\n\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306fnp.dot\u3068\u6bd4\u3079\u3066\u9045\u304f\u306a\u308a\u307e\u3059\u3002\n%timeit matmul1(a, b)\n1 loops, best of 3: 12.9 s per loop\n\n%timeit np.dot(a, b)\n10 loops, best of 3: 20.7 ms per loop\n\n\u624b\u5143\u306e\u30ce\u30fc\u30c8PC\u3067\u8a08\u7b97\u3057\u3066\u3044\u308b\u306e\u3067\u9045\u3044\u3067\u3059\u3002\u307e\u305fatlas/mkl\u306f\u30ea\u30f3\u30af\u3057\u3066\u307e\u305b\u3093\u3002\n\u3053\u3053\u3067Numba\u3092\u4f7f\u3044\u307e\u3059\u3002\nimport numba\n\n@numba.jit  # \u3053\u3053\u3060\u3051\u8ffd\u52a0\ndef matmul1_jit(a, b):\n    lenI = a.shape[0]\n    lenJ = a.shape[1]\n    lenK = b.shape[1]\n    c = np.zeros((lenI, lenJ))\n    for i in range(lenI):\n        for j in range(lenJ):\n            for k in range(lenK):\n                c[i, j] += a[i, k] * b[k, j]\n    return c\n\n\u3053\u308c\u306fPython\u306e\u30b3\u30fc\u30c9\u3092LLVM\u3092\u4f7f\u3063\u3066JIT\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u305f\u3081\u3001\u975e\u5e38\u306b\u9ad8\u901f\u306b\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\u521d\u56de\u306e\u547c\u3073\u51fa\u3057\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u6642\u9593\u304c\u542b\u307e\u308c\u308b\u306e\u3067\u3001\u305d\u308c\u4ee5\u964d\u306e\u547c\u3073\u51fa\u3057\u3067\u901f\u5ea6\u3092\u8a08\u6e2c\u3059\u308b\u3068\uff1a\n%timeit matmul1_jit(a, b)\n10 loops, best of 3: 24.4 ms per loop\n\n\u3053\u306e\u3088\u3046\u306b\uff11\u884c\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067np.dot\u3088\u308a\u540c\u7a0b\u5ea6\uff08\uff12\u5272\u9045\u3044\u304f\u3089\u3044\uff09\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u5168\u4f53\u306eipynb\u3092gist\u306b\u304a\u3044\u3066\u304a\u304d\u307e\u3059\u3002\nQiita\u3067nbviewer\u57cb\u3081\u8fbc\u3081\u308c\u3070\u3044\u3044\u306e\u306b\u3002\n\nInspired by [numpy\u3067\u660e\u793a\u7684\u306b\u30eb\u30fc\u30d7\u3092\u66f8\u304f\u3068\u6975\u7aef\u306b\u9045\u304f\u306a\u308b](http://qiita.com/nonbiri15/items/ef97b84832055ab807fb)\n\n\u4e0a\u8ff0\u306e\u8a18\u4e8b\u3067\u306f\u660e\u793a\u7684\u306bfor\u3092\u66f8\u304f\u3068\u6975\u7aef\u306b\u9045\u304f\u306a\u308b\u3068\u3044\u3046\u8a71\u3067\u3057\u305f\u3002\n\u4f8b\u3048\u3070\n\n```py3\ndef matmul1(a, b):\n    lenI = a.shape[0]\n    lenJ = a.shape[1]\n    lenK = b.shape[1]\n    c = np.zeros((lenI, lenJ))\n    for i in range(lenI):\n        for j in range(lenJ):\n            for k in range(lenK):\n                c[i, j] += a[i, k] * b[k, j]\n    return c\n```\n\n\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306f`np.dot`\u3068\u6bd4\u3079\u3066\u9045\u304f\u306a\u308a\u307e\u3059\u3002\n\n```py3\n%timeit matmul1(a, b)\n1 loops, best of 3: 12.9 s per loop\n```\n\n```py3\n%timeit np.dot(a, b)\n10 loops, best of 3: 20.7 ms per loop\n```\n\n\u624b\u5143\u306e\u30ce\u30fc\u30c8PC\u3067\u8a08\u7b97\u3057\u3066\u3044\u308b\u306e\u3067\u9045\u3044\u3067\u3059\u3002\u307e\u305fatlas/mkl\u306f\u30ea\u30f3\u30af\u3057\u3066\u307e\u305b\u3093\u3002\n\n\u3053\u3053\u3067Numba\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```py3\nimport numba\n\n@numba.jit  # \u3053\u3053\u3060\u3051\u8ffd\u52a0\ndef matmul1_jit(a, b):\n    lenI = a.shape[0]\n    lenJ = a.shape[1]\n    lenK = b.shape[1]\n    c = np.zeros((lenI, lenJ))\n    for i in range(lenI):\n        for j in range(lenJ):\n            for k in range(lenK):\n                c[i, j] += a[i, k] * b[k, j]\n    return c\n```\n\n\u3053\u308c\u306fPython\u306e\u30b3\u30fc\u30c9\u3092LLVM\u3092\u4f7f\u3063\u3066JIT\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u305f\u3081\u3001\u975e\u5e38\u306b\u9ad8\u901f\u306b\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\u521d\u56de\u306e\u547c\u3073\u51fa\u3057\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u6642\u9593\u304c\u542b\u307e\u308c\u308b\u306e\u3067\u3001\u305d\u308c\u4ee5\u964d\u306e\u547c\u3073\u51fa\u3057\u3067\u901f\u5ea6\u3092\u8a08\u6e2c\u3059\u308b\u3068\uff1a\n\n```\n%timeit matmul1_jit(a, b)\n10 loops, best of 3: 24.4 ms per loop\n```\n\n\u3053\u306e\u3088\u3046\u306b\uff11\u884c\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067`np.dot`\u3088\u308a\u540c\u7a0b\u5ea6\uff08\uff12\u5272\u9045\u3044\u304f\u3089\u3044\uff09\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u5168\u4f53\u306e[ipynb](http://nbviewer.ipython.org/gist/termoshtt/824ff3e766de5fe9fdd6)\u3092[gist](https://gist.github.com/termoshtt/824ff3e766de5fe9fdd6)\u306b\u304a\u3044\u3066\u304a\u304d\u307e\u3059\u3002\nQiita\u3067nbviewer\u57cb\u3081\u8fbc\u3081\u308c\u3070\u3044\u3044\u306e\u306b\u3002\n", "tags": ["Python", "Numba", "numpy"]}