{"tags": ["Network", "ns3", "Linux", "C++", "Python"], "context": "\n\n1. \u306f\u3058\u3081\u306b\n\u3000\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u306e\u307b\u3068\u3093\u3069\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306f\uff0cTCP\uff08Transmission Control Protocol\uff09\u306b\u3088\u3063\u3066\u5236\u5fa1\u3055\u308c\u3066\u3044\u308b\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\uff0eTCP\u306e\u7279\u5fb4\u306e\u4e00\u3064\u3068\u3057\u3066\uff0c\u9001\u4fe1\u30ce\u30fc\u30c9\u304c\u5404\u3005\u8f3b\u8f331\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08Congestion control algorithm\uff09\u306b\u57fa\u3065\u304d\uff0c\u4e00\u5ea6\u306b\u9001\u4fe1\u3059\u308b\u30c7\u30fc\u30bf\u91cf\u3092\u8abf\u6574\u3059\u308b\uff0c\u3068\u3044\u3046\u70b9\u304c\u3042\u308a\u307e\u3059\uff0e\u672c\u8a18\u4e8b\u3067\u306f\uff0cns-3\u3067\u5404\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u52d5\u4f5c\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3057\uff0cNumPy + matplotlib\u3067\u8996\u899a\u5316\u3057\u307e\u3059\uff0e\n\u3000TCP\u306e\u8f3b\u8f33\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6bd4\u8f03\u3059\u308b\u305f\u3081\u306b\uff0cns-3\u306b\u306ftcp-variants-comparison.cc\u3068\u3044\u3046\u30b5\u30f3\u30d7\u30eb\u30b7\u30ca\u30ea\u30aa\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u3057\u304b\u3057\uff0c\u3053\u306e\u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3068\uff0c\u672c\u8a18\u4e8b\u3067\u6ce8\u76ee\u3059\u308b\u3044\u304f\u3064\u304b\u306e\u5909\u6570\u3092\u30e2\u30cb\u30bf\uff08ns-3\u3067\u306f\uff0c\u30c8\u30ec\u30fc\u30b9\u3068\u547c\u3073\u307e\u3059\uff09\u3067\u304d\u306a\u3044\uff0c\u3068\u3044\u3046\u8ab2\u984c\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\u305d\u3053\u3067\uff0c\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u4efb\u610f\u306e\u30c8\u30ec\u30fc\u30b9\u60c5\u5831\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n\u306a\u304a\uff0c\u672c\u8a18\u4e8b\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\uff0c\u5168\u3066Github\u306b\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\uff0e\n\n2. \u74b0\u5883\u69cb\u7bc9\n\n2.1 ns-3 (Network Simulator 3)\nns-3\u306f\uff0c\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u96e2\u6563\u4e8b\u8c61\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3067\u3059\uff0e\u7814\u7a76\u3084\u6559\u80b2\u7528\u9014\u3067\u306e\u4f7f\u7528\u3092\u76ee\u7684\u306b\u958b\u767a\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u4e0b\u8a18\u306e\u8a18\u4e8b\u3067\u69cb\u7bc9\u3057\u305f\u74b0\u5883\u53ca\u3073\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3092\u524d\u63d0\u3068\u3057\u307e\u3059\uff0e\nns-3.26\u3067\u59cb\u3081\u308b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\n\n2.2 python\n\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u30c7\u30fc\u30bf\u51e6\u7406\u306bNumPy\uff0c\u30b0\u30e9\u30d5\u63cf\u753b\u306bmatplotlib\u3092\u5229\u7528\u3057\u307e\u3059\uff0e\u4e0b\u8a18\u306e\u74b0\u5883\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\uff0e\n\nPython 2.7.11\nNumPy 1.10.4\nmatplotlib 1.5.1\n\n\n3. TCP\u306b\u304a\u3051\u308b\u8f3b\u8f33\u5236\u5fa1\n\n3.1 \u6982\u8981\n\u3000\u4e0b\u56f3\u306f\uff0c\u672c\u8a18\u4e8b\u3067\u60f3\u5b9a\u3059\u308bTCP\u8f3b\u8f33\u5236\u5fa1\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3059\uff0eTCP\u306e\u9001\u4fe1\u30ce\u30fc\u30c9\uff08TCP Sender\uff09\u306f\uff0c\u53d7\u4fe1\u30ce\u30fc\u30c9\uff08TCP Receiver\uff09\u304b\u3089\u306e\u78ba\u8a8d\u5fdc\u7b54\uff08Acknowledgement\uff0cACK\uff0923\u3084\u4fe1\u53f7\u5f80\u5fa9\u6642\u9593\uff08Round Trip Time\uff0cRTT\uff09\u306b\u5fdc\u3058\u3066\uff0c\u30c7\u30fc\u30bf\u91cf\uff08DATA\uff09\u3092\u8abf\u6574\u3057\u307e\u3059\uff0e\n\n\u3000\u53b3\u5bc6\u306b\u306f\uff0c\u30c7\u30fc\u30bf\u91cf\u306e\u8abf\u6574\u306f\uff0cswnd=min(awnd,cwnd)swnd=min(awnd, cwnd)\u3068\u3044\u3046\u5f0f\u3067\u8868\u73fe\u3067\u304d\u307e\u3059\uff0e\u3053\u3053\u3067\uff0cswndswnd\u306fTCP Sender\u304cACK\u7121\u3057\u306b\u9001\u4fe1\u53ef\u80fd\u306aDATA\u6570\u306e\u4e0a\u9650\u5024\u3067\u3042\u308a\uff0ccwndcwnd\u306fTCP Sender\u304c\u81ea\u5f8b\u7684\u306b\u8abf\u6574\u3059\u308b\u30a6\u30a4\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\uff08Congestion window\uff09\u3067\u3042\u308a\uff0cawndawnd\u306fTCP Receiver\u304b\u3089\u544a\u77e5\u3055\u308c\u308b\u30a6\u30a4\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\uff08Advertised window\uff09\u3067\u3059\uff0e\u4e0a\u5f0f\u306e\u5358\u4f4d\u306f\u30bb\u30b0\u30e1\u30f3\u30c8\u3068\u547c\u3070\u308c\uff0c1\u30bb\u30b0\u30e1\u30f3\u30c8\u306e\u5927\u304d\u3055\u306fTCP Sender\u3068Receiver\u306e\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3\u3067\u6c7a\u307e\u308a\u307e\u3059\uff0eawndawnd\u306f\u975e\u5e38\u306b\u5927\u304d\u3044\u5024\u306b\u8a2d\u5b9a\u3055\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u305f\u3081\uff0c\u7c21\u5358\u306e\u305f\u3081\uff0c\u672c\u8a18\u4e8b\u3067\u306fcwndcwnd\u306e\u307f\u306b\u6ce8\u76ee\u3057\u307e\u3059\uff0e\n\u3000cwndcwnd\u304c\u5927\u304d\u3044\u307b\u3069\uff0c\u305f\u304f\u3055\u3093\u306e\u30c7\u30fc\u30bf\u3092\u4e00\u5ea6\u306b\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0eTCP Sender\u306f\uff0cACK\u3084RTT\u304b\u3089\uff0cReceiver\u3068\u306e\u9593\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6df7\u307f\u5177\u5408\u3092\u4e88\u6e2c\u3057\u3066\uff0c\u81ea\u5f8b\u7684\u306bcwndcwnd\u306e\u5927\u304d\u3055\u3092\u8abf\u6574\u3057\u307e\u3059\uff0ecwndcwnd\u306e\u8abf\u6574\u6226\u7565\u3092\uff0c\u672c\u8a18\u4e8b\u3067\u306f\u8f3b\u8f33\u5236\u5fa1\u3068\u547c\u3073\u307e\u3059\uff0e\n\u3000\u8f3b\u8f33\u5236\u5fa1\u306f\uff0c\u8f3b\u8f33\u72b6\u614b4\uff08Congestion state\uff09\u3068\uff0c\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08Congestion control algorithm\uff09\u3068\u3044\u3046\uff12\u3064\u306e\u8981\u7d20\u306b\u3088\u3063\u3066\u6c7a\u307e\u308a\u307e\u3059\uff0e\u8f3b\u8f33\u72b6\u614b\u306f\uff0cOPEN\uff0cDISORDER\uff0cRECOVER\uff0cLOSS\u7b49\uff0c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6df7\u96d1\u72b6\u614b\u3092\u8868\u3057\u307e\u3059\uff0e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\uff0c\u5404\u8f3b\u8f33\u72b6\u614b\u306b\u304a\u3051\u308bcwndcwnd\u306e\u66f4\u65b0\u65b9\u6cd5\u3092\u8868\u3057\u307e\u3059\uff0e\n\n3.2 \u8f3b\u8f33\u72b6\u614b\uff08Congestion state\uff09\n\u3000\u672c\u8a18\u4e8b\u3067\u306f\uff0cns-3\u306e\u5b9f\u88c5\uff08~/ns-3.26/source/ns-3.26/src/internet/model/tcp-socket-base.cc\uff09\u306b\u57fa\u3065\u304d\uff0c\u4ee5\u4e0b\u306e4\u7a2e\u985e\u306e\u8f3b\u8f33\u72b6\u614b\u3092\u60f3\u5b9a\u3057\u307e\u3059\uff0e\n\n\n\nOPEN\uff1a\u3044\u308f\u3086\u308b\u6b63\u5e38\u306a\u72b6\u614b\u3067\u3059\uff0e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u3063\u3066\u306f\uff0cSlow start\uff08SS\uff09\u3068Congestion avoidance\uff08CA\uff09\u3068\u3044\u3046\u4e8c\u7a2e\u985e\u306e\u30d5\u30a7\u30fc\u30ba\u3092\u6301\u3061\u307e\u3059\uff0ecwndcwnd\u304c\u95be\u5024\uff08Slow start threshold, ssthssth\uff09\u3088\u308a\u5c0f\u3055\u3044\u3068\u304d\u306fSlow start\u30d5\u30a7\u30fc\u30ba\u306b\uff0c\u5927\u304d\u3044\u3068\u304d\u306fCongestion avoidance\u30d5\u30a7\u30fc\u30ba\u306b\u8a72\u5f53\u3057\u307e\u3059\uff0e\n\nDISORDER\uff1a\u91cd\u8907ACK\uff08Duplicate ACK\uff09\u3092\u53d7\u4fe1\u3057\u305f\u72b6\u614b\u3067\u3059\uff0e\u30d1\u30b1\u30c3\u30c8\u30ed\u30b9\u3084\u53d7\u4fe1\u9806\u5e8f\u306e\u4e71\u308c\u7b49\u306e\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\uff0e\n\nRECOVERY\uff1a3\u5ea6\u91cd\u8907ACK\uff08Triple duplicate ACK\uff09\u3092\u53d7\u4fe1\u3057\u305f\u72b6\u614b\u3067\u3059\uff0e\u30d1\u30b1\u30c3\u30c8\u30ed\u30b9\u3092\u78ba\u4fe1\u3057\uff0c\u518d\u9001\u3092\u958b\u59cb\u3057\u307e\u3059\uff0e\n\nLOSS\uff1aRTT\u304c\u518d\u9001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u9593\uff08Retransmission Time Out, RTO\uff09\u3088\u308a\u5927\u304d\u304f\u306a\u308b\uff0c\u3064\u307e\u308aACK\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u691c\u77e5\u3057\u305f\u72b6\u614b\u3067\u3059\uff0e\u6df1\u523b\u306a\u8f3b\u8f33\u304c\u751f\u3058\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\uff0e\n\n\n3.3 \u8f3b\u8f33\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08Congestion control algorithm\uff09\n\u3000\u672c\u8a18\u4e8b\u3067\u306f\uff0cns-3\u306e\u5b9f\u88c5\u306b\u57fa\u3065\u304d\uff0c\u4ee5\u4e0b\u306e\u8f3b\u8f33\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u60f3\u5b9a\u3057\u307e\u3059\uff0eTypeId\u3068\u306f\uff0cns-3\u306b\u304a\u3051\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u547c\u3073\u540d\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\uff0e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\uff0c\u305d\u308c\u305e\u308c~/ns-3.26/source/ns-3.26/src/internet/model\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\n\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\nTypeId\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\n\n\nNewReno\nTcpNewReno\ntcp-congestion-ops.cc\n\n\nHighSpeed\nTcpHighSpeed\ntcp-highspeed.cc\n\n\nHybla\nTcpHybla\ntcp-hybla.cc\n\n\nWestwood\nTcpWestwood\ntcp-westwood.cc\n\n\nWestwood+\nTcpWestwoodPlus\ntcp-westwood.cc\n\n\nVegas\nTcpVegas\ntcp-vegas.cc\n\n\nScalable\nTcpScalable\ntcp-scalable.cc\n\n\nVeno\nTcpVeno\ntcp-veno.cc\n\n\nBic\nTcpBic\ntcp-bic.cc\n\n\nYeAH\nTcpYeah\ntcp-yeah.cc\n\n\nIllinois\nTcpIllinois\ntcp-illinois.cc\n\n\nH-TCP\nTcpHtcp\ntcp-htcp.cc\n\n\n\n\u3000\u4f8b\u3048\u3070\uff0c\u6700\u3082\u30e1\u30b8\u30e3\u30fc\u306a\u8f3b\u8f33\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\uff11\u3064\u3067\u3042\u308bNewReno\uff08Reno\uff09\u306f\uff0c\u5404\u8f3b\u8f33\u72b6\u614b\u306b\u304a\u3044\u3066\u6b21\u306e\u3088\u3046\u306bcwndcwnd\u3092\u66f4\u65b0\u3057\u307e\u3059\uff0e\n\n\n\n\u66f4\u65b0\u5951\u6a5f\n\u66f4\u65b0\u5f0f\n\n\n\n\n\nOPEN\uff08SS\uff09\u72b6\u614b\u3067\uff0cACK\u3092\u53d7\u4fe1\u3057\u305f\u3068\u304d\ncwnd\u2190cwnd+1 cwnd \\gets cwnd + 1\n\n\n\nOPEN\uff08CA\uff09\u72b6\u614b\u3067\uff0cACK\u3092\u53d7\u4fe1\u3057\u305f\u3068\u304d\ncwnd\u2190cwnd+1cwnd \\displaystyle cwnd \\gets cwnd + \\frac{1}{cwnd}\n\n\n\nRECOVERY\u72b6\u614b\u306b\u9077\u79fb\u3057\u305f\u3068\u304d\nssth\u2190max(inflight/2,2\u22c5smss)ssth \\gets max(\\mathit{inflight} /2, 2 \\cdot smss),  cwnd\u2190ssth+3cwnd \\gets ssth +3\n\n\n\nRECOVERY\u72b6\u614b\u3067\uff0c\u91cd\u8907ACK\u3092\u53d7\u4fe1\u3057\u305f\u3068\u304d\ncwnd\u2190cwnd+1 \\displaystyle cwnd \\gets cwnd + 1\n\n\n\nRECOVERY\u72b6\u614b\u3067\uff0c\u65b0\u898fACK\u3092\u53d7\u4fe1\u3057\uff0cOPEN\u72b6\u614b\u306b\u9077\u79fb\u3057\u305f\u3068\u304d\ncwnd\u2190ssth cwnd \\gets ssth\n\n\n\nLOSS\u72b6\u614b\u306b\u9077\u79fb\u3057\u305f\u3068\u304d\ncwnd\u2190smss cwnd \\gets smss\uff0c ssth\u2190max(inflight/2,2\u22c5smss)ssth \\gets max(\\mathit{inflight} /2, 2 \\cdot smss)\n\n\n\n\u3000\u3053\u3053\u3067\uff0cinflight\\mathit{inflight}\u306f\uff0cACK\u304c\u8fd4\u3063\u3066\u3044\u306a\u3044DATA\u306e\u7dcf\u91cf\u3092\u8868\u3057\uff0csmsssmss\u306f\u6700\u5c0f\u30bb\u30b0\u30e1\u30f3\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u3057\u307e\u3059\uff0e\u307e\u305f\uff0c\u7c21\u5358\u306e\u305f\u3081Partial ACK\u3084Full ACK\u7b49\u306f\u8003\u616e\u3057\u3066\u3044\u307e\u305b\u3093\uff0eNewReno\u306e\u52d5\u4f5c\u306e\u8a73\u7d30\u306f\uff0cRFC6582\u7b49\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\uff0e\n\u3000NewReno\u306f\uff0c\u8f3b\u8f33\u306e\u53ef\u80fd\u6027\u304c\u4f4e\u3044\u3068\u601d\u308f\u308c\u308bSlow start\u30d5\u30a7\u30fc\u30ba\u306b\u304a\u3044\u3066\u306f\uff0ccwndcwnd\u3092\u9ad8\u901f\u306b\u5897\u52a0\u3055\u305b\u308b\u3053\u3068\u3067DATA\u3092\u52b9\u7387\u7684\u306b\u9001\u4fe1\u3057\uff0c\u4e00\u65b9\u3067\u8f3b\u8f33\u306e\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u3068\u601d\u308f\u308c\u308bCongestion avoidance\u30d5\u30a7\u30fc\u30ba\u306b\u304a\u3044\u3066\u306f\uff0c\u5f90\u3005\u306bcwndcwnd\u3092\u4e0a\u3052\u308b\u3053\u3068\u3067\u6025\u6fc0\u306a\u8f3b\u8f33\u3092\u56de\u907f\u3059\u308b\uff0c\u3068\u3044\u3046\u6226\u7565\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\n\u3000ACK\u53d7\u4fe1\u3092\u5951\u6a5f\u3068\u3059\u308b\u66f4\u65b0\u5f0f\u306f\uff0c1\u30bb\u30b0\u30e1\u30f3\u30c8\u5206\u306eACK\u306b\u5bfe\u3059\u308b\u66f4\u65b0\u5f0f\u3068\u3044\u3046\u70b9\u306b\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\uff08\u79c1\u306f\u3053\u3053\u3067\u30cf\u30de\u308a\u307e\u3057\u305f\uff09\uff0e\u4f8b\u3048\u3070\uff0ccwnd=4cwnd=4\u306e\u3068\u304d\uff0cTCP Sender\u306f4\u30bb\u30b0\u30e1\u30f3\u30c8\u5206\u306eDATA\u306b\u5bfe\u3059\u308bACK2\u3092\u53d7\u4fe1\u3059\u308b\u305f\u3081\uff0c\u4e0a\u8a18\u306e\u66f4\u65b0\u30924\u56de\u884c\u3044\u307e\u3059\uff0e\n\u3000\u306a\u304a\uff0cns-3\u306b\u304a\u3051\u308bTCP\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e3\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u304c\uff0c\u672c\u8a18\u4e8b\u3067\u306fns-3\u30cd\u30a4\u30c6\u30a3\u30d6\uff08src/internet/model\uff09\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u307f\u3092\u5bfe\u8c61\u3068\u3057\u307e\u3059\uff0e\u3064\u307e\u308a\uff0cLinux\u3067\u30e1\u30b8\u30e3\u30fc\u306aCUBIC\u3084\uff0cWindows\u3067\u30e1\u30b8\u30e3\u30fc\u306aCTCP\u306f\u5bfe\u8c61\u5916\u3067\u3059\uff0e\u3053\u308c\u3089\u306b\u3064\u3044\u3066\u306f\uff0c\u5225\u9014\u3054\u7d39\u4ecb\u3067\u304d\u308c\u3070\u3068\u601d\u3063\u3066\u3044\u307e\u3059\uff0e\n\nns-3\u30cd\u30a4\u30c6\u30a3\u30d6\uff08src/internet/\uff09\nNSC\uff08Network Simulation Cradle\uff09\nDCE\uff08Direct Code Execution\uff09\n\n\n4. \u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\n\u672c\u7ae0\u3067\u306f\uff0c\u3082\u3068\u306b\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b7\u30ca\u30ea\u30aatcp-variants-comparison.cc\u306e\u89e3\u8aac\u3068\uff0c\u305d\u306e\u8ab2\u984c\uff0c\u305d\u3057\u3066\u4fee\u6b63\u7248\u306emy-tcp-variants-comparison.cc\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n4.1 \u3082\u3068\u306b\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b7\u30ca\u30ea\u30aa\n\u3000ns-3\u306f\uff0cTCP\u306e\u8f3b\u8f33\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6bd4\u8f03\u7528\u306b\uff0ctcp-variants-comparison.cc\n\u3068\u3044\u3046\u30b5\u30f3\u30d7\u30eb\u30b7\u30ca\u30ea\u30aa\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\uff08~/ns-3.26/source/ns-3.26/examples/tcp/\u306b\u3042\u308a\u307e\u3059\uff09\uff0e\u672c\u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u306f\uff0c\u4ee5\u4e0b\u306e\u5909\u6570\u306e\u6642\u5909\u5316\u3092\u30c8\u30ec\u30fc\u30b9\u3057\uff0c\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff0e\n\nCwnd\uff1a\u524d\u8a18cwndcwnd\uff0e\u305f\u3060\u3057\u5358\u4f4d\u306f\u30d0\u30a4\u30c8\u3067\u3059\uff0e\nSsThresh\uff1a\u524d\u8a18ssthssth\uff0e\u305f\u3060\u3057\u5358\u4f4d\u306f\u30d0\u30a4\u30c8\u3067\u3059\uff0e\nRtt\uff1a\u524d\u8a18RTT\uff0e\u5358\u4f4d\u306f[s]\u3067\u3059\uff0e\nRto\uff1a\u524d\u8a18RTO\uff0e\u5358\u4f4d\u306f[s]\u3067\u3059\uff0e\nNextTx\uff1aTCP Sender\u304c\u6b21\u306b\u9001\u4fe1\u3059\u308b\u4e88\u5b9a\u306eSequence number\u3067\u3059\uff0e\nNextRx\uff1aTCP Receiver\u304c\u6b21\u306b\u53d7\u4fe1\u3059\u308b\u4e88\u5b9a\u306eSequence number\u3067\u3059\uff0e\nInFlight\uff1a\u524d\u8a18inflight\\mathit{inflight}\uff0e\u305f\u3060\u3057\uff0c\u5358\u4f4d\u306f\u30d0\u30a4\u30c8\u3067\u3059\uff0eTCP\u306e\u539f\u7406\u4e0a\uff0c\u5fc5\u305acwndcwnd\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\uff0e\n\n\u4ee5\u4e0b\u3067\u306f\uff0c\u672c\u8a18\u4e8b\u306e\u30c6\u30fc\u30de\u3067\u3042\u308b\u30c8\u30ec\u30fc\u30b9\u306b\u7279\u306b\u30b9\u30dd\u30c3\u30c8\u3092\u5f53\u3066\uff0c\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u89e3\u8aac\u3057\u307e\u3059\uff0e\n\n\u30c8\u30ec\u30fc\u30b9\u7528\u5909\u6570\n\u300058\u884c\u76ee\u304b\u308970\u884c\u76ee\u3067\uff0c\u30c8\u30ec\u30fc\u30b9\u306b\u7528\u3044\u308b\u5909\u6570\u306e\u5b9a\u7fa9\u3092\u884c\u3044\u307e\u3059\uff0ebool first*\u306f\uff0c\u305d\u308c\u305e\u308c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306e\u521d\u671f\u5024\u3092\u51fa\u529b\u3059\u308b\u304b\u5426\u304b\u3092\u8868\u3057\uff0cPtr<OutputStreamWrapper> *Stream\u306f\uff0c\u305d\u308c\u305e\u308c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u3092\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u8868\u3057\uff0cuint32_t *Value\u306f\uff0c\u305d\u308c\u305e\u308c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306e\u521d\u671f\u5024\u3092\u53d6\u308a\u6271\u3046\u969b\u306b\u4e00\u6642\u7684\u306b\u4f7f\u7528\u3055\u308c\u308b\u5909\u6570\u3092\u8868\u3057\u307e\u3059\uff0e\n\ntcp-variants-comparison.cc\uff0858\u884c\u76ee\u304b\u308970\u884c\u76ee\uff09\nbool firstCwnd = true;\nbool firstSshThr = true;\nbool firstRtt = true;\nbool firstRto = true;\nPtr<OutputStreamWrapper> cWndStream;\nPtr<OutputStreamWrapper> ssThreshStream;\nPtr<OutputStreamWrapper> rttStream;\nPtr<OutputStreamWrapper> rtoStream;\nPtr<OutputStreamWrapper> nextTxStream;\nPtr<OutputStreamWrapper> nextRxStream;\nPtr<OutputStreamWrapper> inFlightStream;\nuint32_t cWndValue;\nuint32_t ssThreshValue;\n\n\n\n\u30c8\u30ec\u30fc\u30b9\u7528\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u8a2d\u5b9a\n\u300073\u884c\u76ee\u304b\u3089145\u884c\u76ee\u3067\u306f\u30c8\u30ec\u30fc\u30b9\u7528\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570*Tracer()\u306e\u5b9a\u7fa9\u3092\uff0c147\u884c\u76ee\u304b\u3089202\u884c\u76ee\u3067\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u3068\u7d10\u4ed8\u3051\u308b\u95a2\u6570Trace*()\u306e\u5b9a\u7fa9\u3092\u884c\u3044\u307e\u3059\uff0e\u3053\u3053\u3067\u306f\uff0c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306e\uff11\u3064\u3067\u3042\u308bBytesInFlight\u3092\u4f8b\u306b\u89e3\u8aac\u3057\u307e\u3059\uff0e\n\ntcp-variants-comparison.cc\uff0873\u884c\u76ee\u304b\u3089202\u884c\u76ee\uff09\nstatic void\nInFlightTracer (uint32_t old, uint32_t inFlight)\n{\n  *inFlightStream->GetStream () << Simulator::Now ().GetSeconds () << \" \" << inFlight << std::endl;\n}\n\n//===== \u7565 =====\n\nstatic void\nTraceInFlight (std::string &in_flight_file_name)\n{\n  AsciiTraceHelper ascii;\n  inFlightStream = ascii.CreateFileStream (in_flight_file_name.c_str ());\n  Config::ConnectWithoutContext (\"/NodeList/1/$ns3::TcpL4Protocol/SocketList/0/BytesInFlight\", MakeCallback (&InFlightTracer));\n}\n\n\n\u3000ns-3\u306b\u304a\u3044\u3066\u306f\uff0c\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\uff08ns-3.26/source/ns-3.26/src/*/model/\uff09\u4e2d\u3067AddTraceSource()\u3055\u308c\u305f\u5168\u3066\u306e\u5909\u6570\u3092\uff0c\u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u4e2d\u3067\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u3068\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u4e0a\u8a18\u306eBytesInFlight\u306f\uff0c~/ns-3.26/source/ns-3.26/src/internet/model/tcp-socket-base.cc\u306b\u304a\u3044\u3066AddTraceSource()\u3055\u308c\u3066\u3044\u307e\u3059\uff0ens-3\u306f\uff0c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u3068\u306a\u3063\u305f\u5909\u6570\u304c\u66f4\u65b0\u3055\u308c\u308b\u5ea6\u306b\uff0c\u305d\u306e\u5909\u6570\u306b\u7d10\u4ed8\u3051\u3089\u308c\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\uff0e\u3088\u3063\u3066\uff0c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306e\u8a2d\u5b9a\u306b\u306f\uff0c\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u5b9a\u7fa9\u3068\uff0c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u3068\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u7d10\u4ed8\u3051\u304c\u5fc5\u8981\u3067\u3059\uff0e\n\u3000\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3068\u3057\u3066\uff0c\u4e0a\u8a18InFlightTracer()\u306e\u3088\u3046\u306a\u95a2\u6570\u304c\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\uff0eInFlightTracer()\u306f\uff0c\u73fe\u5728\u6642\u523b\uff08Simulator::Now ().GetSeconds ()\uff09\u3068\uff0c\u66f4\u65b0\u5f8c\u306e\u5024\uff08inFlight\uff09\u3092\uff0c\u90fd\u5ea6\u51fa\u529b\u3059\u308b\u95a2\u6570\u3067\u3059\uff0e\n\u3000\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u3068\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u7d10\u4ed8\u3051\u6642\u306b\u306f\uff0c\u4e0a\u8a18TraceInFlight()\u306b\u3042\u308b\u3088\u3046\u306b\uff0cConfig::ConnectWithoutContext(variable, MakeCallback(&func))\u3068\u3044\u3046\u69cb\u6587\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u3053\u3053\u3067\uff0cvariable\u306f\uff0c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306eObject\u306e\u30d1\u30b9\u3092\u8a18\u8f09\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e/NodeList/1/$ns3::TcpL4Protocol/SocketList/0/BytesInFlight\u306f\uff0cNodeList1\u756a\u306e\u30ce\u30fc\u30c9\u306b\u3076\u3089\u4e0b\u304c\u308b\uff0cSocketList0\u756a\u306e\u30bd\u30b1\u30c3\u30c8\u306e\uff0c\u5909\u6570BytesInFlight\u3092\u610f\u5473\u3057\u307e\u3059\uff0e\n\u3000ns-3\u306b\u304a\u3051\u308b\u30c8\u30ec\u30fc\u30b9\u65b9\u6cd5\u306e\u8a73\u7d30\u306f\uff0c\u516c\u5f0f\u30de\u30cb\u30e5\u30a2\u30eb\u306e1.10\u7bc0\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\uff0e\n\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u6210\n\u3000204\u884c\u76ee\u4ee5\u964d\u306emain()\u3067\uff0c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u6210\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\uff0e\u8a73\u7d30\u306f\u516c\u5f0f\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u8b72\u308a\uff0c\u3053\u3053\u3067\u306f\u30dd\u30a4\u30f3\u30c8\u306e\u307f\u8a18\u8f09\u3057\u307e\u3059\uff0e\n\n\u4e0a\u306e\u56f3\u306f\uff0c\u672c\u30b7\u30ca\u30ea\u30aa\u306e\u30a4\u30e1\u30fc\u30b8\u56f3\u3067\u3059\uff0eTCP Sender\u3068Receiver\u304c\u305d\u308c\u305e\u308c\uff11\u3064\u305a\u3064\u306e\uff0c\u7c21\u5358\u306a\u69cb\u6210\u3092\u60f3\u5b9a\u3057\u307e\u3059\uff0eFTP\u30e9\u30a4\u30af\u306a\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u9001\u4fe1\u3092\u6a21\u64ec\u3059\u308b\uff0cBulkSendHelper\u3092\u5229\u7528\u3057\u307e\u3059\uff0eIP\u30d1\u30b1\u30c3\u30c8\u30b5\u30a4\u30ba\u306f400\u30d0\u30a4\u30c8\u3067\u3059\uff0e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6642\u9593\u306f\uff0c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067100\u79d2\u9593\u3067\u3059\uff0e\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\n\u3000224\u884c\u76ee\u304b\u3089243\u884c\u76ee\u3067\uff0c\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\u524d\u56de\u306e\u8a18\u4e8b\u3067\u3054\u7d39\u4ecb\u3057\u305f\u3088\u3046\u306b\uff0cCommandLine.AddValue()\u3059\u308b\u3053\u3068\u3067\uff0c\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\uff0e\n\ntcp-variants-comparison.cc\uff08224\u884c\u76ee\u304b\u3089243\u884c\u76ee\uff09\nCommandLine cmd;\n  cmd.AddValue (\"transport_prot\", \"Transport protocol to use: TcpNewReno, \"\n                \"TcpHybla, TcpHighSpeed, TcpHtcp, TcpVegas, TcpScalable, TcpVeno, \"\n                \"TcpBic, TcpYeah, TcpIllinois, TcpWestwood, TcpWestwoodPlus \", transport_prot);\n  cmd.AddValue (\"error_p\", \"Packet error rate\", error_p);\n  cmd.AddValue (\"bandwidth\", \"Bottleneck bandwidth\", bandwidth);\n  cmd.AddValue (\"delay\", \"Bottleneck delay\", delay);\n  cmd.AddValue (\"access_bandwidth\", \"Access link bandwidth\", access_bandwidth);\n  cmd.AddValue (\"access_delay\", \"Access link delay\", access_delay);\n  cmd.AddValue (\"tracing\", \"Flag to enable/disable tracing\", tracing);\n  cmd.AddValue (\"prefix_name\", \"Prefix of output trace file\", prefix_file_name);\n  cmd.AddValue (\"data\", \"Number of Megabytes of data to transmit\", data_mbytes);\n  cmd.AddValue (\"mtu\", \"Size of IP packets to send in bytes\", mtu_bytes);\n  cmd.AddValue (\"num_flows\", \"Number of flows\", num_flows);\n  cmd.AddValue (\"duration\", \"Time to allow flows to run in seconds\", duration);\n  cmd.AddValue (\"run\", \"Run index (for setting repeatable seeds)\", run);\n  cmd.AddValue (\"flow_monitor\", \"Enable flow monitor\", flow_monitor);\n  cmd.AddValue (\"pcap_tracing\", \"Enable or disable PCAP tracing\", pcap);\n  cmd.AddValue (\"queue_disc_type\", \"Queue disc type for gateway (e.g. ns3::CoDelQueueDisc)\", queue_disc_type);\n  cmd.Parse (argc, argv);\n\n\n\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u7279\u306b\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u5229\u7528\u3057\u307e\u3059\uff0e\n\n\ntransport_prot\uff1a\u8f3b\u8f33\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\uff0e\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u3063\u306612\u7a2e\u985e\u5168\u3066\u3092\u9806\u756a\u306b\u6307\u5b9a\u3057\u307e\u3059\uff0e\n\ntracing\uff1a\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u306e\u6709\u7121\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067False\u306a\u306e\u3067\uff0cTrue\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\n\nduration\uff1a\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6642\u9593\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e100\u79d2\u306f\u9577\u3059\u304e\u308b\u306e\u3067\uff0c\u672c\u8a18\u4e8b\u3067\u306f20\u79d2\u306b\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\n\nprefix_name\uff1a\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3060\u3068\uff0c~/ns-3.26/source/ns-3.26/\u76f4\u4e0b\u306b\u5927\u91cf\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5410\u3044\u3066\u3057\u307e\u3046\u306e\u3067\uff0cdata\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b\u5410\u304f\u3088\u3046\u4fee\u6b63\u3057\u307e\u3059\uff0e\n\n\n\u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\n\u3000460\u884c\u76ee\u304b\u3089476\u884c\u76ee\u3067\uff0c\u4e0a\u8a18TraceInFlight()\u7b49\u306e\u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a\u95a2\u6570\uff08\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3068\uff0c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u3092\u7d10\u4ed8\u3051\u308b\u95a2\u6570\uff09\u3092\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3057\u307e\u3059\uff0e\n\ntcp-variants-comparison.cc\uff08460\u884c\u76ee\u304b\u3089476\u884c\u76ee\uff09\n  if (tracing)\n    {\n      std::ofstream ascii;\n      Ptr<OutputStreamWrapper> ascii_wrap;\n      ascii.open ((prefix_file_name + \"-ascii\").c_str ());\n      ascii_wrap = new OutputStreamWrapper ((prefix_file_name + \"-ascii\").c_str (),\n                                            std::ios::out);\n      stack.EnableAsciiIpv4All (ascii_wrap);\n\n      Simulator::Schedule (Seconds (0.00001), &TraceCwnd, \n                           prefix_file_name + \"-cwnd.data\");\n      Simulator::Schedule (Seconds (0.00001), &TraceSsThresh, \n                           prefix_file_name + \"-ssth.data\");\n      Simulator::Schedule (Seconds (0.00001), &TraceRtt, \n                           prefix_file_name + \"-rtt.data\");\n      Simulator::Schedule (Seconds (0.00001), &TraceRto, \n                           prefix_file_name + \"-rto.data\");\n      Simulator::Schedule (Seconds (0.00001), &TraceNextTx, \n                           prefix_file_name + \"-next-tx.data\");\n      Simulator::Schedule (Seconds (0.00001), &TraceInFlight, \n                           prefix_file_name + \"-inflight.data\");\n      Simulator::Schedule (Seconds (0.1), &TraceNextRx, \n                           prefix_file_name + \"-next-rx.data\");\n    }\n\n\nns-3\u3067\u306f\uff0cSimulator::Schedule(time, &func, args,...)\u3068\u3044\u3046\u69cb\u6587\u3067\uff0ctime\u6642\u306bfunc(args,...)\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3067\u304d\u307e\u3059\uff0e\n\u3000\u3057\u304b\u3057\uff0c\u306a\u305c\u5730\u306e\u6587\u3067Trace*()\u3057\u3066\u306f\u3044\u3051\u306a\u3044\u306e\u304b\uff0c\u30a4\u30de\u30a4\u30c1\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3067\u3059\uff0e\u304a\u305d\u3089\u304f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u751f\u6210\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u554f\u984c\u306e\u6c17\u304c\u3059\u308b\u306e\u3067\u3059\u304c\u2026\uff0e\n\n4.2 tcp-variants-comparison.cc\u306e\u8ab2\u984c\n\u3000tcp-variants-comparison.cc\u306f\uff0c\u975e\u5e38\u306b\u3088\u304f\u3067\u304d\u305f\u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u3067\uff0c\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u3044\u3058\u308b\u3060\u3051\u3067\u304b\u306a\u308a\u904a\u3079\u307e\u3059\uff0e\u3057\u304b\u3057\uff0c\u6211\u3005\u304c\u8208\u5473\u306e\u3042\u308b\uff0cACK\u3084\u8f3b\u8f33\u72b6\u614b\u3092\u30c8\u30ec\u30fc\u30b9\u3067\u304d\u307e\u305b\u3093\uff01\n\u3000\u5e78\u3044\u306b\u3082\uff0c\u6700\u65b0\u306eACK\u3092\u8868\u3059\u5909\u6570HighestRxAck\u3068\uff0c\u8f3b\u8f33\u72b6\u614b\u3092\u8868\u3059\u5909\u6570CongState\u306f\uff0c\u305d\u308c\u305e\u308ctcp-socket-base.cc\u3067AddTraceSource()\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u3088\u3063\u3066\uff0c\u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u5c11\u3057\u5909\u66f4\u3092\u52a0\u3048\u308b\u3060\u3051\u3067\uff0c\u3053\u308c\u3089\u3092\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u4ee5\u4e0b\u3067\u306f\uff0c\u305d\u306e\u65b9\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n4.3 \u65b0\u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8my-tcp-variants-comparison.cc\n\n\u3000\u307e\u305a\uff0c\u3082\u3068\u306b\u3059\u308btcp-variants-comparison.cc\u3092~/ns-3.26/source/ns-3.26/scratch\u306b\u30b3\u30d4\u30fc\u3057\uff0c\u540d\u524d\u3092my-tcp-variants-comparison.cc\u306b\u5909\u66f4\u3057\u307e\u3059\uff0e\n$ cd ~/ns-3.26/source/ns-3.26\n$ cp examples/tcp/tcp-variants-comparison.cc scratch/my-tcp-variants-comparison.cc \n\n\u3000ACK\u3068\u8f3b\u8f33\u72b6\u614b\u3092\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306b\u8ffd\u52a0\u3059\u308b\u305f\u3081\uff0c\u30c8\u30ec\u30fc\u30b9\u7528\u5909\u6570\u306e\u8ffd\u52a0\uff0c\u30c8\u30ec\u30fc\u30b9\u7528\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u8a2d\u5b9a\uff0c\u304a\u3088\u3073\u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3092\u884c\u3044\u307e\u3059\uff0e\n\n\u30c8\u30ec\u30fc\u30b9\u7528\u5909\u6570\u306e\u8ffd\u52a0\n\u3000ACK\u30c8\u30ec\u30fc\u30b9\u7528\u306e\u30b9\u30c8\u30ea\u30fc\u30e0ackStream\u3068\uff0c\u8f3b\u8f33\u72b6\u614b\u30c8\u30ec\u30fc\u30b9\u7528\u306e\u30b9\u30c8\u30ea\u30fc\u30e0congStateStream\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\nmy-tcp-variants-comparison.cc\uff08tcp-variants-comparison.cc\u306e58\u884c\u76ee\u304b\u308970\u884c\u76ee\u76f8\u5f53\uff09\nbool firstCwnd = true;\nbool firstSshThr = true;\nbool firstRtt = true;\nbool firstRto = true;\nPtr<OutputStreamWrapper> cWndStream;\nPtr<OutputStreamWrapper> ssThreshStream;\nPtr<OutputStreamWrapper> rttStream;\nPtr<OutputStreamWrapper> rtoStream;\nPtr<OutputStreamWrapper> nextTxStream;\nPtr<OutputStreamWrapper> nextRxStream;\nPtr<OutputStreamWrapper> inFlightStream;\nPtr<OutputStreamWrapper> ackStream; // NEW!\nPtr<OutputStreamWrapper> congStateStream; // NEW!\nuint32_t cWndValue;\nuint32_t ssThreshValue;\n\n\n\n\u30c8\u30ec\u30fc\u30b9\u7528\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u8a2d\u5b9a\n\u3000ACK\u30c8\u30ec\u30fc\u30b9\u7528\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570AckTrace()\u3068\uff0c\u8f3b\u8f33\u72b6\u614b\u30c8\u30ec\u30fc\u30b9\u7528\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570CongStateTracer()\u3092\u305d\u308c\u305e\u308c\u8ffd\u52a0\u3057\u307e\u3059\uff0e\u306a\u304a\uff0c\u8f3b\u8f33\u72b6\u614b\u306f\uff0ctcp-socket-base.h\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u5217\u6319\u578bTcpSocketState::TcpCongState_t\u3067\u3059\uff0e\u307e\u305f\uff0c\u4e0a\u8a18\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3068\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306e\u5909\u6570\u3092\u7d10\u4ed8\u3051\u308b\u95a2\u6570TraceAck()\u304a\u3088\u3073TraceCongState()\u3082\uff0c\u305d\u308c\u305e\u308c\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\nmy-tcp-variants-comparison.cc\uff08tcp-variants-comparison.cc\u306e73\u884c\u76ee\u304b\u3089202\u884c\u76ee\u76f8\u5f53\uff09\nstatic void\nAckTracer (SequenceNumber32 old, SequenceNumber32 newAck)\n{\n  *ackStream->GetStream () << Simulator::Now ().GetSeconds () << \" \" << newAck << std::endl;\n}\n\nstatic void\nCongStateTracer (TcpSocketState::TcpCongState_t old, TcpSocketState::TcpCongState_t newState)\n{\n  *congStateStream->GetStream () << Simulator::Now ().GetSeconds () << \" \" << newState << std::endl;\n}\n\n//===== \u7565 =====\n\nstatic void\nTraceAck (std::string &ack_file_name)\n{\n  AsciiTraceHelper ascii;\n  ackStream = ascii.CreateFileStream (ack_file_name.c_str ());\n  Config::ConnectWithoutContext (\"/NodeList/1/$ns3::TcpL4Protocol/SocketList/0/HighestRxAck\", MakeCallback (&AckTracer));\n}\n\nstatic void\nTraceCongState (std::string &cong_state_file_name)\n{\n  AsciiTraceHelper ascii;\n  congStateStream = ascii.CreateFileStream (cong_state_file_name.c_str ());\n    Config::ConnectWithoutContext (\"/NodeList/1/$ns3::TcpL4Protocol/SocketList/0/CongState\", MakeCallback (&CongStateTracer));\n}\n\n\n\n\u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\n\u3000\u6700\u5f8c\u306b\uff0c\u4e0a\u8a18TraceAck()\u304a\u3088\u3073TraceCongState()\u3092\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3057\u307e\u3059\uff0e\n\nmy-tcp-variants-comparison.cc\uff08tcp-variants-comparison.cc460\u884c\u76ee\u304b\u3089476\u884c\u76ee\u76f8\u5f53\uff09\n  if (tracing)\n    {\n\n// ===== \u7565 =====\n\n      Simulator::Schedule (Seconds (0.00001), &TraceAck, prefix_file_name + \"-ack.data\"); // NEW!\n      Simulator::Schedule (Seconds (0.00001), &TraceCongState, prefix_file_name + \"-cong-state.data\"); // NEW!\n    }\n\n\n\n4.4 my-tcp-variants-comparison.cc\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\n\u3000~/ns-3.26/source/ns-3.26\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067./waf\u3059\u308b\u3053\u3068\u3067\uff0cmy-tcp-variants-comparison.cc\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u3059\uff0e\n$ ./waf\nWaf: Entering directory '/home/ryoma/ns-3.26/source/ns-3.26/build'\n[ 985/2524] Compiling scratch/my-tcp-variants-comparison.cc\n[2501/2524] Linking build/scratch/my-tcp-variants-comparison\nWaf: Leaving directory '~/ns-3.26/source/ns-3.26/source/ns-3.26/build'\nBuild commands will be stored in build/compile_commands.json\n'build' finished successfully (3.240s)\n\nModules built:\nantenna                   aodv                      applications              \nbridge                    brite (no Python)         buildings                 \nclick                     config-store              core                      \ncsma                      csma-layout               dsdv                      \ndsr                       energy                    fd-net-device             \nflow-monitor              internet                  internet-apps             \nlr-wpan                   lte                       mesh                      \nmobility                  mpi                       netanim (no Python)       \nnetwork                   nix-vector-routing        olsr                      \npoint-to-point            point-to-point-layout     propagation               \nsixlowpan                 spectrum                  stats                     \ntap-bridge                test (no Python)          topology-read             \ntraffic-control           uan                       virtual-net-device        \nwave                      wifi                      wimax                     \nxgpon (no Python)         \n\nModules not built (see ns-3 tutorial for explanation):\nopenflow                  visualizer                \n\n\n5. \u5b9f\u9a13\n\n5.1 \u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c\n\u3000\u307e\u305a\uff0c\u30c7\u30fc\u30bf\u683c\u7d0d\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30eadata\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e\n$ mkdir ~/ns-3.26/source/ns-3.26/data\n\n\u3000\u4ee5\u4e0b\u306e\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3057\u3066\uff0c\u516812\u7a2e\u985e\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3064\u3044\u3066\u5b9f\u9a13\u3092\u884c\u3044\u307e\u3059\uff0e\u524d\u56de\u306e\u8a18\u4e8b\u3067\u3082\u3054\u7d39\u4ecb\u3057\u305f\u901a\u308a\uff0c--arg=value\u306b\u3088\u308a\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570arg\u306b\u5024value\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0etransport_prot\u306f\u8f3b\u8f33\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff0cprefix_name\u306f\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\uff0ctracing\u306f\u30c8\u30ec\u30fc\u30b9\u306e\u6709\u7121\uff0c\u305d\u3057\u3066duration\u306f\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6642\u9593[s]\u3092\u8868\u3057\u307e\u3059\uff0e\n\ncompare-tcp-algorithms.sh\n#!/bin/bash\n\nALGORITHMS=(TcpNewReno TcpHighSpeed TcpHybla TcpWestwood TcpWestwoodPlus \\ \n TcpVegas TcpScalable TcpVeno TcpBic TcpYeah TcpIllinois TcpHtcp)\n\nfor algo in ${ALGORITHMS[@]}; do\n  echo \"----- Simulating $algo -----\"\n  ./waf --run \"my-tcp-variants-comparison --transport_prot=$algo --prefix_name='data/$algo' --tracing=True --duration=20\"\ndone\n\n\n\n5.2 \u5168\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8f3b\u8f33\u5236\u5fa1\u3092\u89b3\u5bdf\n\u3000\u3072\u3068\u307e\u305a\uff0c\u4e0b\u8a18\u306eplot_cwnd_all_algorithms()\u3067\uff0c\u5168\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306ecwndcwnd\u3068\uff0cssthssth\u3068\uff0c\u8f3b\u8f33\u72b6\u614b\u306e\u5909\u5316\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u307e\u3059\uff0e\n\nplottcpalgo.py\n# -*- coding: utf-8 -*-\n#!/usr/bin/env python\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# \u30c7\u30fc\u30bf\u6210\u5f62\u7528\u306e\u95a2\u6570\u3067\u3059\uff0e\ndef get_data(algo, variable='cwnd', duration=20.):\n    file_name = 'data/Tcp' + algo + '-' + variable + '.data'\n    data = np.empty((0, 2)) # \u521d\u671f\u5316\n\n    # \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e\n    for line in open(file_name, 'r'):\n        data = np.append(\n            data, np.array([map(float, line[:-1].split())]),\n            axis=0)\n    data = data.T\n\n    # duration\u4ee5\u4e0b\u306e\u30c7\u30fc\u30bf\u306e\u307f\u629c\u304d\u51fa\u3057\uff0c\u6700\u5f8c\u5c3e\u306b[duration, data[1,-1]]\u3092\n    # \u8ffd\u52a0\u3057\u307e\u3059\uff0eduration\u6642\u523b\u307e\u3067\u30ad\u30ec\u30a4\u306b\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u305f\u3081\u306e\u51e6\u7406\u3067\u3059\uff0e\n    data = data[:, data[0] < duration]\n    if len(data[0])==0:\n        data = np.append(\n            data, np.array([[duration, 0]]).T,\n            axis=1)\n    else:\n        data = np.append(\n            data, np.array([[duration, data[1, -1]]]).T,\n            axis=1)\n\n    return data\n\n\ndef plot_cwnd_all_algorithms(duration=20.):\n    algos = ['NewReno', 'HighSpeed', 'Hybla', 'Westwood', 'WestwoodPlus',\n             'Vegas', 'Scalable', 'Veno', 'Bic', 'Yeah', 'Illinois', 'Htcp']\n    segment = 340 # \u672c\u5b9f\u9a13\u69cb\u6210\u3067\u306f\uff0c\u30bb\u30b0\u30e1\u30f3\u30c8\u9577\u306f340\u30d0\u30a4\u30c8\u3067\u3059\uff0e\n\n    plt.figure(figsize=(15, 10))\n    for i, algo in enumerate(algos): \n        plt.subplot(3, 4, i + 1)\n\n        # cwnd\uff0cssth\uff0c\u8f3b\u8f33\u72b6\u614b\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\n        cwnd_data = get_data(algo, 'cwnd', duration) \n        ssth_data = get_data(algo, 'ssth', duration)\n        state_data = get_data(algo, 'cong-state', duration)\n\n        # \u8f3b\u8f33\u72b6\u614b\u306b\u5fdc\u3058\u3066\u8272\u3092\u5857\u308a\u5206\u3051\u307e\u3059\uff0e\n        # OPEN\uff08\u9752\uff09\uff0cDISORDER\uff08\u7dd1\uff09\uff0cRECOVERY\uff08\u9ec4\uff09\uff0cLOSS\uff08\u8d64\uff09\n        plt.fill_between(cwnd_data[0], cwnd_data[1] / segment,\n                         facecolor='lightblue') # \u521d\u671f\u72b6\u614b\u306fOPEN\uff08\u9752\uff09\n        for n in range(len(state_data[0])-1):\n            fill_range = cwnd_data[0] >= state_data[0, n]\n            if state_data[1, n]==1: # 1: DISORDER\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='lightgreen')\n            elif state_data[1, n]==3: # 3: RECOVERY\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='khaki')\n            elif state_data[1, n]==4: # 4: LOSS\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='lightcoral')\n            else: # OPEN\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='lightblue')\n\n        # cwnd\uff08\u5b9f\u7dda\uff09\u304a\u3088\u3073ssth\uff08\u70b9\u7dda\uff09\u306e\u30d7\u30ed\u30c3\u30c8\uff0e\n        plt.plot(cwnd_data[0], cwnd_data[1] / segment, drawstyle='steps-post')\n        plt.plot(ssth_data[0], ssth_data[1] / segment, drawstyle='steps-post',\n                 color='b', linestyle='dotted')\n        plt.ylim(0, 1200) # ssth\u306e\u521d\u671f\u5024\u304c\u3081\u3061\u3083\u304f\u3061\u3083\u3067\u304b\u3044\u306e\u3067\uff0cylim\u3067\u4e0a\u9650\u3092\u8a2d\u5b9a\n        plt.title(algo)\n\n    # \u56f3\u306e\u4fdd\u5b58\u3068\u8868\u793a\n    plt.savefig('data/TcpAll' + str(duration).zfill(3) + '-cwnd.png')\n    plt.show()\n\n\n\n\u3000\u6a2a\u8ef8\u306f\u6642\u9593[s]\uff0c\u7e26\u8ef8\u306fcwndcwnd\u304a\u3088\u3073ssthssth[segment]\u3067\u3059\uff0ecwndcwnd\u306f\u5b9f\u7dda\uff0cssthssth\u306f\u70b9\u7dda\u3067\u3059\uff0e\u8f3b\u8f33\u72b6\u614b\u306b\u5fdc\u3058\u3066\uff0c\u8272\u3092\u5857\u308a\u5206\u3051\u3066\u3044\u307e\u3059\uff0eOPENOPEN\u306f\u9752\uff0cDISORDERDISORDER\u306f\u7dd1\uff0cRECOVERYRECOVERY\u306f\u9ec4\u8272\uff0c\u305d\u3057\u3066LOSSLOSS\u306f\u8d64\u3067\u3059\uff0e\n\u3000\u5f53\u521d\u306e\u60f3\u5b9a\u4ee5\u4e0a\u306b\uff0c\u5404\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u500b\u6027\u304c\u8272\u6fc3\u304f\u51fa\u3066\u304f\u308c\u307e\u3057\u305f\uff0e\n\n5.3 \u5404\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306ecwnd\uff0cACK\uff0cRTT\u306e\u95a2\u4fc2\u3092\u89b3\u5bdf\n\u3000\u6b21\u306f\uff0c\u4e0b\u8a18\u306eplot_cwnd_ack_rtt_each_algorithm()\u3067\uff0c\u5404\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306ecwndcwnd\uff0cACK\uff0c\u304a\u3088\u3073RTT\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u307e\u3059\uff0e\n\nplot_cwnd_ack_rtt_each_algorithm()\ndef plot_cwnd_ack_rtt_each_algorithm(duration=20.):\n    algos = ['NewReno', 'HighSpeed', 'Hybla', 'Westwood', 'WestwoodPlus',\n             'Vegas', 'Scalable', 'Veno', 'Bic', 'Yeah', 'Illinois', 'Htcp']\n    segment = 340 # \u672c\u5b9f\u9a13\u69cb\u6210\u3067\u306f\uff0c\u30bb\u30b0\u30e1\u30f3\u30c8\u9577\u306f340\u30d0\u30a4\u30c8\u3067\u3059\uff0e\n    plt.figure()\n\n    for algo in algos:\n        plt.subplot(311) # cwnd\uff0cssth\u304a\u3088\u3073\u8f3b\u8f33\u72b6\u614b\u306e\u30d7\u30ed\u30c3\u30c8\n\n        # cwnd\uff0cssth\uff0c\u8f3b\u8f33\u72b6\u614b\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\n        cwnd_data = get_data(algo, 'cwnd', duration)\n        ssth_data = get_data(algo, 'ssth', duration)\n        state_data = get_data(algo, 'cong-state', duration)\n\n\n        # \u8f3b\u8f33\u72b6\u614b\u306b\u5fdc\u3058\u3066\u8272\u3092\u5857\u308a\u5206\u3051\u307e\u3059\uff0e\n        # OPEN\uff08\u9752\uff09\uff0cDISORDER\uff08\u7dd1\uff09\uff0cRECOVERY\uff08\u9ec4\uff09\uff0cLOSS\uff08\u8d64\uff09\n        plt.fill_between(cwnd_data[0], cwnd_data[1] / segment,\n                         facecolor='lightblue') # \u521d\u671f\u72b6\u614b\u306fOPEN\uff08\u9752\uff09\n        for n in range(len(state_data[0])-1):\n            fill_range = cwnd_data[0] >= state_data[0, n]\n            if state_data[1, n]==1: # 1: DISORDER\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='lightgreen')\n            elif state_data[1, n]==3: # 3: RECOVERY\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='khaki')\n            elif state_data[1, n]==4: # 4: LOSS\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='lightcoral')\n            else: # OPEN\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='lightblue')\n\n        # cwnd\uff08\u5b9f\u7dda\uff09\u304a\u3088\u3073ssth\uff08\u70b9\u7dda\uff09\u306e\u30d7\u30ed\u30c3\u30c8\uff0e\n        plt.plot(cwnd_data[0], cwnd_data[1] / segment, drawstyle='steps-post',\n                 color='b', label='cwnd')\n        plt.plot(ssth_data[0], ssth_data[1] / segment, drawstyle='steps-post',\n                 color='b', linestyle='dotted', label='ssth')\n        ymax = max(cwnd_data[1] / segment)*1.1\n        plt.ylim(0, ymax) # ssth\u306e\u521d\u671f\u5024\u304c\u3081\u3061\u3083\u304f\u3061\u3083\u3067\u304b\u3044\u306e\u3067\uff0cylim\u3067\u4e0a\u9650\u3092\u8a2d\u5b9a\n        plt.ylabel('cwnd [segment]')\n        plt.legend()\n        plt.title(algo)\n\n        plt.subplot(312) # ACK\u306e\u30d7\u30ed\u30c3\u30c8\n        ack_data = get_data(algo, 'ack', duration)\n        plt.plot(ack_data[0], ack_data[1] / segment, drawstyle='steps-post',\n                 color='r')\n        plt.ylabel('ACK [segment]')\n\n        plt.subplot(313) # RTT\u306e\u30d7\u30ed\u30c3\u30c8\n        rtt_data = get_data(algo, 'rtt', duration)\n        plt.plot(rtt_data[0], rtt_data[1], drawstyle='steps-post', color='g')\n        plt.ylabel('RTT[s]')\n        plt.xlabel('Time [s]')\n\n        # \u753b\u50cf\u306e\u4fdd\u5b58\uff0e\n        plt.savefig('data/Tcp' + algo + 'Sub-' + str(int(duration)).zfill(3) +\n                    '-cwnd-ack-rtt.png')\n        plt.clf()\n    plt.show()\n\n\n\u3000\u4ee5\u4e0b\u3067\u306f\uff0cNewReno\u3092\u4f8b\u306b\uff0c\u7d50\u679c\u3092\u5206\u6790\u3057\u307e\u3059\uff0e\u307e\u305f\uff0c\u3054\u53c2\u8003\u307e\u3067\u306b\uff0c\u4ed6\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u7d50\u679c\u3082\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\uff0e\n\nNewReno\n\n\u30001.93[s]\u4ed8\u8fd1\u3067\uff0c\u4e09\u91cd\u8907ACK\u3092\u53d7\u4fe1\u3057\uff0cRECOVERYRECOVERY\u72b6\u614b\u306b\u9077\u79fb\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u306e\u3068\u304d\u306e\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u6982\u7b97\u3059\u308b\u3068\uff1a\n\\frac{cwnd}{RTT} \\simeq \n\\frac{321\\rm{[segment]} \\cdot 340 \\rm{[byte/segment] \\cdot 8 \\rm{[bit/byte]}}}{0.33[s]} \\simeq 2.3 \\rm{[Mbps]}\ncwndRTT\u2243321[segment]\u22c5340[byte/segment]\u22c58[bit/byte]0.33[s]\u22432.3[Mbps]{\\frac{cwnd}{RTT} \\simeq \n\\frac{321\\rm{[segment]} \\cdot 340 \\rm{[byte/segment] \\cdot 8 \\rm{[bit/byte]}}}{0.33[s]} \\simeq 2.3 \\rm{[Mbps]}\n}\n\u3053\u3053\u3067\uff0c\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u30ea\u30f3\u30af\u306e\u5e2f\u57df\u306f2.0Mbps\uff084.1\u7bc0\u53c2\u7167\uff09\u3067\u3057\u305f\u306e\u3067\uff0c\u8f3b\u8f33\u304c\u767a\u751f\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3068\u3057\u3066\u4e0d\u81ea\u7136\u3067\u306f\u306a\u3044\u3067\u30595\uff0eRECOVERYRECOVERY\u306b\u9077\u79fb\u5f8c\uff0cACK\u304a\u3088\u3073RTT\u306e\u66f4\u65b0\u304c\u6b62\u307e\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\u307e\u305f\uff0ccwndcwnd\u3084ssthssth\u306e\u66f4\u65b0\u304c3.3\u7bc0\u3068\u6574\u5408\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff0e\n\u30003.26[s]\u4ed8\u8fd1\u3067\uff0c\u65b0\u898fACK\u3092\u53d7\u4fe1\u3059\u308b\u3053\u3068\u304c\u306a\u3044\u307e\u307e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\uff0cLOSSLOSS\u72b6\u614b\u306b\u9077\u79fb\u3057\u3066\u3044\u307e\u3059\uff0ecwndcwnd\u3084ssthssth\u306e\u66f4\u65b0\u304c3.3\u7bc0\u3068\u6574\u5408\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff0e\n\u30004.69[s]\u4ed8\u8fd1\u3067\uff0c\u3064\u3044\u306b\u65b0\u898fACK\u3092\u53d7\u4fe1\u3057\uff0cOPENOPEN\u72b6\u614b\u306b\u9077\u79fb\u3057\u3066\u3044\u307e\u3059\uff0e\n\n\u305d\u306e\u4ed6\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\u3000\u3054\u53c2\u8003\u307e\u3067\u306b\uff0c\u4ed6\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u7d50\u679c\u3082\u63b2\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\uff0e\n\n\n\n\n\n\n\n\n\n\n\n\n6. \u304a\u308f\u308a\u306b\n\u3000\u672c\u8a18\u4e8b\u3067\u306f\uff0cns-3\u3092\u4f7f\u3063\u3066TCP\u306e\u8f3b\u8f33\u5236\u5fa1\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3057\uff0cpython\u3067\u53ef\u8996\u5316\u3057\u3066\u307f\u307e\u3057\u305f\uff0e\u521d\u5fc3\u8005\u306a\u308a\u306b\uff0cTCP\u306e\u96f0\u56f2\u6c17\u3092\u63b4\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\uff0e\u307e\u305f\uff0cns-3\u306e\u30b5\u30f3\u30d7\u30eb\u30b7\u30ca\u30ea\u30aa\u306e\u512a\u79c0\u3055\u3092\u518d\u8a8d\u8b58\u3057\u307e\u3057\u305f\uff0e\n\u3000\u4eca\u5f8c\u306f\uff0cCUBIC\u3084CTCP\u306e\u3088\u3046\u306a\u30e1\u30b8\u30e3\u30fc\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5b9f\u88c5\u3084\uff0cRemy\u306e\u3088\u3046\u306a\u6700\u65b0\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5b9f\u88c5\u306b\u6311\u6226\u3057\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\uff0e\u3042\u308b\u3044\u306f\uff0c\u7570\u306a\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u540c\u58eb\u306e\u7af6\u5408\u3092\u89b3\u5bdf\u3057\u3066\u307f\u308b\u306e\u3082\u3044\u3044\u304b\u306a\u3068\u601d\u3063\u3066\u3044\u307e\u3059\uff0e\n\u3000\u6700\u5f8c\u307e\u3067\u8aad\u3093\u3067\u304f\u3060\u3055\u308a\uff0c\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01\n\n\u53c2\u8003\n\u672c\u8a18\u4e8b\u306e\u4f5c\u6210\u306b\u3042\u305f\u3063\u3066\u306f\uff0c\u4e0b\u8a18\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\uff0e\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01\n\nTCP\u5404\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u8f3b\u8f33\u5236\u5fa1\u306e\u6bd4\u8f03\n3\u5206\u9593\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\uff0c\u7b2c42\u56de\u30ec\u30a4\u30e4\uff14 TCP \u8f3b\u8f33\u5236\u5fa1\n\n\n\n\n\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u304a\u3051\u308b\u6df7\u96d1\uff0c\u7684\u306a\u30a4\u30e1\u30fc\u30b8\u306e\u8a00\u8449\u3067\u3059\uff0e\u00a0\u21a9\n\n\n\u8aac\u660e\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3059\u308b\u305f\u3081\uff0c\u672c\u8a18\u4e8b\u3067\u306f\u9045\u5ef6ACK\uff08delayed acknowledgement\uff09\u306f\u8003\u616e\u3057\u307e\u305b\u3093\uff0e\u9045\u5ef6ACK\u306f\uff0c\u8907\u6570\u306eACK\u3092\u307e\u3068\u3081\u3066\u9001\u4fe1\u3059\u308b\u3053\u3068\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5229\u7528\u52b9\u7387\u3092\u5411\u4e0a\u3055\u305b\u308b\u65b9\u5f0f\u3067\u3059\uff0e\u00a0\u21a9\n\n\nAcknowledgement number\u306f\uff0c\u53b3\u5bc6\u306b\u306f\u53d7\u4fe1\u3057\u305fSequence number + Segment size\u3067\u3059\uff0e\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u8aac\u660e\u3092\u76f4\u611f\u7684\u306b\u3059\u308b\u305f\u3081\uff0cDATA\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u756a\u53f7\u3092\u305d\u306e\u307e\u307eACK\u3059\u308b\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u56f3\u3092\u7528\u3044\u3066\u3044\u307e\u3059\uff0e\u00a0\u21a9\n\n\n\u3044\u308f\u3086\u308bTCP\u306e\u72b6\u614b\u9077\u79fb\u56f3\uff08Finite state machine\uff09\u3068\u306f\u7570\u306a\u308a\u307e\u3059\uff0e\u72b6\u614b\u9077\u79fb\u56f3\u306f\uff0c\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u78ba\u7acb\u304b\u3089\u5207\u65ad\u307e\u3067\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\u304c\uff0c\u8f3b\u8f33\u72b6\u614b\u306f\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u78ba\u7acb\uff08ESTABLISHED\uff09\u4e2d\u306e\u8f3b\u8f33\u306e\u72b6\u614b\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\uff0e\u00a0\u21a9\n\n\n\u305f\u3076\u3093\uff0e\u30ad\u30e5\u30fc\u306e\u5206\u6790\u7b49\uff0c\u3082\u3063\u3068\u8a73\u7d30\u306a\u5206\u6790\u304c\u5fc5\u8981\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u529b\u5c3d\u304d\u307e\u3057\u305f\u2026\uff0e\u00a0\u21a9\n\n\n\n#1. \u306f\u3058\u3081\u306b\n\u3000\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u306e\u307b\u3068\u3093\u3069\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306f\uff0c**TCP\uff08Transmission Control Protocol\uff09**\u306b\u3088\u3063\u3066\u5236\u5fa1\u3055\u308c\u3066\u3044\u308b\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\uff0eTCP\u306e\u7279\u5fb4\u306e\u4e00\u3064\u3068\u3057\u3066\uff0c\u9001\u4fe1\u30ce\u30fc\u30c9\u304c\u5404\u3005**\u8f3b\u8f33[^\u8f3b\u8f33]\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08Congestion control algorithm\uff09**\u306b\u57fa\u3065\u304d\uff0c\u4e00\u5ea6\u306b\u9001\u4fe1\u3059\u308b\u30c7\u30fc\u30bf\u91cf\u3092\u8abf\u6574\u3059\u308b\uff0c\u3068\u3044\u3046\u70b9\u304c\u3042\u308a\u307e\u3059\uff0e\u672c\u8a18\u4e8b\u3067\u306f\uff0c[ns-3](https://www.nsnam.org/)\u3067\u5404\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u52d5\u4f5c\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3057\uff0c[NumPy](http://www.numpy.org/) + [matplotlib](http://matplotlib.org/)\u3067\u8996\u899a\u5316\u3057\u307e\u3059\uff0e\n\u3000TCP\u306e\u8f3b\u8f33\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6bd4\u8f03\u3059\u308b\u305f\u3081\u306b\uff0cns-3\u306b\u306f[`tcp-variants-comparison.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-variants-comparison_8cc.html)\u3068\u3044\u3046\u30b5\u30f3\u30d7\u30eb\u30b7\u30ca\u30ea\u30aa\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u3057\u304b\u3057\uff0c\u3053\u306e\u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3068\uff0c\u672c\u8a18\u4e8b\u3067\u6ce8\u76ee\u3059\u308b\u3044\u304f\u3064\u304b\u306e\u5909\u6570\u3092\u30e2\u30cb\u30bf\uff08ns-3\u3067\u306f\uff0c**\u30c8\u30ec\u30fc\u30b9**\u3068\u547c\u3073\u307e\u3059\uff09\u3067\u304d\u306a\u3044\uff0c\u3068\u3044\u3046\u8ab2\u984c\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\u305d\u3053\u3067\uff0c\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u4efb\u610f\u306e\u30c8\u30ec\u30fc\u30b9\u60c5\u5831\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n![TcpAll20.0-cwnd.png](https://qiita-image-store.s3.amazonaws.com/0/151195/c67dba4f-93ce-0618-c980-22c888d3afc7.png)\n\n \u306a\u304a\uff0c\u672c\u8a18\u4e8b\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\uff0c\u5168\u3066[Github](https://github.com/haltaro/comparing-tcp-algorithms)\u306b\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\uff0e\n\n[^\u8f3b\u8f33]: \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u304a\u3051\u308b\u6df7\u96d1\uff0c\u7684\u306a\u30a4\u30e1\u30fc\u30b8\u306e\u8a00\u8449\u3067\u3059\uff0e\n\n\n#2. \u74b0\u5883\u69cb\u7bc9\n\n##2.1 ns-3 (Network Simulator 3)\n[ns-3](https://www.nsnam.org/)\u306f\uff0c\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u96e2\u6563\u4e8b\u8c61\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3067\u3059\uff0e\u7814\u7a76\u3084\u6559\u80b2\u7528\u9014\u3067\u306e\u4f7f\u7528\u3092\u76ee\u7684\u306b\u958b\u767a\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u4e0b\u8a18\u306e\u8a18\u4e8b\u3067\u69cb\u7bc9\u3057\u305f\u74b0\u5883\u53ca\u3073\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3092\u524d\u63d0\u3068\u3057\u307e\u3059\uff0e\n\n[ns-3.26\u3067\u59cb\u3081\u308b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3](http://qiita.com/haltaro/items/b474d924f63692c155c8)\n\n##2.2 python\n\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u30c7\u30fc\u30bf\u51e6\u7406\u306b[NumPy](http://www.numpy.org/)\uff0c\u30b0\u30e9\u30d5\u63cf\u753b\u306b[matplotlib](http://matplotlib.org/)\u3092\u5229\u7528\u3057\u307e\u3059\uff0e\u4e0b\u8a18\u306e\u74b0\u5883\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\uff0e\n\n* Python 2.7.11\n* NumPy 1.10.4\n* matplotlib 1.5.1\n\n#3. TCP\u306b\u304a\u3051\u308b\u8f3b\u8f33\u5236\u5fa1\n\n##3.1 \u6982\u8981\n\u3000\u4e0b\u56f3\u306f\uff0c\u672c\u8a18\u4e8b\u3067\u60f3\u5b9a\u3059\u308bTCP\u8f3b\u8f33\u5236\u5fa1\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3059\uff0eTCP\u306e\u9001\u4fe1\u30ce\u30fc\u30c9\uff08TCP Sender\uff09\u306f\uff0c\u53d7\u4fe1\u30ce\u30fc\u30c9\uff08TCP Receiver\uff09\u304b\u3089\u306e\u78ba\u8a8d\u5fdc\u7b54\uff08Acknowledgement\uff0cACK\uff09[^delayedACK][^ACKnumber]\u3084\u4fe1\u53f7\u5f80\u5fa9\u6642\u9593\uff08Round Trip Time\uff0cRTT\uff09\u306b\u5fdc\u3058\u3066\uff0c\u30c7\u30fc\u30bf\u91cf\uff08DATA\uff09\u3092\u8abf\u6574\u3057\u307e\u3059\uff0e\n\n[^delayedACK]: \u8aac\u660e\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3059\u308b\u305f\u3081\uff0c\u672c\u8a18\u4e8b\u3067\u306f\u9045\u5ef6ACK\uff08delayed acknowledgement\uff09\u306f\u8003\u616e\u3057\u307e\u305b\u3093\uff0e\u9045\u5ef6ACK\u306f\uff0c\u8907\u6570\u306eACK\u3092\u307e\u3068\u3081\u3066\u9001\u4fe1\u3059\u308b\u3053\u3068\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5229\u7528\u52b9\u7387\u3092\u5411\u4e0a\u3055\u305b\u308b\u65b9\u5f0f\u3067\u3059\uff0e\n\n[^ACKnumber]: Acknowledgement number\u306f\uff0c\u53b3\u5bc6\u306b\u306f\u53d7\u4fe1\u3057\u305fSequence number + Segment size\u3067\u3059\uff0e\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u8aac\u660e\u3092\u76f4\u611f\u7684\u306b\u3059\u308b\u305f\u3081\uff0cDATA\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u756a\u53f7\u3092\u305d\u306e\u307e\u307eACK\u3059\u308b\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u56f3\u3092\u7528\u3044\u3066\u3044\u307e\u3059\uff0e\n\n![model.png](https://qiita-image-store.s3.amazonaws.com/0/151195/ea523d49-c229-2d46-a3c5-7290b3f82dff.png)\n\n\n\u3000\u53b3\u5bc6\u306b\u306f\uff0c\u30c7\u30fc\u30bf\u91cf\u306e\u8abf\u6574\u306f\uff0c$swnd=min(awnd, cwnd)$\u3068\u3044\u3046\u5f0f\u3067\u8868\u73fe\u3067\u304d\u307e\u3059\uff0e\u3053\u3053\u3067\uff0c$swnd$\u306fTCP Sender\u304cACK\u7121\u3057\u306b\u9001\u4fe1\u53ef\u80fd\u306aDATA\u6570\u306e\u4e0a\u9650\u5024\u3067\u3042\u308a\uff0c$cwnd$\u306fTCP Sender\u304c\u81ea\u5f8b\u7684\u306b\u8abf\u6574\u3059\u308b\u30a6\u30a4\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\uff08Congestion window\uff09\u3067\u3042\u308a\uff0c$awnd$\u306fTCP Receiver\u304b\u3089\u544a\u77e5\u3055\u308c\u308b\u30a6\u30a4\u30f3\u30c9\u30a6\u30b5\u30a4\u30ba\uff08Advertised window\uff09\u3067\u3059\uff0e\u4e0a\u5f0f\u306e\u5358\u4f4d\u306f\u30bb\u30b0\u30e1\u30f3\u30c8\u3068\u547c\u3070\u308c\uff0c1\u30bb\u30b0\u30e1\u30f3\u30c8\u306e\u5927\u304d\u3055\u306fTCP Sender\u3068Receiver\u306e\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3\u3067\u6c7a\u307e\u308a\u307e\u3059\uff0e$awnd$\u306f\u975e\u5e38\u306b\u5927\u304d\u3044\u5024\u306b\u8a2d\u5b9a\u3055\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u305f\u3081\uff0c\u7c21\u5358\u306e\u305f\u3081\uff0c\u672c\u8a18\u4e8b\u3067\u306f$cwnd$\u306e\u307f\u306b\u6ce8\u76ee\u3057\u307e\u3059\uff0e\n\u3000$cwnd$\u304c\u5927\u304d\u3044\u307b\u3069\uff0c\u305f\u304f\u3055\u3093\u306e\u30c7\u30fc\u30bf\u3092\u4e00\u5ea6\u306b\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0eTCP Sender\u306f\uff0cACK\u3084RTT\u304b\u3089\uff0cReceiver\u3068\u306e\u9593\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6df7\u307f\u5177\u5408\u3092\u4e88\u6e2c\u3057\u3066\uff0c\u81ea\u5f8b\u7684\u306b$cwnd$\u306e\u5927\u304d\u3055\u3092\u8abf\u6574\u3057\u307e\u3059\uff0e$cwnd$\u306e\u8abf\u6574\u6226\u7565\u3092\uff0c\u672c\u8a18\u4e8b\u3067\u306f**\u8f3b\u8f33\u5236\u5fa1**\u3068\u547c\u3073\u307e\u3059\uff0e\n\u3000\u8f3b\u8f33\u5236\u5fa1\u306f\uff0c**\u8f3b\u8f33\u72b6\u614b[^\u72b6\u614b\u9077\u79fb\u56f3]**\uff08Congestion state\uff09\u3068\uff0c**\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0**\uff08Congestion control algorithm\uff09\u3068\u3044\u3046\uff12\u3064\u306e\u8981\u7d20\u306b\u3088\u3063\u3066\u6c7a\u307e\u308a\u307e\u3059\uff0e\u8f3b\u8f33\u72b6\u614b\u306f\uff0c*OPEN*\uff0c*DISORDER*\uff0c*RECOVER*\uff0c*LOSS*\u7b49\uff0c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u6df7\u96d1\u72b6\u614b\u3092\u8868\u3057\u307e\u3059\uff0e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\uff0c\u5404\u8f3b\u8f33\u72b6\u614b\u306b\u304a\u3051\u308b$cwnd$\u306e\u66f4\u65b0\u65b9\u6cd5\u3092\u8868\u3057\u307e\u3059\uff0e\n\n[^\u72b6\u614b\u9077\u79fb\u56f3]: \u3044\u308f\u3086\u308bTCP\u306e\u72b6\u614b\u9077\u79fb\u56f3\uff08Finite state machine\uff09\u3068\u306f\u7570\u306a\u308a\u307e\u3059\uff0e\u72b6\u614b\u9077\u79fb\u56f3\u306f\uff0c\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u78ba\u7acb\u304b\u3089\u5207\u65ad\u307e\u3067\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\u304c\uff0c\u8f3b\u8f33\u72b6\u614b\u306f\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u78ba\u7acb\uff08ESTABLISHED\uff09\u4e2d\u306e\u8f3b\u8f33\u306e\u72b6\u614b\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\uff0e\n\n##3.2 \u8f3b\u8f33\u72b6\u614b\uff08Congestion state\uff09\n\u3000\u672c\u8a18\u4e8b\u3067\u306f\uff0cns-3\u306e\u5b9f\u88c5\uff08[`~/ns-3.26/source/ns-3.26/src/internet/model/tcp-socket-base.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-socket-base_8cc.html)\uff09\u306b\u57fa\u3065\u304d\uff0c\u4ee5\u4e0b\u306e4\u7a2e\u985e\u306e\u8f3b\u8f33\u72b6\u614b\u3092\u60f3\u5b9a\u3057\u307e\u3059\uff0e\n\n\n![state.png](https://qiita-image-store.s3.amazonaws.com/0/151195/29f58349-b23e-636f-64f9-2798a899eb34.png)\n\n\n* *OPEN*\uff1a\u3044\u308f\u3086\u308b\u6b63\u5e38\u306a\u72b6\u614b\u3067\u3059\uff0e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u3063\u3066\u306f\uff0cSlow start\uff08SS\uff09\u3068Congestion avoidance\uff08CA\uff09\u3068\u3044\u3046\u4e8c\u7a2e\u985e\u306e\u30d5\u30a7\u30fc\u30ba\u3092\u6301\u3061\u307e\u3059\uff0e$cwnd$\u304c\u95be\u5024\uff08Slow start threshold, $ssth$\uff09\u3088\u308a\u5c0f\u3055\u3044\u3068\u304d\u306fSlow start\u30d5\u30a7\u30fc\u30ba\u306b\uff0c\u5927\u304d\u3044\u3068\u304d\u306fCongestion avoidance\u30d5\u30a7\u30fc\u30ba\u306b\u8a72\u5f53\u3057\u307e\u3059\uff0e\n* *DISORDER*\uff1a\u91cd\u8907ACK\uff08Duplicate ACK\uff09\u3092\u53d7\u4fe1\u3057\u305f\u72b6\u614b\u3067\u3059\uff0e\u30d1\u30b1\u30c3\u30c8\u30ed\u30b9\u3084\u53d7\u4fe1\u9806\u5e8f\u306e\u4e71\u308c\u7b49\u306e\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\uff0e\n* *RECOVERY*\uff1a3\u5ea6\u91cd\u8907ACK\uff08Triple duplicate ACK\uff09\u3092\u53d7\u4fe1\u3057\u305f\u72b6\u614b\u3067\u3059\uff0e\u30d1\u30b1\u30c3\u30c8\u30ed\u30b9\u3092\u78ba\u4fe1\u3057\uff0c\u518d\u9001\u3092\u958b\u59cb\u3057\u307e\u3059\uff0e\n* *LOSS*\uff1aRTT\u304c\u518d\u9001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u9593\uff08Retransmission Time Out, RTO\uff09\u3088\u308a\u5927\u304d\u304f\u306a\u308b\uff0c\u3064\u307e\u308aACK\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u691c\u77e5\u3057\u305f\u72b6\u614b\u3067\u3059\uff0e\u6df1\u523b\u306a\u8f3b\u8f33\u304c\u751f\u3058\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\uff0e\n\n\n##3.3 \u8f3b\u8f33\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08Congestion control algorithm\uff09\n\u3000\u672c\u8a18\u4e8b\u3067\u306f\uff0cns-3\u306e[\u5b9f\u88c5](https://www.nsnam.org/docs/models/html/tcp.html)\u306b\u57fa\u3065\u304d\uff0c\u4ee5\u4e0b\u306e\u8f3b\u8f33\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u60f3\u5b9a\u3057\u307e\u3059\uff0e`TypeId`\u3068\u306f\uff0cns-3\u306b\u304a\u3051\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u547c\u3073\u540d\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\uff0e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\uff0c\u305d\u308c\u305e\u308c`~/ns-3.26/source/ns-3.26/src/internet/model`\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\n|\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0|`TypeId`|\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9|\n|:--|:--|:--|\n|[NewReno](https://tools.ietf.org/html/rfc6582) | `TcpNewReno`| [`tcp-congestion-ops.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-congestion-ops_8cc.html)|\n|[HighSpeed](https://tools.ietf.org/html/rfc3649) | `TcpHighSpeed`|[`tcp-highspeed.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-highspeed_8cc.html) |\n|[Hybla](http://www.mathcs.emory.edu/~cheung/Courses/558/Syllabus/Papers/TCP-Hybla.pdf) | `TcpHybla`| [`tcp-hybla.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-hybla_8cc.html) |\n|[Westwood](https://pdfs.semanticscholar.org/d3f0/a499906d7821cf204d9ca26900c11179777e.pdf) | `TcpWestwood`| [`tcp-westwood.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-westwood_8cc.html) |\n|Westwood+ | `TcpWestwoodPlus`| [`tcp-westwood.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-westwood_8cc.html) |\n|[Vegas](http://cseweb.ucsd.edu/~rbraud/jsac.pdf) | `TcpVegas` | [`tcp-vegas.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-vegas_8cc.html) |\n|[Scalable](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.107.5330&rep=rep1&type=pdf) | `TcpScalable`| [`tcp-scalable.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-scalable_8cc.html) |\n|[Veno](http://ieeexplore.ieee.org/document/1177186/) | `TcpVeno`| [`tcp-veno.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-veno_8cc.html) |\n|[Bic](http://infocom2004.ieee-infocom.org/Papers/52_4.PDF) | `TcpBic`| [`tcp-bic.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-bic_8cc.html) |\n|[YeAH](http://infocom.uniroma1.it/~vacirca/yeah/yeah.pdf) | `TcpYeah`| [`tcp-yeah.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-yeah_8cc.html) |\n|[Illinois](http://dl.acm.org/citation.cfm?id=1190166) | `TcpIllinois`| [`tcp-illinois.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-illinois_8cc.html) |\n|[H-TCP](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.3.7816&rep=rep1&type=pdf) | `TcpHtcp`| [`tcp-htcp.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-htcp_8cc.html) |\n\n\u3000\u4f8b\u3048\u3070\uff0c\u6700\u3082\u30e1\u30b8\u30e3\u30fc\u306a\u8f3b\u8f33\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\uff11\u3064\u3067\u3042\u308b[NewReno](https://tools.ietf.org/html/rfc6582)\uff08Reno\uff09\u306f\uff0c\u5404\u8f3b\u8f33\u72b6\u614b\u306b\u304a\u3044\u3066\u6b21\u306e\u3088\u3046\u306b$cwnd$\u3092\u66f4\u65b0\u3057\u307e\u3059\uff0e\n\n|\u66f4\u65b0\u5951\u6a5f|\u66f4\u65b0\u5f0f|\n|:--|:--|\n|*OPEN*\uff08SS\uff09\u72b6\u614b\u3067\uff0cACK\u3092\u53d7\u4fe1\u3057\u305f\u3068\u304d| $ cwnd \\gets cwnd + 1$|\n|*OPEN*\uff08CA\uff09\u72b6\u614b\u3067\uff0cACK\u3092\u53d7\u4fe1\u3057\u305f\u3068\u304d| $ \\displaystyle cwnd \\gets cwnd + \\frac{1}{cwnd}$|\n|*RECOVERY*\u72b6\u614b\u306b\u9077\u79fb\u3057\u305f\u3068\u304d| $ssth \\gets max(\\mathit{inflight} /2, 2 \\cdot smss)$, <bf> $cwnd \\gets ssth +3$|\n|*RECOVERY*\u72b6\u614b\u3067\uff0c\u91cd\u8907ACK\u3092\u53d7\u4fe1\u3057\u305f\u3068\u304d|$ \\displaystyle cwnd \\gets cwnd + 1$|\n|*RECOVERY*\u72b6\u614b\u3067\uff0c\u65b0\u898fACK\u3092\u53d7\u4fe1\u3057\uff0c*OPEN*\u72b6\u614b\u306b\u9077\u79fb\u3057\u305f\u3068\u304d|$ cwnd \\gets ssth$|\n|*LOSS*\u72b6\u614b\u306b\u9077\u79fb\u3057\u305f\u3068\u304d|$ cwnd \\gets smss$\uff0c<bf> $ssth \\gets max(\\mathit{inflight} /2, 2 \\cdot smss)$|\n\n\u3000\u3053\u3053\u3067\uff0c$\\mathit{inflight}$\u306f\uff0cACK\u304c\u8fd4\u3063\u3066\u3044\u306a\u3044DATA\u306e\u7dcf\u91cf\u3092\u8868\u3057\uff0c$smss$\u306f\u6700\u5c0f\u30bb\u30b0\u30e1\u30f3\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u3057\u307e\u3059\uff0e\u307e\u305f\uff0c\u7c21\u5358\u306e\u305f\u3081Partial ACK\u3084Full ACK\u7b49\u306f\u8003\u616e\u3057\u3066\u3044\u307e\u305b\u3093\uff0eNewReno\u306e\u52d5\u4f5c\u306e\u8a73\u7d30\u306f\uff0c[RFC6582](https://tools.ietf.org/html/rfc6582)\u7b49\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\uff0e\n\u3000NewReno\u306f\uff0c\u8f3b\u8f33\u306e\u53ef\u80fd\u6027\u304c\u4f4e\u3044\u3068\u601d\u308f\u308c\u308bSlow start\u30d5\u30a7\u30fc\u30ba\u306b\u304a\u3044\u3066\u306f\uff0c$cwnd$\u3092\u9ad8\u901f\u306b\u5897\u52a0\u3055\u305b\u308b\u3053\u3068\u3067DATA\u3092\u52b9\u7387\u7684\u306b\u9001\u4fe1\u3057\uff0c\u4e00\u65b9\u3067\u8f3b\u8f33\u306e\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u3068\u601d\u308f\u308c\u308bCongestion avoidance\u30d5\u30a7\u30fc\u30ba\u306b\u304a\u3044\u3066\u306f\uff0c\u5f90\u3005\u306b$cwnd$\u3092\u4e0a\u3052\u308b\u3053\u3068\u3067\u6025\u6fc0\u306a\u8f3b\u8f33\u3092\u56de\u907f\u3059\u308b\uff0c\u3068\u3044\u3046\u6226\u7565\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\n\u3000ACK\u53d7\u4fe1\u3092\u5951\u6a5f\u3068\u3059\u308b\u66f4\u65b0\u5f0f\u306f\uff0c**1\u30bb\u30b0\u30e1\u30f3\u30c8\u5206\u306eACK\u306b\u5bfe\u3059\u308b\u66f4\u65b0\u5f0f**\u3068\u3044\u3046\u70b9\u306b\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\uff08\u79c1\u306f\u3053\u3053\u3067\u30cf\u30de\u308a\u307e\u3057\u305f\uff09\uff0e\u4f8b\u3048\u3070\uff0c$cwnd=4$\u306e\u3068\u304d\uff0cTCP Sender\u306f4\u30bb\u30b0\u30e1\u30f3\u30c8\u5206\u306eDATA\u306b\u5bfe\u3059\u308bACK[^delayedACK]\u3092\u53d7\u4fe1\u3059\u308b\u305f\u3081\uff0c\u4e0a\u8a18\u306e\u66f4\u65b0\u3092**4\u56de**\u884c\u3044\u307e\u3059\uff0e\n\u3000\u306a\u304a\uff0c[ns-3\u306b\u304a\u3051\u308bTCP\u306e\u5b9f\u88c5](https://www.nsnam.org/docs/models/html/tcp.html)\u306f\u4ee5\u4e0b\u306e3\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u304c\uff0c\u672c\u8a18\u4e8b\u3067\u306fns-3\u30cd\u30a4\u30c6\u30a3\u30d6\uff08`src/internet/model`\uff09\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u307f\u3092\u5bfe\u8c61\u3068\u3057\u307e\u3059\uff0e\u3064\u307e\u308a\uff0cLinux\u3067\u30e1\u30b8\u30e3\u30fc\u306a[CUBIC](http://dl.acm.org/citation.cfm?id=1400105)\u3084\uff0cWindows\u3067\u30e1\u30b8\u30e3\u30fc\u306a[CTCP](http://www.dcs.gla.ac.uk/~lewis/CTCP.pdf)\u306f\u5bfe\u8c61\u5916\u3067\u3059\uff0e\u3053\u308c\u3089\u306b\u3064\u3044\u3066\u306f\uff0c\u5225\u9014\u3054\u7d39\u4ecb\u3067\u304d\u308c\u3070\u3068\u601d\u3063\u3066\u3044\u307e\u3059\uff0e\n\n* ns-3\u30cd\u30a4\u30c6\u30a3\u30d6\uff08`src/internet/`\uff09\n* [NSC\uff08Network Simulation Cradle\uff09](http://www.wand.net.nz/~stj2/nsc/)\n* [DCE\uff08Direct Code Execution\uff09](https://www.nsnam.org/overview/projects/direct-code-execution/)\n\n[^ack]: \u9045\u5ef6ACK\uff0e\n\n#4. \u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\n\n\u672c\u7ae0\u3067\u306f\uff0c\u3082\u3068\u306b\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b7\u30ca\u30ea\u30aa`tcp-variants-comparison.cc`\u306e\u89e3\u8aac\u3068\uff0c\u305d\u306e\u8ab2\u984c\uff0c\u305d\u3057\u3066\u4fee\u6b63\u7248\u306e`my-tcp-variants-comparison.cc`\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n##4.1 \u3082\u3068\u306b\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b7\u30ca\u30ea\u30aa\n\n\u3000ns-3\u306f\uff0cTCP\u306e\u8f3b\u8f33\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6bd4\u8f03\u7528\u306b\uff0c[`tcp-variants-comparison.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-variants-comparison_8cc.html)\n\u3068\u3044\u3046\u30b5\u30f3\u30d7\u30eb\u30b7\u30ca\u30ea\u30aa\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\uff08`~/ns-3.26/source/ns-3.26/examples/tcp/`\u306b\u3042\u308a\u307e\u3059\uff09\uff0e\u672c\u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u306f\uff0c\u4ee5\u4e0b\u306e\u5909\u6570\u306e\u6642\u5909\u5316\u3092\u30c8\u30ec\u30fc\u30b9\u3057\uff0c\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff0e\n\n* Cwnd\uff1a\u524d\u8a18$cwnd$\uff0e\u305f\u3060\u3057\u5358\u4f4d\u306f\u30d0\u30a4\u30c8\u3067\u3059\uff0e\n* SsThresh\uff1a\u524d\u8a18$ssth$\uff0e\u305f\u3060\u3057\u5358\u4f4d\u306f\u30d0\u30a4\u30c8\u3067\u3059\uff0e\n* Rtt\uff1a\u524d\u8a18RTT\uff0e\u5358\u4f4d\u306f[s]\u3067\u3059\uff0e\n* Rto\uff1a\u524d\u8a18RTO\uff0e\u5358\u4f4d\u306f[s]\u3067\u3059\uff0e\n* NextTx\uff1aTCP Sender\u304c\u6b21\u306b\u9001\u4fe1\u3059\u308b\u4e88\u5b9a\u306eSequence number\u3067\u3059\uff0e\n* NextRx\uff1aTCP Receiver\u304c\u6b21\u306b\u53d7\u4fe1\u3059\u308b\u4e88\u5b9a\u306eSequence number\u3067\u3059\uff0e\n* InFlight\uff1a\u524d\u8a18$\\mathit{inflight}$\uff0e\u305f\u3060\u3057\uff0c\u5358\u4f4d\u306f\u30d0\u30a4\u30c8\u3067\u3059\uff0eTCP\u306e\u539f\u7406\u4e0a\uff0c\u5fc5\u305a$cwnd$\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\uff0e\n\n\u4ee5\u4e0b\u3067\u306f\uff0c\u672c\u8a18\u4e8b\u306e\u30c6\u30fc\u30de\u3067\u3042\u308b**\u30c8\u30ec\u30fc\u30b9**\u306b\u7279\u306b\u30b9\u30dd\u30c3\u30c8\u3092\u5f53\u3066\uff0c\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u89e3\u8aac\u3057\u307e\u3059\uff0e\n\n### \u30c8\u30ec\u30fc\u30b9\u7528\u5909\u6570\n\u300058\u884c\u76ee\u304b\u308970\u884c\u76ee\u3067\uff0c\u30c8\u30ec\u30fc\u30b9\u306b\u7528\u3044\u308b\u5909\u6570\u306e\u5b9a\u7fa9\u3092\u884c\u3044\u307e\u3059\uff0e`bool first*`\u306f\uff0c\u305d\u308c\u305e\u308c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306e\u521d\u671f\u5024\u3092\u51fa\u529b\u3059\u308b\u304b\u5426\u304b\u3092\u8868\u3057\uff0c`Ptr<OutputStreamWrapper> *Stream`\u306f\uff0c\u305d\u308c\u305e\u308c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u3092\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u8868\u3057\uff0c`uint32_t *Value`\u306f\uff0c\u305d\u308c\u305e\u308c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306e\u521d\u671f\u5024\u3092\u53d6\u308a\u6271\u3046\u969b\u306b\u4e00\u6642\u7684\u306b\u4f7f\u7528\u3055\u308c\u308b\u5909\u6570\u3092\u8868\u3057\u307e\u3059\uff0e\n\n```cpp:tcp-variants-comparison.cc\uff0858\u884c\u76ee\u304b\u308970\u884c\u76ee\uff09\nbool firstCwnd = true;\nbool firstSshThr = true;\nbool firstRtt = true;\nbool firstRto = true;\nPtr<OutputStreamWrapper> cWndStream;\nPtr<OutputStreamWrapper> ssThreshStream;\nPtr<OutputStreamWrapper> rttStream;\nPtr<OutputStreamWrapper> rtoStream;\nPtr<OutputStreamWrapper> nextTxStream;\nPtr<OutputStreamWrapper> nextRxStream;\nPtr<OutputStreamWrapper> inFlightStream;\nuint32_t cWndValue;\nuint32_t ssThreshValue;\n```\n### \u30c8\u30ec\u30fc\u30b9\u7528\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u8a2d\u5b9a\n\u300073\u884c\u76ee\u304b\u3089145\u884c\u76ee\u3067\u306f\u30c8\u30ec\u30fc\u30b9\u7528\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570`*Tracer()`\u306e\u5b9a\u7fa9\u3092\uff0c147\u884c\u76ee\u304b\u3089202\u884c\u76ee\u3067\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u3068\u7d10\u4ed8\u3051\u308b\u95a2\u6570`Trace*()`\u306e\u5b9a\u7fa9\u3092\u884c\u3044\u307e\u3059\uff0e\u3053\u3053\u3067\u306f\uff0c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306e\uff11\u3064\u3067\u3042\u308b`BytesInFlight`\u3092\u4f8b\u306b\u89e3\u8aac\u3057\u307e\u3059\uff0e\n\n```cpp:tcp-variants-comparison.cc\uff0873\u884c\u76ee\u304b\u3089202\u884c\u76ee\uff09\nstatic void\nInFlightTracer (uint32_t old, uint32_t inFlight)\n{\n  *inFlightStream->GetStream () << Simulator::Now ().GetSeconds () << \" \" << inFlight << std::endl;\n}\n\n//===== \u7565 =====\n\nstatic void\nTraceInFlight (std::string &in_flight_file_name)\n{\n  AsciiTraceHelper ascii;\n  inFlightStream = ascii.CreateFileStream (in_flight_file_name.c_str ());\n  Config::ConnectWithoutContext (\"/NodeList/1/$ns3::TcpL4Protocol/SocketList/0/BytesInFlight\", MakeCallback (&InFlightTracer));\n}\n```\n\n\u3000ns-3\u306b\u304a\u3044\u3066\u306f\uff0c\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\uff08`ns-3.26/source/ns-3.26/src/*/model/`\uff09\u4e2d\u3067`AddTraceSource()`\u3055\u308c\u305f\u5168\u3066\u306e\u5909\u6570\u3092\uff0c\u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u4e2d\u3067\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u3068\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u4e0a\u8a18\u306e`BytesInFlight`\u306f\uff0c[`~/ns-3.26/source/ns-3.26/src/internet/model/tcp-socket-base.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-socket-base_8cc.html)\u306b\u304a\u3044\u3066`AddTraceSource()`\u3055\u308c\u3066\u3044\u307e\u3059\uff0ens-3\u306f\uff0c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u3068\u306a\u3063\u305f\u5909\u6570\u304c\u66f4\u65b0\u3055\u308c\u308b\u5ea6\u306b\uff0c\u305d\u306e\u5909\u6570\u306b\u7d10\u4ed8\u3051\u3089\u308c\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\uff0e\u3088\u3063\u3066\uff0c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306e\u8a2d\u5b9a\u306b\u306f\uff0c**\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u5b9a\u7fa9**\u3068\uff0c**\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u3068\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u7d10\u4ed8\u3051**\u304c\u5fc5\u8981\u3067\u3059\uff0e\n\u3000\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3068\u3057\u3066\uff0c\u4e0a\u8a18`InFlightTracer()`\u306e\u3088\u3046\u306a\u95a2\u6570\u304c\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\uff0e`InFlightTracer()`\u306f\uff0c\u73fe\u5728\u6642\u523b\uff08`Simulator::Now ().GetSeconds ()`\uff09\u3068\uff0c\u66f4\u65b0\u5f8c\u306e\u5024\uff08`inFlight`\uff09\u3092\uff0c\u90fd\u5ea6\u51fa\u529b\u3059\u308b\u95a2\u6570\u3067\u3059\uff0e\n\u3000\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u3068\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u7d10\u4ed8\u3051\u6642\u306b\u306f\uff0c\u4e0a\u8a18`TraceInFlight()`\u306b\u3042\u308b\u3088\u3046\u306b\uff0c`Config::ConnectWithoutContext(variable, MakeCallback(&func))`\u3068\u3044\u3046\u69cb\u6587\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u3053\u3053\u3067\uff0c`variable`\u306f\uff0c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306eObject\u306e\u30d1\u30b9\u3092\u8a18\u8f09\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e`/NodeList/1/$ns3::TcpL4Protocol/SocketList/0/BytesInFlight`\u306f\uff0c`NodeList`1\u756a\u306e\u30ce\u30fc\u30c9\u306b\u3076\u3089\u4e0b\u304c\u308b\uff0c`SocketList`0\u756a\u306e\u30bd\u30b1\u30c3\u30c8\u306e\uff0c\u5909\u6570`BytesInFlight`\u3092\u610f\u5473\u3057\u307e\u3059\uff0e\n\u3000ns-3\u306b\u304a\u3051\u308b\u30c8\u30ec\u30fc\u30b9\u65b9\u6cd5\u306e\u8a73\u7d30\u306f\uff0c[\u516c\u5f0f\u30de\u30cb\u30e5\u30a2\u30eb](https://www.nsnam.org/docs/release/3.26/manual/ns-3-manual.pdf)\u306e1.10\u7bc0\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\uff0e\n\n\n### \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u6210\n\n\u3000204\u884c\u76ee\u4ee5\u964d\u306e`main()`\u3067\uff0c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u6210\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\uff0e\u8a73\u7d30\u306f[\u516c\u5f0f\u30de\u30cb\u30e5\u30a2\u30eb](https://www.nsnam.org/docs/release/3.26/manual/ns-3-manual.pdf)\u306b\u8b72\u308a\uff0c\u3053\u3053\u3067\u306f\u30dd\u30a4\u30f3\u30c8\u306e\u307f\u8a18\u8f09\u3057\u307e\u3059\uff0e\n\n![network.png](https://qiita-image-store.s3.amazonaws.com/0/151195/e2b6da86-4058-3ef1-7bba-952887c1d415.png)\n\n\n\n\u4e0a\u306e\u56f3\u306f\uff0c\u672c\u30b7\u30ca\u30ea\u30aa\u306e\u30a4\u30e1\u30fc\u30b8\u56f3\u3067\u3059\uff0eTCP Sender\u3068Receiver\u304c\u305d\u308c\u305e\u308c\uff11\u3064\u305a\u3064\u306e\uff0c\u7c21\u5358\u306a\u69cb\u6210\u3092\u60f3\u5b9a\u3057\u307e\u3059\uff0eFTP\u30e9\u30a4\u30af\u306a\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u9001\u4fe1\u3092\u6a21\u64ec\u3059\u308b\uff0c`BulkSendHelper`\u3092\u5229\u7528\u3057\u307e\u3059\uff0eIP\u30d1\u30b1\u30c3\u30c8\u30b5\u30a4\u30ba\u306f400\u30d0\u30a4\u30c8\u3067\u3059\uff0e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6642\u9593\u306f\uff0c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067100\u79d2\u9593\u3067\u3059\uff0e\n\n### \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\n\n\u3000224\u884c\u76ee\u304b\u3089243\u884c\u76ee\u3067\uff0c\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u8a2d\u5b9a\u3057\u307e\u3059\uff0e[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/haltaro/items/b474d924f63692c155c8)\u3067\u3054\u7d39\u4ecb\u3057\u305f\u3088\u3046\u306b\uff0c`CommandLine.AddValue()`\u3059\u308b\u3053\u3068\u3067\uff0c\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\uff0e\n\n```cpp:tcp-variants-comparison.cc\uff08224\u884c\u76ee\u304b\u3089243\u884c\u76ee\uff09\nCommandLine cmd;\n  cmd.AddValue (\"transport_prot\", \"Transport protocol to use: TcpNewReno, \"\n                \"TcpHybla, TcpHighSpeed, TcpHtcp, TcpVegas, TcpScalable, TcpVeno, \"\n                \"TcpBic, TcpYeah, TcpIllinois, TcpWestwood, TcpWestwoodPlus \", transport_prot);\n  cmd.AddValue (\"error_p\", \"Packet error rate\", error_p);\n  cmd.AddValue (\"bandwidth\", \"Bottleneck bandwidth\", bandwidth);\n  cmd.AddValue (\"delay\", \"Bottleneck delay\", delay);\n  cmd.AddValue (\"access_bandwidth\", \"Access link bandwidth\", access_bandwidth);\n  cmd.AddValue (\"access_delay\", \"Access link delay\", access_delay);\n  cmd.AddValue (\"tracing\", \"Flag to enable/disable tracing\", tracing);\n  cmd.AddValue (\"prefix_name\", \"Prefix of output trace file\", prefix_file_name);\n  cmd.AddValue (\"data\", \"Number of Megabytes of data to transmit\", data_mbytes);\n  cmd.AddValue (\"mtu\", \"Size of IP packets to send in bytes\", mtu_bytes);\n  cmd.AddValue (\"num_flows\", \"Number of flows\", num_flows);\n  cmd.AddValue (\"duration\", \"Time to allow flows to run in seconds\", duration);\n  cmd.AddValue (\"run\", \"Run index (for setting repeatable seeds)\", run);\n  cmd.AddValue (\"flow_monitor\", \"Enable flow monitor\", flow_monitor);\n  cmd.AddValue (\"pcap_tracing\", \"Enable or disable PCAP tracing\", pcap);\n  cmd.AddValue (\"queue_disc_type\", \"Queue disc type for gateway (e.g. ns3::CoDelQueueDisc)\", queue_disc_type);\n  cmd.Parse (argc, argv);\n```\n\n\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u7279\u306b\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u5229\u7528\u3057\u307e\u3059\uff0e\n\n* `transport_prot`\uff1a\u8f3b\u8f33\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\uff0e\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u3063\u306612\u7a2e\u985e\u5168\u3066\u3092\u9806\u756a\u306b\u6307\u5b9a\u3057\u307e\u3059\uff0e\n* `tracing`\uff1a\u30c8\u30ec\u30fc\u30b7\u30f3\u30b0\u306e\u6709\u7121\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067`False`\u306a\u306e\u3067\uff0c`True`\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\n* `duration`\uff1a\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6642\u9593\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e100\u79d2\u306f\u9577\u3059\u304e\u308b\u306e\u3067\uff0c\u672c\u8a18\u4e8b\u3067\u306f20\u79d2\u306b\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\n* `prefix_name`\uff1a\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3060\u3068\uff0c`~/ns-3.26/source/ns-3.26/`\u76f4\u4e0b\u306b\u5927\u91cf\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5410\u3044\u3066\u3057\u307e\u3046\u306e\u3067\uff0c`data`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306b\u5410\u304f\u3088\u3046\u4fee\u6b63\u3057\u307e\u3059\uff0e\n\n### \u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\n\n\u3000460\u884c\u76ee\u304b\u3089476\u884c\u76ee\u3067\uff0c\u4e0a\u8a18`TraceInFlight()`\u7b49\u306e\u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a\u95a2\u6570\uff08\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3068\uff0c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u3092\u7d10\u4ed8\u3051\u308b\u95a2\u6570\uff09\u3092\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3057\u307e\u3059\uff0e\n\n```cpp:tcp-variants-comparison.cc\uff08460\u884c\u76ee\u304b\u3089476\u884c\u76ee\uff09\n  if (tracing)\n    {\n      std::ofstream ascii;\n      Ptr<OutputStreamWrapper> ascii_wrap;\n      ascii.open ((prefix_file_name + \"-ascii\").c_str ());\n      ascii_wrap = new OutputStreamWrapper ((prefix_file_name + \"-ascii\").c_str (),\n                                            std::ios::out);\n      stack.EnableAsciiIpv4All (ascii_wrap);\n\n      Simulator::Schedule (Seconds (0.00001), &TraceCwnd, \n                           prefix_file_name + \"-cwnd.data\");\n      Simulator::Schedule (Seconds (0.00001), &TraceSsThresh, \n                           prefix_file_name + \"-ssth.data\");\n      Simulator::Schedule (Seconds (0.00001), &TraceRtt, \n                           prefix_file_name + \"-rtt.data\");\n      Simulator::Schedule (Seconds (0.00001), &TraceRto, \n                           prefix_file_name + \"-rto.data\");\n      Simulator::Schedule (Seconds (0.00001), &TraceNextTx, \n                           prefix_file_name + \"-next-tx.data\");\n      Simulator::Schedule (Seconds (0.00001), &TraceInFlight, \n                           prefix_file_name + \"-inflight.data\");\n      Simulator::Schedule (Seconds (0.1), &TraceNextRx, \n                           prefix_file_name + \"-next-rx.data\");\n    }\n```\n\nns-3\u3067\u306f\uff0c`Simulator::Schedule(time, &func, args,...)`\u3068\u3044\u3046\u69cb\u6587\u3067\uff0c`time`\u6642\u306b`func(args,...)`\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3067\u304d\u307e\u3059\uff0e\n\u3000\u3057\u304b\u3057\uff0c\u306a\u305c\u5730\u306e\u6587\u3067`Trace*()`\u3057\u3066\u306f\u3044\u3051\u306a\u3044\u306e\u304b\uff0c\u30a4\u30de\u30a4\u30c1\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3067\u3059\uff0e\u304a\u305d\u3089\u304f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u751f\u6210\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u554f\u984c\u306e\u6c17\u304c\u3059\u308b\u306e\u3067\u3059\u304c\u2026\uff0e\n\n##4.2 `tcp-variants-comparison.cc`\u306e\u8ab2\u984c\n\n\u3000`tcp-variants-comparison.cc`\u306f\uff0c\u975e\u5e38\u306b\u3088\u304f\u3067\u304d\u305f\u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u3067\uff0c\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u3044\u3058\u308b\u3060\u3051\u3067\u304b\u306a\u308a\u904a\u3079\u307e\u3059\uff0e\u3057\u304b\u3057\uff0c\u6211\u3005\u304c\u8208\u5473\u306e\u3042\u308b\uff0cACK\u3084\u8f3b\u8f33\u72b6\u614b\u3092\u30c8\u30ec\u30fc\u30b9\u3067\u304d\u307e\u305b\u3093\uff01\n\u3000\u5e78\u3044\u306b\u3082\uff0c\u6700\u65b0\u306eACK\u3092\u8868\u3059\u5909\u6570`HighestRxAck`\u3068\uff0c\u8f3b\u8f33\u72b6\u614b\u3092\u8868\u3059\u5909\u6570`CongState`\u306f\uff0c\u305d\u308c\u305e\u308c[`tcp-socket-base.cc`](https://www.nsnam.org/docs/release/3.26/doxygen/tcp-socket-base_8cc.html)\u3067`AddTraceSource()`\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u3088\u3063\u3066\uff0c\u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u5c11\u3057\u5909\u66f4\u3092\u52a0\u3048\u308b\u3060\u3051\u3067\uff0c\u3053\u308c\u3089\u3092\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u4ee5\u4e0b\u3067\u306f\uff0c\u305d\u306e\u65b9\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n##4.3 \u65b0\u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8`my-tcp-variants-comparison.cc`\n\n\u3000\u307e\u305a\uff0c\u3082\u3068\u306b\u3059\u308b`tcp-variants-comparison.cc`\u3092`~/ns-3.26/source/ns-3.26/scratch`\u306b\u30b3\u30d4\u30fc\u3057\uff0c\u540d\u524d\u3092`my-tcp-variants-comparison.cc`\u306b\u5909\u66f4\u3057\u307e\u3059\uff0e\n\n```bash\n$ cd ~/ns-3.26/source/ns-3.26\n$ cp examples/tcp/tcp-variants-comparison.cc scratch/my-tcp-variants-comparison.cc \n```\n\n\u3000ACK\u3068\u8f3b\u8f33\u72b6\u614b\u3092\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306b\u8ffd\u52a0\u3059\u308b\u305f\u3081\uff0c\u30c8\u30ec\u30fc\u30b9\u7528\u5909\u6570\u306e\u8ffd\u52a0\uff0c\u30c8\u30ec\u30fc\u30b9\u7528\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u8a2d\u5b9a\uff0c\u304a\u3088\u3073\u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3092\u884c\u3044\u307e\u3059\uff0e\n\n### \u30c8\u30ec\u30fc\u30b9\u7528\u5909\u6570\u306e\u8ffd\u52a0\n\n\u3000ACK\u30c8\u30ec\u30fc\u30b9\u7528\u306e\u30b9\u30c8\u30ea\u30fc\u30e0`ackStream`\u3068\uff0c\u8f3b\u8f33\u72b6\u614b\u30c8\u30ec\u30fc\u30b9\u7528\u306e\u30b9\u30c8\u30ea\u30fc\u30e0`congStateStream`\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\n```cpp:my-tcp-variants-comparison.cc\uff08tcp-variants-comparison.cc\u306e58\u884c\u76ee\u304b\u308970\u884c\u76ee\u76f8\u5f53\uff09\nbool firstCwnd = true;\nbool firstSshThr = true;\nbool firstRtt = true;\nbool firstRto = true;\nPtr<OutputStreamWrapper> cWndStream;\nPtr<OutputStreamWrapper> ssThreshStream;\nPtr<OutputStreamWrapper> rttStream;\nPtr<OutputStreamWrapper> rtoStream;\nPtr<OutputStreamWrapper> nextTxStream;\nPtr<OutputStreamWrapper> nextRxStream;\nPtr<OutputStreamWrapper> inFlightStream;\nPtr<OutputStreamWrapper> ackStream; // NEW!\nPtr<OutputStreamWrapper> congStateStream; // NEW!\nuint32_t cWndValue;\nuint32_t ssThreshValue;\n```\n\n### \u30c8\u30ec\u30fc\u30b9\u7528\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u8a2d\u5b9a\n\n\u3000ACK\u30c8\u30ec\u30fc\u30b9\u7528\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570`AckTrace()`\u3068\uff0c\u8f3b\u8f33\u72b6\u614b\u30c8\u30ec\u30fc\u30b9\u7528\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570`CongStateTracer()`\u3092\u305d\u308c\u305e\u308c\u8ffd\u52a0\u3057\u307e\u3059\uff0e\u306a\u304a\uff0c\u8f3b\u8f33\u72b6\u614b\u306f\uff0c`tcp-socket-base.h`\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u5217\u6319\u578b`TcpSocketState::TcpCongState_t`\u3067\u3059\uff0e\u307e\u305f\uff0c\u4e0a\u8a18\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3068\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306e\u5909\u6570\u3092\u7d10\u4ed8\u3051\u308b\u95a2\u6570`TraceAck()`\u304a\u3088\u3073`TraceCongState()`\u3082\uff0c\u305d\u308c\u305e\u308c\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\n```cpp:my-tcp-variants-comparison.cc\uff08tcp-variants-comparison.cc\u306e73\u884c\u76ee\u304b\u3089202\u884c\u76ee\u76f8\u5f53\uff09\nstatic void\nAckTracer (SequenceNumber32 old, SequenceNumber32 newAck)\n{\n  *ackStream->GetStream () << Simulator::Now ().GetSeconds () << \" \" << newAck << std::endl;\n}\n\nstatic void\nCongStateTracer (TcpSocketState::TcpCongState_t old, TcpSocketState::TcpCongState_t newState)\n{\n  *congStateStream->GetStream () << Simulator::Now ().GetSeconds () << \" \" << newState << std::endl;\n}\n\n//===== \u7565 =====\n\nstatic void\nTraceAck (std::string &ack_file_name)\n{\n  AsciiTraceHelper ascii;\n  ackStream = ascii.CreateFileStream (ack_file_name.c_str ());\n  Config::ConnectWithoutContext (\"/NodeList/1/$ns3::TcpL4Protocol/SocketList/0/HighestRxAck\", MakeCallback (&AckTracer));\n}\n\nstatic void\nTraceCongState (std::string &cong_state_file_name)\n{\n  AsciiTraceHelper ascii;\n  congStateStream = ascii.CreateFileStream (cong_state_file_name.c_str ());\n\tConfig::ConnectWithoutContext (\"/NodeList/1/$ns3::TcpL4Protocol/SocketList/0/CongState\", MakeCallback (&CongStateTracer));\n}\n```\n\n### \u30c8\u30ec\u30fc\u30b9\u8a2d\u5b9a\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\n\n\u3000\u6700\u5f8c\u306b\uff0c\u4e0a\u8a18`TraceAck()`\u304a\u3088\u3073`TraceCongState()`\u3092\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3057\u307e\u3059\uff0e\n\n```cpp:my-tcp-variants-comparison.cc\uff08tcp-variants-comparison.cc460\u884c\u76ee\u304b\u3089476\u884c\u76ee\u76f8\u5f53\uff09\n  if (tracing)\n    {\n\n// ===== \u7565 =====\n\n      Simulator::Schedule (Seconds (0.00001), &TraceAck, prefix_file_name + \"-ack.data\"); // NEW!\n      Simulator::Schedule (Seconds (0.00001), &TraceCongState, prefix_file_name + \"-cong-state.data\"); // NEW!\n    }\n```\n\n## 4.4 `my-tcp-variants-comparison.cc`\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\n\n\u3000`~/ns-3.26/source/ns-3.26`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067`./waf`\u3059\u308b\u3053\u3068\u3067\uff0c`my-tcp-variants-comparison.cc`\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u3059\uff0e\n\n```bash\n$ ./waf\nWaf: Entering directory '/home/ryoma/ns-3.26/source/ns-3.26/build'\n[ 985/2524] Compiling scratch/my-tcp-variants-comparison.cc\n[2501/2524] Linking build/scratch/my-tcp-variants-comparison\nWaf: Leaving directory '~/ns-3.26/source/ns-3.26/source/ns-3.26/build'\nBuild commands will be stored in build/compile_commands.json\n'build' finished successfully (3.240s)\n\nModules built:\nantenna                   aodv                      applications              \nbridge                    brite (no Python)         buildings                 \nclick                     config-store              core                      \ncsma                      csma-layout               dsdv                      \ndsr                       energy                    fd-net-device             \nflow-monitor              internet                  internet-apps             \nlr-wpan                   lte                       mesh                      \nmobility                  mpi                       netanim (no Python)       \nnetwork                   nix-vector-routing        olsr                      \npoint-to-point            point-to-point-layout     propagation               \nsixlowpan                 spectrum                  stats                     \ntap-bridge                test (no Python)          topology-read             \ntraffic-control           uan                       virtual-net-device        \nwave                      wifi                      wimax                     \nxgpon (no Python)         \n\nModules not built (see ns-3 tutorial for explanation):\nopenflow                  visualizer                \n```\n\n#5. \u5b9f\u9a13\n\n##5.1 \u30b7\u30ca\u30ea\u30aa\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c\n\n\u3000\u307e\u305a\uff0c\u30c7\u30fc\u30bf\u683c\u7d0d\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea`data`\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e\n\n```bash\n$ mkdir ~/ns-3.26/source/ns-3.26/data\n```\n\n\u3000\u4ee5\u4e0b\u306e\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3057\u3066\uff0c\u516812\u7a2e\u985e\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3064\u3044\u3066\u5b9f\u9a13\u3092\u884c\u3044\u307e\u3059\uff0e[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/haltaro/items/b474d924f63692c155c8)\u3067\u3082\u3054\u7d39\u4ecb\u3057\u305f\u901a\u308a\uff0c`--arg=value`\u306b\u3088\u308a\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570`arg`\u306b\u5024`value`\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e`transport_prot`\u306f\u8f3b\u8f33\u5236\u5fa1\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff0c`prefix_name`\u306f\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\uff0c`tracing`\u306f\u30c8\u30ec\u30fc\u30b9\u306e\u6709\u7121\uff0c\u305d\u3057\u3066`duration`\u306f\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6642\u9593[s]\u3092\u8868\u3057\u307e\u3059\uff0e\n\n```bash:compare-tcp-algorithms.sh\n#!/bin/bash\n\nALGORITHMS=(TcpNewReno TcpHighSpeed TcpHybla TcpWestwood TcpWestwoodPlus \\ \n TcpVegas TcpScalable TcpVeno TcpBic TcpYeah TcpIllinois TcpHtcp)\n\nfor algo in ${ALGORITHMS[@]}; do\n  echo \"----- Simulating $algo -----\"\n  ./waf --run \"my-tcp-variants-comparison --transport_prot=$algo --prefix_name='data/$algo' --tracing=True --duration=20\"\ndone\n```\n\n##5.2 \u5168\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8f3b\u8f33\u5236\u5fa1\u3092\u89b3\u5bdf\n\n\u3000\u3072\u3068\u307e\u305a\uff0c\u4e0b\u8a18\u306e`plot_cwnd_all_algorithms()`\u3067\uff0c\u5168\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e$cwnd$\u3068\uff0c$ssth$\u3068\uff0c\u8f3b\u8f33\u72b6\u614b\u306e\u5909\u5316\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u307e\u3059\uff0e\n\n```py:plottcpalgo.py\n# -*- coding: utf-8 -*-\n#!/usr/bin/env python\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# \u30c7\u30fc\u30bf\u6210\u5f62\u7528\u306e\u95a2\u6570\u3067\u3059\uff0e\ndef get_data(algo, variable='cwnd', duration=20.):\n    file_name = 'data/Tcp' + algo + '-' + variable + '.data'\n    data = np.empty((0, 2)) # \u521d\u671f\u5316\n\n    # \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e\n    for line in open(file_name, 'r'):\n        data = np.append(\n            data, np.array([map(float, line[:-1].split())]),\n            axis=0)\n    data = data.T\n\n    # duration\u4ee5\u4e0b\u306e\u30c7\u30fc\u30bf\u306e\u307f\u629c\u304d\u51fa\u3057\uff0c\u6700\u5f8c\u5c3e\u306b[duration, data[1,-1]]\u3092\n    # \u8ffd\u52a0\u3057\u307e\u3059\uff0eduration\u6642\u523b\u307e\u3067\u30ad\u30ec\u30a4\u306b\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u305f\u3081\u306e\u51e6\u7406\u3067\u3059\uff0e\n    data = data[:, data[0] < duration]\n    if len(data[0])==0:\n        data = np.append(\n            data, np.array([[duration, 0]]).T,\n            axis=1)\n    else:\n        data = np.append(\n            data, np.array([[duration, data[1, -1]]]).T,\n            axis=1)\n\n    return data\n\n\ndef plot_cwnd_all_algorithms(duration=20.):\n    algos = ['NewReno', 'HighSpeed', 'Hybla', 'Westwood', 'WestwoodPlus',\n             'Vegas', 'Scalable', 'Veno', 'Bic', 'Yeah', 'Illinois', 'Htcp']\n    segment = 340 # \u672c\u5b9f\u9a13\u69cb\u6210\u3067\u306f\uff0c\u30bb\u30b0\u30e1\u30f3\u30c8\u9577\u306f340\u30d0\u30a4\u30c8\u3067\u3059\uff0e\n\n    plt.figure(figsize=(15, 10))\n    for i, algo in enumerate(algos): \n        plt.subplot(3, 4, i + 1)\n\n        # cwnd\uff0cssth\uff0c\u8f3b\u8f33\u72b6\u614b\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\n        cwnd_data = get_data(algo, 'cwnd', duration) \n        ssth_data = get_data(algo, 'ssth', duration)\n        state_data = get_data(algo, 'cong-state', duration)\n\n        # \u8f3b\u8f33\u72b6\u614b\u306b\u5fdc\u3058\u3066\u8272\u3092\u5857\u308a\u5206\u3051\u307e\u3059\uff0e\n        # OPEN\uff08\u9752\uff09\uff0cDISORDER\uff08\u7dd1\uff09\uff0cRECOVERY\uff08\u9ec4\uff09\uff0cLOSS\uff08\u8d64\uff09\n        plt.fill_between(cwnd_data[0], cwnd_data[1] / segment,\n                         facecolor='lightblue') # \u521d\u671f\u72b6\u614b\u306fOPEN\uff08\u9752\uff09\n        for n in range(len(state_data[0])-1):\n            fill_range = cwnd_data[0] >= state_data[0, n]\n            if state_data[1, n]==1: # 1: DISORDER\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='lightgreen')\n            elif state_data[1, n]==3: # 3: RECOVERY\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='khaki')\n            elif state_data[1, n]==4: # 4: LOSS\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='lightcoral')\n            else: # OPEN\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='lightblue')\n\n        # cwnd\uff08\u5b9f\u7dda\uff09\u304a\u3088\u3073ssth\uff08\u70b9\u7dda\uff09\u306e\u30d7\u30ed\u30c3\u30c8\uff0e\n        plt.plot(cwnd_data[0], cwnd_data[1] / segment, drawstyle='steps-post')\n        plt.plot(ssth_data[0], ssth_data[1] / segment, drawstyle='steps-post',\n                 color='b', linestyle='dotted')\n        plt.ylim(0, 1200) # ssth\u306e\u521d\u671f\u5024\u304c\u3081\u3061\u3083\u304f\u3061\u3083\u3067\u304b\u3044\u306e\u3067\uff0cylim\u3067\u4e0a\u9650\u3092\u8a2d\u5b9a\n        plt.title(algo)\n\n    # \u56f3\u306e\u4fdd\u5b58\u3068\u8868\u793a\n    plt.savefig('data/TcpAll' + str(duration).zfill(3) + '-cwnd.png')\n    plt.show()\n```\n\n![TcpAll20.0-cwnd.png](https://qiita-image-store.s3.amazonaws.com/0/151195/cac2dc4a-34fa-5dfd-773e-3dbdb5db7d1e.png)\n\n\u3000\u6a2a\u8ef8\u306f\u6642\u9593[s]\uff0c\u7e26\u8ef8\u306f$cwnd$\u304a\u3088\u3073$ssth$[segment]\u3067\u3059\uff0e$cwnd$\u306f\u5b9f\u7dda\uff0c$ssth$\u306f\u70b9\u7dda\u3067\u3059\uff0e\u8f3b\u8f33\u72b6\u614b\u306b\u5fdc\u3058\u3066\uff0c\u8272\u3092\u5857\u308a\u5206\u3051\u3066\u3044\u307e\u3059\uff0e$OPEN$\u306f\u9752\uff0c$DISORDER$\u306f\u7dd1\uff0c$RECOVERY$\u306f\u9ec4\u8272\uff0c\u305d\u3057\u3066$LOSS$\u306f\u8d64\u3067\u3059\uff0e\n\u3000\u5f53\u521d\u306e\u60f3\u5b9a\u4ee5\u4e0a\u306b\uff0c\u5404\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u500b\u6027\u304c\u8272\u6fc3\u304f\u51fa\u3066\u304f\u308c\u307e\u3057\u305f\uff0e\n\n##5.3 \u5404\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306ecwnd\uff0cACK\uff0cRTT\u306e\u95a2\u4fc2\u3092\u89b3\u5bdf\n\n\u3000\u6b21\u306f\uff0c\u4e0b\u8a18\u306e`plot_cwnd_ack_rtt_each_algorithm()`\u3067\uff0c\u5404\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e$cwnd$\uff0cACK\uff0c\u304a\u3088\u3073RTT\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u307e\u3059\uff0e\n\n```py:plot_cwnd_ack_rtt_each_algorithm()\ndef plot_cwnd_ack_rtt_each_algorithm(duration=20.):\n    algos = ['NewReno', 'HighSpeed', 'Hybla', 'Westwood', 'WestwoodPlus',\n             'Vegas', 'Scalable', 'Veno', 'Bic', 'Yeah', 'Illinois', 'Htcp']\n    segment = 340 # \u672c\u5b9f\u9a13\u69cb\u6210\u3067\u306f\uff0c\u30bb\u30b0\u30e1\u30f3\u30c8\u9577\u306f340\u30d0\u30a4\u30c8\u3067\u3059\uff0e\n    plt.figure()\n\n    for algo in algos:\n        plt.subplot(311) # cwnd\uff0cssth\u304a\u3088\u3073\u8f3b\u8f33\u72b6\u614b\u306e\u30d7\u30ed\u30c3\u30c8\n\n        # cwnd\uff0cssth\uff0c\u8f3b\u8f33\u72b6\u614b\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\n        cwnd_data = get_data(algo, 'cwnd', duration)\n        ssth_data = get_data(algo, 'ssth', duration)\n        state_data = get_data(algo, 'cong-state', duration)\n\n\n        # \u8f3b\u8f33\u72b6\u614b\u306b\u5fdc\u3058\u3066\u8272\u3092\u5857\u308a\u5206\u3051\u307e\u3059\uff0e\n        # OPEN\uff08\u9752\uff09\uff0cDISORDER\uff08\u7dd1\uff09\uff0cRECOVERY\uff08\u9ec4\uff09\uff0cLOSS\uff08\u8d64\uff09\n        plt.fill_between(cwnd_data[0], cwnd_data[1] / segment,\n                         facecolor='lightblue') # \u521d\u671f\u72b6\u614b\u306fOPEN\uff08\u9752\uff09\n        for n in range(len(state_data[0])-1):\n            fill_range = cwnd_data[0] >= state_data[0, n]\n            if state_data[1, n]==1: # 1: DISORDER\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='lightgreen')\n            elif state_data[1, n]==3: # 3: RECOVERY\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='khaki')\n            elif state_data[1, n]==4: # 4: LOSS\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='lightcoral')\n            else: # OPEN\n                plt.fill_between(\n                    cwnd_data[0, fill_range], cwnd_data[1, fill_range] / segment,\n                    facecolor='lightblue')\n\n        # cwnd\uff08\u5b9f\u7dda\uff09\u304a\u3088\u3073ssth\uff08\u70b9\u7dda\uff09\u306e\u30d7\u30ed\u30c3\u30c8\uff0e\n        plt.plot(cwnd_data[0], cwnd_data[1] / segment, drawstyle='steps-post',\n                 color='b', label='cwnd')\n        plt.plot(ssth_data[0], ssth_data[1] / segment, drawstyle='steps-post',\n                 color='b', linestyle='dotted', label='ssth')\n        ymax = max(cwnd_data[1] / segment)*1.1\n        plt.ylim(0, ymax) # ssth\u306e\u521d\u671f\u5024\u304c\u3081\u3061\u3083\u304f\u3061\u3083\u3067\u304b\u3044\u306e\u3067\uff0cylim\u3067\u4e0a\u9650\u3092\u8a2d\u5b9a\n        plt.ylabel('cwnd [segment]')\n        plt.legend()\n        plt.title(algo)\n\n        plt.subplot(312) # ACK\u306e\u30d7\u30ed\u30c3\u30c8\n        ack_data = get_data(algo, 'ack', duration)\n        plt.plot(ack_data[0], ack_data[1] / segment, drawstyle='steps-post',\n                 color='r')\n        plt.ylabel('ACK [segment]')\n\n        plt.subplot(313) # RTT\u306e\u30d7\u30ed\u30c3\u30c8\n        rtt_data = get_data(algo, 'rtt', duration)\n        plt.plot(rtt_data[0], rtt_data[1], drawstyle='steps-post', color='g')\n        plt.ylabel('RTT[s]')\n        plt.xlabel('Time [s]')\n\n        # \u753b\u50cf\u306e\u4fdd\u5b58\uff0e\n        plt.savefig('data/Tcp' + algo + 'Sub-' + str(int(duration)).zfill(3) +\n                    '-cwnd-ack-rtt.png')\n        plt.clf()\n    plt.show()\n```\n\n\u3000\u4ee5\u4e0b\u3067\u306f\uff0cNewReno\u3092\u4f8b\u306b\uff0c\u7d50\u679c\u3092\u5206\u6790\u3057\u307e\u3059\uff0e\u307e\u305f\uff0c\u3054\u53c2\u8003\u307e\u3067\u306b\uff0c\u4ed6\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u7d50\u679c\u3082\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\uff0e\n\n### NewReno\n\n\n![TcpNewReno020-cwnd-ack-rtt.png](https://qiita-image-store.s3.amazonaws.com/0/151195/52b01249-6e2d-33e1-59e6-2de913c81130.png)\n\n\n\u30001.93[s]\u4ed8\u8fd1\u3067\uff0c\u4e09\u91cd\u8907ACK\u3092\u53d7\u4fe1\u3057\uff0c$RECOVERY$\u72b6\u614b\u306b\u9077\u79fb\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u306e\u3068\u304d\u306e\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u6982\u7b97\u3059\u308b\u3068\uff1a\n\n```math\n\\frac{cwnd}{RTT} \\simeq \n\\frac{321\\rm{[segment]} \\cdot 340 \\rm{[byte/segment] \\cdot 8 \\rm{[bit/byte]}}}{0.33[s]} \\simeq 2.3 \\rm{[Mbps]}\n```\n\n\u3053\u3053\u3067\uff0c\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u30ea\u30f3\u30af\u306e\u5e2f\u57df\u306f2.0Mbps\uff084.1\u7bc0\u53c2\u7167\uff09\u3067\u3057\u305f\u306e\u3067\uff0c\u8f3b\u8f33\u304c\u767a\u751f\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3068\u3057\u3066\u4e0d\u81ea\u7136\u3067\u306f\u306a\u3044\u3067\u3059[^\u5206\u6790]\uff0e$RECOVERY$\u306b\u9077\u79fb\u5f8c\uff0cACK\u304a\u3088\u3073RTT\u306e\u66f4\u65b0\u304c\u6b62\u307e\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\u307e\u305f\uff0c$cwnd$\u3084$ssth$\u306e\u66f4\u65b0\u304c3.3\u7bc0\u3068\u6574\u5408\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff0e\n\u30003.26[s]\u4ed8\u8fd1\u3067\uff0c\u65b0\u898fACK\u3092\u53d7\u4fe1\u3059\u308b\u3053\u3068\u304c\u306a\u3044\u307e\u307e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\uff0c$LOSS$\u72b6\u614b\u306b\u9077\u79fb\u3057\u3066\u3044\u307e\u3059\uff0e$cwnd$\u3084$ssth$\u306e\u66f4\u65b0\u304c3.3\u7bc0\u3068\u6574\u5408\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff0e\n\u30004.69[s]\u4ed8\u8fd1\u3067\uff0c\u3064\u3044\u306b\u65b0\u898fACK\u3092\u53d7\u4fe1\u3057\uff0c$OPEN$\u72b6\u614b\u306b\u9077\u79fb\u3057\u3066\u3044\u307e\u3059\uff0e\n\n[^\u5206\u6790]: \u305f\u3076\u3093\uff0e\u30ad\u30e5\u30fc\u306e\u5206\u6790\u7b49\uff0c\u3082\u3063\u3068\u8a73\u7d30\u306a\u5206\u6790\u304c\u5fc5\u8981\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u529b\u5c3d\u304d\u307e\u3057\u305f\u2026\uff0e\n\n### \u305d\u306e\u4ed6\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\n\u3000\u3054\u53c2\u8003\u307e\u3067\u306b\uff0c\u4ed6\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u7d50\u679c\u3082\u63b2\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\uff0e\n\n![TcpHighSpeed020-cwnd-ack-rtt.png](https://qiita-image-store.s3.amazonaws.com/0/151195/de2ae85a-f79f-0d7a-b98a-90c43e7c97e3.png)\n\n![TcpHybla020-cwnd-ack-rtt.png](https://qiita-image-store.s3.amazonaws.com/0/151195/36055b18-bf49-0a50-791e-42929d2c0938.png)\n\n![TcpWestwood020-cwnd-ack-rtt.png](https://qiita-image-store.s3.amazonaws.com/0/151195/3d41b246-a42d-936e-a3d4-11363c65697c.png)\n\n![TcpWestwoodPlus020-cwnd-ack-rtt.png](https://qiita-image-store.s3.amazonaws.com/0/151195/400ec59a-a6df-bbe1-9b8f-2ea6c63ee815.png)\n\n![TcpVegas020-cwnd-ack-rtt.png](https://qiita-image-store.s3.amazonaws.com/0/151195/4ffc8ff4-823f-1aec-3ac1-81eb9469ff76.png)\n\n![TcpScalable020-cwnd-ack-rtt.png](https://qiita-image-store.s3.amazonaws.com/0/151195/93ae3515-e91e-92e1-d466-7d800069d95b.png)\n\n![TcpVeno020-cwnd-ack-rtt.png](https://qiita-image-store.s3.amazonaws.com/0/151195/6122a656-cd75-c408-6e1a-96cc99573182.png)\n\n![TcpBic020-cwnd-ack-rtt.png](https://qiita-image-store.s3.amazonaws.com/0/151195/e48f2ee4-3aa4-0913-e8d4-bf76a814e439.png)\n\n![TcpYeah020-cwnd-ack-rtt.png](https://qiita-image-store.s3.amazonaws.com/0/151195/9ed7a220-96ef-7e02-9fff-c9988cfe5a67.png)\n\n![TcpIllinois020-cwnd-ack-rtt.png](https://qiita-image-store.s3.amazonaws.com/0/151195/f8b06f1b-bee0-9739-0c7d-8a8a0f7ebbfe.png)\n\n![TcpHtcp020-cwnd-ack-rtt.png](https://qiita-image-store.s3.amazonaws.com/0/151195/387a0df2-a07b-e756-114d-8a57cdfa761f.png)\n\n#6. \u304a\u308f\u308a\u306b\n\n\u3000\u672c\u8a18\u4e8b\u3067\u306f\uff0cns-3\u3092\u4f7f\u3063\u3066TCP\u306e\u8f3b\u8f33\u5236\u5fa1\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3057\uff0cpython\u3067\u53ef\u8996\u5316\u3057\u3066\u307f\u307e\u3057\u305f\uff0e\u521d\u5fc3\u8005\u306a\u308a\u306b\uff0cTCP\u306e\u96f0\u56f2\u6c17\u3092\u63b4\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\uff0e\u307e\u305f\uff0cns-3\u306e\u30b5\u30f3\u30d7\u30eb\u30b7\u30ca\u30ea\u30aa\u306e\u512a\u79c0\u3055\u3092\u518d\u8a8d\u8b58\u3057\u307e\u3057\u305f\uff0e\n\u3000\u4eca\u5f8c\u306f\uff0c[CUBIC](http://dl.acm.org/citation.cfm?id=1400105)\u3084[CTCP](http://www.dcs.gla.ac.uk/~lewis/CTCP.pdf)\u306e\u3088\u3046\u306a\u30e1\u30b8\u30e3\u30fc\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5b9f\u88c5\u3084\uff0c[Remy](http://web.mit.edu/remy/)\u306e\u3088\u3046\u306a\u6700\u65b0\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5b9f\u88c5\u306b\u6311\u6226\u3057\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\uff0e\u3042\u308b\u3044\u306f\uff0c\u7570\u306a\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u540c\u58eb\u306e\u7af6\u5408\u3092\u89b3\u5bdf\u3057\u3066\u307f\u308b\u306e\u3082\u3044\u3044\u304b\u306a\u3068\u601d\u3063\u3066\u3044\u307e\u3059\uff0e\n\u3000\u6700\u5f8c\u307e\u3067\u8aad\u3093\u3067\u304f\u3060\u3055\u308a\uff0c\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01\n\n#\u53c2\u8003\n\u672c\u8a18\u4e8b\u306e\u4f5c\u6210\u306b\u3042\u305f\u3063\u3066\u306f\uff0c\u4e0b\u8a18\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\uff0e\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01\n\n* [TCP\u5404\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u8f3b\u8f33\u5236\u5fa1\u306e\u6bd4\u8f03](http://www.net.c.dendai.ac.jp/~yutaro/)\n* [3\u5206\u9593\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\uff0c\u7b2c42\u56de\u30ec\u30a4\u30e4\uff14 TCP \u8f3b\u8f33\u5236\u5fa1](http://www5e.biglobe.ne.jp/aji/3min/42.html)\n\n\n\n\n"}