{"context": " More than 1 year has passed since last update.\nSprite Kit\u3092\u4f7f\u3063\u3066\u5f3e\u5e55\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u5b9f\u73fe\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30d7\u30ec\u30a4\u30e4\u30fc\u306a\u3069\u306e\u8a2d\u5b9a\n\u3068\u308a\u3042\u3048\u305a\u306f\u3001\u30c9\u30e9\u30c3\u30b0\u3067\u4f4d\u7f6e\u3092\u5909\u66f4\u3067\u304d\u308b\u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u914d\u7f6e\u306a\u3069\u3092\u3002\n\nMyScene.m\n\nenum\n{\n    kDragNone,  //\u521d\u671f\u5024\n    kDragStart, //Drag\u958b\u59cb\n    kDragEnd,   //Drag\u7d42\u4e86\n};\n\n@implementation MyScene\n{\n    int lastShotTime1;\n    int lastShotTime2;\n    int lastShotTime3;\n    SKSpriteNode *player;\n    int playerstatus;\n}\n\n\n\n\nMyScene.m\n-(id)initWithSize:(CGSize)size {    \n    if (self = [super initWithSize:size]) {\n        /* Setup your scene here */\n\n        self.backgroundColor = [SKColor colorWithRed:0.15 green:0.15 blue:0.3 alpha:1.0];\n        self.physicsWorld.gravity = CGVectorMake(0,0);\n        self.physicsWorld.contactDelegate = self;\n        [self setUpPlayer];\n    }\n    return self;\n}\n\n-(void) setUpPlayer{\n    player = [SKSpriteNode spriteNodeWithImageNamed:@\"Spaceship\"];\n    player.size = CGSizeMake(25, 25);\n    player.position =CGPointMake(160, 20);\n    player.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:player.size];\n    player.physicsBody.contactTestBitMask = 0x1<<0;\n    player.physicsBody.dynamic = NO;\n    player.name = @\"player\";\n    [self addChild:player];\n}\n\n\n\n\u4eca\u56de\u306f\u91cd\u529b\u3092\u5229\u7528\u3057\u306a\u3044\u305f\u3081\u3001\n\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3067\u7121\u52b9\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n        self.physicsWorld.gravity = CGVectorMake(0,0);\n\u307e\u3060\u3001\u30c9\u30e9\u30c3\u30b0\u3067\u79fb\u52d5\u3067\u304d\u308b\u3088\u3046\u306b\u3002\n\nMyScene.m\n-(void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event {\n    /* Called when a touch begins */\n\n    for (UITouch *touch in touches) {\n        CGPoint location = [touch locationInNode:self];\n        SKNode *node = [self nodeAtPoint:location];\n        if(node != nil && [node.name isEqualToString:@\"player\"]) {\n            playerstatus = kDragStart;\n            break;\n        }\n    }\n}\n- (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event {\n    if(playerstatus == kDragStart ){\n        UITouch *touch = [touches anyObject];\n        CGPoint touchPos = [touch locationInNode:self];\n        player.position = CGPointMake(touchPos.x, touchPos.y);\n    }\n}\n\n- (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event {\n    if(playerstatus == kDragStart ){\n        playerstatus = kDragEnd;\n    }\n}\n\n\n\n\n\u5f3e\u5e55\u306e\u8868\u793a\n\u305d\u308c\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\nMyScene.m\n-(void)shotAtPoint:(CGPoint)point\n{\n    int separate = 30;\n    point = CGPointMake(point.x + arc4random_uniform(10) , point.y + + arc4random_uniform(10));\n    for(int i=0;i<separate;i++) {\n        SKSpriteNode *sprite = [SKSpriteNode spriteNodeWithImageNamed:@\"ball\"];\n        sprite.position = point;\n        sprite.speed = 0.4;\n        float pr = sprite.size.width/2;\n        sprite.physicsBody = [SKPhysicsBody bodyWithCircleOfRadius:pr];\n        sprite.physicsBody.contactTestBitMask = 0x1<<1;\n        sprite.physicsBody.categoryBitMask    = 0x1<<0;\n        sprite.physicsBody.collisionBitMask   = 0x1<<1;\n        float r  = self.size.height;\n        float x  = r * cos( i * (2 * M_PI ) / separate );\n        float y  = r * sin( i * (2 * M_PI ) / separate );\n        SKAction* action = [SKAction sequence:@[[SKAction moveTo:CGPointMake(point.x+x, point.y+y) duration:1],\n                                                [SKAction removeFromParent]]];\n        [sprite runAction:[SKAction repeatActionForever:action]];\n        [self addChild:sprite];\n    }\n}\n\n\n\n\u306a\u304a\u3001ball.png\u306f\n\n\u3068\u3057\u307e\u3059\u3002\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u306f\u4e2d\u5fc3\u4f4d\u7f6e\u304c\u5c11\u3057\u305a\u308c\u308b\u3088\u3046\u306b\n\u4e71\u6570\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\u5909\u6570separate\u306f\u3001360\u5ea6\u3092\u3069\u308c\u3060\u3051\u5206\u5272\u3055\u305b\u308b\u304b\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u305f\u3081\u306b\n\u5909\u6570\u3067\u3059\u3002\n\u3042\u3068\u306f\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u8fbc\u3080\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u8abf\u6574\u3057\u307e\u3059\u3002\n\nMyScene.m\n\n-(void)update:(CFTimeInterval)currentTime {\n    if(lastShotTime1 == 0 )\n    {\n        lastShotTime1 = currentTime;\n        lastShotTime2 = currentTime;\n        lastShotTime3 = currentTime;\n\n    }\n    /* Called before each frame is rendered */\n    if(lastShotTime1 + [self randFloat:2] < currentTime) {\n        [self shotAtPoint:CGPointMake(80, 350)];\n        lastShotTime1 = currentTime;\n    }\n    if(lastShotTime2 + [self randFloat:2] < currentTime) {\n        [self shotAtPoint:CGPointMake(160, 420)];\n        lastShotTime2 = currentTime;\n    }\n    if(lastShotTime3 + [self randFloat:2] < currentTime) {\n        [self shotAtPoint:CGPointMake(240, 350)];\n        lastShotTime3 = currentTime;\n\n    }\n}\n\n-(CGFloat)randFloat:(int)x\n{\n    return ( arc4random_uniform(x) + 1 )+ (arc4random_uniform(RAND_MAX) / (RAND_MAX * 1.0)) ;\n}\n\n\n\n\u914d\u4fe1\u30bf\u30a4\u30df\u30f3\u30b0\u3082\u4e71\u6570\u3092\u4f7f\u3063\u3066\u5c11\u3057\u305a\u308c\u308b\u3088\u3046\u306b\u8abf\u6574\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u885d\u7a81\u306b\u3064\u3044\u3066\n\u305d\u306e\u307e\u307e\u5f3e\u5e55\u3092\u8868\u793a\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\n\u305d\u308c\u305e\u308c\u304c\u3076\u3064\u304b\u308a\u5408\u3063\u3066\u8868\u793a\u304c\u304a\u304b\u3057\u304f\u306a\u308a\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u5f3e\u5e55\u7528\u306eNode\u306e\ncollisionBitMask\n\u30920x1<<1\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u5f3e\u5e55\u7528Node\u9593\u306e\u885d\u7a81\u306f\u3057\u306a\u3044\u3088\u3046\u3057\u307e\u3059\u3002\n\u203b\u3042\u308b\u30ce\u30fc\u30c9\u306ecollisionBitMask\u3068\u3001\u885d\u7a81\u3057\u305f\u30ce\u30fc\u30c9\u306ecategoryBitMask\u306eAND\u3092\u3068\u308a\n 0\u3067\u3042\u308c\u3070\u3076\u3064\u304b\u3089\u306a\u3044\u3002\n\u307e\u305f\u3001\u30d7\u30ec\u30a4\u30a2\u30fc\u3068\u5f3e\u5e55\u7528\u306eNode\u306e\ncategoryBitMask\ncollisionBitMask\u3092\u8a2d\u5b9a\u3057\u3001\n\nMyScene.m\n- (void)didBeginContact:(SKPhysicsContact *)contact\n{\n    [contact.bodyA.node removeFromParent];\n    [contact.bodyB.node removeFromParent];\n}\n\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n<img src=\"http://oneworld2.sakura.ne.jp/blog/danmaku.gif\">\n\nSprite Kit\u3092\u4f7f\u3063\u3066\u5f3e\u5e55\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u5b9f\u73fe\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n##\u30d7\u30ec\u30a4\u30e4\u30fc\u306a\u3069\u306e\u8a2d\u5b9a\n\n\u3068\u308a\u3042\u3048\u305a\u306f\u3001\u30c9\u30e9\u30c3\u30b0\u3067\u4f4d\u7f6e\u3092\u5909\u66f4\u3067\u304d\u308b\u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u914d\u7f6e\u306a\u3069\u3092\u3002\n\n```objc:MyScene.m\n\nenum\n{\n    kDragNone,  //\u521d\u671f\u5024\n    kDragStart, //Drag\u958b\u59cb\n    kDragEnd,   //Drag\u7d42\u4e86\n};\n\n@implementation MyScene\n{\n    int lastShotTime1;\n    int lastShotTime2;\n    int lastShotTime3;\n    SKSpriteNode *player;\n    int playerstatus;\n}\n\n```\n\n\n```objc:MyScene.m\n-(id)initWithSize:(CGSize)size {    \n    if (self = [super initWithSize:size]) {\n        /* Setup your scene here */\n        \n        self.backgroundColor = [SKColor colorWithRed:0.15 green:0.15 blue:0.3 alpha:1.0];\n        self.physicsWorld.gravity = CGVectorMake(0,0);\n        self.physicsWorld.contactDelegate = self;\n        [self setUpPlayer];\n    }\n    return self;\n}\n\n-(void) setUpPlayer{\n    player = [SKSpriteNode spriteNodeWithImageNamed:@\"Spaceship\"];\n    player.size = CGSizeMake(25, 25);\n    player.position =CGPointMake(160, 20);\n    player.physicsBody = [SKPhysicsBody bodyWithRectangleOfSize:player.size];\n    player.physicsBody.contactTestBitMask = 0x1<<0;\n    player.physicsBody.dynamic = NO;\n    player.name = @\"player\";\n    [self addChild:player];\n}\n\n```\n\n\u4eca\u56de\u306f\u91cd\u529b\u3092\u5229\u7528\u3057\u306a\u3044\u305f\u3081\u3001\n\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3067\u7121\u52b9\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n        self.physicsWorld.gravity = CGVectorMake(0,0);\n\n\n\u307e\u3060\u3001\u30c9\u30e9\u30c3\u30b0\u3067\u79fb\u52d5\u3067\u304d\u308b\u3088\u3046\u306b\u3002\n\n```objc:MyScene.m\n-(void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event {\n    /* Called when a touch begins */\n    \n    for (UITouch *touch in touches) {\n        CGPoint location = [touch locationInNode:self];\n        SKNode *node = [self nodeAtPoint:location];\n        if(node != nil && [node.name isEqualToString:@\"player\"]) {\n            playerstatus = kDragStart;\n            break;\n        }\n    }\n}\n- (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event {\n    if(playerstatus == kDragStart ){\n        UITouch *touch = [touches anyObject];\n        CGPoint touchPos = [touch locationInNode:self];\n        player.position = CGPointMake(touchPos.x, touchPos.y);\n    }\n}\n\n- (void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event {\n    if(playerstatus == kDragStart ){\n        playerstatus = kDragEnd;\n    }\n}\n\n```\n\n\n###\u5f3e\u5e55\u306e\u8868\u793a\n\n\u305d\u308c\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```objc:MyScene.m\n-(void)shotAtPoint:(CGPoint)point\n{\n    int separate = 30;\n    point = CGPointMake(point.x + arc4random_uniform(10) , point.y + + arc4random_uniform(10));\n    for(int i=0;i<separate;i++) {\n        SKSpriteNode *sprite = [SKSpriteNode spriteNodeWithImageNamed:@\"ball\"];\n        sprite.position = point;\n        sprite.speed = 0.4;\n        float pr = sprite.size.width/2;\n        sprite.physicsBody = [SKPhysicsBody bodyWithCircleOfRadius:pr];\n        sprite.physicsBody.contactTestBitMask = 0x1<<1;\n        sprite.physicsBody.categoryBitMask    = 0x1<<0;\n        sprite.physicsBody.collisionBitMask   = 0x1<<1;\n        float r  = self.size.height;\n        float x  = r * cos( i * (2 * M_PI ) / separate );\n        float y  = r * sin( i * (2 * M_PI ) / separate );\n        SKAction* action = [SKAction sequence:@[[SKAction moveTo:CGPointMake(point.x+x, point.y+y) duration:1],\n                                                [SKAction removeFromParent]]];\n        [sprite runAction:[SKAction repeatActionForever:action]];\n        [self addChild:sprite];\n    }\n}\n\n```\n\n\u306a\u304a\u3001ball.png\u306f\n![ball.png](https://qiita-image-store.s3.amazonaws.com/0/35343/ff14d9c3-46f4-c6af-6ba3-e3bd45b17cda.png)\n\u3068\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u306f\u4e2d\u5fc3\u4f4d\u7f6e\u304c\u5c11\u3057\u305a\u308c\u308b\u3088\u3046\u306b\n\u4e71\u6570\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5909\u6570separate\u306f\u3001360\u5ea6\u3092\u3069\u308c\u3060\u3051\u5206\u5272\u3055\u305b\u308b\u304b\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u305f\u3081\u306b\n\u5909\u6570\u3067\u3059\u3002\n\n\u3042\u3068\u306f\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u8fbc\u3080\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u8abf\u6574\u3057\u307e\u3059\u3002\n\n```objc:MyScene.m\n\n-(void)update:(CFTimeInterval)currentTime {\n    if(lastShotTime1 == 0 )\n    {\n        lastShotTime1 = currentTime;\n        lastShotTime2 = currentTime;\n        lastShotTime3 = currentTime;\n        \n    }\n    /* Called before each frame is rendered */\n    if(lastShotTime1 + [self randFloat:2] < currentTime) {\n        [self shotAtPoint:CGPointMake(80, 350)];\n        lastShotTime1 = currentTime;\n    }\n    if(lastShotTime2 + [self randFloat:2] < currentTime) {\n        [self shotAtPoint:CGPointMake(160, 420)];\n        lastShotTime2 = currentTime;\n    }\n    if(lastShotTime3 + [self randFloat:2] < currentTime) {\n        [self shotAtPoint:CGPointMake(240, 350)];\n        lastShotTime3 = currentTime;\n        \n    }\n}\n\n-(CGFloat)randFloat:(int)x\n{\n\treturn ( arc4random_uniform(x) + 1 )+ (arc4random_uniform(RAND_MAX) / (RAND_MAX * 1.0)) ;\n}\n\n```\n\n\u914d\u4fe1\u30bf\u30a4\u30df\u30f3\u30b0\u3082\u4e71\u6570\u3092\u4f7f\u3063\u3066\u5c11\u3057\u305a\u308c\u308b\u3088\u3046\u306b\u8abf\u6574\u3057\u3066\u3044\u307e\u3059\u3002\n\n###\u885d\u7a81\u306b\u3064\u3044\u3066\n\n\u305d\u306e\u307e\u307e\u5f3e\u5e55\u3092\u8868\u793a\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\n\u305d\u308c\u305e\u308c\u304c\u3076\u3064\u304b\u308a\u5408\u3063\u3066\u8868\u793a\u304c\u304a\u304b\u3057\u304f\u306a\u308a\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u5f3e\u5e55\u7528\u306eNode\u306e\ncollisionBitMask\n\u30920x1<<1\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u5f3e\u5e55\u7528Node\u9593\u306e\u885d\u7a81\u306f\u3057\u306a\u3044\u3088\u3046\u3057\u307e\u3059\u3002\n\u203b\u3042\u308b\u30ce\u30fc\u30c9\u306ecollisionBitMask\u3068\u3001\u885d\u7a81\u3057\u305f\u30ce\u30fc\u30c9\u306ecategoryBitMask\u306eAND\u3092\u3068\u308a\n 0\u3067\u3042\u308c\u3070\u3076\u3064\u304b\u3089\u306a\u3044\u3002\n\n\n\u307e\u305f\u3001\u30d7\u30ec\u30a4\u30a2\u30fc\u3068\u5f3e\u5e55\u7528\u306eNode\u306e\ncategoryBitMask\ncollisionBitMask\u3092\u8a2d\u5b9a\u3057\u3001\n\n```objc:MyScene.m\n- (void)didBeginContact:(SKPhysicsContact *)contact\n{\n    [contact.bodyA.node removeFromParent];\n    [contact.bodyB.node removeFromParent];\n}\n```\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n\n\n\n\n\n", "tags": ["iOS", "iPhone", "Xcode", "SpriteKit", "game"]}