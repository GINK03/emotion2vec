{"context": " More than 1 year has passed since last update.\n\nPlayMaker\u306eAnimator\u7cfb\u30a2\u30af\u30b7\u30e7\u30f3\n\u5b9f\u306fAnimator\u7cfb\u306f\u3042\u307e\u308a\u5145\u5b9f\u3057\u3066\u306a\u3044\u3002\nAnimation\u306f\u63c3\u3063\u3066\u308b\u3002Play Animation\u30a2\u30af\u30b7\u30e7\u30f3\u306a\u3089Animation\u3092\u518d\u751f\u958b\u59cb\u3057\u3064\u3064\u7d42\u4e86\u901a\u77e5\u3092\u53d7\u3051\u53d6\u308b\u30a4\u30d9\u30f3\u30c8\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u304c\u3001\u4eca\u6642Unity\u3067Animation\u5358\u4f4d\u3067\u5236\u5fa1\u3057\u306a\u3044\u3002Mecanim\u3060\u306eAnimator\u3060\u306e\u3092\u4f7f\u3046\u3002\nEcosystem\u3067\u3082Animator\u3067\u4e00\u4ef6\u3082\u30d2\u30c3\u30c8\u3057\u306a\u3044\u3002\u306a\u3093\u305f\u308b\u3053\u3068\u304b\u3002\n\u3067\u3001\u30a2\u30cb\u30e1\u306fAnimator\u3067\u5909\u6570\u5236\u5fa1\u3057\u305f\u3044\u3051\u3069\u7279\u5b9a\u306eAnimation\u306e\u7d42\u4e86\u3092\u30a4\u30d9\u30f3\u30c8\u3067\u53d7\u3051\u53d6\u3063\u3066\u9077\u79fb\u3057\u305f\u3044\u3068\u3044\u3046\u3068\u304d\u306e\u305f\u3081\u306e\u30ab\u30b9\u30bf\u30e0\u30a2\u30af\u30b7\u30e7\u30f3\u3002\n\nAnimationFinishedEvent.cs\nusing UnityEngine;\nusing HutongGames.PlayMaker;\nnamespace HutongGames.PlayMaker.Actions {\n    [ActionCategory(ActionCategory.Animation)]\n    [Tooltip(\"Observe an animation finished and send the event.\")]\n    public class AnimationFinishedEvent : FsmStateAction {\n\n        [RequiredField]\n        [CheckForComponent(typeof(UnityEngine.Animator))]\n        [Tooltip(\"The GameObject to be observed.\")]\n        public FsmOwnerDefault gameObject;\n\n        [RequiredField]\n        [Tooltip(\"Send this event when animation finished.\")]\n        public FsmEvent sendEvent;\n\n        [RequiredField]\n        [Tooltip(\"The name of the animation to be observed.\")]\n        public FsmString animationName;\n\n        private Animator animator;\n\n        public override void Reset() {\n            gameObject = null;\n            sendEvent = null;\n            animationName = null;\n        }\n\n        // Code that runs on entering the state.\n        public override void OnEnter() {\n            var go = Fsm.GetOwnerDefaultTarget(gameObject);\n            animator = go.GetComponent<Animator>();\n        }\n\n        // Code that runs every frame.\n        public override void OnUpdate() {\n            var a = animator.GetCurrentAnimatorStateInfo(0);\n            if (a.IsName(animationName.Value) && a.normalizedTime >= 1f) {\n                Fsm.Event(sendEvent);\n            }\n        }\n    }\n}\n\n\n# PlayMaker\u306eAnimator\u7cfb\u30a2\u30af\u30b7\u30e7\u30f3\n\u5b9f\u306fAnimator\u7cfb\u306f\u3042\u307e\u308a\u5145\u5b9f\u3057\u3066\u306a\u3044\u3002\nAnimation\u306f\u63c3\u3063\u3066\u308b\u3002Play Animation\u30a2\u30af\u30b7\u30e7\u30f3\u306a\u3089Animation\u3092\u518d\u751f\u958b\u59cb\u3057\u3064\u3064\u7d42\u4e86\u901a\u77e5\u3092\u53d7\u3051\u53d6\u308b\u30a4\u30d9\u30f3\u30c8\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u304c\u3001\u4eca\u6642Unity\u3067Animation\u5358\u4f4d\u3067\u5236\u5fa1\u3057\u306a\u3044\u3002Mecanim\u3060\u306eAnimator\u3060\u306e\u3092\u4f7f\u3046\u3002\n\nEcosystem\u3067\u3082Animator\u3067\u4e00\u4ef6\u3082\u30d2\u30c3\u30c8\u3057\u306a\u3044\u3002\u306a\u3093\u305f\u308b\u3053\u3068\u304b\u3002\n\n\u3067\u3001\u30a2\u30cb\u30e1\u306fAnimator\u3067\u5909\u6570\u5236\u5fa1\u3057\u305f\u3044\u3051\u3069\u7279\u5b9a\u306eAnimation\u306e\u7d42\u4e86\u3092\u30a4\u30d9\u30f3\u30c8\u3067\u53d7\u3051\u53d6\u3063\u3066\u9077\u79fb\u3057\u305f\u3044\u3068\u3044\u3046\u3068\u304d\u306e\u305f\u3081\u306e\u30ab\u30b9\u30bf\u30e0\u30a2\u30af\u30b7\u30e7\u30f3\u3002\n\n```csharp:AnimationFinishedEvent.cs\nusing UnityEngine;\nusing HutongGames.PlayMaker;\nnamespace HutongGames.PlayMaker.Actions {\n\t[ActionCategory(ActionCategory.Animation)]\n\t[Tooltip(\"Observe an animation finished and send the event.\")]\n\tpublic class AnimationFinishedEvent : FsmStateAction {\n\n\t\t[RequiredField]\n\t\t[CheckForComponent(typeof(UnityEngine.Animator))]\n\t\t[Tooltip(\"The GameObject to be observed.\")]\n\t\tpublic FsmOwnerDefault gameObject;\n\n\t\t[RequiredField]\n\t\t[Tooltip(\"Send this event when animation finished.\")]\n\t\tpublic FsmEvent sendEvent;\n\n\t\t[RequiredField]\n\t\t[Tooltip(\"The name of the animation to be observed.\")]\n\t\tpublic FsmString animationName;\n\n\t\tprivate Animator animator;\n\n\t\tpublic override void Reset() {\n\t\t\tgameObject = null;\n\t\t\tsendEvent = null;\n\t\t\tanimationName = null;\n\t\t}\n\n\t\t// Code that runs on entering the state.\n\t\tpublic override void OnEnter() {\n\t\t\tvar go = Fsm.GetOwnerDefaultTarget(gameObject);\n\t\t\tanimator = go.GetComponent<Animator>();\n\t\t}\n\n\t\t// Code that runs every frame.\n\t\tpublic override void OnUpdate() {\n\t\t\tvar a = animator.GetCurrentAnimatorStateInfo(0);\n\t\t\tif (a.IsName(animationName.Value) && a.normalizedTime >= 1f) {\n\t\t\t\tFsm.Event(sendEvent);\n\t\t\t}\n\t\t}\n\t}\n}\n```\n", "tags": ["Unity3D", "playmaker", "C#"]}