{"context": "Erlang\u306e\u52c9\u5f37\u306e\u305f\u3081\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306egen_fsm\u306e\u5229\u7528\u4f8b\u3092\u516c\u5f0f\u30b5\u30a4\u30c8\u3092\u898b\u306a\u304c\u3089\u5199\u7d4c\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u5b9f\u88c5\n\ncode_lock\n-module(code_lock).\n-behaviour(gen_fsm).\n\n-export([start_link/1, init/1, stop/0]).\n-export([button/1]).\n-export([locked/2, open/2]).\n-export([code_change/4, handle_event/3, handle_info/3, handle_sync_event/4, terminate/3]).\n\n%% process up/down\nstart_link(Code) ->\n    RevCode = lists:reverse(Code),\n    io:format(\"- start_link(~p)~n\", [Code]),\n    gen_fsm:start_link({local, code_lock}, code_lock, RevCode, []).\n\ninit(Code) ->\n    io:format(\"- init(~p)~n\", [Code]),\n    {ok, locked, {[], Code}}.\n\nstop() ->\n    io:format(\"- stop~n\"),\n    gen_fsm:send_all_state_event(code_lock, stop).\n\n%% api\nbutton(Digit) ->\n    io:format(\"- button(~p)~n\", [Digit]),\n    gen_fsm:send_event(code_lock, {button, Digit}).\n\n%% state machine\nlocked({button, Digit}, {SoFar, Code}) ->\n    io:format(\"- locked(~p ~p ~p)~n\", [Digit, SoFar, Code]),\n    case [Digit | SoFar] of\n        Code ->\n            do_unlock(),\n            {next_state, open, {[], Code}, 3000};\n        Incomplate when length(Incomplate) < length(Code) ->\n            io:format(\"please input a number 0 to 9~n\", []),\n            {next_state, locked, {Incomplate, Code}};\n        Wrong ->\n            io:format(\"~p is wrong~n\", [lists:reverse(Wrong)]),\n            {next_state, locked, {[], Code}}\n    end.\n\nopen(timeout, State) ->\n    io:format(\"- open(~p)~n\", [State]),\n    do_lock(),\n    {next_state, locked, State}.\n\n%% gen_fsm behaviour\nhandle_event(Event, StateName, StateData) ->\n    io:format(\"- handle_event(~p ~p ~p)~n\", [Event, StateName, StateData]),\n    {Event, normal, StateData}.\n\nhandle_info({Info, Pid, Reason}, StateName, StateData) ->\n    io:format(\"- handle_info(~p ~p ~p ~p ~p)~n\", [Info, Pid, Reason, StateName, StateData]),\n    {next_state, StateName, StateData}.\n\nhandle_sync_event(A, B, C, D) ->\n    io:format(\"- handle_sync_event(~p ~p ~p ~p)~n\", [A, B, C, D]),\n    {A, B, C, D}.\n\ncode_change(OldVsn, StateName, StateData, Extra) ->\n    io:format(\"- code_change(~p ~p ~p ~p)~n\", [OldVsn, StateName, StateData, Extra]),\n    {ok, StateName, StateData}.\n\nterminate(Reason, StateName, StateDate) ->\n    io:format(\"- terminate(~p ~p ~p)~n\", [Reason, StateName, StateDate]),\n    ok.\n\n%% local function\ndo_unlock() ->\n    io:format(\"- do_unlock()~n\", []),\n    io:format(\"safe store is open~n\", []).\n\ndo_lock() ->\n    io:format(\"- do_lock()~n\", []).\n\n\n\n\u4f7f\u3063\u3066\u307f\u308b\nlock\u3092\u89e3\u9664\u3057\u3066\u307f\u307e\u3059\u3002\n% erl\nErlang/OTP 19 [erts-8.1] [source] [64-bit] [smp:4:4] [async-threads:10] [kernel-poll:false]\n\nEshell V8.1  (abort with ^G)\n1> code_lock:start_link([1,2]).\n- start_link([1,2])\n- init([2,1])\n{ok,<0.59.0>}\n2> code_lock:button(1).\n- button(1)\n- locked(1 [] [2,1])\nok\nplease input a number 0 to 9\n3> code_lock:button(2).\n- button(2)\n- locked(2 [1] [2,1])\nok\n- do_unlock()\nsafe store is open\n4> \n4> \n- open({[],[2,1]})\n- do_lock()\n\nlock\u3092\u7121\u4e8b\u306b\u89e3\u9664\u3067\u304d\u307e\u3057\u305f\u3002\n\u6b21\u306b\u308f\u3056\u3068\u6570\u5b57\u3092\u9593\u9055\u3048\u3066\u307f\u307e\u3059\u3002\n4> code_lock:button(3).\n- button(3)\n- locked(3 [] [2,1])\nok\nplease input a number 0 to 9\n5> code_lock:button(3).\n- button(3)\n- locked(3 [3] [2,1])\nok\n[3,3] is wrong\n\n\u3044\u3044\u3067\u3059\u306d\u3002\n\u6700\u5f8c\u306b\u30d7\u30ed\u30bb\u30b9\u3092\u7d42\u4e86\u3055\u305b\u307e\u3059\u3002\n6> code_lock:stop().\n- stop\n- handle_event(stop locked {[],[2,1]})\nok\n- terminate(normal locked {[],[2,1]})\n7> \n\n\u7121\u4e8b\u7d42\u4e86\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u7570\u5e38\u7cfb\u3092\u8a66\u3057\u3066\u307f\u308b\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5f85\u3061\u4e2d\u306b\u3001\u30a4\u30d9\u30f3\u30c8\u3092\u9001\u3063\u3066\u307f\u307e\u3059\u3002\n1> code_lock:start_link([1,2]).\n- start_link([1,2])\n- init([2,1])\n{ok,<0.59.0>}\n2> code_lock:button(1).\n- button(1)\n- locked(1 [] [2,1])\nok\nplease input a number 0 to 9\n3> code_lock:button(2).\n- button(2)\n- locked(2 [1] [2,1])\nok\n- do_unlock()\nsafe store is open\n4> \n4> code_lock:button(1).\n- button(1)\n- terminate({function_clause,\n                [{code_lock,open,\n                     [{button,1},{[],[2,1]}],\n                     [{file,\"code_lock.erl\"},{line,43}]},\n                 {gen_fsm,handle_msg,7,[{file,\"gen_fsm.erl\"},{line,451}]},\n                 {proc_lib,init_p_do_apply,3,\n                     [{file,\"proc_lib.erl\"},{line,247}]}]} open {[],[2,1]})\nok\n5> \n=ERROR REPORT==== 7-Nov-2016::18:26:08 ===\n** State machine code_lock terminating \n** Last event in was {button,1}\n** When State == open\n**      Data  == {[],[2,1]}\n** Reason for termination = \n** {function_clause,[{code_lock,open,\n                                [{button,1},{[],[2,1]}],\n                                [{file,\"code_lock.erl\"},{line,43}]},\n                     {gen_fsm,handle_msg,7,[{file,\"gen_fsm.erl\"},{line,451}]},\n                     {proc_lib,init_p_do_apply,3,\n                               [{file,\"proc_lib.erl\"},{line,247}]}]}\n** exception error: no function clause matching code_lock:open({button,1},{[],[2,1]}) (code_lock.erl, line 43)\n     in function  gen_fsm:handle_msg/7 (gen_fsm.erl, line 451)\n     in call from proc_lib:init_p_do_apply/3 (proc_lib.erl, line 247)\n\nopen({button, Digit}, State) \u304c\u30de\u30c3\u30c1\u305b\u305a\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u307e\u3057\u305f\u3002\n\u5b9a\u7fa9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nopen(timeout, State) ->\n    io:format(\"- open(~p)~n\", [State]),\n    do_lock(),\n    {next_state, locked, State};\nopen({button, Digit}, State) ->                                                                                             io:format(\"- call button in open(~p)~n\", [Digit]),\n    {next_state, locked, State}.\n\n\u3082\u3046\u4e00\u5ea6\u540c\u3058\u3053\u3068\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n1> c(code_lock).\n2> code_lock:start_link([1,2]).\n- start_link([1,2])\n- init([2,1])\n{ok,<0.64.0>}\n3> code_lock:button(1).\n- button(1)\n- locked(1 [] [2,1])\nok\nplease input a number 0 to 9\n4> code_lock:button(2).\n- button(2)\n- locked(2 [1] [2,1])\nok\n- do_unlock()\nsafe store is open\n5> \n5> code_lock:button(1).\n- button(1)\n- call button in open(1)\nok\n\n\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u307e\u3068\u3081\ntimeout\u3092\u6307\u5b9a\u3067\u304d\u308b\u70b9\u306f\u4fbf\u5229\u305d\u3046\u3067\u3057\u305f\u3002\n\u305f\u3060\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3057\u306a\u3044\u3068\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u3066\u3057\u307e\u3046\u70b9\u304c\u30b3\u30fc\u30c9\u3092\u898b\u308b\u3060\u3051\u3067\u306f\u76f4\u611f\u7684\u306b\u5206\u304b\u308a\u306b\u304f\u3044\u3088\u3046\u306a\u6c17\u3082\u3057\u307e\u3059\u3002\u4eca\u56de\u306e\u72b6\u614b\u306flocked\u3068open\u306e2\u3064\u3068\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u304c\u3001\u5199\u7d4c\u3057\u3066\u3044\u308b\u6642\u306fopen\u72b6\u614b\u3067button\u30a4\u30d9\u30f3\u30c8\u304c\u6765\u305f\u3089\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u3068\u3044\u3046\u70b9\u306b\u6c17\u3065\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u305f\u3060Erlang 19.0\u304b\u3089\u306fgen_fsm\u306e\u4ee3\u308f\u308a\u306bgen_statem\u304c\u65b0\u3057\u304f\u4f7f\u3044\u3084\u3059\u3044\u3068\u3044\u3046\u4e8b\u3067\u3059\u306e\u3067\u3001\u6b21\u306f\u3053\u3061\u3089\u3082\u307f\u3066\u307f\u305f\u3044\u3067\u3059\u3002\n\nErlang\u306e\u52c9\u5f37\u306e\u305f\u3081\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306egen_fsm\u306e\u5229\u7528\u4f8b\u3092[\u516c\u5f0f\u30b5\u30a4\u30c8](http://erlang.org/doc/man/gen_fsm.html)\u3092\u898b\u306a\u304c\u3089\u5199\u7d4c\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u5b9f\u88c5\n\n```erlang:code_lock\n-module(code_lock).\n-behaviour(gen_fsm).\n\n-export([start_link/1, init/1, stop/0]).\n-export([button/1]).\n-export([locked/2, open/2]).\n-export([code_change/4, handle_event/3, handle_info/3, handle_sync_event/4, terminate/3]).\n\n%% process up/down\nstart_link(Code) ->\n    RevCode = lists:reverse(Code),\n    io:format(\"- start_link(~p)~n\", [Code]),\n    gen_fsm:start_link({local, code_lock}, code_lock, RevCode, []).\n\ninit(Code) ->\n    io:format(\"- init(~p)~n\", [Code]),\n    {ok, locked, {[], Code}}.\n\nstop() ->\n    io:format(\"- stop~n\"),\n    gen_fsm:send_all_state_event(code_lock, stop).\n\n%% api\nbutton(Digit) ->\n    io:format(\"- button(~p)~n\", [Digit]),\n    gen_fsm:send_event(code_lock, {button, Digit}).\n\n%% state machine\nlocked({button, Digit}, {SoFar, Code}) ->\n    io:format(\"- locked(~p ~p ~p)~n\", [Digit, SoFar, Code]),\n    case [Digit | SoFar] of\n        Code ->\n            do_unlock(),\n            {next_state, open, {[], Code}, 3000};\n        Incomplate when length(Incomplate) < length(Code) ->\n            io:format(\"please input a number 0 to 9~n\", []),\n            {next_state, locked, {Incomplate, Code}};\n        Wrong ->\n            io:format(\"~p is wrong~n\", [lists:reverse(Wrong)]),\n            {next_state, locked, {[], Code}}\n    end.\n\nopen(timeout, State) ->\n    io:format(\"- open(~p)~n\", [State]),\n    do_lock(),\n    {next_state, locked, State}.\n\n%% gen_fsm behaviour\nhandle_event(Event, StateName, StateData) ->\n    io:format(\"- handle_event(~p ~p ~p)~n\", [Event, StateName, StateData]),\n    {Event, normal, StateData}.\n\nhandle_info({Info, Pid, Reason}, StateName, StateData) ->\n    io:format(\"- handle_info(~p ~p ~p ~p ~p)~n\", [Info, Pid, Reason, StateName, StateData]),\n    {next_state, StateName, StateData}.\n\nhandle_sync_event(A, B, C, D) ->\n    io:format(\"- handle_sync_event(~p ~p ~p ~p)~n\", [A, B, C, D]),\n    {A, B, C, D}.\n\ncode_change(OldVsn, StateName, StateData, Extra) ->\n    io:format(\"- code_change(~p ~p ~p ~p)~n\", [OldVsn, StateName, StateData, Extra]),\n    {ok, StateName, StateData}.\n\nterminate(Reason, StateName, StateDate) ->\n    io:format(\"- terminate(~p ~p ~p)~n\", [Reason, StateName, StateDate]),\n    ok.\n\n%% local function\ndo_unlock() ->\n    io:format(\"- do_unlock()~n\", []),\n    io:format(\"safe store is open~n\", []).\n\ndo_lock() ->\n    io:format(\"- do_lock()~n\", []).\n```\n\n## \u4f7f\u3063\u3066\u307f\u308b\nlock\u3092\u89e3\u9664\u3057\u3066\u307f\u307e\u3059\u3002\n\n```text\n% erl\nErlang/OTP 19 [erts-8.1] [source] [64-bit] [smp:4:4] [async-threads:10] [kernel-poll:false]\n\nEshell V8.1  (abort with ^G)\n1> code_lock:start_link([1,2]).\n- start_link([1,2])\n- init([2,1])\n{ok,<0.59.0>}\n2> code_lock:button(1).\n- button(1)\n- locked(1 [] [2,1])\nok\nplease input a number 0 to 9\n3> code_lock:button(2).\n- button(2)\n- locked(2 [1] [2,1])\nok\n- do_unlock()\nsafe store is open\n4> \n4> \n- open({[],[2,1]})\n- do_lock()\n```\n\nlock\u3092\u7121\u4e8b\u306b\u89e3\u9664\u3067\u304d\u307e\u3057\u305f\u3002\n\u6b21\u306b\u308f\u3056\u3068\u6570\u5b57\u3092\u9593\u9055\u3048\u3066\u307f\u307e\u3059\u3002\n\n```tex\n4> code_lock:button(3).\n- button(3)\n- locked(3 [] [2,1])\nok\nplease input a number 0 to 9\n5> code_lock:button(3).\n- button(3)\n- locked(3 [3] [2,1])\nok\n[3,3] is wrong\n```\n\n\u3044\u3044\u3067\u3059\u306d\u3002\n\u6700\u5f8c\u306b\u30d7\u30ed\u30bb\u30b9\u3092\u7d42\u4e86\u3055\u305b\u307e\u3059\u3002\n\n```text\n6> code_lock:stop().\n- stop\n- handle_event(stop locked {[],[2,1]})\nok\n- terminate(normal locked {[],[2,1]})\n7> \n```\n\n\u7121\u4e8b\u7d42\u4e86\u3067\u304d\u307e\u3057\u305f\u3002\n\n## \u7570\u5e38\u7cfb\u3092\u8a66\u3057\u3066\u307f\u308b\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5f85\u3061\u4e2d\u306b\u3001\u30a4\u30d9\u30f3\u30c8\u3092\u9001\u3063\u3066\u307f\u307e\u3059\u3002\n\n```txt\n1> code_lock:start_link([1,2]).\n- start_link([1,2])\n- init([2,1])\n{ok,<0.59.0>}\n2> code_lock:button(1).\n- button(1)\n- locked(1 [] [2,1])\nok\nplease input a number 0 to 9\n3> code_lock:button(2).\n- button(2)\n- locked(2 [1] [2,1])\nok\n- do_unlock()\nsafe store is open\n4> \n4> code_lock:button(1).\n- button(1)\n- terminate({function_clause,\n                [{code_lock,open,\n                     [{button,1},{[],[2,1]}],\n                     [{file,\"code_lock.erl\"},{line,43}]},\n                 {gen_fsm,handle_msg,7,[{file,\"gen_fsm.erl\"},{line,451}]},\n                 {proc_lib,init_p_do_apply,3,\n                     [{file,\"proc_lib.erl\"},{line,247}]}]} open {[],[2,1]})\nok\n5> \n=ERROR REPORT==== 7-Nov-2016::18:26:08 ===\n** State machine code_lock terminating \n** Last event in was {button,1}\n** When State == open\n**      Data  == {[],[2,1]}\n** Reason for termination = \n** {function_clause,[{code_lock,open,\n                                [{button,1},{[],[2,1]}],\n                                [{file,\"code_lock.erl\"},{line,43}]},\n                     {gen_fsm,handle_msg,7,[{file,\"gen_fsm.erl\"},{line,451}]},\n                     {proc_lib,init_p_do_apply,3,\n                               [{file,\"proc_lib.erl\"},{line,247}]}]}\n** exception error: no function clause matching code_lock:open({button,1},{[],[2,1]}) (code_lock.erl, line 43)\n     in function  gen_fsm:handle_msg/7 (gen_fsm.erl, line 451)\n     in call from proc_lib:init_p_do_apply/3 (proc_lib.erl, line 247)\n```\n\nopen({button, Digit}, State) \u304c\u30de\u30c3\u30c1\u305b\u305a\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u307e\u3057\u305f\u3002\n\u5b9a\u7fa9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```erlang\nopen(timeout, State) ->\n    io:format(\"- open(~p)~n\", [State]),\n    do_lock(),\n    {next_state, locked, State};\nopen({button, Digit}, State) ->                                                                                             io:format(\"- call button in open(~p)~n\", [Digit]),\n    {next_state, locked, State}.\n```\n\n\u3082\u3046\u4e00\u5ea6\u540c\u3058\u3053\u3068\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\n```txt\n1> c(code_lock).\n2> code_lock:start_link([1,2]).\n- start_link([1,2])\n- init([2,1])\n{ok,<0.64.0>}\n3> code_lock:button(1).\n- button(1)\n- locked(1 [] [2,1])\nok\nplease input a number 0 to 9\n4> code_lock:button(2).\n- button(2)\n- locked(2 [1] [2,1])\nok\n- do_unlock()\nsafe store is open\n5> \n5> code_lock:button(1).\n- button(1)\n- call button in open(1)\nok\n```\n\n\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n## \u307e\u3068\u3081\ntimeout\u3092\u6307\u5b9a\u3067\u304d\u308b\u70b9\u306f\u4fbf\u5229\u305d\u3046\u3067\u3057\u305f\u3002\n\u305f\u3060\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3057\u306a\u3044\u3068\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u3066\u3057\u307e\u3046\u70b9\u304c\u30b3\u30fc\u30c9\u3092\u898b\u308b\u3060\u3051\u3067\u306f\u76f4\u611f\u7684\u306b\u5206\u304b\u308a\u306b\u304f\u3044\u3088\u3046\u306a\u6c17\u3082\u3057\u307e\u3059\u3002\u4eca\u56de\u306e\u72b6\u614b\u306flocked\u3068open\u306e2\u3064\u3068\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u304c\u3001\u5199\u7d4c\u3057\u3066\u3044\u308b\u6642\u306fopen\u72b6\u614b\u3067button\u30a4\u30d9\u30f3\u30c8\u304c\u6765\u305f\u3089\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u3068\u3044\u3046\u70b9\u306b\u6c17\u3065\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u305f\u3060Erlang 19.0\u304b\u3089\u306fgen_fsm\u306e\u4ee3\u308f\u308a\u306b[gen_statem](http://erlang.org/doc/design_principles/statem.html)\u304c\u65b0\u3057\u304f\u4f7f\u3044\u3084\u3059\u3044\u3068\u3044\u3046\u4e8b\u3067\u3059\u306e\u3067\u3001\u6b21\u306f\u3053\u3061\u3089\u3082\u307f\u3066\u307f\u305f\u3044\u3067\u3059\u3002\n", "tags": ["Erlang", "gen_fsm"]}