{"tags": ["OS", "\u81ea\u4f5cOS", "grub"], "context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u4f5c\u308a\u304b\u3051\u3066\u306f\u65ad\u5ff5\u3057\u3001\u3068\u3044\u3046\u306e\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u8a18\u9332\u3092\u517c\u306d\u3066\u3001\u8a18\u4e8b\u306b\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u74b0\u5883\n\u4eca\u66f4\u3001\u30d6\u30fc\u30c8\u30ed\u30fc\u30c0\u30fc\u304b\u3089\u66f8\u304f\u306e\u3082\u3060\u308b\u3044\u3057\u3001\u4eca\u6642\u306eOS\u3063\u307d\u304f\u306a\u3044\u3057\u3068\u3044\u3046\u3053\u3068\u3067\u3001GRUB\u3092\u4f7f\u3063\u3066\u8d77\u52d5\u3055\u305b\u307e\u3059\u3002\u3053\u308c\u3067\u3001\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u3092\u4f7f\u3046\u7b87\u6240\u304c\u6e1b\u3089\u305b\u307e\u3059\u3002\n\u3055\u3089\u306b\u3001\u3088\u304f\u3042\u308bOS\u5165\u9580\u7cfb\u306e\u8a18\u4e8b\u306f\u3001x86\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u306b32bitOS\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u3082\u4eca\u6642\u3063\u307d\u304f\u306a\u3044\u306e\u3067\u3001x86_64\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001Bochs\u3067\u3001\u300cThe Multiboot Speci cation version 1.6\u300d\u306b\u6e96\u62e0\u3057\u305f\u3082\u306e\u3092\u8d77\u52d5\u3055\u305b\u3089\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u30010.6.96\u6e96\u62e0\u3067\u884c\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nloader\nGRUB\u306b\u5bfe\u5fdc\u3059\u308b\u306b\u306f\u3001multi boot header\u304c8192byte\u4ee5\u5185\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u3092loader.s\u3067\u8a2d\u5b9a\u3057\u3066\u4e0a\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3064\u3044\u3067\u306b\u3001\u306a\u308b\u3079\u304f\u65e9\u3044\u6bb5\u968e\u3067C\u8a00\u8a9e\u3067\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u30b9\u30bf\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u306a\u3069\u3092\u6307\u5b9a\u3057\u3066\u3001\u30e1\u30a4\u30f3\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\u6700\u4f4e\u9650\u306e\u8a2d\u5b9a\u3092\u884c\u3063\u305f\u3042\u3068\u3001C\u8a00\u8a9e\u3067\u8a18\u8f09\u3057\u305f\u3001\u30ab\u30fc\u30cd\u30eb\u672c\u4f53\u306b\u30b8\u30e3\u30f3\u30d7\u3057\u307e\u3059\u3002\n\nloader.s\nMAGIC_NUMBER    equ 0x1BADB002\nMAGIC_FLAGS     equ 0x03\nALIGN_MODULE    equ 0x00000000\nCHECK_SUM       equ -(MAGIC_NUMBER + MAGIC_FLAGS)\n\nSTACK_SIZE  equ 0x1000              ; Kernel Stack Size\n\nglobal  loader\nextern  kmain\n\nsection .mbheader\nalign 8\nmbheader:\n                dd  MAGIC_NUMBER\n                dd  MAGIC_FLAGS\n                dd  CHECK_SUM\n\nsection .text\nalign   8\nloader:\n;;; Initilized Stack Point\n                mov esp, stack + STACK_SIZE\n\n                push    ebx\n                push    eax\n\n                call    kmain\n.loop:\n                hlt\n                JMP .loop\n\nsection .bss\nalign   8\nstack:\n                resb    STACK_SIZE\n\n\n\nkernel.h\n#ifndef __KERNEL_H__\n#define __KERNEL_H__\n\ntypedef struct\n{\n    unsigned int    flags;\n    unsigned int    mem_lower;\n    unsigned int    mem_upper;\n    unsigned int    boot_device;\n    unsigned int    cmdline;\n    unsigned int    mods_count;\n    unsigned int    mods_addr;\n    unsigned int    syms1;\n    unsigned int    syms2;\n    unsigned int    syms3;\n    unsigned int  syms4;\n    unsigned int    mmap_length;\n    unsigned int    mmap_addr;\n    unsigned int    drives_length;\n    unsigned int    drives_addr;\n    unsigned int    config_table;\n    unsigned int    boot_loader_name;\n    unsigned int    apm_table;\n    unsigned int    vbe_control_info;\n    unsigned int    vbe_mode_info;\n    unsigned short  vbe_mode;\n    unsigned short  vbe_interface_seg;\n    unsigned short  vbe_interface_off;\n    unsigned short  vbe_interrace_len;\n} BOOTINFO;\n\n\n\nvoid kmain(unsigned int magic, BOOTINFO *bootinfo);\n\n#endif\n\n\n\nkernel.c\n#include <kernel.h>\n\nvoid kmain(unsigned int magic, BOOTINFO *bootinfo)\n{\n}\n\n\n\nlink.ld\nENTRY(loader)\n\nSECTIONS  {\n        . = 0x00100000;\n        .mbheader ALIGN (0x1000):\n        {\n                _kernel_start = .;\n                *(.mbheader)\n        }\n\n        .text ALIGN (0x1000):\n        {\n                *(.text)\n        }\n\n        .rodata ALIGN (0x1000):\n        {\n                *(.rodata*)\n        }\n        .data ALIGN (0x1000):\n        {\n                *(.data)\n        }\n        .bss ALIGN (0x1000):\n        {\n                *(COMMON)\n                *(.bss)\n                _kernel_end = .;\n        }\n}\n\n\n\n\u521d\u671f\u5316\u72b6\u614b\n\u30ab\u30fc\u30cd\u30eb\u672c\u4f53\u306b\u30b8\u30e3\u30f3\u30d7\u3057\u305f\u6642\u70b9\u3067\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nEAX 0x2BADB002\nEBX \u30d6\u30fc\u30c8\u60c5\u5831\u3092\u8a18\u9332\u3057\u305f\u30a2\u30c9\u30ec\u30b9\u3078\u306e\u30dd\u30a4\u30f3\u30bf\nCS  \u8aad\u307f\u53d6\u308a\u5b9f\u884c\u30bb\u30b0\u30e1\u30f3\u30c8 offset 0  limit 0xFFFFFFFF\nDS,ES,FS,GS,SS \u8aad\u307f\u53d6\u308a\u66f8\u304d\u8fbc\u307f\u30bb\u30b0\u30e1\u30f3\u30c8 offset 0  limit 0xFFFFFFFF\nA20GATE \u6709\u52b9\nCR0 PG clear  PE set\nEFLAGS VM clear IF clear\n\n\n\u4eca\u56de\u306e\u30bd\u30fc\u30b9\nhttps://github.com/yakawa/yakawa_os/releases/tag/v0.0.1\n# \u306f\u3058\u3081\u306b\n\n\u4f5c\u308a\u304b\u3051\u3066\u306f\u65ad\u5ff5\u3057\u3001\u3068\u3044\u3046\u306e\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u8a18\u9332\u3092\u517c\u306d\u3066\u3001\u8a18\u4e8b\u306b\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n# \u74b0\u5883\n\n\u4eca\u66f4\u3001\u30d6\u30fc\u30c8\u30ed\u30fc\u30c0\u30fc\u304b\u3089\u66f8\u304f\u306e\u3082\u3060\u308b\u3044\u3057\u3001\u4eca\u6642\u306eOS\u3063\u307d\u304f\u306a\u3044\u3057\u3068\u3044\u3046\u3053\u3068\u3067\u3001GRUB\u3092\u4f7f\u3063\u3066\u8d77\u52d5\u3055\u305b\u307e\u3059\u3002\u3053\u308c\u3067\u3001\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u3092\u4f7f\u3046\u7b87\u6240\u304c\u6e1b\u3089\u305b\u307e\u3059\u3002\n\n\u3055\u3089\u306b\u3001\u3088\u304f\u3042\u308bOS\u5165\u9580\u7cfb\u306e\u8a18\u4e8b\u306f\u3001x86\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u306b32bitOS\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u3082\u4eca\u6642\u3063\u307d\u304f\u306a\u3044\u306e\u3067\u3001x86_64\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u306a\u304a\u3001Bochs\u3067\u3001\u300cThe Multiboot Speci cation version 1.6\u300d\u306b\u6e96\u62e0\u3057\u305f\u3082\u306e\u3092\u8d77\u52d5\u3055\u305b\u3089\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u30010.6.96\u6e96\u62e0\u3067\u884c\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# loader\n\nGRUB\u306b\u5bfe\u5fdc\u3059\u308b\u306b\u306f\u3001multi boot header\u304c8192byte\u4ee5\u5185\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u3092loader.s\u3067\u8a2d\u5b9a\u3057\u3066\u4e0a\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3064\u3044\u3067\u306b\u3001\u306a\u308b\u3079\u304f\u65e9\u3044\u6bb5\u968e\u3067C\u8a00\u8a9e\u3067\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u30b9\u30bf\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u306a\u3069\u3092\u6307\u5b9a\u3057\u3066\u3001\u30e1\u30a4\u30f3\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n\u6700\u4f4e\u9650\u306e\u8a2d\u5b9a\u3092\u884c\u3063\u305f\u3042\u3068\u3001C\u8a00\u8a9e\u3067\u8a18\u8f09\u3057\u305f\u3001\u30ab\u30fc\u30cd\u30eb\u672c\u4f53\u306b\u30b8\u30e3\u30f3\u30d7\u3057\u307e\u3059\u3002\n\n```asm:loader.s\nMAGIC_NUMBER\tequ\t0x1BADB002\nMAGIC_FLAGS     equ\t0x03\nALIGN_MODULE\tequ 0x00000000\nCHECK_SUM\t\tequ\t-(MAGIC_NUMBER + MAGIC_FLAGS)\n\nSTACK_SIZE\tequ\t0x1000\t\t\t\t; Kernel Stack Size\n\nglobal\tloader\nextern \tkmain\n\nsection .mbheader\nalign 8\nmbheader:\n\t\t\t\tdd\tMAGIC_NUMBER\n\t\t\t\tdd\tMAGIC_FLAGS\n\t\t\t\tdd\tCHECK_SUM\n\nsection .text\nalign\t8\nloader:\n;;; Initilized Stack Point\n\t\t\t\tmov\tesp, stack + STACK_SIZE\n\n\t\t\t\tpush\tebx\n\t\t\t\tpush \teax\n\n\t\t\t\tcall\tkmain\n.loop:\n\t\t\t\thlt\n\t\t\t\tJMP\t.loop\n\nsection\t.bss\nalign\t8\nstack:\n\t\t\t\tresb\tSTACK_SIZE\n```\n```c:kernel.h\n#ifndef __KERNEL_H__\n#define __KERNEL_H__\n\ntypedef struct\n{\n\tunsigned int\tflags;\n\tunsigned int\tmem_lower;\n\tunsigned int\tmem_upper;\n\tunsigned int\tboot_device;\n\tunsigned int\tcmdline;\n\tunsigned int\tmods_count;\n\tunsigned int\tmods_addr;\n\tunsigned int\tsyms1;\n\tunsigned int\tsyms2;\n\tunsigned int\tsyms3;\n\tunsigned int  syms4;\n\tunsigned int\tmmap_length;\n\tunsigned int\tmmap_addr;\n\tunsigned int\tdrives_length;\n\tunsigned int\tdrives_addr;\n\tunsigned int\tconfig_table;\n\tunsigned int\tboot_loader_name;\n\tunsigned int\tapm_table;\n\tunsigned int\tvbe_control_info;\n\tunsigned int\tvbe_mode_info;\n\tunsigned short\tvbe_mode;\n\tunsigned short\tvbe_interface_seg;\n\tunsigned short\tvbe_interface_off;\n\tunsigned short\tvbe_interrace_len;\n} BOOTINFO;\n\n\n\nvoid kmain(unsigned int magic, BOOTINFO *bootinfo);\n\n#endif\n```\n```c:kernel.c\n#include <kernel.h>\n\nvoid kmain(unsigned int magic, BOOTINFO *bootinfo)\n{\n}\n```\n```c:link.ld\nENTRY(loader)\n\nSECTIONS  {\n\t\t. = 0x00100000;\n\t\t.mbheader ALIGN (0x1000):\n\t\t{\n\t\t\t\t_kernel_start = .;\n\t\t\t\t*(.mbheader)\n\t\t}\n\n\t\t.text ALIGN (0x1000):\n\t\t{\n\t\t\t\t*(.text)\n\t\t}\n\n\t\t.rodata ALIGN (0x1000):\n\t\t{\n\t\t\t\t*(.rodata*)\n\t\t}\n\t\t.data ALIGN (0x1000):\n\t\t{\n\t\t\t\t*(.data)\n\t\t}\n\t\t.bss ALIGN (0x1000):\n\t\t{\n\t\t\t\t*(COMMON)\n\t\t\t\t*(.bss)\n\t\t\t\t_kernel_end = .;\n\t\t}\n}\n```\n\n\n\n# \u521d\u671f\u5316\u72b6\u614b\n\u30ab\u30fc\u30cd\u30eb\u672c\u4f53\u306b\u30b8\u30e3\u30f3\u30d7\u3057\u305f\u6642\u70b9\u3067\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n- EAX 0x2BADB002\n- EBX \u30d6\u30fc\u30c8\u60c5\u5831\u3092\u8a18\u9332\u3057\u305f\u30a2\u30c9\u30ec\u30b9\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n- CS  \u8aad\u307f\u53d6\u308a\u5b9f\u884c\u30bb\u30b0\u30e1\u30f3\u30c8 offset 0  limit 0xFFFFFFFF\n- DS,ES,FS,GS,SS \u8aad\u307f\u53d6\u308a\u66f8\u304d\u8fbc\u307f\u30bb\u30b0\u30e1\u30f3\u30c8 offset 0  limit 0xFFFFFFFF\n- A20GATE \u6709\u52b9\n- CR0 PG clear  PE set\n- EFLAGS VM clear IF clear\n\n\n# \u4eca\u56de\u306e\u30bd\u30fc\u30b9\nhttps://github.com/yakawa/yakawa_os/releases/tag/v0.0.1\n"}