{"context": "ebextensions\u306bdelayed_job\u7528\u306econfig\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3059\u308b\nvim .ebextensions/delayed_job.config\nfiles:                                                                                                                                                                                                           \n  \"/opt/elasticbeanstalk/hooks/appdeploy/post/99_restart_delayed_job.sh\":\n    mode: \"000755\"\n    owner: root\n    group: root\n    content: |\n      #!/usr/bin/env bash\n      # Using similar syntax as the appdeploy pre hooks that is managed by AWS\n\n      # Loading environment data\n      EB_SCRIPT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k script_dir)\n      EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)\n      EB_APP_USER=$(/opt/elasticbeanstalk/bin/get-config container -k app_user)\n      EB_APP_CURRENT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)\n      EB_APP_PIDS_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_pid_dir)\n\n      # Setting up correct environment and ruby version so that bundle can load all gems\n      . $EB_SUPPORT_DIR/envvars\n      . $EB_SCRIPT_DIR/use-app-ruby.sh\n\n      # Now we can do the actual restart of the worker. Make sure to have double quotes when using env vars in the command.\n      # For Rails 4, replace script/delayed_job with bin/delayed_job\n      cd $EB_APP_CURRENT_DIR\n      # su -s /bin/bash -c \"bundle exec script/delayed_job --pid-dir=$EB_APP_PIDS_DIR restart\" $EB_APP_USER\n      su -s /bin/bash -c \"bin/delayed_job --pid-dir=$EB_APP_PIDS_DIR restart\" $EB_APP_USER\n\nebextensions\u306bdelayed_job\u7528\u306econfig\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3059\u308b\n\n\n`vim .ebextensions/delayed_job.config`\n\n```\nfiles:                                                                                                                                                                                                           \n  \"/opt/elasticbeanstalk/hooks/appdeploy/post/99_restart_delayed_job.sh\":\n    mode: \"000755\"\n    owner: root\n    group: root\n    content: |\n      #!/usr/bin/env bash\n      # Using similar syntax as the appdeploy pre hooks that is managed by AWS\n\n      # Loading environment data\n      EB_SCRIPT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k script_dir)\n      EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)\n      EB_APP_USER=$(/opt/elasticbeanstalk/bin/get-config container -k app_user)\n      EB_APP_CURRENT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)\n      EB_APP_PIDS_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_pid_dir)\n\n      # Setting up correct environment and ruby version so that bundle can load all gems\n      . $EB_SUPPORT_DIR/envvars\n      . $EB_SCRIPT_DIR/use-app-ruby.sh\n\n      # Now we can do the actual restart of the worker. Make sure to have double quotes when using env vars in the command.\n      # For Rails 4, replace script/delayed_job with bin/delayed_job\n      cd $EB_APP_CURRENT_DIR\n      # su -s /bin/bash -c \"bundle exec script/delayed_job --pid-dir=$EB_APP_PIDS_DIR restart\" $EB_APP_USER\n      su -s /bin/bash -c \"bin/delayed_job --pid-dir=$EB_APP_PIDS_DIR restart\" $EB_APP_USER\n```\n\n", "tags": ["ElasticBeanstalk", "Rails5", "delayed_job", "Gem"]}