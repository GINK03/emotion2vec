{"tags": ["Arduino", "ESP8266", "ESP-WROOM-02"], "context": "\u3053\u306e\u8a18\u4e8b\u306f\u8a18\u4e8b\u300cESP-WROOM-02 + ArduinoOTA\u3067\u30b9\u30b1\u30c3\u30c1\u306eWiFi\u7d4c\u7531\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u300d\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059  \n\n\u30b9\u30a4\u30c3\u30c1\u30b5\u30a4\u30a8\u30f3\u30b9\u88fd ESP-WROOM-02 Arduino\u4e92\u63db\u30dc\u30fc\u30c9\n\u30b9\u30a4\u30c3\u30c1\u30b5\u30a4\u30a8\u30f3\u30b9\u304b\u3089ESP-WROOM-02 Arduino\u4e92\u63db\u30dc\u30fc\u30c9\u304c\u767a\u58f2\u3055\u308c\u307e\u3057\u305f\u3002\u4eca\u307e\u3067\u306fESP-WROOM-02(ESP8266)\u3092Arduino\u306e\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u3093\u3067\u4f7f\u3046\u305f\u3081\u306b\u306f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u306f\u3093\u3060\u4ed8\u3051\u3057\u3066\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u4e0a\u3067\u4f7f\u7528\u3057\u305f\u308a\u3068\u5c11\u3005\u4f7f\u3044\u3065\u3089\u3044\u90e8\u5206\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u305d\u308c\u3092\u3053\u306e\u4e92\u63db\u30dc\u30fc\u30c9\u304c\u89e3\u6d88\u3057\u3066\u304f\u308c\u307e\u3059  \nESP-WROOM-02 Arduino\u4e92\u63db\u30dc\u30fc\u30c9\n\n\nArduinoOTA\u3092\u4f7f\u3046\u3068Wi-Fi\u7d4c\u7531\u3067\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u3081\u308b\uff01\n\nOTA(Over the Air)\u3068\u306f\u3001\u300c\u7121\u7dda\u901a\u4fe1\u3092\u7d4c\u7531\u3057\u3066\u300d\u3068\u3044\u3046\u610f\u5473\u306e\u82f1\u8a9e\u8868\u73fe\u3067\u3001\u3053\u308c\u307e\u3067\u5916\u90e8\u8a18\u61b6\u88c5\u7f6e\u3084\u6709\u7dda\u901a\u4fe1\u3067\u884c\u308f\u308c\u3066\u304d\u305f\u30c7\u30fc\u30bf\u306e\u9001\u53d7\u4fe1\u306a\u3069\u304c\u7121\u7dda\u901a\u4fe1\u306b\u5bfe\u5fdc\u3057\u305f\u5834\u5408\u306a\u3069\u306b\u3088\u304f\u7528\u3044\u3089\u308c\u308b\u8868\u73fe\u3002\nOTA\u3068\u306f - IT\u7528\u8a9e\u8f9e\u5178\u3088\u308a\u5f15\u7528\n\nArduino\u3067\u306f\u3001\u30d1\u30bd\u30b3\u30f3\u3068USB\u30b1\u30fc\u30d6\u30eb\u3067\u63a5\u7d9a\u3057\u3066\u3044\u305f\u3068\u3053\u308d\u3092\u3001Wi-Fi\u3067\u7121\u7dda\u63a5\u7d9a\u3059\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\u3067\u3059\u306e\u3067\u3001USB\u30b1\u30fc\u30d6\u30eb\u3044\u3089\u305a\u3067\u66f8\u304d\u8fbc\u3081\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059(\u7121\u7dda\u5316\u3059\u308b\u30b9\u30b1\u30c3\u30c1\u306fUSB\u63a5\u7d9a\u3067\u66f8\u304d\u8fbc\u3080\u5fc5\u8981\u3042\u308a)\u3002\n\n\u5b9f\u73fe\u624b\u9806\nWi-Fi\u7d4c\u7531\u3067\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u3080\u307e\u3067\u306e\u624b\u9806\u3067\u3059\u3002\n\n\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\nUSB\u30b1\u30fc\u30d6\u30eb\u7d4c\u7531\u3067\u4e92\u63db\u30dc\u30fc\u30c9\u306bOTA\u306e\u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u3080\nUSB\u30b1\u30fc\u30d6\u30eb\u3092\u629c\u304dWi-Fi\u63a5\u7d9a\nArduino IDE\u3067\u540c\u4e00\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e0a\u306e\u4e92\u63db\u30dc\u30fc\u30c9\u3092\u9078\u629e\nWi-Fi\u7d4c\u7531\u3067\u66f8\u304d\u8fbc\u307f\uff01\n\n\n\u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\nArduino IDE\u3068ESP8266\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u65e2\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u3068\u3044\u3046\u3068\u3053\u308d\u304b\u3089\u306f\u3058\u3081\u307e\u3059\u3002Arduino IDE\u306e\u4ed6\u306b\u5fc5\u8981\u306b\u306a\u308b\u306e\u304cPython\u3067\u3059\u3002\u30d0\u30fc\u30b8\u30e7\u30f3\u306f2.7\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30ea\u30f3\u30af\n- Windows\n- Mac OS X\n\nUSB\u30b1\u30fc\u30d6\u30eb\u7d4c\u7531\u3067\u4e92\u63db\u30dc\u30fc\u30c9\u306bOTA\u306e\u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u3080\n\u65e9\u901fWi-Fi\u7d4c\u7531\u3067\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u307f\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u305d\u306e\u307e\u307e\u3067\u306f\u4e92\u63db\u30dc\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u4f55\u3082\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u3044\u72b6\u614b\u306e\u305f\u3081\u66f8\u304d\u8fbc\u3081\u307e\u305b\u3093\u3002\u3044\u308d\u3044\u308d\u7a81\u3063\u8fbc\u307f\u305f\u3044\u3068\u3053\u308d\u306f\u6291\u3048\u3064\u3064\u3001USB\u7d4c\u7531\u3067OTA\u7528\u306e\u30b9\u30b1\u30c3\u30c1\u3092\u4e92\u63db\u30dc\u30fc\u30c9\u306b\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002Arduino IDE\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089[\u30d5\u30a1\u30a4\u30eb]\u2192[\u30b9\u30b1\u30c3\u30c1\u306e\u4f8b]\u2192[ArduinoOTA]\u2192[BasicOTA]\u3092\u30af\u30ea\u30c3\u30af\u3057\u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\u3092\u958b\u304d\u307e\u3059\u3002\u30b9\u30b1\u30c3\u30c1\u5185\u306essid\u3068password\u3092\u9069\u5b9c\u5909\u66f4\u3057\u3066\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002\n#include <ESP8266WiFi.h>\n#include <ESP8266mDNS.h>\n#include <WiFiUdp.h>\n#include <ArduinoOTA.h>\n\nconst char* ssid = \"..........\";\nconst char* password = \"..........\";\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println(\"Booting\");\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, password);\n  while (WiFi.waitForConnectResult() != WL_CONNECTED) {\n    Serial.println(\"Connection Failed! Rebooting...\");\n    delay(5000);\n    ESP.restart();\n  }\n\n  // Port defaults to 8266\n  // ArduinoOTA.setPort(8266);\n\n  // Hostname defaults to esp8266-[ChipID]\n  // ArduinoOTA.setHostname(\"myesp8266\");\n\n  // No authentication by default\n  // ArduinoOTA.setPassword((const char *)\"123\");\n\n  ArduinoOTA.onStart([]() {\n    Serial.println(\"Start\");\n  });\n  ArduinoOTA.onEnd([]() {\n    Serial.println(\"\\nEnd\");\n  });\n  ArduinoOTA.onProgress([](unsigned int progress, unsigned int total) {\n    Serial.printf(\"Progress: %u%%\\r\", (progress / (total / 100)));\n  });\n  ArduinoOTA.onError([](ota_error_t error) {\n    Serial.printf(\"Error[%u]: \", error);\n    if (error == OTA_AUTH_ERROR) Serial.println(\"Auth Failed\");\n    else if (error == OTA_BEGIN_ERROR) Serial.println(\"Begin Failed\");\n    else if (error == OTA_CONNECT_ERROR) Serial.println(\"Connect Failed\");\n    else if (error == OTA_RECEIVE_ERROR) Serial.println(\"Receive Failed\");\n    else if (error == OTA_END_ERROR) Serial.println(\"End Failed\");\n  });\n  ArduinoOTA.begin();\n  Serial.println(\"Ready\");\n  Serial.print(\"IP address: \");\n  Serial.println(WiFi.localIP());\n}\n\nvoid loop() {\n  ArduinoOTA.handle();\n}\n\nWi-Fi\u306b\u63a5\u7d9a\u3067\u304d\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u30fc\u3078\u8868\u793a\u3055\u308c\u307e\u3059\u3002ESP-WROOM-02\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305fIP\u30a2\u30c9\u30ec\u30b9\u3068\u3068\u3082\u306b\u3002\n\n\nArduino IDE\u3067\u540c\u4e00\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e0a\u306eESP-WROOM-02\u3092\u9078\u629e\nWi-Fi\u7d4c\u7531\u3067\u66f8\u304d\u8fbc\u3080\u305f\u3081\u306b\u306f\u3044\u304f\u3064\u304b\u8a2d\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\u307e\u305a\u3001ESP-WROOM-02\u304c\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u30dd\u30fc\u30c8\u3092\u5909\u66f4\u3057\u307e\u3059\u3002Arduino IDE\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089[\u30c4\u30fc\u30eb]\u2192[\u30dd\u30fc\u30c8]\u2192[Network ports esp8266-\u301c\u301c\u301c]\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001Arduino IDE\u3092\u518d\u8d77\u52d5\u3059\u308b\u304b\u3001ESP-WROOM-02\u304cWi-Fi\u3078\u63a5\u7d9a\u3067\u304d\u308b\u307e\u3067\u5f85\u3061\u307e\u3059\u3002\u6b21\u306b\u3001OTA\u3067\u66f8\u304d\u8fbc\u3080\u306e\u3067[\u30c4\u30fc\u30eb]\u2192[Upload Using]\u2192[OTA]\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n\nWi-Fi\u7d4c\u7531\u3067\u66f8\u304d\u8fbc\u307f\uff01\n\u3053\u3053\u30671\u70b9\u6ce8\u610f\u3059\u308b\u30dd\u30a4\u30f3\u30c8\u3002\u305d\u308c\u306f\u5148\u307b\u3069\u66f8\u304d\u8fbc\u3093\u3060BasicOTA\u306e\u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\u3092\u57fa\u306b\u3001OTA\u306e\u51e6\u7406\u3092\u6b8b\u3057\u305f\u307e\u307e\u30b9\u30b1\u30c3\u30c1\u3092\u958b\u767a\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002OTA\u306e\u51e6\u7406\u304c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3068\u3001Wi-Fi\u7d4c\u7531\u3067\u66f8\u304d\u8fbc\u3081\u306a\u304f\u306a\u308b\u3068\u3044\u3046\u30b7\u30f3\u30d7\u30eb\u306a\u7406\u7531\u3067\u3059\u3002\u3067\u3059\u306e\u3067OTA\u306e\u51e6\u7406\u304c\u5897\u3048\u308b\u5206\u3001\u30b9\u30b1\u30c3\u30c1\u306e\u30c7\u30fc\u30bf\u5bb9\u91cf\u304c\u5897\u3048\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u6b21\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u3054\u89a7\u306e\u3068\u304a\u308a\u3001OTA\u306e\u51e6\u7406\u306bL\u30c1\u30ab\u306e\u51e6\u7406\u3092\u52a0\u3048\u3066\u3044\u307e\u3059\u3002\n#include <ESP8266WiFi.h>\n#include <ESP8266mDNS.h>\n#include <WiFiUdp.h>\n#include <ArduinoOTA.h>\n\nconst char* ssid = \"..........\";\nconst char* password = \"..........\";\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println(\"Booting\");\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, password);\n  while (WiFi.waitForConnectResult() != WL_CONNECTED) {\n    Serial.println(\"Connection Failed! Rebooting...\");\n    delay(5000);\n    ESP.restart();\n  }\n\n  // Port defaults to 8266\n  // ArduinoOTA.setPort(8266);\n\n  // Hostname defaults to esp8266-[ChipID]\n  // ArduinoOTA.setHostname(\"myesp8266\");\n\n  // No authentication by default\n  // ArduinoOTA.setPassword((const char *)\"123\");\n\n  ArduinoOTA.onStart([]() {\n    Serial.println(\"Start\");\n  });\n  ArduinoOTA.onEnd([]() {\n    Serial.println(\"\\nEnd\");\n  });\n  ArduinoOTA.onProgress([](unsigned int progress, unsigned int total) {\n    Serial.printf(\"Progress: %u%%\\r\", (progress / (total / 100)));\n  });\n  ArduinoOTA.onError([](ota_error_t error) {\n    Serial.printf(\"Error[%u]: \", error);\n    if (error == OTA_AUTH_ERROR) Serial.println(\"Auth Failed\");\n    else if (error == OTA_BEGIN_ERROR) Serial.println(\"Begin Failed\");\n    else if (error == OTA_CONNECT_ERROR) Serial.println(\"Connect Failed\");\n    else if (error == OTA_RECEIVE_ERROR) Serial.println(\"Receive Failed\");\n    else if (error == OTA_END_ERROR) Serial.println(\"End Failed\");\n  });\n  ArduinoOTA.begin();\n  Serial.println(\"Ready\");\n  Serial.print(\"IP address: \");\n  Serial.println(WiFi.localIP());\n\n  pinMode(14, OUTPUT);\n}\n\nvoid loop() {\n  ArduinoOTA.handle();\n\n  // L\u30c1\u30ab\u306e\u51e6\u7406\n  digitalWrite(14, HIGH);\n\n  delay(1000);\n\n  digitalWrite(14, LOW);\n\n  delay(1000);\n}\n\n\n\u958b\u767a\u4e2d\u306fWi-Fi\u7d4c\u7531\u3067\u3044\u3044\u304c\u672c\u756a\u306fUSB\u3067\u66f8\u304d\u8fbc\u3093\u3060\u307b\u3046\u304c\u3044\u3044\u304b\u3082\n\u500b\u4eba\u7684\u306a\u4e3b\u89b3\u3067\u3059\u304c\u3001\u3053\u306eOTA\u3092\u4f7f\u3063\u305fWi-Fi\u7d4c\u7531\u3067\u306e\u66f8\u304d\u8fbc\u307f\u306f\u4e3b\u306b\u958b\u767a\u4e2d\u306b\u4f7f\u3046\u3082\u306e\u304b\u3068\u611f\u3058\u307e\u3057\u305f\u3002\u30b9\u30b1\u30c3\u30c1\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306b\u304b\u304b\u308b\u6642\u9593\u3082\u3001USB\u30b1\u30fc\u30d6\u30eb\u4f7f\u7528\u6642\u3088\u308a\u901f\u3044\u3067\u3059\u3002\u4e00\u901a\u308a\u958b\u767a\u304c\u5b8c\u4e86\u3057\u305f\u6642\u70b9\u3067\u3001OTA\u306e\u51e6\u7406\u3092\u30b9\u30b1\u30c3\u30c1\u304b\u3089\u7701\u3044\u3066\u66f8\u304d\u8fbc\u3080\u3068\u30e0\u30c0\u3082\u7701\u3051\u3066\u5b89\u5fc3\u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306f\u8a18\u4e8b\u300c[ESP-WROOM-02 + ArduinoOTA\u3067\u30b9\u30b1\u30c3\u30c1\u306eWiFi\u7d4c\u7531\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9](http://qiita.com/minori24/items/4a3fdc0b037e9d1c09a1)\u300d\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059 :sun_with_face: \n\n# \u30b9\u30a4\u30c3\u30c1\u30b5\u30a4\u30a8\u30f3\u30b9\u88fd ESP-WROOM-02 Arduino\u4e92\u63db\u30dc\u30fc\u30c9\n\u30b9\u30a4\u30c3\u30c1\u30b5\u30a4\u30a8\u30f3\u30b9\u304b\u3089[ESP-WROOM-02 Arduino\u4e92\u63db\u30dc\u30fc\u30c9](https://www.switch-science.com/catalog/2620/)\u304c\u767a\u58f2\u3055\u308c\u307e\u3057\u305f\u3002\u4eca\u307e\u3067\u306fESP-WROOM-02(ESP8266)\u3092Arduino\u306e\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u3093\u3067\u4f7f\u3046\u305f\u3081\u306b\u306f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u306f\u3093\u3060\u4ed8\u3051\u3057\u3066\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u4e0a\u3067\u4f7f\u7528\u3057\u305f\u308a\u3068\u5c11\u3005\u4f7f\u3044\u3065\u3089\u3044\u90e8\u5206\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u305d\u308c\u3092\u3053\u306e\u4e92\u63db\u30dc\u30fc\u30c9\u304c\u89e3\u6d88\u3057\u3066\u304f\u308c\u307e\u3059 :pray: \n\n[ESP-WROOM-02 Arduino\u4e92\u63db\u30dc\u30fc\u30c9](https://www.switch-science.com/catalog/2620/)\n![2620_1.jpg](https://qiita-image-store.s3.amazonaws.com/0/55103/0694e9d1-177b-dedb-000d-38c2446ce73b.jpeg)\n\n# ArduinoOTA\u3092\u4f7f\u3046\u3068Wi-Fi\u7d4c\u7531\u3067\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u3081\u308b\uff01\n> OTA(Over the Air)\u3068\u306f\u3001\u300c\u7121\u7dda\u901a\u4fe1\u3092\u7d4c\u7531\u3057\u3066\u300d\u3068\u3044\u3046\u610f\u5473\u306e\u82f1\u8a9e\u8868\u73fe\u3067\u3001\u3053\u308c\u307e\u3067\u5916\u90e8\u8a18\u61b6\u88c5\u7f6e\u3084\u6709\u7dda\u901a\u4fe1\u3067\u884c\u308f\u308c\u3066\u304d\u305f\u30c7\u30fc\u30bf\u306e\u9001\u53d7\u4fe1\u306a\u3069\u304c\u7121\u7dda\u901a\u4fe1\u306b\u5bfe\u5fdc\u3057\u305f\u5834\u5408\u306a\u3069\u306b\u3088\u304f\u7528\u3044\u3089\u308c\u308b\u8868\u73fe\u3002\n[OTA\u3068\u306f - IT\u7528\u8a9e\u8f9e\u5178](http://e-words.jp/w/OTA.html)\u3088\u308a\u5f15\u7528\n\nArduino\u3067\u306f\u3001\u30d1\u30bd\u30b3\u30f3\u3068USB\u30b1\u30fc\u30d6\u30eb\u3067\u63a5\u7d9a\u3057\u3066\u3044\u305f\u3068\u3053\u308d\u3092\u3001Wi-Fi\u3067\u7121\u7dda\u63a5\u7d9a\u3059\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\u3067\u3059\u306e\u3067\u3001USB\u30b1\u30fc\u30d6\u30eb\u3044\u3089\u305a\u3067\u66f8\u304d\u8fbc\u3081\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059(\u7121\u7dda\u5316\u3059\u308b\u30b9\u30b1\u30c3\u30c1\u306fUSB\u63a5\u7d9a\u3067\u66f8\u304d\u8fbc\u3080\u5fc5\u8981\u3042\u308a)\u3002\n\n# \u5b9f\u73fe\u624b\u9806\nWi-Fi\u7d4c\u7531\u3067\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u3080\u307e\u3067\u306e\u624b\u9806\u3067\u3059\u3002\n\n1. \u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\n2. USB\u30b1\u30fc\u30d6\u30eb\u7d4c\u7531\u3067\u4e92\u63db\u30dc\u30fc\u30c9\u306bOTA\u306e\u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u3080\n3. USB\u30b1\u30fc\u30d6\u30eb\u3092\u629c\u304dWi-Fi\u63a5\u7d9a\n4. Arduino IDE\u3067\u540c\u4e00\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e0a\u306e\u4e92\u63db\u30dc\u30fc\u30c9\u3092\u9078\u629e\n5. Wi-Fi\u7d4c\u7531\u3067\u66f8\u304d\u8fbc\u307f\uff01\n\n# \u958b\u767a\u74b0\u5883\u306e\u69cb\u7bc9\nArduino IDE\u3068ESP8266\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u65e2\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u3068\u3044\u3046\u3068\u3053\u308d\u304b\u3089\u306f\u3058\u3081\u307e\u3059\u3002Arduino IDE\u306e\u4ed6\u306b\u5fc5\u8981\u306b\u306a\u308b\u306e\u304c[Python](https://www.python.org/)\u3067\u3059\u3002**\u30d0\u30fc\u30b8\u30e7\u30f3\u306f2.7\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002**\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30ea\u30f3\u30af\n- [Windows](https://www.python.org/downloads/windows/)\n- [Mac OS X](https://www.python.org/downloads/mac-osx/)\n\n# USB\u30b1\u30fc\u30d6\u30eb\u7d4c\u7531\u3067\u4e92\u63db\u30dc\u30fc\u30c9\u306bOTA\u306e\u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u3080\n\u65e9\u901fWi-Fi\u7d4c\u7531\u3067\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u8fbc\u307f\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u305d\u306e\u307e\u307e\u3067\u306f\u4e92\u63db\u30dc\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u4f55\u3082\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u3044\u72b6\u614b\u306e\u305f\u3081\u66f8\u304d\u8fbc\u3081\u307e\u305b\u3093\u3002\u3044\u308d\u3044\u308d\u7a81\u3063\u8fbc\u307f\u305f\u3044\u3068\u3053\u308d\u306f\u6291\u3048\u3064\u3064\u3001USB\u7d4c\u7531\u3067OTA\u7528\u306e\u30b9\u30b1\u30c3\u30c1\u3092\u4e92\u63db\u30dc\u30fc\u30c9\u306b\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002Arduino IDE\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089`[\u30d5\u30a1\u30a4\u30eb]\u2192[\u30b9\u30b1\u30c3\u30c1\u306e\u4f8b]\u2192[ArduinoOTA]\u2192[BasicOTA]`\u3092\u30af\u30ea\u30c3\u30af\u3057\u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\u3092\u958b\u304d\u307e\u3059\u3002\u30b9\u30b1\u30c3\u30c1\u5185\u306e`ssid`\u3068`password`\u3092\u9069\u5b9c\u5909\u66f4\u3057\u3066\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002\n\n```cpp\n#include <ESP8266WiFi.h>\n#include <ESP8266mDNS.h>\n#include <WiFiUdp.h>\n#include <ArduinoOTA.h>\n\nconst char* ssid = \"..........\";\nconst char* password = \"..........\";\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println(\"Booting\");\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, password);\n  while (WiFi.waitForConnectResult() != WL_CONNECTED) {\n    Serial.println(\"Connection Failed! Rebooting...\");\n    delay(5000);\n    ESP.restart();\n  }\n\n  // Port defaults to 8266\n  // ArduinoOTA.setPort(8266);\n\n  // Hostname defaults to esp8266-[ChipID]\n  // ArduinoOTA.setHostname(\"myesp8266\");\n\n  // No authentication by default\n  // ArduinoOTA.setPassword((const char *)\"123\");\n\n  ArduinoOTA.onStart([]() {\n    Serial.println(\"Start\");\n  });\n  ArduinoOTA.onEnd([]() {\n    Serial.println(\"\\nEnd\");\n  });\n  ArduinoOTA.onProgress([](unsigned int progress, unsigned int total) {\n    Serial.printf(\"Progress: %u%%\\r\", (progress / (total / 100)));\n  });\n  ArduinoOTA.onError([](ota_error_t error) {\n    Serial.printf(\"Error[%u]: \", error);\n    if (error == OTA_AUTH_ERROR) Serial.println(\"Auth Failed\");\n    else if (error == OTA_BEGIN_ERROR) Serial.println(\"Begin Failed\");\n    else if (error == OTA_CONNECT_ERROR) Serial.println(\"Connect Failed\");\n    else if (error == OTA_RECEIVE_ERROR) Serial.println(\"Receive Failed\");\n    else if (error == OTA_END_ERROR) Serial.println(\"End Failed\");\n  });\n  ArduinoOTA.begin();\n  Serial.println(\"Ready\");\n  Serial.print(\"IP address: \");\n  Serial.println(WiFi.localIP());\n}\n\nvoid loop() {\n  ArduinoOTA.handle();\n}\n```\nWi-Fi\u306b\u63a5\u7d9a\u3067\u304d\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u30fc\u3078\u8868\u793a\u3055\u308c\u307e\u3059\u3002ESP-WROOM-02\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305fIP\u30a2\u30c9\u30ec\u30b9\u3068\u3068\u3082\u306b\u3002\n\n![\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u30fc](https://qiita-image-store.s3.amazonaws.com/0/55103/a105c68c-327c-af5f-0df4-acf97d2fd469.png)\n\n# Arduino IDE\u3067\u540c\u4e00\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e0a\u306eESP-WROOM-02\u3092\u9078\u629e\nWi-Fi\u7d4c\u7531\u3067\u66f8\u304d\u8fbc\u3080\u305f\u3081\u306b\u306f\u3044\u304f\u3064\u304b\u8a2d\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\u307e\u305a\u3001ESP-WROOM-02\u304c\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u30dd\u30fc\u30c8\u3092\u5909\u66f4\u3057\u307e\u3059\u3002Arduino IDE\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089`[\u30c4\u30fc\u30eb]\u2192[\u30dd\u30fc\u30c8]\u2192[Network ports esp8266-\u301c\u301c\u301c]`\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001Arduino IDE\u3092\u518d\u8d77\u52d5\u3059\u308b\u304b\u3001ESP-WROOM-02\u304cWi-Fi\u3078\u63a5\u7d9a\u3067\u304d\u308b\u307e\u3067\u5f85\u3061\u307e\u3059\u3002\u6b21\u306b\u3001OTA\u3067\u66f8\u304d\u8fbc\u3080\u306e\u3067`[\u30c4\u30fc\u30eb]\u2192[Upload Using]\u2192[OTA]`\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n![Arduino IDE\u30e1\u30cb\u30e5\u30fc](https://qiita-image-store.s3.amazonaws.com/0/55103/a58c180a-df27-f7cd-685d-24e4c56f9b19.png)\n\n# Wi-Fi\u7d4c\u7531\u3067\u66f8\u304d\u8fbc\u307f\uff01\n\u3053\u3053\u30671\u70b9\u6ce8\u610f\u3059\u308b\u30dd\u30a4\u30f3\u30c8\u3002\u305d\u308c\u306f**\u5148\u307b\u3069\u66f8\u304d\u8fbc\u3093\u3060BasicOTA\u306e\u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\u3092\u57fa\u306b\u3001OTA\u306e\u51e6\u7406\u3092\u6b8b\u3057\u305f\u307e\u307e\u30b9\u30b1\u30c3\u30c1\u3092\u958b\u767a\u3059\u308b**\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002OTA\u306e\u51e6\u7406\u304c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3068\u3001Wi-Fi\u7d4c\u7531\u3067\u66f8\u304d\u8fbc\u3081\u306a\u304f\u306a\u308b\u3068\u3044\u3046\u30b7\u30f3\u30d7\u30eb\u306a\u7406\u7531\u3067\u3059\u3002\u3067\u3059\u306e\u3067OTA\u306e\u51e6\u7406\u304c\u5897\u3048\u308b\u5206\u3001\u30b9\u30b1\u30c3\u30c1\u306e\u30c7\u30fc\u30bf\u5bb9\u91cf\u304c\u5897\u3048\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u6b21\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u3054\u89a7\u306e\u3068\u304a\u308a\u3001OTA\u306e\u51e6\u7406\u306bL\u30c1\u30ab\u306e\u51e6\u7406\u3092\u52a0\u3048\u3066\u3044\u307e\u3059\u3002\n\n```cpp\n#include <ESP8266WiFi.h>\n#include <ESP8266mDNS.h>\n#include <WiFiUdp.h>\n#include <ArduinoOTA.h>\n\nconst char* ssid = \"..........\";\nconst char* password = \"..........\";\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println(\"Booting\");\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, password);\n  while (WiFi.waitForConnectResult() != WL_CONNECTED) {\n    Serial.println(\"Connection Failed! Rebooting...\");\n    delay(5000);\n    ESP.restart();\n  }\n\n  // Port defaults to 8266\n  // ArduinoOTA.setPort(8266);\n\n  // Hostname defaults to esp8266-[ChipID]\n  // ArduinoOTA.setHostname(\"myesp8266\");\n\n  // No authentication by default\n  // ArduinoOTA.setPassword((const char *)\"123\");\n\n  ArduinoOTA.onStart([]() {\n    Serial.println(\"Start\");\n  });\n  ArduinoOTA.onEnd([]() {\n    Serial.println(\"\\nEnd\");\n  });\n  ArduinoOTA.onProgress([](unsigned int progress, unsigned int total) {\n    Serial.printf(\"Progress: %u%%\\r\", (progress / (total / 100)));\n  });\n  ArduinoOTA.onError([](ota_error_t error) {\n    Serial.printf(\"Error[%u]: \", error);\n    if (error == OTA_AUTH_ERROR) Serial.println(\"Auth Failed\");\n    else if (error == OTA_BEGIN_ERROR) Serial.println(\"Begin Failed\");\n    else if (error == OTA_CONNECT_ERROR) Serial.println(\"Connect Failed\");\n    else if (error == OTA_RECEIVE_ERROR) Serial.println(\"Receive Failed\");\n    else if (error == OTA_END_ERROR) Serial.println(\"End Failed\");\n  });\n  ArduinoOTA.begin();\n  Serial.println(\"Ready\");\n  Serial.print(\"IP address: \");\n  Serial.println(WiFi.localIP());\n\n  pinMode(14, OUTPUT);\n}\n\nvoid loop() {\n  ArduinoOTA.handle();\n\n  // L\u30c1\u30ab\u306e\u51e6\u7406\n  digitalWrite(14, HIGH);\n\n  delay(1000);\n\n  digitalWrite(14, LOW);\n\n  delay(1000);\n}\n```\n\n# \u958b\u767a\u4e2d\u306fWi-Fi\u7d4c\u7531\u3067\u3044\u3044\u304c\u672c\u756a\u306fUSB\u3067\u66f8\u304d\u8fbc\u3093\u3060\u307b\u3046\u304c\u3044\u3044\u304b\u3082\n\u500b\u4eba\u7684\u306a\u4e3b\u89b3\u3067\u3059\u304c\u3001\u3053\u306eOTA\u3092\u4f7f\u3063\u305fWi-Fi\u7d4c\u7531\u3067\u306e\u66f8\u304d\u8fbc\u307f\u306f\u4e3b\u306b\u958b\u767a\u4e2d\u306b\u4f7f\u3046\u3082\u306e\u304b\u3068\u611f\u3058\u307e\u3057\u305f\u3002\u30b9\u30b1\u30c3\u30c1\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306b\u304b\u304b\u308b\u6642\u9593\u3082\u3001USB\u30b1\u30fc\u30d6\u30eb\u4f7f\u7528\u6642\u3088\u308a\u901f\u3044\u3067\u3059\u3002\u4e00\u901a\u308a\u958b\u767a\u304c\u5b8c\u4e86\u3057\u305f\u6642\u70b9\u3067\u3001OTA\u306e\u51e6\u7406\u3092\u30b9\u30b1\u30c3\u30c1\u304b\u3089\u7701\u3044\u3066\u66f8\u304d\u8fbc\u3080\u3068\u30e0\u30c0\u3082\u7701\u3051\u3066\u5b89\u5fc3\u3067\u3059\u3002\n"}