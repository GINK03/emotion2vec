{"context": " More than 1 year has passed since last update.\u901a\u5e38\u306eASCII\u6587\u5b57\u5217\u3067\u3042\u308c\u3070\nstring str = \"ABCDE\";\ncout << str.at( 0 );\n\u3068\u3044\u3046\u3075\u3046\u306bstring\u306eat()\u95a2\u6570\u3092\u4f7f\u3048\u3070\u6307\u5b9a\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\uff11\u6587\u5b57\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\u6b63\u78ba\u306b\u306f\u3001at()\u95a2\u6570\u3067\u53d6\u5f97\u3067\u304d\u308b\u306e\u306f\u6307\u5b9a\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e1\u30d0\u30a4\u30c8\u3067\u3042\u308b\u305f\u3081\u30012\u30d0\u30a4\u30c8\u6587\u5b57\u30843\u30d0\u30a4\u30c8\u6587\u5b57\u3092\u542b\u3080\u65e5\u672c\u8a9e\u6587\u5b57\u5217( UTF-8 )\u3092\u5206\u5272\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u56f0\u3063\u305f\u3053\u3068\u306b\u672c\u67652\u30d0\u30a4\u30c8\u30843\u30d0\u30a4\u30c8\u3067\u4e00\u6587\u5b57\u306b\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u3082\u5bb9\u8d66\u306a\u304f1\u30d0\u30a4\u30c8\u305a\u3064\u306b\u5206\u5272\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u3053\u3053( UTF8\u30a8\u30f3\u30b3\u30fc\u30c9\u3092\u30c7\u30b3\u30fc\u30c9\u3059\u308b )\u3092\u53c2\u8003\u306b\u3057\u3066\u3001\n\u4e00\u5ea6at()\u95a2\u6570\u30671\u30d0\u30a4\u30c8\u305a\u3064\u5206\u5272\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25bc\nUTF-8\u3067\u306e1\u30d0\u30a4\u30c8\u3054\u3068\u306e\u30d3\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u3092\u8b58\u5225\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25bc\n2~3\u30d0\u30a4\u30c8\u6587\u5b57\u306e\u5834\u5408\u306f\u9023\u7d50\u3057\u30661\u6587\u5b57\u306b\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25bc\nstring\u578b\u306evector\u306b\u9023\u7d50\u3057\u305f\u6587\u5b57\u3092\u8ffd\u52a0\n\u3068\u3044\u3046\u624b\u9806\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\nofApp.h\nclass ofApp : public ofBaseApp\n{\npublic:\n  void setup();\n  vector< string > separateUTF8String( string _srcStr );\n\n  string srcStr;\n};\n\n\n\nofApp.cpp\nvoid ofApp::setup()\n{\n  srcStr = \"\u306f\u308d\u30fc\u308f\u30fc\u308b\u3069\uff01Hello, world!\";\n  vector< string > letters_uc = separateUTF8String( srcStr );\n  for( string s : letters_uc )\n  {\n    cout << s << endl;\n  }\n}\n\nvector< string > ofApp::separateUTF8String( string _srcStr )\n{\n    vector< string > letters;\n\n    for( int i = 0; i < _srcStr.length(); ++i )\n    {\n        string bin_str = ofToBinary( _srcStr.at( i ) );\n\n        // 1 byte character\n        if( bin_str.find( \"0\" ) == 0 )\n        {\n            letters.push_back( ofToString( _srcStr.at( i ) ) );\n        }\n        // 2 byte character\n        else if( bin_str.find( \"110\" ) == 0 )\n        {\n            letters.push_back( ofToString( _srcStr.at( i ) ) + ofToString( _srcStr.at( i + 1 ) ) );\n        }\n        // 3 byte character\n        else if( bin_str.find( \"1110\" ) == 0 )\n        {\n            letters.push_back( ofToString( _srcStr.at( i ) ) + ofToString( _srcStr.at( i + 1 ) ) + ofToString( _srcStr.at( i + 2 ) ) );\n        }\n        // continue byte ( second or later byte )\n        else if( bin_str.find( \"10\" ) == 0  )\n        {\n\n        }\n    }\n\n    return letters;\n}\n\n\n\u5b9f\u884c\u7d50\u679c\n\n\u306f\n\u308d\n\u30fc\n\u308f\n\u30fc\n\u308b\n\u3069\n\uff01\nH\ne\nl\nl\no\n,\nw\no\nr\nl\nd\n!\n\n\u901a\u5e38\u306eASCII\u6587\u5b57\u5217\u3067\u3042\u308c\u3070\n`string str = \"ABCDE\";\ncout << str.at( 0 );`\n\u3068\u3044\u3046\u3075\u3046\u306bstring\u306eat()\u95a2\u6570\u3092\u4f7f\u3048\u3070\u6307\u5b9a\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\b\uff11\u6587\u5b57\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n\u6b63\u78ba\u306b\u306f\u3001at()\u95a2\u6570\u3067\u53d6\u5f97\u3067\u304d\u308b\u306e\u306f\u6307\u5b9a\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e1\u30d0\u30a4\u30c8\u3067\u3042\u308b\u305f\u3081\u30012\u30d0\u30a4\u30c8\u6587\u5b57\u30843\u30d0\u30a4\u30c8\u6587\u5b57\u3092\u542b\u3080\u65e5\u672c\u8a9e\u6587\u5b57\u5217( UTF-8 )\u3092\u5206\u5272\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u56f0\u3063\u305f\u3053\u3068\u306b\u672c\u67652\u30d0\u30a4\u30c8\u30843\u30d0\u30a4\u30c8\u3067\u4e00\u6587\u5b57\u306b\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u3082\u5bb9\u8d66\u306a\u304f1\u30d0\u30a4\u30c8\u305a\u3064\u306b\u5206\u5272\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u305d\u3053\u3067\u3001\u3053\u3053( [UTF8\u30a8\u30f3\u30b3\u30fc\u30c9\u3092\u30c7\u30b3\u30fc\u30c9\u3059\u308b](http://www.eva.hi-ho.ne.jp/cgi-bin/user/zxcv/decodeUTF8.cgi) )\u3092\u53c2\u8003\u306b\u3057\u3066\u3001\n\n\u4e00\u5ea6at()\u95a2\u6570\u30671\u30d0\u30a4\u30c8\u305a\u3064\u5206\u5272\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25bc\nUTF-8\u3067\u306e1\u30d0\u30a4\u30c8\u3054\u3068\u306e\u30d3\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u3092\u8b58\u5225\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25bc\n2~3\u30d0\u30a4\u30c8\u6587\u5b57\u306e\u5834\u5408\u306f\u9023\u7d50\u3057\u30661\u6587\u5b57\u306b\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25bc\nstring\u578b\u306evector\u306b\u9023\u7d50\u3057\u305f\u6587\u5b57\u3092\u8ffd\u52a0\n\n\u3068\u3044\u3046\u624b\u9806\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n```cpp:ofApp.h\nclass ofApp : public ofBaseApp\n{\npublic:\n  void setup();\n  vector< string > separateUTF8String( string _srcStr );\n  \n  string srcStr;\n};\n```\n\n```cpp:ofApp.cpp\nvoid ofApp::setup()\n{\n  srcStr = \"\u306f\u308d\u30fc\u308f\u30fc\u308b\u3069\uff01Hello, world!\";\n  vector< string > letters_uc = separateUTF8String( srcStr );\n  for( string s : letters_uc )\n  {\n    cout << s << endl;\n  }\n}\n\nvector< string > ofApp::separateUTF8String( string _srcStr )\n{\n    vector< string > letters;\n    \n    for( int i = 0; i < _srcStr.length(); ++i )\n    {\n        string bin_str = ofToBinary( _srcStr.at( i ) );\n        \n        // 1 byte character\n        if( bin_str.find( \"0\" ) == 0 )\n        {\n            letters.push_back( ofToString( _srcStr.at( i ) ) );\n        }\n        // 2 byte character\n        else if( bin_str.find( \"110\" ) == 0 )\n        {\n            letters.push_back( ofToString( _srcStr.at( i ) ) + ofToString( _srcStr.at( i + 1 ) ) );\n        }\n        // 3 byte character\n        else if( bin_str.find( \"1110\" ) == 0 )\n        {\n            letters.push_back( ofToString( _srcStr.at( i ) ) + ofToString( _srcStr.at( i + 1 ) ) + ofToString( _srcStr.at( i + 2 ) ) );\n        }\n        // continue byte ( second or later byte )\n        else if( bin_str.find( \"10\" ) == 0  )\n        {\n            \n        }\n    }\n    \n    return letters;\n}\n```\n\n\u5b9f\u884c\u7d50\u679c\n>\u306f\n>\u308d\n>\u30fc\n>\u308f\n>\u30fc\n>\u308b\n>\u3069\n>\uff01\n>H\n>e\n>l\n>l\n>o\n>,\n> \n>w\n>o\n>r\n>l\n>d\n>!\n", "tags": ["C++", "openFrameworks"]}