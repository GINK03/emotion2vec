{"context": " More than 1 year has passed since last update.\n\nCoq\u3067call/cc\uff08Coq\u3067\u7d99\u7d9a\u30e2\u30ca\u30c9\u3001\u305d\u306e2\uff09\n2014_05_17 @suharahiromichi\n2014_05_18 @suharahiromichi \u300c\u8a3c\u660e\u300d\u306e\u90e8\u5206\u3092\u898b\u76f4\u3057\u305f\n\u7d99\u7d9a\u30e2\u30ca\u30c9\u306e\u7d9a\u304d\u3068\u3057\u3066\u3001\u524d\u56de\uff08\u6587\u732e1.\uff09\u306b\u3082\u5b9a\u7fa9\u3057\u3066\u3042\u3063\u305fcall/cc\u3092\u4f7f\u3063\u3066\u307f\u308b\u3002\u4f8b\u984c\u306f\u4eca\u56de\u3082\u6587\u732e2.\u304b\u3089\u3044\u305f\u3060\u3044\u3066\u3044\u307e\u3059\u3002\n\u672c\u8cc7\u6599\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/suharahiromichi/coq/blob/master/ssr/ssr_monad_callcc.v\n\nRequire Import ssreflect ssrbool ssrnat seq.\n\n\n\n\n\u7d99\u7d9a\u30e2\u30ca\u30c9\n\n\u5b9a\u7fa9\uff08\u518d\u63b2\uff09\n\nDefinition MCont R A := (A -> R) -> R.\n\nDefinition bind {R A : Type} (c : MCont R A)\n           (f : A -> MCont R A) : MCont R A :=\n  fun (k : A -> R) => c (fun (a : A) => f a k).\n\nDefinition ret {R A : Type} (a : A) : MCont R A :=\n  fun k => k a.\n\n\n(* call/cc\u3001\u6587\u732e3\u306e\u5b9a\u7fa9\u3092\u53c2\u8003\u306b\u3057\u305f\u3002 *)\nDefinition callcc {R A B : Type}\n           (f : (A -> MCont R B) -> MCont R A) : MCont R A :=\n  fun (k : A -> R) => f (fun (a : A) => fun (b : B -> R) => k a) k.\nCheck callcc.\n\n\n\n: ((A -> MCont R B) -> MCont R A) -> MCont R A\n\n\u3059\u3053\u3057\u5f37\u5f15\u3060\u304c\u3001call/cc\u306e\u578b\u306f\u3001\u300cMCont R\u300d\u306e\u90e8\u5206\u3092\u9664\u3044\u3066\u898b\u308b\u3068\u3001\u53e4\u5178\u8ad6\u7406\u3092\u6271\u3046\u3068\u304d\u306e\u300c\u30d1\u30fc\u30b9\u306e\u516c\u7406\u300d\u306b\u5bfe\u5fdc\u3059\u308b\u3068\u3044\u3048\u308b\u3002\n((P -> Q) -> P) -> P\n\n\u6f14\u7b97\u5b50\u3068\u3001do\u8a18\u6cd5\u3082\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3002\n\nNotation \"c >>= f\" :=\n  (bind c f)\n    (at level 42, left associativity).\n\nNotation \"s1 >> s2\" :=\n  (s1 >>= fun _ => s2)\n    (at level 42, left associativity).\n\nNotation \"'DO' a <- A ; b <- B ; C 'OD'\" :=\n  (A >>= fun a => B >>= fun b => C)\n    (at level 100, no associativity).\n\nNotation \"'DO' A ; B ; C 'OD'\" :=\n  (A >> B >> C)\n    (at level 100, no associativity).\n\n\n\n\n\u4f8b\u984c\n\n\u5927\u57df\u8131\u51fa\u306e\u4f8b\uff08\u6587\u732e2.\uff09\n\nDefinition bar1 (cont : nat -> MCont nat nat) := ret 1 : MCont nat nat.\nDefinition bar2 (cont : nat -> MCont nat nat) := cont 2 : MCont nat nat.\nDefinition bar3 (cont : nat -> MCont nat nat) := ret 3 : MCont nat nat.\n\nDefinition foo (cont : nat -> MCont nat nat) :=\n  DO\n    bar1 cont;\n    bar2 cont;                              (* !! *)\n    bar3 cont\n  OD.\n\nDefinition test := callcc (fun k => foo k) id.\nEval cbv in test.                           (* 2 *)\n\n\n\n\nflatten list\n2\u6b21\u5143\u30ea\u30b9\u30c8\u30921\u6b21\u5143\u306b\u3059\u308b\u3002\u305f\u3060\u3057\u3001\u7a7a\u30ea\u30b9\u30c8\u304c\u3042\u3063\u305f\u3089\u7a7a\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\uff08\u6587\u732e2.\uff09\u3002\n\n\u30e2\u30ca\u30c9\u3092\u4f7f\u308f\u306a\u3044\u5b9a\u7fa9\n\nFixpoint flatten_cps (l : seq (seq nat)) : MCont (seq nat) (seq nat) :=\n  fun cont =>\n    match l with\n      | [::]      => cont [::]\n      | [::] :: _ => [::]                   (* !! *)\n      | x :: xs   => flatten_cps xs (fun y => cont (x ++ y))\n    end.\n\nEval cbv in flatten_cps [:: [:: 1;2];[:: 3;4];[:: 5;6]] id.\nEval cbv in flatten_cps [:: [:: 1;2];[:: 3;4];[::];[:: 5;6]] id. (* [::] *)\nEval cbv in flatten_cps [:: [:: 1;2];[::];[:: 3;4];[:: 5;6]] id. (* [::] *)\n\n\n\n\n\u30e2\u30ca\u30c9\u3092\u4f7f\u3046\u5b9a\u7fa9\n\nFixpoint flatten' (k : seq nat -> MCont (seq nat) (seq nat))\n         (l : seq (seq nat)) : MCont (seq nat) (seq nat) :=\n  match l with\n    | [::]      => ret [::]\n    | [::] :: _ => k [::]                   (* !! *)\n    | x :: xs   => flatten' k xs >>= fun y => ret (x ++ y)\n  end.\n\nDefinition flatten_callcc (l : seq (seq nat)) : MCont (seq nat) (seq nat) :=\n  callcc (fun (k : seq nat -> MCont (seq nat) (seq nat)) => flatten' k l).\n\nEval cbv in flatten_callcc [:: [:: 1;2];[:: 3;4];[:: 5;6]] id.\nEval cbv in flatten_callcc [:: [:: 1;2];[:: 3;4];[::];[:: 5;6]] id. (* [::] *)\nEval cbv in flatten_callcc [:: [:: 1;2];[::];[:: 3;4];[:: 5;6]] id. (* [::] *)\n\n\n\n\u4ee5\u4e0a\u3001\u300cCoq\u3067\u300d\u3068\u3044\u3044\u306a\u304c\u3089\u8a3c\u660e\u306f\u3042\u308a\u307e\u305b\u3093\u3002call/cc\u3092\u4f7f\u3063\u3066\u53e4\u5178\u8ad6\u7406\u306e\u5b9a\u7406\u3092\u8a3c\u660e\u3059\u308b\u8a71\u984c\u306f\u3001\u6587\u732e4.\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u6587\u732e\n\nCoq\u3067\u7d99\u7d9a\u30e2\u30ca\u30c9\nhttp://qiita.com/suharahiromichi/items/f07f932103c28f36dd0e\n\u304a\u6c17\u697d Haskell \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580 \u25cf\u7d99\u7d9a\u6e21\u3057\u30b9\u30bf\u30a4\u30eb\nhttp://www.geocities.jp/m_hiroi/func/haskell38.html\n\u30e2\u30ca\u30c9\u306e\u3059\u3079\u3066 Continuation\u30e2\u30ca\u30c9\nhttp://www.sampou.org/haskell/a-a-monads/html/contmonad.html\nProlog\u306b\u3088\u308bSystem F\u306e\u578b\u4ed8\u30d7\u30ed\u30b0\u30e9\u30e0\nhttp://qiita.com/suharahiromichi/items/9adc16a40ecb1bc36825\n\n\nCoq\u3067call/cc\uff08Coq\u3067\u7d99\u7d9a\u30e2\u30ca\u30c9\u3001\u305d\u306e2\uff09\n===============================\n2014_05_17 @suharahiromichi\n\n2014_05_18 @suharahiromichi \u300c\u8a3c\u660e\u300d\u306e\u90e8\u5206\u3092\u898b\u76f4\u3057\u305f\n\n\u7d99\u7d9a\u30e2\u30ca\u30c9\u306e\u7d9a\u304d\u3068\u3057\u3066\u3001\u524d\u56de\uff08\u6587\u732e1.\uff09\u306b\u3082\u5b9a\u7fa9\u3057\u3066\u3042\u3063\u305fcall/cc\u3092\u4f7f\u3063\u3066\u307f\u308b\u3002\u4f8b\u984c\u306f\u4eca\u56de\u3082\u6587\u732e2.\u304b\u3089\u3044\u305f\u3060\u3044\u3066\u3044\u307e\u3059\u3002\n\u672c\u8cc7\u6599\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/suharahiromichi/coq/blob/master/ssr/ssr_monad_callcc.v\n\n\n\n```coq:\n\nRequire Import ssreflect ssrbool ssrnat seq.\n\n\n```\n\n# \u7d99\u7d9a\u30e2\u30ca\u30c9\n\n## \u5b9a\u7fa9\uff08\u518d\u63b2\uff09\n\n\n```coq:\n\nDefinition MCont R A := (A -> R) -> R.\n\nDefinition bind {R A : Type} (c : MCont R A)\n           (f : A -> MCont R A) : MCont R A :=\n  fun (k : A -> R) => c (fun (a : A) => f a k).\n\nDefinition ret {R A : Type} (a : A) : MCont R A :=\n  fun k => k a.\n\n\n(* call/cc\u3001\u6587\u732e3\u306e\u5b9a\u7fa9\u3092\u53c2\u8003\u306b\u3057\u305f\u3002 *)\nDefinition callcc {R A B : Type}\n           (f : (A -> MCont R B) -> MCont R A) : MCont R A :=\n  fun (k : A -> R) => f (fun (a : A) => fun (b : B -> R) => k a) k.\nCheck callcc.\n\n\n```\n\n    : ((A -> MCont R B) -> MCont R A) -> MCont R A\n\u3059\u3053\u3057\u5f37\u5f15\u3060\u304c\u3001call/cc\u306e\u578b\u306f\u3001\u300cMCont R\u300d\u306e\u90e8\u5206\u3092\u9664\u3044\u3066\u898b\u308b\u3068\u3001\u53e4\u5178\u8ad6\u7406\u3092\u6271\u3046\u3068\u304d\u306e\u300c\u30d1\u30fc\u30b9\u306e\u516c\u7406\u300d\u306b\u5bfe\u5fdc\u3059\u308b\u3068\u3044\u3048\u308b\u3002\n\n    ((P -> Q) -> P) -> P\n\n\u6f14\u7b97\u5b50\u3068\u3001do\u8a18\u6cd5\u3082\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3002\n\n\n```coq:\n\nNotation \"c >>= f\" :=\n  (bind c f)\n    (at level 42, left associativity).\n\nNotation \"s1 >> s2\" :=\n  (s1 >>= fun _ => s2)\n    (at level 42, left associativity).\n\nNotation \"'DO' a <- A ; b <- B ; C 'OD'\" :=\n  (A >>= fun a => B >>= fun b => C)\n    (at level 100, no associativity).\n\nNotation \"'DO' A ; B ; C 'OD'\" :=\n  (A >> B >> C)\n    (at level 100, no associativity).\n\n\n```\n\n# \u4f8b\u984c\n\n## \u5927\u57df\u8131\u51fa\u306e\u4f8b\uff08\u6587\u732e2.\uff09\n\n\n```coq:\n\nDefinition bar1 (cont : nat -> MCont nat nat) := ret 1 : MCont nat nat.\nDefinition bar2 (cont : nat -> MCont nat nat) := cont 2 : MCont nat nat.\nDefinition bar3 (cont : nat -> MCont nat nat) := ret 3 : MCont nat nat.\n\nDefinition foo (cont : nat -> MCont nat nat) :=\n  DO\n    bar1 cont;\n    bar2 cont;                              (* !! *)\n    bar3 cont\n  OD.\n\nDefinition test := callcc (fun k => foo k) id.\nEval cbv in test.                           (* 2 *)\n\n\n```\n\n## flatten list\n\n2\u6b21\u5143\u30ea\u30b9\u30c8\u30921\u6b21\u5143\u306b\u3059\u308b\u3002\u305f\u3060\u3057\u3001\u7a7a\u30ea\u30b9\u30c8\u304c\u3042\u3063\u305f\u3089\u7a7a\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\uff08\u6587\u732e2.\uff09\u3002\n\n\n### \u30e2\u30ca\u30c9\u3092\u4f7f\u308f\u306a\u3044\u5b9a\u7fa9\n\n\n```coq:\n\nFixpoint flatten_cps (l : seq (seq nat)) : MCont (seq nat) (seq nat) :=\n  fun cont =>\n    match l with\n      | [::]      => cont [::]\n      | [::] :: _ => [::]                   (* !! *)\n      | x :: xs   => flatten_cps xs (fun y => cont (x ++ y))\n    end.\n\nEval cbv in flatten_cps [:: [:: 1;2];[:: 3;4];[:: 5;6]] id.\nEval cbv in flatten_cps [:: [:: 1;2];[:: 3;4];[::];[:: 5;6]] id. (* [::] *)\nEval cbv in flatten_cps [:: [:: 1;2];[::];[:: 3;4];[:: 5;6]] id. (* [::] *)\n\n\n```\n\n### \u30e2\u30ca\u30c9\u3092\u4f7f\u3046\u5b9a\u7fa9\n\n\n```coq:\n\nFixpoint flatten' (k : seq nat -> MCont (seq nat) (seq nat))\n         (l : seq (seq nat)) : MCont (seq nat) (seq nat) :=\n  match l with\n    | [::]      => ret [::]\n    | [::] :: _ => k [::]                   (* !! *)\n    | x :: xs   => flatten' k xs >>= fun y => ret (x ++ y)\n  end.\n\nDefinition flatten_callcc (l : seq (seq nat)) : MCont (seq nat) (seq nat) :=\n  callcc (fun (k : seq nat -> MCont (seq nat) (seq nat)) => flatten' k l).\n\nEval cbv in flatten_callcc [:: [:: 1;2];[:: 3;4];[:: 5;6]] id.\nEval cbv in flatten_callcc [:: [:: 1;2];[:: 3;4];[::];[:: 5;6]] id. (* [::] *)\nEval cbv in flatten_callcc [:: [:: 1;2];[::];[:: 3;4];[:: 5;6]] id. (* [::] *)\n\n\n```\n\n\u4ee5\u4e0a\u3001\u300cCoq\u3067\u300d\u3068\u3044\u3044\u306a\u304c\u3089\u8a3c\u660e\u306f\u3042\u308a\u307e\u305b\u3093\u3002call/cc\u3092\u4f7f\u3063\u3066\u53e4\u5178\u8ad6\u7406\u306e\u5b9a\u7406\u3092\u8a3c\u660e\u3059\u308b\u8a71\u984c\u306f\u3001\u6587\u732e4.\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n# \u6587\u732e\n\n1. Coq\u3067\u7d99\u7d9a\u30e2\u30ca\u30c9\n   http://qiita.com/suharahiromichi/items/f07f932103c28f36dd0e\n\n2. \u304a\u6c17\u697d Haskell \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580 \u25cf\u7d99\u7d9a\u6e21\u3057\u30b9\u30bf\u30a4\u30eb\n   http://www.geocities.jp/m_hiroi/func/haskell38.html\n\n3. \u30e2\u30ca\u30c9\u306e\u3059\u3079\u3066 Continuation\u30e2\u30ca\u30c9\n   http://www.sampou.org/haskell/a-a-monads/html/contmonad.html\n\n4. Prolog\u306b\u3088\u308bSystem F\u306e\u578b\u4ed8\u30d7\u30ed\u30b0\u30e9\u30e0\n   http://qiita.com/suharahiromichi/items/9adc16a40ecb1bc36825\n\n```\n", "tags": ["Coq", "ssreflect", "\u7d99\u7d9a", "\u30e2\u30ca\u30c9"]}