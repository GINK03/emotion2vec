{"context": " More than 1 year has passed since last update.\n\nnumpy & scipy \u5099\u5fd8\u9332\n\n\u6982\u8981\n\n\u30e1\u30e2\u7a0b\u5ea6\u3067\u3059\u304c\uff0c\u7c21\u5358\u306b\u307e\u3068\u3081\u3066\u3044\u304d\u307e\u3059\n\u968f\u6642\u66f4\u65b0\u3057\u3066\u3044\u304d\u307e\u3059(\u305f\u3076\u3093)\n\n\nnumpy \u5099\u5fd8\u9332\n\n\u81ea\u5df1\u5171\u5206\u6563\u884c\u5217\n>>> x = np.array([[0, 2], [1, 1], [2, 0]]).T\n>>> y = np.cov(x)\n>>> y\narray([[ 1., -1.],\n       [-1.,  1.]])\n>>> y = np.cov(x,rowvar = 0)\n>>> y\narray([[ 2.,  0., -2.],\n       [ 0.,  0.,  0.],\n       [-2.,  0.,  2.]])\n\n\n\u5e73\u5747\n>>> a = np.array([[1, 2], [3, 4]])\n>>> np.mean(a)\n2.5\n>>> np.mean(a, axis=0)\narray([ 2.,  3.])\n>>> np.mean(a, axis=1)\narray([ 1.5,  3.5])\n\n\n\u884c\u5217\u306e\u56fa\u6709\u5024\u56fa\u6709\u30d9\u30af\u30c8\u30eb\neigVals,eigVecs = np.linalg.eig(np.mat(Mat))\n\n\n\u884c\u5217\u306e\u9023\u7d50\n>>> a = np.array([[1, 2], [3, 4]])\n>>> b = np.array([[5, 6]])\n>>> np.concatenate((a, b), axis=0)\narray([[1, 2],\n       [3, 4],\n       [5, 6]])\n>>> np.concatenate((a, b.T), axis=1)\narray([[1, 2, 5],\n       [3, 4, 6]])\n\n\n\u884c\u5217\u306e\u6b21\u5143\u5909\u63db\n>>> x = np.arange(4).reshape((2,2))\n>>> x\narray([[0, 1],\n       [2, 3]])\n\n>>> np.transpose(x)\narray([[0, 2],\n       [1, 3]])\n\n>>> x = np.ones((1, 2, 3))\n>>> np.transpose(x, (1, 0, 2)).shape\n(2, 1, 3)\n\n\n\u30b5\u30a4\u30ba1\u306e\u6b21\u5143\u306e\u524a\u9664\n>>> x = np.array([[[0], [1], [2]]])\n>>> x.shape\n(1, 3, 1)\n>>> np.squeeze(x).shape\n(3,)\n>>> np.squeeze(x, axis=(2,)).shape\n(1, 3)\n\n\n\u30af\u30ed\u30cd\u30c3\u30ab\u30fc\u7a4d\n>>> np.kron([1,10,100], [5,6,7])\narray([  5,   6,   7,  50,  60,  70, 500, 600, 700])\n>>> np.kron([5,6,7], [1,10,100])\narray([  5,  50, 500,   6,  60, 600,   7,  70, 700])\n\n\n\u5358\u4f4d\u884c\u5217\u4f5c\u6210(identity\u306f\u6b63\u65b9\u884c\u5217\uff0ceye\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u8272\u3005\u6307\u5b9a\u3067\u304d\u308b)\n>>> np.identity(3)\narray([[ 1.,  0.,  0.],\n       [ 0.,  1.,  0.],\n       [ 0.,  0.,  1.]])\n\n>>> np.eye(2, dtype=int)\narray([[1, 0],\n       [0, 1]])\n>>> np.eye(3, k=1)\narray([[ 0.,  1.,  0.],\n       [ 0.,  0.,  1.],\n       [ 0.,  0.,  0.]])\n>>> np.eye(3, 2)\narray([[ 1.,  0.],\n       [ 0.,  1.],\n       [ 0.,  0.]])\n\n\n\u91cd\u8907\u3059\u308b\u3082\u306e\u3092\u9664\u304f\n\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8fd4\u3059\n>>> a = np.array(['a', 'b', 'b', 'c', 'a'])\n>>> u, indices = np.unique(a, return_index=True)\n>>> u\narray(['a', 'b', 'c'],\n       dtype='|S1')\n>>> indices\narray([0, 1, 3])\n>>> a[indices]\narray(['a', 'b', 'c'],\n       dtype='|S1')\n\n\n\u518d\u69cb\u6210\u7528\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8fd4\u3059\n>>> a = np.array([1, 2, 6, 4, 2, 3, 2])\n>>> u, indices = np.unique(a, return_inverse=True)\n>>> u\narray([1, 2, 3, 4, 6])\n>>> indices\narray([0, 1, 4, 3, 1, 2, 1])\n>>> u[indices]\narray([1, 2, 6, 4, 2, 3, 2])\n\n\narray\u3092\u3042\u308b\u7bc4\u56f2\u306b\u6307\u5b9a\u3059\u308b\n>>> a = np.arrange(1,2,3,4,5)\n>>> np.clip(a,a_min=2,a_max=4)\narray([2,2,3,4,4])\n\n\nscipy \u5099\u5fd8\u9332\n\n\u7279\u7570\u5024\u5206\u89e3\nfull_matrices=True:U,V\u6b63\u65b9\u884c\u5217\uff0cFalse:s\u6b63\u65b9\u884c\u5217\n>>> U,s,V = scipy.linalg.svd(A, full_matrices=False, check_finite=False)\n\n# numpy & scipy \u5099\u5fd8\u9332\n\n## \u6982\u8981\n\n- \u30e1\u30e2\u7a0b\u5ea6\u3067\u3059\u304c\uff0c\u7c21\u5358\u306b\u307e\u3068\u3081\u3066\u3044\u304d\u307e\u3059\n- \u968f\u6642\u66f4\u65b0\u3057\u3066\u3044\u304d\u307e\u3059(\u305f\u3076\u3093)\n\n## numpy \u5099\u5fd8\u9332\n#### \u81ea\u5df1\u5171\u5206\u6563\u884c\u5217\n\n```\n>>> x = np.array([[0, 2], [1, 1], [2, 0]]).T\n>>> y = np.cov(x)\n>>> y\narray([[ 1., -1.],\n       [-1.,  1.]])\n>>> y = np.cov(x,rowvar = 0)\n>>> y\narray([[ 2.,  0., -2.],\n       [ 0.,  0.,  0.],\n       [-2.,  0.,  2.]])\n```\n\n#### \u5e73\u5747\n```\n>>> a = np.array([[1, 2], [3, 4]])\n>>> np.mean(a)\n2.5\n>>> np.mean(a, axis=0)\narray([ 2.,  3.])\n>>> np.mean(a, axis=1)\narray([ 1.5,  3.5])\n```\n\n#### \u884c\u5217\u306e\u56fa\u6709\u5024\u56fa\u6709\u30d9\u30af\u30c8\u30eb\n```\neigVals,eigVecs = np.linalg.eig(np.mat(Mat))\n```\n\n#### \u884c\u5217\u306e\u9023\u7d50\n```\n>>> a = np.array([[1, 2], [3, 4]])\n>>> b = np.array([[5, 6]])\n>>> np.concatenate((a, b), axis=0)\narray([[1, 2],\n       [3, 4],\n       [5, 6]])\n>>> np.concatenate((a, b.T), axis=1)\narray([[1, 2, 5],\n       [3, 4, 6]])\n```\n#### \u884c\u5217\u306e\u6b21\u5143\u5909\u63db\n```\n>>> x = np.arange(4).reshape((2,2))\n>>> x\narray([[0, 1],\n       [2, 3]])\n```\n```\n>>> np.transpose(x)\narray([[0, 2],\n       [1, 3]])\n```\n```\n>>> x = np.ones((1, 2, 3))\n>>> np.transpose(x, (1, 0, 2)).shape\n(2, 1, 3)\n```\n\n#### \u30b5\u30a4\u30ba1\u306e\u6b21\u5143\u306e\u524a\u9664\n```\n>>> x = np.array([[[0], [1], [2]]])\n>>> x.shape\n(1, 3, 1)\n>>> np.squeeze(x).shape\n(3,)\n>>> np.squeeze(x, axis=(2,)).shape\n(1, 3)\n```\n\n#### \u30af\u30ed\u30cd\u30c3\u30ab\u30fc\u7a4d\n```\n>>> np.kron([1,10,100], [5,6,7])\narray([  5,   6,   7,  50,  60,  70, 500, 600, 700])\n>>> np.kron([5,6,7], [1,10,100])\narray([  5,  50, 500,   6,  60, 600,   7,  70, 700])\n```\n\n#### \u5358\u4f4d\u884c\u5217\u4f5c\u6210(identity\u306f\u6b63\u65b9\u884c\u5217\uff0ceye\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u8272\u3005\u6307\u5b9a\u3067\u304d\u308b)\n```\n>>> np.identity(3)\narray([[ 1.,  0.,  0.],\n       [ 0.,  1.,  0.],\n       [ 0.,  0.,  1.]])\n```\n```\n>>> np.eye(2, dtype=int)\narray([[1, 0],\n       [0, 1]])\n>>> np.eye(3, k=1)\narray([[ 0.,  1.,  0.],\n       [ 0.,  0.,  1.],\n       [ 0.,  0.,  0.]])\n>>> np.eye(3, 2)\narray([[ 1.,  0.],\n       [ 0.,  1.],\n       [ 0.,  0.]])\n```\n\n#### \u91cd\u8907\u3059\u308b\u3082\u306e\u3092\u9664\u304f\n##### \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8fd4\u3059\n```\n>>> a = np.array(['a', 'b', 'b', 'c', 'a'])\n>>> u, indices = np.unique(a, return_index=True)\n>>> u\narray(['a', 'b', 'c'],\n       dtype='|S1')\n>>> indices\narray([0, 1, 3])\n>>> a[indices]\narray(['a', 'b', 'c'],\n       dtype='|S1')\n```\n##### \u518d\u69cb\u6210\u7528\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8fd4\u3059\n```\n>>> a = np.array([1, 2, 6, 4, 2, 3, 2])\n>>> u, indices = np.unique(a, return_inverse=True)\n>>> u\narray([1, 2, 3, 4, 6])\n>>> indices\narray([0, 1, 4, 3, 1, 2, 1])\n>>> u[indices]\narray([1, 2, 6, 4, 2, 3, 2])\n```\n\n##### array\u3092\u3042\u308b\u7bc4\u56f2\u306b\u6307\u5b9a\u3059\u308b\n```\n>>> a = np.arrange(1,2,3,4,5)\n>>> np.clip(a,a_min=2,a_max=4)\narray([2,2,3,4,4])\n```\n\n## scipy \u5099\u5fd8\u9332\n \n#### \u7279\u7570\u5024\u5206\u89e3\nfull_matrices=True:U,V\u6b63\u65b9\u884c\u5217\uff0cFalse:s\u6b63\u65b9\u884c\u5217\n\n```\n>>> U,s,V = scipy.linalg.svd(A, full_matrices=False, check_finite=False)\n```\n", "tags": ["python2.7", "numpy", "scipy"]}