{"context": " More than 1 year has passed since last update.\n\nHiger-Order Functions\u3068\u306f\nreading\u3088\u308a\u3002\u7c21\u6f54\u306b\u300c\u95a2\u6570\u3092\u5f15\u6570\u3068\u3057\u3066\u53d6\u308a\u5024\u3092\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3059\u308b\u95a2\u6570\u300d\u306e\u3053\u3068\u3002\n\nOne of the things we should demand from a powerful programming language is the ability to build abstractions by assigning names to common patterns and then to work in terms of the names directly. Functions provide this ability.\n\n\nGeneralizing numbers\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u69d8\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u3042\u3063\u305f\u3068\u3059\u308b\u3002\nfrom math import sqrt, pi\n\ndef area_square(r):\n    assert r > 0, \"A length must be positive.\"\n    return r * r\n\ndef area_circle(r):\n    return r * r * pi\n\ndef area_hexagon(r):\n    return r * r * 3 * sqrt(3) / 2\n\n\u5171\u901a\u3057\u3066\u3044\u308b\u90e8\u5206\u3092area\u95a2\u6570\u3068\u3057\u3066\u6700\u521d\u306b\u4f5c\u3063\u3066\u3057\u307e\u3044\u3001\u639b\u3051\u5408\u308f\u305b\u308b\u969b\u306e\u5fae\u5999\u306a\u9055\u3044\u306fshape_constant\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u3057\u307e\u3048\u3070\u5f8c\u3005\u540c\u3058\u51e6\u7406\u3092\u3059\u308b\u969b\u306b\u95a2\u6570\u3060\u3051\u3092\u547c\u3079\u3070\u826f\u3044\u3002\nfrom math import sqrt, pi\n\ndef area(r, shape_constant):\n    assert r > 0, \"A length must be positive.\"\n    return r * r * shape_constant\n\ndef area_square(r):\n    return area(r, 1)\n\ndef area_circle(r):\n    return area(r, pi)\n\ndef area_hexagon(r):\n    return area(r, 3 * sqrt(3) / 2)\n\n\nGeneralizing over computational processes\ndef sum_naturals(n):\n    \"\"\"Sum the first N natural numbers\n\n    >>> sum_naturals(5)\n    15\n\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        total, k = total + k, k + 1\n    return total\n\ndef sum_cubes(n):\n    \"\"\"Sum the first N cubes of natural numbers.\n\n    >>> sum_cubes(5)\n    225\n    \"\"\"\n    total, k = total + pow(k, 3), k + 1\n    return total\n\n\u3068\u3044\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u3042\u3063\u305f\u3068\u3059\u308b\u3002\u6c17\u3065\u3044\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u4e0a\u306e2\u3064\u306e\u95a2\u6570\u306fk\u3068pow(k, 3)\u3092\u9664\u3044\u3066\u307b\u307c\u4f3c\u305f\u3088\u3046\u306a\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u308b\u3002\n\u3053\u308c\u3089\u306e\u95a2\u6570\u3092\u4e00\u822c\u5316\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\ndef <name>(n):\n    total, k = 0, 1\n    while k <= n:\n        total, k = total + <term>(k), k + 1\n    return total\n\n\u5177\u4f53\u7684\u306a\u624b\u9806\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\ndef identitiy(k):\n    return k\n\ndef cube(k):\n    return pow(k, 3)\n\ndef summation(n, term):\n    \"\"\"Sum the first N terms of a sequence.\n\n    >>> summation(5, cube)\n    225\n    \"\"\"\n    total, k = 0, 1:\n    while k <= n:\n        total, k = total + term(k), k + 1 \n    return total\n\ndef sum_naturals(n):\n    \"\"\"Sum the first N natural numbers.\n\n    >>> sum_naturals(5):\n    15\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        total, k = total + k, k + 1\n        return total\n\ndef sum_cubes(n):\n    \"\"\"Sum the first N cubes of natural numbers.\n\n    >>> sum_cubes(5)\n    225\n    \"\"\"\n    total, k = 0, 1 \n    while k <= n:\n        total, k = total + pow(k, 3), k + 1\n        return total\n\n\n\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\u95a2\u6570\u306e\u4e2d\u306e\u51e6\u7406\u4e00\u3064\u4e00\u3064\u3092\u5206\u89e3\u3057\u3066\u4e92\u3044\u306b\u5171\u901a\u3057\u3066\u3044\u308b\u90e8\u5206\u3068\u7570\u306a\u308b\u90e8\u5206\u3092\u5206\u3051\u308b\u3002\u5171\u901a\u3057\u3066\u3044\u308b\u90e8\u5206\u306f\u4e00\u3064\u306e\u95a2\u6570\u3068\u3057\u3066\u307e\u3068\u3081\u3001\u7570\u306a\u308b\u90e8\u5206\u306f\u5225\u9014\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\u3002\u5177\u4f53\u7684\u306a\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306f\u3001\n\n\u8907\u6570\u306e\u95a2\u6570\u540c\u58eb\u306e\u4e2d\u3067\u5171\u901a\u3057\u3066\u3044\u308b\u90e8\u5206\uff08\u540c\u3058\u51e6\u7406\uff09\u3092\u63a2\u3057\u51fa\u3057\u3001\u305d\u306e\u51e6\u7406\u3060\u3051\u3092\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\u3092\u4f5c\u308b\u3002\u3053\u3053\u3067\u3044\u3046summation\u95a2\u6570\u304c\u305d\u308c\u306b\u3042\u305f\u308b\u3002\n\u7570\u306a\u308b\u90e8\u5206\uff08\u3053\u3053\u3067\u3044\u3046total + k\u3068total + power(k, 3)\uff09\u306b\u3064\u3044\u3066\u3082\u5225\u9014\u95a2\u6570\u3068\u3057\u3066\u4f5c\u3063\u3066\u304a\u3051\u3070\u5f8c\u3067\u305d\u306e\u95a2\u6570\u3092\u5f15\u6570\u3068\u3057\u3066\u4f7f\u3063\u3066summation\u95a2\u6570\u5185\u3067\u307e\u3068\u3081\u3066\u51e6\u7406\u304c\u51fa\u6765\u3066\u3057\u307e\u3046\u308f\u3051\u3060\u3002\n\n\u8a00\u8449\u3067\u8aac\u660e\u3057\u3066\u3082\u308f\u304b\u308a\u3065\u3089\u3044\u306e\u3067\u5177\u4f53\u4f8b\uff1a\ndef identitiy(k):\n    return k\n\ndef cube(w):\n    return pow(w, 3)\n\ndef summation(n, term):\n    \"\"\"Sum the first N terms of a sequence.\n\n    >>> summation(5, cube)\n    225\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n        total, k = total + term(k), k + 1 \n    print(total)\n\ndef sum_naturals(n):\n    \"\"\"Sum the first N natural numbers.\n\n    >>> sum_naturals(5):\n    15\n    \"\"\"\n    return summation(n, cube)\n\ndef sum_cubes(n):\n    \"\"\"Sum the first N cubes of natural numbers.\n\n    >>> sum_cubes(5)\n    225\n    \"\"\"\n    return summation(n, cube)\n\nsum_cubes(5)\n\n\n\n\u8ffd\u8a18:\n\u3053\u306e\u30ea\u30f3\u30af\u3044\u3044\u611f\u3058\u306e\u89e3\u8aac\u3092\u898b\u3064\u3051\u305f\u3002\ndef outside():\n    x = 5\n    def printHam():\n        print(x)\n    return (printHam)\n\nmyFunc = outside()\nmyFunc()\n\n\nsorted\u3092\u4f7f\u3063\u3066higher order function\nsorted([5,-2,-1], key=abs) #[-1,-2,5]\u304c\u4e00\u756a\u5206\u304b\u308a\u3084\u3059\u3044\u4f8b\u304b\u3082\u3057\u308c\u306a\u3044\u3002built-in function\u3067\u3042\u308babs\u3092\u4f7f\u3063\u3066sorted()\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u306e\u6570\u5b57\u3092\u7d76\u5bfe\u5024\u3068\u3057\u3066\u6271\u3044\u3001sorted()\u3067\u4f4e\u3044\u9806\u306b\u5909\u3048\u3001\u5143\u306e\u8a18\u53f7\u3092\u4ed8\u3051\u3066\u8fd4\u3059\u3068\u3044\u3046\u95a2\u6570\u3002\u3053\u308c\u306f\u53b3\u5bc6\u306b\u306fkey\u95a2\u6570\u3068\u3044\u3046\u540d\u3067built-in\u95a2\u6570\u3067\u3042\u308babs\u3092\u5f15\u6570\u3068\u3057\u3066\u6271\u3063\u3066\u3044\u308b\u306e\u3067\u3053\u308c\u3082Higer Order Function\u306e\u4e00\u90e8\u3068\u3044\u3048\u308b\u3002\n\nits a function your gonna call to sort it along with the list of the stuff to be sorted And sorted() is in charge of looping through the list and calling your function to get the values to sort by.\n\n\n#Higer-Order Functions\u3068\u306f\n[reading](http://composingprograms.com/pages/16-higher-order-functions.html)\u3088\u308a\u3002\u7c21\u6f54\u306b\u300c\u95a2\u6570\u3092\u5f15\u6570\u3068\u3057\u3066\u53d6\u308a\u5024\u3092\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3059\u308b\u95a2\u6570\u300d\u306e\u3053\u3068\u3002\n\n>\n*One of the things we should demand from a powerful programming language is the ability to build abstractions by assigning names to common patterns and then to work in terms of the names directly. Functions provide this ability.*\n\n##Generalizing numbers\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u69d8\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u3042\u3063\u305f\u3068\u3059\u308b\u3002\n\n```\nfrom math import sqrt, pi\n\ndef area_square(r):\n\tassert r > 0, \"A length must be positive.\"\n\treturn r * r\n\ndef area_circle(r):\n\treturn r * r * pi\n\ndef area_hexagon(r):\n\treturn r * r * 3 * sqrt(3) / 2\n``` \n\n\u5171\u901a\u3057\u3066\u3044\u308b\u90e8\u5206\u3092`area`\u95a2\u6570\u3068\u3057\u3066\u6700\u521d\u306b\u4f5c\u3063\u3066\u3057\u307e\u3044\u3001\u639b\u3051\u5408\u308f\u305b\u308b\u969b\u306e\u5fae\u5999\u306a\u9055\u3044\u306f`shape_constant`\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u3057\u307e\u3048\u3070\u5f8c\u3005\u540c\u3058\u51e6\u7406\u3092\u3059\u308b\u969b\u306b\u95a2\u6570\u3060\u3051\u3092\u547c\u3079\u3070\u826f\u3044\u3002\n\n```\nfrom math import sqrt, pi\n\ndef area(r, shape_constant):\n\tassert r > 0, \"A length must be positive.\"\n\treturn r * r * shape_constant\n\ndef area_square(r):\n\treturn area(r, 1)\n\ndef area_circle(r):\n\treturn area(r, pi)\n\ndef area_hexagon(r):\n\treturn area(r, 3 * sqrt(3) / 2)\n```\n##Generalizing over computational processes\n\n```\ndef sum_naturals(n):\n\t\"\"\"Sum the first N natural numbers\n\n\t>>> sum_naturals(5)\n\t15\n\t\n\t\"\"\"\n\ttotal, k = 0, 1\n\twhile k <= n:\n\t\ttotal, k = total + k, k + 1\n\treturn total\n\ndef sum_cubes(n):\n\t\"\"\"Sum the first N cubes of natural numbers.\n\n\t>>> sum_cubes(5)\n\t225\n\t\"\"\"\n\ttotal, k = total + pow(k, 3), k + 1\n\treturn total\n```\n\n\u3068\u3044\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u3042\u3063\u305f\u3068\u3059\u308b\u3002\u6c17\u3065\u3044\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u4e0a\u306e2\u3064\u306e\u95a2\u6570\u306f`k`\u3068`pow(k, 3)`\u3092\u9664\u3044\u3066\u307b\u307c\u4f3c\u305f\u3088\u3046\u306a\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u308b\u3002\n\n\u3053\u308c\u3089\u306e\u95a2\u6570\u3092\u4e00\u822c\u5316\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n```\ndef <name>(n):\n    total, k = 0, 1\n    while k <= n:\n        total, k = total + <term>(k), k + 1\n    return total\n```\n\n\u5177\u4f53\u7684\u306a\u624b\u9806\u306f<a href=\"http://www.pythontutor.com/visualize.html#code=def+summation(n,+term%29%3A%0A%09total,+k+%3D+0,+1%0A%09while+k+%3C%3D+n%3A%0A%09%09total,+k+%3D+total+%2B+term(k%29,+k+%2B+1+%0A%09return+total%0A%0Adef+cube(w%29%3A%0A%09return+pow(w,+3%29%0A%0Adef+sum_cubes(n%29%3A%0A%09return+summation(n,+cube%29%0A%0Aresult+%3D+sum_cubes(5%29&mode=display&origin=opt-frontend.js&cumulative=false&heapPrimitives=false&textReferences=false&py=3&rawInputLstJSON=%5B%5D&curInstr=0\" target=\"_blank\">\u3053\u3061\u3089</a>\u3092\u53c2\u8003\u306b\n\n```\ndef identitiy(k):\n\treturn k\n\ndef cube(k):\n\treturn pow(k, 3)\n\ndef summation(n, term):\n\t\"\"\"Sum the first N terms of a sequence.\n\n\t>>> summation(5, cube)\n\t225\n\t\"\"\"\n\ttotal, k = 0, 1:\n\twhile k <= n:\n\t\ttotal, k = total + term(k), k + 1 \n\treturn total\n\ndef sum_naturals(n):\n\t\"\"\"Sum the first N natural numbers.\n\n\t>>> sum_naturals(5):\n\t15\n\t\"\"\"\n\ttotal, k = 0, 1\n\twhile k <= n:\n\t\ttotal, k = total + k, k + 1\n\t\treturn total\n\ndef sum_cubes(n):\n\t\"\"\"Sum the first N cubes of natural numbers.\n\n\t>>> sum_cubes(5)\n\t225\n\t\"\"\"\n\ttotal, k = 0, 1 \n\twhile k <= n:\n\t\ttotal, k = total + pow(k, 3), k + 1\n\t\treturn total\n\n```\n\n\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\u95a2\u6570\u306e\u4e2d\u306e\u51e6\u7406\u4e00\u3064\u4e00\u3064\u3092\u5206\u89e3\u3057\u3066\u4e92\u3044\u306b\u5171\u901a\u3057\u3066\u3044\u308b\u90e8\u5206\u3068\u7570\u306a\u308b\u90e8\u5206\u3092\u5206\u3051\u308b\u3002\u5171\u901a\u3057\u3066\u3044\u308b\u90e8\u5206\u306f\u4e00\u3064\u306e\u95a2\u6570\u3068\u3057\u3066\u307e\u3068\u3081\u3001\u7570\u306a\u308b\u90e8\u5206\u306f\u5225\u9014\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\u3002\u5177\u4f53\u7684\u306a\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306f\u3001\n\n1. \u8907\u6570\u306e\u95a2\u6570\u540c\u58eb\u306e\u4e2d\u3067\u5171\u901a\u3057\u3066\u3044\u308b\u90e8\u5206\uff08\u540c\u3058\u51e6\u7406\uff09\u3092\u63a2\u3057\u51fa\u3057\u3001\u305d\u306e\u51e6\u7406\u3060\u3051\u3092\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\u3092\u4f5c\u308b\u3002\u3053\u3053\u3067\u3044\u3046`summation`\u95a2\u6570\u304c\u305d\u308c\u306b\u3042\u305f\u308b\u3002\n2. \u7570\u306a\u308b\u90e8\u5206\uff08\u3053\u3053\u3067\u3044\u3046`total + k`\u3068`total + power(k, 3)`\uff09\u306b\u3064\u3044\u3066\u3082\u5225\u9014\u95a2\u6570\u3068\u3057\u3066\u4f5c\u3063\u3066\u304a\u3051\u3070\u5f8c\u3067\u305d\u306e\u95a2\u6570\u3092\u5f15\u6570\u3068\u3057\u3066\u4f7f\u3063\u3066`summation`\u95a2\u6570\u5185\u3067\u307e\u3068\u3081\u3066\u51e6\u7406\u304c\u51fa\u6765\u3066\u3057\u307e\u3046\u308f\u3051\u3060\u3002\n\n\u8a00\u8449\u3067\u8aac\u660e\u3057\u3066\u3082\u308f\u304b\u308a\u3065\u3089\u3044\u306e\u3067\u5177\u4f53\u4f8b\uff1a\n\n```\ndef identitiy(k):\n\treturn k\n\ndef cube(w):\n\treturn pow(w, 3)\n\ndef summation(n, term):\n\t\"\"\"Sum the first N terms of a sequence.\n\n\t>>> summation(5, cube)\n\t225\n\t\"\"\"\n\ttotal, k = 0, 1\n\twhile k <= n:\n\t\ttotal, k = total + term(k), k + 1 \n\tprint(total)\n\ndef sum_naturals(n):\n\t\"\"\"Sum the first N natural numbers.\n\n\t>>> sum_naturals(5):\n\t15\n\t\"\"\"\n\treturn summation(n, cube)\n\ndef sum_cubes(n):\n\t\"\"\"Sum the first N cubes of natural numbers.\n\n\t>>> sum_cubes(5)\n\t225\n\t\"\"\"\n\treturn summation(n, cube)\n\nsum_cubes(5)\n\n```\n\n#\u8ffd\u8a18:\n\n<a href=\"https://www.youtube.com/watch?v=fVon4QaY4wo\" target=\"_blank\">\u3053\u306e\u30ea\u30f3\u30af</a>\u3044\u3044\u611f\u3058\u306e\u89e3\u8aac\u3092\u898b\u3064\u3051\u305f\u3002\n\n```\ndef outside():\n    x = 5\n    def printHam():\n        print(x)\n    return (printHam)\n\nmyFunc = outside()\nmyFunc()\n``` \n\n#sorted\u3092\u4f7f\u3063\u3066higher order function\n\n`sorted([5,-2,-1], key=abs) #[-1,-2,5]`\u304c\u4e00\u756a\u5206\u304b\u308a\u3084\u3059\u3044\u4f8b\u304b\u3082\u3057\u308c\u306a\u3044\u3002built-in function\u3067\u3042\u308b`abs`\u3092\u4f7f\u3063\u3066sorted()\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u306e\u6570\u5b57\u3092\u7d76\u5bfe\u5024\u3068\u3057\u3066\u6271\u3044\u3001`sorted()`\u3067\u4f4e\u3044\u9806\u306b\u5909\u3048\u3001\u5143\u306e\u8a18\u53f7\u3092\u4ed8\u3051\u3066\u8fd4\u3059\u3068\u3044\u3046\u95a2\u6570\u3002\u3053\u308c\u306f\u53b3\u5bc6\u306b\u306f`key`\u95a2\u6570\u3068\u3044\u3046\u540d\u3067`built-in`\u95a2\u6570\u3067\u3042\u308b`abs`\u3092\u5f15\u6570\u3068\u3057\u3066\u6271\u3063\u3066\u3044\u308b\u306e\u3067\u3053\u308c\u3082Higer Order Function\u306e\u4e00\u90e8\u3068\u3044\u3048\u308b\u3002\n\n>_its a function your gonna call to sort it along with the list of the stuff to be sorted And sorted() is in charge of looping through the list and calling your function to get the values to sort by._\n\n \n", "tags": ["Function", "math", "generalization"]}