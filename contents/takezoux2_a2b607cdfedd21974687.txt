{"context": " More than 1 year has passed since last update.Scala\u3067DI\u3092\u884c\u3046\u65b9\u6cd5\u306f\u3044\u308d\u3044\u308d\u3042\u308a\u307e\u3059\u304c\u3001\u6700\u8fd1\u304a\u6c17\u306b\u5165\u308a\u306eDI\u306e\u3084\u308a\u304b\u305f\u306e\u7d39\u4ecb\u3067\u3059\u3002\nimplicit def\u3068\u3001implicit parameter\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u5fc5\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u53d7\u3051\u6e21\u3057\u3092\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306b\u4efb\u305b\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u5229\u70b9\n\nScala\u306e\u6a19\u6e96\u6a5f\u80fd\u306e\u307f\u3067\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u4e0d\u8981\n\u5168\u3066\u30b3\u30fc\u30c9\u3067\u8a18\u8ff0\u3067\u304d\u308b\u306e\u3067\u3001XML\u5730\u7344\u3084\u65b0\u3057\u3044DSL\u3092\u899a\u3048\u308b\u5fc5\u8981\u304c\u306a\u3044\n\u4f7f\u3044\u305f\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u4f7f\u3048\u3066\u697d\n\n\u6b20\u70b9\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fcDI\u3057\u304b\u51fa\u6765\u306a\u3044\n\n\n\u624b\u9806\n\n\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3057\u305f\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092implicit def\u3067\u5217\u6319\u3057\u305f\u30af\u30e9\u30b9(\u30c8\u30ec\u30a4\u30c8)\u3092\u4f5c\u308b\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f7f\u3046\u30af\u30e9\u30b9\u3067\u3001\u4f7f\u3044\u305f\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092implicit parameter\u3067\u5b9a\u7fa9\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f7f\u3046\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u969b\u306b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5217\u6319\u3057\u305f\u30af\u30e9\u30b9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092import\u3059\u308b\n\n\u306e\u304c\u3001\u5b9f\u88c5\u306e\u5927\u307e\u304b\u306a\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u3067\u306f\u3001\u65e9\u901f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u3002\n\n\u57fa\u672c\u90e8\u5206\n\nRepositories.scala\ntrait Repositories{\n  // DI\u3057\u305f\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092implicit def\u3067\u5217\u6319\n  implicit def userRepo : UserRepository\n  implicit def mailService : MailService\n}\n\n\n\nUserRepository.scala\n\n// DI\u3067\u6e21\u3057\u305f\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5b9a\u7fa9\ntrait UserRepository{\n  def getUser(id : Long) : Option[UserDAO]\n}\n\ncase class UserDAO(id : Long){\n  //...implements\n}\n\n\n\nUserFacade.scala\n\n// \u4f7f\u7528\u3057\u305f\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306eimplicit parameter\u306b\u6307\u5b9a\u3059\u308b\nclass UserFacade()(implicit userRepo : UserRepository){\n\n  def changeNickname(id : Long,nickname : String) : Optino[UserDAO]= {\n    userRepo.getUser(id).map(_.setAndSaveNickname(nickname))\n  }\n} \n\n\n\n\n\nFactory.scala\n\nclass Factory(repos : Repositories){\n\n  // \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5217\u6319\u3057\u305f\u30af\u30e9\u30b9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092import\u3057\u3066\u3084\u308b\n  import repos._\n\n  lazy val userFacade = new UserFacade() // \u52dd\u624b\u306b\u5fc5\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u6e21\u3055\u308c\u308b\n}\n\n\n\n\n\n\u4f7f\u3044\u65b9\n\nProduction.scala\nobject RepositoriesForProduction extends Repositories{\n  // lazy val\u306b\u3057\u3066\u304a\u304f\u3068\u3001\u4e0d\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u521d\u671f\u5316\u3055\u308c\u306a\u3044\n  lazy val userRepo = new TrueImplementedUserRepository()\n  lazy val mailService = new TrueImplmentedMailService()\n}\nval factory = new Factory(RepositoriesForProduction )\nval userFacade = factory.userFacade\nuserFacade.changeNickname(1,\"\u30af\u30c9\u30ea\u30e3\u30d5\u30ab\")\n\n\n\nTest.scala\n\nobject RepositoriesForTest extends Repositories{\n  // \u30c6\u30b9\u30c8\u7528\u306e\u5834\u5408\u306f\u3001mock\u5316\u3057\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n  lazy val userRepo = mock[UserRepository]\n  lazy val mailService = mock[MailService]\n}\n// \u521d\u671f\u5316\u306e\u65b9\u6cd5\u306f\u5909\u308f\u3089\u305a\nval factory = new Factory(RepositoriesForTest)\nval userFacade = factory.userFacade\nuserFacade.changeNickname(1,\"\u30af\u30c9\u30ea\u30e3\u30d5\u30ab\")\n\n\n\u3068\u3044\u3063\u305f\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u88dc\u8db3\n\u3042\u3068\u3001\u5148\u307b\u3069\u5229\u70b9\u3067\u6319\u3052\u305f\u300c\u4f7f\u3044\u305f\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u66f8\u304f\u3060\u3051\u3067\u3044\u3044\u300d\u3068\u3044\u3046\u4e8b\u3092\u88dc\u8db3\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u300c\u30d1\u30b9\u30ef\u30fc\u30c9\u30ea\u30bb\u30c3\u30c8\u3057\u3066\u901a\u77e5\u30e1\u30fc\u30eb\u3092\u9001\u308b\u300d\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3057\u307e\u3059\u3002\n\u305d\u306e\u5834\u5408\u3001UserFacade.scala\u3060\u3051\u3092\u6b21\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3059\u3002\n\nUserFacade.scala\n\n// \u30e1\u30fc\u30eb\u6a5f\u80fd\u3092\u4f7f\u3044\u305f\u3044\u306e\u3067MailService\u3092\u8ffd\u52a0\nclass UserFacade()(implicit userRepo : UserRepository,mailService : MailService){\n\n  def changeNickname(id : Long,nickname : String) : Optino[UserDAO]= {\n    userRepo.getUser(id).map(_.setAndSaveNickname(nickname))\n  }\n\n  def resetPassword() = {\n    userRepo.getUser(id).foreach( user => {\n      val newPassword = user.resetPassword() // resetPassword()\u306f\u5b9f\u88c5\u6e08\u307f\u3068\u3059\u308b\n      emailService.sendTo(user,\"\u30d1\u30b9\u30ef\u30fc\u30c9\u30ea\u30bb\u30c3\u30c8\",s\"\u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u306f${newPassword}\u3067\u3059\")\n    })\n  }\n} \n\n\n\n\n\u3053\u308c\u3060\u3051\u3067\u521d\u671f\u5316\u90e8\u5206\u306e\u4fee\u6b63\u306a\u3057\u306b\u3001UserFacade\u3067EmailService\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nScala\u3067DI\u3092\u884c\u3046\u65b9\u6cd5\u306f\u3044\u308d\u3044\u308d\u3042\u308a\u307e\u3059\u304c\u3001\u6700\u8fd1\u304a\u6c17\u306b\u5165\u308a\u306eDI\u306e\u3084\u308a\u304b\u305f\u306e\u7d39\u4ecb\u3067\u3059\u3002\n\nimplicit def\u3068\u3001implicit parameter\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u5fc5\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u53d7\u3051\u6e21\u3057\u3092\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306b\u4efb\u305b\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u5229\u70b9\n\n* Scala\u306e\u6a19\u6e96\u6a5f\u80fd\u306e\u307f\u3067\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u4e0d\u8981\n* \u5168\u3066\u30b3\u30fc\u30c9\u3067\u8a18\u8ff0\u3067\u304d\u308b\u306e\u3067\u3001XML\u5730\u7344\u3084\u65b0\u3057\u3044DSL\u3092\u899a\u3048\u308b\u5fc5\u8981\u304c\u306a\u3044\n* \u4f7f\u3044\u305f\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u4f7f\u3048\u3066\u697d\n\n\u6b20\u70b9\n\n* \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fcDI\u3057\u304b\u51fa\u6765\u306a\u3044\n\n## \u624b\u9806\n\n1. \u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3057\u305f\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092implicit def\u3067\u5217\u6319\u3057\u305f\u30af\u30e9\u30b9(\u30c8\u30ec\u30a4\u30c8)\u3092\u4f5c\u308b\n1. \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f7f\u3046\u30af\u30e9\u30b9\u3067\u3001\u4f7f\u3044\u305f\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092implicit parameter\u3067\u5b9a\u7fa9\n1. \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f7f\u3046\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u969b\u306b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5217\u6319\u3057\u305f\u30af\u30e9\u30b9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092import\u3059\u308b\n\n\u306e\u304c\u3001\u5b9f\u88c5\u306e\u5927\u307e\u304b\u306a\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n\u3067\u306f\u3001\u65e9\u901f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u3002\n\n### \u57fa\u672c\u90e8\u5206\n\n\n```scala:Repositories.scala\ntrait Repositories{\n  // DI\u3057\u305f\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092implicit def\u3067\u5217\u6319\n  implicit def userRepo : UserRepository\n  implicit def mailService : MailService\n}\n```\n\n```scala:UserRepository.scala\n\n// DI\u3067\u6e21\u3057\u305f\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5b9a\u7fa9\ntrait UserRepository{\n  def getUser(id : Long) : Option[UserDAO]\n}\n\ncase class UserDAO(id : Long){\n  //...implements\n}\n```\n\n```scala:UserFacade.scala\n\n// \u4f7f\u7528\u3057\u305f\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306eimplicit parameter\u306b\u6307\u5b9a\u3059\u308b\nclass UserFacade()(implicit userRepo : UserRepository){\n\n  def changeNickname(id : Long,nickname : String) : Optino[UserDAO]= {\n    userRepo.getUser(id).map(_.setAndSaveNickname(nickname))\n  }\n} \n\n\n```\n\n```scala:Factory.scala\n\nclass Factory(repos : Repositories){\n  \n  // \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5217\u6319\u3057\u305f\u30af\u30e9\u30b9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092import\u3057\u3066\u3084\u308b\n  import repos._\n\n  lazy val userFacade = new UserFacade() // \u52dd\u624b\u306b\u5fc5\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u6e21\u3055\u308c\u308b\n}\n\n\n```\n\n### \u4f7f\u3044\u65b9\n\n```scala:Production.scala\nobject RepositoriesForProduction extends Repositories{\n  // lazy val\u306b\u3057\u3066\u304a\u304f\u3068\u3001\u4e0d\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u521d\u671f\u5316\u3055\u308c\u306a\u3044\n  lazy val userRepo = new TrueImplementedUserRepository()\n  lazy val mailService = new TrueImplmentedMailService()\n}\nval factory = new Factory(RepositoriesForProduction )\nval userFacade = factory.userFacade\nuserFacade.changeNickname(1,\"\u30af\u30c9\u30ea\u30e3\u30d5\u30ab\")\n```\n\n\n```scala:Test.scala\n\nobject RepositoriesForTest extends Repositories{\n  // \u30c6\u30b9\u30c8\u7528\u306e\u5834\u5408\u306f\u3001mock\u5316\u3057\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n  lazy val userRepo = mock[UserRepository]\n  lazy val mailService = mock[MailService]\n}\n// \u521d\u671f\u5316\u306e\u65b9\u6cd5\u306f\u5909\u308f\u3089\u305a\nval factory = new Factory(RepositoriesForTest)\nval userFacade = factory.userFacade\nuserFacade.changeNickname(1,\"\u30af\u30c9\u30ea\u30e3\u30d5\u30ab\")\n```\n\n\n\u3068\u3044\u3063\u305f\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u88dc\u8db3\n\n\u3042\u3068\u3001\u5148\u307b\u3069\u5229\u70b9\u3067\u6319\u3052\u305f\u300c\u4f7f\u3044\u305f\u3044\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u66f8\u304f\u3060\u3051\u3067\u3044\u3044\u300d\u3068\u3044\u3046\u4e8b\u3092\u88dc\u8db3\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u300c\u30d1\u30b9\u30ef\u30fc\u30c9\u30ea\u30bb\u30c3\u30c8\u3057\u3066\u901a\u77e5\u30e1\u30fc\u30eb\u3092\u9001\u308b\u300d\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3057\u307e\u3059\u3002\n\u305d\u306e\u5834\u5408\u3001UserFacade.scala\u3060\u3051\u3092\u6b21\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n```scala:UserFacade.scala\n\n// \u30e1\u30fc\u30eb\u6a5f\u80fd\u3092\u4f7f\u3044\u305f\u3044\u306e\u3067MailService\u3092\u8ffd\u52a0\nclass UserFacade()(implicit userRepo : UserRepository,mailService : MailService){\n\n  def changeNickname(id : Long,nickname : String) : Optino[UserDAO]= {\n    userRepo.getUser(id).map(_.setAndSaveNickname(nickname))\n  }\n  \n  def resetPassword() = {\n    userRepo.getUser(id).foreach( user => {\n      val newPassword = user.resetPassword() // resetPassword()\u306f\u5b9f\u88c5\u6e08\u307f\u3068\u3059\u308b\n      emailService.sendTo(user,\"\u30d1\u30b9\u30ef\u30fc\u30c9\u30ea\u30bb\u30c3\u30c8\",s\"\u65b0\u3057\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u306f${newPassword}\u3067\u3059\")\n    })\n  }\n} \n\n\n```\n\n\u3053\u308c\u3060\u3051\u3067\u521d\u671f\u5316\u90e8\u5206\u306e\u4fee\u6b63\u306a\u3057\u306b\u3001UserFacade\u3067EmailService\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n", "tags": ["Scala", "DI"]}