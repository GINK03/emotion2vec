{"context": " More than 1 year has passed since last update.xcode\u3067\u958b\u767a\u3059\u308biOS\u306eUI\u90e8\u54c1\u3067\u30c6\u30ad\u30b9\u30c8\u30a8\u30ea\u30a2\u306b\u5bfe\u5fdc\u3059\u308b\u3082\u306e\u304c\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\nimport UIKit\n\npublic class UITextArea: UITextView {\n\n    var placeholder: String!\n    var placeholderColor: UIColor!\n    lazy var placeholderLabel: UILabel = UILabel()\n    var tipFontSize: CGFloat = 14\n\n    required public init(coder: NSCoder) {\n        super.init(coder: coder)\n        self.layer.borderColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.1).CGColor\n        self.layer.borderWidth = 0.8\n        self.layer.masksToBounds = true\n        self.layer.cornerRadius = 8.0\n    }\n\n    override public func awakeFromNib() {\n        super.awakeFromNib()\n        if (self.placeholder == nil) {\n            self.placeholder = \"\"\n        }\n        if (self.placeholderColor == nil) {\n            self.placeholderColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.2)\n        }\n        NSNotificationCenter.defaultCenter().addObserver(self, selector: \"textDidChanged:\", name: UITextViewTextDidChangeNotification, object: nil)\n    }\n\n    public func textDidChanged(notification: NSNotification!) {\n\n        if self.placeholder!.utf16Count == 0 {\n            return\n        }\n\n        if self.text.utf16Count == 0 {\n            self.viewWithTag(999)?.alpha = 1.0\n        } else {\n            self.viewWithTag(999)?.alpha = 0.0\n        }\n    }\n\n    func setText(text: String) {\n        super.text = text\n        self.textDidChanged(nil)\n    }\n\n    override public func drawRect(rect: CGRect) {\n        if 0 < self.placeholder!.utf16Count {\n            self.placeholderLabel.frame = CGRect(x: 8, y: 6, width: self.bounds.size.width - 16, height: 0)\n            self.placeholderLabel.text = self.placeholder\n            self.placeholderLabel.tag = 999\n            self.placeholderLabel.alpha = 0\n            self.placeholderLabel.textColor = self.placeholderColor\n            self.placeholderLabel.backgroundColor = UIColor.clearColor()\n            self.placeholderLabel.font = UIFont.systemFontOfSize(self.tipFontSize)\n            self.placeholderLabel.lineBreakMode = NSLineBreakMode.ByWordWrapping\n            self.placeholderLabel.numberOfLines = 0\n            self.addSubview(self.placeholderLabel)\n        }\n        self.placeholderLabel.sizeToFit()\n        self.sendSubviewToBack(self.placeholderLabel)\n\n        if self.text.utf16Count == 0 && 0 < self.placeholder!.utf16Count {\n            self.viewWithTag(999)?.alpha = 1.0\n        }\n\n        super.drawRect(rect)\n    }\n\n    deinit {\n        NSNotificationCenter.defaultCenter().removeObserver(self)\n    }\n}\n\nxcode\u3067\u958b\u767a\u3059\u308biOS\u306eUI\u90e8\u54c1\u3067\u30c6\u30ad\u30b9\u30c8\u30a8\u30ea\u30a2\u306b\u5bfe\u5fdc\u3059\u308b\u3082\u306e\u304c\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\n\n```\nimport UIKit\n\npublic class UITextArea: UITextView {\n\n    var placeholder: String!\n    var placeholderColor: UIColor!\n    lazy var placeholderLabel: UILabel = UILabel()\n    var tipFontSize: CGFloat = 14\n\n    required public init(coder: NSCoder) {\n        super.init(coder: coder)\n        self.layer.borderColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.1).CGColor\n        self.layer.borderWidth = 0.8\n        self.layer.masksToBounds = true\n        self.layer.cornerRadius = 8.0\n    }\n    \n    override public func awakeFromNib() {\n        super.awakeFromNib()\n        if (self.placeholder == nil) {\n            self.placeholder = \"\"\n        }\n        if (self.placeholderColor == nil) {\n            self.placeholderColor = UIColor(red: 0, green: 0, blue: 0, alpha: 0.2)\n        }\n        NSNotificationCenter.defaultCenter().addObserver(self, selector: \"textDidChanged:\", name: UITextViewTextDidChangeNotification, object: nil)\n    }\n    \n    public func textDidChanged(notification: NSNotification!) {\n        \n        if self.placeholder!.utf16Count == 0 {\n            return\n        }\n        \n        if self.text.utf16Count == 0 {\n            self.viewWithTag(999)?.alpha = 1.0\n        } else {\n            self.viewWithTag(999)?.alpha = 0.0\n        }\n    }\n    \n    func setText(text: String) {\n        super.text = text\n        self.textDidChanged(nil)\n    }\n    \n    override public func drawRect(rect: CGRect) {\n        if 0 < self.placeholder!.utf16Count {\n            self.placeholderLabel.frame = CGRect(x: 8, y: 6, width: self.bounds.size.width - 16, height: 0)\n            self.placeholderLabel.text = self.placeholder\n            self.placeholderLabel.tag = 999\n            self.placeholderLabel.alpha = 0\n            self.placeholderLabel.textColor = self.placeholderColor\n            self.placeholderLabel.backgroundColor = UIColor.clearColor()\n            self.placeholderLabel.font = UIFont.systemFontOfSize(self.tipFontSize)\n            self.placeholderLabel.lineBreakMode = NSLineBreakMode.ByWordWrapping\n            self.placeholderLabel.numberOfLines = 0\n            self.addSubview(self.placeholderLabel)\n        }\n        self.placeholderLabel.sizeToFit()\n        self.sendSubviewToBack(self.placeholderLabel)\n        \n        if self.text.utf16Count == 0 && 0 < self.placeholder!.utf16Count {\n            self.viewWithTag(999)?.alpha = 1.0\n        }\n        \n        super.drawRect(rect)\n    }\n\n    deinit {\n        NSNotificationCenter.defaultCenter().removeObserver(self)\n    }\n}\n```\n", "tags": ["Swift", "UITextView", "placeholder", "textarea"]}