{"context": " More than 1 year has passed since last update.#include <iostream>\n\nint func3(int n1, int n2, int n3) {\n    std::cout << n1 << '+' << n2 << '+' << n3 << '=' << std::flush;\n    return n1+n2+n3;\n}\nint func2(int n1, int n2) {\n    std::cout << n1 << '+' << n2 << '=' << std::flush;\n    return n1+n2;\n}\nint func1(int n1) {\n    std::cout << n1 << '=' << std::flush;\n    return n1;\n}\nint func0(void) {\n    return 0;\n}\n\nint main(void){\n    std::cout << func3(1,2,3) << std::endl;\n    std::cout << func2(1,2) << std::endl;\n    std::cout << func1(1) << std::endl;\n    std::cout << func0() << std::endl;\n    return 0;\n}\n\n\u5b9f\u884c\u3059\u308b\u3068\u3001\n1+2+3=6\n1+2=3\n1=1\n0\n\n\u3053\u3093\u306a\u611f\u3058\u3002\n\u3053\u306emain()\u95a2\u6570\u306e\u90e8\u5206\u304c\u3001\u66f8\u304f\u306e\u304c\u9762\u5012\u304f\u3055\u3044\u306e\u3067\u3001\nint main(void){\n    std::cout << stepargs(func3) << std::endl;\n    std::cout << stepargs(func2) << std::endl;\n    std::cout << stepargs(func1) << std::endl;\n    std::cout << stepargs(func0) << std::endl;\n    return 0;\n}\n\n\u3068\u3060\u3051\u66f8\u3044\u305f\u3089\u3001\u81ea\u52d5\u7684\u306b\u9023\u756a\u6574\u6570\u3092\u5f15\u6570\u3068\u3057\u3066\u95a2\u6570\u3092\u5b9f\u884c\u3057\u3066\u307b\u3057\u3044\u3001\u3068\u3044\u3046\u306e\u304c\u304a\u984c\u3002\n#include <type_traits>\n\ntemplate<int N, typename Func, typename ...Args>\nauto add_steparg(typename std::enable_if<!N, Func>::type func, Args... args) {\n    return func(args...);\n}\n\ntemplate<int N, typename Func, typename ...Args>\nauto add_steparg(typename std::enable_if<N, Func>::type func, Args... args) {\n    return add_steparg<N-1, Func>(func, N, args...);\n}\n\ntemplate<typename Ret, typename ...Args>\nRet stepargs(Ret (*func)(Args...)) {\n    return add_steparg<sizeof...(Args), decltype(func)>(func);\n}\n\n\u3053\u308c\u3092main()\u95a2\u6570\u306e\u524d\u306b\u66f8\u3044\u3066\u3084\u308c\u3070OK\u3002\n\u3053\u3053\u3067\u306f\u95a2\u6570\u547c\u3073\u51fa\u3057\u306e\u305f\u3081\u306b\u3001\u518d\u5e30\u3067\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3092\u4f38\u3070\u3057\u3066\u3044\u3063\u3066\u3044\u308b\u3002\n\u4f38\u3070\u3059\u9577\u3055\u306e\u76ee\u5370\u3068\u3057\u3066\u3001template<int N>\u306bsizeof...(Args)\u3092\u6700\u521d\u306b\u6e21\u3057\u3066\u304a\u3044\u3066\u3001\u518d\u5e30\u306e\u5ea6\u306b\u6e1b\u3089\u3057\u3066\u3001\u30bc\u30ed\u306b\u306a\u3063\u305f\u3089\u76ee\u7684\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3002\n\u3057\u304b\u3057\u53ef\u5909\u9577\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff0b\u53ef\u5909\u9577\u5f15\u6570\u3068std::enable_if\u3068\u306e\u76f8\u6027\u60aa\u3044\u30fb\u30fb\u30fb\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3084\u3001\u95a2\u6570\u5f15\u6570\u306e\u6700\u5f8c\u306b\u3001std::enable_if\u3092\u4f7f\u3063\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u4ed8\u304d\u306e\u30c0\u30df\u30fc\u306e\u5f15\u6570\u3092\u4ed8\u3051\u3089\u308c\u306a\u3044\u306e\u3067\u3001\u7121\u7406\u77e2\u7406\u3069\u3053\u304b\u306b\u62bc\u3057\u8fbc\u307e\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n#include <type_traits>\n\ntemplate<int N, typename Func, typename ...Args>\nauto add_steparg(typename std::enable_if<!N>::type*, Func func, Args... args) {\n    return func(args...);\n}\n\ntemplate<int N, typename Func, typename ...Args>\nauto add_steparg(typename std::enable_if<N>::type*, Func func, Args... args) {\n    return add_steparg<N-1>(0, func, N, args...);\n}\n\ntemplate<typename Ret, typename ...Args>\nRet stepargs(Ret (*func)(Args...)) {\n    return add_steparg<sizeof...(Args)>(0, func);\n}\n\n\u95a2\u6570\u5f15\u6570\u306e\u6700\u521d\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306a\u3057\u306e\u30c0\u30df\u30fc\u5f15\u6570\u3092\u4ed8\u3051\u305f\u65b9\u304c\u30b7\u30f3\u30d7\u30eb\u304b\u306a\u3002\n\u5f53\u7136\u547c\u3073\u51fa\u3057\u5143\u306b\u3082\u30c0\u30df\u30fc\u306e\u5f15\u6570\u3092\u4ed8\u3051\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3051\u308c\u3069\u3002\n\u305d\u306e\u4ee3\u308f\u308a\u306b\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306bFunc\u3092\u4ed8\u3051\u306a\u304f\u3066\u3082\u63a8\u8ad6\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\ntemplate<int N> struct add_steparg{\n    template<typename Func, typename ...Args>\n    static auto x(Func func, Args... args) {\n        return add_steparg<N-1>::x(func, N, args...);\n    }\n};\n\ntemplate<> struct add_steparg<0>{\n    template<typename Func, typename ...Args>\n    static auto x(Func func, Args... args) {\n        return func(args...);\n    }\n};\n\ntemplate<typename Ret, typename ...Args>\nRet stepargs(Ret (*func)(Args...)) {\n    return add_steparg<sizeof...(Args)>::x(func);\n}\n\nstd::enable_if\u3092\u4f7f\u308f\u305a\u306b\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u7279\u6b8a\u5316\u3067\u3084\u3063\u305f\u5834\u5408\u3002struct\u304c\u3061\u3087\u3063\u3068\u9b31\u9676\u3057\u3044\u3002\n\u3061\u306a\u307f\u306b\u6700\u9069\u5316MAX\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u3001\u5358\u306a\u308b\u5b9a\u6570\u5f15\u6570\u3067\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u3068\u540c\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u306a\u306e\u3067\u5b9f\u884c\u6642\u306e\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u306f\u30bc\u30ed\u3002GCC\u3059\u3054\u3044\u3002\n```cpp\n#include <iostream>\n\nint func3(int n1, int n2, int n3) {\n    std::cout << n1 << '+' << n2 << '+' << n3 << '=' << std::flush;\n    return n1+n2+n3;\n}\nint func2(int n1, int n2) {\n    std::cout << n1 << '+' << n2 << '=' << std::flush;\n    return n1+n2;\n}\nint func1(int n1) {\n    std::cout << n1 << '=' << std::flush;\n    return n1;\n}\nint func0(void) {\n    return 0;\n}\n\nint main(void){\n    std::cout << func3(1,2,3) << std::endl;\n    std::cout << func2(1,2) << std::endl;\n    std::cout << func1(1) << std::endl;\n    std::cout << func0() << std::endl;\n    return 0;\n}\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u3001\n\n```text\n1+2+3=6\n1+2=3\n1=1\n0\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3002\n\n\u3053\u306e`main()`\u95a2\u6570\u306e\u90e8\u5206\u304c\u3001\u66f8\u304f\u306e\u304c\u9762\u5012\u304f\u3055\u3044\u306e\u3067\u3001\n\n```cpp\nint main(void){\n    std::cout << stepargs(func3) << std::endl;\n    std::cout << stepargs(func2) << std::endl;\n    std::cout << stepargs(func1) << std::endl;\n    std::cout << stepargs(func0) << std::endl;\n    return 0;\n}\n```\n\n\u3068\u3060\u3051\u66f8\u3044\u305f\u3089\u3001\u81ea\u52d5\u7684\u306b\u9023\u756a\u6574\u6570\u3092\u5f15\u6570\u3068\u3057\u3066\u95a2\u6570\u3092\u5b9f\u884c\u3057\u3066\u307b\u3057\u3044\u3001\u3068\u3044\u3046\u306e\u304c\u304a\u984c\u3002\n\n```cpp\n#include <type_traits>\n\ntemplate<int N, typename Func, typename ...Args>\nauto add_steparg(typename std::enable_if<!N, Func>::type func, Args... args) {\n    return func(args...);\n}\n\ntemplate<int N, typename Func, typename ...Args>\nauto add_steparg(typename std::enable_if<N, Func>::type func, Args... args) {\n    return add_steparg<N-1, Func>(func, N, args...);\n}\n\ntemplate<typename Ret, typename ...Args>\nRet stepargs(Ret (*func)(Args...)) {\n    return add_steparg<sizeof...(Args), decltype(func)>(func);\n}\n```\n\n\u3053\u308c\u3092`main()`\u95a2\u6570\u306e\u524d\u306b\u66f8\u3044\u3066\u3084\u308c\u3070OK\u3002\n\n\u3053\u3053\u3067\u306f\u95a2\u6570\u547c\u3073\u51fa\u3057\u306e\u305f\u3081\u306b\u3001\u518d\u5e30\u3067\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3092\u4f38\u3070\u3057\u3066\u3044\u3063\u3066\u3044\u308b\u3002\n\u4f38\u3070\u3059\u9577\u3055\u306e\u76ee\u5370\u3068\u3057\u3066\u3001`template<int N>`\u306b`sizeof...(Args)`\u3092\u6700\u521d\u306b\u6e21\u3057\u3066\u304a\u3044\u3066\u3001\u518d\u5e30\u306e\u5ea6\u306b\u6e1b\u3089\u3057\u3066\u3001\u30bc\u30ed\u306b\u306a\u3063\u305f\u3089\u76ee\u7684\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3002\n\n\u3057\u304b\u3057\u53ef\u5909\u9577\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff0b\u53ef\u5909\u9577\u5f15\u6570\u3068`std::enable_if`\u3068\u306e\u76f8\u6027\u60aa\u3044\u30fb\u30fb\u30fb\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3084\u3001\u95a2\u6570\u5f15\u6570\u306e\u6700\u5f8c\u306b\u3001`std::enable_if`\u3092\u4f7f\u3063\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u4ed8\u304d\u306e\u30c0\u30df\u30fc\u306e\u5f15\u6570\u3092\u4ed8\u3051\u3089\u308c\u306a\u3044\u306e\u3067\u3001\u7121\u7406\u77e2\u7406\u3069\u3053\u304b\u306b\u62bc\u3057\u8fbc\u307e\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n\n```cpp\n#include <type_traits>\n\ntemplate<int N, typename Func, typename ...Args>\nauto add_steparg(typename std::enable_if<!N>::type*, Func func, Args... args) {\n    return func(args...);\n}\n\ntemplate<int N, typename Func, typename ...Args>\nauto add_steparg(typename std::enable_if<N>::type*, Func func, Args... args) {\n    return add_steparg<N-1>(0, func, N, args...);\n}\n\ntemplate<typename Ret, typename ...Args>\nRet stepargs(Ret (*func)(Args...)) {\n    return add_steparg<sizeof...(Args)>(0, func);\n}\n```\n\n\u95a2\u6570\u5f15\u6570\u306e\u6700\u521d\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306a\u3057\u306e\u30c0\u30df\u30fc\u5f15\u6570\u3092\u4ed8\u3051\u305f\u65b9\u304c\u30b7\u30f3\u30d7\u30eb\u304b\u306a\u3002\n\u5f53\u7136\u547c\u3073\u51fa\u3057\u5143\u306b\u3082\u30c0\u30df\u30fc\u306e\u5f15\u6570\u3092\u4ed8\u3051\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3051\u308c\u3069\u3002\n\u305d\u306e\u4ee3\u308f\u308a\u306b\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306b`Func`\u3092\u4ed8\u3051\u306a\u304f\u3066\u3082\u63a8\u8ad6\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n```cpp\ntemplate<int N> struct add_steparg{\n    template<typename Func, typename ...Args>\n    static auto x(Func func, Args... args) {\n        return add_steparg<N-1>::x(func, N, args...);\n    }\n};\n\ntemplate<> struct add_steparg<0>{\n    template<typename Func, typename ...Args>\n    static auto x(Func func, Args... args) {\n        return func(args...);\n    }\n};\n\ntemplate<typename Ret, typename ...Args>\nRet stepargs(Ret (*func)(Args...)) {\n    return add_steparg<sizeof...(Args)>::x(func);\n}\n```\n\n`std::enable_if`\u3092\u4f7f\u308f\u305a\u306b\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u7279\u6b8a\u5316\u3067\u3084\u3063\u305f\u5834\u5408\u3002`struct`\u304c\u3061\u3087\u3063\u3068\u9b31\u9676\u3057\u3044\u3002\n\n\u3061\u306a\u307f\u306b\u6700\u9069\u5316MAX\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u3001\u5358\u306a\u308b\u5b9a\u6570\u5f15\u6570\u3067\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u3068\u540c\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u306a\u306e\u3067\u5b9f\u884c\u6642\u306e\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u306f\u30bc\u30ed\u3002GCC\u3059\u3054\u3044\u3002\n", "tags": ["C++", "C++11"]}