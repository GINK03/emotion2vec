{"context": " More than 1 year has passed since last update.Laravel\u306b\u306f\u4fbf\u5229\u306a\u8a8d\u8a3c\u6a5f\u69cb\u304c\u5b58\u5728\u3057\u307e\u3059\u304c\u3001\u6a19\u6e96\u3067\u306fusers\u30c6\u30fc\u30d6\u30eb\u306e\u307f\u3092\u4f7f\u3063\u3066\u30e6\u30fc\u30b6\u30fc\u3092\u8a8d\u8a3c\u3057\u307e\u3059\u3002\n\u5b9f\u969b\u306e\u958b\u767a\u3067\u306fadministrators\u3068users\u3092\u5206\u3051\u305f\u3044\u3053\u3068\u306f\u3088\u304f\u3042\u308b\u3053\u3068\u306a\u306e\u3067\u3001\u30c6\u30fc\u30d6\u30eb\u3092\u5206\u3051\u305f\u8a8d\u8a3c\u3092\u3057\u3066\u307f\u307e\u3059\u3002\nLaravel4\u306e\u6642\u4ee3\u306f\u5b9a\u756a\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306a\u3069\u304c\u3042\u3063\u305f\u3088\u3046\u3067\u3059\u304c\u3001Laravel5\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3001\u4ed5\u65b9\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u8ffd\u8a18\n5.1\u5bfe\u5fdc\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u3001\u305d\u306e\u4f7f\u3044\u65b9\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u3053\u3061\u3089\u306e\u65b9\u304c\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\n\u53c2\u8003\n\u3061\u3087\u3046\u3069\u3001\u76ee\u7684\u3068\u3059\u308b\u5185\u5bb9\u306e\u8a18\u4e8b\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n\u30fb\u8a8d\u8a3c\u7528\u306e\u30e6\u30fc\u30b6\u30fc\u3092users\u3068administrators\u3067\u30c6\u30fc\u30d6\u30eb\u3092\u5206\u3051\u3066\u3001\u305d\u308c\u305e\u308c\u8a8d\u8a3c\u3059\u308b\u3002\n\u30fb\u4e00\u822c\u30e6\u30fc\u30b6\u30fc\u306f\u3001\u6a19\u6e96\u306eusers\u304a\u3088\u3073\u6a19\u6e96\u30c9\u30e9\u30a4\u30d0\u3092\u5229\u7528\u3002\n\u30fbuser\u306e\u8a8d\u8a3c\u306fAuth::attempt(['email'=>email,\u2032password\u2032=>email,\u2032password\u2032=>email,'password'=>password])\u3067\u3059\u304c\u3001\u3053\u308c\u306b\u52a0\u3048\u3001\n\u30fbadmin\u306e\u8a8d\u8a3c\u306fAuth::driver('admin')->attempt(['email'=>email,\u2032password\u2032=>email,\u2032password\u2032=>email,'password'=>password])\u3068\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n\u3084\u308b\u3053\u3068\n\u3084\u308b\u3053\u3068\u306f\u3001administrators\u30c6\u30fc\u30d6\u30eb\u306e\u69cb\u9020\u3092\u3053\u3089\u306a\u3051\u308c\u3070\u3001\u5927\u304d\u304f\u306f\u4e0b\u8a18\u306e\uff12\u3064\u3002\n\u30fbUserProvider\u306e\u5b9f\u88c5\u3067\u5229\u7528\u3059\u308b\u30e6\u30fc\u30b6\u30fc\uff08AdminUser\uff09\u3092\u4f5c\u308b\uff08ID\u3092\u5909\u3048\u308b\u305f\u3081\uff09\n\u30fbUserProvider\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7d99\u627f\u3057\u305f\u30d7\u30ed\u30d0\u30a4\u30c0\u3092\u4f5c\u6210\n\u30fb\u30d7\u30ed\u30d0\u30a4\u30c0\u306b\u8a2d\u5b9a\u3092\u8a18\u8ff0\n\u6b63\u76f4\u3001\u30c6\u30fc\u30d6\u30eb\u3084\u30c7\u30fc\u30bf\u306e\u7528\u610f\u306a\u3069\u3001\u4e0b\u6e96\u5099\u306e\u65b9\u304c\u5927\u5909\u3067\u3059\u3002\nLaravel4\u3067\u306f\u6587\u5b57\u901a\u308a\u3001UserProviderInterface\u3092\u7d99\u627f\u3057\u305f\u304c\u3001Laravel5\u3067\u306f\u3001UserProvider\u3068\u3044\u3046\u540d\u524d\u306b\u306a\u3063\u305f\u3002\u304c\u3001\u6a5f\u80fd\u306f\u307b\u307c\u540c\u3058\u3088\u3046\u3067\u3059\u3002\n\n\u524d\u63d0\u6761\u4ef6\n\u30fbadministrators\u30c6\u30fc\u30d6\u30eb\u306e\u69cb\u9020\u306f\u3001\u539f\u5247users\u3068\u540c\u3058\u3067\u3059\u304c\u3001administrator\u3092\u8a8d\u8b58\u3059\u308bID\u3068\u3057\u3066\u3001administrators_id\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n\u6ce8\u610f\u3068\u7d99\u7d9a\u8abf\u67fb\u4e8b\u9805\nusers\u3068administrators\u3068\u30c6\u30fc\u30d6\u30eb\u3092\u5206\u3051\u3066\u3082\u3001\u8a8d\u8a3c\u306b\u4f7f\u3046ID(identifier)\u306e\u91cd\u8907\u306f\u7d50\u5c40\u306e\u3068\u3053\u308d\u8a31\u3055\u308c\u306a\u3044\u3088\u3046\u3067\u3059\uff08\u52d5\u4f5c\u306f\u3057\u307e\u3059\u304c\u3001\u540c\u3058ID\u306e\u30e6\u30fc\u30b6-\u304c\u3044\u308b\u3068\u304a\u304b\u3057\u306a\u52d5\u4f5c\u3092\u3059\u308b\uff09\u3002\n\u79c1\u306e\u3084\u308a\u65b9\u304c\u308f\u308b\u3044\u3060\u3051\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3002\n\u3064\u307e\u308a\u3001\n\u30fbAuth::attempt()\n\u30fbAuth::driver('admin')->attempt();\n\u3067\u3001\u8ab0\u304b\u304c\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u969b\u3002\u898b\u306b\u884c\u304fDB\u3084\u30ab\u30e9\u30e0\u306f\u9055\u3063\u3066\u3082\u3001\u7d50\u5c40identifier\u3068\u3057\u3066\u540c\u3058\u5024\u304c\u53d6\u5f97\u3055\u308c\u305f\u5834\u5408\u3001\u3069\u3061\u3089\u3082\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u72b6\u614b\u3068\u307f\u306a\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001users\u306eid\u3068\u3001administrators_id\u306e\u5185\u5bb9\u304c\u91cd\u8907\u3057\u306a\u3044\u3088\u3046\u306b\u5b9f\u88c5\u304c\u5fc5\u8981\u3067\u3059\u3002\u3059\u306a\u304f\u3068\u3082\u3001\u3053\u3053\u3067\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u3067\u306f\u305d\u3046\u306a\u308a\u307e\u3059\u3002\n\u30c9\u30e9\u30a4\u30d0\u304c\u9055\u3063\u3066\u3082\u3001\u8a8d\u8a3c\u306e\u305f\u3081\u306bsession\u306b\u66f8\u304d\u8fbc\u3080ID\u306f\u540c\u3058\u305f\u3081\uff1f\u3067\u3057\u3087\u3046\u304b\u3002\u30bd\u30fc\u30b9\u8aad\u3093\u3067\u307f\u307e\u3059\u3002\n\u4ed6\u306emulti auth\u7cfb\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u304b\u898b\u3066\u3082\u3001ID\u306e\u91cd\u8907\u3092\u6c17\u306b\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306f\u306a\u3044\u3088\u3046\u3060\u3051\u3069\u30fb\u30fb\u30fb\u30fb\u3002\u79c1\u306e\u52d8\u9055\u3044\u306a\u3089\u3044\u3044\u306e\u3067\u3059\u304c\u3002\n\u8a8d\u8a3c\u3067role\u7684\u306a\u6a5f\u80fd\u304c\u5fc5\u8981\u306a\u5834\u5408\u3001\n\u30fb\uff11\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u3067role\u3092\u8ffd\u52a0\u3057\u3001attempt()\u3067role\u3082\u542b\u3081\u3066\u8a8d\u8a3c\u3059\u308b\n\u30fb\u8907\u6570\u306e\u30c6\u30fc\u30d6\u30eb\u3067\u3001identifier\u3068\u306a\u308b\u30ab\u30e9\u30e0\u306e\u5024\u3092\u91cd\u8907\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\n\u30fbSession\u306e\u66f8\u304d\u8fbc\u307f\u3001\u8aad\u307f\u8fbc\u307f\u3092\u5de5\u592b\u3057identifier\u306e\u91cd\u8907\u3092\u9632\u3050\uff08Guard\u3092\u62e1\u5f35\uff1f\uff09\n\u3067\u5bfe\u5fdc\u304b\u306a\u3002\u6b63\u76f4\u3001\u3042\u307e\u308a\u8907\u96d1\u306b\u306a\u3063\u3066\u304f\u308b\u3068\u3001\u6bce\u5ea6\u304a\u306a\u3058\u307f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u610f\u5473\u304c\u7121\u3044\u306a\u3042\u3002\n\n\u4e0b\u6e96\u5099\n\nadministrators\u30c6\u30fc\u30d6\u30eb\u306e\u6e96\u5099\nmigration\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\nphp artisan make:migration create_administrators_table --table=administrators\n\n\u306a\u3069\u3068\u3059\u308b\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001administrator_id\u306f\u3001string\u306b\u3057\u3066\u3001admin_\u30d7\u30ea\u30d5\u30a3\u30c3\u30af+uniqid()\u3067\u751f\u6210\u3059\u308b\u3053\u3068\u306b\u3059\u308b\u3002\u306a\u3093\u304b\u91c8\u7136\u3068\u3057\u306a\u3044\u3002\ndatabase/migrations/XXXXX_create_administrators_table.php\n<?php\n\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateAdministratorsTable extends Migration {\n\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        Schema::create('administrators', function(Blueprint $table)\n        {\n            //\n            $table->increments('id');\n            $table->string('administrators_id',128)->unique(\"admin_\");\n            $table->string('name');\n            $table->string('email')->unique();\n            $table->string('password',60);\n            $table->rememberToken();\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     *\n     * @return void\n     */\n    public function down()\n    {\n        Schema::drop('administrators');\n    }\n\n}\n\n\n\u3053\u3093\u306a\u611f\u3058\u3002\nphp artisan migrate\n\n\u3067\u3001users\u30c6\u30fc\u30d6\u30eb\u3082\u4e00\u7dd2\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u306e\u6e96\u5099\nusers, administrators\u306b\u4e88\u3081\u30e6\u30fc\u30b6\u30fc\u3092\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002form\u3092\u4f5c\u3063\u3066\u3082\u3044\u3044\u3057\u3001insert\u3057\u3066\u3082\u3044\u3044\u3067\u3059\u304c\u3001\u6298\u89d2\u306a\u306eseeder\u3092\u5229\u7528\u3057\u307e\u3059\u3002\nseeder\u3092\u4f5c\u308bartisan\u30b3\u30e1\u30f3\u30c9\u306f\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u624b\u66f8\u304d\u3057\u307e\u3059\uff08\u306a\u3093\u3067\uff1f\uff09\n\u306a\u304a\u3001\u3053\u3053\u3067\u306f\u3001Eloquent ORM\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001Administrator.php\uff08\u30e2\u30c7\u30eb\uff09\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\u3002\n\u3044\u308d\u3044\u308d\u66f8\u3044\u3066\u3044\u308b\u304c\u3001\u57fa\u672c\u3001User.php\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3001class\u540d\u3068$table\u3060\u3051\u5909\u3048\u308c\u3070\u3044\u3044\u3068\u601d\u3046\u3002\napp/Administrators.php\n<?php namespace App;\n\nuse Illuminate\\Auth\\Authenticatable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\n\nclass Administrator extends Model implements AuthenticatableContract, CanResetPasswordContract {\n\n    use Authenticatable, CanResetPassword;\n\n    protected $table = 'administrators';\n\n    protected $fillable = ['name', 'email', 'password'];\n\n    protected $hidden = ['password', 'remember_token'];\n\n}\n\n\nseeder\u306f\u3053\u3093\u306a\u611f\u3058\u3002hoge\u3068\u3044\u3046\uff11\u4eba\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u8db3\u3057\u3066\u304a\u304f\u3002\u3068\u308a\u3042\u3048\u305aid\u306funiqid()\u3067\u751f\u6210\u3002\ndatabase/seeder/AdministratorTableSeeder\n<?php\n\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse App\\Administrator;\n\nclass AdministratorTableSeeder extends Seeder {\n\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n\n        //DB::table('administrators')->delete();\n        Administrator::truncate();\n\n        Administrator::insert([\n            [\n                'administrator_id'=>uniqid();\n                'name'=>'hoge',\n                'email'=>'hoge@test.com',\n                'password'=>Hash::make('hoge')\n            ]\n        ]);\n\n    }\n\n}\n\n\nseeder\u306f\u3001\nphp artisan db:seed\n\n\u3067\u5b9f\u884c\u3055\u308c\u308b\u304c\u3001\u3053\u306e\u6642\u5b9f\u884c\u3055\u308c\u308b\u306e\u306f\u3001DatabaseSeeder.php\u306e\u307f\u3067\u3042\u308b\u3002\u305d\u306e\u305f\u3081\u3001DatabaseSeeder.php\u306bAdministratorTableSeeder.php\u304c\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u8a18\u8ff0\u3059\u308b\u3002\nDatabaseSeeder.php\n<?php\n\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass DatabaseSeeder extends Seeder {\n\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        Model::unguard();\n\n        //$this->call('UserTableSeeder');\n        $this->call('AdministratorTableSeeder');\n    }\n\n}\n\n\u30d1\u30ef\u30ef\u30fc\u30c9\u306f\u308f\u3059\u308c\u305a\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u3067\u306a\u3044\u3068\u8a8d\u8a3c\u306e\u6642\u306b\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002\n\n\u3067\u306f\u3001\u672c\u756a\n\u3084\u3063\u3068\u4e0b\u6e96\u5099\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u30ab\u30b9\u30bf\u30e0\u30c9\u30e9\u30a4\u30d0\u3092\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u306f\u3069\u3053\u306b\u4f5c\u3063\u3066\u3082\u3044\u3044\u306e\u3067\u3001\u3068\u308a\u3042\u3048app\u76f4\u4e0b\u306b\u3064\u304f\u308a\u307e\u3059\u3002\n\u3044\u308d\u3044\u308d\u66f8\u3044\u3066\u307e\u3059\u304c\u3001\u5185\u5bb9\u306f\u307b\u307cIlluminate/Auth/DatabaseUserProvider.php\u304b\u3089\u306e\u30d1\u30af\u30ea\u3002\n\u30fbconnection\u3084table\u3001hasher\u7b49\u3092\u9759\u7684\u306b\u66f8\u304d\u306a\u304a\u3057\u3002\n\u30fbGenericUser\u3092\u8fd4\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3092\u3001GenericUser\u3092\u7d99\u627f\u3057\u305fAdminUser\u3092\u8fd4\u3059\u3002\n\u30fbid\u3092\u898b\u3066\u3044\u308b\u3068\u3053\u308d\u3092\u3001administrator_id\u3092\u898b\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\u3068\u3044\u3046\u611f\u3058\u3002\n\n\u30ab\u30b9\u30bf\u30e0User\n<?php namespace App;\n\nuse Illuminate\\Auth\\GenericUser;\n\nclass AdminUser extends GenericUser\n{\n\n    public function getAuthIdentifier(){\n        return $this->attributes['administrator_id'];\n    }\n\n}\n\n\n\u30ab\u30b9\u30bf\u30e0UserProvider\u306e\u5b9f\u88c5\napp/AdministratorProvider.php\n<?php namespace App;\n\n// use Illuminate\\Auth\\UserInterface;\n// use Illuminate\\Auth\\UserProviderInterface;\n\nuse DB;\nuse Hash;\nuse Log;\n\nuse Illuminate\\Contracts\\Auth\\UserProvider;\nuse Illuminate\\Database\\ConnectionInterface;\nuse Illuminate\\Contracts\\Hashing\\Hasher as HasherContract;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as UserContract;\nuse Illuminate\\Auth\\GenericUser;\n\nclass AdministratorProvider implements UserProvider\n{\n\n    //table\n    protected $table = \"administrators\";\n\n    /**\n     * Retrieve a user by their unique identifier.\n     *\n     * @param  mixed  $identifier\n     * @return \\Illuminate\\Contracts\\Auth\\Authenticatable|null\n     */\n    public function retrieveById($identifier)\n    {\n        //$user = DB::table($this->table)->find($identifier);\n\n        $user = DB::table($this->table)\n                                 ->where('administrator_id',$identifier)\n                                 ->first();\n\n        return $this->getGenericUser($user);\n    }\n\n    /**\n     * Retrieve a user by by their unique identifier and \"remember me\" token.\n     *\n     * @param  mixed   $identifier\n     * @param  string  $token\n     * @return \\Illuminate\\Contracts\\Auth\\Authenticatable|null\n     */\n    public function retrieveByToken($identifier, $token)\n    {\n        $user = DB::table($this->table)\n                                ->where('administrator_id', $identifier)\n                                ->where('remember_token', $token)\n                                ->first();\n\n        return $this->getGenericUser($user);\n    }\n\n    /**\n     * Update the \"remember me\" token for the given user in storage.\n     *\n     * @param  \\Illuminate\\Contracts\\Auth\\Authenticatable  $user\n     * @param  string  $token\n     * @return void\n     */\n    public function updateRememberToken(UserContract $user, $token)\n    {\n        DB::table($this->table)\n                            ->where('administrator_id', $user->getAuthIdentifier())\n                            ->update(['remember_token' => $token]);\n    }\n\n    /**\n     * Retrieve a user by the given credentials.\n     *\n     * @param  array  $credentials\n     * @return \\Illuminate\\Contracts\\Auth\\Authenticatable|null\n     */\n    public function retrieveByCredentials(array $credentials)\n    {\n        // First we will add each credential element to the query as a where clause.\n        // Then we can execute the query and, if we found a user, return it in a\n        // generic \"user\" object that will be utilized by the Guard instances.\n        $query = DB::table($this->table);\n\n        foreach ($credentials as $key => $value)\n        {\n            if ( ! str_contains($key, 'password'))\n            {\n                $query->where($key, $value);\n            }\n        }\n\n        // Now we are ready to execute the query to see if we have an user matching\n        // the given credentials. If not, we will just return nulls and indicate\n        // that there are no matching users for these given credential arrays.\n        $user = $query->first();\n\n        return $this->getGenericUser($user);\n    }\n\n    /**\n     * Get the generic user.\n     *\n     * @param  mixed  $user\n     * @return \\Illuminate\\Auth\\GenericUser|null\n     */\n    protected function getGenericUser($user)\n    {\n        if ($user !== null)\n        {\n            //return new GenericUser((array) $user);\n            return new AdminUser((array)$user);\n        }\n    }\n\n    /**\n     * Validate a user against the given credentials.\n     *\n     * @param  \\Illuminate\\Contracts\\Auth\\Authenticatable  $user\n     * @param  array  $credentials\n     * @return bool\n     */\n    public function validateCredentials(UserContract $user, array $credentials)\n    {\n        $plain = $credentials['password'];\n\n        // Log::debug('$plain='.$plain);\n        // Log::debug('hash(plain)='.Hash::make($plain));\n        // Log::debug('getAuthPass='.$user->getAuthPassword());\n\n        return Hash::check($plain,$user->getAuthPassword());\n\n    }\n\n}\n\n\u79c1\u306f\u3001DatabaseUserProvider.php\u304b\u3089\u30b3\u30d4\u30fc\u3057\u307e\u3057\u305f\u304c\u3001\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\uff08\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\uff09\u3059\u308c\u3070OK\u3067\u3059\u3002\nretrieveByCredentials(array credentials)\u304cattempt()\u304b\u3089\u306e\u914d\u5217\u3092\u53d7\u53d6\u3001password\u4ee5\u5916(emai,name)\u3092\u4e00\u81f4\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u3092\u63a2\u3057\u3066\u8fd4\u3057\u3001validateCredentials(UserContractcredentials)\u304cattempt()\u304b\u3089\u306e\u914d\u5217\u3092\u53d7\u53d6\u3001password\u4ee5\u5916(emai,name)\u3092\u4e00\u81f4\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u3092\u63a2\u3057\u3066\u8fd4\u3057\u3001validateCredentials(UserContractcredentials)\u304cattempt()\u304b\u3089\u306e\u914d\u5217\u3092\u53d7\u53d6\u3001password\u4ee5\u5916(emai,name)\u3092\u4e00\u81f4\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u3092\u63a2\u3057\u3066\u8fd4\u3057\u3001validateCredentials(UserContract user, array credentials)\u3067\u3001\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u4e00\u81f4\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5e73\u6587\u306b\u3057\u305f\u3044\u5834\u5408\n\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5e73\u6587\u306b\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u4fdd\u5b58\u6642\u306b\u30cf\u30c3\u30b7\u30e5\u5316\u305b\u305a\u3001\u3053\u3053\u3067\u3001if(plain==plain==plain == user->getAuthPassword())\u3068\u3059\u308c\u3070\u3044\u3044\u3068\u601d\u3044\u307e\u3059\uff08\u8a66\u3057\u3066\u307e\u305b\u3093\u304c\uff09\u3002\n\n\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u3067\u306e\u8a18\u8ff0\nLaravel5\u304b\u3089\u3001global.php\u304c\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u72ec\u81ea\u306b\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u3092\u4f5c\u6210\u3001\u767b\u9332\u3059\u308b\u304b\u3001\u65e2\u306b\u767b\u9332\u6e08\u307f\u306e\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u306b\u8a18\u8ff0\u3059\u308b\u304b\u3069\u3061\u3089\u304b\u3067\u3059\u3002\u3081\u3093\u3069\u3044\u306e\u3067\u3001app/Providers/AppServiceProvider.php\u306b\u5fc5\u8981\u306a\u8a18\u8ff0\u3092\u884c\u3044\u307e\u3059\u3002\n\u8a18\u8ff0\u3057\u305f\u306e\u306fboot()\u306e\u90e8\u5206\u3067\u3059\uff08register\u306e\u90e8\u5206\u306f\u65e2\u5b58\uff09\u3002\napp/Provider/AppServiceProvider.php\n<?php namespace App\\Providers;\n\nuse Illuminate\\Support\\ServiceProvider;\nuse App\\AdministratorProvider;\nuse Illuminate\\Auth\\Guard;\n\nclass AppServiceProvider extends ServiceProvider {\n\n    /**\n     * Bootstrap any application services.\n     *\n     * @return void\n     */\n    public function boot()\n    {\n        $this->app['auth']->extend('admin',function($app){\n            return new Guard(new AdministratorProvider,$app['session.store']);\n        });\n    }\n\n    /**\n     * Register any application services.\n     *\n     * This service provider is a great spot to register your various container\n     * bindings with the application. As you can see, we are registering our\n     * \"Registrar\" implementation here. You can add your own bindings too!\n     *\n     * @return void\n     */\n    public function register()\n    {\n        $this->app->bind(\n            'Illuminate\\Contracts\\Auth\\Registrar',\n            'App\\Services\\Registrar'\n        );\n    }\n\n}\n\n\n\u52d5\u4f5c\u306e\u78ba\u8a8d\n\u3053\u308c\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u53d6\u5f97\n\u30eb\u30fc\u30c8\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u306b\u76f4\u63a5\u8a18\u8ff0\u3057\u3066\u52d5\u4f5c\u30c1\u30a7\u30c3\u30af\u3002\u304a\u306a\u3058\u307fAuth::*\u30d5\u30a1\u30b5\u30fc\u30c9\u306bAuth::driver('admin')\u3092\u3064\u3051\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\nRoute::get('hoge',function(){\n\n    //Auth::attempt(['email'=>'foo@test.com','password'=>'foo']);\n\n    //\u8a8d\u8a3c\uff08\u30ed\u30b0\u30a4\u30f3\uff09\n    Auth::driver('admin')->attempt(['email'=>'hoge@test.com','password'=>'hoge']);\n\n    //\u60c5\u5831\u53d6\u5f97\n    $admin = Auth::driver('admin')->user();\n\n    //\u30ed\u30b0\u30a4\u30f3\u3093\u3067\u304d\u3066\u306a\u3044\u3068$user\u304c\u53d6\u5f97\u3067\u304d\u306a\u3044\u306e\u3067\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306f\u305a\n    return $admin->name;\n\n});\n\n\n\u30ed\u30b0\u30a2\u30a6\u30c8\nRoute::get('logout',function(){\n    Auth::driver('admin')->logout();\n});\n\n\nMiddleware\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u308b\n\u6298\u89d2\u306a\u306e\u3067\u3001\u3053\u308c\u3089\u306e\u30c9\u30e9\u30a4\u30d0\u3092\u5229\u7528\u3059\u308b\u30df\u30c9\u30eb\u30a6\u30a8\u30a2\u3092\u8a18\u8ff0\u3057\u3066\u307f\u307e\u3059\u3002/admin\u4ee5\u4e0b\u306fadmin\u6a29\u9650\u304c\u5fc5\u8981\u3068\u3044\u3046\u611f\u3058\u306b\u3057\u305f\u3044\u3002\n\u3072\u306a\u5f62\u306f\nphp artisan make:middleware AdminAuthenticate\n\n\u3067\u4f5c\u308c\u307e\u3059\u3002\n<?php namespace App\\Http\\Middleware;\n\nuse Closure;\n\nclass AdminAuthenticate {\n\n    /**\n     * Handle an incoming request.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\Closure  $next\n     * @return mixed\n     */\n    public function handle($request, Closure $next)\n    {\n\n        if(\\Auth::driver('admin')->check()){\n\n            //Do nothing.\n\n        }else{\n\n            return \"go to admin login page\";\n\n        }\n\n        return $next($request);\n    }\n\n}\n\n\u3053\u3093\u306a\u611f\u3058\u3002\u3053\u308c\u3092\u3001Routing\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001Kernel.php\u306e$routeMiddleware\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n    /**\n     * The application's route middleware.\n     *\n     * @var array\n     */\n    protected $routeMiddleware = [\n        'auth' => 'App\\Http\\Middleware\\Authenticate',\n        'auth.basic' => 'Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth',\n        'guest' => 'App\\Http\\Middleware\\RedirectIfAuthenticated',\n        'admin'=>'App\\Http\\Middleware\\AdminAuthenticate',\n        'user'=>'App\\Http\\Middleware\\UserAuthenticate',\n    ];\n\n\u3053\u308c\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3001Routing\u3067\u3001\nRoute::get('admin',['middleware'=>'admin',function(){\n    return \"/admin\";\n}]);\n\nRoute::get('admin/tools',['middleware'=>'admin',function(){\n    return \"/admin/tools\";\n}]);\n\n\u306a\u3069\u3068\u3057\u307e\u3059\u3002\u30eb\u30fc\u30c8\u304c\u591a\u3044\u5834\u5408\u306fgroup\u3092\u5229\u7528\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u4e0b\u8a18\u306f\u4e0a\u8a18\u3068\u540c\u7fa9\u3002\nRoute::group(['prefix'=>'admin','middleware'=>'admin'],function(){\n\n    Route::get('/',function(){\n        return \"/admin\";\n    });\n\n    Route::get('tools',function(){\n        return \"/admin/tools\";\n    });\n\n});\n\nadmin/*\u307f\u305f\u3044\u306a\u306e\u306f\u306a\u3044\u3093\u304b\u306d\u3002\n\n\u30e1\u30e2\n\u5168\u3066\u306emigration\u3092\u3084\u308a\u76f4\u3059\u306b\u306f\u3001\nphp artisan migration:refresh\n\n\u3068\u3059\u308b\u3002 --seed\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3068seed\u3082\u3084\u308a\u306a\u304a\u3057\u3066\u304f\u308c\u308b\u3068\u3044\u3046\u8a18\u8ff0\u3092\u898b\u3064\u3051\u305f\u3051\u3069\u3001\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3042\u3068\u3001migration\u30d5\u30a1\u30a4\u30eb\u3092\u624b\u52d5\u3067\u524a\u9664\u3057\u305f\u308a\u3059\u308b\u3068\u3001file not found\u7684\u306a\u30a8\u30e9\u30fc\u304c\u3067\u307e\u3059\u3002\u3069\u3046\u3084\u3089autoloader\u304c\u8a8d\u8b58\u3057\u3066\u306a\u3044\u3088\u3046\u3067\u3059\u3002\ncomposer dump-autoload\n\n\u3068\u3059\u308b\u304b\u3001\nphp artisan optimize\n\n\u3068\u3059\u308b\u3002\n\nLaravel\u306b\u306f\u4fbf\u5229\u306a\u8a8d\u8a3c\u6a5f\u69cb\u304c\u5b58\u5728\u3057\u307e\u3059\u304c\u3001\u6a19\u6e96\u3067\u306fusers\u30c6\u30fc\u30d6\u30eb\u306e\u307f\u3092\u4f7f\u3063\u3066\u30e6\u30fc\u30b6\u30fc\u3092\u8a8d\u8a3c\u3057\u307e\u3059\u3002\n\u5b9f\u969b\u306e\u958b\u767a\u3067\u306fadministrators\u3068users\u3092\u5206\u3051\u305f\u3044\u3053\u3068\u306f\u3088\u304f\u3042\u308b\u3053\u3068\u306a\u306e\u3067\u3001\u30c6\u30fc\u30d6\u30eb\u3092\u5206\u3051\u305f\u8a8d\u8a3c\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\nLaravel4\u306e\u6642\u4ee3\u306f\u5b9a\u756a\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306a\u3069\u304c\u3042\u3063\u305f\u3088\u3046\u3067\u3059\u304c\u3001Laravel5\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3001\u4ed5\u65b9\u3042\u308a\u307e\u305b\u3093\u3002\n\n###\u8ffd\u8a18\n\n[5.1\u5bfe\u5fdc\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u3001\u305d\u306e\u4f7f\u3044\u65b9\u3092\u66f8\u304d\u307e\u3057\u305f\u3002](http://qiita.com/zaburo/private/bc699185b6de12c0413d)\u3053\u3061\u3089\u306e\u65b9\u304c\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\n###\u53c2\u8003\n\n\u3061\u3087\u3046\u3069\u3001[\u76ee\u7684\u3068\u3059\u308b\u5185\u5bb9\u306e\u8a18\u4e8b](http://blog.comnect.jp.net/blog/95)\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\n###\u3084\u308a\u305f\u3044\u3053\u3068\n\u30fb\u8a8d\u8a3c\u7528\u306e\u30e6\u30fc\u30b6\u30fc\u3092users\u3068administrators\u3067\u30c6\u30fc\u30d6\u30eb\u3092\u5206\u3051\u3066\u3001\u305d\u308c\u305e\u308c\u8a8d\u8a3c\u3059\u308b\u3002\n\u30fb\u4e00\u822c\u30e6\u30fc\u30b6\u30fc\u306f\u3001\u6a19\u6e96\u306eusers\u304a\u3088\u3073\u6a19\u6e96\u30c9\u30e9\u30a4\u30d0\u3092\u5229\u7528\u3002\n\u30fbuser\u306e\u8a8d\u8a3c\u306fAuth::attempt(['email'=>$email,'password'=>$password])\u3067\u3059\u304c\u3001\u3053\u308c\u306b\u52a0\u3048\u3001\n\u30fbadmin\u306e\u8a8d\u8a3c\u306fAuth::driver('admin')->attempt(['email'=>$email,'password'=>$password])\u3068\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n###\u3084\u308b\u3053\u3068\n\n\u3084\u308b\u3053\u3068\u306f\u3001administrators\u30c6\u30fc\u30d6\u30eb\u306e\u69cb\u9020\u3092\u3053\u3089\u306a\u3051\u308c\u3070\u3001\u5927\u304d\u304f\u306f\u4e0b\u8a18\u306e\uff12\u3064\u3002\n\n\u30fbUserProvider\u306e\u5b9f\u88c5\u3067\u5229\u7528\u3059\u308b\u30e6\u30fc\u30b6\u30fc\uff08AdminUser\uff09\u3092\u4f5c\u308b\uff08ID\u3092\u5909\u3048\u308b\u305f\u3081\uff09\n\u30fbUserProvider\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7d99\u627f\u3057\u305f\u30d7\u30ed\u30d0\u30a4\u30c0\u3092\u4f5c\u6210\n\u30fb\u30d7\u30ed\u30d0\u30a4\u30c0\u306b\u8a2d\u5b9a\u3092\u8a18\u8ff0\n\n\u6b63\u76f4\u3001\u30c6\u30fc\u30d6\u30eb\u3084\u30c7\u30fc\u30bf\u306e\u7528\u610f\u306a\u3069\u3001\u4e0b\u6e96\u5099\u306e\u65b9\u304c\u5927\u5909\u3067\u3059\u3002\nLaravel4\u3067\u306f\u6587\u5b57\u901a\u308a\u3001UserProviderInterface\u3092\u7d99\u627f\u3057\u305f\u304c\u3001Laravel5\u3067\u306f\u3001UserProvider\u3068\u3044\u3046\u540d\u524d\u306b\u306a\u3063\u305f\u3002\u304c\u3001\u6a5f\u80fd\u306f\u307b\u307c\u540c\u3058\u3088\u3046\u3067\u3059\u3002\n\n###\u524d\u63d0\u6761\u4ef6\n\n\u30fbadministrators\u30c6\u30fc\u30d6\u30eb\u306e\u69cb\u9020\u306f\u3001\u539f\u5247users\u3068\u540c\u3058\u3067\u3059\u304c\u3001administrator\u3092\u8a8d\u8b58\u3059\u308bID\u3068\u3057\u3066\u3001administrators_id\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n#\u6ce8\u610f\u3068\u7d99\u7d9a\u8abf\u67fb\u4e8b\u9805\n\nusers\u3068administrators\u3068\u30c6\u30fc\u30d6\u30eb\u3092\u5206\u3051\u3066\u3082\u3001\u8a8d\u8a3c\u306b\u4f7f\u3046ID(identifier)\u306e\u91cd\u8907\u306f\u7d50\u5c40\u306e\u3068\u3053\u308d\u8a31\u3055\u308c\u306a\u3044\u3088\u3046\u3067\u3059\uff08\u52d5\u4f5c\u306f\u3057\u307e\u3059\u304c\u3001\u540c\u3058ID\u306e\u30e6\u30fc\u30b6-\u304c\u3044\u308b\u3068\u304a\u304b\u3057\u306a\u52d5\u4f5c\u3092\u3059\u308b\uff09\u3002\n\u79c1\u306e\u3084\u308a\u65b9\u304c\u308f\u308b\u3044\u3060\u3051\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3002\n\n\u3064\u307e\u308a\u3001\n\n\u30fbAuth::attempt()\n\u30fbAuth::driver('admin')->attempt();\n\n\u3067\u3001\u8ab0\u304b\u304c\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u969b\u3002\u898b\u306b\u884c\u304fDB\u3084\u30ab\u30e9\u30e0\u306f\u9055\u3063\u3066\u3082\u3001\u7d50\u5c40identifier\u3068\u3057\u3066\u540c\u3058\u5024\u304c\u53d6\u5f97\u3055\u308c\u305f\u5834\u5408\u3001\u3069\u3061\u3089\u3082\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u72b6\u614b\u3068\u307f\u306a\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u305d\u306e\u305f\u3081\u3001users\u306eid\u3068\u3001administrators_id\u306e\u5185\u5bb9\u304c\u91cd\u8907\u3057\u306a\u3044\u3088\u3046\u306b\u5b9f\u88c5\u304c\u5fc5\u8981\u3067\u3059\u3002\u3059\u306a\u304f\u3068\u3082\u3001\u3053\u3053\u3067\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u3067\u306f\u305d\u3046\u306a\u308a\u307e\u3059\u3002\n\n\u30c9\u30e9\u30a4\u30d0\u304c\u9055\u3063\u3066\u3082\u3001\u8a8d\u8a3c\u306e\u305f\u3081\u306bsession\u306b\u66f8\u304d\u8fbc\u3080ID\u306f\u540c\u3058\u305f\u3081\uff1f\u3067\u3057\u3087\u3046\u304b\u3002\u30bd\u30fc\u30b9\u8aad\u3093\u3067\u307f\u307e\u3059\u3002\n\u4ed6\u306emulti auth\u7cfb\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u304b\u898b\u3066\u3082\u3001ID\u306e\u91cd\u8907\u3092\u6c17\u306b\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306f\u306a\u3044\u3088\u3046\u3060\u3051\u3069\u30fb\u30fb\u30fb\u30fb\u3002\u79c1\u306e\u52d8\u9055\u3044\u306a\u3089\u3044\u3044\u306e\u3067\u3059\u304c\u3002\n\n\u8a8d\u8a3c\u3067role\u7684\u306a\u6a5f\u80fd\u304c\u5fc5\u8981\u306a\u5834\u5408\u3001\n\n\u30fb\uff11\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u3067role\u3092\u8ffd\u52a0\u3057\u3001attempt()\u3067role\u3082\u542b\u3081\u3066\u8a8d\u8a3c\u3059\u308b\n\u30fb\u8907\u6570\u306e\u30c6\u30fc\u30d6\u30eb\u3067\u3001identifier\u3068\u306a\u308b\u30ab\u30e9\u30e0\u306e\u5024\u3092\u91cd\u8907\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\n\u30fbSession\u306e\u66f8\u304d\u8fbc\u307f\u3001\u8aad\u307f\u8fbc\u307f\u3092\u5de5\u592b\u3057identifier\u306e\u91cd\u8907\u3092\u9632\u3050\uff08Guard\u3092\u62e1\u5f35\uff1f\uff09\n\n\u3067\u5bfe\u5fdc\u304b\u306a\u3002\u6b63\u76f4\u3001\u3042\u307e\u308a\u8907\u96d1\u306b\u306a\u3063\u3066\u304f\u308b\u3068\u3001\u6bce\u5ea6\u304a\u306a\u3058\u307f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u610f\u5473\u304c\u7121\u3044\u306a\u3042\u3002\n\n###\u4e0b\u6e96\u5099\n\n####administrators\u30c6\u30fc\u30d6\u30eb\u306e\u6e96\u5099\n\nmigration\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n```bash\nphp artisan make:migration create_administrators_table --table=administrators\n```\n\n\u306a\u3069\u3068\u3059\u308b\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001administrator_id\u306f\u3001string\u306b\u3057\u3066\u3001admin_\u30d7\u30ea\u30d5\u30a3\u30c3\u30af+uniqid()\u3067\u751f\u6210\u3059\u308b\u3053\u3068\u306b\u3059\u308b\u3002\u306a\u3093\u304b\u91c8\u7136\u3068\u3057\u306a\u3044\u3002\n\ndatabase/migrations/XXXXX_create_administrators_table.php\n\n```php\n<?php\n\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nclass CreateAdministratorsTable extends Migration {\n\n\t/**\n\t * Run the migrations.\n\t *\n\t * @return void\n\t */\n\tpublic function up()\n\t{\n\t\tSchema::create('administrators', function(Blueprint $table)\n\t\t{\n\t\t\t//\n\t\t\t$table->increments('id');\n\t\t\t$table->string('administrators_id',128)->unique(\"admin_\");\n\t\t\t$table->string('name');\n\t\t\t$table->string('email')->unique();\n\t\t\t$table->string('password',60);\n\t\t\t$table->rememberToken();\n\t\t\t$table->timestamps();\n\t\t});\n\t}\n\n\t/**\n\t * Reverse the migrations.\n\t *\n\t * @return void\n\t */\n\tpublic function down()\n\t{\n\t\tSchema::drop('administrators');\n\t}\n\n}\n\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3002\n\n```bash\nphp artisan migrate\n```\n\n\u3067\u3001users\u30c6\u30fc\u30d6\u30eb\u3082\u4e00\u7dd2\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n####\u30c7\u30fc\u30bf\u306e\u6e96\u5099\n\nusers, administrators\u306b\u4e88\u3081\u30e6\u30fc\u30b6\u30fc\u3092\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002form\u3092\u4f5c\u3063\u3066\u3082\u3044\u3044\u3057\u3001insert\u3057\u3066\u3082\u3044\u3044\u3067\u3059\u304c\u3001\u6298\u89d2\u306a\u306eseeder\u3092\u5229\u7528\u3057\u307e\u3059\u3002\nseeder\u3092\u4f5c\u308bartisan\u30b3\u30e1\u30f3\u30c9\u306f\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u624b\u66f8\u304d\u3057\u307e\u3059\uff08\u306a\u3093\u3067\uff1f\uff09\n\u306a\u304a\u3001\u3053\u3053\u3067\u306f\u3001Eloquent ORM\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001Administrator.php\uff08\u30e2\u30c7\u30eb\uff09\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\u3002\n\u3044\u308d\u3044\u308d\u66f8\u3044\u3066\u3044\u308b\u304c\u3001\u57fa\u672c\u3001User.php\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3001class\u540d\u3068$table\u3060\u3051\u5909\u3048\u308c\u3070\u3044\u3044\u3068\u601d\u3046\u3002\n\napp/Administrators.php\n\n```php\n<?php namespace App;\n\nuse Illuminate\\Auth\\Authenticatable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Auth\\Passwords\\CanResetPassword;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as AuthenticatableContract;\nuse Illuminate\\Contracts\\Auth\\CanResetPassword as CanResetPasswordContract;\n\nclass Administrator extends Model implements AuthenticatableContract, CanResetPasswordContract {\n\n\tuse Authenticatable, CanResetPassword;\n\n\tprotected $table = 'administrators';\n\n\tprotected $fillable = ['name', 'email', 'password'];\n\n\tprotected $hidden = ['password', 'remember_token'];\n\n}\n\n```\n\nseeder\u306f\u3053\u3093\u306a\u611f\u3058\u3002hoge\u3068\u3044\u3046\uff11\u4eba\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u8db3\u3057\u3066\u304a\u304f\u3002\u3068\u308a\u3042\u3048\u305aid\u306funiqid()\u3067\u751f\u6210\u3002\ndatabase/seeder/AdministratorTableSeeder\n\n\n```php\n<?php\n\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse App\\Administrator;\n\nclass AdministratorTableSeeder extends Seeder {\n\n\t/**\n\t * Run the database seeds.\n\t *\n\t * @return void\n\t */\n\tpublic function run()\n\t{\n\t\t\n\t\t//DB::table('administrators')->delete();\n\t\tAdministrator::truncate();\n\n\t\tAdministrator::insert([\n\t\t\t[\n\t\t\t\t'administrator_id'=>uniqid();\n\t\t\t\t'name'=>'hoge',\n\t\t\t\t'email'=>'hoge@test.com',\n\t\t\t\t'password'=>Hash::make('hoge')\n\t\t\t]\n\t\t]);\n\n\t}\n\n}\n\n```\n\nseeder\u306f\u3001\n\n```bash\nphp artisan db:seed\n```\n\n\u3067\u5b9f\u884c\u3055\u308c\u308b\u304c\u3001\u3053\u306e\u6642\u5b9f\u884c\u3055\u308c\u308b\u306e\u306f\u3001DatabaseSeeder.php\u306e\u307f\u3067\u3042\u308b\u3002\u305d\u306e\u305f\u3081\u3001DatabaseSeeder.php\u306bAdministratorTableSeeder.php\u304c\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u8a18\u8ff0\u3059\u308b\u3002\n\nDatabaseSeeder.php\n\n```php\n<?php\n\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass DatabaseSeeder extends Seeder {\n\n\t/**\n\t * Run the database seeds.\n\t *\n\t * @return void\n\t */\n\tpublic function run()\n\t{\n\t\tModel::unguard();\n\n\t\t//$this->call('UserTableSeeder');\n\t\t$this->call('AdministratorTableSeeder');\n\t}\n\n}\n```\n\n\u30d1\u30ef\u30ef\u30fc\u30c9\u306f\u308f\u3059\u308c\u305a\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u3067\u306a\u3044\u3068\u8a8d\u8a3c\u306e\u6642\u306b\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002\n\n###\u3067\u306f\u3001\u672c\u756a\n\n\u3084\u3063\u3068\u4e0b\u6e96\u5099\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u30ab\u30b9\u30bf\u30e0\u30c9\u30e9\u30a4\u30d0\u3092\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u306f\u3069\u3053\u306b\u4f5c\u3063\u3066\u3082\u3044\u3044\u306e\u3067\u3001\u3068\u308a\u3042\u3048app\u76f4\u4e0b\u306b\u3064\u304f\u308a\u307e\u3059\u3002\n\u3044\u308d\u3044\u308d\u66f8\u3044\u3066\u307e\u3059\u304c\u3001\u5185\u5bb9\u306f\u307b\u307cIlluminate/Auth/DatabaseUserProvider.php\u304b\u3089\u306e\u30d1\u30af\u30ea\u3002\n\n\u30fbconnection\u3084table\u3001hasher\u7b49\u3092\u9759\u7684\u306b\u66f8\u304d\u306a\u304a\u3057\u3002\n\u30fbGenericUser\u3092\u8fd4\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3092\u3001GenericUser\u3092\u7d99\u627f\u3057\u305fAdminUser\u3092\u8fd4\u3059\u3002\n\u30fbid\u3092\u898b\u3066\u3044\u308b\u3068\u3053\u308d\u3092\u3001administrator_id\u3092\u898b\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n\u3068\u3044\u3046\u611f\u3058\u3002\n\n####\u30ab\u30b9\u30bf\u30e0User\n\n```php\n<?php namespace App;\n\nuse Illuminate\\Auth\\GenericUser;\n\nclass AdminUser extends GenericUser\n{\n\n\tpublic function getAuthIdentifier(){\n\t\treturn $this->attributes['administrator_id'];\n\t}\n\t\n}\n```\n\n####\u30ab\u30b9\u30bf\u30e0UserProvider\u306e\u5b9f\u88c5\n\n\napp/AdministratorProvider.php\n\n```php\n<?php namespace App;\n\n// use Illuminate\\Auth\\UserInterface;\n// use Illuminate\\Auth\\UserProviderInterface;\n\nuse DB;\nuse Hash;\nuse Log;\n\nuse Illuminate\\Contracts\\Auth\\UserProvider;\nuse Illuminate\\Database\\ConnectionInterface;\nuse Illuminate\\Contracts\\Hashing\\Hasher as HasherContract;\nuse Illuminate\\Contracts\\Auth\\Authenticatable as UserContract;\nuse Illuminate\\Auth\\GenericUser;\n\nclass AdministratorProvider implements UserProvider\n{\n\n\t//table\n\tprotected $table = \"administrators\";\n\n\t/**\n\t * Retrieve a user by their unique identifier.\n\t *\n\t * @param  mixed  $identifier\n\t * @return \\Illuminate\\Contracts\\Auth\\Authenticatable|null\n\t */\n\tpublic function retrieveById($identifier)\n\t{\n\t\t//$user = DB::table($this->table)->find($identifier);\n\n\t\t$user = DB::table($this->table)\n\t\t\t\t\t\t\t     ->where('administrator_id',$identifier)\n\t\t\t\t\t\t\t     ->first();\n\n\t\treturn $this->getGenericUser($user);\n\t}\n\n\t/**\n\t * Retrieve a user by by their unique identifier and \"remember me\" token.\n\t *\n\t * @param  mixed   $identifier\n\t * @param  string  $token\n\t * @return \\Illuminate\\Contracts\\Auth\\Authenticatable|null\n\t */\n\tpublic function retrieveByToken($identifier, $token)\n\t{\n\t\t$user = DB::table($this->table)\n                                ->where('administrator_id', $identifier)\n                                ->where('remember_token', $token)\n                                ->first();\n\n\t\treturn $this->getGenericUser($user);\n\t}\n\n\t/**\n\t * Update the \"remember me\" token for the given user in storage.\n\t *\n\t * @param  \\Illuminate\\Contracts\\Auth\\Authenticatable  $user\n\t * @param  string  $token\n\t * @return void\n\t */\n\tpublic function updateRememberToken(UserContract $user, $token)\n\t{\n\t\tDB::table($this->table)\n                            ->where('administrator_id', $user->getAuthIdentifier())\n                            ->update(['remember_token' => $token]);\n\t}\n\n\t/**\n\t * Retrieve a user by the given credentials.\n\t *\n\t * @param  array  $credentials\n\t * @return \\Illuminate\\Contracts\\Auth\\Authenticatable|null\n\t */\n\tpublic function retrieveByCredentials(array $credentials)\n\t{\n\t\t// First we will add each credential element to the query as a where clause.\n\t\t// Then we can execute the query and, if we found a user, return it in a\n\t\t// generic \"user\" object that will be utilized by the Guard instances.\n\t\t$query = DB::table($this->table);\n\n\t\tforeach ($credentials as $key => $value)\n\t\t{\n\t\t\tif ( ! str_contains($key, 'password'))\n\t\t\t{\n\t\t\t\t$query->where($key, $value);\n\t\t\t}\n\t\t}\n\n\t\t// Now we are ready to execute the query to see if we have an user matching\n\t\t// the given credentials. If not, we will just return nulls and indicate\n\t\t// that there are no matching users for these given credential arrays.\n\t\t$user = $query->first();\n\n\t\treturn $this->getGenericUser($user);\n\t}\n\n\t/**\n\t * Get the generic user.\n\t *\n\t * @param  mixed  $user\n\t * @return \\Illuminate\\Auth\\GenericUser|null\n\t */\n\tprotected function getGenericUser($user)\n\t{\n\t\tif ($user !== null)\n\t\t{\n\t\t\t//return new GenericUser((array) $user);\n\t\t\treturn new AdminUser((array)$user);\n\t\t}\n\t}\n\n\t/**\n\t * Validate a user against the given credentials.\n\t *\n\t * @param  \\Illuminate\\Contracts\\Auth\\Authenticatable  $user\n\t * @param  array  $credentials\n\t * @return bool\n\t */\n\tpublic function validateCredentials(UserContract $user, array $credentials)\n\t{\n\t\t$plain = $credentials['password'];\n\n\t\t// Log::debug('$plain='.$plain);\n\t\t// Log::debug('hash(plain)='.Hash::make($plain));\n\t\t// Log::debug('getAuthPass='.$user->getAuthPassword());\n\n\t\treturn Hash::check($plain,$user->getAuthPassword());\n\n\t}\n\n}\n```\n\n\u79c1\u306f\u3001DatabaseUserProvider.php\u304b\u3089\u30b3\u30d4\u30fc\u3057\u307e\u3057\u305f\u304c\u3001\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\uff08\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\uff09\u3059\u308c\u3070OK\u3067\u3059\u3002\nretrieveByCredentials(array $credentials)\u304cattempt()\u304b\u3089\u306e\u914d\u5217\u3092\u53d7\u53d6\u3001password\u4ee5\u5916(emai,name)\u3092\u4e00\u81f4\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u3092\u63a2\u3057\u3066\u8fd4\u3057\u3001validateCredentials(UserContract $user, array credentials)\u3067\u3001\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u4e00\u81f4\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n#####\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5e73\u6587\u306b\u3057\u305f\u3044\u5834\u5408\n\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5e73\u6587\u306b\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u4fdd\u5b58\u6642\u306b\u30cf\u30c3\u30b7\u30e5\u5316\u305b\u305a\u3001\u3053\u3053\u3067\u3001if($plain == $user->getAuthPassword())\u3068\u3059\u308c\u3070\u3044\u3044\u3068\u601d\u3044\u307e\u3059\uff08\u8a66\u3057\u3066\u307e\u305b\u3093\u304c\uff09\u3002\n\n####\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u3067\u306e\u8a18\u8ff0\n\nLaravel5\u304b\u3089\u3001global.php\u304c\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u72ec\u81ea\u306b\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u3092\u4f5c\u6210\u3001\u767b\u9332\u3059\u308b\u304b\u3001\u65e2\u306b\u767b\u9332\u6e08\u307f\u306e\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u306b\u8a18\u8ff0\u3059\u308b\u304b\u3069\u3061\u3089\u304b\u3067\u3059\u3002\u3081\u3093\u3069\u3044\u306e\u3067\u3001app/Providers/AppServiceProvider.php\u306b\u5fc5\u8981\u306a\u8a18\u8ff0\u3092\u884c\u3044\u307e\u3059\u3002\n\u8a18\u8ff0\u3057\u305f\u306e\u306fboot()\u306e\u90e8\u5206\u3067\u3059\uff08register\u306e\u90e8\u5206\u306f\u65e2\u5b58\uff09\u3002\n\napp/Provider/AppServiceProvider.php\n\n```php\n<?php namespace App\\Providers;\n\nuse Illuminate\\Support\\ServiceProvider;\nuse App\\AdministratorProvider;\nuse Illuminate\\Auth\\Guard;\n\nclass AppServiceProvider extends ServiceProvider {\n\n\t/**\n\t * Bootstrap any application services.\n\t *\n\t * @return void\n\t */\n\tpublic function boot()\n\t{\n\t\t$this->app['auth']->extend('admin',function($app){\n\t\t\treturn new Guard(new AdministratorProvider,$app['session.store']);\n\t\t});\n\t}\n\n\t/**\n\t * Register any application services.\n\t *\n\t * This service provider is a great spot to register your various container\n\t * bindings with the application. As you can see, we are registering our\n\t * \"Registrar\" implementation here. You can add your own bindings too!\n\t *\n\t * @return void\n\t */\n\tpublic function register()\n\t{\n\t\t$this->app->bind(\n\t\t\t'Illuminate\\Contracts\\Auth\\Registrar',\n\t\t\t'App\\Services\\Registrar'\n\t\t);\n\t}\n\n}\n```\n\n###\u52d5\u4f5c\u306e\u78ba\u8a8d\n\n\u3053\u308c\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n####\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u53d6\u5f97\n\n\u30eb\u30fc\u30c8\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u306b\u76f4\u63a5\u8a18\u8ff0\u3057\u3066\u52d5\u4f5c\u30c1\u30a7\u30c3\u30af\u3002\u304a\u306a\u3058\u307fAuth::*\u30d5\u30a1\u30b5\u30fc\u30c9\u306bAuth::driver('admin')\u3092\u3064\u3051\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```php\nRoute::get('hoge',function(){\n\n\t//Auth::attempt(['email'=>'foo@test.com','password'=>'foo']);\n\t\n\t//\u8a8d\u8a3c\uff08\u30ed\u30b0\u30a4\u30f3\uff09\n\tAuth::driver('admin')->attempt(['email'=>'hoge@test.com','password'=>'hoge']);\n\t\n\t//\u60c5\u5831\u53d6\u5f97\n\t$admin = Auth::driver('admin')->user();\n\n\t//\u30ed\u30b0\u30a4\u30f3\u3093\u3067\u304d\u3066\u306a\u3044\u3068$user\u304c\u53d6\u5f97\u3067\u304d\u306a\u3044\u306e\u3067\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306f\u305a\n\treturn $admin->name;\n\n});\n```\n\n####\u30ed\u30b0\u30a2\u30a6\u30c8\n\n```php\nRoute::get('logout',function(){\n\tAuth::driver('admin')->logout();\n});\n```\n\n\n###Middleware\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u308b\n\n\u6298\u89d2\u306a\u306e\u3067\u3001\u3053\u308c\u3089\u306e\u30c9\u30e9\u30a4\u30d0\u3092\u5229\u7528\u3059\u308b\u30df\u30c9\u30eb\u30a6\u30a8\u30a2\u3092\u8a18\u8ff0\u3057\u3066\u307f\u307e\u3059\u3002/admin\u4ee5\u4e0b\u306fadmin\u6a29\u9650\u304c\u5fc5\u8981\u3068\u3044\u3046\u611f\u3058\u306b\u3057\u305f\u3044\u3002\n\u3072\u306a\u5f62\u306f\n\n```bash\nphp artisan make:middleware AdminAuthenticate\n```\n\u3067\u4f5c\u308c\u307e\u3059\u3002\n\n```php\n<?php namespace App\\Http\\Middleware;\n\nuse Closure;\n\nclass AdminAuthenticate {\n\n\t/**\n\t * Handle an incoming request.\n\t *\n\t * @param  \\Illuminate\\Http\\Request  $request\n\t * @param  \\Closure  $next\n\t * @return mixed\n\t */\n\tpublic function handle($request, Closure $next)\n\t{\n\n\t\tif(\\Auth::driver('admin')->check()){\n\n\t\t\t//Do nothing.\n\t\t\t\n\t\t}else{\n\n\t\t\treturn \"go to admin login page\";\n\n\t\t}\n\n\t\treturn $next($request);\n\t}\n\n}\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3002\u3053\u308c\u3092\u3001Routing\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001Kernel.php\u306e$routeMiddleware\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n\n```php\n\t/**\n\t * The application's route middleware.\n\t *\n\t * @var array\n\t */\n\tprotected $routeMiddleware = [\n\t\t'auth' => 'App\\Http\\Middleware\\Authenticate',\n\t\t'auth.basic' => 'Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth',\n\t\t'guest' => 'App\\Http\\Middleware\\RedirectIfAuthenticated',\n\t\t'admin'=>'App\\Http\\Middleware\\AdminAuthenticate',\n\t\t'user'=>'App\\Http\\Middleware\\UserAuthenticate',\n\t];\n```\n\n\u3053\u308c\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3001Routing\u3067\u3001\n\n```php\nRoute::get('admin',['middleware'=>'admin',function(){\n\treturn \"/admin\";\n}]);\n\nRoute::get('admin/tools',['middleware'=>'admin',function(){\n\treturn \"/admin/tools\";\n}]);\n```\n\n\u306a\u3069\u3068\u3057\u307e\u3059\u3002\u30eb\u30fc\u30c8\u304c\u591a\u3044\u5834\u5408\u306fgroup\u3092\u5229\u7528\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u4e0b\u8a18\u306f\u4e0a\u8a18\u3068\u540c\u7fa9\u3002\n\n```php\nRoute::group(['prefix'=>'admin','middleware'=>'admin'],function(){\n\n\tRoute::get('/',function(){\n\t\treturn \"/admin\";\n\t});\n\t\n\tRoute::get('tools',function(){\n\t\treturn \"/admin/tools\";\n\t});\n\t\n});\n```\n\nadmin/*\u307f\u305f\u3044\u306a\u306e\u306f\u306a\u3044\u3093\u304b\u306d\u3002\n\n###\u30e1\u30e2\n\n\u5168\u3066\u306emigration\u3092\u3084\u308a\u76f4\u3059\u306b\u306f\u3001\n\n```bash\nphp artisan migration:refresh\n```\n\n\u3068\u3059\u308b\u3002 --seed\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3068seed\u3082\u3084\u308a\u306a\u304a\u3057\u3066\u304f\u308c\u308b\u3068\u3044\u3046\u8a18\u8ff0\u3092\u898b\u3064\u3051\u305f\u3051\u3069\u3001\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u3042\u3068\u3001migration\u30d5\u30a1\u30a4\u30eb\u3092\u624b\u52d5\u3067\u524a\u9664\u3057\u305f\u308a\u3059\u308b\u3068\u3001file not found\u7684\u306a\u30a8\u30e9\u30fc\u304c\u3067\u307e\u3059\u3002\u3069\u3046\u3084\u3089autoloader\u304c\u8a8d\u8b58\u3057\u3066\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n```bash\ncomposer dump-autoload\n```\n\u3068\u3059\u308b\u304b\u3001\n\n```bash\nphp artisan optimize\n```\n\u3068\u3059\u308b\u3002\n", "tags": ["laravel5"]}