{"context": " More than 1 year has passed since last update.\u5168\u7136\u77e5\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001template\u5f15\u6570\u306b\u4e00\u90e8\u306e\u30dd\u30a4\u30f3\u30bf(\u53c2\u7167)\u304c\u5165\u308c\u3089\u308c\u308b\u305d\u3046\u3067\u3059\u3002\u3044\u307e\u3044\u3061\u4f7f\u3044\u65b9\u306f\u5206\u304b\u308a\u307e\u305b\u3093\u3002\n\n\u304a\u3055\u3089\u3044\nC++\u306etemplate\u3068\u8a00\u3048\u3070\u666e\u901a\u3053\u3093\u306a\u611f\u3058\u3067\u4f55\u3089\u304b\u306e\u578b(type)\u304c\u5165\u308a\u307e\u3059\u3002\ntemplate<typename T> void hoge(T& t){ std::cout << t << std::endl; }\n\n\u3061\u3087\u3063\u3068\u8a73\u3057\u3044\u4eba\u306a\u3089\u6574\u6570(integral or enumeration type)\u304c\u5165\u308c\u3089\u308c\u308b\u3053\u3068\u3082\u77e5\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u968e\u4e57\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u8a08\u7b97\u3059\u308b\u4f8b\u304c\u3044\u308d\u3093\u306a\u3068\u3053\u308d\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\ntemplate<int N> int intTpl(){ return N; }\n\ntypedef enum{\n    FOO,\n    BAR,\n} FooBar;\ntemplate<FooBar fb> bool enumTpl(){ return fb == FOO; }\n\n\u3061\u306a\u307f\u306b\u8131\u7dda\u3067\u3059\u304c\u3001\u968e\u4e57\u306a\u3069\u306e\"\u8a08\u7b97\"\u306e\u305f\u3081\u306btemplate\u3092\u4f7f\u3046\u306e\u306f\u53ef\u8aad\u6027\u306e\u9762\u3067\u3084\u308a\u904e\u304e\u3068\u3044\u3046\u610f\u898b\u304c\u6700\u8fd1\u3067\u306f\u51fa\u59cb\u3081\u3066\u3044\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u8a08\u7b97\u3092\u6e08\u307e\u3059\u65b9\u6cd5\u3068\u3057\u3066\u306fC++11\u4ee5\u964dconstexpr\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u3066\u3001\u305d\u3061\u3089\u306e\u65b9\u304c\u7d20\u76f4\u306b\u66f8\u3051\u307e\u3059\u3002\u7279\u306bC++14\u306a\u3089\u307b\u307c\u666e\u901a\u306e(=\u5b9f\u884c\u6642\u306e)\u66f8\u304d\u65b9\u3068\u540c\u3058\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u8a08\u7b97\u3092\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n\n\u30dd\u30a4\u30f3\u30bf\u3092template\u5f15\u6570\u306b\n\u3055\u3066\u672c\u984c\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4e00\u90e8\u306e\u30dd\u30a4\u30f3\u30bf(\u53c2\u7167)\u3092template\u5f15\u6570\u306b\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\"\u4e00\u90e8\u306e\"\u3068\u3044\u3046\u6761\u4ef6\u306f\u3001\u7c21\u5358\u306b\u8a00\u3048\u3070\u300c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3067\u304d\u308b\u3082\u306e=\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a2\u30c9\u30ec\u30b9\u304c\u9759\u7684\u306b\u6c7a\u307e\u308b\u3082\u306e\u300d\u3068\u306a\u308b\u3088\u3046\u3067\u3059\u3002\ntemplate<double* X> void dptr(){ std::cout << \"value: \" << *X << std::endl; }\n\ndouble global_x = 0.3;\n\nvoid test(){\n    double local_x = 0.3;\n\n    dptr<&global_x>();\n//  dptr<&local_x>(); // error\n}\n\n\u30d6\u30ed\u30c3\u30af\u5185\u306e\u30dd\u30a4\u30f3\u30bf\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u70b9\u3067\u306f\u30a2\u30c9\u30ec\u30b9\u304c\u6c7a\u307e\u3089\u306a\u3044\u306e\u3067template\u95a2\u6570\u306e\u5c55\u958b\u6642\u306b\u30b3\u30fc\u30c9\u751f\u6210\u304c\u3067\u304d\u305a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3067\u3059\u3002\u4e00\u65b9\u5927\u57df\u306b\u51fa\u3057\u3066\u3044\u308b\u5909\u6570\u306f\u30a2\u30c9\u30ec\u30b9\u304c\u6c7a\u307e\u308b\u306e\u3067OK\u3067\u3059\u3002\n\u3067\u306f\u3053\u3093\u306a\u3082\u306e\u4f55\u306b\u4f7f\u3046\u304b\u3068\u3044\u3046\u3068\u3001\u3069\u3046\u3084\u3089\u95a2\u6570\u306e\u30bb\u30c3\u30c8\u3002\ntypedef void (*FuncA)(int i, int j);\n\ntemplate<FuncA F>\nstruct FuncTpl{\n    static void call(int i, int j) { (*F)(i, j); }\n};\n\nvoid funcA(int i, int j){ std::cout << \"funcA\" << std::endl; }\nvoid funcB(int i)       { std::cout << \"funcB\" << std::endl; }\n\nvoid test(){\n    FuncTpl<funcA>::call(2, 3);\n//  FuncTpl<funcB>::call(2, 3); // error\n}\n\n\u3042\u307e\u308a\u3044\u3044\u4f8b\u304c\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u7121\u610f\u5473\u306a\u4f8b\u3067\u3059\u304c\u3001\u304a\u305d\u3089\u304fCRTP\u3084Type Erasure\u3068\u4f3c\u305f\u52b9\u679c\u3092\u767a\u63ee\u3059\u308b\u3088\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\u2026\u3068\u601d\u3063\u305f\u3051\u3069\u30a2\u30c9\u30ec\u30b9\u304c\u5f15\u3051\u308b\u304b\u3069\u3046\u304b\u3092\u541f\u5473\u3059\u308b\u3063\u3066\u3053\u3068\u306finline\u5c55\u958b\u306f\u8d77\u304d\u306a\u3044\u3093\u3067\u3057\u3087\u3046\u304b\u306d\u3002\u3053\u306e\u66f8\u304d\u65b9\u304c\u300c\u4e00\u756a\u66f8\u304d\u3084\u3059\u3044\u300d\u304b\u300c\u4e00\u756a\u65e9\u3044\u300d\u3068\u3044\u3046\u4f8b\u304c\u898b\u3064\u304b\u308c\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3002\n\u304a\u307e\u3051\u3067const char*\u306b\u95a2\u3057\u3066\u306f\u3069\u3046\u306a\u308b\u306e\u304b\u3092\u8a66\u3057\u307e\u3057\u305f\u304c\u3001\u3042\u3093\u307e\u308a\u671f\u5f85\u901a\u308a\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\ntemplate<const char* Str> void print(){\n    std::cout << Str << std::endl;\n}\n\nconst char  hw_obj[] = \"Hello World\";\nconst char* hw_ptr   = \"Hello World\";\n\nvoid test(){\n//  print<\"const char\">(); // error\n    print<hw_obj>(); // needs C++11\n//  print<hw_ptr>(); // error\n}\n\n\u5168\u7136\u77e5\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001template\u5f15\u6570\u306b\u4e00\u90e8\u306e\u30dd\u30a4\u30f3\u30bf(\u53c2\u7167)\u304c\u5165\u308c\u3089\u308c\u308b\u305d\u3046\u3067\u3059\u3002\u3044\u307e\u3044\u3061\u4f7f\u3044\u65b9\u306f\u5206\u304b\u308a\u307e\u305b\u3093\u3002\n\n# \u304a\u3055\u3089\u3044\n\nC++\u306etemplate\u3068\u8a00\u3048\u3070\u666e\u901a\u3053\u3093\u306a\u611f\u3058\u3067\b\u4f55\u3089\u304b\u306e\u578b(type)\u304c\u5165\u308a\u307e\u3059\u3002\n\n```cpp\ntemplate<typename T> void hoge(T& t){ std::cout << t << std::endl; }\n```\n\n\u3061\u3087\u3063\u3068\u8a73\u3057\u3044\u4eba\u306a\u3089\u6574\u6570(integral or enumeration type)\u304c\u5165\u308c\u3089\u308c\u308b\u001c\u3053\u3068\u3082\u77e5\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u968e\u4e57\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u8a08\u7b97\u3059\u308b\u4f8b\u304c\u3044\u308d\u3093\u306a\u3068\u3053\u308d\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u001f\n\n```cpp\ntemplate<int N> int intTpl(){ return N; }\n\ntypedef enum{\n\tFOO,\n\tBAR,\n} FooBar;\ntemplate<FooBar fb> bool enumTpl(){ return fb == FOO; }\n```\n\n\u3061\u306a\u307f\u306b\u8131\u7dda\u3067\u3059\u304c\u3001\u968e\u4e57\u306a\u3069\u306e\"\u8a08\u7b97\"\u306e\u305f\u3081\u306btemplate\u3092\u4f7f\u3046\u306e\u306f\u53ef\u8aad\u6027\u306e\u9762\u3067\u001d\u3084\u308a\u904e\u304e\u3068\u3044\b\u3046\u610f\u898b\u304c\u6700\u8fd1\u3067\u306f\u51fa\u59cb\u3081\u3066\u3044\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u8a08\u7b97\u3092\u6e08\u307e\u3059\u65b9\u6cd5\u3068\u3057\u3066\u306fC++11\u4ee5\u964dconstexpr\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u3066\u3001\u305d\u3061\u3089\u306e\u65b9\u304c\u7d20\u76f4\u306b\u66f8\u3051\u307e\u3059\u3002\u7279\u306bC++14\u306a\u3089\u307b\u307c\b\u666e\u901a\u306e(=\u5b9f\u884c\u6642\u306e)\u66f8\u304d\u65b9\u3068\u540c\u3058\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u8a08\u7b97\u3092\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\u001c\n# \u30dd\u30a4\u30f3\u30bf\u3092template\u5f15\u6570\u306b\n\n\b\u3055\u3066\u672c\u984c\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4e00\u90e8\u306e\u30dd\u30a4\u30f3\u30bf(\u53c2\u7167)\u3092template\u5f15\u6570\u306b\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\"\u4e00\u90e8\u306e\"\u3068\u3044\u3046\u6761\u4ef6\u306f\u3001\u7c21\u5358\u306b\u8a00\u3048\u3070\u300c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3067\u304d\u308b\u3082\u306e=\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a2\u30c9\u30ec\u30b9\u304c\u9759\u7684\u306b\u6c7a\u307e\u308b\b\u3082\u306e\u300d\u3068\u306a\u308b\u3088\u3046\u3067\u3059\u3002\u001f\n\n```cpp\ntemplate<double* X> void dptr(){ std::cout << \"value: \" << *X << std::endl; }\n\ndouble global_x = 0.3;\n\nvoid test(){\n\tdouble local_x = 0.3;\n\n\tdptr<&global_x>();\n//\tdptr<&local_x>(); // error\n}\n```\n\n\u30d6\u30ed\u30c3\u30af\u5185\u306e\u30dd\u30a4\u30f3\u30bf\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u70b9\u3067\u306f\u30a2\u30c9\u30ec\u30b9\u304c\u6c7a\u307e\u3089\u306a\u3044\u306e\u3067template\u95a2\u6570\u306e\u5c55\u958b\u6642\b\u306b\u30b3\u30fc\u30c9\u751f\u6210\u304c\u3067\u304d\u305a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3067\u3059\u3002\u4e00\u65b9\u5927\u57df\u306b\u51fa\u3057\u3066\u3044\u308b\b\u5909\u6570\u306f\u30a2\u30c9\u30ec\u30b9\u304c\u6c7a\u307e\u308b\u306e\u3067OK\u3067\u3059\u3002\n\n\u3067\u306f\u3053\u3093\u306a\u3082\u306e\u4f55\u306b\b\u4f7f\u3046\u304b\u3068\u3044\u3046\u3068\u3001\u3069\u3046\u3084\u3089\u95a2\u6570\u306e\b\u30bb\u30c3\u30c8\u001c\u3002\n\n```cpp\ntypedef void (*FuncA)(int i, int j);\n\ntemplate<FuncA F>\nstruct FuncTpl{\n\tstatic void call(int i, int j) { (*F)(i, j); }\n};\n\nvoid funcA(int i, int j){ std::cout << \"funcA\" << std::endl; }\nvoid funcB(int i)       { std::cout << \"funcB\" << std::endl; }\n\nvoid test(){\n\tFuncTpl<funcA>::call(2, 3);\n//\tFuncTpl<funcB>::call(2, 3); // error\n}\n```\n\n\u3042\u307e\u308a\u3044\u3044\u4f8b\u304c\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u7121\u610f\u5473\u306a\u4f8b\u3067\u3059\u304c\u3001\b\u304a\u305d\u3089\u304fCRTP\u3084Type Erasure\u3068\u4f3c\u305f\u52b9\u679c\u3092\u767a\u63ee\u3059\u308b\u3088\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\u2026\u3068\u601d\u3063\u305f\u3051\u3069\u30a2\u30c9\u30ec\u30b9\u304c\u5f15\u3051\u308b\u304b\u3069\u3046\u304b\u3092\u541f\u5473\u3059\u308b\u3063\u3066\u3053\u3068\u306finline\u5c55\u958b\u306f\u8d77\u304d\u306a\u3044\u3093\u3067\u3057\u3087\u3046\u304b\u306d\u3002\u3053\u306e\u66f8\u304d\u65b9\u304c\u300c\u4e00\u756a\u66f8\u304d\u3084\u3059\u3044\u001c\u300d\u304b\u300c\u4e00\u756a\u65e9\u3044\u300d\u3068\u3044\u3046\u4f8b\u304c\u898b\u3064\u304b\u308c\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3002\n\n\u304a\u307e\u3051\u3067const char*\u306b\u95a2\u3057\u3066\u306f\u3069\u3046\u306a\u308b\u306e\u304b\u3092\u8a66\u3057\u307e\u3057\u305f\u304c\u3001\u3042\u3093\u307e\u308a\u671f\u5f85\u901a\u308a\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n```cpp\ntemplate<const char* Str> void print(){\n\tstd::cout << Str << std::endl;\n}\n\nconst char  hw_obj[] = \"Hello World\";\nconst char* hw_ptr   = \"Hello World\";\n\nvoid test(){\n//\tprint<\"const char\">(); // error\n\tprint<hw_obj>(); // needs C++11\n//\tprint<hw_ptr>(); // error\n}\n```\n", "tags": ["C++", "template"]}