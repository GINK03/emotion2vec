{"tags": ["SketchUp", "Ruby"], "context": " More than 1 year has passed since last update.\u6700\u8fd1\u5bb6\u306e\u68da\u3092\u5168\u90e8\u81ea\u4f5c\u3057\u3066\u308b\u3093\u3067\u3059\u304c\u3001SketchUp\u30673D\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\u307e\u3067\u306f\u697d\u3057\u3044\u3082\u306e\u306e\u3001\u51fa\u6765\u4e0a\u304c\u3063\u305f\u30e2\u30c7\u30eb\u3092\u69cb\u6210\u3059\u308b\u6728\u306e\u5bf8\u6cd5\u3084\u3089\u679a\u6570\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308b\u306e\u304c\u9762\u5012\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u306e\u3067Ruby\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u3061\u306a\u307f\u306bRuby\u3092\u66f8\u3044\u305f\u306e\u306f\u4eba\u751f\u30672\u5ea6\u76ee\u304f\u3089\u3044\u306a\u306e\u3067\u3057\u3087\u3046\u3082\u306a\u3044\u66f8\u304d\u65b9\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u5927\u3067\u3059\u304c\u3001\u3054\u81ea\u7531\u306b\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u3002\nSketchup\u3067\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4f7f\u3044\u65b9\u306f\u672c\u5bb6\u306e\u89e3\u8aac\u30da\u30fc\u30b8\u3092\u898b\u308c\u3070\u5206\u304b\u308a\u307e\u3059\u304c\u30014\u884c\u3067\u307e\u3068\u3081\u308b\u3068\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n rb\u30d5\u30a1\u30a4\u30eb\u3092SketchUp\u6240\u5b9a\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u5165\u308c\u308b\n SketchUp\u3092\u8d77\u52d5\u3057\u3001\u9069\u5f53\u306a.skp\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\n \u30e1\u30cb\u30e5\u30fc\u306e\u30a6\u30a3\u30f3\u30c9\u30a6>Ruby\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u958b\u304f\n rb\u30d5\u30a1\u30a4\u30eb\u306b\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u95a2\u6570\u3092\u30bf\u30a4\u30d7\u3059\u308b(\u4e0b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5834\u5408\u306fcuboidlist\u3068\u30bf\u30a4\u30d7\u3059\u308b)\u3068\u7d50\u679c\u304c\u3082\u3089\u3048\u308b\n\n\n\u30e2\u30c7\u30eb\u5185\u306e\u76f4\u65b9\u4f53\u3092\u30b5\u30a4\u30ba\u6bce\u306b\u96c6\u8a08\u3057\u3066\u8868\u793a\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\ndef cuboidlist\n    model = Sketchup.active_model\n\n  # \u30e2\u30c7\u30eb\u4e2d\u306e\u76f4\u65b9\u4f53\u3092\u518d\u8d77\u7684\u306b\u767a\u898b\u3057\u3066\u7a2e\u985e\u3054\u3068\u306b\u307e\u3068\u3081\u308b \n  printf(\"[finding]\\n\")\n    cuboids = findCuboids(model) # \u30e2\u30c7\u30eb\u4e2d\u306e\u5168\u76f4\u65b9\u4f53\u3092\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\u3059\u308b\n  cuboidSet = {}\n  cuboids.each_with_index do |cuboid, c|\n    printf(\"  cuboid #%02d %s\\n\", c, sizestr(cuboid))\n\n    # \u540c\u4e00\u5f62\u72b6\u3067\u30ab\u30a6\u30f3\u30c8\u3059\u308b\n    if cuboidSet[cuboid] == nil then\n      cuboidSet[cuboid] = 1\n    else\n      cuboidSet[cuboid] += 1\n    end\n    end\n\n    # \u7d50\u679c\u306e\u8868\u793a   \n    printf(\"[summary]\\n\")\n    cuboidSet.each_with_index do |(cuboid, count), c|\n    printf(\"  cuboid #%02d %s * %d\\n\", c, sizestr(cuboid), count)\n    end\n\n    return cuboidSet\nend\n\ndef findCuboids(container)\n  cuboids = []\n\n  # \u73fe\u5728\u306econtainer\u306bface\u304c6\u679a\u3042\u308c\u3070\u3001\u305d\u308c\u304c\u76f4\u65b9\u4f53\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b  \n  cuboid = faces2cuboid(getTypes(container, Sketchup::Face))\n  if cuboid!= nil then\n    cuboids << cuboid\n  end\n\n  # \u73fe\u5728\u306econtainer\u306e\u4e0b\u306bgroup\u304c\u3042\u308c\u3070\u3001\u305d\u308c\u3092\u63a2\u7d22\u3059\u308b\n  getTypes(container, Sketchup::Group).each_with_index do |subgroup, g|\n    cuboids.concat(findCuboids(subgroup))\n  end\n\n  # \u73fe\u5728\u306econtainer\u306e\u4e0b\u306bcomponent\u304c\u3042\u308c\u3070\u3001\u305d\u308c\u3092\u63a2\u7d22\u3059\u308b\n  getTypes(container, Sketchup::ComponentInstance).each_with_index do |cmp, g|\n    cuboids.concat(findCuboids(cmp.definition))\n  end\n\n  return cuboids\nend\n\ndef faces2cuboid(faces)\n  # \u76f4\u65b9\u4f53\u306e\u6761\u4ef6: face\u304c6\u679a, \u5168edge\u306e\u9577\u3055\u306f1or2or3\u901a\u308a\u3067\u3042\u308b\u3053\u3068\n  if faces.length != 6\n    return nil\n  end\n\n  # \u8fba\u3092\u63a2\u7d22\u3057\u3066\u9577\u3055->\u51fa\u73fe\u56de\u6570\u306e\u8f9e\u66f8\u3092\u4f5c\u6210\u3059\u308b\n  # \u3053\u308c\u304c1\u901a\u308a24\u500b = \u7acb\u65b9\u4f53, 2\u901a\u308a8,16\u500b = \u6b63\u65b9\u5f62\u76f4\u65b9\u4f53, 3\u901a\u308a8,8,8\u500b = \u4e00\u822c\u306e\u76f4\u65b9\u4f53\n  edges = {} # \u9577\u3055 -> \u51fa\u73fe\u6570\n  faces.each_with_index do |face, f|\n    face.edges.each_with_index do |edge, e|\n      length = (edge.length * 25.4).round # inch->mili\n      # \u8fba\u9577\u3055\u8f9e\u66f8\u306b\u8ffd\u52a0\u3059\u308b\n      if edges[length] == nil then\n        edges[length] = 1\n      else\n        edges[length] += 1\n      end\n    end\n  end\n\n  if edges.length == 3 then\n    # \u76f4\u65b9\u4f53\u306e3\u8fba\u306e\u9577\u3055\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308b\n    cuboid = []\n    edges.each{|length, count|\n      for num in 0...(count / 8) do\n        cuboid << length\n      end\n    }\n    return cuboid.sort()\n  else\n    return nil\n  end\nend\n\ndef getTypes(container, type)\n  # sketchup\u306econtainer\u304b\u3089\u7279\u5b9a\u30bf\u30a4\u30d7\u306eentity\u3092\u30ea\u30b9\u30c8\u5f62\u5f0f\u3067\u53d6\u308a\u51fa\u3059\n  ret = []\n  for g_ent in container.entities do\n    if g_ent.kind_of?(type) then\n      ret << g_ent\n    end\n  end\n  return ret\nend\n\ndef sizestr(cuboid)\n  return sprintf(\"[%4d, %4d, %4d]\", cuboid[0], cuboid[1], cuboid[2])\nend\n\n\n\u5b9f\u884c\u4f8b\n\u4f8b\u3048\u3070\u3053\u3093\u306a\u611f\u3058\u306e\u68da\u306b\u5bfe\u3057\u3066,\n\n\u6700\u7d42\u7684\u306b\u3053\u3093\u306a\u30ea\u30b9\u30c8\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u5f8c\u306f\u3053\u306e\u30ea\u30b9\u30c8\u3092\u3082\u3068\u306b\u6728\u53d6\u308a\u56f3\u307e\u3067\u81ea\u52d5\u3067\u4f5c\u308c\u305f\u3089\u5b8c\u74a7\u306a\u3093\u3067\u3059\u304c\u3001\u305d\u308c\u306f\u672a\u5b8c\u3067\u3059\u3002\n[summary]\n  cuboid #00 [   4,   71,  400] * 26\n  cuboid #01 [  15,   71,  150] * 18\n  cuboid #02 [   4,  158,  400] * 9\n  cuboid #03 [  24,  300,  315] * 3\n  cuboid #04 [  15,   71,  230] * 8\n  cuboid #05 [   4,  238,  400] * 4\n  cuboid #06 [  15,  300,  480] * 3\n\n\n\u6ce8\u610f\u70b9\n\n \u97626\u679a\u3092\u30b0\u30eb\u30fc\u30d7\u5316/\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5316\u3057\u305f\u3082\u306e\u3060\u3051\u3092\u629c\u7c8b\u3057\u307e\u3059\u3002\u4e09\u89d2\u67f1\u306a\u30696\u9762\u3067\u306a\u3044\u3082\u306e\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n \u76f4\u65b9\u4f53\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u306b\u300c\u8fba\u306e\u9577\u3055\u304c1or2or3\u7a2e\u985e\u3060\u3063\u305f\u3089\u76f4\u65b9\u4f53\u300d\u3068\u3044\u3046\u9069\u5f53\u30eb\u30fc\u30eb\u3092\u7528\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u5e73\u884c\u56db\u8fba\u5f62\u306e\u67f1\u306a\u3069\u304c\u3042\u308b\u3068\u305d\u306e\u8fba\u306e\u9577\u3055\u3092\u3082\u3064\u76f4\u65b9\u4f53\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u307e\u3059\u3002\n \u30b0\u30eb\u30fc\u30d7\u3084\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u3057\u305f\u5f8c\u3067\u62e1\u5927\u7e2e\u5c0f\u3092\u3057\u3066\u3044\u308b\u3068\u8868\u793a\u3055\u308c\u308b\u30b5\u30a4\u30ba\u304c\u6b63\u3057\u304f\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u4e00\u5ea6\u30b0\u30eb\u30fc\u30d7\u5316\u3092\u89e3\u9664\u3059\u308b\u306a\u3069\u3057\u3066\u3069\u306e\u9762\u3082\u5f8c\u304b\u3089\u62e1\u5927\u7e2e\u5c0f\u3092\u3055\u308c\u3066\u3044\u306a\u3044\u72b6\u614b\u306b\u3059\u308c\u3070\u6b63\u3057\u3044\u6570\u5024\u304c\u51fa\u307e\u3059\u3002\n \u5358\u4f4d\u306f\u30df\u30ea\u30e1\u30fc\u30c8\u30eb\u3067\u3059(\u5185\u90e8\u30c7\u30fc\u30bf\u304c\u30a4\u30f3\u30c1\u5358\u4f4d\u3063\u307d\u3044\u306e\u3067\u00d725.4\u3057\u3066\u3044\u307e\u3059)\u3002\n\n\n\u66f8\u304d\u63db\u3048\u3066\u30ea\u30ed\u30fc\u30c9\u3059\u308b\u5834\u5408\u306f\n\u4f8b\u3048\u3070\u4e0a\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092test.rb\u3068\u3044\u3046\u540d\u524d\u3067plugin\u30d5\u30a9\u30eb\u30c0\u306b\u5165\u308c\u3066\u3044\u305f\u5834\u5408\u3001SketchUp\u306eRuby\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\nload \"test.rb\"\n\n\u3068\u3059\u308c\u3070\u6700\u65b0\u306e\u72b6\u614b\u3092\u30ea\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\u6700\u8fd1\u5bb6\u306e\u68da\u3092\u5168\u90e8\u81ea\u4f5c\u3057\u3066\u308b\u3093\u3067\u3059\u304c\u3001SketchUp\u30673D\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\u307e\u3067\u306f\u697d\u3057\u3044\u3082\u306e\u306e\u3001\u51fa\u6765\u4e0a\u304c\u3063\u305f\u30e2\u30c7\u30eb\u3092\u69cb\u6210\u3059\u308b\u6728\u306e\u5bf8\u6cd5\u3084\u3089\u679a\u6570\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308b\u306e\u304c\u9762\u5012\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u306e\u3067Ruby\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u3061\u306a\u307f\u306bRuby\u3092\u66f8\u3044\u305f\u306e\u306f\u4eba\u751f\u30672\u5ea6\u76ee\u304f\u3089\u3044\u306a\u306e\u3067\u3057\u3087\u3046\u3082\u306a\u3044\u66f8\u304d\u65b9\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u5927\u3067\u3059\u304c\u3001\u3054\u81ea\u7531\u306b\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u3002\n\nSketchup\u3067\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4f7f\u3044\u65b9\u306f[\u672c\u5bb6\u306e\u89e3\u8aac\u30da\u30fc\u30b8](http://www.sketchup.com/intl/en/developer/docs/tutorial_helloworld)\u3092\u898b\u308c\u3070\u5206\u304b\u308a\u307e\u3059\u304c\u30014\u884c\u3067\u307e\u3068\u3081\u308b\u3068\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n-  rb\u30d5\u30a1\u30a4\u30eb\u3092SketchUp\u6240\u5b9a\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u5165\u308c\u308b\n-  SketchUp\u3092\u8d77\u52d5\u3057\u3001\u9069\u5f53\u306a.skp\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\n-  \u30e1\u30cb\u30e5\u30fc\u306e\u30a6\u30a3\u30f3\u30c9\u30a6>Ruby\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u958b\u304f\n-  rb\u30d5\u30a1\u30a4\u30eb\u306b\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u95a2\u6570\u3092\u30bf\u30a4\u30d7\u3059\u308b(\u4e0b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5834\u5408\u306fcuboidlist\u3068\u30bf\u30a4\u30d7\u3059\u308b)\u3068\u7d50\u679c\u304c\u3082\u3089\u3048\u308b\n\n# \u30e2\u30c7\u30eb\u5185\u306e\u76f4\u65b9\u4f53\u3092\u30b5\u30a4\u30ba\u6bce\u306b\u96c6\u8a08\u3057\u3066\u8868\u793a\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\n\n```rb\ndef cuboidlist\n\tmodel = Sketchup.active_model\n\n  # \u30e2\u30c7\u30eb\u4e2d\u306e\u76f4\u65b9\u4f53\u3092\u518d\u8d77\u7684\u306b\u767a\u898b\u3057\u3066\u7a2e\u985e\u3054\u3068\u306b\u307e\u3068\u3081\u308b \n  printf(\"[finding]\\n\")\n\tcuboids = findCuboids(model) # \u30e2\u30c7\u30eb\u4e2d\u306e\u5168\u76f4\u65b9\u4f53\u3092\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\u3059\u308b\n  cuboidSet = {}\n  cuboids.each_with_index do |cuboid, c|\n    printf(\"  cuboid #%02d %s\\n\", c, sizestr(cuboid))\n      \n    # \u540c\u4e00\u5f62\u72b6\u3067\u30ab\u30a6\u30f3\u30c8\u3059\u308b\n    if cuboidSet[cuboid] == nil then\n      cuboidSet[cuboid] = 1\n    else\n      cuboidSet[cuboid] += 1\n    end\n\tend\n\n\t# \u7d50\u679c\u306e\u8868\u793a\t\n\tprintf(\"[summary]\\n\")\n\tcuboidSet.each_with_index do |(cuboid, count), c|\n    printf(\"  cuboid #%02d %s * %d\\n\", c, sizestr(cuboid), count)\n\tend\n\t\n\treturn cuboidSet\nend\n\ndef findCuboids(container)\n  cuboids = []\n    \n  # \u73fe\u5728\u306econtainer\u306bface\u304c6\u679a\u3042\u308c\u3070\u3001\u305d\u308c\u304c\u76f4\u65b9\u4f53\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b  \n  cuboid = faces2cuboid(getTypes(container, Sketchup::Face))\n  if cuboid!= nil then\n    cuboids << cuboid\n  end\n  \n  # \u73fe\u5728\u306econtainer\u306e\u4e0b\u306bgroup\u304c\u3042\u308c\u3070\u3001\u305d\u308c\u3092\u63a2\u7d22\u3059\u308b\n  getTypes(container, Sketchup::Group).each_with_index do |subgroup, g|\n    cuboids.concat(findCuboids(subgroup))\n  end\n  \n  # \u73fe\u5728\u306econtainer\u306e\u4e0b\u306bcomponent\u304c\u3042\u308c\u3070\u3001\u305d\u308c\u3092\u63a2\u7d22\u3059\u308b\n  getTypes(container, Sketchup::ComponentInstance).each_with_index do |cmp, g|\n    cuboids.concat(findCuboids(cmp.definition))\n  end\n\n  return cuboids\nend\n\ndef faces2cuboid(faces)\n  # \u76f4\u65b9\u4f53\u306e\u6761\u4ef6: face\u304c6\u679a, \u5168edge\u306e\u9577\u3055\u306f1or2or3\u901a\u308a\u3067\u3042\u308b\u3053\u3068\n  if faces.length != 6\n    return nil\n  end\n  \n  # \u8fba\u3092\u63a2\u7d22\u3057\u3066\u9577\u3055->\u51fa\u73fe\u56de\u6570\u306e\u8f9e\u66f8\u3092\u4f5c\u6210\u3059\u308b\n  # \u3053\u308c\u304c1\u901a\u308a24\u500b = \u7acb\u65b9\u4f53, 2\u901a\u308a8,16\u500b = \u6b63\u65b9\u5f62\u76f4\u65b9\u4f53, 3\u901a\u308a8,8,8\u500b = \u4e00\u822c\u306e\u76f4\u65b9\u4f53\n  edges = {} # \u9577\u3055 -> \u51fa\u73fe\u6570\n  faces.each_with_index do |face, f|\n    face.edges.each_with_index do |edge, e|\n      length = (edge.length * 25.4).round # inch->mili\n      # \u8fba\u9577\u3055\u8f9e\u66f8\u306b\u8ffd\u52a0\u3059\u308b\n      if edges[length] == nil then\n        edges[length] = 1\n      else\n        edges[length] += 1\n      end\n    end\n  end\n  \n  if edges.length == 3 then\n    # \u76f4\u65b9\u4f53\u306e3\u8fba\u306e\u9577\u3055\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308b\n    cuboid = []\n    edges.each{|length, count|\n      for num in 0...(count / 8) do\n        cuboid << length\n      end\n    }\n    return cuboid.sort()\n  else\n    return nil\n  end\nend\n\ndef getTypes(container, type)\n  # sketchup\u306econtainer\u304b\u3089\u7279\u5b9a\u30bf\u30a4\u30d7\u306eentity\u3092\u30ea\u30b9\u30c8\u5f62\u5f0f\u3067\u53d6\u308a\u51fa\u3059\n  ret = []\n  for g_ent in container.entities do\n    if g_ent.kind_of?(type) then\n      ret << g_ent\n    end\n  end\n  return ret\nend\n\ndef sizestr(cuboid)\n  return sprintf(\"[%4d, %4d, %4d]\", cuboid[0], cuboid[1], cuboid[2])\nend\n```\n\n# \u5b9f\u884c\u4f8b\n\u4f8b\u3048\u3070\u3053\u3093\u306a\u611f\u3058\u306e\u68da\u306b\u5bfe\u3057\u3066,\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-03-29 20.06.06.png](https://qiita-image-store.s3.amazonaws.com/0/56846/996809e7-491d-1065-af65-ae2fda6b60c8.png)\n\n\u6700\u7d42\u7684\u306b\u3053\u3093\u306a\u30ea\u30b9\u30c8\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u5f8c\u306f\u3053\u306e\u30ea\u30b9\u30c8\u3092\u3082\u3068\u306b\u6728\u53d6\u308a\u56f3\u307e\u3067\u81ea\u52d5\u3067\u4f5c\u308c\u305f\u3089\u5b8c\u74a7\u306a\u3093\u3067\u3059\u304c\u3001\u305d\u308c\u306f\u672a\u5b8c\u3067\u3059\u3002\n\n```\n[summary]\n  cuboid #00 [   4,   71,  400] * 26\n  cuboid #01 [  15,   71,  150] * 18\n  cuboid #02 [   4,  158,  400] * 9\n  cuboid #03 [  24,  300,  315] * 3\n  cuboid #04 [  15,   71,  230] * 8\n  cuboid #05 [   4,  238,  400] * 4\n  cuboid #06 [  15,  300,  480] * 3\n```\n\n# \u6ce8\u610f\u70b9\n-  \u97626\u679a\u3092\u30b0\u30eb\u30fc\u30d7\u5316/\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5316\u3057\u305f\u3082\u306e\u3060\u3051\u3092\u629c\u7c8b\u3057\u307e\u3059\u3002\u4e09\u89d2\u67f1\u306a\u30696\u9762\u3067\u306a\u3044\u3082\u306e\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n-  \u76f4\u65b9\u4f53\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u306b\u300c\u8fba\u306e\u9577\u3055\u304c1or2or3\u7a2e\u985e\u3060\u3063\u305f\u3089\u76f4\u65b9\u4f53\u300d\u3068\u3044\u3046\u9069\u5f53\u30eb\u30fc\u30eb\u3092\u7528\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u5e73\u884c\u56db\u8fba\u5f62\u306e\u67f1\u306a\u3069\u304c\u3042\u308b\u3068\u305d\u306e\u8fba\u306e\u9577\u3055\u3092\u3082\u3064\u76f4\u65b9\u4f53\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u307e\u3059\u3002\n-  \u30b0\u30eb\u30fc\u30d7\u3084\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u3057\u305f\u5f8c\u3067\u62e1\u5927\u7e2e\u5c0f\u3092\u3057\u3066\u3044\u308b\u3068\u8868\u793a\u3055\u308c\u308b\u30b5\u30a4\u30ba\u304c\u6b63\u3057\u304f\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u4e00\u5ea6\u30b0\u30eb\u30fc\u30d7\u5316\u3092\u89e3\u9664\u3059\u308b\u306a\u3069\u3057\u3066\u3069\u306e\u9762\u3082\u5f8c\u304b\u3089\u62e1\u5927\u7e2e\u5c0f\u3092\u3055\u308c\u3066\u3044\u306a\u3044\u72b6\u614b\u306b\u3059\u308c\u3070\u6b63\u3057\u3044\u6570\u5024\u304c\u51fa\u307e\u3059\u3002\n-  \u5358\u4f4d\u306f\u30df\u30ea\u30e1\u30fc\u30c8\u30eb\u3067\u3059(\u5185\u90e8\u30c7\u30fc\u30bf\u304c\u30a4\u30f3\u30c1\u5358\u4f4d\u3063\u307d\u3044\u306e\u3067\u00d725.4\u3057\u3066\u3044\u307e\u3059)\u3002\n\n# \u66f8\u304d\u63db\u3048\u3066\u30ea\u30ed\u30fc\u30c9\u3059\u308b\u5834\u5408\u306f\n\u4f8b\u3048\u3070\u4e0a\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092test.rb\u3068\u3044\u3046\u540d\u524d\u3067plugin\u30d5\u30a9\u30eb\u30c0\u306b\u5165\u308c\u3066\u3044\u305f\u5834\u5408\u3001SketchUp\u306eRuby\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\n\n```\nload \"test.rb\"\n```\n\n\u3068\u3059\u308c\u3070\u6700\u65b0\u306e\u72b6\u614b\u3092\u30ea\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n"}