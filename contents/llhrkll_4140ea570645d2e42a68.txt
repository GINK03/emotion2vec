{"context": "\n\n\u524d\u63d0\nAngular1.x + Karma + Mocha + Chai + Webpack\nangular-mocks\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u304bkarma\u306einit\u306f\u7565\n\n\u76ee\u6a19\nPromise\u3092\u8fd4\u3059service\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30c6\u30b9\u30c8\u3059\u308b\n\n\u3084\u3063\u3066\u3044\u304f\n\n\u30c6\u30b9\u30c8\u3057\u305f\u3044\u30b3\u30fc\u30c9\n\nscripts/services/exampleService.js\nmodule.exports = [\n    '$q', function ( $q ) {\n        return {\n            getPromise: function ( hoge ) {\n                var d = $q.defer();\n                if ( hoge ) {\n                    d.resolve( typeof hoge );\n                } else {\n                    d.reject( new Error( 'hoge is empty' ) );\n                }\n                return d.promise;\n            }\n        }\n    }\n];\n\n\n\nscripts/app.js\nvar app = angular.module( 'app', [] );\n\napp.factory( 'exampleService', require( './services/exampleService.js' ) );\n\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\ntests/services/exampleService.js\nvar exampleService,\n    $q,\n    $rootScope,\n    deferred,\n    promise,\n    data,\n    callback = function ( res ) { data = res };\n\ndescribe( 'exampleService', function () {\n    beforeEach( module( 'app' ) );\n    beforeEach( inject( function ( $injector ) {\n        exampleService = $injector.get( 'exampleService' );\n        $q             = $injector.get( '$q' );\n        $rootScope     = $injector.get( '$rootScope' );\n\n        // resolve\u3068reject\u3069\u3063\u3061\u3082\u78ba\u8a8d\u3057\u305f\u304b\u3063\u305f\u3089\u5909\u3048\u308b\n        deferred = $q.defer();\n        promise  = deferred.promise;\n        promise.then( callback, callback );\n    } ) );\n\n    describe( 'getPromise', function () {\n        it( 'must reject with invalid param', function () {\n            exampleService.getPromise()\n                .then( deferred.resolve, referred.reject );\n            // \u30b3\u30ec\u304c\u306a\u3044\u3068\u30c0\u30e1\n            $rootScope.$digest();\n\n            assert.typeOf( data, 'Error' );\n        } );\n\n        it( 'must accept valid param', function () {\n            exampleService.getPromise( 'hogefuga' )\n                .then( deferred.resolve, deferred.reject );\n            $rootScope.$digest();\n\n            assert.strictEqual( data, 'string' );\n        } );\n    } );\n} );\n\n\nchai-as-promised\u3068\u304b\u8a66\u3057\u305f\u3093\u3067\u3059\u304c\u7d50\u5c40\u3053\u308c\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u306a\u3093\u304b\u3060\u308b\u3044\u306e\u3067\u3046\u307e\u3044\u3053\u3068\u3044\u304f\u306e\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n\u3084\u3063\u3066\u3044\u304f\u305e\u3002\n\n\u53c2\u8003\n\nmock angular service/promise in a karma/jasmine test\n\n\n# \u524d\u63d0\nAngular1.x + Karma + Mocha + Chai + Webpack\nangular-mocks\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u304bkarma\u306einit\u306f\u7565\n\n# \u76ee\u6a19\nPromise\u3092\u8fd4\u3059service\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30c6\u30b9\u30c8\u3059\u308b\n\n# \u3084\u3063\u3066\u3044\u304f\n## \u30c6\u30b9\u30c8\u3057\u305f\u3044\u30b3\u30fc\u30c9\n\n```Javascript:scripts/services/exampleService.js\nmodule.exports = [\n\t'$q', function ( $q ) {\n\t\treturn {\n\t\t\tgetPromise: function ( hoge ) {\n\t\t\t\tvar d = $q.defer();\n\t\t\t\tif ( hoge ) {\n\t\t\t\t\td.resolve( typeof hoge );\n\t\t\t\t} else {\n\t\t\t\t\td.reject( new Error( 'hoge is empty' ) );\n\t\t\t\t}\n\t\t\t\treturn d.promise;\n\t\t\t}\n\t\t}\n\t}\n];\n```\n\n```Javascript:scripts/app.js\nvar app = angular.module( 'app', [] );\n\napp.factory( 'exampleService', require( './services/exampleService.js' ) );\n```\n\n## \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\n```Javascript:tests/services/exampleService.js\nvar exampleService,\n    $q,\n    $rootScope,\n    deferred,\n    promise,\n    data,\n    callback = function ( res ) { data = res };\n\ndescribe( 'exampleService', function () {\n\tbeforeEach( module( 'app' ) );\n\tbeforeEach( inject( function ( $injector ) {\n\t\texampleService = $injector.get( 'exampleService' );\n\t\t$q             = $injector.get( '$q' );\n\t\t$rootScope     = $injector.get( '$rootScope' );\n\t\t\n\t\t// resolve\u3068reject\u3069\u3063\u3061\u3082\u78ba\u8a8d\u3057\u305f\u304b\u3063\u305f\u3089\u5909\u3048\u308b\n\t\tdeferred = $q.defer();\n\t\tpromise  = deferred.promise;\n\t\tpromise.then( callback, callback );\n\t} ) );\n\t\n\tdescribe( 'getPromise', function () {\n\t\tit( 'must reject with invalid param', function () {\n\t\t\texampleService.getPromise()\n\t\t\t\t.then( deferred.resolve, referred.reject );\n\t\t\t// \u30b3\u30ec\u304c\u306a\u3044\u3068\u30c0\u30e1\n\t\t\t$rootScope.$digest();\n\t\t\t\n\t\t\tassert.typeOf( data, 'Error' );\n\t\t} );\n\t\t\n\t\tit( 'must accept valid param', function () {\n\t\t\texampleService.getPromise( 'hogefuga' )\n\t\t\t\t.then( deferred.resolve, deferred.reject );\n\t\t\t$rootScope.$digest();\n\t\t\t\n\t\t\tassert.strictEqual( data, 'string' );\n\t\t} );\n\t} );\n} );\n```\n\nchai-as-promised\u3068\u304b\u8a66\u3057\u305f\u3093\u3067\u3059\u304c\u7d50\u5c40\u3053\u308c\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u306a\u3093\u304b\u3060\u308b\u3044\u306e\u3067\u3046\u307e\u3044\u3053\u3068\u3044\u304f\u306e\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n\u3084\u3063\u3066\u3044\u304f\u305e\u3002\n\n# \u53c2\u8003\n- [mock angular service/promise in a karma/jasmine test](http://stackoverflow.com/questions/23991003/mock-angular-service-promise-in-a-karma-jasmine-test)\n", "tags": ["angular", "AngularJS"]}