{"context": "\u6570\u65e5\u524d\u306bpiyo7\u3055\u3093\u304c\u6295\u7a3f\u3055\u308c\u305f Scala\u304b\u3089TensorFlow\u306eJava API\u3092\u547c\u3073\u3060\u3059\u305e\u3044 \u3092\u307f\u3066 JRuby \u304b\u3089\u3060\u3068\u3069\u3046\u3044\u3046\u30b3\u30fc\u30c9\u306b\u306a\u308b\u306e\u304b\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30b3\u30fc\u30c9\n\nexample.rb\nrequire 'pp'\nrequire 'java'\nrequire './libtensorflow-1.0.0-PREVIEW1.jar'\n\nmodule TF\n  include_package 'org.tensorflow'\nend\n\ngraph = TF::Graph.new\n\na = graph.opBuilder(\"Const\", \"a\").\n  setAttr(\"dtype\", TF::DataType::INT32).\n  setAttr(\"value\", TF::Tensor.create([1, 2, 3].to_java(:int))).\n  build().\n  output(0)\n\nb = graph.opBuilder(\"Const\", \"b\").\n  setAttr(\"dtype\", TF::DataType::INT32).\n  setAttr(\"value\", TF::Tensor.create([4, 5, 6].to_java(:int))).\n  build().\n  output(0)\n\nc = graph.opBuilder(\"Mul\", \"c\").\n  addInput(a).\n  addInput(b).\n  build().\n  output(0)\n\nsession = TF::Session.new(graph)\nout = Array.new(3).to_java(:int)\nsession.runner().fetch(\"c\").run().get(0).copyTo(out)\n\npp out #=> int[4, 10, 18]@71623278\n\n\n\n$ ruby -J-Djava.library.path=./jni example.rb\n\u3067\u5b9f\u884c\u3059\u308b\u3068\u78ba\u304b\u306b [4, 10, 18] \u304c\u6c42\u307e\u308a\u307e\u3059\u3002\n\u3061\u3087\u3063\u3068\u30cf\u30de\u3063\u305f\u306e\u304c org.tensorflow \u3092 import \u3059\u308b\u51e6\u7406\n  import 'org.tensorflow.*'\n\n\u3068\u306f\u66f8\u3051\u305a\u3001\u540d\u524d\u7a7a\u9593 TF \u3092\u5b9a\u7fa9\u3057\u3066 include_package \u3059\u308b\u65b9\u5f0f\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u6bd4\u8f03\nRuby \u304b\u3089 TensorFlow \u3092\u5b9f\u884c\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001\u6628\u5e746\u6708\u306b\u516c\u958b\u3055\u308c\u305f\n\u3000somaticio/tensorflow.rb\n\u304c\u5b9a\u756a\u306e\u3088\u3046\u3067\u3059\u3002\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u4ed8\u5c5e\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3068\u4e0a\u8a18\u306e example.rb \u3092\u6bd4\u8f03\u3059\u308b\u3068  example.rb \u306e\u65b9\u304c\u304b\u306a\u308a\u5197\u9577\u3067\u3059\u3002\n\u3082\u3057\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u3092\u767a\u5c55\u3055\u305b\u308b\u610f\u5473\u304c\u3042\u308b\u3068\u3059\u308b\u3068\u3001module TF \u3092\u3088\u308a\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u306a\u30e9\u30c3\u30d1\u30fc\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u304f\u3089\u3044\u3067\u3057\u3087\u3046\u3002\n(1) Java \u5074\u306e\u30b7\u30f3\u30dc\u30eb\u60c5\u5831\u3092\u7528\u3044\u3066 module TF \u3092\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u3002\n(2) Keras\u30e9\u30a4\u30af\u306b\u3001\u3088\u308a\u62bd\u8c61\u5316\u3055\u308c\u305f (Ruby \u3089\u3057\u3044)API \u3092\u63d0\u4f9b\u3059\u308b\u3002\n\u3068\u3044\u3063\u305f\u3053\u3068\u304c\u8003\u3048\u3089\u308c\u307e\u3059\u3002\nKeras \u306f Keras 2 \u3067 TensorFlow \u306b\u7d71\u5408\u3055\u308c\u308b\u3068\u306e\u3053\u3068(\u2192Spring 2017 roadmap: Keras 2, PR freeze, TF integration )\u3067\u3001Java API \u306e\u4ed5\u69d8\u306f\u307e\u3060\u307e\u3060\u4e0d\u5b89\u5b9a\u3068\u898b\u53d7\u3051\u307e\u3059\u3002\u6b8b\u5ff5\u306a\u304c\u3089(1)(2)\u3044\u305a\u308c\u3082\u6642\u671f\u5c1a\u65e9\u3067\u3059\u306d\u3002\n\u6570\u65e5\u524d\u306b[piyo7](http://qiita.com/piyo7)\u3055\u3093\u304c\u6295\u7a3f\u3055\u308c\u305f [Scala\u304b\u3089TensorFlow\u306eJava API\u3092\u547c\u3073\u3060\u3059\u305e\u3044](http://qiita.com/piyo7/items/d897d7156d87d29cad19) \u3092\u307f\u3066 JRuby \u304b\u3089\u3060\u3068\u3069\u3046\u3044\u3046\u30b3\u30fc\u30c9\u306b\u306a\u308b\u306e\u304b\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n## \u30b3\u30fc\u30c9\n\n```example.rb\nrequire 'pp'\nrequire 'java'\nrequire './libtensorflow-1.0.0-PREVIEW1.jar'\n\nmodule TF\n  include_package 'org.tensorflow'\nend\n\ngraph = TF::Graph.new\n\na = graph.opBuilder(\"Const\", \"a\").\n  setAttr(\"dtype\", TF::DataType::INT32).\n  setAttr(\"value\", TF::Tensor.create([1, 2, 3].to_java(:int))).\n  build().\n  output(0)\n\nb = graph.opBuilder(\"Const\", \"b\").\n  setAttr(\"dtype\", TF::DataType::INT32).\n  setAttr(\"value\", TF::Tensor.create([4, 5, 6].to_java(:int))).\n  build().\n  output(0)\n\nc = graph.opBuilder(\"Mul\", \"c\").\n  addInput(a).\n  addInput(b).\n  build().\n  output(0)\n\nsession = TF::Session.new(graph)\nout = Array.new(3).to_java(:int)\nsession.runner().fetch(\"c\").run().get(0).copyTo(out)\n\npp out #=> int[4, 10, 18]@71623278\n\n```\n\n$ ruby -J-Djava.library.path=./jni example.rb\n\n\u3067\u5b9f\u884c\u3059\u308b\u3068\u78ba\u304b\u306b [4, 10, 18] \u304c\u6c42\u307e\u308a\u307e\u3059\u3002\n\n\u3061\u3087\u3063\u3068\u30cf\u30de\u3063\u305f\u306e\u304c org.tensorflow \u3092 import \u3059\u308b\u51e6\u7406\n\n```rb\n  import 'org.tensorflow.*'\n```\n\n\u3068\u306f\u66f8\u3051\u305a\u3001\u540d\u524d\u7a7a\u9593 TF \u3092\u5b9a\u7fa9\u3057\u3066 include_package \u3059\u308b\u65b9\u5f0f\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n## \u6bd4\u8f03\n\nRuby \u304b\u3089 TensorFlow \u3092\u5b9f\u884c\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001\u6628\u5e746\u6708\u306b\u516c\u958b\u3055\u308c\u305f\n\n\u3000[somaticio/tensorflow.rb](https://github.com/somaticio/tensorflow.rb)\n\n\u304c\u5b9a\u756a\u306e\u3088\u3046\u3067\u3059\u3002\n\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u4ed8\u5c5e\u306e[\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9](https://github.com/somaticio/tensorflow.rb/blob/master/image/classify_image.rb)\u3068\u4e0a\u8a18\u306e example.rb \u3092\u6bd4\u8f03\u3059\u308b\u3068  example.rb \u306e\u65b9\u304c\u304b\u306a\u308a\u5197\u9577\u3067\u3059\u3002\n\n\u3082\u3057\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u3092\u767a\u5c55\u3055\u305b\u308b\u610f\u5473\u304c\u3042\u308b\u3068\u3059\u308b\u3068\u3001module TF \u3092\u3088\u308a\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u306a\u30e9\u30c3\u30d1\u30fc\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u304f\u3089\u3044\u3067\u3057\u3087\u3046\u3002\n\n(1) Java \u5074\u306e\u30b7\u30f3\u30dc\u30eb\u60c5\u5831\u3092\u7528\u3044\u3066 module TF \u3092[\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0](http://qiita.com/tags/%E3%83%A1%E3%82%BF%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0)\u3059\u308b\u3002\n\n(2) [Keras](http://qiita.com/tags/Keras)\u30e9\u30a4\u30af\u306b\u3001\u3088\u308a\u62bd\u8c61\u5316\u3055\u308c\u305f (Ruby \u3089\u3057\u3044)API \u3092\u63d0\u4f9b\u3059\u308b\u3002\n\n\u3068\u3044\u3063\u305f\u3053\u3068\u304c\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\nKeras \u306f Keras 2 \u3067 TensorFlow \u306b\u7d71\u5408\u3055\u308c\u308b\u3068\u306e\u3053\u3068(\u2192[Spring 2017 roadmap: Keras 2, PR freeze, TF integration ](https://github.com/fchollet/keras/issues/5299))\u3067\u3001Java API \u306e\u4ed5\u69d8\u306f\u307e\u3060\u307e\u3060\u4e0d\u5b89\u5b9a\u3068\u898b\u53d7\u3051\u307e\u3059\u3002\u6b8b\u5ff5\u306a\u304c\u3089(1)(2)\u3044\u305a\u308c\u3082\u6642\u671f\u5c1a\u65e9\u3067\u3059\u306d\u3002\n\n", "tags": ["\u6a5f\u68b0\u5b66\u7fd2", "TensorFlow", "JRuby", "JNI", "Java"]}