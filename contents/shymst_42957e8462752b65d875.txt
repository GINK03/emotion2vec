{"context": "Excel\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u51e6\u7406\u3092\u884c\u3044\u3001\n\u7d50\u679c\u3092CSV\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u3066Excel\u3067\u958b\u304f\u3068\u3044\u3063\u305f\u8981\u4ef6\u3092\u6e80\u305f\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001CSV\u30d5\u30a1\u30a4\u30eb\u3092Excel\u3067\u958b\u304f\u969b\u306f\u51fa\u529b\u6642\u306b\u6587\u5b57\u30b3\u30fc\u30c9\u3092Shift-JIS\u306b\u3057\u306a\u3044\u3068\u6587\u5b57\u5316\u3051\u304c\u8d77\u3053\u308a\u307e\u3059\u3002\n\uff08\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u6642\u306bUTF-8\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u304c\u3001\u90fd\u5ea6\u64cd\u4f5c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\uff09\n\u53c2\u8003\uff1aMicrosoft Excel \u3067\u958b\u3051\u308b CSV \u95a2\u9023\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u307e\u3068\u3081\n\u4eca\u56de\u306f\u3001\u6587\u5b57\u5316\u3051\u3057\u306a\u3044\u3088\u3046\u306bCSV\u30d5\u30a1\u30a4\u30eb\u3092Shift-JIS\u3067\u51fa\u529b\u3057\nExcel\u3067\u30b9\u30e0\u30fc\u30ba\u306b\u958b\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u65b9\u6cd5\u3092\u5171\u6709\u3057\u307e\u3059\u3002\n\n\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\n\nfs\nC2FO/fast-csv\n\nSheetJS/js-xlsx \nnarirou/jconv\n\n\nconst fs = require('fs')\nconst csv = require('fast-csv')\nconst jconv = require( 'jconv' )\nconst xlsx = require('xlsx')\nconst utils = xlsx.util\n\n\nExcel\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\nExcel\u5185\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u306fCSV\u5f62\u5f0f\u306e\u307e\u307e\u3060\u3068\u6271\u3044\u96e3\u3044\u306e\u3067\u304a\u597d\u307f\u3067\u914d\u5217\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n// csv -> Array[Object]\nfunction parseCSVtoArray(csv) {\n  let result = []\n  csv\n    .fromString(csv, {headers: true})\n    .on('data', function(data) {\n      result.push(data)\n    })\n    .on('end', function() {\n      console.log('end')\n    })\n  return result\n}\n\nvar workbook = xlsx.readFile(importPath) // Excel\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\nvar sheetName = workbook.SheetNames[0] // Excel\u30d5\u30a1\u30a4\u30eb\u306e\u6700\u521d\u306e\u30b7\u30fc\u30c8\u306e\u540d\u524d\u3092\u53d6\u5f97\nvar worksheet = workbook.Sheets[sheetName] // Excel\u30d5\u30a1\u30a4\u30eb\u306e\u6700\u521d\u306e\u30b7\u30fc\u30c8\u3092\u8aad\u307f\u8fbc\u3080\n\nvar csv = xlsx.utils.sheet_to_csv(worksheet) // Excel\u30c7\u30fc\u30bf\u3092CSV\u5f62\u5f0f\u3067\u53d6\u5f97\nlet array = yield parseCSVtoArray(csv) // \u30c7\u30fc\u30bf\u3092\u4f7f\u3044\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u914d\u5217\u306b\u5909\u63db\n\nfor (let arr of array ) {\n  console.log(arr['hoge'])\n\n  // \u51e6\u7406 \u2026\n}\n\n\n\nCSV\u66f8\u304d\u51fa\u3057\njconv \u3092\u4f7f\u3063\u3066\u51e6\u7406\u7d50\u679c\u3092Shift-JIS\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u51e6\u7406\u7d50\u679c\u3092\u914d\u5217\u3067\u62fe\u3063\u3066\u3044\u308b\u306e\u3067\u3001\n\u30d8\u30c3\u30c0\u30fc\u3092\u4ed8\u3051\u3066CSV\uff08\u6587\u5b57\u5217\uff09\u306b\u5909\u63db\u3057\u305f\u3082\u306e\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\nBuffer\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n// resultArray\uff1a\u3000\u51e6\u7406\u7d50\u679c\u304c\u5165\u3063\u305f\u914d\u5217\n\n// Array[object] -> csv\ncsv.writeToString(resultArray, {headers: true}, (err, data) => {\n\n  var buffer = jconv.convert(data, 'UTF8', 'SJIS') // UTF-8\u304b\u3089Shift-JIS\u3078\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u5909\u63db\n  fs.writeFileSync('result.csv', buffer) // \u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u51fa\u3057\n})\n\n\n\u3053\u308c\u3067\u6587\u5b57\u30b3\u30fc\u30c9\u304cShift-JIS\u306eCSV\u30d5\u30a1\u30a4\u30eb\u304c\u66f8\u304d\u51fa\u3055\u308c\u305f\u306e\u3067\u3001\nExcel\u3067\u958b\u3044\u3066\u3082\u30a6\u30a3\u30b6\u30fc\u30c9\u7121\u3057\u3067\u6587\u5b57\u5316\u3051\u3082\u305b\u305a\u30b9\u30e0\u30fc\u30ba\u306b\u958b\u3051\u307e\u3059\u3002\n\n\u304a\u307e\u3051\uff1aExcel\u30c7\u30fc\u30bf\u3067\u66f8\u304d\u51fa\u3057\n\u3053\u306e\u30c7\u30fc\u30bf\u3092Excel\u3067\u66f8\u304d\u51fa\u3057\u305f\u3044\u5834\u5408\u306f\u3001node-xlsx\u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u51fa\u529b\u3067\u304d\u307e\u3059\u3002\n\nconst nodeXlsx = require('node-xlsx').default\n\u2026\n\nfunction convertCSVtoArray(str) {\n  var result = []\n  var tmp = str.split('\\n')\n\n  for(var i = 0; i < tmp.length; ++i) {\n    result[i] = tmp[i].split(/(?:\",|,\"|,(?=(?:(?:[^\\\"]*\\\"){2})*[^\\\"]*$))/) // \u203b\u30bb\u30eb\u5185\u306e\u8907\u6570\u5024\u306b\u5bfe\u5fdc \n  }\n  return result\n}\n\ncsv.writeToString(resultArray, {headers: true}, (err, data) => {\n\n  var arr = convertCSVtoArray(data)\n  var buffer = nodeXlsx.build([{name: sheetName, data: arr}])\n  fs.writeFileSync('result.xlsx', buffer)\n})\n\n\n\u3053\u308c\u3067 .xlsx \u30d5\u30a1\u30a4\u30eb\u3067\u66f8\u304d\u51fa\u3055\u308c\u307e\u3059\u3002\n\u30d8\u30c3\u30c0\u30fc\u3092\u610f\u8b58\u305b\u305a\u306b\u4ed8\u52a0\u3059\u308b\u70ba\u306b\u4e00\u5ea6csv\u306b\u3057\u3066\u304b\u3089\u307e\u305f\u914d\u5217\u306b\u623b\u3059\u624b\u9593\u3092\u3057\u3066\u307e\u3059\u304c\u3001\n\u5fc5\u8981\u304c\u306a\u3044\u5834\u5408\u3084\u5225\u9014\u52a0\u5de5\u3059\u308b\u5834\u5408\u306f writeToString \u3092\u631f\u3080\u5fc5\u8981\u306f\u7121\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u7d42\u308f\u308a\u306b\n\u5b8c\u5168\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u983c\u308a\u3067\u3059\u304c\u3001\u3053\u308c\u3089\u306e\u7d20\u6674\u3089\u3057\u3044\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u77e5\u3063\u3066\nExcel\u3067\u6d88\u8017\u3059\u308b\u4eba\u304c\u4e00\u4eba\u3067\u3082\u6e1b\u3063\u3066\u304f\u308c\u308c\u3070\u5b09\u3057\u3044\u3067\u3059\u3002\n\n\u53c2\u8003\n\nExpress\u3067Shift-JIS\u306eCSV\u3092\u8fd4\u3059\n\n\nExcel\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u51e6\u7406\u3092\u884c\u3044\u3001\n\u7d50\u679c\u3092CSV\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u3066Excel\u3067\u958b\u304f\u3068\u3044\u3063\u305f\u8981\u4ef6\u3092\u6e80\u305f\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u3057\u304b\u3057\u3001CSV\u30d5\u30a1\u30a4\u30eb\u3092Excel\u3067\u958b\u304f\u969b\u306f\u51fa\u529b\u6642\u306b\u6587\u5b57\u30b3\u30fc\u30c9\u3092Shift-JIS\u306b\u3057\u306a\u3044\u3068\u6587\u5b57\u5316\u3051\u304c\u8d77\u3053\u308a\u307e\u3059\u3002\n\uff08\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u6642\u306bUTF-8\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u304c\u3001\u90fd\u5ea6\u64cd\u4f5c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\uff09\n\n\u53c2\u8003\uff1a[Microsoft Excel \u3067\u958b\u3051\u308b CSV \u95a2\u9023\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u307e\u3068\u3081](https://github.com/mpyw-yattemita/excel-csv-compatibility-check)\n\n\n\u4eca\u56de\u306f\u3001\u6587\u5b57\u5316\u3051\u3057\u306a\u3044\u3088\u3046\u306bCSV\u30d5\u30a1\u30a4\u30eb\u3092Shift-JIS\u3067\u51fa\u529b\u3057\nExcel\u3067\u30b9\u30e0\u30fc\u30ba\u306b\u958b\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u65b9\u6cd5\u3092\u5171\u6709\u3057\u307e\u3059\u3002\n\n# \u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\n- [fs](https://nodejs.org/api/fs.html)\n- [C2FO/fast-csv](https://github.com/C2FO/fast-csv)\n- [SheetJS/js-xlsx](https://github.com/SheetJS/js-xlsx) \n- [narirou/jconv](https://github.com/narirou/jconv/blob/master/READMEja.md)\n\n```javascript\n\nconst fs = require('fs')\nconst csv = require('fast-csv')\nconst jconv = require( 'jconv' )\nconst xlsx = require('xlsx')\nconst utils = xlsx.util\n```\n\n\n# Excel\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\n\nExcel\u5185\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u306fCSV\u5f62\u5f0f\u306e\u307e\u307e\u3060\u3068\u6271\u3044\u96e3\u3044\u306e\u3067\u304a\u597d\u307f\u3067\u914d\u5217\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```javascript\n\n// csv -> Array[Object]\nfunction parseCSVtoArray(csv) {\n  let result = []\n  csv\n    .fromString(csv, {headers: true})\n    .on('data', function(data) {\n      result.push(data)\n    })\n    .on('end', function() {\n      console.log('end')\n    })\n  return result\n}\n\nvar workbook = xlsx.readFile(importPath) // Excel\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\nvar sheetName = workbook.SheetNames[0] // Excel\u30d5\u30a1\u30a4\u30eb\u306e\u6700\u521d\u306e\u30b7\u30fc\u30c8\u306e\u540d\u524d\u3092\u53d6\u5f97\nvar worksheet = workbook.Sheets[sheetName] // Excel\u30d5\u30a1\u30a4\u30eb\u306e\u6700\u521d\u306e\u30b7\u30fc\u30c8\u3092\u8aad\u307f\u8fbc\u3080\n\nvar csv = xlsx.utils.sheet_to_csv(worksheet) // Excel\u30c7\u30fc\u30bf\u3092CSV\u5f62\u5f0f\u3067\u53d6\u5f97\nlet array = yield parseCSVtoArray(csv) // \u30c7\u30fc\u30bf\u3092\u4f7f\u3044\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u914d\u5217\u306b\u5909\u63db\n\nfor (let arr of array ) {\n  console.log(arr['hoge'])\n  \n  // \u51e6\u7406 \u2026\n}\n\n```\n\n\n# CSV\u66f8\u304d\u51fa\u3057\n\n[jconv](https://github.com/narirou/jconv/blob/master/READMEja.md) \u3092\u4f7f\u3063\u3066\u51e6\u7406\u7d50\u679c\u3092Shift-JIS\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u51e6\u7406\u7d50\u679c\u3092\u914d\u5217\u3067\u62fe\u3063\u3066\u3044\u308b\u306e\u3067\u3001\n\u30d8\u30c3\u30c0\u30fc\u3092\u4ed8\u3051\u3066CSV\uff08\u6587\u5b57\u5217\uff09\u306b\u5909\u63db\u3057\u305f\u3082\u306e\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\nBuffer\u306b\u3064\u3044\u3066\u306f[\u3053\u3061\u3089](http://nodejs.jp/nodejs.org_ja/api/buffer.html)\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\n// resultArray\uff1a\u3000\u51e6\u7406\u7d50\u679c\u304c\u5165\u3063\u305f\u914d\u5217\n\n// Array[object] -> csv\ncsv.writeToString(resultArray, {headers: true}, (err, data) => {\n\n  var buffer = jconv.convert(data, 'UTF8', 'SJIS') // UTF-8\u304b\u3089Shift-JIS\u3078\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u5909\u63db\n  fs.writeFileSync('result.csv', buffer) // \u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u51fa\u3057\n})\n\n```\n\n\u3053\u308c\u3067\u6587\u5b57\u30b3\u30fc\u30c9\u304cShift-JIS\u306eCSV\u30d5\u30a1\u30a4\u30eb\u304c\u66f8\u304d\u51fa\u3055\u308c\u305f\u306e\u3067\u3001\nExcel\u3067\u958b\u3044\u3066\u3082\u30a6\u30a3\u30b6\u30fc\u30c9\u7121\u3057\u3067\u6587\u5b57\u5316\u3051\u3082\u305b\u305a\u30b9\u30e0\u30fc\u30ba\u306b\u958b\u3051\u307e\u3059\u3002\n\n# \u304a\u307e\u3051\uff1aExcel\u30c7\u30fc\u30bf\u3067\u66f8\u304d\u51fa\u3057\n\n\u3053\u306e\u30c7\u30fc\u30bf\u3092Excel\u3067\u66f8\u304d\u51fa\u3057\u305f\u3044\u5834\u5408\u306f\u3001[node-xlsx](https://www.npmjs.com/package/node-xlsx)\u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u51fa\u529b\u3067\u304d\u307e\u3059\u3002\n\n```javascript\n\nconst nodeXlsx = require('node-xlsx').default\n\u2026\n\nfunction convertCSVtoArray(str) {\n  var result = []\n  var tmp = str.split('\\n')\n\n  for(var i = 0; i < tmp.length; ++i) {\n    result[i] = tmp[i].split(/(?:\",|,\"|,(?=(?:(?:[^\\\"]*\\\"){2})*[^\\\"]*$))/) // \u203b\u30bb\u30eb\u5185\u306e\u8907\u6570\u5024\u306b\u5bfe\u5fdc \n  }\n  return result\n}\n\ncsv.writeToString(resultArray, {headers: true}, (err, data) => {\n\n  var arr = convertCSVtoArray(data)\n  var buffer = nodeXlsx.build([{name: sheetName, data: arr}])\n  fs.writeFileSync('result.xlsx', buffer)\n})\n\n```\n\n\u3053\u308c\u3067 `.xlsx` \u30d5\u30a1\u30a4\u30eb\u3067\u66f8\u304d\u51fa\u3055\u308c\u307e\u3059\u3002\n\n\u30d8\u30c3\u30c0\u30fc\u3092\u610f\u8b58\u305b\u305a\u306b\u4ed8\u52a0\u3059\u308b\u70ba\u306b\u4e00\u5ea6csv\u306b\u3057\u3066\u304b\u3089\u307e\u305f\u914d\u5217\u306b\u623b\u3059\u624b\u9593\u3092\u3057\u3066\u307e\u3059\u304c\u3001\n\u5fc5\u8981\u304c\u306a\u3044\u5834\u5408\u3084\u5225\u9014\u52a0\u5de5\u3059\u308b\u5834\u5408\u306f `writeToString` \u3092\u631f\u3080\u5fc5\u8981\u306f\u7121\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n# \u7d42\u308f\u308a\u306b\n\n\u5b8c\u5168\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u983c\u308a\u3067\u3059\u304c\u3001\u3053\u308c\u3089\u306e\u7d20\u6674\u3089\u3057\u3044\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u77e5\u3063\u3066\nExcel\u3067\u6d88\u8017\u3059\u308b\u4eba\u304c\u4e00\u4eba\u3067\u3082\u6e1b\u3063\u3066\u304f\u308c\u308c\u3070\u5b09\u3057\u3044\u3067\u3059\u3002\n\n\n# \u53c2\u8003\n\n- [Express\u3067Shift-JIS\u306eCSV\u3092\u8fd4\u3059](http://qiita.com/Hiroki_M/items/98b885fcdbb1e6334e5a)\n\n", "tags": ["JavaScript", "Node.js", "CSV", "Excel"]}