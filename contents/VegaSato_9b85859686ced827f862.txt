{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nWatson\u306eVisual Recognition\u304cV2\u306b\u306a\u3063\u3066\u5b66\u7fd2\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002Visual Recognition\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3046\u3002\u3067\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066MNIST\u306e\u624b\u66f8\u304d\u6570\u5b57\u306e\u5206\u985e\u3092\u3084\u3063\u305f\u3089\u3069\u3046\u306a\u308b\u306e\u304b\u8a66\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u3066\u3084\u3063\u3066\u307f\u305f\u3002\u3093\u3067\u3001\u3069\u3046\u305b\u306a\u3089Google\u306eTensorFlow\u3068\u6bd4\u8f03\u3057\u3066\u307f\u3088\u3046\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u3061\u3089\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u624b\u66f8\u304d\u30a2\u30d7\u30ea\u3092\u30d9\u30fc\u30b9\u306b\u3001Watson\u3078\u306e\u554f\u3044\u5408\u308f\u305b\u3092\u8ffd\u52a0\u3057\u3066\u307f\u305f\u3002\n\n\u306a\u304a\u3001Visual Recognition\u304c\u5f97\u610f\u3068\u3059\u308b\u306e\u306f200x200\u4ee5\u4e0a\u306e\u753b\u50cf\u3002320x320\u304f\u3089\u3044\u304c\u3044\u3044\u3089\u3057\u3044\u3002\u4e00\u65b9\u3001MNIST\u306e\u30c7\u30fc\u30bf\u306f28x28\u3002\u6b63\u76f4\u3001VisualRecognition\u306b\u52dd\u3061\u76ee\u306f\u7121\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u3060\u304c\u52dd\u3061\u8ca0\u3051\u306e\u554f\u984c\u3067\u306f\u306a\u3044\u306e\u3060\u3002\n\nVisual Recognition\u306e\u4f7f\u3044\u65b9\n\u4f7f\u3044\u65b9\u306f\u5148\u307b\u3069\u3082\u7d39\u4ecb\u3057\u305f\u3053\u3061\u3089\u3092\u898b\u308b\u3068\u3088\u304f\u308f\u304b\u308b\u3002\n\u3053\u3053\u3067\u91cd\u8981\u306a\u306e\u306f\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u305f\u3081\u306b\u306fJPEG/PNG/GIF\u753b\u50cf\u3092zip\u5727\u7e2e\u3057\u3066\u5165\u529b\u3059\u308b\u3053\u3068\u3001POSITIVE\u753b\u50cf\u3068NEGATIVE\u753b\u50cf\u304c\u305d\u308c\u306a\u308a\u306e\u679a\u6570\u5fc5\u8981\u3067\u3042\u308b\u3053\u3068\u3060\u3002\n\u7279\u306b1\u3064\u76ee\u3060\u304c\u3001MNIST\u306e\u30c7\u30fc\u30bf\u306f\u30c9\u30c3\u30c8\u3054\u3068\u306e\u6fc3\u5ea6\u3092\u6570\u5024\u5316\u3057\u305f\u3082\u306e\u306a\u306e\u3067\u3001\u3053\u308c\u3092JPEG\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\nMNIST\u306e\u30c7\u30fc\u30bf\u3092JPEG\u5316\u3059\u308b\nMNIST\u306e\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u306f\u3001TensorFlow\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3057\u3066\u307f\u305f\u3002\n\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\nTensorFlow\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\nfrom tensorflow.examples.tutorials.mnist import input_data\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\n\n\n\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u304cmnist\u306b\u683c\u7d0d\u3055\u308c\u308b\u3002\u3082\u3046\u5c11\u3057\u6398\u308a\u4e0b\u3052\u308b\u3068\u3001mnist.train.images\u3068mnist.train.labels\u3068\u3044\u3046\u5909\u6570\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u3002\n\u3053\u308c\u3089\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u308b\u3068\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3060\u3063\u305f\u3002\n>>> print mnist.train.images\n[[ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n ..., \n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]]\n>>> print mnist.train.labels\n[[ 0.  0.  0. ...,  1.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n ..., \n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  1.  0.]]\n\n\u914d\u5217\u306a\u306e\u3067\u30011\u3064\u76ee\u306e\u8981\u7d20(1\u6587\u5b57\u76ee\u306e\u30c7\u30fc\u30bf)\u3060\u3051\u629c\u304d\u51fa\u3059\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n>>> print mnist.train.images[0]\n[ 0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.38039219  0.37647063\n  0.3019608   0.46274513  0.2392157   0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.35294119  0.5411765\n  0.92156869  0.92156869  0.92156869  0.92156869  0.92156869  0.92156869\n  0.98431379  0.98431379  0.97254908  0.99607849  0.96078438  0.92156869\n  0.74509805  0.08235294  0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.\n  0.54901963  0.98431379  0.99607849  0.99607849  0.99607849  0.99607849\n  0.99607849  0.99607849  0.99607849  0.99607849  0.99607849  0.99607849\n  0.99607849  0.99607849  0.99607849  0.99607849  0.74117649  0.09019608\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.88627458  0.99607849  0.81568635\n  0.78039223  0.78039223  0.78039223  0.78039223  0.54509807  0.2392157\n  0.2392157   0.2392157   0.2392157   0.2392157   0.50196081  0.8705883\n  0.99607849  0.99607849  0.74117649  0.08235294  0.          0.          0.\n  0.          0.          0.          0.          0.          0.\n  0.14901961  0.32156864  0.0509804   0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.13333334  0.83529419  0.99607849  0.99607849  0.45098042  0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.32941177  0.99607849  0.99607849  0.91764712  0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.32941177  0.99607849  0.99607849  0.91764712  0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.41568631  0.6156863   0.99607849  0.99607849  0.95294124  0.20000002\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.09803922  0.45882356  0.89411771\n  0.89411771  0.89411771  0.99215692  0.99607849  0.99607849  0.99607849\n  0.99607849  0.94117653  0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.26666668  0.4666667   0.86274517\n  0.99607849  0.99607849  0.99607849  0.99607849  0.99607849  0.99607849\n  0.99607849  0.99607849  0.99607849  0.55686277  0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.14509805  0.73333335  0.99215692\n  0.99607849  0.99607849  0.99607849  0.87450987  0.80784321  0.80784321\n  0.29411766  0.26666668  0.84313732  0.99607849  0.99607849  0.45882356\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.44313729\n  0.8588236   0.99607849  0.94901967  0.89019614  0.45098042  0.34901962\n  0.12156864  0.          0.          0.          0.          0.7843138\n  0.99607849  0.9450981   0.16078432  0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.66274512  0.99607849  0.6901961   0.24313727  0.          0.\n  0.          0.          0.          0.          0.          0.18823531\n  0.90588242  0.99607849  0.91764712  0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.07058824  0.48627454  0.          0.          0.\n  0.          0.          0.          0.          0.          0.\n  0.32941177  0.99607849  0.99607849  0.65098041  0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.54509807  0.99607849  0.9333334   0.22352943  0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.\n  0.82352948  0.98039222  0.99607849  0.65882355  0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.94901967  0.99607849  0.93725497  0.22352943  0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.\n  0.34901962  0.98431379  0.9450981   0.33725491  0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.\n  0.01960784  0.80784321  0.96470594  0.6156863   0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.01568628  0.45882356  0.27058825  0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.        ]\n>>> print mnist.train.labels[0]\n[ 0.  0.  0.  0.  0.  0.  0.  1.  0.  0.]\n\n0\u3067\u306a\u3044\u3068\u3053\u308d\u304c\u30c9\u30c3\u30c8\u304c\u3042\u308b\u30d4\u30af\u30bb\u30eb\u3001labels\u306f\u3069\u306e\u6570\u5b57\u304b(\u3053\u306e\u5834\u5408\u306f7)\u3092\u8868\u3057\u3066\u3044\u308b\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u308c\u3092JPEG\u5316\u3059\u308b\u30b3\u30fc\u30c9\u304c\u3053\u3061\u3089\u3002\n\nmnist_to_jpg.py\n\\# import MNIST dataset as TensorFlow format\nfrom tensorflow.examples.tutorials.mnist import input_data\nmnist = input_data.read_data_sets('MNIST_data', one_hot=True)\n\n\\# import Pillow(PIL) library\nfrom PIL import Image\nim = Image.new('RGB', (28, 28), (255, 255, 255))  # create 28x28 image buffer\n\n\\# counter for each number\ncounter = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\n\\# loop whole train data\nfor i in range(len(mnist.train.images)):\n  \\# set label from labels array\n  for l in range(len(mnist.train.labels[i])):\n    if mnist.train.labels[i, l] > 0:\n      label = l\n  \\# conver MNIST image to jpeg format\n  for y in range(28):\n    for x in range(28):\n      w = mnist.train.images[i, y * 28 + x]\n      w = 255 - int(w * 255)\n      im.putpixel((x, y), (w, w, w))\n  filename = 'images/' + str(label) + '_' + str(counter[label]).zfill(4) + '.jpg'\n  im.save(filename, 'JPEG', quality=100, optimize=True)\n  counter[label] = counter[label] + 1\n  if i % 1000 == 0:\n    print str(i) + ' images completed.'\ni = i + 1\n\n\\# summary\nfor label in range(10):\n  print 'number ' + str(label) + ' : ' + str(counter[label]) + ' images converted.'\nprint 'total : ' + str(i) + ' images completed.'\n\n\n\u3082\u3061\u308d\u3093TensorFlow\u304c\u5c0e\u5165\u3055\u308c\u3066\u3044\u308b\u74b0\u5883\u3067\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n\u307e\u305f\u3001JPEG\u753b\u50cf\u751f\u6210\u306e\u305f\u3081\u306b\u3001Pillow\u3001libjpeg-dev\u3092pip install\u3067\u5c0e\u5165\u3057\u3066\u3044\u308b\u3002\n\u7d50\u679c\u3001\u3053\u3093\u306a\u611f\u3058\u3067jpeg\u753b\u50cf\u3092\u62bd\u51fa\u3067\u304d\u305f\u3002\n\n\n\u753b\u50cf\u3092zip\u5727\u7e2e\u3059\u308b\nVisual Recognition\u306e\u5236\u7d04\u3068\u3057\u3066\u3001zip\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u306e\u753b\u50cf\u306f10,000\u679a\u307e\u3067\u3001\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u3002\u307e\u304110,000\u679a\u5165\u308c\u305f\u3053\u3068\u306f\u7121\u3044\u306e\u3067\u3001\u672c\u5f53\u306b\u306f\u3058\u304b\u308c\u308b\u306e\u304b\u306f\u4e0d\u660e\u306a\u306e\u3060\u304c\u3002\n\u5bfe\u3057\u3066\u3001MNIST\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u679a\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u3066\u3001POSITIVE\u753b\u50cf\u306f\u3044\u3044\u304c\u3001NEGATIVE\u753b\u50cf\u3067\u4ed6\u5168\u3066\u3092\u6307\u5b9a\u3059\u308b\u306850,000\u679a\u8fd1\u304f\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\n\n\n\n\u6570\u5b57\n\u679a\u6570\n\n\n\n\n0\n5444\n\n\n1\n6179\n\n\n2\n5470\n\n\n3\n5638\n\n\n4\n5307\n\n\n5\n4987\n\n\n6\n5417\n\n\n7\n5715\n\n\n8\n5389\n\n\n9\n5454\n\n\n\n\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u3001NEGATIVE\u30a4\u30e1\u30fc\u30b8\u306f\u5404\u6570\u5b57\u306e\u6700\u521d\u306e1,000\u679a\u3092\u4f7f\u3063\u3066zip\u3057\u305f(\u3064\u307e\u308a\u5408\u8a089,000\u679a)\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067zip\u3092\u5b9f\u884c\u30020000\uff5e0999\u307e\u30671000\u679a\u3092zip\u306b\u5165\u308c\u308b\u3002\u3053\u308c\u30920\u304b\u30899\u307e\u3067\u5b9f\u884c\u3002\nzip -rjq number0.zip images/0_*\nzip -rjq not0.zip images/1_0* images/2_0* images/3_0* images/4_0* images/5_0* images/6_0* images/7_0* images/8_0* images/9_0*\n\n\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\n\u30c7\u30fc\u30bf\u306e\u6e96\u5099\u304c\u3067\u304d\u305f\u3089\u6b21\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3002\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306f\u305f\u3060\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3064\u3060\u3051\u30020\u306e\u5b66\u7fd2\u306f\u3053\u3093\u306a\u611f\u3058\u3002\ncurl -k -F \"name=Number0\" -F \"positive_examples=@number0.zip\" -F \"negative_examples=@not0.zip\" -X POST -u \"\u30e6\u30fc\u30b6\u30fcID\":\"\u30d1\u30b9\u30ef\u30fc\u30c9\" \"https://gateway.watsonplatform.net/visual-recognition-beta/api/v2/classifiers?version=2015-12-02\"\n\n\u3053\u3053\u3067\u5fcd\u8010\u529b\u304c\u8a66\u3055\u308c\u308b\u3002\u3053\u306e\u5206\u91cf\u3060\u3068\u5e73\u57472\u6642\u9593\u304f\u3089\u3044\u304b\u304b\u3063\u305f\u300212\uff5e15\u6642\u3042\u305f\u308a\u306f1\u6642\u9593\u7a0b\u5ea6\u3067\u7d42\u308f\u308b\u3053\u3068\u3082\u3042\u308b\u3002\u30a2\u30e1\u30ea\u30ab\u3001\u30e8\u30fc\u30ed\u30c3\u30d1\u304c\u307e\u3060\u5bdd\u3066\u3044\u308b\u304b\u3089\u30b5\u30fc\u30d0\u30fc\u306e\u596a\u3044\u5408\u3044\u306b\u306a\u3089\u306a\u3044\u306e\u3060\u308d\u3046\u304b\u3002\n\u3057\u304b\u3082\u3001\u7406\u7531\u306f\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u304c\u3001\u7b46\u8005\u306e\u74b0\u5883\u3067\u306fcurl\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u3053\u306a\u304b\u3063\u305f\u300212\u6642\u9593\u304f\u3089\u3044\u6d41\u3057\u3066\u3066\u3082\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u7121\u304f\u3001Classifier list\u3092\u8868\u793a\u3055\u305b\u305f\u3089\u3044\u305f\u3001\u3068\u3044\u3046\u3002\u3068\u3044\u3046\u3053\u3068\u3067\u300130\u5206\u304a\u304d\u304f\u3089\u3044\u306b\u30ea\u30b9\u30c8\u3092\u8868\u793a\u3055\u305b\u3066\u5b66\u7fd2\u304c\u5b8c\u4e86\u3057\u3066\u3044\u306a\u3044\u304b\u78ba\u8a8d\u3059\u308b\u3068\u3088\u3044\u3002\ncurl -k -X GET -u \"\u30e6\u30fc\u30b6\u30fcID\":\"\u30d1\u30b9\u30ef\u30fc\u30c9\" \"https://gateway.watsonplatform.net/visual-recognition-beta/api/v2/classifiers?version=2015-12-02\" | grep Number\n\n\nClassifierlist\u3092\u4f5c\u6210\u3059\u308b\nVisual Recognition\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u305f\u304f\u3055\u3093\u306eClassifier\u304c\u5165\u3063\u3066\u3044\u308b\u3002\u304c\u3001MNIST\u306e\u78ba\u8a8d\u306b\u306f\u4e0d\u8981\u3060\u3002\u3053\u3053\u3067\u95a2\u4fc2\u3042\u308bClassifier\u3060\u3051\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\u3002\ncurl -k -X GET -u \"9516f963-8707-4b27-a6bd-a50a275f6c2f\":\"widyHX4Trdki\" \"https://gateway.watsonplatform.net/visual-recognition-beta/api/v2/classifiers?version=2015-12-02\" | grep Number\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:--  0:00:04 --:--:--     0  {\"classifier_id\":\"Number0_608087973\",\"name\":\"Number0\"},\n    {\"classifier_id\":\"Number1_2074379561\",\"name\":\"Number1\"},\n    {\"classifier_id\":\"Number2_1972121249\",\"name\":\"Number2\"},\n    {\"classifier_id\":\"Number3_1153621741\",\"name\":\"Number3\"},\n    {\"classifier_id\":\"Number4_2057359017\",\"name\":\"Number4\"},\n    {\"classifier_id\":\"Number5_246622786\",\"name\":\"Number5\"},\n    {\"classifier_id\":\"Number6_2085538018\",\"name\":\"Number6\"},\n    {\"classifier_id\":\"Number7_1082710397\",\"name\":\"Number7\"},\n    {\"classifier_id\":\"Number8_2024810030\",\"name\":\"Number8\"},\n    {\"classifier_id\":\"Number9_604087810\",\"name\":\"Number9\"},\n100 38536    0 38536    0     0   7204      0 --:--:--  0:00:05 --:--:-- 10090\n\n\u3053\u308c\u3092\u3053\u3046\u6574\u5f62\u3057\u3001json\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3002\n\nclassifierlist_Numbers.json\n{ \"classifiers\":[\n    {\"classifier_id\":\"Number0_608087973\",\"name\":\"Number0\"},\n    {\"classifier_id\":\"Number1_2074379561\",\"name\":\"Number1\"},\n    {\"classifier_id\":\"Number2_1972121249\",\"name\":\"Number2\"},\n    {\"classifier_id\":\"Number3_1153621741\",\"name\":\"Number3\"},\n    {\"classifier_id\":\"Number4_2057359017\",\"name\":\"Number4\"},\n    {\"classifier_id\":\"Number5_246622786\",\"name\":\"Number5\"},\n    {\"classifier_id\":\"Number6_2085538018\",\"name\":\"Number6\"},\n    {\"classifier_id\":\"Number7_1082710397\",\"name\":\"Number7\"},\n    {\"classifier_id\":\"Number8_2024810030\",\"name\":\"Number8\"},\n    {\"classifier_id\":\"Number9_604087810\",\"name\":\"Number9\"}\n]}\n\n\n\nVisual Recognition\u306e\u30c6\u30b9\u30c8\n\u5b66\u7fd2\u304c\u7d42\u308f\u3063\u305f\u3089\u30c6\u30b9\u30c8\u3092\u3057\u3066\u307f\u3088\u3046\u3002\ncurl\u306a\u3089\u3070\u3053\u3093\u306a\u611f\u3058\u3002\ncurl -k -u \"\u30e6\u30fc\u30b6\u30fcID\":\"\u30d1\u30b9\u30ef\u30fc\u30c9\" -X POST -F \"images_file=@images/0_0000.jpg\" -F \"classifier_ids=<classifierlist_Numbers.json\" \"https://gateway.watsonplatform.net/visual-recognition-beta/api/v2/classify?version=2015-12-02\"\n\n\nPython\u304b\u3089Visual Recognition\u3092\u547c\u3076\nMNIST\u306e\u624b\u66f8\u304d\u6570\u5b57\u306e\u30a2\u30d7\u30ea\u3092\u6539\u9020\u3059\u308b\u5834\u5408\u3001Visual Recognition\u3092\u547c\u3076\u3068\u3053\u308d\u306fPython\u3067\u66f8\u304f\u3053\u3068\u306b\u306a\u308b\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001Python\u304b\u3089Visual Recognition\u3092\u547c\u3076\u65b9\u6cd5\u3092\u8abf\u3079\u3066\u307f\u305f\u3002\n\u3053\u308c\u3060\u3002\nhttps://github.com/watson-developer-cloud/python-sdk\n\u305d\u306e\u3082\u306e\u305a\u3070\u308a\u3002\u3053\u308c\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u547c\u3073\u51fa\u305b\u308b\u3002\npip install watson-developer-cloud\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u4f7f\u304a\u3046\u3002\njson\u3001join\u3001dirname\u3082\u5fc5\u8981\u306a\u306e\u3067\u5165\u3063\u3066\u306a\u304b\u3063\u305f\u3089\u3044\u308c\u3066\u304a\u304f\u3002\n\nvr_sample.py\nimport json\nfrom os.path import join, dirname\nfrom watson_developer_cloud import VisualRecognitionV2Beta as VisualRecognition\nvisual_recognition = VisualRecognition(version='2015-12-02', username='\u30e6\u30fc\u30b6\u30fc\u540d',\n                                       password='\u30d1\u30b9\u30ef\u30fc\u30c9')\nwith open(join(dirname('__file__'), 'images/0_0000.jpg'), 'rb') as image_file:\n    print(json.dumps(visual_recognition.classify(image_file, classifier_ids=['Number0_608087973', 'Number1_2074379561', 'Number2_1972121249', 'Number3_1153621741', 'Number4_2057359017', 'Number5_246622786', 'Number6_2085538018', 'Number7_1082710397', 'Number8_2024810030', 'Number9_604087810']), indent=2))\n\n\n\u52d5\u304b\u3059\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308b\u3002\n$ python vr_sample.py \n{\n  \"images\": [\n    {\n      \"image\": \"0_0000.jpg\", \n      \"scores\": [\n        {\n          \"score\": 0.722599, \n          \"classifier_id\": \"Number0_608087973\", \n          \"name\": \"Number0\"\n        }\n      ]\n    }\n  ]\n}\n\n\u3053\u308c\u3067\u5168\u90e8\u306e\u6e96\u5099\u304c\u6574\u3063\u305f\u3002\n\nMNIST\u30a2\u30d7\u30ea\u306e\u30b3\u30fc\u30c9\u3092\u6539\u9020\u3059\u308b\nMNIST\u306e\u624b\u66f8\u304d\u6570\u5b57\u30a2\u30d7\u30ea\u3092\u6539\u9020\u3057\u3066Visual Recognition\u306e\u547c\u3073\u51fa\u3057\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\nmain.py\n\u307e\u305a\u306f\u30e1\u30a4\u30f3\u306ePython\u30b3\u30fc\u30c9\u304b\u3089\u3002\n\u5192\u982d\u306eimport\u306e\u3042\u305f\u308a\u306bwatson_developer_cloud\u3068PIL(\u753b\u50cf\u51e6\u7406)\u3092\u8ffd\u52a0\u3059\u308b\u3002\n# Watson : Visual Recognition\nimport json\nfrom os.path import join, dirname\nfrom watson_developer_cloud import VisualRecognitionV2Beta as VisualRecognition\nvisual_recognition = VisualRecognition(version='2015-12-02', username='\u30e6\u30fc\u30b6\u30fcID',\n                                       password='\u30d1\u30b9\u30ef\u30fc\u30c9')\n# import Pillow(PIL) library\nfrom PIL import Image\nim = Image.new('RGB', (28, 28), (255, 255, 255))  # create 28x28 image buffer\n\n\u305d\u3057\u3066\u3001\u9014\u4e2d\u306bVisual Recognition\u3092\u547c\u3073\u51fa\u3057\u3066\u7d50\u679c\u3092\u6574\u5f62\u3057\u3066\u8fd4\u3059\u95a2\u6570\u3092\u8ffd\u52a0\u3059\u308b\u3002\n# create jpeg image and call visual recognition service\ndef vr_classify(input):\n    for y in range(28):\n        for x in range(28):\n            w = int(input[0, y * 28 + x] * 255)\n            im.putpixel((x, y), (w, w, w))\n    im.save('./tmp.jpg', 'JPEG', quality=100, optimize=True)\n    with open(join(dirname('__file__'), './tmp.jpg'), 'rb') as image_file:\n        vr_result = visual_recognition.classify(image_file, classifier_ids=['Number0_608087973', 'Number1_2074379561', 'Number2__1972121249', 'Number3_1153621741', 'Number4_2057359017', 'Number5_246622786', 'Number6_2085538018', 'Number7_1082710397', 'Number8_2024810030', 'Number9_604087810'])\n    vr_scores = vr_result['images'][0]['scores']\n    vr_dict = dict(Number0 = 0, Number1 = 0, Number2 = 0, Number3 = 0, Number4 = 0, Number5 = 0, Number6 = 0, Number7 = 0, Number8 = 0, Number9 = 0)\n    for vs in range(len(vr_scores)):\n        vr_score = vr_scores[vs]\n        vr_name = vr_score['name']\n        vr_dict[vr_name] = vr_score['score']\n    vr_result = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    for i in range(10):\n        vr_result[i] = vr_dict['Number' + str(i)]\n    return vr_result\n\n\u6700\u5f8c\u306b\u3001\u65e2\u5b58\u30b3\u30fc\u30c9\u306eAPI\u547c\u3073\u51fa\u3057\u5185\u90e8\u306b\u3001output3\u3092\u8ffd\u52a0\u3059\u308b\u3002\n@app.route('/api/mnist', methods=['POST'])\ndef mnist():\n    input = ((255 - np.array(request.json, dtype=np.uint8)) / 255.0).reshape(1, 784)\n    output1 = simple(input)\n    output2 = convolutional(input)\n    output3 = vr_classify(input)\n    return jsonify(results=[output1, output2, output3])\n\n\nindex.html\nHTML\u30d5\u30a1\u30a4\u30eb\u306fVisual Recognition\u306e\u7d50\u679c\u3092\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u306b\u753b\u9762\u3092\u5c11\u3057\u4fee\u6b63\u3059\u308b\u3002\u9014\u4e2d\u304b\u3089\u3060\u3051\u3069\u3053\u3093\u306a\u611f\u3058\u3002\u77e2\u5370\u3067\u6ce8\u91c8\u3092\u3064\u3051\u3066\u3044\u308b\u3042\u305f\u308a\u304c\u5909\u66f4\u70b9\u3002\n    <div class=\"container\">\n      <h1>MNIST</h1>\n      <div class=\"row\">\n        <div class=\"col-md-5\">\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2190 Bootstrap\u306e\u30b0\u30ea\u30c3\u30c9\u30b7\u30b9\u30c6\u30e0\u3002\u5e45\u30926\u21925\u306b\u3059\u308b\n          <p>draw a digit here!</p>\n          <canvas id=\"main\"></canvas>\n          <p>\n            <button id=\"clear\" class=\"btn btn-default\">clear</button>\n          </p>\n        </div>\n        <div class=\"col-md-7\">\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2190 \u5e45\u30925\u21927\u306b\u3059\u308b\u3002\u3053\u308c\u3067\u5408\u8a0812\u3002\n          <p>input:</p>\n          <canvas id=\"input\" style=\"border:1px solid\" width=\"140\" height=\"140\"></canvas>\n          <hr>\n          <p>output:</p>\n          <table id=\"output\" class=\"table\">\n            <tr>\n              <th class=\"col-md-1\"></th>\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2190 \u5e45\u30922\u21921\u306b\u3059\u308b\n              <th class=\"col-md-2\">simple</th>\n              <th class=\"col-md-2\">convolutional</th>\n              <th class=\"col-md-2\">Watson</th>\u3000\u3000\u3000\u3000\u3000\u2190 Watson\u306e\u5217\u3092\u8ffd\u52a0\u3002\u5e45\u306f2\u3002\u3053\u308c\u3067\u5408\u8a087\u3002\n            </tr>\n            <tr>\n              <th>0</th>\n              <td></td>\n              <td></td>\n              <td></td>\u3000\u3000\u3000\u3000\u3000\u2190 \u8ffd\u52a0\n            </tr>              <th>1</th>\n              <td></td>\n              <td></td>\n              <td></td>\u3000\u3000\u3000\u3000\u3000\u2190 \u8ffd\u52a0\n            </tr>\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000(\u4ee5\u4e0b\u7565)\n\n\nmain.js\n\u7d50\u679c\u3092HTML\u306b\u57cb\u3081\u308b\u51e6\u7406\u306e\u7e70\u308a\u8fd4\u3057\u30922\u56de\u21923\u56de\u306b\u3059\u308b\u3002\u305d\u308c\u3068\u3001Visual Recognition\u306f\u78ba\u4fe1\u5ea60.5\u672a\u6e80\u306f\u30b9\u30b3\u30a2\u3092\u8fd4\u3055\u306a\u3044\u306e\u3067\u305d\u308c\u306b\u5bfe\u5fdc\u3057\u305f\u3002\n            $.ajax({\n                url: '/api/mnist',\n                method: 'POST',\n                contentType: 'application/json',\n                data: JSON.stringify(inputs),\n                success: (data) => {\n                    for (var i = 0; i < 3; i++) {\u3000\u3000\u3000\u3000\u3000 // \u2190 3\u56de\u7e70\u308a\u8fd4\u3059(Simple,COnvolutional,Watson)\n                        var max = 0;\n                        var max_index = 0;\n                        for (var j = 0; j < 10; j++) {\n                            var value = Math.round(data.results[i][j] * 1000);\n                            if (value > max) {\n                                max = value;\n                                max_index = j;\n                            }\n                            var digits = String(value).length;\n                            for (var k = 0; k < 3 - digits; k++) {\n                                value = '0' + value;\n                            }\n                            var text = '0.' + value;\n                            if (value > 999) {\n                                text = '1.000';\n                            }\n                            if (i == 2 && value == 0) {\u3000\u3000\u3000// \u2190 VisualRecognition\u306f\u78ba\u4fe1\u5ea6\u304c0.5\u672a\u6e80\u306e\u5834\u5408\u306f\u7d50\u679c\u3092\u8fd4\u3055\u306a\u3044\u3002\u5909\u6570\u306e\u521d\u671f\u5024(=0)\u306e\u5834\u5408\u306f\u300c< 0.500\u300d\u3092\u8868\u793a\n                                text = '< 0.500';\n                            }\n                            $('#output tr').eq(j + 1).find('td').eq(i).text(text);\n                        }\n                        for (var j = 0; j < 10; j++) {\n                            if (j === max_index) {\n                                $('#output tr').eq(j + 1).find('td').eq(i).addClass('success');\n                            } else {\n                                $('#output tr').eq(j + 1).find('td').eq(i).removeClass('success');\n                            }\n                        }\n                    }\n                }\n            });\n\n\n\u30a2\u30d7\u30ea\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u6bd4\u8f03\u3059\u308b\n\u30a2\u30d7\u30ea\u3092\u5b9f\u884c\u3057\u3066\u307f\u3088\u3046\u3002Visual Recognition\u306f\u5916\u90e8\u306bAPI\u547c\u3073\u51fa\u3057\u3092\u884c\u3063\u3066\u3044\u308b\u306e\u3067\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\u307e\u3067\u6570\u79d2\u304b\u304b\u308b\u306e\u3067\u3042\u305b\u3089\u305a\u306b\u3002\n\n\u304a\uff01\u3044\u3051\u308b\u3084\u3093\u3051\uff01\uff01\n\n\u3080\u3080\u3080\u30fb\u30fb\u30fb\n\n\u307e\u3041\u3053\u3093\u306a\u3082\u3093\u304b\u306a\u3002\n\n\u304a\u308f\u308a\u306b\n\u5f97\u610f\u306a\u7a2e\u985e\u306e\u753b\u50cf\u3067\u306f\u306a\u3044\u306e\u3067Visual Recognition\u306f\u82e6\u6226\u3059\u308b\u304b\u3068\u601d\u3044\u304d\u3084\u305d\u3046\u3067\u3082\u306a\u304b\u3063\u305f\u3002\u306a\u304b\u306a\u304b\u9811\u5f35\u3063\u3066\u3044\u305f\u3068\u601d\u3046\u3002TensorFlow\u306f\u81ea\u5206\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u8a2d\u8a08\u3067\u304d\u308b\u306e\u3067\u3001MNIST\u306b\u7279\u5316\u3057\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3084\u3001\u5199\u771f\u306b\u7279\u5316\u3057\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u7d44\u3081\u308b\u3060\u308d\u3046\u3002\u4e00\u65b9\u3001Visual Recognition\u306f\u3069\u3093\u306a\u5199\u771f\u3067\u3082\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u5171\u901a(\u305f\u3076\u3093)\u306a\u306e\u3067\u3001\u6c4e\u7528\u6027\u304c\u9ad8\u3044\u304c\u3001\u7cbe\u5ea6\u306f\u843d\u3061\u308b\u306e\u306f\u5426\u3081\u306a\u3044\u3002\u305d\u308c\u3067\u3082\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a2d\u8a08\u306a\u3057\u306b\u753b\u50cf\u8a8d\u8b58\u3067\u304d\u308b\u3093\u3060\u304b\u3089\u3001Visual Recogntion\u306f\u306a\u304b\u306a\u304b\u4f7f\u3048\u308bAPI\u306a\u3093\u3058\u3083\u306a\u3044\u3060\u308d\u3046\u304b\u3002\n# \u306f\u3058\u3081\u306b\nWatson\u306eVisual Recognition\u304cV2\u306b\u306a\u3063\u3066\u5b66\u7fd2\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002Visual Recognition\u306b\u3064\u3044\u3066\u306f[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://qiita.com/mfujita/items/a6bfcffae8097807f6a0)\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3046\u3002\u3067\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066[MNIST\u306e\u624b\u66f8\u304d\u6570\u5b57](http://yann.lecun.com/exdb/mnist/)\u306e\u5206\u985e\u3092\u3084\u3063\u305f\u3089\u3069\u3046\u306a\u308b\u306e\u304b\u8a66\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u3066\u3084\u3063\u3066\u307f\u305f\u3002\u3093\u3067\u3001\u3069\u3046\u305b\u306a\u3089Google\u306eTensorFlow\u3068\u6bd4\u8f03\u3057\u3066\u307f\u3088\u3046\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3001[\u3053\u3061\u3089\u3067\u516c\u958b](http://d.hatena.ne.jp/sugyan/20151124/1448292129)\u3055\u308c\u3066\u3044\u308b\u624b\u66f8\u304d\u30a2\u30d7\u30ea\u3092\u30d9\u30fc\u30b9\u306b\u3001Watson\u3078\u306e\u554f\u3044\u5408\u308f\u305b\u3092\u8ffd\u52a0\u3057\u3066\u307f\u305f\u3002\n\n![MNIST.png](https://qiita-image-store.s3.amazonaws.com/0/102519/75e0f8ed-4017-30c7-cf55-90eb9783a84b.png)\n\n<font color=\"red\">\u306a\u304a\u3001Visual Recognition\u304c\u5f97\u610f\u3068\u3059\u308b\u306e\u306f200x200\u4ee5\u4e0a\u306e\u753b\u50cf\u3002320x320\u304f\u3089\u3044\u304c\u3044\u3044\u3089\u3057\u3044\u3002\u4e00\u65b9\u3001MNIST\u306e\u30c7\u30fc\u30bf\u306f28x28\u3002\u6b63\u76f4\u3001VisualRecognition\u306b\u52dd\u3061\u76ee\u306f\u7121\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u3060\u304c\u52dd\u3061\u8ca0\u3051\u306e\u554f\u984c\u3067\u306f\u306a\u3044\u306e\u3060\u3002</font>\n\n# Visual Recognition\u306e\u4f7f\u3044\u65b9\n\u4f7f\u3044\u65b9\u306f\u5148\u307b\u3069\u3082\u7d39\u4ecb\u3057\u305f[\u3053\u3061\u3089](http://qiita.com/mfujita/items/a6bfcffae8097807f6a0)\u3092\u898b\u308b\u3068\u3088\u304f\u308f\u304b\u308b\u3002\n\u3053\u3053\u3067\u91cd\u8981\u306a\u306e\u306f\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u305f\u3081\u306b\u306f**JPEG/PNG/GIF\u753b\u50cf\u3092zip\u5727\u7e2e\u3057\u3066\u5165\u529b\u3059\u308b**\u3053\u3068\u3001**POSITIVE\u753b\u50cf\u3068NEGATIVE\u753b\u50cf\u304c\u305d\u308c\u306a\u308a\u306e\u679a\u6570\u5fc5\u8981\u3067\u3042\u308b**\u3053\u3068\u3060\u3002\n\u7279\u306b1\u3064\u76ee\u3060\u304c\u3001MNIST\u306e\u30c7\u30fc\u30bf\u306f\u30c9\u30c3\u30c8\u3054\u3068\u306e\u6fc3\u5ea6\u3092\u6570\u5024\u5316\u3057\u305f\u3082\u306e\u306a\u306e\u3067\u3001\u3053\u308c\u3092JPEG\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n# MNIST\u306e\u30c7\u30fc\u30bf\u3092JPEG\u5316\u3059\u308b\nMNIST\u306e\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u306f\u3001TensorFlow\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3057\u3066\u307f\u305f\u3002\n\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\n```python:TensorFlow\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\nfrom tensorflow.examples.tutorials.mnist import input_data\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\n```\n\n\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u304c`mnist`\u306b\u683c\u7d0d\u3055\u308c\u308b\u3002\u3082\u3046\u5c11\u3057\u6398\u308a\u4e0b\u3052\u308b\u3068\u3001`mnist.train.images`\u3068`mnist.train.labels`\u3068\u3044\u3046\u5909\u6570\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u3002\n\u3053\u308c\u3089\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u308b\u3068\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3060\u3063\u305f\u3002\n\n```python\n>>> print mnist.train.images\n[[ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n ..., \n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]]\n>>> print mnist.train.labels\n[[ 0.  0.  0. ...,  1.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n ..., \n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  1.  0.]]\n```\n\n\u914d\u5217\u306a\u306e\u3067\u30011\u3064\u76ee\u306e\u8981\u7d20(1\u6587\u5b57\u76ee\u306e\u30c7\u30fc\u30bf)\u3060\u3051\u629c\u304d\u51fa\u3059\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n\n```py\n>>> print mnist.train.images[0]\n[ 0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.38039219  0.37647063\n  0.3019608   0.46274513  0.2392157   0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.35294119  0.5411765\n  0.92156869  0.92156869  0.92156869  0.92156869  0.92156869  0.92156869\n  0.98431379  0.98431379  0.97254908  0.99607849  0.96078438  0.92156869\n  0.74509805  0.08235294  0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.\n  0.54901963  0.98431379  0.99607849  0.99607849  0.99607849  0.99607849\n  0.99607849  0.99607849  0.99607849  0.99607849  0.99607849  0.99607849\n  0.99607849  0.99607849  0.99607849  0.99607849  0.74117649  0.09019608\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.88627458  0.99607849  0.81568635\n  0.78039223  0.78039223  0.78039223  0.78039223  0.54509807  0.2392157\n  0.2392157   0.2392157   0.2392157   0.2392157   0.50196081  0.8705883\n  0.99607849  0.99607849  0.74117649  0.08235294  0.          0.          0.\n  0.          0.          0.          0.          0.          0.\n  0.14901961  0.32156864  0.0509804   0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.13333334  0.83529419  0.99607849  0.99607849  0.45098042  0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.32941177  0.99607849  0.99607849  0.91764712  0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.32941177  0.99607849  0.99607849  0.91764712  0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.41568631  0.6156863   0.99607849  0.99607849  0.95294124  0.20000002\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.09803922  0.45882356  0.89411771\n  0.89411771  0.89411771  0.99215692  0.99607849  0.99607849  0.99607849\n  0.99607849  0.94117653  0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.26666668  0.4666667   0.86274517\n  0.99607849  0.99607849  0.99607849  0.99607849  0.99607849  0.99607849\n  0.99607849  0.99607849  0.99607849  0.55686277  0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.14509805  0.73333335  0.99215692\n  0.99607849  0.99607849  0.99607849  0.87450987  0.80784321  0.80784321\n  0.29411766  0.26666668  0.84313732  0.99607849  0.99607849  0.45882356\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.44313729\n  0.8588236   0.99607849  0.94901967  0.89019614  0.45098042  0.34901962\n  0.12156864  0.          0.          0.          0.          0.7843138\n  0.99607849  0.9450981   0.16078432  0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.66274512  0.99607849  0.6901961   0.24313727  0.          0.\n  0.          0.          0.          0.          0.          0.18823531\n  0.90588242  0.99607849  0.91764712  0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.07058824  0.48627454  0.          0.          0.\n  0.          0.          0.          0.          0.          0.\n  0.32941177  0.99607849  0.99607849  0.65098041  0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.54509807  0.99607849  0.9333334   0.22352943  0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.\n  0.82352948  0.98039222  0.99607849  0.65882355  0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.94901967  0.99607849  0.93725497  0.22352943  0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.\n  0.34901962  0.98431379  0.9450981   0.33725491  0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.\n  0.01960784  0.80784321  0.96470594  0.6156863   0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.01568628  0.45882356  0.27058825  0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.\n  0.          0.          0.          0.          0.          0.          0.        ]\n>>> print mnist.train.labels[0]\n[ 0.  0.  0.  0.  0.  0.  0.  1.  0.  0.]\n```\n\n0\u3067\u306a\u3044\u3068\u3053\u308d\u304c\u30c9\u30c3\u30c8\u304c\u3042\u308b\u30d4\u30af\u30bb\u30eb\u3001labels\u306f\u3069\u306e\u6570\u5b57\u304b(\u3053\u306e\u5834\u5408\u306f7)\u3092\u8868\u3057\u3066\u3044\u308b\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u308c\u3092JPEG\u5316\u3059\u308b\u30b3\u30fc\u30c9\u304c\u3053\u3061\u3089\u3002\n\n```python:mnist_to_jpg.py\n\\# import MNIST dataset as TensorFlow format\nfrom tensorflow.examples.tutorials.mnist import input_data\nmnist = input_data.read_data_sets('MNIST_data', one_hot=True)\n\n\\# import Pillow(PIL) library\nfrom PIL import Image\nim = Image.new('RGB', (28, 28), (255, 255, 255))  # create 28x28 image buffer\n\n\\# counter for each number\ncounter = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\n\\# loop whole train data\nfor i in range(len(mnist.train.images)):\n  \\# set label from labels array\n  for l in range(len(mnist.train.labels[i])):\n    if mnist.train.labels[i, l] > 0:\n      label = l\n  \\# conver MNIST image to jpeg format\n  for y in range(28):\n    for x in range(28):\n      w = mnist.train.images[i, y * 28 + x]\n      w = 255 - int(w * 255)\n      im.putpixel((x, y), (w, w, w))\n  filename = 'images/' + str(label) + '_' + str(counter[label]).zfill(4) + '.jpg'\n  im.save(filename, 'JPEG', quality=100, optimize=True)\n  counter[label] = counter[label] + 1\n  if i % 1000 == 0:\n    print str(i) + ' images completed.'\ni = i + 1\n\n\\# summary\nfor label in range(10):\n  print 'number ' + str(label) + ' : ' + str(counter[label]) + ' images converted.'\nprint 'total : ' + str(i) + ' images completed.'\n```\n\n\u3082\u3061\u308d\u3093TensorFlow\u304c\u5c0e\u5165\u3055\u308c\u3066\u3044\u308b\u74b0\u5883\u3067\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n\u307e\u305f\u3001JPEG\u753b\u50cf\u751f\u6210\u306e\u305f\u3081\u306b\u3001**Pillow\u3001libjpeg-dev**\u3092pip install\u3067\u5c0e\u5165\u3057\u3066\u3044\u308b\u3002\n\n\u7d50\u679c\u3001\u3053\u3093\u306a\u611f\u3058\u3067jpeg\u753b\u50cf\u3092\u62bd\u51fa\u3067\u304d\u305f\u3002\n![Number.png](https://qiita-image-store.s3.amazonaws.com/0/102519/8da4998d-c63a-c619-caa4-0ec306c9371a.png)\n\n# \u753b\u50cf\u3092zip\u5727\u7e2e\u3059\u308b\nVisual Recognition\u306e\u5236\u7d04\u3068\u3057\u3066\u3001zip\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u306e\u753b\u50cf\u306f10,000\u679a\u307e\u3067\u3001\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u3002\u307e\u304110,000\u679a\u5165\u308c\u305f\u3053\u3068\u306f\u7121\u3044\u306e\u3067\u3001\u672c\u5f53\u306b\u306f\u3058\u304b\u308c\u308b\u306e\u304b\u306f\u4e0d\u660e\u306a\u306e\u3060\u304c\u3002\n\u5bfe\u3057\u3066\u3001MNIST\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u679a\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u3066\u3001POSITIVE\u753b\u50cf\u306f\u3044\u3044\u304c\u3001NEGATIVE\u753b\u50cf\u3067\u4ed6\u5168\u3066\u3092\u6307\u5b9a\u3059\u308b\u306850,000\u679a\u8fd1\u304f\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\n\n|\u6570\u5b57|\u679a\u6570|\n|:---:|:---:|\n|0|5444|\n|1|6179|\n|2|5470|\n|3|5638|\n|4|5307|\n|5|4987|\n|6|5417|\n|7|5715|\n|8|5389|\n|9|5454|\n\n\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u3001NEGATIVE\u30a4\u30e1\u30fc\u30b8\u306f\u5404\u6570\u5b57\u306e\u6700\u521d\u306e1,000\u679a\u3092\u4f7f\u3063\u3066zip\u3057\u305f(\u3064\u307e\u308a\u5408\u8a089,000\u679a)\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067zip\u3092\u5b9f\u884c\u30020000\uff5e0999\u307e\u30671000\u679a\u3092zip\u306b\u5165\u308c\u308b\u3002\u3053\u308c\u30920\u304b\u30899\u307e\u3067\u5b9f\u884c\u3002\n\n```sh\nzip -rjq number0.zip images/0_*\nzip -rjq not0.zip images/1_0* images/2_0* images/3_0* images/4_0* images/5_0* images/6_0* images/7_0* images/8_0* images/9_0*\n```\n\n# \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\n\u30c7\u30fc\u30bf\u306e\u6e96\u5099\u304c\u3067\u304d\u305f\u3089\u6b21\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3002\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306f\u305f\u3060\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3064\u3060\u3051\u30020\u306e\u5b66\u7fd2\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\n```sh\ncurl -k -F \"name=Number0\" -F \"positive_examples=@number0.zip\" -F \"negative_examples=@not0.zip\" -X POST -u \"\u30e6\u30fc\u30b6\u30fcID\":\"\u30d1\u30b9\u30ef\u30fc\u30c9\" \"https://gateway.watsonplatform.net/visual-recognition-beta/api/v2/classifiers?version=2015-12-02\"\n```\n\n\u3053\u3053\u3067\u5fcd\u8010\u529b\u304c\u8a66\u3055\u308c\u308b\u3002\u3053\u306e\u5206\u91cf\u3060\u3068\u5e73\u57472\u6642\u9593\u304f\u3089\u3044\u304b\u304b\u3063\u305f\u300212\uff5e15\u6642\u3042\u305f\u308a\u306f1\u6642\u9593\u7a0b\u5ea6\u3067\u7d42\u308f\u308b\u3053\u3068\u3082\u3042\u308b\u3002\u30a2\u30e1\u30ea\u30ab\u3001\u30e8\u30fc\u30ed\u30c3\u30d1\u304c\u307e\u3060\u5bdd\u3066\u3044\u308b\u304b\u3089\u30b5\u30fc\u30d0\u30fc\u306e\u596a\u3044\u5408\u3044\u306b\u306a\u3089\u306a\u3044\u306e\u3060\u308d\u3046\u304b\u3002\n\u3057\u304b\u3082\u3001\u7406\u7531\u306f\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u304c\u3001\u7b46\u8005\u306e\u74b0\u5883\u3067\u306fcurl\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u3053\u306a\u304b\u3063\u305f\u300212\u6642\u9593\u304f\u3089\u3044\u6d41\u3057\u3066\u3066\u3082\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u7121\u304f\u3001Classifier list\u3092\u8868\u793a\u3055\u305b\u305f\u3089\u3044\u305f\u3001\u3068\u3044\u3046\u3002\u3068\u3044\u3046\u3053\u3068\u3067\u300130\u5206\u304a\u304d\u304f\u3089\u3044\u306b\u30ea\u30b9\u30c8\u3092\u8868\u793a\u3055\u305b\u3066\u5b66\u7fd2\u304c\u5b8c\u4e86\u3057\u3066\u3044\u306a\u3044\u304b\u78ba\u8a8d\u3059\u308b\u3068\u3088\u3044\u3002\n\n```sh\ncurl -k -X GET -u \"\u30e6\u30fc\u30b6\u30fcID\":\"\u30d1\u30b9\u30ef\u30fc\u30c9\" \"https://gateway.watsonplatform.net/visual-recognition-beta/api/v2/classifiers?version=2015-12-02\" | grep Number\n```\n\n# Classifierlist\u3092\u4f5c\u6210\u3059\u308b\nVisual Recognition\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u305f\u304f\u3055\u3093\u306eClassifier\u304c\u5165\u3063\u3066\u3044\u308b\u3002\u304c\u3001MNIST\u306e\u78ba\u8a8d\u306b\u306f\u4e0d\u8981\u3060\u3002\u3053\u3053\u3067\u95a2\u4fc2\u3042\u308bClassifier\u3060\u3051\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\u3002\n\n```sh\ncurl -k -X GET -u \"9516f963-8707-4b27-a6bd-a50a275f6c2f\":\"widyHX4Trdki\" \"https://gateway.watsonplatform.net/visual-recognition-beta/api/v2/classifiers?version=2015-12-02\" | grep Number\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:--  0:00:04 --:--:--     0\t{\"classifier_id\":\"Number0_608087973\",\"name\":\"Number0\"},\n\t{\"classifier_id\":\"Number1_2074379561\",\"name\":\"Number1\"},\n\t{\"classifier_id\":\"Number2_1972121249\",\"name\":\"Number2\"},\n\t{\"classifier_id\":\"Number3_1153621741\",\"name\":\"Number3\"},\n\t{\"classifier_id\":\"Number4_2057359017\",\"name\":\"Number4\"},\n\t{\"classifier_id\":\"Number5_246622786\",\"name\":\"Number5\"},\n\t{\"classifier_id\":\"Number6_2085538018\",\"name\":\"Number6\"},\n\t{\"classifier_id\":\"Number7_1082710397\",\"name\":\"Number7\"},\n\t{\"classifier_id\":\"Number8_2024810030\",\"name\":\"Number8\"},\n\t{\"classifier_id\":\"Number9_604087810\",\"name\":\"Number9\"},\n100 38536    0 38536    0     0   7204      0 --:--:--  0:00:05 --:--:-- 10090\n```\n\n\u3053\u308c\u3092\u3053\u3046\u6574\u5f62\u3057\u3001json\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3002\n\n```json:classifierlist_Numbers.json\n{ \"classifiers\":[\n    {\"classifier_id\":\"Number0_608087973\",\"name\":\"Number0\"},\n\t{\"classifier_id\":\"Number1_2074379561\",\"name\":\"Number1\"},\n\t{\"classifier_id\":\"Number2_1972121249\",\"name\":\"Number2\"},\n\t{\"classifier_id\":\"Number3_1153621741\",\"name\":\"Number3\"},\n\t{\"classifier_id\":\"Number4_2057359017\",\"name\":\"Number4\"},\n\t{\"classifier_id\":\"Number5_246622786\",\"name\":\"Number5\"},\n\t{\"classifier_id\":\"Number6_2085538018\",\"name\":\"Number6\"},\n\t{\"classifier_id\":\"Number7_1082710397\",\"name\":\"Number7\"},\n\t{\"classifier_id\":\"Number8_2024810030\",\"name\":\"Number8\"},\n\t{\"classifier_id\":\"Number9_604087810\",\"name\":\"Number9\"}\n]}\n```\n\n# Visual Recognition\u306e\u30c6\u30b9\u30c8\n\u5b66\u7fd2\u304c\u7d42\u308f\u3063\u305f\u3089\u30c6\u30b9\u30c8\u3092\u3057\u3066\u307f\u3088\u3046\u3002\ncurl\u306a\u3089\u3070\u3053\u3093\u306a\u611f\u3058\u3002\n\n```sh\ncurl -k -u \"\u30e6\u30fc\u30b6\u30fcID\":\"\u30d1\u30b9\u30ef\u30fc\u30c9\" -X POST -F \"images_file=@images/0_0000.jpg\" -F \"classifier_ids=<classifierlist_Numbers.json\" \"https://gateway.watsonplatform.net/visual-recognition-beta/api/v2/classify?version=2015-12-02\"\n```\n\n# Python\u304b\u3089Visual Recognition\u3092\u547c\u3076\nMNIST\u306e\u624b\u66f8\u304d\u6570\u5b57\u306e\u30a2\u30d7\u30ea\u3092\u6539\u9020\u3059\u308b\u5834\u5408\u3001Visual Recognition\u3092\u547c\u3076\u3068\u3053\u308d\u306fPython\u3067\u66f8\u304f\u3053\u3068\u306b\u306a\u308b\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001Python\u304b\u3089Visual Recognition\u3092\u547c\u3076\u65b9\u6cd5\u3092\u8abf\u3079\u3066\u307f\u305f\u3002\n\u3053\u308c\u3060\u3002\n[https://github.com/watson-developer-cloud/python-sdk](https://github.com/watson-developer-cloud/python-sdk)\n\u305d\u306e\u3082\u306e\u305a\u3070\u308a\u3002\u3053\u308c\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u547c\u3073\u51fa\u305b\u308b\u3002\n`pip install watson-developer-cloud`\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u4f7f\u304a\u3046\u3002\njson\u3001join\u3001dirname\u3082\u5fc5\u8981\u306a\u306e\u3067\u5165\u3063\u3066\u306a\u304b\u3063\u305f\u3089\u3044\u308c\u3066\u304a\u304f\u3002\n\n```py:vr_sample.py\nimport json\nfrom os.path import join, dirname\nfrom watson_developer_cloud import VisualRecognitionV2Beta as VisualRecognition\nvisual_recognition = VisualRecognition(version='2015-12-02', username='\u30e6\u30fc\u30b6\u30fc\u540d',\n                                       password='\u30d1\u30b9\u30ef\u30fc\u30c9')\nwith open(join(dirname('__file__'), 'images/0_0000.jpg'), 'rb') as image_file:\n    print(json.dumps(visual_recognition.classify(image_file, classifier_ids=['Number0_608087973', 'Number1_2074379561', 'Number2_1972121249', 'Number3_1153621741', 'Number4_2057359017', 'Number5_246622786', 'Number6_2085538018', 'Number7_1082710397', 'Number8_2024810030', 'Number9_604087810']), indent=2))\n```\n\n\u52d5\u304b\u3059\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308b\u3002\n\n```sh\n$ python vr_sample.py \n{\n  \"images\": [\n    {\n      \"image\": \"0_0000.jpg\", \n      \"scores\": [\n        {\n          \"score\": 0.722599, \n          \"classifier_id\": \"Number0_608087973\", \n          \"name\": \"Number0\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n\u3053\u308c\u3067\u5168\u90e8\u306e\u6e96\u5099\u304c\u6574\u3063\u305f\u3002\n\n# MNIST\u30a2\u30d7\u30ea\u306e\u30b3\u30fc\u30c9\u3092\u6539\u9020\u3059\u308b\n[MNIST\u306e\u624b\u66f8\u304d\u6570\u5b57\u30a2\u30d7\u30ea](http://d.hatena.ne.jp/sugyan/20151124/1448292129)\u3092\u6539\u9020\u3057\u3066Visual Recognition\u306e\u547c\u3073\u51fa\u3057\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n## main.py\n\u307e\u305a\u306f\u30e1\u30a4\u30f3\u306ePython\u30b3\u30fc\u30c9\u304b\u3089\u3002\n\u5192\u982d\u306eimport\u306e\u3042\u305f\u308a\u306bwatson_developer_cloud\u3068PIL(\u753b\u50cf\u51e6\u7406)\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n```py\n# Watson : Visual Recognition\nimport json\nfrom os.path import join, dirname\nfrom watson_developer_cloud import VisualRecognitionV2Beta as VisualRecognition\nvisual_recognition = VisualRecognition(version='2015-12-02', username='\u30e6\u30fc\u30b6\u30fcID',\n                                       password='\u30d1\u30b9\u30ef\u30fc\u30c9')\n# import Pillow(PIL) library\nfrom PIL import Image\nim = Image.new('RGB', (28, 28), (255, 255, 255))  # create 28x28 image buffer\n```\n\n\u305d\u3057\u3066\u3001\u9014\u4e2d\u306bVisual Recognition\u3092\u547c\u3073\u51fa\u3057\u3066\u7d50\u679c\u3092\u6574\u5f62\u3057\u3066\u8fd4\u3059\u95a2\u6570\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n```py\n# create jpeg image and call visual recognition service\ndef vr_classify(input):\n    for y in range(28):\n        for x in range(28):\n            w = int(input[0, y * 28 + x] * 255)\n            im.putpixel((x, y), (w, w, w))\n    im.save('./tmp.jpg', 'JPEG', quality=100, optimize=True)\n    with open(join(dirname('__file__'), './tmp.jpg'), 'rb') as image_file:\n        vr_result = visual_recognition.classify(image_file, classifier_ids=['Number0_608087973', 'Number1_2074379561', 'Number2__1972121249', 'Number3_1153621741', 'Number4_2057359017', 'Number5_246622786', 'Number6_2085538018', 'Number7_1082710397', 'Number8_2024810030', 'Number9_604087810'])\n    vr_scores = vr_result['images'][0]['scores']\n    vr_dict = dict(Number0 = 0, Number1 = 0, Number2 = 0, Number3 = 0, Number4 = 0, Number5 = 0, Number6 = 0, Number7 = 0, Number8 = 0, Number9 = 0)\n    for vs in range(len(vr_scores)):\n        vr_score = vr_scores[vs]\n        vr_name = vr_score['name']\n        vr_dict[vr_name] = vr_score['score']\n    vr_result = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    for i in range(10):\n        vr_result[i] = vr_dict['Number' + str(i)]\n    return vr_result\n```\n\n\u6700\u5f8c\u306b\u3001\u65e2\u5b58\u30b3\u30fc\u30c9\u306eAPI\u547c\u3073\u51fa\u3057\u5185\u90e8\u306b\u3001output3\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n\n```py\n@app.route('/api/mnist', methods=['POST'])\ndef mnist():\n    input = ((255 - np.array(request.json, dtype=np.uint8)) / 255.0).reshape(1, 784)\n    output1 = simple(input)\n    output2 = convolutional(input)\n    output3 = vr_classify(input)\n    return jsonify(results=[output1, output2, output3])\n```\n\n## index.html\nHTML\u30d5\u30a1\u30a4\u30eb\u306fVisual Recognition\u306e\u7d50\u679c\u3092\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u306b\u753b\u9762\u3092\u5c11\u3057\u4fee\u6b63\u3059\u308b\u3002\u9014\u4e2d\u304b\u3089\u3060\u3051\u3069\u3053\u3093\u306a\u611f\u3058\u3002\u77e2\u5370\u3067\u6ce8\u91c8\u3092\u3064\u3051\u3066\u3044\u308b\u3042\u305f\u308a\u304c\u5909\u66f4\u70b9\u3002\n\n````html\n    <div class=\"container\">\n      <h1>MNIST</h1>\n      <div class=\"row\">\n        <div class=\"col-md-5\">\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2190 Bootstrap\u306e\u30b0\u30ea\u30c3\u30c9\u30b7\u30b9\u30c6\u30e0\u3002\u5e45\u30926\u21925\u306b\u3059\u308b\n          <p>draw a digit here!</p>\n          <canvas id=\"main\"></canvas>\n          <p>\n            <button id=\"clear\" class=\"btn btn-default\">clear</button>\n          </p>\n        </div>\n        <div class=\"col-md-7\">\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2190 \u5e45\u30925\u21927\u306b\u3059\u308b\u3002\u3053\u308c\u3067\u5408\u8a0812\u3002\n          <p>input:</p>\n          <canvas id=\"input\" style=\"border:1px solid\" width=\"140\" height=\"140\"></canvas>\n          <hr>\n          <p>output:</p>\n          <table id=\"output\" class=\"table\">\n            <tr>\n              <th class=\"col-md-1\"></th>\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2190 \u5e45\u30922\u21921\u306b\u3059\u308b\n              <th class=\"col-md-2\">simple</th>\n              <th class=\"col-md-2\">convolutional</th>\n              <th class=\"col-md-2\">Watson</th>\u3000\u3000\u3000\u3000\u3000\u2190 Watson\u306e\u5217\u3092\u8ffd\u52a0\u3002\u5e45\u306f2\u3002\u3053\u308c\u3067\u5408\u8a087\u3002\n            </tr>\n            <tr>\n              <th>0</th>\n              <td></td>\n              <td></td>\n              <td></td>\u3000\u3000\u3000\u3000\u3000\u2190 \u8ffd\u52a0\n            </tr>              <th>1</th>\n              <td></td>\n              <td></td>\n              <td></td>\u3000\u3000\u3000\u3000\u3000\u2190 \u8ffd\u52a0\n            </tr>\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000(\u4ee5\u4e0b\u7565)\n```\n\n## main.js\n\u7d50\u679c\u3092HTML\u306b\u57cb\u3081\u308b\u51e6\u7406\u306e\u7e70\u308a\u8fd4\u3057\u30922\u56de\u21923\u56de\u306b\u3059\u308b\u3002\u305d\u308c\u3068\u3001Visual Recognition\u306f\u78ba\u4fe1\u5ea60.5\u672a\u6e80\u306f\u30b9\u30b3\u30a2\u3092\u8fd4\u3055\u306a\u3044\u306e\u3067\u305d\u308c\u306b\u5bfe\u5fdc\u3057\u305f\u3002\n\n```javascript\n            $.ajax({\n                url: '/api/mnist',\n                method: 'POST',\n                contentType: 'application/json',\n                data: JSON.stringify(inputs),\n                success: (data) => {\n                    for (var i = 0; i < 3; i++) {\u3000\u3000\u3000\u3000\u3000 // \u2190 3\u56de\u7e70\u308a\u8fd4\u3059(Simple,COnvolutional,Watson)\n                        var max = 0;\n                        var max_index = 0;\n                        for (var j = 0; j < 10; j++) {\n                            var value = Math.round(data.results[i][j] * 1000);\n                            if (value > max) {\n                                max = value;\n                                max_index = j;\n                            }\n                            var digits = String(value).length;\n                            for (var k = 0; k < 3 - digits; k++) {\n                                value = '0' + value;\n                            }\n                            var text = '0.' + value;\n                            if (value > 999) {\n                                text = '1.000';\n                            }\n                            if (i == 2 && value == 0) {\u3000\u3000\u3000// \u2190 VisualRecognition\u306f\u78ba\u4fe1\u5ea6\u304c0.5\u672a\u6e80\u306e\u5834\u5408\u306f\u7d50\u679c\u3092\u8fd4\u3055\u306a\u3044\u3002\u5909\u6570\u306e\u521d\u671f\u5024(=0)\u306e\u5834\u5408\u306f\u300c< 0.500\u300d\u3092\u8868\u793a\n                                text = '< 0.500';\n                            }\n                            $('#output tr').eq(j + 1).find('td').eq(i).text(text);\n                        }\n                        for (var j = 0; j < 10; j++) {\n                            if (j === max_index) {\n                                $('#output tr').eq(j + 1).find('td').eq(i).addClass('success');\n                            } else {\n                                $('#output tr').eq(j + 1).find('td').eq(i).removeClass('success');\n                            }\n                        }\n                    }\n                }\n            });\n```\n\n# \u30a2\u30d7\u30ea\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u6bd4\u8f03\u3059\u308b\n\u30a2\u30d7\u30ea\u3092\u5b9f\u884c\u3057\u3066\u307f\u3088\u3046\u3002Visual Recognition\u306f\u5916\u90e8\u306bAPI\u547c\u3073\u51fa\u3057\u3092\u884c\u3063\u3066\u3044\u308b\u306e\u3067\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\u307e\u3067\u6570\u79d2\u304b\u304b\u308b\u306e\u3067\u3042\u305b\u3089\u305a\u306b\u3002\n![0.png](https://qiita-image-store.s3.amazonaws.com/0/102519/de529896-d8ae-4f35-4cb6-368824478e6b.png)\n\u304a\uff01\u3044\u3051\u308b\u3084\u3093\u3051\uff01\uff01\n\n![3.png](https://qiita-image-store.s3.amazonaws.com/0/102519/0320ffc1-deeb-06bf-34cf-d717bd90a17a.png)\n\u3080\u3080\u3080\u30fb\u30fb\u30fb\n\n![4.png](https://qiita-image-store.s3.amazonaws.com/0/102519/3c67c3c8-c47f-cebe-5636-5a6516aaad74.png)\n\u307e\u3041\u3053\u3093\u306a\u3082\u3093\u304b\u306a\u3002\n\n# \u304a\u308f\u308a\u306b\n\u5f97\u610f\u306a\u7a2e\u985e\u306e\u753b\u50cf\u3067\u306f\u306a\u3044\u306e\u3067Visual Recognition\u306f\u82e6\u6226\u3059\u308b\u304b\u3068\u601d\u3044\u304d\u3084\u305d\u3046\u3067\u3082\u306a\u304b\u3063\u305f\u3002\u306a\u304b\u306a\u304b\u9811\u5f35\u3063\u3066\u3044\u305f\u3068\u601d\u3046\u3002TensorFlow\u306f\u81ea\u5206\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u8a2d\u8a08\u3067\u304d\u308b\u306e\u3067\u3001MNIST\u306b\u7279\u5316\u3057\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3084\u3001\u5199\u771f\u306b\u7279\u5316\u3057\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u7d44\u3081\u308b\u3060\u308d\u3046\u3002\u4e00\u65b9\u3001Visual Recognition\u306f\u3069\u3093\u306a\u5199\u771f\u3067\u3082\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u5171\u901a(\u305f\u3076\u3093)\u306a\u306e\u3067\u3001\u6c4e\u7528\u6027\u304c\u9ad8\u3044\u304c\u3001\u7cbe\u5ea6\u306f\u843d\u3061\u308b\u306e\u306f\u5426\u3081\u306a\u3044\u3002\u305d\u308c\u3067\u3082\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u8a2d\u8a08\u306a\u3057\u306b\u753b\u50cf\u8a8d\u8b58\u3067\u304d\u308b\u3093\u3060\u304b\u3089\u3001Visual Recogntion\u306f\u306a\u304b\u306a\u304b\u4f7f\u3048\u308bAPI\u306a\u3093\u3058\u3083\u306a\u3044\u3060\u308d\u3046\u304b\u3002\n", "tags": ["Bluemix", "Watson", "\u4eba\u5de5\u77e5\u80fd", "\u6a5f\u68b0\u5b66\u7fd2", "TensorFlow"]}