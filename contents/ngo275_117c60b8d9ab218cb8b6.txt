{"context": "\n\n\u3084\u308a\u305f\u3044\u3053\u3068\nFirebase Remote Config\u3067\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u5168\u90e8\u3092\u8d77\u52d5\u753b\u9762\uff08LaunchScreen\uff09\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3046\u3061\u306b\u53d6\u5f97\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u4ee5\u524dFirebase Remote Config\u306e\u6a5f\u80fd\u3092\u5171\u901a\u5316\u3057\u305f\u69cb\u9020\u4f53\u3092\u4f5c\u3063\u3066\u307f\u305f(Swift)\u3067Firebase Remote Config\u3092\u4f7f\u3046\u305f\u3081\u306b\u69cb\u9020\u4f53\u3092\u4f5c\u6210\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u30a2\u30d7\u30ea\u8d77\u52d5\u6642\u3001\u3053\u308c\u3067\u53d6\u5f97\u3057\u305f\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5229\u7528\u3057\u3066API\u3092\u53e9\u304d\u306b\u884c\u3053\u3046\u3068\u3059\u308b\u3068\u3001Remote Config\u3067\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u53d6\u5f97 -> \u305d\u308c\u306b\u57fa\u3065\u304fAPI\u3092\u53e9\u304d\u306b\u884c\u304f \u3068\u3044\u3046\u975e\u540c\u671f\u901a\u4fe1\u3092\uff12\u3064\u9023\u7d9a\u3057\u3066\u884c\u3046\u3053\u3068\u306b\u306a\u3063\u3066\u8868\u793a\u304c\u975e\u5e38\u306b\u9045\u304f\u306a\u308b\u3068\u3044\u3046\u554f\u984c\u306b\u76f4\u9762\u3057\u307e\u3057\u305f\u3002\u305d\u308c\u3092\u6539\u5584\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u6319\u52d5\u5b9f\u73fe\u306e\u6d41\u308c\n\u5b9f\u969b\u306b\u306fLaunchScreen\u3092\u8868\u793a\u3057\u3066\u3044\u308b\u6642\u306fRemote Config\u3092\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001\n\nLaunch Screen\u306e\u5f8c\u306b\u51fa\u3066\u304f\u308b\u6700\u521d\u306eViewController\u306bLaunchScreen\u3068\u540c\u3058\u753b\u50cf\uff08\u30c0\u30df\u30fc\u753b\u50cf\uff09\u3092\u51fa\u3059\nRemote Config\u306b\u5024\u3092\u53d6\u308a\u306b\u884c\u304f\n\u5024\u53d6\u5f97\u306e\u901a\u4fe1\u304c\u5b8c\u4e86\u3057\u305f\u3089\u30c0\u30df\u30fc\u753b\u50cf\u3092\u6d88\u3059\n\u3042\u3068\u306f\u3044\u3064\u3082\u901a\u308a\u306b\u63cf\u753b\u3059\u308b\n\n4\u306e\u6642\u3001Remote Config\u306e\u5024\u3092\u5229\u7528\u3057\u305fAPI\u3092\u4f7f\u3044\u305f\u304b\u3063\u305f\u306e\u3067\u4eca\u56de\u306e\u5b9f\u88c5\u3092\u3057\u307e\u3057\u305f\u3002\u30e6\u30fc\u30b6\u30fc\u306b\u3088\u3063\u3066\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u5207\u308a\u66ff\u3048\u308b\u306a\u3069\u3002\n\n\u74b0\u5883\nXcode7.3\nSwift2.2\n\u65e9\u304f\u4e0a\u3052\u307e\u3059...\n\n\u5b9f\u88c5\n\n\u30c0\u30df\u30fc\u306eUIView\u3092\u4f5c\u6210\n\n\u3053\u3053\u304b\u3089Initial.xib\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u306eUIView\u306bUIImage\u3092\u633f\u5165\u3057\u3066LaunchScreen.storyboard\u3067\u5dee\u3057\u8fbc\u3093\u3067\u3044\u308b\u753b\u50cf\u3068\u540c\u3058\u3082\u306e\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002Constraints\u306b\u95a2\u3057\u3066\u306fUIView\u3044\u3063\u3071\u3044\u306b\u5f15\u304d\u4f38\u3070\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u6b21\u306b\u3053\u308c\u306b\u5bfe\u5fdc\u3059\u308bswift\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\nInitial.swift\nimport UIKit\n\nclass Initial: UIView {\n\n    override func awakeFromNib() {\n        super.awakeFromNib()\n\n    }\n\n}\n\n\nStoryboard\u30672\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u95a2\u9023\u3065\u3051\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\nFirebase Remote Config\u3067\u53d6\u5f97\u3057\u3066\u305d\u306e\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\nRemote Config\u3067\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b\u69cb\u9020\u4f53\u3068\u3001\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u901a\u4fe1\u3092\u3057\u305f\u308a\u30c7\u30fc\u30bf\u306e\u69cb\u9020\u4f53\u3092\u5185\u5305\u3059\u308b\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u307e\u305a\u30c7\u30fc\u30bf\u306e\u69cb\u9020\u4f53\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\nRemoteConfig.swift\nimport Foundation\nimport FirebaseRemoteConfig\n\nstruct RemoteConfig {\n    // \u3053\u3053\u306bFirebase Remote config\u3067\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5217\u6319\u3057\u3066\u304a\u304f\u3068\u3059\u3050\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059.\n    let tabTitlesEn: String\n    let tabTitles: String\n\n    init(data: FIRRemoteConfig) {\n        // \u5404\u30d7\u30ed\u30d1\u30c6\u30a3\u3092Remote Config\u304b\u3089\u53d6\u308a\u51fa\u3057\u307e\u3059.\n        tabTitlesEn = data[\"tabTitlesEn\"].stringValue ?? \"make\"\n        tabTitles = data[\"tabTitles\"].stringValue ?? \"\u30e1\u30a4\u30af\"\n    }\n\n    init() {\n        tabTitlesEn = \"make\"\n        tabTitles = \"\u30e1\u30a4\u30af\"\n    }\n}\n\n\n\u6b21\u306b\u2191\u306e\u69cb\u9020\u4f53\u3092\u5185\u306b\u6301\u3061\u3001\u901a\u4fe1\u3082\u884c\u3046\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\nFirebaseRemoteConfigManager.swift\nimport Foundation\nimport Firebase\nimport FirebaseRemoteConfig\nimport BrightFutures\n\nclass FirebaseRemoteConfigManager {\n\n    // \u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306b\u3057\u307e\u3059.\n    static let shared = FirebaseRemoteConfigManager()\n    // \u5024\u306e\u4ee3\u5165\u306f\u3053\u306e\u30af\u30e9\u30b9\u304b\u3089\u3057\u304b\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059.\n    private(set) var config = RemoteConfig()\n\n    private let remoteConfig: FIRRemoteConfig\n    private let expirationDuration: Int\n\n    private init() {\n        self.remoteConfig = FIRRemoteConfig.remoteConfig()\n\n        let remoteConfigSettings = FIRRemoteConfigSettings(developerModeEnabled: true)\n        self.remoteConfig.configSettings = remoteConfigSettings!\n\n        self.expirationDuration = remoteConfig.configSettings.isDeveloperModeEnabled ? 0 : 3600\n    }\n\n    func fetchRemoteConfig() -> Future<RemoteConfig, NSError> {\n\n        let promise = Promise<RemoteConfig, NSError>()\n\n        remoteConfig.fetchWithExpirationDuration(NSTimeInterval(expirationDuration)) { (status, error) -> Void in\n\n            if let error = error {\n                print(\"error: \\(error.localizedDescription)\")\n                promise.failure(error)\n\n                return\n            }\n\n            guard status == FIRRemoteConfigFetchStatus.Success else {\n                let error = NSError(domain: \"mimi\", code: 0, userInfo: [NSLocalizedDescriptionKey: \"status is failed\"])\n                print(\"error: status is failed\")\n                promise.failure(error)\n\n                return\n            }\n\n            self.remoteConfig.activateFetched()\n\n            // Remote Config\u304b\u3089\u6301\u3063\u3066\u304d\u305fdata\u3092\u4e0a\u3067\u66f8\u3044\u305f\u69cb\u9020\u4f53\u306b\u6e21\u3057\u3066\u683c\u7d0d\u3057\u307e\u3059.\n            self.config = RemoteConfig(data: self.remoteConfig)\n\n            promise.success(self.config)\n        }\n\n        return promise.future\n    }\n}\n\n\n\n\u3082\u3068\u3082\u3068\u6700\u521d\u306b\u8868\u793a\u3057\u3066\u3044\u305fViewController\u306b\u30c0\u30df\u30fc\u306eView\u3092\u7d44\u307f\u8fbc\u3080\n\n\u6700\u521d\u306eViewController.swift\nimport UIKit\n\nclass ViewController: UIViewController {\n    // \u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u5ba3\u8a00\n    private let remoteConfigManager = FirebaseRemoteConfigManager.shared\n\n    // View\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u4fdd\u6301\u3057\u3066\u304a\u304d\u307e\u3059.\n    private lazy var initialView: Initial = {\n        let initialView: Initial = UINib(nibName: \"Initial\", bundle: nil).instantiateWithOwner(self, options: nil)[0] as! Initial\n\n        return initialView\n    }()\n\n    ...// \u5143\u304b\u3089\u3042\u3063\u305f\u51e6\u7406\n\n    // \u30c0\u30df\u30fc\u306eView\u306e\u30b5\u30a4\u30ba\u6307\u5b9a\n    override func viewWillLayoutSubviews() {\n        super.viewWillLayoutSubviews()\n\n        initialView.frame = CGRect(x: 0, y: 0, width: view.bounds.width, height: view.bounds.height)\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        view.addSubview(initialView)\n\n        setViewController()\n    }\n\n    ...// \u5143\u304b\u3089\u3042\u3063\u305f\u51e6\u7406\n\n    private func setViewController() {\n        let future = FirebaseRemoteConfigManager.shared.fetchRemoteConfig()\n\n        future.onSuccess { [weak self] result in\n            // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u3064\u3051\u3066\u30c0\u30df\u30fc\u306eView\u3092\u6d88\u3057\u307e\u3059.\n            UIView.animateWithDuration(0.5,\n                animations: {\n                    self?.initialView.alpha = 0\n                },\n                completion: { finished in\n                    self?.initialView.removeFromSuperview()\n            })\n\n            // tableView.reloadData\u306e\u3088\u3046\u306b\u63cf\u753b\u306e\u51e6\u7406\u7b49\n            // remoteConfigManager.config.tabTitlesEn\u306a\u3069\u3068\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059.\n        }\n\n        future.onFailure { [weak self] error in\n            print(\"error: \\(error.localizedDescription)\")\n            // error handling\n\n            UIView.animateWithDuration(0.5, \n                animations: {\n                    self?.initialView.alpha = 0\n                }, completion: { finished in\n                    self?.initialView.removeFromSuperview()\n            })\n\n            // \u30c7\u30fc\u30bf\u53d6\u5f97\u306e\u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n        }\n    }\n\n   ...// \u5143\u304b\u3089\u3042\u3063\u305f\u51e6\u7406\n\n}\n\n\n\u6700\u521d\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001 remoteConfigManager.config.tabTitlesEn \u306e\u3088\u3046\u306b future.onSuccess \u306e\u306a\u304b\u3067\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u8d77\u52d5\u3057\u3066\u304b\u3089\u3059\u3050\u306b\u958b\u304f\u308f\u3051\u3067\u306f\u306a\u3044ViewController\u3067\u306f\nprivate let remoteConfigManager = FirebaseRemoteConfigManager.shared\n\n\u3000\u3000\u3092\u5ba3\u8a00\u3057\u305f\u4e0a\u3067\u3001\nremoteConfigManager.config.tabTitlesEn\n\n\u306e\u3088\u3046\u306b\u3059\u308b\u3060\u3051\u3067Remote Config\u306e\u5024\u306b\u597d\u304d\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u4e00\u5ea6Remote Config\u306b\u5024\u3092\u898b\u306b\u884c\u304f\u51e6\u7406\u3092\u6e08\u307e\u305b\u3066\u5024\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u306e\u3067\u3001Remote Config\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5229\u7528\u3059\u308b\u305f\u3073\u306b\u305d\u306e\u901a\u4fe1\u51e6\u7406\u3092\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n# \u3084\u308a\u305f\u3044\u3053\u3068\n**Firebase Remote Config\u3067\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u5168\u90e8\u3092\u8d77\u52d5\u753b\u9762\uff08LaunchScreen\uff09\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3046\u3061\u306b\u53d6\u5f97\u3059\u308b**\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u4ee5\u524d[Firebase Remote Config\u306e\u6a5f\u80fd\u3092\u5171\u901a\u5316\u3057\u305f\u69cb\u9020\u4f53\u3092\u4f5c\u3063\u3066\u307f\u305f(Swift)](http://qiita.com/ngo275/items/2a27932c4e54e062de21)\u3067Firebase Remote Config\u3092\u4f7f\u3046\u305f\u3081\u306b\u69cb\u9020\u4f53\u3092\u4f5c\u6210\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u30a2\u30d7\u30ea\u8d77\u52d5\u6642\u3001\u3053\u308c\u3067\u53d6\u5f97\u3057\u305f\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5229\u7528\u3057\u3066API\u3092\u53e9\u304d\u306b\u884c\u3053\u3046\u3068\u3059\u308b\u3068\u3001`Remote Config\u3067\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u53d6\u5f97 -> \u305d\u308c\u306b\u57fa\u3065\u304fAPI\u3092\u53e9\u304d\u306b\u884c\u304f` \u3068\u3044\u3046\u975e\u540c\u671f\u901a\u4fe1\u3092\uff12\u3064\u9023\u7d9a\u3057\u3066\u884c\u3046\u3053\u3068\u306b\u306a\u3063\u3066\u8868\u793a\u304c\u975e\u5e38\u306b\u9045\u304f\u306a\u308b\u3068\u3044\u3046\u554f\u984c\u306b\u76f4\u9762\u3057\u307e\u3057\u305f\u3002\u305d\u308c\u3092\u6539\u5584\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u6319\u52d5\u5b9f\u73fe\u306e\u6d41\u308c\n\u5b9f\u969b\u306b\u306fLaunchScreen\u3092\u8868\u793a\u3057\u3066\u3044\u308b\u6642\u306fRemote Config\u3092\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001\n\n1. Launch Screen\u306e\u5f8c\u306b\u51fa\u3066\u304f\u308b\u6700\u521d\u306eViewController\u306bLaunchScreen\u3068\u540c\u3058\u753b\u50cf\uff08\u30c0\u30df\u30fc\u753b\u50cf\uff09\u3092\u51fa\u3059\n2. Remote Config\u306b\u5024\u3092\u53d6\u308a\u306b\u884c\u304f\n3. \u5024\u53d6\u5f97\u306e\u901a\u4fe1\u304c\u5b8c\u4e86\u3057\u305f\u3089\u30c0\u30df\u30fc\u753b\u50cf\u3092\u6d88\u3059\n4. \u3042\u3068\u306f\u3044\u3064\u3082\u901a\u308a\u306b\u63cf\u753b\u3059\u308b\n\n4\u306e\u6642\u3001Remote Config\u306e\u5024\u3092\u5229\u7528\u3057\u305fAPI\u3092\u4f7f\u3044\u305f\u304b\u3063\u305f\u306e\u3067\u4eca\u56de\u306e\u5b9f\u88c5\u3092\u3057\u307e\u3057\u305f\u3002\u30e6\u30fc\u30b6\u30fc\u306b\u3088\u3063\u3066\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u5207\u308a\u66ff\u3048\u308b\u306a\u3069\u3002\n\n# \u74b0\u5883\nXcode7.3\nSwift2.2\n\u65e9\u304f\u4e0a\u3052\u307e\u3059...\n\n# \u5b9f\u88c5\n## \u30c0\u30df\u30fc\u306eUIView\u3092\u4f5c\u6210\n\n<img width=\"805\" alt=\"Screen Shot 2016-10-18 at 17.59.45.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/122365/5236ad6f-d0ee-6d5b-1a2d-237eb6433770.png\">\n\n\u3053\u3053\u304b\u3089Initial.xib\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u306eUIView\u306bUIImage\u3092\u633f\u5165\u3057\u3066LaunchScreen.storyboard\u3067\u5dee\u3057\u8fbc\u3093\u3067\u3044\u308b\u753b\u50cf\u3068\u540c\u3058\u3082\u306e\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002Constraints\u306b\u95a2\u3057\u3066\u306fUIView\u3044\u3063\u3071\u3044\u306b\u5f15\u304d\u4f38\u3070\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n<img width=\"885\" alt=\"Screen Shot 2016-10-18 at 18.05.12.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/122365/165e0600-26e5-2a4a-46ca-0db2e7d6e881.png\">\n\n\n\u6b21\u306b\u3053\u308c\u306b\u5bfe\u5fdc\u3059\u308bswift\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n<img width=\"835\" alt=\"Screen Shot 2016-10-18 at 18.01.09.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/122365/fb0da32d-36a8-f019-d579-86b823653a89.png\">\n\n```Initial.swift\nimport UIKit\n\nclass Initial: UIView {\n    \n    override func awakeFromNib() {\n        super.awakeFromNib()\n        \n    }\n    \n}\n```\n\nStoryboard\u30672\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u95a2\u9023\u3065\u3051\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n<img width=\"947\" alt=\"Screen Shot 2016-10-18 at 18.08.34.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/122365/6ae15a57-92ef-24c6-afc8-aa91163e431f.png\">\n\n## Firebase Remote Config\u3067\u53d6\u5f97\u3057\u3066\u305d\u306e\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\nRemote Config\u3067\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b\u69cb\u9020\u4f53\u3068\u3001\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u901a\u4fe1\u3092\u3057\u305f\u308a\u30c7\u30fc\u30bf\u306e\u69cb\u9020\u4f53\u3092\u5185\u5305\u3059\u308b\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u30c7\u30fc\u30bf\u306e\u69cb\u9020\u4f53\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```RemoteConfig.swift\nimport Foundation\nimport FirebaseRemoteConfig\n\nstruct RemoteConfig {\n    // \u3053\u3053\u306bFirebase Remote config\u3067\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5217\u6319\u3057\u3066\u304a\u304f\u3068\u3059\u3050\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059.\n    let tabTitlesEn: String\n    let tabTitles: String\n    \n    init(data: FIRRemoteConfig) {\n        // \u5404\u30d7\u30ed\u30d1\u30c6\u30a3\u3092Remote Config\u304b\u3089\u53d6\u308a\u51fa\u3057\u307e\u3059.\n        tabTitlesEn = data[\"tabTitlesEn\"].stringValue ?? \"make\"\n        tabTitles = data[\"tabTitles\"].stringValue ?? \"\u30e1\u30a4\u30af\"\n    }\n    \n    init() {\n        tabTitlesEn = \"make\"\n        tabTitles = \"\u30e1\u30a4\u30af\"\n    }\n}\n```\n\n\u6b21\u306b\u2191\u306e\u69cb\u9020\u4f53\u3092\u5185\u306b\u6301\u3061\u3001\u901a\u4fe1\u3082\u884c\u3046\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```FirebaseRemoteConfigManager.swift\nimport Foundation\nimport Firebase\nimport FirebaseRemoteConfig\nimport BrightFutures\n\nclass FirebaseRemoteConfigManager {\n    \n    // \u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306b\u3057\u307e\u3059.\n    static let shared = FirebaseRemoteConfigManager()\n    // \u5024\u306e\u4ee3\u5165\u306f\u3053\u306e\u30af\u30e9\u30b9\u304b\u3089\u3057\u304b\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059.\n    private(set) var config = RemoteConfig()\n    \n    private let remoteConfig: FIRRemoteConfig\n    private let expirationDuration: Int\n    \n    private init() {\n        self.remoteConfig = FIRRemoteConfig.remoteConfig()\n    \n        let remoteConfigSettings = FIRRemoteConfigSettings(developerModeEnabled: true)\n        self.remoteConfig.configSettings = remoteConfigSettings!\n\n        self.expirationDuration = remoteConfig.configSettings.isDeveloperModeEnabled ? 0 : 3600\n    }\n    \n    func fetchRemoteConfig() -> Future<RemoteConfig, NSError> {\n        \n        let promise = Promise<RemoteConfig, NSError>()\n        \n        remoteConfig.fetchWithExpirationDuration(NSTimeInterval(expirationDuration)) { (status, error) -> Void in\n            \n            if let error = error {\n                print(\"error: \\(error.localizedDescription)\")\n                promise.failure(error)\n                \n                return\n            }\n            \n            guard status == FIRRemoteConfigFetchStatus.Success else {\n                let error = NSError(domain: \"mimi\", code: 0, userInfo: [NSLocalizedDescriptionKey: \"status is failed\"])\n                print(\"error: status is failed\")\n                promise.failure(error)\n                \n                return\n            }\n            \n            self.remoteConfig.activateFetched()\n            \n            // Remote Config\u304b\u3089\u6301\u3063\u3066\u304d\u305fdata\u3092\u4e0a\u3067\u66f8\u3044\u305f\u69cb\u9020\u4f53\u306b\u6e21\u3057\u3066\u683c\u7d0d\u3057\u307e\u3059.\n            self.config = RemoteConfig(data: self.remoteConfig)\n            \n            promise.success(self.config)\n        }\n        \n        return promise.future\n    }\n}\n```\n\n## \u3082\u3068\u3082\u3068\u6700\u521d\u306b\u8868\u793a\u3057\u3066\u3044\u305fViewController\u306b\u30c0\u30df\u30fc\u306eView\u3092\u7d44\u307f\u8fbc\u3080\n\n\n```\u6700\u521d\u306eViewController.swift\nimport UIKit\n\nclass ViewController: UIViewController {\n    // \u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u5ba3\u8a00\n    private let remoteConfigManager = FirebaseRemoteConfigManager.shared\n\n    // View\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u4fdd\u6301\u3057\u3066\u304a\u304d\u307e\u3059.\n    private lazy var initialView: Initial = {\n        let initialView: Initial = UINib(nibName: \"Initial\", bundle: nil).instantiateWithOwner(self, options: nil)[0] as! Initial\n        \n        return initialView\n    }()\n\n    ...// \u5143\u304b\u3089\u3042\u3063\u305f\u51e6\u7406\n\n    // \u30c0\u30df\u30fc\u306eView\u306e\u30b5\u30a4\u30ba\u6307\u5b9a\n    override func viewWillLayoutSubviews() {\n        super.viewWillLayoutSubviews()\n\n        initialView.frame = CGRect(x: 0, y: 0, width: view.bounds.width, height: view.bounds.height)\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        view.addSubview(initialView)\n        \n        setViewController()\n    }\n\n    ...// \u5143\u304b\u3089\u3042\u3063\u305f\u51e6\u7406\n\n    private func setViewController() {\n        let future = FirebaseRemoteConfigManager.shared.fetchRemoteConfig()\n        \n        future.onSuccess { [weak self] result in\n            // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u3064\u3051\u3066\u30c0\u30df\u30fc\u306eView\u3092\u6d88\u3057\u307e\u3059.\n            UIView.animateWithDuration(0.5,\n                animations: {\n                    self?.initialView.alpha = 0\n                },\n                completion: { finished in\n                    self?.initialView.removeFromSuperview()\n            })\n            \n            // tableView.reloadData\u306e\u3088\u3046\u306b\u63cf\u753b\u306e\u51e6\u7406\u7b49\n            // remoteConfigManager.config.tabTitlesEn\u306a\u3069\u3068\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059.\n        }\n        \n        future.onFailure { [weak self] error in\n            print(\"error: \\(error.localizedDescription)\")\n            // error handling\n            \n            UIView.animateWithDuration(0.5, \n                animations: {\n                    self?.initialView.alpha = 0\n                }, completion: { finished in\n                    self?.initialView.removeFromSuperview()\n            })\n            \n            // \u30c7\u30fc\u30bf\u53d6\u5f97\u306e\u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n        }\n    }\n        \n   ...// \u5143\u304b\u3089\u3042\u3063\u305f\u51e6\u7406\n    \n}\n```\n\n\u6700\u521d\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001 `remoteConfigManager.config.tabTitlesEn` \u306e\u3088\u3046\u306b `future.onSuccess` \u306e\u306a\u304b\u3067\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u8d77\u52d5\u3057\u3066\u304b\u3089\u3059\u3050\u306b\u958b\u304f\u308f\u3051\u3067\u306f\u306a\u3044ViewController\u3067\u306f\n\n    private let remoteConfigManager = FirebaseRemoteConfigManager.shared\n\u3000\u3000\u3092\u5ba3\u8a00\u3057\u305f\u4e0a\u3067\u3001\n\n    remoteConfigManager.config.tabTitlesEn\n\n\u306e\u3088\u3046\u306b\u3059\u308b\u3060\u3051\u3067Remote Config\u306e\u5024\u306b\u597d\u304d\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u4e00\u5ea6Remote Config\u306b\u5024\u3092\u898b\u306b\u884c\u304f\u51e6\u7406\u3092\u6e08\u307e\u305b\u3066\u5024\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u306e\u3067\u3001Remote Config\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5229\u7528\u3059\u308b\u305f\u3073\u306b\u305d\u306e\u901a\u4fe1\u51e6\u7406\u3092\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n", "tags": ["Swift", "Firebase", "Remote", "Config", "LaunchScreen"]}