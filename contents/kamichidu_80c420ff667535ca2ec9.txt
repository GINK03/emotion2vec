{"context": " More than 1 year has passed since last update.\u3053\u306e\u3042\u305f\u308a\u306b\u89e6\u767a\u3055\u308c\u305f\u306e\u3067\u3001\u79c1\u3082Java\u3067\u7c21\u5358\u306aFizzBuzz\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u3067\u306f\u30b3\u30fc\u30c9\u3092\u3069\u3046\u305e\u3002\npackage reflect;\n\nimport java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\nimport java.lang.reflect.Proxy;\n\npublic class FizzBuzz\n{\n    public static interface Dummy\n    {\n        CharSequence _1();  CharSequence _2();  CharSequence _3();  CharSequence _4();  CharSequence _5();  CharSequence _6();  CharSequence _7();  CharSequence _8();  CharSequence _9();  CharSequence _10();\n        CharSequence _11(); CharSequence _12(); CharSequence _13(); CharSequence _14(); CharSequence _15(); CharSequence _16(); CharSequence _17(); CharSequence _18(); CharSequence _19(); CharSequence _20();\n        CharSequence _21(); CharSequence _22(); CharSequence _23(); CharSequence _24(); CharSequence _25(); CharSequence _26(); CharSequence _27(); CharSequence _28(); CharSequence _29(); CharSequence _30();\n        CharSequence _31(); CharSequence _32(); CharSequence _33(); CharSequence _34(); CharSequence _35(); CharSequence _36(); CharSequence _37(); CharSequence _38(); CharSequence _39(); CharSequence _40();\n        CharSequence _41(); CharSequence _42(); CharSequence _43(); CharSequence _44(); CharSequence _45(); CharSequence _46(); CharSequence _47(); CharSequence _48(); CharSequence _49(); CharSequence _50();\n        CharSequence _51(); CharSequence _52(); CharSequence _53(); CharSequence _54(); CharSequence _55(); CharSequence _56(); CharSequence _57(); CharSequence _58(); CharSequence _59(); CharSequence _60();\n        CharSequence _61(); CharSequence _62(); CharSequence _63(); CharSequence _64(); CharSequence _65(); CharSequence _66(); CharSequence _67(); CharSequence _68(); CharSequence _69(); CharSequence _70();\n        CharSequence _71(); CharSequence _72(); CharSequence _73(); CharSequence _74(); CharSequence _75(); CharSequence _76(); CharSequence _77(); CharSequence _78(); CharSequence _79(); CharSequence _80();\n        CharSequence _81(); CharSequence _82(); CharSequence _83(); CharSequence _84(); CharSequence _85(); CharSequence _86(); CharSequence _87(); CharSequence _88(); CharSequence _89(); CharSequence _90();\n        CharSequence _91(); CharSequence _92(); CharSequence _93(); CharSequence _94(); CharSequence _95(); CharSequence _96(); CharSequence _97(); CharSequence _98(); CharSequence _99(); CharSequence _100();\n    }\n\n    public static class FizzBuzzHandler\n        implements InvocationHandler\n    {\n        @Override\n        public CharSequence invoke(Object proxy, Method method, Object[] args)\n        {\n            final int n= Integer.parseInt(method.getName().replaceFirst(\"^_\", \"\"));\n\n            if(n % 15 == 0)\n            {\n                return \"FizzBuzz\";\n            }\n            else if(n % 3 == 0)\n            {\n                return \"Fizz\";\n            }\n            else if(n % 5 == 0)\n            {\n                return \"Buzz\";\n            }\n            else\n            {\n                return \"\" + n;\n            }\n        }\n    }\n\n    public static void main(String[] args)\n        throws Exception\n    {\n        final Dummy obj= (Dummy)Proxy.newProxyInstance(\n            FizzBuzz.class.getClassLoader(),\n            new Class<?>[]{Dummy.class},\n            new FizzBuzzHandler()\n        );\n\n        for(final Method method : Dummy.class.getMethods())\n        {\n            System.out.println(method.invoke(obj));\n        }\n    }\n}\n\n\u5358\u306b\u30e1\u30bd\u30c3\u30c9\u4e00\u89a7\u3092\u547c\u3093\u3067\u3044\u308b\u3060\u3051\u3067\u3059\u3002\ngetMethods()\u306f\u5ba3\u8a00\u9806\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u8fd4\u3059\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u66f4\u306bProxy\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u30b3\u30fc\u30c9\u91cf\u3092\u6e1b\u3089\u3057\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u7d14\u7c8b\u306b\u5217\u6319\u3059\u308c\u3070\u81ea\u52d5\u3067\u52d5\u304f\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nJava\u3067\u3082\u7c21\u5358\u306aFizzBuzz\u304c\u66f8\u3051\u305f\u3088\uff01\n\u3068\u3044\u3046\u3053\u3068\u3067github\u306b\u3082\u4e0a\u3052\u3066\u3042\u308a\u307e\u3059\u3002\n\u3053\u3061\u3089\u304b\u3089\u3069\u3046\u305e\u3002\n[\u3053\u306e\u3042\u305f\u308a](http://qiita.com/supermomonga/items/b8faf7441ada9c310282)\u306b\u89e6\u767a\u3055\u308c\u305f\u306e\u3067\u3001\u79c1\u3082Java\u3067\u7c21\u5358\u306aFizzBuzz\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u3067\u306f\u30b3\u30fc\u30c9\u3092\u3069\u3046\u305e\u3002\n\n```java\npackage reflect;\n\nimport java.lang.reflect.InvocationHandler;\nimport java.lang.reflect.Method;\nimport java.lang.reflect.Proxy;\n\npublic class FizzBuzz\n{\n    public static interface Dummy\n    {\n        CharSequence _1();  CharSequence _2();  CharSequence _3();  CharSequence _4();  CharSequence _5();  CharSequence _6();  CharSequence _7();  CharSequence _8();  CharSequence _9();  CharSequence _10();\n        CharSequence _11(); CharSequence _12(); CharSequence _13(); CharSequence _14(); CharSequence _15(); CharSequence _16(); CharSequence _17(); CharSequence _18(); CharSequence _19(); CharSequence _20();\n        CharSequence _21(); CharSequence _22(); CharSequence _23(); CharSequence _24(); CharSequence _25(); CharSequence _26(); CharSequence _27(); CharSequence _28(); CharSequence _29(); CharSequence _30();\n        CharSequence _31(); CharSequence _32(); CharSequence _33(); CharSequence _34(); CharSequence _35(); CharSequence _36(); CharSequence _37(); CharSequence _38(); CharSequence _39(); CharSequence _40();\n        CharSequence _41(); CharSequence _42(); CharSequence _43(); CharSequence _44(); CharSequence _45(); CharSequence _46(); CharSequence _47(); CharSequence _48(); CharSequence _49(); CharSequence _50();\n        CharSequence _51(); CharSequence _52(); CharSequence _53(); CharSequence _54(); CharSequence _55(); CharSequence _56(); CharSequence _57(); CharSequence _58(); CharSequence _59(); CharSequence _60();\n        CharSequence _61(); CharSequence _62(); CharSequence _63(); CharSequence _64(); CharSequence _65(); CharSequence _66(); CharSequence _67(); CharSequence _68(); CharSequence _69(); CharSequence _70();\n        CharSequence _71(); CharSequence _72(); CharSequence _73(); CharSequence _74(); CharSequence _75(); CharSequence _76(); CharSequence _77(); CharSequence _78(); CharSequence _79(); CharSequence _80();\n        CharSequence _81(); CharSequence _82(); CharSequence _83(); CharSequence _84(); CharSequence _85(); CharSequence _86(); CharSequence _87(); CharSequence _88(); CharSequence _89(); CharSequence _90();\n        CharSequence _91(); CharSequence _92(); CharSequence _93(); CharSequence _94(); CharSequence _95(); CharSequence _96(); CharSequence _97(); CharSequence _98(); CharSequence _99(); CharSequence _100();\n    }\n\n    public static class FizzBuzzHandler\n        implements InvocationHandler\n    {\n        @Override\n        public CharSequence invoke(Object proxy, Method method, Object[] args)\n        {\n            final int n= Integer.parseInt(method.getName().replaceFirst(\"^_\", \"\"));\n\n            if(n % 15 == 0)\n            {\n                return \"FizzBuzz\";\n            }\n            else if(n % 3 == 0)\n            {\n                return \"Fizz\";\n            }\n            else if(n % 5 == 0)\n            {\n                return \"Buzz\";\n            }\n            else\n            {\n                return \"\" + n;\n            }\n        }\n    }\n\n    public static void main(String[] args)\n        throws Exception\n    {\n        final Dummy obj= (Dummy)Proxy.newProxyInstance(\n            FizzBuzz.class.getClassLoader(),\n            new Class<?>[]{Dummy.class},\n            new FizzBuzzHandler()\n        );\n\n        for(final Method method : Dummy.class.getMethods())\n        {\n            System.out.println(method.invoke(obj));\n        }\n    }\n}\n```\n\n\u5358\u306b\u30e1\u30bd\u30c3\u30c9\u4e00\u89a7\u3092\u547c\u3093\u3067\u3044\u308b\u3060\u3051\u3067\u3059\u3002\ngetMethods()\u306f\u5ba3\u8a00\u9806\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u8fd4\u3059\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u66f4\u306bProxy\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u30b3\u30fc\u30c9\u91cf\u3092\u6e1b\u3089\u3057\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u7d14\u7c8b\u306b\u5217\u6319\u3059\u308c\u3070\u81ea\u52d5\u3067\u52d5\u304f\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nJava\u3067\u3082\u7c21\u5358\u306aFizzBuzz\u304c\u66f8\u3051\u305f\u3088\uff01\n\n\u3068\u3044\u3046\u3053\u3068\u3067github\u306b\u3082\u4e0a\u3052\u3066\u3042\u308a\u307e\u3059\u3002\n[\u3053\u3061\u3089](https://github.com/kamichidu/java-fizzbuzz/blob/master/src/main/java/reflect/FizzBuzz.java)\u304b\u3089\u3069\u3046\u305e\u3002\n", "tags": ["Java", "FizzBuzz"]}