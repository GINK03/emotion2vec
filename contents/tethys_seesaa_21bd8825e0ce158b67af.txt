{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nsvlib\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u773a\u3081\u3066\u3044\u305f\u3089\u3001\u4f7f\u3048\u305d\u3046\u306a\u3082\u306e\u304c\u3042\u3063\u305f\u306e\u3067\u8a66\u3057\u306b\u3084\u3063\u3066\u307f\u305f\u3002\nsvlib\u306b\u95a2\u3057\u3066\u306e\u3053\u308c\u307e\u3067\u306e\u6295\u7a3f\u8a18\u4e8b\u306f\u3053\u3061\u3089\u3002\n\nsvlib\u306e\u7d39\u4ecb\nsvlib\u304c\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3057\u3066\u305f\u3002\n\n\u4eca\u56de\u306f\u5217\u6319\u578b\u3092\u62e1\u5f35\u3059\u308b\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u307f\u308b\u3002\n\nUtilities for enumeration types\n\u30af\u30e9\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\nclass EnumUtils #(type ENUM = int);\n  typedef ENUM qe[$];\n  typedef logic [$bits(ENUM)-1:0] BASE;\n\n  static function ENUM fromName     (string s);\n  static function int  pos          (BASE   b);\n  static function bit  hasName      (string s);\n  static function int  maxNameLength();\n  static function bit  hasValue     (BASE   b);\n  static function qe   allValues    ();\n  static function ENUM match        (BASE   b, bit requireUnique = 0);\nendclass: EnumUtils\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u304c\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3068\u5fae\u5999\u306b \u9055\u3063\u3066\u3044\u308b\u3002 \u8981\u6ce8\u610f\u3002\n\u30e1\u30bd\u30c3\u30c9\u306e\u6a5f\u80fd\u306e\u8aac\u660e\u306f\u3053\u3053\u3067\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8b72\u308b\u2026\u3068\u3044\u3044\u305f\u3044\u304c\u3001\u307e\u3060\u307e\u3060\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8aac\u660e\u306f \u8352\u3063\u307d\u3044\u3002\n\nCPU\u30aa\u30da\u30b3\u30fc\u30c9\u3063\u307d\u3044\u3082\u306e\u3092\u5b9a\u7fa9\n\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3068\u3001\u5217\u6319\u578b\u306e\u5909\u6570\u306b\u3044\u308d\u3044\u308d\u4fbf\u5229\u306a\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3092\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u305d\u3053\u3067\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4f8b\u3092\u53c2\u8003\u306b\u3001\u67d0AVR\u306e\u30aa\u30da\u30b3\u30fc\u30c9\u3092\u6a21\u3057\u3066\u307f\u308b\u3002\n\u30aa\u30da\u30b3\u30fc\u30c9\u306f\u5168\u30d3\u30c3\u30c8\u4f7f\u3044\u5207\u3063\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u306f\u3042\u307e\u308a\u306a\u3044\u306e\u3067\u3001\u9023\u60f3\u914d\u5217\u3067\u3082\u3067\u304d\u308b\u3082\u306e\u306e\u3001\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u305f\u65b9\u304c\u4fbf\u5229\u305d\u3046\u3002\n\n\u30b3\u30fc\u30c9\n\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3044\u3066\u307f\u305f\u3002\n// # r = source register id\n// # d = destination register id\n\n// #mnemonic opcode      desc\n// NOP     0000:0000:0000:0000 # no operation\n// MOVW    0000:0001:dddd:rrrr # copy register word (pair to pair)\n// MULS    0000:0010:dddd:rrrr # multiply signed, R1:R0 = Rd * Rr\n// MULSU   0000:0011:0ddd:0rrr # multiply, s16 = s8 * u8\n// FMUL    0000:0011:0ddd:1rrr # fractional multiply, unsigned\n// FMULS   0000:0011:1ddd:0rrr # fractional multiply, signed\n// FMULSU  0000:0011:1ddd:1rrr # fractional multiply, s16 = s8 * u8\n\n`include \"svlib_macros.svh\"\n\nmodule tb ();\n\n  import svlib_pkg::*;\n\n  typedef enum logic[15:0] {\n    NOP     = 16'b0000_0000_0000_0000,\n    MOVW    = 16'b0000_0001_xxxx_xxxx,\n    MULS    = 16'b0000_0010_xxxx_xxxx,\n    MULSU   = 16'b0000_0011_0xxx_0xxx,\n    FMUL    = 16'b0000_0011_0xxx_1xxx,\n    FMULS   = 16'b0000_0011_1xxx_0xxx,\n    FMULSU  = 16'b0000_0011_1xxx_1xxx\n  } op_t;\n\n  typedef EnumUtils#(op_t) op_util;\n\n  task exists (string c);\n    if(op_util::hasName(c))\n      $display(\"%s op exists this model.\", c);\n    else\n      $display(\"%s op DON'T exist in this model.\", c);\n  endtask\n\n  task print_all_op();\n    op_t  opq[$];\n    opq = op_util::allValues();\n\n    foreach(opq[i]) $display(\"%s\", opq[i].name);\n  endtask\n\n  initial begin\n\n    exists(\"MOV\");\n    exists(\"MOVW\");\n    print_all_op();\n\n    $finish(1);\n\n  end\n\nendmodule\n\n\u3053\u3053\u3067\u306f\u3001\u5165\u529b\u3055\u308c\u305f\u6587\u5b57\u5217\u304c\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u884c\u3046\u30bf\u30b9\u30af(extists)\u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30aa\u30da\u30b3\u30fc\u30c9\u3092\u5168\u90e8\u51fa\u529b\u3055\u305b\u308b\u30bf\u30b9\u30af(print_all_op)\u3092\u66f8\u3044\u3066\u307f\u305f\u3002\n\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001\u300cMOV\u300d\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067DON'T\u304c\u51fa\u529b\u3055\u308c\u3001\u300cMOVW\u300d\u306f\u9006\u306e\u51fa\u529b\u304c\u51fa\u3066\u304f\u308b\u3002\n\u305d\u306e\u5f8c\u3001\u5b9a\u7fa9\u3057\u305f\u30aa\u30da\u30b3\u30fc\u30c9\u4e00\u89a7\u304c\u51fa\u529b\u3055\u308c\u308b\u3002\n\n\u4eca\u5f8c\u306b\u671f\u5f85\n\u6bce\u56de\u66f8\u3044\u3066\u3044\u308b\u3088\u3046\u306a\u6c17\u3082\u3059\u308b\u304c\u2026\u3002\n\u4eca\u56de\u306f\u5fdc\u7528\u306e\u5229\u304d\u305d\u3046\u306a\u30af\u30e9\u30b9\u306b\u51fa\u4f1a\u3048\u305f\u306e\u3067\u3001\u500b\u4eba\u7684\u306b\u306f\u3082\u3046\u3061\u3087\u3063\u3068\u4ed6\u3082\u307f\u3066\u3044\u3053\u3046\u304b\u3068\u601d\u3046\u3002\n##\u306f\u3058\u3081\u306b\nsvlib\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u773a\u3081\u3066\u3044\u305f\u3089\u3001\u4f7f\u3048\u305d\u3046\u306a\u3082\u306e\u304c\u3042\u3063\u305f\u306e\u3067\u8a66\u3057\u306b\u3084\u3063\u3066\u307f\u305f\u3002\nsvlib\u306b\u95a2\u3057\u3066\u306e\u3053\u308c\u307e\u3067\u306e\u6295\u7a3f\u8a18\u4e8b\u306f\u3053\u3061\u3089\u3002\n\n* [svlib\u306e\u7d39\u4ecb](http://qiita.com/tethys_seesaa/items/f4d10976677cdc8a63c0)\n* [svlib\u304c\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3057\u3066\u305f\u3002](http://qiita.com/tethys_seesaa/items/c0ebee313e61aed17a3f)\n\n\u4eca\u56de\u306f\u5217\u6319\u578b\u3092\u62e1\u5f35\u3059\u308b\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u307f\u308b\u3002\n\n##Utilities for enumeration types\n\u30af\u30e9\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\n\n```sv\nclass EnumUtils #(type ENUM = int);\n  typedef ENUM qe[$];\n  typedef logic [$bits(ENUM)-1:0] BASE;\n\n  static function ENUM fromName     (string s);\n  static function int  pos          (BASE   b);\n  static function bit  hasName      (string s);\n  static function int  maxNameLength();\n  static function bit  hasValue     (BASE   b);\n  static function qe   allValues    ();\n  static function ENUM match        (BASE   b, bit requireUnique = 0);\nendclass: EnumUtils\n```\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u304c\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3068\u5fae\u5999\u306b **\u9055\u3063\u3066\u3044\u308b\u3002** \u8981\u6ce8\u610f\u3002\n\u30e1\u30bd\u30c3\u30c9\u306e\u6a5f\u80fd\u306e\u8aac\u660e\u306f\u3053\u3053\u3067\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8b72\u308b\u2026\u3068\u3044\u3044\u305f\u3044\u304c\u3001\u307e\u3060\u307e\u3060\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8aac\u660e\u306f **\u8352\u3063\u307d\u3044\u3002**\n\n##CPU\u30aa\u30da\u30b3\u30fc\u30c9\u3063\u307d\u3044\u3082\u306e\u3092\u5b9a\u7fa9\n\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3068\u3001\u5217\u6319\u578b\u306e\u5909\u6570\u306b\u3044\u308d\u3044\u308d\u4fbf\u5229\u306a\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3092\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u305d\u3053\u3067\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4f8b\u3092\u53c2\u8003\u306b\u3001\u67d0AVR\u306e\u30aa\u30da\u30b3\u30fc\u30c9\u3092\u6a21\u3057\u3066\u307f\u308b\u3002\n\n\u30aa\u30da\u30b3\u30fc\u30c9\u306f\u5168\u30d3\u30c3\u30c8\u4f7f\u3044\u5207\u3063\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u306f\u3042\u307e\u308a\u306a\u3044\u306e\u3067\u3001\u9023\u60f3\u914d\u5217\u3067\u3082\u3067\u304d\u308b\u3082\u306e\u306e\u3001\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u305f\u65b9\u304c\u4fbf\u5229\u305d\u3046\u3002\n\n##\u30b3\u30fc\u30c9\n\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3044\u3066\u307f\u305f\u3002\n\n```sv\n// # r = source register id\n// # d = destination register id\n\n// #mnemonic opcode      desc\n// NOP     0000:0000:0000:0000 # no operation\n// MOVW    0000:0001:dddd:rrrr # copy register word (pair to pair)\n// MULS    0000:0010:dddd:rrrr # multiply signed, R1:R0 = Rd * Rr\n// MULSU   0000:0011:0ddd:0rrr # multiply, s16 = s8 * u8\n// FMUL    0000:0011:0ddd:1rrr # fractional multiply, unsigned\n// FMULS   0000:0011:1ddd:0rrr # fractional multiply, signed\n// FMULSU  0000:0011:1ddd:1rrr # fractional multiply, s16 = s8 * u8\n\n`include \"svlib_macros.svh\"\n\nmodule tb ();\n\n  import svlib_pkg::*;\n\n  typedef enum logic[15:0] {\n    NOP     = 16'b0000_0000_0000_0000,\n    MOVW    = 16'b0000_0001_xxxx_xxxx,\n    MULS    = 16'b0000_0010_xxxx_xxxx,\n    MULSU   = 16'b0000_0011_0xxx_0xxx,\n    FMUL    = 16'b0000_0011_0xxx_1xxx,\n    FMULS   = 16'b0000_0011_1xxx_0xxx,\n    FMULSU  = 16'b0000_0011_1xxx_1xxx\n  } op_t;\n\n  typedef EnumUtils#(op_t) op_util;\n\n  task exists (string c);\n    if(op_util::hasName(c))\n      $display(\"%s op exists this model.\", c);\n    else\n      $display(\"%s op DON'T exist in this model.\", c);\n  endtask\n\n  task print_all_op();\n    op_t  opq[$];\n    opq = op_util::allValues();\n\n    foreach(opq[i]) $display(\"%s\", opq[i].name);\n  endtask\n\n  initial begin\n\n    exists(\"MOV\");\n    exists(\"MOVW\");\n    print_all_op();\n\n    $finish(1);\n\n  end\n\nendmodule\n```\n\n\u3053\u3053\u3067\u306f\u3001\u5165\u529b\u3055\u308c\u305f\u6587\u5b57\u5217\u304c\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u884c\u3046\u30bf\u30b9\u30af(extists)\u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30aa\u30da\u30b3\u30fc\u30c9\u3092\u5168\u90e8\u51fa\u529b\u3055\u305b\u308b\u30bf\u30b9\u30af(print_all_op)\u3092\u66f8\u3044\u3066\u307f\u305f\u3002\n\n\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001\u300cMOV\u300d\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067DON'T\u304c\u51fa\u529b\u3055\u308c\u3001\u300cMOVW\u300d\u306f\u9006\u306e\u51fa\u529b\u304c\u51fa\u3066\u304f\u308b\u3002\n\u305d\u306e\u5f8c\u3001\u5b9a\u7fa9\u3057\u305f\u30aa\u30da\u30b3\u30fc\u30c9\u4e00\u89a7\u304c\u51fa\u529b\u3055\u308c\u308b\u3002\n\n##\u4eca\u5f8c\u306b\u671f\u5f85\n\u6bce\u56de\u66f8\u3044\u3066\u3044\u308b\u3088\u3046\u306a\u6c17\u3082\u3059\u308b\u304c\u2026\u3002\n\n\u4eca\u56de\u306f\u5fdc\u7528\u306e\u5229\u304d\u305d\u3046\u306a\u30af\u30e9\u30b9\u306b\u51fa\u4f1a\u3048\u305f\u306e\u3067\u3001\u500b\u4eba\u7684\u306b\u306f\u3082\u3046\u3061\u3087\u3063\u3068\u4ed6\u3082\u307f\u3066\u3044\u3053\u3046\u304b\u3068\u601d\u3046\u3002\n", "tags": ["SystemVerilog"]}