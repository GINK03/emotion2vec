{"context": " More than 1 year has passed since last update.\n\n Ch\u00e0o m\u1eebng c\u00e1c b\u1ea1n tr\u1edf l\u1ea1i\nB\u00e0i vi\u1ebft n\u00e0y \u0111\u01b0\u1ee3c m\u00ecnh d\u1ecbch t\u1eeb b\u00e0i \u30b5\u30fc\u30d0\u30fc\u30fb\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4e21\u9762\u304b\u3089\u304b\u3051\u308b\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3 - AWS\u4e0a\u3067\u69cb\u7bc9\u3059\u308bRESTful\u30a2\u30d7\u30ea\u52c9\u5f37\u4f1a\uff5eWeb\u958b\u767a\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d7\uff5e\u3010\u7b2c7\u56de\u3011\u30de\u30cb\u30e5\u30a2\u30eb c\u1ee7a t\u00e1c gi\u1ea3 @k_shimoji .\n\n T\u1ea1i sao l\u1ea1i c\u1ea7n ph\u1ea3i ki\u1ec3m duy\u1ec7t (Validate)?\nT\u1ea1i th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i, khi ch\u00fang ta \u0111\u00e3 validate th\u00ec coi nh\u01b0 \u0111\u00e3 validate lu\u00f4n cho c\u00e1c thao t\u00e1c tr\u00ean client side r\u1ed3i, v\u1eady t\u1ea1i sao l\u1ea1i ph\u1ea3i l\u00e0m c\u1ea3 2.\nL\u00fd do l\u00e0 ch\u00fang ta th\u1ea5y c\u00f3 s\u1ef1 kh\u00e1c bi\u1ec7t \u1edf ph\u00eda client, nh\u1eefng thao t\u00e1c tr\u00ean client ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 gi\u00fap c\u1ea3i thi\u1ec7n UX, ng\u01b0\u1eddi d\u00f9ng nh\u1eadn ngay k\u1ebft qu\u1ea3 ki\u1ec3m duy\u1ec7t, sau khi d\u1eef li\u1ec7u h\u1ee3p l\u1ec7 m\u1edbi truy\u1ec1n \u0111\u1ebfn server ch\u1edd x\u1eed l\u00fd, thay v\u00ec g\u1eedi h\u1ebft l\u00ean server. \n\nL\u00fd do c\u1ea7n th\u1ef1c hi\u1ec7n validation tr\u00ean c\u1ea3 client l\u1eabn server.\nC\u00f3 m\u1ed9t s\u1ef1 th\u1eadt l\u00e0 n\u1ebfu ch\u1ec9 validate \u1edf client l\u00e0 ch\u01b0a \u0111\u1ee7, b\u1edfi v\u00ec \"B\u1ea1n ch\u1ecdn t\u1eeb danh s\u00e1ch t\u1eeb ph\u00eda client, nh\u01b0ng ch\u01b0a ki\u1ec3m tra n\u00f3 c\u00f3 h\u1ee3p l\u1ec7 \u1edf tr\u1ebfn server hay kh\u00f4ng.\"\nV\u00e0 \u0111\u00e2y l\u00e0 \u0111i\u1ec1u r\u1ea5t th\u01b0\u1eddng xuy\u00ean x\u1ea3y ra.\n\n\nV\u1ec1 c\u01a1 b\u1ea3n th\u00ec nh\u1eefng g\u00ec b\u1ea1n l\u00e0m tr\u00ean client side b\u1ea1n c\u0169ng c\u1ea7n ph\u1ea3i l\u00e0m n\u00f3 tr\u00ean server side.\n\nM\u00ecnh c\u00f3 th\u1ec3 x\u1eed l\u00fd n\u00f3 kh\u00f4ng c\u1ea7n qua giao di\u1ec7n, th\u00f4ng qua API (POSTMAN!)\n\n\n\n\u0110\u00e2y l\u00e0 nh\u1eefng validation m\u00e0 kh\u00f4ng th\u1ec3 ch\u1ec9 l\u00e0m m\u1ed7i tr\u00ean client side\n\nLi\u00ean quan \u0111\u1ebfn DB\n\n\nC\u00e1i c\u00f3 gi\u00e1 tr\u1ecb date v\u00e0 time\nC\u1ea7n t\u01b0\u1eddng t\u00e1c v\u1edbi c\u00e1c h\u1ec7 th\u1ed1ng kh\u00e1c\nV\u00e2n v\u00e2n ...\n\n\n\n\n\n\nL\u00fd do c\u1ea7n th\u1ef1c hi\u1ec7n validation t\u1eeb ph\u00eda server\nServer side c\u1ea7n x\u1eed l\u00fd nh\u1eefng input kh\u00f4ng h\u1ee3p l\u1ec7, validation s\u1ebd gi\u00fap ch\u00fang ta \u0111\u1ea1t \u0111\u01b0\u1ee3c nh\u1eefng m\u1ee5c ti\u00eau sau.\n\nB\u1ea3o v\u1ec7 \u1ee9ng d\u1ee5ng\n\n\n\u0110\u1ec3 ng\u0103n ch\u1eb7n nh\u1eefng h\u00e0nh vi kh\u00f4ng mong mu\u1ed1n ( ho\u1eb7c th\u1ea5t b\u1ea1i...)\n\n\n\u0110\u1ec3 t\u0103ng c\u01b0\u1eddng b\u1ea3o m\u1eadt (XSS, SQLInjection, etc ...)\n\n\n\n\nB\u1ea3o v\u1ec7 d\u1eef li\u1ec7u\n\n\n\u0110\u1ec3 ch\u1eafc ch\u1eafn nh\u1eefng d\u1eef li\u1ec7u kh\u00f4ng h\u1ee3p l\u1ec7 s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c g\u1eedi l\u00ean server\n\n\nV\u01b0\u1ee3t qu\u00e1 Ph\u1ea1m vi c\u1ee7a gi\u00e1 tr\u1ecb, format, encoding ...\nGi\u00fap c\u00e1c d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c th\u1ed1ng nh\u1ea5t\n\n\n\n\n\n\nL\u00fd do c\u1ea7n th\u1ef1c hi\u1ec7n validation t\u1eeb ph\u00eda client\nPh\u1ea3i th\u1eeba nh\u1eadn r\u1eb1ng sau khi b\u1ea1n validate \u1edf server xong th\u00ec b\u1ea1n c\u00f3 th\u1ec3 n\u00f3i validation \u1edf client side kh\u00f4ng c\u1ea7n thi\u1ebft cho l\u1eafm. Tuy nhi\u00ean ch\u00fang ta v\u1eabn c\u1ea7n nh\u1eefng thao t\u00e1c \"non-server\" \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng l\u00e0m vi\u1ec7c tr\u00ean client side, qua \u0111\u00f3 c\u00f3 nh\u1eefng ph\u1ea3n h\u1ed3i t\u1ed1t h\u01a1n v\u1ec1 m\u1eb7t UX, nh\u1ea5t l\u00e0 vi\u1ec7c ki\u1ec3m tra ngay l\u1eadp t\u1ee9c c\u00e1c l\u1ed7i \u0111i\u1ec1n form.\n\u203b \u1ee8ng d\u1ee5ng c\u1ee7a ch\u00fang ta \u0111\u00e3 \u0111\u1ee7 nh\u1eefng \u0111i\u1ec1u ki\u1ec7n v\u00e0 m\u00f4i tr\u01b0\u1eddng, ch\u1ec9 c\u00f2n s\u1ef1 validation ch\u1ec9 m\u1edbi l\u00e0m 1 trong 2 ph\u00eda client v\u00e0 server.\n\nGi\u1edbi h\u1ea1n v\u00e0 formart c\u1ee7a c\u00e1c gi\u00e1 tr\u1ecb input\nKi\u1ec3m tra vi\u1ec7c t\u1ed5ng h\u1ee3p v\u00e0 s\u1eed d\u1ee5ng th\u00f4ng tin t\u1eeb server\n\u0110\u1ea7u ti\u00ean l\u00e0 b\u1ea1n kh\u00f4ng \u0111\u01b0\u1ee3c nh\u1eadp nh\u1eefng d\u1eef li\u1ec7u kh\u00f4ng h\u1ee3p l\u1ec7 t\u1eeb UI ( nh\u01b0ng kh\u00e1c v\u1edbi validation, c\u00e1i n\u00e0y l\u00e0 ki\u1ec3m tra th\u00f4i ...)\n\n\n\u1ede ph\u1ea7n select th\u00eam ki\u1ec3m tra \u0111\u00e3 ch\u1ecdn gi\u00e1 tr\u1ecb n\u00e0o ch\u01b0a\nTh\u00eam gi\u1edbi h\u1ea1n Maxlength\n\n\n\n\n Th\u1ef1c hi\u1ec7n\nCh\u00fang ta s\u1ebd th\u1ef1c hi\u1ec7n validation theo server-side v\u00e0 client-side nh\u01b0 h\u01b0\u1edbng d\u1eabn d\u01b0\u1edbi \u0111\u00e2y, k\u1ebft qu\u1ea3 sau khi th\u00e0nh c\u00f4ng nh\u01b0 sau\n D\u01b0\u1edbi \u0111\u00e2y l\u00e0 k\u1ebft qu\u1ea3 t\u1eeb client-side. T\u00f4i th\u00eam m\u1ed9t ti\u1ec1n t\u1ed1 [Client] \u1edf \u0111\u1ea7u c\u00e1c th\u00f4ng b\u00e1o \u0111\u1ec3 d\u1ec5 nh\u1eadn bi\u1ebft \u0111\u00e2u l\u00e0 ph\u1ea3n h\u1ed3i t\u1eeb validation \u1edf client, v\u00e0 l\u00e0m t\u01b0\u01a1ng t\u1ef1 v\u1edbi [Server] .\n\n\nServer-side validation\n\nGi\u1edbi h\u1ea1n k\u00fd t\u1ef1 cho TODO\n\n\nGi\u1edbi h\u1ea1n t\u1eeb 1~200 k\u00fd t\u1ef1\nN\u1ebfu qu\u00e1 ho\u1eb7c ch\u01b0a \u0111\u1ee7 gi\u1edbi h\u1ea1n th\u00ec xu\u1ea5t th\u00f4ng b\u00e1o \"[Server] TODO must have 1~200 characters.\"\n\n\n\nTr\u1ea1ng th\u00e1i TODO\n\n0 (ch\u01b0a ho\u00e0n th\u00e0nh) ho\u1eb7c 1 (ho\u00e0n th\u00e0nh)\n\n\nN\u1ebfu l\u1ed7i, xu\u1ea5t \"[Server] status should be entered in the 0 (incomplete) or 1 (completed).\"\n\n\n\n\n\nKi\u1ec3m tra s\u1ef1 t\u1ed3n t\u1ea1i c\u1ee7a ID ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng\n\nID c\u00f3 t\u1ed3n t\u1ea1i\n\n\nTr\u01b0\u1eddng h\u1ee3p l\u1ed7i, xu\u1ea5t th\u00f4ng b\u00e1o \"The Assignee's not found.\"\n\n\n\n\nKhi kh\u00f4ng ph\u1ea3i owner thay \u0111\u1ed5i ho\u1eb7c x\u00f3a ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng ( nh\u01b0ng v\u1eabn \u1edf khu v\u1ef1c \u0111\u01b0\u1ee3c quy\u1ec1n qu\u1ea3n l\u00fd)\n\nKhi ng\u01b0\u1eddi s\u1eeda kh\u00f4ng ph\u1ea3i l\u00e0 owner m\u00e0 l\u00e0 ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng\n\n\"[Server] Only Owner or Assignee can update.\"\n\n\n\nKhi ng\u01b0\u1eddi x\u00f3a TODO kh\u00f4ng ph\u1ea3i l\u00e0 Owner\n\n\"[Server] Only the owner can delete.\"\n\n\n\nTh\u00eam TODO\n\nTo\u00e0n b\u1ed9 n\u1ed9i dung c\u1ee7a TODO m\u1edbi tr\u00f9ng v\u1edbi m\u1ed9t TODO \u0111\u00e3 c\u00f3\n\n\n\"TODO of the same content is already registered.\"\n\n\n\n\n\nCho vi\u1ec7c th\u1ef1c hi\u1ec7n validation, c\u00f3 s\u1eb5n trong CakePHP.\n\n1-2 s\u1eed d\u1ee5ng CakePHP's built-in validation\n3-5 t\u1ef1 t\u1ea1o c\u00e1c h\u00e0m validation m\u1edbi\n\nB\u00e2y gi\u1edd b\u1eaft \u0111\u1ea7u implement th\u00f4i.\n\nClient-side validation\n\nGi\u1edbi h\u1ea1n k\u00fd t\u1ef1 cho TODO (Gi\u1ed1ng tr\u00ean server)\n\n\nGi\u1edbi h\u1ea1n t\u1eeb 1~200 k\u00fd t\u1ef1\nN\u1ebfu qu\u00e1 ho\u1eb7c ch\u01b0a \u0111\u1ee7 gi\u1edbi h\u1ea1n th\u00ec xu\u1ea5t th\u00f4ng b\u00e1o \"TODO must have 1~200 characters.\"\n\n\nTh\u00eam TODO ( cho vi\u1ec7c x\u00e1c nh\u1eadn, n\u01a1i m\u00e0 ph\u1ea7n l\u1edbn c\u00e1c validation error ch\u1ea1y \u0111\u00fang )\n\n\nKh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p \u0111i\u1ec1n todo \"hoge\"\n\n\nN\u1ebfu vi ph\u1ea1m \"[Client] TODO can not be \"hoge\" only!\"\nValidation n\u00e0y s\u1ebd t\u1ef1 xu\u1ea5t hi\u1ec7n th\u00f4ng b\u00e1o.\nV\u00e0 \u0111\u00e2y l\u00e0 t\u1ea5t c\u1ea3 nh\u1eefng g\u00ec m\u00ecnh c\u1ea7n l\u00e0m cho ph\u1ea7n client side. M\u1eb7c d\u00f9 n\u00f3 kh\u00e1 \u00edt...\n\n\n\n\n\nNh\u1eefng g\u00ec s\u1ebd th\u1ef1c hi\u1ec7n \u1edf Backbone.js,\n\n\u0110\u1ec3 th\u1ef1c hi\u1ec7n validation, ch\u1ea1y h\u00e0m validate \u1edf model\nT\u1ea1o c\u00e1c s\u1ef1 ki\u1ec7n invalid cho m\u1ed7i validation error\n\n\nM\u1ee5c l\u1ee5c Workshop\n\nChu\u1ea9n b\u1ecb\nB\u00e0i 0: x\u00e2y d\u1ef1ng app gi\u1ed1ng nh\u01b0 b\u00e0i tr\u01b0\u1edbc\nB\u00e0i 1: Th\u1ef1c hi\u1ec7n \u1edf server-side\nB\u00e0i 2: Th\u1ef1c hi\u1ec7n \u1edf client-side\n\nSau khi chu\u1ea9n b\u1ecb, \u0111\u1ea7u ti\u00ean m\u00ecnh s\u1ebd x\u00e2y d\u1ef1ng app nh\u01b0 sau khi ho\u00e0n th\u00e0nh b\u00e0i vi\u1ebft tr\u01b0\u1edbc, ch\u01b0a c\u00f3 validation!\n\n Chu\u1ea9n b\u1ecb\nPh\u1ea7n chu\u1ea9n b\u1ecb s\u1ebd gi\u1ed1ng nhau \u1edf m\u1ed7i b\u00e0i, v\u00ec v\u1eady t\u00f4i \u0111\u00e3 t\u1ed5ng h\u1ee3p n\u00f3 \u1edf m\u1ed9t entry ri\u00eang. C\u00e1c b\u1ea1n vui l\u00f2ng xem \u1edf link n\u00e0y All 12 times of study sessions in do I have use of Git - RESTful application workshops will be built on AWS ~ Web development workshop ~ - Qiita \u0111\u1ec3 chu\u1ea9n b\u1ecb .\n\nGit: B\u00e2y gi\u1edd m\u00ecnh s\u1ebd t\u1ea1o branch vol/07 v\u00e0 l\u00e0m vi\u1ec7c tr\u00ean n\u00f3.\n\n *** T\u00f4i xin nh\u1eafc l\u1ea1i \u1edf b\u00e0i 5 v\u00e0 b\u00e0i 6, ch\u00fang ta \u0111\u00e3 c\u00f3 nh\u1eefng table b\u1ecb thay \u0111\u1ed5i. ***\n\nB\u00e0i 5\n\n\nT\u1ea1o Table d\u00e0nh cho vi\u1ec7c \u0111\u0103ng k\u00fd th\u00e0nh vi\u00ean ( Th\u1ef1c hi\u1ec7n cho ch\u1ee9c n\u0103ng login )\n\n\nB\u00e0i 6\n\n\nTh\u00eam m\u1ed9t c\u1ed9t cho table TODO list ( Th\u00eam c\u1ed9t Owner v\u00e0 c\u1ed9t assignee cho ch\u1ee9c n\u0103ng ph\u00e2n c\u00f4ng c\u00f4ng vi\u1ec7c)\n\n\n\nC\u00e1c b\u1ea1n n\u00ean tham kh\u1ea3o l\u1ea1i c\u00e1c link sau \u0111\u1ec3 r\u00f5 h\u01a1n.\nT\u1ea1o Table d\u00e0nh cho vi\u1ec7c \u0111\u0103ng k\u00fd th\u00e0nh vi\u00ean\nTh\u00eam m\u1ed9t c\u1ed9t cho table TODO list\n\n\n T\u1ea1o m\u1ed9t branch m\u1edbi t\u00ean l\u00e0 vol/07.\n\n S\u1eeda table theo c\u00e1c b\u00e0i tr\u01b0\u1edbc.\n\nN\u1ebfu \u0111\u00e3 s\u1eb5n s\u00e0ng, ch\u00fang ta b\u1eaft \u0111\u1ea7u b\u00e0i 0\n\n B\u00e0i 0: Nh\u00ecn l\u1ea1i \u1ee9ng d\u1ee5ng t\u1ea1i th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i\nHi\u1ec7n t\u1ea1i \u1ee9ng d\u1ee5ng c\u1ee7a ch\u00fang ta ch\u01b0a \u0111\u01b0\u1ee3c th\u00eam validation n\u00e0o.\nM\u1ed9t s\u1ed1 c\u00e1i t\u1ed1i thi\u1ec3u \u1edf client-side (nh\u01b0 MaxLength) \u0111\u00e3 \u0111\u01b0\u1ee3c th\u00eam, tuy nhi\u00ean b\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng ph\u00e1 b\u1ecf n\u00f3 b\u1eb1ng c\u00e1ch g\u1eedi request l\u00ean POSTMAN, v\u00ec v\u1eady s\u1ebd g\u00e2y ra l\u1ed7i Internal Server Error.\n\nTh\u1eed v\u1edbi POSTMAN\nHi\u1ec7n t\u1ea1i t\u00ecnh tr\u1ea1ng c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh nh\u01b0 sau\n\n\n S\u1ed1 l\u01b0\u1ee3ng k\u00fd t\u1ef1 c\u1ee7a TODO v\u01b0\u1ee3t qu\u00e1 gi\u1edbi h\u1ea1n\n\n\nSinh ra l\u1ed7i 500(Internal Server Error)\n\n\n\n TODO l\u00e0 d\u1eef li\u1ec7u r\u1ed7ng\n\n\nS\u1ec9nh ra l\u1ed7i 500(Internal Server Error)\n\n\n\n Status l\u00e0 9\n\n\nCh\u1ec9 cho ph\u00e9p 2 gi\u00e1 tr\u1ecb l\u00e0 0 v\u00e0 1, nh\u01b0ng v\u1eabn \u0111\u01b0\u1ee3c l\u01b0u gi\u00e1 tr\u1ecb\n\n\n\n Kh\u00f4ng t\u1ed3n t\u1ea1i ID c\u1ee7a user\n\n\nB\u1ea1n mu\u1ed1n sinh ra th\u00f4ng b\u00e1o l\u1ed7i, nh\u01b0ng ng\u01b0\u1eddi \u0111\u00f3 v\u1eabn thao t\u00e1c \u0111\u01b0\u1ee3c\n\n\n\nTODO b\u1ecb tr\u00f9ng v\u1edbi TODO \u0111\u00e3 t\u1ed3n t\u1ea1i\n\n\nS\u1ec9nh ra l\u1ed7i 500(Internal Server Error)\n\n\n\n Kh\u00f4ng ph\u1ea3i owner s\u1eeda TODO m\u00e0 l\u00e0 assignee\n\n\nCh\u00fang ta mu\u1ed1n c\u00f3 th\u00f4ng b\u00e1o l\u1ed7i, nh\u01b0ng ng\u01b0\u1eddi d\u00f9ng v\u1eabn s\u1eeda \u0111\u01b0\u1ee3c\n\n\n\n Ng\u01b0\u1eddi x\u00f3a TODO kh\u00f4ng ph\u1ea3i Owner\n\n\nCh\u00fang ta mu\u1ed1n c\u00f3 th\u00f4ng b\u00e1o l\u1ed7i, nh\u01b0ng ng\u01b0\u1eddi d\u00f9ng v\u1eabn x\u00f3a \u0111\u01b0\u1ee3c\n\n\n\nHo\u00e0n to\u00e0n ch\u01b0a b\u1eaft \u0111\u01b0\u1ee3c c\u00e1c l\u1ed7i n\u00e0y, \u0111\u00f3 l\u00e0 c\u00f4ng vi\u1ec7c c\u1ee7a b\u00e0i 1, sau khi xong b\u00e0i 1 c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 test \u1edf POSTMAN v\u00e0 s\u1ebd ra k\u1ebft qu\u1ea3 nh\u01b0 ph\u1ea7n Tham kh\u1ea3o d\u01b0\u1edbi \u0111\u00e2y\n Tham kh\u1ea3o\n\u0110\u1ec3 bi\u1ebft URL hay d\u1eef li\u1ec7u c\u1ea7n set \u0111\u1ec3 ki\u1ec3m tra v\u00e0o POSTMAN, c\u00e1c b\u1ea1n ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng chrome developer tools.\n\u0110\u1ea7u ti\u00ean c\u00e1c b\u1ea1n m\u1edf chrome dev tool v\u00e0 b\u1ea5m v\u00e0o tab NETWORK -> XHR, th\u1ef1c hi\u1ec7n  m\u1ed9t thao t\u00e1c n\u00e0o \u0111\u00f3 ( Th\u00eam, s\u1eeda, x\u00f3a... ) v\u00e0 quan s\u00e1t s\u1ebd th\u1ea5y \u1edf c\u1ed9t Name s\u1ebd hi\u1ec7n t\u00ean thao t\u00e1c m\u00ecnh v\u1eeba th\u1ef1c hi\u1ec7n, nh\u1ea5n v\u00e0o \u0111\u1ea5y \u0111\u1ec3 quan s\u00e1t, nh\u1eefng gi\u00e1 tr\u1ecb c\u1ea7n ch\u00fa \u00fd t\u00f4i \u0111\u00e3 \u0111\u1ec3 m\u0169i t\u00ean m\u00e0u xanh.\n\nB\u00e2y gi\u1edd m\u00ecnh s\u1ebd l\u1ea5y URL, nh\u01b0 trong \u1ea3nh tr\u00ean t\u00f4i s\u1ebd l\u1ea5y http://54.199.231.20/rest-study/todo_lists.json, method l\u00e0 POST.\nC\u00e1c gi\u00e1 tr\u1ecb truy\u1ec1n l\u00ean s\u1ebd g\u1ed3m c\u00f3 todo, status, v\u00e0 assignee ( L\u1ea7n l\u01b0\u1ee3t l\u00e0 n\u1ed9i dung todo, tr\u1ea1ng th\u00e1i th\u00eam v\u00e0o 0 hay 1, assignee l\u00e0 ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng ).\nTr\u01b0\u1eddng h\u1ee3p th\u00eam n\u1ed9i dung v\u1eabn x\u1ecbt th\u00ec b\u1ea1n n\u00ean ch\u1ea1y API \u0111\u0103ng nh\u1eadp tr\u01b0\u1edbc nh\u00e9, v\u00ec ph\u1ea3i \u0111\u0103ng nh\u1eadp xong n\u00f3 m\u1edbi c\u00f3 quy\u1ec1n t\u00e1c \u0111\u1ed9ng v\u00e0o todo list v\u00e0 m\u1edbi nh\u1eadn \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb Owner.\n\u0110i\u1ec1n \u0111\u1ea7y \u0111\u1ee7 th\u00f4ng tin nh\u01b0 trong h\u00ecnh d\u01b0\u1edbi v\u00e0 nh\u1ea5n SEND trong POSTMAN ( \u0111\u1ea7u ti\u00ean m\u00ecnh th\u1eed v\u1edbi gi\u00e1 tr\u1ecb h\u1ee3p l\u1ec7 \u0111\u00e3 )\n\nB\u00e2y gi\u1edd m\u00ecnh test v\u1edbi gi\u00e1 tr\u1ecb kh\u00f4ng h\u1ee3p l\u1ec7 \u0111\u1ec3 ki\u1ec3m tra nh\u01b0 tr\u00ean, \u0111\u1ec3 cho nhanh th\u00ec m\u00ecnh test vi\u1ec7c tr\u00f9ng n\u1ed9i dung TODO b\u1eb1ng c\u00e1ch nh\u1ea5n SEND th\u00eam 1 l\u1ea7n n\u1eefa.\n\nB\u00e1o l\u1ed7i ngay v\u00e0 lu\u00f4n.\nC\u00e1c b\u1ea1n c\u00f3 th\u1ec3 s\u1eeda n\u1ed9i dung TODO th\u00e0nh r\u1ed7ng ho\u1eb7c qu\u00e1 200 k\u00fd t\u1ef1, ho\u1eb7c s\u1eeda ID c\u1ee7a assignee th\u00e0nh 1 c\u00e1i ID kh\u00f4ng t\u1ed3n t\u1ea1i ng\u01b0\u1eddi d\u00f9ng trong database, ho\u1eb7c s\u1eeda status th\u00e0nh 9 ch\u1eb3ng h\u1ea1n \u0111\u1ec3 test ti\u1ebfp, n\u1ebfu \u0111\u01b0\u1ee3c b\u00e1o l\u1ed7i ngh\u0129a l\u00e0 m\u00ecnh \u0111\u00e3 validate th\u00e0nh c\u00f4ng tr\u00ean server side.\nB\u00e2y gi\u1edd m\u00ecnh s\u1ebd b\u1eaft \u0111\u1ea7u b\u00e0i 1\n\n B\u00e0i 1: Server-side validation\n\u1ede b\u00e0i 1 n\u00e0y ch\u00fang ta s\u1ebd th\u1ef1c hi\u1ec7n ph\u1ea7n server-side c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh.\nS\u1eed d\u1ee5ng \"POSTMAN\" \u0111\u1ec3 x\u00e1c nh\u1eadn s\u1ef1 thay \u0111\u1ed5i c\u1ee7a API sau khi ti\u1ebfn h\u00e0nh validation.\n\nCh\u00fa \u00fd: M\u00f4 t\u1ea3 ph\u01b0\u01a1ng th\u1ee9c validation\nN\u00f3 s\u1ebd m\u00f4 t\u1ea3 rule cho Model, ch\u1ec9 c\u00f3 th\u1ec3!\nSau \u0111\u00f3, validation d\u1ef1a tr\u00ean c\u00e1c rule n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c t\u1ef1 \u0111\u1ed9ng th\u00eam khi h\u00e0m model -> save() \u0111\u01b0\u1ee3c th\u1ef1c thi, Tr\u01b0\u1eddng h\u1ee3p l\u1ed7i s\u1ebd xu\u1ea5t th\u00f4ng b\u00e1o l\u1ed7i b\u1eb1ng model-> validationErrors.\n\nV\u00ed d\u1ee5: Implement v\u00e0o model\n\nValidationRules\nclass TodoList extends AppModel {\n\n\u301c\u7701\u7565\u301c\n\npublic $validate = array (\n    //TODO check\n    'todo' => array (\n        //S\u1ed1 k\u00fd t\u1ef1\n        'rule1' => array (\n            'rule' => array(\n                'between', 1, 200\n            ),\n            'message' => 'The characters must be in the range 1~200'\n        ),\n\n        \u301cCh\u00fang ta s\u1ebd t\u1ea1i ra c\u00e1c rule m\u1edbi t\u01b0\u01a1ng t\u1ef1 th\u1ebf n\u00e0y\u301c\n\n\n\n T\u00f4i \u0111\u00e3 th\u00eam m\u1ed7i key ( trong c\u1eb7p key : value ) cho m\u1ed7i 'todo' \u0111\u1ec3 ki\u1ec3m tra. N\u00f3 s\u1ebd th\u00eam c\u00e1c thi\u1ebft l\u1eadp theo c\u00e1c tr\u00ecnh t\u1ef1.\n\n\n\n'rule1' l\u00e0 t\u00ean c\u1ee7a rule, t\u1ed1t nh\u1ea5t l\u00e0 n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c mang gi\u00e1 tr\u1ecb unique trong danh s\u00e1ch c\u00e1c key.\n\n\n\n'rule' T\u00f4i s\u1ebd x\u00e1c \u0111\u1ecbnh h\u00e0m v\u00e0 arguments c\u1ee7a rules \u0111\u1ec3 set. \u1ede \u0111\u00e2y th\u00ec m\u00ecnh x\u00e1c \u0111\u1ecbnh b\u1eb1ng m\u1ed9t CakePHP built-in l\u00e0 between.\n\n\n\n'between', 1, 200 v\u1edbi built-in between c\u1ee7a CakePHP, H\u00e0m n\u00e0y \u0111\u01b0\u1ee3c thi\u1ebft l\u1eadp ch\u1ea1y b\u1eb1ng c\u00e1ch cho c\u00e1c gi\u00e1 tr\u1ecb 1 v\u00e0 200. B\u00e2y gi\u1edd, s\u1ed1 l\u01b0\u1ee3ng k\u00fd t\u1ef1 c\u1ee7a m\u1ed7i TODO s\u1ebd \u0111\u01b0\u1ee3c thi\u1ebft l\u1eadp cho th\u00f4ng b\u00e1o l\u1ed7i n\u1ebfu n\u00f3 n\u1eb1m ngo\u00e0i kho\u1ea3ng t\u1eeb 1 \u0111\u1ebfn 200.\n        - 'message' s\u1ebd tr\u1ecf \u0111\u1ebfn c\u00e2u th\u00f4ng b\u00e1o l\u1ed7i '\u0110\u00e2y l\u00e0 th\u00f4ng b\u00e1o khi l\u1ed7i vi ph\u1ea1m rule n\u00e0y xu\u1ea5t hi\u1ec7n'.\n\n\n\n\n\n\n\nM\u1ea1ch ch\u01b0\u01a1ng tr\u00ecnh nh\u01b0 sau\n\nCh\u1ea1y h\u00e0m save() c\u1ee7a model trong controller\nN\u1ebfu xu\u1ea5t hi\u1ec7n l\u1ed7i (save() s\u1ebd return gi\u00e1 tr\u1ecb false) x\u00e1c nh\u1eadn t\u1edbi model r\u1eb1ng validationErrors\n\nReturn m\u1ed9t th\u00f4ng b\u00e1o l\u1ed7i cho client.\n\n\n(ThamKh\u1ea3o)model->formatOfValidationErrorMessagesThatAreSetToValidationErrors\n{\n    \"todo\": [\n        \"The characters must be in the range 1~200\"\n    ],\n    \"id\": [\n        \"Only owner can update,.\"\n    ]\n}\n\n\n\nCh\u00fa \u00fd: Ch\u1ea1y validation khi x\u00f3a\nV\u00ec m\u1eb7c d\u00f9 validation khi save \u0111\u01b0\u1ee3c ch\u1ea1y t\u1eeb Model, delete th\u00ecnh tho\u1ea3ng kh\u00f4ng ch\u1ea1y,\nC\u1ea7n ch\u00fa \u00fd l\u00e0 \"Ch\u1ec9 Owner \u0111\u01b0\u1ee3c x\u00f3a TODO\" , m\u00ecnh s\u1ebd ch\u1ea1y \u1edf Controller.\nValidation logic s\u1ebd \u0111\u01b0\u1ee3c chuy\u1ec3n sang Model.\n\nCh\u00fa \u00fd: C\u00e1ch return error\nController ki\u1ec3m tra validationErrors models v\u00e0 return th\u00f4ng tin n\u00e0y cho client n\u1ebfu c\u00f3 l\u1ed7i n\u00e0o xu\u1ea5t hi\u1ec7n,\nM\u00ecnh s\u1ebd ph\u1ea3n h\u1ed3i m\u1ed9t HTTP status 400 \u0111\u1ec3 ch\u1ec9 ra r\u1eb1ng \u0111\u00e2y l\u00e0 m\u1ed9t th\u00f4ng b\u00e1o l\u1ed7i cho client..\n400 l\u00e0 m\u1ed9t Bad Request, ph\u1ea3n h\u1ed3i n\u00e0y ch\u1ec9 ra r\u1eb1ng c\u00f3 v\u1ea5n \u0111\u1ec1 x\u1ea3y ra v\u1edbi n\u1ed9i dung c\u1ee7a request t\u1eeb client.\nN\u1ebfu validation error m\u00ecnh s\u1ebd return 400 `.\n\nC\u00e1chSetHTTPstatus400\n$this->response->statusCode(400);\n\n\nHay xem m\u00ecnh s\u1ebd th\u1ef1c hi\u1ec7n implement tr\u00ean nh\u1eefng file n\u00e0o\n\nChi ti\u1ebft c\u00e1c file c\u1ea7n ch\u1ec9nh s\u1eeda\n\n\n\nThao t\u00e1c\nfile\nM\u00f4 t\u1ea3\n\n\n\n\nS\u1eeda\napp/Model/TodoList.php\nTh\u00eam validation rule\n\n\nS\u1eeda\napp/Controller/TodoListsController.php\nK\u1ebft qu\u1ea3 Validation c\u1ee7a x\u00e1c nh\u1eadn v\u00e0 s\u1eeda tin nh\u1eafn\n\n\n\n\nTodoList.php\n\napp/Model/TodoList.php\n <?php\n-\n App::uses('AppModel', 'Model');\n+App::uses('User', 'Model');\n+App::uses('AuthComponent',  'Controller/Component');\n\n class TodoList extends AppModel {\n    public $belongsTo = array (\n        'Owner' => array (\n            'className' => 'User',\n            'foreignKey' => 'owner',\n        ),\n        'Assignee' => array (\n            'className' => 'User',\n            'foreignKey' => 'assignee'\n        )\n    );\n+   public $validate = array (\n+       //TODO check\n+       'todo' => array (\n+           //S\u1ed1 k\u00fd t\u1ef1\n+           'rule1' => array (\n+               'rule' => array(\n+                   'between', 1, 200\n+               ),\n+               'message' => '[Client] The characters must be in the range 1~200'\n+           ),\n+           //tr\u00f9ng v\u1edbi TODO \u0111\u00e3 c\u00f3\n+           'rule2' => array (\n+               'rule' => 'isUnique',\n+               'message' => '[Client] There are the same TODO exists in the TODO list.'\n+           )\n+       ),\n+       //Ki\u1ec3m tra status\n+       'status' => array (\n+           'rule1' => array (\n+               //0 or 1 (Tr\u01b0\u1eddng h\u1ee3p custom)\n+//                 'rule' => array(\n+//                     'custom',\n+//                     '/^[01]$/'\n+//                 ),\n+               //0 or 1 (tr\u01b0\u1eddng h\u1ee3p h\u1ee3p l\u1ec7)\n+               'rule' => array(\n+                   'inList',\n+                   array(0, 1)\n+               ),\n+               'message' => 'The status value must be 0 or 1'\n+           ),\n+       ),\n+       //Ki\u1ec3m tra ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng\n+       'assignee' => array (\n+           //ID \u0111\u00e3 t\u1ed3n t\u1ea1i trong table users\n+           'rule1' => array (\n+               'rule' => array(\n+                   'existsUser'\n+               ),\n+               'message' => '[Client] This user ID is already exists'\n+           ),\n+       ),\n+       //Vi\u1ec7c s\u1eeda/x\u00f3a\n+       'id' => array (\n+           //Ki\u1ec3m tra ng\u01b0\u1eddi v\u00e0o trang detail c\u00f3 ph\u1ea3i Owner hay Assignee\n+           'rule1' => array (\n+               'rule' => array(\n+                   'isOwnerOrAssignee'\n+               ),\n+               'message' => '[Client] Only Owner or Assigner can update this TODO'\n+           ),\n+       )\n+   );\n+\n+   // Owner validation rules\n+       // ID \u0111\u00e3 \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng c\u00f4ng vi\u1ec7c, m\u00ecnh s\u1ebd xem ID c\u00f3 t\u1ed3n t\u1ea1i trong table users hay kh\u00f4ng\n+   public function existsUser($userId){\n+       $userModel = new User();\n+       $count = $userModel->find('count', array('conditions'=>array('id'=>$userId), 'recursive' => -1));\n+       return $count > 0;\n+   }\n+\n+   //Owner validation rules\n+   //T\u1ef1 ki\u1ec3m tra xem c\u00f3 ph\u1ea3i Owner hay ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng hay kh\u00f4ng\n+   public function isOwnerOrAssignee($id){\n+       if(!isset($id)){\n+           //B\u1ecf qua ng\u01b0\u1eddi \u0111ang \u0111\u0103ng k\u00fd\n+           return true;\n+       }\n+       $me = AuthComponent::user();\n+       $todo = $this->findById($id);\n+       if($todo){\n+           if($todo['TodoList']['owner'] === $me['id']\n+               || $todo['TodoList']['assignee'] === $me['id']){\n+               return true;\n+           }\n+       }\n+       return false;\n+   }\n+\n+   // Owner validation rules\n+       // Yourself to check whether the owner\n+   public function isOwner($id){\n+       if(!isset($id)){\n+           //Kh\u00f4ng quan t\u00e2m \u0111\u1ebfn ng\u01b0\u1eddi m\u1edbi \u0111\u0103ng k\u00fd\n+           return true;\n+       }\n+       $me = AuthComponent::user();\n+       $todo = $this->findById($id);\n+       if($todo){\n+           if($todo['TodoList']['owner'] === $me['id']){\n+               return true;\n+           }\n+       }\n+       return false;\n+   }\n }\n\n\n\nCh\u00fang ta \u00e1p d\u1ee5ng validation rules c\u1ee7a nh\u1eefng built-in sau c\u1ee7a CakePHP.\n\n\n\n\n\u00c1p d\u1ee5ng cho\nRules\nN\u1ed9i dung ki\u1ec3m tra\n\n\n\n\ntodo\nbetween\n\u0110\u1ed9 d\u00e0i m\u1ed7i TODO c\u00f3 n\u1eb1m trong kho\u1ea3ng x\u00e1c \u0111\u1ecbnh hay kh\u00f4ng\n\n\ntodo\nisUnique\nGi\u00e1 tr\u1ecb nh\u1eadp v\u00e0o c\u00f3 unique trong database hay kh\u00f4ng\n\n\nstatus\ninList\nGi\u00e1 tr\u1ecb g\u1eedi l\u00ean c\u00f3 n\u1eb1m trong danh s\u00e1ch gi\u00e1 tr\u1ecb cho s\u1eb5n kh\u00f4ng\n\n\nstatus\ncustom\nB\u1ea1n c\u00f3 th\u1ec3 t\u1ea1o ra c\u00e1c t\u00f9y ch\u1ec9nh gi\u00e1 tr\u1ecb theo \u00fd m\u00ecnh\n\n\n\n Ngo\u00e0i nh\u1eefng c\u00e1i \u0111\u00e3 li\u1ec7t k\u00ea \u1edf tr\u00ean, CakePHP c\u00f2n c\u00f3 r\u1ea5t nhi\u1ec1u built-in validation rules kh\u00e1c.\nC\u00e1c b\u1ea1n c\u00f3 th\u1ec3 xem t\u1ea1i \u0111\u00e2y\u2192Data validation - CakePHP Cookbook 2.x document\n\nTh\u00eam v\u00e0o \u0111\u00f3, ch\u00fang ta s\u1ebd implement m\u1ed9i s\u1ed1 h\u00e0m validation nh\u01b0 sau.\n\n\n\n\n\u00c1p d\u1ee5ng v\u1edbi\nH\u00e0m custom validation\nN\u1ed9i dung ki\u1ec3m tra\n\n\n\n\nassignee\nexistsUser\n\u0110\u1ed9 d\u00e0i c\u1ee7a input trong kho\u1ea3ng x\u00e1c \u0111\u1ecbnh\n\n\nid\nisOwnerOrAssignee\nKi\u1ec3m tra d\u1eef li\u1ec7u tr\u01b0\u1edbc khi ch\u1ec9nh s\u1eeda xem user \u0111\u00f3 \u0111\u00e3 login hay ch\u01b0a v\u00e0 c\u00f3 ph\u1ea3i owner hay ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng hay kh\u00f4ng\n\n\n\n Delete when | isOwner | Ki\u1ec3m tra d\u1eef li\u1ec7u tr\u01b0\u1edbc khi ch\u1ec9nh s\u1eeda xem c\u00f3 ph\u1ea3i l\u00e0 owner hay kh\u00f4ng\n V\u00ec h\u00e0m isOwner s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c thi t\u1ea1i th\u1eddi \u0111i\u1ec3m th\u1ef1c hi\u1ec7n h\u00e0nh \u0111\u1ed9ng x\u00f3a, validation rules \u1edf model v\u00e0 ch\u1ea1y \u1edf controller kh\u00f4ng \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3.\n\nTodoListsController.php\nKi\u1ec3m tra k\u1ebft qu\u1ea3 validation v\u00e0 s\u1eeda th\u00f4ng b\u00e1o \u0111\u1ec3 return t\u1edbi client.\n B\u1ea1n ch\u1ec9 c\u00f3 m\u1ed9t thao t\u00e1c nh\u1ecf \u1edf \u0111\u00e2y v\u00e0 kh\u00f4ng c\u1ea7n l\u00e0m g\u00ec v\u1edbi giao di\u1ec7n n\u00e0y c\u1ea3.\n\u3000\u3000\u203bHi\u1ec7n t\u1ea1i, m\u00ecnh \u0111\u00e3 th\u00eam view() v\u00ec m\u00ecnh ch\u01b0a x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c field \u1edf h\u00e0m.\n\nTodoListsController.php\nclass TodoListsController extends AppController {\n+   private $fields = array (\n+       'TodoList.id',\n+       'TodoList.todo',\n+       'TodoList.status',\n+       'Owner.id',\n+       'Owner.name',\n+       'Assignee.id',\n+       'Assignee.name'\n+   );\n\n    public function index() {\n        $query = array (\n-           'fields' => array (\n-               'TodoList.id',\n-               'TodoList.todo',\n-               'TodoList.status',\n-               'Owner.id',\n-               'Owner.name',\n-               'Assignee.id',\n-               'Assignee.name'\n-           ),\n+           'fields' => $this->fields,\n            'order' => \"TodoList.id\"\n        );\n        $res = $this->TodoList->find('all', $query);\n        // X\u1eed l\u00fd s\u1ef1 ki\u1ec7n\n        if (count($res) > 0) {\n            $loginUserId = $this->Auth->user()['id'];\n            foreach ( $res as $key => $row ) {\n                // tr\u01b0\u1eddng h\u1ee3p \"Login user l\u00e0 owner\" \n                $res[$key]['TodoList']['owned'] = $row['Owner']['id'] === $loginUserId;\n                // tr\u01b0\u1eddng h\u1ee3p \"Login user l\u00e0 Assignee\" \n                $res[$key]['TodoList']['assigned'] = $row['Assignee']['id'] === $loginUserId;\n            }\n        }\n        $this->set(compact('res'));\n        $this->set('_serialize', 'res');\n    }\n\n    public function view($id = null) {\n-       $res = $this->TodoList->findById($id);\n+       $res = $this->TodoList->findById($id, $this->fields);\n        $this->set(compact('res'));\n        $this->set('_serialize', 'res');\n    }\n\n    public function add() {\n        $data = $this->request->data;\n        $data['owner'] = $this->Auth->user()['id'];\n        $res = $this->TodoList->save($data);\n-       $this->set(compact('res'));\n-       $this->set('_serialize', 'res');\n+       $response = $this->editResponse($res);\n+       $this->set(compact('response'));\n+       $this->set('_serialize', 'response');\n    }\n    public function delete($id) {\n-       $res = $this->TodoList->delete($id, false);\n-       $this->set(compact('res'));\n-       $this->set('_serialize', 'res');\n+       //\u30aa\u30fc\u30ca\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\n+       if(!$this->TodoList->isOwner($id)){\n+           $this->setStatusValidationError();\n+           $response = $this->editErrors('Only the owner can detete this TODO.');\n+       }else{\n+           $res = $this->TodoList->delete($id, false);\n+           $response = $this->editResponse($res);\n+       }\n+       $this->set(compact('response'));\n+       $this->set('_serialize', 'response');\n    }\n\n    public function edit($id) {\n        $this->TodoList->id = $id;\n        $data = $this->request->data;\n        $res = $this->TodoList->save($this->request->data);\n        $res = !empty($res);\n-       $this->set(compact('res'));\n-       $this->set('_serialize', 'res');\n+       $response = $this->editResponse($res);\n+       $this->set(compact('response'));\n+       $this->set('_serialize', 'response');\n+   }\n+\n+   //S\u1eeda c\u00e1c ph\u1ea3n h\u1ed3i\n+   private function editResponse($res){\n+       if($res){\n+           $response = $res;\n+       }else{\n+           $this->setStatusValidationError();\n+           $respnse = array();\n+           if(count($this->TodoList->validationErrors) > 0){\n+               $response = $this->editErrors($this->TodoList->validationErrors);\n+           }else{\n+               $response = $this->editErrors('An error occured.');\n+           }\n+       }\n+       return $response;\n+   }\n+\n+   // Khi g\u1eb7p validation errors set response gi\u00e1 tr\u1ecb 400\n+   private function setStatusValidationError(){\n+       $this->response->statusCode(400);\n+   }\n+\n+   // S\u1eeda c\u00e1c th\u00f4ng b\u00e1o l\u1ed7i\n+   private function editErrors($errors){\n+       if(is_array($errors)){\n+           $res['errors'] = $errors;\n+       }else{\n+           $res['errors']  = array('error' => array($errors));\n+       }\n+       return $res;\n    }\n\n }\n\n\n\nH\u00e0m Add v\u00e0 h\u00e0m edit\n\n\nSau khi th\u1ef1c thi save trong model, ch\u00fang we ch\u1ea1y h\u00e0m editResponse.\n\nH\u00e0m editResponse\n\n\nN\u1ebfu gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1 t\u1eeb h\u00e0m save kh\u00f4ng ph\u1ea3i true, ki\u1ec3m tra gi\u00e1 tr\u1ecb validationErrors c\u1ee7a model, x\u00e1c nh\u1eadn xem c\u00f3 validation error n\u00e0o kh\u00f4ng.\nN\u1ebfu c\u00f3 validation error, Set HTTP status 400, b\u1ea1n ph\u1ea3i s\u1eeda JSON cho vi\u1ec7c return l\u1ed7i nh\u01b0 format sau \u0111\u00e2y.\n\nErrorReturnJSONformat\n{\n    \"errors\": {\n        \"item key\": [\n            \"error messsage\"\n        ],\n        \"item key\": [\n            \"error messsage\"\n        ],\n        \u301c t\u01b0\u01a1ng t\u1ef1 \u301c\n    }\n}\n\n\n\nSampleOfErrorReturnJSON\n{\n    \"errors\": {\n        \"todo\": [\n            \"length of TODO must be 1~200 characters\"\n        ],\n        \"status\": [\n            \"Status must be 0 or 1\"\n        ],\n        \"id\": [\n            \"Only Owner or Assignee can update this TODO\"\n        ]\n    }\n}\n\n\n\nTi\u1ebfn h\u00e0nh implement\nT\u00f3m t\u1eaft b\u00e0i h\u1ecdc v\u00e0 c\u00e1c ki\u1ec3m tra\n\n\n app/Model/TodoList.php s\u1eeda nh\u01b0 tr\u00ean.\n\n app/Controller/TodoListsController.php s\u1eeda nh\u01b0 tr\u00ean.\n\n Ki\u1ec3m tra k\u1ebft qu\u1ea3.\n\n\nL\u00e0m theo h\u01b0\u1edbng d\u1eabn c\u1ee7a b\u00e0i 0\n\n\n S\u1ed1 k\u00fd t\u1ef1 c\u1ee7a TODO v\u01b0\u1ee3t gi\u1edbi h\u1ea1n\n\n\nreturn The lengths of TODO must in the range of 1~200 characters\n\n\n\n\n TODO r\u1ed7ng\n\n\n return The lengths of TODO must in the range of 1~200 characters\n\n\n\n\n Status l\u00e0 9\n\n\nreturn Status must be 0 or 1\n\n\n\n\n Assignee User ID kh\u00f4ng t\u1ed3n t\u1ea1i\n\n\nreturn Assignee User ID not exist\n\n\n\n\n Kh\u00f4ng ph\u1ea3i Owner, Assignee th\u1ef1c hi\u1ec7n ch\u1ee9c n\u0103ng ch\u1ec9nh s\u1eeda\n\n\nreturn Only Owner can update this TODO\n\n\n\n\n Kh\u00f4ng ph\u1ea3i Owner th\u1ef1c hi\u1ec7n ch\u1ee9c n\u0103ng x\u00f3a\n\n\nOnly Owner can delete this TODO\n\n\n\n\n\n\n\n Commit l\u00ean Git\n\n T\u00e0i li\u1ec7u tham kh\u1ea3o d\u1ea1ng hi\u1ec3n th\u1ecb diff tr\u00ean Github\n7th b\u00e0i 1 server side \u00b7 suzukishouten-study/rest-study@b61fdf7\n\n B\u00e0i 2: Th\u1ef1c hi\u1ec7n \u1edf client-side\n\u1ede b\u00e0i 2 n\u00e0y, ch\u00fang ta s\u1ebd th\u1ef1c hi\u1ec7n vi\u1ec7c implement \u1edf client-side\n\nCh\u00fa \u00fd: M\u00f4 t\u1ea3 c\u00e1c h\u00e0m validation\nCh\u00fang ta s\u1ebd th\u00eam m\u1ed9t h\u00e0m check cho validate method c\u1ee7a Backbone.Model\nTrong n\u1ec1n t\u1ea3ng c\u1ee7a Backbone kh\u00f4ng c\u00f3 c\u00e1c built-in \u0111\u1ec3 validation nh\u01b0 trong CakePHP, T\u00f4i s\u1ebd ti\u1ebfp t\u1ee5c implement logic.\nB\u1edfi v\u00ec validate method \u0111\u01b0\u1ee3c th\u1ef1c thi t\u1ef1 \u0111\u1ed9ng khi b\u1ea1n ch\u1ea1y set method c\u1ee7a model, b\u1ea1n kh\u00f4ng c\u1ea7n ph\u1ea3i g\u1ecdi validate n\u1eefa.\nT\u1ea1i validate method, t\u1ed5ng h\u1ee3p t\u1ea5t c\u1ea3 c\u00e1c th\u00f4ng b\u00e1o l\u1ed7i v\u00e0o m\u1ed9t m\u1ea3ng, sau \u0111\u00f3 return ch\u00fang.\nM\u1ed7i l\u1ea7n c\u00e1i g\u00ec \u0111\u1ea5y \u0111\u01b0\u1ee3c return t\u1eeb validate method (not-null), v\u00ec s\u1ef1 ki\u1ec7n invalid c\u1ee7a model \u0111a ch\u1ea1y xong , t\u1ea1o th\u00f4ng b\u00e1o l\u1ed7i v\u00e0 hi\u1ec3n th\u1ecb ch\u00fang l\u00ean view.\n\nV\u00ed d\u1ee5: implementation c\u1ee7a Model\n\nValidationLogicInValidateMethod\n    validate : function(attrs) {\n        var errors = [];\n\n        //Ki\u1ec3m tra \u0111\u1ed9 d\u00e0i\n        var todoLength = attrs.todo.length;\n        if (todoLength < 1 || todoLength > 200) {\n            errors.push('[Client]TODO length must be 1~200 characters.');\n        }\n\n        \u301cM\u00ecnh s\u1ebd ti\u1ebfp t\u1ee5c th\u00eam c\u00e1c validation logic v\u1edbi formart t\u01b0\u01a1ng t\u1ef1\u301c\n\n        //return error khi s\u1ef1 ki\u1ec7n invalid c\u1ee7a model x\u1ea3y ra\n        if (errors.length > 0){\n            return errors;\n        }else{\n            return null;\n        }\n    }\n\n\n\n\nvar errors[]; M\u1ea3ng s\u1ebd ch\u1ee9a c\u00e1c th\u00f4ng b\u00e1o l\u1ed7i\n\n\n\n//the logic of check length \u0110\u00e2y l\u00e0 ph\u1ea7n code logic ki\u1ec3m tra \u0111\u1ed9 d\u00e0i.\n\n\n\nErrors.push('[Client] TODO must be in the length of 1~200 characters.'); Hi\u1ec3n th\u1ecb th\u00f4ng b\u00e1o l\u1ed7i.\n\nReturn errors length c\u1ee7a erros ph\u1ea3i l\u1edbn h\u01a1n gi\u00e1 tr\u1ecb m\u00ecnh \u0111\u00e3 set t\u1eeb \u0111\u1ea7u \u0111\u00f3 l\u00e0 0, sau \u0111\u00f3 tr\u1ea3 v\u1ec1 t\u1ea5t c\u1ea3 v\u1edbi \u0111i\u1ec1u ki\u1ec7n n\u1ebfu c\u00f3 errors. N\u1ebfu This c\u1ee7a model l\u00e0 invalid th\u00ec event x\u1ea3y ra.\n\n\n\n\n\n\nCh\u00fa \u00fd: Th\u00f4ng b\u00e1o l\u1ed7i s\u1ebd \u0111\u01b0\u1ee3c hi\u1ec3n t\u1ea1i t\u1ea1i th\u1eddi \u0111i\u1ec3m validation error tr\u00ean server\nKhi c\u00f3 validation error tr\u00ean server side, returned HTTP status 400.\nTr\u00ean ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a ch\u00fang ta hi\u1ec7n t\u1ea1i, status kh\u00f4ng ph\u1ea3i 200 khi giao ti\u1ebfp v\u1edbi server qua app.js \u0111\u1ec1u \u0111\u00e3 \u0111\u01b0\u1ee3c x\u1eed l\u00fd ( handle ), s\u1eeda c\u00e1c ti\u1ebfn tr\u00ecnh m\u00e0 x\u1ea3y ra status 400.\nNh\u1eefng th\u00f4ng tin chi ti\u1ebft h\u01a1n, t\u00f4i s\u1ebd gi\u1ea3i th\u00edch \u1edf  app.js.\nB\u00e2y gi\u1edd ch\u00fang ta s\u1ebd s\u1eeda ch\u1ee7 y\u1ebfu \u1edf View\n\nC\u00e1c file c\u1ea7n thay \u0111\u1ed5i\n\n\n\nThao t\u00e1c\nfile\nM\u00f4 t\u1ea3\n\n\n\n\nS\u1eeda\napp/webroot/js/models/todo-model.js\nImplementation c\u1ee7a client-side validation logic\n\n\nS\u1eeda\napp/webroot/js/views/todo-composite-view.js\nK\u1ebft qu\u1ea3 validation c\u1ee7a Vi\u1ec7c x\u00e1c nh\u1eadn v\u00e0 ch\u1ec9nh s\u1eeda TODO tr\u00ean client-side\n\n\nS\u1eeda\napp/webroot/js/views/todo-detail-item-view.js\nK\u1ebft qu\u1ea3 validation c\u1ee7a Vi\u1ec7c x\u00e1c nh\u1eadn v\u00e0 ch\u1ec9nh s\u1eeda TODO tr\u00ean client-side\n\n\nS\u1eeda\napp/webroot/js/app.js\nB\u1eaft l\u1ed7i v\u00e0 s\u1eeda c\u00e1c validation error c\u1ee7a server-side\n\n\n\n\ntodo-model.js\nImplement validation logic\n\ntodo-model.js\n //Model representing County Todo data 1\n define(function() {\n    var TodoModel = Backbone.Model.extend({\n        urlRoot : '/rest-study/todo_lists',\n        parse : function(response) {\n            //Model parse\n            console.log(\"\u30e2\u30c7\u30eb\u3092\u30d1\u30fc\u30b9\");\n            console.log(response);\n            var parsed = response.TodoList;\n            if (response.Owner) {\n                parsed.Owner = response.Owner;\n                parsed.Assignee = response.Assignee;\n            }\n            return parsed;\n        },\n        toggle : function() {\n            this.set('status', this.get(\"status\") === '1' ? '0' : '1');\n            this.save();\n+       },\n+       validate : function(attrs) {\n+           var errors = [];\n+           \n+           //Ki\u1ec3m tra \u0111\u1ed9 d\u00e0i\n+           var todoLength = attrs.todo.length;\n+           if (todoLength < 1 || todoLength > 200) {\n+               errors.push('[Client]The TODO length must be 1\u301c200 characters');\n+           }\n+\n+           //Th\u1eed nghi\u1ec7m ch\u1ec9 cho ph\u00e9p nh\u1eadp gi\u00e1 tr\u1ecb hoge, b\u1ecf comment \u0111\u1ec3 th\u1eed ch\u1ea1y\n+           //if(attrs.todo !== 'hoge'){\n+           //  errors.push('[Client]TODO on ly \"hoge\" !');\n+           //}\n+\n+           if (errors.length > 0){\n+               return errors;\n+           }else{\n+               return null;\n+           }\n        }\n    });\n    return TodoModel;\n\n\n\n\nvalidate method\n\nT\u00f4i ngh\u0129 kh\u00f4ng c\u1ea7n ph\u1ea3i mi\u00eau t\u1ea3 \u0111\u1eb7c bi\u1ec7t \u0111\u1ed1i v\u1edbi logic.\nB\u1edfi v\u00ec gi\u00e1 tr\u1ecb input \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o bi\u1ebfn attrs, c\u1ea7n ph\u1ea3i implement logic \u0111\u1ec3 check n\u00f3.\nN\u1ebfu c\u00f3 l\u1ed7i x\u1ea3y ra s\u1ebd return v\u00e0o bi\u1ebfn errors variable, n\u1ebfu kh\u00f4ng s\u1ebd truy\u1ec1n gi\u00e1 tr\u1ecbnull.\n\u203b N\u00f3 s\u1ebd ch\u1ea1y \u0111\u00fang m\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i t\u1ef1 return ch\u00ednh n\u00f3\n\ntodo-composite-view.js\nKhi th\u00eam TODO, t\u1ea1i th\u1eddi \u0111i\u1ec3m x\u1ea3y ra validation error tr\u00ean model, v\u00e0 b\u1eaft \u0111\u1ea7u x\u1eed l\u00fd s\u1ef1 ki\u1ec7n invalid.\n\ntodo-composite-view.js\n //View cho TODO list\n define(function(require) {\n    var TodoItemView = require('views/todo-item-view');\n+   var TodoModel = require('models/todo-model');\n\n    var TodoCompositeView = Marionette.CompositeView.extend({\n        template: '#todo-composite-template',\n\n        childView : TodoItemView,\n\n        childViewContainer : 'tbody',\n\n+       newTodoModel : new TodoModel(),\n+       \n        ui : {\n            addTodo : '#addTodo',\n            newTodo : '#new-todo',\n            userList : '#user-list'\n        },\n\n        events : {\n            'click @ui.addTodo' : 'onCreateTodo',\n        },\n\n        initialize: function(options){\n            _.bindAll( this, 'onCreatedSuccess' );\n            this.userList = options.userList;\n+           this.listenTo(this.newTodoModel, 'invalid', this.renderErrorMessage);\n        },\n\n        onRender : function() {\n            //Show user list\n            this.showUserList(this.ui.userList, this.userList);\n            //M\u1eb7c \u0111\u1ecbnh hi\u1ec3n th\u1ecb cho nh\u1eefng ng\u01b0\u1eddi \u0111\u00e3 logged-in\n            this.ui.userList.val(window.application.loginUser.id);\n        },\n\n        //Show user list\n        showUserList : function($list, userList){\n            $.each(userList, function(index, userModel) {\n                $list.append(\n                    \"<option value='\" \n                    + userModel.attributes.id + \"'>\"\n                    + userModel.attributes.name + \"</option>\");\n            });\n        },\n\n        onCreateTodo : function() {\n-           this.collection.create(this.newAttributes(), {\n+           this.newTodoModel.clear({silent : true});\n+           this.newTodoModel.set(this.newAttributes());\n+           this.collection.create(this.newTodoModel, {\n                  silent:  true ,\n                  success: this.onCreatedSuccess\n            });\n            this.ui.newTodo.val('');\n        },\n\n        newAttributes : function() {\n            return {\n                todo : this.ui.newTodo.val().trim(),\n                status : 0,\n                assignee : this.ui.userList.val()\n            };\n        },\n\n        onCreatedSuccess : function(){\n            this.collection.fetch({ reset : true });\n        },\n-\n+       \n+       //Error display\n+       renderErrorMessage : function(errors){\n+           var message = '';\n+           for(var key in errors.validationError){\n+               message += errors.validationError[key];\n+           }\n+           alert(message);\n+       }\n    });\n    return TodoCompositeView;\n }); \n\n\n\n\nnewTodoModel : new TodoModel(),\n\nTh\u00eam m\u1ed9t model \u0111\u1ec3 x\u1eed l\u00fd cho vi\u1ec7c validation.\n\n\nSau \u0111\u00f3 th\u00eam class require \u0111\u1ec3 require c\u00e1c th\u00e0nh ph\u1ea7n c\u1ea7n thi\u1ebft cho model.\n\n\n\n\nH\u00e0m initialize\n\nS\u1eed d\u1ee5ng h\u00e0m listenTo s\u1ebd th\u00eam h\u00e0m x\u1eed l\u00fd s\u1ef1 ki\u1ec7n cho s\u1ef1 ki\u1ec7n invalid event c\u1ee7a model nh\u01b0 m\u00f4 t\u1ea3 tr\u00ean kia (this.renderErrorMessage).\n\n\nH\u00e0m onCreateTodo\n\nB\u1ea1n ch\u1ec9 c\u1ea7n s\u1eed d\u1ee5ng duy nh\u1ea5t this.collection.create, tuy nhi\u00ean \u0111\u1ec3 ch\u1ea1y valiate c\u1ee7a model, ch\u00fang ta c\u1ea7n set gi\u00e1 tr\u1ecb c\u1ee7a model \u1edf h\u00e0m set. Th\u00eam v\u00e0o \u0111\u00f3, m\u00ecnh s\u1ebd x\u00f3a n\u1ed9i dung c\u1ee7a model \u1edf h\u00e0m clear tr\u01b0\u1edbc \u0111\u00f3.\n\n\nH\u00e0m renderErrorMessage\n\n\u0110\u00e2y l\u00e0 h\u00e0m x\u1eed l\u00fd s\u1ef1 ki\u1ec7n invalid c\u1ee7a model. S\u1eeda n\u1ed9i dung th\u00f4ng b\u00e1o l\u1ed7i s\u1ebd hi\u1ec3n th\u1ecb \u1edf alert.\n\n\n\n\ntodo-detail-item-view.js\nTrong khi s\u1eeda TODO, khi validation error x\u1ea3y ra \u1edf model m\u00ecnh s\u1ebd ch\u1ea1y h\u00e0m x\u1eed l\u00fd s\u1ef1 ki\u1ec7n invalid.\n todo-composite-view.js m\u00ecnh g\u1ea7n nh\u01b0 implement t\u01b0\u01a1ng t\u1ef1.\n\ntodo-detail-item-view.js\n //View trang detail\n define(function() {\n    var TodoDetailItemView = Marionette.ItemView.extend({\n\n \u301c \u4e2d\u7565 \u301c\n\n        //Kh\u1edfi t\u1ea1o\n        initialize: function(options){\n            _.bindAll( this, 'onSaveSuccess' );\n            this.userList = options.userList;\n+           this.listenTo(this.model, 'invalid', this.renderErrorMessage);\n        },\n\n        onRender : function() {\n            //Show user list\n            this.showUserList(this.ui.userList, this.userList);\n            //stata d\u00e0nh cho ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng\n            this.ui.userList.val(this.model.attributes.assignee);\n        },\n\n        //Show user list\n        showUserList : function($list, userList){\n            $.each(userList, function(index, userModel) {\n            $list.append(\n                \"<option value='\" \n                + userModel.attributes.id + \"'>\"\n                + userModel.attributes.name + \"</option>\");\n            });\n        },\n\n        //X\u1eed l\u00fd s\u1ef1 ki\u1ec7n click n\u00fat ch\u1ec9nh s\u1eeda (Update) \n        onUpdateClick : function() {\n            //L\u1ea5y c\u00e1c k\u00fd t\u1ef1 t\u1eeb checkbox\n            var todoString = this.ui.todoStatus.val();  // Todo\n            var assigneeId = this.ui.userList.val();    // Assignee\n-           this.model.save({\n+           this.model.set({\n                todo : todoString,\n                assignee : assigneeId\n-           }, {\n+           });\n+           this.model.save(null,{\n                silent : true,\n                success : this.onSaveSuccess,\n            });\n        },\n\n        //X\u1eed l\u00fd s\u1ef1 ki\u1ec7n click n\u00fat Cancel \n        onCancelClick : function() {\n            this.backTodoLists();\n        },\n\n        //Update success\n        onSaveSuccess : function() {\n            this.backTodoLists();\n        },\n\n        //Chuy\u1ec3n sang m\u00e0n h\u00ecnh TODO list\n        backTodoLists : function() {\n            Backbone.history.navigate('#todo-lists', true);\n+\n+       },\n+       \n+       //Hi\u1ec3n th\u1ecb l\u1ed7i\n+       renderErrorMessage : function(errors){\n+           var message = '';\n+           for(var key in errors.validationError){\n+               message += errors.validationError[key];\n+           }\n+           alert(message);\n        }\n\n    });\n    return TodoDetailItemView;\n });\n\n\nB\u1edfi v\u00ec View n\u00e0y b\u1ea1n \u0111\u00e3 th\u1eeba k\u1ebf t\u1eeb Marionette.ItemView, V\u00ec v\u1eady b\u1ea1n c\u00f3 th\u1ec3 truy c\u1eadp v\u00e0o model qua this.model, m\u00ecnh implement g\u1ea7n nh\u01b0 gi\u1ed1ng h\u1ec7t ngo\u1ea1i tr\u1eeb todo-composite-view.js v\u00ec \u0111\u00e2y l\u00e0 n\u01a1i kh\u00f4ng sinh ra model.\n\napp.js\nB\u00e2y gi\u1edd m\u00ecnh s\u1ebd x\u1eed l\u00fd s\u1ef1 ki\u1ec7n HTTP status 400.\n\napp.js\n //Application\n console.log('load app');\n define(function(require){\n\n \u301c \u4e2d\u7565 \u301c\n\n\n        // t\u1ea5t c\u1ea3 c\u00e1c x\u1eed l\u00fd s\u1ef1 ki\u1ec7n b\u1eb1ng ajax \u1edf \u0111\u00e2y\n        ajaxErrorHandler : function(e, xhr, options , message){\n            if( xhr.status === 401 ){\n                this.clearLoginUser();\n                // N\u1ebfu unauthenticated b\u1ecf qua v\u00e0 chuy\u1ec3n v\u1ec1 m\u00e0n h\u00ecnh login\n                Backbone.history.navigate('#login', {trigger : true, replace : true});\n-           }else if(xhr.status >= 400 && xhr.status < 500){\n+           }else if(xhr.status === 400){\n+               if(xhr.responseJSON){\n+                   var errors = xhr.responseJSON.errors;\n+                   var msg = '';\n+                   for(var key in errors){\n+                       for(var idx in errors[key]){\n+                           msg = msg + errors[key][idx] + '\\n';\n+                       }\n+                   }\n+                   alert(msg);\n+               }else{\n+                   alert(message);\n+               }\n+           }else if(xhr.status > 400 && xhr.status < 500){\n                //Hi\u1ec3n th\u1ecb th\u00f4ng b\u00e1o t\u1eeb ClientError\n                alert(message);\n            }else if(xhr.status >= 500 && xhr.status < 600){\n                //Hi\u1ec3n th\u1ecb th\u00f4ng b\u00e1o t\u1eeb ServerError\n                alert(message);\n            }\n        },\n\n    });\n    return Application;\n });\n\n\nTr\u01b0\u1edbc \u0111\u00e2y m\u00ecnh c\u1ea7n x\u1eed l\u00fd ri\u00eang bi\u1ec7t HTTP status 400 v\u00e0 500, ch\u00fang ta \u0111\u00e3 th\u00eam m\u1ec7nh \u0111\u1ec1 if \u0111\u1ec3 x\u1eed l\u00fd ri\u00eang bi\u1ec7t ri\u00eang s\u1ed1 400.\nV\u00ec s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c JSON error response sau khi \u0111\u01b0\u1ee3c server x\u1eed l\u00fd t\u1ea1i xhr.responseJSON, s\u1eeda n\u00f3 v\u00e0 hi\u1ec3n th\u1ecb n\u00f3 v\u00e0o alert.\n\nTh\u1ef1c h\u00e0nh\nH\u00e3y ki\u1ec3m tra c\u00e1c b\u1ea1n \u0111\u00e3 th\u1ef1c hi\u1ec7n \u0111\u1ea7y \u0111\u1ee7 c\u00e1c b\u01b0\u01a1c sau ch\u01b0a\n\n\n S\u1eeda theo m\u00f4 t\u1ea3 tr\u00ean app/webroot/js/models/todo-model.js.\n\n S\u1eeda theo m\u00f4 t\u1ea3 tr\u00ean app/webroot/js/views/todo-composite-view.js.\n\n S\u1eeda theo m\u00f4 t\u1ea3 tr\u00ean app/webroot/js/views/todo-detail-item-view.js.\n\n S\u1eeda theo m\u00f4 t\u1ea3 tr\u00ean app/webroot/js/app.js.\n\n Ki\u1ec3m tra k\u1ebft qu\u1ea3\n\n\nH\u00e3y ki\u1ec3m tra b\u1eb1ng c\u00e1c thao t\u00e1c tr\u00ean tr\u00ecnh duy\u1ec7t\n\n\n\n Commit l\u00ean Git\n\n Tham kh\u1ea3o thay \u0111\u1ed5i d\u1ea1ng Diff tr\u00ean Github\nCh\u01b0\u01a1ng 7 : B\u00e0i 2 Client-side \u00b7 suzukishouten-study/rest-study@c0ae3e1\n\u0110\u00f3 l\u00e0 t\u1ea5t c\u1ea3 c\u1ee7a b\u00e0i h\u1ecdc n\u00e0y\n\nGi\u1edbi thi\u1ec7u\n\u1ede b\u00e0i h\u1ecdc sau ch\u00fang ta s\u1ebd b\u1eaft \u0111\u1ea7u s\u1eed d\u1ee5ng Bootstrap \u0111\u1ec3 l\u00e0m giao di\u1ec7n \u0111\u1eb9p h\u01a1n v\u00e0 c\u00e1c hi\u1ec7u \u1ee9ng hay ho, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 l\u00ean trang ch\u1ee7 bootstrap \u0111\u1ec3 l\u00e0m quen tr\u01b0\u1edbc.\n\nR\u1ea5t mong nh\u1eadn \u0111\u01b0\u1ee3c ph\u1ea3n h\u1ed3i/ g\u00f3p \u00fd c\u1ee7a c\u00e1c b\u1ea1n\nC\u1ea3m \u01a1n c\u00e1c b\u1ea1n \u0111\u00e3 \u0111i c\u00f9ng v\u1edbi series n\u00e0y, m\u00ecnh s\u1ebd c\u1ed1 g\u1eafng truy\u1ec1n \u0111\u1ea1t t\u1ed1t nh\u1ea5t \u00fd \u0111\u1ed3 c\u1ee7a t\u00e1c gi\u1ea3 t\u1edbi c\u00e1c b\u1ea1n, tuy nhi\u00ean ch\u1eafc ch\u1eafn v\u1eabn c\u00f2n r\u1ea5t nhi\u1ec1u sai s\u00f3t v\u00e0 m\u00ecnh s\u1ebd update th\u01b0\u1eddng xuy\u00ean v\u00e0 ch\u1ec9nh s\u1eeda c\u00e1c b\u00e0i vi\u1ebft c\u0169, r\u1ea5t mong nh\u1eadn d\u01b0\u1ee3c nh\u1eefng ph\u1ea3n h\u1ed3i qu\u00fd b\u00e1u c\u1ee7a c\u00e1c b\u1ea1n \u0111\u1ec3 nh\u1eefng b\u00e0i vi\u1ebft c\u1ee7a m\u00ecnh c\u00f3 ch\u1ea5t l\u01b0\u1ee3ng h\u01a1n.\n\n## :large_blue_circle: Ch\u00e0o m\u1eebng c\u00e1c b\u1ea1n tr\u1edf l\u1ea1i\nB\u00e0i vi\u1ebft n\u00e0y \u0111\u01b0\u1ee3c m\u00ecnh d\u1ecbch t\u1eeb b\u00e0i [\u30b5\u30fc\u30d0\u30fc\u30fb\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4e21\u9762\u304b\u3089\u304b\u3051\u308b\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3 - AWS\u4e0a\u3067\u69cb\u7bc9\u3059\u308bRESTful\u30a2\u30d7\u30ea\u52c9\u5f37\u4f1a\uff5eWeb\u958b\u767a\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d7\uff5e\u3010\u7b2c7\u56de\u3011\u30de\u30cb\u30e5\u30a2\u30eb](http://qiita.com/k_shimoji/items/e52ba887e58c8f517c9a) c\u1ee7a t\u00e1c gi\u1ea3 @k_shimoji .\n\n## :large_blue_circle: T\u1ea1i sao l\u1ea1i c\u1ea7n ph\u1ea3i ki\u1ec3m duy\u1ec7t (Validate)?\n\nT\u1ea1i th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i, khi ch\u00fang ta \u0111\u00e3 validate th\u00ec coi nh\u01b0 \u0111\u00e3 validate lu\u00f4n cho c\u00e1c thao t\u00e1c tr\u00ean client side r\u1ed3i, v\u1eady t\u1ea1i sao l\u1ea1i ph\u1ea3i l\u00e0m c\u1ea3 2.\nL\u00fd do l\u00e0 ch\u00fang ta th\u1ea5y c\u00f3 s\u1ef1 kh\u00e1c bi\u1ec7t \u1edf ph\u00eda client, nh\u1eefng thao t\u00e1c tr\u00ean client ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 gi\u00fap c\u1ea3i thi\u1ec7n UX, ng\u01b0\u1eddi d\u00f9ng nh\u1eadn ngay k\u1ebft qu\u1ea3 ki\u1ec3m duy\u1ec7t, sau khi d\u1eef li\u1ec7u h\u1ee3p l\u1ec7 m\u1edbi truy\u1ec1n \u0111\u1ebfn server ch\u1edd x\u1eed l\u00fd, thay v\u00ec g\u1eedi h\u1ebft l\u00ean server. \n\n### L\u00fd do c\u1ea7n th\u1ef1c hi\u1ec7n validation tr\u00ean c\u1ea3 client l\u1eabn server.\n\nC\u00f3 m\u1ed9t s\u1ef1 th\u1eadt l\u00e0 n\u1ebfu ch\u1ec9 validate \u1edf client l\u00e0 ch\u01b0a \u0111\u1ee7, b\u1edfi v\u00ec \"B\u1ea1n ch\u1ecdn t\u1eeb danh s\u00e1ch t\u1eeb ph\u00eda client, nh\u01b0ng ch\u01b0a ki\u1ec3m tra n\u00f3 c\u00f3 h\u1ee3p l\u1ec7 \u1edf tr\u1ebfn server hay kh\u00f4ng.\"\nV\u00e0 \u0111\u00e2y l\u00e0 \u0111i\u1ec1u r\u1ea5t th\u01b0\u1eddng xuy\u00ean x\u1ea3y ra.\n\n- V\u1ec1 c\u01a1 b\u1ea3n th\u00ec nh\u1eefng g\u00ec b\u1ea1n l\u00e0m tr\u00ean client side b\u1ea1n c\u0169ng c\u1ea7n ph\u1ea3i l\u00e0m n\u00f3 tr\u00ean server side.\n\t- M\u00ecnh c\u00f3 th\u1ec3 x\u1eed l\u00fd n\u00f3 kh\u00f4ng c\u1ea7n qua giao di\u1ec7n, th\u00f4ng qua API (POSTMAN!)\n\n- \u0110\u00e2y l\u00e0 nh\u1eefng validation m\u00e0 kh\u00f4ng th\u1ec3 ch\u1ec9 l\u00e0m m\u1ed7i tr\u00ean client side\n\t- Li\u00ean quan \u0111\u1ebfn DB\n        - C\u00e1i c\u00f3 gi\u00e1 tr\u1ecb date v\u00e0 time\n        - C\u1ea7n t\u01b0\u1eddng t\u00e1c v\u1edbi c\u00e1c h\u1ec7 th\u1ed1ng kh\u00e1c\n        - V\u00e2n v\u00e2n ...\n\n### L\u00fd do c\u1ea7n th\u1ef1c hi\u1ec7n validation t\u1eeb ph\u00eda server\n\nServer side c\u1ea7n x\u1eed l\u00fd nh\u1eefng input kh\u00f4ng h\u1ee3p l\u1ec7, validation s\u1ebd gi\u00fap ch\u00fang ta \u0111\u1ea1t \u0111\u01b0\u1ee3c nh\u1eefng m\u1ee5c ti\u00eau sau.\n\n- B\u1ea3o v\u1ec7 \u1ee9ng d\u1ee5ng\n\t- \u0110\u1ec3 ng\u0103n ch\u1eb7n nh\u1eefng h\u00e0nh vi kh\u00f4ng mong mu\u1ed1n ( ho\u1eb7c th\u1ea5t b\u1ea1i...)\n        - \u0110\u1ec3 t\u0103ng c\u01b0\u1eddng b\u1ea3o m\u1eadt (XSS, SQLInjection, etc ...)\n- B\u1ea3o v\u1ec7 d\u1eef li\u1ec7u\n\t- \u0110\u1ec3 ch\u1eafc ch\u1eafn nh\u1eefng d\u1eef li\u1ec7u kh\u00f4ng h\u1ee3p l\u1ec7 s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c g\u1eedi l\u00ean server\n\t\t- V\u01b0\u1ee3t qu\u00e1 Ph\u1ea1m vi c\u1ee7a gi\u00e1 tr\u1ecb, format, encoding ...\n\t\t- Gi\u00fap c\u00e1c d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c th\u1ed1ng nh\u1ea5t\n\n### L\u00fd do c\u1ea7n th\u1ef1c hi\u1ec7n validation t\u1eeb ph\u00eda client\nPh\u1ea3i th\u1eeba nh\u1eadn r\u1eb1ng sau khi b\u1ea1n validate \u1edf server xong th\u00ec b\u1ea1n c\u00f3 th\u1ec3 n\u00f3i validation \u1edf client side kh\u00f4ng c\u1ea7n thi\u1ebft cho l\u1eafm. Tuy nhi\u00ean ch\u00fang ta v\u1eabn c\u1ea7n nh\u1eefng thao t\u00e1c \"non-server\" \u0111\u1ec3 ng\u01b0\u1eddi d\u00f9ng l\u00e0m vi\u1ec7c tr\u00ean client side, qua \u0111\u00f3 c\u00f3 nh\u1eefng ph\u1ea3n h\u1ed3i t\u1ed1t h\u01a1n v\u1ec1 m\u1eb7t UX, nh\u1ea5t l\u00e0 vi\u1ec7c ki\u1ec3m tra ngay l\u1eadp t\u1ee9c c\u00e1c l\u1ed7i \u0111i\u1ec1n form.\n\u203b \u1ee8ng d\u1ee5ng c\u1ee7a ch\u00fang ta \u0111\u00e3 \u0111\u1ee7 nh\u1eefng \u0111i\u1ec1u ki\u1ec7n v\u00e0 m\u00f4i tr\u01b0\u1eddng, ch\u1ec9 c\u00f2n s\u1ef1 validation ch\u1ec9 m\u1edbi l\u00e0m 1 trong 2 ph\u00eda client v\u00e0 server.\n\n- Gi\u1edbi h\u1ea1n v\u00e0 formart c\u1ee7a c\u00e1c gi\u00e1 tr\u1ecb input\n- Ki\u1ec3m tra vi\u1ec7c t\u1ed5ng h\u1ee3p v\u00e0 s\u1eed d\u1ee5ng th\u00f4ng tin t\u1eeb server\n- \u0110\u1ea7u ti\u00ean l\u00e0 b\u1ea1n kh\u00f4ng \u0111\u01b0\u1ee3c nh\u1eadp nh\u1eefng d\u1eef li\u1ec7u kh\u00f4ng h\u1ee3p l\u1ec7 t\u1eeb UI ( nh\u01b0ng kh\u00e1c v\u1edbi validation, c\u00e1i n\u00e0y l\u00e0 ki\u1ec3m tra th\u00f4i ...)\n\t- \u1ede ph\u1ea7n select th\u00eam ki\u1ec3m tra \u0111\u00e3 ch\u1ecdn gi\u00e1 tr\u1ecb n\u00e0o ch\u01b0a\n\t- Th\u00eam gi\u1edbi h\u1ea1n Maxlength\n\n\n## :large_blue_circle: Th\u1ef1c hi\u1ec7n\n\nCh\u00fang ta s\u1ebd th\u1ef1c hi\u1ec7n validation theo server-side v\u00e0 client-side nh\u01b0 h\u01b0\u1edbng d\u1eabn d\u01b0\u1edbi \u0111\u00e2y, k\u1ebft qu\u1ea3 sau khi th\u00e0nh c\u00f4ng nh\u01b0 sau\n\n:warning: D\u01b0\u1edbi \u0111\u00e2y l\u00e0 k\u1ebft qu\u1ea3 t\u1eeb client-side. T\u00f4i th\u00eam m\u1ed9t ti\u1ec1n t\u1ed1 `[Client]` \u1edf \u0111\u1ea7u c\u00e1c th\u00f4ng b\u00e1o \u0111\u1ec3 d\u1ec5 nh\u1eadn bi\u1ebft \u0111\u00e2u l\u00e0 ph\u1ea3n h\u1ed3i t\u1eeb validation \u1edf client, v\u00e0 l\u00e0m t\u01b0\u01a1ng t\u1ef1 v\u1edbi `[Server]` .\n\n![demo notice.PNG](https://qiita-image-store.s3.amazonaws.com/0/94375/84fc1e3c-4aef-59f2-eb06-740187c53baa.png)\n\n\n### Server-side validation\n\n1. Gi\u1edbi h\u1ea1n k\u00fd t\u1ef1 cho TODO\n\t- Gi\u1edbi h\u1ea1n t\u1eeb 1~200 k\u00fd t\u1ef1\n\t- N\u1ebfu qu\u00e1 ho\u1eb7c ch\u01b0a \u0111\u1ee7 gi\u1edbi h\u1ea1n th\u00ec xu\u1ea5t th\u00f4ng b\u00e1o \"[Server] TODO must have 1~200 characters.\"\n2. Tr\u1ea1ng th\u00e1i TODO\n\t- 0 (ch\u01b0a ho\u00e0n th\u00e0nh) ho\u1eb7c 1 (ho\u00e0n th\u00e0nh)\n        - N\u1ebfu l\u1ed7i, xu\u1ea5t \"[Server] status should be entered in the 0 (incomplete) or 1 (completed).\"\n\n3. Ki\u1ec3m tra s\u1ef1 t\u1ed3n t\u1ea1i c\u1ee7a ID ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng\n\t- ID c\u00f3 t\u1ed3n t\u1ea1i\n        - Tr\u01b0\u1eddng h\u1ee3p l\u1ed7i, xu\u1ea5t th\u00f4ng b\u00e1o \"The Assignee's not found.\"\n4. Khi kh\u00f4ng ph\u1ea3i owner thay \u0111\u1ed5i ho\u1eb7c x\u00f3a ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng ( nh\u01b0ng v\u1eabn \u1edf khu v\u1ef1c \u0111\u01b0\u1ee3c quy\u1ec1n qu\u1ea3n l\u00fd)\n- Khi ng\u01b0\u1eddi s\u1eeda kh\u00f4ng ph\u1ea3i l\u00e0 owner m\u00e0 l\u00e0 ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng\n    - \"[Server] Only Owner or Assignee can update.\"\n- Khi ng\u01b0\u1eddi x\u00f3a TODO kh\u00f4ng ph\u1ea3i l\u00e0 Owner\n    - \"[Server] Only the owner can delete.\"\n5. Th\u00eam TODO\n\t- To\u00e0n b\u1ed9 n\u1ed9i dung c\u1ee7a TODO m\u1edbi tr\u00f9ng v\u1edbi m\u1ed9t TODO \u0111\u00e3 c\u00f3\n\t\t- \"TODO of the same content is already registered.\"\n\nCho vi\u1ec7c th\u1ef1c hi\u1ec7n validation, c\u00f3 s\u1eb5n trong CakePHP.\n\n- 1-2 s\u1eed d\u1ee5ng CakePHP's built-in validation\n- 3-5 t\u1ef1 t\u1ea1o c\u00e1c h\u00e0m validation m\u1edbi\n\nB\u00e2y gi\u1edd b\u1eaft \u0111\u1ea7u implement th\u00f4i.\n\n### Client-side validation\n\n- Gi\u1edbi h\u1ea1n k\u00fd t\u1ef1 cho TODO (Gi\u1ed1ng tr\u00ean server)\n\t- Gi\u1edbi h\u1ea1n t\u1eeb 1~200 k\u00fd t\u1ef1\n\t- N\u1ebfu qu\u00e1 ho\u1eb7c ch\u01b0a \u0111\u1ee7 gi\u1edbi h\u1ea1n th\u00ec xu\u1ea5t th\u00f4ng b\u00e1o \"TODO must have 1~200 characters.\"\n- Th\u00eam TODO ( cho vi\u1ec7c x\u00e1c nh\u1eadn, n\u01a1i m\u00e0 ph\u1ea7n l\u1edbn c\u00e1c validation error ch\u1ea1y \u0111\u00fang )\n\t- Kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p \u0111i\u1ec1n todo \"hoge\"\n        - N\u1ebfu vi ph\u1ea1m \"[Client] TODO can not be \"hoge\" only!\"\n        - Validation n\u00e0y s\u1ebd t\u1ef1 xu\u1ea5t hi\u1ec7n th\u00f4ng b\u00e1o.\nV\u00e0 \u0111\u00e2y l\u00e0 t\u1ea5t c\u1ea3 nh\u1eefng g\u00ec m\u00ecnh c\u1ea7n l\u00e0m cho ph\u1ea7n client side. M\u1eb7c d\u00f9 n\u00f3 kh\u00e1 \u00edt...\n\nNh\u1eefng g\u00ec s\u1ebd th\u1ef1c hi\u1ec7n \u1edf Backbone.js,\n\n- \u0110\u1ec3 th\u1ef1c hi\u1ec7n validation, ch\u1ea1y h\u00e0m `validate` \u1edf model\n- T\u1ea1o c\u00e1c s\u1ef1 ki\u1ec7n `invalid` cho m\u1ed7i validation error\n\n\n\n### M\u1ee5c l\u1ee5c Workshop\n\n- Chu\u1ea9n b\u1ecb\n- B\u00e0i 0: x\u00e2y d\u1ef1ng app gi\u1ed1ng nh\u01b0 b\u00e0i tr\u01b0\u1edbc\n- B\u00e0i 1: Th\u1ef1c hi\u1ec7n \u1edf server-side\n- B\u00e0i 2: Th\u1ef1c hi\u1ec7n \u1edf client-side\n\nSau khi chu\u1ea9n b\u1ecb, \u0111\u1ea7u ti\u00ean m\u00ecnh s\u1ebd x\u00e2y d\u1ef1ng app nh\u01b0 sau khi ho\u00e0n th\u00e0nh b\u00e0i vi\u1ebft tr\u01b0\u1edbc, ch\u01b0a c\u00f3 validation!\n\n## :large_blue_circle: Chu\u1ea9n b\u1ecb\n\nPh\u1ea7n chu\u1ea9n b\u1ecb s\u1ebd gi\u1ed1ng nhau \u1edf m\u1ed7i b\u00e0i, v\u00ec v\u1eady t\u00f4i \u0111\u00e3 t\u1ed5ng h\u1ee3p n\u00f3 \u1edf m\u1ed9t entry ri\u00eang. C\u00e1c b\u1ea1n vui l\u00f2ng xem \u1edf link n\u00e0y [All 12 times of study sessions in do I have use of Git - RESTful application workshops will be built on AWS ~ Web development workshop ~ - Qiita](http://qiita.com/k_shimoji/items/6a66dbb93b0553fa7c7f) \u0111\u1ec3 chu\u1ea9n b\u1ecb .\n\n- Git: B\u00e2y gi\u1edd m\u00ecnh s\u1ebd t\u1ea1o branch `vol/07` v\u00e0 l\u00e0m vi\u1ec7c tr\u00ean n\u00f3.\n\n\n:warning: *** T\u00f4i xin nh\u1eafc l\u1ea1i \u1edf b\u00e0i 5 v\u00e0 b\u00e0i 6, ch\u00fang ta \u0111\u00e3 c\u00f3 nh\u1eefng table b\u1ecb thay \u0111\u1ed5i. ***\n\n- B\u00e0i 5\n  - T\u1ea1o Table d\u00e0nh cho vi\u1ec7c \u0111\u0103ng k\u00fd th\u00e0nh vi\u00ean ( Th\u1ef1c hi\u1ec7n cho ch\u1ee9c n\u0103ng login )\n- B\u00e0i 6\n  - Th\u00eam m\u1ed9t c\u1ed9t cho table TODO list ( Th\u00eam c\u1ed9t Owner v\u00e0 c\u1ed9t assignee cho ch\u1ee9c n\u0103ng ph\u00e2n c\u00f4ng c\u00f4ng vi\u1ec7c)\n\nC\u00e1c b\u1ea1n n\u00ean tham kh\u1ea3o l\u1ea1i c\u00e1c link sau \u0111\u1ec3 r\u00f5 h\u01a1n.\n[T\u1ea1o Table d\u00e0nh cho vi\u1ec7c \u0111\u0103ng k\u00fd th\u00e0nh vi\u00ean](http://qiita.com/Takumi_Kasuga/items/c97e96fb91b83ed68782#t%E1%BA%A1o-table-cho-vi%E1%BB%87c-%C4%91%C4%83ng-k%C3%BD-user)\n[Th\u00eam m\u1ed9t c\u1ed9t cho table TODO list](http://qiita.com/Takumi_Kasuga/items/6d7506f8dc7de511bf14#large_blue_circle-chu%E1%BA%A9n-b%E1%BB%8B)\n\n\n\n- :white_check_mark: T\u1ea1o m\u1ed9t branch m\u1edbi t\u00ean l\u00e0 `vol/07`.\n- :white_check_mark: S\u1eeda table theo c\u00e1c b\u00e0i tr\u01b0\u1edbc.\n\nN\u1ebfu \u0111\u00e3 s\u1eb5n s\u00e0ng, ch\u00fang ta b\u1eaft \u0111\u1ea7u b\u00e0i 0\n\n## :large_blue_circle: B\u00e0i 0: Nh\u00ecn l\u1ea1i \u1ee9ng d\u1ee5ng t\u1ea1i th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i\n\nHi\u1ec7n t\u1ea1i \u1ee9ng d\u1ee5ng c\u1ee7a ch\u00fang ta ch\u01b0a \u0111\u01b0\u1ee3c th\u00eam validation n\u00e0o.\nM\u1ed9t s\u1ed1 c\u00e1i t\u1ed1i thi\u1ec3u \u1edf client-side (nh\u01b0 MaxLength) \u0111\u00e3 \u0111\u01b0\u1ee3c th\u00eam, tuy nhi\u00ean b\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng ph\u00e1 b\u1ecf n\u00f3 b\u1eb1ng c\u00e1ch g\u1eedi request l\u00ean POSTMAN, v\u00ec v\u1eady s\u1ebd g\u00e2y ra l\u1ed7i Internal Server Error.\n\n### Th\u1eed v\u1edbi POSTMAN\n\nHi\u1ec7n t\u1ea1i t\u00ecnh tr\u1ea1ng c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh nh\u01b0 sau\n\n- :white_check_mark: S\u1ed1 l\u01b0\u1ee3ng k\u00fd t\u1ef1 c\u1ee7a TODO v\u01b0\u1ee3t qu\u00e1 gi\u1edbi h\u1ea1n\n\t- Sinh ra l\u1ed7i 500(Internal Server Error)\n- :white_check_mark: TODO l\u00e0 d\u1eef li\u1ec7u r\u1ed7ng\n\t- S\u1ec9nh ra l\u1ed7i 500(Internal Server Error)\n- :white_check_mark: Status l\u00e0 9\n\t- Ch\u1ec9 cho ph\u00e9p 2 gi\u00e1 tr\u1ecb l\u00e0 0 v\u00e0 1, nh\u01b0ng v\u1eabn \u0111\u01b0\u1ee3c l\u01b0u gi\u00e1 tr\u1ecb\n- :white_check_mark: Kh\u00f4ng t\u1ed3n t\u1ea1i ID c\u1ee7a user\n\t- B\u1ea1n mu\u1ed1n sinh ra th\u00f4ng b\u00e1o l\u1ed7i, nh\u01b0ng ng\u01b0\u1eddi \u0111\u00f3 v\u1eabn thao t\u00e1c \u0111\u01b0\u1ee3c\n- :white_check_mark:TODO b\u1ecb tr\u00f9ng v\u1edbi TODO \u0111\u00e3 t\u1ed3n t\u1ea1i\n\t- S\u1ec9nh ra l\u1ed7i 500(Internal Server Error)\n- :white_check_mark: Kh\u00f4ng ph\u1ea3i owner s\u1eeda TODO m\u00e0 l\u00e0 assignee\n\t- Ch\u00fang ta mu\u1ed1n c\u00f3 th\u00f4ng b\u00e1o l\u1ed7i, nh\u01b0ng ng\u01b0\u1eddi d\u00f9ng v\u1eabn s\u1eeda \u0111\u01b0\u1ee3c\n- :white_check_mark: Ng\u01b0\u1eddi x\u00f3a TODO kh\u00f4ng ph\u1ea3i Owner\n\t- Ch\u00fang ta mu\u1ed1n c\u00f3 th\u00f4ng b\u00e1o l\u1ed7i, nh\u01b0ng ng\u01b0\u1eddi d\u00f9ng v\u1eabn x\u00f3a \u0111\u01b0\u1ee3c\n\nHo\u00e0n to\u00e0n ch\u01b0a b\u1eaft \u0111\u01b0\u1ee3c c\u00e1c l\u1ed7i n\u00e0y, \u0111\u00f3 l\u00e0 c\u00f4ng vi\u1ec7c c\u1ee7a b\u00e0i 1, sau khi xong b\u00e0i 1 c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 test \u1edf POSTMAN v\u00e0 s\u1ebd ra k\u1ebft qu\u1ea3 nh\u01b0 ph\u1ea7n **Tham kh\u1ea3o** d\u01b0\u1edbi \u0111\u00e2y\n\n:warning: Tham kh\u1ea3o\n\n\u0110\u1ec3 bi\u1ebft URL hay d\u1eef li\u1ec7u c\u1ea7n set \u0111\u1ec3 ki\u1ec3m tra v\u00e0o POSTMAN, c\u00e1c b\u1ea1n ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng chrome developer tools.\n\u0110\u1ea7u ti\u00ean c\u00e1c b\u1ea1n m\u1edf chrome dev tool v\u00e0 b\u1ea5m v\u00e0o tab NETWORK -> XHR, th\u1ef1c hi\u1ec7n  m\u1ed9t thao t\u00e1c n\u00e0o \u0111\u00f3 ( Th\u00eam, s\u1eeda, x\u00f3a... ) v\u00e0 quan s\u00e1t s\u1ebd th\u1ea5y \u1edf c\u1ed9t Name s\u1ebd hi\u1ec7n t\u00ean thao t\u00e1c m\u00ecnh v\u1eeba th\u1ef1c hi\u1ec7n, nh\u1ea5n v\u00e0o \u0111\u1ea5y \u0111\u1ec3 quan s\u00e1t, nh\u1eefng gi\u00e1 tr\u1ecb c\u1ea7n ch\u00fa \u00fd t\u00f4i \u0111\u00e3 \u0111\u1ec3 m\u0169i t\u00ean m\u00e0u xanh.\n\n![ch\u00fay.PNG](https://qiita-image-store.s3.amazonaws.com/0/94375/44ed2434-b945-35c0-ddc6-cfdb261c5dae.png)\n\nB\u00e2y gi\u1edd m\u00ecnh s\u1ebd l\u1ea5y URL, nh\u01b0 trong \u1ea3nh tr\u00ean t\u00f4i s\u1ebd l\u1ea5y `http://54.199.231.20/rest-study/todo_lists.json`, method l\u00e0 POST.\nC\u00e1c gi\u00e1 tr\u1ecb truy\u1ec1n l\u00ean s\u1ebd g\u1ed3m c\u00f3 todo, status, v\u00e0 assignee ( L\u1ea7n l\u01b0\u1ee3t l\u00e0 n\u1ed9i dung todo, tr\u1ea1ng th\u00e1i th\u00eam v\u00e0o 0 hay 1, assignee l\u00e0 ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng ).\nTr\u01b0\u1eddng h\u1ee3p th\u00eam n\u1ed9i dung v\u1eabn x\u1ecbt th\u00ec b\u1ea1n n\u00ean ch\u1ea1y API \u0111\u0103ng nh\u1eadp tr\u01b0\u1edbc nh\u00e9, v\u00ec ph\u1ea3i \u0111\u0103ng nh\u1eadp xong n\u00f3 m\u1edbi c\u00f3 quy\u1ec1n t\u00e1c \u0111\u1ed9ng v\u00e0o todo list v\u00e0 m\u1edbi nh\u1eadn \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb Owner.\n\u0110i\u1ec1n \u0111\u1ea7y \u0111\u1ee7 th\u00f4ng tin nh\u01b0 trong h\u00ecnh d\u01b0\u1edbi v\u00e0 nh\u1ea5n SEND trong POSTMAN ( \u0111\u1ea7u ti\u00ean m\u00ecnh th\u1eed v\u1edbi gi\u00e1 tr\u1ecb h\u1ee3p l\u1ec7 \u0111\u00e3 )\n\n![kq.PNG](https://qiita-image-store.s3.amazonaws.com/0/94375/6b294cbf-b2af-327b-afeb-9ae40079567c.png)\nB\u00e2y gi\u1edd m\u00ecnh test v\u1edbi gi\u00e1 tr\u1ecb kh\u00f4ng h\u1ee3p l\u1ec7 \u0111\u1ec3 ki\u1ec3m tra nh\u01b0 tr\u00ean, \u0111\u1ec3 cho nhanh th\u00ec m\u00ecnh test vi\u1ec7c tr\u00f9ng n\u1ed9i dung TODO b\u1eb1ng c\u00e1ch nh\u1ea5n SEND th\u00eam 1 l\u1ea7n n\u1eefa.\n\n![ec.PNG](https://qiita-image-store.s3.amazonaws.com/0/94375/21710955-5ea6-b1ff-4375-f5859ad50b1a.png)\nB\u00e1o l\u1ed7i ngay v\u00e0 lu\u00f4n.\n\nC\u00e1c b\u1ea1n c\u00f3 th\u1ec3 s\u1eeda n\u1ed9i dung TODO th\u00e0nh r\u1ed7ng ho\u1eb7c qu\u00e1 200 k\u00fd t\u1ef1, ho\u1eb7c s\u1eeda ID c\u1ee7a assignee th\u00e0nh 1 c\u00e1i ID kh\u00f4ng t\u1ed3n t\u1ea1i ng\u01b0\u1eddi d\u00f9ng trong database, ho\u1eb7c s\u1eeda status th\u00e0nh 9 ch\u1eb3ng h\u1ea1n \u0111\u1ec3 test ti\u1ebfp, n\u1ebfu \u0111\u01b0\u1ee3c b\u00e1o l\u1ed7i ngh\u0129a l\u00e0 m\u00ecnh \u0111\u00e3 validate th\u00e0nh c\u00f4ng tr\u00ean server side.\n\nB\u00e2y gi\u1edd m\u00ecnh s\u1ebd b\u1eaft \u0111\u1ea7u b\u00e0i 1\n\n## :large_blue_circle: B\u00e0i 1: Server-side validation\n\n\u1ede b\u00e0i 1 n\u00e0y ch\u00fang ta s\u1ebd th\u1ef1c hi\u1ec7n ph\u1ea7n server-side c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh.\nS\u1eed d\u1ee5ng \"POSTMAN\" \u0111\u1ec3 x\u00e1c nh\u1eadn s\u1ef1 thay \u0111\u1ed5i c\u1ee7a API sau khi ti\u1ebfn h\u00e0nh validation.\n\n### Ch\u00fa \u00fd: M\u00f4 t\u1ea3 ph\u01b0\u01a1ng th\u1ee9c validation\n\nN\u00f3 s\u1ebd m\u00f4 t\u1ea3 rule cho Model, ch\u1ec9 c\u00f3 th\u1ec3!\nSau \u0111\u00f3, validation d\u1ef1a tr\u00ean c\u00e1c rule n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c t\u1ef1 \u0111\u1ed9ng th\u00eam khi h\u00e0m `model -> save()` \u0111\u01b0\u1ee3c th\u1ef1c thi, Tr\u01b0\u1eddng h\u1ee3p l\u1ed7i s\u1ebd xu\u1ea5t th\u00f4ng b\u00e1o l\u1ed7i b\u1eb1ng `model-> validationErrors`.\n\n#### V\u00ed d\u1ee5: Implement v\u00e0o model\n\n```php:ValidationRules\nclass TodoList extends AppModel {\n\n\u301c\u7701\u7565\u301c\n\npublic $validate = array (\n\t//TODO check\n\t'todo' => array (\n\t\t//S\u1ed1 k\u00fd t\u1ef1\n\t\t'rule1' => array (\n\t\t\t'rule' => array(\n\t\t\t\t'between', 1, 200\n\t\t\t),\n\t\t\t'message' => 'The characters must be in the range 1~200'\n\t\t),\n\n\t\t\u301cCh\u00fang ta s\u1ebd t\u1ea1i ra c\u00e1c rule m\u1edbi t\u01b0\u01a1ng t\u1ef1 th\u1ebf n\u00e0y\u301c\n```\n\n-  T\u00f4i \u0111\u00e3 th\u00eam m\u1ed7i key ( trong c\u1eb7p key : value ) cho m\u1ed7i `'todo'` \u0111\u1ec3 ki\u1ec3m tra. N\u00f3 s\u1ebd th\u00eam c\u00e1c thi\u1ebft l\u1eadp theo c\u00e1c tr\u00ecnh t\u1ef1.\n\t- `'rule1'` l\u00e0 t\u00ean c\u1ee7a rule, t\u1ed1t nh\u1ea5t l\u00e0 n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c mang gi\u00e1 tr\u1ecb unique trong danh s\u00e1ch c\u00e1c key.\n\t\t- `'rule'` T\u00f4i s\u1ebd x\u00e1c \u0111\u1ecbnh h\u00e0m v\u00e0 arguments c\u1ee7a rules \u0111\u1ec3 set. \u1ede \u0111\u00e2y th\u00ec m\u00ecnh x\u00e1c \u0111\u1ecbnh b\u1eb1ng m\u1ed9t CakePHP built-in l\u00e0 `between`.\n\t\t\t- `'between', 1, 200` v\u1edbi built-in `between` c\u1ee7a CakePHP, H\u00e0m n\u00e0y \u0111\u01b0\u1ee3c thi\u1ebft l\u1eadp ch\u1ea1y b\u1eb1ng c\u00e1ch cho c\u00e1c gi\u00e1 tr\u1ecb `1` v\u00e0 `200`. B\u00e2y gi\u1edd, s\u1ed1 l\u01b0\u1ee3ng k\u00fd t\u1ef1 c\u1ee7a m\u1ed7i TODO s\u1ebd \u0111\u01b0\u1ee3c thi\u1ebft l\u1eadp cho th\u00f4ng b\u00e1o l\u1ed7i n\u1ebfu n\u00f3 n\u1eb1m ngo\u00e0i kho\u1ea3ng t\u1eeb 1 \u0111\u1ebfn 200.\n                        - 'message' s\u1ebd tr\u1ecf \u0111\u1ebfn c\u00e2u th\u00f4ng b\u00e1o l\u1ed7i `'\u0110\u00e2y l\u00e0 th\u00f4ng b\u00e1o khi l\u1ed7i vi ph\u1ea1m rule n\u00e0y xu\u1ea5t hi\u1ec7n'`.\n\nM\u1ea1ch ch\u01b0\u01a1ng tr\u00ecnh nh\u01b0 sau\n\n- Ch\u1ea1y h\u00e0m `save()` c\u1ee7a model trong controller\n- N\u1ebfu xu\u1ea5t hi\u1ec7n l\u1ed7i (`save()` s\u1ebd return gi\u00e1 tr\u1ecb `false`) x\u00e1c nh\u1eadn t\u1edbi model r\u1eb1ng `validationErrors`\n- Return m\u1ed9t th\u00f4ng b\u00e1o l\u1ed7i cho client.\n\n\n```json:(ThamKh\u1ea3o)model->formatOfValidationErrorMessagesThatAreSetToValidationErrors\n{\n    \"todo\": [\n        \"The characters must be in the range 1~200\"\n    ],\n    \"id\": [\n        \"Only owner can update,.\"\n    ]\n}\n```\n\n### Ch\u00fa \u00fd: Ch\u1ea1y validation khi x\u00f3a\n\nV\u00ec m\u1eb7c d\u00f9 validation khi `save` \u0111\u01b0\u1ee3c ch\u1ea1y t\u1eeb Model, `delete` th\u00ecnh tho\u1ea3ng kh\u00f4ng ch\u1ea1y,\nC\u1ea7n ch\u00fa \u00fd l\u00e0 \"Ch\u1ec9 Owner \u0111\u01b0\u1ee3c x\u00f3a TODO\" , m\u00ecnh s\u1ebd ch\u1ea1y \u1edf Controller.\nValidation logic s\u1ebd \u0111\u01b0\u1ee3c chuy\u1ec3n sang Model.\n\n\n### Ch\u00fa \u00fd: C\u00e1ch return error\n\nController ki\u1ec3m tra `validationErrors` models v\u00e0 return th\u00f4ng tin n\u00e0y cho client n\u1ebfu c\u00f3 l\u1ed7i n\u00e0o xu\u1ea5t hi\u1ec7n,\nM\u00ecnh s\u1ebd ph\u1ea3n h\u1ed3i m\u1ed9t HTTP status `400` \u0111\u1ec3 ch\u1ec9 ra r\u1eb1ng \u0111\u00e2y l\u00e0 m\u1ed9t th\u00f4ng b\u00e1o l\u1ed7i cho client..\n`400` l\u00e0 m\u1ed9t `Bad Request`, ph\u1ea3n h\u1ed3i n\u00e0y ch\u1ec9 ra r\u1eb1ng c\u00f3 v\u1ea5n \u0111\u1ec1 x\u1ea3y ra v\u1edbi n\u1ed9i dung c\u1ee7a request t\u1eeb client.\nN\u1ebfu validation error m\u00ecnh s\u1ebd return `400` `.\n\n```php:C\u00e1chSetHTTPstatus400\n$this->response->statusCode(400);\n```\n\nHay xem m\u00ecnh s\u1ebd th\u1ef1c hi\u1ec7n implement tr\u00ean nh\u1eefng file n\u00e0o\n\n### Chi ti\u1ebft c\u00e1c file c\u1ea7n ch\u1ec9nh s\u1eeda\n\n|Thao t\u00e1c|file|M\u00f4 t\u1ea3|\n|---|:----------------------------------|:----------------------|\n|S\u1eeda| app/Model/TodoList.php |Th\u00eam validation rule\n|S\u1eeda| app/Controller/TodoListsController.php | K\u1ebft qu\u1ea3 Validation c\u1ee7a x\u00e1c nh\u1eadn v\u00e0 s\u1eeda tin nh\u1eafn\n\n\n### TodoList.php\n\n```diff:app/Model/TodoList.php\n <?php\n-\n App::uses('AppModel', 'Model');\n+App::uses('User', 'Model');\n+App::uses('AuthComponent',  'Controller/Component');\n \n class TodoList extends AppModel {\n \tpublic $belongsTo = array (\n \t\t'Owner' => array (\n \t\t\t'className' => 'User',\n \t\t\t'foreignKey' => 'owner',\n \t\t),\n \t\t'Assignee' => array (\n \t\t\t'className' => 'User',\n \t\t\t'foreignKey' => 'assignee'\n \t\t)\n \t);\n+\tpublic $validate = array (\n+\t\t//TODO check\n+\t\t'todo' => array (\n+\t\t\t//S\u1ed1 k\u00fd t\u1ef1\n+\t\t\t'rule1' => array (\n+\t\t\t\t'rule' => array(\n+\t\t\t\t\t'between', 1, 200\n+\t\t\t\t),\n+\t\t\t\t'message' => '[Client] The characters must be in the range 1~200'\n+\t\t\t),\n+\t\t\t//tr\u00f9ng v\u1edbi TODO \u0111\u00e3 c\u00f3\n+\t\t\t'rule2' => array (\n+\t\t\t\t'rule' => 'isUnique',\n+\t\t\t\t'message' => '[Client] There are the same TODO exists in the TODO list.'\n+\t\t\t)\n+\t\t),\n+\t\t//Ki\u1ec3m tra status\n+\t\t'status' => array (\n+\t\t\t'rule1' => array (\n+\t\t\t\t//0 or 1 (Tr\u01b0\u1eddng h\u1ee3p custom)\n+// \t\t\t\t'rule' => array(\n+// \t\t\t\t\t'custom',\n+// \t\t\t\t\t'/^[01]$/'\n+// \t\t\t\t),\n+\t\t\t\t//0 or 1 (tr\u01b0\u1eddng h\u1ee3p h\u1ee3p l\u1ec7)\n+\t\t\t\t'rule' => array(\n+\t\t\t\t\t'inList',\n+\t\t\t\t\tarray(0, 1)\n+\t\t\t\t),\n+\t\t\t\t'message' => 'The status value must be 0 or 1'\n+\t\t\t),\n+\t\t),\n+\t\t//Ki\u1ec3m tra ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng\n+\t\t'assignee' => array (\n+\t\t\t//ID \u0111\u00e3 t\u1ed3n t\u1ea1i trong table users\n+\t\t\t'rule1' => array (\n+\t\t\t\t'rule' => array(\n+\t\t\t\t\t'existsUser'\n+\t\t\t\t),\n+\t\t\t\t'message' => '[Client] This user ID is already exists'\n+\t\t\t),\n+\t\t),\n+\t\t//Vi\u1ec7c s\u1eeda/x\u00f3a\n+\t\t'id' => array (\n+\t\t\t//Ki\u1ec3m tra ng\u01b0\u1eddi v\u00e0o trang detail c\u00f3 ph\u1ea3i Owner hay Assignee\n+\t\t\t'rule1' => array (\n+\t\t\t\t'rule' => array(\n+\t\t\t\t\t'isOwnerOrAssignee'\n+\t\t\t\t),\n+\t\t\t\t'message' => '[Client] Only Owner or Assigner can update this TODO'\n+\t\t\t),\n+\t\t)\n+\t);\n+\n+\t// Owner validation rules\n+       // ID \u0111\u00e3 \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng c\u00f4ng vi\u1ec7c, m\u00ecnh s\u1ebd xem ID c\u00f3 t\u1ed3n t\u1ea1i trong table users hay kh\u00f4ng\n+\tpublic function existsUser($userId){\n+\t\t$userModel = new User();\n+\t\t$count = $userModel->find('count', array('conditions'=>array('id'=>$userId), 'recursive' => -1));\n+\t\treturn $count > 0;\n+\t}\n+\n+\t//Owner validation rules\n+\t//T\u1ef1 ki\u1ec3m tra xem c\u00f3 ph\u1ea3i Owner hay ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng hay kh\u00f4ng\n+\tpublic function isOwnerOrAssignee($id){\n+\t\tif(!isset($id)){\n+\t\t\t//B\u1ecf qua ng\u01b0\u1eddi \u0111ang \u0111\u0103ng k\u00fd\n+\t\t\treturn true;\n+\t\t}\n+\t\t$me = AuthComponent::user();\n+\t\t$todo = $this->findById($id);\n+\t\tif($todo){\n+\t\t\tif($todo['TodoList']['owner'] === $me['id']\n+\t\t\t\t|| $todo['TodoList']['assignee'] === $me['id']){\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t// Owner validation rules\n+       // Yourself to check whether the owner\n+\tpublic function isOwner($id){\n+\t\tif(!isset($id)){\n+\t\t\t//Kh\u00f4ng quan t\u00e2m \u0111\u1ebfn ng\u01b0\u1eddi m\u1edbi \u0111\u0103ng k\u00fd\n+\t\t\treturn true;\n+\t\t}\n+\t\t$me = AuthComponent::user();\n+\t\t$todo = $this->findById($id);\n+\t\tif($todo){\n+\t\t\tif($todo['TodoList']['owner'] === $me['id']){\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n }\n```\n\n- Ch\u00fang ta \u00e1p d\u1ee5ng validation rules c\u1ee7a nh\u1eefng built-in sau c\u1ee7a CakePHP.\n\n| \u00c1p d\u1ee5ng cho | Rules | N\u1ed9i dung ki\u1ec3m tra |\n------+-----+--------\ntodo | between | \u0110\u1ed9 d\u00e0i m\u1ed7i TODO c\u00f3 n\u1eb1m trong kho\u1ea3ng x\u00e1c \u0111\u1ecbnh hay kh\u00f4ng\ntodo | isUnique | Gi\u00e1 tr\u1ecb nh\u1eadp v\u00e0o c\u00f3 unique trong database hay kh\u00f4ng\nstatus | inList | Gi\u00e1 tr\u1ecb g\u1eedi l\u00ean c\u00f3 n\u1eb1m trong danh s\u00e1ch gi\u00e1 tr\u1ecb cho s\u1eb5n kh\u00f4ng\nstatus | custom | B\u1ea1n c\u00f3 th\u1ec3 t\u1ea1o ra c\u00e1c t\u00f9y ch\u1ec9nh gi\u00e1 tr\u1ecb theo \u00fd m\u00ecnh\n\n:warning: Ngo\u00e0i nh\u1eefng c\u00e1i \u0111\u00e3 li\u1ec7t k\u00ea \u1edf tr\u00ean, CakePHP c\u00f2n c\u00f3 r\u1ea5t nhi\u1ec1u built-in validation rules kh\u00e1c.\nC\u00e1c b\u1ea1n c\u00f3 th\u1ec3 xem t\u1ea1i \u0111\u00e2y\u2192[Data validation - CakePHP Cookbook 2.x document](http://book.cakephp.org/2.0/en/models/data-validation.html)\n\n\n\n- Th\u00eam v\u00e0o \u0111\u00f3, ch\u00fang ta s\u1ebd implement m\u1ed9i s\u1ed1 h\u00e0m validation nh\u01b0 sau.\n\n| \u00c1p d\u1ee5ng v\u1edbi | H\u00e0m custom validation  | N\u1ed9i dung ki\u1ec3m tra |\n------+-----+--------\nassignee  |existsUser         | \u0110\u1ed9 d\u00e0i c\u1ee7a input trong kho\u1ea3ng x\u00e1c \u0111\u1ecbnh\nid        |isOwnerOrAssignee  | Ki\u1ec3m tra d\u1eef li\u1ec7u tr\u01b0\u1edbc khi ch\u1ec9nh s\u1eeda xem user \u0111\u00f3 \u0111\u00e3 login hay ch\u01b0a v\u00e0 c\u00f3 ph\u1ea3i owner hay ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng hay kh\u00f4ng\n\n:warning: Delete when | isOwner | Ki\u1ec3m tra d\u1eef li\u1ec7u tr\u01b0\u1edbc khi ch\u1ec9nh s\u1eeda xem c\u00f3 ph\u1ea3i l\u00e0 owner hay kh\u00f4ng\n\n:warning: V\u00ec h\u00e0m isOwner s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c thi t\u1ea1i th\u1eddi \u0111i\u1ec3m th\u1ef1c hi\u1ec7n h\u00e0nh \u0111\u1ed9ng x\u00f3a, validation rules \u1edf model v\u00e0 ch\u1ea1y \u1edf controller kh\u00f4ng \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3.\n\n#### TodoListsController.php\n\nKi\u1ec3m tra k\u1ebft qu\u1ea3 validation v\u00e0 s\u1eeda th\u00f4ng b\u00e1o \u0111\u1ec3 return t\u1edbi client.\n\n:warning: B\u1ea1n ch\u1ec9 c\u00f3 m\u1ed9t thao t\u00e1c nh\u1ecf \u1edf \u0111\u00e2y v\u00e0 kh\u00f4ng c\u1ea7n l\u00e0m g\u00ec v\u1edbi giao di\u1ec7n n\u00e0y c\u1ea3.\n\u3000\u3000\u203bHi\u1ec7n t\u1ea1i, m\u00ecnh \u0111\u00e3 th\u00eam `view()` v\u00ec m\u00ecnh ch\u01b0a x\u00e1c \u0111\u1ecbnh \u0111\u01b0\u1ee3c `field` \u1edf h\u00e0m.\n\n```diff:TodoListsController.php\nclass TodoListsController extends AppController {\n+\tprivate $fields = array (\n+\t\t'TodoList.id',\n+\t\t'TodoList.todo',\n+\t\t'TodoList.status',\n+\t\t'Owner.id',\n+\t\t'Owner.name',\n+\t\t'Assignee.id',\n+\t\t'Assignee.name'\n+\t);\n \n \tpublic function index() {\n \t\t$query = array (\n-\t\t\t'fields' => array (\n-\t\t\t\t'TodoList.id',\n-\t\t\t\t'TodoList.todo',\n-\t\t\t\t'TodoList.status',\n-\t\t\t\t'Owner.id',\n-\t\t\t\t'Owner.name',\n-\t\t\t\t'Assignee.id',\n-\t\t\t\t'Assignee.name'\n-\t\t\t),\n+\t\t\t'fields' => $this->fields,\n \t\t\t'order' => \"TodoList.id\"\n \t\t);\n \t\t$res = $this->TodoList->find('all', $query);\n \t\t// X\u1eed l\u00fd s\u1ef1 ki\u1ec7n\n \t\tif (count($res) > 0) {\n \t\t    $loginUserId = $this->Auth->user()['id'];\n \t\t\tforeach ( $res as $key => $row ) {\n \t\t\t    // tr\u01b0\u1eddng h\u1ee3p \"Login user l\u00e0 owner\" \n \t\t\t\t$res[$key]['TodoList']['owned'] = $row['Owner']['id'] === $loginUserId;\n \t\t\t    // tr\u01b0\u1eddng h\u1ee3p \"Login user l\u00e0 Assignee\" \n \t\t\t\t$res[$key]['TodoList']['assigned'] = $row['Assignee']['id'] === $loginUserId;\n \t\t\t}\n \t\t}\n \t\t$this->set(compact('res'));\n \t\t$this->set('_serialize', 'res');\n \t}\n \n \tpublic function view($id = null) {\n-\t\t$res = $this->TodoList->findById($id);\n+\t\t$res = $this->TodoList->findById($id, $this->fields);\n \t\t$this->set(compact('res'));\n \t\t$this->set('_serialize', 'res');\n \t}\n \n \tpublic function add() {\n \t\t$data = $this->request->data;\n \t\t$data['owner'] = $this->Auth->user()['id'];\n \t\t$res = $this->TodoList->save($data);\n-\t\t$this->set(compact('res'));\n-\t\t$this->set('_serialize', 'res');\n+\t\t$response = $this->editResponse($res);\n+\t\t$this->set(compact('response'));\n+\t\t$this->set('_serialize', 'response');\n \t}\n \tpublic function delete($id) {\n-\t\t$res = $this->TodoList->delete($id, false);\n-\t\t$this->set(compact('res'));\n-\t\t$this->set('_serialize', 'res');\n+\t\t//\u30aa\u30fc\u30ca\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\n+\t\tif(!$this->TodoList->isOwner($id)){\n+\t\t\t$this->setStatusValidationError();\n+\t\t\t$response = $this->editErrors('Only the owner can detete this TODO.');\n+\t\t}else{\n+\t\t\t$res = $this->TodoList->delete($id, false);\n+\t\t\t$response = $this->editResponse($res);\n+\t\t}\n+\t\t$this->set(compact('response'));\n+\t\t$this->set('_serialize', 'response');\n \t}\n \n \tpublic function edit($id) {\n \t\t$this->TodoList->id = $id;\n \t\t$data = $this->request->data;\n \t\t$res = $this->TodoList->save($this->request->data);\n \t\t$res = !empty($res);\n-\t\t$this->set(compact('res'));\n-\t\t$this->set('_serialize', 'res');\n+\t\t$response = $this->editResponse($res);\n+\t\t$this->set(compact('response'));\n+\t\t$this->set('_serialize', 'response');\n+\t}\n+\n+\t//S\u1eeda c\u00e1c ph\u1ea3n h\u1ed3i\n+\tprivate function editResponse($res){\n+\t\tif($res){\n+\t\t\t$response = $res;\n+\t\t}else{\n+\t\t\t$this->setStatusValidationError();\n+\t\t\t$respnse = array();\n+\t\t\tif(count($this->TodoList->validationErrors) > 0){\n+\t\t\t\t$response = $this->editErrors($this->TodoList->validationErrors);\n+\t\t\t}else{\n+\t\t\t\t$response = $this->editErrors('An error occured.');\n+\t\t\t}\n+\t\t}\n+\t\treturn $response;\n+\t}\n+\n+\t// Khi g\u1eb7p validation errors set response gi\u00e1 tr\u1ecb 400\n+\tprivate function setStatusValidationError(){\n+\t\t$this->response->statusCode(400);\n+\t}\n+\n+\t// S\u1eeda c\u00e1c th\u00f4ng b\u00e1o l\u1ed7i\n+\tprivate function editErrors($errors){\n+\t\tif(is_array($errors)){\n+\t\t\t$res['errors'] = $errors;\n+\t\t}else{\n+\t\t\t$res['errors']  = array('error' => array($errors));\n+\t\t}\n+\t\treturn $res;\n \t}\n \n }\n```\n\n- H\u00e0m `Add` v\u00e0 h\u00e0m `edit`\n\nSau khi th\u1ef1c thi `save` trong model, ch\u00fang we ch\u1ea1y h\u00e0m `editResponse`.\n\n- H\u00e0m `editResponse`\n\nN\u1ebfu gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1 t\u1eeb h\u00e0m `save` kh\u00f4ng ph\u1ea3i `true`, ki\u1ec3m tra gi\u00e1 tr\u1ecb `validationErrors` c\u1ee7a model, x\u00e1c nh\u1eadn xem c\u00f3 validation error n\u00e0o kh\u00f4ng.\nN\u1ebfu c\u00f3 validation error, Set HTTP status `400`, b\u1ea1n ph\u1ea3i s\u1eeda JSON cho vi\u1ec7c return l\u1ed7i nh\u01b0 format sau \u0111\u00e2y.\n\n```json:ErrorReturnJSONformat\n{\n    \"errors\": {\n        \"item key\": [\n            \"error messsage\"\n        ],\n        \"item key\": [\n            \"error messsage\"\n        ],\n        \u301c t\u01b0\u01a1ng t\u1ef1 \u301c\n    }\n}\n```\n\n\n```json:SampleOfErrorReturnJSON\n{\n    \"errors\": {\n        \"todo\": [\n            \"length of TODO must be 1~200 characters\"\n        ],\n        \"status\": [\n            \"Status must be 0 or 1\"\n        ],\n        \"id\": [\n            \"Only Owner or Assignee can update this TODO\"\n        ]\n    }\n}\n```\n\n\n### Ti\u1ebfn h\u00e0nh implement\n\nT\u00f3m t\u1eaft b\u00e0i h\u1ecdc v\u00e0 c\u00e1c ki\u1ec3m tra\n\n- :white_check_mark: `app/Model/TodoList.php` s\u1eeda nh\u01b0 tr\u00ean.\n- :white_check_mark: `app/Controller/TodoListsController.php` s\u1eeda nh\u01b0 tr\u00ean.\n- :white_check_mark: Ki\u1ec3m tra k\u1ebft qu\u1ea3.\n\t- L\u00e0m theo h\u01b0\u1edbng d\u1eabn c\u1ee7a [b\u00e0i 0](http://qiita.com/Takumi_Kasuga/private/b297ee3591d4a4ff48e8#large_blue_circle-b%C3%A0i-0-x%C3%A2y-d%E1%BB%B1ng-app-nh%C6%B0-khi-ho%C3%A0n-th%C3%A0nh-b%C3%A0i-tr%C6%B0%E1%BB%9Bc-)\n\t\t- :white_check_mark: S\u1ed1 k\u00fd t\u1ef1 c\u1ee7a TODO v\u01b0\u1ee3t gi\u1edbi h\u1ea1n\n\t\t\t- return `The lengths of TODO must in the range of 1~200 characters`\n\t\t- :white_check_mark: TODO r\u1ed7ng\n\t\t\t-  return `The lengths of TODO must in the range of 1~200 characters`\n\t\t- :white_check_mark: Status l\u00e0 9\n\t\t\t- return `Status must be 0 or 1`\n\t\t- :white_check_mark: Assignee User ID kh\u00f4ng t\u1ed3n t\u1ea1i\n\t\t\t- return `Assignee User ID not exist`\n\t\t- :white_check_mark: Kh\u00f4ng ph\u1ea3i Owner, Assignee th\u1ef1c hi\u1ec7n ch\u1ee9c n\u0103ng ch\u1ec9nh s\u1eeda\n\t\t\t- return `Only Owner can update this TODO`\n\t\t- :white_check_mark: Kh\u00f4ng ph\u1ea3i Owner th\u1ef1c hi\u1ec7n ch\u1ee9c n\u0103ng x\u00f3a\n\t\t\t- `Only Owner can delete this TODO`\n- :white_check_mark: Commit l\u00ean Git\n\n**:warning: T\u00e0i li\u1ec7u tham kh\u1ea3o d\u1ea1ng hi\u1ec3n th\u1ecb diff tr\u00ean Github**\n\n[7th b\u00e0i 1 server side \u00b7 suzukishouten-study/rest-study@b61fdf7](https://github.com/suzukishouten-study/rest-study/commit/b61fdf71eb6f0e8a3ab8c4491c0d7cbf7e35833c)\n## :large_blue_circle: B\u00e0i 2: Th\u1ef1c hi\u1ec7n \u1edf client-side\n\n\u1ede b\u00e0i 2 n\u00e0y, ch\u00fang ta s\u1ebd th\u1ef1c hi\u1ec7n vi\u1ec7c implement \u1edf client-side\n\n### Ch\u00fa \u00fd: M\u00f4 t\u1ea3 c\u00e1c h\u00e0m validation\n\nCh\u00fang ta s\u1ebd th\u00eam m\u1ed9t h\u00e0m check cho `validate` method c\u1ee7a Backbone.Model\nTrong n\u1ec1n t\u1ea3ng c\u1ee7a Backbone kh\u00f4ng c\u00f3 c\u00e1c built-in \u0111\u1ec3 validation nh\u01b0 trong CakePHP, T\u00f4i s\u1ebd ti\u1ebfp t\u1ee5c implement logic.\nB\u1edfi v\u00ec `validate` method \u0111\u01b0\u1ee3c th\u1ef1c thi t\u1ef1 \u0111\u1ed9ng khi b\u1ea1n ch\u1ea1y `set` method c\u1ee7a model, b\u1ea1n kh\u00f4ng c\u1ea7n ph\u1ea3i g\u1ecdi `validate` n\u1eefa.\nT\u1ea1i `validate` method, t\u1ed5ng h\u1ee3p t\u1ea5t c\u1ea3 c\u00e1c th\u00f4ng b\u00e1o l\u1ed7i v\u00e0o m\u1ed9t m\u1ea3ng, sau \u0111\u00f3 return ch\u00fang.\nM\u1ed7i l\u1ea7n c\u00e1i g\u00ec \u0111\u1ea5y \u0111\u01b0\u1ee3c return t\u1eeb `validate` method (not-null), v\u00ec s\u1ef1 ki\u1ec7n `invalid` c\u1ee7a model \u0111a ch\u1ea1y xong , t\u1ea1o th\u00f4ng b\u00e1o l\u1ed7i v\u00e0 hi\u1ec3n th\u1ecb ch\u00fang l\u00ean view.\n\n#### V\u00ed d\u1ee5: implementation c\u1ee7a Model\n\n```js:ValidationLogicInValidateMethod\n\tvalidate : function(attrs) {\n\t\tvar errors = [];\n\t\t\n\t\t//Ki\u1ec3m tra \u0111\u1ed9 d\u00e0i\n\t\tvar todoLength = attrs.todo.length;\n\t\tif (todoLength < 1 || todoLength > 200) {\n\t\t\terrors.push('[Client]TODO length must be 1~200 characters.');\n\t\t}\n\n\t\t\u301cM\u00ecnh s\u1ebd ti\u1ebfp t\u1ee5c th\u00eam c\u00e1c validation logic v\u1edbi formart t\u01b0\u01a1ng t\u1ef1\u301c\n\n\t\t//return error khi s\u1ef1 ki\u1ec7n invalid c\u1ee7a model x\u1ea3y ra\n\t\tif (errors.length > 0){\n\t\t\treturn errors;\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n```\n\n- `var errors[];` M\u1ea3ng s\u1ebd ch\u1ee9a c\u00e1c th\u00f4ng b\u00e1o l\u1ed7i\n\t- `//the logic of check length` \u0110\u00e2y l\u00e0 ph\u1ea7n code logic ki\u1ec3m tra \u0111\u1ed9 d\u00e0i.\n\t\t- `Errors.push('[Client] TODO must be in the length of 1~200 characters.');` Hi\u1ec3n th\u1ecb th\u00f4ng b\u00e1o l\u1ed7i.\n        - `Return errors` length c\u1ee7a erros ph\u1ea3i l\u1edbn h\u01a1n gi\u00e1 tr\u1ecb m\u00ecnh \u0111\u00e3 set t\u1eeb \u0111\u1ea7u \u0111\u00f3 l\u00e0 0, sau \u0111\u00f3 tr\u1ea3 v\u1ec1 t\u1ea5t c\u1ea3 v\u1edbi \u0111i\u1ec1u ki\u1ec7n n\u1ebfu c\u00f3 `errors`. N\u1ebfu This c\u1ee7a model l\u00e0 `invalid` th\u00ec event x\u1ea3y ra.\n\n\n### Ch\u00fa \u00fd: Th\u00f4ng b\u00e1o l\u1ed7i s\u1ebd \u0111\u01b0\u1ee3c hi\u1ec3n t\u1ea1i t\u1ea1i th\u1eddi \u0111i\u1ec3m validation error tr\u00ean server\n\nKhi c\u00f3 validation error tr\u00ean server side, returned HTTP status `400`.\nTr\u00ean ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a ch\u00fang ta hi\u1ec7n t\u1ea1i, status kh\u00f4ng ph\u1ea3i `200` khi giao ti\u1ebfp v\u1edbi server qua `app.js` \u0111\u1ec1u \u0111\u00e3 \u0111\u01b0\u1ee3c x\u1eed l\u00fd ( handle ), s\u1eeda c\u00e1c ti\u1ebfn tr\u00ecnh m\u00e0 x\u1ea3y ra status `400`.\nNh\u1eefng th\u00f4ng tin chi ti\u1ebft h\u01a1n, t\u00f4i s\u1ebd gi\u1ea3i th\u00edch \u1edf  `app.js`.\n\nB\u00e2y gi\u1edd ch\u00fang ta s\u1ebd s\u1eeda ch\u1ee7 y\u1ebfu \u1edf View\n\n### C\u00e1c file c\u1ea7n thay \u0111\u1ed5i\n\n|Thao t\u00e1c|file|M\u00f4 t\u1ea3|\n|---|:----------------------------------|:----------------------|\n|S\u1eeda| app/webroot/js/models/todo-model.js |Implementation c\u1ee7a client-side validation logic\n|S\u1eeda| app/webroot/js/views/todo-composite-view.js | K\u1ebft qu\u1ea3 validation c\u1ee7a Vi\u1ec7c x\u00e1c nh\u1eadn v\u00e0 ch\u1ec9nh s\u1eeda TODO tr\u00ean client-side\n|S\u1eeda| app/webroot/js/views/todo-detail-item-view.js |K\u1ebft qu\u1ea3 validation c\u1ee7a Vi\u1ec7c x\u00e1c nh\u1eadn v\u00e0 ch\u1ec9nh s\u1eeda TODO tr\u00ean client-side\n|S\u1eeda| app/webroot/js/app.js | B\u1eaft l\u1ed7i v\u00e0 s\u1eeda c\u00e1c validation error c\u1ee7a server-side\n\n#### todo-model.js\n\nImplement validation logic\n\n```diff:todo-model.js\n //Model representing County Todo data 1\n define(function() {\n \tvar TodoModel = Backbone.Model.extend({\n \t\turlRoot : '/rest-study/todo_lists',\n \t\tparse : function(response) {\n \t\t\t//Model parse\n \t\t\tconsole.log(\"\u30e2\u30c7\u30eb\u3092\u30d1\u30fc\u30b9\");\n \t\t\tconsole.log(response);\n \t\t\tvar parsed = response.TodoList;\n \t\t\tif (response.Owner) {\n \t\t\t\tparsed.Owner = response.Owner;\n \t\t\t\tparsed.Assignee = response.Assignee;\n \t\t\t}\n \t\t\treturn parsed;\n \t\t},\n \t\ttoggle : function() {\n \t\t\tthis.set('status', this.get(\"status\") === '1' ? '0' : '1');\n \t\t\tthis.save();\n+\t\t},\n+\t\tvalidate : function(attrs) {\n+\t\t\tvar errors = [];\n+\t\t\t\n+\t\t\t//Ki\u1ec3m tra \u0111\u1ed9 d\u00e0i\n+\t\t\tvar todoLength = attrs.todo.length;\n+\t\t\tif (todoLength < 1 || todoLength > 200) {\n+\t\t\t\terrors.push('[Client]The TODO length must be 1\u301c200 characters');\n+\t\t\t}\n+\n+\t\t\t//Th\u1eed nghi\u1ec7m ch\u1ec9 cho ph\u00e9p nh\u1eadp gi\u00e1 tr\u1ecb hoge, b\u1ecf comment \u0111\u1ec3 th\u1eed ch\u1ea1y\n+\t\t\t//if(attrs.todo !== 'hoge'){\n+\t\t\t//\terrors.push('[Client]TODO on ly \"hoge\" !');\n+\t\t\t//}\n+\n+\t\t\tif (errors.length > 0){\n+\t\t\t\treturn errors;\n+\t\t\t}else{\n+\t\t\t\treturn null;\n+\t\t\t}\n \t\t}\n \t});\n \treturn TodoModel;\n```\n\n- `validate` method\n\nT\u00f4i ngh\u0129 kh\u00f4ng c\u1ea7n ph\u1ea3i mi\u00eau t\u1ea3 \u0111\u1eb7c bi\u1ec7t \u0111\u1ed1i v\u1edbi logic.\nB\u1edfi v\u00ec gi\u00e1 tr\u1ecb input \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o bi\u1ebfn `attrs`, c\u1ea7n ph\u1ea3i implement logic \u0111\u1ec3 check n\u00f3.\nN\u1ebfu c\u00f3 l\u1ed7i x\u1ea3y ra s\u1ebd return v\u00e0o bi\u1ebfn `errors` variable, n\u1ebfu kh\u00f4ng s\u1ebd truy\u1ec1n gi\u00e1 tr\u1ecb` null`.\n\u203b N\u00f3 s\u1ebd ch\u1ea1y \u0111\u00fang m\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i t\u1ef1 return ch\u00ednh n\u00f3\n\n#### todo-composite-view.js\n\nKhi th\u00eam TODO, t\u1ea1i th\u1eddi \u0111i\u1ec3m x\u1ea3y ra validation error tr\u00ean model, v\u00e0 b\u1eaft \u0111\u1ea7u x\u1eed l\u00fd s\u1ef1 ki\u1ec7n `invalid`.\n\n```diff:todo-composite-view.js\n //View cho TODO list\n define(function(require) {\n \tvar TodoItemView = require('views/todo-item-view');\n+\tvar TodoModel = require('models/todo-model');\n \n \tvar TodoCompositeView = Marionette.CompositeView.extend({\n \t\ttemplate: '#todo-composite-template',\n \n \t\tchildView : TodoItemView,\n \n \t\tchildViewContainer : 'tbody',\n \n+\t\tnewTodoModel : new TodoModel(),\n+\t\t\n \t\tui : {\n \t\t\taddTodo : '#addTodo',\n \t\t\tnewTodo : '#new-todo',\n \t\t\tuserList : '#user-list'\n \t\t},\n \n \t\tevents : {\n \t\t\t'click @ui.addTodo' : 'onCreateTodo',\n \t\t},\n \n \t\tinitialize: function(options){\n \t\t\t_.bindAll( this, 'onCreatedSuccess' );\n \t\t\tthis.userList = options.userList;\n+\t\t\tthis.listenTo(this.newTodoModel, 'invalid', this.renderErrorMessage);\n \t\t},\n \n \t\tonRender : function() {\n \t\t\t//Show user list\n \t\t\tthis.showUserList(this.ui.userList, this.userList);\n \t\t\t//M\u1eb7c \u0111\u1ecbnh hi\u1ec3n th\u1ecb cho nh\u1eefng ng\u01b0\u1eddi \u0111\u00e3 logged-in\n \t\t\tthis.ui.userList.val(window.application.loginUser.id);\n \t\t},\n \t\t\t\t\t\n \t\t//Show user list\n \t\tshowUserList : function($list, userList){\n \t\t\t$.each(userList, function(index, userModel) {\n \t\t\t\t$list.append(\n \t\t\t\t\t\"<option value='\" \n \t\t\t\t\t+ userModel.attributes.id + \"'>\"\n \t\t\t\t\t+ userModel.attributes.name + \"</option>\");\n \t\t\t});\n \t\t},\n \t\t\t\n \t\tonCreateTodo : function() {\n-\t\t\tthis.collection.create(this.newAttributes(), {\n+ \t\t\tthis.newTodoModel.clear({silent : true});\n+ \t\t\tthis.newTodoModel.set(this.newAttributes());\n+\t\t\tthis.collection.create(this.newTodoModel, {\n \t\t          silent:  true ,\n \t\t          success: this.onCreatedSuccess\n \t\t\t});\n \t\t\tthis.ui.newTodo.val('');\n \t\t},\n \n \t\tnewAttributes : function() {\n \t\t\treturn {\n \t\t\t\ttodo : this.ui.newTodo.val().trim(),\n \t\t\t\tstatus : 0,\n \t\t\t\tassignee : this.ui.userList.val()\n \t\t\t};\n \t\t},\n \n \t\tonCreatedSuccess : function(){\n \t\t\tthis.collection.fetch({ reset : true });\n \t\t},\n-\n+\t\t\n+\t\t//Error display\n+\t\trenderErrorMessage : function(errors){\n+\t\t\tvar message = '';\n+\t\t\tfor(var key in errors.validationError){\n+\t\t\t\tmessage += errors.validationError[key];\n+\t\t\t}\n+\t\t\talert(message);\n+\t\t}\n \t});\n \treturn TodoCompositeView;\n }); \n```\n\n- `newTodoModel : new TodoModel(),`\n\t- Th\u00eam m\u1ed9t model \u0111\u1ec3 x\u1eed l\u00fd cho vi\u1ec7c validation.\n        - Sau \u0111\u00f3 th\u00eam class `require` \u0111\u1ec3 require c\u00e1c th\u00e0nh ph\u1ea7n c\u1ea7n thi\u1ebft cho model.\n- H\u00e0m `initialize`\n\t- S\u1eed d\u1ee5ng h\u00e0m `listenTo` s\u1ebd th\u00eam h\u00e0m x\u1eed l\u00fd s\u1ef1 ki\u1ec7n cho s\u1ef1 ki\u1ec7n `invalid` event c\u1ee7a model nh\u01b0 m\u00f4 t\u1ea3 tr\u00ean kia (`this.renderErrorMessage`).\n- H\u00e0m `onCreateTodo`\n\t- B\u1ea1n ch\u1ec9 c\u1ea7n s\u1eed d\u1ee5ng duy nh\u1ea5t `this.collection.create`, tuy nhi\u00ean \u0111\u1ec3 ch\u1ea1y `valiate` c\u1ee7a model, ch\u00fang ta c\u1ea7n set gi\u00e1 tr\u1ecb c\u1ee7a model \u1edf h\u00e0m `set`. Th\u00eam v\u00e0o \u0111\u00f3, m\u00ecnh s\u1ebd x\u00f3a n\u1ed9i dung c\u1ee7a model \u1edf h\u00e0m `clear` tr\u01b0\u1edbc \u0111\u00f3.\n- H\u00e0m `renderErrorMessage`\n\t- \u0110\u00e2y l\u00e0 h\u00e0m x\u1eed l\u00fd s\u1ef1 ki\u1ec7n `invalid` c\u1ee7a model. S\u1eeda n\u1ed9i dung th\u00f4ng b\u00e1o l\u1ed7i s\u1ebd hi\u1ec3n th\u1ecb \u1edf `alert`.\n\n\n#### todo-detail-item-view.js\n\nTrong khi s\u1eeda TODO, khi validation error x\u1ea3y ra \u1edf model m\u00ecnh s\u1ebd ch\u1ea1y h\u00e0m x\u1eed l\u00fd s\u1ef1 ki\u1ec7n `invalid`.\n todo-composite-view.js m\u00ecnh g\u1ea7n nh\u01b0 implement t\u01b0\u01a1ng t\u1ef1.\n\n```diff:todo-detail-item-view.js\n //View trang detail\n define(function() {\n \tvar TodoDetailItemView = Marionette.ItemView.extend({\n \n \u301c \u4e2d\u7565 \u301c\n \n \t\t//Kh\u1edfi t\u1ea1o\n \t\tinitialize: function(options){\n \t\t\t_.bindAll( this, 'onSaveSuccess' );\n \t\t\tthis.userList = options.userList;\n+\t\t\tthis.listenTo(this.model, 'invalid', this.renderErrorMessage);\n \t\t},\n \n \t\tonRender : function() {\n \t\t\t//Show user list\n \t\t\tthis.showUserList(this.ui.userList, this.userList);\n \t\t\t//stata d\u00e0nh cho ng\u01b0\u1eddi \u0111\u01b0\u1ee3c ph\u00e2n c\u00f4ng\n \t\t\tthis.ui.userList.val(this.model.attributes.assignee);\n \t\t},\n \n \t\t//Show user list\n \t\tshowUserList : function($list, userList){\n \t\t\t$.each(userList, function(index, userModel) {\n \t\t\t$list.append(\n \t\t\t\t\"<option value='\" \n \t\t\t\t+ userModel.attributes.id + \"'>\"\n \t\t\t\t+ userModel.attributes.name + \"</option>\");\n \t\t\t});\n \t\t},\n \n \t\t//X\u1eed l\u00fd s\u1ef1 ki\u1ec7n click n\u00fat ch\u1ec9nh s\u1eeda (Update) \n \t\tonUpdateClick : function() {\n \t\t\t//L\u1ea5y c\u00e1c k\u00fd t\u1ef1 t\u1eeb checkbox\n \t\t\tvar todoString = this.ui.todoStatus.val();  // Todo\n \t\t\tvar assigneeId = this.ui.userList.val();\t// Assignee\n-\t\t\tthis.model.save({\n+\t\t\tthis.model.set({\n \t\t\t\ttodo : todoString,\n \t\t\t\tassignee : assigneeId\n-\t\t\t}, {\n+\t\t\t});\n+\t\t\tthis.model.save(null,{\n \t\t\t\tsilent : true,\n \t\t\t\tsuccess : this.onSaveSuccess,\n \t\t\t});\n \t\t},\n \n \t\t//X\u1eed l\u00fd s\u1ef1 ki\u1ec7n click n\u00fat Cancel \n \t\tonCancelClick : function() {\n \t\t\tthis.backTodoLists();\n \t\t},\n \n \t\t//Update success\n \t\tonSaveSuccess : function() {\n \t\t\tthis.backTodoLists();\n \t\t},\n \n \t\t//Chuy\u1ec3n sang m\u00e0n h\u00ecnh TODO list\n \t\tbackTodoLists : function() {\n \t\t\tBackbone.history.navigate('#todo-lists', true);\n+\n+\t\t},\n+\t\t\n+\t\t//Hi\u1ec3n th\u1ecb l\u1ed7i\n+\t\trenderErrorMessage : function(errors){\n+\t\t\tvar message = '';\n+\t\t\tfor(var key in errors.validationError){\n+\t\t\t\tmessage += errors.validationError[key];\n+\t\t\t}\n+\t\t\talert(message);\n \t\t}\n \n \t});\n \treturn TodoDetailItemView;\n });\n```\n\nB\u1edfi v\u00ec View n\u00e0y b\u1ea1n \u0111\u00e3 th\u1eeba k\u1ebf t\u1eeb `Marionette.ItemView`, V\u00ec v\u1eady b\u1ea1n c\u00f3 th\u1ec3 truy c\u1eadp v\u00e0o model qua `this.model`, m\u00ecnh implement g\u1ea7n nh\u01b0 gi\u1ed1ng h\u1ec7t ngo\u1ea1i tr\u1eeb todo-composite-view.js v\u00ec \u0111\u00e2y l\u00e0 n\u01a1i kh\u00f4ng sinh ra model.\n\n#### app.js\n\nB\u00e2y gi\u1edd m\u00ecnh s\u1ebd x\u1eed l\u00fd s\u1ef1 ki\u1ec7n HTTP status `400`.\n\n```diff:app.js\n //Application\n console.log('load app');\n define(function(require){\n\n \u301c \u4e2d\u7565 \u301c\n  \n    \n \t\t// t\u1ea5t c\u1ea3 c\u00e1c x\u1eed l\u00fd s\u1ef1 ki\u1ec7n b\u1eb1ng ajax \u1edf \u0111\u00e2y\n \t\tajaxErrorHandler : function(e, xhr, options , message){\n \t\t\tif( xhr.status === 401 ){\n \t\t\t\tthis.clearLoginUser();\n \t\t\t\t// N\u1ebfu unauthenticated b\u1ecf qua v\u00e0 chuy\u1ec3n v\u1ec1 m\u00e0n h\u00ecnh login\n \t\t\t\tBackbone.history.navigate('#login', {trigger : true, replace : true});\n-\t\t\t}else if(xhr.status >= 400 && xhr.status < 500){\n+\t\t\t}else if(xhr.status === 400){\n+\t\t\t\tif(xhr.responseJSON){\n+\t\t\t\t\tvar errors = xhr.responseJSON.errors;\n+\t\t\t\t\tvar msg = '';\n+\t\t\t\t\tfor(var key in errors){\n+\t\t\t\t\t\tfor(var idx in errors[key]){\n+\t\t\t\t\t\t\tmsg = msg + errors[key][idx] + '\\n';\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\talert(msg);\n+\t\t\t\t}else{\n+\t\t\t\t\talert(message);\n+\t\t\t\t}\n+\t\t\t}else if(xhr.status > 400 && xhr.status < 500){\n \t\t\t\t//Hi\u1ec3n th\u1ecb th\u00f4ng b\u00e1o t\u1eeb ClientError\n \t\t\t\talert(message);\n \t\t\t}else if(xhr.status >= 500 && xhr.status < 600){\n \t\t\t\t//Hi\u1ec3n th\u1ecb th\u00f4ng b\u00e1o t\u1eeb ServerError\n \t\t\t\talert(message);\n \t\t\t}\n \t\t},\n \n \t});\n \treturn Application;\n });\n```\n\nTr\u01b0\u1edbc \u0111\u00e2y m\u00ecnh c\u1ea7n x\u1eed l\u00fd ri\u00eang bi\u1ec7t HTTP status `400` v\u00e0 `500`, ch\u00fang ta \u0111\u00e3 th\u00eam m\u1ec7nh \u0111\u1ec1 if \u0111\u1ec3 x\u1eed l\u00fd ri\u00eang bi\u1ec7t ri\u00eang s\u1ed1 `400`.\nV\u00ec s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c JSON error response sau khi \u0111\u01b0\u1ee3c server x\u1eed l\u00fd t\u1ea1i `xhr.responseJSON`, s\u1eeda n\u00f3 v\u00e0 hi\u1ec3n th\u1ecb n\u00f3 v\u00e0o `alert`.\n\n### Th\u1ef1c h\u00e0nh\n\nH\u00e3y ki\u1ec3m tra c\u00e1c b\u1ea1n \u0111\u00e3 th\u1ef1c hi\u1ec7n \u0111\u1ea7y \u0111\u1ee7 c\u00e1c b\u01b0\u01a1c sau ch\u01b0a\n\n- :white_check_mark: S\u1eeda theo m\u00f4 t\u1ea3 tr\u00ean `app/webroot/js/models/todo-model.js`.\n- :white_check_mark: S\u1eeda theo m\u00f4 t\u1ea3 tr\u00ean `app/webroot/js/views/todo-composite-view.js`.\n- :white_check_mark: S\u1eeda theo m\u00f4 t\u1ea3 tr\u00ean `app/webroot/js/views/todo-detail-item-view.js`.\n- :white_check_mark: S\u1eeda theo m\u00f4 t\u1ea3 tr\u00ean `app/webroot/js/app.js`.\n- :white_check_mark: Ki\u1ec3m tra k\u1ebft qu\u1ea3\n\t- H\u00e3y ki\u1ec3m tra b\u1eb1ng c\u00e1c thao t\u00e1c tr\u00ean tr\u00ecnh duy\u1ec7t\n- :white_check_mark: Commit l\u00ean Git\n\n**:warning: Tham kh\u1ea3o thay \u0111\u1ed5i d\u1ea1ng Diff tr\u00ean Github**\n\n[Ch\u01b0\u01a1ng 7 : B\u00e0i 2 Client-side \u00b7 suzukishouten-study/rest-study@c0ae3e1](https://github.com/suzukishouten-study/rest-study/commit/c0ae3e1fb86ed98466c7dd0a4b10724b21f4ccc5)\n\n\u0110\u00f3 l\u00e0 t\u1ea5t c\u1ea3 c\u1ee7a b\u00e0i h\u1ecdc n\u00e0y\n\n## Gi\u1edbi thi\u1ec7u\n\u1ede b\u00e0i h\u1ecdc sau ch\u00fang ta s\u1ebd b\u1eaft \u0111\u1ea7u s\u1eed d\u1ee5ng Bootstrap \u0111\u1ec3 l\u00e0m giao di\u1ec7n \u0111\u1eb9p h\u01a1n v\u00e0 c\u00e1c hi\u1ec7u \u1ee9ng hay ho, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 l\u00ean trang ch\u1ee7 bootstrap \u0111\u1ec3 l\u00e0m quen tr\u01b0\u1edbc.\n\n## R\u1ea5t mong nh\u1eadn \u0111\u01b0\u1ee3c ph\u1ea3n h\u1ed3i/ g\u00f3p \u00fd c\u1ee7a c\u00e1c b\u1ea1n\n\nC\u1ea3m \u01a1n c\u00e1c b\u1ea1n \u0111\u00e3 \u0111i c\u00f9ng v\u1edbi series n\u00e0y, m\u00ecnh s\u1ebd c\u1ed1 g\u1eafng truy\u1ec1n \u0111\u1ea1t t\u1ed1t nh\u1ea5t \u00fd \u0111\u1ed3 c\u1ee7a t\u00e1c gi\u1ea3 t\u1edbi c\u00e1c b\u1ea1n, tuy nhi\u00ean ch\u1eafc ch\u1eafn v\u1eabn c\u00f2n r\u1ea5t nhi\u1ec1u sai s\u00f3t v\u00e0 m\u00ecnh s\u1ebd update th\u01b0\u1eddng xuy\u00ean v\u00e0 ch\u1ec9nh s\u1eeda c\u00e1c b\u00e0i vi\u1ebft c\u0169, r\u1ea5t mong nh\u1eadn d\u01b0\u1ee3c nh\u1eefng ph\u1ea3n h\u1ed3i qu\u00fd b\u00e1u c\u1ee7a c\u00e1c b\u1ea1n \u0111\u1ec3 nh\u1eefng b\u00e0i vi\u1ebft c\u1ee7a m\u00ecnh c\u00f3 ch\u1ea5t l\u01b0\u1ee3ng h\u01a1n.\n", "tags": ["PHP", "Backbone.js", "AWS", "amazonEC2", "PHPCake"]}