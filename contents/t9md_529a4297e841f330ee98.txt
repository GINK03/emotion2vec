{"context": "\u6700\u8fd1 Haskell\u3092\u5b66\u3073\u59cb\u3081\u305f\u3070\u304b\u308a\u3060\u304c\u3001Haskell \u306e\u96e3\u3057\u3055\u306b\u3064\u3044\u3066\u3001\u601d\u3044\u3064\u304f\u307e\u307e\u306b dump \u3057\u305f\u3002\n\u5b66\u3073\u59cb\u3081\u3066\uff12\u9031\u9593\u7a0b\u5ea6\u306e\u521d\u5fc3\u8005\u306a\u306e\u3067\u9593\u9055\u3044\u591a\u6570\u3042\u308b\u304b\u3082\u3002\u968f\u6642\u4fee\u6b63\u3057\u3088\u3046\u3002\n\u81ea\u5206\u7528\u306e\u66f8\u304d\u6563\u3089\u3057\u3002\n\u4ed6\u4eba\u304c\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306b\u66f8\u304f\u3068\u3044\u3046\u306e\u306f\u512a\u5148\u5ea6\u3068\u3057\u3066\u4f4e\u304f\u3001\u81ea\u5206\u306e\u7406\u89e3\u30e1\u30e2\u3092 dump \u3057\u3068\u3044\u3066\u9699\u9593\u6642\u9593\u306b iPhone \u3067\u898b\u3066\u304a\u3055\u3089\u3044\u3059\u308b\u306e\u304c\u4e3b\u76ee\u7684\u3002\n\u81ea\u5206\u304c\u3061\u3083\u3093\u3068\u7406\u89e3\u3057\u304d\u3063\u305f\u3089\u6574\u7406\u3057\u3066\u7dba\u9e97\u306b\u3057\u3066\u306f\u884c\u304d\u305f\u3044\u3051\u3069\u3082\u3002\u3002\u3002\n\nDivide and conquer strategy for learning Haskell\nHaskell \u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u306e\u96e3\u3057\u3055\u306b\u306f\u8272\u3005\u306a\u96e3\u3057\u3055\u304c\u6df7\u5408\u3057\u3066\u3044\u308b\u3002\nHaskell \u306f\u4ed6\u306e\u591a\u304f\u306e\u4e3b\u6d41\u8a00\u8a9e(C, Java, JavaScript, Python..)\u3068\u9055\u3046\u3068\u3053\u308d\u304c\u6ca2\u5c71\u3002\n\u9055\u3044\u306f\u3001\u7528\u8a9e\u3084\u3001\u6982\u5ff5(concept)\u3001\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u3001\u5fc5\u8981\u3068\u306a\u308b\u80cc\u666f\u77e5\u8b58\u7b49\u3001\u591a\u5c90\u306b\u6e21\u308b\u3002\n\u3053\u308c\u3089\u306e\u9055\u3044\u304c\u81a8\u5927\u3059\u304e\u3066\u3001\u5727\u5012\u3055\u308c(overwhelmed)\u3001\u8fd4\u308a\u8a0e\u3061\u306b\u5408\u3044\u3001\u8ae6\u3081\u308b\u3068\u3044\u3046\u306e\u304c\u826f\u304f\u3042\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u8a33\u306e\u5206\u304b\u3089\u3093\u70b9\u304c\u3042\u307e\u308a\u306b\u591a\u3044\u304b\u3089\u5727\u5012\u3055\u308c\u3001\u606f\u304c\u3067\u304d\u306a\u304f\u3066\u7a92\u606f\u3059\u308b\u8a33\u3060\u304c\u3001\u7406\u89e3\u3067\u304d\u308b\u90e8\u5206\u3092\u5c11\u3057\u305a\u3064\n\u5897\u3084\u3057\u3066\u3044\u3051\u3070\u3001\u5f53\u7136\u306a\u304c\u3089\u5727\u5012\u3055\u308c\u308b\u90e8\u5206\u306f\u5c11\u306a\u304f\u306a\u308a\u3001\u606f\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u6700\u7d42\u7684\u306b\u306f\u697d\u3057\u3093\u3067\u8aad\u307f\u66f8\u304d\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u306f\u305a\u3060\u3002\n\u4f8b\u3048\u3070\u7b2c\u4e00\u7d1a\u95a2\u6570(first-class function)\u3068\u304b\u3001\u9ad8\u968e\u95a2\u6570(higher-order-function)\u3068\u304b\u3001Haskell \u3058\u3083\u306a\u304f\u3066\u3082\u3001Lisp \u3084 JavaScript \u3067\u3082\u51fa\u3066\u304f\u308b\u3002\n\u3053\u3046\u3044\u3046\u6982\u5ff5\u3001\u6280\u306f\u6700\u521d\u306b\u51fa\u4f1a\u3063\u305f\u6642\u306f\u8a33\u308f\u304b\u3089\u3093\u3057\u3001\u8272\u3005\u3068\u5f15\u3063\u304b\u304b\u308b\u3082\u3093\u3060\u304c\u3001\u4e00\u5ea6\u7406\u89e3\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u5225\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067 higher-order-function \u3068\u304b\u8a00\u308f\u308c\u3066\u3082\u7406\u89e3\u3067\u304d\u308b\u3082\u3093\u3060\u3002\n\u9ad8\u968e\u95a2\u6570\u3092\u7406\u89e3\u3057\u3066\u3044\u306a\u3044\u3068\u3001Haskell \u3092\u305d\u306e\u5206\u96e3\u3057\u304f\u611f\u3058\u308b\u304c\u3001\u305d\u308c\u306f \"Haskell \u81ea\u4f53\"\u306e\u96e3\u3057\u3055\u3067\u306f\u306a\u3044\u3068\u3082\u8a00\u3048\u308b\u3002\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u3068\u304b\u3082\u305d\u3046\u3067\u3001\u4f8b\u3068\u3057\u3066\u77e5\u3089\u3093\u7528\u8a9e\u3001\u6570\u5217\u304c\u51fa\u3066\u304f\u308b\u3068\u96e3\u3057\u3044\u3068\u611f\u3058\u656c\u9060\u3057\u3066\u3057\u307e\u3046\u304c\u3001\u3053\u308c\u306f Haskell \u306e\u96e3\u3057\u3055\u3068\u306f\u76f4\u63a5\u95a2\u4fc2\u306a\u304f\u3001\u305d\u3082\u305d\u3082\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u3092\u77e5\u3063\u3066\u3044\u308b\u304b\uff1f\u77e5\u3063\u3066\u3044\u306a\u3044\u304b\u3068\u3044\u3046\u3060\u3051\u306e\u4e8b\u3060\u3063\u305f\u308a\u3059\u308b\u3002\nHaskell \u306e\u96e3\u3057\u3055\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30c6\u30af\u30cb\u30c3\u30af\u3001\u30c7\u30fc\u30bf\u69cb\u9020\u3001\u7528\u8a9e\u30fb\u6982\u5ff5\u306e\u96e3\u3057\u3055\u7b49\u3001\u8af8\u3005\u306e\u96e3\u3057\u3055\u306e\u7dcf\u5408\u3060\u3002\n\u5206\u304b\u3089\u306a\u3044\u70b9\u3092\u7d30\u304b\u304f\u5206\u5272\u30fb\u5206\u985e\u3057\u3001\u5206\u5272\u3057\u305f\u72ed\u3044\u7bc4\u56f2\u3067\u3001\u307b\u308f\u307b\u308f\u306a\u8f2a\u90ed\u3092\u660e\u78ba\u5316\u3057\u3066\u3044\u304f\u3057\u304b\u7121\u3044\u3002\n\n\u7528\u8a9e\u306e\u96e3\u3057\u3055(terminologies.. It involve translation difficulties)\n\n\u6570\u5b66\u306e\u7279\u5b9a\u5206\u91ce\u306e\u7528\u8a9e\u3001\u6982\u5ff5\u306e\u96e3\u3057\u3055(\u570f\u8ad6(category theory)\u3068\u304b\u3002) \u2192 \u7121\u8996\u3059\u308b\u3079\u3057\u3002\u5fd8\u308c\u308b\u3079\u3057\u3002\n\u30e2\u30ca\u30c9\u3001\u526f\u4f5c\u7528\u3001\u4f5c\u7528\u3001\u7d14\u7c8b\u95a2\u6570\u3001\n\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30d1\u30e9\u30c0\u30a4\u30e0(\u4f55\u3092\u4e3b\u8ef8\u306b\u636e\u3048\u3066\u3044\u308b\u304b)\u306e\u96e3\u3057\u3055\u3002\n\n\u95a2\u6570\u578b(functional programming), \u547d\u4ee4\u5f62(imperative programming), \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411(Object oriented)\nFunctional programming: (\u4e3b\u8ef8) = \u5024\u3092\u4f5c\u308a\u51fa\u3059(=\u8a08\u7b97\u3059\u308b), calculate value by function.\nImperative programming: (\u4e3b\u8ef8) = order then execute without no delay. \u6307\u793a\u3092\u4e0e\u3048\u3066\u3001\u6b21\u3005\u3084\u3063\u3066\u3044\u304f\u3002\u6307\u793a\u3092\u4e0e\u3048\u308b \u2192 \u4eca\u3084\u308c\uff01\n\n\n\u9045\u5ef6\u8a55\u4fa1\u306e\u96e3\u3057\u3055\n\n\u8a55\u4fa1\u6226\u7565\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308b\u3002\u3069\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067 evaluate \u3055\u308c\u308b\u304b\uff1f\u8a55\u4fa1\u6226\u7565\u306b\u306f\uff12\u7a2e\u985e\u3042\u308b\n\n\n\u6b63\u683c\u8a55\u4fa1\u6226\u7565 vs \u9045\u5ef6\u8a55\u4fa1\u6226\u7565(strict evaluation strategy vs lazy evaluation strategy)\n\n\norder of evaluation\npurity is mandatory to achieve lazy evaluation\npattern match drives evaluation: \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u5024\u8a55\u4fa1\u3092\u8981\u8acb\u3059\u308b\u3002\u305f\u3060\u3057\u5fc5\u8981\u306a\u91cf\u306e\u307f\u3002\nthunk \u3068\u306f\uff1f(\u8a55\u4fa1\u524d\u306eexpression\u3002expression \u81ea\u4f53). thunk \u304c evaluate \u3055\u308c\u3066 value \u306b\u306a\u308b\u3002\n\n\n\u7d14\u7c8b\u95a2\u6570(Pure function)\u3068\u306f\uff1f\n\n\u526f\u4f5c\u7528\u3068\u306f\uff1f: \u5916\u754c\u3068\u306e\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u3066\u3002\u5916\u90e8\u306f\u6c5a\u308c\u3066\u3044\u308b\u304b\u3089\u5916\u754c\u3068\u3084\u308a\u53d6\u308a\u3059\u308b\u3068\u3001\u540c\u3058\u5f15\u6570\u4e0e\u3048\u3066\u3082\u3001\u5b9f\u884c\u7d50\u679c\u304c\u540c\u3058\u306b\u306a\u308b\u3068\u306f\u4fdd\u8a3c\u3067\u304d\u306a\u3044\uff1f\u2192\u975e\u7d14\u7c8b\n\n\n\u65e5\u672c\u8a9e\u3078\u306e\u7ffb\u8a33\u306e\u96e3\u3057\u3055\nevaluation strategy, side effects, type class, reduce etc...,\nHaskell\u306b\u9650\u3089\u306a\u3044\u304c\u3001\u30c9\u30f3\u30d4\u30b7\u30e3\u306e\u5bfe\u8a33\u304c\u306a\u3044\u5834\u5408\u3082\u591a\u3044\u306e\u3067\u3001\u65e5\u672c\u8a9e\u306b\u3057\u305f\u5834\u5408\u306b\u539f\u8a9e(\u82f1\u8a9e)\u306e\u30cb\u30e5\u30a2\u30f3\u30b9\u304c\u5c11\u306a\u304b\u3089\u305a\u6d88\u3057\u53bb\u3089\u308c\u308b\u3002\u91cd\u8981\u306a\u7528\u8a9e(terminology)\u306f\u82f1\u8a9e\u306e\u30de\u30de\u3067\u7406\u89e3\u3057\u3088\u3046\u3068\u52aa\u3081\u3001\u7406\u89e3\u306b\u305f\u3069\u308a\u7740\u304f\u305f\u3081\u306e\u8db3\u304c\u304b\u308a\u3068\u3057\u3066\u3001\u6bcd\u56fd\u8a9e\u3067\u3042\u308b\u65e5\u672c\u8a9e\u306e\u52a9\u3051\u3092\u501f\u308a\u308b\u3001\u3068\u3044\u3046\u59ff\u52e2\u304c\u826f\u3044\u3002\n\u306a\u306e\u3067\u3001type class \u4e00\u3064\u3068\u3063\u3066\u3082\u3001class \u3092\u4e00\u3064\u306e\u7528\u8a9e\u306b\u7ffb\u8a33\u3057\u3066\u6e80\u8db3\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001class \u3068\u3044\u3046\u7528\u8a9e\u304c\u6301\u3064\u69d8\u3005\u306a\u30a4\u30e1\u30fc\u30b8\u3092\u901a\u3057\u3066 type class \u3068\u3044\u3046\u8a00\u8a9e\u3092\u6d88\u5316\u3057\u305f\u65b9\u304c\u5e83\u304c\u308a\u304c\u51fa\u308b\u6c17\u304c\u3059\u308b\u3002\nreduce \u306f\"\u6e1b\u3089\u3059\", \"\u307e\u3068\u3081\u308b\", \"\u9084\u5143\"\u3068\u304b\u306e\u610f\u5473\u304c\u3042\u308b\u304c\u3001\u3069\u308c\u304b\u4e00\u3064\u306e\u307f pick \u3059\u308b\u3068\u4ed6\u306e\u30cb\u30e5\u30a2\u30f3\u30b9\u304c\u6d88\u3048\u308b\u3001\u8584\u307e\u308b\u3002\u3082\u3063\u305f\u3044\u306a\u3044\u3002\n\n\u6163\u308c\u306e\u554f\u984c\n\nmap, reduce, fold \u81ea\u4f53\u306b\u4ed6\u306e\u8a00\u8a9e\u3067\u6163\u308c\u3066\u3044\u308b\u304b\uff1f\uff1f\n\n\n\u518d\u5e30\u306e\u96e3\u3057\u3055\nfor \u30eb\u30fc\u30d7\u3088\u308a\u306f\u3001recursive function \u3067\u8868\u73fe\u3059\u308b\u50be\u5411\u3002\nRecursive function \u306f stop \u6761\u4ef6\u304c\u809d(=\u5fc5\u9808)\u3002empty list([]) \u3067 stop \u304c\u5b9a\u756a\u3002\n\n\u578b\u306e\u96e3\u3057\u3055\n\ndynamic language vs typed language\ntype inference(\u578b\u985e\u63a8)\n\u578b\u306f\u90aa\u9b54\u8005\u304b\uff1f\u2192\u8a00\u8a9e\u306b\u3088\u308b\u2192\u578b\u985e\u63a8\u304c\u3042\u308b\u3068\u578b\u3092\u66f8\u304f\u306e\u3092\u30b5\u30dc\u308c\u308b\u3002\u2192\u30e1\u30ea\u30c3\u30c8\u5927\u304d\u3044 \u2192\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u52a9\u3051\u3066\u304f\u308c\u308b\u3002\nnull \u304c\u3042\u308b\uff1f\u2192 \u7121\u3044\u6c17\u304c\u3059\u308b\u3002\u3002\u3069\u3046\u306a\u3093\u3060\u308d\u3046\nMaybe \u578b\u306b\u3064\u3044\u3066: \u5024\u304c\u8fd4\u3063\u3066\u304f\u308b\u304b\u3082\u77e5\u308c\u306a\u3044\u3057\u3001\u3053\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002Maybe \u306f\u578b\u3068\u3057\u3066\u5024\u304c\u306a\u3044\u5834\u5408\u3082\u3042\u308b(=Nothing)\u53ef\u80fd\u6027\u3092\u8868\u660e\u3059\u308b\u3002Maybe \u3092\u53d7\u3051\u53d6\u308b\u95a2\u6570\u306f Just \u3068 Nothing \u3092 handling \u3059\u308b\u4e8b\u3092\u5f37\u5236\u3055\u308c\u308b(??? exhaustiveness check in haskell?). \u3060\u304b\u3089\u4e88\u60f3\u5916\u306b null \u3084 undefined \u304c\u8fd4\u3063\u3066\u304d\u3066 runtime error \u306b\u6210\u308b\u3053\u3068\u304c\u306a\u3044\u3002\u306a\u305c\u306a\u3089 \u4e88\u60f3\u306e\u7bc4\u56f2 \u3060\u304b\u3089\u3060\u30ac\u30cf\u30cf\u30cf\u30cf\u3002\n\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1: in function definition, case, guard with pipe(|).\n\n\nfib 0 = 0 \u306f \"fib 0(\u306e\u5834\u5408)\u306f0\u306b\u7b49\u3057\u3044(=\u50240\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u308b)\"\u3068\u8a00\u3063\u3066\u3044\u308b\u3002\n\nfib 1 = 1 \u306f \"fib 1(\u306e\u5834\u5408)\u306f1\u306b\u7b49\u3057\u3044(=\u50241\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u308b)\"\u3068\u8a00\u3063\u3066\u3044\u308b\u3002\n\nfib n = fib (n-1) + fib (n-2): fib n\u306f fib (n-1)\u306e\u8a08\u7b97\u7d50\u679c\u3068fib (n-2)\u306e\u8a08\u7b97\u7d50\u679c\u3092\u8db3\u3057\u5408\u308f\u305b\u305f\u3082\u306e\u3001\u3068\u8a00\u3063\u3066\u3044\u308b\u3002\u5b9a\u7fa9\u306f fib \u81ea\u4f53\u3092\u542b\u3080\u306e\u3067\u518d\u5e30\u547c\u3073\u51fa\u3057\u306b\u306a\u308b(fib n \u306f\u518d\u5e30\u3092\u5b9a\u7fa9\u3001\u518d\u5e30\u3092\u4f7f\u3063\u3066\u8868\u73fe(=express)\u3055\u308c\u3066\u3044\u308b)\u3002n \u306f\u6e1b\u3063\u3066\u3044\u304f\u306e\u3067\u3001\u6700\u7d42\u7684\u306b fib 0 or fib 1\u306b\u3076\u3061\u5f53\u305f\u308astop\u3059\u308b\u306e\u3067\u5b89\u5fc3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u6b62\u307e\u308a\u307e\u3059\u3088\u3002\n\n\n\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n\u2192 \u578b\u3092\u4f5c\u308b\u95a2\u6570\u3002data Foo = FooConstructor Int \u3068 Foo \u578b\u3092\u5b9a\u7fa9\u3057\u305f\u6642\u306e FooConstructor \u306f Foo \u578b\u3092\u3064\u304f\u308b(construct)\u95a2\u6570(FooConstructor :: Int -> Foo)\u3002Int \u3092\u6e21\u3059\u3068\u3001Foo \u578b\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\n\u578b\u30af\u30e9\u30b9(type class): \u2192 class \u306f\u7a2e\u3001\u30b0\u30eb\u30fc\u30d7 \u2192\u578b\u7a2e \u2192 Int, Float \u306f Num Type class \u306e\u30e1\u30f3\u30d0\u3002Type class \u306e\u30e1\u30f3\u30d0\u306b\u306f\u5236\u7d04\u304c\u8ab2\u305b\u3089\u308c\u308b\u3002Num \u306f (+) \u95a2\u6570\u5b9f\u88c5\u3057\u308d\u3001\u3068\u304b\u3002set of types which share some characteristics. \u578b\u306e\u96c6\u5408\u3001\u30b0\u30eb\u30fc\u30d7\u3002\u540c\u3058 Type class \u306b\u5c5e\u3059\u308b type \u306f\u5171\u901a\u306e\u7279\u5fb4\u3001\u5236\u7d04\u3092\u6301\u3064\u3002\n\n\n\u578b\u30b7\u30b0\u30cb\u30c1\u30e3(type signature)\u306e\u96e3\u3057\u3055\nCurrying \u7406\u89e3\u3059\u308b\u3068\u3057\u3063\u304f\u308a\u6765\u308b\u3002\n\n\u30ab\u30ea\u30fc\u5316\u306e\u96e3\u3057\u3055(currying, partial application)\n\nHaskell \u306e\u5168\u3066\u306e\u95a2\u6570\u306f\u5f15\u6570\u3092\u4e00\u3064\u53d6\u308b\u95a2\u6570. \u8907\u6570\u5f15\u6570\u3092\u6e21\u3057\u3066\u3044\u308b\u69d8\u306b\u898b\u3048\u308b\u304c\u3001\"\u5f15\u6570\u6e21\u3059 \u2192 \u95a2\u6570\u8fd4\u308b \u2192\u5f15\u6570\u6e21\u3059 \u2192 \u95a2\u6570\u8fd4\u308b \u2192 \u5f15\u6570\u6e21\u3059 \u2192 \u5024\u8fd4\u308b\"\n\u7121\u540d\u95a2\u6570(anonymous function)\n\u8907\u6570\u5f15\u6570\u3068\u308b(\u3088\u3046\u306b\u898b\u3048\u308b)\u95a2\u6570\u5b9a\u7fa9\u306f\u3001syntax sugar \u306e\u304a\u304b\u3052\n\n\n\n\\s1 s2 s3 -> s1 ++ s2 ++ s3 is\n\n\\s1 -> (\\s2 -> (\\s3 -> s1 ++ s2 + s3)): using closure to bind passed args to env one by one?\n\n\n\n\n\u30dd\u30a4\u30f3\u30c8\u30d5\u30ea\u30fc(Point free) \u95a2\u6570\uff1f\uff1f\uff1f\n\n\nf1 x = f2 x \u306f f1 = f2\u3068\u66f8\u3051\u308b\u3088\u306d\uff1f\n\nf1 x = f2 y x \u3082\u3001\u305d\u3046\u66f8\u304f\u3088\u308a f1 = f2 y\u3068\u66f8\u3044\u305f\u307b\u3046\u304c cool\u3058\u3083\u306a\u3044\uff1f\u2192\u3053\u308c\u304c\u6210\u308a\u7acb\u3064\u306e\u306f\u95a2\u6570\u304c\u5168\u3066currying\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u3002f2\u306by\u306e\u307f\u6e21\u3057\u3066\u8fd4\u3063\u3066\u304d\u305f\u95a2\u6570\u3092 f1\u306bbind \u3057\u3066\u3044\u308b\u3002flip \u3068\u304b\u99c6\u4f7f\u3059\u308c\u3070\u5f15\u6570\u306e\u6e21\u3059\u9806\u756a\u5909\u3048\u3089\u308c\u308b\u304b\u3089\u3001\u9811\u5f35\u308c\u3070\u8272\u3093\u306a\u95a2\u6570\u3092 pointfree \u306b\u51fa\u6765\u308b\u3088 \u2192 \u3084\u308a\u3059\u304e\u308b\u306a\u3002\n\n\n\u95a2\u6570\u5408\u6210(function composition)\u306e\u96e3\u3057\u3055\n\n\n(.) \u306f\u9006\u30d1\u30a4\u30d7(|). \u5de6\u304b\u3089\u53f3\u3067\u306f\u306a\u304f\u3001\u53f3\u304b\u3089\u5de6\u3078\u3002\n\n\n\u306a\u305c\u4ee3\u5165(assign)\u3068\u8a00\u308f\u305a\u306b\u3001\u675f\u7e1b(=bind) \u3068\u8a00\u3046\u306e\u304b\uff1f(Why bind instead of assign?)\n\u5024\u306f\u5909\u66f4\u4e0d\u53ef(=immutable) \u3060\u304b\u3089\u3002\u7bb1\u306b\u5024\u3092\u5165\u308c\u308b\u3001\u7bb1\u306e\u4e2d\u8eab\u306e\u5165\u308c\u66ff\u3048\u308b\u30a2\u30ca\u30ed\u30b8\u30fc\u306f\u4e0d\u9069\u5207\u3002\u5909\u6570\u3068\u3044\u3046\u7528\u8a9e\u3082\u5909\u5316\u3057\u306a\u3044\u306e\u3067\u4e0d\u9069\u5207\uff1f\"\u540d\u524d\u306b\u5024\u3092\u7d10\u4ed8\u3051\u308b\"\u610f\u56f3\u3067bind\u3068\u8a00\u3046\u3002\nx = 1 \u3068\u3044\u3046 expression \u306b\u304a\u3051\u308b\u3001= \u306f\u4ee3\u5165\u3067\u306f\u306a\u304f\u3001\"\u672a\u6765\u6c38\u52ab x \u306f 1 \u3067\u3059\" \u3068\u3044\u3046\u5ba3\u8a00\u3001\u8868\u660e\u3067\u3042\u308b\u3002\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306e\u96e3\u3057\u3055(stack, haskell-platform)\n\n\u60c5\u5831\u306e\u5c11\u306a\u3055\u306e\u96e3\u3057\u3055\n\nJs\u3068\u6bd4\u3079\u3066\u308b\u3060\u3051\uff1fWeb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u304c\u5c11\u306a\u3044\uff1f\u5411\u3044\u3066\u306a\u3044\uff1f\u82f1\u8a9e\u3060\u3068\u6709\u7528\u30ea\u30bd\u30fc\u30b9\u3044\u3063\u3071\u3044\u3042\u308b\u6c17\u304c\u3059\u308b\u3002\n\u3069\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3048\u3070\u826f\u3044\uff1fjump, haskell is easy\n\n\n\n\u5f97\u610f\u5206\u91ce\u306e\u5411\u304d\u4e0d\u5411\u304d\u306e\u96e3\u3057\u3055\n\nXXX \u3064\u304f\u308b\u306e\u306b\u5411\u3044\u3066\u3044\u308b\uff1f State of the Haskell ecosystem\n\n\n\n\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u7406\u89e3\u306e\u96e3\u3057\u3055\n\nTree, Binary Tree(\u4e8c\u5206\u6728), Linked \u30ea\u30b9\u30c8, \u518d\u5e30\u30c7\u30fc\u30bf\u69cb\u9020(Recursive data structure)\n\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u96e3\u3057\u3055\n\nquick-sort \u306e\u4f8b\u3002quick-sort \u7406\u89e3\u3057\u3066\u308b\u304b\uff1f\n\n\n\u7d50\u5408\u6027(Associativity), \u7d50\u5408\u5f37\u5ea6(Priority)\u306e\u96e3\u3057\u3055\n\n\u5de6\u7d50\u5408(left-associate):\n\n\nfunction application \u306f left-associate. f a b c is ((f a) b) c\n\n\n\n\u53f3\u7d50\u5408(right-associate)\n\n\n\u95a2\u6570\u306e\u578b\u5b9a\u7fa9\u306fright-associate. add:: Int -> Int -> Int -> Int is add:: Int -> (Int -> (Int -> Int))\n\n\n\n\u5f37\u5ea6(priority, strength)\n\n------------------------- \u3053\u3053\u304b\u3089\u4e0b\u306f\u96d1\u591a\u30e1\u30e2(\u6574\u7406\u524d)\n\n\u95a2\u6570\u5b9a\u7fa9\u306b\u304a\u3051\u308b\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\nHaskell \u306e \u5168\u3066 \u306e\u95a2\u6570\u306f\u5f15\u6570\u3092\u4e00\u3064\u3057\u304b\u53d6\u3089\u306a\u3044\u3002\n\u8907\u6570\u5f15\u6570\u3092\u53d6\u308b\u3088\u3046\u306b\u898b\u3048\u308b\u95a2\u6570\u306f\u3001\u4e00\u3064\u306e\u5f15\u6570\u3092\u53d6\u308a\u3001\u95a2\u6570\u3092\u8fd4\u3059\u95a2\u6570\u3068\u3057\u3066\u8868\u73fe\u3055\u308c\u308b\u3002(\u305d\u306e\u95a2\u6570\u306f\u6b21\u306e\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308a\u3001\u95a2\u6570\u3092\u8fd4\u3059)\n\u4ee5\u4e0b\u306f\u5168\u3066\u540c\u3058\u95a2\u6570\u3002\u8907\u6570\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u95a2\u6570\u306e\u5b9a\u7fa9\u306f\u5358\u306b\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u306b\u904e\u304e\u306a\u3044\u3002\n\u4ee5\u4e0b\u306f\u5168\u3066\u540c\u3058\u95a2\u6570\n\n\nf = \\x -> (\\y -> (\\z -> BODY)): \u6700\u3082\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306a\u8868\u73fe\n\nf = \\x y z -> BODY: syntax sugar\n\nf x y z = BODY: syntax sugar =\u306e\u53f3\u5074\u306e\u5f15\u6570\u90e8\u5206(x, y, z)\u3092=\u306e\u5de6\u5074\u3078\u79fb\u52d5\n\n-- f = \\x -> (\\y -> (\\z -> BODY))\nf1 = \\x -> (\\y -> (\\z -> x ++ y ++ z))\n-- f = \\x y z -> BODY\nf2 = \\x y z -> x ++ y ++ z\n-- f x y z = BODY\nf3 x y z = x ++ y ++ z\nmain = do\n  print (\"f1 \" ++ (f1 \"a\" \"b\" \"c\")) -- => \"f1 abc\"\n  print (\"f2 \" ++ (f2 \"a\" \"b\" \"c\")) -- => \"f2 abc\"\n  print (\"f3 \" ++ (f3 \"a\" \"b\" \"c\")) -- => \"f3 abc\"\n\n\u4e0a\u8ff0\u306e\u901a\u308a\u3001\u5168\u3066\u306e\u95a2\u6570\u306f\uff11\u3064\u306e\u307f\u306e\u5f15\u6570\u3092\u3068\u308b\u304c\u3001tuple \u3092\u4f7f\u3063\u3066\u3001\u8907\u6570\u5f15\u304d\u6570\u306e\u95a2\u6570\u3092\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u3053\u3068\u306f\u53ef\u80fd\n\nParametric polymorphism\n\u30d1\u30e9\u30e1\u30bf\u30ea\u30c3\u30af\u30fb\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\n\u30d1\u30e9\u30e1\u30bf\u591a\u76f8\n\u2192 \u578b\u306f\u30d1\u30e9\u30e1\u30bf\u306b\u3088\u3063\u3066\u7279\u5b9a\u3055\u308c\u308b(\u6c7a\u307e\u308b)\n\u2192 \u578b\u304c\u30d1\u30e9\u30e1\u30bf\u5316\u3055\u308c\u3066\u3044\u308b(\u578b\u3092\u30d1\u30e9\u30e1\u30bf(\u5f15\u304d\u6570)\u306b\u3088\u3063\u3066\u4e0e\u3048\u308b)\n\nType class constrains(\u578b\u30af\u30e9\u30b9\u306b\u5bfe\u3059\u308b\u5236\u7d04)\ninstance (Listable a, Listable b) => Listable (a,b) where\n  toList (x,y) = toList x ++ toList y\n\n\u8272\u3005\u306a\u8a00\u3044\u65b9\u3092\u3057\u3066\u307f\u308b\u3002\n- a \u304c Listable \u304b\u3064\u3001b \u304c Listable \u3067\u3042\u308b\u9650\u308a\u306b\u304a\u3044\u3066\u3001type (a, b) \u306f Listable\n- if Listable a and Listable b then (a, b) is Listable else (a, b) isnot Listable\n- Listable (a, b) \u3092\u6e80\u305f\u3059\u306b\u306f\u3001Listable a, Listable b \u3092\u540c\u6642\u306b\u6e80\u305f\u3055\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\n\u9045\u5ef6\u8a55\u4fa1\u6226\u7565\u306e\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001\u95a2\u6570\u306e\u53c2\u7167\u900f\u660e\u6027\u304c\u5fc5\u8981\u3060\u3063\u305f\u3002\n\ncis194 spring 13 chapter6 laziness \u306e\u629c\u7c8b\n\nAs we have seen, lazy evaluation makes it hard to reason about when things will be evaluated; hence including side effects in a lazy language would be extremely unintuitive. Historically, this is the reason Haskell is pure: initially, the designers of Haskell wanted to make a lazy functional language, and quickly realized it would be impossible unless it also disallowed side effects.\n\n[\u7ffb\u8a33]\n\u3053\u308c\u307e\u3067\u898b\u3066\u304d\u305f\u3088\u3046\u306b\u3001\u9045\u5ef6\u8a55\u4fa1\u306f\u3001\"\u3044\u3064\u8a55\u4fa1\u304c\u884c\u308f\u308c\u308b\u306e\u304b\uff1f\"\u3092\u7279\u5b9a\u3059\u308b\u306e\u3092\u96e3\u3057\u304f\u3055\u305b\u308b\u3002\u9045\u5ef6\u8a55\u4fa1\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306b\u3001\u526f\u4f5c\u7528\u3092\u6df7\u305c\u8fbc\u3080\u3068\u3001\u3068\u3066\u3064\u3082\u306a\u304f\u5206\u304b\u308a\u96e3\u304f\u306a\u308b\u3002\u6b74\u53f2\u7684\u306b\u306f\u3001\u3053\u308c\u304c Haskell \u304c\u7d14\u7c8b\u306a\u7406\u7531\u306a\u306e\u3060\u3002\u307e\u305a\u3001Haskell \u306e\u30c7\u30b6\u30a4\u30ca\u30fc(\u8a00\u8a9e\u8a2d\u8a08\u8005)\u306f\u9045\u5ef6\u8a55\u4fa1\u6226\u7565\u306e\u3001\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3092\u4f5c\u308a\u305f\u304b\u3063\u305f\u3002\u305d\u3057\u3066\u3059\u3050\u6c17\u3065\u3044\u305f\u3002\u526f\u4f5c\u7528\u3092\u7981\u3058\u306a\u3044\u9650\u308a\u3001\u4e0d\u53ef\u80fd\u3060\u3068\u3044\u3046\u3053\u3068\u306b\u3002\n\n\u96d1\u611f\n\u306a\u305c\u3060\u308d\u3046\uff1f\uff1f\uff1f\u305d\u308c\u306f\u3053\u306e\u5f15\u7528\u90e8\u306e\u4e0a\u306e\u90e8\u5206\u3067\u5b9f\u4f8b\u304c\u3042\u308b\u3002\n\u95a2\u6570 f \u304c f (release_monkeys(), increment_counter())\u306e\u69d8\u306b\u547c\u3070\u308c\u308b\u3068\u3059\u308b\u3002\n\u6b63\u683c\u8a55\u4fa1\u6226\u7565\u306e\u8a00\u8a9e\u3067\u306f\u3001release_monkeys() \u304c\u8a55\u4fa1\u3055\u308c\u305f\u5f8c\u3001increment_counter() \u304c\u8a55\u4fa1\u3055\u308c\u308b\u3002increment_counter \u306f release_monkeys \u304c\u3082\u305f\u3089\u3059\u526f\u4f5c\u7528\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304b\u3089\u3001\u3053\u306e\u9806\u5e8f\u304c\u9006\u306b\u306a\u3063\u305f\u308a\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u547c\u3070\u308c\u306a\u304b\u3063\u305f\u308a\u3059\u308b\u3068\u975e\u5e38\u306b\u307e\u305a\u3044\u4e8b\u306b\u306a\u308b\u3002\n\u4e00\u65b9\u3001\u9045\u5ef6\u8a55\u4fa1\u6226\u7565\u306e\u8a00\u8a9e\u3067\u306f\u3001f \u306b\u6e21\u3055\u308c\u305f\u5f15\u304d\u6570\u306f\u3001\u672a\u8a55\u4fa1\u306e\u5f0f(unevaluated expression)\u3068\u3057\u3066\u4fdd\u6301\u3055\u308c\u3001\u5024\u304c\u5fc5\u8981\u306b\u306a\u3063\u305f\u6642\u306b\u521d\u3081\u3066\u8a55\u4fa1\u3055\u308c\u308b\u3002\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u95a2\u6570\u3067\u306f\u5f15\u304d\u6570 y \u306f\u7121\u8996\u3055\u308c\u308b\u306e\u3067\u3001f 1 (2^111) \u306e\u69d8\u306b\u547c\u3073\u51fa\u3057\u305f\u6642\u30012^111 \u306f\u8a55\u4fa1\u3055\u308c\u305a\u5358\u306b\u6368\u3066\u3089\u308c\u308b\u3002\nf x y = x\n\nHaskell \u306e\u95a2\u6570\u304c pure \u3067\u306f\u306a\u304f\u3001\u526f\u4f5c\u7528\u3092\u3082\u305f\u3089\u3059\u3082\u306e\u3060\u3063\u305f\u3089\u3069\u3046\u3060\u308d\u3046\u304b\uff1f\n\u5f15\u304d\u6570\u304c\u8a55\u4fa1\u3055\u308c\u305f\u308a\u3055\u308c\u306a\u304b\u3063\u305f\u308a\u3001\u4f55\u6642\u8a55\u4fa1\u3055\u308c\u308b\u304b\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3082\u4e88\u60f3\u3067\u304d\u306a\u3044(unpredictable) \u306e\u306b\u3001\u5404\u95a2\u6570\u304c\u526f\u4f5c\u7528\u3092\u3082\u3064\u3068\u3057\u305f\u3089\u3001\u3001\u3001\u982d\u304c\u304a\u304b\u3057\u304f\u306a\u3063\u3061\u3083\u3046\u304b\u3082\u3057\u308c\u3093\u3002\u3069\u3093\u306a\u52d5\u304d\u306b\u306a\u308b\u306e\u304b\u8ab0\u3082\u8aac\u660e\u3001\u63a8\u6e2c\u3001\u7279\u5b9a\u3067\u304d\u306a\u3044(cannot reason about computational consequence)\u3002\u8ab0\u3082\u305d\u3093\u306a\u8a00\u8a9e\u4f7f\u3044\u305f\u304f\u306a\u3044\u3088\u306d\uff1f\uff1f\n\u3060\u304b\u3089\u3001\u9045\u5ef6\u8a55\u4fa1\u3092\u5b9f\u73fe\u3059\u308b\u306b\u306f\u3001\u95a2\u6570\u304c\u7d14\u7c8b(=\u526f\u4f5c\u7528\u3092\u6301\u305f\u306a\u3044\u3002\u53c2\u7167\u900f\u660e)\u3067\u3042\u308b\u4e8b\u304c\u5fc5\u8981\u3060\u3063\u305f\u3002\u9045\u5ef6\u8a55\u4fa1\u3068\u95a2\u6570\u306e\u7d14\u7c8b\u6027\u306f\u30bb\u30c3\u30c8\u3002\n\u6700\u8fd1 Haskell\u3092\u5b66\u3073\u59cb\u3081\u305f\u3070\u304b\u308a\u3060\u304c\u3001Haskell \u306e\u96e3\u3057\u3055\u306b\u3064\u3044\u3066\u3001\u601d\u3044\u3064\u304f\u307e\u307e\u306b dump \u3057\u305f\u3002\n\u5b66\u3073\u59cb\u3081\u3066\uff12\u9031\u9593\u7a0b\u5ea6\u306e\u521d\u5fc3\u8005\u306a\u306e\u3067\u9593\u9055\u3044\u591a\u6570\u3042\u308b\u304b\u3082\u3002\u968f\u6642\u4fee\u6b63\u3057\u3088\u3046\u3002\n\u81ea\u5206\u7528\u306e\u66f8\u304d\u6563\u3089\u3057\u3002\n\u4ed6\u4eba\u304c\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306b\u66f8\u304f\u3068\u3044\u3046\u306e\u306f\u512a\u5148\u5ea6\u3068\u3057\u3066\u4f4e\u304f\u3001\u81ea\u5206\u306e\u7406\u89e3\u30e1\u30e2\u3092 dump \u3057\u3068\u3044\u3066\u9699\u9593\u6642\u9593\u306b iPhone \u3067\u898b\u3066\u304a\u3055\u3089\u3044\u3059\u308b\u306e\u304c\u4e3b\u76ee\u7684\u3002\n\u81ea\u5206\u304c\u3061\u3083\u3093\u3068\u7406\u89e3\u3057\u304d\u3063\u305f\u3089\u6574\u7406\u3057\u3066\u7dba\u9e97\u306b\u3057\u3066\u306f\u884c\u304d\u305f\u3044\u3051\u3069\u3082\u3002\u3002\u3002\n\n# Divide and conquer strategy for learning Haskell\n\nHaskell \u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u306e\u96e3\u3057\u3055\u306b\u306f\u8272\u3005\u306a\u96e3\u3057\u3055\u304c\u6df7\u5408\u3057\u3066\u3044\u308b\u3002\nHaskell \u306f\u4ed6\u306e\u591a\u304f\u306e\u4e3b\u6d41\u8a00\u8a9e(C, Java, JavaScript, Python..)\u3068\u9055\u3046\u3068\u3053\u308d\u304c\u6ca2\u5c71\u3002\n\u9055\u3044\u306f\u3001\u7528\u8a9e\u3084\u3001\u6982\u5ff5(concept)\u3001\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u3001\u5fc5\u8981\u3068\u306a\u308b\u80cc\u666f\u77e5\u8b58\u7b49\u3001\u591a\u5c90\u306b\u6e21\u308b\u3002\n\u3053\u308c\u3089\u306e\u9055\u3044\u304c\u81a8\u5927\u3059\u304e\u3066\u3001\u5727\u5012\u3055\u308c(overwhelmed)\u3001\u8fd4\u308a\u8a0e\u3061\u306b\u5408\u3044\u3001\u8ae6\u3081\u308b\u3068\u3044\u3046\u306e\u304c\u826f\u304f\u3042\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u8a33\u306e\u5206\u304b\u3089\u3093\u70b9\u304c\u3042\u307e\u308a\u306b\u591a\u3044\u304b\u3089\u5727\u5012\u3055\u308c\u3001\u606f\u304c\u3067\u304d\u306a\u304f\u3066\u7a92\u606f\u3059\u308b\u8a33\u3060\u304c\u3001\u7406\u89e3\u3067\u304d\u308b\u90e8\u5206\u3092\u5c11\u3057\u305a\u3064\n\u5897\u3084\u3057\u3066\u3044\u3051\u3070\u3001\u5f53\u7136\u306a\u304c\u3089\u5727\u5012\u3055\u308c\u308b\u90e8\u5206\u306f\u5c11\u306a\u304f\u306a\u308a\u3001\u606f\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u6700\u7d42\u7684\u306b\u306f\u697d\u3057\u3093\u3067\u8aad\u307f\u66f8\u304d\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u306f\u305a\u3060\u3002\n\n\u4f8b\u3048\u3070\u7b2c\u4e00\u7d1a\u95a2\u6570(first-class function)\u3068\u304b\u3001\u9ad8\u968e\u95a2\u6570(higher-order-function)\u3068\u304b\u3001Haskell \u3058\u3083\u306a\u304f\u3066\u3082\u3001Lisp \u3084 JavaScript \u3067\u3082\u51fa\u3066\u304f\u308b\u3002\n\u3053\u3046\u3044\u3046\u6982\u5ff5\u3001\u6280\u306f\u6700\u521d\u306b\u51fa\u4f1a\u3063\u305f\u6642\u306f\u8a33\u308f\u304b\u3089\u3093\u3057\u3001\u8272\u3005\u3068\u5f15\u3063\u304b\u304b\u308b\u3082\u3093\u3060\u304c\u3001\u4e00\u5ea6\u7406\u89e3\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u5225\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067 higher-order-function \u3068\u304b\u8a00\u308f\u308c\u3066\u3082\u7406\u89e3\u3067\u304d\u308b\u3082\u3093\u3060\u3002\n\u9ad8\u968e\u95a2\u6570\u3092\u7406\u89e3\u3057\u3066\u3044\u306a\u3044\u3068\u3001Haskell \u3092\u305d\u306e\u5206\u96e3\u3057\u304f\u611f\u3058\u308b\u304c\u3001\u305d\u308c\u306f \"Haskell \u81ea\u4f53\"\u306e\u96e3\u3057\u3055\u3067\u306f\u306a\u3044\u3068\u3082\u8a00\u3048\u308b\u3002\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u3068\u304b\u3082\u305d\u3046\u3067\u3001\u4f8b\u3068\u3057\u3066\u77e5\u3089\u3093\u7528\u8a9e\u3001\u6570\u5217\u304c\u51fa\u3066\u304f\u308b\u3068\u96e3\u3057\u3044\u3068\u611f\u3058\u656c\u9060\u3057\u3066\u3057\u307e\u3046\u304c\u3001\u3053\u308c\u306f Haskell \u306e\u96e3\u3057\u3055\u3068\u306f\u76f4\u63a5\u95a2\u4fc2\u306a\u304f\u3001\u305d\u3082\u305d\u3082\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u3092\u77e5\u3063\u3066\u3044\u308b\u304b\uff1f\u77e5\u3063\u3066\u3044\u306a\u3044\u304b\u3068\u3044\u3046\u3060\u3051\u306e\u4e8b\u3060\u3063\u305f\u308a\u3059\u308b\u3002\nHaskell \u306e\u96e3\u3057\u3055\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30c6\u30af\u30cb\u30c3\u30af\u3001\u30c7\u30fc\u30bf\u69cb\u9020\u3001\u7528\u8a9e\u30fb\u6982\u5ff5\u306e\u96e3\u3057\u3055\u7b49\u3001\u8af8\u3005\u306e\u96e3\u3057\u3055\u306e\u7dcf\u5408\u3060\u3002\n\u5206\u304b\u3089\u306a\u3044\u70b9\u3092\u7d30\u304b\u304f\u5206\u5272\u30fb\u5206\u985e\u3057\u3001\u5206\u5272\u3057\u305f\u72ed\u3044\u7bc4\u56f2\u3067\u3001\u307b\u308f\u307b\u308f\u306a\u8f2a\u90ed\u3092\u660e\u78ba\u5316\u3057\u3066\u3044\u304f\u3057\u304b\u7121\u3044\u3002\n\n# \u7528\u8a9e\u306e\u96e3\u3057\u3055(terminologies.. It involve translation difficulties)\n- \u6570\u5b66\u306e\u7279\u5b9a\u5206\u91ce\u306e\u7528\u8a9e\u3001\u6982\u5ff5\u306e\u96e3\u3057\u3055(\u570f\u8ad6(category theory)\u3068\u304b\u3002) \u2192 \u7121\u8996\u3059\u308b\u3079\u3057\u3002\u5fd8\u308c\u308b\u3079\u3057\u3002\n- \u30e2\u30ca\u30c9\u3001\u526f\u4f5c\u7528\u3001\u4f5c\u7528\u3001\u7d14\u7c8b\u95a2\u6570\u3001\n\n# \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30d1\u30e9\u30c0\u30a4\u30e0(\u4f55\u3092\u4e3b\u8ef8\u306b\u636e\u3048\u3066\u3044\u308b\u304b)\u306e\u96e3\u3057\u3055\u3002\n- \u95a2\u6570\u578b(functional programming), \u547d\u4ee4\u5f62(imperative programming), \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411(Object oriented)\n- Functional programming: (\u4e3b\u8ef8) = \u5024\u3092\u4f5c\u308a\u51fa\u3059(=\u8a08\u7b97\u3059\u308b), calculate value by function.\n- Imperative programming: (\u4e3b\u8ef8) = order then execute without no delay. \u6307\u793a\u3092\u4e0e\u3048\u3066\u3001\u6b21\u3005\u3084\u3063\u3066\u3044\u304f\u3002\u6307\u793a\u3092\u4e0e\u3048\u308b \u2192 \u4eca\u3084\u308c\uff01\n\n# \u9045\u5ef6\u8a55\u4fa1\u306e\u96e3\u3057\u3055\n- \u8a55\u4fa1\u6226\u7565\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308b\u3002\u3069\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067 evaluate \u3055\u308c\u308b\u304b\uff1f\u8a55\u4fa1\u6226\u7565\u306b\u306f\uff12\u7a2e\u985e\u3042\u308b\n  - \u6b63\u683c\u8a55\u4fa1\u6226\u7565 vs \u9045\u5ef6\u8a55\u4fa1\u6226\u7565(strict evaluation strategy vs lazy evaluation strategy)\n- order of evaluation\n- purity is mandatory to achieve lazy evaluation\n- pattern match drives evaluation: \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u5024\u8a55\u4fa1\u3092\u8981\u8acb\u3059\u308b\u3002\u305f\u3060\u3057\u5fc5\u8981\u306a\u91cf\u306e\u307f\u3002\n- thunk \u3068\u306f\uff1f(\u8a55\u4fa1\u524d\u306eexpression\u3002expression \u81ea\u4f53). thunk \u304c evaluate \u3055\u308c\u3066 value \u306b\u306a\u308b\u3002\n\n# \u7d14\u7c8b\u95a2\u6570(Pure function)\u3068\u306f\uff1f\n  - \u526f\u4f5c\u7528\u3068\u306f\uff1f: \u5916\u754c\u3068\u306e\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u3066\u3002\u5916\u90e8\u306f\u6c5a\u308c\u3066\u3044\u308b\u304b\u3089\u5916\u754c\u3068\u3084\u308a\u53d6\u308a\u3059\u308b\u3068\u3001\u540c\u3058\u5f15\u6570\u4e0e\u3048\u3066\u3082\u3001\u5b9f\u884c\u7d50\u679c\u304c\u540c\u3058\u306b\u306a\u308b\u3068\u306f\u4fdd\u8a3c\u3067\u304d\u306a\u3044\uff1f\u2192\u975e\u7d14\u7c8b\n\n# \u65e5\u672c\u8a9e\u3078\u306e\u7ffb\u8a33\u306e\u96e3\u3057\u3055\nevaluation strategy, side effects, type class, reduce etc...,\nHaskell\u306b\u9650\u3089\u306a\u3044\u304c\u3001\u30c9\u30f3\u30d4\u30b7\u30e3\u306e\u5bfe\u8a33\u304c\u306a\u3044\u5834\u5408\u3082\u591a\u3044\u306e\u3067\u3001\u65e5\u672c\u8a9e\u306b\u3057\u305f\u5834\u5408\u306b\u539f\u8a9e(\u82f1\u8a9e)\u306e\u30cb\u30e5\u30a2\u30f3\u30b9\u304c\u5c11\u306a\u304b\u3089\u305a\u6d88\u3057\u53bb\u3089\u308c\u308b\u3002\u91cd\u8981\u306a\u7528\u8a9e(terminology)\u306f\u82f1\u8a9e\u306e\u30de\u30de\u3067\u7406\u89e3\u3057\u3088\u3046\u3068\u52aa\u3081\u3001\u7406\u89e3\u306b\u305f\u3069\u308a\u7740\u304f\u305f\u3081\u306e\u8db3\u304c\u304b\u308a\u3068\u3057\u3066\u3001\u6bcd\u56fd\u8a9e\u3067\u3042\u308b\u65e5\u672c\u8a9e\u306e\u52a9\u3051\u3092\u501f\u308a\u308b\u3001\u3068\u3044\u3046\u59ff\u52e2\u304c\u826f\u3044\u3002\n\u306a\u306e\u3067\u3001type class \u4e00\u3064\u3068\u3063\u3066\u3082\u3001class \u3092\u4e00\u3064\u306e\u7528\u8a9e\u306b\u7ffb\u8a33\u3057\u3066\u6e80\u8db3\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001class \u3068\u3044\u3046\u7528\u8a9e\u304c\u6301\u3064\u69d8\u3005\u306a\u30a4\u30e1\u30fc\u30b8\u3092\u901a\u3057\u3066 type class \u3068\u3044\u3046\u8a00\u8a9e\u3092\u6d88\u5316\u3057\u305f\u65b9\u304c\u5e83\u304c\u308a\u304c\u51fa\u308b\u6c17\u304c\u3059\u308b\u3002\nreduce \u306f\"\u6e1b\u3089\u3059\", \"\u307e\u3068\u3081\u308b\", \"\u9084\u5143\"\u3068\u304b\u306e\u610f\u5473\u304c\u3042\u308b\u304c\u3001\u3069\u308c\u304b\u4e00\u3064\u306e\u307f pick \u3059\u308b\u3068\u4ed6\u306e\u30cb\u30e5\u30a2\u30f3\u30b9\u304c\u6d88\u3048\u308b\u3001\u8584\u307e\u308b\u3002\u3082\u3063\u305f\u3044\u306a\u3044\u3002\n\n# \u6163\u308c\u306e\u554f\u984c\n- map, reduce, fold \u81ea\u4f53\u306b\u4ed6\u306e\u8a00\u8a9e\u3067\u6163\u308c\u3066\u3044\u308b\u304b\uff1f\uff1f\n\n# \u518d\u5e30\u306e\u96e3\u3057\u3055\nfor \u30eb\u30fc\u30d7\u3088\u308a\u306f\u3001recursive function \u3067\u8868\u73fe\u3059\u308b\u50be\u5411\u3002\nRecursive function \u306f stop \u6761\u4ef6\u304c\u809d(=\u5fc5\u9808)\u3002empty list([]) \u3067 stop \u304c\u5b9a\u756a\u3002\n\n# \u578b\u306e\u96e3\u3057\u3055\n- dynamic language vs typed language\n- type inference(\u578b\u985e\u63a8)\n- \u578b\u306f\u90aa\u9b54\u8005\u304b\uff1f\u2192\u8a00\u8a9e\u306b\u3088\u308b\u2192\u578b\u985e\u63a8\u304c\u3042\u308b\u3068\u578b\u3092\u66f8\u304f\u306e\u3092\u30b5\u30dc\u308c\u308b\u3002\u2192\u30e1\u30ea\u30c3\u30c8\u5927\u304d\u3044 \u2192\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u52a9\u3051\u3066\u304f\u308c\u308b\u3002\n- null \u304c\u3042\u308b\uff1f\u2192 \u7121\u3044\u6c17\u304c\u3059\u308b\u3002\u3002\u3069\u3046\u306a\u3093\u3060\u308d\u3046\n- Maybe \u578b\u306b\u3064\u3044\u3066: \u5024\u304c\u8fd4\u3063\u3066\u304f\u308b**\u304b\u3082\u77e5\u308c\u306a\u3044**\u3057\u3001\u3053\u306a\u3044**\u304b\u3082\u3057\u308c\u306a\u3044**\u3002Maybe \u306f\u578b\u3068\u3057\u3066\u5024\u304c**\u306a\u3044\u5834\u5408\u3082\u3042\u308b**(=Nothing)\u53ef\u80fd\u6027\u3092\u8868\u660e\u3059\u308b\u3002Maybe \u3092\u53d7\u3051\u53d6\u308b\u95a2\u6570\u306f Just \u3068 Nothing \u3092 handling \u3059\u308b\u4e8b\u3092\u5f37\u5236\u3055\u308c\u308b(??? exhaustiveness check in haskell?). \u3060\u304b\u3089**\u4e88\u60f3\u5916**\u306b null \u3084 undefined \u304c\u8fd4\u3063\u3066\u304d\u3066 runtime error \u306b\u6210\u308b\u3053\u3068\u304c\u306a\u3044\u3002\u306a\u305c\u306a\u3089 **\u4e88\u60f3\u306e\u7bc4\u56f2** \u3060\u304b\u3089\u3060\u30ac\u30cf\u30cf\u30cf\u30cf\u3002\n- \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1: in function definition, case, guard with pipe(`|`).\n  - `fib 0 = 0` \u306f \"`fib 0`(\u306e\u5834\u5408)\u306f`0`\u306b\u7b49\u3057\u3044(=\u50240\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u308b)\"\u3068\u8a00\u3063\u3066\u3044\u308b\u3002\n  - `fib 1 = 1` \u306f \"`fib 1`(\u306e\u5834\u5408)\u306f`1`\u306b\u7b49\u3057\u3044(=\u50241\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u308b)\"\u3068\u8a00\u3063\u3066\u3044\u308b\u3002\n  - `fib n = fib (n-1) + fib (n-2)`: `fib n`\u306f `fib (n-1)`\u306e\u8a08\u7b97\u7d50\u679c\u3068`fib (n-2)`\u306e\u8a08\u7b97\u7d50\u679c\u3092\u8db3\u3057\u5408\u308f\u305b\u305f\u3082\u306e\u3001\u3068\u8a00\u3063\u3066\u3044\u308b\u3002\u5b9a\u7fa9\u306f fib \u81ea\u4f53\u3092\u542b\u3080\u306e\u3067\u518d\u5e30\u547c\u3073\u51fa\u3057\u306b\u306a\u308b(fib n \u306f\u518d\u5e30\u3092\u5b9a\u7fa9\u3001\u518d\u5e30\u3092\u4f7f\u3063\u3066\u8868\u73fe(=express)\u3055\u308c\u3066\u3044\u308b)\u3002n \u306f\u6e1b\u3063\u3066\u3044\u304f\u306e\u3067\u3001\u6700\u7d42\u7684\u306b `fib 0` or `fib 1`\u306b\u3076\u3061\u5f53\u305f\u308astop\u3059\u308b\u306e\u3067\u5b89\u5fc3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u6b62\u307e\u308a\u307e\u3059\u3088\u3002\n\n- \u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n  \u2192 \u578b\u3092\u4f5c\u308b\u95a2\u6570\u3002`data Foo = FooConstructor Int` \u3068 Foo \u578b\u3092\u5b9a\u7fa9\u3057\u305f\u6642\u306e FooConstructor \u306f Foo \u578b\u3092\u3064\u304f\u308b(construct)\u95a2\u6570(`FooConstructor :: Int -> Foo`)\u3002Int \u3092\u6e21\u3059\u3068\u3001Foo \u578b\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\n- \u578b\u30af\u30e9\u30b9(type class): \u2192 class \u306f\u7a2e\u3001\u30b0\u30eb\u30fc\u30d7 \u2192\u578b\u7a2e \u2192 Int, Float \u306f Num Type class \u306e\u30e1\u30f3\u30d0\u3002Type class \u306e\u30e1\u30f3\u30d0\u306b\u306f\u5236\u7d04\u304c\u8ab2\u305b\u3089\u308c\u308b\u3002Num \u306f (+) \u95a2\u6570\u5b9f\u88c5\u3057\u308d\u3001\u3068\u304b\u3002set of types which share some characteristics. \u578b\u306e\u96c6\u5408\u3001\u30b0\u30eb\u30fc\u30d7\u3002\u540c\u3058 Type class \u306b\u5c5e\u3059\u308b type \u306f\u5171\u901a\u306e\u7279\u5fb4\u3001\u5236\u7d04\u3092\u6301\u3064\u3002\n\n# \u578b\u30b7\u30b0\u30cb\u30c1\u30e3(type signature)\u306e\u96e3\u3057\u3055\nCurrying \u7406\u89e3\u3059\u308b\u3068\u3057\u3063\u304f\u308a\u6765\u308b\u3002\n\n# \u30ab\u30ea\u30fc\u5316\u306e\u96e3\u3057\u3055(currying, partial application)\n- Haskell \u306e\u5168\u3066\u306e\u95a2\u6570\u306f\u5f15\u6570\u3092\u4e00\u3064\u53d6\u308b\u95a2\u6570. \u8907\u6570\u5f15\u6570\u3092\u6e21\u3057\u3066\u3044\u308b\u69d8\u306b\u898b\u3048\u308b\u304c\u3001\"\u5f15\u6570\u6e21\u3059 \u2192 \u95a2\u6570\u8fd4\u308b \u2192\u5f15\u6570\u6e21\u3059 \u2192 \u95a2\u6570\u8fd4\u308b \u2192 \u5f15\u6570\u6e21\u3059 \u2192 \u5024\u8fd4\u308b\"\n- \u7121\u540d\u95a2\u6570(anonymous function)\n- \u8907\u6570\u5f15\u6570\u3068\u308b(\u3088\u3046\u306b\u898b\u3048\u308b)\u95a2\u6570\u5b9a\u7fa9\u306f\u3001syntax sugar \u306e\u304a\u304b\u3052\n  - `\\s1 s2 s3 -> s1 ++ s2 ++ s3` is\n  - `\\s1 -> (\\s2 -> (\\s3 -> s1 ++ s2 + s3))`: using closure to bind passed args to env one by one?\n\n## \u30dd\u30a4\u30f3\u30c8\u30d5\u30ea\u30fc(Point free) \u95a2\u6570\uff1f\uff1f\uff1f\n- `f1 x = f2 x` \u306f `f1 = f2`\u3068\u66f8\u3051\u308b\u3088\u306d\uff1f\n- `f1 x = f2 y x` \u3082\u3001\u305d\u3046\u66f8\u304f\u3088\u308a `f1 = f2 y`\u3068\u66f8\u3044\u305f\u307b\u3046\u304c cool\u3058\u3083\u306a\u3044\uff1f\u2192\u3053\u308c\u304c\u6210\u308a\u7acb\u3064\u306e\u306f\u95a2\u6570\u304c\u5168\u3066currying\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u3002f2\u306by\u306e\u307f\u6e21\u3057\u3066\u8fd4\u3063\u3066\u304d\u305f\u95a2\u6570\u3092 f1\u306bbind \u3057\u3066\u3044\u308b\u3002`flip` \u3068\u304b\u99c6\u4f7f\u3059\u308c\u3070\u5f15\u6570\u306e\u6e21\u3059\u9806\u756a\u5909\u3048\u3089\u308c\u308b\u304b\u3089\u3001\u9811\u5f35\u308c\u3070\u8272\u3093\u306a\u95a2\u6570\u3092 pointfree \u306b\u51fa\u6765\u308b\u3088 \u2192 \u3084\u308a\u3059\u304e\u308b\u306a\u3002\n\n# \u95a2\u6570\u5408\u6210(function composition)\u306e\u96e3\u3057\u3055\n- `(.)` \u306f\u9006\u30d1\u30a4\u30d7(`|`). \u5de6\u304b\u3089\u53f3\u3067\u306f\u306a\u304f\u3001\u53f3\u304b\u3089\u5de6\u3078\u3002\n\n# \u306a\u305c\u4ee3\u5165(assign)\u3068\u8a00\u308f\u305a\u306b\u3001\u675f\u7e1b(=bind) \u3068\u8a00\u3046\u306e\u304b\uff1f(Why bind instead of assign?)\n\u5024\u306f\u5909\u66f4\u4e0d\u53ef(=immutable) \u3060\u304b\u3089\u3002\u7bb1\u306b\u5024\u3092\u5165\u308c\u308b\u3001\u7bb1\u306e\u4e2d\u8eab\u306e\u5165\u308c\u66ff\u3048\u308b\u30a2\u30ca\u30ed\u30b8\u30fc\u306f\u4e0d\u9069\u5207\u3002\u5909\u6570\u3068\u3044\u3046\u7528\u8a9e\u3082\u5909\u5316\u3057\u306a\u3044\u306e\u3067\u4e0d\u9069\u5207\uff1f\"\u540d\u524d\u306b\u5024\u3092\u7d10\u4ed8\u3051\u308b\"\u610f\u56f3\u3067bind\u3068\u8a00\u3046\u3002\n`x = 1` \u3068\u3044\u3046 expression \u306b\u304a\u3051\u308b\u3001`=` \u306f\u4ee3\u5165\u3067\u306f\u306a\u304f\u3001\"\u672a\u6765\u6c38\u52ab x \u306f 1 \u3067\u3059\" \u3068\u3044\u3046\u5ba3\u8a00\u3001\u8868\u660e\u3067\u3042\u308b\u3002\n\n# \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306e\u96e3\u3057\u3055(stack, haskell-platform)\n\n# \u60c5\u5831\u306e\u5c11\u306a\u3055\u306e\u96e3\u3057\u3055\n- Js\u3068\u6bd4\u3079\u3066\u308b\u3060\u3051\uff1fWeb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u304c\u5c11\u306a\u3044\uff1f\u5411\u3044\u3066\u306a\u3044\uff1f\u82f1\u8a9e\u3060\u3068\u6709\u7528\u30ea\u30bd\u30fc\u30b9\u3044\u3063\u3071\u3044\u3042\u308b\u6c17\u304c\u3059\u308b\u3002\n- \u3069\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3048\u3070\u826f\u3044\uff1f[jump](https://github.com/commercialhaskell/jump), [haskell is easy](http://haskelliseasy.readthedocs.io/en/latest/)\n\n# \u5f97\u610f\u5206\u91ce\u306e\u5411\u304d\u4e0d\u5411\u304d\u306e\u96e3\u3057\u3055\n- XXX \u3064\u304f\u308b\u306e\u306b\u5411\u3044\u3066\u3044\u308b\uff1f [State of the Haskell ecosystem](https://github.com/Gabriel439/post-rfc/blob/master/sotu.md)\n\n# \u30c7\u30fc\u30bf\u69cb\u9020\u306e\u7406\u89e3\u306e\u96e3\u3057\u3055\n- Tree, Binary Tree(\u4e8c\u5206\u6728), Linked \u30ea\u30b9\u30c8, \u518d\u5e30\u30c7\u30fc\u30bf\u69cb\u9020(Recursive data structure)\n\n# \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u96e3\u3057\u3055\n- quick-sort \u306e\u4f8b\u3002quick-sort \u7406\u89e3\u3057\u3066\u308b\u304b\uff1f\n\n# \u7d50\u5408\u6027(Associativity), \u7d50\u5408\u5f37\u5ea6(Priority)\u306e\u96e3\u3057\u3055\n- \u5de6\u7d50\u5408(left-associate):\n  - function application \u306f left-associate. `f a b c` is `((f a) b) c`\n- \u53f3\u7d50\u5408(right-associate)\n  - \u95a2\u6570\u306e\u578b\u5b9a\u7fa9\u306fright-associate. `add:: Int -> Int -> Int -> Int` is `add:: Int -> (Int -> (Int -> Int))`\n- \u5f37\u5ea6(priority, strength)\n\n\n------------------------- \u3053\u3053\u304b\u3089\u4e0b\u306f\u96d1\u591a\u30e1\u30e2(\u6574\u7406\u524d)\n\n## \u95a2\u6570\u5b9a\u7fa9\u306b\u304a\u3051\u308b\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\n\nHaskell \u306e **\u5168\u3066** \u306e\u95a2\u6570\u306f\u5f15\u6570\u3092\u4e00\u3064\u3057\u304b\u53d6\u3089\u306a\u3044\u3002\n\u8907\u6570\u5f15\u6570\u3092\u53d6\u308b\u3088\u3046\u306b\u898b\u3048\u308b\u95a2\u6570\u306f\u3001\u4e00\u3064\u306e\u5f15\u6570\u3092\u53d6\u308a\u3001\u95a2\u6570\u3092\u8fd4\u3059\u95a2\u6570\u3068\u3057\u3066\u8868\u73fe\u3055\u308c\u308b\u3002(\u305d\u306e\u95a2\u6570\u306f\u6b21\u306e\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308a\u3001\u95a2\u6570\u3092\u8fd4\u3059)\n\n\u4ee5\u4e0b\u306f\u5168\u3066\u540c\u3058\u95a2\u6570\u3002\u8907\u6570\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u95a2\u6570\u306e\u5b9a\u7fa9\u306f\u5358\u306b\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30b7\u30e5\u30ac\u30fc\u306b\u904e\u304e\u306a\u3044\u3002\n\n\u4ee5\u4e0b\u306f\u5168\u3066\u540c\u3058\u95a2\u6570\n\n- ```f = \\x -> (\\y -> (\\z -> BODY))```: \u6700\u3082\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306a\u8868\u73fe\n- ```f = \\x y z -> BODY```: syntax sugar\n- ```f x y z = BODY```: syntax sugar `=`\u306e\u53f3\u5074\u306e\u5f15\u6570\u90e8\u5206(x, y, z)\u3092`=`\u306e\u5de6\u5074\u3078\u79fb\u52d5\n\n```haskell\n-- f = \\x -> (\\y -> (\\z -> BODY))\nf1 = \\x -> (\\y -> (\\z -> x ++ y ++ z))\n-- f = \\x y z -> BODY\nf2 = \\x y z -> x ++ y ++ z\n-- f x y z = BODY\nf3 x y z = x ++ y ++ z\nmain = do\n  print (\"f1 \" ++ (f1 \"a\" \"b\" \"c\")) -- => \"f1 abc\"\n  print (\"f2 \" ++ (f2 \"a\" \"b\" \"c\")) -- => \"f2 abc\"\n  print (\"f3 \" ++ (f3 \"a\" \"b\" \"c\")) -- => \"f3 abc\"\n```\n\n\u4e0a\u8ff0\u306e\u901a\u308a\u3001\u5168\u3066\u306e\u95a2\u6570\u306f\uff11\u3064\u306e\u307f\u306e\u5f15\u6570\u3092\u3068\u308b\u304c\u3001tuple \u3092\u4f7f\u3063\u3066\u3001\u8907\u6570\u5f15\u304d\u6570\u306e\u95a2\u6570\u3092\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u3053\u3068\u306f\u53ef\u80fd\n\n# Parametric polymorphism\n\n\u30d1\u30e9\u30e1\u30bf\u30ea\u30c3\u30af\u30fb\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\n\u30d1\u30e9\u30e1\u30bf\u591a\u76f8\n\u2192 \u578b\u306f\u30d1\u30e9\u30e1\u30bf\u306b\u3088\u3063\u3066\u7279\u5b9a\u3055\u308c\u308b(\u6c7a\u307e\u308b)\n\u2192 \u578b\u304c\u30d1\u30e9\u30e1\u30bf\u5316\u3055\u308c\u3066\u3044\u308b(\u578b\u3092\u30d1\u30e9\u30e1\u30bf(\u5f15\u304d\u6570)\u306b\u3088\u3063\u3066\u4e0e\u3048\u308b)\n\n## Type class constrains(\u578b\u30af\u30e9\u30b9\u306b\u5bfe\u3059\u308b\u5236\u7d04)\n\n```haskell\ninstance (Listable a, Listable b) => Listable (a,b) where\n  toList (x,y) = toList x ++ toList y\n```\n\u8272\u3005\u306a\u8a00\u3044\u65b9\u3092\u3057\u3066\u307f\u308b\u3002\n- `a` \u304c `Listable` \u304b\u3064\u3001`b` \u304c `Listable` \u3067\u3042\u308b\u9650\u308a\u306b\u304a\u3044\u3066\u3001type `(a, b)` \u306f `Listable`\n- if `Listable a` and `Listable b` then `(a, b) is Listable` else `(a, b) isnot Listable`\n- `Listable (a, b)` \u3092\u6e80\u305f\u3059\u306b\u306f\u3001`Listable a`, `Listable b` \u3092\u540c\u6642\u306b\u6e80\u305f\u3055\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\n# \u9045\u5ef6\u8a55\u4fa1\u6226\u7565\u306e\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001\u95a2\u6570\u306e\u53c2\u7167\u900f\u660e\u6027\u304c\u5fc5\u8981\u3060\u3063\u305f\u3002\n\n### [cis194 spring 13 chapter6 laziness](http://www.seas.upenn.edu/~cis194/fall14/spring13/lectures/06-laziness.html) \u306e\u629c\u7c8b\n\n> As we have seen, lazy evaluation makes it hard to reason about when things will be evaluated; hence including side effects in a lazy language would be extremely unintuitive. Historically, this is the reason Haskell is pure: initially, the designers of Haskell wanted to make a lazy functional language, and quickly realized it would be impossible unless it also disallowed side effects.\n\n[\u7ffb\u8a33]\n\u3053\u308c\u307e\u3067\u898b\u3066\u304d\u305f\u3088\u3046\u306b\u3001\u9045\u5ef6\u8a55\u4fa1\u306f\u3001\"\u3044\u3064\u8a55\u4fa1\u304c\u884c\u308f\u308c\u308b\u306e\u304b\uff1f\"\u3092\u7279\u5b9a\u3059\u308b\u306e\u3092\u96e3\u3057\u304f\u3055\u305b\u308b\u3002\u9045\u5ef6\u8a55\u4fa1\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306b\u3001\u526f\u4f5c\u7528\u3092\u6df7\u305c\u8fbc\u3080\u3068\u3001\u3068\u3066\u3064\u3082\u306a\u304f\u5206\u304b\u308a\u96e3\u304f\u306a\u308b\u3002\u6b74\u53f2\u7684\u306b\u306f\u3001\u3053\u308c\u304c Haskell \u304c\u7d14\u7c8b\u306a\u7406\u7531\u306a\u306e\u3060\u3002\u307e\u305a\u3001Haskell \u306e\u30c7\u30b6\u30a4\u30ca\u30fc(\u8a00\u8a9e\u8a2d\u8a08\u8005)\u306f\u9045\u5ef6\u8a55\u4fa1\u6226\u7565\u306e\u3001\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3092\u4f5c\u308a\u305f\u304b\u3063\u305f\u3002\u305d\u3057\u3066\u3059\u3050\u6c17\u3065\u3044\u305f\u3002\u526f\u4f5c\u7528\u3092\u7981\u3058\u306a\u3044\u9650\u308a\u3001\u4e0d\u53ef\u80fd\u3060\u3068\u3044\u3046\u3053\u3068\u306b\u3002\n\n### \u96d1\u611f\n\n\u306a\u305c\u3060\u308d\u3046\uff1f\uff1f\uff1f\u305d\u308c\u306f\u3053\u306e\u5f15\u7528\u90e8\u306e\u4e0a\u306e\u90e8\u5206\u3067\u5b9f\u4f8b\u304c\u3042\u308b\u3002\n\u95a2\u6570 f \u304c `f (release_monkeys(), increment_counter())`\u306e\u69d8\u306b\u547c\u3070\u308c\u308b\u3068\u3059\u308b\u3002\n\u6b63\u683c\u8a55\u4fa1\u6226\u7565\u306e\u8a00\u8a9e\u3067\u306f\u3001release_monkeys() \u304c\u8a55\u4fa1\u3055\u308c\u305f\u5f8c\u3001increment_counter() \u304c\u8a55\u4fa1\u3055\u308c\u308b\u3002increment_counter \u306f release_monkeys \u304c\u3082\u305f\u3089\u3059\u526f\u4f5c\u7528\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304b\u3089\u3001\u3053\u306e\u9806\u5e8f\u304c\u9006\u306b\u306a\u3063\u305f\u308a\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u547c\u3070\u308c\u306a\u304b\u3063\u305f\u308a\u3059\u308b\u3068\u975e\u5e38\u306b\u307e\u305a\u3044\u4e8b\u306b\u306a\u308b\u3002\n\u4e00\u65b9\u3001\u9045\u5ef6\u8a55\u4fa1\u6226\u7565\u306e\u8a00\u8a9e\u3067\u306f\u3001f \u306b\u6e21\u3055\u308c\u305f\u5f15\u304d\u6570\u306f\u3001\u672a\u8a55\u4fa1\u306e\u5f0f(unevaluated expression)\u3068\u3057\u3066\u4fdd\u6301\u3055\u308c\u3001\u5024\u304c\u5fc5\u8981\u306b\u306a\u3063\u305f\u6642\u306b\u521d\u3081\u3066\u8a55\u4fa1\u3055\u308c\u308b\u3002\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u95a2\u6570\u3067\u306f\u5f15\u304d\u6570 `y` \u306f\u7121\u8996\u3055\u308c\u308b\u306e\u3067\u3001`f 1 (2^111)` \u306e\u69d8\u306b\u547c\u3073\u51fa\u3057\u305f\u6642\u3001`2^111` \u306f\u8a55\u4fa1\u3055\u308c\u305a\u5358\u306b\u6368\u3066\u3089\u308c\u308b\u3002\n\n```haskell\nf x y = x\n```\n\nHaskell \u306e\u95a2\u6570\u304c pure \u3067\u306f\u306a\u304f\u3001\u526f\u4f5c\u7528\u3092\u3082\u305f\u3089\u3059\u3082\u306e\u3060\u3063\u305f\u3089\u3069\u3046\u3060\u308d\u3046\u304b\uff1f\n\u5f15\u304d\u6570\u304c\u8a55\u4fa1\u3055\u308c\u305f\u308a\u3055\u308c\u306a\u304b\u3063\u305f\u308a\u3001\u4f55\u6642\u8a55\u4fa1\u3055\u308c\u308b\u304b\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3082\u4e88\u60f3\u3067\u304d\u306a\u3044(unpredictable) \u306e\u306b\u3001\u5404\u95a2\u6570\u304c\u526f\u4f5c\u7528\u3092\u3082\u3064\u3068\u3057\u305f\u3089\u3001\u3001\u3001\u982d\u304c\u304a\u304b\u3057\u304f\u306a\u3063\u3061\u3083\u3046\u304b\u3082\u3057\u308c\u3093\u3002\u3069\u3093\u306a\u52d5\u304d\u306b\u306a\u308b\u306e\u304b\u8ab0\u3082\u8aac\u660e\u3001\u63a8\u6e2c\u3001\u7279\u5b9a\u3067\u304d\u306a\u3044(cannot reason about computational consequence)\u3002\u8ab0\u3082\u305d\u3093\u306a\u8a00\u8a9e\u4f7f\u3044\u305f\u304f\u306a\u3044\u3088\u306d\uff1f\uff1f\n\n\u3060\u304b\u3089\u3001\u9045\u5ef6\u8a55\u4fa1\u3092\u5b9f\u73fe\u3059\u308b\u306b\u306f\u3001\u95a2\u6570\u304c\u7d14\u7c8b(=\u526f\u4f5c\u7528\u3092\u6301\u305f\u306a\u3044\u3002\u53c2\u7167\u900f\u660e)\u3067\u3042\u308b\u4e8b\u304c\u5fc5\u8981\u3060\u3063\u305f\u3002\u9045\u5ef6\u8a55\u4fa1\u3068\u95a2\u6570\u306e\u7d14\u7c8b\u6027\u306f\u30bb\u30c3\u30c8\u3002\n", "tags": ["Haskell", "\u95a2\u6570\u578b\u8a00\u8a9e"]}