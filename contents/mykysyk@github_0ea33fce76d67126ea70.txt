{"tags": ["openstackIcehouse", "CentOS6.5"], "context": " More than 1 year has passed since last update.\n\n\u7528\u610f\u3059\u308b\u3082\u306e\n\n\n\n\u30db\u30b9\u30c8\u540d\nOS\neth0\neth1\ngw\n\n\n\n\ncontroller\nCentOS6.5\n192.168.1.41\n192.168.11.41\n192.168.1.1\n\n\ncompute\nCentOS6.5\n192.168.1.42\n192.168.11.42\n192.168.1.1\n\n\n\ncontroller \u306b\u306f nova-compute\u4ee5\u5916 \u3059\u3079\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\ncompute \u306b\u306f nova-compute \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057 \u30cf\u30a4\u30d1\u30fc\u30d0\u30a4\u30b6\u306blxc\u3092\u5229\u7528\u3059\u308b\n\u3059\u3079\u3066\u30921\u53f0\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b\u304c\u4eca\u56de\u306fcompute\u3060\u3051\u72ec\u7acb\u3055\u305b\u308b\u3002\n\ncompute\u6a5f\u306b\u3066\n\nshell\necho \"192.168.1.41 controller\" >> /etc/hosts\necho \"192.168.1.42 compute\"    >> /etc/hosts\nsed -i \"s/^HOSTNAME=.*/HOSTNAME=compute/g\" /etc/sysconfig/network\nsed -i 's/^SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config\n\n\n\ncontroller\u6a5f\u306b\u3066\n\nshell\necho \"192.168.1.41 controller\" >> /etc/hosts\necho \"192.168.1.42 compute\"    >> /etc/hosts\nsed -i \"s/^HOSTNAME=.*/HOSTNAME=controller/g\" /etc/sysconfig/network\nsed -i 's/^SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config\nvi rdo-setup.sh\n\n\n\n\nrdo-setup.sh\n#!/bin/bash\n#http://theruddyduck.typepad.com/theruddyduck/2014/02/install-and-ccnfigure-openstack-neutron.html\n\n#--- RDO\nRDO_URL=http://rdo.fedorapeople.org/openstack-icehouse/rdo-release-icehouse.rpm\n\n#--- EPEL\nEPEL_URL=http://ftp.riken.jp/Linux/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm\n\n#--- CLOUD IMAGE\nCLOUD_IMAGE_URL[0]=https://cloud-images.ubuntu.com/trusty/current/trusty-server-cloudimg-amd64-root.tar.gz\nCLOUD_IMAGE_URL[1]=http://cloud-images.ubuntu.com/precise/current/precise-server-cloudimg-amd64-root.tar.gz\n\n#--- PUBLIC NETWORK\nWAN_IPADDRESS=192.168.1.41\nWAN_GATEWAY=192.168.1.1\nWAN_NETWORK=192.168.1.0/24\nWAN_POOL_START=192.168.1.100\nWAN_POOL_END=192.168.1.200\n\n#--- PRIVATE NETWORK\nLAN_IPADDRESS=192.168.11.41\nLAN_GATEWAY=192.168.11.1\nLAN_NETWORK=192.168.11.0/24\nLAN_POOL_START=192.168.11.100\nLAN_POOL_END=192.168.11.200\n\n#--- PASSWORD\nCONFIG_KEYSTONE_ADMIN_PW=password\nCONFIG_KEYSTONE_DEMO_PW=$CONFIG_KEYSTONE_ADMIN_PW\nCONFIG_RH_PW=RH_PW\nCONFIG_SATELLITE_PW=SATELLITE_PW\nCONFIG_SATELLITE_PROXY_PW=SATELLITE_PROXY_PW\nCONFIG_AMQP_NSS_CERTDB_PW=AMQP_NSS_CERTDB_PW\nCONFIG_MYSQL_PW=MYSQL_PW\nCONFIG_KEYSTONE_DB_PW=KEYSTONE_DB_PW\nCONFIG_GLANCE_DB_PW=LANCE_DB_PW\nCONFIG_GLANCE_KS_PW=GLANCE_KS_PW\nCONFIG_CINDER_DB_PW=CINDER_DB_PW\nCONFIG_CINDER_KS_PW=CINDER_KS_PW\nCONFIG_NOVA_DB_PW=NOVA_DB_PW\nCONFIG_NOVA_KS_PW=OVA_KS_PW\nCONFIG_NEUTRON_KS_PW=NEUTRON_KS_PW\nCONFIG_NEUTRON_DB_PW=NEUTRON_DB_PW\nCONFIG_NEUTRON_METADATA_PW=NEUTRON_METADATA_PW\nCONFIG_SWIFT_KS_PW=SWIFT_KS_PW\nCONFIG_PROVISION_TEMPEST_USER_PW=PROVISION_TEMPEST_USER_PW\nCONFIG_HEAT_DB_PW=HEAT_DB_PW\nCONFIG_HEAT_KS_PW=HEAT_KS_PW\nCONFIG_CEILOMETER_KS_PW=CEILOMETER_KS_PW\nCONFIG_NAGIOS_PW=NAGIOS_PW\n\n#--- CONTROLLER HOSTS\nCONFIG_CONTROLLER_HOST=$LAN_IPADDRESS\nCONFIG_NETWORK_HOSTS=$CONFIG_CONTROLLER_HOST\nCONFIG_AMQP_HOST=$CONFIG_CONTROLLER_HOST\nCONFIG_MYSQL_HOST=$CONFIG_CONTROLLER_HOST\nCONFIG_MONGODB_HOST=$CONFIG_CONTROLLER_HOST\n\n#--- COMPUTE HOSTS\nCONFIG_COMPUTE_HOSTS=192.168.11.42\n\n#--- NOVA NETWORK\nCONFIG_NOVA_NETWORK_PUBIF=eth0\nCONFIG_NOVA_NETWORK_PRIVIF=eth1\nCONFIG_NOVA_COMPUTE_PRIVIF=eth1\n\n#--- OVS\nCONFIG_NEUTRON_OVS_TUNNEL_IF=eth1\nCONFIG_NEUTRON_OVS_VLAN_RANGES=physnet1\nCONFIG_NEUTRON_OVS_BRIDGE_IFACES=br-ex:eth0\nCONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS=physnet1:br-ex\n\n#--- NETWORK TYPE\nCONFIG_NEUTRON_ML2_TYPE_DRIVERS=vxlan\nCONFIG_NEUTRON_ML2_TENANT_NETWORK_TYPES=vxlan\nCONFIG_NEUTRON_OVS_TENANT_NETWORK_TYPE=vxlan\n\n#--- CINDER\nCONFIG_CINDER_VOLUMES_SIZE=50G\n\n#--- NTP\nNTP_SERVER=ntp.nict.jp\n\n#----------------------------------------------------------\n# MAIN\n#----------------------------------------------------------\nfunction main() {\n\n    #--- SET UP\n    setup_first\n\n    #--- INSTALL RDO\n    packstack --gen-answer-file answer.txt\n    setup_rdo\n    packstack --answer-file answer.txt\n\n    #--- OPENSTACK SETUP\n    create_glance_image ubuntu1204 ${CLOUD_IMAGE_URL[0]}\n    create_glance_image ubuntu1404 ${CLOUD_IMAGE_URL[1]}\n    setup_network\n    setup_neutron\n    setup_nova\n    setup_neutron_demo_net\n    setup_flavor\n    setup_secgroup\n    setup_keypair\n\n    #--- FIN\n    . /root/keystonerc_admin\n    nova list\n    nova-manage service list\n    neutron agent-list\n    neutron net-list\n\n}\n\n#----------------------------------------------------------\n# SETUP INIT\n#----------------------------------------------------------\nfunction setup_first() {\n\n    rpm -ivh $EPEL_URL\n    yum install -y --enablerepo=epel puppet nc wget ntpdate && ntpdate $NTP_SERVER\n    yum install -y $RDO_URL\n    yum install -y openstack-packstack\n    yum update  -y\n\n    #--- SYSCTL\n    sed -i.org \\\n        -e \"s/^net.ipv4.ip_forward.*=.*0/net.ipv4.ip_forward = 1/\" \\\n        -e \"s/^net.ipv4.conf.all.rp_filter.*=.*1/net.ipv4.conf.all.rp_filter = 0/\" \\\n        -e \"s/^net.ipv4.conf.default.rp_filter.*=.*1/net.ipv4.conf.default.rp_filter = 0/\" \\\n        /etc/sysctl.conf\n\n    sysctl -p\n\n}\n\n#----------------------------------------------------------\n# SETUP RDO\n#----------------------------------------------------------\nfunction setup_rdo() {\n\n    #--- MAIN PASSWORD\n    sed -i.org \\\n        -e \"s/^CONFIG_KEYSTONE_ADMIN_PW=.*/CONFIG_KEYSTONE_ADMIN_PW=$CONFIG_KEYSTONE_ADMIN_PW/\" \\\n        -e \"s/^CONFIG_KEYSTONE_DEMO_PW=.*/CONFIG_KEYSTONE_DEMO_PW=$CONFIG_KEYSTONE_DEMO_PW/\" \\\n        answer.txt\n\n    #--- OTHER PASSWORD\n    sed -i \\\n        -e \"s/^CONFIG_AMQP_NSS_CERTDB_PW=.*/CONFIG_AMQP_NSS_CERTDB_PW=$CONFIG_AMQP_NSS_CERTDB_PW/\" \\\n        -e \"s/^CONFIG_MYSQL_PW=.*/CONFIG_MYSQL_PW=$CONFIG_MYSQL_PW/\" \\\n        -e \"s/^CONFIG_KEYSTONE_DB_PW=.*/CONFIG_KEYSTONE_DB_PW=$CONFIG_KEYSTONE_DB_PW/\" \\\n        -e \"s/^CONFIG_GLANCE_DB_PW=.*/CONFIG_GLANCE_DB_PW=$CONFIG_GLANCE_DB_PW/\" \\\n        -e \"s/^CONFIG_GLANCE_KS_PW=.*/CONFIG_GLANCE_KS_PW=$CONFIG_GLANCE_KS_PW/\" \\\n        -e \"s/^CONFIG_CINDER_DB_PW=.*/CONFIG_CINDER_DB_PW=$CONFIG_CINDER_DB_PW/\" \\\n        -e \"s/^CONFIG_CINDER_KS_PW=.*/CONFIG_CINDER_KS_PW=$CONFIG_CINDER_KS_PW/\" \\\n        -e \"s/^CONFIG_NOVA_DB_PW=.*/CONFIG_NOVA_DB_PW=$CONFIG_NOVA_DB_PW/\" \\\n        -e \"s/^CONFIG_NOVA_KS_PW=.*/CONFIG_NOVA_KS_PW=$CONFIG_NOVA_KS_PW/\" \\\n        -e \"s/^CONFIG_NEUTRON_KS_PW=.*/CONFIG_NEUTRON_KS_PW=$CONFIG_NEUTRON_KS_PW/\" \\\n        -e \"s/^CONFIG_NEUTRON_DB_PW=.*/CONFIG_NEUTRON_DB_PW=$CONFIG_NEUTRON_DB_PW/\" \\\n        -e \"s/^CONFIG_NEUTRON_METADATA_PW=.*/CONFIG_NEUTRON_METADATA_PW=$CONFIG_NEUTRON_METADATA_PW/\" \\\n        -e \"s/^CONFIG_SWIFT_KS_PW=.*/CONFIG_SWIFT_KS_PW=$CONFIG_SWIFT_KS_PW/\" \\\n        -e \"s/^CONFIG_PROVISION_TEMPEST_USER_PW=.*/CONFIG_PROVISION_TEMPEST_USER_PW=$CONFIG_PROVISION_TEMPEST_USER_PW/\" \\\n        -e \"s/^CONFIG_HEAT_DB_PW=.*/CONFIG_HEAT_DB_PW=$CONFIG_HEAT_DB_PW/\" \\\n        -e \"s/^CONFIG_HEAT_KS_PW=.*/CONFIG_HEAT_KS_PW=$CONFIG_HEAT_KS_PW/\" \\\n        -e \"s/^CONFIG_CEILOMETER_KS_PW=.*/CONFIG_CEILOMETER_KS_PW=$CONFIG_CEILOMETER_KS_PW/\" \\\n        -e \"s/^CONFIG_NAGIOS_PW=.*/CONFIG_NAGIOS_PW=$CONFIG_NAGIOS_PW/\" \\\n        answer.txt\n\n    #--- SERVICE HOSTS\n    sed -i \\\n        -e \"s/^CONFIG_CONTROLLER_HOST=.*/CONFIG_CONTROLLER_HOST=$CONFIG_CONTROLLER_HOST/\" \\\n        -e \"s/^CONFIG_NETWORK_HOSTS=.*/CONFIG_NETWORK_HOSTS=$CONFIG_NETWORK_HOSTS/\" \\\n        -e \"s/^CONFIG_AMQP_HOST=.*/CONFIG_AMQP_HOST=$CONFIG_AMQP_HOST/\" \\\n        -e \"s/^CONFIG_MYSQL_HOST=.*/CONFIG_MYSQL_HOST=$CONFIG_MYSQL_HOST/\" \\\n        -e \"s/^CONFIG_MONGODB_HOST=.*/CONFIG_MONGODB_HOST=$CONFIG_MONGODB_HOST/\" \\\n        -e \"s/^CONFIG_COMPUTE_HOSTS=.*/CONFIG_COMPUTE_HOSTS=$CONFIG_COMPUTE_HOSTS/\" \\\n        answer.txt\n\n    #--- IFACES\n    sed -i \\\n        -e \"s/^CONFIG_NOVA_COMPUTE_PRIVIF=.*/CONFIG_NOVA_COMPUTE_PRIVIF=$CONFIG_NOVA_COMPUTE_PRIVIF/\" \\\n        -e \"s/^CONFIG_NOVA_NETWORK_PUBIF=.*/CONFIG_NOVA_NETWORK_PUBIF=$CONFIG_NOVA_NETWORK_PUBIF/\" \\\n        -e \"s/^CONFIG_NOVA_NETWORK_PRIVIF=.*/CONFIG_NOVA_NETWORK_PRIVIF=$CONFIG_NOVA_NETWORK_PRIVIF/\" \\\n        -e \"s/^CONFIG_NEUTRON_OVS_BRIDGE_IFACES=.*/CONFIG_NEUTRON_OVS_BRIDGE_IFACES=$CONFIG_NEUTRON_OVS_BRIDGE_IFACES/\" \\\n        -e \"s/^CONFIG_NEUTRON_OVS_TUNNEL_IF=.*/CONFIG_NEUTRON_OVS_TUNNEL_IF=$CONFIG_NEUTRON_OVS_TUNNEL_IF/\" \\\n        answer.txt\n\n    #--- NEUTRON OVS\n    sed -i \\\n        -e \"s/^CONFIG_NEUTRON_OVS_VLAN_RANGES=.*/CONFIG_NEUTRON_OVS_VLAN_RANGES=$CONFIG_NEUTRON_OVS_VLAN_RANGES/\" \\\n        -e \"s/^CONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS=.*/CONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS=$CONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS/\" \\\n         answer.txt\n\n    #--- NETWORK TYPE\n    sed -i \\\n        -e \"s/^CONFIG_NEUTRON_ML2_TYPE_DRIVERS=.*/CONFIG_NEUTRON_ML2_TYPE_DRIVERS=$CONFIG_NEUTRON_ML2_TYPE_DRIVERS/\" \\\n        -e \"s/^CONFIG_NEUTRON_ML2_TENANT_NETWORK_TYPES=.*/CONFIG_NEUTRON_ML2_TENANT_NETWORK_TYPES=$CONFIG_NEUTRON_ML2_TENANT_NETWORK_TYPES/\" \\\n        -e \"s/^CONFIG_NEUTRON_OVS_TENANT_NETWORK_TYPE=.*/CONFIG_NEUTRON_OVS_TENANT_NETWORK_TYPE=$CONFIG_NEUTRON_OVS_TENANT_NETWORK_TYPE/\" \\\n        answer.txt\n\n    #--- DEMO\n    sed -i \\\n        -e \"s/^CONFIG_PROVISION_DEMO=y/CONFIG_PROVISION_DEMO=n/\" \\\n        answer.txt\n\n    #--- TOKEN FORMAT\n    sed -i \\\n        -e \"s/^CONFIG_KEYSTONE_TOKEN_FORMAT=PKI/CONFIG_KEYSTONE_TOKEN_FORMAT=UUID/\" \\\n        answer.txt\n\n    #--- CINDER\n    sed -i \\\n        -e \"s/^CONFIG_CINDER_VOLUMES_SIZE=20G/CONFIG_CINDER_VOLUMES_SIZE=$CONFIG_CINDER_VOLUMES_SIZE/\" \\\n        answer.txt\n\n    #--- HEAT INSTALL\n    sed -i \\\n        -e \"s/^CONFIG_HEAT_INSTALL=n/CONFIG_HEAT_INSTALL=y/\" \\\n        -e \"s/^CONFIG_HEAT_CLOUDWATCH_INSTALL=n/CONFIG_HEAT_CLOUDWATCH_INSTALL=y/\" \\\n        -e \"s/^CONFIG_HEAT_CFN_INSTALL=n/CONFIG_HEAT_CFN_INSTALL=y/\" \\\n        answer.txt\n\n    #-----------------------------------------------------------\n    # NO INSTALL\n    #-----------------------------------------------------------\n    #--- NAGIOS NO INSTALL\n    sed -i \\\n        -e \"s/^CONFIG_NAGIOS_INSTALL=y/CONFIG_NAGIOS_INSTALL=n/\" \\\n        answer.txt\n\n    #--- CINDER NO INSTALL\n    #sed -i \\\n    #    -e \"s/^CONFIG_CINDER_INSTALL=.*/CONFIG_CINDER_INSTALL=n/\" \\\n    #     answer.txt\n\n    #--- SWIFT NO INSTALL\n    #sed -i \\\n    #    -e \"s/^CONFIG_SWIFT_INSTALL=.*/CONFIG_SWIFT_INSTALL=n/\" \\\n    #     answer.txt\n\n    #--- CEILOMETER NO INSTALL\n    #sed -i \\\n    #    -e \"s/^CONFIG_CEILOMETER_INSTALL=.*/CONFIG_CEILOMETER_INSTALL=n/\" \\\n    #     answer.txt\n}\n\n#-----------------------------------------------------------\n# NETWORK\n#-----------------------------------------------------------\nfunction setup_network() {\n\n    # ifcfg-eth0\n    cat << EOT >/etc/sysconfig/network-scripts/ifcfg-eth0 && sed -i 's/^ *//g' /etc/sysconfig/network-scripts/ifcfg-eth0\n        DEVICE=eth0\n        ONBOOT=yes\n        TYPE=OVSPort\n        DEVICETYPE=ovs\n        OVS_BRIDGE=br-ex\nEOT\n\n    # ifcfg-br-ex\n    cat << EOT > /etc/sysconfig/network-scripts/ifcfg-br-ex && sed -i 's/^ *//g' /etc/sysconfig/network-scripts/ifcfg-br-ex\n        DEVICE=br-ex\n        TYPE=OVSBridge\n        DEVICETYPE=ovs\n        BOOTPROTO=static\n        IPADDR=$WAN_IPADDRESS\n        NETMASK=255.255.255.0\n        GATEWAY=$WAN_GATEWAY\n        ONBOOT=yes\nEOT\n\n    # restart\n    /etc/init.d/network restart\n\n}\n\n#-----------------------------------------------------------\n# GLANCE\n#-----------------------------------------------------------\nfunction create_glance_image() {\n\n    local CLOUD_IMAGE_NAME=$1\n    local CLOUD_IMAGE_URL=$2\n\n    wget $CLOUD_IMAGE_URL -O /dev/shm/$CLOUD_IMAGE_NAME.tar.gz\n    truncate --size 2GB /dev/shm/$CLOUD_IMAGE_NAME.raw\n    LOOP_DEV=`losetup -f`\n    losetup $LOOP_DEV /dev/shm/$CLOUD_IMAGE_NAME.raw\n    mkfs $LOOP_DEV\n    mkdir -p /mnt/cloud-image\n    mount $LOOP_DEV /mnt/cloud-image\n    tar -xf /dev/shm/$CLOUD_IMAGE_NAME.tar.gz -C /mnt/cloud-image\n    if [ -f /mnt/cloud-image/etc/rsyslog.conf ]\n    then\n        sed -i.org 's/^$ModLoad imklog/#$ModLoad imklog/' /etc/rsyslog.conf\n    fi\n    umount $LOOP_DEV\n    losetup -d $LOOP_DEV\n\n    . /root/keystonerc_admin\n\n    glance image-create \\\n        --name $CLOUD_IMAGE_NAME-lxc \\\n        --is-public True \\\n        --disk-format raw \\\n        --container-format bare \\\n        --property hypervisor_type=lxc \\\n        --progress \\\n        --file /dev/shm/$CLOUD_IMAGE_NAME.raw && \\\n        rm /dev/shm/$CLOUD_IMAGE_NAME.raw && \\\n        rm /dev/shm/$CLOUD_IMAGE_NAME.tar.gz\n    glance image-list\n\n}\n\n#-----------------------------------------------------------\n# NOVA\n#-----------------------------------------------------------\nfunction setup_nova() {\n\n    sed -i.org \\\n        -e \"s/^virt_type=.*/virt_type=lxc/\" \\\n        -e \"s/^[# ]*use_cow_images=.*/use_cow_images=false/g\" \\\n        /etc/nova/nova.conf\n\n    #--- restart\n    chkconfig openstack-nova-metadata-api off\n    chkconfig openstack-nova-api          on\n\n    for SERVICE_NAME in $(ls  /etc/init.d/openstack-nova-*)\n    do\n        $SERVICE_NAME restart\n    done\n\n}\n\n#-----------------------------------------------------------\n# NEUTRON\n#-----------------------------------------------------------\nfunction setup_neutron() {\n\n    # /etc/neutron/plugin.ini\n    echo \"[ovs]\"                            >> /etc/neutron/plugin.ini\n    echo \"network_vlan_ranges = physnet1\"   >> /etc/neutron/plugin.ini\n    echo \"bridge_mappings = physnet1:br-ex\" >> /etc/neutron/plugin.ini\n\n    # /etc/neutron/*.ini\n    for i in /etc/neutron/*.ini\n    do\n        sed -i.org \"s/^[# ]*ovs_use_veth.*$/ovs_use_veth = True/g\" $i\n    done\n\n    # dhcp_agent.ini\n    sed -i.org \\\n        -e \"s/^enable_isolated_metadata.*$/enable_isolated_metadata = True/\" \\\n        -e \"s/^enable_metadata_network.*$/enable_metadata_network = True/\" \\\n        /etc/neutron/dhcp_agent.ini\n\n    # restart\n    for SERVICE_NAME in $(ls /etc/init.d/neutron-*)\n    do\n        $SERVICE_NAME restart\n    done\n\n}\n\n#-----------------------------------------------------------\n# NEUTRON DEMO NET\n#-----------------------------------------------------------\nfunction setup_neutron_demo_net(){\n\n    . /root/keystonerc_admin\n\n    #--- WAN\n    neutron net-create WAN \\\n        --shared \\\n        --router:external true\n\n    neutron subnet-create \\\n        --name wan_subnet \\\n        --enable_dhcp=False \\\n        --allocation-pool=start=$WAN_POOL_START,end=$WAN_POOL_END \\\n        --gateway=$WAN_GATEWAY \\\n        WAN \\\n        $WAN_NETWORK\n\n    #--- LAN\n    neutron net-create LAN \\\n        --shared\n\n    neutron subnet-create \\\n        --name lan_subnet \\\n        --enable_dhcp=True \\\n        --allocation-pool=start=$LAN_POOL_START,end=$LAN_POOL_END \\\n        --gateway=$LAN_GATEWAY \\\n        LAN \\\n        $LAN_NETWORK\n\n    #--- ROUTER\n    neutron router-create router\n    neutron router-gateway-set router WAN\n    neutron router-interface-add router lan_subnet\n\n}\n\n#-----------------------------------------------------------\n# SECGROUP\n#-----------------------------------------------------------\nfunction setup_secgroup(){\n\n    echo \"### setup_secgroup ###\"\n\n    . /root/keystonerc_admin\n    nova secgroup-add-rule default icmp -1 -1 0.0.0.0/0\n    nova secgroup-add-rule default tcp  22 22 0.0.0.0/0\n\n}\n\n#-----------------------------------------------------------\n# KEYPAIR\n#-----------------------------------------------------------\nfunction setup_keypair() {\n\n    echo \"### setup_keypair ###\"\n\n    . /root/keystonerc_admin\n    cd && nova keypair-add mykey > mykey && chmod 600 mykey\n    nova keypair-list\n\n}\n\n#-----------------------------------------------------------\n# FLAVOR\n#-----------------------------------------------------------\nfunction setup_flavor() {\n\n    echo \"### setup_flavor ###\"\n\n    . /root/keystonerc_admin\n    nova flavor-delete 1\n    #                  NAME   ID RAM DISK VCPUS\n    nova flavor-create m1.tiny 1  64    3     1\n    nova flavor-list\n\n}\n\nmain\n\n\n\n\nshell\nbash rdo-setup.sh\n\n\n\ncompute\u6a5f\u306b\u3066\n\u30cf\u30a4\u30d1\u30fc\u30d0\u30a4\u30b6\u3092lxc\u306b\u5909\u66f4\u3059\u308b\n\nshell\nntpdate ntp.nict.jp\nyum --enablerepo=epel install lxc lxc-templates lxc-doc lxc-libs\nvirsh net-destroy default\nvirsh net-autostart default --disable\nsed -i.org \\\n    -e \"s/^virt_type=.*/virt_type=lxc/\" \\\n    -e \"s/^[# ]*use_cow_images=.*/use_cow_images=false/g\" \\\n     /etc/nova/nova.conf\n\nfor SERVICE_NAME in $(ls  /etc/init.d/openstack-nova-*)\ndo\n    $SERVICE_NAME restart\ndone\nmv /selinux /selinux_\n\n\n\n\u307e\u3068\u3081\n\u4eee\u60f3\u4e0a\u306e\u691c\u8a3cOS\u3067openstack\u3092\u7d44\u3080\u3068\u304d\u306f\u30cf\u30a4\u30d1\u30fc\u30d0\u30a4\u30b6\u3092qemu\u306b\u3059\u308b\u3088\u308alxc\u306e\u307b\u3046\u304c\u304d\u3073\u304d\u3073\u3068\u52d5\u304f\u3002\ncentos\u306b\u306fqemu-ndb\u304c\u306a\u3044\u306e\u3067ubuntu\u3067\u5b9f\u88c5\u3059\u308b\u3088\u308a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30d3\u30eb\u30c9\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u3002\n## \u7528\u610f\u3059\u308b\u3082\u306e\n\n| \u30db\u30b9\u30c8\u540d     | OS        | eth0         | eth1          | gw          |\n|:--           |:--        |:--           |:--            |:--          |\n| controller   | CentOS6.5 | 192.168.1.41 | 192.168.11.41 | 192.168.1.1 |\n| compute      | CentOS6.5 | 192.168.1.42 | 192.168.11.42 | 192.168.1.1 |\n\n\n\ncontroller \u306b\u306f nova-compute\u4ee5\u5916 \u3059\u3079\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\ncompute \u306b\u306f nova-compute \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057 \u30cf\u30a4\u30d1\u30fc\u30d0\u30a4\u30b6\u306blxc\u3092\u5229\u7528\u3059\u308b\n\u3059\u3079\u3066\u30921\u53f0\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b\u304c\u4eca\u56de\u306fcompute\u3060\u3051\u72ec\u7acb\u3055\u305b\u308b\u3002\n\n## compute\u6a5f\u306b\u3066\n\n```shell:shell\necho \"192.168.1.41 controller\" >> /etc/hosts\necho \"192.168.1.42 compute\"    >> /etc/hosts\nsed -i \"s/^HOSTNAME=.*/HOSTNAME=compute/g\" /etc/sysconfig/network\nsed -i 's/^SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config\n```\n## controller\u6a5f\u306b\u3066\n\n```shell:shell\necho \"192.168.1.41 controller\" >> /etc/hosts\necho \"192.168.1.42 compute\"    >> /etc/hosts\nsed -i \"s/^HOSTNAME=.*/HOSTNAME=controller/g\" /etc/sysconfig/network\nsed -i 's/^SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config\nvi rdo-setup.sh\n```\n>\n```bash:rdo-setup.sh\n#!/bin/bash\n#http://theruddyduck.typepad.com/theruddyduck/2014/02/install-and-ccnfigure-openstack-neutron.html\n>\n#--- RDO\nRDO_URL=http://rdo.fedorapeople.org/openstack-icehouse/rdo-release-icehouse.rpm\n>\n#--- EPEL\nEPEL_URL=http://ftp.riken.jp/Linux/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm\n>\n#--- CLOUD IMAGE\nCLOUD_IMAGE_URL[0]=https://cloud-images.ubuntu.com/trusty/current/trusty-server-cloudimg-amd64-root.tar.gz\nCLOUD_IMAGE_URL[1]=http://cloud-images.ubuntu.com/precise/current/precise-server-cloudimg-amd64-root.tar.gz\n>\n#--- PUBLIC NETWORK\nWAN_IPADDRESS=192.168.1.41\nWAN_GATEWAY=192.168.1.1\nWAN_NETWORK=192.168.1.0/24\nWAN_POOL_START=192.168.1.100\nWAN_POOL_END=192.168.1.200\n>\n#--- PRIVATE NETWORK\nLAN_IPADDRESS=192.168.11.41\nLAN_GATEWAY=192.168.11.1\nLAN_NETWORK=192.168.11.0/24\nLAN_POOL_START=192.168.11.100\nLAN_POOL_END=192.168.11.200\n>\n#--- PASSWORD\nCONFIG_KEYSTONE_ADMIN_PW=password\nCONFIG_KEYSTONE_DEMO_PW=$CONFIG_KEYSTONE_ADMIN_PW\nCONFIG_RH_PW=RH_PW\nCONFIG_SATELLITE_PW=SATELLITE_PW\nCONFIG_SATELLITE_PROXY_PW=SATELLITE_PROXY_PW\nCONFIG_AMQP_NSS_CERTDB_PW=AMQP_NSS_CERTDB_PW\nCONFIG_MYSQL_PW=MYSQL_PW\nCONFIG_KEYSTONE_DB_PW=KEYSTONE_DB_PW\nCONFIG_GLANCE_DB_PW=LANCE_DB_PW\nCONFIG_GLANCE_KS_PW=GLANCE_KS_PW\nCONFIG_CINDER_DB_PW=CINDER_DB_PW\nCONFIG_CINDER_KS_PW=CINDER_KS_PW\nCONFIG_NOVA_DB_PW=NOVA_DB_PW\nCONFIG_NOVA_KS_PW=OVA_KS_PW\nCONFIG_NEUTRON_KS_PW=NEUTRON_KS_PW\nCONFIG_NEUTRON_DB_PW=NEUTRON_DB_PW\nCONFIG_NEUTRON_METADATA_PW=NEUTRON_METADATA_PW\nCONFIG_SWIFT_KS_PW=SWIFT_KS_PW\nCONFIG_PROVISION_TEMPEST_USER_PW=PROVISION_TEMPEST_USER_PW\nCONFIG_HEAT_DB_PW=HEAT_DB_PW\nCONFIG_HEAT_KS_PW=HEAT_KS_PW\nCONFIG_CEILOMETER_KS_PW=CEILOMETER_KS_PW\nCONFIG_NAGIOS_PW=NAGIOS_PW\n>\n#--- CONTROLLER HOSTS\nCONFIG_CONTROLLER_HOST=$LAN_IPADDRESS\nCONFIG_NETWORK_HOSTS=$CONFIG_CONTROLLER_HOST\nCONFIG_AMQP_HOST=$CONFIG_CONTROLLER_HOST\nCONFIG_MYSQL_HOST=$CONFIG_CONTROLLER_HOST\nCONFIG_MONGODB_HOST=$CONFIG_CONTROLLER_HOST\n>\n#--- COMPUTE HOSTS\nCONFIG_COMPUTE_HOSTS=192.168.11.42\n>\n#--- NOVA NETWORK\nCONFIG_NOVA_NETWORK_PUBIF=eth0\nCONFIG_NOVA_NETWORK_PRIVIF=eth1\nCONFIG_NOVA_COMPUTE_PRIVIF=eth1\n>\n#--- OVS\nCONFIG_NEUTRON_OVS_TUNNEL_IF=eth1\nCONFIG_NEUTRON_OVS_VLAN_RANGES=physnet1\nCONFIG_NEUTRON_OVS_BRIDGE_IFACES=br-ex:eth0\nCONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS=physnet1:br-ex\n>\n#--- NETWORK TYPE\nCONFIG_NEUTRON_ML2_TYPE_DRIVERS=vxlan\nCONFIG_NEUTRON_ML2_TENANT_NETWORK_TYPES=vxlan\nCONFIG_NEUTRON_OVS_TENANT_NETWORK_TYPE=vxlan\n>\n#--- CINDER\nCONFIG_CINDER_VOLUMES_SIZE=50G\n>\n#--- NTP\nNTP_SERVER=ntp.nict.jp\n>\n#----------------------------------------------------------\n# MAIN\n#----------------------------------------------------------\nfunction main() {\n>\n    #--- SET UP\n    setup_first\n>\n    #--- INSTALL RDO\n    packstack --gen-answer-file answer.txt\n    setup_rdo\n    packstack --answer-file answer.txt\n>\n    #--- OPENSTACK SETUP\n    create_glance_image ubuntu1204 ${CLOUD_IMAGE_URL[0]}\n    create_glance_image ubuntu1404 ${CLOUD_IMAGE_URL[1]}\n    setup_network\n    setup_neutron\n    setup_nova\n    setup_neutron_demo_net\n    setup_flavor\n    setup_secgroup\n    setup_keypair\n>\n    #--- FIN\n    . /root/keystonerc_admin\n    nova list\n    nova-manage service list\n    neutron agent-list\n    neutron net-list\n>\n}\n>\n#----------------------------------------------------------\n# SETUP INIT\n#----------------------------------------------------------\nfunction setup_first() {\n>\n    rpm -ivh $EPEL_URL\n    yum install -y --enablerepo=epel puppet nc wget ntpdate && ntpdate $NTP_SERVER\n    yum install -y $RDO_URL\n    yum install -y openstack-packstack\n    yum update  -y\n>\n    #--- SYSCTL\n    sed -i.org \\\n        -e \"s/^net.ipv4.ip_forward.*=.*0/net.ipv4.ip_forward = 1/\" \\\n        -e \"s/^net.ipv4.conf.all.rp_filter.*=.*1/net.ipv4.conf.all.rp_filter = 0/\" \\\n        -e \"s/^net.ipv4.conf.default.rp_filter.*=.*1/net.ipv4.conf.default.rp_filter = 0/\" \\\n        /etc/sysctl.conf\n>\n    sysctl -p\n>\n}\n>\n#----------------------------------------------------------\n# SETUP RDO\n#----------------------------------------------------------\nfunction setup_rdo() {\n>\n    #--- MAIN PASSWORD\n    sed -i.org \\\n        -e \"s/^CONFIG_KEYSTONE_ADMIN_PW=.*/CONFIG_KEYSTONE_ADMIN_PW=$CONFIG_KEYSTONE_ADMIN_PW/\" \\\n        -e \"s/^CONFIG_KEYSTONE_DEMO_PW=.*/CONFIG_KEYSTONE_DEMO_PW=$CONFIG_KEYSTONE_DEMO_PW/\" \\\n        answer.txt\n>\n    #--- OTHER PASSWORD\n    sed -i \\\n        -e \"s/^CONFIG_AMQP_NSS_CERTDB_PW=.*/CONFIG_AMQP_NSS_CERTDB_PW=$CONFIG_AMQP_NSS_CERTDB_PW/\" \\\n        -e \"s/^CONFIG_MYSQL_PW=.*/CONFIG_MYSQL_PW=$CONFIG_MYSQL_PW/\" \\\n        -e \"s/^CONFIG_KEYSTONE_DB_PW=.*/CONFIG_KEYSTONE_DB_PW=$CONFIG_KEYSTONE_DB_PW/\" \\\n        -e \"s/^CONFIG_GLANCE_DB_PW=.*/CONFIG_GLANCE_DB_PW=$CONFIG_GLANCE_DB_PW/\" \\\n        -e \"s/^CONFIG_GLANCE_KS_PW=.*/CONFIG_GLANCE_KS_PW=$CONFIG_GLANCE_KS_PW/\" \\\n        -e \"s/^CONFIG_CINDER_DB_PW=.*/CONFIG_CINDER_DB_PW=$CONFIG_CINDER_DB_PW/\" \\\n        -e \"s/^CONFIG_CINDER_KS_PW=.*/CONFIG_CINDER_KS_PW=$CONFIG_CINDER_KS_PW/\" \\\n        -e \"s/^CONFIG_NOVA_DB_PW=.*/CONFIG_NOVA_DB_PW=$CONFIG_NOVA_DB_PW/\" \\\n        -e \"s/^CONFIG_NOVA_KS_PW=.*/CONFIG_NOVA_KS_PW=$CONFIG_NOVA_KS_PW/\" \\\n        -e \"s/^CONFIG_NEUTRON_KS_PW=.*/CONFIG_NEUTRON_KS_PW=$CONFIG_NEUTRON_KS_PW/\" \\\n        -e \"s/^CONFIG_NEUTRON_DB_PW=.*/CONFIG_NEUTRON_DB_PW=$CONFIG_NEUTRON_DB_PW/\" \\\n        -e \"s/^CONFIG_NEUTRON_METADATA_PW=.*/CONFIG_NEUTRON_METADATA_PW=$CONFIG_NEUTRON_METADATA_PW/\" \\\n        -e \"s/^CONFIG_SWIFT_KS_PW=.*/CONFIG_SWIFT_KS_PW=$CONFIG_SWIFT_KS_PW/\" \\\n        -e \"s/^CONFIG_PROVISION_TEMPEST_USER_PW=.*/CONFIG_PROVISION_TEMPEST_USER_PW=$CONFIG_PROVISION_TEMPEST_USER_PW/\" \\\n        -e \"s/^CONFIG_HEAT_DB_PW=.*/CONFIG_HEAT_DB_PW=$CONFIG_HEAT_DB_PW/\" \\\n        -e \"s/^CONFIG_HEAT_KS_PW=.*/CONFIG_HEAT_KS_PW=$CONFIG_HEAT_KS_PW/\" \\\n        -e \"s/^CONFIG_CEILOMETER_KS_PW=.*/CONFIG_CEILOMETER_KS_PW=$CONFIG_CEILOMETER_KS_PW/\" \\\n        -e \"s/^CONFIG_NAGIOS_PW=.*/CONFIG_NAGIOS_PW=$CONFIG_NAGIOS_PW/\" \\\n        answer.txt\n>\n    #--- SERVICE HOSTS\n    sed -i \\\n        -e \"s/^CONFIG_CONTROLLER_HOST=.*/CONFIG_CONTROLLER_HOST=$CONFIG_CONTROLLER_HOST/\" \\\n        -e \"s/^CONFIG_NETWORK_HOSTS=.*/CONFIG_NETWORK_HOSTS=$CONFIG_NETWORK_HOSTS/\" \\\n        -e \"s/^CONFIG_AMQP_HOST=.*/CONFIG_AMQP_HOST=$CONFIG_AMQP_HOST/\" \\\n        -e \"s/^CONFIG_MYSQL_HOST=.*/CONFIG_MYSQL_HOST=$CONFIG_MYSQL_HOST/\" \\\n        -e \"s/^CONFIG_MONGODB_HOST=.*/CONFIG_MONGODB_HOST=$CONFIG_MONGODB_HOST/\" \\\n        -e \"s/^CONFIG_COMPUTE_HOSTS=.*/CONFIG_COMPUTE_HOSTS=$CONFIG_COMPUTE_HOSTS/\" \\\n        answer.txt\n>\n    #--- IFACES\n    sed -i \\\n        -e \"s/^CONFIG_NOVA_COMPUTE_PRIVIF=.*/CONFIG_NOVA_COMPUTE_PRIVIF=$CONFIG_NOVA_COMPUTE_PRIVIF/\" \\\n        -e \"s/^CONFIG_NOVA_NETWORK_PUBIF=.*/CONFIG_NOVA_NETWORK_PUBIF=$CONFIG_NOVA_NETWORK_PUBIF/\" \\\n        -e \"s/^CONFIG_NOVA_NETWORK_PRIVIF=.*/CONFIG_NOVA_NETWORK_PRIVIF=$CONFIG_NOVA_NETWORK_PRIVIF/\" \\\n        -e \"s/^CONFIG_NEUTRON_OVS_BRIDGE_IFACES=.*/CONFIG_NEUTRON_OVS_BRIDGE_IFACES=$CONFIG_NEUTRON_OVS_BRIDGE_IFACES/\" \\\n        -e \"s/^CONFIG_NEUTRON_OVS_TUNNEL_IF=.*/CONFIG_NEUTRON_OVS_TUNNEL_IF=$CONFIG_NEUTRON_OVS_TUNNEL_IF/\" \\\n        answer.txt\n>\n    #--- NEUTRON OVS\n    sed -i \\\n        -e \"s/^CONFIG_NEUTRON_OVS_VLAN_RANGES=.*/CONFIG_NEUTRON_OVS_VLAN_RANGES=$CONFIG_NEUTRON_OVS_VLAN_RANGES/\" \\\n        -e \"s/^CONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS=.*/CONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS=$CONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS/\" \\\n         answer.txt\n>\n    #--- NETWORK TYPE\n    sed -i \\\n        -e \"s/^CONFIG_NEUTRON_ML2_TYPE_DRIVERS=.*/CONFIG_NEUTRON_ML2_TYPE_DRIVERS=$CONFIG_NEUTRON_ML2_TYPE_DRIVERS/\" \\\n        -e \"s/^CONFIG_NEUTRON_ML2_TENANT_NETWORK_TYPES=.*/CONFIG_NEUTRON_ML2_TENANT_NETWORK_TYPES=$CONFIG_NEUTRON_ML2_TENANT_NETWORK_TYPES/\" \\\n        -e \"s/^CONFIG_NEUTRON_OVS_TENANT_NETWORK_TYPE=.*/CONFIG_NEUTRON_OVS_TENANT_NETWORK_TYPE=$CONFIG_NEUTRON_OVS_TENANT_NETWORK_TYPE/\" \\\n        answer.txt\n>\n    #--- DEMO\n    sed -i \\\n        -e \"s/^CONFIG_PROVISION_DEMO=y/CONFIG_PROVISION_DEMO=n/\" \\\n        answer.txt\n>\n    #--- TOKEN FORMAT\n    sed -i \\\n        -e \"s/^CONFIG_KEYSTONE_TOKEN_FORMAT=PKI/CONFIG_KEYSTONE_TOKEN_FORMAT=UUID/\" \\\n        answer.txt\n>\n    #--- CINDER\n    sed -i \\\n        -e \"s/^CONFIG_CINDER_VOLUMES_SIZE=20G/CONFIG_CINDER_VOLUMES_SIZE=$CONFIG_CINDER_VOLUMES_SIZE/\" \\\n        answer.txt\n>\n    #--- HEAT INSTALL\n    sed -i \\\n        -e \"s/^CONFIG_HEAT_INSTALL=n/CONFIG_HEAT_INSTALL=y/\" \\\n        -e \"s/^CONFIG_HEAT_CLOUDWATCH_INSTALL=n/CONFIG_HEAT_CLOUDWATCH_INSTALL=y/\" \\\n        -e \"s/^CONFIG_HEAT_CFN_INSTALL=n/CONFIG_HEAT_CFN_INSTALL=y/\" \\\n        answer.txt\n>\n    #-----------------------------------------------------------\n    # NO INSTALL\n    #-----------------------------------------------------------\n    #--- NAGIOS NO INSTALL\n    sed -i \\\n        -e \"s/^CONFIG_NAGIOS_INSTALL=y/CONFIG_NAGIOS_INSTALL=n/\" \\\n        answer.txt\n>\n    #--- CINDER NO INSTALL\n    #sed -i \\\n    #    -e \"s/^CONFIG_CINDER_INSTALL=.*/CONFIG_CINDER_INSTALL=n/\" \\\n    #     answer.txt\n>\n    #--- SWIFT NO INSTALL\n    #sed -i \\\n    #    -e \"s/^CONFIG_SWIFT_INSTALL=.*/CONFIG_SWIFT_INSTALL=n/\" \\\n    #     answer.txt\n>\n    #--- CEILOMETER NO INSTALL\n    #sed -i \\\n    #    -e \"s/^CONFIG_CEILOMETER_INSTALL=.*/CONFIG_CEILOMETER_INSTALL=n/\" \\\n    #     answer.txt\n}\n>\n#-----------------------------------------------------------\n# NETWORK\n#-----------------------------------------------------------\nfunction setup_network() {\n>\n    # ifcfg-eth0\n    cat << EOT >/etc/sysconfig/network-scripts/ifcfg-eth0 && sed -i 's/^ *//g' /etc/sysconfig/network-scripts/ifcfg-eth0\n        DEVICE=eth0\n        ONBOOT=yes\n        TYPE=OVSPort\n        DEVICETYPE=ovs\n        OVS_BRIDGE=br-ex\nEOT\n>\n    # ifcfg-br-ex\n    cat << EOT > /etc/sysconfig/network-scripts/ifcfg-br-ex && sed -i 's/^ *//g' /etc/sysconfig/network-scripts/ifcfg-br-ex\n        DEVICE=br-ex\n        TYPE=OVSBridge\n        DEVICETYPE=ovs\n        BOOTPROTO=static\n        IPADDR=$WAN_IPADDRESS\n        NETMASK=255.255.255.0\n        GATEWAY=$WAN_GATEWAY\n        ONBOOT=yes\nEOT\n>\n    # restart\n    /etc/init.d/network restart\n>\n}\n>\n#-----------------------------------------------------------\n# GLANCE\n#-----------------------------------------------------------\nfunction create_glance_image() {\n>\n    local CLOUD_IMAGE_NAME=$1\n    local CLOUD_IMAGE_URL=$2\n>\n    wget $CLOUD_IMAGE_URL -O /dev/shm/$CLOUD_IMAGE_NAME.tar.gz\n    truncate --size 2GB /dev/shm/$CLOUD_IMAGE_NAME.raw\n    LOOP_DEV=`losetup -f`\n    losetup $LOOP_DEV /dev/shm/$CLOUD_IMAGE_NAME.raw\n    mkfs $LOOP_DEV\n    mkdir -p /mnt/cloud-image\n    mount $LOOP_DEV /mnt/cloud-image\n    tar -xf /dev/shm/$CLOUD_IMAGE_NAME.tar.gz -C /mnt/cloud-image\n    if [ -f /mnt/cloud-image/etc/rsyslog.conf ]\n    then\n        sed -i.org 's/^$ModLoad imklog/#$ModLoad imklog/' /etc/rsyslog.conf\n    fi\n    umount $LOOP_DEV\n    losetup -d $LOOP_DEV\n>\n    . /root/keystonerc_admin\n>\n    glance image-create \\\n        --name $CLOUD_IMAGE_NAME-lxc \\\n        --is-public True \\\n        --disk-format raw \\\n        --container-format bare \\\n        --property hypervisor_type=lxc \\\n        --progress \\\n        --file /dev/shm/$CLOUD_IMAGE_NAME.raw && \\\n        rm /dev/shm/$CLOUD_IMAGE_NAME.raw && \\\n        rm /dev/shm/$CLOUD_IMAGE_NAME.tar.gz\n    glance image-list\n>\n}\n>\n#-----------------------------------------------------------\n# NOVA\n#-----------------------------------------------------------\nfunction setup_nova() {\n>\n    sed -i.org \\\n        -e \"s/^virt_type=.*/virt_type=lxc/\" \\\n        -e \"s/^[# ]*use_cow_images=.*/use_cow_images=false/g\" \\\n        /etc/nova/nova.conf\n>\n    #--- restart\n    chkconfig openstack-nova-metadata-api off\n    chkconfig openstack-nova-api          on\n>\n    for SERVICE_NAME in $(ls  /etc/init.d/openstack-nova-*)\n    do\n        $SERVICE_NAME restart\n    done\n>\n}\n>\n#-----------------------------------------------------------\n# NEUTRON\n#-----------------------------------------------------------\nfunction setup_neutron() {\n>\n    # /etc/neutron/plugin.ini\n    echo \"[ovs]\"                            >> /etc/neutron/plugin.ini\n    echo \"network_vlan_ranges = physnet1\"   >> /etc/neutron/plugin.ini\n    echo \"bridge_mappings = physnet1:br-ex\" >> /etc/neutron/plugin.ini\n>\n    # /etc/neutron/*.ini\n    for i in /etc/neutron/*.ini\n    do\n        sed -i.org \"s/^[# ]*ovs_use_veth.*$/ovs_use_veth = True/g\" $i\n    done\n>\n    # dhcp_agent.ini\n    sed -i.org \\\n        -e \"s/^enable_isolated_metadata.*$/enable_isolated_metadata = True/\" \\\n        -e \"s/^enable_metadata_network.*$/enable_metadata_network = True/\" \\\n        /etc/neutron/dhcp_agent.ini\n>\n    # restart\n    for SERVICE_NAME in $(ls /etc/init.d/neutron-*)\n    do\n        $SERVICE_NAME restart\n    done\n>\n}\n>\n#-----------------------------------------------------------\n# NEUTRON DEMO NET\n#-----------------------------------------------------------\nfunction setup_neutron_demo_net(){\n>\n    . /root/keystonerc_admin\n>\n    #--- WAN\n    neutron net-create WAN \\\n        --shared \\\n        --router:external true\n>\n    neutron subnet-create \\\n        --name wan_subnet \\\n        --enable_dhcp=False \\\n        --allocation-pool=start=$WAN_POOL_START,end=$WAN_POOL_END \\\n        --gateway=$WAN_GATEWAY \\\n        WAN \\\n        $WAN_NETWORK\n>\n    #--- LAN\n    neutron net-create LAN \\\n        --shared\n>\n    neutron subnet-create \\\n        --name lan_subnet \\\n        --enable_dhcp=True \\\n        --allocation-pool=start=$LAN_POOL_START,end=$LAN_POOL_END \\\n        --gateway=$LAN_GATEWAY \\\n        LAN \\\n        $LAN_NETWORK\n>\n    #--- ROUTER\n    neutron router-create router\n    neutron router-gateway-set router WAN\n    neutron router-interface-add router lan_subnet\n>\n}\n>\n#-----------------------------------------------------------\n# SECGROUP\n#-----------------------------------------------------------\nfunction setup_secgroup(){\n>\n    echo \"### setup_secgroup ###\"\n>\n    . /root/keystonerc_admin\n    nova secgroup-add-rule default icmp -1 -1 0.0.0.0/0\n    nova secgroup-add-rule default tcp  22 22 0.0.0.0/0\n>\n}\n>\n#-----------------------------------------------------------\n# KEYPAIR\n#-----------------------------------------------------------\nfunction setup_keypair() {\n>\n    echo \"### setup_keypair ###\"\n>\n    . /root/keystonerc_admin\n    cd && nova keypair-add mykey > mykey && chmod 600 mykey\n    nova keypair-list\n>\n}\n>\n#-----------------------------------------------------------\n# FLAVOR\n#-----------------------------------------------------------\nfunction setup_flavor() {\n>\n    echo \"### setup_flavor ###\"\n>\n    . /root/keystonerc_admin\n    nova flavor-delete 1\n    #                  NAME   ID RAM DISK VCPUS\n    nova flavor-create m1.tiny 1  64    3     1\n    nova flavor-list\n>\n}\n>\nmain\n```\n\n```shell:shell\nbash rdo-setup.sh\n```\n\n## compute\u6a5f\u306b\u3066\n\n\u30cf\u30a4\u30d1\u30fc\u30d0\u30a4\u30b6\u3092lxc\u306b\u5909\u66f4\u3059\u308b\n\n```shell:shell\nntpdate ntp.nict.jp\nyum --enablerepo=epel install lxc lxc-templates lxc-doc lxc-libs\nvirsh net-destroy default\nvirsh net-autostart default --disable\nsed -i.org \\\n    -e \"s/^virt_type=.*/virt_type=lxc/\" \\\n    -e \"s/^[# ]*use_cow_images=.*/use_cow_images=false/g\" \\\n     /etc/nova/nova.conf\n\nfor SERVICE_NAME in $(ls  /etc/init.d/openstack-nova-*)\ndo\n    $SERVICE_NAME restart\ndone\nmv /selinux /selinux_\n```\n\n##\u307e\u3068\u3081\n\u4eee\u60f3\u4e0a\u306e\u691c\u8a3cOS\u3067openstack\u3092\u7d44\u3080\u3068\u304d\u306f\u30cf\u30a4\u30d1\u30fc\u30d0\u30a4\u30b6\u3092qemu\u306b\u3059\u308b\u3088\u308alxc\u306e\u307b\u3046\u304c\u304d\u3073\u304d\u3073\u3068\u52d5\u304f\u3002\ncentos\u306b\u306fqemu-ndb\u304c\u306a\u3044\u306e\u3067ubuntu\u3067\u5b9f\u88c5\u3059\u308b\u3088\u308a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30d3\u30eb\u30c9\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u3002\n"}