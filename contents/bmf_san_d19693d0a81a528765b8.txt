{"tags": ["bitflyer", "\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3", "nodejs"], "context": "\u524d\u56de\u3001bitflyer\u306eAPI\u3092\u53e9\u304f\u3060\u3051\u53e9\u3044\u3066\u30dd\u30a4\u30fc\u3057\u3066\u305f\u306e\u3067\u3001\u4eca\u56de\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u30c7\u30fc\u30bf\u3092\u6574\u5f62\u3057\u3066\u8cc7\u7523\u60c5\u5831\u30c7\u30fc\u30bf\u3068\u3057\u3066slack\u306b\u6295\u3052\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u3068\u308a\u3042\u3048\u305aasync\u3067\u975e\u540c\u671f\u51e6\u7406\nAPI\u3092\u8907\u6570\u53e9\u304f\u5fc5\u8981\u304c\u3042\u3063\u305f\u306e\u3067async\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u30a8\u30e9\u30fc\u62fe\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u306f\u53c2\u8003\u30b5\u30a4\u30c8\uff08\u5931\u5ff5\u3057\u307e\u3057\u305f\uff09\u3092\u771f\u4f3c\u3066\u3044\u307e\u3059\u3002\n\u306a\u3093\u3060\u304b\u898b\u901a\u3057\u306e\u60aa\u3044\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u30fb\u30fb\u30fb\nvar request = require('request');\nvar crypto = require('crypto');\nvar async = require('async');\n\nvar key = 'YOUR_KEY';\nvar secret = 'YOUR_SECRET';\n\nvar timestamp = Date.now().toString();\nvar sign = crypto.createHmac('sha256', secret).update(timestamp + 'GET' + '/v1/me/getbalance').digest('hex');\n\nvar requests = [{\n    url: 'https://api.bitflyer.jp/v1/me/getbalance',\n    headers: {\n        'ACCESS-KEY': key,\n        'ACCESS-TIMESTAMP': timestamp,\n        'ACCESS-SIGN': sign,\n        'Content-Type': 'application/json'\n    }\n}, {\n    url: 'https://api.bitflyer.jp/v1/getexecutions'\n}];\n\nasync.map(requests, function(obj, callback) {\n    request(obj, function(error, response, body) {\n        if (!error && response.statusCode == 200) {\n            var body = JSON.parse(body);\n            callback(null, body);\n        } else {\n            callback(error || response.statusCode);\n        }\n    });\n}, function(err, results) {\n    if (err) {\n        console.log(err);\n    } else {\n        var jpy_available = parseInt(results[0][0]['available']);\n        var btc_available = results[0][1]['available'];\n        var price = parseInt(results[1][1]['price']);\n        var total_assets = Math.floor(btc_available*price);\n\n        var data = JSON.stringify({\n            \"attachments\": [{\n                \"fallback\": \"bitflyer\u8cc7\u7523\u60c5\u5831\",\n                \"color\": \"danger\",\n                \"title\": \"bitflyer\u8cc7\u7523\u60c5\u5831\",\n                \"text\": \"\u73fe\u5728\u4fdd\u6709\u3057\u3066\u3044\u308bBTC\u306f\" + btc_available + \"\u3067\u3059\",\n                \"fields\": [{\n                    \"title\": \"BTC\u7dcf\u8cc7\u7523\",\n                    \"value\": total_assets,\n                    \"short\": true\n                }, {\n                    \"title\": \"JPY(\u6b8b\u9ad8)\",\n                    \"value\": jpy_available + '\u5186',\n                    \"short\": true\n                }]\n            }],\n            \"username\": \"your-bot-name\",\n            \"icon_url\": \"/path/to/img\",\n            \"channel\": \"#yourslackchannel\"\n        });\n\n        var options = {\n            url: 'https://hooks.slack.com/services/WEBHOOK_TOKEN',\n            form: 'payload=' + data,\n            json: true\n        };\n\n        request.post(options, function(error, response, body) {\n            if (!error && response.statusCode == 200) {\n                console.log(body.name);\n            } else {\n                console.log('error: ' + response.statusCode + body);\n            }\n        });\n    }\n});\n\n\n\u7591\u554f\n\u7dcf\u8cc7\u7523\u306f\u6240\u6709\u3059\u308b\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u00d7\u76f4\u8fd1\u306e\u53d6\u5f15\u4fa1\u683c\uff08\u5186\uff09\u3067\u8a08\u7b97\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u7dcf\u8cc7\u7523\u3063\u3066\u4e00\u767a\u30c7\u30fc\u30bf\u3067\u53d6\u308c\u306a\u3044\u3093\u3067\u3059\u304b\u306d\u30fb\u30fb\uff1f\n\n\u8ab2\u984c\n\u6d6e\u52d5\u5c0f\u6570\u90e8\u5206\u306e\u6570\u5024\u306e\u8a08\u7b97\u304c\u96d1\u3059\u304e\u308b\u305f\u3081\u304b\u3001\u8aa4\u5dee\u304c\u751f\u3058\u3066\u3044\u307e\u3059\uff57\n\u306a\u306e\u3067\u305d\u306e\u8fba\u3057\u3063\u304b\u308a\u3084\u308a\u305f\u3044\u3067\u3059\u3002\u3002\u3002\u3002\n\n\u30bd\u30fc\u30b9\n\nbitflyer-private-api-and-slack-api-sample\n\n[\u524d\u56de](http://qiita.com/bmf_san/items/7ae9fc2c83d563291671)\u3001bitflyer\u306eAPI\u3092\u53e9\u304f\u3060\u3051\u53e9\u3044\u3066\u30dd\u30a4\u30fc\u3057\u3066\u305f\u306e\u3067\u3001\u4eca\u56de\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u30c7\u30fc\u30bf\u3092\u6574\u5f62\u3057\u3066\u8cc7\u7523\u60c5\u5831\u30c7\u30fc\u30bf\u3068\u3057\u3066slack\u306b\u6295\u3052\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n# \u3068\u308a\u3042\u3048\u305aasync\u3067\u975e\u540c\u671f\u51e6\u7406\n\nAPI\u3092\u8907\u6570\u53e9\u304f\u5fc5\u8981\u304c\u3042\u3063\u305f\u306e\u3067async\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u30a8\u30e9\u30fc\u62fe\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u306f\u53c2\u8003\u30b5\u30a4\u30c8\uff08\u5931\u5ff5\u3057\u307e\u3057\u305f\uff09\u3092\u771f\u4f3c\u3066\u3044\u307e\u3059\u3002\n\u306a\u3093\u3060\u304b\u898b\u901a\u3057\u306e\u60aa\u3044\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u30fb\u30fb\u30fb\n\n```js\nvar request = require('request');\nvar crypto = require('crypto');\nvar async = require('async');\n\nvar key = 'YOUR_KEY';\nvar secret = 'YOUR_SECRET';\n\nvar timestamp = Date.now().toString();\nvar sign = crypto.createHmac('sha256', secret).update(timestamp + 'GET' + '/v1/me/getbalance').digest('hex');\n\nvar requests = [{\n    url: 'https://api.bitflyer.jp/v1/me/getbalance',\n    headers: {\n        'ACCESS-KEY': key,\n        'ACCESS-TIMESTAMP': timestamp,\n        'ACCESS-SIGN': sign,\n        'Content-Type': 'application/json'\n    }\n}, {\n    url: 'https://api.bitflyer.jp/v1/getexecutions'\n}];\n\nasync.map(requests, function(obj, callback) {\n    request(obj, function(error, response, body) {\n        if (!error && response.statusCode == 200) {\n            var body = JSON.parse(body);\n            callback(null, body);\n        } else {\n            callback(error || response.statusCode);\n        }\n    });\n}, function(err, results) {\n    if (err) {\n        console.log(err);\n    } else {\n        var jpy_available = parseInt(results[0][0]['available']);\n        var btc_available = results[0][1]['available'];\n        var price = parseInt(results[1][1]['price']);\n        var total_assets = Math.floor(btc_available*price);\n\n        var data = JSON.stringify({\n            \"attachments\": [{\n                \"fallback\": \"bitflyer\u8cc7\u7523\u60c5\u5831\",\n                \"color\": \"danger\",\n                \"title\": \"bitflyer\u8cc7\u7523\u60c5\u5831\",\n                \"text\": \"\u73fe\u5728\u4fdd\u6709\u3057\u3066\u3044\u308bBTC\u306f\" + btc_available + \"\u3067\u3059\",\n                \"fields\": [{\n                    \"title\": \"BTC\u7dcf\u8cc7\u7523\",\n                    \"value\": total_assets,\n                    \"short\": true\n                }, {\n                    \"title\": \"JPY(\u6b8b\u9ad8)\",\n                    \"value\": jpy_available + '\u5186',\n                    \"short\": true\n                }]\n            }],\n            \"username\": \"your-bot-name\",\n            \"icon_url\": \"/path/to/img\",\n            \"channel\": \"#yourslackchannel\"\n        });\n\n        var options = {\n            url: 'https://hooks.slack.com/services/WEBHOOK_TOKEN',\n            form: 'payload=' + data,\n            json: true\n        };\n\n        request.post(options, function(error, response, body) {\n            if (!error && response.statusCode == 200) {\n                console.log(body.name);\n            } else {\n                console.log('error: ' + response.statusCode + body);\n            }\n        });\n    }\n});\n```\n\n# \u7591\u554f\n\u7dcf\u8cc7\u7523\u306f`\u6240\u6709\u3059\u308b\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u00d7\u76f4\u8fd1\u306e\u53d6\u5f15\u4fa1\u683c\uff08\u5186\uff09`\u3067\u8a08\u7b97\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u7dcf\u8cc7\u7523\u3063\u3066\u4e00\u767a\u30c7\u30fc\u30bf\u3067\u53d6\u308c\u306a\u3044\u3093\u3067\u3059\u304b\u306d\u30fb\u30fb\uff1f\n\n# \u8ab2\u984c\n\u6d6e\u52d5\u5c0f\u6570\u90e8\u5206\u306e\u6570\u5024\u306e\u8a08\u7b97\u304c\u96d1\u3059\u304e\u308b\u305f\u3081\u304b\u3001\u8aa4\u5dee\u304c\u751f\u3058\u3066\u3044\u307e\u3059\uff57\n\u306a\u306e\u3067\u305d\u306e\u8fba\u3057\u3063\u304b\u308a\u3084\u308a\u305f\u3044\u3067\u3059\u3002\u3002\u3002\u3002\n\n# \u30bd\u30fc\u30b9\n+ [bitflyer-private-api-and-slack-api-sample](https://github.com/bmf-san/bitflyer-private-api-and-slack-api-sample)\n"}