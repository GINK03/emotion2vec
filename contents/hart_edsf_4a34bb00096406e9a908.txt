{"context": " More than 1 year has passed since last update.\u524d\u3005\u56de\uff1aDX\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u3092\u4f7f\u3046 \u305d\u306e\uff11(\u3068\u308a\u3042\u3048\u305a\u7de8)\n\u524d\u56de\uff1aDX\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u3092\u4f7f\u3046 \u305d\u306e\uff12(HLSL\u7de8)\n\n\u4eca\u56de\u3084\u308b\u3053\u3068\n\u524d\u56de\u307e\u3067\u3067\u3056\u3063\u3068\u6982\u8981\u66f8\u3044\u305f\u306e\u3067\u4eca\u56de\u306f\u5b9f\u969b\u306b\uff12\u3064\u307b\u3069\u30b7\u30a7\u30fc\u30c0\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u3053\u306e\u4e00\u9023\u306e\u8a18\u4e8b\u3092\u7de0\u3081\u3088\u3046\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u3084\u308b\u3053\u3068\u306f\n\u30fb\u4e00\u5b9a\u9818\u57df\u306e\u753b\u50cf\u8272\u53cd\u8ee2\n\u30fb\u30e9\u30b9\u30bf\u30fc\u30b9\u30af\u30ed\u30fc\u30eb\n\u306e\uff12\u3064\u3067\u884c\u304d\u307e\u3059\u3002\n\nDX\u30e9\u30a4\u30d6\u30e9\u30ea\u5074\u306e\u30b3\u30fc\u30c9\nDX\u30e9\u30a4\u30d6\u30e9\u30ea\u5074\u306e\u30b3\u30fc\u30c9\u306f\u5927\u4f53\u5909\u308f\u3089\u306a\u3044\u306e\u3067\u5909\u308f\u308b\u90e8\u5206\u4ee5\u5916(\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u90e8\u5206\u4ee5\u5916)\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u3084\u308a\u307e\u3059\u3002\n\nshader.cpp\n#include <DxLib.h>\n\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance\n    , LPSTR lpCmdLine, int nShowCmd)\n{\n    ChangeWindowMode(TRUE);\n    SetGraphMode(640, 480, 32);\n    if (DxLib_Init() == -1) { return -1; }      \n    SetDrawScreen(DX_SCREEN_BACK);      \n\n    int test = LoadGraph(\"back1.png\");\n    //\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u8aad\u307f\u8fbc\u307f\n    int shaderhandle = LoadPixelShader(\"test.pso\");\n    //\u65b0\u305f\u306b\u63cf\u753b\u53ef\u80fd\u753b\u50cf\u3092\u4f5c\u6210\u3057\u3066\u30b7\u30a7\u30fc\u30c0\u306b\u3053\u308c\u3092\u6e21\u3059\n    int thirdscreen = MakeScreen(640, 480);\n    //\u9802\u70b9\u306e\u8a2d\u5b9a\n    VERTEX2DSHADER vertex[4];\n    for (int i = 0; i < 4; i++)\n    {\n        vertex[i].pos = VGet((i%2)*640.0f, (i/2)*480.0f, 0);\n        vertex[i].rhw = 1.0f;\n        vertex[i].dif = GetColorU8(255, 255, 255, 255);\n        vertex[i].spc = GetColorU8(0, 0, 0, 0);\n        vertex[i].u = vertex[i].su = (float)(i%2);\n        vertex[i].v = vertex[i].sv = (float)(i/2);\n    }\n\n    //\u3053\u3053\u306b\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u3002\u4e0b\u306e\u8a18\u4e8b\u306b\u66f8\u304f\u90e8\u5206\u3092\u633f\u5165\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n    DxLib_End();\n    return 0;\n}\n\n\n\n\u7279\u5b9a\u9818\u57df\u306e\u8272\u53cd\u8ee2\u30a8\u30d5\u30a7\u30af\u30c8\nHLSL\u306efloat4\u306a\u3069\u306e\u578b\u3067\u306f\u8907\u6570\u306e\u30e1\u30f3\u30d0\u306b\u5bfe\u3057\u3066\u5171\u901a\u306e\u51e6\u7406\u3092\u884c\u3046\u5834\u5408\u306brgb\u306a\u3069\u51e6\u7406\u3057\u305f\u3044\u30e1\u30f3\u30d0\u3092\u4e00\u6c17\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\nmainloop.cpp\n    while (!ProcessMessage() && !CheckHitKey(KEY_INPUT_ESCAPE))\n    {\n        //\u63cf\u753b\u53ef\u80fd\u753b\u50cf\u306b\u5bfe\u3057\u3066\u66f8\u304d\u8fbc\u307f\n        SetDrawScreen(thirdscreen);\n        ClearDrawScreen();\n        DrawGraph(0, 0, test, TRUE);\n\n        //\u63cf\u753b\u5bfe\u8c61\u3092\u30d0\u30c3\u30af\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u623b\u3057\u3066\u30b7\u30a7\u30fc\u30c0\u3092\u4f7f\u3063\u3066\u63cf\u753b\n        SetDrawScreen(DX_SCREEN_BACK);\n        //\u30b7\u30a7\u30fc\u30c0\u3067\u4f7f\u3046\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u5148\u307b\u3069\u4f5c\u3063\u305f\u63cf\u753b\u53ef\u80fd\u753b\u50cf\n        SetUseTextureToShader(0, thirdscreen);\n        //\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u306e\u30bb\u30c3\u30c8\n        SetUsePixelShader(shaderhandle);\n        DrawPrimitive2DToShader(vertex, 4, DX_PRIMTYPE_TRIANGLESTRIP);\n        ScreenFlip();\n        ClearDrawScreen();\n    }\n\n\n\ntest.fx\n// \u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u5165\u529b\nstruct PS_INPUT\n{\n    float4 DiffuseColor       : COLOR0 ;\n    float4 SpecularColor      : COLOR1 ;\n    float2 TextureCoord0      : TEXCOORD0 ;\n    float2 TextureCoord1      : TEXCOORD1 ;\n} ;\n\n// \u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u51fa\u529b\nstruct PS_OUTPUT\n{\n    float4 Output             : COLOR0 ;\n} ;\n\n// \u63cf\u753b\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\nsampler Texture : register( s0 ) ;\n\nPS_OUTPUT main( PS_INPUT PSInput )  //\u5165\u529b\u5024\n{\n    PS_OUTPUT PSOutput ;\n    float4 TextureColor;\n    TextureColor = tex2D( Texture , PSInput.TextureCoord0 );\n\n    if(0.3 < PSInput.TextureCoord0.y && PSInput.TextureCoord0.y < 0.7 )\n    {\n        //rgb\u3068\u66f8\u304f\u3068r,g,b\u306e\u8981\u7d20\u305d\u308c\u305e\u308c\u306b\u51e6\u7406\u3092\u884c\u3063\u3066\u304f\u308c\u307e\u3059\n        //\u3053\u3053\u3067\u306f\u8272\u306e\u53cd\u8ee2\u3092\u884c\u3063\u3066\u307e\u3059\n        TextureColor.rgb = 1.0 - TextureColor.rgb;\n    }\n\n    PSOutput.Output = TextureColor;\n    return PSOutput;\n}\n\n\n\u7d50\u679c\uff1a\n\n\n\u30e9\u30b9\u30bf\u30fc\u30b9\u30af\u30ed\u30fc\u30eb\n\u30e9\u30b9\u30bf\u30fc\u30b9\u30af\u30ed\u30fc\u30eb\u3068\u3044\u3046\u306e\u306f\u6614\u3088\u304f\u898b\u304b\u3051\u3089\u308c\u305f\u30b0\u30cb\u30e3\u30b0\u30cb\u30e3\u3068\u753b\u50cf\u304c\u6b6a\u3080\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u3053\u3068\u3067\u3059\u3002\n\u6700\u8fd1\u306f\u3042\u307e\u308a\u898b\u304b\u3051\u307e\u305b\u3093\u304c\u30fb\u30fb\u30fb\n\nmainloop.cpp\n    int timer = 0;\n    while (!ProcessMessage() && !CheckHitKey(KEY_INPUT_ESCAPE))\n    {\n        //\u63cf\u753b\u53ef\u80fd\u753b\u50cf\u306b\u5bfe\u3057\u3066\u66f8\u304d\u8fbc\u307f\n        SetDrawScreen(thirdscreen);\n        ClearDrawScreen();\n        DrawGraph(0, 0, test, TRUE);\n\n        //\u63cf\u753b\u5bfe\u8c61\u3092\u30d0\u30c3\u30af\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u623b\u3057\u3066\u30b7\u30a7\u30fc\u30c0\u3092\u4f7f\u3063\u3066\u63cf\u753b\n        SetDrawScreen(DX_SCREEN_BACK);\n        //\u30b7\u30a7\u30fc\u30c0\u3067\u4f7f\u3046\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u5148\u307b\u3069\u4f5c\u3063\u305f\u63cf\u753b\u53ef\u80fd\u753b\u50cf\n        SetUseTextureToShader(0, thirdscreen);\n        //\u30b7\u30a7\u30fc\u30c0\u306b\u60c5\u5831\u3092\u6e21\u3059\n        SetPSConstSF(0, timer / 100.0f);\n        //\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u306e\u30bb\u30c3\u30c8\n        SetUsePixelShader(shaderhandle);\n        DrawPrimitive2DToShader(vertex, 4, DX_PRIMTYPE_TRIANGLESTRIP);\n        ScreenFlip();\n        ClearDrawScreen();\n        timer++;\n    }\n\n\n\ntest.fx\n// \u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u5165\u529b\nstruct PS_INPUT\n{\n    float4 DiffuseColor       : COLOR0 ;\n    float4 SpecularColor      : COLOR1 ;\n    float2 TextureCoord0      : TEXCOORD0 ;\n    float2 TextureCoord1      : TEXCOORD1 ;\n} ;\n\n// \u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u51fa\u529b\nstruct PS_OUTPUT\n{\n    float4 Output             : COLOR0 ;\n} ;\n\n// \u63cf\u753b\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\nsampler Texture : register( s0 ) ;\n\n//\u30bf\u30a4\u30de\u30fc(\u5916\u90e8\u304b\u3089\nfloat timer : register( c0 );\n\nPS_OUTPUT main( PS_INPUT PSInput )\n{\n    PS_OUTPUT PSOutput ;\n    float4 TextureColor;\n    float2 CalcPos;\n\n    CalcPos.x = fmod( 1.0 + PSInput.TextureCoord0.x + 0.2*sin( PSInput.TextureCoord0.y * 24.0 + timer ) , 1.0 ) ;\n    CalcPos.y = PSInput.TextureCoord0.y;\n\n    TextureColor = tex2D( Texture , CalcPos );\n    PSOutput.Output = TextureColor;\n    return PSOutput;\n}\n\n\n\u7d50\u679c\uff1a\n\n\n\u304a\u307e\u3051\n\u3053\u3053\u307e\u3067\u30b7\u30a7\u30fc\u30c0\u3092\u66f8\u3053\u3046\u3068\u3044\u3046\u306e\u3092\u7d39\u4ecb\u3057\u3066\u304d\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u307c\u304b\u3057\u306a\u3069\u306e\u3042\u308b\u7a0b\u5ea6\u306e\u30d5\u30a3\u30eb\u30bf\u3060\u3063\u305f\u3089DX\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3042\u308bGraphFilter\u95a2\u6570\u3067\u3082\u3067\u304d\u308b\u306e\u3067\u7121\u7406\u3057\u3066\u30b7\u30a7\u30fc\u30c0\u3092\u66f8\u304f\u5fc5\u8981\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u524d\u3005\u56de\uff1a[DX\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u3092\u4f7f\u3046 \u305d\u306e\uff11(\u3068\u308a\u3042\u3048\u305a\u7de8)](http://qiita.com/hart_edsf/items/799b0af6d63f9e200853)\n\u524d\u56de\uff1a[DX\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u3092\u4f7f\u3046 \u305d\u306e\uff12(HLSL\u7de8)](http://qiita.com/hart_edsf/items/86842c13a98b1aa01060)\n\n#\u4eca\u56de\u3084\u308b\u3053\u3068\n\u524d\u56de\u307e\u3067\u3067\u3056\u3063\u3068\u6982\u8981\u66f8\u3044\u305f\u306e\u3067\u4eca\u56de\u306f\u5b9f\u969b\u306b\uff12\u3064\u307b\u3069\u30b7\u30a7\u30fc\u30c0\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u3053\u306e\u4e00\u9023\u306e\u8a18\u4e8b\u3092\u7de0\u3081\u3088\u3046\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u3084\u308b\u3053\u3068\u306f\n\u30fb\u4e00\u5b9a\u9818\u57df\u306e\u753b\u50cf\u8272\u53cd\u8ee2\n\u30fb\u30e9\u30b9\u30bf\u30fc\u30b9\u30af\u30ed\u30fc\u30eb\n\u306e\uff12\u3064\u3067\u884c\u304d\u307e\u3059\u3002\n\n##DX\u30e9\u30a4\u30d6\u30e9\u30ea\u5074\u306e\u30b3\u30fc\u30c9\nDX\u30e9\u30a4\u30d6\u30e9\u30ea\u5074\u306e\u30b3\u30fc\u30c9\u306f\u5927\u4f53\u5909\u308f\u3089\u306a\u3044\u306e\u3067\u5909\u308f\u308b\u90e8\u5206\u4ee5\u5916(\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u90e8\u5206\u4ee5\u5916)\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u3084\u308a\u307e\u3059\u3002\n\n```cpp:shader.cpp\n#include <DxLib.h>\n\nint WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance\n\t, LPSTR lpCmdLine, int nShowCmd)\n{\n\tChangeWindowMode(TRUE);\n\tSetGraphMode(640, 480, 32);\n\tif (DxLib_Init() == -1) { return -1; }\t\t\n\tSetDrawScreen(DX_SCREEN_BACK);\t\t\n\n\tint test = LoadGraph(\"back1.png\");\n\t//\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u8aad\u307f\u8fbc\u307f\n\tint shaderhandle = LoadPixelShader(\"test.pso\");\n\t//\u65b0\u305f\u306b\u63cf\u753b\u53ef\u80fd\u753b\u50cf\u3092\u4f5c\u6210\u3057\u3066\u30b7\u30a7\u30fc\u30c0\u306b\u3053\u308c\u3092\u6e21\u3059\n\tint thirdscreen = MakeScreen(640, 480);\n\t//\u9802\u70b9\u306e\u8a2d\u5b9a\n\tVERTEX2DSHADER vertex[4];\n\tfor (int i = 0; i < 4; i++)\n\t{\n\t\tvertex[i].pos = VGet((i%2)*640.0f, (i/2)*480.0f, 0);\n\t\tvertex[i].rhw = 1.0f;\n\t\tvertex[i].dif = GetColorU8(255, 255, 255, 255);\n\t\tvertex[i].spc = GetColorU8(0, 0, 0, 0);\n\t\tvertex[i].u = vertex[i].su = (float)(i%2);\n\t\tvertex[i].v = vertex[i].sv = (float)(i/2);\n\t}\n\n\t//\u3053\u3053\u306b\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u3002\u4e0b\u306e\u8a18\u4e8b\u306b\u66f8\u304f\u90e8\u5206\u3092\u633f\u5165\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\tDxLib_End();\n\treturn 0;\n}\n```\n\n#\u7279\u5b9a\u9818\u57df\u306e\u8272\u53cd\u8ee2\u30a8\u30d5\u30a7\u30af\u30c8\nHLSL\u306efloat4\u306a\u3069\u306e\u578b\u3067\u306f\u8907\u6570\u306e\u30e1\u30f3\u30d0\u306b\u5bfe\u3057\u3066\u5171\u901a\u306e\u51e6\u7406\u3092\u884c\u3046\u5834\u5408\u306brgb\u306a\u3069\u51e6\u7406\u3057\u305f\u3044\u30e1\u30f3\u30d0\u3092\u4e00\u6c17\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n```cpp:mainloop.cpp\n\twhile (!ProcessMessage() && !CheckHitKey(KEY_INPUT_ESCAPE))\n\t{\n\t\t//\u63cf\u753b\u53ef\u80fd\u753b\u50cf\u306b\u5bfe\u3057\u3066\u66f8\u304d\u8fbc\u307f\n\t\tSetDrawScreen(thirdscreen);\n\t\tClearDrawScreen();\n\t\tDrawGraph(0, 0, test, TRUE);\n\n\t\t//\u63cf\u753b\u5bfe\u8c61\u3092\u30d0\u30c3\u30af\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u623b\u3057\u3066\u30b7\u30a7\u30fc\u30c0\u3092\u4f7f\u3063\u3066\u63cf\u753b\n\t\tSetDrawScreen(DX_SCREEN_BACK);\n\t\t//\u30b7\u30a7\u30fc\u30c0\u3067\u4f7f\u3046\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u5148\u307b\u3069\u4f5c\u3063\u305f\u63cf\u753b\u53ef\u80fd\u753b\u50cf\n\t\tSetUseTextureToShader(0, thirdscreen);\n\t\t//\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u306e\u30bb\u30c3\u30c8\n\t\tSetUsePixelShader(shaderhandle);\n\t\tDrawPrimitive2DToShader(vertex, 4, DX_PRIMTYPE_TRIANGLESTRIP);\n\t\tScreenFlip();\n\t\tClearDrawScreen();\n\t}\n```\n\n```fx:test.fx\n// \u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u5165\u529b\nstruct PS_INPUT\n{\n    float4 DiffuseColor       : COLOR0 ;\n    float4 SpecularColor      : COLOR1 ;\n    float2 TextureCoord0      : TEXCOORD0 ;\n    float2 TextureCoord1      : TEXCOORD1 ;\n} ;\n\n// \u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u51fa\u529b\nstruct PS_OUTPUT\n{\n    float4 Output             : COLOR0 ;\n} ;\n\n// \u63cf\u753b\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\nsampler Texture : register( s0 ) ;\n\nPS_OUTPUT main( PS_INPUT PSInput )\t//\u5165\u529b\u5024\n{\n    PS_OUTPUT PSOutput ;\n    float4 TextureColor;\n    TextureColor = tex2D( Texture , PSInput.TextureCoord0 );\n    \n    if(0.3 < PSInput.TextureCoord0.y && PSInput.TextureCoord0.y < 0.7 )\n    {\n    \t//rgb\u3068\u66f8\u304f\u3068r,g,b\u306e\u8981\u7d20\u305d\u308c\u305e\u308c\u306b\u51e6\u7406\u3092\u884c\u3063\u3066\u304f\u308c\u307e\u3059\n        //\u3053\u3053\u3067\u306f\u8272\u306e\u53cd\u8ee2\u3092\u884c\u3063\u3066\u307e\u3059\n    \tTextureColor.rgb = 1.0 - TextureColor.rgb;\n    }\n    \n    PSOutput.Output = TextureColor;\n    return PSOutput;\n}\n```\n\n\u7d50\u679c\uff1a\n![fgf.PNG](https://qiita-image-store.s3.amazonaws.com/0/31207/6807d4bd-cb5d-df78-a568-b0ffeb1f8ee3.png)\n\n#\u30e9\u30b9\u30bf\u30fc\u30b9\u30af\u30ed\u30fc\u30eb\n\u30e9\u30b9\u30bf\u30fc\u30b9\u30af\u30ed\u30fc\u30eb\u3068\u3044\u3046\u306e\u306f\u6614\u3088\u304f\u898b\u304b\u3051\u3089\u308c\u305f\u30b0\u30cb\u30e3\u30b0\u30cb\u30e3\u3068\u753b\u50cf\u304c\u6b6a\u3080\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u3053\u3068\u3067\u3059\u3002\n\u6700\u8fd1\u306f\u3042\u307e\u308a\u898b\u304b\u3051\u307e\u305b\u3093\u304c\u30fb\u30fb\u30fb\n\n```cpp:mainloop.cpp\n\tint timer = 0;\n\twhile (!ProcessMessage() && !CheckHitKey(KEY_INPUT_ESCAPE))\n\t{\n\t\t//\u63cf\u753b\u53ef\u80fd\u753b\u50cf\u306b\u5bfe\u3057\u3066\u66f8\u304d\u8fbc\u307f\n\t\tSetDrawScreen(thirdscreen);\n\t\tClearDrawScreen();\n\t\tDrawGraph(0, 0, test, TRUE);\n\n\t\t//\u63cf\u753b\u5bfe\u8c61\u3092\u30d0\u30c3\u30af\u30b9\u30af\u30ea\u30fc\u30f3\u306b\u623b\u3057\u3066\u30b7\u30a7\u30fc\u30c0\u3092\u4f7f\u3063\u3066\u63cf\u753b\n\t\tSetDrawScreen(DX_SCREEN_BACK);\n\t\t//\u30b7\u30a7\u30fc\u30c0\u3067\u4f7f\u3046\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u5148\u307b\u3069\u4f5c\u3063\u305f\u63cf\u753b\u53ef\u80fd\u753b\u50cf\n\t\tSetUseTextureToShader(0, thirdscreen);\n\t\t//\u30b7\u30a7\u30fc\u30c0\u306b\u60c5\u5831\u3092\u6e21\u3059\n\t\tSetPSConstSF(0, timer / 100.0f);\n\t\t//\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u306e\u30bb\u30c3\u30c8\n\t\tSetUsePixelShader(shaderhandle);\n\t\tDrawPrimitive2DToShader(vertex, 4, DX_PRIMTYPE_TRIANGLESTRIP);\n\t\tScreenFlip();\n\t\tClearDrawScreen();\n\t\ttimer++;\n\t}\n```\n\n```fx:test.fx\n// \u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u5165\u529b\nstruct PS_INPUT\n{\n    float4 DiffuseColor       : COLOR0 ;\n    float4 SpecularColor      : COLOR1 ;\n    float2 TextureCoord0      : TEXCOORD0 ;\n    float2 TextureCoord1      : TEXCOORD1 ;\n} ;\n\n// \u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u51fa\u529b\nstruct PS_OUTPUT\n{\n    float4 Output             : COLOR0 ;\n} ;\n\n// \u63cf\u753b\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\nsampler Texture : register( s0 ) ;\n\n//\u30bf\u30a4\u30de\u30fc(\u5916\u90e8\u304b\u3089\nfloat timer : register( c0 );\n\nPS_OUTPUT main( PS_INPUT PSInput )\n{\n\tPS_OUTPUT PSOutput ;\n    float4 TextureColor;\n    float2 CalcPos;\n    \n    CalcPos.x = fmod( 1.0 + PSInput.TextureCoord0.x + 0.2*sin( PSInput.TextureCoord0.y * 24.0 + timer ) , 1.0 ) ;\n    CalcPos.y = PSInput.TextureCoord0.y;\n    \n    TextureColor = tex2D( Texture , CalcPos );\n    PSOutput.Output = TextureColor;\n\treturn PSOutput;\n}\n```\n\n\u7d50\u679c\uff1a\n![fg.PNG](https://qiita-image-store.s3.amazonaws.com/0/31207/759959ae-9529-aa48-079f-451df1f7bc86.png)\n\n#\u304a\u307e\u3051\n\u3053\u3053\u307e\u3067\u30b7\u30a7\u30fc\u30c0\u3092\u66f8\u3053\u3046\u3068\u3044\u3046\u306e\u3092\u7d39\u4ecb\u3057\u3066\u304d\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u307c\u304b\u3057\u306a\u3069\u306e\u3042\u308b\u7a0b\u5ea6\u306e\u30d5\u30a3\u30eb\u30bf\u3060\u3063\u305f\u3089DX\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3042\u308b[GraphFilter\u95a2\u6570](http://homepage2.nifty.com/natupaji/DxLib/function/dxfunc_graph1.html#R3N26)\u3067\u3082\u3067\u304d\u308b\u306e\u3067\u7121\u7406\u3057\u3066\u30b7\u30a7\u30fc\u30c0\u3092\u66f8\u304f\u5fc5\u8981\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n", "tags": ["C++", "DX\u30e9\u30a4\u30d6\u30e9\u30ea"]}