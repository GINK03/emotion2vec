{"context": " More than 1 year has passed since last update.\n\n\u5171\u901a\u30b3\u30fc\u30c9\n#include <stdio.h>\n#include <mruby.h>\n#include <mruby/compile.h>\n#include <mruby/string.h>\n#include <mruby/array.h>\n#include <mruby/hash.h>\n\nint main( void ){\n    mrb_state* mrb = mrb_open();\n    if ( NULL != mrb ){\n        mrbc_context* cxt = mrbc_context_new( mrb );\n        mrb_value value;\n\n        mrb_load_string_cxt( mrb, \"def debug( var ); p var; end\", cxt );\n\n        // TODO\n\n        mrbc_context_free( mrb, cxt );\n        cxt = NULL;\n        mrb_close( mrb );\n        mrb = NULL;\n    }\n    return 0;\n}\n\n\nmruby -> C\u8a00\u8a9e\n\nmrb_value -> bool\nvalue = mrb_load_string_cxt( mrb, \"false\", cxt );\nprintf( \"value=%d\\n\", mrb_bool( value ) ); // value=0\n\nvalue = mrb_load_string_cxt( mrb, \"true\", cxt );\nprintf( \"value=%d\\n\", mrb_bool( value ) ); // value=1\n\n\nmrb_value -> int\nvalue = mrb_load_string_cxt( mrb, \"111\", cxt );\nif ( mrb_fixnum_p( value ) ){\n    printf( \"value=%d\\n\", mrb_fixnum( value ) ); // value=111\n}\n\n\nmrb_value -> float\nvalue = mrb_load_string_cxt( mrb, \"1.5\", cxt );\nif ( mrb_float_p( value ) ){\n    printf( \"value=%f\\n\", mrb_float( value ) ); // value=1.500000\n}\n\n\nmrb_value -> string\nvalue = mrb_load_string_cxt( mrb, \"string\", cxt );\nif ( mrb_string_p( value ) ){\n    printf( \"value=%s\\n\", RSTRING_PTR( value ) ); // value=string\n}\n\n\nmrb_value -> array\nvalue = mrb_load_string_cxt( mrb, \"[1,2]\", cxt );\nif ( mrb_array_p( value ) ){\n    int len = RARRAY_LEN( value );\n    printf( \"array_len=%d\\n\", len ); // array_len=2\n    for ( int i = 0; i < len; ++i ){\n        printf( \"array[%d]=%d\\n\", i, mrb_fixnum( mrb_ary_ref( mrb, value, i ) ) );\n    }\n    // array[0]=1\n    // array[1]=2\n}\n\n\nmrb_value -> hash\nvalue = mrb_load_string_cxt( mrb, \"{ 'a' => 'A', 'b' => 'B', 'c' => 'C' }\", cxt );\nif ( mrb_hash_p( value ) ){\n    mrb_value keys = mrb_hash_keys( mrb, value );\n    int len = RARRAY_LEN( keys );\n    printf( \"hash_keys_len=%d\\n\", len ); // hash_keys_len=3\n    for ( int i = 0; i < len; ++i ){\n        mrb_value key = mrb_ary_ref( mrb, keys, i );\n        printf( \"hash[%s]=%s\\n\", RSTRING_PTR( key ), RSTRING_PTR( mrb_hash_get( mrb, value, key ) ) );\n    }\n    // hash[a]=A\n    // hash[b]=B\n    // hash[c]=C\n}\n\n\nC\u8a00\u8a9e -> mruby\n\nbool -> mrb_value\nmrb_funcall( mrb, mrb_top_self( mrb ), \"debug\", 1, mrb_false_value() ); // false\nmrb_funcall( mrb, mrb_top_self( mrb ), \"debug\", 1, mrb_bool_value( false ) ); // false\n\nmrb_funcall( mrb, mrb_top_self( mrb ), \"debug\", 1, mrb_true_value() ); // true\nmrb_funcall( mrb, mrb_top_self( mrb ), \"debug\", 1, mrb_bool_value( true ) ); // true\n\n\nint -> mrb_value\nmrb_funcall( mrb, mrb_top_self( mrb ), \"debug\", 1, mrb_fixnum_value( 111 ) ); // 111\n\n\nfloat -> mrb_value\nmrb_funcall( mrb, mrb_top_self( mrb ), \"debug\", 1, mrb_float_value( mrb, 1.5 ) ); // 1.5\n\n\nstring -> mrb_value\nmrb_funcall( mrb, mrb_top_self( mrb ), \"debug\", 1, mrb_str_new_cstr( mrb, \"string\" ) ); // \"string\"\n\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nmrb_value\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u305f\nc \u304b\u3089 mruby\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30fc\u30eb\u3059\u308b\n# \u5171\u901a\u30b3\u30fc\u30c9\n```c\n#include <stdio.h>\n#include <mruby.h>\n#include <mruby/compile.h>\n#include <mruby/string.h>\n#include <mruby/array.h>\n#include <mruby/hash.h>\n\nint main( void ){\n    mrb_state* mrb = mrb_open();\n    if ( NULL != mrb ){\n        mrbc_context* cxt = mrbc_context_new( mrb );\n        mrb_value value;\n        \n        mrb_load_string_cxt( mrb, \"def debug( var ); p var; end\", cxt );\n        \n        // TODO\n        \n        mrbc_context_free( mrb, cxt );\n        cxt = NULL;\n        mrb_close( mrb );\n        mrb = NULL;\n    }\n    return 0;\n}\n```\n\n# mruby -> C\u8a00\u8a9e\n## mrb_value -> bool\n```c\nvalue = mrb_load_string_cxt( mrb, \"false\", cxt );\nprintf( \"value=%d\\n\", mrb_bool( value ) ); // value=0\n\nvalue = mrb_load_string_cxt( mrb, \"true\", cxt );\nprintf( \"value=%d\\n\", mrb_bool( value ) ); // value=1\n```\n\n## mrb_value -> int\n```c\nvalue = mrb_load_string_cxt( mrb, \"111\", cxt );\nif ( mrb_fixnum_p( value ) ){\n    printf( \"value=%d\\n\", mrb_fixnum( value ) ); // value=111\n}\n```\n\n## mrb_value -> float\n```c\nvalue = mrb_load_string_cxt( mrb, \"1.5\", cxt );\nif ( mrb_float_p( value ) ){\n    printf( \"value=%f\\n\", mrb_float( value ) ); // value=1.500000\n}\n```\n\n## mrb_value -> string\n```c\nvalue = mrb_load_string_cxt( mrb, \"string\", cxt );\nif ( mrb_string_p( value ) ){\n    printf( \"value=%s\\n\", RSTRING_PTR( value ) ); // value=string\n}\n```\n\n## mrb_value -> array\n```c\nvalue = mrb_load_string_cxt( mrb, \"[1,2]\", cxt );\nif ( mrb_array_p( value ) ){\n    int len = RARRAY_LEN( value );\n    printf( \"array_len=%d\\n\", len ); // array_len=2\n    for ( int i = 0; i < len; ++i ){\n        printf( \"array[%d]=%d\\n\", i, mrb_fixnum( mrb_ary_ref( mrb, value, i ) ) );\n    }\n    // array[0]=1\n    // array[1]=2\n}\n```\n\n## mrb_value -> hash\n```c\nvalue = mrb_load_string_cxt( mrb, \"{ 'a' => 'A', 'b' => 'B', 'c' => 'C' }\", cxt );\nif ( mrb_hash_p( value ) ){\n    mrb_value keys = mrb_hash_keys( mrb, value );\n    int len = RARRAY_LEN( keys );\n    printf( \"hash_keys_len=%d\\n\", len ); // hash_keys_len=3\n    for ( int i = 0; i < len; ++i ){\n        mrb_value key = mrb_ary_ref( mrb, keys, i );\n        printf( \"hash[%s]=%s\\n\", RSTRING_PTR( key ), RSTRING_PTR( mrb_hash_get( mrb, value, key ) ) );\n    }\n    // hash[a]=A\n    // hash[b]=B\n    // hash[c]=C\n}\n```\n\n# C\u8a00\u8a9e -> mruby\n## bool -> mrb_value\n```c\nmrb_funcall( mrb, mrb_top_self( mrb ), \"debug\", 1, mrb_false_value() ); // false\nmrb_funcall( mrb, mrb_top_self( mrb ), \"debug\", 1, mrb_bool_value( false ) ); // false\n\nmrb_funcall( mrb, mrb_top_self( mrb ), \"debug\", 1, mrb_true_value() ); // true\nmrb_funcall( mrb, mrb_top_self( mrb ), \"debug\", 1, mrb_bool_value( true ) ); // true\n```\n\n## int -> mrb_value\n```c\nmrb_funcall( mrb, mrb_top_self( mrb ), \"debug\", 1, mrb_fixnum_value( 111 ) ); // 111\n```\n\n## float -> mrb_value\n```c\nmrb_funcall( mrb, mrb_top_self( mrb ), \"debug\", 1, mrb_float_value( mrb, 1.5 ) ); // 1.5\n```\n\n## string -> mrb_value\n```c\nmrb_funcall( mrb, mrb_top_self( mrb ), \"debug\", 1, mrb_str_new_cstr( mrb, \"string\" ) ); // \"string\"\n```\n\n# \u53c2\u8003\u30b5\u30a4\u30c8\n[mrb_value\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u305f](http://naoty.hatenablog.com/entry/2013/05/04/204949)\n[c \u304b\u3089 mruby\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30fc\u30eb\u3059\u308b](http://blogchof.blogspot.jp/2012/06/c-ruby.html)\n", "tags": ["mruby1.1.0"]}