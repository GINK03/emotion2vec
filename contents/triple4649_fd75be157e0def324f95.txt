{"context": "glassfish4.0\u3067StreamAPI\u3092\u4f7f\u3046\u3068\u30b5\u30fc\u30d0\u30fc\u8d77\u52d5\u6642\u306b\u30a8\u30e9\u30fc\u304c\u3067\u307e\u3059\n\n\u30b5\u30fc\u30d0\u30fc\u8d77\u52d5\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u30bd\u30fc\u30b9\u3068\u5b9f\u884c\u7d50\u679c\n\n\u30bd\u30fc\u30b9\n\nSample.java\npackage simple;\n\nimport java.util.List;\n\nimport javax.jws.WebMethod;\nimport javax.jws.WebService;\nimport javax.naming.Context;\nimport javax.naming.InitialContext;\nimport javax.sql.DataSource;\n\nimport org.apache.commons.dbutils.QueryRunner;\nimport org.apache.commons.dbutils.handlers.ArrayListHandler;\n@WebService\npublic class SimpleWeb {\n\n      @WebMethod\n      public String sayHello(String name) throws Exception{\n          return _sayHello(name);\n      }\n\n      private String _sayHello(String name)throws Exception{\n          try{\n              Context ctx = new InitialContext();\n              DataSource ds = (DataSource)ctx.lookup(\"jdbc/oraclecon\");\n              .query(ds.getConnection(), //\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\n                    \"select EMP_ID,EMP_NAME from EMP\",  \n                    new ArrayListHandler())\n              .stream()\n              .filter(array->array[0].equals(\"001\"))\n              .map(array -> String.format(\"\u5f93\u696d\u54e1ID:%s:\u5f93\u696d\u54e1\u540d\uff1a%s\",array[0],array[1]))\n              .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)\n              .toString());\n          }catch(Exception e){\n              e.printStackTrace();\n              return name;\n          }\n\n      }\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\njava.lang.ArrayIndexOutOfBoundsException: 26415\n    at org.objectweb.asm.ClassReader.readClass(ClassReader.java:2015)\n    at org.objectweb.asm.ClassReader.accept(ClassReader.java:469)\n    at org.objectweb.asm.ClassReader.accept(ClassReader.java:425)\n    at org.glassfish.hk2.classmodel.reflect.Parser$5.on(Parser.java:362)\n    at com.sun.enterprise.v3.server.ReadableArchiveScannerAdapter.handleEntry(ReadableArchiveScannerAdapter.java:165)\n    at com.sun.enterprise.v3.server.ReadableArchiveScannerAdapter.onSelectedEntries(ReadableArchiveScannerAdapter.java:127)\n    at org.glassfish.hk2.classmodel.reflect.Parser.doJob(Parser.java:347)\n    at org.glassfish.hk2.classmodel.reflect.Parser.access$300(Parser.java:67)\n    at org.glassfish.hk2.classmodel.reflect.Parser$3.call(Parser.java:306)\n    at org.glassfish.hk2.classmodel.reflect.Parser$3.call(Parser.java:295)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n\n\nGlassFish 4.0\u3063\u3066Java8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u304b\u3063\u305f\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\nglassfish4.0\u3067StreamAPI\u3092\u4f7f\u3046\u3068\u30b5\u30fc\u30d0\u30fc\u8d77\u52d5\u6642\u306b\u30a8\u30e9\u30fc\u304c\u3067\u307e\u3059\n\n#\u30b5\u30fc\u30d0\u30fc\u8d77\u52d5\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u30bd\u30fc\u30b9\u3068\u5b9f\u884c\u7d50\u679c\n##\u30bd\u30fc\u30b9\n``` Sample.java\npackage simple;\n\nimport java.util.List;\n\nimport javax.jws.WebMethod;\nimport javax.jws.WebService;\nimport javax.naming.Context;\nimport javax.naming.InitialContext;\nimport javax.sql.DataSource;\n\nimport org.apache.commons.dbutils.QueryRunner;\nimport org.apache.commons.dbutils.handlers.ArrayListHandler;\n@WebService\npublic class SimpleWeb {\n\t   \n\t  @WebMethod\n\t  public String sayHello(String name) throws Exception{\n          return _sayHello(name);\n\t  }\n\t  \n\t  private String _sayHello(String name)throws Exception{\n\t\t  try{\n\t\t\t  Context ctx = new InitialContext();\n\t          DataSource ds = (DataSource)ctx.lookup(\"jdbc/oraclecon\");\n\t          .query(ds.getConnection(), //\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u53d6\u5f97\n\t          \t\t\"select EMP_ID,EMP_NAME from EMP\",  \n\t          \t\tnew ArrayListHandler())\n\t          .stream()\n\t          .filter(array->array[0].equals(\"001\"))\n\t          .map(array -> String.format(\"\u5f93\u696d\u54e1ID:%s:\u5f93\u696d\u54e1\u540d\uff1a%s\",array[0],array[1]))\n\t          .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)\n\t          .toString());\n\t\t  }catch(Exception e){\n\t\t\t  e.printStackTrace();\n\t\t\t  return name;\n\t\t  }\n\t\t  \n\t  }\n}\n```\n##\u5b9f\u884c\u7d50\u679c\n\n```\njava.lang.ArrayIndexOutOfBoundsException: 26415\n\tat org.objectweb.asm.ClassReader.readClass(ClassReader.java:2015)\n\tat org.objectweb.asm.ClassReader.accept(ClassReader.java:469)\n\tat org.objectweb.asm.ClassReader.accept(ClassReader.java:425)\n\tat org.glassfish.hk2.classmodel.reflect.Parser$5.on(Parser.java:362)\n\tat com.sun.enterprise.v3.server.ReadableArchiveScannerAdapter.handleEntry(ReadableArchiveScannerAdapter.java:165)\n\tat com.sun.enterprise.v3.server.ReadableArchiveScannerAdapter.onSelectedEntries(ReadableArchiveScannerAdapter.java:127)\n\tat org.glassfish.hk2.classmodel.reflect.Parser.doJob(Parser.java:347)\n\tat org.glassfish.hk2.classmodel.reflect.Parser.access$300(Parser.java:67)\n\tat org.glassfish.hk2.classmodel.reflect.Parser$3.call(Parser.java:306)\n\tat org.glassfish.hk2.classmodel.reflect.Parser$3.call(Parser.java:295)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\n\n```\n\nGlassFish 4.0\u3063\u3066Java8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u304b\u3063\u305f\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\n", "tags": ["Java", "StreamAPI", "glassfish"]}