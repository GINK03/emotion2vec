{"context": "\u4f55\u304b\u3092\u898b\u3066\u3057\u307e\u3063\u305f\u7d50\u679c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3057\u307e\u3063\u305f\u3002\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4efb\u610f\u306e\u4eba\u6570\u3067\u30b8\u30e3\u30f3\u30b1\u30f3\u3092\u3057\u305f\u7d50\u679c\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u304d\u308b\u3002\n\nProgram.cs\nusing System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\nusing System.Linq;\n\nnamespace OOP.HasNotComeSikkuri {\n\n    public abstract class Hand {\n    }\n\n    public class Gu : Hand {\n        public override string ToString()\n            => \"\u30b0\u30fc\";\n    }\n\n    public class Tyoki : Hand {\n        public override string ToString()\n            => \"\u30c1\u30e7\u30ad\";\n    }\n\n    public class Pa : Hand {\n        public override string ToString()\n            => \"\u30d1\u30fc\";\n    }\n\n    public interface IComparer {\n        Type From { get; }\n        Type To { get; }\n        bool Result { get; }\n    }\n\n    public sealed class Wins<T1, T2> : IComparer\n        where T1 : Hand\n        where T2 : Hand\n    {\n        public Type From { get; } = typeof(T1);\n        public Type To { get; } = typeof(T2);\n        public bool Result { get; } = true;\n    }\n\n    public sealed class Reverse : IComparer {\n        public Type From { get { return _Source.To; } }\n        public Type To { get { return _Source.From; } }\n        public bool Result { get { return !_Source.Result; } }\n        readonly IComparer _Source;\n        public Reverse(IComparer source)\n        {\n            _Source = source;\n        }\n    }\n\n    public sealed class Rule {\n        readonly ReadOnlyDictionary<string, IComparer> _Matches;\n        readonly Type[] _AvailableHands;\n\n        public Rule(params IComparer[] rules)\n        {\n            _Matches = new ReadOnlyDictionary<string, IComparer>(\n                rules\n                    .SelectMany(rule => new[] { rule, new Reverse(rule) })\n                    .GroupBy(rule => GenerateMatchKey(rule.From, rule.To))\n                    .ToDictionary(gr => gr.Key, gr => gr.Last())\n                );\n            _AvailableHands = rules.SelectMany(rule => new[] { rule.From, rule.To }).Distinct().ToArray();\n        }\n\n        private string GenerateMatchKey(Type t1, Type t2)\n            => $\"{t1}=>{t2}\";\n\n        public Hand CreateHand(int randomNumber)\n            => Activator.CreateInstance(_AvailableHands[(randomNumber % _AvailableHands.Length)]) as Hand;\n\n        public Hand Play(params Hand[] players)\n            => players.SingleOrDefault(player => players.All(target => target == player || Win(player, target)));\n\n        private bool Win(Hand player1, Hand player2)\n            => (Find(player1, player2, true) ?? Find(player2, player1, false)) != null;\n\n        private IComparer Find(Hand player1, Hand player2, bool expectedResult)\n        {\n            IComparer rule;\n            return _Matches.TryGetValue(GenerateMatchKey(player1.GetType(), player2.GetType()), out rule) && (rule.Result == expectedResult) ? rule : null;\n        }\n    }\n\n    public class Program {\n        public static void Main()\n        {\n            int numOfPlayers;\n            while (true) {\n                Console.Write(\"\u30d7\u30ec\u30fc\u30e4\u30fc\u4eba\u6570\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044:\");\n                if (int.TryParse(Console.ReadLine(), out numOfPlayers) && 0 <= numOfPlayers) {\n                    break;\n                }\n            }\n\n            var rule = new Rule(new Wins<Gu, Tyoki>(), new Wins<Tyoki, Pa>(), new Wins<Pa, Gu>());\n            var rand = new Random();\n            while (true) {\n                var players = new Hand[numOfPlayers];\n                for (int i = 0; i < numOfPlayers; i++) {\n                    var player = rule.CreateHand(rand.Next());\n                    Console.WriteLine($\"\u30d7\u30ec\u30fc\u30e4\u30fc{i + 1}:{player}\");\n                    players[i] = player;\n                }\n\n                var winner = rule.Play(players);\n                if (winner != null) {\n                    var index = Array.IndexOf(players, winner);\n                    Console.WriteLine($\"\u30d7\u30ec\u30fc\u30e4\u30fc{index + 1}\u306e\u52dd\u3061\u3067\u3059\");\n                }\n                else {\n                    Console.WriteLine(\"\u5f15\u304d\u5206\u3051\u3067\u3059\");\n                }\n                Console.WriteLine();\n                Console.WriteLine(\"Enter\u30ad\u30fc\u3067\u7d42\u4e86\u3057\u307e\u3059\");\n                if (Console.ReadKey().Key == ConsoleKey.Enter) {\n                    break;\n                }\n                Console.WriteLine(\"\");\n            }\n        }\n    }\n}\n\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306b\u306f\u30d7\u30ec\u30fc\u30e4\u30fc\u306e\u5897\u6e1b\u3001\u306a\u3089\u3073\u306b\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u7279\u6b8a\u306a\u624b\u306e\u5f62\u306b\u5bfe\u5fdc\u3059\u308b\u4f59\u5730\u304c\u3042\u308b\u3002\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u5927\u304d\u306a\u30e1\u30ea\u30c3\u30c8\u306f\u518d\u5229\u7528\u6027\u3060\u3068\u3055\u308c\u305f\u6642\u4ee3\u3082\u3042\u3063\u305f\u304c\u3001\u500b\u4eba\u7684\u306b\u306f\u3069\u3061\u3089\u304b\u3068\u3044\u3046\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u62e1\u5f35\u6027\u3092\u4fdd\u3061\u3084\u3059\u3044\u306e\u304c\u6709\u308a\u96e3\u304f\u601d\u3048\u308b\u3002\u3053\u306e\u70b9\u306b\u3064\u3044\u3066\u306f\u3001\u305d\u308c\u3053\u305dC\u8a00\u8a9e\u3067\u3082\u30dd\u30a4\u30f3\u30bf\u3060\u3089\u3051\u306e\u602a\u3057\u3052\u306a\u69cb\u9020\u4f53\u3092\u6e96\u5099\u3057\u3066\u518d\u73fe\u3092\u8a66\u307f\u3088\u3046\u3068\u3059\u308b\u304f\u3089\u3044\u306b\u306f\u6709\u76ca\u3060\u3002\n\u554f\u984c\u306f\u9855\u5728\u5316\u3057\u306a\u3044\u4ed5\u69d8\u5909\u66f4\u3078\u306e\u8010\u6027\u306b\u304a\u91d1\u3092\u51fa\u3057\u3066\u304f\u308c\u308b\u304a\u5ba2\u69d8\u306f\u307e\u305a\u3044\u306a\u3044\u3053\u3068\u3002\u305d\u3057\u3066\u4ed5\u69d8\u5909\u66f4\u306f\u3057\u3070\u3057\u3070\u60f3\u5b9a\u306e\u659c\u3081\u4e0a\u3092\u884c\u304f\u305f\u3081\u3001\u3053\u308c\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3082\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u7279\u6b8a\u30eb\u30fc\u30eb\u3082\u3042\u308a\u3048\u308b\u3068\u3044\u3046\u70b9\u306b\u3042\u308b\u3002\n\u4f8b\u3048\u3070\u30b8\u30e3\u30f3\u30b1\u30f3\u5341\u4e09\u5965\u7fa9\u306e\u3072\u3068\u3064\u3067\u3042\u308b\"\u79d1\u5b66\u529b\"\u306f\u300c\u9ad8\u6e29\u306e\u306f\u3093\u3060\u3054\u3066\u3092\u76f8\u624b\u306e\u624b\u306b\u62bc\u3057\u4ed8\u3051\u308b\u300d\u3068\u3044\u3046\u6280\u3060\u3002\u3053\u308c\u304c\u767a\u52d5\u3057\u305f\u5834\u5408\u3001\u53c2\u52a0\u30d7\u30ec\u30fc\u30e4\u30fc\u304c\u4e00\u4eba\u4ee5\u4e0a\u6e1b\u308b\u3053\u3068\u304c\u4e88\u671f\u3055\u308c\u308b\u304c\u3001\u4e0a\u8a18\u306e\u8a2d\u8a08\u3067\u305d\u308c\u3092\u5b8c\u5168\u306b\u518d\u73fe\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002\n\u305d\u308c\u3067\u3082\u907f\u3051\u304c\u305f\u3044\u4ed5\u69d8\u5909\u66f4\u306e\u60e8\u798d\u306b\u7acb\u3061\u5411\u304b\u3046\u305f\u3081\u306b\u79c1\u305f\u3061\u306b\u3059\u3079\u304d\u3053\u3068\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u304c\u3057\u3063\u304f\u308a\u304f\u308b\u3068\u304b\u6765\u306a\u3044\u3068\u304b\u306e\u6b21\u5143\u306e\u8a71\u3067\u306f\u306a\u304f\u3001\u3082\u3063\u3068\u5358\u7d14\u304b\u3064\u8ab0\u3082\u304c\u77e5\u3063\u3066\u3044\u308b\u666e\u904d\u7684\u306a\u3082\u306e\u3067\u3042\u308b\u3088\u3046\u306b\u601d\u3046\u3002\u3059\u306a\u308f\u3061\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u3092\u77ed\u304f\u4fdd\u3064\u3053\u3068\u3001\u305d\u3057\u3066\u53ef\u80fd\u306a\u9650\u308a\u5024\u3092\u4e0d\u5909\u306b\u4fdd\u3064\u3053\u3068\u3060\u3002\u624b\u304c\u77f3\u306b\u3055\u308c\u305f\u308a\u30cf\u30b5\u30df\u3068\u4ea4\u63db\u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u306a\u3069\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5024\u304c\u3044\u3064\u306e\u9593\u306b\u304b\u5909\u308f\u3063\u3066\u3044\u308b\u6050\u6016\u306b\u6bd4\u3079\u308c\u3070\u4e9b\u7d30\u306a\u3082\u306e\u3067\u306f\u306a\u3044\u304b\u3002\n\u3055\u3042\u3001\u541b\u3082const\u6559\u306b\u5165\u308a\u305f\u307e\u3048\u3002\n\u4f55\u304b\u3092\u898b\u3066\u3057\u307e\u3063\u305f\u7d50\u679c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3057\u307e\u3063\u305f\u3002\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4efb\u610f\u306e\u4eba\u6570\u3067\u30b8\u30e3\u30f3\u30b1\u30f3\u3092\u3057\u305f\u7d50\u679c\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u304d\u308b\u3002\n\n```csharp:Program.cs\nusing System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\nusing System.Linq;\n\nnamespace OOP.HasNotComeSikkuri {\n\n\tpublic abstract class Hand {\n\t}\n\n\tpublic class Gu : Hand {\n\t\tpublic override string ToString()\n\t\t\t=> \"\u30b0\u30fc\";\n\t}\n\n\tpublic class Tyoki : Hand {\n\t\tpublic override string ToString()\n\t\t\t=> \"\u30c1\u30e7\u30ad\";\n\t}\n\n\tpublic class Pa : Hand {\n\t\tpublic override string ToString()\n\t\t\t=> \"\u30d1\u30fc\";\n\t}\n\n\tpublic interface IComparer {\n\t\tType From { get; }\n\t\tType To { get; }\n\t\tbool Result { get; }\n\t}\n\n\tpublic sealed class Wins<T1, T2> : IComparer\n\t\twhere T1 : Hand\n\t\twhere T2 : Hand\n\t{\n\t\tpublic Type From { get; } = typeof(T1);\n\t\tpublic Type To { get; } = typeof(T2);\n\t\tpublic bool Result { get; } = true;\n\t}\n\n\tpublic sealed class Reverse : IComparer {\n\t\tpublic Type From { get { return _Source.To; } }\n\t\tpublic Type To { get { return _Source.From; } }\n\t\tpublic bool Result { get { return !_Source.Result; } }\n\t\treadonly IComparer _Source;\n\t\tpublic Reverse(IComparer source)\n\t\t{\n\t\t\t_Source = source;\n\t\t}\n\t}\n\n\tpublic sealed class Rule {\n\t\treadonly ReadOnlyDictionary<string, IComparer> _Matches;\n\t\treadonly Type[] _AvailableHands;\n\n\t\tpublic Rule(params IComparer[] rules)\n\t\t{\n\t\t\t_Matches = new ReadOnlyDictionary<string, IComparer>(\n\t\t\t\trules\n\t\t\t\t\t.SelectMany(rule => new[] { rule, new Reverse(rule) })\n\t\t\t\t\t.GroupBy(rule => GenerateMatchKey(rule.From, rule.To))\n\t\t\t\t\t.ToDictionary(gr => gr.Key, gr => gr.Last())\n\t\t\t\t);\n\t\t\t_AvailableHands = rules.SelectMany(rule => new[] { rule.From, rule.To }).Distinct().ToArray();\n\t\t}\n\n\t\tprivate string GenerateMatchKey(Type t1, Type t2)\n\t\t\t=> $\"{t1}=>{t2}\";\n\n\t\tpublic Hand CreateHand(int randomNumber)\n\t\t\t=> Activator.CreateInstance(_AvailableHands[(randomNumber % _AvailableHands.Length)]) as Hand;\n\n\t\tpublic Hand Play(params Hand[] players)\n\t\t\t=> players.SingleOrDefault(player => players.All(target => target == player || Win(player, target)));\n\n\t\tprivate bool Win(Hand player1, Hand player2)\n\t\t\t=> (Find(player1, player2, true) ?? Find(player2, player1, false)) != null;\n\n\t\tprivate IComparer Find(Hand player1, Hand player2, bool expectedResult)\n\t\t{\n\t\t\tIComparer rule;\n\t\t\treturn _Matches.TryGetValue(GenerateMatchKey(player1.GetType(), player2.GetType()), out rule) && (rule.Result == expectedResult) ? rule : null;\n\t\t}\n\t}\n\n\tpublic class Program {\n\t\tpublic static void Main()\n\t\t{\n\t\t\tint numOfPlayers;\n\t\t\twhile (true) {\n\t\t\t\tConsole.Write(\"\u30d7\u30ec\u30fc\u30e4\u30fc\u4eba\u6570\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044:\");\n\t\t\t\tif (int.TryParse(Console.ReadLine(), out numOfPlayers) && 0 <= numOfPlayers) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar rule = new Rule(new Wins<Gu, Tyoki>(), new Wins<Tyoki, Pa>(), new Wins<Pa, Gu>());\n\t\t\tvar rand = new Random();\n\t\t\twhile (true) {\n\t\t\t\tvar players = new Hand[numOfPlayers];\n\t\t\t\tfor (int i = 0; i < numOfPlayers; i++) {\n\t\t\t\t\tvar player = rule.CreateHand(rand.Next());\n\t\t\t\t\tConsole.WriteLine($\"\u30d7\u30ec\u30fc\u30e4\u30fc{i + 1}:{player}\");\n\t\t\t\t\tplayers[i] = player;\n\t\t\t\t}\n\n\t\t\t\tvar winner = rule.Play(players);\n\t\t\t\tif (winner != null) {\n\t\t\t\t\tvar index = Array.IndexOf(players, winner);\n\t\t\t\t\tConsole.WriteLine($\"\u30d7\u30ec\u30fc\u30e4\u30fc{index + 1}\u306e\u52dd\u3061\u3067\u3059\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tConsole.WriteLine(\"\u5f15\u304d\u5206\u3051\u3067\u3059\");\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine();\n\t\t\t\tConsole.WriteLine(\"Enter\u30ad\u30fc\u3067\u7d42\u4e86\u3057\u307e\u3059\");\n\t\t\t\tif (Console.ReadKey().Key == ConsoleKey.Enter) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine(\"\");\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306b\u306f\u30d7\u30ec\u30fc\u30e4\u30fc\u306e\u5897\u6e1b\u3001\u306a\u3089\u3073\u306b\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u7279\u6b8a\u306a\u624b\u306e\u5f62\u306b\u5bfe\u5fdc\u3059\u308b\u4f59\u5730\u304c\u3042\u308b\u3002\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u5927\u304d\u306a\u30e1\u30ea\u30c3\u30c8\u306f\u518d\u5229\u7528\u6027\u3060\u3068\u3055\u308c\u305f\u6642\u4ee3\u3082\u3042\u3063\u305f\u304c\u3001\u500b\u4eba\u7684\u306b\u306f\u3069\u3061\u3089\u304b\u3068\u3044\u3046\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u62e1\u5f35\u6027\u3092\u4fdd\u3061\u3084\u3059\u3044\u306e\u304c\u6709\u308a\u96e3\u304f\u601d\u3048\u308b\u3002\u3053\u306e\u70b9\u306b\u3064\u3044\u3066\u306f\u3001\u305d\u308c\u3053\u305dC\u8a00\u8a9e\u3067\u3082\u30dd\u30a4\u30f3\u30bf\u3060\u3089\u3051\u306e\u602a\u3057\u3052\u306a\u69cb\u9020\u4f53\u3092\u6e96\u5099\u3057\u3066\u518d\u73fe\u3092\u8a66\u307f\u3088\u3046\u3068\u3059\u308b\u304f\u3089\u3044\u306b\u306f\u6709\u76ca\u3060\u3002\n\n\u554f\u984c\u306f\u9855\u5728\u5316\u3057\u306a\u3044\u4ed5\u69d8\u5909\u66f4\u3078\u306e\u8010\u6027\u306b\u304a\u91d1\u3092\u51fa\u3057\u3066\u304f\u308c\u308b\u304a\u5ba2\u69d8\u306f\u307e\u305a\u3044\u306a\u3044\u3053\u3068\u3002\u305d\u3057\u3066\u4ed5\u69d8\u5909\u66f4\u306f\u3057\u3070\u3057\u3070\u60f3\u5b9a\u306e\u659c\u3081\u4e0a\u3092\u884c\u304f\u305f\u3081\u3001\u3053\u308c\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3082\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u7279\u6b8a\u30eb\u30fc\u30eb\u3082\u3042\u308a\u3048\u308b\u3068\u3044\u3046\u70b9\u306b\u3042\u308b\u3002\n\n\u4f8b\u3048\u3070\u30b8\u30e3\u30f3\u30b1\u30f3\u5341\u4e09\u5965\u7fa9\u306e\u3072\u3068\u3064\u3067\u3042\u308b\"\u79d1\u5b66\u529b\"\u306f**\u300c\u9ad8\u6e29\u306e\u306f\u3093\u3060\u3054\u3066\u3092\u76f8\u624b\u306e\u624b\u306b\u62bc\u3057\u4ed8\u3051\u308b\u300d**\u3068\u3044\u3046\u6280\u3060\u3002\u3053\u308c\u304c\u767a\u52d5\u3057\u305f\u5834\u5408\u3001\u53c2\u52a0\u30d7\u30ec\u30fc\u30e4\u30fc\u304c\u4e00\u4eba\u4ee5\u4e0a\u6e1b\u308b\u3053\u3068\u304c\u4e88\u671f\u3055\u308c\u308b\u304c\u3001\u4e0a\u8a18\u306e\u8a2d\u8a08\u3067\u305d\u308c\u3092\u5b8c\u5168\u306b\u518d\u73fe\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002\n\n\u305d\u308c\u3067\u3082\u907f\u3051\u304c\u305f\u3044\u4ed5\u69d8\u5909\u66f4\u306e\u60e8\u798d\u306b\u7acb\u3061\u5411\u304b\u3046\u305f\u3081\u306b\u79c1\u305f\u3061\u306b\u3059\u3079\u304d\u3053\u3068\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u304c\u3057\u3063\u304f\u308a\u304f\u308b\u3068\u304b\u6765\u306a\u3044\u3068\u304b\u306e\u6b21\u5143\u306e\u8a71\u3067\u306f\u306a\u304f\u3001\u3082\u3063\u3068\u5358\u7d14\u304b\u3064\u8ab0\u3082\u304c\u77e5\u3063\u3066\u3044\u308b\u666e\u904d\u7684\u306a\u3082\u306e\u3067\u3042\u308b\u3088\u3046\u306b\u601d\u3046\u3002\u3059\u306a\u308f\u3061\u30b3\u30fc\u30c9\u30d6\u30ed\u30c3\u30af\u3092\u77ed\u304f\u4fdd\u3064\u3053\u3068\u3001\u305d\u3057\u3066\u53ef\u80fd\u306a\u9650\u308a\u5024\u3092\u4e0d\u5909\u306b\u4fdd\u3064\u3053\u3068\u3060\u3002\u624b\u304c\u77f3\u306b\u3055\u308c\u305f\u308a\u30cf\u30b5\u30df\u3068\u4ea4\u63db\u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u306a\u3069\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5024\u304c\u3044\u3064\u306e\u9593\u306b\u304b\u5909\u308f\u3063\u3066\u3044\u308b\u6050\u6016\u306b\u6bd4\u3079\u308c\u3070\u4e9b\u7d30\u306a\u3082\u306e\u3067\u306f\u306a\u3044\u304b\u3002\n\n\u3055\u3042\u3001\u541b\u3082const\u6559\u306b\u5165\u308a\u305f\u307e\u3048\u3002\n", "tags": ["\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411", "C#", "\u30dd\u30a8\u30e0"]}