{"context": " More than 1 year has passed since last update.\u6fc0\u3057\u304f\u6d41\u884c\u306b\u4e57\u308a\u9045\u308c\u305f\u611f\u304c\u3042\u308a\u307e\u3059\u304c\u3001LTSV\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u6587\u5b57\u5217\u5206\u5272\n\u6b63\u898f\u8868\u73fe\u30de\u30c3\u30c1\nStringScanner\n\n\u306e\u305d\u308c\u305e\u308c\u3067LTSV\u3092\u30d1\u30fc\u30b9\u3057\u305f\u6642\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u53d6\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u3068\u3044\u3046\u304b\u3001\u306a\u3093\u3067\u6587\u5b57\u5217\u5206\u5272\u3057\u3066\u308b\u306e\u3001StringScanner\u304c\u901f\u3044\u3093\u3058\u3083\u306a\u3044\u306e\u3001\u3068\u3044\u3046\u601d\u3044\u304c\u3042\u3063\u305f\u306e\u3067\u3057\u305f\u3002\n\u6bd4\u8f03\u304c\u5927\u4e8b\u3060\u308d\u3046\u3068\u3044\u3046\u3053\u3068\u3067\u30de\u30b7\u30f3\u6027\u80fd\u3068\u304b\u306f\u7701\u7565\u3002\nRuby 1.9.3\u3067\u3059\u3002\nrequire 'benchmark'\n\nlogline = 'time:10/Feb/2013:00:22:43 +0900  host:127.0.0.1  request:GET / HTTP/1.1  status:200  size:133    referer:-   ua:Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:18.0) Gecko/20100101 Firefox/18.0 reqtime:0.000   upsttime:-'\nlogfile = 'log.ltsv'\nopen(logfile, 'w') do |file|\n  100000.times do\n    file.puts logline\n  end\nend\nTAB = \"\\t\"\nCOLON = ':'\nNL = \"\\n\"\n\ndef parse_line_by_split(line)\n  pairs = line.split(TAB).map {|pair| pair.split(COLON, 2)}\nend\n\ndef parse_line_by_regexp(line)\n  matched = (/((?<key>[^#{COLON}]*):(?<value>[#{TAB}]*)\\t*)*/o).match(line)\nend\n\ndef parse_line_by_strscan(line)\n  require 'strscan'\n  scanner = StringScanner.new(line)\n  while key = scanner.scan(/[^#{COLON}]*/o)\n    scanner.scan(/#{COLON}/o)\n    value = scanner.scan(/[^#{TAB}]*/o)\n    scanner.scan(/#{TAB}/o)\n    return if scanner.eos?\n  end\nend\n\nBenchmark.bmbm do |x|\n  [:parse_line_by_split, :parse_line_by_regexp, :parse_line_by_strscan].each do |method|\n    x.report method do\n      open logfile do |file|\n        file.each_line do |line|\n          send method, line\n        end\n      end\n    end\n  end\nend\n\n$ ruby bench.rb\nRehearsal ---------------------------------------------------------\nparse_line_by_split     0.750000   0.010000   0.760000 (  0.751666)\nparse_line_by_regexp    0.800000   0.010000   0.810000 (  0.811203)\nparse_line_by_strscan   5.990000   2.300000   8.290000 (  8.633933)\n------------------------------------------------ total: 9.860000sec\n\n                            user     system      total        real\nparse_line_by_split     0.760000   0.010000   0.770000 (  0.768746)\nparse_line_by_regexp    0.820000   0.010000   0.830000 (  0.832008)\nparse_line_by_strscan   6.170000   2.100000   8.270000 (  8.602963)\n\n\u3042\u308a\u3083\u3002\n\u307e\u3042\u3067\u3082\u3001\u4e0a\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u4e00\u884c\u4e00\u884c\u3092\u30e1\u30bd\u30c3\u30c9\u306b\u9001\u308a\u8fbc\u3093\u3067\u3001\u305d\u306e\u5ea6\u306bStringScanner\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u3044\u308b\u304b\u3089\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3067\u304b\u3044\u3088\u306d\u3002\n\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u30ed\u30b0\u3092\u89e3\u6790\u3059\u308b\u5206\u306b\u306f\u3053\u3046\u3044\u3046\u98a8\u306b\u306a\u308b\u3093\u3060\u3068\u601d\u3046\u3051\u3069\u3001\u65e2\u5b58\u306e\u30ed\u30b0\u3092\u89e3\u6790\u3059\u308b\u6642\u306b\u306fStringScanner\u6d3b\u8e8d\u3059\u308b\u3093\u3058\u3083\u306a\u3044\uff1f\ndef parse_by_split(filename)\n  result = File.read(filename).split(NL).map {|line|\n    line.split(TAB).map {|pair| pair.split(COLON, 2)}\n  }\nend\n\ndef parse_by_regexp(filename)\n  matched = (/(^((?<key>[^#{COLON}]*):(?<value>[^#{TAB}]*)#{TAB}*)*$)*/mo).match(File.read(filename))\nend\n\ndef parse_by_strscan(filename)\n  require 'strscan'\n  scanner = StringScanner.new(File.read(filename))\n  while key = scanner.scan(/[^#{COLON}]*/o)\n    # p key\n    scanner.scan(/#{COLON}/o)\n    value = scanner.scan(/[^#{TAB}]*/o)\n    # p value\n    scanner.scan(/[#{TAB}$]/)\n    return if scanner.eos?\n  end\nend\n\nBenchmark.bmbm do |x|\n  [:parse_by_split, :parse_by_regexp, :parse_by_strscan].each do |method|\n    x.report method do\n      send method, logfile\n    end\n  end\nend\n\nRehearsal ----------------------------------------------------\nparse_by_split     0.820000   0.060000   0.880000 (  0.874224)\nparse_by_regexp    0.780000   0.260000   1.040000 (  1.059403)\nparse_by_strscan   4.960000   0.030000   4.990000 (  5.001664)\n------------------------------------------- total: 6.910000sec\n\n                       user     system      total        real\nparse_by_split     0.750000   0.000000   0.750000 (  0.755708)\nparse_by_regexp    0.620000   0.250000   0.870000 (  0.890210)\nparse_by_strscan   5.220000   0.030000   5.250000 (  5.245181)\n\n\u3048\u3048\u3063\u3001\u305d\u3046\u306a\u306e\u2026\u2026\u3002\n\u6fc0\u3057\u304f\u6d41\u884c\u306b\u4e57\u308a\u9045\u308c\u305f\u611f\u304c\u3042\u308a\u307e\u3059\u304c\u3001LTSV\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n* \u6587\u5b57\u5217\u5206\u5272\n* \u6b63\u898f\u8868\u73fe\u30de\u30c3\u30c1\n* StringScanner\n\n\u306e\u305d\u308c\u305e\u308c\u3067LTSV\u3092\u30d1\u30fc\u30b9\u3057\u305f\u6642\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u53d6\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u3068\u3044\u3046\u304b\u3001\u306a\u3093\u3067\u6587\u5b57\u5217\u5206\u5272\u3057\u3066\u308b\u306e\u3001StringScanner\u304c\u901f\u3044\u3093\u3058\u3083\u306a\u3044\u306e\u3001\u3068\u3044\u3046\u601d\u3044\u304c\u3042\u3063\u305f\u306e\u3067\u3057\u305f\u3002\n\u6bd4\u8f03\u304c\u5927\u4e8b\u3060\u308d\u3046\u3068\u3044\u3046\u3053\u3068\u3067\u30de\u30b7\u30f3\u6027\u80fd\u3068\u304b\u306f\u7701\u7565\u3002\nRuby 1.9.3\u3067\u3059\u3002\n\n```ruby\nrequire 'benchmark'\n\nlogline = 'time:10/Feb/2013:00:22:43 +0900\thost:127.0.0.1\trequest:GET / HTTP/1.1\tstatus:200\tsize:133\treferer:-\tua:Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:18.0) Gecko/20100101 Firefox/18.0\treqtime:0.000\tupsttime:-'\nlogfile = 'log.ltsv'\nopen(logfile, 'w') do |file|\n  100000.times do\n    file.puts logline\n  end\nend\nTAB = \"\\t\"\nCOLON = ':'\nNL = \"\\n\"\n\ndef parse_line_by_split(line)\n  pairs = line.split(TAB).map {|pair| pair.split(COLON, 2)}\nend\n\ndef parse_line_by_regexp(line)\n  matched = (/((?<key>[^#{COLON}]*):(?<value>[#{TAB}]*)\\t*)*/o).match(line)\nend\n\ndef parse_line_by_strscan(line)\n  require 'strscan'\n  scanner = StringScanner.new(line)\n  while key = scanner.scan(/[^#{COLON}]*/o)\n    scanner.scan(/#{COLON}/o)\n    value = scanner.scan(/[^#{TAB}]*/o)\n    scanner.scan(/#{TAB}/o)\n    return if scanner.eos?\n  end\nend\n\nBenchmark.bmbm do |x|\n  [:parse_line_by_split, :parse_line_by_regexp, :parse_line_by_strscan].each do |method|\n    x.report method do\n      open logfile do |file|\n        file.each_line do |line|\n          send method, line\n        end\n      end\n    end\n  end\nend\n```\n\n```\n$ ruby bench.rb\nRehearsal ---------------------------------------------------------\nparse_line_by_split     0.750000   0.010000   0.760000 (  0.751666)\nparse_line_by_regexp    0.800000   0.010000   0.810000 (  0.811203)\nparse_line_by_strscan   5.990000   2.300000   8.290000 (  8.633933)\n------------------------------------------------ total: 9.860000sec\n\n                            user     system      total        real\nparse_line_by_split     0.760000   0.010000   0.770000 (  0.768746)\nparse_line_by_regexp    0.820000   0.010000   0.830000 (  0.832008)\nparse_line_by_strscan   6.170000   2.100000   8.270000 (  8.602963)\n```\n\n\u3042\u308a\u3083\u3002\n\u307e\u3042\u3067\u3082\u3001\u4e0a\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u4e00\u884c\u4e00\u884c\u3092\u30e1\u30bd\u30c3\u30c9\u306b\u9001\u308a\u8fbc\u3093\u3067\u3001\u305d\u306e\u5ea6\u306b`StringScanner`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u3044\u308b\u304b\u3089\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3067\u304b\u3044\u3088\u306d\u3002\n\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u30ed\u30b0\u3092\u89e3\u6790\u3059\u308b\u5206\u306b\u306f\u3053\u3046\u3044\u3046\u98a8\u306b\u306a\u308b\u3093\u3060\u3068\u601d\u3046\u3051\u3069\u3001\u65e2\u5b58\u306e\u30ed\u30b0\u3092\u89e3\u6790\u3059\u308b\u6642\u306b\u306f`StringScanner`\u6d3b\u8e8d\u3059\u308b\u3093\u3058\u3083\u306a\u3044\uff1f\n\n```ruby\ndef parse_by_split(filename)\n  result = File.read(filename).split(NL).map {|line|\n    line.split(TAB).map {|pair| pair.split(COLON, 2)}\n  }\nend\n\ndef parse_by_regexp(filename)\n  matched = (/(^((?<key>[^#{COLON}]*):(?<value>[^#{TAB}]*)#{TAB}*)*$)*/mo).match(File.read(filename))\nend\n\ndef parse_by_strscan(filename)\n  require 'strscan'\n  scanner = StringScanner.new(File.read(filename))\n  while key = scanner.scan(/[^#{COLON}]*/o)\n    # p key\n    scanner.scan(/#{COLON}/o)\n    value = scanner.scan(/[^#{TAB}]*/o)\n    # p value\n    scanner.scan(/[#{TAB}$]/)\n    return if scanner.eos?\n  end\nend\n\nBenchmark.bmbm do |x|\n  [:parse_by_split, :parse_by_regexp, :parse_by_strscan].each do |method|\n    x.report method do\n      send method, logfile\n    end\n  end\nend\n```\n\n```\nRehearsal ----------------------------------------------------\nparse_by_split     0.820000   0.060000   0.880000 (  0.874224)\nparse_by_regexp    0.780000   0.260000   1.040000 (  1.059403)\nparse_by_strscan   4.960000   0.030000   4.990000 (  5.001664)\n------------------------------------------- total: 6.910000sec\n\n                       user     system      total        real\nparse_by_split     0.750000   0.000000   0.750000 (  0.755708)\nparse_by_regexp    0.620000   0.250000   0.870000 (  0.890210)\nparse_by_strscan   5.220000   0.030000   5.250000 (  5.245181)\n```\n\u3048\u3048\u3063\u3001\u305d\u3046\u306a\u306e\u2026\u2026\u3002\n", "tags": ["Ruby1.9.3", "LTSV"]}