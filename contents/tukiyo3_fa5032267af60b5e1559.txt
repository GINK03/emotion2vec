{"tags": ["pyramid", "Python"], "context": " More than 1 year has passed since last update.single_file_tasks\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u66f8\u304d\u7559\u3081\u308b\u3002\ndownload\n* \u5b8c\u4e86\u3057\u305f\u30bf\u30b9\u30af\u4e00\u89a7\u8868\u793a\u3001\u5b8c\u4e86\u3057\u305f\u30bf\u30b9\u30af\u3092\u5dee\u3057\u623b\u3057\u6a5f\u80fd\u3092\u3064\u3051\u3066\u307f\u305f\u3002\n\n\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\n\n\n\n\u30d5\u30a1\u30a4\u30eb\n\u8aac\u660e\n\n\n\n\ntasks.py\npython code\n\n\nschema.sql\n\u521d\u671fDB\u8a2d\u5b9asql\n\n\ntasks.db\n\u30bf\u30b9\u30af\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\n\n\nstatic/style.css\ncss\n\n\ntemplates/layout.mako\nlayout\n\n\ntemplates/new.mako\n\u30bf\u30b9\u30af\u4f5c\u6210\n\n\ntemplates/list.mako\n\u30bf\u30b9\u30af\u4e00\u89a7\n\n\ntemplates/notfound.mako\n404\n\n\n\n\nmain\u51e6\u7406\n    # \u5ba3\u8a00\n    settings = {}\n    settings['reload_all'] = True\n    settings['debug_all'] = True\n    settings['mako.directories'] = os.path.join(here, 'templates')\n    settings['db'] = os.path.join(here, 'tasks.db')\n    # session\u4f5c\u6210\u3002session\u306fcookie\u30d9\u30fc\u30b9\u3002(document.cookie\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002)\n    session_factory = UnencryptedCookieSessionFactoryConfig('itsaseekreet')\n\n    # pyramid\u306b\u8a2d\u5b9a\u3092\u6d41\u3057\u8fbc\u3080\n    config = Configurator(settings=settings, session_factory=session_factory)\n    # \u30d1\u30b9\u306e\u8a2d\u5b9a\n    config.add_route('list', '/')\n    config.add_route('new', '/new')\n    config.add_route('close', '/close/{id}')\n    # \u9759\u7684\u30d1\u30b9\u306e\u6307\u5b9a\n    config.add_static_view('static', os.path.join(here, 'static'))\n    # \u30c7\u30b3\u30ec\u30fc\u30bf\u30fc\uff08@view_config \u3068 @subscriber\uff09\u3092\u63a2\u3057\u3066\u8a2d\u5b9a\u306b\u52a0\u3048\u308b\n    config.scan()\n\n    # web\u30b5\u30fc\u30d0\u30fc\u8a2d\u5b9a\n    app = config.make_wsgi_app()\n    server = make_server('0.0.0.0', 8080, app)\n    server.serve_forever()\n\n\n\npyramid.events.subscriber\n\n\u4f8b\n\n\n@subscriber(NewRequest)\n\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u8981\u6c42\u306b\u5bfe\u3057\u3001\u4e00\u756a\u6700\u521d\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002(synfony\u3067\u8a00\u3046\u3068\u3053\u308d\u306epreExecute())\nDB\u63a5\u7d9a\u51e6\u7406\u3092\u3057\u3066\u3044\u307e\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u7d42\u4e86\u6642\u306bDB\u63a5\u7d9a\u3092\u5207\u65ad\u3059\u308b\u51e6\u7406\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002(postExecute)\n\n\n\n@subscriber(ApplicationCreated)\n\n\nweb\u30b5\u30fc\u30d0\u30fc\u304c\u8d77\u52d5\u3057\u305f\u76f4\u5f8c\u306b\uff11\u5ea6\u3060\u3051\u547c\u3070\u308c\u307e\u3059\u3002\n\n\npyramid.httpexceptions.HTTPFound\n\n\nreturn HTTPFound(location=request.route_url('list'))\n\n\n\u30da\u30fc\u30b8\u30ea\u30ed\u30fc\u30c9\u306b\u3088\u308b\uff12\u91cd\u767b\u9332\u6291\u6b62\u306e\u305f\u3081\u7279\u5b9a\u306e\u30da\u30fc\u30b8\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u305b\u307e\u3059\u3002\n\n\nlogging\n\nimport logging\nlogging.basicConfig()\nlog = logging.getLogger(__file__)\nlog.warn('NewRequest')\n\n\nWARNING:tasks.py:NewRequest \u3068\u3044\u3046\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\ndebug, info, warning, error, critical \u3068\u3042\u308b\u304c\u3001\u958b\u767a\u4e2d\u306e\u307fdebug\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3055\u305b\u308b\u306a\u3069\u3067\u304d\u308b\u3002\n\n\n@reify\n\n\u95a2\u6570\u306e\u7d50\u679c\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u3001\u521d\u56de\u4ee5\u964d\u306f\u51e6\u7406\u3092\u884c\u308f\u305a\u7d50\u679c\u3060\u3051\u3092\u8fd4\u3057\u307e\u3059\u3002\n\npyramid.session\n\n  session_factory = UnencryptedCookieSessionFactoryConfig('itsaseekreet')\n  config = Configurator(settings=settings, session_factory=session_factory)\n\n  request.session.flash('Task was successfully reopen!')  #\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u5024\u3092\u30bb\u30c3\u30c8\n  #template\u5074:\n  % if request.session.peek_flash(): #\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u5024\u304c\u3042\u308b\u304b\u78ba\u8a8d\n      request.session.pop_flash()     #\u30bb\u30c3\u30b7\u30e7\u30f3\u5024\u3092\u8868\u793a\n  % endif\n\n\nsqlite3\n\nselect\n  rs = request.db.execute(\"select id, name from tasks where closed = 0\")\n  tasks = [dict(id=row[0], name=row[1]) for row in rs.fetchall()]\n\n\n\n1\u30ec\u30b3\u30fc\u30c9\u3060\u3051\u53d6\u5f97\n    row = rs.fetchone()\n    tasks = [dict(id=row[0], name=row[1])]\n\n\n\nselect\u306e\u7d50\u679c\u3092\u30ab\u30e9\u30e0\u540d\u3067\u53c2\u7167\n    request.db = sqlite3.connect(settings['db'])\n+   request.db.row_factory = sqlite3.Row\n\n-   tasks = [dict(id=row[0], name=row[1]) for row in rs.fetchall()]\n+   tasks = [dict(id=row[\"id\"], name=row[\"name\"]) for row in rs.fetchall()]\n\n\n\nupdate\n  task_id = int(request.matchdict['id'])  #\u578b\u5909\u63db\u3057\u3066\u30bb\u30c3\u30c8\n  #placeholder\n  request.db.execute(\"update tasks set closed = ? where id = ?\", (0, task_id))\n  request.db.commit()  #commit\u3057\u306a\u3044\u3068\u4fdd\u5b58\u3055\u308c\u307e\u305b\u3093\u3002\n\n\n\n\u81ea\u52d5\u30b3\u30df\u30c3\u30c8ON\n    request.db = sqlite3.connect(settings['db'])\n    request.db.isolation_level = None\n# \u3082\u3057\u304f\u306f\n    request.db = sqlite3.connect(settings['db'], isolation_level = None)\n\n\n\nrollback\n  request.db.rollback()\n\n\n\npyramid.config.Configurator\n\n\nConfigurator\u306b\u5024\u3092\u683c\u7d0d\nmysettings['val'] = \"hello\"\nconfig = Configurator(settings=mysettings)\n\n\n\nConfigurator\u306b\u683c\u7d0d\u3057\u305f\u5024\u3092\u53c2\u7167(@subscribers)\nrequest = event.request\nsettings = request.registry.settings\nlog.warn(settings['val'])\n\n\n\nConfigurator\u306b\u683c\u7d0d\u3057\u305f\u5024\u3092\u53c2\u7167(@view)\nsettings = request.registry.settings\nlog.warn(settings['val'])\n\n\n\ndevelopment.ini\u3001production.ini\u306e\u5024\u3092request.registry.settings\u306b\u683c\u7d0d\n{'debug_routematch': True, \n 'pyramid.default_locale_name': 'en',\n 'db': '/home/user/local/virtualenv/tasks/tasks.db',\n 'pyramid.reload_templates': True,\n 'debug_templates': True,\n 'debug_all': True,\n 'reload_templates': True,\n 'mako.directories': '/home/user/local/virtualenv/tasks/templates',\n 'pyramid.debug_routematch': True,\n 'reload_resources': True,\n 'default_locale_name': 'en',\n 'pyramid.reload_assets': True,\n 'reload_all': True,\n 'debug_authorization': True,\n 'pyramid.debug_authorization': True,\n 'pyramid.reload_resources': True,\n 'reload_assets': True,\n 'pyramid.debug_notfound': True,\n 'pyramid.debug_templates': True,\n 'prevent_http_cache': False,\n 'debug_notfound': True,\n 'pyramid.prevent_http_cache': False}\n\n\n\n404\u30da\u30fc\u30b8\n@view_config(context='pyramid.exceptions.NotFound', renderer='notfound.mako')\ndef notfound_view(request):\n    request.response.status = '404 Not Found'\n    return {}\n\n\n\u3069\u3093\u306a\u4f8b\u5916\u3082\u30ad\u30e3\u30c3\u30c1\n\n\n\u4f8b\uff1amako\u3067\u5b58\u5728\u3057\u306a\u3044url\u3092\u6307\u5b9a\u3057\u305f\u6642\u3002 ${request.route_url('forbidden_page')}\n\n\u53c2\u8003\n\n@view_config(context=Exception, renderer='exception.mako')\ndef error_view(exception, request):\n    return {'message':exception}\n\n\n\u305d\u306e\u4ed6\n\n\u30d5\u30a1\u30a4\u30eb\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(\u7d76\u5bfe\u30d1\u30b9)\u3092\u53d6\u5f97\nhere = os.path.dirname(os.path.abspath(__file__))\n\n\n\u4f7f\u7528\u4f8b\nos.path.join(here, 'schema.sql')\nsettings['mako.directories'] = os.path.join(here, 'templates')\n\n\n[single_file_tasks](http://docs.pylonsproject.org/projects/pyramid_tutorials/en/latest/single_file_tasks/single_file_tasks.html)\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u66f8\u304d\u7559\u3081\u308b\u3002\n\n[download](https://github.com/tukiyo/pyramid_tutorials.git)\n* \u5b8c\u4e86\u3057\u305f\u30bf\u30b9\u30af\u4e00\u89a7\u8868\u793a\u3001\u5b8c\u4e86\u3057\u305f\u30bf\u30b9\u30af\u3092\u5dee\u3057\u623b\u3057\u6a5f\u80fd\u3092\u3064\u3051\u3066\u307f\u305f\u3002\n\n\n\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\n----\n\n| \u30d5\u30a1\u30a4\u30eb                | \u8aac\u660e |\n|:------------------------|:-----|\n| tasks.py                | python code |\n| schema.sql              | \u521d\u671fDB\u8a2d\u5b9asql |\n| tasks.db                | \u30bf\u30b9\u30af\u30c7\u30fc\u30bf\u3092\u683c\u7d0d |\n| static/style.css        | css |\n| templates/layout.mako   | layout |\n| templates/new.mako      | \u30bf\u30b9\u30af\u4f5c\u6210 |\n| templates/list.mako     | \u30bf\u30b9\u30af\u4e00\u89a7 |\n| templates/notfound.mako | 404 |\n\n```py:main\u51e6\u7406\n    # \u5ba3\u8a00\n    settings = {}\n    settings['reload_all'] = True\n    settings['debug_all'] = True\n    settings['mako.directories'] = os.path.join(here, 'templates')\n    settings['db'] = os.path.join(here, 'tasks.db')\n    # session\u4f5c\u6210\u3002session\u306fcookie\u30d9\u30fc\u30b9\u3002(document.cookie\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002)\n    session_factory = UnencryptedCookieSessionFactoryConfig('itsaseekreet')\n\n    # pyramid\u306b\u8a2d\u5b9a\u3092\u6d41\u3057\u8fbc\u3080\n    config = Configurator(settings=settings, session_factory=session_factory)\n    # \u30d1\u30b9\u306e\u8a2d\u5b9a\n    config.add_route('list', '/')\n    config.add_route('new', '/new')\n    config.add_route('close', '/close/{id}')\n    # \u9759\u7684\u30d1\u30b9\u306e\u6307\u5b9a\n    config.add_static_view('static', os.path.join(here, 'static'))\n    # \u30c7\u30b3\u30ec\u30fc\u30bf\u30fc\uff08@view_config \u3068 @subscriber\uff09\u3092\u63a2\u3057\u3066\u8a2d\u5b9a\u306b\u52a0\u3048\u308b\n    config.scan()\n\n    # web\u30b5\u30fc\u30d0\u30fc\u8a2d\u5b9a\n    app = config.make_wsgi_app()\n    server = make_server('0.0.0.0', 8080, app)\n    server.serve_forever()\n```\n\n[pyramid.events.subscriber](http://docs.pylonsproject.org/projects/pyramid/en/1.0-branch/api/events.html)\n====\n\n[\u4f8b](http://docs.pylonsproject.org/projects/pyramid/en/1.0-branch/narr/events.html)\n\n* @subscriber(NewRequest)\n\n> \u30ea\u30af\u30a8\u30b9\u30c8\u8981\u6c42\u306b\u5bfe\u3057\u3001\u4e00\u756a\u6700\u521d\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002(synfony\u3067\u8a00\u3046\u3068\u3053\u308d\u306epreExecute())\n> DB\u63a5\u7d9a\u51e6\u7406\u3092\u3057\u3066\u3044\u307e\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u7d42\u4e86\u6642\u306bDB\u63a5\u7d9a\u3092\u5207\u65ad\u3059\u308b\u51e6\u7406\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002(postExecute)\n\n* @subscriber(ApplicationCreated)\n\n> web\u30b5\u30fc\u30d0\u30fc\u304c\u8d77\u52d5\u3057\u305f\u76f4\u5f8c\u306b\uff11\u5ea6\u3060\u3051\u547c\u3070\u308c\u307e\u3059\u3002\n\n\n[pyramid.httpexceptions.HTTPFound](http://docs.pylonsproject.jp/projects/pyramid-doc-ja/en/latest/api/httpexceptions.html)\n====\n\n* `return HTTPFound(location=request.route_url('list'))`\n\n> \u30da\u30fc\u30b8\u30ea\u30ed\u30fc\u30c9\u306b\u3088\u308b\uff12\u91cd\u767b\u9332\u6291\u6b62\u306e\u305f\u3081\u7279\u5b9a\u306e\u30da\u30fc\u30b8\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u305b\u307e\u3059\u3002\n\n[logging](http://docs.python.jp/2.6/library/logging.html)\n====\n\n```py:\nimport logging\nlogging.basicConfig()\nlog = logging.getLogger(__file__)\nlog.warn('NewRequest')\n```\n\n* WARNING:tasks.py:NewRequest \u3068\u3044\u3046\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n* debug, info, warning, error, critical \u3068\u3042\u308b\u304c\u3001\u958b\u767a\u4e2d\u306e\u307fdebug\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3055\u305b\u308b\u306a\u3069\u3067\u304d\u308b\u3002\n\n[@reify](https://github.com/Pylons/pyramid/blob/master/pyramid/decorator.py)\n====\n\n\u95a2\u6570\u306e\u7d50\u679c\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u3001\u521d\u56de\u4ee5\u964d\u306f\u51e6\u7406\u3092\u884c\u308f\u305a\u7d50\u679c\u3060\u3051\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n[pyramid.session](http://docs.pylonsproject.org/projects/pyramid/en/1.0-branch/api/session.html?highlight=session#pyramid.session)\n====\n\n```py:\n  session_factory = UnencryptedCookieSessionFactoryConfig('itsaseekreet')\n  config = Configurator(settings=settings, session_factory=session_factory)\n```\n\n```py:\n  request.session.flash('Task was successfully reopen!')  #\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u5024\u3092\u30bb\u30c3\u30c8\n  #template\u5074:\n  % if request.session.peek_flash(): #\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u5024\u304c\u3042\u308b\u304b\u78ba\u8a8d\n      request.session.pop_flash()     #\u30bb\u30c3\u30b7\u30e7\u30f3\u5024\u3092\u8868\u793a\n  % endif\n```\n\nsqlite3\n====\n\n```py:select\n  rs = request.db.execute(\"select id, name from tasks where closed = 0\")\n  tasks = [dict(id=row[0], name=row[1]) for row in rs.fetchall()]\n```\n\n```py:1\u30ec\u30b3\u30fc\u30c9\u3060\u3051\u53d6\u5f97\n    row = rs.fetchone()\n    tasks = [dict(id=row[0], name=row[1])]\n```\n\n```py:select\u306e\u7d50\u679c\u3092\u30ab\u30e9\u30e0\u540d\u3067\u53c2\u7167\n    request.db = sqlite3.connect(settings['db'])\n+   request.db.row_factory = sqlite3.Row\n\n-   tasks = [dict(id=row[0], name=row[1]) for row in rs.fetchall()]\n+   tasks = [dict(id=row[\"id\"], name=row[\"name\"]) for row in rs.fetchall()]\n```\n\n```py:update\n  task_id = int(request.matchdict['id'])  #\u578b\u5909\u63db\u3057\u3066\u30bb\u30c3\u30c8\n  #placeholder\n  request.db.execute(\"update tasks set closed = ? where id = ?\", (0, task_id))\n  request.db.commit()  #commit\u3057\u306a\u3044\u3068\u4fdd\u5b58\u3055\u308c\u307e\u305b\u3093\u3002\n```\n\n```py:\u81ea\u52d5\u30b3\u30df\u30c3\u30c8ON\n    request.db = sqlite3.connect(settings['db'])\n    request.db.isolation_level = None\n# \u3082\u3057\u304f\u306f\n    request.db = sqlite3.connect(settings['db'], isolation_level = None)\n```\n\n```py:rollback\n  request.db.rollback()\n```\n\n[pyramid.config.Configurator](http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/startup.html#deployment-settings)\n====\n\n```py:Configurator\u306b\u5024\u3092\u683c\u7d0d\nmysettings['val'] = \"hello\"\nconfig = Configurator(settings=mysettings)\n```\n\n```py:Configurator\u306b\u683c\u7d0d\u3057\u305f\u5024\u3092\u53c2\u7167(@subscribers)\nrequest = event.request\nsettings = request.registry.settings\nlog.warn(settings['val'])\n```\n\n```py:Configurator\u306b\u683c\u7d0d\u3057\u305f\u5024\u3092\u53c2\u7167(@view)\nsettings = request.registry.settings\nlog.warn(settings['val'])\n```\n\n```py:development.ini\u3001production.ini\u306e\u5024\u3092request.registry.settings\u306b\u683c\u7d0d\n{'debug_routematch': True, \n 'pyramid.default_locale_name': 'en',\n 'db': '/home/user/local/virtualenv/tasks/tasks.db',\n 'pyramid.reload_templates': True,\n 'debug_templates': True,\n 'debug_all': True,\n 'reload_templates': True,\n 'mako.directories': '/home/user/local/virtualenv/tasks/templates',\n 'pyramid.debug_routematch': True,\n 'reload_resources': True,\n 'default_locale_name': 'en',\n 'pyramid.reload_assets': True,\n 'reload_all': True,\n 'debug_authorization': True,\n 'pyramid.debug_authorization': True,\n 'pyramid.reload_resources': True,\n 'reload_assets': True,\n 'pyramid.debug_notfound': True,\n 'pyramid.debug_templates': True,\n 'prevent_http_cache': False,\n 'debug_notfound': True,\n 'pyramid.prevent_http_cache': False}\n```\n\n404\u30da\u30fc\u30b8\n====\n\n```py:\n@view_config(context='pyramid.exceptions.NotFound', renderer='notfound.mako')\ndef notfound_view(request):\n    request.response.status = '404 Not Found'\n    return {}\n```\n\n[\u3069\u3093\u306a\u4f8b\u5916\u3082\u30ad\u30e3\u30c3\u30c1](http://docs.pylonsproject.org/projects/pyramid_cookbook/en/latest/pylons/exceptions.html)\n====\n\n* \u4f8b\uff1amako\u3067\u5b58\u5728\u3057\u306a\u3044url\u3092\u6307\u5b9a\u3057\u305f\u6642\u3002 `${request.route_url('forbidden_page')}`\n* [\u53c2\u8003](http://stackoverflow.com/questions/13944852/pyramid-catch-all-friendly-exception-handling)\n\n```py:\n@view_config(context=Exception, renderer='exception.mako')\ndef error_view(exception, request):\n    return {'message':exception}\n```\n\n\u305d\u306e\u4ed6\n====\n\n\u30d5\u30a1\u30a4\u30eb\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(\u7d76\u5bfe\u30d1\u30b9)\u3092\u53d6\u5f97\n----\n\n```py:\nhere = os.path.dirname(os.path.abspath(__file__))\n```\n\n```py:\u4f7f\u7528\u4f8b\nos.path.join(here, 'schema.sql')\nsettings['mako.directories'] = os.path.join(here, 'templates')\n```"}