{"context": " More than 1 year has passed since last update.\u3042\u3093\u307e\u308a\u60c5\u5831\u304c\u7121\u304f\u3066\u30cf\u30de\u3063\u305f\u306e\u3067\u30e1\u30e2\u3063\u3068\u304f\u3002\n\u4eca\u56de\u306fMySQL\u304c\u7528\u610f\u3057\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u30c6\u30fc\u30d6\u30eb\u3092\u4f7f\u3063\u3066INNER JOIN\u306e\u4f8b\u3092\u793a\u3057\u3066\u307f\u308b\u3002\nMySQL :: MySQL Documentation: Other MySQL Documentation\n\u4e0a\u306e\u30da\u30fc\u30b8\u306emenagerie database\u306e\u53f3\u306e\u30ea\u30f3\u30af\u304b\u3089\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\nMySQL\u3078\u306e\u30ed\u30fc\u30c9\u65b9\u6cd5\u306f\u5272\u611b\u3002\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u306f2\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u304c\u3042\u308a\u3001\u305d\u308c\u305e\u308c\u30ec\u30b3\u30fc\u30c9\u304c10\u4ef6,9\u4ef6\u5165\u3063\u3066\u3044\u308b\u72b6\u614b\u3067\u3059\u3002\nmysql> show tables;\n+---------------------+\n| Tables_in_menagerie |\n+---------------------+\n| event               |\n| pet                 |\n+---------------------+\n2 rows in set (0.01 sec)\n\nmysql> select * FROM event;\n+----------+------------+----------+-----------------------------+\n| name     | date       | type     | remark                      |\n+----------+------------+----------+-----------------------------+\n| Fluffy   | 1995-05-15 | litter   | 4 kittens, 3 female, 1 male |\n| Buffy    | 1993-06-23 | litter   | 5 puppies, 2 female, 3 male |\n| Buffy    | 1994-06-19 | litter   | 3 puppies, 3 female         |\n| Chirpy   | 1999-03-21 | vet      | needed beak straightened    |\n| Slim     | 1997-08-03 | vet      | broken rib                  |\n| Bowser   | 1991-10-12 | kennel   | NULL                        |\n| Fang     | 1991-10-12 | kennel   | NULL                        |\n| Fang     | 1998-08-28 | birthday | Gave him a new chew toy     |\n| Claws    | 1998-03-17 | birthday | Gave him a new flea collar  |\n| Whistler | 1998-12-09 | birthday | First birthday              |\n+----------+------------+----------+-----------------------------+\n10 rows in set (0.00 sec)\n\nmysql> select * FROM pet;\n+----------+--------+---------+------+------------+------------+\n| name     | owner  | species | sex  | birth      | death      |\n+----------+--------+---------+------+------------+------------+\n| Fluffy   | Harold | cat     | f    | 1993-02-04 | NULL       |\n| Claws    | Gwen   | cat     | m    | 1994-03-17 | NULL       |\n| Buffy    | Harold | dog     | f    | 1989-05-13 | NULL       |\n| Fang     | Benny  | dog     | m    | 1990-08-27 | NULL       |\n| Bowser   | Diane  | dog     | m    | 1979-08-31 | 1995-07-29 |\n| Chirpy   | Gwen   | bird    | f    | 1998-09-11 | NULL       |\n| Whistler | Gwen   | bird    | NULL | 1997-12-09 | NULL       |\n| Slim     | Benny  | snake   | m    | 1996-04-29 | NULL       |\n| Puffball | Diane  | hamster | f    | 1999-03-30 | NULL       |\n+----------+--------+---------+------+------------+------------+\n9 rows in set (0.00 sec)\n\n\u3053\u3053\u304b\u3089SQLAlchemy\u306e\u8a71\u3002\n\u3053\u3093\u306a\u7d50\u5408\u3092\u3057\u305f\u3044\u3068\u601d\u3063\u305f\u3053\u3068\u306f\u3088\u304f\u3042\u308b\u3088\u306d\u3002\n(\u3061\u306a\u307f\u306b\u3001'litter'\u306f\u52d5\u7269\u306e\u51fa\u7523\u3068\u3044\u3046\u610f\u5473)\nmysql> SELECT event.name, event.date, event.type, event.remark, pet.species  \n        FROM event INNER JOIN pet ON event.name = pet.name\n        WHERE event.type ='litter';\n+--------+------------+--------+-----------------------------+---------+\n| name   | date       | type   | remark                      | species |\n+--------+------------+--------+-----------------------------+---------+\n| Fluffy | 1995-05-15 | litter | 4 kittens, 3 female, 1 male | cat     |\n| Buffy  | 1993-06-23 | litter | 5 puppies, 2 female, 3 male | dog     |\n| Buffy  | 1994-06-19 | litter | 3 puppies, 3 female         | dog     |\n+--------+------------+--------+-----------------------------+---------+\n3 rows in set (0.00 sec)\n\n\n\u3053\u308c\u3092SQLAlchemy\u3067\u3069\u3046\u8868\u3059\u304b\u3068\u3044\u3046\u3068\u3053\u3046\u306a\u308b\u3002\n   # \u5404table\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n   events = Table('event', metadata, autoload=True)\n   pets = Table('pet', metadata, autoload=True)\n\n   #: \u53d6\u5f97\u3057\u305f\u3044\u30ab\u30e9\u30e0\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n   columns = [events, pets.c.species]\n\n    #: join()\u3067\u7d50\u5408\u3055\u305b\u305f\u3044\u30c6\u30fc\u30d6\u30eb\u3068\u6761\u4ef6\u3092\u6307\u5b9a\u3057select()\u3092\u547c\u3073\u51fa\u3057\n    q = join(events, pets, events.c.name == pets.c.name) \\\n        .select() \\\n        .where(events.c.type == 'litter')\n    #: \u6700\u5f8c\u306bwith_only_columns()\u306b\u53d6\u5f97\u3057\u305f\u3044\u30ab\u30e9\u30e0\u306e\u30ea\u30b9\u30c8\u3092\u6e21\u3059    \n    q =  q.with_only_columns(columns)\n\nwith_only_columns()\u306f\u53d6\u5f97\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u7d5e\u308b\u305f\u3081\u306b\u4f7f\u3046\u3002\n\u6b21\u306bGROUP BY\u3092\u4f7f\u3063\u3066count()\u3092\u4f7f\u3046\u30af\u30a8\u30ea\u4f8b\u3068\u3057\u3066\u4e0b\u306e\u3088\u3046\u306a\u30af\u30a8\u30ea\u3092\u4f5c\u3063\u3066\u307f\u308b\u3002\nmysql> SELECT event.name, count(event.name) AS litter_count \n       FROM event INNER JOIN pet ON event.name = pet.name \n       WHERE event.type = 'litter' GROUP BY event.name;\n\n+--------+--------------+\n| name   | litter_count |\n+--------+--------------+\n| Buffy  |            2 |\n| Fluffy |            1 |\n+--------+--------------+\n2 rows in set (0.00 sec)\n\n    #: func.count()\u3067\u96c6\u7d04\u3059\u308b\u30ab\u30e9\u30e0\u3092\u6307\u5b9a\n    #: AS litter_count \u3092label('litter_count')\u3067\u6307\u5b9a\n    columns = [events.c.name, func.count(events.c.name).label('litter_count')]\n\n    q = join(events, pets, events.c.name == pets.c.name) \\\n        .select() \\\n        .where(events.c.type == 'litter') \\\n        .group_by(events.c.name)  # <= \u3055\u3063\u304d\u306e\u30af\u30a8\u30ea\u306b1\u884c\u8ffd\u52a0\n    q =  q.with_only_columns(columns)\n\n\u3082\u3063\u3068\u77ed\u3044\u66f8\u304d\u65b9\u3092\u3059\u308b\u3068\u6b21\u306e\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n    q =  select(events.c.name == pets.c.name) \\\n        .where(events.c.type == 'litter') \\\n        .group_by(events.c.name)\n    q =  q.with_only_columns(columns)\n\n\njoin()\u304c\u306a\u304f\u306a\u3063\u3066selct()\u306e\u4e2d\u306b\u7d50\u5408\u6761\u4ef6\u304c\u79fb\u52d5\u3057\u3066\u3044\u307e\u3059\u3002\nSQLAlchemy\u306a\u3089\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3067INNER JOIN\u3084GROUP BY\u3068COUNT()\u3092\u4f7f\u3063\u305f\u30af\u30a8\u30ea\u304c\u66f8\u3051\u307e\u3059\u3002 \n\u3042\u3068\u82e6\u52b4\u8a71\u3067\u3059\u304c\u3001\u3053\u3053\u306b\u305f\u3069\u308a\u7740\u304f\u307e\u3067\u306b\u3044\u308d\u3044\u308d\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u8aad\u3093\u3067\u3084\u3063\u3068\u3053\u306e\u30af\u30a8\u30ea\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\nSQLAlchemy\u306f\u8c4a\u5bcc\u3059\u304e\u308b\u307b\u3069\u6a5f\u80fd\u304c\u76db\u308a\u3060\u304f\u3055\u3093\u306a\u306e\u3067\u672c\u683c\u7684\u306b\u4f7f\u3046\u524d\u306b\u4e00\u5ea6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u3061\u3083\u3093\u3068\u8aad\u3093\u3060\u307b\u3046\u304c\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u65e5\u672c\u8a9e\u60c5\u5831\u305d\u3093\u306a\u306b\u591a\u304f\u306a\u3044\u306e\u3067StackOverFlow\u3068\u304b\u82f1\u8a9e\u306e\u30b5\u30a4\u30c8\u7d50\u69cb\u8aad\u3093\u3067\u52c9\u5f37\u3057\u3066\u307e\u3057\u305f\u3002\npython\u3084\u308b\u306a\u3089\u82f1\u8a9e\u51fa\u6765\u306a\u3044\u3068\u8f9b\u3044\u3002Ruby\u306a\u3089rails\u306e\u304a\u304b\u3052\u3067\u65e5\u672c\u8a9e\u60c5\u5831\u7d50\u69cb\u3042\u308b\u3093\u3060\u3051\u3069python\u306f\u65e5\u672c\u3067\u6d41\u884c\u3063\u3066\u306a\u3044\u304b\u3089\u30ce\u30a6\u30cf\u30a6\u304c\u5c11\u306a\u3044\u3068\u611f\u3058\u308b\u3002\n\u4e00\u56de\u308f\u304b\u308b\u307e\u3067\u7d50\u69cb\u306a\u6642\u9593\u304b\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u7406\u89e3\u3067\u304d\u305f\u3089\u304b\u306a\u308a\u5f37\u529b\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3044\u3046\u3053\u3068\u3092\u5b9f\u611f\u51fa\u6765\u307e\u3057\u305f\u3002\n\u81ea\u5206\u3082\u307e\u3060\u307e\u3060\u52c9\u5f37\u4e2d\u306a\u306e\u3067\u4e0a\u306b\u793a\u3057\u305f\u66f8\u304d\u65b9\u304c\u5fc5\u305a\u3057\u3082\u30d9\u30b9\u30c8\u3060\u3068\u601d\u3063\u3066\u306a\u3044\u3067\u3059\u3057\u3082\u3063\u3068\u53ef\u8aad\u6027\u304c\u9ad8\u3044\u30d9\u30bf\u30fc\u306a\u66f8\u304d\u65b9\u304c\u3042\u308b\u306f\u305a\u3067\u3059\u3002\nSQLAlchemy\u306fORM\u3068\u3057\u3066\u4f7f\u3046\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u591a\u6570\u898b\u304b\u3051\u307e\u3057\u305f\u304c\u81ea\u5206\u3068\u3057\u3066\u306fSELECT\u6587\u306e\u30af\u30a8\u30ea\u30d3\u30eb\u30c0\u2212\u3068\u3057\u3066SQLAlchemy\u3092\u4f7f\u3046\u306e\u304c\u597d\u304d\u3067\u3059\u3002  \n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u81ea\u4f5c\u306e\u30af\u30a8\u30ea\u30d3\u30eb\u30c0\u2212\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u4f5c\u3063\u3066\u30a2\u30ec\u304c\u51fa\u6765\u306a\u3044\u3068\u304b\u4f5c\u308a\u3053\u3080\u3088\u308a\u3082\n\u5168\u54e1\u3067SQLAlchemy\u3092\u52c9\u5f37\u3057\u3066\u4f7f\u3046\u307b\u3046\u304c\u4f55\u500d\u3082\u697d\u3060\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\nsample.py\n#!/usr/bin/env python2.7\n# -*- coding:utf-8 -*-\n\nfrom sqlalchemy import create_engine, MetaData, Table\nfrom sqlalchemy.sql import select, join, func\n\nfrom pprint import pprint\n\nconfig = {\n    'user': 'user',\n    'passwd':'password',\n    'host': 'localhost',\n    'port': 3306,\n    'database': 'menagerie',\n}\ndsn_fmt = 'mysql+pymysql://%(user)s:%(passwd)s@%(host)s:%(port)d/%(database)s'\ndsn = dsn_fmt % config\n\nengine = create_engine(dsn, echo=True)\n\nmetadata = MetaData(bind=engine)\n\nevents = Table('event', metadata, autoload=True)\npets = Table('pet', metadata, autoload=True)\n\nif __name__ == '__main__':\n    #: part1\n    columns = [events, pets.c.species]\n    q = join(events, pets, events.c.name == pets.c.name) \\\n        .select().where(events.c.type == 'litter')\n    q =  q.with_only_columns(columns)\n    print q\n    for row in q.execute():\n        pprint(dict(row))\n\n    #: part2\n    columns = [events.c.name, func.count(events.c.name).label('litter_count')]\n    q = join(events, pets, events.c.name == pets.c.name) \\\n        .select() \\\n        .where(events.c.type == 'litter') \\\n        .group_by(events.c.name)\n    q =  q.with_only_columns(columns)\n    print q\n    for row in q.execute():\n        pprint(dict(row))\n\n    #: part2 another version\n    q =  select(events.c.name == pets.c.name) \\\n        .where(events.c.type == 'litter') \\\n        .group_by(events.c.name)\n    q =  q.with_only_columns(columns)\n    print q\n    for row in q.execute():\n        pprint(dict(row))\n\n\n\n\u3042\u3093\u307e\u308a\u60c5\u5831\u304c\u7121\u304f\u3066\u30cf\u30de\u3063\u305f\u306e\u3067\u30e1\u30e2\u3063\u3068\u304f\u3002\n\n\u4eca\u56de\u306fMySQL\u304c\u7528\u610f\u3057\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u30c6\u30fc\u30d6\u30eb\u3092\u4f7f\u3063\u3066INNER JOIN\u306e\u4f8b\u3092\u793a\u3057\u3066\u307f\u308b\u3002\n\n\n[MySQL :: MySQL Documentation: Other MySQL Documentation](http://dev.mysql.com/doc/index-other.html \"MySQL :: MySQL Documentation: Other MySQL Documentation\")\n\u4e0a\u306e\u30da\u30fc\u30b8\u306emenagerie database\u306e\u53f3\u306e\u30ea\u30f3\u30af\u304b\u3089\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\nMySQL\u3078\u306e\u30ed\u30fc\u30c9\u65b9\u6cd5\u306f\u5272\u611b\u3002\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u306f2\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u304c\u3042\u308a\u3001\u305d\u308c\u305e\u308c\u30ec\u30b3\u30fc\u30c9\u304c10\u4ef6,9\u4ef6\u5165\u3063\u3066\u3044\u308b\u72b6\u614b\u3067\u3059\u3002\n\n```mysql\nmysql> show tables;\n+---------------------+\n| Tables_in_menagerie |\n+---------------------+\n| event               |\n| pet                 |\n+---------------------+\n2 rows in set (0.01 sec)\n\nmysql> select * FROM event;\n+----------+------------+----------+-----------------------------+\n| name     | date       | type     | remark                      |\n+----------+------------+----------+-----------------------------+\n| Fluffy   | 1995-05-15 | litter   | 4 kittens, 3 female, 1 male |\n| Buffy    | 1993-06-23 | litter   | 5 puppies, 2 female, 3 male |\n| Buffy    | 1994-06-19 | litter   | 3 puppies, 3 female         |\n| Chirpy   | 1999-03-21 | vet      | needed beak straightened    |\n| Slim     | 1997-08-03 | vet      | broken rib                  |\n| Bowser   | 1991-10-12 | kennel   | NULL                        |\n| Fang     | 1991-10-12 | kennel   | NULL                        |\n| Fang     | 1998-08-28 | birthday | Gave him a new chew toy     |\n| Claws    | 1998-03-17 | birthday | Gave him a new flea collar  |\n| Whistler | 1998-12-09 | birthday | First birthday              |\n+----------+------------+----------+-----------------------------+\n10 rows in set (0.00 sec)\n\nmysql> select * FROM pet;\n+----------+--------+---------+------+------------+------------+\n| name     | owner  | species | sex  | birth      | death      |\n+----------+--------+---------+------+------------+------------+\n| Fluffy   | Harold | cat     | f    | 1993-02-04 | NULL       |\n| Claws    | Gwen   | cat     | m    | 1994-03-17 | NULL       |\n| Buffy    | Harold | dog     | f    | 1989-05-13 | NULL       |\n| Fang     | Benny  | dog     | m    | 1990-08-27 | NULL       |\n| Bowser   | Diane  | dog     | m    | 1979-08-31 | 1995-07-29 |\n| Chirpy   | Gwen   | bird    | f    | 1998-09-11 | NULL       |\n| Whistler | Gwen   | bird    | NULL | 1997-12-09 | NULL       |\n| Slim     | Benny  | snake   | m    | 1996-04-29 | NULL       |\n| Puffball | Diane  | hamster | f    | 1999-03-30 | NULL       |\n+----------+--------+---------+------+------------+------------+\n9 rows in set (0.00 sec)\n```\n\n\n\u3053\u3053\u304b\u3089SQLAlchemy\u306e\u8a71\u3002\n\u3053\u3093\u306a\u7d50\u5408\u3092\u3057\u305f\u3044\u3068\u601d\u3063\u305f\u3053\u3068\u306f\u3088\u304f\u3042\u308b\u3088\u306d\u3002\n(\u3061\u306a\u307f\u306b\u3001'litter'\u306f\u52d5\u7269\u306e\u51fa\u7523\u3068\u3044\u3046\u610f\u5473)\n\n\n```pattern1\nmysql> SELECT event.name, event.date, event.type, event.remark, pet.species  \n        FROM event INNER JOIN pet ON event.name = pet.name\n        WHERE event.type ='litter';\n+--------+------------+--------+-----------------------------+---------+\n| name   | date       | type   | remark                      | species |\n+--------+------------+--------+-----------------------------+---------+\n| Fluffy | 1995-05-15 | litter | 4 kittens, 3 female, 1 male | cat     |\n| Buffy  | 1993-06-23 | litter | 5 puppies, 2 female, 3 male | dog     |\n| Buffy  | 1994-06-19 | litter | 3 puppies, 3 female         | dog     |\n+--------+------------+--------+-----------------------------+---------+\n3 rows in set (0.00 sec)\n\n```\n\n\u3053\u308c\u3092SQLAlchemy\u3067\u3069\u3046\u8868\u3059\u304b\u3068\u3044\u3046\u3068\u3053\u3046\u306a\u308b\u3002\n\n```python\n   # \u5404table\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n   events = Table('event', metadata, autoload=True)\n   pets = Table('pet', metadata, autoload=True)\n\n   #: \u53d6\u5f97\u3057\u305f\u3044\u30ab\u30e9\u30e0\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n   columns = [events, pets.c.species]\n\n    #: join()\u3067\u7d50\u5408\u3055\u305b\u305f\u3044\u30c6\u30fc\u30d6\u30eb\u3068\u6761\u4ef6\u3092\u6307\u5b9a\u3057select()\u3092\u547c\u3073\u51fa\u3057\n    q = join(events, pets, events.c.name == pets.c.name) \\\n        .select() \\\n        .where(events.c.type == 'litter')\n    #: \u6700\u5f8c\u306bwith_only_columns()\u306b\u53d6\u5f97\u3057\u305f\u3044\u30ab\u30e9\u30e0\u306e\u30ea\u30b9\u30c8\u3092\u6e21\u3059    \n    q =  q.with_only_columns(columns)\n```\nwith_only_columns()\u306f\u53d6\u5f97\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u7d5e\u308b\u305f\u3081\u306b\u4f7f\u3046\u3002\n\n\u6b21\u306bGROUP BY\u3092\u4f7f\u3063\u3066count()\u3092\u4f7f\u3046\u30af\u30a8\u30ea\u4f8b\u3068\u3057\u3066\u4e0b\u306e\u3088\u3046\u306a\u30af\u30a8\u30ea\u3092\u4f5c\u3063\u3066\u307f\u308b\u3002\n\n```\nmysql> SELECT event.name, count(event.name) AS litter_count \n       FROM event INNER JOIN pet ON event.name = pet.name \n       WHERE event.type = 'litter' GROUP BY event.name;\n\n+--------+--------------+\n| name   | litter_count |\n+--------+--------------+\n| Buffy  |            2 |\n| Fluffy |            1 |\n+--------+--------------+\n2 rows in set (0.00 sec)\n```\n\n```python\n    #: func.count()\u3067\u96c6\u7d04\u3059\u308b\u30ab\u30e9\u30e0\u3092\u6307\u5b9a\n    #: AS litter_count \u3092label('litter_count')\u3067\u6307\u5b9a\n    columns = [events.c.name, func.count(events.c.name).label('litter_count')]\n\n    q = join(events, pets, events.c.name == pets.c.name) \\\n        .select() \\\n        .where(events.c.type == 'litter') \\\n        .group_by(events.c.name)  # <= \u3055\u3063\u304d\u306e\u30af\u30a8\u30ea\u306b1\u884c\u8ffd\u52a0\n    q =  q.with_only_columns(columns)\n```\n\n\u3082\u3063\u3068\u77ed\u3044\u66f8\u304d\u65b9\u3092\u3059\u308b\u3068\u6b21\u306e\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\n```python\n    q =  select(events.c.name == pets.c.name) \\\n        .where(events.c.type == 'litter') \\\n        .group_by(events.c.name)\n    q =  q.with_only_columns(columns)\n\n```\njoin()\u304c\u306a\u304f\u306a\u3063\u3066selct()\u306e\u4e2d\u306b\u7d50\u5408\u6761\u4ef6\u304c\u79fb\u52d5\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nSQLAlchemy\u306a\u3089\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3067INNER JOIN\u3084GROUP BY\u3068COUNT()\u3092\u4f7f\u3063\u305f\u30af\u30a8\u30ea\u304c\u66f8\u3051\u307e\u3059\u3002 \n\n\u3042\u3068\u82e6\u52b4\u8a71\u3067\u3059\u304c\u3001\u3053\u3053\u306b\u305f\u3069\u308a\u7740\u304f\u307e\u3067\u306b\u3044\u308d\u3044\u308d\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u8aad\u3093\u3067\u3084\u3063\u3068\u3053\u306e\u30af\u30a8\u30ea\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\nSQLAlchemy\u306f\u8c4a\u5bcc\u3059\u304e\u308b\u307b\u3069\u6a5f\u80fd\u304c\u76db\u308a\u3060\u304f\u3055\u3093\u306a\u306e\u3067\u672c\u683c\u7684\u306b\u4f7f\u3046\u524d\u306b\u4e00\u5ea6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u3061\u3083\u3093\u3068\u8aad\u3093\u3060\u307b\u3046\u304c\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u65e5\u672c\u8a9e\u60c5\u5831\u305d\u3093\u306a\u306b\u591a\u304f\u306a\u3044\u306e\u3067StackOverFlow\u3068\u304b\u82f1\u8a9e\u306e\u30b5\u30a4\u30c8\u7d50\u69cb\u8aad\u3093\u3067\u52c9\u5f37\u3057\u3066\u307e\u3057\u305f\u3002\npython\u3084\u308b\u306a\u3089\u82f1\u8a9e\u51fa\u6765\u306a\u3044\u3068\u8f9b\u3044\u3002Ruby\u306a\u3089rails\u306e\u304a\u304b\u3052\u3067\u65e5\u672c\u8a9e\u60c5\u5831\u7d50\u69cb\u3042\u308b\u3093\u3060\u3051\u3069python\u306f\u65e5\u672c\u3067\u6d41\u884c\u3063\u3066\u306a\u3044\u304b\u3089\u30ce\u30a6\u30cf\u30a6\u304c\u5c11\u306a\u3044\u3068\u611f\u3058\u308b\u3002\n\n\u4e00\u56de\u308f\u304b\u308b\u307e\u3067\u7d50\u69cb\u306a\u6642\u9593\u304b\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u7406\u89e3\u3067\u304d\u305f\u3089\u304b\u306a\u308a\u5f37\u529b\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3044\u3046\u3053\u3068\u3092\u5b9f\u611f\u51fa\u6765\u307e\u3057\u305f\u3002\n\u81ea\u5206\u3082\u307e\u3060\u307e\u3060\u52c9\u5f37\u4e2d\u306a\u306e\u3067\u4e0a\u306b\u793a\u3057\u305f\u66f8\u304d\u65b9\u304c\u5fc5\u305a\u3057\u3082\u30d9\u30b9\u30c8\u3060\u3068\u601d\u3063\u3066\u306a\u3044\u3067\u3059\u3057\u3082\u3063\u3068\u53ef\u8aad\u6027\u304c\u9ad8\u3044\u30d9\u30bf\u30fc\u306a\u66f8\u304d\u65b9\u304c\u3042\u308b\u306f\u305a\u3067\u3059\u3002\n\nSQLAlchemy\u306fORM\u3068\u3057\u3066\u4f7f\u3046\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u591a\u6570\u898b\u304b\u3051\u307e\u3057\u305f\u304c\u81ea\u5206\u3068\u3057\u3066\u306fSELECT\u6587\u306e\u30af\u30a8\u30ea\u30d3\u30eb\u30c0\u2212\u3068\u3057\u3066SQLAlchemy\u3092\u4f7f\u3046\u306e\u304c\u597d\u304d\u3067\u3059\u3002  \n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u81ea\u4f5c\u306e\u30af\u30a8\u30ea\u30d3\u30eb\u30c0\u2212\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u4f5c\u3063\u3066\u30a2\u30ec\u304c\u51fa\u6765\u306a\u3044\u3068\u304b\u4f5c\u308a\u3053\u3080\u3088\u308a\u3082\n\u5168\u54e1\u3067SQLAlchemy\u3092\u52c9\u5f37\u3057\u3066\u4f7f\u3046\u307b\u3046\u304c\u4f55\u500d\u3082\u697d\u3060\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n\n\n```python:sample.py\n#!/usr/bin/env python2.7\n# -*- coding:utf-8 -*-\n\nfrom sqlalchemy import create_engine, MetaData, Table\nfrom sqlalchemy.sql import select, join, func\n\nfrom pprint import pprint\n\nconfig = {\n    'user': 'user',\n    'passwd':'password',\n    'host': 'localhost',\n    'port': 3306,\n    'database': 'menagerie',\n}\ndsn_fmt = 'mysql+pymysql://%(user)s:%(passwd)s@%(host)s:%(port)d/%(database)s'\ndsn = dsn_fmt % config\n\nengine = create_engine(dsn, echo=True)\n\nmetadata = MetaData(bind=engine)\n\nevents = Table('event', metadata, autoload=True)\npets = Table('pet', metadata, autoload=True)\n\nif __name__ == '__main__':\n    #: part1\n    columns = [events, pets.c.species]\n    q = join(events, pets, events.c.name == pets.c.name) \\\n        .select().where(events.c.type == 'litter')\n    q =  q.with_only_columns(columns)\n    print q\n    for row in q.execute():\n        pprint(dict(row))\n\n    #: part2\n    columns = [events.c.name, func.count(events.c.name).label('litter_count')]\n    q = join(events, pets, events.c.name == pets.c.name) \\\n        .select() \\\n        .where(events.c.type == 'litter') \\\n        .group_by(events.c.name)\n    q =  q.with_only_columns(columns)\n    print q\n    for row in q.execute():\n        pprint(dict(row))\n\n    #: part2 another version\n    q =  select(events.c.name == pets.c.name) \\\n        .where(events.c.type == 'litter') \\\n        .group_by(events.c.name)\n    q =  q.with_only_columns(columns)\n    print q\n    for row in q.execute():\n        pprint(dict(row))\n```\n", "tags": ["sqlalchemy", "Python"]}