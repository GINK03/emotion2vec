{"tags": ["ReactiveProperty", "Android", "iOS", "Xamarin", "ReactiveExtensions"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\u3000Xamarin.Forms \u306f\u3001Xamarin \u306b\u65b0\u305f\u306b\u642d\u8f09\u3055\u308c\u305f\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0UI\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff06MVVM\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\n\u3000ReactiveProperty \u306f\u3001MVVM\u306e(\u7279\u306b ViewModel\u306e)\u5b9f\u88c5\u3092\u5f37\u529b\u306b\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u304f\u308c\u308b\u3001Reactive Extensions \u3092\u57fa\u76e4\u3068\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u4e21\u8005\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001Android/iOS\u30a2\u30d7\u30ea\u304c COOL \u306a\u611f\u3058\u3067\u66f8\u3051\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u3001\u3068\u3044\u3046\u4e8b\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n0. \u74b0\u5883\u306a\u3069\nMac + Xamarin Studio \u3092\u4f7f\u3044\u307e\u3059\u304c\u3001Windows + Visual Studio + Xamarin-Addin \u3067\u3082\u30a4\u30b1\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n1. \u5c0e\u5165\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\u65b0\u898f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u3001\uff3bC#\uff3d\u2212\uff3bMobile Apps\uff3d\u2212\uff3bBlank App(Xamarin.Forms Portable)\uff3d\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nPCL \u306e Profile \u3092\u5909\u66f4\n\u3000\u4f5c\u6210\u3055\u308c\u305f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u4e00\u756a\u4e0a\u306b\u3042\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8(.Android \u3068\u304b .iOS \u304c\u4ed8\u3044\u3066\u3044\u306a\u3044\u3084\u3064)\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u3092\u958b\u3044\u3066 Profile \u3092 PCL 4.5 - Profile49 \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\u5143\u3005\u306e Profile78 \u3067\u306f ReactiveProperty \u304c Nuget \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u306a\u3044\u305f\u3081\u3067\u3059\u3002\u6700\u8fd1\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u5bfe\u8c61\u306b\u3059\u308b\u306a\u3089\u3001\u3042\u307e\u308a\u5f71\u97ff\u306f\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\n\nNuget \u3067 Reactive Extensions \u3068 ReactiveProperty \u3092\u8ffd\u52a0\n\u3000\u30e1\u30cb\u30e5\u30fc\u306e\uff3b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff3d\u30fc\uff3bAdd Packages\uff3d\u3067 Nuget \u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u958b\u304d\u3001\u56f3\u306e\u3088\u3046\u306b \u300cReactive Extensions - Main Library\u300d\u3068\u300cReactiveProperty Portable\u300d\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\uff08Reactive Extensions \u306e\u8ffd\u52a0\u306e\u969b\u3001\u306a\u306b\u3084\u3089Warning\u304c\u51fa\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u9032\u3081\u307e\u3059\u3002\uff09\n\n2. ViewModel \u306e\u5b9f\u88c5\n\u3000PCL \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3001FirstViewModel.cs \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u3000FirstViewModel \u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u30b3\u30de\u30f3\u30c9\u3092\u6301\u3061\u307e\u3059\u3002\n\nInputText\u30d7\u30ed\u30d1\u30c6\u30a3 : EditBox \u306e\u5165\u529b\u306b\u5fdc\u3058\u3066\u66f4\u65b0\nDisplayText\u30d7\u30ed\u30d1\u30c6\u30a3 : InputText \u306e\u5909\u5316\u304b\u30891\u79d2\u5f8c\u306b\u3001InputText \u3092\u5927\u6587\u5b57\u306b\u3057\u3066\u66f4\u65b0\nClear\u30b3\u30de\u30f3\u30c9 : InputText \u304c 'clear' \u306e\u6642\u306e\u307f\u6709\u52b9\u3002\u5b9f\u884c\u3059\u308b\u3068 InputText \u3092\u7a7a\u306b\u3059\u308b\u3002\n\n\u3053\u308c\u3089\u306e\u5b9f\u88c5\u304c\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nFirstViewModel.cs\nusing System;\nusing Codeplex.Reactive;\nusing System.Reactive.Linq;\n\nnamespace FormsWithRxProperty.ViewModels\n{\n    public class FirstViewModel\n    {\n        private readonly ReactiveProperty<string> _inputText = \n            new ReactiveProperty<string>(\"Hoge\");\n        public ReactiveProperty<string> InputText \n        { \n            get { return _inputText; }\n        }\n\n        public ReactiveProperty<string> DisplayText\n        {\n            get; private set;\n        }\n\n        public ReactiveCommand Clear\n        {\n            get; private set;\n        }\n\n        public FirstViewModel()\n        {\n            // DisplayText \u306f\u3001InputText \u306e\u5909\u66f4\u304b\u30891\u79d2\u5f8c\u306b\u5927\u6587\u5b57\u306b\u3057\u3066\u66f4\u65b0\n            this.DisplayText = _inputText\n                .Delay(TimeSpan.FromSeconds(1))\n                .Select(x => x.ToUpper())\n                .ToReactiveProperty();\n\n            // InputText \u304c `clear` \u306e\u6642\u306b\u5b9f\u884c\u53ef\u80fd\n            this.Clear = _inputText\n                .Select(x => x.Equals(\"clear\"))\n                .ToReactiveCommand();\n            // \u5b9f\u884c\u3055\u308c\u305f\u3089\u3001InputText \u3092\u7a7a\u306b\u3059\u308b\n            this.Clear.Subscribe(_ => _inputText.Value = String.Empty);\n        }\n\n    }\n}\n\n\n\u3000\u9762\u5012\u306a INotifyPropertyChanged \u306e\u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u304f\u3001\u3059\u3063\u304d\u308a\u3068\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\n\u3000\u307e\u305f\u3001\u4ed6\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u95a2\u9023\u3057\u3066(\u53cd\u5fdc\u3057\u3066)\u5024\u304c\u5909\u5316\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u3001\u30b3\u30de\u30f3\u30c9\u306e\u5229\u7528\u53ef\u5426\u306a\u3069\u304c\u3001Reactive Extensions \u306e\u6a5f\u80fd\u306b\u3088\u308a\u3001\u6d41\u308c\u308b\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\n\n3. \u753b\u9762\u53ca\u3073 ViewModel \u3068\u306e Binding \u306e\u5b9f\u88c5\n\u3000\u753b\u9762(UI)\u306f\u3001Xamarin.Forms \u306e\u6069\u6075\u3067\u3001Android/iOS \u5171\u901a\u3067\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002XAML \u3082\u4f7f\u3048\u307e\u3059\u304c\u3001\u3088\u304f\u77e5\u3089\u306a\u3044\u306e\u3067\u30b3\u30fc\u30c9\u3067UI\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u3000PCL \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3001 FirstPage.cs \u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\nFirstPage.cs\nusing System;\nusing Xamarin.Forms;\nusing FormsWithRxProperty.ViewModels;\n\nnamespace FormsWithRxProperty.Pages\n{\n    public class FirstPage : ContentPage\n    {\n        public FirstPage()\n        {\n            // UI\n            var entry = new Entry\n            {\n                Text = \"Hello, Forms!\",\n                VerticalOptions = LayoutOptions.Center,\n                HorizontalOptions = LayoutOptions.FillAndExpand,\n            };\n\n            var label = new Label\n            {\n                VerticalOptions = LayoutOptions.Center,\n                HorizontalOptions = LayoutOptions.CenterAndExpand,\n            };\n\n            var button = new Button\n            {\n                Text = \"Clear (type 'clear' to enable)\",\n                VerticalOptions = LayoutOptions.Center,\n                HorizontalOptions = LayoutOptions.FillAndExpand,\n            };\n\n            this.Content = new StackLayout\n            {\n                Padding = new Thickness(50f),\n                VerticalOptions = LayoutOptions.Start,\n                HorizontalOptions = LayoutOptions.Fill,\n                Orientation = StackOrientation.Vertical,\n                Children =\n                {\n                    entry,\n                    label,\n                    button\n                }\n            };\n\n            // ViewModel \u3068\u306e Binding\n            this.BindingContext = new FirstViewModel();\n            entry.SetBinding<FirstViewModel>(Entry.TextProperty, vm=>vm.InputText.Value);\n            label.SetBinding<FirstViewModel>(Label.TextProperty, vm=>vm.DisplayText.Value);\n            button.SetBinding<FirstViewModel>(Button.CommandProperty, vm=>vm.Clear);\n        }\n    }\n}\n\n\n\u3000\u3061\u3087\u3063\u3068\u9577\u3044\u3067\u3059\u304c\u3001\u753b\u9762\u306b\u300c\u30a8\u30c7\u30a3\u30c3\u30c8\u30dc\u30c3\u30af\u30b9\u300d\u300c\u30e9\u30d9\u30eb\u300d\u300c\u30dc\u30bf\u30f3\u300d\u304c\u7e26\u306b\u4e26\u3093\u3067\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\u3000\u4e0b\u90e8\u306e\uff14\u884c\u3067\u3001FirstViewModel \u306e\u5404\u30d7\u30ed\u30d1\u30c6\u30a3\u3001\u30b3\u30de\u30f3\u30c9\u3068 Bind \u3057\u3066\u3044\u307e\u3059\u3002\n\u3000\u3082\u3068\u3082\u3068\u3042\u3063\u305f App.cs \u306f\u3001FirstPage \u3092\u751f\u6210\u3059\u308b\u3060\u3051\u306b\u3057\u307e\u3059\u3002\n\nApp.cs\nusing System;\nusing Xamarin.Forms;\nusing FormsWithRxProperty.Pages;\n\nnamespace FormsWithRxProperty\n{\n    public class App\n    {\n        public static Page GetMainPage()\n        {   \n            return new FirstPage();\n        }\n    }\n}\n\n\n\n\u52d5\u304b\u3059\uff01\n.Android \u304b .iOS \u306e\u4ed8\u3044\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u306b\u3057\u3066\u3001\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\n\u8ffd\u8a18 2014.9.10\n\u5b9f\u6a5f\u3067\u52d5\u4f5c\u78ba\u8a8d\u3059\u308b\u306e\u5fd8\u308c\u3066\u307e\u3057\u305f\uff08\u5b9f\u6a5f\u306fAOT\u306a\u306e\u306b\u5bfe\u3057\u3066iOS\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u306fJIT\u306a\u306e\u3067\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u304b\u304c\u666e\u901a\u306b\u52d5\u3044\u3066\u3057\u307e\u3046\uff09\u3002\n\u5b9f\u6a5f\u3067\u3082\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u307e\u3057\u305f\uff01\n\n\u8ffd\u8a18 2014.9.11 INotifyPropertyChanged \u306e\u5229\u7528\nViewModel \u306f INotifyPropertyChanged \u3092\u5b9f\u88c5\u3057\u3066\u4f5c\u6210\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\u65e2\u306b\u305d\u306e\u3088\u3046\u306b\u3057\u3066\u4f5c\u3089\u308c\u305f ViewModel \u3067\u3082 IObservable \u5316\u3057\u3066\u3001ReactiveProperty \u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\nSecondViewModel.cs\npublic class SecondViewModel : INotifyPropertyChanged\n{\n    public ReactiveProperty<string> ValidationAttr { get; private set; }\n    public event PropertyChangedEventHandler PropertyChanged;\n\n    private string _myName = \"HoGe\";\n    public string MyName \n    {\n        get { return _myName; }\n        set \n        { \n            if (_myName == value) return;\n\n            _myName = value;\n            PropertyChanged(this, new PropertyChangedEventArgs(\"MyName\"));\n        }\n    }\n\n    public ReactiveProperty<string> LowerText { get; private set; }\n\n    private ICommand _resetCommand;\n    public ICommand ResetCommand\n    {\n        get\n        {\n            return _resetCommand ?? (_resetCommand = \n                new Xamarin.Forms.Command(() => MyName = \"XAAAAMAAARIN!!\"));\n        }\n    }\n\n    public SecondViewModel()\n    {\n        this.LowerText = this.ObserveProperty(x => x.MyName)\n            .Select(x => x.ToLower())\n            .ToReactiveProperty();\n    }\n}\n\n\n\n\n\u307e\u3068\u3081\n\u3000Reactive Extensions \u306e\u30e1\u30ea\u30c3\u30c8\u3092\u6d3b\u304b\u3057\u3066 MVVM \u3092\u69cb\u7bc9\u3067\u304d\u308b ReactiveProperty \u3068\u3001\u30ef\u30f3\u30bd\u30fc\u30b9\u3067 Android/iOS \u306e\u753b\u9762\u3092\u5b9a\u7fa9\u3067\u304d\u3001\u3055\u3089\u306b Binding \u307e\u3067\u3082\u5171\u901a\u306b\u3067\u304d\u308b Xamarin.Forms \u306e\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u4eca\u5f8c\u306e\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3092\u3068\u3066\u3082\u52b9\u7387\u7684\u306b\u3057\u3066\u304f\u308c\u307e\u3059\u3001 \u305d\u3057\u3066\u306a\u306b\u3088\u308a\u697d\u3057\u3044\uff01\n\u3000\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\n\namay077/XamarinFormsWithReactivePropertySample\n\n\u3000\u306b\u7f6e\u304d\u307e\u3057\u305f\u306e\u3067\u3001\u662f\u975e\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\nReactiveProperty\n\nReactiveProperty \u30aa\u30fc\u30d0\u30fc\u30d3\u30e5\u30fc - \u304b\u305a\u304d\u306eBlog@hatena\nReactiveProperty - MVVM Extensions for Rx - Download: ReactiveProperty v1.0\nneue cc - ReactiveProperty : Rx + MVVM\u3078\u306e\u8a66\u307f\nReactiveProperty\u3092\u4f7f\u3044\u305f\u3044\u4eba\u306e\u305f\u3081\u306e\u3001ReactiveExtensions\u5165\u9580\uff08\u305d\u306e\uff11\uff09 | \u6ce5\u5ead\n\n\nXamarin.Forms\n\nXamarin.Forms | Xamarin\nXamarin.Forms\u306e\u57fa\u672c\u69cb\u60f3\u3068\u4ed5\u7d44\u307f - Build Insider\nXamarin.Forms - Build Insider\nXamarin.Forms ListView\u3067Twitter\u98a8\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\uff08\u6a5f\u7a2e\u4f9d\u5b58\u30b3\u30fc\u30c9\u306a\u3057\uff09 - SIN@SAPPOROWORKS\u306e\u899a\u66f8\n\n\n\u3000[Xamarin.Forms](http://www.buildinsider.net/mobile/xamarintips/0005) \u306f\u3001Xamarin \u306b\u65b0\u305f\u306b\u642d\u8f09\u3055\u308c\u305f\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0UI\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff06MVVM\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\n\u3000[ReactiveProperty](http://okazuki.hatenablog.com/entry/2014/05/07/014133) \u306f\u3001MVVM\u306e(\u7279\u306b ViewModel\u306e)\u5b9f\u88c5\u3092\u5f37\u529b\u306b\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u304f\u308c\u308b\u3001[Reactive Extensions](http://www.atmarkit.co.jp/fdotnet/introrx/index/) \u3092\u57fa\u76e4\u3068\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\n \u4e21\u8005\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001Android/iOS\u30a2\u30d7\u30ea\u304c COOL \u306a\u611f\u3058\u3067\u66f8\u3051\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u3001\u3068\u3044\u3046\u4e8b\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## 0. \u74b0\u5883\u306a\u3069\n\nMac + Xamarin Studio \u3092\u4f7f\u3044\u307e\u3059\u304c\u3001Windows + Visual Studio + Xamarin-Addin \u3067\u3082\u30a4\u30b1\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## 1. \u5c0e\u5165\n\n### \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\n\u65b0\u898f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u3001\uff3bC#\uff3d\u2212\uff3bMobile Apps\uff3d\u2212\uff3bBlank App(Xamarin.Forms Portable)\uff3d\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n### PCL \u306e Profile \u3092\u5909\u66f4\n\n\u3000\u4f5c\u6210\u3055\u308c\u305f\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u4e00\u756a\u4e0a\u306b\u3042\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8(.Android \u3068\u304b .iOS \u304c\u4ed8\u3044\u3066\u3044\u306a\u3044\u3084\u3064)\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u3092\u958b\u3044\u3066 Profile \u3092 **PCL 4.5 - Profile49** \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\u5143\u3005\u306e Profile78 \u3067\u306f ReactiveProperty \u304c Nuget \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u306a\u3044\u305f\u3081\u3067\u3059\u3002\u6700\u8fd1\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u5bfe\u8c61\u306b\u3059\u308b\u306a\u3089\u3001\u3042\u307e\u308a\u5f71\u97ff\u306f\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\n![](https://dl.dropboxusercontent.com/u/264530/qiita/using_xamarin_forms_with_reactiveproperty_01.png)\n\n### Nuget \u3067 Reactive Extensions \u3068 ReactiveProperty \u3092\u8ffd\u52a0\n\n\u3000\u30e1\u30cb\u30e5\u30fc\u306e\uff3b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff3d\u30fc\uff3bAdd Packages\uff3d\u3067 Nuget \u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u958b\u304d\u3001\u56f3\u306e\u3088\u3046\u306b \u300cReactive Extensions - Main Library\u300d\u3068\u300cReactiveProperty Portable\u300d\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n![](https://dl.dropboxusercontent.com/u/264530/qiita/using_xamarin_forms_with_reactiveproperty_02.png)\n\n\uff08Reactive Extensions \u306e\u8ffd\u52a0\u306e\u969b\u3001\u306a\u306b\u3084\u3089Warning\u304c\u51fa\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u9032\u3081\u307e\u3059\u3002\uff09\n\n## 2. ViewModel \u306e\u5b9f\u88c5\n\n\u3000PCL \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3001``FirstViewModel.cs`` \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u3000``FirstViewModel`` \u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u30b3\u30de\u30f3\u30c9\u3092\u6301\u3061\u307e\u3059\u3002\n\n* InputText\u30d7\u30ed\u30d1\u30c6\u30a3 : EditBox \u306e\u5165\u529b\u306b\u5fdc\u3058\u3066\u66f4\u65b0\n* DisplayText\u30d7\u30ed\u30d1\u30c6\u30a3 : InputText \u306e\u5909\u5316\u304b\u30891\u79d2\u5f8c\u306b\u3001InputText \u3092\u5927\u6587\u5b57\u306b\u3057\u3066\u66f4\u65b0\n* Clear\u30b3\u30de\u30f3\u30c9 : InputText \u304c 'clear' \u306e\u6642\u306e\u307f\u6709\u52b9\u3002\u5b9f\u884c\u3059\u308b\u3068 InputText \u3092\u7a7a\u306b\u3059\u308b\u3002\n\n\u3053\u308c\u3089\u306e\u5b9f\u88c5\u304c\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```csharp:FirstViewModel.cs\nusing System;\nusing Codeplex.Reactive;\nusing System.Reactive.Linq;\n\nnamespace FormsWithRxProperty.ViewModels\n{\n    public class FirstViewModel\n    {\n        private readonly ReactiveProperty<string> _inputText = \n            new ReactiveProperty<string>(\"Hoge\");\n        public ReactiveProperty<string> InputText \n        { \n            get { return _inputText; }\n        }\n\n        public ReactiveProperty<string> DisplayText\n        {\n            get; private set;\n        }\n\n        public ReactiveCommand Clear\n        {\n            get; private set;\n        }\n\n        public FirstViewModel()\n        {\n            // DisplayText \u306f\u3001InputText \u306e\u5909\u66f4\u304b\u30891\u79d2\u5f8c\u306b\u5927\u6587\u5b57\u306b\u3057\u3066\u66f4\u65b0\n            this.DisplayText = _inputText\n                .Delay(TimeSpan.FromSeconds(1))\n                .Select(x => x.ToUpper())\n                .ToReactiveProperty();\n\n            // InputText \u304c `clear` \u306e\u6642\u306b\u5b9f\u884c\u53ef\u80fd\n            this.Clear = _inputText\n                .Select(x => x.Equals(\"clear\"))\n                .ToReactiveCommand();\n            // \u5b9f\u884c\u3055\u308c\u305f\u3089\u3001InputText \u3092\u7a7a\u306b\u3059\u308b\n            this.Clear.Subscribe(_ => _inputText.Value = String.Empty);\n        }\n        \n    }\n}\n```\n\n\u3000\u9762\u5012\u306a ``INotifyPropertyChanged`` \u306e\u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u304f\u3001\u3059\u3063\u304d\u308a\u3068\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\n\u3000\u307e\u305f\u3001\u4ed6\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u95a2\u9023\u3057\u3066(\u53cd\u5fdc\u3057\u3066)\u5024\u304c\u5909\u5316\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u3001\u30b3\u30de\u30f3\u30c9\u306e\u5229\u7528\u53ef\u5426\u306a\u3069\u304c\u3001Reactive Extensions \u306e\u6a5f\u80fd\u306b\u3088\u308a\u3001\u6d41\u308c\u308b\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\n\n## 3. \u753b\u9762\u53ca\u3073 ViewModel \u3068\u306e Binding \u306e\u5b9f\u88c5\n\n\u3000\u753b\u9762(UI)\u306f\u3001Xamarin.Forms \u306e\u6069\u6075\u3067\u3001Android/iOS \u5171\u901a\u3067\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002XAML \u3082\u4f7f\u3048\u307e\u3059\u304c\u3001\u3088\u304f\u77e5\u3089\u306a\u3044\u306e\u3067\u30b3\u30fc\u30c9\u3067UI\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n\u3000PCL \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3001 ``FirstPage.cs`` \u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```csharp:FirstPage.cs\nusing System;\nusing Xamarin.Forms;\nusing FormsWithRxProperty.ViewModels;\n\nnamespace FormsWithRxProperty.Pages\n{\n    public class FirstPage : ContentPage\n    {\n        public FirstPage()\n        {\n            // UI\n            var entry = new Entry\n            {\n                Text = \"Hello, Forms!\",\n                VerticalOptions = LayoutOptions.Center,\n                HorizontalOptions = LayoutOptions.FillAndExpand,\n            };\n\n            var label = new Label\n            {\n                VerticalOptions = LayoutOptions.Center,\n                HorizontalOptions = LayoutOptions.CenterAndExpand,\n            };\n\n            var button = new Button\n            {\n                Text = \"Clear (type 'clear' to enable)\",\n                VerticalOptions = LayoutOptions.Center,\n                HorizontalOptions = LayoutOptions.FillAndExpand,\n            };\n\n            this.Content = new StackLayout\n            {\n                Padding = new Thickness(50f),\n                VerticalOptions = LayoutOptions.Start,\n                HorizontalOptions = LayoutOptions.Fill,\n                Orientation = StackOrientation.Vertical,\n                Children =\n                {\n                    entry,\n                    label,\n                    button\n                }\n            };\n\n            // ViewModel \u3068\u306e Binding\n            this.BindingContext = new FirstViewModel();\n            entry.SetBinding<FirstViewModel>(Entry.TextProperty, vm=>vm.InputText.Value);\n            label.SetBinding<FirstViewModel>(Label.TextProperty, vm=>vm.DisplayText.Value);\n            button.SetBinding<FirstViewModel>(Button.CommandProperty, vm=>vm.Clear);\n        }\n    }\n}\n```\n\n\u3000\u3061\u3087\u3063\u3068\u9577\u3044\u3067\u3059\u304c\u3001\u753b\u9762\u306b\u300c\u30a8\u30c7\u30a3\u30c3\u30c8\u30dc\u30c3\u30af\u30b9\u300d\u300c\u30e9\u30d9\u30eb\u300d\u300c\u30dc\u30bf\u30f3\u300d\u304c\u7e26\u306b\u4e26\u3093\u3067\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u3000\u4e0b\u90e8\u306e\uff14\u884c\u3067\u3001``FirstViewModel`` \u306e\u5404\u30d7\u30ed\u30d1\u30c6\u30a3\u3001\u30b3\u30de\u30f3\u30c9\u3068 Bind \u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3000\u3082\u3068\u3082\u3068\u3042\u3063\u305f ``App.cs`` \u306f\u3001``FirstPage`` \u3092\u751f\u6210\u3059\u308b\u3060\u3051\u306b\u3057\u307e\u3059\u3002\n\n```csharp:App.cs\nusing System;\nusing Xamarin.Forms;\nusing FormsWithRxProperty.Pages;\n\nnamespace FormsWithRxProperty\n{\n    public class App\n    {\n        public static Page GetMainPage()\n        {\t\n            return new FirstPage();\n        }\n    }\n}\n```\n\n\n## \u52d5\u304b\u3059\uff01\n\n .Android \u304b .iOS \u306e\u4ed8\u3044\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u306b\u3057\u3066\u3001\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n![](https://dl.dropboxusercontent.com/u/264530/qiita/using_xamarin_forms_with_reactiveproperty_03.gif)\n\n### \u8ffd\u8a18 2014.9.10\n\n\u5b9f\u6a5f\u3067\u52d5\u4f5c\u78ba\u8a8d\u3059\u308b\u306e\u5fd8\u308c\u3066\u307e\u3057\u305f\uff08\u5b9f\u6a5f\u306fAOT\u306a\u306e\u306b\u5bfe\u3057\u3066iOS\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u306fJIT\u306a\u306e\u3067\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u304b\u304c\u666e\u901a\u306b\u52d5\u3044\u3066\u3057\u307e\u3046\uff09\u3002\n\u5b9f\u6a5f\u3067\u3082\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u307e\u3057\u305f\uff01\n\n## \u8ffd\u8a18 2014.9.11 INotifyPropertyChanged \u306e\u5229\u7528\n\nViewModel \u306f ``INotifyPropertyChanged`` \u3092\u5b9f\u88c5\u3057\u3066\u4f5c\u6210\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\u65e2\u306b\u305d\u306e\u3088\u3046\u306b\u3057\u3066\u4f5c\u3089\u308c\u305f ViewModel \u3067\u3082 ``IObservable`` \u5316\u3057\u3066\u3001ReactiveProperty \u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n```csharp:SecondViewModel.cs\npublic class SecondViewModel : INotifyPropertyChanged\n{\n    public ReactiveProperty<string> ValidationAttr { get; private set; }\n    public event PropertyChangedEventHandler PropertyChanged;\n\n    private string _myName = \"HoGe\";\n    public string MyName \n    {\n        get { return _myName; }\n        set \n        { \n            if (_myName == value) return;\n\n            _myName = value;\n            PropertyChanged(this, new PropertyChangedEventArgs(\"MyName\"));\n        }\n    }\n\n    public ReactiveProperty<string> LowerText { get; private set; }\n\n    private ICommand _resetCommand;\n    public ICommand ResetCommand\n    {\n        get\n        {\n            return _resetCommand ?? (_resetCommand = \n                new Xamarin.Forms.Command(() => MyName = \"XAAAAMAAARIN!!\"));\n        }\n    }\n\n    public SecondViewModel()\n    {\n        this.LowerText = this.ObserveProperty(x => x.MyName)\n            .Select(x => x.ToLower())\n            .ToReactiveProperty();\n    }\n}\n```\n\n![](https://dl.dropboxusercontent.com/u/264530/qiita/using_xamarin_forms_with_reactiveproperty_04.png)\n\n\n## \u307e\u3068\u3081\n\n\u3000Reactive Extensions \u306e\u30e1\u30ea\u30c3\u30c8\u3092\u6d3b\u304b\u3057\u3066 MVVM \u3092\u69cb\u7bc9\u3067\u304d\u308b ReactiveProperty \u3068\u3001\u30ef\u30f3\u30bd\u30fc\u30b9\u3067 Android/iOS \u306e\u753b\u9762\u3092\u5b9a\u7fa9\u3067\u304d\u3001\u3055\u3089\u306b Binding \u307e\u3067\u3082\u5171\u901a\u306b\u3067\u304d\u308b Xamarin.Forms \u306e\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u4eca\u5f8c\u306e\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3092\u3068\u3066\u3082\u52b9\u7387\u7684\u306b\u3057\u3066\u304f\u308c\u307e\u3059\u3001 **\u305d\u3057\u3066\u306a\u306b\u3088\u308a\u697d\u3057\u3044\uff01**\n\n\u3000\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\n\n* [amay077/XamarinFormsWithReactivePropertySample](https://github.com/amay077/XamarinFormsWithReactivePropertySample/tree/master)\n\n\u3000\u306b\u7f6e\u304d\u307e\u3057\u305f\u306e\u3067\u3001\u662f\u975e\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n### ReactiveProperty\n\n* [ReactiveProperty \u30aa\u30fc\u30d0\u30fc\u30d3\u30e5\u30fc - \u304b\u305a\u304d\u306eBlog@hatena](http://okazuki.hatenablog.com/entry/2014/05/07/014133)\n* [ReactiveProperty - MVVM Extensions for Rx - Download: ReactiveProperty v1.0](https://reactiveproperty.codeplex.com/releases/view/132232)\n* [neue cc - ReactiveProperty : Rx + MVVM\u3078\u306e\u8a66\u307f](http://neue.cc/2011/08/26_341.html)\n* [ReactiveProperty\u3092\u4f7f\u3044\u305f\u3044\u4eba\u306e\u305f\u3081\u306e\u3001ReactiveExtensions\u5165\u9580\uff08\u305d\u306e\uff11\uff09 | \u6ce5\u5ead](http://yone64.wordpress.com/2014/06/20/reactiveproperty%E3%82%92%E4%BD%BF%E3%81%84%E3%81%9F%E3%81%84%E4%BA%BA%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%80%81reactiveextensions%E5%85%A5%E9%96%80%EF%BC%88%E3%81%9D%E3%81%AE%EF%BC%91%EF%BC%89/)\n\n### Xamarin.Forms\n\n* [Xamarin.Forms | Xamarin](http://developer.xamarin.com/guides/cross-platform/xamarin-forms/)\n* [Xamarin.Forms\u306e\u57fa\u672c\u69cb\u60f3\u3068\u4ed5\u7d44\u307f - Build Insider](http://www.buildinsider.net/mobile/insidexamarin/14)\n* [Xamarin.Forms - Build Insider](http://www.buildinsider.net/tagcloud?tag=Xamarin.Forms)\n* [Xamarin.Forms ListView\u3067Twitter\u98a8\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\uff08\u6a5f\u7a2e\u4f9d\u5b58\u30b3\u30fc\u30c9\u306a\u3057\uff09 - SIN@SAPPOROWORKS\u306e\u899a\u66f8](http://furuya02.hatenablog.com/entry/2014/08/08/003036)\n"}