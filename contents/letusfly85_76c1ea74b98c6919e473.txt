{"context": "\n\n1. \u3084\u308a\u305f\u3044\u3053\u3068\n\u4ee5\u524d\u306e\u6295\u7a3f\u3067Kinesis\u306e\u64ec\u4f3c\u7248\u306ekinesalite\u306edocker\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\u3061\u3083\u3093\u3068\u4f7f\u3048\u308b\u306e\u304b\u306a\u30fc\u3001\u3068\u601d\u3044\u3001@oshiro\u3055\u3093\u306e\u306e\u8a18\u4e8b\u300cScala\u3067Kinesis\u306eConsumer\u3092\u4f5c\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u300d\u3092\u53c2\u8003\u306bkinesis\u304b\u3089\u63a5\u7d9a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5199\u7d4c\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n2. \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nexample\u3001\u304b\u3064\u3001\u4f5c\u308a\u304b\u3051\u3067\u3059\u304c\u3001\u4e0b\u8a18\u306b\u7f6e\u3044\u3066\u3044\u307e\u3059\u3002\n\nhttps://github.com/letusfly85/akka-kinesis-to-s3-example\n\n\n3. \u305d\u3046\u7c21\u5358\u306b\u306f\u3044\u304b\u306a\u304b\u3063\u305f\u3002\u3002\nKinesis\u306econsumer\u306eWorker\u3092\u751f\u6210\u3059\u308b\u3068\u304d\u306b\u5229\u7528\u3059\u308bConfiguration\u3067endpoint\u3092\u8a2d\u5b9a\u3059\u308b\u53e3\u3082\u3042\u308b\u3088\u3046\u3067\u3057\u305f\u3002\n\u306a\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bKinesisClientLibConfiguration\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u3001Kinesis\u306eendopoint\u3068\u3057\u3066\u3001kinesalite\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u52d5\u304f\u306e\u304b\u306a\u3001\u3068\u8003\u3048\u3066\u3044\u307e\u3057\u305f\u3002\n    val kclConf = new KinesisClientLibConfiguration(appName, streamName, credentialsProvider, workerId)\n      .withInitialPositionInStream(InitialPositionInStream.valueOf(initialPosition))\n      .withKinesisEndpoint(kinesisEndPoint)\n      .withIdleTimeBetweenReadsInMillis(idleTimeBetweenReadsInMillis)\n\n\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\nsbt run\u3092\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u906d\u9047\u3057\u307e\u3057\u305f\u3002\nCaused by: com.amazonaws.AmazonServiceException: The security token included in the request is invalid. (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: UnrecognizedClientException; Request ID: P76PVB575SQUA5QPDTD4BSDDTJVV4KQNSO5AEMVJF66Q9ASUAAJG)\n    at com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:886)\n    at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:484)\n    at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:256)\n    at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.invoke(AmazonDynamoDBClient.java:2908)\n    at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.updateItem(AmazonDynamoDBClient.java:1256)\n    at com.amazonaws.services.kinesis.leases.impl.LeaseManager.renewLease(LeaseManager.java:362)\n\nDynamoDB\u306f\u4f7f\u3063\u3066\u306a\u3044\u306e\u306b\u3002\u3002kinesatelite\u306e\u30d0\u30b0\u304b\u3001\u3068\u3061\u3087\u3063\u3068\u7591\u3044\u307e\u3057\u305f\u3002\n\u304c\u3001stackoverflow\u3084GitHub\u306eissue\u3092\u6f01\u308b\u3068\u4ee5\u4e0b\u306eissue\u306b\u305f\u3069\u308a\u7740\u304d\u307e\u3057\u305f\u3002\n\n4. GitHub\u306eawslabs\u4e0a\u3067\u306eissue\u306e\u3084\u308a\u53d6\u308a\n\namazon-kinesis-client/issues/34: Cannot Override DynamoDB Endpoint\n\nissue\u3092\u3042\u3052\u305f\u4eba\u306f\u79c1\u3068\u540c\u69d8\u306bkinesalite\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u65b9\u306e\u3088\u3046\u3067\u3057\u305f\u3002\n\u305f\u3060\u3001\u3053\u306e\u65b9\u306f\u3001\u3059\u3067\u306bKinesis\u304cDynamoDB\u306b\u4f9d\u5b58\u3059\u308b\u3053\u3068\u3092\u3054\u5b58\u77e5\u306e\u3088\u3046\u3067\u3001\n\u300cKinesis\u306eConfig\u7cfb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u3059\u308b\u3068\u304d\u306bDynamoDB\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u306e\uff1f\u300d\n\u306e\u3088\u3046\u306a\u8cea\u554f\u3092\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\u305d\u308c\u306b\u5bfe\u3057\u3066\u3001\u304d\u3061\u3093\u3068\u65b9\u6cd5\u304c\u63d0\u793a\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u73fe\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n    /**\n     * @param recordProcessorFactory Used to get record processor instances for processing data from shards\n     * @param config Kinesis Client Library configuration\n     * @param kinesisClient Kinesis Client used for fetching data\n     * @param dynamoDBClient DynamoDB client used for checkpoints and tracking leases\n     * @param cloudWatchClient CloudWatch Client for publishing metrics\n     * @param execService ExecutorService to use for processing records (support for multi-threaded\n     *        consumption)\n     */\n    public Worker(\n            com.amazonaws.services.kinesis.clientlibrary.interfaces.IRecordProcessorFactory recordProcessorFactory,\n            KinesisClientLibConfiguration config,\n            AmazonKinesis kinesisClient,\n            AmazonDynamoDB dynamoDBClient,\n            AmazonCloudWatch cloudWatchClient,\n            ExecutorService execService) {\n        this(recordProcessorFactory, config, kinesisClient, dynamoDBClient,\n                getMetricsFactory(cloudWatchClient, config), execService);\n        if (config.getRegionName() != null) {\n            Region region = RegionUtils.getRegion(config.getRegionName());\n            cloudWatchClient.setRegion(region);\n            LOG.debug(\"The region of Amazon CloudWatch client has been set to \" + config.getRegionName());\n        }\n    }\n\n\u306a\u308b\u307b\u3069\u306d\u30fc\u3001\u3068\u601d\u3044\u3064\u3064\u898b\u3066\u3044\u305f\u3089\u3001\u3053\u308c\u3001CloudWatch\u306b\u3082\u4f9d\u5b58\u3057\u3066\u3093\u3058\u3083\u3093\u3002\u3002\u3002\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\n5. \u307e\u3041\u3067\u3082CloudWatch\u306f\u6c17\u306b\u305b\u305a\u306b\u4f7f\u3063\u3066\u307f\u305f\u3002\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001\u300cCloudWatch\u306b\u63a5\u7d9a\u3067\u304d\u306d\u30fc\u305e\u300d\u3001\u307f\u305f\u3044\u306a\u8b66\u544a\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u3057\u3064\u3064\u3082\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u52d5\u304d\u307e\u3057\u305f\u3002kinesalite\u306b\u30ec\u30b3\u30fc\u30c9\u30d7\u30c3\u30c8\u3059\u308b\u3068\u3001Worker\u304c\u305d\u308c\u3092\u6a19\u6e96\u51fa\u529b\u3057\u3066\u304f\u308c\u308b\u3002\n\u305f\u3060\u3001\u3061\u3087\u3063\u3068\u8b66\u544a\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u6c17\u6301\u3061\u60aa\u3044\u306e\u3067\u3001\u4e0a\u8a18\u306eissue\u306b\u304b\u3076\u305b\u308b\u3088\u3046\u306b\u4ed6\u306b\u3044\u3044\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u304c\u306a\u3044\u304b\u78ba\u8a8d\u4e2d\u3067\u3059\u3002\u56de\u7b54\u304c\u3042\u3063\u305f\u3089\u672c\u6295\u7a3f\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\n\n6. \u6240\u611f\n\n\u5358\u4f53\u30c6\u30b9\u30c8\u3068\u304b\u3092TravisCI\u3068\u304bCircleCI\u3067Docker\u30a4\u30e1\u30fc\u30b8\u4f7f\u3044\u3064\u3064\u30b5\u30af\u30c3\u3068\u56de\u3057\u305f\u3044\u3060\u3051\u306a\u3093\u3060\u3051\u3069\u3002\nAWS\u88fd\u54c1\u7fa4\u3063\u3066\u5185\u90e8\u3067\u306e\u4f9d\u5b58\u3092\u305d\u3053\u307e\u3067\u96a0\u853d\u5316\u3067\u304d\u3066\u306a\u3044\u304b\u3089\u306a\u306e\u304b\u3001\u3061\u3087\u3063\u3068\u3084\u308a\u3065\u3089\u3044\u306a\u30fc\u3001\u3068\u3002\n\u96a0\u853d\u5316\u3059\u308b\u6c17\u3082\u306a\u3044\u306a\u3089\u5358\u4f53\u30c6\u30b9\u30c8\u7528\u306eMock\u88fd\u54c1\u3092AWS\u5074\u304c\u51fa\u3057\u3066\u6b32\u3057\u3044\u3088\u3046\u306a\u6c17\u3082\u3059\u308b\u306a\u30fc\u3001\u3068\u307c\u3093\u3084\u308a\u601d\u3063\u3061\u3083\u3044\u307e\u3057\u305f\u3002\n\u4e00\u65b9\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u3067\u3001kafka\u3092\u4f7f\u3046\u3001\u3068\u3044\u3046\u9078\u629e\u3092\u3057\u305f\u6642\u306b\u3001DynamoDB\u3084CloudWatch\u304c\u62c5\u3046\u8cac\u52d9\uff08\u304a\u305d\u3089\u304f\u30e1\u30bf\u60c5\u5831\u7ba1\u7406\u3084\u30ed\u30b0\u8a2d\u5b9a\uff09\u3092\u81ea\u524d\u3067\u5b9f\u88c5\u3059\u308b\u304b\u3001kafka\u306e\u4f55\u3089\u304b\u306e\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u3067\u5b9f\u88c5\u3059\u308b\u306e\u304b\u306a\u3001\u3068\u3061\u3087\u3063\u3068\u8208\u5473\u3082\u308f\u304d\u307e\u3057\u305f\u3002GCP\u88fd\u54c1\u306e\u6642\u3082\u3053\u3046\u3044\u3046\u306e\u304c\u3042\u308b\u306e\u3067\u3059\u304b\u306d\u3002\n\n\u6a2a\u9053\u306b\u9038\u308c\u305f\u611f\u306f\u3042\u308a\u307e\u3059\u304c\u9762\u767d\u304b\u3063\u305f\u3067\u3059\uff01\n\n\u53c2\u8003\n\nAWS\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3044\u304b\u306b\u30ed\u30fc\u30ab\u30eb\u3067\u958b\u767a\u3059\u308b\u304b\uff1f\nkinesalite\ndocker-kinesalite\ngithub issue: Cannot Override DynamoDB Endpoint\nstackoverflow: Error security token included in the request is invalid from aws client\n\n\n\u672c\u65e5\u306f\u4ee5\u4e0a\u3068\u306a\u308a\u307e\u3059\u3002\n## 1. \u3084\u308a\u305f\u3044\u3053\u3068\n\n[\u4ee5\u524d\u306e\u6295\u7a3f](../../letusfly85/items/b6b9312a3bf08c32d8a1)\u3067Kinesis\u306e\u64ec\u4f3c\u7248\u306e[kinesalite\u306edocker\u30a4\u30e1\u30fc\u30b8](https://github.com/tripleW/docker-kinesalite)\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n\u3061\u3083\u3093\u3068\u4f7f\u3048\u308b\u306e\u304b\u306a\u30fc\u3001\u3068\u601d\u3044\u3001@oshiro\u3055\u3093\u306e\u306e\u8a18\u4e8b\u300c[Scala\u3067Kinesis\u306eConsumer\u3092\u4f5c\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](http://qiita.com/oshiro/items/fac2bea668fb4e8c8cfb)\u300d\u3092\u53c2\u8003\u306bkinesis\u304b\u3089\u63a5\u7d9a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5199\u7d4c\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n## 2. \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nexample\u3001\u304b\u3064\u3001\u4f5c\u308a\u304b\u3051\u3067\u3059\u304c\u3001\u4e0b\u8a18\u306b\u7f6e\u3044\u3066\u3044\u307e\u3059\u3002\n\n* https://github.com/letusfly85/akka-kinesis-to-s3-example\n\n## 3. \u305d\u3046\u7c21\u5358\u306b\u306f\u3044\u304b\u306a\u304b\u3063\u305f\u3002\u3002\n\nKinesis\u306econsumer\u306eWorker\u3092\u751f\u6210\u3059\u308b\u3068\u304d\u306b\u5229\u7528\u3059\u308bConfiguration\u3067endpoint\u3092\u8a2d\u5b9a\u3059\u308b\u53e3\u3082\u3042\u308b\u3088\u3046\u3067\u3057\u305f\u3002\n\n\u306a\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b`KinesisClientLibConfiguration`\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u3001Kinesis\u306eendopoint\u3068\u3057\u3066\u3001kinesalite\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u52d5\u304f\u306e\u304b\u306a\u3001\u3068\u8003\u3048\u3066\u3044\u307e\u3057\u305f\u3002\n\n```scala\n    val kclConf = new KinesisClientLibConfiguration(appName, streamName, credentialsProvider, workerId)\n      .withInitialPositionInStream(InitialPositionInStream.valueOf(initialPosition))\n      .withKinesisEndpoint(kinesisEndPoint)\n      .withIdleTimeBetweenReadsInMillis(idleTimeBetweenReadsInMillis)\n```\n\n\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n`sbt run`\u3092\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u906d\u9047\u3057\u307e\u3057\u305f\u3002\n\n```scala\nCaused by: com.amazonaws.AmazonServiceException: The security token included in the request is invalid. (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: UnrecognizedClientException; Request ID: P76PVB575SQUA5QPDTD4BSDDTJVV4KQNSO5AEMVJF66Q9ASUAAJG)\n    at com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:886)\n    at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:484)\n    at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:256)\n    at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.invoke(AmazonDynamoDBClient.java:2908)\n    at com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient.updateItem(AmazonDynamoDBClient.java:1256)\n    at com.amazonaws.services.kinesis.leases.impl.LeaseManager.renewLease(LeaseManager.java:362)\n```\n\nDynamoDB\u306f\u4f7f\u3063\u3066\u306a\u3044\u306e\u306b\u3002\u3002kinesatelite\u306e\u30d0\u30b0\u304b\u3001\u3068\u3061\u3087\u3063\u3068\u7591\u3044\u307e\u3057\u305f\u3002\n\u304c\u3001stackoverflow\u3084GitHub\u306eissue\u3092\u6f01\u308b\u3068\u4ee5\u4e0b\u306eissue\u306b\u305f\u3069\u308a\u7740\u304d\u307e\u3057\u305f\u3002\n\n## 4. GitHub\u306eawslabs\u4e0a\u3067\u306eissue\u306e\u3084\u308a\u53d6\u308a\n\n* [amazon-kinesis-client/issues/34: Cannot Override DynamoDB Endpoint](https://github.com/awslabs/amazon-kinesis-client/issues/34)\n\nissue\u3092\u3042\u3052\u305f\u4eba\u306f\u79c1\u3068\u540c\u69d8\u306bkinesalite\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u65b9\u306e\u3088\u3046\u3067\u3057\u305f\u3002\n\u305f\u3060\u3001\u3053\u306e\u65b9\u306f\u3001\u3059\u3067\u306bKinesis\u304cDynamoDB\u306b\u4f9d\u5b58\u3059\u308b\u3053\u3068\u3092\u3054\u5b58\u77e5\u306e\u3088\u3046\u3067\u3001\n\u300cKinesis\u306eConfig\u7cfb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u3059\u308b\u3068\u304d\u306bDynamoDB\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u306e\uff1f\u300d\n\u306e\u3088\u3046\u306a\u8cea\u554f\u3092\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n\u305d\u308c\u306b\u5bfe\u3057\u3066\u3001\u304d\u3061\u3093\u3068\u65b9\u6cd5\u304c\u63d0\u793a\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u73fe\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\n```java\n    /**\n     * @param recordProcessorFactory Used to get record processor instances for processing data from shards\n     * @param config Kinesis Client Library configuration\n     * @param kinesisClient Kinesis Client used for fetching data\n     * @param dynamoDBClient DynamoDB client used for checkpoints and tracking leases\n     * @param cloudWatchClient CloudWatch Client for publishing metrics\n     * @param execService ExecutorService to use for processing records (support for multi-threaded\n     *        consumption)\n     */\n    public Worker(\n            com.amazonaws.services.kinesis.clientlibrary.interfaces.IRecordProcessorFactory recordProcessorFactory,\n            KinesisClientLibConfiguration config,\n            AmazonKinesis kinesisClient,\n            AmazonDynamoDB dynamoDBClient,\n            AmazonCloudWatch cloudWatchClient,\n            ExecutorService execService) {\n        this(recordProcessorFactory, config, kinesisClient, dynamoDBClient,\n                getMetricsFactory(cloudWatchClient, config), execService);\n        if (config.getRegionName() != null) {\n            Region region = RegionUtils.getRegion(config.getRegionName());\n            cloudWatchClient.setRegion(region);\n            LOG.debug(\"The region of Amazon CloudWatch client has been set to \" + config.getRegionName());\n        }\n    }\n```\n\n\u306a\u308b\u307b\u3069\u306d\u30fc\u3001\u3068\u601d\u3044\u3064\u3064\u898b\u3066\u3044\u305f\u3089\u3001\u3053\u308c\u3001`CloudWatch`\u306b\u3082\u4f9d\u5b58\u3057\u3066\u3093\u3058\u3083\u3093\u3002\u3002\u3002\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n## 5. \u307e\u3041\u3067\u3082CloudWatch\u306f\u6c17\u306b\u305b\u305a\u306b\u4f7f\u3063\u3066\u307f\u305f\u3002\n\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001\u300cCloudWatch\u306b\u63a5\u7d9a\u3067\u304d\u306d\u30fc\u305e\u300d\u3001\u307f\u305f\u3044\u306a\u8b66\u544a\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u3057\u3064\u3064\u3082\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u52d5\u304d\u307e\u3057\u305f\u3002kinesalite\u306b\u30ec\u30b3\u30fc\u30c9\u30d7\u30c3\u30c8\u3059\u308b\u3068\u3001Worker\u304c\u305d\u308c\u3092\u6a19\u6e96\u51fa\u529b\u3057\u3066\u304f\u308c\u308b\u3002\n\n\u305f\u3060\u3001\u3061\u3087\u3063\u3068\u8b66\u544a\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u6c17\u6301\u3061\u60aa\u3044\u306e\u3067\u3001\u4e0a\u8a18\u306eissue\u306b\u304b\u3076\u305b\u308b\u3088\u3046\u306b\u4ed6\u306b\u3044\u3044\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u304c\u306a\u3044\u304b\u78ba\u8a8d\u4e2d\u3067\u3059\u3002\u56de\u7b54\u304c\u3042\u3063\u305f\u3089\u672c\u6295\u7a3f\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\n\n## 6. \u6240\u611f\n\n* \u5358\u4f53\u30c6\u30b9\u30c8\u3068\u304b\u3092TravisCI\u3068\u304bCircleCI\u3067Docker\u30a4\u30e1\u30fc\u30b8\u4f7f\u3044\u3064\u3064\u30b5\u30af\u30c3\u3068\u56de\u3057\u305f\u3044\u3060\u3051\u306a\u3093\u3060\u3051\u3069\u3002\nAWS\u88fd\u54c1\u7fa4\u3063\u3066\u5185\u90e8\u3067\u306e\u4f9d\u5b58\u3092\u305d\u3053\u307e\u3067\u96a0\u853d\u5316\u3067\u304d\u3066\u306a\u3044\u304b\u3089\u306a\u306e\u304b\u3001\u3061\u3087\u3063\u3068\u3084\u308a\u3065\u3089\u3044\u306a\u30fc\u3001\u3068\u3002\n* \u96a0\u853d\u5316\u3059\u308b\u6c17\u3082\u306a\u3044\u306a\u3089\u5358\u4f53\u30c6\u30b9\u30c8\u7528\u306eMock\u88fd\u54c1\u3092AWS\u5074\u304c\u51fa\u3057\u3066\u6b32\u3057\u3044\u3088\u3046\u306a\u6c17\u3082\u3059\u308b\u306a\u30fc\u3001\u3068\u307c\u3093\u3084\u308a\u601d\u3063\u3061\u3083\u3044\u307e\u3057\u305f\u3002\n* \u4e00\u65b9\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u3067\u3001kafka\u3092\u4f7f\u3046\u3001\u3068\u3044\u3046\u9078\u629e\u3092\u3057\u305f\u6642\u306b\u3001DynamoDB\u3084CloudWatch\u304c\u62c5\u3046\u8cac\u52d9\uff08\u304a\u305d\u3089\u304f\u30e1\u30bf\u60c5\u5831\u7ba1\u7406\u3084\u30ed\u30b0\u8a2d\u5b9a\uff09\u3092\u81ea\u524d\u3067\u5b9f\u88c5\u3059\u308b\u304b\u3001kafka\u306e\u4f55\u3089\u304b\u306e\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u3067\u5b9f\u88c5\u3059\u308b\u306e\u304b\u306a\u3001\u3068\u3061\u3087\u3063\u3068\u8208\u5473\u3082\u308f\u304d\u307e\u3057\u305f\u3002GCP\u88fd\u54c1\u306e\u6642\u3082\u3053\u3046\u3044\u3046\u306e\u304c\u3042\u308b\u306e\u3067\u3059\u304b\u306d\u3002\n\n\u6a2a\u9053\u306b\u9038\u308c\u305f\u611f\u306f\u3042\u308a\u307e\u3059\u304c\u9762\u767d\u304b\u3063\u305f\u3067\u3059\uff01\n\n## \u53c2\u8003\n\n* [AWS\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3044\u304b\u306b\u30ed\u30fc\u30ab\u30eb\u3067\u958b\u767a\u3059\u308b\u304b\uff1f](http://takezoe.hatenablog.com/entry/2016/02/12/090152)\n* [kinesalite](https://github.com/mhart/kinesalite)\n* [docker-kinesalite](https://github.com/tripleW/docker-kinesalite)\n* [github issue: Cannot Override DynamoDB Endpoint](https://github.com/awslabs/amazon-kinesis-client/issues/34)\n* [stackoverflow: Error security token included in the request is invalid from aws client](http://stackoverflow.com/questions/33266219/error-security-token-included-in-the-request-is-invalid-from-aws-client)\n\n---\n\n\u672c\u65e5\u306f\u4ee5\u4e0a\u3068\u306a\u308a\u307e\u3059\u3002\n", "tags": ["Scala", "Kinesis", "DynamoDB", "AWS"]}