{"context": "\n\n\u3010\u30e9\u30a4\u30d6\u30e9\u30ea\u8aac\u660e\u3011\n\u3000\u5fae\u5206\u304c\u3067\u304d\u308b\n\n\u3010\u6e96\u5099\u3011\n\u3000pip install numpy\n\u3000\u3000\u4e0a\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u4e8b\u524d\u306b\u5b9f\u884c\n\u3000pip install matplotlib\n\u3000\u3000\u30b0\u30e9\u30d5\u3092\u63cf\u304f\u3068\u304d\u306fmatplotlib\u3082\u5fc5\u8981\n\n\u3010\u30d7\u30ed\u30b0\u30e9\u30e0\u3011\n\nadipy1.py\n# -*- coding: utf-8 -*-\n\nfrom adipy import ad, sin, adn\n\n# ad\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\nx = ad(1.5)\n\n# x\u306e\uff12\u4e57\u3092y\u306b\u4ee3\u5165\ny = x**2\nprint y\n# ad(2.25, array([ 3.]))\n# array([ 3.])\u306e\u300c3\u300d\u306fy\u3092\uff11\u56de\u5fae\u5206\u3057\u3066\uff58\u3092\u4ee3\u5165\u3057\u305f\u5024\n\n# dy(1)/dx\nprint y.d(1)\n# 3.0\n\nz = x*sin(x**2)\nprint z\n# ad(1.1671097953318819, array([-2.04870811]))\n\n# dy(1)/dx\nprint z.d(1)\n# -2.04870810536\n\n# adn\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n# \u7b2c\u4e8c\u5f15\u6570\u306e4\u306f\uff14\u56de\u5fae\u5206\u307e\u3067\u6c42\u3081\u308b\nx = adn(1.5, 4)\n\ny = x**2\nprint y\n# ad(2.25, array([ 3.,  2.,  0., -0.]))\n\n# dy(\uff12)/dx\nprint y.d(2)\n# 2.0\n\nz = x*sin(x**2)\nprint z\n# ad(1.1671097953318819, array([  -2.04870811,  -16.15755076,  -20.34396265,  194.11618384]))\n\n# dy(\uff14)/dx\nprint z.d(4)\n# 194.116183837\n\n\n\nadipy2.py\n# -*- coding: utf-8 -*-\n\nfrom adipy import adn, sin, taylorfunc\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# adn\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\nxAD = [adn(1.5, i) for i in xrange(1, 7)]\n\ndef z(x):\n    return x*sin(x**2)\n\n# \u30b0\u30e9\u30d5\u306ex\u8ef8\u306e\u7bc4\u56f2\u3092\u8a2d\u5b9a\nx = np.linspace(0.75, 2.25)\n# \u5143\u306e\u95a2\u6570\u3092Actual Function\u3068\u3057\u3066\u30e9\u30d9\u30eb\u4ed8\u3051\u3057\u3066\u63cf\u753b\nplt.plot(x, z(x), label='Actual Function')\n\n\nfor i in xrange(len(xAD)):\n    # \u30c6\u30a4\u30e9\u30fc\u591a\u9805\u5f0f\u3092\u4f7f\u7528\n    fz = taylorfunc(z(xAD[i]), at=xAD[i].nom)\n    plt.plot(x, fz(x), label='Order %d Taylor'%(i+1))\n\n# \u95a2\u6570\u306e\u30e9\u30d9\u30eb\u306e\u4f4d\u7f6e\u3092\u8a2d\u5b9a\nplt.legend(loc=0)\nplt.show()\n\n\n\n\n\u3010\u53c2\u8003\u30b5\u30a4\u30c8\u3011\n\u3000pypi\n\u3000github\n#\u3010\u30e9\u30a4\u30d6\u30e9\u30ea\u8aac\u660e\u3011\n\u3000\u5fae\u5206\u304c\u3067\u304d\u308b\n\n#\u3010\u6e96\u5099\u3011\n\u3000`pip install numpy`\n\u3000\u3000\u4e0a\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u4e8b\u524d\u306b\u5b9f\u884c\n\u3000`pip install matplotlib`\n\u3000\u3000\u30b0\u30e9\u30d5\u3092\u63cf\u304f\u3068\u304d\u306fmatplotlib\u3082\u5fc5\u8981\n\n#\u3010\u30d7\u30ed\u30b0\u30e9\u30e0\u3011\n```py:adipy1.py\n# -*- coding: utf-8 -*-\n\nfrom adipy import ad, sin, adn\n\n# ad\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\nx = ad(1.5)\n\n# x\u306e\uff12\u4e57\u3092y\u306b\u4ee3\u5165\ny = x**2\nprint y\n# ad(2.25, array([ 3.]))\n# array([ 3.])\u306e\u300c3\u300d\u306fy\u3092\uff11\u56de\u5fae\u5206\u3057\u3066\uff58\u3092\u4ee3\u5165\u3057\u305f\u5024\n\n# dy(1)/dx\nprint y.d(1)\n# 3.0\n\nz = x*sin(x**2)\nprint z\n# ad(1.1671097953318819, array([-2.04870811]))\n\n# dy(1)/dx\nprint z.d(1)\n# -2.04870810536\n\n# adn\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n# \u7b2c\u4e8c\u5f15\u6570\u306e4\u306f\uff14\u56de\u5fae\u5206\u307e\u3067\u6c42\u3081\u308b\nx = adn(1.5, 4)\n\ny = x**2\nprint y\n# ad(2.25, array([ 3.,  2.,  0., -0.]))\n\n# dy(\uff12)/dx\nprint y.d(2)\n# 2.0\n\nz = x*sin(x**2)\nprint z\n# ad(1.1671097953318819, array([  -2.04870811,  -16.15755076,  -20.34396265,  194.11618384]))\n\n# dy(\uff14)/dx\nprint z.d(4)\n# 194.116183837\n```\n\n\n```py:adipy2.py\n# -*- coding: utf-8 -*-\n\nfrom adipy import adn, sin, taylorfunc\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# adn\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\nxAD = [adn(1.5, i) for i in xrange(1, 7)]\n\ndef z(x):\n    return x*sin(x**2)\n\n# \u30b0\u30e9\u30d5\u306ex\u8ef8\u306e\u7bc4\u56f2\u3092\u8a2d\u5b9a\nx = np.linspace(0.75, 2.25)\n# \u5143\u306e\u95a2\u6570\u3092Actual Function\u3068\u3057\u3066\u30e9\u30d9\u30eb\u4ed8\u3051\u3057\u3066\u63cf\u753b\nplt.plot(x, z(x), label='Actual Function')\n\n\nfor i in xrange(len(xAD)):\n    # \u30c6\u30a4\u30e9\u30fc\u591a\u9805\u5f0f\u3092\u4f7f\u7528\n    fz = taylorfunc(z(xAD[i]), at=xAD[i].nom)\n    plt.plot(x, fz(x), label='Order %d Taylor'%(i+1))\n\n# \u95a2\u6570\u306e\u30e9\u30d9\u30eb\u306e\u4f4d\u7f6e\u3092\u8a2d\u5b9a\nplt.legend(loc=0)\nplt.show()\n```\n<img width=\"490\" alt=\"graph.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/121997/0ce1ac84-7398-2891-ed16-82637c9bbd72.png\">\n\n#\u3010\u53c2\u8003\u30b5\u30a4\u30c8\u3011\n\u3000[pypi](https://pypi.python.org/pypi/ADiPy/0.6.3)\n\u3000[github](https://github.com/tisimst/adipy)\n", "tags": ["\u3081\u3056\u305b\u30e9\u30a4\u30d6\u30e9\u30ea\u30de\u30b9\u30bf\u30fc", "Python", "python2.7"]}