{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u4eca\u65e5 (2014/10/31) \u304b\u3089\u653f\u5e9c\u306e\u7d71\u8a08\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3000\nWeb API \u304c\u516c\u958b\u3055\u308c\u305f\u3089\u3057\u3044\u3002\nhttp://www.e-stat.go.jp/api/\n\u5229\u7528\u3067\u304d\u308b\u30c7\u30fc\u30bf\u306e\u4e00\u89a7\u306f\u4e0b\u8a18 URL \u306b\u3042\u308b\u3002\n\u56fd\u52e2\u8abf\u67fb\u304b\u3089\u52e4\u52b4\u7d71\u8a08\u304b\u3089\u3044\u3063\u3071\u3044\u3042\u308b\u3002\nhttp://www.e-stat.go.jp/api/api-info/api-data/\n\u306a\u3093\u304b\u9762\u767d\u305d\u3046\uff01\n\u3068\u3044\u3046\u3053\u3068\u3067\u4f7f\u3063\u3066\u307f\u305f\u8a18\u9332\u3002\n\n\u767b\u9332\n\n\u307e\u305a\u306f\u3001\u3053\u306e\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u5229\u7528\u8005\u767b\u9332\u3092\u884c\u3046\u3002\nhttp://www.e-stat.go.jp/api/regist-login/\n\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u540d\u524d\u306a\u3093\u304b\u3092\u5165\u529b\u3002\n\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306b\u304a\u77e5\u3089\u305b\u304c\u5c4a\u3044\u3066\u3044\u308b\u306e\u3067\u30af\u30ea\u30c3\u30af\u3057\u3066\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30c8\u3002\n\u6b21\u306b\u3001\u30ed\u30b0\u30a4\u30f3\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 ID \u3092\u30b2\u30c3\u30c8\u3002\u4e00\u4eba 3 ID \u307e\u3067\u3089\u3057\u3044\u3002\u3053\u308c\u4ee5\u964d\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3  ID \u3092 xxx \u3068\u3059\u308b\u3002\n\n\n\u30c7\u30fc\u30bf\u53d6\u5f97\u3068\u30d7\u30ed\u30c3\u30c8\n\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n1. getStatsList \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u9069\u5f53\u306a ID \u3092\u53d6\u308a\u51fa\u3059\u3002\n2. getStatsData \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3002\n3. \u30ab\u30c6\u30b4\u30ea\u540d\u3068 VALUES \u306e\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3002\n3. \u6700\u5f8c\u306b\u89e3\u6790\u3002\u4eca\u56de\u306f\u5e74\u9f62\u30d4\u30e9\u30df\u30c3\u30c9\u3092\u30d7\u30ed\u30c3\u30c8\u3002\n#!/usr/bin/env python\n#-*- coding: utf-8 -*-\n\nimport httplib2\nimport lxml.etree\nimport pylab\nimport matplotlib.font_manager as fm\n\n# \u521d\u671f\u8a2d\u5b9a\nh = httplib2.Http('.cache')\nkey = \"xxx\"\nbaseUrl = \"http://api.e-stat.go.jp/rest/1.0/app\"\nstatsCode = \"00200521\"\n\n# \u653f\u5e9c\u7d71\u8a08\u30b3\u30fc\u30c9 00200521 \u306e\u6700\u521d\u306e\u30c7\u30fc\u30bf\n# (\u662d\u548c 55 \u5e74\u306e\u56fd\u52e2\u8abf\u67fb) \u306e\u30c7\u30fc\u30bf ID \u3092\u53d6\u3063\u3066\u304f\u308b\nprint \"getStatusList...\"\ncmd = \"%s/getStatsList?appId=%s&statsCode=%s\"\nresponse, content = h.request(cmd % (baseUrl, key, statsCode))\nxml = lxml.etree.fromstring(content)\ndataid = xml.xpath('//LIST_INF')[0].attrib[\"id\"]\n\n\n# \u30c7\u30fc\u30bf ID \u3092\u30ad\u30fc\u306b\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\nprint \"getStatusData...\"\ncmd = \"%s/getStatsData?appId=%s&statsDataId=%s\"\nresponse, content = h.request(cmd % (baseUrl, key, dataid))\nxml = lxml.etree.fromstring(content)\n\n\n# \u30ab\u30c6\u30b4\u30ea\u540d\u306e\u53d6\u308a\u51fa\u3057\ncategories = {}\nfor c in xml.xpath(\"//CLASS_OBJ\"):\n    categories[c.attrib[\"id\"]] = {\"name\": c.attrib[\"name\"],\n                                  \"labels\": {}}\n    print c.attrib[\"id\"]\n    for label in c.xpath(\"CLASS\"):\n        print label.attrib[\"name\"], label.attrib[\"code\"]\n        categories[c.attrib[\"id\"]][\"labels\"][label.attrib[\"code\"]] = label.attrib[\"name\"]\n\n\n# \u5024\u306e\u53d6\u308a\u51fa\u3057\nvalues = [{\"cat01\": v.attrib[\"cat01\"],\n           \"cat02\": v.attrib[\"cat02\"],\n           \"cat03\": v.attrib[\"cat03\"],\n           \"area\": v.attrib[\"area\"],\n           \"value\": int(v.text)}\n          for v in xml.xpath('//VALUE')]\n\n\n# \u5e74\u9f62\u5c64 (cat03) \u3054\u3068\u306e\u96c6\u8a08\nc = categories[\"cat03\"]\ndata   = []\nlabels = []\nfor code in sorted(c[\"labels\"].keys())[1:]:\n    labels.append(c[\"labels\"][code])\n    data.append(sum([v[\"value\"] for v in values if v[\"cat03\"] == code]))\nprint data\n\n\n# \u30d7\u30ed\u30c3\u30c8\nwidth = 0.5\nx = pylab.arange(len(data))\nprop = fm.FontProperties(fname='/Library/Fonts/Osaka.ttf') # for mac\npylab.barh(x, data, width)\npylab.yticks(x + width / 2, labels)\npylab.show()\n\n\n\u7d50\u679c\u306f\u3053\u3061\u3089\n\n\n\u53c2\u8003\u60c5\u5831\n\u516c\u5f0f\u306e\u30de\u30cb\u30e5\u30a2\u30eb\nhttp://www.e-stat.go.jp/api/wp/wp-content/uploads/2014/10/API-spec.pdf\n\u30a6\u30a7\u30d6\u306eAPI \u3092\u89e6\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\nhttp://www.e-stat.go.jp/api/sample/testform/\n\u306f\u3058\u3081\u306b\n-------\n\u4eca\u65e5 (2014/10/31) \u304b\u3089\u653f\u5e9c\u306e\u7d71\u8a08\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3000\nWeb API \u304c\u516c\u958b\u3055\u308c\u305f\u3089\u3057\u3044\u3002\nhttp://www.e-stat.go.jp/api/\n\n\u5229\u7528\u3067\u304d\u308b\u30c7\u30fc\u30bf\u306e\u4e00\u89a7\u306f\u4e0b\u8a18 URL \u306b\u3042\u308b\u3002\n\u56fd\u52e2\u8abf\u67fb\u304b\u3089\u52e4\u52b4\u7d71\u8a08\u304b\u3089\u3044\u3063\u3071\u3044\u3042\u308b\u3002\nhttp://www.e-stat.go.jp/api/api-info/api-data/\n\n\u306a\u3093\u304b\u9762\u767d\u305d\u3046\uff01\n\u3068\u3044\u3046\u3053\u3068\u3067\u4f7f\u3063\u3066\u307f\u305f\u8a18\u9332\u3002\n\n\n\u767b\u9332\n---\n1. \u307e\u305a\u306f\u3001\u3053\u306e\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u5229\u7528\u8005\u767b\u9332\u3092\u884c\u3046\u3002\n   http://www.e-stat.go.jp/api/regist-login/\n   \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u540d\u524d\u306a\u3093\u304b\u3092\u5165\u529b\u3002\n\n2. \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306b\u304a\u77e5\u3089\u305b\u304c\u5c4a\u3044\u3066\u3044\u308b\u306e\u3067\u30af\u30ea\u30c3\u30af\u3057\u3066\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30c8\u3002\n\n2. \u6b21\u306b\u3001\u30ed\u30b0\u30a4\u30f3\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 ID \u3092\u30b2\u30c3\u30c8\u3002\u4e00\u4eba 3 ID \u307e\u3067\u3089\u3057\u3044\u3002\u3053\u308c\u4ee5\u964d\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3  ID \u3092 xxx \u3068\u3059\u308b\u3002\n\n\n\u30c7\u30fc\u30bf\u53d6\u5f97\u3068\u30d7\u30ed\u30c3\u30c8\n-------------------\n\n\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n1. getStatsList \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u9069\u5f53\u306a ID \u3092\u53d6\u308a\u51fa\u3059\u3002\n2. getStatsData \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3002\n3. \u30ab\u30c6\u30b4\u30ea\u540d\u3068 VALUES \u306e\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3002\n3. \u6700\u5f8c\u306b\u89e3\u6790\u3002\u4eca\u56de\u306f\u5e74\u9f62\u30d4\u30e9\u30df\u30c3\u30c9\u3092\u30d7\u30ed\u30c3\u30c8\u3002\n\n```py\n#!/usr/bin/env python\n#-*- coding: utf-8 -*-\n\nimport httplib2\nimport lxml.etree\nimport pylab\nimport matplotlib.font_manager as fm\n\n# \u521d\u671f\u8a2d\u5b9a\nh = httplib2.Http('.cache')\nkey = \"xxx\"\nbaseUrl = \"http://api.e-stat.go.jp/rest/1.0/app\"\nstatsCode = \"00200521\"\n\n# \u653f\u5e9c\u7d71\u8a08\u30b3\u30fc\u30c9 00200521 \u306e\u6700\u521d\u306e\u30c7\u30fc\u30bf\n# (\u662d\u548c 55 \u5e74\u306e\u56fd\u52e2\u8abf\u67fb) \u306e\u30c7\u30fc\u30bf ID \u3092\u53d6\u3063\u3066\u304f\u308b\nprint \"getStatusList...\"\ncmd = \"%s/getStatsList?appId=%s&statsCode=%s\"\nresponse, content = h.request(cmd % (baseUrl, key, statsCode))\nxml = lxml.etree.fromstring(content)\ndataid = xml.xpath('//LIST_INF')[0].attrib[\"id\"]\n\n\n# \u30c7\u30fc\u30bf ID \u3092\u30ad\u30fc\u306b\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\nprint \"getStatusData...\"\ncmd = \"%s/getStatsData?appId=%s&statsDataId=%s\"\nresponse, content = h.request(cmd % (baseUrl, key, dataid))\nxml = lxml.etree.fromstring(content)\n\n\n# \u30ab\u30c6\u30b4\u30ea\u540d\u306e\u53d6\u308a\u51fa\u3057\ncategories = {}\nfor c in xml.xpath(\"//CLASS_OBJ\"):\n    categories[c.attrib[\"id\"]] = {\"name\": c.attrib[\"name\"],\n                                  \"labels\": {}}\n    print c.attrib[\"id\"]\n    for label in c.xpath(\"CLASS\"):\n        print label.attrib[\"name\"], label.attrib[\"code\"]\n        categories[c.attrib[\"id\"]][\"labels\"][label.attrib[\"code\"]] = label.attrib[\"name\"]\n\n\n# \u5024\u306e\u53d6\u308a\u51fa\u3057\nvalues = [{\"cat01\": v.attrib[\"cat01\"],\n           \"cat02\": v.attrib[\"cat02\"],\n           \"cat03\": v.attrib[\"cat03\"],\n           \"area\": v.attrib[\"area\"],\n           \"value\": int(v.text)}\n          for v in xml.xpath('//VALUE')]\n\n\n# \u5e74\u9f62\u5c64 (cat03) \u3054\u3068\u306e\u96c6\u8a08\nc = categories[\"cat03\"]\ndata   = []\nlabels = []\nfor code in sorted(c[\"labels\"].keys())[1:]:\n    labels.append(c[\"labels\"][code])\n    data.append(sum([v[\"value\"] for v in values if v[\"cat03\"] == code]))\nprint data\n\n\n# \u30d7\u30ed\u30c3\u30c8\nwidth = 0.5\nx = pylab.arange(len(data))\nprop = fm.FontProperties(fname='/Library/Fonts/Osaka.ttf') # for mac\npylab.barh(x, data, width)\npylab.yticks(x + width / 2, labels)\npylab.show()\n\n```\n\n\u7d50\u679c\u306f\u3053\u3061\u3089\n\n![figure_1.png](https://qiita-image-store.s3.amazonaws.com/0/29984/83c4e36c-1d0b-803a-84d1-42b7ad6b7294.png)\n\n\n\n\n\u53c2\u8003\u60c5\u5831\n-------\n\u516c\u5f0f\u306e\u30de\u30cb\u30e5\u30a2\u30eb\nhttp://www.e-stat.go.jp/api/wp/wp-content/uploads/2014/10/API-spec.pdf\n\n\u30a6\u30a7\u30d6\u306eAPI \u3092\u89e6\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\nhttp://www.e-stat.go.jp/api/sample/testform/\n", "tags": ["WebAPI", "e-Stat", "Python", "opendata"]}