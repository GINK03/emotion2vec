{"context": "HTTP\u30b5\u30fc\u30d0\u30fc\u3068\u3057\u3066\u5fc5\u8981\u6700\u4f4e\u9650\u306e\u51e6\u7406\u3092\u66f8\u3044\u305f\u3064\u3082\u308a\u3067\u3059\u3002\n\n\u4e0b\u8a18\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\nexe\u306e\u6a2a\u306b\u8868\u793a\u3057\u305f\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304d\u307e\u3059\n\nhttp://localhost/\u30d5\u30a1\u30a4\u30eb\u540d \u3092\u30d6\u30e9\u30a6\u30b6\u3067\u8868\u793a\u3057\u307e\u3059\u3002\n\u3053\u3046\u306a\u308a\u307e\u3059\n\n\n\n\nmain.cpp\n\n#include<stdio.h>\n#include<SDL_net.h>\n#include<string>\n#include<vector>\n#include<algorithm>\n//#pragma comment(lib,\"SDL2_net.lib\")\n//#pragma comment(lib,\"SDL2main.lib\")\n//#pragma comment(lib,\"SDL2.lib\")\nusing   namespace   std;\n\n//####\u95a2\u6570####\n//\u533a\u5207\u308a\u6587\u5b57p\u307e\u3067\u53d7\u4fe1\u3059\u308b\u3002\n//input\n//  t:\u53d7\u4fe1\u5148\u6587\u5b57\u5217\n//  s:\u53d7\u4fe1\u7528\u30bd\u30b1\u30c3\u30c8\n//  p:\u533a\u5207\u308a\u6587\u5b57(\u672b\u7aef\\0\u3082\u5224\u5b9a\u5bfe\u8c61)\n//  m:\u7121\u8996\u3059\u308b\u6587\u5b57(\\r\u304c\u90aa\u9b54\u306a\u306e\u3060)\n//output\n//  \u533a\u5207\u3089\u308c\u305f\u6587\u5b57\n\nchar    recv(string&t,TCPsocket s,char*p=\"\\n\",char*m=\"\\r\"){\n    t.clear();\n    while(true){\n        char    c;\n        if(SDLNet_TCP_Recv(s,&c,1)>0){\n            for(int i=0;true;i++){\n                if(c==p[i])return   c;\n                if(!p[i])break;\n            }\n            for(int i=0;true;i++){\n                if(c==m[i]){break;}\n                if(!m[i]){t+=c;break;}\n            }\n        }else{\n            return  -1;\n        }\n    }\n    return  0;\n}\n//####\u95a2\u6570####\n//\u62e1\u5f35\u5b50\u304b\u3089MINE\u30bf\u30a4\u30d7\u3092\u8fd4\u3059\n//input\n//  url:\u30d5\u30a1\u30a4\u30eb\u540d\n//output\n//  mine\u30bf\u30a4\u30d7\u540d\nstring  mine(string url){\n    string  e=url.substr(url.find_last_of(\".\")+1);\n    transform(e.begin(),e.end(),e.begin(),tolower);\n    #define mine(a,b)   if(e==a)return  b;\n    mine(\"txt\",\"text/plain\");\n    mine(\"htm\",\"text/html\");\n    mine(\"html\",\"text/html\");\n    mine(\"xml\",\"text/xml\");\n    mine(\"js\",\"text/javascript\");\n    mine(\"css\",\"text/css\");\n    mine(\"gif\",\"image/gif\");\n    mine(\"jpg\",\"image/jpeg\");\n    mine(\"jpg\",\"image/jpg\");\n    mine(\"pdf\",\"application/pdf\");\n    #undef  mine\n    return  \"text/plain\";\n}\nint main(int argc, char *argv[]){\n    IPaddress ip;\n    TCPsocket accepting,accepted;\n    //####\u6ce8\u610f####\u30d8\u30c3\u30c0\u3068\u4e2d\u8eab\u306f\u4e00\u884c\u7a7a\u3051\u308b\u3002\n    const   char    bufsend[]=\n        \"HTTP/1.1 200 OK\\n\"\n        \"Accept-Ranges: bytes\\n\"\n        \"Content-Length: 42\\n\"\n        \"Connection: Keep-Alive\\n\"\n        \"Content-Type: text/html\\n\"\n        \"\\n\"\n        \"<html><body><p>success</p></body></html>\\n\";\n    if(!SDLNet_Init()){\n        if(!SDLNet_ResolveHost(&ip,NULL,80)){\n            if(accepting=SDLNet_TCP_Open(&ip)){\n                //####\u6ce8\u610f####accepted!=accepting\u3067\u3042\u308a\u3002accepted\u3092\u4f7f\u3046\u3002\n                //####\u6ce8\u610f####SDLNet_TCP_Accept\u306f\u4f55\u5ea6\u3082\u547c\u3073\u51fa\u3059\u3079\u3057\u3002\n                while(true){\n                    while((accepted=SDLNet_TCP_Accept(accepting))==NULL){\n                        SDL_Delay(100);\n                    }\n                    bool    keep,gzip;\n                    vector<string>value;\n                    string  t;\n                    //get\n                    if(recv(t,accepted,\" \")){\n                        //value\n                        value.clear();\n                        while(true){\n                            char    c=recv(t,accepted,\"? \");\n                            value.push_back(t);\n                            if(c!='?'){\n                                break;\n                            }\n                        }\n                        recv(t,accepted);\n                        while(true){//\u4e00\u884c\u6bce\u306b\u56de\u3059\n                            recv(t,accepted,\" \\n\");\n                            if(t==\"\"){\n                                break;//\u6700\u5f8c\u306e\u884c\u3002\n                            }else   if(t==\"Connection:\"){\n                                recv(t,accepted);\n                                keep=(t==\"keep-alive\")||(t==\"Keep-Alive\");\n                            }else   if(t==\"Accept-Encoding:\"){\n                                gzip=false;\n                                while(true){\n                                    if(recv(t,accepted,\", \\n\")=='\\n'){\n                                        break;\n                                    }else   if(t==\"gzip\"){\n                                        gzip=true;\n                                    }\n                                }\n                            }else{\n                                recv(t,accepted);\n                            }\n                        }\n                        FILE*f;\n                        if(fopen_s(&f,value[0].c_str()+1,\"rb\")){\n                            char    t[]=\"HTTP/1.1 404 not found\\nAccept-Ranges: bytes\\nContent-Length: 42\\nConnection: Close\\nContent-Type: text/html\\n\\n<html><body><p>failed.</p></body></html>\\n\";\n                            SDLNet_TCP_Send(accepted,t,sizeof(t));\n                        }else{\n                            char    t[512];\n                            fseek(f,0,SEEK_END);\n                            SDLNet_TCP_Send(accepted,t,sprintf_s(t,sizeof(t),\"HTTP/1.1 200 OK\\nAccept-Ranges: bytes\\nContent-Length: %d\\nConnection: Close\\nContent-Type: %s\\n\\n\",(int)ftell(f),mine(value[0]).c_str()));\n                            fseek(f,0,SEEK_SET);\n                            while(!feof(f))SDLNet_TCP_Send(accepted,t,fread(t,1,sizeof(t),f));\n                        }\n                    }else{\n                        printf(\"close\");\n                    }\n                    SDLNet_TCP_Close(accepted);\n                }\n                SDLNet_TCP_Close(accepting);\n            }\n        }\n        SDLNet_Quit();\n    }\n    return  0;\n}\n\n\n\n\uff11\u30da\u30fc\u30b8\u306b\u5fc5\u8981\u306a\u5168\u3066\u306e\u901a\u4fe1\u3092\u7d42\u3048\u305f\u5f8c\u3082\u30d6\u30e9\u30a6\u30b6\u304c\u518d\u63a5\u7d9a\u3092\u8a66\u307f\u308b\u306e\u3067\u591a\u5206\u8907\u6570\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u306f\u8010\u3048\u3089\u308c\u306a\u3044\u3002\n\u307e\u3068\u3082\u306a\u30b5\u30fc\u30d0\u30fc\u306f\u3069\u3046\u51e6\u7406\u3057\u3066\u3044\u308b\u306e\u304b\u77e5\u308a\u305f\u3044\u3002\n\u4e0a\u8a18\u306f\u4eca\u89e3\u6c7a\u3057\u307e\u3057\u305fgg\u3063\u305f\u3089\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3092\u4f7f\u3046\u307f\u305f\u3044\u3067\u3059\u3002\n\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u5316\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u5316\u3092\u6b21\u56de\u306e\u8ab2\u984c\u3068\u3057\u307e\u3059\u3002\nHTTP\u30b5\u30fc\u30d0\u30fc\u3068\u3057\u3066\u5fc5\u8981\u6700\u4f4e\u9650\u306e\u51e6\u7406\u3092\u66f8\u3044\u305f\u3064\u3082\u308a\u3067\u3059\u3002\n\n- \u4e0b\u8a18\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\n- exe\u306e\u6a2a\u306b\u8868\u793a\u3057\u305f\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304d\u307e\u3059\n- http://localhost/\u30d5\u30a1\u30a4\u30eb\u540d \u3092\u30d6\u30e9\u30a6\u30b6\u3067\u8868\u793a\u3057\u307e\u3059\u3002\n- \u3053\u3046\u306a\u308a\u307e\u3059\n![01.JPG](https://qiita-image-store.s3.amazonaws.com/0/118083/50907ac6-ec30-af91-6e20-65f843933670.jpeg)\n\n\n```cpp:main.cpp\n\n#include<stdio.h>\n#include<SDL_net.h>\n#include<string>\n#include<vector>\n#include<algorithm>\n//#pragma comment(lib,\"SDL2_net.lib\")\n//#pragma comment(lib,\"SDL2main.lib\")\n//#pragma comment(lib,\"SDL2.lib\")\nusing   namespace   std;\n\n//####\u95a2\u6570####\n//\u533a\u5207\u308a\u6587\u5b57p\u307e\u3067\u53d7\u4fe1\u3059\u308b\u3002\n//input\n//  t:\u53d7\u4fe1\u5148\u6587\u5b57\u5217\n//  s:\u53d7\u4fe1\u7528\u30bd\u30b1\u30c3\u30c8\n//  p:\u533a\u5207\u308a\u6587\u5b57(\u672b\u7aef\\0\u3082\u5224\u5b9a\u5bfe\u8c61)\n//  m:\u7121\u8996\u3059\u308b\u6587\u5b57(\\r\u304c\u90aa\u9b54\u306a\u306e\u3060)\n//output\n//  \u533a\u5207\u3089\u308c\u305f\u6587\u5b57\n\nchar    recv(string&t,TCPsocket s,char*p=\"\\n\",char*m=\"\\r\"){\n\tt.clear();\n\twhile(true){\n\t\tchar    c;\n\t\tif(SDLNet_TCP_Recv(s,&c,1)>0){\n\t\t\tfor(int i=0;true;i++){\n\t\t\t\tif(c==p[i])return   c;\n\t\t\t\tif(!p[i])break;\n\t\t\t}\n\t\t\tfor(int i=0;true;i++){\n\t\t\t\tif(c==m[i]){break;}\n\t\t\t\tif(!m[i]){t+=c;break;}\n\t\t\t}\n\t\t}else{\n\t\t\treturn\t-1;\n\t\t}\n\t}\n\treturn  0;\n}\n//####\u95a2\u6570####\n//\u62e1\u5f35\u5b50\u304b\u3089MINE\u30bf\u30a4\u30d7\u3092\u8fd4\u3059\n//input\n//  url:\u30d5\u30a1\u30a4\u30eb\u540d\n//output\n//  mine\u30bf\u30a4\u30d7\u540d\nstring\tmine(string url){\n\tstring\te=url.substr(url.find_last_of(\".\")+1);\n\ttransform(e.begin(),e.end(),e.begin(),tolower);\n\t#define\tmine(a,b)\tif(e==a)return\tb;\n\tmine(\"txt\",\"text/plain\");\n\tmine(\"htm\",\"text/html\");\n\tmine(\"html\",\"text/html\");\n\tmine(\"xml\",\"text/xml\");\n\tmine(\"js\",\"text/javascript\");\n\tmine(\"css\",\"text/css\");\n\tmine(\"gif\",\"image/gif\");\n\tmine(\"jpg\",\"image/jpeg\");\n\tmine(\"jpg\",\"image/jpg\");\n\tmine(\"pdf\",\"application/pdf\");\n\t#undef\tmine\n\treturn\t\"text/plain\";\n}\nint main(int argc, char *argv[]){\n\tIPaddress ip;\n\tTCPsocket accepting,accepted;\n\t//####\u6ce8\u610f####\u30d8\u30c3\u30c0\u3068\u4e2d\u8eab\u306f\u4e00\u884c\u7a7a\u3051\u308b\u3002\n\tconst   char    bufsend[]=\n\t\t\"HTTP/1.1 200 OK\\n\"\n\t\t\"Accept-Ranges: bytes\\n\"\n\t\t\"Content-Length: 42\\n\"\n\t\t\"Connection: Keep-Alive\\n\"\n\t\t\"Content-Type: text/html\\n\"\n\t\t\"\\n\"\n\t\t\"<html><body><p>success</p></body></html>\\n\";\n\tif(!SDLNet_Init()){\n\t\tif(!SDLNet_ResolveHost(&ip,NULL,80)){\n\t\t\tif(accepting=SDLNet_TCP_Open(&ip)){\n\t\t\t\t//####\u6ce8\u610f####accepted!=accepting\u3067\u3042\u308a\u3002accepted\u3092\u4f7f\u3046\u3002\n\t\t\t\t//####\u6ce8\u610f####SDLNet_TCP_Accept\u306f\u4f55\u5ea6\u3082\u547c\u3073\u51fa\u3059\u3079\u3057\u3002\n\t\t\t\twhile(true){\n\t\t\t\t\twhile((accepted=SDLNet_TCP_Accept(accepting))==NULL){\n\t\t\t\t\t\tSDL_Delay(100);\n\t\t\t\t\t}\n\t\t\t\t\tbool\tkeep,gzip;\n\t\t\t\t\tvector<string>value;\n\t\t\t\t\tstring  t;\n\t\t\t\t\t//get\n\t\t\t\t\tif(recv(t,accepted,\" \")){\n\t\t\t\t\t\t//value\n\t\t\t\t\t\tvalue.clear();\n\t\t\t\t\t\twhile(true){\n\t\t\t\t\t\t\tchar\tc=recv(t,accepted,\"? \");\n\t\t\t\t\t\t\tvalue.push_back(t);\n\t\t\t\t\t\t\tif(c!='?'){\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecv(t,accepted);\n\t\t\t\t\t\twhile(true){//\u4e00\u884c\u6bce\u306b\u56de\u3059\n\t\t\t\t\t\t\trecv(t,accepted,\" \\n\");\n\t\t\t\t\t\t\tif(t==\"\"){\n\t\t\t\t\t\t\t\tbreak;//\u6700\u5f8c\u306e\u884c\u3002\n\t\t\t\t\t\t\t}else   if(t==\"Connection:\"){\n\t\t\t\t\t\t\t\trecv(t,accepted);\n\t\t\t\t\t\t\t\tkeep=(t==\"keep-alive\")||(t==\"Keep-Alive\");\n\t\t\t\t\t\t\t}else   if(t==\"Accept-Encoding:\"){\n\t\t\t\t\t\t\t\tgzip=false;\n\t\t\t\t\t\t\t\twhile(true){\n\t\t\t\t\t\t\t\t\tif(recv(t,accepted,\", \\n\")=='\\n'){\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}else   if(t==\"gzip\"){\n\t\t\t\t\t\t\t\t\t\tgzip=true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\trecv(t,accepted);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tFILE*f;\n\t\t\t\t\t\tif(fopen_s(&f,value[0].c_str()+1,\"rb\")){\n\t\t\t\t\t\t\tchar\tt[]=\"HTTP/1.1 404 not found\\nAccept-Ranges: bytes\\nContent-Length: 42\\nConnection: Close\\nContent-Type: text/html\\n\\n<html><body><p>failed.</p></body></html>\\n\";\n\t\t\t\t\t\t\tSDLNet_TCP_Send(accepted,t,sizeof(t));\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tchar\tt[512];\n\t\t\t\t\t\t\tfseek(f,0,SEEK_END);\n\t\t\t\t\t\t\tSDLNet_TCP_Send(accepted,t,sprintf_s(t,sizeof(t),\"HTTP/1.1 200 OK\\nAccept-Ranges: bytes\\nContent-Length: %d\\nConnection: Close\\nContent-Type: %s\\n\\n\",(int)ftell(f),mine(value[0]).c_str()));\n\t\t\t\t\t\t\tfseek(f,0,SEEK_SET);\n\t\t\t\t\t\t\twhile(!feof(f))SDLNet_TCP_Send(accepted,t,fread(t,1,sizeof(t),f));\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tprintf(\"close\");\n\t\t\t\t\t}\n\t\t\t\t\tSDLNet_TCP_Close(accepted);\n\t\t\t\t}\n\t\t\t\tSDLNet_TCP_Close(accepting);\n\t\t\t}\n\t\t}\n\t\tSDLNet_Quit();\n\t}\n\treturn  0;\n}\n\n```\n\n\uff11\u30da\u30fc\u30b8\u306b\u5fc5\u8981\u306a\u5168\u3066\u306e\u901a\u4fe1\u3092\u7d42\u3048\u305f\u5f8c\u3082\u30d6\u30e9\u30a6\u30b6\u304c\u518d\u63a5\u7d9a\u3092\u8a66\u307f\u308b\u306e\u3067\u591a\u5206\u8907\u6570\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u306f\u8010\u3048\u3089\u308c\u306a\u3044\u3002\n\u307e\u3068\u3082\u306a\u30b5\u30fc\u30d0\u30fc\u306f\u3069\u3046\u51e6\u7406\u3057\u3066\u3044\u308b\u306e\u304b\u77e5\u308a\u305f\u3044\u3002\n\n\u4e0a\u8a18\u306f\u4eca\u89e3\u6c7a\u3057\u307e\u3057\u305fgg\u3063\u305f\u3089\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3092\u4f7f\u3046\u307f\u305f\u3044\u3067\u3059\u3002\n\n\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u5316\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u5316\u3092\u6b21\u56de\u306e\u8ab2\u984c\u3068\u3057\u307e\u3059\u3002\n", "tags": ["SDL", "SDL_net", "C++"]}