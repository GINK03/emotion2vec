{"context": " More than 1 year has passed since last update.\u7b2c\u4e00\u5f15\u6570\uff1a.atlas\u30d5\u30a1\u30a4\u30eb\u3001\n\u7b2c\u4e8c\u5f15\u6570\uff1a\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\nconvert-plist.pl\nsub makeValue {\n  my $arg = $_[0];\n  chomp $arg;\n  #print $arg . \"\\n\";\n  $arg = substr($arg, index($arg, \":\")+1);\n  #print $arg . \"\\n\";\n  $arg =~ s/[\\s]+//g;;\n  if( index($arg, \",\") >= 0 ){\n    $arg = \"{\" . $arg . \"}\";\n  }\n  #print $arg . \"\\n\";\n  return $arg;  \n}\n\n\nmy $src = $ARGV[0];\nmy $outdir = $ARGV[1];\nmy $fhOut;\nmy $lastSlash=rindex($src, \"/\");\nmy $lastDot=rindex($src,\".\");\nmy $pkgname=substr($src,$lastSlash+1,$lastDot-$lastSlash-1);\n$pkgname=~ s/[_]/\\//g;\n\nopen(my $fh, \"<\", $src)\n  or die \"Cannot open $now: $!\";\n\nwhile(my $line = readline $fh){ \n    # chomp\u95a2\u6570\u3067\u3001\u6539\u884c\u3092\u53d6\u308a\u9664\u304f\n    chomp $line;\n    if( 0 == length($line) ) {\n      my $textureName = readline $fh;\n      chomp $textureName;\n      my $textureSize = readline $fh;\n      my $textureFormat = readline $fh;\n      my $textureFilter = readline $fh;\n      my $textureRepeat = readline $fh;\n      my $plistName = substr($textureName, 0, index($textureName, \".\")) . \".plist\";\n\n      if( defined($fhOut) ){\n        print $fhOut \"    </dict>\\n\";\n        print $fhOut \"  </dict>\\n\";\n        print $fhOut \"</plist>\\n\";\n        close($fhOut);\n      }\n      my $filename = $outdir . \"/\" . $plistName;\n      print $filename . \"\\n\";\n      open $fhOut, \">\", $filename;      \n\n      print $fhOut \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\";\n      print $fhOut \"<!DOCTYPE plist PUBLIC \\\"-//Apple Computer//DTD PLIST 1.0//EN\\\" \\\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\\\">\\n\";\n      print $fhOut \"<plist version=\\\"1.0\\\">\\n\";\n      print $fhOut \"  <dict>\\n\";\n      print $fhOut \"    <key>metadata</key>\\n\";\n      print $fhOut \"    <dict>\\n\";\n      print $fhOut \"      <key>format</key>\\n\";\n      print $fhOut \"      <integer>2</integer>\\n\";\n      print $fhOut \"      <key>realTextureFileName</key>\\n\";\n      print $fhOut \"      <string>\" . $textureName . \"</string>\\n\";\n      print $fhOut \"      <key>size</key>\\n\";\n      print $fhOut \"      <string>\" . makeValue($textureSize) .\"</string>\\n\";\n      print $fhOut \"      <key>textureFileName</key>\\n\";\n      print $fhOut \"      <string>\" . $textureName . \"</string>\\n\";\n      print $fhOut \"    </dict>\\n\";\n      print $fhOut \"    <key>frames</key>\\n\";\n      print $fhOut \"    <dict>\\n\";\n\n    # : \u304c\u306a\u3051\u308c\u3070key\n    }elsif( 0 > index($line, \":\") ){\n      my $pngname = $pkgname . \"/\" . $line . \".png\";\n      my $rotate = readline $fh;\n      my $xy = readline $fh;\n      my $size = readline $fh;\n      my $orig = readline $fh;\n      my $offset = readline $fh;\n      my $index = readline $fh;\n\n      print $fhOut \"      <key>\" . $pngname . \"</key>\\n\";\n      print $fhOut \"      <dict>\\n\";\n      print $fhOut \"        <key>frame</key>\\n\";\n      print $fhOut \"        <string>{\" . makeValue($xy) . \",\" . makeValue($size) . \"}</string>\\n\";\n      print $fhOut \"        <key>offset</key>\\n\";\n      print $fhOut \"        <string>\" . makeValue($offset) . \"</string>\\n\";\n      print $fhOut \"        <key>rotated</key>\\n\";\n      print $fhOut \"        <\" . makeValue($rotate) . \"/>\\n\";\n      print $fhOut \"        <key>sourceColorRect</key>\\n\";\n      print $fhOut \"        <string>{{0,0},\" . makeValue($orig) . \"}</string>\\n\";\n      print $fhOut \"        <key>sourceSize</key>\\n\";\n      print $fhOut \"        <string>\" . makeValue($orig) . \"</string>\\n\";\n      print $fhOut \"      </dict>\\n\";\n    }\n    else{\n      # print $line . \"\\n\";\n    }\n}\n\nclose $fh;\nif( defined($fhOut) ){\n  print $fhOut \"    </dict>\\n\";\n  print $fhOut \"  </dict>\\n\";\n  print $fhOut \"</plist>\\n\";\n  close($fhOut);\n}\n\n\n\n\n\u682a\u5f0f\u4f1a\u793e\u30ca\u30ce\u30b3\u30cd\u30af\u30c8\u3067\u306f\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u306a\u958b\u767a\u8005\u3092\u52df\u96c6\u4e2d\u3067\u3059\uff01\u304f\u308f\u3057\u304f\u306f\u3053\u3061\u3089\n\u7b2c\u4e00\u5f15\u6570\uff1a.atlas\u30d5\u30a1\u30a4\u30eb\u3001\n\u7b2c\u4e8c\u5f15\u6570\uff1a\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\n```pl:convert-plist.pl\nsub makeValue {\n  my $arg = $_[0];\n  chomp $arg;\n  #print $arg . \"\\n\";\n  $arg = substr($arg, index($arg, \":\")+1);\n  #print $arg . \"\\n\";\n  $arg =~ s/[\\s]+//g;;\n  if( index($arg, \",\") >= 0 ){\n    $arg = \"{\" . $arg . \"}\";\n  }\n  #print $arg . \"\\n\";\n  return $arg;  \n}\n\n\nmy $src = $ARGV[0];\nmy $outdir = $ARGV[1];\nmy $fhOut;\nmy $lastSlash=rindex($src, \"/\");\nmy $lastDot=rindex($src,\".\");\nmy $pkgname=substr($src,$lastSlash+1,$lastDot-$lastSlash-1);\n$pkgname=~ s/[_]/\\//g;\n\nopen(my $fh, \"<\", $src)\n  or die \"Cannot open $now: $!\";\n\nwhile(my $line = readline $fh){ \n    # chomp\u95a2\u6570\u3067\u3001\u6539\u884c\u3092\u53d6\u308a\u9664\u304f\n    chomp $line;\n    if( 0 == length($line) ) {\n      my $textureName = readline $fh;\n      chomp $textureName;\n      my $textureSize = readline $fh;\n      my $textureFormat = readline $fh;\n      my $textureFilter = readline $fh;\n      my $textureRepeat = readline $fh;\n      my $plistName = substr($textureName, 0, index($textureName, \".\")) . \".plist\";\n\n      if( defined($fhOut) ){\n        print $fhOut \"    </dict>\\n\";\n        print $fhOut \"  </dict>\\n\";\n        print $fhOut \"</plist>\\n\";\n        close($fhOut);\n      }\n      my $filename = $outdir . \"/\" . $plistName;\n      print $filename . \"\\n\";\n      open $fhOut, \">\", $filename;      \n      \n      print $fhOut \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\";\n      print $fhOut \"<!DOCTYPE plist PUBLIC \\\"-//Apple Computer//DTD PLIST 1.0//EN\\\" \\\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\\\">\\n\";\n      print $fhOut \"<plist version=\\\"1.0\\\">\\n\";\n      print $fhOut \"  <dict>\\n\";\n      print $fhOut \"    <key>metadata</key>\\n\";\n      print $fhOut \"    <dict>\\n\";\n      print $fhOut \"      <key>format</key>\\n\";\n      print $fhOut \"      <integer>2</integer>\\n\";\n      print $fhOut \"      <key>realTextureFileName</key>\\n\";\n      print $fhOut \"      <string>\" . $textureName . \"</string>\\n\";\n      print $fhOut \"      <key>size</key>\\n\";\n      print $fhOut \"      <string>\" . makeValue($textureSize) .\"</string>\\n\";\n      print $fhOut \"      <key>textureFileName</key>\\n\";\n      print $fhOut \"      <string>\" . $textureName . \"</string>\\n\";\n      print $fhOut \"    </dict>\\n\";\n      print $fhOut \"    <key>frames</key>\\n\";\n      print $fhOut \"    <dict>\\n\";\n\n    # : \u304c\u306a\u3051\u308c\u3070key\n    }elsif( 0 > index($line, \":\") ){\n      my $pngname = $pkgname . \"/\" . $line . \".png\";\n      my $rotate = readline $fh;\n      my $xy = readline $fh;\n      my $size = readline $fh;\n      my $orig = readline $fh;\n      my $offset = readline $fh;\n      my $index = readline $fh;\n      \n      print $fhOut \"      <key>\" . $pngname . \"</key>\\n\";\n      print $fhOut \"      <dict>\\n\";\n      print $fhOut \"        <key>frame</key>\\n\";\n      print $fhOut \"        <string>{\" . makeValue($xy) . \",\" . makeValue($size) . \"}</string>\\n\";\n      print $fhOut \"        <key>offset</key>\\n\";\n      print $fhOut \"        <string>\" . makeValue($offset) . \"</string>\\n\";\n      print $fhOut \"        <key>rotated</key>\\n\";\n      print $fhOut \"        <\" . makeValue($rotate) . \"/>\\n\";\n      print $fhOut \"        <key>sourceColorRect</key>\\n\";\n      print $fhOut \"        <string>{{0,0},\" . makeValue($orig) . \"}</string>\\n\";\n      print $fhOut \"        <key>sourceSize</key>\\n\";\n      print $fhOut \"        <string>\" . makeValue($orig) . \"</string>\\n\";\n      print $fhOut \"      </dict>\\n\";\n    }\n    else{\n      # print $line . \"\\n\";\n    }\n}\n\nclose $fh;\nif( defined($fhOut) ){\n  print $fhOut \"    </dict>\\n\";\n  print $fhOut \"  </dict>\\n\";\n  print $fhOut \"</plist>\\n\";\n  close($fhOut);\n}\n\n\n```\n\n\u682a\u5f0f\u4f1a\u793e\u30ca\u30ce\u30b3\u30cd\u30af\u30c8\u3067\u306f\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u306a\u958b\u767a\u8005\u3092\u52df\u96c6\u4e2d\u3067\u3059\uff01\u304f\u308f\u3057\u304f\u306f[\u3053\u3061\u3089](http://www.nanoconnect.co.jp/recruit/)\n", "tags": ["libGDX", "cocos2dx", "TexturePacker"]}