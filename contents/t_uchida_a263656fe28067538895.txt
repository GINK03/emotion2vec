{"context": "\u3053\u308c\u306f Theorem Prover Advent Calendar 2016 \u306e5\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f\u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30de\u5411\u3051\u30a4\u30d9\u30f3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\u30aa\u30d5\u30e9\u30a4\u30f3\u3067\u96c6\u307e\u3063\u3066\u3001\u4e3b\u50ac\u8005\u304c\u51fa\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8ab2\u984c\u3092\u53c2\u52a0\u8005\u304c\u5236\u9650\u6642\u9593\u5185\u306b\u89e3\u3044\u3066\u3001\u56de\u7b54\u3092\u767a\u8868\u3057\u3042\u3046\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\u305d\u3053\u3067\u904e\u53bb\u306b\u51fa\u984c\u3055\u308c\u305f\u8ab2\u984c\u306b\u5bfe\u3057\u3066Coq/SSReflect\u3092\u4f7f\u3063\u305f\u56de\u7b54\u3092\u8a66\u307f\u305f\u3001\u3068\u3044\u3046\u306e\u304c\u3053\u306e\u8a18\u4e8b\u306e\u8da3\u65e8\u3067\u3059\u3002\u3055\u3059\u304c\u306b\u30a4\u30d9\u30f3\u30c8\u3067\u56de\u7b54\u3059\u308b\u306b\u306f\u6642\u9593\u304c\u8db3\u308a\u306a\u3055\u3059\u304e\u308b\u306e\u3067\u3001\u81ea\u5b85\u3067\u89e3\u304d\u307e\u3057\u305f\u3002\u3053\u306e\u8a18\u4e8b\u3067\u6271\u3046\u554f\u984c\u306f\u3053\u308c\u3067\u3059\u3002\n\n\u4e94\u89d2\u5f62\u306e\u4e16\u754c\u3067\u3042\u306a\u305f\u306f\u904e\u53bb\u306e\u81ea\u5206\u306b\u51fa\u4f1a\u3046\n\n\u4e94\u89d2\u5f62\u3067\u6577\u304d\u8a70\u3081\u3089\u308c\u305f\u5347\u76ee\u3092\u79fb\u52d5\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u5217\u304c\u4e0e\u3048\u3089\u308c\u308b\u306e\u3067\u3001\u9589\u8def\u3092\u898b\u3064\u3051\u306a\u3055\u3044\u3068\u3044\u3046\u554f\u984c\u3067\u3059\u3002\u8a73\u7d30\u306f\u30ea\u30f3\u30af\u5148\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\u56de\u7b54\u3092\u8a66\u307f\u305f\u3068\u3053\u308d\u3001\u7d50\u679c\u7684\u306b\u3053\u3046\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u81ea\u5206\u306a\u308a\u306b\u56de\u7b54\u3057\u305f\u3002\u554f\u984c\u3092\u81ea\u5206\u306a\u308a\u306b\u5b9a\u5f0f\u5316\u3057\u3066\u3001\u305d\u306e\u4ed5\u69d8\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u8a3c\u660e\u3057\u305f\u3002\n\u3057\u304b\u3057\u5143\u306e\u554f\u984c\u3068\u5fae\u5999\u306b\u7570\u306a\u308b\u554f\u984c\u3092\u89e3\u3044\u3066\u3044\u305f\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u3002\u4fee\u6b63\u3059\u308b\u30e2\u30c1\u30d9\u304c\u5c3d\u304d\u305f\u306e\u3067\u305d\u306e\u307e\u307e\u2026\u3002\n\u5b9a\u5f0f\u5316\u306b\u8ff7\u3063\u305f\u3002\u3053\u306e\u8a3c\u660e\u3092\u3082\u3063\u3066\u5065\u5168\u6027\u306e\u4fdd\u8a3c\u3068\u3067\u304d\u308b\u304b\u602a\u3057\u3044\u3002\n\n\u306a\u3093\u3068\u3082\u5869\u3063\u3071\u3044\u7d50\u679c\u3067\u3059\u304c\u3001\u672c\u4eba\u306f\u6559\u79d1\u66f8\u7b49\u306e\u624b\u304c\u304b\u308a\u306a\u3057\u306bCoq\u30b3\u30fc\u30c9\u3092\u6570\u767e\u884c\u7a0b\u5ea6\u66f8\u304f\u306e\u306f\u521d\u3081\u3066\u3067\u3001\u5185\u5bb9\u306f\u3068\u3082\u304b\u304f\u6700\u5f8c\u307e\u3067\u66f8\u304d\u5207\u308a\u3001\u3044\u304f\u3089\u304b\u306e\u5b66\u3073\u3092\u5f97\u3089\u308c\u305f\u306e\u3067\u6e80\u8db3\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u74b0\u5883\n\nCoq 8.5pl2\nSSReflect 1.6\nUbuntu 16.04 LTS on MacOSX (Vagrant)\n\n\n\u56de\u7b54\n\u3053\u308c\u304c\u81ea\u5206\u304c\u51fa\u3057\u305f\u56de\u7b54\u3067\u3059\u3002\u4ee5\u5f8c\u3001\u304a\u305d\u3089\u304f\u4e0a\u7d1a\u8005\u306e\u7686\u3055\u3093\u306b\u3068\u3063\u3066\u306f\u5197\u9577\u306a\u30b3\u30fc\u30c9\u304c\u7d9a\u304d\u307e\u3059\u3002\n\n\u5b9f\u88c5\n\u50d5\u306f\u3053\u3053\u3067\u793a\u3055\u308c\u3066\u3044\u308b\u5347\u76ee\u3092\u5e73\u9762\u306b\u516d\u89d2\u5f62\u3092\u6577\u304d\u8a70\u3081\u305f\u3082\u306e\u3068\u89e3\u91c8\u3057\u307e\u3057\u305f\u30021\u3064\u306e\u516d\u89d2\u5f62\u306f4\u3064\u306e\u4e94\u89d2\u5f62\u3092\u6301\u3061\u3001\u516d\u89d2\u5f62\u306e\u4f4d\u7f6e\u3092xy\u5ea7\u6a19(\u6574\u6570)\u3067\u3001\u516d\u89d2\u5f62\u5185\u306e\u4e94\u89d2\u5f62\u306e\u4f4d\u7f6e\u3092C0\u301cC3\u307e\u3067\u306e\u5024\u3067\u3001\u5411\u304d\u3092D0\u301cD4\u307e\u3067\u306e\u5024\u3067\u8868\u3057\u3066\u3044\u307e\u3059\u3002\nInductive cell := C0 | C1 | C2 | C3.\nInductive dir := D0 | D1 | D2 | D3 | D4.\nDefinition node := (cell * Z * Z)%type.\nDefinition state := (node * dir)%type.\n\n\u72b6\u614b\u9077\u79fb(\u3053\u3053\u3067\u306f\u4e94\u89d2\u5f62\u9593\u306e\u79fb\u52d5)\u306f\u95a2\u6570\u3067\u611a\u76f4\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002cell * Z * Z * dir\u306e\u6574\u6570\u90e8\u5206\u306f\u5143\u306e\u516d\u89d2\u5f62\u306e\u4f4d\u7f6e\u3068\u306e\u76f8\u5bfe\u5ea7\u6a19\u3067\u3059\u3002\u898f\u5247\u6027\u306f\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\nDefinition link := (cell * Z * Z * dir)%type.\nDefinition penta_graph c d : link :=\n  (match c with\n  | C0 => match d with\n          | D0 => (C2,  0,  0, D2) | D1 => (C3,  0,  0, D3) | D2 => (C1, -1, -1, D4)\n          | D3 => (C3,  0, -1, D0) | D4 => (C1,  0,  0, D1)\n          end\n  | C1 => match d with\n          | D0 => (C2,  0,  0, D3) | D1 => (C0,  0,  0, D4) | D2 => (C2,  0, -1, D0)\n          | D3 => (C3,  1,  0, D1) | D4 => (C0,  1,  1, D2)\n          end\n  | C2 => match d with\n          | D0 => (C1,  0,  1, D2) | D1 => (C3,  0,  0, D4) | D2 => (C0,  0,  0, D0)\n          | D3 => (C1,  0,  0, D0) | D4 => (C3,  1,  1, D2)\n          end\n  | C3 => match d with\n          | D0 => (C0,  0,  1, D3) | D1 => (C1, -1,  0, D3) | D2 => (C2, -1, -1, D4)\n          | D3 => (C0,  0,  0, D1) | D4 => (C2,  0,  0, D1)\n          end\n  end)%Z.\n\n\u81ea\u5206\u3067\u5b9a\u7fa9\u3057\u305fInductive Type\u3092reflection\u3059\u308b\u305f\u3081\u306e\u88dc\u984c\u304c\u7d9a\u304d\u307e\u3059\u3002\nDefinition eqb_cell c1 c2 :=\n  match (c1, c2) with\n  | (C0, C0) => true | (C1, C1) => true | (C2, C2) => true | (C3, C3) => true | _ => false\n  end.\n\nLemma eqb_cellP : Equality.axiom eqb_cell.\nProof. rewrite /Equality.axiom. by case; case; constructor. Qed.\n\nCanonical cell_eqMixin := EqMixin eqb_cellP.\nCanonical cell_eqType := Eval hnf in EqType cell cell_eqMixin.\n\n\u76f4\u9032\u3001\u6642\u8a08\u56de\u308a\u3001\u53cd\u6642\u8a08\u56de\u308a\u306e\u56de\u8ee2\u3068\u3044\u3063\u305f\u30b3\u30de\u30f3\u30c9\u306b\u3057\u305f\u304c\u3063\u3066\u72b6\u614b\u9077\u79fb\u3055\u305b\u308b\u90e8\u5206\u3067\u3059\u3002\nDefinition turn_dir_ccw d : dir :=\n  match d with\n  | D0 => D1 | D1 => D2 | D2 => D3 | D3 => D4 | D4 => D0\n  end.\n\nDefinition turn_dir_cw d : dir :=\n  match d with\n  | D0 => D4 | D1 => D0 | D2 => D1 | D3 => D2 | D4 => D3\n  end.\n\nDefinition move_ccw (s : state) : state :=\n  let: (n, d1) := s in let: d2 := turn_dir_ccw d1 in (n, d2).\n\nDefinition move_cw (s : state) : state :=\n  let: (n, d1) := s in let: d2 := turn_dir_cw d1 in (n, d2).\n\nDefinition move_forward (s : state) : state :=\n  let: ((c1, x, y), d1) := s in\n  let: (c2, dx, dy, d2) := penta_graph c1 d1 in\n  ((c2, x + dx, y + dy), d2)%Z.\n\n\u3053\u306e\u554f\u984c\u3067\u306f\u9589\u8def\u3092\u5347\u76ee\u306e\u79fb\u52d5\u8ddd\u96e2\u306b\u76f8\u5f53\u3059\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u8868\u73fe\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u30b3\u30de\u30f3\u30c9\u5217\u3092\u5206\u3051\u3066\u30011\u90e8\u5206\u5217\u304c\u96a3\u306e\u4e94\u89d2\u5f62\u3078\u306e\u79fb\u52d5\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u65b9\u304c\u6271\u3044\u3084\u3059\u3044\u3068\u8003\u3048\u307e\u3057\u305f\u30021\u90e8\u5206\u5217\u3092\u5207\u308a\u51fa\u3059\u95a2\u6570\u3092 split_action \u3067\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u76f4\u9032\u3001\u6642\u8a08\u56de\u308a\u3001\u53cd\u6642\u8a08\u56de\u308a\u306e\u30b3\u30de\u30f3\u30c9\u3092\u305d\u308c\u305e\u308c Fw, Tn Cw, Tn ccw \u3068\u8868\u73fe\u3057\u307e\u3057\u305f\u3002\nInductive turn := Cw | Ccw.\nInductive command := Fw | Tn of turn.\nDefinition action := seq turn.\n\nFunction split_action (cs : seq command) : option (action * seq command) :=\n  match cs with\n    | [::] => None\n    | Fw :: cs1 => Some ([::], cs1)\n    | Tn t :: cs1 =>\n      match split_action cs1 with\n        | None => None\n        | Some (ts, cs2) => Some (t :: ts, cs2)\n      end\n  end.\n\n\u3053\u308c\u3092\u4f7f\u3063\u3066\u30b3\u30de\u30f3\u30c9\u5217\u304b\u3089\u90e8\u5206\u5217(\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u3057\u307e\u3059)\u306e\u5217\u3092\u4f5c\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001[:: Fw, Tn Cw, Fw, Tn Ccw, Tn Ccw, Fw ]\u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u5217\u3092 [:: [::], [:: Cw], [:: Ccw, Ccw] ] \u306e\u3088\u3046\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u672c\u984c\u304b\u3089\u96e2\u308c\u307e\u3059\u304c\u3001Function\u3068\u3044\u3046Vernacular Command\u3092\u4f7f\u3046\u3068\u3001\u6574\u790e\u95a2\u4fc2\u3092\u4f7f\u3063\u305f\u95a2\u6570\u5b9a\u7fa9\u3092\u6bd4\u8f03\u7684\u82e6\u3057\u307e\u305a\u306b\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\u4eca\u56de\u306e\u5b9f\u88c5\u3067\u6c17\u3065\u304d\u307e\u3057\u305f\u3002\u6574\u790e\u95a2\u4fc2\u3092\u4f7f\u3063\u3066\u95a2\u6570\u5b9a\u7fa9\u3059\u308b\u3068\u304d\u306f \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306eRecdef \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u3042\u3089\u304b\u3058\u3081 Import \u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u8a73\u7d30\u306f\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nLemma split_action_size cs1 cs2 a :\n  split_action cs1 = Some (a, cs2) -> size cs1 = size a + size cs2 + 1.\nProof.\n  elim: cs1 cs2 a => // c cs1 IHcs1 cs2 a H0. elim: c H0 => /=.\n    - case => <- -> /=. by rewrite -addn1.\n    - move H0: (split_action cs1) => x. case: x H0 => //.\n      move=> x H0 t. case: x H0 => a1 cs H0. case=> H1 H2.\n      move/IHcs1 :H0. rewrite -H1 H2 => /= ->. ring.\nQed.\n\nFunction convert_to_actions (cs : seq command) {measure size cs} : seq action :=\n  match split_action cs with\n  | None => [::]\n  | Some (a, cs') => a :: convert_to_actions cs'\n  end.\nProof.\n  move=> cs1 p a cs2 H0. move/split_action_size => ->. apply/ltP.\n  by rewrite [size a + size cs2]addnC -addnA -{1}[size cs2]addn0 ltn_add2l addn1 ltn0Sn.\nQed.\n\n\u4e0a\u8a18\u95a2\u6570\u3092\u4f7f\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u7528\u3044\u305f\u72b6\u614b\u9077\u79fb\u95a2\u6570\u3067\u3059\u3002\nFunction perform_action s a :=\n  match a with\n    | Cw :: a' => perform_action (move_cw s) a'\n    | Ccw :: a' => perform_action (move_ccw s) a'\n    | [::] => move_forward s\n  end.\n\n\u5f8c\u3067\u540c\u3058\u72b6\u614b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5f97\u308b\u305f\u3081\u306b\u72b6\u614b\u5217\u3092\u4f5c\u3063\u3066\u304a\u304d\u307e\u3059\u3002\nFixpoint process' s aa :=\n  s :: match aa with\n    | [::] => [::]\n    | a :: aa' => process' (perform_action s a) aa'\n  end.\n\n\u72b6\u614b\u5217\u306e\u4e2d\u306b\u540c\u3058\u72b6\u614b\u3092\u63a2\u7d22\u3057\u307e\u3059\u3002\nFunction find_same_node' ss i :=\n  match ss with\n    | [::] => None\n    | s :: ss' =>\n      match findo (compare_by_node s) ss' with\n        | Some j => Some (i + j + 1, i)\n        | None => find_same_node' ss' i.+1\n      end\n  end.\n\nDefinition find_same_node ss := find_same_node' ss 0.\n\n\u3053\u3053\u307e\u3067\u306e\u95a2\u6570\u5b9a\u7fa9\u3092\u5408\u6210\u3057\u3066\u7d42\u308f\u308a\u3067\u3059\u3002\u305d\u308c\u306b\u3057\u3066\u3082\u9577\u304b\u3063\u305f\u3002\nDefinition solve' cs s n := find_same_node' (process' s (convert_to_actions cs)) n.\n\nDefinition solve cs := solve' cs initial_state 0.\n\n\n\u8a3c\u660e\n\u3055\u3066\u3001\u4f55\u3092\u8a3c\u660e\u3059\u308c\u3070\u826f\u3044\u3067\u3057\u3087\u3046\u304b\u3002\u3053\u308c\u3067\u826f\u3044\u304b\u78ba\u4fe1\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u8ab2\u984c\u306e\u4ed5\u69d8\u3092\u8ad6\u7406\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u7684\u306b Inductive Type \u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\u5b9a\u7fa9\u3057\u3066\u3084\u3063\u3066\u3001\u5143\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3053\u306e\u4ed5\u69d8\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u8a3c\u660e\u3059\u308c\u3070\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\u307e\u3057\u305f\u3002\u624b\u59cb\u3081\u306b\u3001\u52d5\u304f\u4ed5\u69d8\u3092\u5f97\u308b\u3079\u304f\u3001\u5b9f\u969b\u306b Prolog \u3067\u8ad6\u7406\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u50d5\u306f\u666e\u6bb5Prolog\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u306a\u3044\u306e\u3067\u3001\u30b3\u30fc\u30c9\u306b\u304a\u304b\u3057\u306a\u7b87\u6240\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3068\u3053\u308d\u3067\u3001\u3053\u308c\u306fCoq\u306e\u30b3\u30fc\u30c9\u306b\u95a2\u3057\u3066\u3082\u8a00\u3048\u308b\u306e\u3067\u3059\u304c\u3001\u5b57\u53e5\u89e3\u6790\u306e\u90e8\u5206\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8a3c\u660e\u306b\u6ce8\u529b\u3057\u3066\u3044\u3066\u5b9f\u88c5\u3057\u5fd8\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u76f4\u524d\u306b\u306a\u3063\u3066\u6c17\u3065\u304d\u307e\u3057\u305f\u2026\u3002\n\u305f\u307e\u306b\u306fProlog\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u306e\u3082\u697d\u3057\u3044\u3067\u3059\u3088\u306d\u3002\u52d5\u304f\u4ed5\u69d8\u3092\u624b\u306b\u5165\u308c\u305f\u3068\u3053\u308d\u3067\u3001\u3053\u306e\u4e2d\u3067 is_answer_2, is_answer_1 \u306b\u76f8\u5f53\u3059\u308b\u90e8\u5206\u3092Coq\u98a8\u306b\u66f8\u304d\u76f4\u3057\u3066\u307f\u307e\u3059\u3002\n\nInductive is_answer_2 : state -> nat -> state -> seq command -> nat -> Prop :=\n  | IsAnswer21 : forall cs s1 s2 n, same_node s1 s2 -> is_answer_2 s1 n s2 cs n\n  | IsAnswer22 : forall cs2 cs3 s1 s2 s3 a n2 n3 n4,\n      next_command cs2 a cs3 -> R_perform_action s2 a s3 -> n3 = n2.+1 ->\n      is_answer_2 s1 n3 s3 cs3 n4 -> is_answer_2 s1 n2 s2 cs2 n4.\n\nInductive is_answer_1 : state -> seq command -> nat -> nat -> nat -> Prop :=\n  | IsAnswer11 : forall cs1 cs2 s1 s2 a n1 n2 n3, next_command cs1 a cs2 ->\n      R_perform_action s1 a s2 -> n2 = n1.+1 -> is_answer_2 s1 n2 s2 cs2 n3 ->\n      is_answer_1 s1 cs1 n1 n1 n3\n  | IsAnswer12 : forall cs1 cs2 s1 s2 a n1 n2 n3 n4, next_command cs1 a cs2 ->\n      R_perform_action s1 a s2 -> n2 = n1.+1 -> is_answer_1 s2 cs2 n2 n3 n4 ->\n      is_answer_1 s1 cs1 n1 n3 n4.\n\nInductive is_answer : seq command -> nat -> nat -> Prop :=\n  | IsAnswer cs m n : is_answer_1 initial_state cs 0 m n -> is_answer cs m n.\n\n\u95a2\u6570 solve \u304c\u3053\u306e\u300c\u4ed5\u69d8\u300d\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u8a3c\u660e\u3057\u307e\u3057\u305f\u3002\u8a3c\u660e\u306f\u30b3\u30fc\u30c9\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nTheorem solve_spec cs m n : solve cs = Some (n, m) -> is_answer cs m n.\n\n\u9006\u5411\u304d\u306e\u8a3c\u660e\u3001\u3064\u307e\u308a\u5b8c\u5168\u6027\u306b\u3064\u3044\u3066\u306f\u8a3c\u660e\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u9589\u8def\u304c\u8907\u6570\u3042\u3063\u305f\u5834\u5408\u3001\u958b\u59cb\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5c0f\u3055\u3044\u65b9\u3092\u512a\u5148\u7684\u306b\u51fa\u529b\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\u3068\u3053\u308d\u304c\u3001\u3044\u3056\u3053\u306e\u30b3\u30fc\u30c9\u3092OCaml\u306b\u5909\u63db\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u8ab2\u984c\u30da\u30fc\u30b8\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u3044\u304f\u3064\u304b\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u304c\u901a\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3069\u3046\u3084\u3089\u51fa\u984c\u8005\u306e\u610f\u56f3\u3068\u3057\u3066\u306f\u3001\u7d42\u4e86\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5c0f\u3055\u3044\u65b9\u3092\u512a\u5148\u7684\u306b\u51fa\u529b\u3057\u3066\u6b32\u3057\u304b\u3063\u305f\u3088\u3046\u3067\u3059\u3002\u3053\u306e\u3053\u3068\u306bAdvent Calendar\u7de0\u3081\u5207\u308a\u306e\u76f4\u524d\u306b\u306a\u3063\u3066\u6c17\u3065\u304d\u307e\u3057\u305f\u304c\u3001\u30e2\u30c1\u30d9\u304c\u5c3d\u304d\u3066\u304a\u308a\u3001\u4fee\u6b63\u305b\u305a\u306b\u305d\u306e\u307e\u307e\u30d6\u30ed\u30b0\u306b\u6295\u7a3f\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\uff1e\uff1c\n\u30b0\u30e9\u30d5\u81ea\u4f53\u304c\u6574\u5408\u6027\u304c\u53d6\u308c\u3066\u3044\u308b\u3082\u306e\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3059\u3079\u304f\u3001\u300c\u884c\u3063\u3066\u623b\u3063\u3066\u304d\u305f\u3089\u5143\u306e\u4f4d\u7f6e\u306b\u623b\u308b\u300d\u3092\u8a3c\u660e\u3057\u307e\u3057\u305f\u3002\nTheorem penta_graph_consistent s : solve' [:: Fw; Fw] s 0 = Some (2, 0).\n\n\n\u8003\u5bdf\u306e\u3088\u3046\u306a\u3082\u306e\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u305f\u3089\u307e\u305a\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u3079\u304d\uff1f\n\u8a3c\u660e\u306e\u524d\u306b\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3068\u3044\u3046\u306e\u306f\u3001\u4f55\u304b\u3053\u3046\u8ca0\u3051\u305f\u3088\u3046\u306a\u6c17\u5206\u306b\u306a\u308a\u307e\u3059\u3002\u7d50\u5c40\u3001\u4fe1\u983c\u6027\u306e\u62c5\u4fdd\u306f\u4f1d\u7d71\u7684\u306a\u30c6\u30b9\u30c8\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u9055\u3044\u306a\u3044\u304b\u3089\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u50d5\u306e\u5c11\u306a\u3044\u7d4c\u9a13\u304b\u3089\u8a00\u3048\u308b\u3053\u3068\u306f\u3001\u8a3c\u660e\u306b\u6bd4\u3079\u308b\u3068\u5358\u4f53\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\u3068\u30c7\u30d0\u30c3\u30b0\u306f\u306f\u308b\u304b\u306b\u30b3\u30b9\u30c8\u304c\u4f4e\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u8a3c\u660e\u306b\u9577\u3044\u6642\u9593\u3092\u304b\u3051\u305f\u7d50\u679c\u3001\u305d\u3082\u305d\u3082\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5358\u7d14\u306a\u30d0\u30b0\u304c\u3042\u308a\u8a3c\u660e\u4e0d\u53ef\u80fd\u3067\u3042\u308b\u3068\u3044\u3063\u305f\u72b6\u6cc1\u306b\u6bd4\u3079\u308c\u3070\u3001\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u5b9f\u884c\u3057\u305f\u65b9\u304c\u3001\u5168\u4f53\u7684\u306b\u751f\u7523\u6027\u304c\u9ad8\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3002\u4eca\u56de\u3001\u6bd4\u8f03\u7684\u9577\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u5f8c\u3067\u3001\u305d\u3046\u632f\u308a\u8fd4\u308a\u307e\u3057\u305f\u3002\n\u554f\u984c\u306e\u5b9a\u7fa9\u306b\u3082\u540c\u69d8\u306e\u3053\u3068\u304c\u8a00\u3048\u3066\u3001\u5b9a\u5f0f\u5316\u3057\u305f\u3089\u3001\u307e\u305aExample\u30b3\u30de\u30f3\u30c9\u3067\u7c21\u5358\u306a\u554f\u984c\u3068\u51fa\u529b\u304b\u3089\u306a\u308b\u4e8b\u5b9f\u3092\u8a3c\u660e\u3067\u304d\u308b\u304b\u8a66\u3059\u3079\u304d\u306a\u306e\u3067\u3057\u3087\u3046\u3002\u3053\u306e\u3088\u3046\u306b\u3002\nExample is_answer_example_1 : is_answer [:: Fw; Fw] 0 2.\n\n\n\u6700\u521d\u304b\u3089Prolog\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3079\u304d\uff1f\nProlog\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u5b9f\u884c\u3067\u304d\u308b\u306a\u3089\u3001\u305d\u308c\u3092\u6700\u7d42\u7684\u306a\u6210\u679c\u7269\u3068\u3057\u3066\u63a1\u7528\u3059\u308c\u3070\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u4eca\u56de\u306b\u95a2\u3057\u3066\u8a00\u3048\u3070Prolog\u304c\u5411\u3044\u3066\u3044\u308b\u3068\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u4e00\u822c\u7684\u306bProlog\u30b3\u30fc\u30c9\u306f\u3001\u305f\u3068\u3048\u30b3\u30fc\u30c9\u305d\u306e\u3082\u306e\u306b\u30d0\u30b0\u304c\u306a\u304f\u3066\u3082\u5e38\u306b\u73fe\u5b9f\u7684\u306a\u6642\u9593\u5185\u306b\u7d42\u308f\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\u554f\u984c\u306e\u4ed5\u69d8\u3092Prolog\u3067\u8a18\u8ff0\u3067\u304d\u308b\u304c\u3001\u30b3\u30fc\u30c9\u304c\u9045\u3044\u3068\u3044\u3063\u305f\u5834\u5408\u306b\u4eca\u56de\u306e\u65b9\u91dd\u306f\u5f79\u306b\u7acb\u3064\u3068\u8a00\u3048\u306a\u304f\u3082\u306a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u8a71\u306f\u5909\u308f\u308a\u307e\u3059\u304c\u3001Prolog\u3092\u6301\u3061\u51fa\u3057\u3066\u307e\u3067\u3001\u3044\u308f\u3086\u308b\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u52d5\u4f5c\u3092\u4fdd\u8a3c\u3059\u308b\u306e\u304c\u7b4b\u304c\u826f\u3044\u306e\u304b\u3068\u3044\u3046\u7591\u554f\u3082\u3042\u308a\u307e\u3059\u3002\u50d5\u306b\u306f\u99b4\u67d3\u307f\u304c\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306e\u554f\u984c\u306e\u672c\u8cea\u306f\u72b6\u614b\u9077\u79fb\u3067\u3042\u308b\u3053\u3068\u304b\u3089\u3001Alloy\u7b49\u306e\u5f62\u5f0f\u624b\u6cd5\u306e\u65b9\u304c\u4eca\u56de\u306e\u554f\u984c\u306b\u5411\u3044\u3066\u3044\u308b\u306e\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\u52c9\u5f37\u4e0d\u8db3\u306e\u305f\u3081\u3001\u52d5\u4f5c\u4fdd\u8a3c\u306b\u4f55\u304c\u6700\u9069\u304b\u7d50\u8ad6\u3092\u5f97\u3089\u308c\u305a\u306b\u3044\u307e\u3059\u3002\n\nVernacular Command \"Function\" \u306f\u6709\u7528\n\u518d\u5e30\u95a2\u6570\u3092 Function \u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3068\u3001\u9805\u306e\u66f8\u304d\u63db\u3048\u306b\u4fbf\u5229\u306a\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u8aac\u660e\u306e\u305f\u3081\u306bStack Overflow\u304b\u3089\u4f8b\u3092\u5f15\u7528\u3057\u3001SSReflect\u7528\u306b\u5909\u66f4\u3057\u305f\u3082\u306e\u3092\u7528\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570 f \u3092\u5b9a\u7fa9\u3057\u3066\u3001\u8a3c\u660e\u306e\u9014\u4e2d\u3067\u5b9a\u7fa9\u306b\u7f6e\u304d\u63db\u3048\u305f\u3044\u3068\u3057\u307e\u3059\u3002\nDefinition g (x:nat) := x.\nFixpoint f (x : nat) := if g x is y.+1 then (if x is z.+1 then f z else 1) else 0.\n\nLemma test : forall (x : nat), g x = O -> f x = O.\nProof.\n  move=> x.\n\n1 subgoal, subgoal 1 (ID 7)\n\n  x : nat\n  ============================\n  g x = 0 -> f x = 0\n\n\u3053\u3053\u3067 rewrite /f \u3059\u308b\u3068\u3001 fix \u304c\u73fe\u308c\u3066\u305d\u306e\u5f8c\u306e\u8a3c\u660e\u304c\u96e3\u3057\u304f\u306a\u308a\u307e\u3059\u3002\n1 subgoal, subgoal 1 (ID 8)\n\n  x : nat\n  ============================\n  g x = 0 ->\n  (fix f (x0 : nat) : nat :=\n     match g x0 with\n     | 0 => 0\n     | _.+1 => match x0 with\n               | 0 => 1\n               | z.+1 => f z\n               end\n     end) x = 0\n\n\u305d\u3053\u3067\u95a2\u6570 f \u3092 Function \u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nFunction f (x : nat) := if g x is y.+1 then (if x is z.+1 then f z else 1) else 0.\n\n\u3059\u308b\u3068\u3001f \u306e\u5b9a\u7fa9\u3068\u5171\u306b6\u3064\u306e\u88dc\u984c\u304c\u81ea\u52d5\u751f\u6210\u3055\u308c\u307e\u3059\u3002\nf is defined\nf is recursively defined (decreasing on 1st argument)\nf_equation is defined\nf_ind is defined\nf_rec is defined\nf_rect is defined\nR_f_correct is defined\nR_f_complete is defined\n\n\u3053\u306e\u3046\u3061 f_equation \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u88dc\u984c\u3067\u3059\u3002\nf_equation\n     : forall x : nat,\n       f x = match g x with\n             | 0 => 0\n             | _.+1 => match x with\n                       | 0 => 1\n                       | z.+1 => f z\n                       end\n             end\n\nrewrite f_equation \u3059\u308b\u3068\u3001\u7d20\u76f4\u306b\u5b9a\u7fa9\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u308c\u307e\u3059\u3002\n1 subgoal, subgoal 1 (ID 255)\n\n  x : nat\n  ============================\n  g x = 0 -> match g x with\n             | 0 => 0\n             | _.+1 => match x with\n                       | 0 => 1\n                       | z.+1 => f z\n                       end\n             end = 0\n\n\u5f8c\u306f rewrite /g => -> //. \u3067\u7121\u4e8b\u7d42\u4e86\u3002\nFunction \u306f\u66f8\u304d\u63db\u3048\u306e\u4ed6\u306b\u3082\u95a2\u6570\u5b9a\u7fa9\u304b\u3089\u5065\u5168\u6027\u3068\u5b8c\u5168\u6027\u306e\u5b9a\u7406\u3092\u81ea\u52d5\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3061\u3089\u306f\u3069\u3046\u3084\u3089\u4e0a\u624b\u304f\u3044\u304f\u5834\u5408\u3068\u3044\u304b\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u307e\u3068\u3081\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u8ab2\u984c\u3092Coq\u3067\u5b9f\u88c5\u3057\u3001\u554f\u984c\u3092\u5b9a\u5f0f\u5316\u3057\u3001\u305d\u306e\u4ed5\u69d8\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u8a3c\u660e\u3057\u305f\u3002\n\u3057\u304b\u3057\u305d\u308c\u3092\u3082\u3063\u3066\u5065\u5168\u6027\u306e\u4fdd\u8a3c\u3068\u3057\u3066\u826f\u3044\u304b\u7591\u554f\u304c\u6b8b\u308b\u3002\n\u8457\u8005\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u305f\u3089\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u3079\u304d\u3067\u306f\u3068\u8003\u3048\u3066\u3044\u308b\u3002\nProlog\u306f\u6709\u7528\u3002\u3067\u3082\u5e38\u306b\u5b9f\u884c\u3067\u304d\u308b\u3068\u306f\u9650\u3089\u306a\u3044\u304b\u3089\u3001\u305d\u306e\u6642\u306e\u305f\u3081\u306b\u3001\u3044\u308f\u3086\u308b\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u306e\u540c\u5024\u6027\u3092\u4fdd\u8a3c\u3067\u304d\u305f\u65b9\u304c\u826f\u3044\u3068\u8457\u8005\u306f\u8003\u3048\u3066\u3044\u308b\u3002\nVernacular Command Function \u306f\u6709\u7528\u3002\u7a4d\u6975\u7684\u306b\u5229\u7528\u3057\u3088\u3046\u3002\n\n\u3053\u3053\u307e\u3067\u8aad\u3093\u3067\u3044\u305f\u3060\u304d\u672c\u5f53\u306b\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f [Theorem Prover Advent Calendar 2016](http://qiita.com/advent-calendar/2016/theorem-prover) \u306e5\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\n[\u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f](https://yhpg.doorkeeper.jp/)\u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30de\u5411\u3051\u30a4\u30d9\u30f3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\u30aa\u30d5\u30e9\u30a4\u30f3\u3067\u96c6\u307e\u3063\u3066\u3001\u4e3b\u50ac\u8005\u304c\u51fa\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8ab2\u984c\u3092\u53c2\u52a0\u8005\u304c\u5236\u9650\u6642\u9593\u5185\u306b\u89e3\u3044\u3066\u3001\u56de\u7b54\u3092\u767a\u8868\u3057\u3042\u3046\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\u305d\u3053\u3067\u904e\u53bb\u306b\u51fa\u984c\u3055\u308c\u305f\u8ab2\u984c\u306b\u5bfe\u3057\u3066Coq/SSReflect\u3092\u4f7f\u3063\u305f\u56de\u7b54\u3092\u8a66\u307f\u305f\u3001\u3068\u3044\u3046\u306e\u304c\u3053\u306e\u8a18\u4e8b\u306e\u8da3\u65e8\u3067\u3059\u3002\u3055\u3059\u304c\u306b\u30a4\u30d9\u30f3\u30c8\u3067\u56de\u7b54\u3059\u308b\u306b\u306f\u6642\u9593\u304c\u8db3\u308a\u306a\u3055\u3059\u304e\u308b\u306e\u3067\u3001\u81ea\u5b85\u3067\u89e3\u304d\u307e\u3057\u305f\u3002\u3053\u306e\u8a18\u4e8b\u3067\u6271\u3046\u554f\u984c\u306f\u3053\u308c\u3067\u3059\u3002\n\n* [\u4e94\u89d2\u5f62\u306e\u4e16\u754c\u3067\u3042\u306a\u305f\u306f\u904e\u53bb\u306e\u81ea\u5206\u306b\u51fa\u4f1a\u3046](http://nabetani.sakura.ne.jp/hena/orde09_penwa/)\n\n\u4e94\u89d2\u5f62\u3067\u6577\u304d\u8a70\u3081\u3089\u308c\u305f\u5347\u76ee\u3092\u79fb\u52d5\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u5217\u304c\u4e0e\u3048\u3089\u308c\u308b\u306e\u3067\u3001\u9589\u8def\u3092\u898b\u3064\u3051\u306a\u3055\u3044\u3068\u3044\u3046\u554f\u984c\u3067\u3059\u3002\u8a73\u7d30\u306f\u30ea\u30f3\u30af\u5148\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\u56de\u7b54\u3092\u8a66\u307f\u305f\u3068\u3053\u308d\u3001\u7d50\u679c\u7684\u306b\u3053\u3046\u306a\u308a\u307e\u3057\u305f\u3002\n\n* \u81ea\u5206\u306a\u308a\u306b\u56de\u7b54\u3057\u305f\u3002\u554f\u984c\u3092\u81ea\u5206\u306a\u308a\u306b\u5b9a\u5f0f\u5316\u3057\u3066\u3001\u305d\u306e\u4ed5\u69d8\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u8a3c\u660e\u3057\u305f\u3002\n* \u3057\u304b\u3057\u5143\u306e\u554f\u984c\u3068\u5fae\u5999\u306b\u7570\u306a\u308b\u554f\u984c\u3092\u89e3\u3044\u3066\u3044\u305f\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u3002\u4fee\u6b63\u3059\u308b\u30e2\u30c1\u30d9\u304c\u5c3d\u304d\u305f\u306e\u3067\u305d\u306e\u307e\u307e\u2026\u3002\n* \u5b9a\u5f0f\u5316\u306b\u8ff7\u3063\u305f\u3002\u3053\u306e\u8a3c\u660e\u3092\u3082\u3063\u3066\u5065\u5168\u6027\u306e\u4fdd\u8a3c\u3068\u3067\u304d\u308b\u304b\u602a\u3057\u3044\u3002\n\n\u306a\u3093\u3068\u3082\u5869\u3063\u3071\u3044\u7d50\u679c\u3067\u3059\u304c\u3001\u672c\u4eba\u306f\u6559\u79d1\u66f8\u7b49\u306e\u624b\u304c\u304b\u308a\u306a\u3057\u306bCoq\u30b3\u30fc\u30c9\u3092\u6570\u767e\u884c\u7a0b\u5ea6\u66f8\u304f\u306e\u306f\u521d\u3081\u3066\u3067\u3001\u5185\u5bb9\u306f\u3068\u3082\u304b\u304f\u6700\u5f8c\u307e\u3067\u66f8\u304d\u5207\u308a\u3001\u3044\u304f\u3089\u304b\u306e\u5b66\u3073\u3092\u5f97\u3089\u308c\u305f\u306e\u3067\u6e80\u8db3\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u74b0\u5883\n\n* Coq 8.5pl2\n* SSReflect 1.6\n* Ubuntu 16.04 LTS on MacOSX (Vagrant)\n\n# \u56de\u7b54\n\n[\u3053\u308c\u304c\u81ea\u5206\u304c\u51fa\u3057\u305f\u56de\u7b54\u3067\u3059\u3002](https://gist.github.com/takeouchida/ad9702dd424fb90fd0272966d23e32f2)\u4ee5\u5f8c\u3001\u304a\u305d\u3089\u304f\u4e0a\u7d1a\u8005\u306e\u7686\u3055\u3093\u306b\u3068\u3063\u3066\u306f\u5197\u9577\u306a\u30b3\u30fc\u30c9\u304c\u7d9a\u304d\u307e\u3059\u3002\n\n## \u5b9f\u88c5\n\n\u50d5\u306f\u3053\u3053\u3067\u793a\u3055\u308c\u3066\u3044\u308b\u5347\u76ee\u3092\u5e73\u9762\u306b\u516d\u89d2\u5f62\u3092\u6577\u304d\u8a70\u3081\u305f\u3082\u306e\u3068\u89e3\u91c8\u3057\u307e\u3057\u305f\u30021\u3064\u306e\u516d\u89d2\u5f62\u306f4\u3064\u306e\u4e94\u89d2\u5f62\u3092\u6301\u3061\u3001\u516d\u89d2\u5f62\u306e\u4f4d\u7f6e\u3092xy\u5ea7\u6a19(\u6574\u6570)\u3067\u3001\u516d\u89d2\u5f62\u5185\u306e\u4e94\u89d2\u5f62\u306e\u4f4d\u7f6e\u3092C0\u301cC3\u307e\u3067\u306e\u5024\u3067\u3001\u5411\u304d\u3092D0\u301cD4\u307e\u3067\u306e\u5024\u3067\u8868\u3057\u3066\u3044\u307e\u3059\u3002\n\n```Coq\nInductive cell := C0 | C1 | C2 | C3.\nInductive dir := D0 | D1 | D2 | D3 | D4.\nDefinition node := (cell * Z * Z)%type.\nDefinition state := (node * dir)%type.\n```\n\n\u72b6\u614b\u9077\u79fb(\u3053\u3053\u3067\u306f\u4e94\u89d2\u5f62\u9593\u306e\u79fb\u52d5)\u306f\u95a2\u6570\u3067\u611a\u76f4\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002`cell * Z * Z * dir`\u306e\u6574\u6570\u90e8\u5206\u306f\u5143\u306e\u516d\u89d2\u5f62\u306e\u4f4d\u7f6e\u3068\u306e\u76f8\u5bfe\u5ea7\u6a19\u3067\u3059\u3002\u898f\u5247\u6027\u306f\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\n```Coq\nDefinition link := (cell * Z * Z * dir)%type.\nDefinition penta_graph c d : link :=\n  (match c with\n  | C0 => match d with\n          | D0 => (C2,  0,  0, D2) | D1 => (C3,  0,  0, D3) | D2 => (C1, -1, -1, D4)\n          | D3 => (C3,  0, -1, D0) | D4 => (C1,  0,  0, D1)\n          end\n  | C1 => match d with\n          | D0 => (C2,  0,  0, D3) | D1 => (C0,  0,  0, D4) | D2 => (C2,  0, -1, D0)\n          | D3 => (C3,  1,  0, D1) | D4 => (C0,  1,  1, D2)\n          end\n  | C2 => match d with\n          | D0 => (C1,  0,  1, D2) | D1 => (C3,  0,  0, D4) | D2 => (C0,  0,  0, D0)\n          | D3 => (C1,  0,  0, D0) | D4 => (C3,  1,  1, D2)\n          end\n  | C3 => match d with\n          | D0 => (C0,  0,  1, D3) | D1 => (C1, -1,  0, D3) | D2 => (C2, -1, -1, D4)\n          | D3 => (C0,  0,  0, D1) | D4 => (C2,  0,  0, D1)\n          end\n  end)%Z.\n```\n\n\u81ea\u5206\u3067\u5b9a\u7fa9\u3057\u305fInductive Type\u3092reflection\u3059\u308b\u305f\u3081\u306e\u88dc\u984c\u304c\u7d9a\u304d\u307e\u3059\u3002\n\n```Coq\nDefinition eqb_cell c1 c2 :=\n  match (c1, c2) with\n  | (C0, C0) => true | (C1, C1) => true | (C2, C2) => true | (C3, C3) => true | _ => false\n  end.\n\nLemma eqb_cellP : Equality.axiom eqb_cell.\nProof. rewrite /Equality.axiom. by case; case; constructor. Qed.\n\nCanonical cell_eqMixin := EqMixin eqb_cellP.\nCanonical cell_eqType := Eval hnf in EqType cell cell_eqMixin.\n```\n\n\u76f4\u9032\u3001\u6642\u8a08\u56de\u308a\u3001\u53cd\u6642\u8a08\u56de\u308a\u306e\u56de\u8ee2\u3068\u3044\u3063\u305f\u30b3\u30de\u30f3\u30c9\u306b\u3057\u305f\u304c\u3063\u3066\u72b6\u614b\u9077\u79fb\u3055\u305b\u308b\u90e8\u5206\u3067\u3059\u3002\n\n```Coq\nDefinition turn_dir_ccw d : dir :=\n  match d with\n  | D0 => D1 | D1 => D2 | D2 => D3 | D3 => D4 | D4 => D0\n  end.\n\nDefinition turn_dir_cw d : dir :=\n  match d with\n  | D0 => D4 | D1 => D0 | D2 => D1 | D3 => D2 | D4 => D3\n  end.\n\nDefinition move_ccw (s : state) : state :=\n  let: (n, d1) := s in let: d2 := turn_dir_ccw d1 in (n, d2).\n\nDefinition move_cw (s : state) : state :=\n  let: (n, d1) := s in let: d2 := turn_dir_cw d1 in (n, d2).\n\nDefinition move_forward (s : state) : state :=\n  let: ((c1, x, y), d1) := s in\n  let: (c2, dx, dy, d2) := penta_graph c1 d1 in\n  ((c2, x + dx, y + dy), d2)%Z.\n```\n\n\u3053\u306e\u554f\u984c\u3067\u306f\u9589\u8def\u3092\u5347\u76ee\u306e\u79fb\u52d5\u8ddd\u96e2\u306b\u76f8\u5f53\u3059\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u8868\u73fe\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u30b3\u30de\u30f3\u30c9\u5217\u3092\u5206\u3051\u3066\u30011\u90e8\u5206\u5217\u304c\u96a3\u306e\u4e94\u89d2\u5f62\u3078\u306e\u79fb\u52d5\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u65b9\u304c\u6271\u3044\u3084\u3059\u3044\u3068\u8003\u3048\u307e\u3057\u305f\u30021\u90e8\u5206\u5217\u3092\u5207\u308a\u51fa\u3059\u95a2\u6570\u3092 `split_action` \u3067\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u76f4\u9032\u3001\u6642\u8a08\u56de\u308a\u3001\u53cd\u6642\u8a08\u56de\u308a\u306e\u30b3\u30de\u30f3\u30c9\u3092\u305d\u308c\u305e\u308c `Fw, Tn Cw, Tn ccw` \u3068\u8868\u73fe\u3057\u307e\u3057\u305f\u3002\n\n```Coq\nInductive turn := Cw | Ccw.\nInductive command := Fw | Tn of turn.\nDefinition action := seq turn.\n\nFunction split_action (cs : seq command) : option (action * seq command) :=\n  match cs with\n    | [::] => None\n    | Fw :: cs1 => Some ([::], cs1)\n    | Tn t :: cs1 =>\n      match split_action cs1 with\n        | None => None\n        | Some (ts, cs2) => Some (t :: ts, cs2)\n      end\n  end.\n```\n\n\u3053\u308c\u3092\u4f7f\u3063\u3066\u30b3\u30de\u30f3\u30c9\u5217\u304b\u3089\u90e8\u5206\u5217(\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u3057\u307e\u3059)\u306e\u5217\u3092\u4f5c\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001`[:: Fw, Tn Cw, Fw, Tn Ccw, Tn Ccw, Fw ]`\u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u5217\u3092 `[:: [::], [:: Cw], [:: Ccw, Ccw] ]` \u306e\u3088\u3046\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u672c\u984c\u304b\u3089\u96e2\u308c\u307e\u3059\u304c\u3001`Function`\u3068\u3044\u3046Vernacular Command\u3092\u4f7f\u3046\u3068\u3001\u6574\u790e\u95a2\u4fc2\u3092\u4f7f\u3063\u305f\u95a2\u6570\u5b9a\u7fa9\u3092\u6bd4\u8f03\u7684\u82e6\u3057\u307e\u305a\u306b\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\u4eca\u56de\u306e\u5b9f\u88c5\u3067\u6c17\u3065\u304d\u307e\u3057\u305f\u3002\u6574\u790e\u95a2\u4fc2\u3092\u4f7f\u3063\u3066\u95a2\u6570\u5b9a\u7fa9\u3059\u308b\u3068\u304d\u306f \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e`Recdef` \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u3042\u3089\u304b\u3058\u3081 Import \u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002[\u8a73\u7d30\u306f\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002](https://coq.inria.fr/refman/Reference-Manual004.html#hevea_command42)\n\n```Coq\nLemma split_action_size cs1 cs2 a :\n  split_action cs1 = Some (a, cs2) -> size cs1 = size a + size cs2 + 1.\nProof.\n  elim: cs1 cs2 a => // c cs1 IHcs1 cs2 a H0. elim: c H0 => /=.\n    - case => <- -> /=. by rewrite -addn1.\n    - move H0: (split_action cs1) => x. case: x H0 => //.\n      move=> x H0 t. case: x H0 => a1 cs H0. case=> H1 H2.\n      move/IHcs1 :H0. rewrite -H1 H2 => /= ->. ring.\nQed.\n\nFunction convert_to_actions (cs : seq command) {measure size cs} : seq action :=\n  match split_action cs with\n  | None => [::]\n  | Some (a, cs') => a :: convert_to_actions cs'\n  end.\nProof.\n  move=> cs1 p a cs2 H0. move/split_action_size => ->. apply/ltP.\n  by rewrite [size a + size cs2]addnC -addnA -{1}[size cs2]addn0 ltn_add2l addn1 ltn0Sn.\nQed.\n```\n\n\u4e0a\u8a18\u95a2\u6570\u3092\u4f7f\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u7528\u3044\u305f\u72b6\u614b\u9077\u79fb\u95a2\u6570\u3067\u3059\u3002\n\n```Coq\nFunction perform_action s a :=\n  match a with\n    | Cw :: a' => perform_action (move_cw s) a'\n    | Ccw :: a' => perform_action (move_ccw s) a'\n    | [::] => move_forward s\n  end.\n```\n\n\u5f8c\u3067\u540c\u3058\u72b6\u614b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5f97\u308b\u305f\u3081\u306b\u72b6\u614b\u5217\u3092\u4f5c\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n```Coq\nFixpoint process' s aa :=\n  s :: match aa with\n    | [::] => [::]\n    | a :: aa' => process' (perform_action s a) aa'\n  end.\n```\n\n\u72b6\u614b\u5217\u306e\u4e2d\u306b\u540c\u3058\u72b6\u614b\u3092\u63a2\u7d22\u3057\u307e\u3059\u3002\n\n```Coq\nFunction find_same_node' ss i :=\n  match ss with\n    | [::] => None\n    | s :: ss' =>\n      match findo (compare_by_node s) ss' with\n        | Some j => Some (i + j + 1, i)\n        | None => find_same_node' ss' i.+1\n      end\n  end.\n\nDefinition find_same_node ss := find_same_node' ss 0.\n```\n\n\u3053\u3053\u307e\u3067\u306e\u95a2\u6570\u5b9a\u7fa9\u3092\u5408\u6210\u3057\u3066\u7d42\u308f\u308a\u3067\u3059\u3002\u305d\u308c\u306b\u3057\u3066\u3082\u9577\u304b\u3063\u305f\u3002\n\n```Coq\nDefinition solve' cs s n := find_same_node' (process' s (convert_to_actions cs)) n.\n\nDefinition solve cs := solve' cs initial_state 0.\n```\n\n## \u8a3c\u660e\n\n\u3055\u3066\u3001\u4f55\u3092\u8a3c\u660e\u3059\u308c\u3070\u826f\u3044\u3067\u3057\u3087\u3046\u304b\u3002\u3053\u308c\u3067\u826f\u3044\u304b\u78ba\u4fe1\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u8ab2\u984c\u306e\u4ed5\u69d8\u3092\u8ad6\u7406\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u7684\u306b Inductive Type \u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\u5b9a\u7fa9\u3057\u3066\u3084\u3063\u3066\u3001\u5143\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3053\u306e\u4ed5\u69d8\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u8a3c\u660e\u3059\u308c\u3070\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\u307e\u3057\u305f\u3002\u624b\u59cb\u3081\u306b\u3001\u52d5\u304f\u4ed5\u69d8\u3092\u5f97\u308b\u3079\u304f\u3001[\u5b9f\u969b\u306b Prolog \u3067\u8ad6\u7406\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u3066\u307f\u307e\u3057\u305f\u3002](https://gist.github.com/takeouchida/3be55d527307c57e7784bc0655276504)\n\n\u50d5\u306f\u666e\u6bb5Prolog\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u306a\u3044\u306e\u3067\u3001\u30b3\u30fc\u30c9\u306b\u304a\u304b\u3057\u306a\u7b87\u6240\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3068\u3053\u308d\u3067\u3001\u3053\u308c\u306fCoq\u306e\u30b3\u30fc\u30c9\u306b\u95a2\u3057\u3066\u3082\u8a00\u3048\u308b\u306e\u3067\u3059\u304c\u3001\u5b57\u53e5\u89e3\u6790\u306e\u90e8\u5206\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8a3c\u660e\u306b\u6ce8\u529b\u3057\u3066\u3044\u3066\u5b9f\u88c5\u3057\u5fd8\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u76f4\u524d\u306b\u306a\u3063\u3066\u6c17\u3065\u304d\u307e\u3057\u305f\u2026\u3002\n\n\u305f\u307e\u306b\u306fProlog\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u306e\u3082\u697d\u3057\u3044\u3067\u3059\u3088\u306d\u3002\u52d5\u304f\u4ed5\u69d8\u3092\u624b\u306b\u5165\u308c\u305f\u3068\u3053\u308d\u3067\u3001\u3053\u306e\u4e2d\u3067 `is_answer_2, is_answer_1` \u306b\u76f8\u5f53\u3059\u308b\u90e8\u5206\u3092Coq\u98a8\u306b\u66f8\u304d\u76f4\u3057\u3066\u307f\u307e\u3059\u3002\n\n```Coq\n\nInductive is_answer_2 : state -> nat -> state -> seq command -> nat -> Prop :=\n  | IsAnswer21 : forall cs s1 s2 n, same_node s1 s2 -> is_answer_2 s1 n s2 cs n\n  | IsAnswer22 : forall cs2 cs3 s1 s2 s3 a n2 n3 n4,\n      next_command cs2 a cs3 -> R_perform_action s2 a s3 -> n3 = n2.+1 ->\n      is_answer_2 s1 n3 s3 cs3 n4 -> is_answer_2 s1 n2 s2 cs2 n4.\n\nInductive is_answer_1 : state -> seq command -> nat -> nat -> nat -> Prop :=\n  | IsAnswer11 : forall cs1 cs2 s1 s2 a n1 n2 n3, next_command cs1 a cs2 ->\n      R_perform_action s1 a s2 -> n2 = n1.+1 -> is_answer_2 s1 n2 s2 cs2 n3 ->\n      is_answer_1 s1 cs1 n1 n1 n3\n  | IsAnswer12 : forall cs1 cs2 s1 s2 a n1 n2 n3 n4, next_command cs1 a cs2 ->\n      R_perform_action s1 a s2 -> n2 = n1.+1 -> is_answer_1 s2 cs2 n2 n3 n4 ->\n      is_answer_1 s1 cs1 n1 n3 n4.\n\nInductive is_answer : seq command -> nat -> nat -> Prop :=\n  | IsAnswer cs m n : is_answer_1 initial_state cs 0 m n -> is_answer cs m n.\n```\n\n\u95a2\u6570 `solve` \u304c\u3053\u306e\u300c\u4ed5\u69d8\u300d\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u8a3c\u660e\u3057\u307e\u3057\u305f\u3002[\u8a3c\u660e\u306f\u30b3\u30fc\u30c9\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002](https://gist.github.com/takeouchida/ad9702dd424fb90fd0272966d23e32f2)\n\n```Coq\nTheorem solve_spec cs m n : solve cs = Some (n, m) -> is_answer cs m n.\n```\n\n\u9006\u5411\u304d\u306e\u8a3c\u660e\u3001\u3064\u307e\u308a\u5b8c\u5168\u6027\u306b\u3064\u3044\u3066\u306f\u8a3c\u660e\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u9589\u8def\u304c\u8907\u6570\u3042\u3063\u305f\u5834\u5408\u3001\u958b\u59cb\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5c0f\u3055\u3044\u65b9\u3092\u512a\u5148\u7684\u306b\u51fa\u529b\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\u3068\u3053\u308d\u304c\u3001\u3044\u3056\u3053\u306e\u30b3\u30fc\u30c9\u3092OCaml\u306b\u5909\u63db\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u8ab2\u984c\u30da\u30fc\u30b8\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u3044\u304f\u3064\u304b\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u304c\u901a\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3069\u3046\u3084\u3089\u51fa\u984c\u8005\u306e\u610f\u56f3\u3068\u3057\u3066\u306f\u3001\u7d42\u4e86\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5c0f\u3055\u3044\u65b9\u3092\u512a\u5148\u7684\u306b\u51fa\u529b\u3057\u3066\u6b32\u3057\u304b\u3063\u305f\u3088\u3046\u3067\u3059\u3002\u3053\u306e\u3053\u3068\u306bAdvent Calendar\u7de0\u3081\u5207\u308a\u306e\u76f4\u524d\u306b\u306a\u3063\u3066\u6c17\u3065\u304d\u307e\u3057\u305f\u304c\u3001\u30e2\u30c1\u30d9\u304c\u5c3d\u304d\u3066\u304a\u308a\u3001\u4fee\u6b63\u305b\u305a\u306b\u305d\u306e\u307e\u307e\u30d6\u30ed\u30b0\u306b\u6295\u7a3f\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\uff1e\uff1c\n\n\u30b0\u30e9\u30d5\u81ea\u4f53\u304c\u6574\u5408\u6027\u304c\u53d6\u308c\u3066\u3044\u308b\u3082\u306e\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3059\u3079\u304f\u3001\u300c\u884c\u3063\u3066\u623b\u3063\u3066\u304d\u305f\u3089\u5143\u306e\u4f4d\u7f6e\u306b\u623b\u308b\u300d\u3092\u8a3c\u660e\u3057\u307e\u3057\u305f\u3002\n\n```Coq\nTheorem penta_graph_consistent s : solve' [:: Fw; Fw] s 0 = Some (2, 0).\n```\n\n# \u8003\u5bdf\u306e\u3088\u3046\u306a\u3082\u306e\n\n## \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u305f\u3089\u307e\u305a\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u3079\u304d\uff1f\n\n\u8a3c\u660e\u306e\u524d\u306b\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3068\u3044\u3046\u306e\u306f\u3001\u4f55\u304b\u3053\u3046\u8ca0\u3051\u305f\u3088\u3046\u306a\u6c17\u5206\u306b\u306a\u308a\u307e\u3059\u3002\u7d50\u5c40\u3001\u4fe1\u983c\u6027\u306e\u62c5\u4fdd\u306f\u4f1d\u7d71\u7684\u306a\u30c6\u30b9\u30c8\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u9055\u3044\u306a\u3044\u304b\u3089\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u50d5\u306e\u5c11\u306a\u3044\u7d4c\u9a13\u304b\u3089\u8a00\u3048\u308b\u3053\u3068\u306f\u3001\u8a3c\u660e\u306b\u6bd4\u3079\u308b\u3068\u5358\u4f53\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\u3068\u30c7\u30d0\u30c3\u30b0\u306f\u306f\u308b\u304b\u306b\u30b3\u30b9\u30c8\u304c\u4f4e\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u8a3c\u660e\u306b\u9577\u3044\u6642\u9593\u3092\u304b\u3051\u305f\u7d50\u679c\u3001\u305d\u3082\u305d\u3082\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5358\u7d14\u306a\u30d0\u30b0\u304c\u3042\u308a\u8a3c\u660e\u4e0d\u53ef\u80fd\u3067\u3042\u308b\u3068\u3044\u3063\u305f\u72b6\u6cc1\u306b\u6bd4\u3079\u308c\u3070\u3001\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u5b9f\u884c\u3057\u305f\u65b9\u304c\u3001\u5168\u4f53\u7684\u306b\u751f\u7523\u6027\u304c\u9ad8\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3002\u4eca\u56de\u3001\u6bd4\u8f03\u7684\u9577\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u5f8c\u3067\u3001\u305d\u3046\u632f\u308a\u8fd4\u308a\u307e\u3057\u305f\u3002\n\n\u554f\u984c\u306e\u5b9a\u7fa9\u306b\u3082\u540c\u69d8\u306e\u3053\u3068\u304c\u8a00\u3048\u3066\u3001\u5b9a\u5f0f\u5316\u3057\u305f\u3089\u3001\u307e\u305a`Example`\u30b3\u30de\u30f3\u30c9\u3067\u7c21\u5358\u306a\u554f\u984c\u3068\u51fa\u529b\u304b\u3089\u306a\u308b\u4e8b\u5b9f\u3092\u8a3c\u660e\u3067\u304d\u308b\u304b\u8a66\u3059\u3079\u304d\u306a\u306e\u3067\u3057\u3087\u3046\u3002\u3053\u306e\u3088\u3046\u306b\u3002\n\n```Coq\nExample is_answer_example_1 : is_answer [:: Fw; Fw] 0 2.\n```\n\n## \u6700\u521d\u304b\u3089Prolog\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3079\u304d\uff1f\n\nProlog\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u5b9f\u884c\u3067\u304d\u308b\u306a\u3089\u3001\u305d\u308c\u3092\u6700\u7d42\u7684\u306a\u6210\u679c\u7269\u3068\u3057\u3066\u63a1\u7528\u3059\u308c\u3070\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u4eca\u56de\u306b\u95a2\u3057\u3066\u8a00\u3048\u3070Prolog\u304c\u5411\u3044\u3066\u3044\u308b\u3068\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u4e00\u822c\u7684\u306bProlog\u30b3\u30fc\u30c9\u306f\u3001\u305f\u3068\u3048\u30b3\u30fc\u30c9\u305d\u306e\u3082\u306e\u306b\u30d0\u30b0\u304c\u306a\u304f\u3066\u3082\u5e38\u306b\u73fe\u5b9f\u7684\u306a\u6642\u9593\u5185\u306b\u7d42\u308f\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\u554f\u984c\u306e\u4ed5\u69d8\u3092Prolog\u3067\u8a18\u8ff0\u3067\u304d\u308b\u304c\u3001\u30b3\u30fc\u30c9\u304c\u9045\u3044\u3068\u3044\u3063\u305f\u5834\u5408\u306b\u4eca\u56de\u306e\u65b9\u91dd\u306f\u5f79\u306b\u7acb\u3064\u3068\u8a00\u3048\u306a\u304f\u3082\u306a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u8a71\u306f\u5909\u308f\u308a\u307e\u3059\u304c\u3001Prolog\u3092\u6301\u3061\u51fa\u3057\u3066\u307e\u3067\u3001\u3044\u308f\u3086\u308b\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u52d5\u4f5c\u3092\u4fdd\u8a3c\u3059\u308b\u306e\u304c\u7b4b\u304c\u826f\u3044\u306e\u304b\u3068\u3044\u3046\u7591\u554f\u3082\u3042\u308a\u307e\u3059\u3002\u50d5\u306b\u306f\u99b4\u67d3\u307f\u304c\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306e\u554f\u984c\u306e\u672c\u8cea\u306f\u72b6\u614b\u9077\u79fb\u3067\u3042\u308b\u3053\u3068\u304b\u3089\u3001Alloy\u7b49\u306e\u5f62\u5f0f\u624b\u6cd5\u306e\u65b9\u304c\u4eca\u56de\u306e\u554f\u984c\u306b\u5411\u3044\u3066\u3044\u308b\u306e\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\u52c9\u5f37\u4e0d\u8db3\u306e\u305f\u3081\u3001\u52d5\u4f5c\u4fdd\u8a3c\u306b\u4f55\u304c\u6700\u9069\u304b\u7d50\u8ad6\u3092\u5f97\u3089\u308c\u305a\u306b\u3044\u307e\u3059\u3002\n\n## Vernacular Command \"Function\" \u306f\u6709\u7528\n\n\u518d\u5e30\u95a2\u6570\u3092 `Function` \u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3068\u3001\u9805\u306e\u66f8\u304d\u63db\u3048\u306b\u4fbf\u5229\u306a\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u8aac\u660e\u306e\u305f\u3081\u306b[Stack Overflow\u304b\u3089\u4f8b\u3092\u5f15\u7528\u3057\u3001SSReflect\u7528\u306b\u5909\u66f4\u3057\u305f\u3082\u306e\u3092\u7528\u3044\u307e\u3059\u3002](http://stackoverflow.com/questions/28390609/rewriting-a-match-in-coq)\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570 `f` \u3092\u5b9a\u7fa9\u3057\u3066\u3001\u8a3c\u660e\u306e\u9014\u4e2d\u3067\u5b9a\u7fa9\u306b\u7f6e\u304d\u63db\u3048\u305f\u3044\u3068\u3057\u307e\u3059\u3002\n\n```Coq\nDefinition g (x:nat) := x.\nFixpoint f (x : nat) := if g x is y.+1 then (if x is z.+1 then f z else 1) else 0.\n\nLemma test : forall (x : nat), g x = O -> f x = O.\nProof.\n  move=> x.\n```\n\n```\n1 subgoal, subgoal 1 (ID 7)\n  \n  x : nat\n  ============================\n  g x = 0 -> f x = 0\n```\n\n\u3053\u3053\u3067 `rewrite /f` \u3059\u308b\u3068\u3001 `fix` \u304c\u73fe\u308c\u3066\u305d\u306e\u5f8c\u306e\u8a3c\u660e\u304c\u96e3\u3057\u304f\u306a\u308a\u307e\u3059\u3002\n\n```\n1 subgoal, subgoal 1 (ID 8)\n  \n  x : nat\n  ============================\n  g x = 0 ->\n  (fix f (x0 : nat) : nat :=\n     match g x0 with\n     | 0 => 0\n     | _.+1 => match x0 with\n               | 0 => 1\n               | z.+1 => f z\n               end\n     end) x = 0\n```\n\n\u305d\u3053\u3067\u95a2\u6570 `f` \u3092 `Function` \u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```Coq\nFunction f (x : nat) := if g x is y.+1 then (if x is z.+1 then f z else 1) else 0.\n```\n\n\u3059\u308b\u3068\u3001`f` \u306e\u5b9a\u7fa9\u3068\u5171\u306b6\u3064\u306e\u88dc\u984c\u304c\u81ea\u52d5\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n```\nf is defined\nf is recursively defined (decreasing on 1st argument)\nf_equation is defined\nf_ind is defined\nf_rec is defined\nf_rect is defined\nR_f_correct is defined\nR_f_complete is defined\n```\n\n\u3053\u306e\u3046\u3061 `f_equation` \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u88dc\u984c\u3067\u3059\u3002\n\n```Coq\nf_equation\n     : forall x : nat,\n       f x = match g x with\n             | 0 => 0\n             | _.+1 => match x with\n                       | 0 => 1\n                       | z.+1 => f z\n                       end\n             end\n```\n\n\n`rewrite f_equation` \u3059\u308b\u3068\u3001\u7d20\u76f4\u306b\u5b9a\u7fa9\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u308c\u307e\u3059\u3002\n\n```\n1 subgoal, subgoal 1 (ID 255)\n  \n  x : nat\n  ============================\n  g x = 0 -> match g x with\n             | 0 => 0\n             | _.+1 => match x with\n                       | 0 => 1\n                       | z.+1 => f z\n                       end\n             end = 0\n```\n\n\u5f8c\u306f `rewrite /g => -> //.` \u3067\u7121\u4e8b\u7d42\u4e86\u3002\n\n`Function` \u306f\u66f8\u304d\u63db\u3048\u306e\u4ed6\u306b\u3082\u95a2\u6570\u5b9a\u7fa9\u304b\u3089\u5065\u5168\u6027\u3068\u5b8c\u5168\u6027\u306e\u5b9a\u7406\u3092\u81ea\u52d5\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3061\u3089\u306f\u3069\u3046\u3084\u3089\u4e0a\u624b\u304f\u3044\u304f\u5834\u5408\u3068\u3044\u304b\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\n# \u307e\u3068\u3081\n\n* \u30d7\u30ed\u30b0\u30e9\u30e0\u8ab2\u984c\u3092Coq\u3067\u5b9f\u88c5\u3057\u3001\u554f\u984c\u3092\u5b9a\u5f0f\u5316\u3057\u3001\u305d\u306e\u4ed5\u69d8\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u8a3c\u660e\u3057\u305f\u3002\n* \u3057\u304b\u3057\u305d\u308c\u3092\u3082\u3063\u3066\u5065\u5168\u6027\u306e\u4fdd\u8a3c\u3068\u3057\u3066\u826f\u3044\u304b\u7591\u554f\u304c\u6b8b\u308b\u3002\n* \u8457\u8005\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u305f\u3089\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u3079\u304d\u3067\u306f\u3068\u8003\u3048\u3066\u3044\u308b\u3002\n* Prolog\u306f\u6709\u7528\u3002\u3067\u3082\u5e38\u306b\u5b9f\u884c\u3067\u304d\u308b\u3068\u306f\u9650\u3089\u306a\u3044\u304b\u3089\u3001\u305d\u306e\u6642\u306e\u305f\u3081\u306b\u3001\u3044\u308f\u3086\u308b\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u306e\u540c\u5024\u6027\u3092\u4fdd\u8a3c\u3067\u304d\u305f\u65b9\u304c\u826f\u3044\u3068\u8457\u8005\u306f\u8003\u3048\u3066\u3044\u308b\u3002\n* Vernacular Command `Function` \u306f\u6709\u7528\u3002\u7a4d\u6975\u7684\u306b\u5229\u7528\u3057\u3088\u3046\u3002\n\n\u3053\u3053\u307e\u3067\u8aad\u3093\u3067\u3044\u305f\u3060\u304d\u672c\u5f53\u306b\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\n", "tags": ["Coq", "ssreflect", "\u3069\u3046\u66f8\u304f"]}