{"context": " More than 1 year has passed since last update.C++\u3067\u7c21\u5358\u306b\u4f7f\u3048\u308b\u753b\u50cf\u8aad\u307f\u8fbc\u307f\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u6b32\u3057\u304b\u3063\u305f\u306e\u3067\u3002\n\nOfficial site\nhttp://freeimage.sourceforge.net/\n\n\u5bfe\u5fdc\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\nhttp://freeimage.sourceforge.net/features.html \u306eSUPPORTED FORMAT\u3092\u53c2\u7167\u3002\u6709\u540d\u3069\u3053\u308d\u306f\u4f7f\u3048\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\n#include<iostream>\n#include<FreeImage.h>\n\nint main() {\n    std::cout << \"FreeImage ver. \" << FreeImage_GetVersion() << std::endl;\n    std::cout << FreeImage_GetCopyrightMessage() << std::endl;\n\n    try {\n        // GIF\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\n        auto filename = \"lena_color.gif\";\n        auto image    = std::shared_ptr<FIBITMAP>(\n                            FreeImage_Load(FIF_GIF, filename, GIF_DEFAULT),FreeImage_Unload);\n        if(!image) {\n            throw std::runtime_error(\"Load failed\");\n        }\n\n        // \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\n        auto greyimg = std::shared_ptr<FIBITMAP>(\n                            FreeImage_ConvertToGreyscale(image.get()),  FreeImage_Unload);\n        if(!greyimg) {\n            throw std::runtime_error(\"Convert failed\");\n        }\n\n        // PNG\u3068\u3057\u3066\u4fdd\u5b58\n        if(!FreeImage_Save(FIF_PNG, greyimg.get(), \"convert.png\", PNG_DEFAULT)) {\n            throw std::runtime_error(\"Save failed\");\n        }\n    }\n    catch(std::exception& e) {\n        std::cout << \"exception!\\n\" << e.what() << std::endl;\n    }\n}\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u521d\u671f\u5316(FreeImage_Initialise)\u306f\u52d5\u7684\u30ea\u30f3\u30af\u3059\u308b\u5834\u5408\u306f\u660e\u793a\u7684\u306a\u547c\u3073\u51fa\u3057\u4e0d\u8981\u3002\u9759\u7684\u30ea\u30f3\u30af\u306e\u5834\u5408\u306f\u4e00\u5ea6\u3060\u3051\u547c\u3070\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002FreeImage_DeInitialize\u3082\u540c\u69d8\u3002\nC++\u3067\u7c21\u5358\u306b\u4f7f\u3048\u308b\u753b\u50cf\u8aad\u307f\u8fbc\u307f\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u6b32\u3057\u304b\u3063\u305f\u306e\u3067\u3002\n\n### Official site\nhttp://freeimage.sourceforge.net/\n\n## \u5bfe\u5fdc\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\nhttp://freeimage.sourceforge.net/features.html \u306eSUPPORTED FORMAT\u3092\u53c2\u7167\u3002\u6709\u540d\u3069\u3053\u308d\u306f\u4f7f\u3048\u308b\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\n\n```cpp\n#include<iostream>\n#include<FreeImage.h>\n\nint main() {\n    std::cout << \"FreeImage ver. \" << FreeImage_GetVersion() << std::endl;\n    std::cout << FreeImage_GetCopyrightMessage() << std::endl;\n\n    try {\n        // GIF\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\n        auto filename = \"lena_color.gif\";\n        auto image    = std::shared_ptr<FIBITMAP>(\n                            FreeImage_Load(FIF_GIF, filename, GIF_DEFAULT),FreeImage_Unload);\n        if(!image) {\n            throw std::runtime_error(\"Load failed\");\n        }\n\n        // \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\n        auto greyimg = std::shared_ptr<FIBITMAP>(\n                            FreeImage_ConvertToGreyscale(image.get()),  FreeImage_Unload);\n        if(!greyimg) {\n            throw std::runtime_error(\"Convert failed\");\n        }\n\n        // PNG\u3068\u3057\u3066\u4fdd\u5b58\n        if(!FreeImage_Save(FIF_PNG, greyimg.get(), \"convert.png\", PNG_DEFAULT)) {\n            throw std::runtime_error(\"Save failed\");\n        }\n    }\n    catch(std::exception& e) {\n        std::cout << \"exception!\\n\" << e.what() << std::endl;\n    }\n}\n```\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u521d\u671f\u5316(`FreeImage_Initialise`)\u306f\u52d5\u7684\u30ea\u30f3\u30af\u3059\u308b\u5834\u5408\u306f\u660e\u793a\u7684\u306a\u547c\u3073\u51fa\u3057\u4e0d\u8981\u3002\u9759\u7684\u30ea\u30f3\u30af\u306e\u5834\u5408\u306f\u4e00\u5ea6\u3060\u3051\u547c\u3070\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002`FreeImage_DeInitialize`\u3082\u540c\u69d8\u3002\n", "tags": ["C++", "\u753b\u50cf\u51e6\u7406"]}