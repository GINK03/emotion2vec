{"context": "\u524d\u56de\u306f\u3001\u6700\u5c0f\u69cb\u6210\u3067\u306f\u3058\u3081\u308bElm Architecture\u3068\u3044\u3046\u30bf\u30a4\u30c8\u30eb\u306e\u30dd\u30b9\u30c8\u3092\u6295\u7a3f\u3057\u307e\u3057\u305f\u3002\n\u6700\u5c0f\u69cb\u6210\u3067\u306f\u3058\u3081\u308bElm Architecture\n\u3053\u3053\u3067\u306f\u3001button\u95a2\u6570\u3092\u4f7f\u3063\u305f\u3001\u7c21\u5358\u306a\u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u751f\u6210\u3057\u307e\u3057\u305f\u3002\nElm Architecure\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001\u4ed6\u306b\u3082\u8c4a\u5bcc\u306a\u4f8b\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306fElm\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3064\u3044\u3066\u3002\nText Fields - An Introduction to Elm\n\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u7b49\u306f\u3001\u524d\u56de\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u77e5\u8b58\n\ninput\n\u30c6\u30ad\u30b9\u30c8\u306e\u5165\u529b\u306binput\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002input\u306fHtml\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u5c5e\u3057\u3066\u3044\u307e\u3059\u3002\nHtml.input - Elm packages\ninput\u95a2\u6570\u306f\u3001Attribute\u578b\u306e\u30ea\u30b9\u30c8\u3068Html\u578b\u306e\u30ea\u30b9\u30c8\u3092\u8981\u6c42\u3057\u307e\u3059\u3002\n\nonInput\nupdate\u306e\u30d5\u30c3\u30af\u3068\u3057\u3066\u3001onInput\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002Html.Events\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u5c5e\u3057\u307e\u3059\u3002\nHtml.Events.onInput - Elm packages\nevent.target.value\u3092String\u3068\u3057\u3066\u53d6\u5f97\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u3001input\u306b\u6e21\u3057\u3066\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n\u30b3\u30fc\u30c9\n\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u304c\u3053\u3061\u3089\u3002\n\nimport Html exposing (Html, Attribute, div, input, text)\nimport Html.App as App\nimport Html.Attributes exposing (..)\nimport Html.Events exposing (onInput)\nimport String\n\nmain =\n  App.beginnerProgram { model = model, view = view, update = update }\n\n-- Model\n\ntype alias Model =\n  { content: String\n\n  }\n\nmodel : Model\nmodel =\n  { content = \"\" }\n\n-- Update\n\ntype Msg\n  = Change String\n\nupdate : Msg -> Model -> Model\n\nupdate msg model =\u3000-- \u4eca\u56de\u3001msg\u306b\u306fonInput\u304b\u3089String\u306e\u5165\u529b\u5024\u304c\u6e21\u3055\u308c\u308b\n  case msg of\n    Change newContent ->\n      { model | content = newContent }\n\n-- View\n\nview : Model -> Html Msg\nview model =\n  div []\n     -- onInput\u306f\u5165\u529b\u3054\u3068\u306bvalue\u3092update\u306eChange\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u6e21\u3059\u3002\n    [ input [ placeholder \"Text to reverse\", onInput Change] []\n    , div [] [ text (String.reverse model.content) ]\n    ]\n\n\u524d\u56de\u306f\u3001\u6700\u5c0f\u69cb\u6210\u3067\u306f\u3058\u3081\u308bElm Architecture\u3068\u3044\u3046\u30bf\u30a4\u30c8\u30eb\u306e\u30dd\u30b9\u30c8\u3092\u6295\u7a3f\u3057\u307e\u3057\u305f\u3002\n\n[\u6700\u5c0f\u69cb\u6210\u3067\u306f\u3058\u3081\u308bElm Architecture](http://qiita.com/chuck0523/items/610cbc5039b7f7db1eee)\n\n\u3053\u3053\u3067\u306f\u3001button\u95a2\u6570\u3092\u4f7f\u3063\u305f\u3001\u7c21\u5358\u306a\u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u751f\u6210\u3057\u307e\u3057\u305f\u3002\n\nElm Architecure\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001\u4ed6\u306b\u3082\u8c4a\u5bcc\u306a\u4f8b\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306fElm\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3064\u3044\u3066\u3002\n\n[Text Fields - An Introduction to Elm](http://guide.elm-lang.org/architecture/user_input/text_fields.html)\n\n\n\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u7b49\u306f\u3001\u524d\u56de\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u77e5\u8b58\n## input\n\n\u30c6\u30ad\u30b9\u30c8\u306e\u5165\u529b\u306binput\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002input\u306fHtml\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u5c5e\u3057\u3066\u3044\u307e\u3059\u3002\n\n[Html.input - Elm packages](http://package.elm-lang.org/packages/elm-lang/html/1.0.0/Html#input)\n\ninput\u95a2\u6570\u306f\u3001Attribute\u578b\u306e\u30ea\u30b9\u30c8\u3068Html\u578b\u306e\u30ea\u30b9\u30c8\u3092\u8981\u6c42\u3057\u307e\u3059\u3002\n\n## onInput\n\nupdate\u306e\u30d5\u30c3\u30af\u3068\u3057\u3066\u3001onInput\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002Html.Events\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u5c5e\u3057\u307e\u3059\u3002\n\n[Html.Events.onInput - Elm packages](http://package.elm-lang.org/packages/elm-lang/html/1.0.0/Html-Events#onInput)\n\nevent.target.value\u3092String\u3068\u3057\u3066\u53d6\u5f97\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u3001input\u306b\u6e21\u3057\u3066\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n\n# \u30b3\u30fc\u30c9\n\n\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u304c\u3053\u3061\u3089\u3002\n\n\n```hs\n\nimport Html exposing (Html, Attribute, div, input, text)\nimport Html.App as App\nimport Html.Attributes exposing (..)\nimport Html.Events exposing (onInput)\nimport String\n\nmain =\n  App.beginnerProgram { model = model, view = view, update = update }\n\n-- Model\n\ntype alias Model =\n  { content: String\n\n  }\n\nmodel : Model\nmodel =\n  { content = \"\" }\n\n-- Update\n\ntype Msg\n  = Change String\n\nupdate : Msg -> Model -> Model\n\nupdate msg model =\u3000-- \u4eca\u56de\u3001msg\u306b\u306fonInput\u304b\u3089String\u306e\u5165\u529b\u5024\u304c\u6e21\u3055\u308c\u308b\n  case msg of\n    Change newContent ->\n      { model | content = newContent }\n\n-- View\n\nview : Model -> Html Msg\nview model =\n  div []\n     -- onInput\u306f\u5165\u529b\u3054\u3068\u306bvalue\u3092update\u306eChange\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u6e21\u3059\u3002\n    [ input [ placeholder \"Text to reverse\", onInput Change] []\n    , div [] [ text (String.reverse model.content) ]\n    ]\n```\n\n", "tags": ["Elm"]}