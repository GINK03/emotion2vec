{"context": "\n\n\u958b\u767a\u74b0\u5883\n\nXCode8.1\nSwift3\n\n\n\u76f8\u5909\u308f\u3089\u305agif\u3067\u306f\u3061\u3087\u3063\u3068\u308f\u304b\u308a\u3065\u3089\u3044\u306e\u3067\u3059\u304c\u3001\u30bf\u30c3\u30c1\u306e\u52d5\u304d\u306b\u9023\u52d5\u3057\u3066\u56de\u308a\u307e\u3059\u3002\n\u4e00\u3064\u3060\u3051\u30aa\u30ec\u30f3\u30b8\u8272\u306a\u306e\u306f\u56de\u3063\u3066\u308b\u306e\u304b\u898b\u3048\u8f9b\u304b\u3063\u305f\u306e\u3067\u3002\uff08\u4f55\u3067\u30aa\u30ec\u30f3\u30b8\u306a\u306e\u304b\u3068\u3044\u3046\u3068\u3001\u610f\u5473\u306f\u306a\u3044\u3067\u3059\u3001\u306f\u3044\uff09\ngithub\u3078\u306e\u30ea\u30f3\u30af\u306f\u4ee5\u4e0b\nDaialAnimationSample\n\n\u30bf\u30c3\u30c1\u306e\u79fb\u52d5\u5206\u3092\u56de\u8ee2\u89d2\u5ea6\u306b\u5909\u63db\u3059\u308b\u3088\u3046\u306b\u3059\u308b\n\u5177\u4f53\u7684\u306b\u306f\n1. \u6700\u521d\u306e\u30bf\u30c3\u30c1\u306e\u5ea7\u6a19A(x1, y1)\u3068\u5186\u306e\u4e2d\u5fc3\u5ea7\u6a19C(xc, xy)\u306e\u8ddd\u96e2\uff08=\u534a\u5f84)r1\u3092\u6e2c\u308b\n2. \u6b21\u306e\u30bf\u30c3\u30c1\u306e\u5ea7\u6a19B(x2, y2)\u3068\u5186\u306e\u4e2d\u5fc3\u5ea7\u6a19C(cx, cy)\u306e\u8ddd\u96e2(=\u534a\u5f84)r2\u3092\u6e2c\u308b\n3. r1\u3068r2\u306e\u6bd4\u7387hiritu\u3092\u6e2c\u308b\n4. \u5ea7\u6a19B\u306bhiritu\u3092\u639b\u3051\u3066r1\u306e\u5186\u5468\u4e0a\u306e\u5ea7\u6a19B'\u3092\u6e2c\u308b\n5. A\u3068B'\u306e\u8ddd\u96e2\u3092\u30d4\u30bf\u30b4\u30e9\u30b9\u306e\u5b9a\u7406\u3092\u5229\u7528\u3057\u3066\u659c\u8fbah\u3068\u3057\u3066\u6e2c\u308b\n6. h\u306br1/(\u56de\u305d\u3046\u3068\u3057\u3066\u3044\u308b\u5186\u306e\u534a\u5f84)r0\u3092\u639b\u3051\u308b\n7. \u659c\u8fba\u3092r0\u3001\u9ad8\u3055\u3092h/2\u3068\u3057\u3066sin\u03b8(=h/2 / r0)\u3067\u6c42\u3081\u308b\u3002\u305d\u308c\u306e\uff12\u500d\u304c\u56de\u8ee2\u89d2\u5ea6\u306b\u306a\u308b\n\u4e0b\u306b\u56f3\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u304c\u3001\u3061\u3087\u3063\u3068\u5206\u304b\u308a\u8f9b\u3044\u3067\u3059\u3002\u3046\u30fc\u3080\u3001\u753b\u50cf\u3092\u4f5c\u308b\u6280\u8853\u3082\u5fc5\u8981\u3060\u306a\u30fb\u30fb\u30fb\n\u203b\u9ed2\u3044\u5186\u304c\u56de\u305d\u3046\u3068\u3057\u3066\u3044\u308b\u5186\n\n\n\u6642\u8a08\u56de\u308a\u304b\u53cd\u5bfe\u304b\n\u6a2a\u65b9\u5411\u306b\u30b9\u30ef\u30a4\u30d7\u3057\u305f\u3089\u6642\u8a08\u56de\u308a\u304b\u3001\u9006\u304b\u306fy\u5ea7\u6a19\u306b\u3088\u308a\u307e\u3059\u3002\n\u53f3\u5411\u3051\u306b\u30b9\u30ef\u30a4\u30d7\u3057\u3066\u3001y\u5ea7\u6a19\u304c\u4e2d\u5fc3\u70b9\u3088\u308a\u4e0a\u306a\u3089\u6642\u8a08\u56de\u308a\u3001\u4e0b\u306a\u3089\u9006\u3002\n\u7e26\u65b9\u5411\u306b\u30b9\u30ef\u30a4\u30d7\u3057\u305f\u6642\u306e\u5411\u304d\u306fx\u5ea7\u6a19\u306b\u3088\u308a\u307e\u3059\u3002\n\u4e0b\u306b\u30b9\u30ef\u30a4\u30d7\u3057\u3066\u3001x\u5ea7\u6a19\u304c\u4e2d\u5fc3\u70b9\u3088\u308a\u53f3\u306a\u3089\u6642\u8a08\u56de\u308a\u3001\u5de6\u306a\u3089\u9006\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3059\u3002\n\u4ee5\u4e0b\u306b\u89d2\u5ea6\u3068\u5411\u304d\u3092\u7b97\u51fa\u3057\u3066\u308b\u90e8\u5206\u3092\u629c\u304d\u51fa\u3057\u305f\u3002\n\n\n    //\u56de\u8ee2\u6f14\u51fa\n    func rotate(_ point : CGPoint, fin : Bool) {\n        //\u659c\u8fba\u306e\u9577\u3055\u3092\u7b97\u51fa\uff08\u534a\u5f84\uff09\n        let radius = getHypotenuse(_centerPoint, point2: point)\n        //\u6700\u521d\u306e\u534a\u5f84\u3068tmp\u306e\u534a\u5f84\u306e\u6bd4\u7387\n        let hiritu = radius / _radius\n        //\u6700\u521d\u306e\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u308b\u5186\u5468\u4e0a\u306bpoint\u306e\u5ea7\u6a19\u3092\u6bd4\u7387\u3067\u5272\u3063\u305f\u3082\u306e\u3092\u30bb\u30c3\u30c8\n        let tmpPoint = CGPoint(x: (point.x * hiritu), y: (point.y * hiritu))\n        //\u524d\u56de\u3068\u4eca\u56de\u306e\u30dd\u30a4\u30f3\u30c8\u306e\u8ddd\u96e2\uff08\u659c\u8fba\uff09\u3092\u7b97\u51fa\u3057\u3066\u5bfe\u8c61\u306e\u5186\u5468\u4e0a\u3067\u4f5c\u3063\u305f\u659c\u8fba\u306b\u6bd4\u7387\u3092\u76f4\u3059\n        let base = getHypotenuse(_previousPoint, point2: tmpPoint) * (_radius/_orignalRadius)\n\n        if(base != 0){\n            //\u65b9\u5411\n            var clockwise = true\n\n            //270\u301c360\u5ea6\n            if(_previousPoint.x > _centerPoint.x && _previousPoint.y < _centerPoint.y) {\n                //\n                if(point.x == _previousPoint.x) {\n                    clockwise = point.y > _previousPoint.y ? true : false\n                } else {\n                    clockwise = point.x > _previousPoint.x ? true : false\n                }\n                //0\u301c90\u5ea6\n            } else if(_previousPoint.x > _centerPoint.x && _previousPoint.y > _centerPoint.y) {\n                if(point.x == _previousPoint.x) {\n                    clockwise = point.y > _previousPoint.y ? true : false\n                } else {\n                    clockwise = point.x > _previousPoint.x ? false : true\n                }\n                //90\u301c180\u5ea6\n            } else if(_previousPoint.x < _centerPoint.x && _previousPoint.y > _centerPoint.y) {\n                if(point.x == _previousPoint.x) {\n                    clockwise = point.y > _previousPoint.y ? false : true\n                } else {\n                    clockwise = point.x > _previousPoint.x ? false : true\n                }\n                //180\u301c270\u5ea6\n            } else {\n                if(point.x == _previousPoint.x) {\n                    clockwise = point.y > _previousPoint.y ? false : true\n                } else {\n                    clockwise = point.x > _previousPoint.x ? true : false\n                }\n            }\n            //sin\u306e\u8a08\u7b97\u3067\u30e9\u30b8\u30a2\u30f3\u3092\u7b97\u51fa\n            let radian = (1/_orignalRadius)*(base/2) * 2\n\n            if(radian > 0) {\n                //\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n                rotateAnimeation(radian, clockwise: clockwise)\n             }\n        }\n\n        _previousPoint = point\n        _radius = getHypotenuse(_centerPoint, point2: point)\n    }\n\n\n    //\u659c\u8fba\u7b97\u51fa\n    func getHypotenuse(_ point1 : CGPoint, point2 : CGPoint) -> CGFloat {\n        let  radius = CGFloat(sqrt(pow(Double(point2.x - point1.x), 2) + pow(Double(point2.y - point1.y),2)))\n\n        return radius\n    }\n\n\u3082\u3063\u3068\u3046\u307e\u304f\u51fa\u6765\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3046\u304c\u3001\u716e\u8a70\u307e\u3063\u305f\u306e\u3067\u3053\u3053\u3089\u8fba\u3067\u4e00\u65e6\u7de0\u3081\u308b\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001\u6b21\u306f\u3053\u306e\u30c0\u30a4\u30e4\u30eb\u306b\u52a0\u901f\u3068\u6e1b\u901f\u3092\u52a0\u3048\u3066\u307f\u305f\u3044\u3002\n\n### \u958b\u767a\u74b0\u5883\n\n+ XCode8.1\n+ Swift3\n\n\n\n![20161031.gif](https://qiita-image-store.s3.amazonaws.com/0/40693/c79344d1-20de-cb11-34ff-9952bce720e4.gif \"20161031.gif\")\n\n\n\u76f8\u5909\u308f\u3089\u305agif\u3067\u306f\u3061\u3087\u3063\u3068\u308f\u304b\u308a\u3065\u3089\u3044\u306e\u3067\u3059\u304c\u3001\u30bf\u30c3\u30c1\u306e\u52d5\u304d\u306b\u9023\u52d5\u3057\u3066\u56de\u308a\u307e\u3059\u3002\n\u4e00\u3064\u3060\u3051\u30aa\u30ec\u30f3\u30b8\u8272\u306a\u306e\u306f\u56de\u3063\u3066\u308b\u306e\u304b\u898b\u3048\u8f9b\u304b\u3063\u305f\u306e\u3067\u3002\uff08\u4f55\u3067\u30aa\u30ec\u30f3\u30b8\u306a\u306e\u304b\u3068\u3044\u3046\u3068\u3001\u610f\u5473\u306f\u306a\u3044\u3067\u3059\u3001\u306f\u3044\uff09\ngithub\u3078\u306e\u30ea\u30f3\u30af\u306f\u4ee5\u4e0b\n\n[DaialAnimationSample](https://github.com/rnsm504/DaialAnimationSample)\n\n\n#### \u30bf\u30c3\u30c1\u306e\u79fb\u52d5\u5206\u3092\u56de\u8ee2\u89d2\u5ea6\u306b\u5909\u63db\u3059\u308b\u3088\u3046\u306b\u3059\u308b\n\n\u5177\u4f53\u7684\u306b\u306f\n1. \u6700\u521d\u306e\u30bf\u30c3\u30c1\u306e\u5ea7\u6a19A(x1, y1)\u3068\u5186\u306e\u4e2d\u5fc3\u5ea7\u6a19C(xc, xy)\u306e\u8ddd\u96e2\uff08=\u534a\u5f84)r1\u3092\u6e2c\u308b\n2. \u6b21\u306e\u30bf\u30c3\u30c1\u306e\u5ea7\u6a19B(x2, y2)\u3068\u5186\u306e\u4e2d\u5fc3\u5ea7\u6a19C(cx, cy)\u306e\u8ddd\u96e2(=\u534a\u5f84)r2\u3092\u6e2c\u308b\n3. r1\u3068r2\u306e\u6bd4\u7387hiritu\u3092\u6e2c\u308b\n4. \u5ea7\u6a19B\u306bhiritu\u3092\u639b\u3051\u3066r1\u306e\u5186\u5468\u4e0a\u306e\u5ea7\u6a19B'\u3092\u6e2c\u308b\n5. A\u3068B'\u306e\u8ddd\u96e2\u3092\u30d4\u30bf\u30b4\u30e9\u30b9\u306e\u5b9a\u7406\u3092\u5229\u7528\u3057\u3066\u659c\u8fbah\u3068\u3057\u3066\u6e2c\u308b\n6. h\u306br1/(\u56de\u305d\u3046\u3068\u3057\u3066\u3044\u308b\u5186\u306e\u534a\u5f84)r0\u3092\u639b\u3051\u308b\n7. \u659c\u8fba\u3092r0\u3001\u9ad8\u3055\u3092h/2\u3068\u3057\u3066sin\u03b8(=h/2 / r0)\u3067\u6c42\u3081\u308b\u3002\u305d\u308c\u306e\uff12\u500d\u304c\u56de\u8ee2\u89d2\u5ea6\u306b\u306a\u308b\n\n\u4e0b\u306b\u56f3\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u304c\u3001\u3061\u3087\u3063\u3068\u5206\u304b\u308a\u8f9b\u3044\u3067\u3059\u3002\u3046\u30fc\u3080\u3001\u753b\u50cf\u3092\u4f5c\u308b\u6280\u8853\u3082\u5fc5\u8981\u3060\u306a\u30fb\u30fb\u30fb\n\n\u203b\u9ed2\u3044\u5186\u304c\u56de\u305d\u3046\u3068\u3057\u3066\u3044\u308b\u5186\n![\u30a4\u30e1\u30fc\u30b7\u3099002.jpg](https://qiita-image-store.s3.amazonaws.com/0/40693/0dd77b80-a703-180f-45e8-e17f9286d287.jpeg \"\u30a4\u30e1\u30fc\u30b7\u3099002.jpg\")\n\n#### \u6642\u8a08\u56de\u308a\u304b\u53cd\u5bfe\u304b\n\n\u6a2a\u65b9\u5411\u306b\u30b9\u30ef\u30a4\u30d7\u3057\u305f\u3089\u6642\u8a08\u56de\u308a\u304b\u3001\u9006\u304b\u306fy\u5ea7\u6a19\u306b\u3088\u308a\u307e\u3059\u3002\n\u53f3\u5411\u3051\u306b\u30b9\u30ef\u30a4\u30d7\u3057\u3066\u3001y\u5ea7\u6a19\u304c\u4e2d\u5fc3\u70b9\u3088\u308a\u4e0a\u306a\u3089\u6642\u8a08\u56de\u308a\u3001\u4e0b\u306a\u3089\u9006\u3002\n\u7e26\u65b9\u5411\u306b\u30b9\u30ef\u30a4\u30d7\u3057\u305f\u6642\u306e\u5411\u304d\u306fx\u5ea7\u6a19\u306b\u3088\u308a\u307e\u3059\u3002\n\u4e0b\u306b\u30b9\u30ef\u30a4\u30d7\u3057\u3066\u3001x\u5ea7\u6a19\u304c\u4e2d\u5fc3\u70b9\u3088\u308a\u53f3\u306a\u3089\u6642\u8a08\u56de\u308a\u3001\u5de6\u306a\u3089\u9006\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u306b\u89d2\u5ea6\u3068\u5411\u304d\u3092\u7b97\u51fa\u3057\u3066\u308b\u90e8\u5206\u3092\u629c\u304d\u51fa\u3057\u305f\u3002\n\n```ViewController\n\n\n    //\u56de\u8ee2\u6f14\u51fa\n    func rotate(_ point : CGPoint, fin : Bool) {\n        //\u659c\u8fba\u306e\u9577\u3055\u3092\u7b97\u51fa\uff08\u534a\u5f84\uff09\n        let radius = getHypotenuse(_centerPoint, point2: point)\n        //\u6700\u521d\u306e\u534a\u5f84\u3068tmp\u306e\u534a\u5f84\u306e\u6bd4\u7387\n        let hiritu = radius / _radius\n        //\u6700\u521d\u306e\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u308b\u5186\u5468\u4e0a\u306bpoint\u306e\u5ea7\u6a19\u3092\u6bd4\u7387\u3067\u5272\u3063\u305f\u3082\u306e\u3092\u30bb\u30c3\u30c8\n        let tmpPoint = CGPoint(x: (point.x * hiritu), y: (point.y * hiritu))\n        //\u524d\u56de\u3068\u4eca\u56de\u306e\u30dd\u30a4\u30f3\u30c8\u306e\u8ddd\u96e2\uff08\u659c\u8fba\uff09\u3092\u7b97\u51fa\u3057\u3066\u5bfe\u8c61\u306e\u5186\u5468\u4e0a\u3067\u4f5c\u3063\u305f\u659c\u8fba\u306b\u6bd4\u7387\u3092\u76f4\u3059\n        let base = getHypotenuse(_previousPoint, point2: tmpPoint) * (_radius/_orignalRadius)\n\n        if(base != 0){\n            //\u65b9\u5411\n            var clockwise = true\n            \n            //270\u301c360\u5ea6\n            if(_previousPoint.x > _centerPoint.x && _previousPoint.y < _centerPoint.y) {\n                //\n                if(point.x == _previousPoint.x) {\n                    clockwise = point.y > _previousPoint.y ? true : false\n                } else {\n                    clockwise = point.x > _previousPoint.x ? true : false\n                }\n                //0\u301c90\u5ea6\n            } else if(_previousPoint.x > _centerPoint.x && _previousPoint.y > _centerPoint.y) {\n                if(point.x == _previousPoint.x) {\n                    clockwise = point.y > _previousPoint.y ? true : false\n                } else {\n                    clockwise = point.x > _previousPoint.x ? false : true\n                }\n                //90\u301c180\u5ea6\n            } else if(_previousPoint.x < _centerPoint.x && _previousPoint.y > _centerPoint.y) {\n                if(point.x == _previousPoint.x) {\n                    clockwise = point.y > _previousPoint.y ? false : true\n                } else {\n                    clockwise = point.x > _previousPoint.x ? false : true\n                }\n                //180\u301c270\u5ea6\n            } else {\n                if(point.x == _previousPoint.x) {\n                    clockwise = point.y > _previousPoint.y ? false : true\n                } else {\n                    clockwise = point.x > _previousPoint.x ? true : false\n                }\n            }\n            //sin\u306e\u8a08\u7b97\u3067\u30e9\u30b8\u30a2\u30f3\u3092\u7b97\u51fa\n            let radian = (1/_orignalRadius)*(base/2) * 2\n            \n            if(radian > 0) {\n                //\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n                rotateAnimeation(radian, clockwise: clockwise)\n             }\n        }\n        \n        _previousPoint = point\n        _radius = getHypotenuse(_centerPoint, point2: point)\n    }\n    \n    \n    //\u659c\u8fba\u7b97\u51fa\n    func getHypotenuse(_ point1 : CGPoint, point2 : CGPoint) -> CGFloat {\n        let  radius = CGFloat(sqrt(pow(Double(point2.x - point1.x), 2) + pow(Double(point2.y - point1.y),2)))\n        \n        return radius\n    }\n```\n\n\u3082\u3063\u3068\u3046\u307e\u304f\u51fa\u6765\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3046\u304c\u3001\u716e\u8a70\u307e\u3063\u305f\u306e\u3067\u3053\u3053\u3089\u8fba\u3067\u4e00\u65e6\u7de0\u3081\u308b\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001\u6b21\u306f\u3053\u306e\u30c0\u30a4\u30e4\u30eb\u306b\u52a0\u901f\u3068\u6e1b\u901f\u3092\u52a0\u3048\u3066\u307f\u305f\u3044\u3002\n\n\n", "tags": ["animation", "Swift"]}