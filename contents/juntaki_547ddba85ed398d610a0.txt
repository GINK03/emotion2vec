{"context": "Linux\u306e\u30b7\u30b0\u30ca\u30eb\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u8abf\u3079\u305f\u3002\n\n\u30ab\u30fc\u30cd\u30eb\u30d0\u30fc\u30b8\u30e7\u30f3\nv4.5.0\n\n\u30b7\u30b0\u30ca\u30eb\u306e\u4ed5\u7d44\u307f\n\u666e\u901a\u306e\u30b7\u30b0\u30ca\u30eb\u3068\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30b7\u30b0\u30ca\u30eb\u306e\uff12\u7a2e\u985e\u304c\u3042\u308b\u3002\n\u666e\u901a\u306e\u30b7\u30b0\u30ca\u30eb\u306f\u540c\u3058\u7a2e\u985e\u306e\u30b7\u30b0\u30ca\u30eb\u3092\uff12\u56de\u9001\u3063\u3066\u3082\uff11\u5ea6\u3057\u304b\u914d\u4fe1\u3055\u308c\u306a\u3044\u3053\u3068\u304c\u3042\u308b\u304c\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30b7\u30b0\u30ca\u30eb\u306f\u30ad\u30e5\u30fc\u306b\u3064\u306a\u304c\u3063\u3066\u5fc5\u305a\u751f\u6210\u3057\u305f\u56de\u6570\u5206\u5c4a\u304f\uff08\u30e1\u30e2\u30ea\u304c\u8db3\u308a\u3066\u3044\u308c\u3070\uff09\n\u30b7\u30b0\u30ca\u30eb\u306f\u751f\u6210\u3068\u914d\u4fe1\u3068\u3044\u3046\uff12\u6bb5\u968e\u3092\u8e0f\u3093\u3067\u5c4a\u304f\u3002\n\u751f\u6210\u306f\u30b7\u30b0\u30ca\u30eb\u767a\u4fe1\u5074\u30d7\u30ed\u30bb\u30b9\u304c\u53d7\u4fe1\u5074\u306e\u30d7\u30ed\u30bb\u30b9\u306etask_struct->pending\u306b\u5bfe\u3057\u3066\u4fdd\u7559\u4e2d\u306e\u30ad\u30e5\u30fc\u3092\u3064\u306a\u3052\u308b\u64cd\u4f5c\u306e\u3053\u3068\u3067\u3001\n\u914d\u4fe1\u306f\u53d7\u4fe1\u5074\u306e\u30d7\u30ed\u30bb\u30b9\u306eschedule()\u306e\u5ef6\u9577\u3067do_signal\u3092\u547c\u3073\u51fa\u3059\u64cd\u4f5c\u306e\u3053\u3068\u3067\u3042\u308b\u3002\n\u6761\u4ef6\u5206\u5c90\u304c\u8907\u96d1\u306b\u306a\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306f\u666e\u901a\u306e\u30b7\u30b0\u30ca\u30eb\u306e\u5834\u5408\u3060\u3051\u3092\u307f\u308b\u3002\n\n\u30b7\u30b0\u30ca\u30eb\u751f\u6210\n__send_signal()\u3067\u751f\u6210\u3055\u308c\u308b\u3002\n\u666e\u901a\u306e\u30b7\u30b0\u30ca\u30eb\u304c\u3059\u3067\u306b\u4fdd\u7559\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306flegacy_queue()\u3067\u78ba\u8a8d\u3059\u308b\u3002\n\u5f15\u6570\u306esignals\u304c\u73fe\u5728\u4fdd\u7559\u3055\u308c\u3066\u3044\u308b\u30b7\u30b0\u30ca\u30eb\u306e\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u3067\u3042\u308b\u3002\nstatic inline int legacy_queue(struct sigpending *signals, int sig)\n{\n    return (sig < SIGRTMIN) && sigismember(&signals->signal, sig);\n}\n\n\u307e\u3060\u4fdd\u7559\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u6b21\u306e\u51e6\u7406\u3067\u30b7\u30b0\u30ca\u30eb\u304c\u30ad\u30e5\u30fc\u306b\u7e4b\u304c\u308c\u305d\u306e\u60c5\u5831\u3092info\u306b\u683c\u7d0d\u3059\u308b\u3002\nSI_USER\u306f\u30b7\u30b0\u30ca\u30eb\u306e\u9001\u4fe1\u8005\u304c\u30e6\u30fc\u30b6\u30d7\u30ed\u30bb\u30b9\u306e\u5834\u5408\u3001SI_KERNEL\u306f\u30ab\u30fc\u30cd\u30eb\u304b\u3089\u3002\n\u30ad\u30e5\u30fc\u306b\u7e4b\u3052\u3089\u308c\u305f\u3089\u3001sigaddset()\u3067\u4fdd\u7559\u6e08\u307f\u306e\u30d3\u30c3\u30c8\u3092\u7acb\u3066\u308b\u3002\n    q = __sigqueue_alloc(sig, t, GFP_ATOMIC | __GFP_NOTRACK_FALSE_POSITIVE,\n        override_rlimit);\n    if (q) {\n        list_add_tail(&q->list, &pending->list);\n        switch ((unsigned long) info) {\n        case (unsigned long) SEND_SIG_NOINFO:\n            q->info.si_signo = sig;\n            q->info.si_errno = 0;\n            q->info.si_code = SI_USER;\n            q->info.si_pid = task_tgid_nr_ns(current,\n                            task_active_pid_ns(t));\n            q->info.si_uid = from_kuid_munged(current_user_ns(), current_uid());\n            break;\n        case (unsigned long) SEND_SIG_PRIV:\n            q->info.si_signo = sig;\n            q->info.si_errno = 0;\n            q->info.si_code = SI_KERNEL;\n            q->info.si_pid = 0;\n            q->info.si_uid = 0;\n            break;\n        default:\n            copy_siginfo(&q->info, info);\n            if (from_ancestor_ns)\n                q->info.si_pid = 0;\n            break;\n        }\n\n        userns_fixup_signal_uid(&q->info, t);\n\n    } else if (!is_si_special(info)) {\n\n...\n\nout_set:\n    signalfd_notify(t, sig);\n    sigaddset(&pending->signal, sig);\n    complete_signal(sig, t, group);\nret:\n    trace_signal_generate(sig, info, t, group, result);\n    return ret;\n\n\n\u30b7\u30b0\u30ca\u30eb\u306e\u914d\u4fe1\n\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u304b\u3089\u30e6\u30fc\u30b6\u30e2\u30fc\u30c9\u306b\u623b\u308b\u3068\u304d\u3001do_signal()\u304c\u547c\u3073\u51fa\u3055\u308cget_signal()\u3067\u4fdd\u7559\u4e2d\u306e\u30b7\u30b0\u30ca\u30eb\u30cf\u30f3\u30c9\u30e9\u3092\u51e6\u7406\u3059\u308b\u3002\u30cf\u30f3\u30c9\u30e9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001handle_signal()\u3067\u5b9f\u884c\u3055\u308c\u308b\u3002\u30e6\u30fc\u30b6\u30e2\u30fc\u30c9\u3078\u623b\u308b\u3068\u304d\u306e\u30ec\u30b8\u30b9\u30bf\u60c5\u5831\u306a\u3069\u3092\u5dee\u3057\u66ff\u3048\u308b\u306e\u3060\u308d\u3046\u3068\u601d\u3046\u3002\u8a73\u7d30\u306f\u6b21\u56de\u8a18\u4e8b\u53c2\u7167\u3002\nvoid do_signal(struct pt_regs *regs)\n{\n    struct ksignal ksig;\n\n    if (get_signal(&ksig)) {\n        /* Whee! Actually deliver the signal.  */\n        handle_signal(&ksig, regs);\n        return;\n    }\n\n...\n\n\n\u30d7\u30ed\u30bb\u30b9\u3054\u3068\u306e\u30b7\u30b0\u30ca\u30eb\u306e\u72b6\u614b\u3068\u8a2d\u5b9a\u306e\u78ba\u8a8d\n\u5404\u30d7\u30ed\u30bb\u30b9\u3054\u3068\u306e\u30b7\u30b0\u30ca\u30eb\u306e\u4fdd\u7559\u72b6\u614b\u3001\u30d6\u30ed\u30c3\u30af\u306a\u3069\u306e\u8a2d\u5b9a\u306f/proc/[pid]/status\u304b\u3089\u78ba\u8a8d\u3067\u304d\u308b\u3002\nSigPnd\u304b\u3089SigCgt\u306f\u30b7\u30b0\u30ca\u30eb\u756a\u53f7\u306e\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u4f8b\u3048\u3070SigIgn\u306f\uff12\u9032\u6570\u306b\u3059\u308b\u3068\u3001100000000000001000000000000\u306a\u306e\u3067\u300113\u306827\u306e\u30b7\u30b0\u30ca\u30eb\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u3066\u3044\u308b\u3002\njuntaki@lab% cat /proc/1342/status\nName:   emacs\nState:  S (sleeping)\nTgid:   1342\nNgid:   0\n\n...\n\nThreads:        2 #\u30b9\u30ec\u30c3\u30c9\u6570\nSigQ:   1/15922 #\u30ad\u30e5\u30fc\u306e\u9577\u3055\u3068\u4e0a\u9650\nSigPnd: 0000000000000000 \u4fdd\u7559\u4e2d\uff1atask->pending.signal\nShdPnd: 0000000000000000 task->signal->shared_pending.signal\nSigBlk: 0000000000000000 \u30d6\u30ed\u30c3\u30af\u306e\u30de\u30b9\u30af\uff1atask->blocked\nSigIgn: 0000000004001000 \u30cf\u30f3\u30c9\u30e9\u304cSIG_IGN\uff1atask->sighand->action->sa.sa_handler\nSigCgt: 00000001db816eff \u30b7\u30b0\u30ca\u30eb\u30cf\u30f3\u30c9\u30e9\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\n\n...\n\n\n\u307e\u3068\u3081\n\u30b7\u30b0\u30ca\u30eb\u306f\u751f\u6210\u3068\u914d\u4fe1\u306e\uff12\u6bb5\u968e\u3067\u5b9f\u73fe\u3055\u308c\u3066\u3044\u308b\u3002\n\u751f\u6210\u306f\u6bd4\u8f03\u7684\u7c21\u5358\u306a\u69cb\u9020\u4f53\u306e\u64cd\u4f5c\u3060\u3051\u3060\u304c\u3001\u914d\u4fe1\u306f\u30d7\u30ed\u30bb\u30b9\u5207\u308a\u66ff\u3048\u306a\u3069\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u4f9d\u5b58\u306e\u90e8\u5206\u304c\u3042\u308b\u305f\u3081\u3001\u3084\u3084\u8907\u96d1\u3060\u3063\u305f\u3002\n\u6b21\u56de\u306f\u914d\u4fe1\u306e\u7b87\u6240\u3092\u3082\u3046\u5c11\u3057\u8aad\u307f\u305f\u3044\u3002\n\nLinux\u306e\u30b7\u30b0\u30ca\u30eb\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u8abf\u3079\u305f\u3002\n\n## \u30ab\u30fc\u30cd\u30eb\u30d0\u30fc\u30b8\u30e7\u30f3\n\nv4.5.0\n\n## \u30b7\u30b0\u30ca\u30eb\u306e\u4ed5\u7d44\u307f\n\n\u666e\u901a\u306e\u30b7\u30b0\u30ca\u30eb\u3068\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30b7\u30b0\u30ca\u30eb\u306e\uff12\u7a2e\u985e\u304c\u3042\u308b\u3002\n\u666e\u901a\u306e\u30b7\u30b0\u30ca\u30eb\u306f\u540c\u3058\u7a2e\u985e\u306e\u30b7\u30b0\u30ca\u30eb\u3092\uff12\u56de\u9001\u3063\u3066\u3082\uff11\u5ea6\u3057\u304b\u914d\u4fe1\u3055\u308c\u306a\u3044\u3053\u3068\u304c\u3042\u308b\u304c\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30b7\u30b0\u30ca\u30eb\u306f\u30ad\u30e5\u30fc\u306b\u3064\u306a\u304c\u3063\u3066\u5fc5\u305a\u751f\u6210\u3057\u305f\u56de\u6570\u5206\u5c4a\u304f\uff08\u30e1\u30e2\u30ea\u304c\u8db3\u308a\u3066\u3044\u308c\u3070\uff09\n\n\u30b7\u30b0\u30ca\u30eb\u306f\u751f\u6210\u3068\u914d\u4fe1\u3068\u3044\u3046\uff12\u6bb5\u968e\u3092\u8e0f\u3093\u3067\u5c4a\u304f\u3002\n\u751f\u6210\u306f\u30b7\u30b0\u30ca\u30eb\u767a\u4fe1\u5074\u30d7\u30ed\u30bb\u30b9\u304c\u53d7\u4fe1\u5074\u306e\u30d7\u30ed\u30bb\u30b9\u306e`task_struct->pending`\u306b\u5bfe\u3057\u3066\u4fdd\u7559\u4e2d\u306e\u30ad\u30e5\u30fc\u3092\u3064\u306a\u3052\u308b\u64cd\u4f5c\u306e\u3053\u3068\u3067\u3001\n\u914d\u4fe1\u306f\u53d7\u4fe1\u5074\u306e\u30d7\u30ed\u30bb\u30b9\u306e`schedule()`\u306e\u5ef6\u9577\u3067do_signal\u3092\u547c\u3073\u51fa\u3059\u64cd\u4f5c\u306e\u3053\u3068\u3067\u3042\u308b\u3002\n\n\u6761\u4ef6\u5206\u5c90\u304c\u8907\u96d1\u306b\u306a\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306f\u666e\u901a\u306e\u30b7\u30b0\u30ca\u30eb\u306e\u5834\u5408\u3060\u3051\u3092\u307f\u308b\u3002\n\n## \u30b7\u30b0\u30ca\u30eb\u751f\u6210\n\n`__send_signal()`\u3067\u751f\u6210\u3055\u308c\u308b\u3002\n\n\u666e\u901a\u306e\u30b7\u30b0\u30ca\u30eb\u304c\u3059\u3067\u306b\u4fdd\u7559\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306f`legacy_queue()`\u3067\u78ba\u8a8d\u3059\u308b\u3002\n\u5f15\u6570\u306esignals\u304c\u73fe\u5728\u4fdd\u7559\u3055\u308c\u3066\u3044\u308b\u30b7\u30b0\u30ca\u30eb\u306e\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u3067\u3042\u308b\u3002\n\n~~~\nstatic inline int legacy_queue(struct sigpending *signals, int sig)\n{\n\treturn (sig < SIGRTMIN) && sigismember(&signals->signal, sig);\n}\n~~~\n\n\u307e\u3060\u4fdd\u7559\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u6b21\u306e\u51e6\u7406\u3067\u30b7\u30b0\u30ca\u30eb\u304c\u30ad\u30e5\u30fc\u306b\u7e4b\u304c\u308c\u305d\u306e\u60c5\u5831\u3092info\u306b\u683c\u7d0d\u3059\u308b\u3002\n`SI_USER`\u306f\u30b7\u30b0\u30ca\u30eb\u306e\u9001\u4fe1\u8005\u304c\u30e6\u30fc\u30b6\u30d7\u30ed\u30bb\u30b9\u306e\u5834\u5408\u3001SI_KERNEL\u306f\u30ab\u30fc\u30cd\u30eb\u304b\u3089\u3002\n\u30ad\u30e5\u30fc\u306b\u7e4b\u3052\u3089\u308c\u305f\u3089\u3001sigaddset()\u3067\u4fdd\u7559\u6e08\u307f\u306e\u30d3\u30c3\u30c8\u3092\u7acb\u3066\u308b\u3002\n\n~~~\n\tq = __sigqueue_alloc(sig, t, GFP_ATOMIC | __GFP_NOTRACK_FALSE_POSITIVE,\n\t\toverride_rlimit);\n\tif (q) {\n\t\tlist_add_tail(&q->list, &pending->list);\n\t\tswitch ((unsigned long) info) {\n\t\tcase (unsigned long) SEND_SIG_NOINFO:\n\t\t\tq->info.si_signo = sig;\n\t\t\tq->info.si_errno = 0;\n\t\t\tq->info.si_code = SI_USER;\n\t\t\tq->info.si_pid = task_tgid_nr_ns(current,\n\t\t\t\t\t\t\ttask_active_pid_ns(t));\n\t\t\tq->info.si_uid = from_kuid_munged(current_user_ns(), current_uid());\n\t\t\tbreak;\n\t\tcase (unsigned long) SEND_SIG_PRIV:\n\t\t\tq->info.si_signo = sig;\n\t\t\tq->info.si_errno = 0;\n\t\t\tq->info.si_code = SI_KERNEL;\n\t\t\tq->info.si_pid = 0;\n\t\t\tq->info.si_uid = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcopy_siginfo(&q->info, info);\n\t\t\tif (from_ancestor_ns)\n\t\t\t\tq->info.si_pid = 0;\n\t\t\tbreak;\n\t\t}\n\n\t\tuserns_fixup_signal_uid(&q->info, t);\n\n\t} else if (!is_si_special(info)) {\n\n...\n\nout_set:\n\tsignalfd_notify(t, sig);\n\tsigaddset(&pending->signal, sig);\n\tcomplete_signal(sig, t, group);\nret:\n\ttrace_signal_generate(sig, info, t, group, result);\n\treturn ret;\n~~~\n\n## \u30b7\u30b0\u30ca\u30eb\u306e\u914d\u4fe1\n\n\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u304b\u3089\u30e6\u30fc\u30b6\u30e2\u30fc\u30c9\u306b\u623b\u308b\u3068\u304d\u3001`do_signal()`\u304c\u547c\u3073\u51fa\u3055\u308c`get_signal()`\u3067\u4fdd\u7559\u4e2d\u306e\u30b7\u30b0\u30ca\u30eb\u30cf\u30f3\u30c9\u30e9\u3092\u51e6\u7406\u3059\u308b\u3002\u30cf\u30f3\u30c9\u30e9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001`handle_signal()`\u3067\u5b9f\u884c\u3055\u308c\u308b\u3002\u30e6\u30fc\u30b6\u30e2\u30fc\u30c9\u3078\u623b\u308b\u3068\u304d\u306e\u30ec\u30b8\u30b9\u30bf\u60c5\u5831\u306a\u3069\u3092\u5dee\u3057\u66ff\u3048\u308b\u306e\u3060\u308d\u3046\u3068\u601d\u3046\u3002\u8a73\u7d30\u306f\u6b21\u56de\u8a18\u4e8b\u53c2\u7167\u3002\n\n~~~\nvoid do_signal(struct pt_regs *regs)\n{\n\tstruct ksignal ksig;\n\n\tif (get_signal(&ksig)) {\n\t\t/* Whee! Actually deliver the signal.  */\n\t\thandle_signal(&ksig, regs);\n\t\treturn;\n\t}\n\n...\n~~~\n\n\n## \u30d7\u30ed\u30bb\u30b9\u3054\u3068\u306e\u30b7\u30b0\u30ca\u30eb\u306e\u72b6\u614b\u3068\u8a2d\u5b9a\u306e\u78ba\u8a8d\n\u5404\u30d7\u30ed\u30bb\u30b9\u3054\u3068\u306e\u30b7\u30b0\u30ca\u30eb\u306e\u4fdd\u7559\u72b6\u614b\u3001\u30d6\u30ed\u30c3\u30af\u306a\u3069\u306e\u8a2d\u5b9a\u306f`/proc/[pid]/status`\u304b\u3089\u78ba\u8a8d\u3067\u304d\u308b\u3002\nSigPnd\u304b\u3089SigCgt\u306f\u30b7\u30b0\u30ca\u30eb\u756a\u53f7\u306e\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u4f8b\u3048\u3070SigIgn\u306f\uff12\u9032\u6570\u306b\u3059\u308b\u3068\u3001100000000000001000000000000\u306a\u306e\u3067\u300113\u306827\u306e\u30b7\u30b0\u30ca\u30eb\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u3066\u3044\u308b\u3002\n\n~~~\njuntaki@lab% cat /proc/1342/status\nName:   emacs\nState:  S (sleeping)\nTgid:   1342\nNgid:   0\n\n...\n\nThreads:        2 #\u30b9\u30ec\u30c3\u30c9\u6570\nSigQ:   1/15922 #\u30ad\u30e5\u30fc\u306e\u9577\u3055\u3068\u4e0a\u9650\nSigPnd: 0000000000000000 \u4fdd\u7559\u4e2d\uff1atask->pending.signal\nShdPnd: 0000000000000000 task->signal->shared_pending.signal\nSigBlk: 0000000000000000 \u30d6\u30ed\u30c3\u30af\u306e\u30de\u30b9\u30af\uff1atask->blocked\nSigIgn: 0000000004001000 \u30cf\u30f3\u30c9\u30e9\u304cSIG_IGN\uff1atask->sighand->action->sa.sa_handler\nSigCgt: 00000001db816eff \u30b7\u30b0\u30ca\u30eb\u30cf\u30f3\u30c9\u30e9\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\n\n...\n~~~\n\n\n## \u307e\u3068\u3081\n\n\u30b7\u30b0\u30ca\u30eb\u306f\u751f\u6210\u3068\u914d\u4fe1\u306e\uff12\u6bb5\u968e\u3067\u5b9f\u73fe\u3055\u308c\u3066\u3044\u308b\u3002\n\u751f\u6210\u306f\u6bd4\u8f03\u7684\u7c21\u5358\u306a\u69cb\u9020\u4f53\u306e\u64cd\u4f5c\u3060\u3051\u3060\u304c\u3001\u914d\u4fe1\u306f\u30d7\u30ed\u30bb\u30b9\u5207\u308a\u66ff\u3048\u306a\u3069\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u4f9d\u5b58\u306e\u90e8\u5206\u304c\u3042\u308b\u305f\u3081\u3001\u3084\u3084\u8907\u96d1\u3060\u3063\u305f\u3002\n\u6b21\u56de\u306f\u914d\u4fe1\u306e\u7b87\u6240\u3092\u3082\u3046\u5c11\u3057\u8aad\u307f\u305f\u3044\u3002\n", "tags": ["Linux", "kernel"]}