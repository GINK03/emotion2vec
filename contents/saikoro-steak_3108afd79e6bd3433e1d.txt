{"tags": ["Linux", "kernel", "CentOS"], "context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u4eca\u56de \u30ab\u30fc\u30cd\u30eb\u51e6\u7406\u306estart_kernel()\u306e\u51e6\u7406\u3092\u9014\u4e2d\u307e\u3067\u307f\u3066\u307f\u305f\u30fc\u3002\n\n\u524d\u56de\nstart_kernel()\u4ee5\u524d\n\n\u4eca\u56de start_kernel()\u304b\u3089rest_init()\u306e\u9014\u4e2d\u307e\u3067\u301c\nstart_kernel\u306f\u69d8\u3005\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u521d\u671f\u5316\u3057\u3066\u3001\u5185\u5bb9\u306f\u76db\u308a\u6ca2\u5c71\u3002\u306a\u306e\u3067\u4eca\u56de\u3082\u81ea\u5206\u304c\u6c17\u306b\u306a\u308b\u7b87\u6240\u3060\u3051\u3092\u5207\u308a\u53d6\u308a\u3057\u3066\u307f\u308b\uff01\u30d7\u30ed\u30bb\u30b9\u306e\u30e1\u30e2\u30ea\u521d\u671f\u5316\u306b\u6ce8\u76ee\uff01\n\nstart_kernel()\n\u3068\u308a\u3042\u3048\u305a\u3001start_kernel\u306b\u5165\u3063\u305f\u76f4\u5f8c\u306b\u30ec\u30b8\u30b9\u30bf\u3092\u307f\u3066\u307f\u305f\u3002\n(gdb) i r\n\n\n\u30b9\u30bf\u30c3\u30af\u30dd\u30a4\u30f3\u30bf\u3092\u898b\u3066\u307f\u308b\u3068\u73fe\u5728\u3001\u5b9f\u884c\u3057\u3066\u3044\u308b\u51e6\u7406\u306finit_thread_union\u3068\u3053\u308d\u306e\u30b9\u30bf\u30c3\u30af\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3002\u3053\u308c\u306f\u524d\u56de\u307f\u305f\u30b9\u30bf\u30c3\u30af\u3092\u9759\u7684\u306b\u5b9a\u7fa9\u3057\u3066\u3044\u305f\u7b87\u6240\u306e\u3053\u3068\u3002\u3084\u306f\u308ainit(\u30d7\u30ed\u30bb\u30b9\u756a\u53f71)\u3068\u3044\u3046\u3088\u308a\u73fe\u5728\u306e\u51e6\u7406(swapper)\u304c\u5229\u7528\u3059\u308b\u30b9\u30bf\u30c3\u30af\u3068\u3044\u3046\u3053\u3068\u3067\u3088\u3044\u306f\u305a\u3002\n\nstart_kernel() \u2192 setup_arch() \u306b\u5165\u3063\u3066\u307f\u305f\n\n\u6c17\u306b\u306a\u3063\u305f\u7b87\u6240\n\ninit_mm.start_code = (unsigned long) _text;\ninit_mm.end_code = (unsigned long) _etext;\ninit_mm.end_data = (unsigned long) _edata;\ninit_mm.brk = _brk_end;\n\n\u30e1\u30e2\uff1a\ntext\u306a\u3069\u306f\u30ea\u30f3\u30ab\u30fc\u30b9\u30af\u30ea\u30d7\u30c8(\u4e0b\u8a18\u8f09)\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3002\u306a\u306e\u3067\u3053\u3053\u3067swapper\u306e\u30e1\u30e2\u30ea\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf(\u30e1\u30e2\u30ea\u60c5\u5831)\u306b\u30ab\u30fc\u30cd\u30eb\u306e\u30c6\u30ad\u30b9\u30c8\u30b3\u30fc\u30c9\u3084\u3001data\u30bb\u30af\u30b7\u30e7\u30f3(\u9759\u7684\u306a\u5909\u6570\u306e\u7f6e\u304d\u5834)\u306e\u9818\u57df\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\u52d5\u7684\u306a\u30c7\u30fc\u30bf\u306fbrk_end\u4ee5\u964d\uff1f\uff1f\n\n\u30ab\u30fc\u30cd\u30eb\u30ea\u30f3\u30ab\u30fc\u30b9\u30af\u30ea\u30d7\u30c8(arch/x86/kernel/vmlinux.lds.S)\n\n    SECTIONS\n 84 {\n 85 #ifdef CONFIG_X86_32\n 86         . = LOAD_OFFSET + LOAD_PHYSICAL_ADDR;\n 87         phys_startup_32 = startup_32 - LOAD_OFFSET;\n 88 #else\n 89         . = __START_KERNEL;\n 90         phys_startup_64 = startup_64 - LOAD_OFFSET;\n 91 #endif\n 92 \n 93         /* Text and read-only data */\n 94         .text :  AT(ADDR(.text) - LOAD_OFFSET) {\n 95                 _text = .;\n 96                 /* bootstrapping code */\n 97                 HEAD_TEXT\n 98 #ifdef CONFIG_X86_32\n 99                 . = ALIGN(PAGE_SIZE);\n100                 *(.text.page_aligned)\n101 #endif\n102                 . = ALIGN(8);\n103                 _stext = .;\n\n\u30e1\u30e2\uff1a\n\u3053\u308c\u304c\u30ab\u30fc\u30cd\u30eb\u306e\u30ea\u30f3\u30ab\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u3002\u30ab\u30fc\u30cd\u30eb\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb(vmlinuz)\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u3053\u306e\u30ea\u30f3\u30ab\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u307f\u3066\u30ea\u30f3\u30af\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5404\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u307e\u3068\u3081\u305f\u308a\u3001\u305d\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u304c\u4eee\u60f3\u30e1\u30e2\u30ea\u4e0a\u3067\u3069\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u914d\u7f6e\u3055\u308c\u308b\u306e\u304b\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3002\u5229\u7528\u3059\u308b\u306e\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u30ea\u30f3\u30af\u3059\u308b\u6642\u3002\n\nGDB\u3067\u5909\u6570\u4e2d\u8eab\u3068/proc/iomem\u3068/boot/System.map\u3092\u898b\u6bd4\u3079\u3066\u307f\u305f\nsetup_arch()\u306e\u4e2d\u306e_text\u306a\u3069\u304c\u30ab\u30fc\u30cd\u30eb\u306e\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u3092\u672c\u5f53\u306b\u3055\u3057\u3066\u3044\u308b\u306e\u304b\u306a\u3041\u3068\u601d\u3063\u3066\u8abf\u3079\u3066\u307f\u305f\u3002\nGDB\n(gdb) print /x _text\n$20 = 0xffffffff81000000 <startup_64>\n(gdb) print /x _etext\n$21 = 0xffffffff81619285\n(gdb) print /x _edata\n$22 = 0xffffffff81a2ddc0\n(gdb) print /x _brk_end\n$23 = 0xffffffff81ee4000\n\n\u30e1\u30e2\uff1a\n1000000\u304c\u30ab\u30fc\u30cd\u30eb\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3060\u3063\u305f\u306f\u305a\u3002\n0xffffffff8\u3063\u3066\u306a\u3093\u305e\u3084\uff01\uff1f\n\n/proc/iomem\n\n\n# cat /proc/iomem \n  000f0000-000fffff : System ROM\n00100000-dd7a173f : System RAM\n  01000000-01619284 : Kernel code\n  01619285-01a2ddbf : Kernel data\n  01bc7000-01ee3fff : Kernel bss\n  2b000000-350fffff : Crash kernel\n\n\n/boot/System.map-\u30ab\u30fc\u30cd\u30eb\u30d0\u30fc\u30b8\u30e7\u30f3\n\n  271 0000000001000000 A phys_startup_64\n  272 ffffffff81000000 T _text\n  273 ffffffff81000000 T startup_64\n  274 ffffffff81000110 T secondary_startup_64\n  275 ffffffff810001b0 T start_cpu0\n  276 ffffffff810001c5 t bad_address\n\n28218 ffffffff81618b60 T bad_from_user\n28219 ffffffff81618b66 t bad_to_user\n28220 ffffffff81619285 T _etext\n28221 ffffffff81619288 T __start_notes\n28222 ffffffff81619404 T __stop_notes\n28223 ffffffff81619410 R __start___ex_table\n\n62139 ffffffff81a2d560 D inet6_protos\n62140 ffffffff81a2dd60 d ipv6_packet_offload\n62141 ffffffff81a2ddc0 D _edata\n62142 ffffffff81a2e000 D __vvar_beginning_hack\n62143 ffffffff81a2e000 D __vvar_page\n62144 ffffffff81a2e000 D jiffies\n\n69959 ffffffff81ee30e0 b net_header\n69960 ffffffff81ee30e8 b klist_remove_lock\n69961 ffffffff81ee4000 B __brk_base\n69962 ffffffff81ee4000 B __bss_stop\n69963 ffffffff81ef4000 b .brk.shared_info_page_brk\n69964 ffffffff81ef5000 b .brk.p2m_missing\n\n\n\u30e1\u30e2\uff1a\n__brk_base\u306a\u3093\u3067\u540d\u524d\u3061\u304c\u3063\u3066\u308b\u3093\u3060\u308d\u3046\u3002\u3002\u3002\u3002\n\u3068\u308a\u3042\u3048\u305a\u30010xffffffff8\u3063\u3066\u306a\u3093\u3060\u308d\u3046\u3063\u3066\u60a9\u3093\u3067\u305f\u3051\u3069\u3001\u3053\u306e\u6bb5\u968e\u306e\u30da\u30fc\u30b8\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u306f\u672a\u5b8c\u6210\u3067\u3001\u308f\u3051\u3042\u3063\u30660xffffffff81\u304b\u3089\u59cb\u307e\u308b\u30a2\u30c9\u30ec\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u308b\u306e\u3067\u3042\u3063\u305f\u3002\u306a\u306e\u3067cat /proc/iomem \u3068\u8868\u793a\u304c\u7570\u3063\u3066\u3044\u308b\u3002sytemmap\u3067\u3053\u306e\u6642\u306e\u30a2\u30c9\u30ec\u30b9\u914d\u7f6e\u3092\u307f\u308c\u308b\u3002\n### \u6982\u8981\n\u4eca\u56de \u30ab\u30fc\u30cd\u30eb\u51e6\u7406\u306estart_kernel()\u306e\u51e6\u7406\u3092\u9014\u4e2d\u307e\u3067\u307f\u3066\u307f\u305f\u30fc\u3002\n\n\n### \u524d\u56de\n[start_kernel()\u4ee5\u524d](http://qiita.com/saikoro-steak/items/60f5ab6cb9d0f825df25)\n\n\n### \u4eca\u56de start_kernel()\u304b\u3089rest_init()\u306e\u9014\u4e2d\u307e\u3067\u301c\nstart_kernel\u306f\u69d8\u3005\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u521d\u671f\u5316\u3057\u3066\u3001\u5185\u5bb9\u306f\u76db\u308a\u6ca2\u5c71\u3002\u306a\u306e\u3067\u4eca\u56de\u3082\u81ea\u5206\u304c\u6c17\u306b\u306a\u308b\u7b87\u6240\u3060\u3051\u3092\u5207\u308a\u53d6\u308a\u3057\u3066\u307f\u308b\uff01\u30d7\u30ed\u30bb\u30b9\u306e\u30e1\u30e2\u30ea\u521d\u671f\u5316\u306b\u6ce8\u76ee\uff01\n\n\n\n#### start_kernel()\n\u3068\u308a\u3042\u3048\u305a\u3001start_kernel\u306b\u5165\u3063\u305f\u76f4\u5f8c\u306b\u30ec\u30b8\u30b9\u30bf\u3092\u307f\u3066\u307f\u305f\u3002\n\n```\n(gdb) i r\n```\n![startkernel\u30b9\u30bf\u30c3\u30af.png](https://qiita-image-store.s3.amazonaws.com/0/91729/01c6c292-3ee5-acd4-851c-5aabd690948d.png)\n\n\u30b9\u30bf\u30c3\u30af\u30dd\u30a4\u30f3\u30bf\u3092\u898b\u3066\u307f\u308b\u3068\u73fe\u5728\u3001\u5b9f\u884c\u3057\u3066\u3044\u308b\u51e6\u7406\u306finit_thread_union\u3068\u3053\u308d\u306e\u30b9\u30bf\u30c3\u30af\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3002\u3053\u308c\u306f\u524d\u56de\u307f\u305f\u30b9\u30bf\u30c3\u30af\u3092\u9759\u7684\u306b\u5b9a\u7fa9\u3057\u3066\u3044\u305f\u7b87\u6240\u306e\u3053\u3068\u3002\u3084\u306f\u308ainit(\u30d7\u30ed\u30bb\u30b9\u756a\u53f71)\u3068\u3044\u3046\u3088\u308a\u73fe\u5728\u306e\u51e6\u7406(swapper)\u304c\u5229\u7528\u3059\u308b\u30b9\u30bf\u30c3\u30af\u3068\u3044\u3046\u3053\u3068\u3067\u3088\u3044\u306f\u305a\u3002\n\n##### start_kernel() \u2192 setup_arch() \u306b\u5165\u3063\u3066\u307f\u305f\n* \u6c17\u306b\u306a\u3063\u305f\u7b87\u6240\n\n```c\ninit_mm.start_code = (unsigned long) _text;\ninit_mm.end_code = (unsigned long) _etext;\ninit_mm.end_data = (unsigned long) _edata;\ninit_mm.brk = _brk_end;\n```\n\u30e1\u30e2\uff1a\n _text\u306a\u3069\u306f\u30ea\u30f3\u30ab\u30fc\u30b9\u30af\u30ea\u30d7\u30c8(\u4e0b\u8a18\u8f09)\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3002\u306a\u306e\u3067\u3053\u3053\u3067swapper\u306e\u30e1\u30e2\u30ea\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf(\u30e1\u30e2\u30ea\u60c5\u5831)\u306b\u30ab\u30fc\u30cd\u30eb\u306e\u30c6\u30ad\u30b9\u30c8\u30b3\u30fc\u30c9\u3084\u3001data\u30bb\u30af\u30b7\u30e7\u30f3(\u9759\u7684\u306a\u5909\u6570\u306e\u7f6e\u304d\u5834)\u306e\u9818\u57df\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\u52d5\u7684\u306a\u30c7\u30fc\u30bf\u306f_brk_end\u4ee5\u964d\uff1f\uff1f\n\n* \u30ab\u30fc\u30cd\u30eb\u30ea\u30f3\u30ab\u30fc\u30b9\u30af\u30ea\u30d7\u30c8(arch/x86/kernel/vmlinux.lds.S)\n\n```txt\n    SECTIONS\n 84 {\n 85 #ifdef CONFIG_X86_32\n 86         . = LOAD_OFFSET + LOAD_PHYSICAL_ADDR;\n 87         phys_startup_32 = startup_32 - LOAD_OFFSET;\n 88 #else\n 89         . = __START_KERNEL;\n 90         phys_startup_64 = startup_64 - LOAD_OFFSET;\n 91 #endif\n 92 \n 93         /* Text and read-only data */\n 94         .text :  AT(ADDR(.text) - LOAD_OFFSET) {\n 95                 _text = .;\n 96                 /* bootstrapping code */\n 97                 HEAD_TEXT\n 98 #ifdef CONFIG_X86_32\n 99                 . = ALIGN(PAGE_SIZE);\n100                 *(.text.page_aligned)\n101 #endif\n102                 . = ALIGN(8);\n103                 _stext = .;\n```\n\n\u30e1\u30e2\uff1a\n\u3053\u308c\u304c\u30ab\u30fc\u30cd\u30eb\u306e\u30ea\u30f3\u30ab\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u3002\u30ab\u30fc\u30cd\u30eb\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb(vmlinuz)\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u3053\u306e\u30ea\u30f3\u30ab\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u307f\u3066\u30ea\u30f3\u30af\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5404\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u307e\u3068\u3081\u305f\u308a\u3001\u305d\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u304c\u4eee\u60f3\u30e1\u30e2\u30ea\u4e0a\u3067\u3069\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u914d\u7f6e\u3055\u308c\u308b\u306e\u304b\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3002\u5229\u7528\u3059\u308b\u306e\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u30ea\u30f3\u30af\u3059\u308b\u6642\u3002\n\n#### GDB\u3067\u5909\u6570\u4e2d\u8eab\u3068/proc/iomem\u3068/boot/System.map\u3092\u898b\u6bd4\u3079\u3066\u307f\u305f\n\nsetup_arch()\u306e\u4e2d\u306e_text\u306a\u3069\u304c\u30ab\u30fc\u30cd\u30eb\u306e\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u3092\u672c\u5f53\u306b\u3055\u3057\u3066\u3044\u308b\u306e\u304b\u306a\u3041\u3068\u601d\u3063\u3066\u8abf\u3079\u3066\u307f\u305f\u3002\n\nGDB\n\n```gdb\n(gdb) print /x _text\n$20 = 0xffffffff81000000 <startup_64>\n(gdb) print /x _etext\n$21 = 0xffffffff81619285\n(gdb) print /x _edata\n$22 = 0xffffffff81a2ddc0\n(gdb) print /x _brk_end\n$23 = 0xffffffff81ee4000\n```\n\n\u30e1\u30e2\uff1a\n1000000\u304c\u30ab\u30fc\u30cd\u30eb\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3060\u3063\u305f\u306f\u305a\u3002\n0xffffffff8\u3063\u3066\u306a\u3093\u305e\u3084\uff01\uff1f\n\n* /proc/iomem   \n\n```\n# cat /proc/iomem \n  000f0000-000fffff : System ROM\n00100000-dd7a173f : System RAM\n  01000000-01619284 : Kernel code\n  01619285-01a2ddbf : Kernel data\n  01bc7000-01ee3fff : Kernel bss\n  2b000000-350fffff : Crash kernel\n```\n\n* /boot/System.map-\u30ab\u30fc\u30cd\u30eb\u30d0\u30fc\u30b8\u30e7\u30f3\n\n```\n  271 0000000001000000 A phys_startup_64\n  272 ffffffff81000000 T _text\n  273 ffffffff81000000 T startup_64\n  274 ffffffff81000110 T secondary_startup_64\n  275 ffffffff810001b0 T start_cpu0\n  276 ffffffff810001c5 t bad_address\n\n28218 ffffffff81618b60 T bad_from_user\n28219 ffffffff81618b66 t bad_to_user\n28220 ffffffff81619285 T _etext\n28221 ffffffff81619288 T __start_notes\n28222 ffffffff81619404 T __stop_notes\n28223 ffffffff81619410 R __start___ex_table\n\n62139 ffffffff81a2d560 D inet6_protos\n62140 ffffffff81a2dd60 d ipv6_packet_offload\n62141 ffffffff81a2ddc0 D _edata\n62142 ffffffff81a2e000 D __vvar_beginning_hack\n62143 ffffffff81a2e000 D __vvar_page\n62144 ffffffff81a2e000 D jiffies\n\n69959 ffffffff81ee30e0 b net_header\n69960 ffffffff81ee30e8 b klist_remove_lock\n69961 ffffffff81ee4000 B __brk_base\n69962 ffffffff81ee4000 B __bss_stop\n69963 ffffffff81ef4000 b .brk.shared_info_page_brk\n69964 ffffffff81ef5000 b .brk.p2m_missing\n\n```\n\n\u30e1\u30e2\uff1a\n__brk_base\u306a\u3093\u3067\u540d\u524d\u3061\u304c\u3063\u3066\u308b\u3093\u3060\u308d\u3046\u3002\u3002\u3002\u3002\n\u3068\u308a\u3042\u3048\u305a\u30010xffffffff8\u3063\u3066\u306a\u3093\u3060\u308d\u3046\u3063\u3066\u60a9\u3093\u3067\u305f\u3051\u3069\u3001\u3053\u306e\u6bb5\u968e\u306e\u30da\u30fc\u30b8\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u306f\u672a\u5b8c\u6210\u3067\u3001\u308f\u3051\u3042\u3063\u30660xffffffff81\u304b\u3089\u59cb\u307e\u308b\u30a2\u30c9\u30ec\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u308b\u306e\u3067\u3042\u3063\u305f\u3002\u306a\u306e\u3067cat /proc/iomem \u3068\u8868\u793a\u304c\u7570\u3063\u3066\u3044\u308b\u3002sytemmap\u3067\u3053\u306e\u6642\u306e\u30a2\u30c9\u30ec\u30b9\u914d\u7f6e\u3092\u307f\u308c\u308b\u3002\n"}