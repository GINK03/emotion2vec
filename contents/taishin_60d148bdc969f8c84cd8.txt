{"context": "cloudpack\u5927\u962a\u306e\u4f50\u3005\u6728\u3067\u3059\u3002\n\u4ee5\u524d\u3001Amazon Inspector\u306e\u5b9f\u884c\u307e\u3067\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\nhttp://qiita.com/taishin/items/0fa3a24b60ff289aee4d\n\u73fe\u72b6\u3001\u5b9f\u884c\u7d50\u679c\u304c\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u898b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3001CSV\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u306f\u3067\u304d\u308b\u3051\u3069\u9805\u76ee\u304c\u5c11\u306a\u3044\u3001\u901a\u77e5\u6a5f\u80fd\u304c\u306a\u3044\u3068\u304b\u3001\u4f7f\u3044\u52dd\u624b\u304c\u60aa\u3044\u306e\u3067\u3001\n\u5b9f\u884c\u3057\u305f\u3089\u81ea\u52d5\u3067DynamoDB\u306b\u653e\u308a\u8fbc\u3080\u3088\u3046\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u624b\u9806\n\u4e0b\u8a18\u3092\u53c2\u8003\u306b\u30017.\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u307e\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002\nhttp://qiita.com/taishin/items/0fa3a24b60ff289aee4d\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306eARN\u3092\u63a7\u3048\u307e\u3059\u3002\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\ninspector.rb\nrequire 'aws-sdk'\n\nREGION = 'ap-northeast-1'\nDYNAMO_TABLE_NAME = 'Inspector_result'\nTEMPLATE_ARN = ARGV[0]\n\ndef start_assessment(client, arn, name)\n  run_arn = client.start_assessment_run({\n    assessment_template_arn: arn,\n    assessment_run_name: name,\n  }).assessment_run_arn\n  return run_arn\nend\n\ndef put_findings(client, arn, dynamo_client)\n  list = client.list_findings({\n    assessment_run_arns:[arn],\n  })\n  desc_finding(client, list.finding_arns, dynamo_client)\n  next_token=list.next_token\n  while true\n    next_list = client.list_findings({\n      assessment_run_arns:[arn],\n      next_token: next_token\n    })\n    desc_finding(client, next_list.finding_arns, dynamo_client)\n    if next_list.next_token\n      next_token = next_list.next_token\n    else\n      break\n    end\n  end\nend\n\n\ndef desc_finding(client, arns, dynamo_client)\n  finds = client.describe_findings({\n    finding_arns: arns\n  })[0]\n  finds.each do |find|\n    data = Hash.new\n    data[\"agentId\"] = find.asset_attributes.agent_id\n    data[\"assetType\"] = find.asset_type\n    data[\"hostname\"] = find.asset_attributes.hostname\n    data[\"ipv4Addresses\"] = find.asset_attributes.ipv4_addresses[0]\n    data[\"autoScalingGroup\"] = find.asset_attributes.auto_scaling_group\n    data[\"createdAt\"] = find.created_at.to_s\n    data[\"updatedAt\"] = find.updated_at.to_s\n    data[\"severity\"] = find.severity\n    data[\"indicatorOfCompromise\"] = find.indicator_of_compromise\n    data[\"numericSecerity\"] = find.numeric_severity\n    data[\"id\"] = find.id\n    data[\"title\"] = find.title\n    data[\"description\"] = find.description\n    data[\"recommendation\"] = find.recommendation\n    data[\"arn\"] = find.arn\n    data[\"rulePackageName\"] = client.describe_rules_packages({\n      rules_package_arns: [find.service_attributes.rules_package_arn]\n    }).rules_packages[0].name\n    put_into_dynamo(data, dynamo_client)\n  end\nend\n\ndef put_into_dynamo(data, client)\n  client.put_item({\n    table_name: DYNAMO_TABLE_NAME,\n    item: {\n      \"arn\" => data[\"arn\"],\n      \"agentId\" => data[\"agentId\"],\n      \"assetType\" => data[\"assetType\"],\n      # \"hostname\" => data[\"hostname\"],\n      # \"ipv4Addresses\" => data[\"ipv4Addresses\"],\n      # \"autoScalingGroup\" => data[\"autoScalingGroup\"],\n      \"severity\" => data[\"severity\"],\n      \"indicatorOfCompromise\" => data[\"indicatorOfCompromise\"],\n      \"numericSecerity\" => data[\"numericSecerity\"],\n      \"rulePackageName\" => data[\"rulePackageName\"],\n      \"id\" => data[\"id\"],\n      \"title\" => data[\"title\"],\n      \"description\" => data[\"description\"],\n      \"recommendation\" => data[\"recommendation\"],\n      \"createdAt\" => data[\"createdAt\"],\n      \"updatedAt\" => data[\"updatedAt\"]\n    }\n  })\nend\n\n###############\n\n\n\nif ARGV.size != 1\n  puts \"usage: \" + $0 + \" \uff08Template ARN)\"\n  exit(1)\nend\n\ninspector = Aws::Inspector::Client.new(\n  region: REGION\n)\n\ndynamo = Aws::DynamoDB::Client.new(\n  region: REGION\n)\n\nrun_name = \"inspector_run_\" + Time.now.to_s\n\nrun_arn = start_assessment(inspector, TEMPLATE_ARN, run_name)\n\nwhile true\n  assess_state = inspector.describe_assessment_runs({\n    assessment_run_arns: [run_arn], \n  }).assessment_runs[0].state\n  break if assess_state == \"COMPLETED\"\n  sleep(300)\nend\n\nput_findings(inspector, run_arn, dynamo)\n\n\n\u5b9f\u884c\u306e\u7d42\u4e86\u3092\u3069\u3046\u3084\u3063\u3066\u5224\u65ad\u3059\u308c\u3070\u3044\u3044\u304b\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a5\u5206\u3054\u3068\u306b\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u78ba\u8a8d\u3057\u3066\u3001COMPLETED\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8ARN\u3092\u5f15\u6570\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\nruby inspector.rb arn:aws:inspector:ap-northeast-1:XXXXXXXXXXXX:target/XXXXXXXXXX/template/XXXXXXXXXXX\n\n\u3046\u307e\u304f\u3044\u304f\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002\n\n\n\u307e\u3068\u3081\nDynamo\u306b\u5165\u3063\u305f\u3089\u3042\u3068\u306f\u3088\u3057\u306a\u306b\u3002\n\u597d\u304d\u306a\u3088\u3046\u306b\u30c7\u30fc\u30bf\u5f15\u3063\u5f35\u3063\u3066\u3053\u308c\u308b\u3057\u3001Lambda\u4f7f\u3063\u3066\u901a\u77e5\u3068\u304b\u3044\u308d\u3044\u308d\u3067\u304d\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u3093\u3067Ruby\u306a\u3093\u3060\uff1f\u3068\u304b\u3001\u306a\u3093\u3067Python\u3067Lambda\u5316\u3057\u306a\u3044\u3093\u3060\uff1f\u3068\u304b\u3044\u3046\u30c4\u30c3\u30b3\u30df\u306f\u306a\u3057\u3067\u304a\u9858\u3044\u3057\u307e\u3059\uff57\n\ncloudpack\u5927\u962a\u306e\u4f50\u3005\u6728\u3067\u3059\u3002\n\n\u4ee5\u524d\u3001Amazon Inspector\u306e\u5b9f\u884c\u307e\u3067\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\nhttp://qiita.com/taishin/items/0fa3a24b60ff289aee4d\n\n\u73fe\u72b6\u3001\u5b9f\u884c\u7d50\u679c\u304c\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u898b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3001CSV\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u306f\u3067\u304d\u308b\u3051\u3069\u9805\u76ee\u304c\u5c11\u306a\u3044\u3001\u901a\u77e5\u6a5f\u80fd\u304c\u306a\u3044\u3068\u304b\u3001\u4f7f\u3044\u52dd\u624b\u304c\u60aa\u3044\u306e\u3067\u3001\n\u5b9f\u884c\u3057\u305f\u3089\u81ea\u52d5\u3067DynamoDB\u306b\u653e\u308a\u8fbc\u3080\u3088\u3046\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\n# \u624b\u9806\n\n\u4e0b\u8a18\u3092\u53c2\u8003\u306b\u30017.\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u307e\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002\nhttp://qiita.com/taishin/items/0fa3a24b60ff289aee4d\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306eARN\u3092\u63a7\u3048\u307e\u3059\u3002\n![Kobito.kcKSFl.png](https://qiita-image-store.s3.amazonaws.com/0/3246/6c972476-b739-a478-64bd-0db830fbf14e.png \"Kobito.kcKSFl.png\")\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n```ruby:inspector.rb\nrequire 'aws-sdk'\n\nREGION = 'ap-northeast-1'\nDYNAMO_TABLE_NAME = 'Inspector_result'\nTEMPLATE_ARN = ARGV[0]\n\ndef start_assessment(client, arn, name)\n  run_arn = client.start_assessment_run({\n    assessment_template_arn: arn,\n    assessment_run_name: name,\n  }).assessment_run_arn\n  return run_arn\nend\n\ndef put_findings(client, arn, dynamo_client)\n  list = client.list_findings({\n    assessment_run_arns:[arn],\n  })\n  desc_finding(client, list.finding_arns, dynamo_client)\n  next_token=list.next_token\n  while true\n    next_list = client.list_findings({\n      assessment_run_arns:[arn],\n      next_token: next_token\n    })\n    desc_finding(client, next_list.finding_arns, dynamo_client)\n    if next_list.next_token\n      next_token = next_list.next_token\n    else\n      break\n    end\n  end\nend\n\n\ndef desc_finding(client, arns, dynamo_client)\n  finds = client.describe_findings({\n    finding_arns: arns\n  })[0]\n  finds.each do |find|\n    data = Hash.new\n    data[\"agentId\"] = find.asset_attributes.agent_id\n    data[\"assetType\"] = find.asset_type\n    data[\"hostname\"] = find.asset_attributes.hostname\n    data[\"ipv4Addresses\"] = find.asset_attributes.ipv4_addresses[0]\n    data[\"autoScalingGroup\"] = find.asset_attributes.auto_scaling_group\n    data[\"createdAt\"] = find.created_at.to_s\n    data[\"updatedAt\"] = find.updated_at.to_s\n    data[\"severity\"] = find.severity\n    data[\"indicatorOfCompromise\"] = find.indicator_of_compromise\n    data[\"numericSecerity\"] = find.numeric_severity\n    data[\"id\"] = find.id\n    data[\"title\"] = find.title\n    data[\"description\"] = find.description\n    data[\"recommendation\"] = find.recommendation\n    data[\"arn\"] = find.arn\n    data[\"rulePackageName\"] = client.describe_rules_packages({\n      rules_package_arns: [find.service_attributes.rules_package_arn]\n    }).rules_packages[0].name\n    put_into_dynamo(data, dynamo_client)\n  end\nend\n\ndef put_into_dynamo(data, client)\n  client.put_item({\n    table_name: DYNAMO_TABLE_NAME,\n    item: {\n      \"arn\" => data[\"arn\"],\n      \"agentId\" => data[\"agentId\"],\n      \"assetType\" => data[\"assetType\"],\n      # \"hostname\" => data[\"hostname\"],\n      # \"ipv4Addresses\" => data[\"ipv4Addresses\"],\n      # \"autoScalingGroup\" => data[\"autoScalingGroup\"],\n      \"severity\" => data[\"severity\"],\n      \"indicatorOfCompromise\" => data[\"indicatorOfCompromise\"],\n      \"numericSecerity\" => data[\"numericSecerity\"],\n      \"rulePackageName\" => data[\"rulePackageName\"],\n      \"id\" => data[\"id\"],\n      \"title\" => data[\"title\"],\n      \"description\" => data[\"description\"],\n      \"recommendation\" => data[\"recommendation\"],\n      \"createdAt\" => data[\"createdAt\"],\n      \"updatedAt\" => data[\"updatedAt\"]\n    }\n  })\nend\n\n###############\n\n\n\nif ARGV.size != 1\n  puts \"usage: \" + $0 + \" \uff08Template ARN)\"\n  exit(1)\nend\n\ninspector = Aws::Inspector::Client.new(\n  region: REGION\n)\n\ndynamo = Aws::DynamoDB::Client.new(\n  region: REGION\n)\n\nrun_name = \"inspector_run_\" + Time.now.to_s\n\nrun_arn = start_assessment(inspector, TEMPLATE_ARN, run_name)\n\nwhile true\n  assess_state = inspector.describe_assessment_runs({\n    assessment_run_arns: [run_arn], \n  }).assessment_runs[0].state\n  break if assess_state == \"COMPLETED\"\n  sleep(300)\nend\n\nput_findings(inspector, run_arn, dynamo)\n```\n\n\u5b9f\u884c\u306e\u7d42\u4e86\u3092\u3069\u3046\u3084\u3063\u3066\u5224\u65ad\u3059\u308c\u3070\u3044\u3044\u304b\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a5\u5206\u3054\u3068\u306b\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u78ba\u8a8d\u3057\u3066\u3001COMPLETED\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8ARN\u3092\u5f15\u6570\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```bash:\nruby inspector.rb arn:aws:inspector:ap-northeast-1:XXXXXXXXXXXX:target/XXXXXXXXXX/template/XXXXXXXXXXX\n```\n\n\u3046\u307e\u304f\u3044\u304f\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002\n\n![Kobito.0Cf0Oc.png](https://qiita-image-store.s3.amazonaws.com/0/3246/5514207e-7624-83a3-0d6c-38783d1093f4.png \"Kobito.0Cf0Oc.png\")\n\n\n# \u307e\u3068\u3081\nDynamo\u306b\u5165\u3063\u305f\u3089\u3042\u3068\u306f\u3088\u3057\u306a\u306b\u3002\n\u597d\u304d\u306a\u3088\u3046\u306b\u30c7\u30fc\u30bf\u5f15\u3063\u5f35\u3063\u3066\u3053\u308c\u308b\u3057\u3001Lambda\u4f7f\u3063\u3066\u901a\u77e5\u3068\u304b\u3044\u308d\u3044\u308d\u3067\u304d\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u3093\u3067Ruby\u306a\u3093\u3060\uff1f\u3068\u304b\u3001\u306a\u3093\u3067Python\u3067Lambda\u5316\u3057\u306a\u3044\u3093\u3060\uff1f\u3068\u304b\u3044\u3046\u30c4\u30c3\u30b3\u30df\u306f\u306a\u3057\u3067\u304a\u9858\u3044\u3057\u307e\u3059\uff57\n", "tags": ["Inspector", "DynamoDB", "AWS"]}