{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f bouzuya's RxJS Advent Calendar 2015 \u306e 14 \u65e5\u76ee\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u4eca\u65e5\u306f ReactiveX \u306e Operators to Convert Observables \u306b\u3064\u3044\u3066 RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3060\u308a\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u308a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305f RxJS 4.0.7 \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nOperators to Convert Observables\n\nObservable.prototype.toArray\n\n\nReactiveX - To operator\nObservable.prototype.toArray API Document\nObservable.prototype.toArray Source Code\n\n\u6d41\u308c\u308b\u30c7\u30fc\u30bf\u3092 Array \u306b\u307e\u3068\u3081\u3066\u6d41\u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .toArray()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 1,2,3\n// onCompleted\n\n\u7279\u306b\u96e3\u3057\u304f\u306a\u3044\u3067\u3059\u3002\u3053\u308c\u3067\u76f8\u4e92\u5909\u63db\u3067\u304d\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3001\u610f\u5473\u306f\u306a\u3044\u3067\u3059\u304c\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])                          // -3-2-1->\n  .toArray()                                // -[1,2,3]->\n  .flatMap(array => Observable.from(array)) // -3-2-1->\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 1\n// onNext: 2\n// onNext: 3\n// onCompleted\n\n\nObservable.prototype.toMap\n\n\nObservable.prototype.toMap API Document\nObservable.prototype.toMap Source Code\n\nES6 Map \u306b\u5909\u63db\u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .toMap(value => `key${value}`)\n  .map(map => Array.from(map.keys()).map(k => `${k}:${map.get(k)}`))\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: key1:1,key2:2,key3:3\n// onCompleted\n\n\u7279\u306b\u8a00\u3046\u3053\u3068\u306f\u306a\u3044\u3067\u3059\u3002\n\nObservable.prototype.toSet\n\n\nObservable.prototype.toSet API Document\nObservable.prototype.toSet Source Code\n\nES6 Set \u306b\u5909\u63db\u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3, 2])\n  .toSet()\n  .map(set => Array.from(set.values()))\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 1,2,3\n// onCompleted\n\n\u7279\u306b\u8a00\u3046\u3053\u3068\u306f\u306a\u3044\u3067\u3059\u3002\n\n\u304a\u308f\u308a\u306b\nReactiveX \u306e Operators to Convert Observables \u3092\u898b\u307e\u3057\u305f\u3002\n\u3069\u3046\u3068\u3044\u3046\u3053\u3068\u306f\u306a\u3044\u3067\u3059\u306d\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [bouzuya's RxJS Advent Calendar 2015](http://www.adventar.org/calendars/1200) \u306e 14 \u65e5\u76ee\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\n\u4eca\u65e5\u306f [ReactiveX \u306e Operators to Convert Observables](http://reactivex.io/documentation/operators.html#to) \u306b\u3064\u3044\u3066 [RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/observable.md)\u3092\u8aad\u3093\u3060\u308a\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u308a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u307e\u305f [RxJS 4.0.7](https://github.com/Reactive-Extensions/RxJS/tree/v4.0.7) \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n# Operators to Convert Observables\n\n## `Observable.prototype.toArray`\n\n- [ReactiveX - To operator](http://reactivex.io/documentation/operators/to.html)\n- [`Observable.prototype.toArray` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/toarray.md)\n- [`Observable.prototype.toArray` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/toarray.js)\n\n\u6d41\u308c\u308b\u30c7\u30fc\u30bf\u3092 `Array` \u306b\u307e\u3068\u3081\u3066\u6d41\u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .toArray()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 1,2,3\n// onCompleted\n```\n\n\u7279\u306b\u96e3\u3057\u304f\u306a\u3044\u3067\u3059\u3002\u3053\u308c\u3067\u76f8\u4e92\u5909\u63db\u3067\u304d\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3001\u610f\u5473\u306f\u306a\u3044\u3067\u3059\u304c\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])                          // -3-2-1->\n  .toArray()                                // -[1,2,3]->\n  .flatMap(array => Observable.from(array)) // -3-2-1->\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 1\n// onNext: 2\n// onNext: 3\n// onCompleted\n```\n\n## `Observable.prototype.toMap`\n\n- [`Observable.prototype.toMap` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/tomap.md)\n- [`Observable.prototype.toMap` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/tomap.js)\n\nES6 Map \u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .toMap(value => `key${value}`)\n  .map(map => Array.from(map.keys()).map(k => `${k}:${map.get(k)}`))\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: key1:1,key2:2,key3:3\n// onCompleted\n```\n\n\u7279\u306b\u8a00\u3046\u3053\u3068\u306f\u306a\u3044\u3067\u3059\u3002\n\n## `Observable.prototype.toSet`\n\n- [`Observable.prototype.toSet` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/toset.md)\n- [`Observable.prototype.toSet` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/toset.js)\n\nES6 Set \u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3, 2])\n  .toSet()\n  .map(set => Array.from(set.values()))\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 1,2,3\n// onCompleted\n```\n\n\u7279\u306b\u8a00\u3046\u3053\u3068\u306f\u306a\u3044\u3067\u3059\u3002\n\n# \u304a\u308f\u308a\u306b\n\nReactiveX \u306e Operators to Convert Observables \u3092\u898b\u307e\u3057\u305f\u3002\n\n\u3069\u3046\u3068\u3044\u3046\u3053\u3068\u306f\u306a\u3044\u3067\u3059\u306d\u3002\n", "tags": ["RxJS", "Rx", "ReactiveExtensions"]}