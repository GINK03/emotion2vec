{"context": " More than 1 year has passed since last update.\u3000\u524d\u306e\u6295\u7a3f\u3067\u3001std::map\u578b\u3092\u4f7f\u3063\u3066\u898b\u901a\u3057\u306e\u3088\u3044\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u3057\u3088\u3046\u3068\u66f8\u3044\u305f\u3002\n\n\u3042\u308b\u7a0b\u5ea6\u4ee5\u4e0a\u306e\u7d44\u307f\u8fbc\u307f\u74b0\u5883\u306e\u5834\u5408\n\n\u3042\u308b\u7a0b\u5ea6\u4ee5\u4e0a\u306e\u7d44\u307f\u8fbc\u307f\u74b0\u5883\u306a\u3089\u3070\uff08\u4f8b\uff1aRaspberryPi\u3084Zynq\u306a\u3069\u306e\u30dc\u30fc\u30c9\uff09g++\u3092\u4f7f\u3048\u3001STL\u3092\u4f7f\u3046\u3053\u3068\u306b\u4f55\u306e\u554f\u984c\u3082\u306a\u3044\u306f\u305a\u3060\u3002\u305d\u3057\u3066STL\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8a18\u8ff0\u3067\u304d\u308b\u3002PC\u3067\u958b\u767a\u3057\u3066\u3044\u3066\u3001\u307e\u305a\u306f\u6b63\u3057\u304f\u52d5\u304f\u7248\u3092\u4f5c\u308b\u5206\u306b\u306f\u3001STL\u3092\u7a4d\u6975\u7684\u306b\u4f7f\u3046\u3079\u304d\u3060\u3068\u79c1\u306f\u8003\u3048\u308b(\u4e00\u90e8\u306e\u5546\u7528\u30b3\u30f3\u30d1\u30a4\u30e9\u306eC++\u306e\u5b9f\u88c5\u306b\u4e0d\u5b89\u304c\u3042\u3063\u3066\u3001\u305d\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u4f7f\u3046STL\u306e\u5b9f\u88c5\u306b\u4e0d\u5b89\u304c\u3042\u3063\u305f\u6614\u3068\u306f\u72b6\u6cc1\u304c\u7570\u306a\u308b\u3068\u601d\u3046\u3002\u5f53\u6642\u306f\u3001STL\u3092\u5229\u7528\u3057\u3066\u66f8\u304b\u308c\u3066\u3044\u305f\u30b3\u30fc\u30c9\u3092\u975eSTL\u30b3\u30fc\u30c9\u306b\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u3092\u6c42\u3081\u3089\u308c\u305f\u3068\u3044\u3046\u8a71\u3092\u805e\u3044\u305f\u3053\u3068\u304c\u3042\u308b\u3002)\u3002STL\u306f\u5916\u90e8\u4ed5\u69d8\u304c\u660e\u89e3\u3067\u3042\u308a\u3001\u8907\u6570\u306e\u30e1\u30f3\u30d0\u30fc\u3067\u7406\u89e3\u304c\u5171\u901a\u5316\u3057\u3084\u3059\u3044\u3002STL\u3092\u4f7f\u3063\u3066\u697d\u3092\u3057\u305f\u5206\u3060\u3051\u4ed6\u306e\u90e8\u5206\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5341\u5206\u306b\u4ed5\u69d8\u3092\u660e\u78ba\u306b\u3057\u3066\u30c6\u30b9\u30c8\u3092\u3059\u308b\u3053\u3068\u306b\u52b4\u529b\u3092\u3055\u3051\u308b\u3002\n\u3000\u6700\u7d42\u5b9f\u88c5\u304cPC\u3067\u3042\u308b\u5834\u5408\u306b\u306f\u3001STL\u306e\u307e\u307e\u306b\u3067\u304d\u308b\u3067\u3042\u308d\u3046\u3057\u3001\u3042\u308b\u7a0b\u5ea6\u4ee5\u4e0a\u306e\u7d44\u307f\u8fbc\u307f\u74b0\u5883\u3067\u3082STL\u306e\u307e\u307e\u306b\u3059\u308b\u3068\u3044\u3046\u9078\u629e\u304c\u3042\u308b\u3060\u308d\u3046\u3002\n\u3000\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u305d\u308c\u3067\u3082STL\u3092\u6700\u7d42\u5b9f\u88c5\u306b\u4f7f\u3048\u306a\u3044\u3068\u3044\u3046\u4eba\u306e\u305f\u3081\u306b\u3001C++\u306e\u30bd\u30fc\u30b9\u3092\u81ea\u52d5\u751f\u6210\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u3092\u793a\u3059\u3053\u3068\u3067\u3001PC\u7248\u3067\u6b63\u3057\u304f\u52d5\u304f\u30b3\u30fc\u30c9\u3092\u958b\u767a\u3059\u308b\u6642\u70b9\u3067\u306fSTL\u3092\u4f7f\u3046\u3053\u3068\u3092\u63d0\u6848\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n\nstd::map\u578b\u304c\u4f7f\u3048\u306a\u3044\u74b0\u5883\u3078\u306e\u79fb\u884c\u3092\u697d\u306b\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\n\n\u6b21\u306ePython\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3001withMap.cpp\u30d5\u30a1\u30a4\u30eb\u4e2d\u306estd::map\u306e\u30de\u30c3\u30c3\u30d4\u30f3\u30b0\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001STL\u3092\u4f7f\u308f\u306a\u3044if() else if()\u6587\u306e\u4e26\u3073\u3092\u751f\u6210\u3055\u305b\u308b\u3082\u306e\u3067\u3059\u3002\n\nintoElseif.py\n# -*- coding: utf-8 -*-\ndef parseMap(name):\n    u\"\"\"\n    std::map<std::string, int>atmomicNumbers \u3092\u8aad\u307f\u53d6\u308b\u3002\n    map\u306e\u30ad\u30fc\u3068\u5024\u3068\u3092\u8aad\u307f\u53d6\u308a\u3001Python\u306e\u8f9e\u66f8\u306b\u4ee3\u5165\u3059\u308b\u3002\n    \"\"\"\n    d = {}\n    for line in open(name, \"rt\"):\n        oline = line.strip().replace(\",\", \" \")\n        if len(oline) > 1 and oline[-1] == \",\":\n            oline = oline[:-1]\n        f = oline.split()\n        if len(f) == 4 and f[0] == \"{\":\n            d[int(f[2])] = f[1]\n    return d\n\nif __name__ == \"__main__\":\n    u\"\"\"\n    \u8aad\u307f\u53d6\u3063\u305f\u8f9e\u66f8\u3092\u5143\u306bC/C++\u8a00\u8a9e\u306eif else if\u3000\u6587\u3092\u751f\u6210\u3059\u308b\u3002\n    \"\"\"\n    d = parseMap(name=\"withMap.cpp\")\n    keys = d.keys()\n    keys.sort()\n    k = keys[0]\n    print \"\"\"if(strcmp(instr, %s) == 0){\n    r = %s;\n}\"\"\" % (d[k], k),\n    for i in range(1, len(keys)):\n        k = keys[i]\n        print \"\"\"else if(strcmp(instr, %s) == 0){\n    r = %s;\n}\"\"\" % (d[k], k),\n\n\n\n\u5165\u529b\u30c7\u30fc\u30bf\u306estd::map\u578b\u306e\u30c7\u30fc\u30bf\u3092\u542b\u3080C++\u30d5\u30a1\u30a4\u30eb\n\nwithMap.cpp\n#include <iostream>\n#include <string>\n#include <map>\n\n/** \u5143\u7d20\u8a18\u53f7\u304b\u3089\u539f\u5b50\u756a\u53f7\u3092\u5bfe\u5fdc\u3055\u305b\u308bmap\u578b\u306e\u30b3\u30f3\u30c6\u30ca\n* \u5ba3\u8a00\u3068\u540c\u6642\u306b\u521d\u671f\u5316\u3092\u5b9f\u65bd\u3002\n* \uff08\u7b2c2\u5468\u671f\u306eNe\u307e\u3067\u3057\u304b\u8a18\u8f09\u3057\u3066\u3044\u306a\u3044\u3002)\n*/\nstd::map<std::string, int> atmomicNumbers = {\n    { \"H\", 1 },\n    { \"He\", 2 },\n    { \"Li\", 3 },\n    { \"Be\", 4 },\n    { \"B\", 5 },\n    { \"C\", 6 },\n    { \"N\", 7 },\n    { \"O\", 8 },\n    { \"F\", 9 },\n    { \"Ne\", 10 }\n};\n\nint main(int argc, char* argv[]){\n    std::string symbol = \"Be\";\n\n    std::cout << symbol << \" \" << atmomicNumbers[symbol] << std::endl;\n}\n\n\n\u5b9f\u884c\u7d50\u679c\n\ngenerated.cpp\nif(strcmp(instr, \"H\") == 0){\n    r = 1;\n} else if(strcmp(instr, \"He\") == 0){\n    r = 2;\n} else if(strcmp(instr, \"Li\") == 0){\n    r = 3;\n} else if(strcmp(instr, \"Be\") == 0){\n    r = 4;\n} else if(strcmp(instr, \"B\") == 0){\n    r = 5;\n} else if(strcmp(instr, \"C\") == 0){\n    r = 6;\n} else if(strcmp(instr, \"N\") == 0){\n    r = 7;\n} else if(strcmp(instr, \"O\") == 0){\n    r = 8;\n} else if(strcmp(instr, \"F\") == 0){\n    r = 9;\n} else if(strcmp(instr, \"Ne\") == 0){\n   r = 10;\n}\n\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u898f\u5247\u6b63\u3057\u3044\u30c7\u30fc\u30bf\u306e\u90e8\u5206\u304b\u3089\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e00\u90e8\u3092\u81ea\u52d5\u751f\u6210\u3055\u305b\u308b\u3053\u3068\u306f\u5bb9\u6613\u306a\u3053\u3068\u3067\u3059\u3002\u3067\u3059\u304b\u3089\u3001\u898b\u901a\u3057\u306e\u3088\u3044\u30c7\u30fc\u30bf\u5f62\u5f0f\u3092\u7528\u3044\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5065\u5168\u6027\u3092\u78ba\u4fdd\u3059\u308b\u3053\u3068\u3092\u4e3b\u5f35\u3057\u307e\u3059\u3002\n\u3000std::map\u3092\u4f7f\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8a18\u8ff0\u3059\u308c\u3070\u3001\u30c7\u30fc\u30bf\u304c\u5897\u3048\u308b\u3053\u3068\u306e\u5f71\u97ff\u306f\n{ \"Ne\", 10 }\n\u4ee5\u964d\u306e\u884c\u3092\u8db3\u3059\u3060\u3051\u306b\u306a\u3063\u3066\u3001\u305d\u308c\u4ee5\u5916\u306e\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u3092\u4e0d\u8981\u3068\u3057\u307e\u3059\u3002\n\u3000\u307e\u305a\u6b63\u3057\u304f\u52d5\u304f\u3053\u3068\u3001\u6b63\u3057\u304f\u52d5\u3044\u3066\u3044\u308b\u3053\u3068\u3092\u62c5\u4fdd\u3067\u304d\u308b\u4ed5\u7d44\u307f\u3092\u78ba\u4fdd\u3059\u308b\u3053\u3068\u3001\u6b21\u306b\u5b9f\u88c5\u4e0a\u306e\u6027\u80fd(\u51e6\u7406\u901f\u5ea6\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u30b5\u30a4\u30ba)\u3092\u78ba\u4fdd\u3059\u308b\u3053\u3068\u3060\u3068\u8003\u3048\u307e\u3059\u3002\n\n\u88dc\u8db3\uff1a\n\n\u3000\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001std::map\u3092\u4f7f\u308f\u305a\u306b\u3001\nchar* [] atomicSymbols = {\n    \"H\", \"He\",\n    \"Li\", \"Be\", \"B\", \"c\", \"N\", \"O\", \"F\", \"Ne\"\n}\n\n\u3068\u3044\u3046\u914d\u5217\u3092\u4f7f\u3063\u3066\u51e6\u7406\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b\u3002\u3057\u304b\u3057\u3001\u3053\u3053\u3067\u306f\u3001\u30ad\u30fc\u3068\u5024\u3068\u3092\u5bfe\u5fdc\u4ed8\u3051\u308b\u30ed\u30b8\u30c3\u30af\u306b\u6a19\u6e96\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3053\u3068\u3092\u63d0\u6848\u3059\u308b\u305f\u3081\u306bstd::map<std::string, int>\u578b\u3092\u7528\u3044\u3066\u3044\u308b\u3002\n\n\u4ed8\u8a18\uff1a\n\n\u3000\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e\u3092\u4f7f\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e00\u90e8\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u306f\u3001\u4e00\u90e8\u306e\u4eba\u306b\u306f\u6614\u304b\u3089\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\u30c7\u30fc\u30bf\u3060\u3051\u5165\u308c\u66ff\u3048\u305f\u540c\u3058\u3088\u3046\u306a\u5185\u5bb9\u3092\u5c71\u307b\u3069\u8a18\u8ff0\u3059\u308b\u3068\u304d\u306b\u3001\u30c7\u30fc\u30bf\u3092\u5143\u306b\u305d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e00\u90e8\u3092\u81ea\u52d5\u751f\u6210\u3057\u3066\u304d\u305f\u3002\u30c7\u30fc\u30bf\u306f\u3057\u3070\u3057\u983b\u7e41\u306b\u66f4\u65b0\u3055\u308c\u308b\u306e\u3067\u3001\u4e00\u5ea6\u624b\u4f5c\u696d\u3067\u66f8\u3044\u3066\u305d\u308c\u3063\u304d\u308a\u3068\u3044\u3046\u308f\u3051\u306b\u306f\u3044\u304b\u306a\u3044\u3053\u3068\u3082\u3042\u308b\u3002\u305d\u306e\u3088\u3046\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u3001\u3069\u306e\u3088\u3046\u306a\u8a00\u8a9e\u306b\u5bfe\u3057\u3066\u3082\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u3000\u305f\u3068\u3048\u3070\u3001Ratfor\u3068\u3044\u3046FORTRAN\u306e\u62e1\u5f35\u8a00\u8a9e\u306f\u3001\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001FORTRAN\u8a00\u8a9e\u306e\u8a00\u8a9e\u4ed5\u69d8\u4e0a\u306e\u6b20\u70b9\u3092\u96a0\u3059\u3082\u306e\u3067\u3042\u3063\u305f\u3002\u884c\u3063\u3066\u3044\u308b\u51e6\u7406\u306e\u898b\u901a\u3057\u3092\u3088\u304f\u3059\u308b\u3053\u3068\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5065\u5168\u6027\u3092\u65e9\u3044\u6bb5\u968e\u3067\u62c5\u4fdd\u3059\u308b\u3053\u3068\u3060\u3068\u79c1\u306f\u8003\u3048\u308b\u3002\n\u8ffd\u8a18\uff1a\n\u300e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u4f5c\u6cd5\u300f \u7b2c9\u7ae0\u3000\u8a18\u6cd5\u300c9.5\u3000\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8a18\u8ff0\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u300d\u306b\u306f\u3001\u540d\u524d\u3068\u30b3\u30e1\u30f3\u30c8\u3092\u542b\u3093\u3060\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306b\u57fa\u3065\u3044\u3066\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u305d\u306e\u672c\u3067\u306f\u3001perl\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u81ea\u52d5\u5909\u63db\u3057\u3066\u3044\u308b\u3002\u3053\u306e\u3088\u3046\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e\u3092\u4f7f\u3063\u3066C/C++\u8a00\u8a9e\u3067\u306e\u958b\u767a\u3092\u52a0\u901f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nenum {\n    Eperm,  /* Permission denied */\n    Eio,    /* I/O error */\n    Efile,  /* File does not exist */\n    Emem,   /* Memory limit reached */\n    Espace, /* Out of file space */\n    Egreg   /* It's all Greg's fault */\n};\n\n\u304b\u3089\u6b21\u306e\u5ba3\u8a00\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u4f8b\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u3002\nchar *errs[] = {\n   \"Permission denied\", /* Eperm */\n   \"I/O error\", /* Eio */\n   \"File does not exist\", /* Efile */\n   \"Memory limit reached\", /* Emem */\n   \"Out of file space\", /* Espace */\n   \"It's all Greg's fault\", /* Egreg */ \n };\n\n\u3000\u524d\u306e\u6295\u7a3f\u3067\u3001[std::map\u578b\u3092\u4f7f\u3063\u3066\u898b\u901a\u3057\u306e\u3088\u3044\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u3057\u3088\u3046](http://qiita.com/nonbiri15/items/ff739d455377bc1bc9ed)\u3068\u66f8\u3044\u305f\u3002\n \n####**\u3042\u308b\u7a0b\u5ea6\u4ee5\u4e0a\u306e\u7d44\u307f\u8fbc\u307f\u74b0\u5883\u306e\u5834\u5408**\n  \u3042\u308b\u7a0b\u5ea6\u4ee5\u4e0a\u306e\u7d44\u307f\u8fbc\u307f\u74b0\u5883\u306a\u3089\u3070\uff08\u4f8b\uff1aRaspberryPi\u3084Zynq\u306a\u3069\u306e\u30dc\u30fc\u30c9\uff09g++\u3092\u4f7f\u3048\u3001STL\u3092\u4f7f\u3046\u3053\u3068\u306b\u4f55\u306e\u554f\u984c\u3082\u306a\u3044\u306f\u305a\u3060\u3002\u305d\u3057\u3066STL\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8a18\u8ff0\u3067\u304d\u308b\u3002PC\u3067\u958b\u767a\u3057\u3066\u3044\u3066\u3001\u307e\u305a\u306f\u6b63\u3057\u304f\u52d5\u304f\u7248\u3092\u4f5c\u308b\u5206\u306b\u306f\u3001STL\u3092\u7a4d\u6975\u7684\u306b\u4f7f\u3046\u3079\u304d\u3060\u3068\u79c1\u306f\u8003\u3048\u308b(\u4e00\u90e8\u306e\u5546\u7528\u30b3\u30f3\u30d1\u30a4\u30e9\u306eC++\u306e\u5b9f\u88c5\u306b\u4e0d\u5b89\u304c\u3042\u3063\u3066\u3001\u305d\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u4f7f\u3046STL\u306e\u5b9f\u88c5\u306b\u4e0d\u5b89\u304c\u3042\u3063\u305f\u6614\u3068\u306f\u72b6\u6cc1\u304c\u7570\u306a\u308b\u3068\u601d\u3046\u3002\u5f53\u6642\u306f\u3001STL\u3092\u5229\u7528\u3057\u3066\u66f8\u304b\u308c\u3066\u3044\u305f\u30b3\u30fc\u30c9\u3092\u975eSTL\u30b3\u30fc\u30c9\u306b\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u3092\u6c42\u3081\u3089\u308c\u305f\u3068\u3044\u3046\u8a71\u3092\u805e\u3044\u305f\u3053\u3068\u304c\u3042\u308b\u3002)\u3002STL\u306f\u5916\u90e8\u4ed5\u69d8\u304c\u660e\u89e3\u3067\u3042\u308a\u3001\u8907\u6570\u306e\u30e1\u30f3\u30d0\u30fc\u3067\u7406\u89e3\u304c\u5171\u901a\u5316\u3057\u3084\u3059\u3044\u3002STL\u3092\u4f7f\u3063\u3066\u697d\u3092\u3057\u305f\u5206\u3060\u3051\u4ed6\u306e\u90e8\u5206\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5341\u5206\u306b\u4ed5\u69d8\u3092\u660e\u78ba\u306b\u3057\u3066\u30c6\u30b9\u30c8\u3092\u3059\u308b\u3053\u3068\u306b\u52b4\u529b\u3092\u3055\u3051\u308b\u3002\n\n\u3000\u6700\u7d42\u5b9f\u88c5\u304cPC\u3067\u3042\u308b\u5834\u5408\u306b\u306f\u3001STL\u306e\u307e\u307e\u306b\u3067\u304d\u308b\u3067\u3042\u308d\u3046\u3057\u3001\u3042\u308b\u7a0b\u5ea6\u4ee5\u4e0a\u306e\u7d44\u307f\u8fbc\u307f\u74b0\u5883\u3067\u3082STL\u306e\u307e\u307e\u306b\u3059\u308b\u3068\u3044\u3046\u9078\u629e\u304c\u3042\u308b\u3060\u308d\u3046\u3002\n\u3000\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u305d\u308c\u3067\u3082STL\u3092\u6700\u7d42\u5b9f\u88c5\u306b\u4f7f\u3048\u306a\u3044\u3068\u3044\u3046\u4eba\u306e\u305f\u3081\u306b\u3001C++\u306e\u30bd\u30fc\u30b9\u3092\u81ea\u52d5\u751f\u6210\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u3092\u793a\u3059\u3053\u3068\u3067\u3001PC\u7248\u3067\u6b63\u3057\u304f\u52d5\u304f\u30b3\u30fc\u30c9\u3092\u958b\u767a\u3059\u308b\u6642\u70b9\u3067\u306fSTL\u3092\u4f7f\u3046\u3053\u3068\u3092\u63d0\u6848\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n\n####**std::map\u578b\u304c\u4f7f\u3048\u306a\u3044\u74b0\u5883\u3078\u306e\u79fb\u884c\u3092\u697d\u306b\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8**\n \u6b21\u306ePython\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3001withMap.cpp\u30d5\u30a1\u30a4\u30eb\u4e2d\u306estd::map<std::string, int>\u306e\u30de\u30c3\u30c3\u30d4\u30f3\u30b0\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001STL\u3092\u4f7f\u308f\u306a\u3044if() else if()\u6587\u306e\u4e26\u3073\u3092\u751f\u6210\u3055\u305b\u308b\u3082\u306e\u3067\u3059\u3002\n\n\n```py:intoElseif.py\n# -*- coding: utf-8 -*-\ndef parseMap(name):\n    u\"\"\"\n    std::map<std::string, int>atmomicNumbers \u3092\u8aad\u307f\u53d6\u308b\u3002\n    map\u306e\u30ad\u30fc\u3068\u5024\u3068\u3092\u8aad\u307f\u53d6\u308a\u3001Python\u306e\u8f9e\u66f8\u306b\u4ee3\u5165\u3059\u308b\u3002\n    \"\"\"\n    d = {}\n    for line in open(name, \"rt\"):\n        oline = line.strip().replace(\",\", \" \")\n        if len(oline) > 1 and oline[-1] == \",\":\n            oline = oline[:-1]\n        f = oline.split()\n        if len(f) == 4 and f[0] == \"{\":\n            d[int(f[2])] = f[1]\n    return d\n\nif __name__ == \"__main__\":\n    u\"\"\"\n    \u8aad\u307f\u53d6\u3063\u305f\u8f9e\u66f8\u3092\u5143\u306bC/C++\u8a00\u8a9e\u306eif else if\u3000\u6587\u3092\u751f\u6210\u3059\u308b\u3002\n    \"\"\"\n    d = parseMap(name=\"withMap.cpp\")\n    keys = d.keys()\n    keys.sort()\n    k = keys[0]\n    print \"\"\"if(strcmp(instr, %s) == 0){\n    r = %s;\n}\"\"\" % (d[k], k),\n    for i in range(1, len(keys)):\n        k = keys[i]\n        print \"\"\"else if(strcmp(instr, %s) == 0){\n    r = %s;\n}\"\"\" % (d[k], k),\n\n```\n\n\n\u5165\u529b\u30c7\u30fc\u30bf\u306estd::map\u578b\u306e\u30c7\u30fc\u30bf\u3092\u542b\u3080C++\u30d5\u30a1\u30a4\u30eb\n\n```cpp:withMap.cpp\n#include <iostream>\n#include <string>\n#include <map>\n\n/** \u5143\u7d20\u8a18\u53f7\u304b\u3089\u539f\u5b50\u756a\u53f7\u3092\u5bfe\u5fdc\u3055\u305b\u308bmap\u578b\u306e\u30b3\u30f3\u30c6\u30ca\n* \u5ba3\u8a00\u3068\u540c\u6642\u306b\u521d\u671f\u5316\u3092\u5b9f\u65bd\u3002\n* \uff08\u7b2c2\u5468\u671f\u306eNe\u307e\u3067\u3057\u304b\u8a18\u8f09\u3057\u3066\u3044\u306a\u3044\u3002)\n*/\nstd::map<std::string, int> atmomicNumbers = {\n\t{ \"H\", 1 },\n\t{ \"He\", 2 },\n\t{ \"Li\", 3 },\n\t{ \"Be\", 4 },\n\t{ \"B\", 5 },\n\t{ \"C\", 6 },\n\t{ \"N\", 7 },\n\t{ \"O\", 8 },\n\t{ \"F\", 9 },\n\t{ \"Ne\", 10 }\n};\n\nint main(int argc, char* argv[]){\n\tstd::string symbol = \"Be\";\n\t\n\tstd::cout << symbol << \" \" << atmomicNumbers[symbol] << std::endl;\n}\n```\n\n\u5b9f\u884c\u7d50\u679c\n\n```cpp:generated.cpp\nif(strcmp(instr, \"H\") == 0){\n    r = 1;\n} else if(strcmp(instr, \"He\") == 0){\n    r = 2;\n} else if(strcmp(instr, \"Li\") == 0){\n    r = 3;\n} else if(strcmp(instr, \"Be\") == 0){\n    r = 4;\n} else if(strcmp(instr, \"B\") == 0){\n    r = 5;\n} else if(strcmp(instr, \"C\") == 0){\n    r = 6;\n} else if(strcmp(instr, \"N\") == 0){\n    r = 7;\n} else if(strcmp(instr, \"O\") == 0){\n    r = 8;\n} else if(strcmp(instr, \"F\") == 0){\n    r = 9;\n} else if(strcmp(instr, \"Ne\") == 0){\n   r = 10;\n}\n```\n\n\n \u3053\u306e\u3088\u3046\u306b\u3001\u898f\u5247\u6b63\u3057\u3044\u30c7\u30fc\u30bf\u306e\u90e8\u5206\u304b\u3089\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e00\u90e8\u3092\u81ea\u52d5\u751f\u6210\u3055\u305b\u308b\u3053\u3068\u306f\u5bb9\u6613\u306a\u3053\u3068\u3067\u3059\u3002\u3067\u3059\u304b\u3089\u3001\u898b\u901a\u3057\u306e\u3088\u3044\u30c7\u30fc\u30bf\u5f62\u5f0f\u3092\u7528\u3044\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5065\u5168\u6027\u3092\u78ba\u4fdd\u3059\u308b\u3053\u3068\u3092\u4e3b\u5f35\u3057\u307e\u3059\u3002\n\u3000std::map\u3092\u4f7f\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8a18\u8ff0\u3059\u308c\u3070\u3001\u30c7\u30fc\u30bf\u304c\u5897\u3048\u308b\u3053\u3068\u306e\u5f71\u97ff\u306f\n\t`{ \"Ne\", 10 }`\n\u4ee5\u964d\u306e\u884c\u3092\u8db3\u3059\u3060\u3051\u306b\u306a\u3063\u3066\u3001\u305d\u308c\u4ee5\u5916\u306e\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u3092\u4e0d\u8981\u3068\u3057\u307e\u3059\u3002\n\n\u3000\u307e\u305a\u6b63\u3057\u304f\u52d5\u304f\u3053\u3068\u3001\u6b63\u3057\u304f\u52d5\u3044\u3066\u3044\u308b\u3053\u3068\u3092\u62c5\u4fdd\u3067\u304d\u308b\u4ed5\u7d44\u307f\u3092\u78ba\u4fdd\u3059\u308b\u3053\u3068\u3001\u6b21\u306b\u5b9f\u88c5\u4e0a\u306e\u6027\u80fd(\u51e6\u7406\u901f\u5ea6\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u30b5\u30a4\u30ba)\u3092\u78ba\u4fdd\u3059\u308b\u3053\u3068\u3060\u3068\u8003\u3048\u307e\u3059\u3002\n\n\n####**\u88dc\u8db3\uff1a**\n\u3000\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001std::map\u3092\u4f7f\u308f\u305a\u306b\u3001\n\n```cpp:\nchar* [] atomicSymbols = {\n    \"H\", \"He\",\n    \"Li\", \"Be\", \"B\", \"c\", \"N\", \"O\", \"F\", \"Ne\"\n}\n```\n\n\u3068\u3044\u3046\u914d\u5217\u3092\u4f7f\u3063\u3066\u51e6\u7406\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b\u3002\u3057\u304b\u3057\u3001\u3053\u3053\u3067\u306f\u3001\u30ad\u30fc\u3068\u5024\u3068\u3092\u5bfe\u5fdc\u4ed8\u3051\u308b\u30ed\u30b8\u30c3\u30af\u306b\u6a19\u6e96\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3053\u3068\u3092\u63d0\u6848\u3059\u308b\u305f\u3081\u306b`std::map<std::string, int>`\u578b\u3092\u7528\u3044\u3066\u3044\u308b\u3002\n\n\n####**\u4ed8\u8a18\uff1a**\n\u3000\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e\u3092\u4f7f\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e00\u90e8\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u306f\u3001\u4e00\u90e8\u306e\u4eba\u306b\u306f\u6614\u304b\u3089\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\u30c7\u30fc\u30bf\u3060\u3051\u5165\u308c\u66ff\u3048\u305f\u540c\u3058\u3088\u3046\u306a\u5185\u5bb9\u3092\u5c71\u307b\u3069\u8a18\u8ff0\u3059\u308b\u3068\u304d\u306b\u3001\u30c7\u30fc\u30bf\u3092\u5143\u306b\u305d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e00\u90e8\u3092\u81ea\u52d5\u751f\u6210\u3057\u3066\u304d\u305f\u3002\u30c7\u30fc\u30bf\u306f\u3057\u3070\u3057\u983b\u7e41\u306b\u66f4\u65b0\u3055\u308c\u308b\u306e\u3067\u3001\u4e00\u5ea6\u624b\u4f5c\u696d\u3067\u66f8\u3044\u3066\u305d\u308c\u3063\u304d\u308a\u3068\u3044\u3046\u308f\u3051\u306b\u306f\u3044\u304b\u306a\u3044\u3053\u3068\u3082\u3042\u308b\u3002\u305d\u306e\u3088\u3046\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u3001\u3069\u306e\u3088\u3046\u306a\u8a00\u8a9e\u306b\u5bfe\u3057\u3066\u3082\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u3000\u305f\u3068\u3048\u3070\u3001Ratfor\u3068\u3044\u3046FORTRAN\u306e\u62e1\u5f35\u8a00\u8a9e\u306f\u3001\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001FORTRAN\u8a00\u8a9e\u306e\u8a00\u8a9e\u4ed5\u69d8\u4e0a\u306e\u6b20\u70b9\u3092\u96a0\u3059\u3082\u306e\u3067\u3042\u3063\u305f\u3002\u884c\u3063\u3066\u3044\u308b\u51e6\u7406\u306e\u898b\u901a\u3057\u3092\u3088\u304f\u3059\u308b\u3053\u3068\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5065\u5168\u6027\u3092\u65e9\u3044\u6bb5\u968e\u3067\u62c5\u4fdd\u3059\u308b\u3053\u3068\u3060\u3068\u79c1\u306f\u8003\u3048\u308b\u3002\n\n\n\u8ffd\u8a18\uff1a\n[\u300e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u4f5c\u6cd5\u300f](http://ascii.asciimw.jp/books/books/detail/4-7561-3649-4.shtml) \u7b2c9\u7ae0\u3000\u8a18\u6cd5\u300c9.5\u3000\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8a18\u8ff0\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u300d\u306b\u306f\u3001\u540d\u524d\u3068\u30b3\u30e1\u30f3\u30c8\u3092\u542b\u3093\u3060\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306b\u57fa\u3065\u3044\u3066\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u305d\u306e\u672c\u3067\u306f\u3001perl\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u81ea\u52d5\u5909\u63db\u3057\u3066\u3044\u308b\u3002\u3053\u306e\u3088\u3046\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e\u3092\u4f7f\u3063\u3066C/C++\u8a00\u8a9e\u3067\u306e\u958b\u767a\u3092\u52a0\u901f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```cpp:\nenum {\n    Eperm,  /* Permission denied */\n    Eio,    /* I/O error */\n    Efile,  /* File does not exist */\n    Emem,   /* Memory limit reached */\n    Espace, /* Out of file space */\n    Egreg   /* It's all Greg's fault */\n};\n```\n\n\u304b\u3089\u6b21\u306e\u5ba3\u8a00\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u4f8b\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u3002\n\n```cpp:\nchar *errs[] = {\n   \"Permission denied\", /* Eperm */\n   \"I/O error\", /* Eio */\n   \"File does not exist\", /* Efile */\n   \"Memory limit reached\", /* Emem */\n   \"Out of file space\", /* Espace */\n   \"It's all Greg's fault\", /* Egreg */ \n };\n```\n", "tags": ["C++", "Python", "STL", "\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0"]}