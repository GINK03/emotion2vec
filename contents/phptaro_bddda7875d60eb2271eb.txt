{"context": " More than 1 year has passed since last update.\n\n\u624b\u9806\n\u300cSetLanguage\u300d\u30dc\u30c3\u30af\u30b9\u3092\u7f6e\u304d\u3001Japanese\u306b\u8a2d\u5b9a\n\u300cSay\u300d\u30dc\u30c3\u30af\u30b9\u3092\u7f6e\u304d\u3001\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3067\u4e2d\u306b\u5165\u308a\u3001Localized Text\u3092Japanese\u306b\u8a2d\u5b9a\u300cSay Text\u300d\u30dc\u30c3\u30af\u30b9\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u3001\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u66f8\u304d\u63db\u3048\u308b\n\u300cSetLanguage\u300d\u3068\u300cSay\u300d\u3092\u3064\u306a\u304e\u5b9f\u884c\u3002\u4eca\u65e5\u306e\u66dc\u65e5\u3092\u8a71\u3057\u3066\u304f\u308c\u308b\u306f\u305a\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n#import time\n#import datetime\n\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self, False)\n        self.tts = ALProxy('ALTextToSpeech')\n        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote\n\n    def onLoad(self):\n        self.bIsRunning = False\n        self.ids = []\n\n    def onUnload(self):\n        for id in self.ids:\n            try:\n                self.ttsStop.stop(id)\n            except:\n                pass\n        while( self.bIsRunning ):\n            time.sleep( 0.2 )\n\n    def onInput_onStart(self, p):\n        self.bIsRunning = True\n        d = datetime.datetime.today()\n        self.log(\"\u66dc\u65e5\uff08\u6708\u66dc\u304c\uff10\uff0c\u65e5\u66dc\u304c\uff16\uff09:\")\n        self.log(d.weekday())\n\n        wd = self.getWeekday(d.weekday())\n        self.log(wd)\n\n        try:\n            sentence = \"\\RSPD=\"+ str( self.getParameter(\"Speed (%)\") ) + \"\\ \"\n            sentence += \"\\VCT=\"+ str( self.getParameter(\"Voice shaping (%)\") ) + \"\\ \"\n            sentence += '%s\u3088\u3046\u3073' %(wd)\n            sentence +=  \"\\RST\\ \"\n            id = self.tts.post.say(str(sentence))\n            self.ids.append(id)\n            self.tts.wait(id, 0)\n        finally:\n            try:\n                self.ids.remove(id)\n            except:\n                pass\n            if( self.ids == [] ):\n                self.onStopped() # activate output of the box\n                self.bIsRunning = False\n\n    def onInput_onStop(self):\n        self.onUnload()\n\n    def getWeekday(self, num):\n        self.log(\"getWeekday\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u305f\" + str(num))\n\n        if (num == 0):\n            return \"\u3052\u3064\"\n        elif (num == 1):\n            return \"\u304b\"\n        elif (num == 2):\n            return \"\u3059\u3044\"\n        elif (num == 3):\n            return \"\u3082\u304f\"\n        elif (num == 4):\n            return \"\u304d\u3093\"\n        elif (num == 5):\n            return \"\u3069\"\n        elif (num == 6):\n            return \"\u306b\u3061\"\n        else:\n            return \"\u306a\u3093\"\n\n\u5148\u982d\u884c\u306eimport\u3001\u66f8\u304b\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\u3068\u601d\u3063\u3066\u3044\u305f\u304c\u3001\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u3082\u52d5\u3044\u305f\u3002\n\u81ea\u4f5c\u95a2\u6570getWeekday()\u3092\u8f9e\u66f8\u3092\u4f7f\u3063\u3066\u3082\u3046\u5c11\u3057\u7c21\u6f54\u306b\u3057\u3066\u307f\u305f\u3002\n\u3055\u3089\u306b\u3001parameter\u306baddDate\u3092\u8ffd\u52a0\u3057\u3066\u3001\u904e\u53bb\u3084\u672a\u6765\u306e\u66dc\u65e5\u3082\u8a00\u308f\u305b\u3089\u308c\u308b\u3088\u3046\u306b\u3002\n\n def onInput_onStart(self, p):\n        #\u7565\n\n        wd = self.getWeekday(d.weekday(), self.getParameter(\"addDate\"))\n        self.log(wd)\n\n        try:\n            sentence = \"\\RSPD=\"+ str( self.getParameter(\"Speed (%)\") ) + \"\\ \"\n            sentence += \"\\VCT=\"+ str( self.getParameter(\"Voice shaping (%)\") ) + \"\\ \"\n            sentence += '%s\u3088\u3046\u3073' %(wd)\n            sentence +=  \"\\RST\\ \"\n            #\u7565\n\n\n    def getWeekday(self, num, opt=0):\n            self.log(\"getWeekday\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u305f\" + str(num))\n            self.log(type(num))\n            num += opt\n            youbi = [\"\u3052\u3064\", \"\u304b\", \"\u3059\u3044\", \"\u3082\u304f\", \"\u304d\u3093\", \"\u3069\", \"\u306b\u3061\", \"\u306a\u3093\"]\n            return youbi[num]\n\n\n\n\n\n\u6240\u611f\n\u30fbpython(\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u601d\u8003\u3082)\u304c\u521d\u3081\u3066\u306a\u306e\u3067\u3001\u95a2\u6570\u3072\u3068\u3064\u4f5c\u308b\u3060\u3051\u306a\u306e\u306b\u82e6\u52b4\u3057\u305f\u3002\n\u30fbself\u3092\u66f8\u304f\u3068\u3053\u308d\u3068\u4e0d\u8981\u306a\u3068\u3053\u308d\u304c\u3042\u308b\u304c\u3001\u3044\u307e\u3044\u3061\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3002\n\u30fb\u914d\u5217\u3092\u4f7f\u3063\u3066\u51e6\u7406\u3059\u308b\u3053\u3068\u3067\u8a18\u8ff0\u91cf\u304c\u6e1b\u308b\u3002\n\u30fbself.log(\"xxx\")\u3092\u591a\u7528\u3057\u3066\u3001\u30ed\u30b0\u30d3\u30e5\u30fc\u30a2\u3067\uff11\u3064\u305a\u3064\u78ba\u8a8d\u3057\u305f\u3002\n\u30fbtimedelta\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3048\u3070getWeekday\u95a2\u6570\u306e\u7b2c\uff13\u5f15\u6570\u3092\u81ea\u4f5c\u3057\u306a\u304f\u3066\u3088\u304b\u3063\u305f\u304b\u3082\u3002Python\u3067X\u65e5\u524d/X\u65e5\u5f8c\u3092\u6c42\u3081\u308b\u65b9\u6cd5\n\n\u53c2\u8003\n[Pepper] Pepper\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3000\uff5ePepper\u306b\u73fe\u5728\u6642\u523b\u3092\u805e\u3044\u3066\u307f\u3088\u3046\uff01\uff01\uff5e\n#\u624b\u9806\n\u300cSetLanguage\u300d\u30dc\u30c3\u30af\u30b9\u3092\u7f6e\u304d\u3001Japanese\u306b\u8a2d\u5b9a\n\u300cSay\u300d\u30dc\u30c3\u30af\u30b9\u3092\u7f6e\u304d\u3001\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3067\u4e2d\u306b\u5165\u308a\u3001Localized Text\u3092Japanese\u306b\u8a2d\u5b9a\u300cSay Text\u300d\u30dc\u30c3\u30af\u30b9\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u3001\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u66f8\u304d\u63db\u3048\u308b\n\u300cSetLanguage\u300d\u3068\u300cSay\u300d\u3092\u3064\u306a\u304e\u5b9f\u884c\u3002\u4eca\u65e5\u306e\u66dc\u65e5\u3092\u8a71\u3057\u3066\u304f\u308c\u308b\u306f\u305a\u3002\n\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n```py\n#import time\n#import datetime\n\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self, False)\n        self.tts = ALProxy('ALTextToSpeech')\n        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote\n\n    def onLoad(self):\n        self.bIsRunning = False\n        self.ids = []\n\n    def onUnload(self):\n        for id in self.ids:\n            try:\n                self.ttsStop.stop(id)\n            except:\n                pass\n        while( self.bIsRunning ):\n            time.sleep( 0.2 )\n\n    def onInput_onStart(self, p):\n        self.bIsRunning = True\n        d = datetime.datetime.today()\n        self.log(\"\u66dc\u65e5\uff08\u6708\u66dc\u304c\uff10\uff0c\u65e5\u66dc\u304c\uff16\uff09:\")\n        self.log(d.weekday())\n\n        wd = self.getWeekday(d.weekday())\n        self.log(wd)\n\n        try:\n            sentence = \"\\RSPD=\"+ str( self.getParameter(\"Speed (%)\") ) + \"\\ \"\n            sentence += \"\\VCT=\"+ str( self.getParameter(\"Voice shaping (%)\") ) + \"\\ \"\n            sentence += '%s\u3088\u3046\u3073' %(wd)\n            sentence +=  \"\\RST\\ \"\n            id = self.tts.post.say(str(sentence))\n            self.ids.append(id)\n            self.tts.wait(id, 0)\n        finally:\n            try:\n                self.ids.remove(id)\n            except:\n                pass\n            if( self.ids == [] ):\n                self.onStopped() # activate output of the box\n                self.bIsRunning = False\n\n    def onInput_onStop(self):\n        self.onUnload()\n\n    def getWeekday(self, num):\n        self.log(\"getWeekday\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u305f\" + str(num))\n\n        if (num == 0):\n            return \"\u3052\u3064\"\n        elif (num == 1):\n            return \"\u304b\"\n        elif (num == 2):\n            return \"\u3059\u3044\"\n        elif (num == 3):\n            return \"\u3082\u304f\"\n        elif (num == 4):\n            return \"\u304d\u3093\"\n        elif (num == 5):\n            return \"\u3069\"\n        elif (num == 6):\n            return \"\u306b\u3061\"\n        else:\n            return \"\u306a\u3093\"\n```\n\n\u5148\u982d\u884c\u306eimport\u3001\u66f8\u304b\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\u3068\u601d\u3063\u3066\u3044\u305f\u304c\u3001\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u3082\u52d5\u3044\u305f\u3002\n\n\n\u81ea\u4f5c\u95a2\u6570```getWeekday()```\u3092\u8f9e\u66f8\u3092\u4f7f\u3063\u3066\u3082\u3046\u5c11\u3057\u7c21\u6f54\u306b\u3057\u3066\u307f\u305f\u3002\n\u3055\u3089\u306b\u3001parameter\u306baddDate\u3092\u8ffd\u52a0\u3057\u3066\u3001\u904e\u53bb\u3084\u672a\u6765\u306e\u66dc\u65e5\u3082\u8a00\u308f\u305b\u3089\u308c\u308b\u3088\u3046\u306b\u3002\n\n```py\n\n def onInput_onStart(self, p):\n        #\u7565\n\n        wd = self.getWeekday(d.weekday(), self.getParameter(\"addDate\"))\n        self.log(wd)\n\n        try:\n            sentence = \"\\RSPD=\"+ str( self.getParameter(\"Speed (%)\") ) + \"\\ \"\n            sentence += \"\\VCT=\"+ str( self.getParameter(\"Voice shaping (%)\") ) + \"\\ \"\n            sentence += '%s\u3088\u3046\u3073' %(wd)\n            sentence +=  \"\\RST\\ \"\n            #\u7565\n\n\n    def getWeekday(self, num, opt=0):\n            self.log(\"getWeekday\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u305f\" + str(num))\n            self.log(type(num))\n            num += opt\n            youbi = [\"\u3052\u3064\", \"\u304b\", \"\u3059\u3044\", \"\u3082\u304f\", \"\u304d\u3093\", \"\u3069\", \"\u306b\u3061\", \"\u306a\u3093\"]\n            return youbi[num]\n\n\n\n```\n\n#\u6240\u611f\n\u30fbpython(\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u601d\u8003\u3082)\u304c\u521d\u3081\u3066\u306a\u306e\u3067\u3001\u95a2\u6570\u3072\u3068\u3064\u4f5c\u308b\u3060\u3051\u306a\u306e\u306b\u82e6\u52b4\u3057\u305f\u3002\n\u30fbself\u3092\u66f8\u304f\u3068\u3053\u308d\u3068\u4e0d\u8981\u306a\u3068\u3053\u308d\u304c\u3042\u308b\u304c\u3001\u3044\u307e\u3044\u3061\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3002\n\u30fb\u914d\u5217\u3092\u4f7f\u3063\u3066\u51e6\u7406\u3059\u308b\u3053\u3068\u3067\u8a18\u8ff0\u91cf\u304c\u6e1b\u308b\u3002\n\u30fbself.log(\"xxx\")\u3092\u591a\u7528\u3057\u3066\u3001\u30ed\u30b0\u30d3\u30e5\u30fc\u30a2\u3067\uff11\u3064\u305a\u3064\u78ba\u8a8d\u3057\u305f\u3002\n\u30fbtimedelta\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3048\u3070getWeekday\u95a2\u6570\u306e\u7b2c\uff13\u5f15\u6570\u3092\u81ea\u4f5c\u3057\u306a\u304f\u3066\u3088\u304b\u3063\u305f\u304b\u3082\u3002[Python\u3067X\u65e5\u524d/X\u65e5\u5f8c\u3092\u6c42\u3081\u308b\u65b9\u6cd5](http://blog.mudaimemo.com/2009/05/pythonxx.html)\n\n#\u53c2\u8003\n[[Pepper] Pepper\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3000\uff5ePepper\u306b\u73fe\u5728\u6642\u523b\u3092\u805e\u3044\u3066\u307f\u3088\u3046\uff01\uff01\uff5e](http://arit-clt.com/2014/11/05/pepper-pepper%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E9%96%8B%E7%99%BA%E3%80%80%EF%BD%9Epepper%E3%81%AB%E7%8F%BE%E5%9C%A8%E6%99%82%E5%88%BB%E3%82%92%E8%81%9E%E3%81%84/)\n", "tags": ["Pepper", "Choregraphe"]}