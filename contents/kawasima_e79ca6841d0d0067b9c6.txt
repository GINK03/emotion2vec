{"context": " More than 1 year has passed since last update.http://www.slideshare.net/kawasima/clojure-30414922\n\u4ee5\u524d\u306etokyo.clj\u3067\u8a71\u3057\u305f\u5185\u5bb9\u3067\u3059\u304c\u3001Storm\u3092\u4f7f\u3063\u305f\u4e0d\u6b63\u30a2\u30af\u30bb\u30b9\u691c\u77e5\u306e\u4ed5\u7d44\u307f\u306e\u5b9f\u88c5\u3092\u3061\u3083\u3093\u3068\u4f5c\u308a\u306a\u304a\u3057\u3066\u307f\u305f\u306e\u3067\u3001\u3053\u3053\u306b\u8a73\u7d30\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\nhttp://www.nikkei.com/article/DGXMZO77794750R01C14A0000000/\n\u6700\u8fd1\u307e\u305f\u30ea\u30b9\u30c8\u578b\u653b\u6483\u304c\u5897\u3048\u3066\u304d\u3066\u3044\u308b\u3088\u3046\u3067\u3001\u5bfe\u7b56\u306b\u982d\u3092\u60a9\u307e\u3055\u308c\u3066\u3044\u308b\u30a8\u30f3\u30b8\u30cb\u30a2\u3082\u5c11\u306a\u304f\u306a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\u30ea\u30b9\u30c8\u578b\u653b\u6483\u306f\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3084WAF\u3067\u9632\u3050\u3053\u3068\u304c\u96e3\u3057\u304f\u3001\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u306a\u5224\u65ad\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u8907\u6570\u306e\u30b5\u30a4\u30c8\u304b\u3089\u30ed\u30b0\u30a4\u30f3\u306e\u30ed\u30b0(Database)\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u53ce\u96c6\u3057\u3001\u30ea\u30b9\u30c8\u578b\u30a2\u30af\u30bb\u30b9\u3063\u307d\u3044\u3082\u306e\u3092\u89e3\u6790\u3057\u30a2\u30e9\u30fc\u30c8\u3092\u3001\u76e3\u8996\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u3042\u3052\u308b\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3092\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3068\u3057\u3066\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n\u30ed\u30b0\u30a4\u30f3\u30ed\u30b0\u306e\u53ce\u96c6\n\u30ed\u30b0\u30a4\u30f3\u30ed\u30b0\u306f\u3001\u30e6\u30fc\u30b6\u306e\u30ed\u30b0\u30a4\u30f3\u8a66\u884c\u6642\u306b\u3001\u5404Web\u30a2\u30d7\u30ea\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u305d\u306e\u6210\u5426\u304c\u66f8\u304d\u8fbc\u307e\u308c\u308b\u60f3\u5b9a\u3067\u3059\u3002\ncreate table login_log (\n  logined_at timestamp not null,\n  account varchar2(100) not null,\n  ip_address varchar2(15) not null,\n  success char(1) not null);\n\n\u3053\u308c\u3092\u65e2\u5b58\u306eWeb\u30a2\u30d7\u30ea\u306b\u5909\u66f4\u3092\u52a0\u3048\u308b\u3053\u3068\u306a\u304f\u3001\u53d6\u5f97\u3059\u308b\u306b\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306eEvent\u6a5f\u80fd\u3092\u4f7f\u3046\u3068\u3088\u3044\u3067\u3059\u3002\nOracle\u306e\u5834\u5408\u3001DBMS_ALERT\u3092\u4f7f\u3046\u3068\u3001Web\u30a2\u30d7\u30ea\u3068\u306f\u5225\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3067\u3001\u30c6\u30fc\u30d6\u30eb\u3078\u306e\u66f4\u65b0\u304c\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nCREATE OR REPLACE TRIGGER login_log_after_insert\nAFTER INSERT\n   ON login_log\n   FOR EACH ROW\nBEGIN\n   DBMS_ALERT.SIGNAL('NEW_LOGIN',\n                     (cast(SYS_EXTRACT_UTC(:new.logined_at) as date)\n                      - cast(from_tz(timestamp '1970-01-01 00:00:00', '00:00')\n                      - as date)) * 24 * 60 * 60 || ' '\n                     || :new.account || ' '\n                     || :new.ip_address || ' '\n                     || :new.success);\nEND;\n/\n\n\u5909\u66f4\u306f\u30c8\u30ea\u30ac\u3092\u4ed5\u8fbc\u3093\u3067\u304a\u3044\u3066\u3001DBMS_ALERT.SIGNAL\u3067\u30a2\u30e9\u30fc\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u3053\u308c\u3092\u5225\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304b\u3089\u30ad\u30e3\u30c3\u30c1\u3057\u307e\u3059\u3002\n(reset! oracle-conn (j/get-connection oracle-db))\n (let [stmt (.prepareCall @oracle-conn \"{call DBMS_ALERT.REGISTER(?)}\")]\n  (doto stmt\n    (.setString 1 \"NEW_LOGIN\")\n    (.executeUpdate)\n    (.close)))\n(let [stmt (.prepareCall @oracle-conn \"{call DBMS_ALERT.WAITANY(?,?,?,?)}\")]\n  (doto stmt\n    (.registerOutParameter 1 Types/VARCHAR)\n    (.registerOutParameter 2 Types/VARCHAR)\n    (.registerOutParameter 3 Types/INTEGER)\n    (.setInt 4 300)))\n\n\u3053\u308c\u3067LOGIN_LOG\u30c6\u30fc\u30d6\u30eb\u306bINSERT\u304c\u3055\u308c\u305f\u77ac\u9593\u306b\u3001ALERT\u3092\u30ad\u30e3\u30c3\u30c1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u30ed\u30b0\u30b5\u30fc\u30d0\u306b\u9001\u4fe1\u3057\u3066\u3042\u3052\u307e\u3059\u3002\nhttps://github.com/kawasima/mine-canary/tree/master/example/log-collector\n\u3053\u3053\u3067\u306fflume\u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u5192\u982d\u306e\u30b9\u30e9\u30a4\u30c9\u306b\u66f8\u3044\u3066\u3042\u308b\u3088\u3046\u306b\u3001flume\u306e\u8a2d\u5b9a\u3084\u30aa\u30ea\u30b8\u30ca\u30eb\u306eSource\u3084Sink\u3092Clojure\u3067\u5b9f\u88c5\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n\u30ed\u30b0\u30a4\u30f3\u30ed\u30b0\u306e\u9001\u4fe1\n\u3053\u308c\u3082\u5192\u982d\u306e\u30b9\u30e9\u30a4\u30c9\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\u304c\u3001flume\u3068sto\uff52m\u3092\u9023\u643a\u306f\u9593\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u3092\u631f\u3080\u306e\u304c\u3088\u304f\u3042\u308b\u5b9f\u88c5\u4f8b\u3063\u307d\u3044\u306e\u3067\u3059\u304c\u3001\u5225\u7acb\u3066\u3059\u308b\u306e\u9762\u5012\u306a\u306e\u3067\u3001WebSocket\u3092\u4f7f\u3063\u305f\u81ea\u524d\u306e\u7d44\u307f\u8fbc\u307f\u578b\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u306e\u30e9\u30a4\u30d6\u30e9\u30eaulon-colon\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/kawasima/ulon-colon/\n\u305d\u3046\u3059\u308b\u3068\u3001\u9001\u4fe1\u5074\n(defsink ulon-colon-sink\n  :start  (fn [] (start-producer))\n  :process (fn [event]\n             (produce (String. (.getBody event)))))\n\n\u53d7\u4fe1\u5074\u306f\n(consume-sync consumer\n  (fn [msg]\n    (emit-spout! collector [msg]))))\n\n\u3068\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3067\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4e0d\u6b63\u30a2\u30af\u30bb\u30b9\u306e\u691c\u77e5\nStorm\u3092\u4f7f\u3063\u3066\u53ce\u96c6\u3057\u305f\u30ed\u30b0\u30a4\u30f3\u30ed\u30b0\u3092\u89e3\u6790\u3057\u307e\u3059\u3002\u3053\u308c\u7528\u306eSpout\u3068Bolt\u306e\u30bb\u30c3\u30c8\u3092mine-canary\u3068\u3057\u3066\u4f5c\u308a\u307e\u3057\u305f\u3002\nhttps://github.com/kawasima/mine-canary/\n\u3053\u3093\u306a\u611f\u3058\u3067\u4e00\u5b9a\u671f\u9593\u306b5\u56de\u4ee5\u4e0a\u540c\u4e00\u30e6\u30fc\u30b6\u3067\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u3057\u305f\u4eba\u3092\u691c\u51fa\u3059\u308bBolt\u3092\u66f8\u304d\u307e\u3059\u3002\n;;; \u4e00\u5b9a\u6642\u9593\u5185\u306b\u540c\u4e00\u30e6\u30fc\u30b6\u306e\u5927\u91cf\u306e\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u3092\u691c\u51fa\u3059\u308b\n(defbolt failures-by-same-user [\"account\" \"times\"] {:prepare true}\n  [conf context collector]\n  (let [counts (atom {})]\n    (bolt\n     (execute [tuple]\n       (let [[tm account ip-address success?] (.getValues tuple)\n             tm (long (Double/parseDouble tm))\n             success? (= success? \"1\")]\n         (when-not success?\n           (let [failures-tm (get @counts account [])]\n             (reset! counts\n                   (assoc @counts account (->> (conj failures-tm tm)\n                                               (sort >)\n                                               (take 5)\n                                               vec))))\n           (when (in-the-period? (@counts account))\n             (emit-bolt! collector [account (@counts account)] :anchor tuple)))\n         (ack! collector tuple))))))\n\n\n\u76e3\u8996\u30b3\u30f3\u30bd\u30fc\u30eb\u3078\u306e\u901a\u77e5\nWeb\u30a2\u30d7\u30ea\u3068\u3057\u3066mine-canary\u306e\u76e3\u8996\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u4f5c\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4e0d\u6b63\u30a2\u30af\u30bb\u30b9\u306e\u901a\u77e5\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u53d7\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nhttps://github.com/kawasima/mine-canary-console/\n\u76e3\u8996\u30b3\u30f3\u30bd\u30fc\u30eb\u306fWebSocket\u3067mine-canary\u306b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u8cbc\u3063\u3066\u3044\u3066\u3001\u4e0d\u6b63\u30a2\u30af\u30bb\u30b9\u306e\u767a\u751f\u30a4\u30d9\u30f3\u30c8\u306ePush\u3092\u5f85\u3061\u307e\u3059\u3002\u3053\u3053\u306e\u9023\u643a\u3082\u524d\u8ff0\u306eulon-colon\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\nulon-colon\u306b\u306fClojureScript\u306econsumer\u3082\u4ed8\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u76f4\u63a5\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d6\u30e9\u30a6\u30b6\u306b\u914d\u4fe1\u3067\u304d\u308b\u306e\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u76e3\u8996\u30b3\u30f3\u30bd\u30fc\u30eb\u306fom\u3092\u4f7f\u3063\u3066\u66f8\u3044\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u306eulon-colon\u3068om\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u30b5\u30fc\u30d0\u304b\u3089push\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308a\u9806\u6b21\u8868\u793a\u3059\u308b\u307f\u305f\u3044\u306a\u30b3\u30fc\u30c9\u3082\u3001\u7c21\u6f54\u306b\u66f8\u3051\u307e\u3059\u3002\n(defcomponent main-app [app owner]\n  (will-mount\n   [_]\n    (consume (:consumer app)\n      (fn [msg]\n        (om/transact! app :alerts #(conj % msg)))))\n\n  (render\n   [_]\n   (html\n     [:div.ui.list\n      (for [{:keys [account times]} (:alerts app)]\n       [:div.item\n        [:i.icon.frown]\n        [:div.content\n         [:div.header \"Suspicious attack\"]\n         [:div.description (format-times account times)]]])])))\n\n(om/root main-app {:alerts [] :consumer (make-consumer \"ws://localhost:56293\")}\n         {:target (.getElementById js/document \"app\")})\n\n\u3053\u3046\u3057\u3066\u3001mine-canary\u3067\u3042\u3052\u305f\u4e0d\u6b63\u30a2\u30af\u30bb\u30b9\u306e\u5146\u3057\u304c\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u76e3\u8996\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u30ed\u30b0\u30a4\u30f3\u7528\u306eexample\u30a2\u30d7\u30ea\u3082friend\u3092\u4f7f\u3063\u3066\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u3053\u304b\u3089\u30ed\u30b0\u30a4\u30f3\u3092\u4f55\u56de\u304b\u5931\u6557\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u3059\u308b\u3068\u3001\u76e3\u8996\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u3042\u304c\u3063\u3066\u304d\u307e\u3059\u3002\n\n\n\u5b9f\u969b\u306b\u4f7f\u3046\u306b\u306f\u2026\n\u5b9f\u969b\u306e\u30ea\u30b9\u30c8\u578b\u653b\u6483\u306f\u3001\u3088\u308a\u5de7\u5999\u306b\u306a\u3063\u3066\u304d\u3066\u3044\u308b\u306e\u3067mine-canary\u306eBolt\u306e\u30eb\u30fc\u30eb\u8abf\u6574\u304c\u5fc5\u8981\u3067\u3059\u3002\u3069\u306e\u304f\u3089\u3044\u306e\u30e6\u30fc\u30b6\u30fb\u671f\u9593\u3092\u76e3\u8996\u5bfe\u8c61\u3068\u3059\u308b\u304b\u306b\u3082\u3088\u308a\u307e\u3059\u304c\u3001Storm\u306f\u30a4\u30f3\u30e1\u30e2\u30ea\u306b\u30c7\u30fc\u30bf\u3092\u6e9c\u3081\u8fbc\u3080\u306e\u304c\u57fa\u672c\u306a\u306e\u3067\u3001\u305d\u308c\u306a\u308a\u306e\u30ce\u30fc\u30c9\u6570\u304c\u5fc5\u8981\u306b\u306a\u308b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\nhttp://www.slideshare.net/kawasima/clojure-30414922\n\n\u4ee5\u524d\u306etokyo.clj\u3067\u8a71\u3057\u305f\u5185\u5bb9\u3067\u3059\u304c\u3001Storm\u3092\u4f7f\u3063\u305f\u4e0d\u6b63\u30a2\u30af\u30bb\u30b9\u691c\u77e5\u306e\u4ed5\u7d44\u307f\u306e\u5b9f\u88c5\u3092\u3061\u3083\u3093\u3068\u4f5c\u308a\u306a\u304a\u3057\u3066\u307f\u305f\u306e\u3067\u3001\u3053\u3053\u306b\u8a73\u7d30\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\nhttp://www.nikkei.com/article/DGXMZO77794750R01C14A0000000/\n\n\u6700\u8fd1\u307e\u305f\u30ea\u30b9\u30c8\u578b\u653b\u6483\u304c\u5897\u3048\u3066\u304d\u3066\u3044\u308b\u3088\u3046\u3067\u3001\u5bfe\u7b56\u306b\u982d\u3092\u60a9\u307e\u3055\u308c\u3066\u3044\u308b\u30a8\u30f3\u30b8\u30cb\u30a2\u3082\u5c11\u306a\u304f\u306a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\u30ea\u30b9\u30c8\u578b\u653b\u6483\u306f\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3084WAF\u3067\u9632\u3050\u3053\u3068\u304c\u96e3\u3057\u304f\u3001\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u306a\u5224\u65ad\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u305d\u3053\u3067\u3001\u8907\u6570\u306e\u30b5\u30a4\u30c8\u304b\u3089\u30ed\u30b0\u30a4\u30f3\u306e\u30ed\u30b0(Database)\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u53ce\u96c6\u3057\u3001\u30ea\u30b9\u30c8\u578b\u30a2\u30af\u30bb\u30b9\u3063\u307d\u3044\u3082\u306e\u3092\u89e3\u6790\u3057\u30a2\u30e9\u30fc\u30c8\u3092\u3001\u76e3\u8996\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u3042\u3052\u308b\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3092\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3068\u3057\u3066\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n![mine-canary.png](https://qiita-image-store.s3.amazonaws.com/0/8475/4fc726be-67a5-756c-0791-5da13260a300.png)\n\n## \u30ed\u30b0\u30a4\u30f3\u30ed\u30b0\u306e\u53ce\u96c6\n\n\u30ed\u30b0\u30a4\u30f3\u30ed\u30b0\u306f\u3001\u30e6\u30fc\u30b6\u306e\u30ed\u30b0\u30a4\u30f3\u8a66\u884c\u6642\u306b\u3001\u5404Web\u30a2\u30d7\u30ea\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u305d\u306e\u6210\u5426\u304c\u66f8\u304d\u8fbc\u307e\u308c\u308b\u60f3\u5b9a\u3067\u3059\u3002\n\n```sql\ncreate table login_log (\n  logined_at timestamp not null,\n  account varchar2(100) not null,\n  ip_address varchar2(15) not null,\n  success char(1) not null);\n```\n\n\u3053\u308c\u3092\u65e2\u5b58\u306eWeb\u30a2\u30d7\u30ea\u306b\u5909\u66f4\u3092\u52a0\u3048\u308b\u3053\u3068\u306a\u304f\u3001\u53d6\u5f97\u3059\u308b\u306b\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306eEvent\u6a5f\u80fd\u3092\u4f7f\u3046\u3068\u3088\u3044\u3067\u3059\u3002\n\nOracle\u306e\u5834\u5408\u3001[DBMS_ALERT](http://www005.upp.so-net.ne.jp/khayashi/ora_trig.html)\u3092\u4f7f\u3046\u3068\u3001Web\u30a2\u30d7\u30ea\u3068\u306f\u5225\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3067\u3001\u30c6\u30fc\u30d6\u30eb\u3078\u306e\u66f4\u65b0\u304c\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```sql\nCREATE OR REPLACE TRIGGER login_log_after_insert\nAFTER INSERT\n   ON login_log\n   FOR EACH ROW\nBEGIN\n   DBMS_ALERT.SIGNAL('NEW_LOGIN',\n                     (cast(SYS_EXTRACT_UTC(:new.logined_at) as date)\n                      - cast(from_tz(timestamp '1970-01-01 00:00:00', '00:00')\n                      - as date)) * 24 * 60 * 60 || ' '\n                     || :new.account || ' '\n                     || :new.ip_address || ' '\n                     || :new.success);\nEND;\n/\n```\n\n\u5909\u66f4\u306f\u30c8\u30ea\u30ac\u3092\u4ed5\u8fbc\u3093\u3067\u304a\u3044\u3066\u3001`DBMS_ALERT.SIGNAL`\u3067\u30a2\u30e9\u30fc\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3092\u5225\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304b\u3089\u30ad\u30e3\u30c3\u30c1\u3057\u307e\u3059\u3002\n\n```clj\n(reset! oracle-conn (j/get-connection oracle-db))\n (let [stmt (.prepareCall @oracle-conn \"{call DBMS_ALERT.REGISTER(?)}\")]\n  (doto stmt\n    (.setString 1 \"NEW_LOGIN\")\n    (.executeUpdate)\n    (.close)))\n(let [stmt (.prepareCall @oracle-conn \"{call DBMS_ALERT.WAITANY(?,?,?,?)}\")]\n  (doto stmt\n    (.registerOutParameter 1 Types/VARCHAR)\n    (.registerOutParameter 2 Types/VARCHAR)\n    (.registerOutParameter 3 Types/INTEGER)\n    (.setInt 4 300)))\n```\n\n\u3053\u308c\u3067`LOGIN_LOG`\u30c6\u30fc\u30d6\u30eb\u306bINSERT\u304c\u3055\u308c\u305f\u77ac\u9593\u306b\u3001ALERT\u3092\u30ad\u30e3\u30c3\u30c1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u30ed\u30b0\u30b5\u30fc\u30d0\u306b\u9001\u4fe1\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\nhttps://github.com/kawasima/mine-canary/tree/master/example/log-collector\n\n\u3053\u3053\u3067\u306fflume\u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u5192\u982d\u306e\u30b9\u30e9\u30a4\u30c9\u306b\u66f8\u3044\u3066\u3042\u308b\u3088\u3046\u306b\u3001flume\u306e\u8a2d\u5b9a\u3084\u30aa\u30ea\u30b8\u30ca\u30eb\u306eSource\u3084Sink\u3092Clojure\u3067\u5b9f\u88c5\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n## \u30ed\u30b0\u30a4\u30f3\u30ed\u30b0\u306e\u9001\u4fe1\n\n\u3053\u308c\u3082\u5192\u982d\u306e\u30b9\u30e9\u30a4\u30c9\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\u304c\u3001flume\u3068sto\uff52m\u3092\u9023\u643a\u306f\u9593\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u3092\u631f\u3080\u306e\u304c\u3088\u304f\u3042\u308b\u5b9f\u88c5\u4f8b\u3063\u307d\u3044\u306e\u3067\u3059\u304c\u3001\u5225\u7acb\u3066\u3059\u308b\u306e\u9762\u5012\u306a\u306e\u3067\u3001WebSocket\u3092\u4f7f\u3063\u305f\u81ea\u524d\u306e\u7d44\u307f\u8fbc\u307f\u578b\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u306e\u30e9\u30a4\u30d6\u30e9\u30ea`ulon-colon`\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\nhttps://github.com/kawasima/ulon-colon/\n\n\u305d\u3046\u3059\u308b\u3068\u3001\u9001\u4fe1\u5074\n\n```clj\n(defsink ulon-colon-sink\n  :start  (fn [] (start-producer))\n  :process (fn [event]\n             (produce (String. (.getBody event)))))\n```\n\n\u53d7\u4fe1\u5074\u306f\n\n```clj\n(consume-sync consumer\n  (fn [msg]\n    (emit-spout! collector [msg]))))\n```\n\n\u3068\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3067\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u4e0d\u6b63\u30a2\u30af\u30bb\u30b9\u306e\u691c\u77e5\n\nStorm\u3092\u4f7f\u3063\u3066\u53ce\u96c6\u3057\u305f\u30ed\u30b0\u30a4\u30f3\u30ed\u30b0\u3092\u89e3\u6790\u3057\u307e\u3059\u3002\u3053\u308c\u7528\u306eSpout\u3068Bolt\u306e\u30bb\u30c3\u30c8\u3092mine-canary\u3068\u3057\u3066\u4f5c\u308a\u307e\u3057\u305f\u3002\n\nhttps://github.com/kawasima/mine-canary/\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u4e00\u5b9a\u671f\u9593\u306b5\u56de\u4ee5\u4e0a\u540c\u4e00\u30e6\u30fc\u30b6\u3067\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u3057\u305f\u4eba\u3092\u691c\u51fa\u3059\u308bBolt\u3092\u66f8\u304d\u307e\u3059\u3002\n\n```clj\n;;; \u4e00\u5b9a\u6642\u9593\u5185\u306b\u540c\u4e00\u30e6\u30fc\u30b6\u306e\u5927\u91cf\u306e\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u3092\u691c\u51fa\u3059\u308b\n(defbolt failures-by-same-user [\"account\" \"times\"] {:prepare true}\n  [conf context collector]\n  (let [counts (atom {})]\n    (bolt\n     (execute [tuple]\n       (let [[tm account ip-address success?] (.getValues tuple)\n             tm (long (Double/parseDouble tm))\n             success? (= success? \"1\")]\n         (when-not success?\n           (let [failures-tm (get @counts account [])]\n             (reset! counts\n                   (assoc @counts account (->> (conj failures-tm tm)\n                                               (sort >)\n                                               (take 5)\n                                               vec))))\n           (when (in-the-period? (@counts account))\n             (emit-bolt! collector [account (@counts account)] :anchor tuple)))\n         (ack! collector tuple))))))\n```\n\n## \u76e3\u8996\u30b3\u30f3\u30bd\u30fc\u30eb\u3078\u306e\u901a\u77e5\n\nWeb\u30a2\u30d7\u30ea\u3068\u3057\u3066mine-canary\u306e\u76e3\u8996\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u4f5c\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4e0d\u6b63\u30a2\u30af\u30bb\u30b9\u306e\u901a\u77e5\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u53d7\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nhttps://github.com/kawasima/mine-canary-console/\n\n\u76e3\u8996\u30b3\u30f3\u30bd\u30fc\u30eb\u306fWebSocket\u3067mine-canary\u306b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u8cbc\u3063\u3066\u3044\u3066\u3001\u4e0d\u6b63\u30a2\u30af\u30bb\u30b9\u306e\u767a\u751f\u30a4\u30d9\u30f3\u30c8\u306ePush\u3092\u5f85\u3061\u307e\u3059\u3002\u3053\u3053\u306e\u9023\u643a\u3082\u524d\u8ff0\u306e[ulon-colon](https://github.com/kawasima/ulon-colon/)\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\nulon-colon\u306b\u306fClojureScript\u306econsumer\u3082\u4ed8\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u76f4\u63a5\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d6\u30e9\u30a6\u30b6\u306b\u914d\u4fe1\u3067\u304d\u308b\u306e\u3067\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u76e3\u8996\u30b3\u30f3\u30bd\u30fc\u30eb\u306f[om](https://github.com/swannodette/om)\u3092\u4f7f\u3063\u3066\u66f8\u3044\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u306eulon-colon\u3068om\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u30b5\u30fc\u30d0\u304b\u3089push\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308a\u9806\u6b21\u8868\u793a\u3059\u308b\u307f\u305f\u3044\u306a\u30b3\u30fc\u30c9\u3082\u3001\u7c21\u6f54\u306b\u66f8\u3051\u307e\u3059\u3002\n\n```clj\n(defcomponent main-app [app owner]\n  (will-mount\n   [_]\n    (consume (:consumer app)\n      (fn [msg]\n        (om/transact! app :alerts #(conj % msg)))))\n\n  (render\n   [_]\n   (html\n     [:div.ui.list\n      (for [{:keys [account times]} (:alerts app)]\n       [:div.item\n        [:i.icon.frown]\n        [:div.content\n         [:div.header \"Suspicious attack\"]\n         [:div.description (format-times account times)]]])])))\n\n(om/root main-app {:alerts [] :consumer (make-consumer \"ws://localhost:56293\")}\n         {:target (.getElementById js/document \"app\")})\n```\n\n\u3053\u3046\u3057\u3066\u3001mine-canary\u3067\u3042\u3052\u305f\u4e0d\u6b63\u30a2\u30af\u30bb\u30b9\u306e\u5146\u3057\u304c\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u76e3\u8996\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u30ed\u30b0\u30a4\u30f3\u7528\u306eexample\u30a2\u30d7\u30ea\u3082[friend](https://github.com/cemerick/friend)\u3092\u4f7f\u3063\u3066[\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f](https://github.com/kawasima/mine-canary/tree/master/example/login-app)\u306e\u3067\u3001\u305d\u3053\u304b\u3089\u30ed\u30b0\u30a4\u30f3\u3092\u4f55\u56de\u304b\u5931\u6557\u3057\u3066\u307f\u307e\u3059\u3002\n\n![SnapCrab_NoName_2014-10-8_14-25-55_No-00.png](https://qiita-image-store.s3.amazonaws.com/0/8475/a438f1c6-fa02-5b44-d641-b14b123b88b2.png)\n\n\u3059\u308b\u3068\u3001\u76e3\u8996\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u3042\u304c\u3063\u3066\u304d\u307e\u3059\u3002\n\n![SnapCrab_NoName_2014-10-8_14-25-19_No-00.png](https://qiita-image-store.s3.amazonaws.com/0/8475/48ffadf4-3844-2892-a424-7d6c07b679c2.png)\n\n\n## \u5b9f\u969b\u306b\u4f7f\u3046\u306b\u306f\u2026\n\n\u5b9f\u969b\u306e\u30ea\u30b9\u30c8\u578b\u653b\u6483\u306f\u3001\u3088\u308a\u5de7\u5999\u306b\u306a\u3063\u3066\u304d\u3066\u3044\u308b\u306e\u3067mine-canary\u306eBolt\u306e\u30eb\u30fc\u30eb\u8abf\u6574\u304c\u5fc5\u8981\u3067\u3059\u3002\u3069\u306e\u304f\u3089\u3044\u306e\u30e6\u30fc\u30b6\u30fb\u671f\u9593\u3092\u76e3\u8996\u5bfe\u8c61\u3068\u3059\u308b\u304b\u306b\u3082\u3088\u308a\u307e\u3059\u304c\u3001Storm\u306f\u30a4\u30f3\u30e1\u30e2\u30ea\u306b\u30c7\u30fc\u30bf\u3092\u6e9c\u3081\u8fbc\u3080\u306e\u304c\u57fa\u672c\u306a\u306e\u3067\u3001\u305d\u308c\u306a\u308a\u306e\u30ce\u30fc\u30c9\u6570\u304c\u5fc5\u8981\u306b\u306a\u308b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n", "tags": ["Clojure", "storm", "flume", "core.async", "OM"]}