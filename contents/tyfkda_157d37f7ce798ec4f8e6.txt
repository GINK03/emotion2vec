{"tags": ["emacs-lisp"], "context": " More than 1 year has passed since last update.\u30d0\u30c3\u30d5\u30a1\u3092\u30ea\u30ed\u30fc\u30c9\u3059\u308b\u65b9\u6cd5\u304cEmacs\u3067\u73fe\u5728\u958b\u3044\u3066\u308b\u30d0\u30c3\u30d5\u30a1\u3092\u518d\u8aad\u8fbc\u3059\u308b - Qiita\u3067\u66f8\u304b\u308c\u3066\u308b\u3093\u3060\u3051\u3069\u3001\u30e1\u30b8\u30e3\u30fc\u30e2\u30fc\u30c9\u3092\u4fdd\u6301\u3057\u3066\u3044\u3066\u3082\u3089\u3044\u305f\u304b\u3063\u305f\u306e\u3067\u3061\u3087\u3063\u3068\u4fee\u6b63\u3057\u305f\uff1a\n(defun revert-buffer-no-confirm (&optional force-reverting)\n  \"Interactive call to revert-buffer. Ignoring the auto-save                                         \n file and not requesting for confirmation. When the current buffer                                   \n is modified, the command refuses to revert it, unless you specify                                   \n the optional argument: force-reverting to true.\"\n  (interactive \"P\")\n  ;;(message \"force-reverting value is %s\" force-reverting)                                          \n  (if (or force-reverting (not (buffer-modified-p)))\n      (let ((mm (with-current-buffer (current-buffer)\n                  major-mode)))\n        (revert-buffer :ignore-auto :noconfirm)\n        (with-current-buffer (current-buffer) (funcall mm)))\n    (error \"The buffer has been modified\")))\n\n;; reload buffer                                                                                     \n(global-set-key \"\\M-r\" 'revert-buffer-no-confirm)\n\n\u8aad\u307f\u8fbc\u307f\u524d\u306e\u30e1\u30b8\u30e3\u30fc\u30e2\u30fc\u30c9\u3092\u4fdd\u6301\u3057\u3066\u304a\u3044\u3066\u3001\u30ea\u30ed\u30fc\u30c9\u5f8c\u306b\u518d\u9069\u7528\u3059\u308b\u3002\n\u30d0\u30c3\u30d5\u30a1\u3092\u30ea\u30ed\u30fc\u30c9\u3059\u308b\u65b9\u6cd5\u304c[Emacs\u3067\u73fe\u5728\u958b\u3044\u3066\u308b\u30d0\u30c3\u30d5\u30a1\u3092\u518d\u8aad\u8fbc\u3059\u308b - Qiita](http://qiita.com/ironsand/items/749b032d33d389972b4b)\u3067\u66f8\u304b\u308c\u3066\u308b\u3093\u3060\u3051\u3069\u3001\u30e1\u30b8\u30e3\u30fc\u30e2\u30fc\u30c9\u3092\u4fdd\u6301\u3057\u3066\u3044\u3066\u3082\u3089\u3044\u305f\u304b\u3063\u305f\u306e\u3067\u3061\u3087\u3063\u3068\u4fee\u6b63\u3057\u305f\uff1a\n\n```el\n(defun revert-buffer-no-confirm (&optional force-reverting)\n  \"Interactive call to revert-buffer. Ignoring the auto-save                                         \n file and not requesting for confirmation. When the current buffer                                   \n is modified, the command refuses to revert it, unless you specify                                   \n the optional argument: force-reverting to true.\"\n  (interactive \"P\")\n  ;;(message \"force-reverting value is %s\" force-reverting)                                          \n  (if (or force-reverting (not (buffer-modified-p)))\n      (let ((mm (with-current-buffer (current-buffer)\n                  major-mode)))\n        (revert-buffer :ignore-auto :noconfirm)\n        (with-current-buffer (current-buffer) (funcall mm)))\n    (error \"The buffer has been modified\")))\n\n;; reload buffer                                                                                     \n(global-set-key \"\\M-r\" 'revert-buffer-no-confirm)\n```\n\n\u8aad\u307f\u8fbc\u307f\u524d\u306e\u30e1\u30b8\u30e3\u30fc\u30e2\u30fc\u30c9\u3092\u4fdd\u6301\u3057\u3066\u304a\u3044\u3066\u3001\u30ea\u30ed\u30fc\u30c9\u5f8c\u306b\u518d\u9069\u7528\u3059\u308b\u3002\n"}