{"tags": ["Python", "SpatiaLite", "SQLite3"], "context": " More than 1 year has passed since last update.\n\n\u3053\u306e\u8a18\u4e8b\u306b\u3064\u3044\u3066\nPython\u3067Spatialite\u3092\u4f5c\u6210\u3057\u305f\u6642\u306e\u30e1\u30e2\n\n\u5b9f\u884c\u74b0\u5883\nOS Windows7-64bit\nPython 2.7.10\n\nDLL\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u3053\u3053\u304b\u3089Windows\u7248\u30d0\u30a4\u30ca\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\nlibspatialite-win-x86-2.3.1.zip\nlibiconv-win-x86-1.9.2.zip\nproj-win-x86-4.6.1.zip\n\n\nDLL\u30b3\u30d4\u30fc\nzip\u5c55\u958b\u3059\u308b\u3068\u5404bin\u30d5\u30a9\u30eb\u30c0\u5185\u306bDLL\u304c\u3042\u308b\u306e\u3067\u30d1\u30b9\u304c\u901a\u3063\u305f\u30d5\u30a9\u30eb\u30c0\u3078\u30b3\u30d4\u30fc\n* libspatialite-1.dll\n* libiconv2.dll\n* libproj-0.dll\n\u203bDB\u306e\u4f5c\u6210\u3060\u3051\u3067\u3042\u308c\u3070geos*.dll\u306f\u5fc5\u8981\u306a\u3044\u3088\u3046\u3067\u3059\n\n\u30b9\u30af\u30ea\u30d7\u30c8\nPOINT,LINESTRING,POLYGON\u3092\u683c\u7d0d\u3057\u305fSpatialite\u3092\u4f5c\u6210\u3059\u308b\u7c21\u5358\u306a\u30b9\u30af\u30ea\u30d7\u30c8\n\u4f5c\u6210\u3055\u308c\u305fsample.spatialite\u306fQGIS\u306a\u3069\u306eGIS\u30c4\u30fc\u30eb\u3067\u53c2\u7167\u51fa\u6765\u307e\u3059\n\nsample.py\n# -*- coding: utf-8 -*- \nimport sys\nimport os\nimport sqlite3\n\nif __name__ == \"__main__\":\n  conn = sqlite3.connect(\"sample.spatialite\")\n  if conn:\n    print 'connect success'\n  else:\n    print 'connect failes'\n    sys.exit()\n  conn.enable_load_extension(True)\n  conn.execute('SELECT load_extension(\"libspatialite-1.dll\")')\n  conn.execute('SELECT InitSpatialMetaData()')\n  conn.execute(\"INSERT INTO spatial_ref_sys (srid, auth_name, auth_srid, ref_sys_name, proj4text) VALUES (4326, 'epsg', 4326, 'WGS 84', '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs')\")\n\n  #POINT\n  conn.execute('CREATE TABLE \"point\" (\"OBJECTID\" INTEGER PRIMARY KEY AUTOINCREMENT)')\n  conn.execute('Select AddGeometryColumn (\"point\", \"Geometry\", 4326, \"POINT\", 2)')\n  conn.execute('INSERT INTO point (Geometry) VALUES(GeomFromText(\"POINT(139.69 35.679)\",4326))')\n\n  #LINESTRING\n  conn.execute('CREATE TABLE \"line\" (\"OBJECTID\" INTEGER PRIMARY KEY AUTOINCREMENT)')\n  conn.execute('Select AddGeometryColumn (\"line\", \"Geometry\", 4326, \"LINESTRING\", 2)')\n  conn.execute('INSERT INTO line (Geometry) VALUES(GeomFromText(\"LINESTRING(139.69 35.68, 139.691 35.681, 139.692 35.68)\",4326))')\n\n  #POLYGON\n  conn.execute('CREATE TABLE \"polygon\" (\"OBJECTID\" INTEGER PRIMARY KEY AUTOINCREMENT)')\n  conn.execute('Select AddGeometryColumn (\"polygon\", \"Geometry\", 4326, \"POLYGON\", 2)')\n  #Exterior CCW - Interior:CW\n  conn.execute('INSERT INTO polygon (Geometry) VALUES(GeomFromText(\"POLYGON((139.69 35.682, 139.69 35.681, 139.691 35.681, 139.691 35.682, 139.69 35.682),(139.6902 35.6818, 139.6908 35.6818, 139.6908 35.6812, 139.6902 35.6812, 139.6902 35.6818))\",4326))')\n\n  conn.commit()\n  conn.close()\n\n\n\n\u305d\u306e\u4ed6\n\nOGC:Simple Feature Access - Part 1: Common Architecture\nhttp://www.opengeospatial.org/standards/sfa\nspatialite sql\u4e00\u89a7\nhttps://github.com/azavea/acs-alchemist/blob/master/csharp/Azavea.NijPredictivePolicing.Common/init_spatialite.sql\n\u30b8\u30aa\u30e1\u30c8\u30ea\u306fXY\u30bf\u30a4\u30d7\u306e\u307f\nSpatialite(2.3.1)\u306fXYZ\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\n\u5b9a\u7fa9\u3059\u308b\u3068\u4e0b\u8a18\u306e\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\nAddGeometryColumn() error: argument 5 [dimension] current version only accepts dimension=2\n\n\u3053\u306e\u8a18\u4e8b\u306b\u3064\u3044\u3066\n---\nPython\u3067Spatialite\u3092\u4f5c\u6210\u3057\u305f\u6642\u306e\u30e1\u30e2\n\n\u5b9f\u884c\u74b0\u5883\n---\nOS Windows7-64bit\nPython 2.7.10\n\nDLL\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n---\n[\u3053\u3053][link-1]\u304b\u3089Windows\u7248\u30d0\u30a4\u30ca\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n[link-1]:https://www.gaia-gis.it/spatialite-2.3.1/binaries.html\n* libspatialite-win-x86-2.3.1.zip\n* libiconv-win-x86-1.9.2.zip\n* proj-win-x86-4.6.1.zip\n\nDLL\u30b3\u30d4\u30fc\n---\nzip\u5c55\u958b\u3059\u308b\u3068\u5404bin\u30d5\u30a9\u30eb\u30c0\u5185\u306bDLL\u304c\u3042\u308b\u306e\u3067\u30d1\u30b9\u304c\u901a\u3063\u305f\u30d5\u30a9\u30eb\u30c0\u3078\u30b3\u30d4\u30fc\n* libspatialite-1.dll\n* libiconv2.dll\n* libproj-0.dll\n\u203bDB\u306e\u4f5c\u6210\u3060\u3051\u3067\u3042\u308c\u3070geos*.dll\u306f\u5fc5\u8981\u306a\u3044\u3088\u3046\u3067\u3059\n\n\u30b9\u30af\u30ea\u30d7\u30c8\n---\nPOINT,LINESTRING,POLYGON\u3092\u683c\u7d0d\u3057\u305fSpatialite\u3092\u4f5c\u6210\u3059\u308b\u7c21\u5358\u306a\u30b9\u30af\u30ea\u30d7\u30c8\n\u4f5c\u6210\u3055\u308c\u305fsample.spatialite\u306fQGIS\u306a\u3069\u306eGIS\u30c4\u30fc\u30eb\u3067\u53c2\u7167\u51fa\u6765\u307e\u3059\n\n```py:sample.py\n# -*- coding: utf-8 -*- \nimport sys\nimport os\nimport sqlite3\n\nif __name__ == \"__main__\":\n  conn = sqlite3.connect(\"sample.spatialite\")\n  if conn:\n    print 'connect success'\n  else:\n    print 'connect failes'\n    sys.exit()\n  conn.enable_load_extension(True)\n  conn.execute('SELECT load_extension(\"libspatialite-1.dll\")')\n  conn.execute('SELECT InitSpatialMetaData()')\n  conn.execute(\"INSERT INTO spatial_ref_sys (srid, auth_name, auth_srid, ref_sys_name, proj4text) VALUES (4326, 'epsg', 4326, 'WGS 84', '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs')\")\n\n  #POINT\n  conn.execute('CREATE TABLE \"point\" (\"OBJECTID\" INTEGER PRIMARY KEY AUTOINCREMENT)')\n  conn.execute('Select AddGeometryColumn (\"point\", \"Geometry\", 4326, \"POINT\", 2)')\n  conn.execute('INSERT INTO point (Geometry) VALUES(GeomFromText(\"POINT(139.69 35.679)\",4326))')\n\n  #LINESTRING\n  conn.execute('CREATE TABLE \"line\" (\"OBJECTID\" INTEGER PRIMARY KEY AUTOINCREMENT)')\n  conn.execute('Select AddGeometryColumn (\"line\", \"Geometry\", 4326, \"LINESTRING\", 2)')\n  conn.execute('INSERT INTO line (Geometry) VALUES(GeomFromText(\"LINESTRING(139.69 35.68, 139.691 35.681, 139.692 35.68)\",4326))')\n\n  #POLYGON\n  conn.execute('CREATE TABLE \"polygon\" (\"OBJECTID\" INTEGER PRIMARY KEY AUTOINCREMENT)')\n  conn.execute('Select AddGeometryColumn (\"polygon\", \"Geometry\", 4326, \"POLYGON\", 2)')\n  #Exterior CCW - Interior:CW\n  conn.execute('INSERT INTO polygon (Geometry) VALUES(GeomFromText(\"POLYGON((139.69 35.682, 139.69 35.681, 139.691 35.681, 139.691 35.682, 139.69 35.682),(139.6902 35.6818, 139.6908 35.6818, 139.6908 35.6812, 139.6902 35.6812, 139.6902 35.6818))\",4326))')\n\n  conn.commit()\n  conn.close()\n```\n\n\u305d\u306e\u4ed6\n---\n* OGC:Simple Feature Access - Part 1: Common Architecture\nhttp://www.opengeospatial.org/standards/sfa\n\n* spatialite sql\u4e00\u89a7\nhttps://github.com/azavea/acs-alchemist/blob/master/csharp/Azavea.NijPredictivePolicing.Common/init_spatialite.sql\n\n* \u30b8\u30aa\u30e1\u30c8\u30ea\u306fXY\u30bf\u30a4\u30d7\u306e\u307f\nSpatialite(2.3.1)\u306fXYZ\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\n\u5b9a\u7fa9\u3059\u308b\u3068\u4e0b\u8a18\u306e\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\n``AddGeometryColumn() error: argument 5 [dimension] current version only accepts dimension=2``\n\n\n"}