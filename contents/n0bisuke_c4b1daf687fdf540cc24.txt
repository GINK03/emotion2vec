{"context": " More than 1 year has passed since last update.node.js\u3067MongoDB\u3092\u6271\u3046\u3068\u304d\u306b\u5229\u7528\u3059\u308bmongoose\u3067\uff0c\u300c\u301c\u4ee5\u5916\u300d\u3092\u691c\u7d22\u3059\u308b\u3084\u308a\u65b9\u3067\u3059\uff0e\n\n\u300c\u301c\u4ee5\u5916\u300d\u3092\u691c\u7d22\n\nindex.js\n//\u4f8b: name\u30d5\u30a3\u30fc\u30eb\u30c9\u304cn0bisuke\u4ee5\u5916\u3092\u691c\u7d22\nvar query = {name: {'$ne':\"n0bisuke\"}};\n    User.find(query,{},{sort:{point: -1}}, function(err, all_data){\n        if(err){\n            console.log(err);\n        }\n    });\n\n\n\u53c2\u8003:node.js - nodejs - mongodb - how to find all where a != b? - Stack Overflow\n\n\u8907\u6570\u306e\u6761\u4ef6\u6307\u5b9a\nAND\u3084OR\u3082\u4f7f\u3048\u308b\u3063\u307d\u3044\u306e\u3067\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\uff0e[]\u3067\u8907\u6570\u6307\u5b9a\u3059\u308b\u307f\u305f\u3044\u3067\u3059\uff0e\n\nindex2.js\n//\u4f8b: \u300c\u8907\u6570\u306e\u301c\u4ee5\u5916\u300d\u3092\u6761\u4ef6\u306b\nvar query = {'$and':[\n                {name:{'$ne':\"n0bisuke\"}}, //name\u30d5\u30a3\u30fc\u30eb\u30c9\u304cn0bisuke\u4ee5\u5916\n                {name:{'$ne':\"otukutun\"}}, //name\u30d5\u30a3\u30fc\u30eb\u30c9\u304cotukutun\u4ee5\u5916\n                {email:{'$ne':\"hoge@example.com\"}}//email\u30d5\u30a3\u30fc\u30eb\u30c9\u304choge@example.com\u4ee5\u5916\n            ]};\nUser.find(query,{},{sort:{point: -1}}, function(err, all_data){\n    if(err){\n        console.log(err);\n    }\n});\n\n\n\u53c2\u8003:mongodb - Mongoose's find method with $or condition does not work properly - Stack Overflow\n\nnode.js\u3067MongoDB\u3092\u6271\u3046\u3068\u304d\u306b\u5229\u7528\u3059\u308bmongoose\u3067\uff0c\u300c\u301c\u4ee5\u5916\u300d\u3092\u691c\u7d22\u3059\u308b\u3084\u308a\u65b9\u3067\u3059\uff0e\n\n##\u300c\u301c\u4ee5\u5916\u300d\u3092\u691c\u7d22\n\n```index.js\n//\u4f8b: name\u30d5\u30a3\u30fc\u30eb\u30c9\u304cn0bisuke\u4ee5\u5916\u3092\u691c\u7d22\nvar query = {name: {'$ne':\"n0bisuke\"}};\n\tUser.find(query,{},{sort:{point: -1}}, function(err, all_data){\n\t\tif(err){\n\t\t\tconsole.log(err);\n\t\t}\n\t});\n```\n\n\u53c2\u8003:[node.js - nodejs - mongodb - how to find all where a != b? - Stack Overflow](http://stackoverflow.com/questions/6276392/nodejs-mongodb-how-to-find-all-where-a-b)\n\n##\u8907\u6570\u306e\u6761\u4ef6\u6307\u5b9a\nAND\u3084OR\u3082\u4f7f\u3048\u308b\u3063\u307d\u3044\u306e\u3067\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\uff0e[]\u3067\u8907\u6570\u6307\u5b9a\u3059\u308b\u307f\u305f\u3044\u3067\u3059\uff0e\n\n```index2.js\n//\u4f8b: \u300c\u8907\u6570\u306e\u301c\u4ee5\u5916\u300d\u3092\u6761\u4ef6\u306b\nvar query = {'$and':[\n\t\t\t\t{name:{'$ne':\"n0bisuke\"}}, //name\u30d5\u30a3\u30fc\u30eb\u30c9\u304cn0bisuke\u4ee5\u5916\n\t\t\t\t{name:{'$ne':\"otukutun\"}}, //name\u30d5\u30a3\u30fc\u30eb\u30c9\u304cotukutun\u4ee5\u5916\n\t\t\t\t{email:{'$ne':\"hoge@example.com\"}}//email\u30d5\u30a3\u30fc\u30eb\u30c9\u304choge@example.com\u4ee5\u5916\n\t\t\t]};\nUser.find(query,{},{sort:{point: -1}}, function(err, all_data){\n\tif(err){\n\t\tconsole.log(err);\n\t}\n});\n```\n\n\n\u53c2\u8003:[mongodb - Mongoose's find method with $or condition does not work properly - Stack Overflow](http://stackoverflow.com/questions/7382207/mongooses-find-method-with-or-condition-does-not-work-properly)", "tags": ["mongoose", "Node.js", "MongoDB"]}