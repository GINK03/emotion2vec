{"context": " More than 1 year has passed since last update.\u5185\u5bb9\u306fGLKit\u3000\u30fc\u3000\u30cf\u30ed\u30fcOpenGL \u4e09\u89d2\u5f62\u3092\u66f8\u3044\u3066\u307f\u308b\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u8db3\u3057\u305f\u3060\u3051\u306e\u3082\u306e\u3067\u3059\u3002\n\n\u57fa\u672c\u7684\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\u9802\u70b9\u60c5\u5831\u2192\u9802\u70b9\u51e6\u7406\uff08\u30d0\u30fc\u30c6\u30c3\u30af\u30b9\u30fb\u30b7\u30a7\u30fc\u30c0\uff09\u2192\u63cf\u753b\u2192\u9762\u51e6\u7406\uff08\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30fb\u30b7\u30a7\u30fc\u30c0\uff09\u2192\u6700\u7d42\u51fa\u529b\n\u4eca\u56de\u306f\u9802\u70b9\u51e6\u7406\u3082\u9762\u51e6\u7406\u3082\u884c\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u307e\u305a\u4e00\u753b\u9762\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u30bf\u30fc\u30b2\u30c3\u30c8\u306b OpenGLES.framework \u3068 GLKit.framework \u3092\u8ffd\u52a0\u3059\u308b\u3002\n\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3057\u3066xib\u3092\u6392\u9664\u3059\u308b\u3002\n\n\nAppDelegate.m\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n    self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];\n    // Override point for customization after application launch.\n    self.viewController = [[ViewController alloc] initWithNibName:nil bundle:nil];\n    self.window.rootViewController = self.viewController;\n    [self.window makeKeyAndVisible];\n    return YES;\n}\n\n\n\n\u6b21\u306b ViewController.h \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3059\u308b\u3002\n\n\nViewController.h\n#import <UIKit/UIKit.h>\n#import <GLKit/GLKit.h>\n\n// \u81ea\u8eab\u306fGLKViewController\u3068\u306a\u308a\u3001self.view\u304cGLKView\u3068\u306a\u308b\u3002\n// GLKView\u306b\u306fglkView:drawInRect:\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u81ea\u52d5\u7684\u306b\u523a\u3055\u3063\u3066\u304f\u308b\u306e\u3067\u3001\n// <GLKViewDelegate>\u3068\u3057\u3066\u3044\u308b\u3002\n@interface ViewController : GLKViewController <GLKViewDelegate>\n{\n    GLuint vertexBufferID;\n}\n@property (strong, nonatomic) GLKBaseEffect *baseEffect;\n\n@end\n\n\n\n\u6b21\u306b ViewController.m \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3059\u308b\u3002\n\n\nViewController.m\n#import \"ViewController.h\"\n\n#define BUFFER_OFFSET(i) ((char *)NULL + (i))\n\n@implementation ViewController\n@synthesize baseEffect;\n\ntypedef struct {\n    GLKVector3 position;\n} Vertex;\n\n//\u3000\u4e09\u89d2\u306e\u5ea7\u6a19\n// vertices\u306fvertex\uff08\u9802\u70b9\uff09\u306e\u8907\u6570\u5f62\nstatic const Vertex vertices[] =\n{\n    {{-0.5f, -0.5f,  0.0}},\n    {{ 0.5f, -0.5f,  0.0}},\n    {{-0.5f,  0.5f,  0.0}}\n};\n\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    GLKView *view = (GLKView*)self.view;\n\n    // OpenGL ES2\u3092\u6307\u5b9a\n    view.context = [[EAGLContext alloc] initWithAPI:kEAGLRenderingAPIOpenGLES2];\n\n    // set context\n    [EAGLContext setCurrentContext:view.context];\n\n    // \u4e09\u89d2\u5f62\u306b\u767d\u3092\u8a2d\u5b9a\n    self.baseEffect = [[GLKBaseEffect alloc] init];\n    self.baseEffect.useConstantColor = GL_TRUE;\n    self.baseEffect.constantColor = GLKVector4Make(1.0f, 1.0f, 1.0f, 1.0f);\n\n    // \u900f\u660e\u90e8\u5206\uff08\u80cc\u666f\uff09\u3092\u9ed2\u306b\n    glClearColor(0.0f, 0.0f, 0.0f, 1.0f);\n\n    /*\n     \u3053\u3053\u304b\u3089\u3042\u3068\u306fGPU\u306b\u9802\u70b9\u60c5\u5831\uff08vertices\uff09\u3092\u9001\u3063\u3066\u3044\u308b\n     */\n    // GPU\u306b\u70b9\u306e\u60c5\u5831\u3092\n    // vertexBufferID\u3068\u3044\u3046\u9802\u70b9\u30d0\u30c3\u30d5\u30a1\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30fb\u30dd\u30a4\u30f3\u30bf\u3092\u4f5c\u6210\u3059\u308b\n    glGenBuffers(1, &vertexBufferID);\n\n    // \u30d0\u30c3\u30d5\u30a1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\n    // \u9802\u70b9\u30d0\u30c3\u30d5\u30a1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5834\u5408, \u7b2c1\u5f15\u6570target \u306b\u306f GL_ARRAY_BUFFER \u3092\u6307\u5b9a\u3057\u307e\u3059\n    glBindBuffer(GL_ARRAY_BUFFER, vertexBufferID);\n\n    // \u30d0\u30c3\u30d5\u30a1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3057, \u305d\u3053\u306b\u30c7\u30fc\u30bf\u3092\u8ee2\u9001\u3057\u307e\u3059\n    // \u7b2c1\u5f15\u6570\u306b\u306fglBindBuffer() \u3068\u540c\u3058\u3082\u306e\u3092\u6307\u5b9a\u3057\u307e\u3059\n    // \u7b2c2\u5f15\u6570size\u306b\u306f\u78ba\u4fdd\u3059\u308b\u30e1\u30e2\u30ea\u306e\u30b5\u30a4\u30ba\u3092 byte \u3067\u6307\u5b9a\u3057\u307e\u3059\n    // \u7b2c3\u5f15\u6570data\u306f\u8ee2\u9001\u5143\u306e\u30c7\u30fc\u30bf\u306e\u914d\u5217\u3092\u6307\u5b9a\u3057\u307e\u3059\n    // \u7b2c4\u5f15\u6570usage\u306b\u306f\u30d0\u30c3\u30d5\u30a1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30e2\u30ea\u306e\u4f7f\u308f\u308c\u65b9\u306e\u30d2\u30f3\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\n    // STATIC: \u30e1\u30e2\u30ea\u306b\u306f\u4e00\u5ea6\u3057\u304b\u66f8\u304d\u8fbc\u307e\u308c\u306a\u3044\u304c, \u4f55\u56de\u3082\u4f7f\u308f\u308c\u308b\n    // DRAW: \u30e1\u30e2\u30ea\u306e\u5185\u5bb9\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u66f8\u304d\u8fbc\u307e\u308c, OpenGL \u306b\u3088\u308b\u63cf\u753b\u30c7\u30fc\u30bf\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u308b\n    glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);\n}\n\n#pragma mark - GLKView delegate\n- (void)glkView:(GLKView *)view drawInRect:(CGRect)rect\n{\n    [self.baseEffect prepareToDraw];\n\n    // \u753b\u9762\u30af\u30ea\u30a2\n    glClear(GL_COLOR_BUFFER_BIT);\n\n    // \u9802\u70b9\u60c5\u5831\u306e\u4f4d\u7f6e\u3092\u3001\u9802\u70b9\u51e6\u7406\u306e\u5909\u6570\u306b\u6307\u5b9a\u3059\u308b\uff08\u3053\u308c\u3092\u7528\u3044\u3066\u63cf\u753b\u3092\u884c\u3046\uff09\n    // Attribute\u306f\u4f4d\u7f6e\u3001\u8272\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306a\u3069\u3092\u3072\u3063\u304f\u308b\u3081\u305f\u300c\u9802\u70b9\u306e\u5c5e\u6027\u300d\n    //    typedef enum {     GLKVertexAttribPosition,\n    //        GLKVertexAttribNormal,\n    //        GLKVertexAttribColor,\n    //        GLKVertexAttribTexCoord0,\n    //        GLKVertexAttribTexCoord1,\n    //    } GLKVertexAttrib;\n    glEnableVertexAttribArray(GLKVertexAttribPosition);\n\n    // \u9802\u70b9\u60c5\u5831\u306e\u683c\u7d0d\u5834\u6240\u3068\u66f8\u5f0f\u3092\u9802\u70b9\u51e6\u7406\u306b\u6559\u3048\u308b\n    // (void)glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);\n    // index \u306b\u306f attribute \u5909\u6570\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305f index \u3092\u6307\u5b9a\u3059\u308b\uff08\u3053\u3053\u3067\u306f\u4f4d\u7f6e\uff09\n    // size \u306f\u30c7\u30fc\u30bf\u306e\uff11\u9802\u70b9\u3042\u305f\u308a\u306e\u8981\u7d20\u306e\u6570\u3067, 1\u301c4 \u3092\u6307\u5b9a\u3059\u308b\u3002\uff12\u6b21\u5143\u5ea7\u6a19\u306a\u3089 2\u3002\n    // type \u306b\u306f\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u5f62\u5f0f\u3092\u6307\u5b9a\u3059\u308b\n    // normalized \u306f\u30ce\u30fc\u30de\u30e9\u30a4\u30ba\u3055\u308c\u3066\u3044\u308b\u304b\u5426\u304b\n    // stride \u306b\u306f\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u9593\u9694\u3092 byte \u3067\u6307\u5b9a\u3059\u308b\u3002\n    // 0 \u3092\u6307\u5b9a\u3057\u305f\u3068\u304d\u306f, \u30c7\u30fc\u30bf\u306f\u5bc6\u306b\u4e26\u3093\u3067\u3044\u308b\u3068\u307f\u306a\u3055\u308c\u308b\u3002\n    // pointer \u306f\u30d0\u30c3\u30d5\u30a1\u306e\u5148\u982d\u304b\u3089\u6700\u521d\u306e\u5c5e\u6027\u3078\u306e\u30d0\u30a4\u30c8\u30aa\u30d5\u30bb\u30c3\u30c8\u3002\n    glVertexAttribPointer(GLKVertexAttribPosition, 3, GL_FLOAT, GL_FALSE, sizeof(Vertex), BUFFER_OFFSET(0));\n\n    // \u56f3\u5f62\u3092\u63cf\u304f\n    // (void)glDrawArrays(GLenum mode, GLint first, GLsizei count);\n    // mode \u306b\u306f\u63cf\u753b\u3059\u308b\u57fa\u672c\u56f3\u5f62\u306e\u7a2e\u985e\u3092\u6307\u5b9a\u3059\u308b\n    // first \u306b\u306f\u63cf\u753b\u3059\u308b\u30c7\u30fc\u30bf\u306e, \u683c\u7d0d\u5834\u6240\u306e\u5148\u982d\u304b\u3089\u306e\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b\n    // count \u306b\u306f\u63cf\u753b\u3059\u308b\u30c7\u30fc\u30bf\u306e\u6570\u3092\u6307\u5b9a\u3059\u308b\n    glDrawArrays(GL_TRIANGLES, 0, 3);\n}\n\n- (void)viewDidUnload\n{\n    [super viewDidUnload];\n\n    // current context\u306ebuffer\u3092\u6d88\u3059\n    GLKView *view = (GLKView *)self.view;\n    [EAGLContext setCurrentContext:view.context];\n    if (0 != vertexBufferID) {\n        glDeleteBuffers(1, &vertexBufferID);\n    }\n\n    // context\u3092\u6d88\u3059\n    view.context = nil;\n    [EAGLContext setCurrentContext:nil];\n}\n\n\n@end\n\n\n\n\u30d6\u30ed\u30b0\u3084\u3063\u3066\u307e\u3059\uff1aPAPA-tronix !\n\u5185\u5bb9\u306f[GLKit\u3000\u30fc\u3000\u30cf\u30ed\u30fcOpenGL \u4e09\u89d2\u5f62\u3092\u66f8\u3044\u3066\u307f\u308b](http://lepetit-prince.net/ios/?p=402)\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u8db3\u3057\u305f\u3060\u3051\u306e\u3082\u306e\u3067\u3059\u3002\n\n![triangle.png](https://qiita-image-store.s3.amazonaws.com/0/12939/fcac11a0-cea4-25e8-5d57-cdd0ed5910d3.png)\n\n\u57fa\u672c\u7684\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u9802\u70b9\u60c5\u5831\u2192\u9802\u70b9\u51e6\u7406\uff08\u30d0\u30fc\u30c6\u30c3\u30af\u30b9\u30fb\u30b7\u30a7\u30fc\u30c0\uff09\u2192\u63cf\u753b\u2192\u9762\u51e6\u7406\uff08\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30fb\u30b7\u30a7\u30fc\u30c0\uff09\u2192\u6700\u7d42\u51fa\u529b\n\n\u4eca\u56de\u306f\u9802\u70b9\u51e6\u7406\u3082\u9762\u51e6\u7406\u3082\u884c\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n1. \u307e\u305a\u4e00\u753b\u9762\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n2. \u30bf\u30fc\u30b2\u30c3\u30c8\u306b **OpenGLES.framework** \u3068 **GLKit.framework** \u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n3. \u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3057\u3066xib\u3092\u6392\u9664\u3059\u308b\u3002\n\n```objc:AppDelegate.m\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n    self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];\n    // Override point for customization after application launch.\n    self.viewController = [[ViewController alloc] initWithNibName:nil bundle:nil];\n    self.window.rootViewController = self.viewController;\n    [self.window makeKeyAndVisible];\n    return YES;\n}\n```\n\n4. \u6b21\u306b **ViewController.h** \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3059\u308b\u3002\n\n```objc:ViewController.h\n#import <UIKit/UIKit.h>\n#import <GLKit/GLKit.h>\n\n// \u81ea\u8eab\u306fGLKViewController\u3068\u306a\u308a\u3001self.view\u304cGLKView\u3068\u306a\u308b\u3002\n// GLKView\u306b\u306fglkView:drawInRect:\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u81ea\u52d5\u7684\u306b\u523a\u3055\u3063\u3066\u304f\u308b\u306e\u3067\u3001\n// <GLKViewDelegate>\u3068\u3057\u3066\u3044\u308b\u3002\n@interface ViewController : GLKViewController <GLKViewDelegate>\n{\n    GLuint vertexBufferID;\n}\n@property (strong, nonatomic) GLKBaseEffect *baseEffect;\n\n@end\n```\n\n5. \u6b21\u306b **ViewController.m** \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3059\u308b\u3002\n\n```objc:ViewController.m\n#import \"ViewController.h\"\n\n#define BUFFER_OFFSET(i) ((char *)NULL + (i))\n\n@implementation ViewController\n@synthesize baseEffect;\n\ntypedef struct {\n    GLKVector3 position;\n} Vertex;\n\n//\u3000\u4e09\u89d2\u306e\u5ea7\u6a19\n// vertices\u306fvertex\uff08\u9802\u70b9\uff09\u306e\u8907\u6570\u5f62\nstatic const Vertex vertices[] =\n{\n    {{-0.5f, -0.5f,  0.0}},\n    {{ 0.5f, -0.5f,  0.0}},\n    {{-0.5f,  0.5f,  0.0}}\n};\n\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    GLKView *view = (GLKView*)self.view;\n    \n    // OpenGL ES2\u3092\u6307\u5b9a\n    view.context = [[EAGLContext alloc] initWithAPI:kEAGLRenderingAPIOpenGLES2];\n    \n    // set context\n    [EAGLContext setCurrentContext:view.context];\n    \n    // \u4e09\u89d2\u5f62\u306b\u767d\u3092\u8a2d\u5b9a\n    self.baseEffect = [[GLKBaseEffect alloc] init];\n    self.baseEffect.useConstantColor = GL_TRUE;\n    self.baseEffect.constantColor = GLKVector4Make(1.0f, 1.0f, 1.0f, 1.0f);\n    \n    // \u900f\u660e\u90e8\u5206\uff08\u80cc\u666f\uff09\u3092\u9ed2\u306b\n    glClearColor(0.0f, 0.0f, 0.0f, 1.0f);\n\n    /*\n     \u3053\u3053\u304b\u3089\u3042\u3068\u306fGPU\u306b\u9802\u70b9\u60c5\u5831\uff08vertices\uff09\u3092\u9001\u3063\u3066\u3044\u308b\n     */\n    // GPU\u306b\u70b9\u306e\u60c5\u5831\u3092\n    // vertexBufferID\u3068\u3044\u3046\u9802\u70b9\u30d0\u30c3\u30d5\u30a1\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30fb\u30dd\u30a4\u30f3\u30bf\u3092\u4f5c\u6210\u3059\u308b\n    glGenBuffers(1, &vertexBufferID);\n    \n    // \u30d0\u30c3\u30d5\u30a1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\n    // \u9802\u70b9\u30d0\u30c3\u30d5\u30a1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5834\u5408, \u7b2c1\u5f15\u6570target \u306b\u306f GL_ARRAY_BUFFER \u3092\u6307\u5b9a\u3057\u307e\u3059\n    glBindBuffer(GL_ARRAY_BUFFER, vertexBufferID);\n    \n    // \u30d0\u30c3\u30d5\u30a1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3057, \u305d\u3053\u306b\u30c7\u30fc\u30bf\u3092\u8ee2\u9001\u3057\u307e\u3059\n    // \u7b2c1\u5f15\u6570\u306b\u306fglBindBuffer() \u3068\u540c\u3058\u3082\u306e\u3092\u6307\u5b9a\u3057\u307e\u3059\n    // \u7b2c2\u5f15\u6570size\u306b\u306f\u78ba\u4fdd\u3059\u308b\u30e1\u30e2\u30ea\u306e\u30b5\u30a4\u30ba\u3092 byte \u3067\u6307\u5b9a\u3057\u307e\u3059\n    // \u7b2c3\u5f15\u6570data\u306f\u8ee2\u9001\u5143\u306e\u30c7\u30fc\u30bf\u306e\u914d\u5217\u3092\u6307\u5b9a\u3057\u307e\u3059\n    // \u7b2c4\u5f15\u6570usage\u306b\u306f\u30d0\u30c3\u30d5\u30a1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30e2\u30ea\u306e\u4f7f\u308f\u308c\u65b9\u306e\u30d2\u30f3\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\n    // STATIC: \u30e1\u30e2\u30ea\u306b\u306f\u4e00\u5ea6\u3057\u304b\u66f8\u304d\u8fbc\u307e\u308c\u306a\u3044\u304c, \u4f55\u56de\u3082\u4f7f\u308f\u308c\u308b\n    // DRAW: \u30e1\u30e2\u30ea\u306e\u5185\u5bb9\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u66f8\u304d\u8fbc\u307e\u308c, OpenGL \u306b\u3088\u308b\u63cf\u753b\u30c7\u30fc\u30bf\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u308b\n    glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);\n}\n\n#pragma mark - GLKView delegate\n- (void)glkView:(GLKView *)view drawInRect:(CGRect)rect\n{\n    [self.baseEffect prepareToDraw];\n    \n    // \u753b\u9762\u30af\u30ea\u30a2\n    glClear(GL_COLOR_BUFFER_BIT);\n    \n    // \u9802\u70b9\u60c5\u5831\u306e\u4f4d\u7f6e\u3092\u3001\u9802\u70b9\u51e6\u7406\u306e\u5909\u6570\u306b\u6307\u5b9a\u3059\u308b\uff08\u3053\u308c\u3092\u7528\u3044\u3066\u63cf\u753b\u3092\u884c\u3046\uff09\n    // Attribute\u306f\u4f4d\u7f6e\u3001\u8272\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306a\u3069\u3092\u3072\u3063\u304f\u308b\u3081\u305f\u300c\u9802\u70b9\u306e\u5c5e\u6027\u300d\n    //    typedef enum {     GLKVertexAttribPosition,\n    //        GLKVertexAttribNormal,\n    //        GLKVertexAttribColor,\n    //        GLKVertexAttribTexCoord0,\n    //        GLKVertexAttribTexCoord1,\n    //    } GLKVertexAttrib;\n    glEnableVertexAttribArray(GLKVertexAttribPosition);\n    \n    // \u9802\u70b9\u60c5\u5831\u306e\u683c\u7d0d\u5834\u6240\u3068\u66f8\u5f0f\u3092\u9802\u70b9\u51e6\u7406\u306b\u6559\u3048\u308b\n    // (void)glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);\n    // index \u306b\u306f attribute \u5909\u6570\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305f index \u3092\u6307\u5b9a\u3059\u308b\uff08\u3053\u3053\u3067\u306f\u4f4d\u7f6e\uff09\n    // size \u306f\u30c7\u30fc\u30bf\u306e\uff11\u9802\u70b9\u3042\u305f\u308a\u306e\u8981\u7d20\u306e\u6570\u3067, 1\u301c4 \u3092\u6307\u5b9a\u3059\u308b\u3002\uff12\u6b21\u5143\u5ea7\u6a19\u306a\u3089 2\u3002\n    // type \u306b\u306f\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u5f62\u5f0f\u3092\u6307\u5b9a\u3059\u308b\n    // normalized \u306f\u30ce\u30fc\u30de\u30e9\u30a4\u30ba\u3055\u308c\u3066\u3044\u308b\u304b\u5426\u304b\n    // stride \u306b\u306f\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u9593\u9694\u3092 byte \u3067\u6307\u5b9a\u3059\u308b\u3002\n    // 0 \u3092\u6307\u5b9a\u3057\u305f\u3068\u304d\u306f, \u30c7\u30fc\u30bf\u306f\u5bc6\u306b\u4e26\u3093\u3067\u3044\u308b\u3068\u307f\u306a\u3055\u308c\u308b\u3002\n    // pointer \u306f\u30d0\u30c3\u30d5\u30a1\u306e\u5148\u982d\u304b\u3089\u6700\u521d\u306e\u5c5e\u6027\u3078\u306e\u30d0\u30a4\u30c8\u30aa\u30d5\u30bb\u30c3\u30c8\u3002\n    glVertexAttribPointer(GLKVertexAttribPosition, 3, GL_FLOAT, GL_FALSE, sizeof(Vertex), BUFFER_OFFSET(0));\n    \n    // \u56f3\u5f62\u3092\u63cf\u304f\n    // (void)glDrawArrays(GLenum mode, GLint first, GLsizei count);\n    // mode \u306b\u306f\u63cf\u753b\u3059\u308b\u57fa\u672c\u56f3\u5f62\u306e\u7a2e\u985e\u3092\u6307\u5b9a\u3059\u308b\n    // first \u306b\u306f\u63cf\u753b\u3059\u308b\u30c7\u30fc\u30bf\u306e, \u683c\u7d0d\u5834\u6240\u306e\u5148\u982d\u304b\u3089\u306e\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b\n    // count \u306b\u306f\u63cf\u753b\u3059\u308b\u30c7\u30fc\u30bf\u306e\u6570\u3092\u6307\u5b9a\u3059\u308b\n    glDrawArrays(GL_TRIANGLES, 0, 3);\n}\n\n- (void)viewDidUnload\n{\n    [super viewDidUnload];\n    \n    // current context\u306ebuffer\u3092\u6d88\u3059\n    GLKView *view = (GLKView *)self.view;\n    [EAGLContext setCurrentContext:view.context];\n    if (0 != vertexBufferID) {\n        glDeleteBuffers(1, &vertexBufferID);\n    }\n    \n    // context\u3092\u6d88\u3059\n    view.context = nil;\n    [EAGLContext setCurrentContext:nil];\n}\n\n\n@end\n```\n\n-----\n\u30d6\u30ed\u30b0\u3084\u3063\u3066\u307e\u3059\uff1a[PAPA-tronix !](http://weed.cocolog-nifty.com/wzero3es/)", "tags": ["Objective-C", "OpenGL"]}