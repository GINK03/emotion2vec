{"context": " More than 1 year has passed since last update.Kotlin \u3068\u3044\u3046\u8a00\u8a9e\u306b\u8208\u5473\u3092\u6301\u3061\u3001\u5c11\u3057\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u305f\u304f\u306a\u3063\u305f\u306e\u3067\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u3064\u3044\u5148\u65e5 Java Advent Calendar 2014 \u306e\u8a18\u4e8b\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u521d\u5fc3\u8005\u304c\u3058\u3083\u3093\u3051\u3093\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u305f\u3068\u3044\u3046\u306e\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u521d\u3081\u3066\u89e6\u308b\u8a00\u8a9e\u306e\u984c\u6750\u3068\u3057\u3066\u306f\u7533\u3057\u5206\u306a\u3055\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001\u3042\u306e\u8a18\u4e8b\u306e\u4ed5\u69d8\u3092\u501f\u308a\u3066 Kotlin \u3067\u518d\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\nkotlin\nimport java.util.Random\nimport java.util.Scanner\n\nenum class Call(val value: Int, val msg: String){\n  WIN: Call(1, \"\u52dd\u3061\")\n  LOSE: Call(-1, \"\u8ca0\u3051\")\n  EVEN: Call(0, \"\u5f15\u304d\u5206\u3051\")\n}\n\nenum class Strategy(val value: Int, val msg: String) {\n  GU: Strategy(0, \"\u30b0\u30fc\")\n  CHOKI: Strategy(1, \"\u30c1\u30e7\u30ad\")\n  PAR: Strategy(2, \"\u30d1\u30fc\")\n\n  fun compare(s: Strategy): Call = when {\n    this.value == s.value -> Call.EVEN\n    this.value == s.value + 1,\n    this.value == 2 && s.value == 0 -> Call.WIN\n    else -> Call.LOSE\n  }\n}\n\nclass Computer {\n  private val random = Random()\n\n  fun selectStrategy(): Strategy {\n    val r: Int = Math.abs(random.nextInt())\n    return Strategy.values().first { s -> s.value == (r mod 3) }\n  }\n}\n\ndata class Result() {\n  private var numberOfWins = 0\n  private var numberOfLoses = 0\n\n  fun addCall(call: Call) {\n    when(call) {\n      Call.WIN -> numberOfWins++\n      Call.LOSE -> numberOfLoses++\n    }\n  }\n\n  override fun toString() =\n      \"\u3042\u306a\u305f\u306e\u52dd\u6557\u6570\\n\" +\n      \"\u52dd\u3061:\\t${this.numberOfWins} \u56de\\n\" +\n      \"\u8ca0\u3051:\\t${this.numberOfLoses} \u56de\"\n}\n\nclass Game() {\n  private val scanner = Scanner(System.`in`)\n  private val com = Computer()\n  private var result = Result()\n\n  fun execute() {\n    println(\"\u3055\u3042\u3001\u79c1\u3068\u3058\u3083\u3093\u3051\u3093\u3057\u307e\u3057\u3087\u3046\uff01\uff01\u52dd\u8ca0\u3067\u3059\u3088\u30fc\uff01\uff01\")\n\n    do {\n      var call: Call\n\n      while(true) {\n        val input = userInput()\n        println(\"\u3042\u306a\u305f\u304c\u51fa\u3057\u305f\u306e\u306f\u300c$input\u300d\u3067\u3059\u3002\")\n\n        val userStrategy = Strategy.values().first { s -> s.msg equals input }\n\n        val comStrategy = com.selectStrategy()\n        println(\"\u79c1\u304c\u51fa\u3057\u305f\u306e\u306f\u300c${comStrategy.msg}\u300d\u3067\u3059\uff01\uff01\")\n\n        call = userStrategy.compare(comStrategy)\n\n        if(call != Call.EVEN) {\n          println(\"\u3042\u306a\u305f\u306e${call.msg}\u3067\u3059\uff01${if (call == Call.WIN) \"\u3084\u3063\u305f\u306d\" else \"\u3056\u3093\u306d\u3093\"}\uff01\")\n          break\n        } else {\n          println(\"\u3042\u30fc\u3044\u3053\u30fc\u3067\uff1f\")\n        }\n      }\n      println(\"***************************\")\n\n      result.addCall(call)\n    } while(retry())\n  }\n\n  fun showResult() {\n    println(result)\n  }\n\n  private fun userInput(): String {\n    var input: String\n\n    while(true) {\n      print(\"\u300c\u30b0\u30fc\u300d\u300c\u30c1\u30e7\u30ad\u300d\u300c\u30d1\u30fc\u300d\u306e\u3069\u308c\u304b\u3092\u6253\u3061\u8fbc\u3093\u3067\u4e0b\u3055\u3044 \u21d2 \")\n\n      input = scanner.nextLine()\n\n      if(Strategy.values().any { s -> s.msg equals input }) { break }\n      println(\"\u300c\u30b0\u30fc\u300d\u300c\u30c1\u30e7\u30ad\u300d\u300c\u30d1\u30fc\u300d\u4ee5\u5916\u306f\u6253\u3061\u8fbc\u307e\u306a\u3044\u3067\u4e0b\u3055\u3044\")\n    }\n\n    return input\n  }\n\n\n  private fun retry(): Boolean {\n    print(\"\u3082\u3046\u4e00\u5ea6\u7d9a\u3051\u308b\u5834\u5408\u306f\u300ccontinue\u300d\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002[continue] \u21d2 \");\n    val input = scanner.nextLine()\n    val result = input.isEmpty() || input equals \"continue\"\n    if(result) { println(\"\u3088\u3057\uff01\u3082\u3046\u4e00\u56de\u52dd\u8ca0\u3057\u307e\u3057\u3087\u3046\uff01\") }\n    return result\n  }\n}\n\nfun main(args : Array<String>) {\n  val game = Game()\n  game.execute()\n  game.showResult()\n}\n\n\n\n\u611f\u60f3\nKotlin \u96e3\u3057\u304b\u3063\u305f\u3067\u3059\u3002\u30b3\u30fc\u30c9\u305d\u306e\u3082\u306e\u306f\u3082\u3046\u5c11\u3057\u30b9\u30de\u30fc\u30c8\u306b\u3059\u308b\u4f59\u5730\u304c\u3042\u308b\u306e\u304b\u306a\u30fc\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3061\u3087\u3063\u3068 Kotlin \u5206\u304b\u3089\u306a\u3044\u306e\u3067\u3053\u308c\u304c\u9650\u754c\u3067\u3057\u305f\u2026\u3002\n\n\u5909\u6570\u306e\u5ba3\u8a00\u304c\u9762\u5012\u304f\u3055\u3044(\u3069\u306e\u5ba3\u8a00\u65b9\u6cd5\u304c\u30d9\u30bf\u30fc\u304b\u308f\u304b\u3089\u306a\u3044)\n\n\n\u5909\u6570\u5ba3\u8a00\u3092\u3059\u308b\u3068\u304d\u306b var, val \u306e\u4f7f\u3044\u5206\u3051\u306f\u7c21\u5358\u306b\u5206\u304b\u308b\n\nvar foo = \"foo\" \u3068 var foo: String = \"foo\" \u306e\u5834\u5408\u3001\u524d\u8005\u306f\u7c21\u5358\u306a\u578b\u63a8\u8ad6\u306b\u3088\u3063\u3066\u578b\u304c\u5c0e\u304b\u308c\u308b\u3051\u3069\u3001\u5f8c\u8005\u306f\u30d7\u30ed\u30b0\u30e9\u30de\u81ea\u8eab\u304c\u660e\u793a\u7684\u306b\u66f8\u3051\u308b\u3057 String \u306e\u69d8\u306b\u30ea\u30c6\u30e9\u30eb\u3067\u578b\u304c\u5206\u304b\u308b\u3088\u3046\u306a\u3082\u306e\u306f\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3051\u3069\u3001\u95a2\u6570\u306a\u3069\u3067\u5024\u3092\u8fd4\u3059\u5834\u5408\u306f\u5f8c\u8005\u306e\u3088\u3046\u306b\u660e\u793a\u7684\u306b\u66f8\u3044\u305f\u307b\u3046\u304c\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u305f\u3060\u3001\u305d\u306e\u5834\u5408\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u597d\u307f\u306b\u66f8\u304d\u65b9\u304c\u59d4\u306d\u3089\u308c\u308b\u306e\u3067\u3001\u79c1\u500b\u4eba\u306e\u611f\u60f3\u3068\u3057\u3066\u306f\u5fae\u5999\u3060\u3068\u601d\u3063\u305f\u306e\u3067\u3044\u3063\u305d\u5f8c\u8005\u3067\u7d71\u4e00\u3057\u305f\u3044\u3068\u601d\u3063\u305f\u3002\n\n\n\nfind \u307f\u305f\u3044\u306a\u4e00\u822c\u7684\u306a\u540d\u524d\u306e\u95a2\u6570\u304c\u975e\u63a8\u5968\u306b\u306a\u3063\u3066\u308b( Ver 0.9.x )\n\n\n\nArray#find \u306f\u73fe\u5728\u975e\u63a8\u5968\u306a\u95a2\u6570\u3089\u3057\u3044\n\u4ee3\u308f\u308a\u306b Array#first \u3092\u4f7f\u3046\u3088\u3046\u3067\u3059\u3002\n\nArray#first \u306f\u5f15\u6570\u3092\u53d6\u3089\u306a\u3044\u5834\u5408\u306f\u7d14\u7c8b\u306a\u4e00\u756a\u76ee\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u3001\u5f15\u6570\u3042\u308a\u306e\u5834\u5408\u306f\u5f15\u6570\u306e\u6761\u4ef6\u3092\u4e00\u756a\u76ee\u306b\u6e80\u305f\u3059\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059(\u3051\u3069\u3001\u79c1\u306f first \u3068 find \u306e\u610f\u5473\u306f\u9055\u3046\u3068\u601d\u3046\u306e\u3067\u3061\u3083\u3093\u3068\u95a2\u6570\u3092\u5206\u3051\u305f\u3044\u306a\u3063\u3066\u601d\u3044\u307e\u3057\u305f)\u3002\n\n\n\nnull \u306b\u906d\u9047\u3057\u306a\u3044\u3088\u3046\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3059\u308b\u306e\u304c\u5c11\u3057\u624b\u9593\n\n\n\u4eca\u56de Array#first \u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001 Array#firstOrNull \u3092\u4f7f\u3046\u304b\u60a9\u307f\u307e\u3057\u305f\u3002\n\nfind \u306e\u6587\u8108\u3067\u306f\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u306a\u3044\u3053\u3068\u306f\u3088\u304f\u3042\u308a\u307e\u3059\u3002\n\n\n\u3064\u307e\u308a\u3001\u8fd4\u308a\u5024\u3068\u3057\u3066 null(\u306a\u3044\u3057\u3001\u305d\u308c\u306b\u8a72\u5f53\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8) \u304c\u8a31\u5bb9\u3055\u308c\u308b\u3053\u3068\u306f\u3088\u304f\u3042\u308a\u307e\u3059\u3002\n\n\n\u3067\u3059\u304c\u3001 first \u3068\u3057\u3066\u306e\u6587\u8108\u3067\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u306a\u3044\u3068\u3044\u3046\u306e\u306f\u5c11\u3057\u6c17\u6301\u3061\u60aa\u3044\u306a\u3063\u3066\u601d\u3044\u307e\u3057\u305f\u3002\n\u305d\u308c\u304b\u3089 null \u3092\u8a31\u5bb9\u3057\u305f\u3044\u3068\u304d\u306b Kotlin \u3067\u306f\u3001\u5909\u6570\u5ba3\u8a00\u3042\u305f\u308a\u3082\u5909\u66f4\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u9762\u5012\u3060\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u4f8b\u3048\u3070 Ruby \u3067\u306f find \u3067 nil \u304c\u8fd4\u308b\u306e\u3092\u8a31\u5bb9\u3057\u3066\u3044\u308b\u306e\u3067\u3001 if foo \u306e\u3088\u3046\u306a nil \u30c1\u30a7\u30c3\u30af\u306e\u30a4\u30c7\u30a3\u30aa\u30e0\u304c\u3042\u308a\u307e\u3059\u3002\nKotlin \u306e\u5834\u5408\u3001 null \u3092\u8a31\u5bb9\u3059\u308b\u3088\u3046\u306b\u66f8\u304f\u3068\u5909\u6570\u306e\u5ba3\u8a00\u304b\u3089\u30b3\u30fc\u30c9\u3092\u5909\u3048\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3053\u3068\u3068\u3001\u305d\u306e\u5909\u6570\u306b null \u304c\u5165\u3063\u3066\u304d\u3066\u3082\u5f8c\u7d9a\u306e\u30c1\u30a7\u30c3\u30af\u306b\u3088\u308a null \u3060\u3063\u305f\u3089\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u307f\u305f\u3044\u306a\u98a8\u306b\u66f8\u304f\u306e\u306a\u3089\u3001\u305d\u306e\u5909\u6570\u306b null \u304c\u5165\u3089\u306a\u3044\u3088\u3046\u306b\u5b58\u5728\u30c1\u30a7\u30c3\u30af\u307f\u305f\u3044\u306a\u3082\u306e\u3092\u5148\u306b\u3057\u305f\u65b9\u304c\u3044\u3044\u306e\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n\n\u4eca\u56de\u3067\u8a00\u3046\u3068\u3053\u308d\u306e Array#any \u304c\u305d\u306e\u5b58\u5728\u30c1\u30a7\u30c3\u30af\u3067\u3059\u306d\u3002\n\u305f\u3060\u3001\u3053\u308c\u306f\u5c11\u3057\u3070\u304b\u308a\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u306e\u3068\u540c\u3058\u30b3\u30fc\u30c9\u304c 2 \u56de\u51fa\u3066\u304f\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3082\u3046\u5c11\u3057\u7dba\u9e97\u306b\u307e\u3068\u3081\u305f\u3044\u3002\n\n\n\n\n\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u304c\u3088\u304f\u5206\u304b\u3089\u306a\u3044\n\n\n\nnull \u3092\u6975\u529b\u907f\u3051\u308b\u3079\u304d\u306a\u306e\u304b\u3068\u304b(\u4eca\u56de\u306e\u845b\u85e4\u3067\u3059\u306d)\n\u5909\u6570\u5ba3\u8a00\u306e\u4ed5\u65b9\u3068\u304b\u3002\nQuestion Colon Operator \u304c\u306a\u3044\u306e\u3082\u3061\u3087\u3063\u3068\u66f8\u304f\u3068\u304d\u306b\u60a9\u307f\u307e\u3059\u306d\u3002\n\n\n\u3044\u308f\u3086\u308b String Interpolation \u3067 ${result ? \"foo\" : \"bar\"} \u3068\u66f8\u3051\u308b\u306a\u3089\u9055\u548c\u611f\u5c11\u306a\u3044\u306e\u3067\u3059\u304c\u3001 ${if(result) \"foo\" else \"bar\"} \u3060\u3068\u5fae\u5999\u3060\u306a\u3068\u601d\u3063\u305f\u308a\u3068\u304b\u3057\u307e\u3057\u305f\u3002\n\n\n\n\n\n\n\u53c2\u8003\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u521d\u5fc3\u8005\u304c\u3058\u3083\u3093\u3051\u3093\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u305f\nKotlin \u3068\u3044\u3046\u8a00\u8a9e\u306b\u8208\u5473\u3092\u6301\u3061\u3001\u5c11\u3057\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u305f\u304f\u306a\u3063\u305f\u306e\u3067\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u3064\u3044\u5148\u65e5 [Java Advent Calendar 2014](http://qiita.com/advent-calendar/2014/java) \u306e\u8a18\u4e8b\u3067[\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u521d\u5fc3\u8005\u304c\u3058\u3083\u3093\u3051\u3093\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u305f](http://qiita.com/dk_masu/items/d7bb7a81cbc6e16fbb49)\u3068\u3044\u3046\u306e\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u521d\u3081\u3066\u89e6\u308b\u8a00\u8a9e\u306e\u984c\u6750\u3068\u3057\u3066\u306f\u7533\u3057\u5206\u306a\u3055\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001\u3042\u306e\u8a18\u4e8b\u306e\u4ed5\u69d8\u3092\u501f\u308a\u3066 Kotlin \u3067\u518d\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n\n```lang:kotlin\nimport java.util.Random\nimport java.util.Scanner\n\nenum class Call(val value: Int, val msg: String){\n  WIN: Call(1, \"\u52dd\u3061\")\n  LOSE: Call(-1, \"\u8ca0\u3051\")\n  EVEN: Call(0, \"\u5f15\u304d\u5206\u3051\")\n}\n\nenum class Strategy(val value: Int, val msg: String) {\n  GU: Strategy(0, \"\u30b0\u30fc\")\n  CHOKI: Strategy(1, \"\u30c1\u30e7\u30ad\")\n  PAR: Strategy(2, \"\u30d1\u30fc\")\n\n  fun compare(s: Strategy): Call = when {\n    this.value == s.value -> Call.EVEN\n    this.value == s.value + 1,\n    this.value == 2 && s.value == 0 -> Call.WIN\n    else -> Call.LOSE\n  }\n}\n\nclass Computer {\n  private val random = Random()\n\n  fun selectStrategy(): Strategy {\n    val r: Int = Math.abs(random.nextInt())\n    return Strategy.values().first { s -> s.value == (r mod 3) }\n  }\n}\n\ndata class Result() {\n  private var numberOfWins = 0\n  private var numberOfLoses = 0\n\n  fun addCall(call: Call) {\n    when(call) {\n      Call.WIN -> numberOfWins++\n      Call.LOSE -> numberOfLoses++\n    }\n  }\n\n  override fun toString() =\n      \"\u3042\u306a\u305f\u306e\u52dd\u6557\u6570\\n\" +\n      \"\u52dd\u3061:\\t${this.numberOfWins} \u56de\\n\" +\n      \"\u8ca0\u3051:\\t${this.numberOfLoses} \u56de\"\n}\n\nclass Game() {\n  private val scanner = Scanner(System.`in`)\n  private val com = Computer()\n  private var result = Result()\n\n  fun execute() {\n    println(\"\u3055\u3042\u3001\u79c1\u3068\u3058\u3083\u3093\u3051\u3093\u3057\u307e\u3057\u3087\u3046\uff01\uff01\u52dd\u8ca0\u3067\u3059\u3088\u30fc\uff01\uff01\")\n\n    do {\n      var call: Call\n\n      while(true) {\n        val input = userInput()\n        println(\"\u3042\u306a\u305f\u304c\u51fa\u3057\u305f\u306e\u306f\u300c$input\u300d\u3067\u3059\u3002\")\n\n        val userStrategy = Strategy.values().first { s -> s.msg equals input }\n\n        val comStrategy = com.selectStrategy()\n        println(\"\u79c1\u304c\u51fa\u3057\u305f\u306e\u306f\u300c${comStrategy.msg}\u300d\u3067\u3059\uff01\uff01\")\n\n        call = userStrategy.compare(comStrategy)\n\n        if(call != Call.EVEN) {\n          println(\"\u3042\u306a\u305f\u306e${call.msg}\u3067\u3059\uff01${if (call == Call.WIN) \"\u3084\u3063\u305f\u306d\" else \"\u3056\u3093\u306d\u3093\"}\uff01\")\n          break\n        } else {\n          println(\"\u3042\u30fc\u3044\u3053\u30fc\u3067\uff1f\")\n        }\n      }\n      println(\"***************************\")\n\n      result.addCall(call)\n    } while(retry())\n  }\n\n  fun showResult() {\n    println(result)\n  }\n\n  private fun userInput(): String {\n    var input: String\n\n    while(true) {\n      print(\"\u300c\u30b0\u30fc\u300d\u300c\u30c1\u30e7\u30ad\u300d\u300c\u30d1\u30fc\u300d\u306e\u3069\u308c\u304b\u3092\u6253\u3061\u8fbc\u3093\u3067\u4e0b\u3055\u3044 \u21d2 \")\n\n      input = scanner.nextLine()\n\n      if(Strategy.values().any { s -> s.msg equals input }) { break }\n      println(\"\u300c\u30b0\u30fc\u300d\u300c\u30c1\u30e7\u30ad\u300d\u300c\u30d1\u30fc\u300d\u4ee5\u5916\u306f\u6253\u3061\u8fbc\u307e\u306a\u3044\u3067\u4e0b\u3055\u3044\")\n    }\n\n    return input\n  }\n\n\n  private fun retry(): Boolean {\n    print(\"\u3082\u3046\u4e00\u5ea6\u7d9a\u3051\u308b\u5834\u5408\u306f\u300ccontinue\u300d\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044\u3002[continue] \u21d2 \");\n    val input = scanner.nextLine()\n    val result = input.isEmpty() || input equals \"continue\"\n    if(result) { println(\"\u3088\u3057\uff01\u3082\u3046\u4e00\u56de\u52dd\u8ca0\u3057\u307e\u3057\u3087\u3046\uff01\") }\n    return result\n  }\n}\n\nfun main(args : Array<String>) {\n  val game = Game()\n  game.execute()\n  game.showResult()\n}\n```\n\n## \u611f\u60f3\nKotlin \u96e3\u3057\u304b\u3063\u305f\u3067\u3059\u3002\u30b3\u30fc\u30c9\u305d\u306e\u3082\u306e\u306f\u3082\u3046\u5c11\u3057\u30b9\u30de\u30fc\u30c8\u306b\u3059\u308b\u4f59\u5730\u304c\u3042\u308b\u306e\u304b\u306a\u30fc\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3061\u3087\u3063\u3068 Kotlin \u5206\u304b\u3089\u306a\u3044\u306e\u3067\u3053\u308c\u304c\u9650\u754c\u3067\u3057\u305f\u2026\u3002\n\n- \u5909\u6570\u306e\u5ba3\u8a00\u304c\u9762\u5012\u304f\u3055\u3044(\u3069\u306e\u5ba3\u8a00\u65b9\u6cd5\u304c\u30d9\u30bf\u30fc\u304b\u308f\u304b\u3089\u306a\u3044)\n  - \u5909\u6570\u5ba3\u8a00\u3092\u3059\u308b\u3068\u304d\u306b `var`, `val` \u306e\u4f7f\u3044\u5206\u3051\u306f\u7c21\u5358\u306b\u5206\u304b\u308b\n  - `var foo = \"foo\"` \u3068 `var foo: String = \"foo\"` \u306e\u5834\u5408\u3001\u524d\u8005\u306f\u7c21\u5358\u306a\u578b\u63a8\u8ad6\u306b\u3088\u3063\u3066\u578b\u304c\u5c0e\u304b\u308c\u308b\u3051\u3069\u3001\u5f8c\u8005\u306f\u30d7\u30ed\u30b0\u30e9\u30de\u81ea\u8eab\u304c\u660e\u793a\u7684\u306b\u66f8\u3051\u308b\u3057 `String` \u306e\u69d8\u306b\u30ea\u30c6\u30e9\u30eb\u3067\u578b\u304c\u5206\u304b\u308b\u3088\u3046\u306a\u3082\u306e\u306f\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3051\u3069\u3001\u95a2\u6570\u306a\u3069\u3067\u5024\u3092\u8fd4\u3059\u5834\u5408\u306f\u5f8c\u8005\u306e\u3088\u3046\u306b\u660e\u793a\u7684\u306b\u66f8\u3044\u305f\u307b\u3046\u304c\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n  - \u305f\u3060\u3001\u305d\u306e\u5834\u5408\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u597d\u307f\u306b\u66f8\u304d\u65b9\u304c\u59d4\u306d\u3089\u308c\u308b\u306e\u3067\u3001\u79c1\u500b\u4eba\u306e\u611f\u60f3\u3068\u3057\u3066\u306f\u5fae\u5999\u3060\u3068\u601d\u3063\u305f\u306e\u3067\u3044\u3063\u305d\u5f8c\u8005\u3067\u7d71\u4e00\u3057\u305f\u3044\u3068\u601d\u3063\u305f\u3002\n- `find` \u307f\u305f\u3044\u306a\u4e00\u822c\u7684\u306a\u540d\u524d\u306e\u95a2\u6570\u304c\u975e\u63a8\u5968\u306b\u306a\u3063\u3066\u308b( Ver 0.9.x )\n  - `Array#find` \u306f\u73fe\u5728\u975e\u63a8\u5968\u306a\u95a2\u6570\u3089\u3057\u3044\n  - \u4ee3\u308f\u308a\u306b `Array#first` \u3092\u4f7f\u3046\u3088\u3046\u3067\u3059\u3002\n  - `Array#first` \u306f\u5f15\u6570\u3092\u53d6\u3089\u306a\u3044\u5834\u5408\u306f\u7d14\u7c8b\u306a\u4e00\u756a\u76ee\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u3001\u5f15\u6570\u3042\u308a\u306e\u5834\u5408\u306f\u5f15\u6570\u306e\u6761\u4ef6\u3092\u4e00\u756a\u76ee\u306b\u6e80\u305f\u3059\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059(\u3051\u3069\u3001\u79c1\u306f `first` \u3068 `find` \u306e\u610f\u5473\u306f\u9055\u3046\u3068\u601d\u3046\u306e\u3067\u3061\u3083\u3093\u3068\u95a2\u6570\u3092\u5206\u3051\u305f\u3044\u306a\u3063\u3066\u601d\u3044\u307e\u3057\u305f)\u3002\n- `null` \u306b\u906d\u9047\u3057\u306a\u3044\u3088\u3046\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3059\u308b\u306e\u304c\u5c11\u3057\u624b\u9593\n  - \u4eca\u56de `Array#first` \u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001 `Array#firstOrNull` \u3092\u4f7f\u3046\u304b\u60a9\u307f\u307e\u3057\u305f\u3002\n  - `find` \u306e\u6587\u8108\u3067\u306f\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u306a\u3044\u3053\u3068\u306f\u3088\u304f\u3042\u308a\u307e\u3059\u3002\n     - \u3064\u307e\u308a\u3001\u8fd4\u308a\u5024\u3068\u3057\u3066 `null`(\u306a\u3044\u3057\u3001\u305d\u308c\u306b\u8a72\u5f53\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8) \u304c\u8a31\u5bb9\u3055\u308c\u308b\u3053\u3068\u306f\u3088\u304f\u3042\u308a\u307e\u3059\u3002\n  - \u3067\u3059\u304c\u3001 `first` \u3068\u3057\u3066\u306e\u6587\u8108\u3067\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u306a\u3044\u3068\u3044\u3046\u306e\u306f\u5c11\u3057\u6c17\u6301\u3061\u60aa\u3044\u306a\u3063\u3066\u601d\u3044\u307e\u3057\u305f\u3002\n  - \u305d\u308c\u304b\u3089 `null` \u3092\u8a31\u5bb9\u3057\u305f\u3044\u3068\u304d\u306b Kotlin \u3067\u306f\u3001\u5909\u6570\u5ba3\u8a00\u3042\u305f\u308a\u3082\u5909\u66f4\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u9762\u5012\u3060\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n  - \u4f8b\u3048\u3070 `Ruby` \u3067\u306f `find` \u3067 `nil` \u304c\u8fd4\u308b\u306e\u3092\u8a31\u5bb9\u3057\u3066\u3044\u308b\u306e\u3067\u3001 `if foo` \u306e\u3088\u3046\u306a `nil` \u30c1\u30a7\u30c3\u30af\u306e\u30a4\u30c7\u30a3\u30aa\u30e0\u304c\u3042\u308a\u307e\u3059\u3002\n  - Kotlin \u306e\u5834\u5408\u3001 `null` \u3092\u8a31\u5bb9\u3059\u308b\u3088\u3046\u306b\u66f8\u304f\u3068\u5909\u6570\u306e\u5ba3\u8a00\u304b\u3089\u30b3\u30fc\u30c9\u3092\u5909\u3048\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3053\u3068\u3068\u3001\u305d\u306e\u5909\u6570\u306b `null` \u304c\u5165\u3063\u3066\u304d\u3066\u3082\u5f8c\u7d9a\u306e\u30c1\u30a7\u30c3\u30af\u306b\u3088\u308a `null` \u3060\u3063\u305f\u3089\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u307f\u305f\u3044\u306a\u98a8\u306b\u66f8\u304f\u306e\u306a\u3089\u3001\u305d\u306e\u5909\u6570\u306b `null` \u304c\u5165\u3089\u306a\u3044\u3088\u3046\u306b\u5b58\u5728\u30c1\u30a7\u30c3\u30af\u307f\u305f\u3044\u306a\u3082\u306e\u3092\u5148\u306b\u3057\u305f\u65b9\u304c\u3044\u3044\u306e\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n     - \u4eca\u56de\u3067\u8a00\u3046\u3068\u3053\u308d\u306e `Array#any` \u304c\u305d\u306e\u5b58\u5728\u30c1\u30a7\u30c3\u30af\u3067\u3059\u306d\u3002\n     - \u305f\u3060\u3001\u3053\u308c\u306f\u5c11\u3057\u3070\u304b\u308a\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u306e\u3068\u540c\u3058\u30b3\u30fc\u30c9\u304c 2 \u56de\u51fa\u3066\u304f\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3082\u3046\u5c11\u3057\u7dba\u9e97\u306b\u307e\u3068\u3081\u305f\u3044\u3002\n- \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u304c\u3088\u304f\u5206\u304b\u3089\u306a\u3044\n  - `null` \u3092\u6975\u529b\u907f\u3051\u308b\u3079\u304d\u306a\u306e\u304b\u3068\u304b(\u4eca\u56de\u306e\u845b\u85e4\u3067\u3059\u306d)\n  - \u5909\u6570\u5ba3\u8a00\u306e\u4ed5\u65b9\u3068\u304b\u3002\n  - Question Colon Operator \u304c\u306a\u3044\u306e\u3082\u3061\u3087\u3063\u3068\u66f8\u304f\u3068\u304d\u306b\u60a9\u307f\u307e\u3059\u306d\u3002\n     - \u3044\u308f\u3086\u308b String Interpolation \u3067 `${result ? \"foo\" : \"bar\"}` \u3068\u66f8\u3051\u308b\u306a\u3089\u9055\u548c\u611f\u5c11\u306a\u3044\u306e\u3067\u3059\u304c\u3001 `${if(result) \"foo\" else \"bar\"}` \u3060\u3068\u5fae\u5999\u3060\u306a\u3068\u601d\u3063\u305f\u308a\u3068\u304b\u3057\u307e\u3057\u305f\u3002\n\n## \u53c2\u8003\n[\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u521d\u5fc3\u8005\u304c\u3058\u3083\u3093\u3051\u3093\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u305f](http://qiita.com/dk_masu/items/d7bb7a81cbc6e16fbb49)\n", "tags": ["Kotlin"]}