{"context": " More than 1 year has passed since last update.Mac\u9650\u5b9a\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u76f4\u63a5github\u306e\u753b\u9762\u3092\u958b\u3051\u3066\u3061\u3087\u3063\u3068\u4fbf\u5229\u3067\u3059\u3002\n\u4ee5\u4e0b\u3092zshrc\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\nfunction open-git-remote() {\n  git rev-parse --git-dir >/dev/null 2>&1\n  if [[ $? == 0 ]]; then\n    git config --get remote.origin.url | sed -e 's|\\:|/|' -e 's|^git@|https://|' -e 's|.git$||' | xargs open\n  else\n    echo \".git not found.\\n\"\n  fi\n}\n\n\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u66f4\u306b\u4fbf\u5229\u306b\uff01\nzle -N open-git-remote\nbindkey '^[o' open-git-remote\n\n\n\npeco \u3092\u4f7f\u3063\u3066\u66f4\u306b\u4fbf\u5229\u306b\uff01\n\u30d6\u30e9\u30f3\u30c1\u3092\u9078\u629e\u3057\u305f\u4e0a\u3067\u3001\u305d\u306e\u30d6\u30e9\u30f3\u30c1\u306e\u30da\u30fc\u30b8\u3092\u958b\u3044\u305f\u308a\u3082\u3067\u304d\u307e\u3059\u3002\n\u500b\u4eba\u7684\u306b\u306f\u3053\u3061\u3089\u3067\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\nfunction open-git-remote() {\n  git rev-parse --git-dir >/dev/null 2>&1\n  if [[ $? == 0 ]]; then\n    # git config --get remote.origin.url | sed -e 's|\\:|/|' -e 's|^git@|https://|' -e 's|.git$||' | xargs open\n    local uri=\"$(git config --get remote.origin.url | sed -e 's|\\:|/|' -e 's|^git@|https://|' -e 's|.git$||')\"\n    local branch=\"$(peco-select-branche | awk '{if ($0 ~ \"master\"); else print \"tree/\" $0}')\"\n    open \"$uri/$branch\"\n  else\n    echo \".git not found.\\n\"\n  fi\n}\nzle -N open-git-remote\nbindkey '^[o' open-git-remote\n\nfunction peco-select-branche() {\n  git rev-parse --git-dir >/dev/null 2>&1\n  if [[ $? == 0 ]]; then\n    git for-each-ref --format='%(refname)' --sort=-committerdate refs/remotes refs/tags | sed -e 's|^refs/||' -e 's|^remotes/origin/||' | peco --prompt='[branches]'\n  fi\n}\n\n\u304a\u5f79\u306b\u305f\u3066\u3070\u5e78\u3044\u3067\u3059\uff01\uff01\n\nMac\u9650\u5b9a\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u76f4\u63a5github\u306e\u753b\u9762\u3092\u958b\u3051\u3066\u3061\u3087\u3063\u3068\u4fbf\u5229\u3067\u3059\u3002\n\u4ee5\u4e0b\u3092zshrc\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n```zsh\nfunction open-git-remote() {\n  git rev-parse --git-dir >/dev/null 2>&1\n  if [[ $? == 0 ]]; then\n    git config --get remote.origin.url | sed -e 's|\\:|/|' -e 's|^git@|https://|' -e 's|.git$||' | xargs open\n  else\n    echo \".git not found.\\n\"\n  fi\n}\n```\n\n\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u66f4\u306b\u4fbf\u5229\u306b\uff01\n\n```zshrc\nzle -N open-git-remote\nbindkey '^[o' open-git-remote\n\n```\n\n## [peco](https://github.com/peco/peco) \u3092\u4f7f\u3063\u3066\u66f4\u306b\u4fbf\u5229\u306b\uff01\n\n\u30d6\u30e9\u30f3\u30c1\u3092\u9078\u629e\u3057\u305f\u4e0a\u3067\u3001\u305d\u306e\u30d6\u30e9\u30f3\u30c1\u306e\u30da\u30fc\u30b8\u3092\u958b\u3044\u305f\u308a\u3082\u3067\u304d\u307e\u3059\u3002\n\u500b\u4eba\u7684\u306b\u306f\u3053\u3061\u3089\u3067\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n```zsh\nfunction open-git-remote() {\n  git rev-parse --git-dir >/dev/null 2>&1\n  if [[ $? == 0 ]]; then\n    # git config --get remote.origin.url | sed -e 's|\\:|/|' -e 's|^git@|https://|' -e 's|.git$||' | xargs open\n    local uri=\"$(git config --get remote.origin.url | sed -e 's|\\:|/|' -e 's|^git@|https://|' -e 's|.git$||')\"\n    local branch=\"$(peco-select-branche | awk '{if ($0 ~ \"master\"); else print \"tree/\" $0}')\"\n    open \"$uri/$branch\"\n  else\n    echo \".git not found.\\n\"\n  fi\n}\nzle -N open-git-remote\nbindkey '^[o' open-git-remote\n\nfunction peco-select-branche() {\n  git rev-parse --git-dir >/dev/null 2>&1\n  if [[ $? == 0 ]]; then\n    git for-each-ref --format='%(refname)' --sort=-committerdate refs/remotes refs/tags | sed -e 's|^refs/||' -e 's|^remotes/origin/||' | peco --prompt='[branches]'\n  fi\n}\n```\n\n\u304a\u5f79\u306b\u305f\u3066\u3070\u5e78\u3044\u3067\u3059\uff01\uff01\n", "tags": ["Zsh", "Peco", "GitHub"]}