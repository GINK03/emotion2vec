{"context": " More than 1 year has passed since last update.Android\u306eJUnitTest\u3067\u306fAsyncTask\u306eexecute\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u6642\u70b9\u3067\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u3057\u305f\u6280\u304c\u5fc5\u8981\u3002\n\u624b\u6bb5(1)\n\u30fb\u5185\u90e8\u30ed\u30b8\u30c3\u30af\u3092\u5168\u3066\u30e1\u30bd\u30c3\u30c9\u306b\u66f8\u304d\u51fa\u3057\u3001private\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u65b9\u6cd5\u3092\u7528\u3044\u3066\u30c6\u30b9\u30c8\n\u3000\u3000\u2192\u51e6\u7406\u306e\u5358\u4f53\u30c6\u30b9\u30c8\u306b\u306f\u6709\u52b9\u3060\u304c\u3001onPreExecute\uff5eonPostExecute\u306e\u6d41\u308c\u3092\u542b\u3081\u3066\u30c6\u30b9\u30c8\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3067\u304d\u306a\u3044\n\n\u5358\u4f53\u30c6\u30b9\u30c8\u3068\u3044\u3046\u610f\u5473\u3067\u306f\u3001(1)\u3067\u3082\u5341\u5206\u3060\u304c\u3001Activity\u306e\u30c6\u30b9\u30c8\u3092\u884c\u3063\u3066\u3044\u308b\u3068onPostExecute\u304b\u3089\u306e\u30ad\u30c3\u30af\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u304c\u591a\u304f\u3042\u308b\u306e\u3067\u3001\u4e0d\u5341\u5206\u3002\n\n\u624b\u6bb5(2)\n\u30fbTask\u304c\u7d42\u308f\u308b\u306e\u3092\u5f85\u305f\u305b\u308b\u3088\u3046\u306b\u3059\u308b\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001(2)\u306e\u5b9f\u88c5\u4f8b\u3002\n\u30c6\u30b9\u30c8\u3057\u305f\u3044Async\u306e\u30af\u30e9\u30b9\n\nSampleTask.java\npublic class SampleTask extends AsyncTask<String, Integer, Integer> {\n    EventListener listener = null;\n    Context context =null;\n\n    public interface EventListener{\n        public void onFinish(int result);\n    }\n\n    public SampleTask(Context context, EventListener listener) {\n        this.listener  =listener;\n        this.context = context;\n    }\n\n    @Override\n    protected Integer doInBackground(String... uID) {\n\n        // \u306a\u3093\u304b\u51e6\u7406\n\n        return 0;\n    }\n    @Override\n    protected void onPostExecute(Integer result) {\n\n        if(listener!=null){\n            listener.onFinish(result);\n        }\n    }\n}\n\n\n\u30c6\u30b9\u30c8\u547c\u3073\u51fa\u3057\u30b3\u30fc\u30c9\n\nTestTask.java\npublic class TestTask extends ActivityInstrumentationTestCase2<MainActivity>{\n\n    Activity mActivity = null;\n    EventListener mListener = null;\n\n    public TestTask(){\n        super(MainActivity.class);\n    }\n\n    protected void setUp() throws Exception {\n        super.setUp();\n\n        // \u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u3092\u53d6\u5f97\n        mActivity = getActivity();\n    }\n\n    protected void tearDown() throws Exception {\n        super.tearDown();\n    }\n\n    /**\n       \u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\n    */\n    private void taskExecute(EventListener l) throws Throwable {\n        // create CountDownLatch.\n        final CountDownLatch signal = new CountDownLatch(1);\n\n        mListener = l;\n\n        runTestOnUiThread(new Runnable() {\n            public void run() {\n                try {\n                    SampleTask task = new SampleTask (mActivity, new EventListener() {\n\n                        public void onFinish(int result) {\n\n                            if(mListener!=null){\n                                mListener.onFinish(result);\n                            }\n                            signal.countDown(); // release\n                        }\n                    });\n                    task.execute(\"nickname\");\n                } catch (Exception e) {\n                    Log.e(TAG, \"ERROR\", e);\n                    fail();\n                }\n            }\n        });\n\n        try {\n            signal.await();// wait for callback\n        } catch (InterruptedException e1) {\n            fail();\n            e1.printStackTrace();\n        }\n    }\n\n    /** \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9 */\n    public void test000() throws Throwable{\n        // \u524d\u63d0\u51e6\u7406\u304b\u306a\u306b\u304b\n\n        // \u30bf\u30b9\u30af\u547c\u3073\u51fa\u3057\n        taskExecute(new EventListener() {\n            public void onFinish(int result) {\n                // \u3053\u3053\u306b\u691c\u8a3c\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n                assertTrue(0==result);\n            }\n        });\n    }\n}\n\n\n\u53c2\u8003\uff1ahttp://stackoverflow.com/questions/9774792/asynctask-onpostexecute-not-called-in-unit-test-case\n\u4e0a\u8a18\u53c2\u8003\u9801\u3068\u306e\u9055\u3044\u306f\u3001\u30bf\u30b9\u30af\u547c\u3073\u51fa\u3057\u90e8\u5206\u3092\u30e1\u30bd\u30c3\u30c9\u5316TestTask#taskExecute\u3057\u3066\u3042\u308b\u3068\u3053\u308d\u3060\u3051\u3067\u3059\u3002\nSampleTask\u90e8\u5206\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9\u5316\u3059\u308c\u3070\u3001\u300cAsyncTask\u306eJUnitTest\u3092\u884c\u3046\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306e\u57fa\u672c\u3068\u306a\u308b\u62bd\u8c61\u30af\u30e9\u30b9\u300d\u304c\u51fa\u6765\u308b\u304b\u306a\u3002\n\u6c17\u304c\u5411\u3044\u305f\u3089\u8ffd\u8a18\u3057\u307e\u3059(\u7b11)\nAndroid\u306eJUnitTest\u3067\u306fAsyncTask\u306eexecute\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u6642\u70b9\u3067\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u3057\u305f\u6280\u304c\u5fc5\u8981\u3002\n\n\u624b\u6bb5(1)\n\u30fb\u5185\u90e8\u30ed\u30b8\u30c3\u30af\u3092\u5168\u3066\u30e1\u30bd\u30c3\u30c9\u306b\u66f8\u304d\u51fa\u3057\u3001private\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u65b9\u6cd5\u3092\u7528\u3044\u3066\u30c6\u30b9\u30c8\n\u3000\u3000\u2192\u51e6\u7406\u306e\u5358\u4f53\u30c6\u30b9\u30c8\u306b\u306f\u6709\u52b9\u3060\u304c\u3001onPreExecute\uff5eonPostExecute\u306e\u6d41\u308c\u3092\u542b\u3081\u3066\u30c6\u30b9\u30c8\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3067\u304d\u306a\u3044\n\n>\u5358\u4f53\u30c6\u30b9\u30c8\u3068\u3044\u3046\u610f\u5473\u3067\u306f\u3001(1)\u3067\u3082\u5341\u5206\u3060\u304c\u3001Activity\u306e\u30c6\u30b9\u30c8\u3092\u884c\u3063\u3066\u3044\u308b\u3068onPostExecute\u304b\u3089\u306e\u30ad\u30c3\u30af\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u304c\u591a\u304f\u3042\u308b\u306e\u3067\u3001\u4e0d\u5341\u5206\u3002\n\n\u624b\u6bb5(2)\n\u30fbTask\u304c\u7d42\u308f\u308b\u306e\u3092\u5f85\u305f\u305b\u308b\u3088\u3046\u306b\u3059\u308b\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001(2)\u306e\u5b9f\u88c5\u4f8b\u3002\n\n\u30c6\u30b9\u30c8\u3057\u305f\u3044Async\u306e\u30af\u30e9\u30b9\n\n```java:SampleTask.java\npublic class SampleTask extends AsyncTask<String, Integer, Integer> {\n\tEventListener listener = null;\n\tContext context =null;\n\n\tpublic interface EventListener{\n\t\tpublic void onFinish(int result);\n\t}\n\n\tpublic SampleTask(Context context, EventListener listener) {\n\t\tthis.listener  =listener;\n\t\tthis.context = context;\n\t}\n\n\t@Override\n\tprotected Integer doInBackground(String... uID) {\n\n\t\t// \u306a\u3093\u304b\u51e6\u7406\n\n\t\treturn 0;\n\t}\n\t@Override\n\tprotected void onPostExecute(Integer result) {\n\n\t\tif(listener!=null){\n\t\t\tlistener.onFinish(result);\n\t\t}\n\t}\n}\n```\n\n\u30c6\u30b9\u30c8\u547c\u3073\u51fa\u3057\u30b3\u30fc\u30c9\n\n```java:TestTask.java\npublic class TestTask extends ActivityInstrumentationTestCase2<MainActivity>{\n\n\tActivity mActivity = null;\n\tEventListener mListener = null;\n\n\tpublic TestTask(){\n\t\tsuper(MainActivity.class);\n\t}\n\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\n\t\t// \u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u3092\u53d6\u5f97\n\t\tmActivity = getActivity();\n\t}\n\n\tprotected void tearDown() throws Exception {\n\t\tsuper.tearDown();\n\t}\n\n\t/**\n\t   \u30bf\u30b9\u30af\u3092\u8d77\u52d5\u3059\u308b\n\t*/\n\tprivate void taskExecute(EventListener l) throws Throwable {\n\t\t// create CountDownLatch.\n\t\tfinal CountDownLatch signal = new CountDownLatch(1);\n\n\t\tmListener = l;\n\n\t\trunTestOnUiThread(new Runnable() {\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\tSampleTask task = new SampleTask (mActivity, new EventListener() {\n\n\t\t\t\t\t\tpublic void onFinish(int result) {\n\n\t\t\t\t\t\t\tif(mListener!=null){\n\t\t\t\t\t\t\t\tmListener.onFinish(result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsignal.countDown(); // release\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\ttask.execute(\"nickname\");\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tLog.e(TAG, \"ERROR\", e);\n\t\t\t\t\tfail();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\ttry {\n\t\t\tsignal.await();// wait for callback\n\t\t} catch (InterruptedException e1) {\n\t\t\tfail();\n\t\t\te1.printStackTrace();\n\t\t}\n\t}\n\n\t/** \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9 */\n\tpublic void test000() throws Throwable{\n\t\t// \u524d\u63d0\u51e6\u7406\u304b\u306a\u306b\u304b\n\n\t\t// \u30bf\u30b9\u30af\u547c\u3073\u51fa\u3057\n\t\ttaskExecute(new EventListener() {\n\t\t\tpublic void onFinish(int result) {\n\t\t\t\t// \u3053\u3053\u306b\u691c\u8a3c\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\t\t\t\tassertTrue(0==result);\n\t\t\t}\n\t\t});\n\t}\n}\n```\n\n\u53c2\u8003\uff1ahttp://stackoverflow.com/questions/9774792/asynctask-onpostexecute-not-called-in-unit-test-case\n\n\u4e0a\u8a18\u53c2\u8003\u9801\u3068\u306e\u9055\u3044\u306f\u3001\u30bf\u30b9\u30af\u547c\u3073\u51fa\u3057\u90e8\u5206\u3092\u30e1\u30bd\u30c3\u30c9\u5316```TestTask#taskExecute```\u3057\u3066\u3042\u308b\u3068\u3053\u308d\u3060\u3051\u3067\u3059\u3002\nSampleTask\u90e8\u5206\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9\u5316\u3059\u308c\u3070\u3001\u300cAsyncTask\u306eJUnitTest\u3092\u884c\u3046\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306e\u57fa\u672c\u3068\u306a\u308b\u62bd\u8c61\u30af\u30e9\u30b9\u300d\u304c\u51fa\u6765\u308b\u304b\u306a\u3002\n\u6c17\u304c\u5411\u3044\u305f\u3089\u8ffd\u8a18\u3057\u307e\u3059(\u7b11)", "tags": ["Android", "JUnit"]}