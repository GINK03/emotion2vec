{"tags": ["docker", "AWS", "infrastructure"], "context": " More than 1 year has passed since last update.dockercon2015\u306e\u5185\u5bb9\u3092\u5c11\u3057\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\nDay 1\n\nKeynote(Docker CEO: Ben Golub)\n\n2 Fold Tets\nwhat has been changed between 2014 - 2015\n\n\nGlobal meetup community(185 groups 58 countries)\nDocker users(BBC, GILT, PayPal, NETFLIX, yelp etc..)\nEcosystem\n2 years and 3 month old(2015/06)\nGrowth Statistics (Contributors, projects, docker job openings ..)\nEnterprise Adoption Trends\n\n\nDistributed Applications Solutions\nThe future of distributed applications in 5 steps\ndocker in production \n\n\u4e00\u90e8\u629c\u7c8b:\n\nIf docker is truly going to work with great ecosystems,\nIt's gotta be extensible, plug-gable and last Dockercon we talked about plugins and batteries included but removable and you gotta see that's live today. Of course, we need to have solutions and road maps for how you bring docker into production. At this show, you gotta see some amazing demos about docker and security and a progress in the areas of orchestration and networking and storage.Tomorrow you gotta see how we are able to pull all of this together to give you a comprehensive view and a solution for developing code for shipping for deploying and managing it.\n\n\nCould we make the internet Programmable?(Docker CTO:Solomon Hykes)\n\nWhat is the biggest innovtion multiplier today?\nWhat new hardware could do incredible things if made programmable?\nCould we make the internet Programmable?\n\n\u2192For the next 5 years, we're going to build a software layer to make the Internet programmable\n\nHow do we get there? - 4 big goals\nIncremental Revolution (\u6839\u672c\u7684\u554f\u984c\u3092\u898b\u3064\u3051\u30011\u3064\u3065\u3064\u89e3\u6c7a\u3057\u3066\u3044\u304f\u3002)\nGoal 1 Reinvent the programmer's toolbox\n\n\nProblem 1 runtime (\u81ea\u5206\u306e\u30b3\u30fc\u30c9\u3092\u3069\u3046\u3084\u3063\u3066\u9055\u3046\u30de\u30b7\u30fc\u30f3\u3067\u52d5\u304b\u3059\u306e\u304b\u3002)\n\u2192docker runtime\nProblem 2 packaging & distribution (\u305f\u304f\u3055\u3093\u306e\u3044\u308d\u3044\u308d\u306a\u30de\u30b7\u30fc\u30f3\u306b\u3069\u3046\u3084\u3063\u3066\u81ea\u5206\u306e\u30b3\u30fc\u30c9\u3092\u9001\u308b\u306e\u304b\u3002)\n\u2192docker tools(docker private registries..)\nProblem 3 service composition (\u3069\u3046\u3084\u3063\u3066\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b5\u30fc\u30d3\u30b9\u4e0a\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u307e\u3068\u3081\u308c\u3070\u3044\u3044\u306e\u304b\u3002)\n\u2192docker compose\nProblem 4 machine management\uff08\u3069\u3046\u3084\u3063\u3066\u305f\u304f\u3055\u3093\u306e\u30de\u30b7\u30fc\u30f3\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308c\u3070\u3044\u3044\u306e\u304b\u3002\uff09\n\u2192docker machine\nProblem 5 clustering\uff08\u500b\u3005\u306e\u3059\u3079\u3066\u306e\u30de\u30b7\u30fc\u30f3\u3092\u5fc3\u914d\u3059\u308b\u306e\u3092\u6b62\u3081\u305f\u3044\u3002\uff09\n\u2192docker swarm\nProblem 6 networking (\u3069\u3046\u3084\u3063\u3066\u81ea\u5206\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u5b89\u5168\u306b\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u9593\u3067\u3064\u306a\u3052\u308c\u3070\u3044\u3044\u306e\u304b\u3002)\n\u2192docker networking(experimental) \u8aac\u660e\u306f\u4e0b\u8a18\u3092\u53c2\u7167\u3002\nProblem 7 extensibility(\u81ea\u5206\u3067\u4f5c\u3063\u305f\u30c4\u30fc\u30eb\u3092\u30c4\u30fc\u30eb\u30dc\u30c3\u30af\u30b9\u306b\u8ffd\u52a0\u3057\u305f\u3044\uff01)\n\n\nGoal 2 build better plumbing(\u904b\u7528\u30c4\u30fc\u30eb\u306e\u63d0\u4f9b)\n\n\nnetworkingm storage, security, log, monitoring..\n1. Re-use and improve existing plumbing \n2. Make new plubing easy to re-use and improve\n3. Follow the unix principles: make small simple tools, not big complicated ones.\n4. Define standard interfaces for assembling lager systems \nTrusted, cross-platform content distribution - Notary\n\n\nGoal 3 promote open standards(\u30aa\u30fc\u30d7\u30f3\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u3078\u306e\u53d6\u308a\u7d44\u307f)\nIntroducing OCF: a universal intermediary format for OS containers\nGoal 4 ?\n\n\nDemo of distibuted apps(Docker Director of Product Management:Ben Firshman)\n\ndocker compose\ndocker machine\ndocker swarm\nmongodb(DB)\ndigital ocean(cloud provider)\nHA loadbalancer\n\n\nDemo of docker networking(Docker Software Engineer:Alvin Richards)\n\ndocker networking\ndocker compose \ndocker swarm (clustering)\n\n\nnew incoming techs\n\ndocker networking\nMicro-segmentation is built-in\nAssemble virtual networks into any topology, enforce security policies, insert probes and firewalls\nBuilt on industry standards\nDon't modify your application\nThere is no re-segmenting and re-servicing your apps\nJust take your apps and works\nStandardized service discovery\nIf your container speaks DNS then automatically when it runs inside docker, there is a DNS interface made available to it. it allows to discover any container that you have decided that can see based on your topology.\n11 community-contributed backends\nAzure, Calico, Cisco, Consul, etcd, midokura, Netflix, nuagenetworks, vmware, weave, zookeeper and more on the way.\n\ndocker plugins\n\nNetwork plugins\nVolume plugins\nScheduler plugins\nService discovery plugins and more..\nDynamic loading (\u30d1\u30c3\u30c1\u3082\u3001\u518d\u8d77\u52d5\u3082\u4e0d\u8981\u3067\u3059\u3002)\nmulti-tenant (\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3054\u3068\u306b\u9055\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f7f\u3048\u307e\u3059\u3002)\nNo lock-in (\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u304c\u30c9\u30c3\u30ab\u30fc\u306e\u4e2d\u3067\u52d5\u304f\u306a\u3089\u3001\u3059\u3079\u3066\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002)\n\n\nAWS ECS(AWS Senior Manager: Deepak Singh)\n\nDocker\nEC2\nECS\n\n\nloadbalancing\nclustering\nscheduling\nstate management\ndrain connection\nscalability and performance\n\n\n\ndocker cli\u3092\u4f7f\u3063\u3066docker compose \u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\ndocker-compose up\u3068\u3059\u308b\u3060\u3051\u3067\u3001ECS\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u3092\u30dd\u30a4\u30f3\u30c8\u3057\u3001\u5f8c\u308d\u3067\u306fEC2\u304c\u52d5\u3044\u3066\u3044\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3042\u308f\u305b\u3001\u9069\u5b9c\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002\n\nDay 2\n\u7de8\u96c6\u4e2d\n\n\u53c2\u8003\n\nYoutube \n\n\nDockerCon 2015 Keynote Day 1\n\n\nShareSlides\n\n\nBen Golub's Keynote Day 1\nSolomon Hykes Keynote Day 1\n\n\n\ndockercon2015\u306e\u5185\u5bb9\u3092\u5c11\u3057\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n#Day 1#\n\n## Keynote(Docker CEO: Ben Golub)##\n- 2 Fold Tets\n- what has been changed between 2014 - 2015\n - Global meetup community(185 groups 58 countries)\n - Docker users(BBC, GILT, PayPal, NETFLIX, yelp etc..)\n - Ecosystem\n - 2 years and 3 month old(2015/06)\n - Growth Statistics (Contributors, projects, docker job openings ..)\n - Enterprise Adoption Trends\n- Distributed Applications Solutions\n- The future of distributed applications in 5 steps\n- docker in production \n\n\u4e00\u90e8\u629c\u7c8b:\n>If docker is truly going to work with great ecosystems,\nIt's gotta be extensible, plug-gable and last Dockercon we talked about plugins and batteries included but removable and you gotta see that's live today. Of course, we need to have solutions and road maps for how you bring docker into production. At this show, you gotta see some amazing demos about docker and security and a progress in the areas of orchestration and networking and storage.Tomorrow you gotta see how we are able to pull all of this together to give you a comprehensive view and a solution for developing code for shipping for deploying and managing it.\n\n##Could we make the internet Programmable?(Docker CTO:Solomon Hykes)##\n- What is the biggest innovtion multiplier today?\n- What new hardware could do incredible things if made programmable?\n- Could we make the internet Programmable?\n \n\u2192For the next 5 years, we're going to build a software layer to make the Internet programmable\n\n- How do we get there? - 4 big goals\n- Incremental Revolution (\u6839\u672c\u7684\u554f\u984c\u3092\u898b\u3064\u3051\u30011\u3064\u3065\u3064\u89e3\u6c7a\u3057\u3066\u3044\u304f\u3002)\n- Goal 1 Reinvent the programmer's toolbox\n - Problem 1 runtime (\u81ea\u5206\u306e\u30b3\u30fc\u30c9\u3092\u3069\u3046\u3084\u3063\u3066\u9055\u3046\u30de\u30b7\u30fc\u30f3\u3067\u52d5\u304b\u3059\u306e\u304b\u3002)\n \u2192docker runtime\n - Problem 2 packaging & distribution (\u305f\u304f\u3055\u3093\u306e\u3044\u308d\u3044\u308d\u306a\u30de\u30b7\u30fc\u30f3\u306b\u3069\u3046\u3084\u3063\u3066\u81ea\u5206\u306e\u30b3\u30fc\u30c9\u3092\u9001\u308b\u306e\u304b\u3002)\n \u2192docker tools(docker private registries..)\n - Problem 3 service composition (\u3069\u3046\u3084\u3063\u3066\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b5\u30fc\u30d3\u30b9\u4e0a\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u307e\u3068\u3081\u308c\u3070\u3044\u3044\u306e\u304b\u3002)\n \u2192docker compose\n - Problem 4 machine management\uff08\u3069\u3046\u3084\u3063\u3066\u305f\u304f\u3055\u3093\u306e\u30de\u30b7\u30fc\u30f3\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308c\u3070\u3044\u3044\u306e\u304b\u3002\uff09\n \u2192docker machine\n - Problem 5 clustering\uff08\u500b\u3005\u306e\u3059\u3079\u3066\u306e\u30de\u30b7\u30fc\u30f3\u3092\u5fc3\u914d\u3059\u308b\u306e\u3092\u6b62\u3081\u305f\u3044\u3002\uff09\n \u2192docker swarm\n - Problem 6 networking (\u3069\u3046\u3084\u3063\u3066\u81ea\u5206\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u5b89\u5168\u306b\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u9593\u3067\u3064\u306a\u3052\u308c\u3070\u3044\u3044\u306e\u304b\u3002)\n\u2192docker networking(experimental) \u8aac\u660e\u306f\u4e0b\u8a18\u3092\u53c2\u7167\u3002\n - Problem 7 extensibility(\u81ea\u5206\u3067\u4f5c\u3063\u305f\u30c4\u30fc\u30eb\u3092\u30c4\u30fc\u30eb\u30dc\u30c3\u30af\u30b9\u306b\u8ffd\u52a0\u3057\u305f\u3044\uff01)\n- Goal 2 build better plumbing(\u904b\u7528\u30c4\u30fc\u30eb\u306e\u63d0\u4f9b)\n - networkingm storage, security, log, monitoring..\n - 1. Re-use and improve existing plumbing \n - 2. Make new plubing easy to re-use and improve\n - 3. Follow the unix principles: make small simple tools, not big complicated ones.\n - 4. Define standard interfaces for assembling lager systems \n - Trusted, cross-platform content distribution - Notary\n- Goal 3 promote open standards(\u30aa\u30fc\u30d7\u30f3\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u3078\u306e\u53d6\u308a\u7d44\u307f)\n- Introducing OCF: a universal intermediary format for OS containers\n- Goal 4 ?\n\n##Demo of distibuted apps(Docker Director of Product Management:Ben Firshman)##\n- docker compose\n- docker machine\n- docker swarm\n- mongodb(DB)\n- digital ocean(cloud provider)\n- HA loadbalancer\n\n##Demo of docker networking(Docker Software Engineer:Alvin Richards)##\n  - docker networking\n  - docker compose \n  - docker swarm (clustering)\n\n##new incoming techs##\n\n###docker networking###\n\n**Micro-segmentation is built-in**\nAssemble virtual networks into any topology, enforce security policies, insert probes and firewalls\n**Built on industry standards**\nDon't modify your application\nThere is no re-segmenting and re-servicing your apps\nJust take your apps and works\n**Standardized service discovery**\nIf your container speaks DNS then automatically when it runs inside docker, there is a DNS interface made available to it. it allows to discover any container that you have decided that can see based on your topology.\n**11 community-contributed backends**\nAzure, Calico, Cisco, Consul, etcd, midokura, Netflix, nuagenetworks, vmware, weave, zookeeper and more on the way.\n###docker plugins###\n- Network plugins\n- Volume plugins\n- Scheduler plugins\n- Service discovery plugins and more..\n- Dynamic loading (\u30d1\u30c3\u30c1\u3082\u3001\u518d\u8d77\u52d5\u3082\u4e0d\u8981\u3067\u3059\u3002)\n- multi-tenant (\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3054\u3068\u306b\u9055\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f7f\u3048\u307e\u3059\u3002)\n- No lock-in (\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u304c\u30c9\u30c3\u30ab\u30fc\u306e\u4e2d\u3067\u52d5\u304f\u306a\u3089\u3001\u3059\u3079\u3066\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002)\n\n##AWS ECS(AWS Senior Manager: Deepak Singh)##\n- Docker\n- EC2\n- ECS\n - loadbalancing\n - clustering\n - scheduling\n - state management\n - drain connection\n - scalability and performance\n\ndocker cli\u3092\u4f7f\u3063\u3066docker compose \u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\ndocker-compose up\u3068\u3059\u308b\u3060\u3051\u3067\u3001ECS\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u3092\u30dd\u30a4\u30f3\u30c8\u3057\u3001\u5f8c\u308d\u3067\u306fEC2\u304c\u52d5\u3044\u3066\u3044\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3042\u308f\u305b\u3001\u9069\u5b9c\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002\n\n#Day 2#\n\u7de8\u96c6\u4e2d\n\n##\u53c2\u8003##\n- Youtube \n - [DockerCon 2015 Keynote Day 1](https://www.youtube.com/watch?v=xehh0XgDCUw)\n- ShareSlides\n - [Ben Golub's Keynote Day 1](http://www.slideshare.net/Docker/dockercon-sf-2015-ben-golubs-keynote-day-1)\n - [Solomon Hykes Keynote Day 1](http://www.slideshare.net/Docker/dockercon-sf-2015-keynote-day-1)\n"}