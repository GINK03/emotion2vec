{"context": " More than 1 year has passed since last update.\n\u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u5f15\u3063\u5f35\u3063\u3066\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nhttps://www.youtube.com/watch?v=pTrW3cZg1YU\nDesarrollo iOS 7: Core Animation: CAKeyFrameAnimation y mucho m\u00e1s\n\nview\u3092\u8ffd\u52a0\nclass sampleView: UIView,UIGestureRecognizerDelegate {\n    var verticalLine:CAShapeLayer?\n}\n\n\naddGestureRecognizer\u3092\u8ffd\u52a0\nfunc addPanGesture() {\n    var sgr = UIPanGestureRecognizer(target: self, action: \"handleSlide:\")\n    sgr.delegate = self\n    self.addGestureRecognizer(sgr)\n}\n\n\n\u30bf\u30c3\u30c1\u4f4d\u7f6e\u306e\u5909\u5316\u91cf\u3092\u53d6\u5f97\nfunc handleSlide(gr:UIPanGestureRecognizer) {\n    var amountX = gr.translationInView(self).x\n    var amountY = gr.translationInView(self).y\n    self.verticalLine?.path = self.getLinePathWithAmount(amountX: amountX, amountY: amountY)\n\n    if gr.state == UIGestureRecognizerState.Ended {\n        self.removeGestureRecognizer(gr)\n        self.animateLineReturnFrom(positionX: amountX, positionY: amountY)\n    }\n}\n\n\u4eca\u56de\u306fY\u65b9\u5411\u306e\u79fb\u52d5\u91cf\u3057\u304b\u4f7f\u7528\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001X\u65b9\u5411\u306e\u79fb\u52d5\u91cf\u3082\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u5b9a\u7fa9\nfunc animateLineReturnFrom(#positionX: CGFloat,positionY: CGFloat) {\n    var bounce = CAKeyframeAnimation(keyPath: \"path\")\n    bounce.timingFunction = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseIn)\n\n    var values = [\n        self.getLinePathWithAmount(amountX: positionX, amountY: positionY),\n        self.getLinePathWithAmount(amountX: -(positionX * 0.7), amountY: -(positionY * 0.7)),\n        self.getLinePathWithAmount(amountX: positionX * 0.4, amountY: positionY * 0.4),\n        self.getLinePathWithAmount(amountX: -(positionX * 0.3), amountY: -(positionY * 0.3)),\n        self.getLinePathWithAmount(amountX: positionX * 0.15, amountY: positionY * 0.15),\n        self.getLinePathWithAmount(amountX: 0.0, amountY: 0.0)\n    ]\n\n    bounce.values = values\n    bounce.duration = 0.9\n    bounce.removedOnCompletion = false\n    bounce.fillMode = kCAFillModeForwards\n    bounce.delegate = self\n    self.verticalLine?.addAnimation(bounce, forKey: \"return\")\n}\n\n\u914d\u5217values\u306b\u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u4f4d\u7f6e\u3092\u8ffd\u52a0\u3059\u308b\u306e\u306f\u3068\u3066\u3082\u5927\u5909\u306a\u306e\u3067\u3059\u304c\u3001CAKeyframeAnimation\u3092\u4f7f\u3048\u3070keyframe\u9593\u3092\u88dc\u5b8c\u3057\u3066\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nCAKeyframeAnimation\u3068CABasicAnimation\u3068\u306e\u9055\u3044\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\nCAKeyframeAnimation\n* 3\u3064\u4ee5\u4e0a\u306e\u5024\u3092\u88dc\u5b8c\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\nCABasicAnimation\n* 2\u3064\u306e\u5024\u3092\u88dc\u5b8c\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n\u30fb\u53c2\u8003\nhttp://www.slideshare.net/nakiwo/cakeyframeanimation-25415214\n\n\u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u5b9a\u7fa9\nfunc getLinePathWithAmount(#amountX:CGFloat,amountY:CGFloat) -> CGPathRef {\n    let w = UIScreen.mainScreen().bounds.width\n    let h = UIScreen.mainScreen().bounds.height\n    let centerY = h / 2\n\n    var bezierPath = UIBezierPath()\n\n    var topLeftPoint = CGPointMake(0, centerY)\n    var topMidPoint = CGPointMake(w / 2, centerY + amountY)\n    var topRightPoint = CGPointMake(w, centerY)\n\n    bezierPath.moveToPoint(topLeftPoint)\n    bezierPath.addQuadCurveToPoint(topRightPoint, controlPoint: topMidPoint)\n\n    return bezierPath.CGPath\n}\n\n\nCurrentPoint\u3001Control Point,Endpoint\u306e\u95a2\u4fc2\u306fApple\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nhttps://developer.apple.com/library/ios/documentation/UIKit/Reference/UIBezierPath_class/#//apple_ref/occ/instm/UIBezierPath/addQuadCurveToPoint:controlPoint:\n\n\u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u63cf\u753b\u3059\u308b\nfunc createLine() {\n    verticalLine = CAShapeLayer(layer: self.layer)\n    verticalLine?.lineWidth = 3.0\n    verticalLine?.path = getLinePathWithAmount(amountX: 0.0, amountY: 0.0)\n    verticalLine?.strokeColor = UIColor.whiteColor().CGColor\n    verticalLine?.fillColor = UIColor.clearColor().CGColor\n\n    self.layer.addSublayer(verticalLine)\n}\n\nCAShapeLayer\u306b\u63cf\u753b\u3057\u307e\u3059\u3002\n\u4ee5\u4e0a\u3002\n![bezierPath1.gif](https://qiita-image-store.s3.amazonaws.com/0/26043/f3cdaf3a-d3bc-d719-4314-4f2df8cba4ea.gif)\n\u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u5f15\u3063\u5f35\u3063\u3066\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nhttps://www.youtube.com/watch?v=pTrW3cZg1YU\n[Desarrollo iOS 7: Core Animation: CAKeyFrameAnimation y mucho m\u00e1s](http://www.migueldiazrubio.com/2013/10/28/desarrollo-ios-7-profundizando-en-core-animation-cakeyframeanimation-y-uibezierpathanimation/)\n\n# view\u3092\u8ffd\u52a0\n```swift\nclass sampleView: UIView,UIGestureRecognizerDelegate {\n    var verticalLine:CAShapeLayer?\n}\n```\n\n# addGestureRecognizer\u3092\u8ffd\u52a0\n```swift\nfunc addPanGesture() {\n    var sgr = UIPanGestureRecognizer(target: self, action: \"handleSlide:\")\n    sgr.delegate = self\n    self.addGestureRecognizer(sgr)\n}\n```\n\n# \u30bf\u30c3\u30c1\u4f4d\u7f6e\u306e\u5909\u5316\u91cf\u3092\u53d6\u5f97\n```swift\nfunc handleSlide(gr:UIPanGestureRecognizer) {\n    var amountX = gr.translationInView(self).x\n    var amountY = gr.translationInView(self).y\n    self.verticalLine?.path = self.getLinePathWithAmount(amountX: amountX, amountY: amountY)\n    \n    if gr.state == UIGestureRecognizerState.Ended {\n        self.removeGestureRecognizer(gr)\n        self.animateLineReturnFrom(positionX: amountX, positionY: amountY)\n    }\n}\n```\n\u4eca\u56de\u306fY\u65b9\u5411\u306e\u79fb\u52d5\u91cf\u3057\u304b\u4f7f\u7528\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001X\u65b9\u5411\u306e\u79fb\u52d5\u91cf\u3082\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u5b9a\u7fa9\n```swift\nfunc animateLineReturnFrom(#positionX: CGFloat,positionY: CGFloat) {\n    var bounce = CAKeyframeAnimation(keyPath: \"path\")\n    bounce.timingFunction = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseIn)\n    \n    var values = [\n        self.getLinePathWithAmount(amountX: positionX, amountY: positionY),\n        self.getLinePathWithAmount(amountX: -(positionX * 0.7), amountY: -(positionY * 0.7)),\n        self.getLinePathWithAmount(amountX: positionX * 0.4, amountY: positionY * 0.4),\n        self.getLinePathWithAmount(amountX: -(positionX * 0.3), amountY: -(positionY * 0.3)),\n        self.getLinePathWithAmount(amountX: positionX * 0.15, amountY: positionY * 0.15),\n        self.getLinePathWithAmount(amountX: 0.0, amountY: 0.0)\n    ]\n    \n    bounce.values = values\n    bounce.duration = 0.9\n    bounce.removedOnCompletion = false\n    bounce.fillMode = kCAFillModeForwards\n    bounce.delegate = self\n    self.verticalLine?.addAnimation(bounce, forKey: \"return\")\n}\n```\n\u914d\u5217values\u306b\u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u4f4d\u7f6e\u3092\u8ffd\u52a0\u3059\u308b\u306e\u306f\u3068\u3066\u3082\u5927\u5909\u306a\u306e\u3067\u3059\u304c\u3001CAKeyframeAnimation\u3092\u4f7f\u3048\u3070keyframe\u9593\u3092\u88dc\u5b8c\u3057\u3066\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\nCAKeyframeAnimation\u3068CABasicAnimation\u3068\u306e\u9055\u3044\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n**CAKeyframeAnimation**\n* 3\u3064\u4ee5\u4e0a\u306e\u5024\u3092\u88dc\u5b8c\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n\n**CABasicAnimation**\n* 2\u3064\u306e\u5024\u3092\u88dc\u5b8c\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n\n\u30fb\u53c2\u8003\nhttp://www.slideshare.net/nakiwo/cakeyframeanimation-25415214\n\n# \u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u5b9a\u7fa9\n```swift\nfunc getLinePathWithAmount(#amountX:CGFloat,amountY:CGFloat) -> CGPathRef {\n    let w = UIScreen.mainScreen().bounds.width\n    let h = UIScreen.mainScreen().bounds.height\n    let centerY = h / 2\n    \n    var bezierPath = UIBezierPath()\n    \n    var topLeftPoint = CGPointMake(0, centerY)\n    var topMidPoint = CGPointMake(w / 2, centerY + amountY)\n    var topRightPoint = CGPointMake(w, centerY)\n    \n    bezierPath.moveToPoint(topLeftPoint)\n    bezierPath.addQuadCurveToPoint(topRightPoint, controlPoint: topMidPoint)\n    \n    return bezierPath.CGPath\n}\n```\n\n![](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIBezierPath_class/Art/quadratic_bezier_curve.jpg)\nCurrentPoint\u3001Control Point,Endpoint\u306e\u95a2\u4fc2\u306fApple\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nhttps://developer.apple.com/library/ios/documentation/UIKit/Reference/UIBezierPath_class/#//apple_ref/occ/instm/UIBezierPath/addQuadCurveToPoint:controlPoint:\n\n# \u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u63cf\u753b\u3059\u308b\n```swift\nfunc createLine() {\n    verticalLine = CAShapeLayer(layer: self.layer)\n    verticalLine?.lineWidth = 3.0\n    verticalLine?.path = getLinePathWithAmount(amountX: 0.0, amountY: 0.0)\n    verticalLine?.strokeColor = UIColor.whiteColor().CGColor\n    verticalLine?.fillColor = UIColor.clearColor().CGColor\n    \n    self.layer.addSublayer(verticalLine)\n}\n```\nCAShapeLayer\u306b\u63cf\u753b\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u3002\n", "tags": ["Swift", "animation"]}