{"context": "\n\n\u306f\u3058\u3081\u306b\n\u307e\u305a\u521d\u3081\u306b\u66f8\u3044\u3066\u7f6e\u304d\u307e\u3059\u304c\u3001\u50d5\u306f\u6587\u7ae0\u3092\u66f8\u304f\u306e\u306f\u5f97\u610f\u3067\u306f\u306a\u3044\u306e\u3067\u8aad\u307f\u306b\u304f\u304b\u3063\u305f\u3089\u3082\u3046\u3057\u308f\u3051\u3042\u308a\u307e\u305b\u3093\u3002\n\u3055\u3066\u3001\u79c1\u306f\u3001\u3044\u3044\u306d\u3092\u30b9\u30c8\u30c3\u30af\u4ee3\u308f\u308a\u306b\u4f7f\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u3044\u3044\u306d\u306e\u4e00\u89a7\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3068\u77e5\u3063\u3066\u3001\u975e\u5e38\u306b\u3001\u61a4\u3063\u3066\u304a\u308a\u307e\u3059\u3002twitter\u3084Qiita\u3067\u3082\u3001\u591a\u304f\u306e\u65b9\u3005\u304c\u60a9\u3093\u3067\u3044\u308b\u3088\u3046\u3067\u3059\u30021 2\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001python\u3067\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3057\u3066\u3001\u3044\u3044\u306d\u4e00\u89a7\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u5c0e\u5165\npython3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3089\u3001pip\u30b3\u30de\u30f3\u30c9\u3067requests\u3001BeautifulSoup4,progressbar2\n\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\n\n\u30b3\u30fc\u30c9\n\u8a18\u4e8b\u4e00\u89a7\u3092\u53d6\u5f97\u3057\u3066\u3001results.json\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n# -*- coding:utf-8 -*-\nfrom bs4 import BeautifulSoup\nimport requests\nfrom time import sleep\nimport json\nfrom progressbar import ProgressBar\n\n# Qiita\u306blogin\npayload = {\n    'utf8': '\u2713',\n    'identity': 'lovemuffim114',  # \u30e6\u30fc\u30b6\u30fc\u540d\n    'password': 'tkhr2783'  # \u30d1\u30b9\u30ef\u30fc\u30c9\n}\n\n# authenticity_token\u306e\u53d6\u5f97\ns = requests.Session()\nr = s.get('https://qiita.com')\nsoup = BeautifulSoup(r.text, \"html.parser\")\nauth_token = soup.find(attrs={'name': 'authenticity_token'}).get('value')\npayload['authenticity_token'] = auth_token\n\n# \u30ed\u30b0\u30a4\u30f3\ns.post('https://qiita.com/login', data=payload)\n\n# \u7d50\u679c\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u8f9e\u66f8\nresults = dict()\n\nsearchId = 1000000\nparam = {\"before\": searchId, \"type\": \"id\"}\n# \u8a18\u4e8b\u6570\u3092\u53d6\u5f97\nmaxId = s.get(\"http://qiita.com/api/public\", params=param).json()[0][\"id\"]\nbar = ProgressBar(min_value=0, max_value=maxId)  # \u6700\u5927\u5024\u3092\u30bb\u30c3\u30c8\n\ntry:  # \u8aad\u307f\u8fbc\u3080\u8a18\u4e8b\u304c\u306a\u304f\u306a\u308b\u3068\u30a8\u30e9\u30fc\n    while True:\n        param = {\"before\": searchId, \"type\": \"id\"}\n        # \u8a18\u4e8b\u30ea\u30b9\u30c8\u53d6\u5f97\n        j = s.get(\"http://qiita.com/api/public\", params=param).json()\n\n        # results\u306b\u300c\u3044\u3044\u306d\u300d\u304b\u3064\u30b9\u30c8\u30c3\u30af\u3057\u3066\u3044\u306a\u3044\u8a18\u4e8b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n        # \"url\"\u4ee5\u5916\u306b\u3001\"uuid\"\u3082\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n        results.update({i[\"title\"]: i[\"url\"] for i in j if i[\"liked\"] and not i[\"stocked\"]})\n\n        searchId = j[-1][\"id\"]\n        bar.update(maxId - searchId)  # \u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u66f4\u65b0\n        sleep(1)  # sleep(1\u79d2)\u5c0f\u6570\u70b9\u304c\u4f7f\u3048\u307e\u3059\u3002\nfinally:\n    print(results)\n\n    # results.json\u306b\u4fdd\u5b58\n    with open(\"results.json\", \"a\") as f:\n        json.dump(results, f, ensure_ascii=False, indent=4, separators=(',', ': '))\n\n\n\u4ee5\u4e0a\u3067\u3059\u3002\u7d50\u679c\u306f\u3001\n{\n    \"\u3010narou4j\u3011Java\u3067\u5c0f\u8aac\u5bb6\u306b\u306a\u308d\u3046\u306e\u5c0f\u8aac\u53d6\u5f97\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u3064\u304f\u3063\u305f\": \"863aa22a29db16463e52\",\n    \"ViewHolder\u3092\u4f7f\u308f\u306a\u3044\u3067ListView\u3092\u9ad8\u901f\u5316\u3059\u308b\": \"28f8be64d39b20e69552\",\n    \"\u3010narou4j\u3011\u306a\u308d\u3046API\u306eJava\u30e9\u30c3\u30d1\u30fc\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u3064\u304f\u3063\u305f\": \"6c050593f45174056005\",\n    \"\u6c34\u8015\u683d\u57f9\u30bb\u30c3\u30c8\u3092\u81ea\u4f5c\u3057\u3066\u307f\u305f\u3002\": \"5d60c14d560ecf518a4e\",\n    \"RxJava + Flux (+ Kotlin)\u306b\u3088\u308bAndroid\u30a2\u30d7\u30ea\u8a2d\u8a08\": \"cbf304891daec87ba5b7\",\n    \"RxJava\u3067EventBus\u3092\u4f5c\u3063\u305f\": \"a4ece37834446c9a39c8\"\n}\n\n\u306e\u3088\u3046\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002Qiita\u3078\u306e\u30ed\u30b0\u30a4\u30f3\u306b\u3064\u3044\u3066\u306f\u3001Python\u3067\u306e\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3078\u306e\u30ed\u30b0\u30a4\u30f3\u3092\u4f7f\u7528\u3055\u305b\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002\n\n\u6ce8\u91c8\n\n\n\n\n\u3010\u6ce8\u610f\uff01\u3011Qiita\u306e\u300c\u3044\u3044\u306d\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3060\u3051\u3060\u3068\u8a18\u4e8b\u306f\u30b9\u30c8\u30c3\u30af\u3055\u308c\u307e\u305b\u3093\u3088\uff01\u3010extension\u66f8\u304d\u307e\u3057\u305f\uff01\u3011\u00a0\u21a9\n\n\n\u300cqiita \u3044\u3044\u306d\u3000\u4e00\u89a7\u3000 -\uff01 -\u7a81\u7834\u300d\u306etwitter\u691c\u7d22\u7d50\u679c\u00a0\u21a9\n\n\n\n#\u306f\u3058\u3081\u306b\n\u307e\u305a\u521d\u3081\u306b\u66f8\u3044\u3066\u7f6e\u304d\u307e\u3059\u304c\u3001\u50d5\u306f\u6587\u7ae0\u3092\u66f8\u304f\u306e\u306f\u5f97\u610f\u3067\u306f\u306a\u3044\u306e\u3067\u8aad\u307f\u306b\u304f\u304b\u3063\u305f\u3089\u3082\u3046\u3057\u308f\u3051\u3042\u308a\u307e\u305b\u3093\u3002\n\u3055\u3066\u3001\u79c1\u306f\u3001\u3044\u3044\u306d\u3092\u30b9\u30c8\u30c3\u30af\u4ee3\u308f\u308a\u306b\u4f7f\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u3044\u3044\u306d\u306e\u4e00\u89a7\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3068\u77e5\u3063\u3066\u3001\u975e\u5e38\u306b\u3001\u61a4\u3063\u3066\u304a\u308a\u307e\u3059\u3002twitter\u3084Qiita\u3067\u3082\u3001\u591a\u304f\u306e\u65b9\u3005\u304c\u60a9\u3093\u3067\u3044\u308b\u3088\u3046\u3067\u3059\u3002[^1]  [^2]\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001python\u3067\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3057\u3066\u3001\u3044\u3044\u306d\u4e00\u89a7\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n#\u5c0e\u5165\npython3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3089\u3001pip\u30b3\u30de\u30f3\u30c9\u3067requests\u3001BeautifulSoup4,progressbar2\n\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\n#\u30b3\u30fc\u30c9\n\u8a18\u4e8b\u4e00\u89a7\u3092\u53d6\u5f97\u3057\u3066\u3001`results.json`\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n```py3\n# -*- coding:utf-8 -*-\nfrom bs4 import BeautifulSoup\nimport requests\nfrom time import sleep\nimport json\nfrom progressbar import ProgressBar\n\n# Qiita\u306blogin\npayload = {\n    'utf8': '\u2713',\n    'identity': 'lovemuffim114',  # \u30e6\u30fc\u30b6\u30fc\u540d\n    'password': 'tkhr2783'  # \u30d1\u30b9\u30ef\u30fc\u30c9\n}\n\n# authenticity_token\u306e\u53d6\u5f97\ns = requests.Session()\nr = s.get('https://qiita.com')\nsoup = BeautifulSoup(r.text, \"html.parser\")\nauth_token = soup.find(attrs={'name': 'authenticity_token'}).get('value')\npayload['authenticity_token'] = auth_token\n\n# \u30ed\u30b0\u30a4\u30f3\ns.post('https://qiita.com/login', data=payload)\n\n# \u7d50\u679c\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u8f9e\u66f8\nresults = dict()\n\nsearchId = 1000000\nparam = {\"before\": searchId, \"type\": \"id\"}\n# \u8a18\u4e8b\u6570\u3092\u53d6\u5f97\nmaxId = s.get(\"http://qiita.com/api/public\", params=param).json()[0][\"id\"]\nbar = ProgressBar(min_value=0, max_value=maxId)  # \u6700\u5927\u5024\u3092\u30bb\u30c3\u30c8\n\ntry:  # \u8aad\u307f\u8fbc\u3080\u8a18\u4e8b\u304c\u306a\u304f\u306a\u308b\u3068\u30a8\u30e9\u30fc\n    while True:\n        param = {\"before\": searchId, \"type\": \"id\"}\n        # \u8a18\u4e8b\u30ea\u30b9\u30c8\u53d6\u5f97\n        j = s.get(\"http://qiita.com/api/public\", params=param).json()\n\n        # results\u306b\u300c\u3044\u3044\u306d\u300d\u304b\u3064\u30b9\u30c8\u30c3\u30af\u3057\u3066\u3044\u306a\u3044\u8a18\u4e8b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n        # \"url\"\u4ee5\u5916\u306b\u3001\"uuid\"\u3082\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n        results.update({i[\"title\"]: i[\"url\"] for i in j if i[\"liked\"] and not i[\"stocked\"]})\n        \n        searchId = j[-1][\"id\"]\n        bar.update(maxId - searchId)  # \u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u66f4\u65b0\n        sleep(1)  # sleep(1\u79d2)\u5c0f\u6570\u70b9\u304c\u4f7f\u3048\u307e\u3059\u3002\nfinally:\n    print(results)\n\n    # results.json\u306b\u4fdd\u5b58\n    with open(\"results.json\", \"a\") as f:\n        json.dump(results, f, ensure_ascii=False, indent=4, separators=(',', ': '))\n\n```\n\u4ee5\u4e0a\u3067\u3059\u3002\u7d50\u679c\u306f\u3001\n\n```json\n{\n    \"\u3010narou4j\u3011Java\u3067\u5c0f\u8aac\u5bb6\u306b\u306a\u308d\u3046\u306e\u5c0f\u8aac\u53d6\u5f97\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u3064\u304f\u3063\u305f\": \"863aa22a29db16463e52\",\n    \"ViewHolder\u3092\u4f7f\u308f\u306a\u3044\u3067ListView\u3092\u9ad8\u901f\u5316\u3059\u308b\": \"28f8be64d39b20e69552\",\n    \"\u3010narou4j\u3011\u306a\u308d\u3046API\u306eJava\u30e9\u30c3\u30d1\u30fc\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u3064\u304f\u3063\u305f\": \"6c050593f45174056005\",\n    \"\u6c34\u8015\u683d\u57f9\u30bb\u30c3\u30c8\u3092\u81ea\u4f5c\u3057\u3066\u307f\u305f\u3002\": \"5d60c14d560ecf518a4e\",\n    \"RxJava + Flux (+ Kotlin)\u306b\u3088\u308bAndroid\u30a2\u30d7\u30ea\u8a2d\u8a08\": \"cbf304891daec87ba5b7\",\n    \"RxJava\u3067EventBus\u3092\u4f5c\u3063\u305f\": \"a4ece37834446c9a39c8\"\n}\n```\n\u306e\u3088\u3046\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002Qiita\u3078\u306e\u30ed\u30b0\u30a4\u30f3\u306b\u3064\u3044\u3066\u306f\u3001[Python\u3067\u306e\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3078\u306e\u30ed\u30b0\u30a4\u30f3](http://qiita.com/morinokami/items/46b76b365f030be83418)\u3092\u4f7f\u7528\u3055\u305b\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002\n\n#\u6ce8\u91c8\n[^1]: [\u3010\u6ce8\u610f\uff01\u3011Qiita\u306e\u300c\u3044\u3044\u306d\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3060\u3051\u3060\u3068\u8a18\u4e8b\u306f\u30b9\u30c8\u30c3\u30af\u3055\u308c\u307e\u305b\u3093\u3088\uff01\u3010extension\u66f8\u304d\u307e\u3057\u305f\uff01\u3011](http://qiita.com/gimupop/items/be53044143a9a3e90a4b)\n[^2]: [\u300cqiita \u3044\u3044\u306d\u3000\u4e00\u89a7\u3000 -\uff01 -\u7a81\u7834\u300d\u306etwitter\u691c\u7d22\u7d50\u679c](https://twitter.com/search?f=tweets&vertical=default&q=qiita%20%E3%81%84%E3%81%84%E3%81%AD%E3%80%80%E4%B8%80%E8%A6%A7%E3%80%80%20-%EF%BC%81%20-%E7%AA%81%E7%A0%B4&src=typd)\n", "tags": ["\u3044\u3044\u306d", "Python", "python3", "\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0"]}