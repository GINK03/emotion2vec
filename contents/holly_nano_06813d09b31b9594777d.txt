{"context": "create\u306e\u6642\u306bID\u304c\u53d6\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u3001show\u3067\u5bfe\u5fdc\u3057\u3066\u307f\u305f\u3002\n\nadmin/some_model.rb\n\nActiveAdmin.register SomeModel do\n\nmenu label: \"\u307b\u3052\", priority: 1\n\n# See permitted parameters documentation:\n# https://github.com/activeadmin/activeadmin/blob/master/docs/2-resource-customization.md#setting-up-strong-parameters\n#\npermit_params :list, :of, :attributes, :on, :model\n#\n# or\n#\n# permit_params do\n#   permitted = [:permitted, :attributes]\n#   permitted << :other if params[:action] == 'create' && current_user.admin?\n#   permitted\n# end\n\ncontroller do\n\n  def show\n    show! do |format|\n      AdminHelper.postChatWork(\"\u307b\u3052\", request.referer, SomeModel.find_by(:id => params[\"id\"]))\n    end\n  end\n\nend\n\nend\n\n\n\nhelper/admin_helper.rb\n\nrequire 'net/https'\n\nmodule AdminHelper\n  def self.postChatWork(title, referer, model)\n\n    sp = referer.split(\"/\")\n    action = sp[sp.size-1]\n    if action != \"edit\" and action != \"new\" then\n      return\n    end\n\n    uri = URI.parse(\"https://api.chatwork.com/v1/rooms/\u25a0\u30b0\u30eb\u30fc\u30d7\u30c1\u30e3\u30c3\u30c8ID\u25a0/messages\")\n    http = Net::HTTP.new(uri.host, uri.port)\n\n    http.use_ssl = true\n    http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\n    req = Net::HTTP::Post.new(uri.path)\n\n    req.set_form_data({'body' => \"\u3010active_admin\u304b\u3089\u3011\" + title + \"(\" + action + \") \u30c7\u30fc\u30bf\uff1a\" + model.to_json})\n    req[\"X-ChatWorkToken\"] = \"\u25a0\u3042\u306a\u305f\u306e\u30c8\u30fc\u30af\u30f3\u25a0\"\n    res = http.request(req)\n\n  end\nend\n\n\n\n\n\u682a\u5f0f\u4f1a\u793e\u30ca\u30ce\u30b3\u30cd\u30af\u30c8\u3067\u306f\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u306a\u958b\u767a\u8005\u3092\u52df\u96c6\u4e2d\u3067\u3059\uff01\u304f\u308f\u3057\u304f\u306f\u3053\u3061\u3089\ncreate\u306e\u6642\u306bID\u304c\u53d6\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u3001show\u3067\u5bfe\u5fdc\u3057\u3066\u307f\u305f\u3002\n\n```ruby:admin/some_model.rb\n\nActiveAdmin.register SomeModel do\n\nmenu label: \"\u307b\u3052\", priority: 1\n\n# See permitted parameters documentation:\n# https://github.com/activeadmin/activeadmin/blob/master/docs/2-resource-customization.md#setting-up-strong-parameters\n#\npermit_params :list, :of, :attributes, :on, :model\n#\n# or\n#\n# permit_params do\n#   permitted = [:permitted, :attributes]\n#   permitted << :other if params[:action] == 'create' && current_user.admin?\n#   permitted\n# end\n\ncontroller do\n\n  def show\n    show! do |format|\n      AdminHelper.postChatWork(\"\u307b\u3052\", request.referer, SomeModel.find_by(:id => params[\"id\"]))\n    end\n  end\n\nend\n\nend\n```\n\n```ruby:helper/admin_helper.rb\n\nrequire 'net/https'\n\nmodule AdminHelper\n  def self.postChatWork(title, referer, model)\n  \n    sp = referer.split(\"/\")\n    action = sp[sp.size-1]\n    if action != \"edit\" and action != \"new\" then\n      return\n    end\n\n    uri = URI.parse(\"https://api.chatwork.com/v1/rooms/\u25a0\u30b0\u30eb\u30fc\u30d7\u30c1\u30e3\u30c3\u30c8ID\u25a0/messages\")\n    http = Net::HTTP.new(uri.host, uri.port)\n    \n    http.use_ssl = true\n    http.verify_mode = OpenSSL::SSL::VERIFY_NONE\n    \n    req = Net::HTTP::Post.new(uri.path)\n    \n    req.set_form_data({'body' => \"\u3010active_admin\u304b\u3089\u3011\" + title + \"(\" + action + \") \u30c7\u30fc\u30bf\uff1a\" + model.to_json})\n    req[\"X-ChatWorkToken\"] = \"\u25a0\u3042\u306a\u305f\u306e\u30c8\u30fc\u30af\u30f3\u25a0\"\n    res = http.request(req)\n\n  end\nend\n\n\n```\n\n\u682a\u5f0f\u4f1a\u793e\u30ca\u30ce\u30b3\u30cd\u30af\u30c8\u3067\u306f\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u306a\u958b\u767a\u8005\u3092\u52df\u96c6\u4e2d\u3067\u3059\uff01\u304f\u308f\u3057\u304f\u306f[\u3053\u3061\u3089](http://www.nanoconnect.co.jp/recruit/)\n\n", "tags": ["active_admin", "Rails", "chatwork", "ChatworkAPI"]}