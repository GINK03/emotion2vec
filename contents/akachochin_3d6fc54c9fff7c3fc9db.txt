{"tags": ["FreeBSD", "Security", "sandbox", "kernel", "kernelvm"], "context": " More than 1 year has passed since last update.\n\n\u5927\u5909\u304a\u4e45\u3057\u3076\u308a\u3067\u3059\n\u81ea\u5b85\u3067\u30bd\u30fc\u30b9\u3092\u306a\u304b\u306a\u304b\u8aad\u3081\u305a\u3001\u30b9\u30c8\u30ec\u30b9\u6e9c\u307e\u308a\u307e\u304f\u308a\u306eakachochin\u3067\u3059\u3002\n\u3068\u3063\u304f\u306b\u6b63\u6708\u904e\u304e\u307e\u3057\u305f\u304c\u3001\u4eca\u5e74\u3082\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\u3055\u3066\u3001\u79c1\u306f\u300cThe Design and Implementation of the FreeBSD Operating System (2nd Edition)\u300d\u3092\u5e30\u308a\u306e\u96fb\u8eca\u306e\u4e2d\u3067\u8aad\u3093\u3067\u3044\u307e\u3059\u3002\n\u3069\u306e\u7ae0\u3082\u8208\u5473\u6df1\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u4e2d\u3067\u3082\u4ed5\u4e8b\u3067\u307b\u3068\u3093\u3069\u89e6\u308c\u308b\u3053\u3068\u306e\u306a\u3044\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5206\u91ce\u306f\u3068\u308a\u308f\u3051\u65b0\u9bae\u3067\u3059\u3002\n\u3055\u3066\u3001\u305d\u3046\u3057\u305f\u77e5\u8b58\u306b\u89e6\u308c\u308b\u3068\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u307f\u305f\u304f\u306a\u308a\u307e\u3059\u3002\n\u203b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u5bfe\u8c61\u306f\u3001FreeBSD\u306eCurrent\u3067\u3059\u3002\n\nCapsicum\u3068\u306f\nCapsicum\u306fFreeBSD\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6a5f\u80fd\u306e\u4e00\u3064\u3067\u3001\u30d7\u30ed\u30bb\u30b9\u304c\u81ea\u5206\u3068\u305d\u306e\u5b50\u4f9b\u9054\u306b\u81ea\u3089\u7e1b\u308a\u3092\u304b\u3051\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\u53b3\u5bc6\u3055\u306b\u6b20\u3051\u308b\u8868\u73fe\u3092\u3042\u3048\u3066\u3059\u308b\u306a\u3089\u3001\u300c\u81ea\u5206\u3068\u305d\u306e\u5b50\u30d7\u30ed\u30bb\u30b9\u306f\u3001\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3057\u3066\u4f55\u304c\u3067\u304d\u308b\u304b\u300d\u3068\u3044\u3046\u201d\u7e1b\u308a\u201d\u3092\u8a2d\u5b9a\u3057\u3001\u305d\u306e\u5f8c\u306b\u300c\u30b1\u30fc\u30d1\u30d3\u30ea\u30c6\u30a3\u30e2\u30fc\u30c9\u300d\u3068\u3044\u3046\u30e2\u30fc\u30c9\u306b\u9077\u79fb\u3059\u308b\u3053\u3068\u3067\u8a72\u5f53\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u3092\u5236\u7d04\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u8106\u5f31\u6027\u3092\u7a81\u304b\u308c\u305f\u308a\u3059\u308b\u3053\u3068\u306b\u3088\u308b\u3001\u610f\u56f3\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u30a2\u30af\u30bb\u30b9\u3092\u9632\u304e\u307e\u3059\u3002\nCapsicum\u306b\u3064\u3044\u3066\u306f\u3001\u65e5\u672c\u8a9e\u3067\u8aad\u3081\u308b\u5f8c\u85e4\u5927\u5730\u6c0f\u306e\u826f\u8a18\u4e8b\u304c\u3082\u306e\u3059\u3054\u304f\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\nCapsicum\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\u3088\u3063\u3066\u3001\u30b3\u30de\u30f3\u30c9\u3068\u304b\u3067\u306a\u304f\u500b\u5225\u5177\u4f53\u7684\u306b\u5b9f\u88c5\u3092\u52a0\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u304b\u898b\u308b\u305f\u3081\u3001\u65e9\u901f\u3001\u5f8c\u85e4\u6c0f\u306e\u8a18\u4e8b\u304b\u3089\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u3092\u629c\u7c8b\u3057\u307e\u3059\u3002\ncap_new()\u3067\u30b1\u30fc\u30d1\u30d3\u30ea\u30c6\u30a3\u306e\u8a2d\u5b9a(\u53d6\u5f97)\u3092\u3057\u3066\u3001cap_enter()\u3067\u8a72\u5f53\u30b1\u30fc\u30d1\u30d3\u30ea\u30c6\u30a3\u3092\u6709\u52b9\u306b\u3059\u308b\u3002\u3082\u306e\u3059\u3054\u304f\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u306d\u3002\n\n(\u5f8c\u85e4\u6c0f\u306e\u8a18\u4e8b\u3088\u308a\u4e00\u90e8\u5f15\u7528)\n    fd = open(\"COPYRIGHT\", O_RDWR);\n    if (-1 == fd)\n        err(EX_NOPERM, \"open error: %d\", errno);\n\n    /* \n     * \u3053\u306e\u30d7\u30ed\u30bb\u30b9\u304a\u3088\u3073\u305d\u306e\u5b50\u30d7\u30ed\u30bb\u30b9\u306f\u3001open\u3057\u305f\u30d5\u30a1\u30a4\u30eb\n     * (COPYRIGHT)\u306b\u5bfe\u3057\u3066\u300cREAD\u300d\u3068\u300cSEEK\u300d\u3057\u304b\u8a31\u3055\u306a\u3044\u3002\n     * \u305d\u306e\u3088\u3046\u306a\u30b1\u30fc\u30d1\u30d3\u30ea\u30c6\u30a3\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n     */\n    cap = cap_new(dup(fd), CAP_READ | CAP_SEEK);\n    if (-1 == cap)\n        err(EX_NOPERM, \"cap_new(1) error: %d\", errno);\n\n    close(fd);\n\n    /* cap_new\u3067\u8a2d\u5b9a\u3057\u305f\u30b1\u30fc\u30d1\u30d3\u30ea\u30c6\u30a3\u3092\u6709\u52b9\u306b\u3059\u308b */\n    cap_enter();\n\n\n\ncap_enter()\u3092\u8aad\u3080\n\u3053\u3053\u307e\u3067\u898b\u7d42\u308f\u3063\u305f\u3068\u3053\u308d\u3067\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u307f\u307e\u3057\u3087\u3046\u3002\nman\u306b\u3088\u308b\u3068\u3001cap_enter()\u306flibc\u306e\u95a2\u6570\u3067\u3059\u3002lib/\u306e\u4e0b\u3067\u691c\u7d22\u3057\u305f\u304c\u3001\u76f4\u63a5\u306e\u5b9f\u88c5\u306f\u898b\u5f53\u305f\u308a\u307e\u305b\u3093\u3002\u304a\u305d\u3089\u304f\u30d3\u30eb\u30c9\u6642\u306b\u81ea\u52d5\u7684\u306b\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u547c\u3073\u51fa\u3057\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u308b\u985e\u3068\u63a8\u5b9a\u3057\u3001sys/\u306e\u4e0b\u3092\u691c\u7d22\u3057\u307e\u3059\u3002\n\nsys/kern/sys_capability.c\nint\nsys_cap_enter(struct thread *td, struct cap_enter_args *uap)\n{\n    struct ucred *newcred, *oldcred;\n    struct proc *p; \n\n    if (IN_CAPABILITY_MODE(td))\n        return (0);\n\n    newcred = crget();\n    p = td->td_proc;\n    PROC_LOCK(p);\n    oldcred = crcopysafe(p, newcred);\n    newcred->cr_flags |= CRED_FLAG_CAPMODE;\n    p->p_ucred = newcred;\n    PROC_UNLOCK(p);\n    crfree(oldcred);\n    return (0);\n}\n\n\n\u81f3\u3063\u3066\u30b7\u30f3\u30d7\u30eb\u306a\u5b9f\u88c5\u3067\u3059\u304c\u3001\u3044\u304f\u3064\u304b\u306e\u3053\u3068\u306b\u6c17\u4ed8\u304b\u3055\u308c\u307e\u3059\u3002\n(1)\u66f8\u304d\u63db\u308f\u308b\u306e\u306f\u30d7\u30ed\u30bb\u30b9\u69cb\u9020\u4f53\u306eucred\u69cb\u9020\u4f53\u306e\u4e2d\u8eab\u3002\u3053\u306e\u3053\u3068\u304b\u3089\u3001\u30b9\u30ec\u30c3\u30c9\u3067\u306a\u304f\u3001\u30d7\u30ed\u30bb\u30b9\u306b\u5bfe\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6a5f\u80fd\u3060\u3068\u8a00\u3048\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001ucred\u306f\u540d\u79f0\u304b\u3089\u3001user credential\u3092\u8868\u73fe\u3059\u308b\u3082\u306e\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n(2)ucred\u69cb\u9020\u4f53\u306f\u3001\u4e0a\u66f8\u304d\u3067\u306a\u304f\u3001\u65b0\u898f\u306a\u3082\u306e\u3092\u65b0\u305f\u306b\u5272\u308a\u5f53\u3066\u305f\u4e0a\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\u666e\u901a\u306b\u8003\u3048\u308b\u3068\u9762\u5012\u3067\u3059\u3002\u304a\u305d\u3089\u304f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e0a\u306e\u7406\u7531\u3067\u3057\u3087\u3046\u304b\u3002\n\u6b21\u306b\u3001crget()\u3092\u773a\u3081\u307e\u3059\u3002\n\u5358\u7d14\u306bucred\u69cb\u9020\u4f53\u3092malloc()\u3067\u5272\u308a\u5f53\u3066\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\u3061\u306a\u307f\u306b\u3001malloc()\u306bM_CRED\u3068\u3044\u3046\u5272\u308a\u5f53\u3066\u9818\u57df\u306e\u30bf\u30a4\u30d7\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306b\u3088\u3063\u3066malloc()\u5074\u3067\u7279\u6b8a\u306a\u51e6\u7406\u3084\u4fdd\u8b77\u3092\u3057\u3066\u304f\u308c\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\nsys/kern/kern_prot.c\n/*\n * Allocate a zeroed cred structure.\n */\nstruct ucred *\ncrget(void)\n{\n    register struct ucred *cr; \n\n    cr = malloc(sizeof(*cr), M_CRED, M_WAITOK | M_ZERO);\n    refcount_init(&cr->cr_ref, 1);\n#ifdef AUDIT\n    audit_cred_init(cr);\n#endif\n#ifdef MAC\n    mac_cred_init(cr);\n#endif\n    cr->cr_groups = cr->cr_smallgroups;\n    cr->cr_agroups =\n        sizeof(cr->cr_smallgroups) / sizeof(cr->cr_smallgroups[0]);\n    return (cr);\n}\n\n\n\u6b21\u306b\u3001crcopysafe\u3092\u898b\u307e\u3059\u3002\n\nsys/kern/kern_prot.c\nstruct ucred *\ncrcopysafe(struct proc *p, struct ucred *cr) \n{\n    struct ucred *oldcred;\n    int groups;\n\n    PROC_LOCK_ASSERT(p, MA_OWNED);\n\n    oldcred = p->p_ucred;\n    while (cr->cr_agroups < oldcred->cr_agroups) {\n        groups = oldcred->cr_agroups;\n        PROC_UNLOCK(p);\n        crextend(cr, groups);\n        PROC_LOCK(p);\n        oldcred = p->p_ucred;\n    }    \n    crcopy(cr, oldcred);\n\n    return (oldcred);\n}\n\n/* \u7565 */\nstatic void\ncrextend(struct ucred *cr, int n)\n{\n    int cnt;\n\n    /* Truncate? */\n    if (n <= cr->cr_agroups)\n        return;\n\n    /*\n     * We extend by 2 each time since we're using a power of two\n     * allocator until we need enough groups to fill a page.\n     * \u7565\n     */\n    if ( n < PAGE_SIZE / sizeof(gid_t) ) {\n        if (cr->cr_agroups == 0)\n\n/* \u7565 */\n    cr->cr_groups = malloc(cnt * sizeof(gid_t), M_CRED, M_WAITOK | M_ZERO);\n    cr->cr_agroups = cnt;\n}\n\n\n\u5148\u306ecrget()\u306e\u672b\u5c3e\u306b\u3042\u308b\u5b9f\u88c5\u304b\u3089\u3001cr_agroups\u306fcr_groups\u306e\u8981\u7d20\u6570\u3060\u3068\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\u305d\u3057\u3066\u3001crextend()\u3092\u901a\u3057\u3066\u3001cr_groups\u3092\u5272\u308a\u5f53\u3066\u524d\u306e2\u500d\u306e\u30b5\u30a4\u30ba\u3067\u518d\u5272\u308a\u5f53\u3066\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n(\u9818\u57df\u304c\u4e0d\u8db3\u3059\u308b\u90fd\u5ea6\u3001\u524d\u56de\u30b5\u30a4\u30ba\u306e\u500d\u306e\u9818\u57df\u5272\u308a\u5f53\u3066\u3092\u884c\u3063\u3066\u3044\u304f\u5b9f\u88c5\u306f\u30ab\u30fc\u30cd\u30eb\u5b9f\u88c5\u3067\u306f\u305f\u307e\u306b\u307f\u304b\u3051\u307e\u3059\u3002)\n\u3053\u3053\u3082\u7279\u7b46\u3059\u3079\u304d\u3053\u3068\u306f\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\u3064\u307e\u308a\u3001cap_enter()\u306f\u30d7\u30ed\u30bb\u30b9\u69cb\u9020\u4f53\u5185\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u300c\u30b1\u30fc\u30d1\u30d3\u30ea\u30c6\u30a3\u30e2\u30fc\u30c9\u306b\u5165\u3063\u305f\u300d\u65e8\u306e\u5370\u3092\u3064\u3051\u308b\u3060\u3051\u306e\u51e6\u7406\u3060\u3068\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001\u4ee5\u5f8c\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u6319\u52d5\u304c\u5909\u308f\u308b\u3068\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\n\n\u4eca\u65e5\u306f\u3053\u3053\u307e\u3067\n\u3061\u3087\u3063\u3068\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u3060\u3051\u3067\u3082\u305d\u308c\u306a\u308a\u306b\u898b\u901a\u3057\u304c\u7acb\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u6b21\u306b\u3084\u308b\u3053\u3068\u306fCRED_FLAG_CAPMODE\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3092\u8abf\u3079\u308b\u3053\u3068\u3067\u3001\u3053\u308c\u306b\u3088\u308aCapsicum\u306e\u4e00\u7aef\u304c\u898b\u3048\u305d\u3046\u3067\u3059\u306d\u3002\n\u305d\u308c\u3067\u306f\u3001\u4eca\u5bb5\u306f\u5931\u793c\u3002\n## \u5927\u5909\u304a\u4e45\u3057\u3076\u308a\u3067\u3059\n\u81ea\u5b85\u3067\u30bd\u30fc\u30b9\u3092\u306a\u304b\u306a\u304b\u8aad\u3081\u305a\u3001\u30b9\u30c8\u30ec\u30b9\u6e9c\u307e\u308a\u307e\u304f\u308a\u306eakachochin\u3067\u3059\u3002\n\u3068\u3063\u304f\u306b\u6b63\u6708\u904e\u304e\u307e\u3057\u305f\u304c\u3001\u4eca\u5e74\u3082\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n\u3055\u3066\u3001\u79c1\u306f\u300cThe Design and Implementation of the FreeBSD Operating System (2nd Edition)\u300d\u3092\u5e30\u308a\u306e\u96fb\u8eca\u306e\u4e2d\u3067\u8aad\u3093\u3067\u3044\u307e\u3059\u3002\n\n\u3069\u306e\u7ae0\u3082\u8208\u5473\u6df1\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u4e2d\u3067\u3082\u4ed5\u4e8b\u3067\u307b\u3068\u3093\u3069\u89e6\u308c\u308b\u3053\u3068\u306e\u306a\u3044\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5206\u91ce\u306f\u3068\u308a\u308f\u3051\u65b0\u9bae\u3067\u3059\u3002\n\n\u3055\u3066\u3001\u305d\u3046\u3057\u305f\u77e5\u8b58\u306b\u89e6\u308c\u308b\u3068\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u307f\u305f\u304f\u306a\u308a\u307e\u3059\u3002\n\u203b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u5bfe\u8c61\u306f\u3001FreeBSD\u306eCurrent\u3067\u3059\u3002\n\n## Capsicum\u3068\u306f\nCapsicum\u306fFreeBSD\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6a5f\u80fd\u306e\u4e00\u3064\u3067\u3001\u30d7\u30ed\u30bb\u30b9\u304c\u81ea\u5206\u3068\u305d\u306e\u5b50\u4f9b\u9054\u306b\u81ea\u3089\u7e1b\u308a\u3092\u304b\u3051\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\n\u53b3\u5bc6\u3055\u306b\u6b20\u3051\u308b\u8868\u73fe\u3092\u3042\u3048\u3066\u3059\u308b\u306a\u3089\u3001\u300c\u81ea\u5206\u3068\u305d\u306e\u5b50\u30d7\u30ed\u30bb\u30b9\u306f\u3001\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3057\u3066\u4f55\u304c\u3067\u304d\u308b\u304b\u300d\u3068\u3044\u3046\u201d\u7e1b\u308a\u201d\u3092\u8a2d\u5b9a\u3057\u3001\u305d\u306e\u5f8c\u306b\u300c\u30b1\u30fc\u30d1\u30d3\u30ea\u30c6\u30a3\u30e2\u30fc\u30c9\u300d\u3068\u3044\u3046\u30e2\u30fc\u30c9\u306b\u9077\u79fb\u3059\u308b\u3053\u3068\u3067\u8a72\u5f53\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u3092\u5236\u7d04\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u8106\u5f31\u6027\u3092\u7a81\u304b\u308c\u305f\u308a\u3059\u308b\u3053\u3068\u306b\u3088\u308b\u3001\u610f\u56f3\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u30a2\u30af\u30bb\u30b9\u3092\u9632\u304e\u307e\u3059\u3002\n\nCapsicum\u306b\u3064\u3044\u3066\u306f\u3001\u65e5\u672c\u8a9e\u3067\u8aad\u3081\u308b[\u5f8c\u85e4\u5927\u5730\u6c0f\u306e\u826f\u8a18\u4e8b](http://gihyo.jp/admin/clip/01/fdt/201111/08)\u304c\u3082\u306e\u3059\u3054\u304f\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\nCapsicum\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\u3088\u3063\u3066\u3001\u30b3\u30de\u30f3\u30c9\u3068\u304b\u3067\u306a\u304f\u500b\u5225\u5177\u4f53\u7684\u306b\u5b9f\u88c5\u3092\u52a0\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u304b\u898b\u308b\u305f\u3081\u3001\u65e9\u901f\u3001\u5f8c\u85e4\u6c0f\u306e\u8a18\u4e8b\u304b\u3089\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u3092\u629c\u7c8b\u3057\u307e\u3059\u3002\ncap_new()\u3067\u30b1\u30fc\u30d1\u30d3\u30ea\u30c6\u30a3\u306e\u8a2d\u5b9a(\u53d6\u5f97)\u3092\u3057\u3066\u3001cap_enter()\u3067\u8a72\u5f53\u30b1\u30fc\u30d1\u30d3\u30ea\u30c6\u30a3\u3092\u6709\u52b9\u306b\u3059\u308b\u3002\u3082\u306e\u3059\u3054\u304f\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u306d\u3002\n\n```c:(\u5f8c\u85e4\u6c0f\u306e\u8a18\u4e8b\u3088\u308a\u4e00\u90e8\u5f15\u7528)\n    fd = open(\"COPYRIGHT\", O_RDWR);\n    if (-1 == fd)\n        err(EX_NOPERM, \"open error: %d\", errno);\n\n    /* \n     * \u3053\u306e\u30d7\u30ed\u30bb\u30b9\u304a\u3088\u3073\u305d\u306e\u5b50\u30d7\u30ed\u30bb\u30b9\u306f\u3001open\u3057\u305f\u30d5\u30a1\u30a4\u30eb\n     * (COPYRIGHT)\u306b\u5bfe\u3057\u3066\u300cREAD\u300d\u3068\u300cSEEK\u300d\u3057\u304b\u8a31\u3055\u306a\u3044\u3002\n     * \u305d\u306e\u3088\u3046\u306a\u30b1\u30fc\u30d1\u30d3\u30ea\u30c6\u30a3\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n     */\n    cap = cap_new(dup(fd), CAP_READ | CAP_SEEK);\n    if (-1 == cap)\n        err(EX_NOPERM, \"cap_new(1) error: %d\", errno);\n\n    close(fd);\n\n    /* cap_new\u3067\u8a2d\u5b9a\u3057\u305f\u30b1\u30fc\u30d1\u30d3\u30ea\u30c6\u30a3\u3092\u6709\u52b9\u306b\u3059\u308b */\n    cap_enter();\n```\n\n## cap_enter()\u3092\u8aad\u3080\n\u3053\u3053\u307e\u3067\u898b\u7d42\u308f\u3063\u305f\u3068\u3053\u308d\u3067\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u307f\u307e\u3057\u3087\u3046\u3002\nman\u306b\u3088\u308b\u3068\u3001cap_enter()\u306flibc\u306e\u95a2\u6570\u3067\u3059\u3002lib/\u306e\u4e0b\u3067\u691c\u7d22\u3057\u305f\u304c\u3001\u76f4\u63a5\u306e\u5b9f\u88c5\u306f\u898b\u5f53\u305f\u308a\u307e\u305b\u3093\u3002\u304a\u305d\u3089\u304f\u30d3\u30eb\u30c9\u6642\u306b\u81ea\u52d5\u7684\u306b\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u547c\u3073\u51fa\u3057\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u308b\u985e\u3068\u63a8\u5b9a\u3057\u3001sys/\u306e\u4e0b\u3092\u691c\u7d22\u3057\u307e\u3059\u3002\n\n```c:sys/kern/sys_capability.c\nint\nsys_cap_enter(struct thread *td, struct cap_enter_args *uap)\n{\n    struct ucred *newcred, *oldcred;\n    struct proc *p; \n\n    if (IN_CAPABILITY_MODE(td))\n        return (0);\n\n    newcred = crget();\n    p = td->td_proc;\n    PROC_LOCK(p);\n    oldcred = crcopysafe(p, newcred);\n    newcred->cr_flags |= CRED_FLAG_CAPMODE;\n    p->p_ucred = newcred;\n    PROC_UNLOCK(p);\n    crfree(oldcred);\n    return (0);\n}\n```\n\n\u81f3\u3063\u3066\u30b7\u30f3\u30d7\u30eb\u306a\u5b9f\u88c5\u3067\u3059\u304c\u3001\u3044\u304f\u3064\u304b\u306e\u3053\u3068\u306b\u6c17\u4ed8\u304b\u3055\u308c\u307e\u3059\u3002\n(1)\u66f8\u304d\u63db\u308f\u308b\u306e\u306f\u30d7\u30ed\u30bb\u30b9\u69cb\u9020\u4f53\u306eucred\u69cb\u9020\u4f53\u306e\u4e2d\u8eab\u3002\u3053\u306e\u3053\u3068\u304b\u3089\u3001\u30b9\u30ec\u30c3\u30c9\u3067\u306a\u304f\u3001\u30d7\u30ed\u30bb\u30b9\u306b\u5bfe\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6a5f\u80fd\u3060\u3068\u8a00\u3048\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001ucred\u306f\u540d\u79f0\u304b\u3089\u3001user credential\u3092\u8868\u73fe\u3059\u308b\u3082\u306e\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n(2)ucred\u69cb\u9020\u4f53\u306f\u3001\u4e0a\u66f8\u304d\u3067\u306a\u304f\u3001\u65b0\u898f\u306a\u3082\u306e\u3092\u65b0\u305f\u306b\u5272\u308a\u5f53\u3066\u305f\u4e0a\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\u666e\u901a\u306b\u8003\u3048\u308b\u3068\u9762\u5012\u3067\u3059\u3002\u304a\u305d\u3089\u304f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e0a\u306e\u7406\u7531\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u6b21\u306b\u3001crget()\u3092\u773a\u3081\u307e\u3059\u3002\n\u5358\u7d14\u306bucred\u69cb\u9020\u4f53\u3092malloc()\u3067\u5272\u308a\u5f53\u3066\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\u3061\u306a\u307f\u306b\u3001malloc()\u306bM_CRED\u3068\u3044\u3046\u5272\u308a\u5f53\u3066\u9818\u57df\u306e\u30bf\u30a4\u30d7\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306b\u3088\u3063\u3066malloc()\u5074\u3067\u7279\u6b8a\u306a\u51e6\u7406\u3084\u4fdd\u8b77\u3092\u3057\u3066\u304f\u308c\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n```c:sys/kern/kern_prot.c\n/*\n * Allocate a zeroed cred structure.\n */\nstruct ucred *\ncrget(void)\n{\n    register struct ucred *cr; \n\n    cr = malloc(sizeof(*cr), M_CRED, M_WAITOK | M_ZERO);\n    refcount_init(&cr->cr_ref, 1);\n#ifdef AUDIT\n    audit_cred_init(cr);\n#endif\n#ifdef MAC\n    mac_cred_init(cr);\n#endif\n    cr->cr_groups = cr->cr_smallgroups;\n    cr->cr_agroups =\n        sizeof(cr->cr_smallgroups) / sizeof(cr->cr_smallgroups[0]);\n    return (cr);\n}\n```\n\n\u6b21\u306b\u3001crcopysafe\u3092\u898b\u307e\u3059\u3002\n\n```c:sys/kern/kern_prot.c\nstruct ucred *\ncrcopysafe(struct proc *p, struct ucred *cr) \n{\n    struct ucred *oldcred;\n    int groups;\n\n    PROC_LOCK_ASSERT(p, MA_OWNED);\n\n    oldcred = p->p_ucred;\n    while (cr->cr_agroups < oldcred->cr_agroups) {\n        groups = oldcred->cr_agroups;\n        PROC_UNLOCK(p);\n        crextend(cr, groups);\n        PROC_LOCK(p);\n        oldcred = p->p_ucred;\n    }    \n    crcopy(cr, oldcred);\n\n    return (oldcred);\n}\n\n/* \u7565 */\nstatic void\ncrextend(struct ucred *cr, int n)\n{\n    int cnt;\n\n    /* Truncate? */\n    if (n <= cr->cr_agroups)\n        return;\n\n    /*\n     * We extend by 2 each time since we're using a power of two\n     * allocator until we need enough groups to fill a page.\n     * \u7565\n     */\n    if ( n < PAGE_SIZE / sizeof(gid_t) ) {\n        if (cr->cr_agroups == 0)\n\n/* \u7565 */\n    cr->cr_groups = malloc(cnt * sizeof(gid_t), M_CRED, M_WAITOK | M_ZERO);\n    cr->cr_agroups = cnt;\n}\n```\n\n\u5148\u306ecrget()\u306e\u672b\u5c3e\u306b\u3042\u308b\u5b9f\u88c5\u304b\u3089\u3001cr_agroups\u306fcr_groups\u306e\u8981\u7d20\u6570\u3060\u3068\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\u305d\u3057\u3066\u3001crextend()\u3092\u901a\u3057\u3066\u3001cr_groups\u3092\u5272\u308a\u5f53\u3066\u524d\u306e2\u500d\u306e\u30b5\u30a4\u30ba\u3067\u518d\u5272\u308a\u5f53\u3066\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n(\u9818\u57df\u304c\u4e0d\u8db3\u3059\u308b\u90fd\u5ea6\u3001\u524d\u56de\u30b5\u30a4\u30ba\u306e\u500d\u306e\u9818\u57df\u5272\u308a\u5f53\u3066\u3092\u884c\u3063\u3066\u3044\u304f\u5b9f\u88c5\u306f\u30ab\u30fc\u30cd\u30eb\u5b9f\u88c5\u3067\u306f\u305f\u307e\u306b\u307f\u304b\u3051\u307e\u3059\u3002)\n\n\u3053\u3053\u3082\u7279\u7b46\u3059\u3079\u304d\u3053\u3068\u306f\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n\u3064\u307e\u308a\u3001cap_enter()\u306f\u30d7\u30ed\u30bb\u30b9\u69cb\u9020\u4f53\u5185\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u300c\u30b1\u30fc\u30d1\u30d3\u30ea\u30c6\u30a3\u30e2\u30fc\u30c9\u306b\u5165\u3063\u305f\u300d\u65e8\u306e\u5370\u3092\u3064\u3051\u308b\u3060\u3051\u306e\u51e6\u7406\u3060\u3068\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001\u4ee5\u5f8c\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u6319\u52d5\u304c\u5909\u308f\u308b\u3068\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\n\n## \u4eca\u65e5\u306f\u3053\u3053\u307e\u3067\n\u3061\u3087\u3063\u3068\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u3060\u3051\u3067\u3082\u305d\u308c\u306a\u308a\u306b\u898b\u901a\u3057\u304c\u7acb\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u6b21\u306b\u3084\u308b\u3053\u3068\u306fCRED_FLAG_CAPMODE\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3092\u8abf\u3079\u308b\u3053\u3068\u3067\u3001\u3053\u308c\u306b\u3088\u308aCapsicum\u306e\u4e00\u7aef\u304c\u898b\u3048\u305d\u3046\u3067\u3059\u306d\u3002\n\u305d\u308c\u3067\u306f\u3001\u4eca\u5bb5\u306f\u5931\u793c\u3002\n\n\n"}