{"context": " More than 1 year has passed since last update.\u3056\u3063\u3068Web\u3092\u898b\u305f\u9650\u308a\u3067\u306f\uff0cEdison\u3092C\u8a00\u8a9e\u3067\u6271\u304a\u3046\u3068\u3044\u3046\u4eba\u9593\u306f\u5c11\u6570\u6d3e\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u30fb\u30fb\uff0e\nIntel\u8b39\u88fd\u306eHAL(Hardware abstract layer)\u3089\u3057\u3044\uff0cMRAA\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\nhttps://github.com/intel-iot-devkit/mraa/blob/master/docs/edison.md\n\u306e\u30da\u30fc\u30b8\u306b\uff0cEdison breakout board\u306e\u30d4\u30f3\u30de\u30c3\u30d7\u304c\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\uff0c\u305d\u306e\u8868\u306e\u4e2d\u304b\u3089\u4f7f\u7528\u3057\u305f\u3044\u7269\u7406\u30d4\u30f3\u306eMRAA Number\u3092\u8abf\u3079\u3066\uff0c mraa_hoge_init \u306b\u308f\u305f\u3059\u3088\u3046\u3067\u3059\uff0ehoge\u306e\u90e8\u5206\u306fgpio,pwm,spi,uart\u306a\u3069\uff0e\nMRAA\u306b\u306f\uff0cC\u4ee5\u5916\u306b\u3082C++\u3084Python\uff0cJavaScript\u7528\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3082\u305d\u308d\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u304a\u597d\u307f\u306a\u8a00\u8a9e\u3092\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u306a\uff0e\n\npwm.c\n#include <stdio.h>\n#include <syslog.h>\n#include <mraa.h>\n\nint main(int argc, char *argv[])\n{\n    mraa_result_t ret;\n    mraa_init();\n\n    ret = mraa_set_log_level(LOG_DEBUG);\n    fprintf(stdout, \"Hello mraa.\\nVersion: %s\\n\", mraa_get_version());\n\n    mraa_pwm_context pwm;\n\n    // The physical pin mapping is defined at \n    // https://github.com/intel-iot-devkit/mraa/blob/master/docs/edison.md\n    //\n    // For example,\n    // MRAA Number(20) => Physical Pin(J18-7)\n    pwm = mraa_pwm_init(20);\n    if(pwm == NULL){\n        return 1;\n    }\n\n    mraa_pwm_period_us(pwm, 15*1000);   // 15[ms]\n    mraa_pwm_enable(pwm, 1);\n\n    int i;\n    for(i=0;i<20;i++){\n        mraa_pwm_write(pwm, 0.05*i);\n        usleep(1000*1000);  // 1[s]\n\n        float out = mraa_pwm_read(pwm);\n        fprintf(stdout, \"PWM0 : %f\\n\", out);\n    }\n\n\n    mraa_deinit();\n\n    return ret;\n}\n\n\n\nCC = gcc\nMRAALIBS = -lmraa\n\n.PHONY: all clean pwm\n\nall: pwm\n\nclean:\n    rm -f ./*.o\n    rm -f pwm\n\npwm: pwm.o\n    $(CC) -O4 $(MRAALIBS) -o $@ $^\n\n%.o: %.c\n    $(CC) -Wall -g -c $<\n\n\u3056\u3063\u3068Web\u3092\u898b\u305f\u9650\u308a\u3067\u306f\uff0cEdison\u3092C\u8a00\u8a9e\u3067\u6271\u304a\u3046\u3068\u3044\u3046\u4eba\u9593\u306f\u5c11\u6570\u6d3e\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u30fb\u30fb\uff0e\n\nIntel\u8b39\u88fd\u306eHAL(Hardware abstract layer)\u3089\u3057\u3044\uff0c[MRAA](https://github.com/intel-iot-devkit/mraa)\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\n\nhttps://github.com/intel-iot-devkit/mraa/blob/master/docs/edison.md\n\u306e\u30da\u30fc\u30b8\u306b\uff0cEdison breakout board\u306e\u30d4\u30f3\u30de\u30c3\u30d7\u304c\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\uff0c\u305d\u306e\u8868\u306e\u4e2d\u304b\u3089\u4f7f\u7528\u3057\u305f\u3044\u7269\u7406\u30d4\u30f3\u306eMRAA Number\u3092\u8abf\u3079\u3066\uff0c *mraa_hoge_init* \u306b\u308f\u305f\u3059\u3088\u3046\u3067\u3059\uff0ehoge\u306e\u90e8\u5206\u306fgpio,pwm,spi,uart\u306a\u3069\uff0e\n\nMRAA\u306b\u306f\uff0cC\u4ee5\u5916\u306b\u3082C++\u3084Python\uff0cJavaScript\u7528\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3082\u305d\u308d\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u304a\u597d\u307f\u306a\u8a00\u8a9e\u3092\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u306a\uff0e\n\n```cpp:pwm.c\n#include <stdio.h>\n#include <syslog.h>\n#include <mraa.h>\n\nint main(int argc, char *argv[])\n{\n\tmraa_result_t ret;\n\tmraa_init();\n\n\tret = mraa_set_log_level(LOG_DEBUG);\n\tfprintf(stdout, \"Hello mraa.\\nVersion: %s\\n\", mraa_get_version());\n\n\tmraa_pwm_context pwm;\n\n\t// The physical pin mapping is defined at \n\t// https://github.com/intel-iot-devkit/mraa/blob/master/docs/edison.md\n\t//\n\t// For example,\n\t// MRAA Number(20) => Physical Pin(J18-7)\n\tpwm = mraa_pwm_init(20);\n\tif(pwm == NULL){\n\t\treturn 1;\n\t}\n\n\tmraa_pwm_period_us(pwm, 15*1000);\t// 15[ms]\n\tmraa_pwm_enable(pwm, 1);\n\n\tint i;\n\tfor(i=0;i<20;i++){\n\t\tmraa_pwm_write(pwm, 0.05*i);\n\t\tusleep(1000*1000);\t// 1[s]\n\n\t\tfloat out = mraa_pwm_read(pwm);\n\t\tfprintf(stdout, \"PWM0 : %f\\n\", out);\n\t}\n\n\n\tmraa_deinit();\n\n\treturn ret;\n}\n\n```\n\n```Makefile\nCC = gcc\nMRAALIBS = -lmraa\n\n.PHONY: all clean pwm\n\nall: pwm\n\nclean:\n\trm -f ./*.o\n\trm -f pwm\n\npwm: pwm.o\n\t$(CC) -O4 $(MRAALIBS) -o $@ $^\n\n%.o: %.c\n\t$(CC) -Wall -g -c $<\n```\n\n\n", "tags": ["mraa", "Edison", "C"]}