{"context": "class OpenFileDialog : Java.Lang.Object, IDialogInterfaceOnKeyListener\n{\n    private Context _context;\n    private AlertDialog _dialog;\n    private List<FileSystemInfo> _info;\n\n    private static string _parent = \"\";\n    private static string _current = \"/\";\n\n    public OpenFileDialog(Context context)\n    {\n        _context = context;\n        _info = new List<FileSystemInfo>();\n\n        Show(_current);\n    }\n\n    public void Show(string parent)\n    {\n        _dialog = new AlertDialog.Builder(_context)\n            .SetTitle(parent)\n            .SetItems(GetPathList(parent), OnClick)\n            .SetOnKeyListener(this)\n            .Show();\n    }\n\n    public void OnClick(object sender, DialogClickEventArgs e)\n    {\n        _current = _info[e.Which].FullName;\n\n        if (IsDirectory(_info[e.Which]) == true)\n        {\n            _parent = ((DirectoryInfo)_info[e.Which]).Parent.FullName;\n            Show(_current);\n        }\n    }\n\n    public string[] GetPathList(string directory)\n    {\n        var item = new List<string>();\n\n        _info.Clear();\n\n        try\n        {\n            foreach (var n in (new DirectoryInfo(directory)).GetFileSystemInfos().Where(n => IsEnable(n)))\n            {\n                _info.Add(n);\n                item.Add(n.Name + (IsDirectory(n) ? \"/\" : \"\"));\n            }\n        }\n        catch (Exception ex)\n        {\n            Toast.MakeText(_context, ex.Message, ToastLength.Long).Show();\n\n            return null;\n        }\n\n        return item.ToArray();\n    }\n\n    public bool IsDirectory(FileSystemInfo info)\n    {\n        if (info == null || !info.Exists)\n        {\n            return false;\n        }\n\n        return (info.Attributes & FileAttributes.Directory) == FileAttributes.Directory;\n    }\n\n    public bool IsEnable(FileSystemInfo info)\n    {\n        if (info == null || !info.Exists)\n        {\n            return false;\n        }\n\n        return !((info.Attributes & FileAttributes.Hidden) == FileAttributes.Hidden);\n    }\n\n    public bool OnKey(IDialogInterface dialog, Keycode keyCode, KeyEvent e)\n    {\n        switch (keyCode)\n        {\n            case Keycode.Back:\n                if (e.Action == KeyEventActions.Up)\n                {\n                    if (_parent != \"\")\n                    {\n                        _current = _parent;\n\n                        if (_parent != \"/\")\n                        {\n                            _parent = new DirectoryInfo(_parent).Parent.Name;\n                        }\n                        else\n                        {\n                            _parent = \"\";\n                        }\n\n                        Show(_current);\n                    }\n                }\n\n                return false;\n            case Keycode.Search:\n                return true;\n            default:\n                return false;\n        }\n    }\n}\n\n\tclass OpenFileDialog : Java.Lang.Object, IDialogInterfaceOnKeyListener\n\t{\n\t\tprivate Context _context;\n\t\tprivate AlertDialog _dialog;\n\t\tprivate List<FileSystemInfo> _info;\n\n\t\tprivate static string _parent = \"\";\n\t\tprivate static string _current = \"/\";\n\n\t\tpublic OpenFileDialog(Context context)\n\t\t{\n\t\t\t_context = context;\n\t\t\t_info = new List<FileSystemInfo>();\n\t\t\t\n\t\t\tShow(_current);\n\t\t}\n\n\t\tpublic void Show(string parent)\n\t\t{\n\t\t\t_dialog = new AlertDialog.Builder(_context)\n\t\t\t\t.SetTitle(parent)\n\t\t\t\t.SetItems(GetPathList(parent), OnClick)\n\t\t\t\t.SetOnKeyListener(this)\n\t\t\t\t.Show();\n\t\t}\n\n\t\tpublic void OnClick(object sender, DialogClickEventArgs e)\n\t\t{\n\t\t\t_current = _info[e.Which].FullName;\n\n\t\t\tif (IsDirectory(_info[e.Which]) == true)\n\t\t\t{\n\t\t\t\t_parent = ((DirectoryInfo)_info[e.Which]).Parent.FullName;\n\t\t\t\tShow(_current);\n\t\t\t}\n\t\t}\n\n\t\tpublic string[] GetPathList(string directory)\n\t\t{\n\t\t\tvar item = new List<string>();\n\n\t\t\t_info.Clear();\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tforeach (var n in (new DirectoryInfo(directory)).GetFileSystemInfos().Where(n => IsEnable(n)))\n\t\t\t\t{\n\t\t\t\t\t_info.Add(n);\n\t\t\t\t\titem.Add(n.Name + (IsDirectory(n) ? \"/\" : \"\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\tToast.MakeText(_context, ex.Message, ToastLength.Long).Show();\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn item.ToArray();\n\t\t}\n\n\t\tpublic bool IsDirectory(FileSystemInfo info)\n\t\t{\n\t\t\tif (info == null || !info.Exists)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn (info.Attributes & FileAttributes.Directory) == FileAttributes.Directory;\n\t\t}\n\n\t\tpublic bool IsEnable(FileSystemInfo info)\n\t\t{\n\t\t\tif (info == null || !info.Exists)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !((info.Attributes & FileAttributes.Hidden) == FileAttributes.Hidden);\n\t\t}\n\n\t\tpublic bool OnKey(IDialogInterface dialog, Keycode keyCode, KeyEvent e)\n\t\t{\n\t\t\tswitch (keyCode)\n\t\t\t{\n\t\t\t\tcase Keycode.Back:\n\t\t\t\t\tif (e.Action == KeyEventActions.Up)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (_parent != \"\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_current = _parent;\n\n\t\t\t\t\t\t\tif (_parent != \"/\")\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t_parent = new DirectoryInfo(_parent).Parent.Name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t_parent = \"\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tShow(_current);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\tcase Keycode.Search:\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n", "tags": ["Xamarin.Android", "C#", "Xamarin", "Android"]}