{"context": "\n\n\u306f\u3058\u3081\u306b\n\u30a8\u30f3\u30b8\u30cb\u30a2\u3084\u3063\u3066\u3044\u308b\u3068\u8272\u3093\u306a\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308a\u305f\u304f\u306a\u308b\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001Heroku\u306e\u30d5\u30ea\u30fc\u30d7\u30e9\u30f3\u304c\u4f7f\u3048\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u5f71\u97ff\u3067\u7121\u6599\u3067\u306e\u30b5\u30fc\u30d3\u30b9\u904b\u55b6\u306f\u96e3\u3057\u304f\u306a\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093\u3001Google App Engine\u306a\u3069\u7121\u6599\u3067\u904b\u7528\u3067\u304d\u308b\u3082\u306e\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u30b5\u30fc\u30d3\u30b9\u306b\u30ed\u30c3\u30af\u30a4\u30f3\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u304c\u591a\u304f\u3061\u3087\u3046\u3069\u826f\u3044\u7269\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308b\u7a0b\u5ea6\u5b89\u304f\u8272\u3005\u3084\u308d\u3046\u3068\u3059\u308b\u3068\u30011\u53f0\u306e\u30b5\u30fc\u30d0\u3067\u3044\u3044\u611f\u3058\u306b\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3068\u3044\u3046\u6614\u306a\u304c\u3089\u306e\u69cb\u6210\u306b\u306a\u308b\u306e\u3067\u3059\u304c\u3001Docker\u3092\u4f7f\u3046\u3053\u3068\u3067\u74b0\u5883\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306a\u3069\u30b5\u30fc\u30d0\u7ba1\u7406\u306e\u624b\u9593\u3092\u6700\u5c0f\u9650\u306b\u3057\u3066\u3044\u3053\u3046\u3001\u3068\u3044\u3046\u306e\u304c\u3053\u306e\u8a18\u4e8b\u306e\u8da3\u65e8\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u65b9\u91dd\n\u8981\u4ef6\n\n\u5b89\u3044\n\u30b5\u30fc\u30d3\u30b9\u306b\u30ed\u30c3\u30af\u30a4\u30f3\u3055\u308c\u306a\u3044\n\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\uff08\u3082\u3057\u30b5\u30fc\u30d3\u30b9\u306e\u30a2\u30af\u30bb\u30b9\u91cf\u304c\u5897\u3048\u305f\u3068\u3057\u3066\u30b9\u30b1\u30fc\u30eb\u3055\u305b\u3089\u308c\u308b\uff09\n\u30a4\u30f3\u30d5\u30e9\u7ba1\u7406\u304c\u5bb9\u6613\n\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3068\u304b\u306a\u308b\u3079\u304f\u6c17\u306b\u3057\u305f\u304f\u306a\u3044\n\n\n\n\u4ee5\u4e0a\u306e\u3053\u3068\u3092\u8e0f\u307e\u3048\u305f\u7d50\u679cConoHa\u306eVPS\u3092\u4f7f\u3046\u69cb\u6210\u3068\u306a\u308a\u307e\u3057\u305f\u3002\u8cbb\u7528\u3068\u3057\u3066\u306f\u3001\n\n\u30c9\u30e1\u30a4\u30f31\u3064(4000\u5186/year)\n\u30b5\u30fc\u30d01\u53f0(900\u5186/month)\nRDB1\u53f0\uff08500\u5186/month\uff09\nS3 (\u6570\u5341\u5186/month)\n\n\u3068\u3044\u3046\u69cb\u6210\u3067\u67082000\u5186\u4ee5\u4e0b\u306b\u6291\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u691c\u8a0e\u3057\u305f\u3053\u3068\nPaaS\u3068\u304b\u8003\u3048\u305f\u306e\u3067\u3059\u304c\u7d50\u5c40VPS\u304c\u4e00\u756a\u5b89\u3044\u3088\u306d\u3068\u3044\u3046\u8a71\u3002\n\n\u691c\u8a0e1 \u81ea\u5b85\u30b5\u30fc\u30d0\n\u30c7\u30fc\u30bf\u6d88\u3048\u306a\u3044\u3088\u3046\u306a\u4ed5\u7d44\u307f\u3065\u304f\u308a\u3068\u304b\u305d\u3046\u3044\u3046\u3068\u3053\u308d\u306b\u6642\u9593\u3092\u4f7f\u3046\u6642\u4ee3\u3058\u3083\u306a\u304f\u306a\u3063\u3066\u304d\u3066\u308b\u306e\u3067\u81ea\u5206\u306e\u4e2d\u3067\u306f\u3053\u308c\u306f\u7121\u3044\u304b\u306a\u3002\n\n\u691c\u8a0e2 PaaS\nHeroku\u306fFree\u30d7\u30e9\u30f3\u3067\u3067\u304d\u308b\u3053\u3068\u304c\u5c11\u306a\u304f\u306a\u3063\u305f\u306e\u3067\u4ed6\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u63a2\u3057\u307e\u3057\u305f\u304c\u3001\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u3092\u7121\u6599\u306b\u8fd1\u3044\u91d1\u984d\u3067\u3067\u304d\u308b\u306e\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002OpenShift\u3068\u304b\u306f\u8907\u6570\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u308c\u3070\u3067\u304d\u308b\u3093\u3060\u308d\u3046\u3051\u3069\u305d\u306e\u7ba1\u7406\u304c\u3081\u3093\u3069\u304f\u3055\u3044\u3002\u8abf\u3079\u305f\u6642\u306f\u898b\u3064\u3051\u3089\u308c\u306a\u304b\u3063\u305f\u3051\u3069IBM Bluemix\u306f\u7121\u6599\u67a0\u591a\u3044\u306e\u3067\u3082\u3057\u304b\u3057\u305f\u3089\u7d50\u69cb\u826f\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u691c\u8a0e3 AWS\u3001GCP\u306a\u3069\n\u4fa1\u683c\u304c\u9ad8\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3084\u3081\u307e\u3057\u305f\u3002\n\u7279\u306bDB\u30b5\u30fc\u30d0\u306e\u7ba1\u7406\u3092\u3057\u305f\u304f\u306a\u3044\u306e\u3067\u30de\u30cd\u30fc\u30b8\u30c9\u578b\u306eRDB\u304c\u6b32\u3057\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30b3\u30b9\u30c8\u304c\u5927\u5206\u9ad8\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u611f\u3058\u3067\u3057\u305f\u3002NoSQL\u7cfb\u306f\u5b89\u3044\u306e\u3067\u3059\u304c\u4f7f\u3044\u305f\u304f\u306a\u304b\u3063\u305f\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\uff03\u3061\u306a\u307f\u306bAmazon\u3068Google\u306f\u8abf\u3079\u305f\u306e\u3067\u3059\u304c\u4ed6\u306f\u8abf\u3079\u3066\u306a\u3044\u306e\u3067\u3082\u3063\u3068\u826f\u3044\u306e\u304c\u3042\u308b\u304b\u3082\n\n\u691c\u8a0e4 VPS\u3092\u4f7f\u3046\n\u7d50\u5c40\u5b89\u304f\u904b\u7528\u3059\u308b\u306a\u3089VPS\u3060\u306a\u3068\u3044\u3046\u7d50\u8ad6\u306b\u3002\u30de\u30cd\u30fc\u30b8\u30c9\u578b\u306eRDB\u30b5\u30fc\u30d3\u30b9\u306b\u3064\u3044\u3066\u306f\u3001ConoHa\u30af\u30e9\u30a6\u30c9\u304cDB\u30b5\u30fc\u30d0\u3092500\u5186\u3068\u3044\u3046\u683c\u5b89\u6599\u91d1\u3067\u63d0\u4f9b\u3057\u3066\u3044\u3066\u3001LB\u306a\u3069\u3082\u8ffd\u52a0\u3067\u304d\u308bIaaS\u7684\u306a\u30b5\u30fc\u30d3\u30b9\u3067\u3061\u3087\u3046\u3069\u81ea\u5206\u306e\u8981\u671b\u3092\u6e80\u305f\u3059\u3053\u3068\u304c\u3067\u304d\u305f\u306e\u3067\u3053\u3061\u3089\u306b\u3057\u307e\u3057\u305f\u3002DB\u304cMariaDB\u3060\u3063\u305f\u308a\u304a\u305d\u3089\u304f\u591a\u304f\u306e\u30e6\u30fc\u30b6\u3067\u5171\u6709\u3057\u3066\u3044\u308b\u306e\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u671f\u5f85\u3067\u304d\u306a\u3044\u306a\u3069\u306e\u554f\u984c\u304c\u6c17\u306b\u306a\u3089\u306a\u3051\u308c\u3070\u3053\u308c\u3067\u826f\u3055\u305d\u3046\u3002\n\u81ea\u5206\u306e\u4e2d\u3067\u306fDB\u30b5\u30fc\u30d3\u30b9\u306e\u3042\u308bVPS\u304c\u7121\u304b\u3063\u305f\u3089\u305f\u3076\u3093AWS\u4e0a\u3067EC2+RDS\u306e\u69cb\u6210\u306b\u3057\u3066\u3044\u305f\u3068\u601d\u3044\u307e\u3059\u304c\uff08\u305d\u306e\u304f\u3089\u3044DB\u306e\u7ba1\u7406\u3092\u3057\u305f\u304f\u306a\u3044\uff09\u3001\u81ea\u5206\u3067DB\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u308b\u306e\u3067\u3042\u308c\u3070\u3069\u3053\u306eVPS\u3067\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u69cb\u6210\n\u3068\u3044\u3046\u3053\u3068\u3067\u3053\u3093\u306a\u69cb\u6210\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30b5\u30fc\u30d0\u306e\u69cb\u6210\u7ba1\u7406\u306f1\u30d5\u30a1\u30a4\u30eb\u3067\u5b8c\u7d50\u3057\u307e\u3059\u3002Docker\u306e\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\u3082Dockerfile\u3068nginx,supervisord\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u3067\u7c21\u5358\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u3066\u3001\u5fc5\u8981\u306a\u7ba1\u7406\u306f\u305d\u308c\u3060\u3051\u306a\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002\n\n\u9806\u306b\u69cb\u6210\u8981\u7d20\u3092\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nCoreOS\nDocker\u3060\u3051\u3042\u308c\u3070\u826f\u3044\u306e\u3067CoreOS\u306b\u3057\u307e\u3057\u305f\u3002CoreOS\u306e\u672c\u8cea\u306f\u5206\u6563\u30b7\u30b9\u30c6\u30e0\u3092\u5bb9\u6613\u306b\u69cb\u7bc9\u3067\u304d\u308b\u3068\u3053\u308d\u3060\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\n\n\u5fc5\u8981\u5341\u5206\u306a\u6a5f\u80fd\u3092\u3082\u3064OS\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u5c11\u306a\u304f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ea\u30b9\u30af\u304c\u5c11\u306a\u3044\n\u81ea\u52d5\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u4ed5\u7d44\u307f\n\u69cb\u6210\u3092 cloud-config.yml \u306e1\u30d5\u30a1\u30a4\u30eb\u3067\u7ba1\u7406\u3067\u304d\u308b\n\n\u3068\u3044\u3046\u70b9\u3067\u3053\u308c\u3057\u304b\u306a\u3044\u306a\u3068\u601d\u3063\u3066\u9078\u3073\u307e\u3057\u305f\u3002\n\u7279\u306b cloud-config.yml \u3067\u30b5\u30fc\u30d3\u30b9\u306e\u7acb\u3061\u4e0a\u3052\u306a\u3069\u304c\u7ba1\u7406\u3067\u304d\u308b\u305f\u3081\u3001\u305d\u306e1\u30d5\u30a1\u30a4\u30eb\u3060\u3051 Dropbox \u306b\u3044\u308c\u3066\u304a\u3051\u3070\u30d5\u30a1\u30a4\u30eb\u306e\u7ba1\u7406\u3068\u3057\u3066\u306f\u5341\u5206\u3067\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u3082\u5fc5\u8981\u3068\u305b\u305a\u306b\u69cb\u6210\u306e\u7ba1\u7406\u304c\u3067\u304d\u3066\u3057\u307e\u3046\u306e\u304c\u500b\u4eba\u7684\u306b\u306f\u6c17\u306b\u5165\u308a\u307e\u3057\u305f\u3002\n\n\u30b5\u30fc\u30d3\u30b9\u306eDocker\u30a4\u30e1\u30fc\u30b8\nDocker\u306e\u8003\u3048\u65b9\u7684\u306b\u306f\u304a\u305d\u3089\u304f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3068nginx\u306f\u5225\u30b3\u30f3\u30c6\u30ca\u306b\u3059\u308b\u3079\u304d\u306a\u306e\u3067\u3059\u304c\u3001nginx\u3068rails\u3092\u5225\u30b3\u30f3\u30c6\u30ca\u3067\u7ba1\u7406\u3059\u308b\u30b3\u30b9\u30c8\u304c\u9ad8\u3044\u306e\u3067\u30b7\u30f3\u30d7\u30eb\u3055\u3068\u3044\u3046\u70b9\u3067\u907f\u3051\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u305d\u306e\u305f\u3081 supervisord \u3067 nginx \u3068 rails \u3092\u7acb\u3061\u4e0a\u3052\u308b\u3088\u3046\u306a\u69cb\u6210\u306b\u3057\u3066\u3044\u307e\u3059\u3002\ndocker-compose\u3092\u4f7f\u3046\u3068\u3044\u3046\u3053\u3068\u3082\u8003\u3048\u307e\u3057\u305f\u304cCoreOS\u306b\u5165\u3063\u3066\u3044\u306a\u3044\u306e\u3068\u3001\u3042\u304f\u307e\u3067Development\u5411\u3051\u306b\u958b\u767a\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u306a\u306e\u3067\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\nRails\u4e0a\u306esecret\u3084DB\u63a5\u7d9a\u5148\u306fDocker\u5b9f\u884c\u6642\u306e\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u5165\u308c\u308b\u3053\u3068\u3067\u74b0\u5883\u306b\u4f9d\u5b58\u3057\u306a\u3044\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nnginx-proxy\n\u8907\u6570\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u305d\u308c\u305e\u308c\u306e\u30b3\u30f3\u30c6\u30ca\u3067\u52d5\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u5404\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u632f\u308a\u5206\u3051\u308b\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u901a\u5e38\u3060\u3068nginx\u3084apache\u306e\u8a2d\u5b9a\u3067Virtual host\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u6bce\u306e\u632f\u308a\u5206\u3051\u5148\u3092\u66f8\u3044\u3066\u3001\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3059\u308b\u308f\u3051\u3067\u3059\u304c\u3001nginx-proxy\u3092\u4f7f\u3046\u3068\u7acb\u3061\u4e0a\u304c\u3063\u3066\u3044\u308bDocker\u30b3\u30f3\u30c6\u30ca\u306b\u81ea\u52d5\u7684\u306b\u632f\u308a\u5206\u3051\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u30b5\u30fc\u30d3\u30b9\u306e\u6295\u5165\u304c\u975e\u5e38\u306b\u697d\u306b\u306a\u308a\u307e\u3059\u3002\n\ndocker-letsencrypt-nginx-proxy-companion\nSSL\u304c\u4f7f\u3048\u306a\u3044\u30b5\u30fc\u30d3\u30b9\u306f\u4eca\u6642\u3042\u308a\u3048\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u3078\u306e\u5bfe\u5fdc\u3067\u3059\u3002\nLet's Encrypt\u306f\u6700\u8fd1\u6ce8\u76ee\u306e\u7121\u6599\u3067SSL\u8a3c\u660e\u66f8\u3092\u767a\u884c\u3067\u304d\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002Facebook\u3092\u59cb\u3081\u3068\u3057\u305f\u540d\u9ad8\u3044\u4f01\u696d\u304c\u30b9\u30dd\u30f3\u30b5\u30fc\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u52d5\u304b\u3059\u3060\u3051\u3067\u81ea\u52d5\u3067SSL\u8a3c\u660e\u66f8\u306e\u767a\u884c\u30fb\u66f4\u65b0\u3092\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\nNew Relic\n\u30b5\u30fc\u30d0\u76e3\u8996\u306f\u6700\u4f4e\u9650\u3042\u3063\u305f\u307b\u3046\u304c\u826f\u3044\u3068\u601d\u3046\u306e\u3067New Relic\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3082\u30b3\u30f3\u30c6\u30ca\u3092\u52d5\u304b\u3059\u3060\u3051\u306a\u306e\u3067\u7ba1\u7406\u30b3\u30b9\u30c8\u306f\u5c11\u306a\u3044\u3067\u3059\u3002\n\nDocker Registry\nDocker\u306e\u30a4\u30e1\u30fc\u30b8\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u9818\u57df\u306a\u3089Docker Hub\u3092\u4f7f\u3048\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u3044\u304f\u3089\u500b\u4eba\u306e\u30af\u30bd\u30b5\u30fc\u30d3\u30b9\u3068\u306f\u3044\u3048\u5168\u90e8\u304c\u5168\u90e8\u516c\u958b\u3067\u304d\u308b\u3082\u306e\u3067\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3057\u304b\u3057Docker Hub\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u304a\u91d1\u304c\u304b\u304b\u308b\u306e\u3067\u5c0f\u3055\u3044\u30b5\u30fc\u30d3\u30b9\u3092\u91cf\u7523\u3057\u3066\u3044\u304f\u5f62\u3060\u3068\u975e\u5e38\u306b\u304a\u91d1\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002AWS\u3084GCP\u304cDocker Registry\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u304c\u3001AWS CLI\u306a\u3069\u3092\u5165\u308c\u3066\u8a8d\u8a3c\u3059\u308b\u3053\u3068\u304c\u5fc5\u8981\u3067\u8907\u96d1\u306b\u306a\u308b\u305f\u3081\u5229\u7528\u3092\u8ae6\u3081\u307e\u3057\u305f\u3002\u305d\u306e\u305f\u3081\u5225\u9014 Docker Registry \u3092\u7acb\u3066\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001\u5916\u90e8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b Docker Registry \u3092\u7acb\u3066\u308b\u306b\u306f\u30d9\u30fc\u30b7\u30c3\u30af\u8a8d\u8a3c\u3092\u5165\u308c\u305f\u308aSSL\u8a3c\u660e\u66f8\u3092\u5c0e\u5165\u3057\u305f\u308a\u306e\u624b\u9593\u304c\u5fc5\u8981\u3067\uff08\u8abf\u3079\u308b\u306e\u304c\uff09\u3081\u3093\u3069\u304f\u3055\u304b\u3063\u305f\u306e\u3067\u3001S3\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u5171\u6709\u3057\u3066Push\u306f\u30ed\u30fc\u30ab\u30eb\u306e\u30de\u30b7\u30f3\u3067\u7acb\u3061\u4e0a\u3052\u305fDocker Registry\u304b\u3089\u3001Pull\u306fVPS\u4e0a\u3067\u7acb\u3061\u4e0a\u3052\u305fDocker Registry\u304b\u3089\u3001\u3068\u3044\u3046\u69cb\u6210\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u69cb\u6210\u306f\u6b63\u76f4\u3042\u307e\u308a\u30a4\u30b1\u3066\u306a\u3044\u306e\u3067\u4eca\u5f8c\u76f4\u3057\u305f\u3044\u3067\u3059\u3002CircleCI\u304b\u3089\u81ea\u52d5\u3067Push\u3059\u308b\u3068\u304b\u3082\u3067\u304d\u306a\u3044\u3067\u3059\u3057\u3002\u3061\u306a\u307f\u306bAWS\u3084GCP\u306b\u3059\u308b\u3068\u3001\u5404\u30b5\u30fc\u30d3\u30b9\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308bDocker Registry\u304c\u4f7f\u3048\u308b\u306e\u3067\u3053\u3093\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u8981\u3089\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u3068\u306f\u3044\u3048ConoHa\u3060\u30681500\u5186\u3067\u6e08\u3080\u30b5\u30fc\u30d0\u69cb\u6210\u304cRDS\u3060\u3051\u30672000\u5186\u3092\u8d85\u3048\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u305d\u306e\u30b3\u30b9\u30c8\u3068Docker Registry\u3092\u81ea\u524d\u3067\u7acb\u3066\u308b\u8907\u96d1\u3055\u306e\u3069\u3061\u3089\u304c\u826f\u3044\u304b\u3068\u3044\u3046\u9078\u629e\u3067\u3057\u305f\u3002\n\n\u74b0\u5883\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\n\u4ee5\u4e0a\u3092\u8e0f\u307e\u3048\u3066\u74b0\u5883\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\u3067\u3059\u3002\n\n1. CoreOS\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nVPS\u306bCoreOS\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\nConoHa\u306e\u30b5\u30fc\u30d0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u6642\u306e\u30e1\u30e2\u304c\u3053\u3061\u3089\u3002\nhttp://qiita.com/miyasakura_/items/4d81dc5fe6f9de0f0dd5\n\u57fa\u672c\u3068\u306a\u308b cloud-config.yml \u306f\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\u8a2d\u5b9a\u7b87\u6240\u3068\u3057\u3066\u306f\n\nnginx-proxy \u3068 letsencrypt-nginx-proxy-companion \u306e\u8a3c\u660e\u66f8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9\nnewrelic \u306e NEW_RELIC_LICENSE_KEY\ns3\u306eAPI\u306e\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3084\u30d0\u30b1\u30c3\u30c8\u306e\u60c5\u5831\n\n\u304c\u3042\u308a\u307e\u3059\u3002NewRelic\u3068S3\u306e\u30a2\u30af\u30bb\u30b9\u60c5\u5831\u306f\u3042\u3089\u304b\u3058\u3081\u6e96\u5099\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\ncloud-config.yml\n#cloud-config\n\nssh_authorized_keys:\n  - ssh-rsa AAAAB3Nza...(ssh\u3059\u308b\u6642\u306e\u516c\u958b\u9375)\n\ncoreos:\n  update:\n    reboot-strategy: best-effort\n  units:\n    - name: docker.service\n      command: start\n\n    - name: timezone.service\n      command: start\n      content: |\n        [Unit]\n        Description=timezone\n        [Service]\n        Type=oneshot\n        RemainAfterExit=yes\n        ExecStart=/usr/bin/ln -sf ../usr/share/zoneinfo/Japan /etc/localtime\n\n    - name: nginx-proxy.service\n      command: start\n      content: |\n        [Unit]\n        Description=nginx-proxy\n\n        [Service]\n        Type=simple\n        Restart=always\n        ExecStartPre=-/usr/bin/docker stop nginx-proxy\n        ExecStart=/usr/bin/docker run \\\n                    --rm \\\n                    --name=\"nginx-proxy\" \\\n                    -p 80:80 \\\n                    -p 443:443 \\\n                    -v /home/core/certs:/etc/nginx/certs:ro \\\n                    -v /etc/nginx/vhost.d \\\n                    -v /usr/share/nginx/html \\\n                    -v /var/run/docker.sock:/tmp/docker.sock \\\n                    jwilder/nginx-proxy\n        ExecStop=/usr/bin/docker stop nginx-proxy\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: letsencrypt.service\n      command: start\n      content: |\n        [Unit]\n        Description=letsencrypt\n        Requires=nginx-proxy.service\n        After=nginx-proxy.service\n\n        [Service]\n        Type=simple\n        Restart=always\n        ExecStartPre=-/usr/bin/docker stop letsencrypt\n        ExecStart=/usr/bin/docker run \\\n                    --rm \\\n                    --name=\"letsencrypt\" \\\n                    -v /home/core/certs:/etc/nginx/certs:rw \\\n                    --volumes-from nginx-proxy \\\n                    -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n                    jrcs/letsencrypt-nginx-proxy-companion\n        ExecStop=/usr/bin/docker stop letsencrypt\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: newrelic.service\n      command: start\n      content: |\n        [Unit]\n        Description=newrelic\n        Requires=docker.service\n        After=docker.service\n\n        [Service]\n        Restart=always\n        RestartSec=300\n        TimeoutStartSec=10m\n        ExecStartPre=-/usr/bin/docker stop newrelic\n        ExecStartPre=-/usr/bin/docker rm -f newrelic\n        ExecStartPre=-/usr/bin/docker pull uzyexe/newrelic:latest\n        ExecStart=/usr/bin/docker run \\\n                    --rm \\\n                    --name=\"newrelic\" \\\n                    --memory=\"64m\" \\\n                    --memory-swap=\"-1\" \\\n                    --net=\"host\" \\\n                    --pid=\"host\" \\\n                    --env=\"NEW_RELIC_LICENSE_KEY=\u30e9\u30a4\u30bb\u30f3\u30b9\u30ad\u30fc\" \\\n                    --volume=\"/var/run/docker.sock:/var/run/docker.sock:ro\" \\\n                    --volume=\"/sys/fs/cgroup/:/sys/fs/cgroup:ro\" \\\n                    --volume=\"/dev:/dev\" \\\n                    uzyexe/newrelic\n        ExecStop=/usr/bin/docker stop newrelic\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: docker-registry.service\n      command: start\n      content: |\n        [Unit]\n        Description=docker registry\n        Requires=docker.service\n        After=docker.service\n\n        [Service]\n        Restart=always\n        RestartSec=300\n        TimeoutStartSec=10m\n        ExecStart=/usr/bin/docker run \\\n                    --rm \\\n                    --name=\"docker-registry-service\" \\\n                    -p 5000:5000 \\\n                    -e REGISTRY_STORAGE_S3_ACCESSKEY=\u30a2\u30af\u30bb\u30b9\u30ad\u30fc \\\n                    -e REGISTRY_STORAGE_S3_SECRETKEY=\u30b7\u30fc\u30af\u30ec\u30c3\u30c8 \\\n                    -e REGISTRY_STORAGE_S3_BUCKET=\u30d0\u30b1\u30c3\u30c8 \\\n                    -e REGISTRY_STORAGE_S3_REGION=ap-northeast-1 \\\n                    -e REGISTRY_STORAGE_S3_ROOTDIRECTORY=/v2 \\\n                    -e REGISTRY_STORAGE=s3 \\\n                    registry:2.0\n        ExecStop=/usr/bin/docker stop docker-registry-service\n\n        [Install]\n        WantedBy=multi-user.target\n\n\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u7d42\u308f\u3063\u305f\u3089\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u5404\u30b5\u30fc\u30d3\u30b9\u304c running \u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\nsystemctl list-units --type=service \n\n\n2. Docker\u306e\u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\n\u65b0\u3057\u3044\u30a2\u30d7\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u305f\u3073\u306b nginx \u3084 ruby \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u306f\u5927\u5909\u306a\u306e\u3067\u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u3063\u3066\u304a\u304d\u307e\u3059\u3002\nDocker\u306f\u30ed\u30fc\u30ab\u30eb\u30de\u30b7\u30f3\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\u4eca\u56de\u306fRails+nginx\u306e\u69cb\u6210\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306a Dockerfile \u3092\u6e96\u5099\u3002\u3053\u306eDockerfile\u306fnginx\u3092apt\u3067\u5165\u308c\u308b\u306a\u3069\u306e\u697d\u3092\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306enginx\u304c\u5165\u3063\u3066\u3057\u307e\u3046\u70b9\u306f\u6539\u5584\u306e\u4f59\u5730\u3042\u308a\u3067\u3059\u3002\nFROM ruby:2.3.0\n\nRUN apt-get update\nRUN apt-get install -y nodejs nginx supervisor\nRUN apt-get install -y libssl-dev\n\n# forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n        && ln -sf /dev/stderr /var/log/nginx/error.log\n\nRUN gem update --system\n\nCMD [\"bash\", \"-l\", \"-c\"]\n\n\u30d3\u30eb\u30c9\u3057\u307e\u3059\n$ docker build --no-cache -t localhost:5000/base-image .\n\nDocker Registry\u3092\u7acb\u3061\u4e0a\u3052\u3066Push\u3057\u307e\u3059\u3002\n$ docker run -d \\\n      --name=\"docker-registry\" \\\n      -p 5000:5000 \\\n      -e REGISTRY_STORAGE_S3_ACCESSKEY= \\\n      -e REGISTRY_STORAGE_S3_SECRETKEY= \\\n      -e REGISTRY_STORAGE_S3_BUCKET= \\\n      -e REGISTRY_STORAGE_S3_REGION=ap-northeast-1 \\\n      -e REGISTRY_STORAGE_S3_ROOTDIRECTORY=/v2 \\\n      -e REGISTRY_STORAGE=s3 \\\n      registry:2.0\n$ docker push localhost:5000/base-image\n\n\u3053\u308c\u3067\u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u306e\u4f5c\u6210\u304c\u5b8c\u4e86\u3067\u3059\u3002\n\n3. Rails\u30a2\u30d7\u30ea\u306eDocker\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\n\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u3092\u7acb\u3061\u4e0a\u3052\u308b\u306e\u3067\u3042\u308c\u3070Process\u5f0f\u306e\u3082\u306e\u3088\u308aThread\u5f0f\u306e\u304c\u826f\u3044\u304b\u306a\u3068\u601d\u3063\u3066\u306a\u3093\u3068\u306a\u304fPuma\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u30a2\u30d7\u30ea\u81ea\u4f53\u306f\u666e\u901a\u306b\u4f5c\u308b\u3060\u3051\u306a\u306e\u3067\u3059\u304c\u3001Docker\u3092\u4f7f\u3046\u306b\u3042\u305f\u3063\u3066\u3044\u304f\u3064\u304b\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30ed\u30b0\u306f\u6a19\u6e96\u51fa\u529b\u306b\nDocker\u3067\u306f\u57fa\u672c\u6a19\u6e96\u51fa\u529b\u306b\u30ed\u30b0\u3092\u51fa\u3059\u3053\u3068\u3067\u7c21\u5358\u306b\u30ed\u30b0\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3082\u3063\u3068\u826f\u3044\u65b9\u6cd5\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n\nconfig/environments/production.rb\u2028\n...\nconfig.logger = Logger.new(STDOUT)\n...\n\n\n\nDB\u306a\u3069\u306e\u60c5\u5831\u306f\u74b0\u5883\u5909\u6570\u3092\u898b\u308b\u3088\u3046\u306b\n\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u3066\u307e\u3059\u3002Production\u3060\u3051\u3067\u3082\u826f\u3044\u308f\u3051\u3067\u3059\u304c\u305d\u3053\u306f\u74b0\u5883\u306b\u5fdc\u3058\u3066\u3002\n\ndatabase.yml\ndefault: &default\n  adapter: mysql2\n  encoding: utf8\n  reconnect: false\n  pool: 5\n  host:     <%= ENV['RAILS_DATABASE_HOST'] %>\n  username: <%= ENV['RAILS_DATABASE_USER'] %>\n  password: <%= ENV['RAILS_DATABASE_PASSWORD'] %>\n  database: <%= ENV['RAILS_DATABASE'] %>\n\ndevelopment:\n  <<: *default\n\ntest:\n  <<: *default\n\nproduction:\n  <<: *default\n\n\n\nDockerfile\u306a\u3069\u306e\u8a2d\u5b9a\n\u4e0a\u8a18\u3092\u8e0f\u307e\u3048\u3066Dockerfile\u3068nginx.conf\u3068supervisord.conf\u304c\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u3002\nPuma\u3082nginx\u306e\u8a2d\u5b9a\u3068\u5408\u308f\u305b\u3066\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u5fc5\u8981\u306a\u306e\u3067\u3046\u307e\u3044\u3053\u3068\u3084\u308a\u307e\u3059\u3002\nFROM localhost:5000/base-image\n\nENV APP_HOME /webapp\nWORKDIR $APP_HOME\n\nADD Gemfile* $APP_HOME/\nRUN bundle install --without test development\nRUN cat Gemfile.lock\n\nADD . $APP_HOME\nRUN bundle exec rake assets:precompile\n\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nCOPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\nEXPOSE 80\nCMD [\"/usr/bin/supervisord\"]\n\n\ndocker/nginx.conf\nhttp {\n  upstream puma {\n    server unix:/webapp/tmp/sockets/puma.socket;\n  }\n\n  server {\n    listen  80;\n\n    location /assets {\n      root /webapp/public;\n    }\n\n    location / {\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header Host $host;\n      proxy_redirect off;\n      proxy_pass http://puma;\n    }\n  }\n\n  error_log stderr;\n  access_log /dev/stdout;\n\n  include       mime.types;\n  default_type  application/octet-stream;\n    gzip  on;\n    gzip_http_version 1.0;\n    gzip_disable \"msie6\";\n    gzip_vary on;\n    gzip_proxied any;\n    gzip_min_length 1024;\n    gzip_comp_level 1;\n    gzip_types text/plain\n        text/css\n        text/xml\n        application/json\n        application/javascript\n        application/x-javascript\n        application/xml\n        application/xml+rss\n        ;\n    open_file_cache max=1000 inactive=20s;\n    open_file_cache_valid 30s;\n    open_file_cache_min_uses 2;\n    open_file_cache_errors on;\n}\n\npid /var/run/nginx.pid;\nworker_processes 2;\nevents {\n    worker_connections  1024;\n    # multi_accept on;\n}\n\n\n\ndocker/supervisord.conf\n[supervisord]\nnodaemon=true\n\n[program:nginx]\ncommand=/usr/sbin/nginx -g \"daemon off;\"\nautostart=true\nautorestart=true\nstdout_logfile=/dev/stdout\nstdout_logfile_maxbytes=0\nstderr_logfile=/dev/stderr\nstderr_logfile_maxbytes=0\n\n[program:puma]\ncommand=bundle exec puma -C config/puma.rb\ndirectory=/webapp\nautostart=true\nautorestart=true\nstdout_logfile=/dev/stdout\nstdout_logfile_maxbytes=0\nstderr_logfile=/dev/stderr\nstderr_logfile_maxbytes=0\n\n\n\nconfig/puma.rb\n\n# Start Puma with next command:\n# RAILS_ENV=production bundle exec puma -C ./config/puma.rb\n\n# uncomment and customize to run in non-root path\n# note that config/puma.yml web path should also be changed\napplication_path = \"#{File.expand_path(\"../..\", __FILE__)}\"\n\n# The directory to operate out of.\n#\n# The default is the current directory.\n#\ndirectory application_path\n\n# Set the environment in which the rack's app will run.\n#\n# The default is \u201cdevelopment\u201d.\n#\nenvironment 'production'\n\n# Daemonize the server into the background. Highly suggest that\n# this be combined with \u201cpidfile\u201d and \u201cstdout_redirect\u201d.\n#\n# The default is \u201cfalse\u201d.\n#\ndaemonize false\n\n# Store the pid of the server in the file at \u201cpath\u201d.\n#\npidfile \"#{application_path}/tmp/pids/puma.pid\"\n\n# Use \u201cpath\u201d as the file to store the server info state. This is\n# used by \u201cpumactl\u201d to query and control the server.\n#\nstate_path \"#{application_path}/tmp/pids/puma.state\"\n\n# Redirect STDOUT and STDERR to files specified. The 3rd parameter\n# (\u201cappend\u201d) specifies whether the output is appended, the default is\n# \u201cfalse\u201d.\n#\n# stdout_redirect \"#{application_path}/log/puma.stdout.log\", \"#{application_path}/log/puma.stderr.log\"\n# stdout_redirect '/u/apps/lolcat/log/stdout', '/u/apps/lolcat/log/stderr', true\n\n# Disable request logging.\n#\n# The default is \u201cfalse\u201d.\n#\n# quiet\n\n# Configure \u201cmin\u201d to be the minimum number of threads to use to answer\n# requests and \u201cmax\u201d the maximum.\n#\n# The default is \u201c0, 16\u201d.\n#\n# threads 0, 16\n\n# Bind the server to \u201curl\u201d. \u201ctcp://\u201d, \u201cunix://\u201d and \u201cssl://\u201d are the only\n# accepted protocols.\n#\n# The default is \u201ctcp://0.0.0.0:9292\u201d.\n#\n# bind 'tcp://0.0.0.0:9292'\nbind \"unix://#{application_path}/tmp/sockets/puma.socket\"\n\n# Instead of \u201cbind 'ssl://127.0.0.1:9292?key=path_to_key&cert=path_to_cert'\u201d you\n# can also use the \u201cssl_bind\u201d option.\n#\n# ssl_bind '127.0.0.1', '9292', { key: path_to_key, cert: path_to_cert }\n\n# Code to run before doing a restart. This code should\n# close log files, database connections, etc.\n#\n# This can be called multiple times to add code each time.\n#\n# on_restart do\n#   puts 'On restart...'\n# end\n\n# Command to use to restart puma. This should be just how to\n# load puma itself (ie. 'ruby -Ilib bin/puma'), not the arguments\n# to puma, as those are the same as the original process.\n#\n# restart_command '/u/app/lolcat/bin/restart_puma'\n\n# === Puma control rack application ===\n\n# Start the puma control rack application on \u201curl\u201d. This application can\n# be communicated with to control the main server. Additionally, you can\n# provide an authentication token, so all requests to the control server\n# will need to include that token as a query parameter. This allows for\n# simple authentication.\n#\n# Check out https://github.com/puma/puma/blob/master/lib/puma/app/status.rb\n# to see what the app has available.\n#\n# activate_control_app 'unix:///var/run/pumactl.sock'\n# activate_control_app 'unix:///var/run/pumactl.sock', { auth_token: '12345' }\n# activate_control_app 'unix:///var/run/pumactl.sock', { no_token: true }\n\n\n\n\n\n\u30d3\u30eb\u30c9\u3057\u3066Push\u3057\u307e\u3059\u3002\n$ docker build -t localhost:5000/hoge-project .\n$ docker push localhost:5000/hoge-project //docker registry\u306f\u7acb\u3061\u4e0a\u3052\u3066\u3042\u308b\u524d\u63d0\n\n\n4. \u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u306e\u8a2d\u5b9a\nnginx-proxy\u306fVIRTUAL HOST\u3067\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u8a2d\u5b9a\u3059\u308b\u306e\u3067\u304a\u4f7f\u3044\u306e\u30cd\u30fc\u30e0\u30b5\u30fc\u30d0\u3067\u4eca\u56de\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3059\u308b\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n5. CoreOS\u5074\u3067\u30b3\u30f3\u30c6\u30ca\u306e\u7acb\u3061\u4e0a\u3052\n\n5.1 \u8a2d\u5b9a\u3092 cloud-config.yml \u306b\u8ffd\u8a18\n\u66f8\u304d\u65b9\u306f systemd \u306e\u30d8\u30eb\u30d7\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nVIRTUAL_HOST \u306f nginx-proxy \u306e\u305f\u3081\u306e\u8a2d\u5b9a\u3001 LETSUENCRYPT_* \u306fSSL\u8a3c\u660e\u66f8\u306e\u767a\u884c\u306e\u305f\u3081\u3001RAILS_*\u306frails\u7528\u306e\u74b0\u5883\u5909\u6570\u306a\u306e\u3067\u74b0\u5883\u306b\u5fdc\u3058\u3066\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nDB\u306fConoHa\u306e\u5834\u5408\u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\ncloud-config.yml\n\n...\n    - name: hoge.service\n      enable: true\n      content: |\n        [Unit]\n        Description=hoge\n        Requires=docker-registry.service\n        After=docker-registry.serivce\n\n        [Service]\n        Type=simple\n        Restart=always\n        ExecStartPre=-/usr/bin/docker stop hoge\n        ExecStartPre=-/usr/bin/docker rm hoge\n        ExecStart=/usr/bin/docker run \\\n                    --rm \\\n                    --name=\"hoge\" \\\n                    -e \"VIRTUAL_HOST=hoge.mydomain.com\" \\\n                    -e \"LETSENCRYPT_HOST=hoge.mydomain.com\" \\\n                    -e \"LETSENCRYPT_EMAIL=hoge@mydomain.com\" \\\n                    -e \"TZ=Asia/Tokyo\" \\\n                    -e \"RAILS_ENV=production\" \\\n                    -e \"RAILS_DATABASE_USER=\" \\\n                    -e \"RAILS_DATABASE_PASSWORD=\" \\\n                    -e \"RAILS_DATABASE_HOST=\" \\\n                    -e \"RAILS_DATABASE=\" \\\n                    -e \"SECRET_KEY_BASE=\" \\\n                    localhost:5000/hoge-project\n        ExecStop=/usr/bin/docker stop hoge\n\n        [Install]\n        WantedBy=multi-user.target\n...\n\n\n\n\n\n5.2 cloud-config.yml\u3092\u8aad\u307f\u8fbc\u307f\nsudo coreos-cloudinit -from-file=cloud-config.yml\nsudo cp cloud-config.yml /var/lib/coreos-install/user_data\n\n\n5.3 \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\n\uff08\u6700\u521d\u3053\u306e\u624b\u9806\u304c\u629c\u3051\u3066\u307e\u3057\u305f\uff09\n$ /usr/bin/docker run --rm \\\n    -e \"RAILS_ENV=production\" \\\n    -e \"RAILS_DATABASE_USER=hoge\" \\\n    -e \"RAILS_DATABASE_PASSWORD=hoge\" \\\n    -e \"RAILS_DATABASE_HOST=hoge.host\" \\\n    -e \"RAILS_DATABASE=hoge\" \\\n    -e \"SECRET_KEY_BASE=\" \\\n    localhost:5000/hoge bundle exec rake db:migrate\n\n\u3061\u3087\u3063\u3068\u9577\u304f\u3066\u9762\u5012\u3067\u3059\u304c cloud-config.yml \u3068\u540c\u3058\u5185\u5bb9\u306a\u306e\u3067\u30b3\u30d4\u30da\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u8a31\u5bb9\u7bc4\u56f2\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u8fba\u306f\u597d\u307f\u306b\u5fdc\u3058\u3066\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u30e9\u30c3\u30d7\u3057\u305f\u308a\u3001\u305d\u3082\u305d\u3082docker-build\u306e\u6642\u70b9\u3067\u74b0\u5883\u5909\u6570\u5165\u308c\u3066\u3057\u307e\u3046\u306a\u3069\u3067\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\n5.4 \u30b5\u30fc\u30d3\u30b9\u306e\u8d77\u52d5\n$ sudo systemctl start hoge.service\n$ sudo systemctl status hoge.service\n\n\u3046\u307e\u304f\u7acb\u3061\u4e0a\u304c\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u3089\u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u3066\u5bfe\u5fdc\u3057\u307e\u3059\n$ journalctl -fu hoge\n\n\u4ee5\u4e0a\u3067\u3001\u30b5\u30fc\u30d3\u30b9\u30a4\u30f3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u306e\u72b6\u614b\u3067\u653e\u7f6e\u3057\u3066\u304a\u304f\u30681\u6642\u9593\u306b1\u56de\u3001SSL\u306e\u8a3c\u660e\u66f8\u306e\u66f4\u65b0\u304c\u884c\u308f\u308c\u308b\u306e\u3067https\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u66f4\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u8ffd\u52a0\u3059\u308b\n\u4e0a\u8a183\u301c5\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\n\n\u4e00\u5b9a\u6642\u9593\u3054\u3068\u306b\u5b9f\u884c\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\ncron\u7684\u306a\u3082\u306e\u3082 systemd \u3067\u5b9f\u73fe\u3067\u304d\u308b\u306e\u3067 cloud-config.yml \u306b\u66f8\u304d\u307e\u3059\u3002\noneshot\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u5b9a\u7fa9\u3057\u3066timer\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n    - name: sample-job.service\n      content: |\n        [Unit]\n        Description=sample-job\n        Requires=docker-registry.service\n        After=docker-registry.serivce\n        [Service]\n        Type=oneshot\n        ExecStart=/usr/bin/docker run \\\n                    --rm \\\n                    -e \"TZ=Asia/Tokyo\" \\\n                    localhost:5000/sample-job\n    - name: sample-job.timer\n      command: start\n      content: |\n        [Unit]\n        Description=Run sample-job\n        [Timer]\n        OnCalendar=*:*\n\n\u78ba\u8a8d\u306fsystemctl\u3092\u4f7f\u3046\u3002\nsystemctl list-timers\n\n\n\u30b9\u30b1\u30fc\u30eb\u6226\u7565\n\u79c1\u306e\u74b0\u5883\u306f\u307e\u3060\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u3088\u3046\u306a\u72b6\u6cc1\u306b\u306f\u306a\u3063\u3066\u306a\u3044\u3067\u3059\u304c\u3001\u3082\u3057\u30e6\u30fc\u30b6\u6570\u304c\u5897\u3048\u305f\u6642\u306b\u305d\u308c\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u3068\u3044\u3046\u306e\u306f\u91cd\u8981\u3067\u3059\u3088\u306d\u3002\n\u4eca\u56deDocker\u30b3\u30f3\u30c6\u30ca\u306f\u307b\u307c\u72ec\u7acb\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30a2\u30af\u30bb\u30b9\u304c\u5897\u3048\u3066\u304d\u305f\u3089\u30b5\u30fc\u30d0\u3092\u5897\u3084\u3057\u3066\u8a72\u5f53\u306e\u30b5\u30fc\u30d3\u30b9\u3060\u3051\u5207\u308a\u51fa\u3057\u305f cloud-config.yml \u3092\u5229\u7528\u3057\u3066\u7c21\u5358\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001LB\u3092\u8ffd\u52a0\u3057\u3066\u8907\u6570\u306e\u30b5\u30fc\u30d0\u306b\u8ca0\u8377\u5206\u6563\u3059\u308b\u3053\u3068\u3082\u5bb9\u6613\u3067\u3059\u3002\n\u305d\u308c\u3067\u3082\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u6c17\u306b\u306a\u3063\u3066\u304d\u305f\u3089\u3001AWS\u306a\u3069\u306e\u4ed6\u306e\u30af\u30e9\u30a6\u30c9\u306b\u79fb\u3059\u3053\u3068\u3092\u8003\u3048\u308b\u3068\u3057\u3066\u3082Docker\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u6301\u3063\u3066\u3044\u304f\u3053\u3068\u306f\u5927\u3057\u305f\u4f5c\u696d\u306b\u306f\u306a\u3089\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u57fa\u672c\u7684\u306a\u6c4e\u7528\u6280\u8853\u3057\u304b\u4f7f\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u305d\u306e\u6642\u3005\u306b\u5fdc\u3058\u305f\u6700\u9069\u306a\u74b0\u5883\u306b\u6301\u3063\u3066\u3044\u3051\u308b\u306f\u305a\u3067\u3059\u3002\uff08DB\u306e\u30c7\u30fc\u30bf\u306e\u79fb\u884c\u306f\u5fc5\u8981\u3067\u3059\u3051\u3069\u306d!\uff09\n\n\u307e\u3068\u3081\n\u4ee5\u4e0a\u3001Docker\u3092\u4f7f\u3063\u3066\u306e\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u969b\u306e\u30de\u30a4\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3067\u3057\u305f\u3002\n\u4e00\u898b\u8907\u96d1\u306a\u6c17\u3082\u3057\u307e\u3059\u304c\u3001\u30b5\u30fc\u30d0\u306e\u72b6\u614b\u306f cloud-config.yml \u3060\u3051\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3044\u3046\u4f7f\u3044\u65b9\u3092\u3059\u308b\u3068 cloud-config.yml \u304c\u975e\u5e38\u306b\u7e26\u9577\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001\u500b\u4eba\u7684\u306b\u306f\u8907\u6570\u306b\u308f\u304b\u308c\u3066\u308b\u3088\u308a\u7ba1\u7406\u3057\u3084\u3059\u304f\u3066\u597d\u304d\u3067\u3059\u3002\n\u5404\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u5b9a\u3082\u307b\u307c\u5b9a\u5f62\u306e Dockerfile, nginx.conf, supervisord \u3092\u7f6e\u3044\u3066\u304a\u3044\u3066 docker build \u3092\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u5b9f\u969b\u306e\u904b\u7528\u306f\n\n\u30ed\u30fc\u30ab\u30eb\u30de\u30b7\u30f3\u3067\u306e\u30d3\u30eb\u30c9\u3001\u30d7\u30c3\u30b7\u30e5\nCoreOS\u4e0a\u3067\u306ecloud-config.yml\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\n\n\u8fba\u308a\u306f\u7c21\u5358\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u8aac\u660e\u3057\u305f\u3082\u306e\u3092\u306a\u3093\u3068\u306a\u304fGitHub\u306b\u307e\u3068\u3081\u3066\u304a\u304d\u307e\u3057\u305f\u3002\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4e00\u90e8\u3057\u304b\u66f8\u304b\u308c\u3066\u306a\u304f\u3066\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/miyasakura/my-docker-sample\n\n\u304a\u308f\u308a\u306b\n\u3053\u308c\u3092\u8aad\u3093\u3067\u3001CoreOS\u3058\u3083\u306a\u304f\u3066\u3082Docker\u3068systemd\u304c\u5165\u3063\u3066\u308c\u3070\u3044\u3044\u3058\u3083\u3093\u3068\u304b\u3001\u7d20\u76f4\u306bAWS\u4f7f\u3048\u3070\u3044\u3044\u3058\u3083\u3093\u3068\u304b\u8272\u3005\u610f\u898b\u306f\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3057\u3001\u79c1\u3082\u3053\u306e\u74b0\u5883\u3067\u306e\u904b\u7528\u306f\u9577\u304f\u306f\u306a\u3044\u306e\u3067\u554f\u984c\u306f\u8272\u3005\u51fa\u3066\u304f\u308b\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\u305c\u3072\u307f\u306a\u3055\u3093\u304c\u8003\u3048\u308b\u30d9\u30b9\u30c8\u306a\u30b7\u30b9\u30c6\u30e0\u69cb\u6210\u3092\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n# \u306f\u3058\u3081\u306b\n\n\u30a8\u30f3\u30b8\u30cb\u30a2\u3084\u3063\u3066\u3044\u308b\u3068\u8272\u3093\u306a\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308a\u305f\u304f\u306a\u308b\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001Heroku\u306e\u30d5\u30ea\u30fc\u30d7\u30e9\u30f3\u304c\u4f7f\u3048\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u5f71\u97ff\u3067\u7121\u6599\u3067\u306e\u30b5\u30fc\u30d3\u30b9\u904b\u55b6\u306f\u96e3\u3057\u304f\u306a\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\n\u3082\u3061\u308d\u3093\u3001Google App Engine\u306a\u3069\u7121\u6599\u3067\u904b\u7528\u3067\u304d\u308b\u3082\u306e\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u30b5\u30fc\u30d3\u30b9\u306b\u30ed\u30c3\u30af\u30a4\u30f3\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u304c\u591a\u304f\u3061\u3087\u3046\u3069\u826f\u3044\u7269\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308b\u7a0b\u5ea6\u5b89\u304f\u8272\u3005\u3084\u308d\u3046\u3068\u3059\u308b\u3068\u30011\u53f0\u306e\u30b5\u30fc\u30d0\u3067\u3044\u3044\u611f\u3058\u306b\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3068\u3044\u3046\u6614\u306a\u304c\u3089\u306e\u69cb\u6210\u306b\u306a\u308b\u306e\u3067\u3059\u304c\u3001Docker\u3092\u4f7f\u3046\u3053\u3068\u3067\u74b0\u5883\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306a\u3069\u30b5\u30fc\u30d0\u7ba1\u7406\u306e\u624b\u9593\u3092\u6700\u5c0f\u9650\u306b\u3057\u3066\u3044\u3053\u3046\u3001\u3068\u3044\u3046\u306e\u304c\u3053\u306e\u8a18\u4e8b\u306e\u8da3\u65e8\u3068\u306a\u308a\u307e\u3059\u3002\n\n# \u65b9\u91dd\n\n\u8981\u4ef6\n\n- **\u5b89\u3044**\n- \u30b5\u30fc\u30d3\u30b9\u306b\u30ed\u30c3\u30af\u30a4\u30f3\u3055\u308c\u306a\u3044\n- \u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\uff08\u3082\u3057\u30b5\u30fc\u30d3\u30b9\u306e\u30a2\u30af\u30bb\u30b9\u91cf\u304c\u5897\u3048\u305f\u3068\u3057\u3066\u30b9\u30b1\u30fc\u30eb\u3055\u305b\u3089\u308c\u308b\uff09\n- \u30a4\u30f3\u30d5\u30e9\u7ba1\u7406\u304c\u5bb9\u6613\n  - \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3068\u304b\u306a\u308b\u3079\u304f\u6c17\u306b\u3057\u305f\u304f\u306a\u3044\n\n\u4ee5\u4e0a\u306e\u3053\u3068\u3092\u8e0f\u307e\u3048\u305f\u7d50\u679cConoHa\u306eVPS\u3092\u4f7f\u3046\u69cb\u6210\u3068\u306a\u308a\u307e\u3057\u305f\u3002\u8cbb\u7528\u3068\u3057\u3066\u306f\u3001\n\n- \u30c9\u30e1\u30a4\u30f31\u3064(4000\u5186/year)\n- \u30b5\u30fc\u30d01\u53f0(900\u5186/month)\n- RDB1\u53f0\uff08500\u5186/month\uff09\n- S3 (\u6570\u5341\u5186/month)\n\n\u3068\u3044\u3046\u69cb\u6210\u3067\u67082000\u5186\u4ee5\u4e0b\u306b\u6291\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n## \u691c\u8a0e\u3057\u305f\u3053\u3068\n\nPaaS\u3068\u304b\u8003\u3048\u305f\u306e\u3067\u3059\u304c\u7d50\u5c40VPS\u304c\u4e00\u756a\u5b89\u3044\u3088\u306d\u3068\u3044\u3046\u8a71\u3002\n\n### \u691c\u8a0e1 \u81ea\u5b85\u30b5\u30fc\u30d0\n\n\u30c7\u30fc\u30bf\u6d88\u3048\u306a\u3044\u3088\u3046\u306a\u4ed5\u7d44\u307f\u3065\u304f\u308a\u3068\u304b\u305d\u3046\u3044\u3046\u3068\u3053\u308d\u306b\u6642\u9593\u3092\u4f7f\u3046\u6642\u4ee3\u3058\u3083\u306a\u304f\u306a\u3063\u3066\u304d\u3066\u308b\u306e\u3067\u81ea\u5206\u306e\u4e2d\u3067\u306f\u3053\u308c\u306f\u7121\u3044\u304b\u306a\u3002\n\n### \u691c\u8a0e2 PaaS\n\nHeroku\u306fFree\u30d7\u30e9\u30f3\u3067\u3067\u304d\u308b\u3053\u3068\u304c\u5c11\u306a\u304f\u306a\u3063\u305f\u306e\u3067\u4ed6\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u63a2\u3057\u307e\u3057\u305f\u304c\u3001\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u3092\u7121\u6599\u306b\u8fd1\u3044\u91d1\u984d\u3067\u3067\u304d\u308b\u306e\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002OpenShift\u3068\u304b\u306f\u8907\u6570\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u308c\u3070\u3067\u304d\u308b\u3093\u3060\u308d\u3046\u3051\u3069\u305d\u306e\u7ba1\u7406\u304c\u3081\u3093\u3069\u304f\u3055\u3044\u3002\u8abf\u3079\u305f\u6642\u306f\u898b\u3064\u3051\u3089\u308c\u306a\u304b\u3063\u305f\u3051\u3069IBM Bluemix\u306f\u7121\u6599\u67a0\u591a\u3044\u306e\u3067\u3082\u3057\u304b\u3057\u305f\u3089\u7d50\u69cb\u826f\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n### \u691c\u8a0e3 AWS\u3001GCP\u306a\u3069\n\n\u4fa1\u683c\u304c\u9ad8\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3084\u3081\u307e\u3057\u305f\u3002\n\n\u7279\u306bDB\u30b5\u30fc\u30d0\u306e\u7ba1\u7406\u3092\u3057\u305f\u304f\u306a\u3044\u306e\u3067\u30de\u30cd\u30fc\u30b8\u30c9\u578b\u306eRDB\u304c\u6b32\u3057\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30b3\u30b9\u30c8\u304c\u5927\u5206\u9ad8\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u611f\u3058\u3067\u3057\u305f\u3002NoSQL\u7cfb\u306f\u5b89\u3044\u306e\u3067\u3059\u304c\u4f7f\u3044\u305f\u304f\u306a\u304b\u3063\u305f\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\n\uff03\u3061\u306a\u307f\u306bAmazon\u3068Google\u306f\u8abf\u3079\u305f\u306e\u3067\u3059\u304c\u4ed6\u306f\u8abf\u3079\u3066\u306a\u3044\u306e\u3067\u3082\u3063\u3068\u826f\u3044\u306e\u304c\u3042\u308b\u304b\u3082\n\n### \u691c\u8a0e4 VPS\u3092\u4f7f\u3046\n\n\u7d50\u5c40\u5b89\u304f\u904b\u7528\u3059\u308b\u306a\u3089VPS\u3060\u306a\u3068\u3044\u3046\u7d50\u8ad6\u306b\u3002\u30de\u30cd\u30fc\u30b8\u30c9\u578b\u306eRDB\u30b5\u30fc\u30d3\u30b9\u306b\u3064\u3044\u3066\u306f\u3001ConoHa\u30af\u30e9\u30a6\u30c9\u304cDB\u30b5\u30fc\u30d0\u3092500\u5186\u3068\u3044\u3046\u683c\u5b89\u6599\u91d1\u3067\u63d0\u4f9b\u3057\u3066\u3044\u3066\u3001LB\u306a\u3069\u3082\u8ffd\u52a0\u3067\u304d\u308bIaaS\u7684\u306a\u30b5\u30fc\u30d3\u30b9\u3067\u3061\u3087\u3046\u3069\u81ea\u5206\u306e\u8981\u671b\u3092\u6e80\u305f\u3059\u3053\u3068\u304c\u3067\u304d\u305f\u306e\u3067\u3053\u3061\u3089\u306b\u3057\u307e\u3057\u305f\u3002DB\u304cMariaDB\u3060\u3063\u305f\u308a\u304a\u305d\u3089\u304f\u591a\u304f\u306e\u30e6\u30fc\u30b6\u3067\u5171\u6709\u3057\u3066\u3044\u308b\u306e\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u671f\u5f85\u3067\u304d\u306a\u3044\u306a\u3069\u306e\u554f\u984c\u304c\u6c17\u306b\u306a\u3089\u306a\u3051\u308c\u3070\u3053\u308c\u3067\u826f\u3055\u305d\u3046\u3002\n\n\u81ea\u5206\u306e\u4e2d\u3067\u306fDB\u30b5\u30fc\u30d3\u30b9\u306e\u3042\u308bVPS\u304c\u7121\u304b\u3063\u305f\u3089\u305f\u3076\u3093AWS\u4e0a\u3067EC2+RDS\u306e\u69cb\u6210\u306b\u3057\u3066\u3044\u305f\u3068\u601d\u3044\u307e\u3059\u304c\uff08\u305d\u306e\u304f\u3089\u3044DB\u306e\u7ba1\u7406\u3092\u3057\u305f\u304f\u306a\u3044\uff09\u3001\u81ea\u5206\u3067DB\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u308b\u306e\u3067\u3042\u308c\u3070\u3069\u3053\u306eVPS\u3067\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u69cb\u6210\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3053\u3093\u306a\u69cb\u6210\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30b5\u30fc\u30d0\u306e\u69cb\u6210\u7ba1\u7406\u306f1\u30d5\u30a1\u30a4\u30eb\u3067\u5b8c\u7d50\u3057\u307e\u3059\u3002Docker\u306e\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\u3082Dockerfile\u3068nginx,supervisord\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u3067\u7c21\u5358\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u3066\u3001\u5fc5\u8981\u306a\u7ba1\u7406\u306f\u305d\u308c\u3060\u3051\u306a\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002\n\n![\u69cb\u6210\u56f3.png](https://qiita-image-store.s3.amazonaws.com/0/82022/85a8acbe-1348-10b4-7884-4e65470932e3.png \"\u69cb\u6210\u56f3.png\")\n\n\n\u9806\u306b\u69cb\u6210\u8981\u7d20\u3092\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n## CoreOS\n\nDocker\u3060\u3051\u3042\u308c\u3070\u826f\u3044\u306e\u3067CoreOS\u306b\u3057\u307e\u3057\u305f\u3002CoreOS\u306e\u672c\u8cea\u306f\u5206\u6563\u30b7\u30b9\u30c6\u30e0\u3092\u5bb9\u6613\u306b\u69cb\u7bc9\u3067\u304d\u308b\u3068\u3053\u308d\u3060\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\n\n- \u5fc5\u8981\u5341\u5206\u306a\u6a5f\u80fd\u3092\u3082\u3064OS\n- \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u5c11\u306a\u304f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ea\u30b9\u30af\u304c\u5c11\u306a\u3044\n- \u81ea\u52d5\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u4ed5\u7d44\u307f\n- \u69cb\u6210\u3092 cloud-config.yml \u306e1\u30d5\u30a1\u30a4\u30eb\u3067\u7ba1\u7406\u3067\u304d\u308b\n\n\u3068\u3044\u3046\u70b9\u3067\u3053\u308c\u3057\u304b\u306a\u3044\u306a\u3068\u601d\u3063\u3066\u9078\u3073\u307e\u3057\u305f\u3002\n\n\u7279\u306b cloud-config.yml \u3067\u30b5\u30fc\u30d3\u30b9\u306e\u7acb\u3061\u4e0a\u3052\u306a\u3069\u304c\u7ba1\u7406\u3067\u304d\u308b\u305f\u3081\u3001\u305d\u306e1\u30d5\u30a1\u30a4\u30eb\u3060\u3051 Dropbox \u306b\u3044\u308c\u3066\u304a\u3051\u3070\u30d5\u30a1\u30a4\u30eb\u306e\u7ba1\u7406\u3068\u3057\u3066\u306f\u5341\u5206\u3067\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u3082\u5fc5\u8981\u3068\u305b\u305a\u306b\u69cb\u6210\u306e\u7ba1\u7406\u304c\u3067\u304d\u3066\u3057\u307e\u3046\u306e\u304c\u500b\u4eba\u7684\u306b\u306f\u6c17\u306b\u5165\u308a\u307e\u3057\u305f\u3002\n\n\n## \u30b5\u30fc\u30d3\u30b9\u306eDocker\u30a4\u30e1\u30fc\u30b8\n\nDocker\u306e\u8003\u3048\u65b9\u7684\u306b\u306f\u304a\u305d\u3089\u304f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3068nginx\u306f\u5225\u30b3\u30f3\u30c6\u30ca\u306b\u3059\u308b\u3079\u304d\u306a\u306e\u3067\u3059\u304c\u3001nginx\u3068rails\u3092\u5225\u30b3\u30f3\u30c6\u30ca\u3067\u7ba1\u7406\u3059\u308b\u30b3\u30b9\u30c8\u304c\u9ad8\u3044\u306e\u3067\u30b7\u30f3\u30d7\u30eb\u3055\u3068\u3044\u3046\u70b9\u3067\u907f\u3051\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u305d\u306e\u305f\u3081 supervisord \u3067 nginx \u3068 rails \u3092\u7acb\u3061\u4e0a\u3052\u308b\u3088\u3046\u306a\u69cb\u6210\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\ndocker-compose\u3092\u4f7f\u3046\u3068\u3044\u3046\u3053\u3068\u3082\u8003\u3048\u307e\u3057\u305f\u304cCoreOS\u306b\u5165\u3063\u3066\u3044\u306a\u3044\u306e\u3068\u3001\u3042\u304f\u307e\u3067Development\u5411\u3051\u306b\u958b\u767a\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u306a\u306e\u3067\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\nRails\u4e0a\u306esecret\u3084DB\u63a5\u7d9a\u5148\u306fDocker\u5b9f\u884c\u6642\u306e\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u5165\u308c\u308b\u3053\u3068\u3067\u74b0\u5883\u306b\u4f9d\u5b58\u3057\u306a\u3044\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n## nginx-proxy\n\n\u8907\u6570\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u305d\u308c\u305e\u308c\u306e\u30b3\u30f3\u30c6\u30ca\u3067\u52d5\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u5404\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u632f\u308a\u5206\u3051\u308b\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u901a\u5e38\u3060\u3068nginx\u3084apache\u306e\u8a2d\u5b9a\u3067Virtual host\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u6bce\u306e\u632f\u308a\u5206\u3051\u5148\u3092\u66f8\u3044\u3066\u3001\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3059\u308b\u308f\u3051\u3067\u3059\u304c\u3001nginx-proxy\u3092\u4f7f\u3046\u3068\u7acb\u3061\u4e0a\u304c\u3063\u3066\u3044\u308bDocker\u30b3\u30f3\u30c6\u30ca\u306b\u81ea\u52d5\u7684\u306b\u632f\u308a\u5206\u3051\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3053\u308c\u306b\u3088\u308a\u30b5\u30fc\u30d3\u30b9\u306e\u6295\u5165\u304c\u975e\u5e38\u306b\u697d\u306b\u306a\u308a\u307e\u3059\u3002\n\n## docker-letsencrypt-nginx-proxy-companion\n\nSSL\u304c\u4f7f\u3048\u306a\u3044\u30b5\u30fc\u30d3\u30b9\u306f\u4eca\u6642\u3042\u308a\u3048\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u3078\u306e\u5bfe\u5fdc\u3067\u3059\u3002\n\nLet's Encrypt\u306f\u6700\u8fd1\u6ce8\u76ee\u306e\u7121\u6599\u3067SSL\u8a3c\u660e\u66f8\u3092\u767a\u884c\u3067\u304d\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002Facebook\u3092\u59cb\u3081\u3068\u3057\u305f\u540d\u9ad8\u3044\u4f01\u696d\u304c\u30b9\u30dd\u30f3\u30b5\u30fc\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u52d5\u304b\u3059\u3060\u3051\u3067\u81ea\u52d5\u3067SSL\u8a3c\u660e\u66f8\u306e\u767a\u884c\u30fb\u66f4\u65b0\u3092\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n## New Relic\n\n\u30b5\u30fc\u30d0\u76e3\u8996\u306f\u6700\u4f4e\u9650\u3042\u3063\u305f\u307b\u3046\u304c\u826f\u3044\u3068\u601d\u3046\u306e\u3067New Relic\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3082\u30b3\u30f3\u30c6\u30ca\u3092\u52d5\u304b\u3059\u3060\u3051\u306a\u306e\u3067\u7ba1\u7406\u30b3\u30b9\u30c8\u306f\u5c11\u306a\u3044\u3067\u3059\u3002\n\n## Docker Registry\n\nDocker\u306e\u30a4\u30e1\u30fc\u30b8\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u9818\u57df\u306a\u3089Docker Hub\u3092\u4f7f\u3048\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u3044\u304f\u3089\u500b\u4eba\u306e\u30af\u30bd\u30b5\u30fc\u30d3\u30b9\u3068\u306f\u3044\u3048\u5168\u90e8\u304c\u5168\u90e8\u516c\u958b\u3067\u304d\u308b\u3082\u306e\u3067\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3057\u304b\u3057Docker Hub\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u304a\u91d1\u304c\u304b\u304b\u308b\u306e\u3067\u5c0f\u3055\u3044\u30b5\u30fc\u30d3\u30b9\u3092\u91cf\u7523\u3057\u3066\u3044\u304f\u5f62\u3060\u3068\u975e\u5e38\u306b\u304a\u91d1\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002AWS\u3084GCP\u304cDocker Registry\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u304c\u3001AWS CLI\u306a\u3069\u3092\u5165\u308c\u3066\u8a8d\u8a3c\u3059\u308b\u3053\u3068\u304c\u5fc5\u8981\u3067\u8907\u96d1\u306b\u306a\u308b\u305f\u3081\u5229\u7528\u3092\u8ae6\u3081\u307e\u3057\u305f\u3002\u305d\u306e\u305f\u3081\u5225\u9014 Docker Registry \u3092\u7acb\u3066\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u305f\u3060\u3001\u5916\u90e8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b Docker Registry \u3092\u7acb\u3066\u308b\u306b\u306f\u30d9\u30fc\u30b7\u30c3\u30af\u8a8d\u8a3c\u3092\u5165\u308c\u305f\u308aSSL\u8a3c\u660e\u66f8\u3092\u5c0e\u5165\u3057\u305f\u308a\u306e\u624b\u9593\u304c\u5fc5\u8981\u3067\uff08\u8abf\u3079\u308b\u306e\u304c\uff09\u3081\u3093\u3069\u304f\u3055\u304b\u3063\u305f\u306e\u3067\u3001S3\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u5171\u6709\u3057\u3066Push\u306f\u30ed\u30fc\u30ab\u30eb\u306e\u30de\u30b7\u30f3\u3067\u7acb\u3061\u4e0a\u3052\u305fDocker Registry\u304b\u3089\u3001Pull\u306fVPS\u4e0a\u3067\u7acb\u3061\u4e0a\u3052\u305fDocker Registry\u304b\u3089\u3001\u3068\u3044\u3046\u69cb\u6210\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u69cb\u6210\u306f\u6b63\u76f4\u3042\u307e\u308a\u30a4\u30b1\u3066\u306a\u3044\u306e\u3067\u4eca\u5f8c\u76f4\u3057\u305f\u3044\u3067\u3059\u3002CircleCI\u304b\u3089\u81ea\u52d5\u3067Push\u3059\u308b\u3068\u304b\u3082\u3067\u304d\u306a\u3044\u3067\u3059\u3057\u3002\u3061\u306a\u307f\u306bAWS\u3084GCP\u306b\u3059\u308b\u3068\u3001\u5404\u30b5\u30fc\u30d3\u30b9\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308bDocker Registry\u304c\u4f7f\u3048\u308b\u306e\u3067\u3053\u3093\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u8981\u3089\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u3068\u306f\u3044\u3048ConoHa\u3060\u30681500\u5186\u3067\u6e08\u3080\u30b5\u30fc\u30d0\u69cb\u6210\u304cRDS\u3060\u3051\u30672000\u5186\u3092\u8d85\u3048\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u305d\u306e\u30b3\u30b9\u30c8\u3068Docker Registry\u3092\u81ea\u524d\u3067\u7acb\u3066\u308b\u8907\u96d1\u3055\u306e\u3069\u3061\u3089\u304c\u826f\u3044\u304b\u3068\u3044\u3046\u9078\u629e\u3067\u3057\u305f\u3002\n\n\n\n# \u74b0\u5883\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\n\n\u4ee5\u4e0a\u3092\u8e0f\u307e\u3048\u3066\u74b0\u5883\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\u3067\u3059\u3002\n\n## 1. CoreOS\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nVPS\u306bCoreOS\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\nConoHa\u306e\u30b5\u30fc\u30d0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u6642\u306e\u30e1\u30e2\u304c\u3053\u3061\u3089\u3002\nhttp://qiita.com/miyasakura_/items/4d81dc5fe6f9de0f0dd5\n\n\n\u57fa\u672c\u3068\u306a\u308b cloud-config.yml \u306f\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u8a2d\u5b9a\u7b87\u6240\u3068\u3057\u3066\u306f\n\n- nginx-proxy \u3068 letsencrypt-nginx-proxy-companion \u306e\u8a3c\u660e\u66f8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9\n- newrelic \u306e NEW_RELIC_LICENSE_KEY\n- s3\u306eAPI\u306e\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3084\u30d0\u30b1\u30c3\u30c8\u306e\u60c5\u5831\n\n\u304c\u3042\u308a\u307e\u3059\u3002NewRelic\u3068S3\u306e\u30a2\u30af\u30bb\u30b9\u60c5\u5831\u306f\u3042\u3089\u304b\u3058\u3081\u6e96\u5099\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n```yaml:cloud-config.yml\n#cloud-config\n\nssh_authorized_keys:\n  - ssh-rsa AAAAB3Nza...(ssh\u3059\u308b\u6642\u306e\u516c\u958b\u9375)\n\ncoreos:\n  update:\n    reboot-strategy: best-effort\n  units:\n    - name: docker.service\n      command: start\n\n    - name: timezone.service\n      command: start\n      content: |\n        [Unit]\n        Description=timezone\n        [Service]\n        Type=oneshot\n        RemainAfterExit=yes\n        ExecStart=/usr/bin/ln -sf ../usr/share/zoneinfo/Japan /etc/localtime\n\n    - name: nginx-proxy.service\n      command: start\n      content: |\n        [Unit]\n        Description=nginx-proxy\n\n        [Service]\n        Type=simple\n        Restart=always\n        ExecStartPre=-/usr/bin/docker stop nginx-proxy\n        ExecStart=/usr/bin/docker run \\\n                    --rm \\\n                    --name=\"nginx-proxy\" \\\n                    -p 80:80 \\\n                    -p 443:443 \\\n                    -v /home/core/certs:/etc/nginx/certs:ro \\\n                    -v /etc/nginx/vhost.d \\\n                    -v /usr/share/nginx/html \\\n                    -v /var/run/docker.sock:/tmp/docker.sock \\\n                    jwilder/nginx-proxy\n        ExecStop=/usr/bin/docker stop nginx-proxy\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: letsencrypt.service\n      command: start\n      content: |\n        [Unit]\n        Description=letsencrypt\n        Requires=nginx-proxy.service\n        After=nginx-proxy.service\n\n        [Service]\n        Type=simple\n        Restart=always\n        ExecStartPre=-/usr/bin/docker stop letsencrypt\n        ExecStart=/usr/bin/docker run \\\n                    --rm \\\n                    --name=\"letsencrypt\" \\\n                    -v /home/core/certs:/etc/nginx/certs:rw \\\n                    --volumes-from nginx-proxy \\\n                    -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n                    jrcs/letsencrypt-nginx-proxy-companion\n        ExecStop=/usr/bin/docker stop letsencrypt\n\n        [Install]\n        WantedBy=multi-user.target\n\n    - name: newrelic.service\n      command: start\n      content: |\n        [Unit]\n        Description=newrelic\n        Requires=docker.service\n        After=docker.service\n        \n        [Service]\n        Restart=always\n        RestartSec=300\n        TimeoutStartSec=10m\n        ExecStartPre=-/usr/bin/docker stop newrelic\n        ExecStartPre=-/usr/bin/docker rm -f newrelic\n        ExecStartPre=-/usr/bin/docker pull uzyexe/newrelic:latest\n        ExecStart=/usr/bin/docker run \\\n                    --rm \\\n                    --name=\"newrelic\" \\\n                    --memory=\"64m\" \\\n                    --memory-swap=\"-1\" \\\n                    --net=\"host\" \\\n                    --pid=\"host\" \\\n                    --env=\"NEW_RELIC_LICENSE_KEY=\u30e9\u30a4\u30bb\u30f3\u30b9\u30ad\u30fc\" \\\n                    --volume=\"/var/run/docker.sock:/var/run/docker.sock:ro\" \\\n                    --volume=\"/sys/fs/cgroup/:/sys/fs/cgroup:ro\" \\\n                    --volume=\"/dev:/dev\" \\\n                    uzyexe/newrelic\n        ExecStop=/usr/bin/docker stop newrelic\n        \n        [Install]\n        WantedBy=multi-user.target\n\n    - name: docker-registry.service\n      command: start\n      content: |\n        [Unit]\n        Description=docker registry\n        Requires=docker.service\n        After=docker.service\n\n        [Service]\n        Restart=always\n        RestartSec=300\n        TimeoutStartSec=10m\n        ExecStart=/usr/bin/docker run \\\n                    --rm \\\n                    --name=\"docker-registry-service\" \\\n                    -p 5000:5000 \\\n                    -e REGISTRY_STORAGE_S3_ACCESSKEY=\u30a2\u30af\u30bb\u30b9\u30ad\u30fc \\\n                    -e REGISTRY_STORAGE_S3_SECRETKEY=\u30b7\u30fc\u30af\u30ec\u30c3\u30c8 \\\n                    -e REGISTRY_STORAGE_S3_BUCKET=\u30d0\u30b1\u30c3\u30c8 \\\n                    -e REGISTRY_STORAGE_S3_REGION=ap-northeast-1 \\\n                    -e REGISTRY_STORAGE_S3_ROOTDIRECTORY=/v2 \\\n                    -e REGISTRY_STORAGE=s3 \\\n                    registry:2.0\n        ExecStop=/usr/bin/docker stop docker-registry-service\n\n        [Install]\n        WantedBy=multi-user.target\n\n\n```\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u7d42\u308f\u3063\u305f\u3089\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u5404\u30b5\u30fc\u30d3\u30b9\u304c running \u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```\nsystemctl list-units --type=service \n```\n\n## 2. Docker\u306e\u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\n\n\u65b0\u3057\u3044\u30a2\u30d7\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u305f\u3073\u306b nginx \u3084 ruby \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u306f\u5927\u5909\u306a\u306e\u3067\u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\nDocker\u306f\u30ed\u30fc\u30ab\u30eb\u30de\u30b7\u30f3\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u4eca\u56de\u306fRails+nginx\u306e\u69cb\u6210\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306a Dockerfile \u3092\u6e96\u5099\u3002\u3053\u306eDockerfile\u306fnginx\u3092apt\u3067\u5165\u308c\u308b\u306a\u3069\u306e\u697d\u3092\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306enginx\u304c\u5165\u3063\u3066\u3057\u307e\u3046\u70b9\u306f\u6539\u5584\u306e\u4f59\u5730\u3042\u308a\u3067\u3059\u3002\n\n```Dockerfile\nFROM ruby:2.3.0\n\nRUN apt-get update\nRUN apt-get install -y nodejs nginx supervisor\nRUN apt-get install -y libssl-dev\n\n# forward request and error logs to docker log collector\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n        && ln -sf /dev/stderr /var/log/nginx/error.log\n\nRUN gem update --system\n\nCMD [\"bash\", \"-l\", \"-c\"]\n```\n\n\u30d3\u30eb\u30c9\u3057\u307e\u3059\n\n```\n$ docker build --no-cache -t localhost:5000/base-image .\n```\n\nDocker Registry\u3092\u7acb\u3061\u4e0a\u3052\u3066Push\u3057\u307e\u3059\u3002\n\n```\n$ docker run -d \\\n      --name=\"docker-registry\" \\\n      -p 5000:5000 \\\n      -e REGISTRY_STORAGE_S3_ACCESSKEY= \\\n      -e REGISTRY_STORAGE_S3_SECRETKEY= \\\n      -e REGISTRY_STORAGE_S3_BUCKET= \\\n      -e REGISTRY_STORAGE_S3_REGION=ap-northeast-1 \\\n      -e REGISTRY_STORAGE_S3_ROOTDIRECTORY=/v2 \\\n      -e REGISTRY_STORAGE=s3 \\\n      registry:2.0\n$ docker push localhost:5000/base-image\n```\n\n\u3053\u308c\u3067\u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u306e\u4f5c\u6210\u304c\u5b8c\u4e86\u3067\u3059\u3002\n\n## 3. Rails\u30a2\u30d7\u30ea\u306eDocker\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\n\n\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u3092\u7acb\u3061\u4e0a\u3052\u308b\u306e\u3067\u3042\u308c\u3070Process\u5f0f\u306e\u3082\u306e\u3088\u308aThread\u5f0f\u306e\u304c\u826f\u3044\u304b\u306a\u3068\u601d\u3063\u3066\u306a\u3093\u3068\u306a\u304fPuma\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30a2\u30d7\u30ea\u81ea\u4f53\u306f\u666e\u901a\u306b\u4f5c\u308b\u3060\u3051\u306a\u306e\u3067\u3059\u304c\u3001Docker\u3092\u4f7f\u3046\u306b\u3042\u305f\u3063\u3066\u3044\u304f\u3064\u304b\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u30ed\u30b0\u306f\u6a19\u6e96\u51fa\u529b\u306b\n\nDocker\u3067\u306f\u57fa\u672c\u6a19\u6e96\u51fa\u529b\u306b\u30ed\u30b0\u3092\u51fa\u3059\u3053\u3068\u3067\u7c21\u5358\u306b\u30ed\u30b0\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3082\u3063\u3068\u826f\u3044\u65b9\u6cd5\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n\n```rb:config/environments/production.rb\u2028\n...\nconfig.logger = Logger.new(STDOUT)\n...\n```\n\n\n### DB\u306a\u3069\u306e\u60c5\u5831\u306f\u74b0\u5883\u5909\u6570\u3092\u898b\u308b\u3088\u3046\u306b\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u3066\u307e\u3059\u3002Production\u3060\u3051\u3067\u3082\u826f\u3044\u308f\u3051\u3067\u3059\u304c\u305d\u3053\u306f\u74b0\u5883\u306b\u5fdc\u3058\u3066\u3002\n\n```database.yml\ndefault: &default\n  adapter: mysql2\n  encoding: utf8\n  reconnect: false\n  pool: 5\n  host:     <%= ENV['RAILS_DATABASE_HOST'] %>\n  username: <%= ENV['RAILS_DATABASE_USER'] %>\n  password: <%= ENV['RAILS_DATABASE_PASSWORD'] %>\n  database: <%= ENV['RAILS_DATABASE'] %>\n\ndevelopment:\n  <<: *default\n\ntest:\n  <<: *default\n\nproduction:\n  <<: *default\n```\n\n\n\n### Dockerfile\u306a\u3069\u306e\u8a2d\u5b9a\n\u4e0a\u8a18\u3092\u8e0f\u307e\u3048\u3066Dockerfile\u3068nginx.conf\u3068supervisord.conf\u304c\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u3002\nPuma\u3082nginx\u306e\u8a2d\u5b9a\u3068\u5408\u308f\u305b\u3066\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u5fc5\u8981\u306a\u306e\u3067\u3046\u307e\u3044\u3053\u3068\u3084\u308a\u307e\u3059\u3002\n\n```Dockerfile\nFROM localhost:5000/base-image\n\nENV APP_HOME /webapp\nWORKDIR $APP_HOME\n\nADD Gemfile* $APP_HOME/\nRUN bundle install --without test development\nRUN cat Gemfile.lock\n\nADD . $APP_HOME\nRUN bundle exec rake assets:precompile\n\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nCOPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\nEXPOSE 80\nCMD [\"/usr/bin/supervisord\"]\n```\n\n```conf:docker/nginx.conf\nhttp {\n  upstream puma {\n    server unix:/webapp/tmp/sockets/puma.socket;\n  }\n\n  server {\n    listen  80;\n\n    location /assets {\n      root /webapp/public;\n    }\n\n    location / {\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header Host $host;\n      proxy_redirect off;\n      proxy_pass http://puma;\n    }\n  }\n\n  error_log stderr;\n  access_log /dev/stdout;\n\n  include       mime.types;\n  default_type  application/octet-stream;\n    gzip  on;\n    gzip_http_version 1.0;\n    gzip_disable \"msie6\";\n    gzip_vary on;\n    gzip_proxied any;\n    gzip_min_length 1024;\n    gzip_comp_level 1;\n    gzip_types text/plain\n        text/css\n        text/xml\n        application/json\n        application/javascript\n        application/x-javascript\n        application/xml\n        application/xml+rss\n        ;\n    open_file_cache max=1000 inactive=20s;\n    open_file_cache_valid 30s;\n    open_file_cache_min_uses 2;\n    open_file_cache_errors on;\n}\n\npid /var/run/nginx.pid;\nworker_processes 2;\nevents {\n    worker_connections  1024;\n    # multi_accept on;\n}\n```\n\n```conf:docker/supervisord.conf\n[supervisord]\nnodaemon=true\n\n[program:nginx]\ncommand=/usr/sbin/nginx -g \"daemon off;\"\nautostart=true\nautorestart=true\nstdout_logfile=/dev/stdout\nstdout_logfile_maxbytes=0\nstderr_logfile=/dev/stderr\nstderr_logfile_maxbytes=0\n\n[program:puma]\ncommand=bundle exec puma -C config/puma.rb\ndirectory=/webapp\nautostart=true\nautorestart=true\nstdout_logfile=/dev/stdout\nstdout_logfile_maxbytes=0\nstderr_logfile=/dev/stderr\nstderr_logfile_maxbytes=0\n```\n\n```rb:config/puma.rb\n\n# Start Puma with next command:\n# RAILS_ENV=production bundle exec puma -C ./config/puma.rb\n\n# uncomment and customize to run in non-root path\n# note that config/puma.yml web path should also be changed\napplication_path = \"#{File.expand_path(\"../..\", __FILE__)}\"\n\n# The directory to operate out of.\n#\n# The default is the current directory.\n#\ndirectory application_path\n\n# Set the environment in which the rack's app will run.\n#\n# The default is \u201cdevelopment\u201d.\n#\nenvironment 'production'\n\n# Daemonize the server into the background. Highly suggest that\n# this be combined with \u201cpidfile\u201d and \u201cstdout_redirect\u201d.\n#\n# The default is \u201cfalse\u201d.\n#\ndaemonize false\n\n# Store the pid of the server in the file at \u201cpath\u201d.\n#\npidfile \"#{application_path}/tmp/pids/puma.pid\"\n\n# Use \u201cpath\u201d as the file to store the server info state. This is\n# used by \u201cpumactl\u201d to query and control the server.\n#\nstate_path \"#{application_path}/tmp/pids/puma.state\"\n\n# Redirect STDOUT and STDERR to files specified. The 3rd parameter\n# (\u201cappend\u201d) specifies whether the output is appended, the default is\n# \u201cfalse\u201d.\n#\n# stdout_redirect \"#{application_path}/log/puma.stdout.log\", \"#{application_path}/log/puma.stderr.log\"\n# stdout_redirect '/u/apps/lolcat/log/stdout', '/u/apps/lolcat/log/stderr', true\n\n# Disable request logging.\n#\n# The default is \u201cfalse\u201d.\n#\n# quiet\n\n# Configure \u201cmin\u201d to be the minimum number of threads to use to answer\n# requests and \u201cmax\u201d the maximum.\n#\n# The default is \u201c0, 16\u201d.\n#\n# threads 0, 16\n\n# Bind the server to \u201curl\u201d. \u201ctcp://\u201d, \u201cunix://\u201d and \u201cssl://\u201d are the only\n# accepted protocols.\n#\n# The default is \u201ctcp://0.0.0.0:9292\u201d.\n#\n# bind 'tcp://0.0.0.0:9292'\nbind \"unix://#{application_path}/tmp/sockets/puma.socket\"\n\n# Instead of \u201cbind 'ssl://127.0.0.1:9292?key=path_to_key&cert=path_to_cert'\u201d you\n# can also use the \u201cssl_bind\u201d option.\n#\n# ssl_bind '127.0.0.1', '9292', { key: path_to_key, cert: path_to_cert }\n\n# Code to run before doing a restart. This code should\n# close log files, database connections, etc.\n#\n# This can be called multiple times to add code each time.\n#\n# on_restart do\n#   puts 'On restart...'\n# end\n\n# Command to use to restart puma. This should be just how to\n# load puma itself (ie. 'ruby -Ilib bin/puma'), not the arguments\n# to puma, as those are the same as the original process.\n#\n# restart_command '/u/app/lolcat/bin/restart_puma'\n\n# === Puma control rack application ===\n\n# Start the puma control rack application on \u201curl\u201d. This application can\n# be communicated with to control the main server. Additionally, you can\n# provide an authentication token, so all requests to the control server\n# will need to include that token as a query parameter. This allows for\n# simple authentication.\n#\n# Check out https://github.com/puma/puma/blob/master/lib/puma/app/status.rb\n# to see what the app has available.\n#\n# activate_control_app 'unix:///var/run/pumactl.sock'\n# activate_control_app 'unix:///var/run/pumactl.sock', { auth_token: '12345' }\n# activate_control_app 'unix:///var/run/pumactl.sock', { no_token: true }\n\n\n\n```\n\n\u30d3\u30eb\u30c9\u3057\u3066Push\u3057\u307e\u3059\u3002\n\n```\n$ docker build -t localhost:5000/hoge-project .\n$ docker push localhost:5000/hoge-project //docker registry\u306f\u7acb\u3061\u4e0a\u3052\u3066\u3042\u308b\u524d\u63d0\n```\n\n## 4. \u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u306e\u8a2d\u5b9a\n\nnginx-proxy\u306fVIRTUAL HOST\u3067\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u8a2d\u5b9a\u3059\u308b\u306e\u3067\u304a\u4f7f\u3044\u306e\u30cd\u30fc\u30e0\u30b5\u30fc\u30d0\u3067\u4eca\u56de\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3059\u308b\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n## 5. CoreOS\u5074\u3067\u30b3\u30f3\u30c6\u30ca\u306e\u7acb\u3061\u4e0a\u3052\n\n#### 5.1 \u8a2d\u5b9a\u3092 cloud-config.yml \u306b\u8ffd\u8a18\n\n\u66f8\u304d\u65b9\u306f systemd \u306e\u30d8\u30eb\u30d7\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nVIRTUAL_HOST \u306f nginx-proxy \u306e\u305f\u3081\u306e\u8a2d\u5b9a\u3001 LETSUENCRYPT_* \u306fSSL\u8a3c\u660e\u66f8\u306e\u767a\u884c\u306e\u305f\u3081\u3001RAILS_*\u306frails\u7528\u306e\u74b0\u5883\u5909\u6570\u306a\u306e\u3067\u74b0\u5883\u306b\u5fdc\u3058\u3066\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nDB\u306fConoHa\u306e\u5834\u5408\u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n```yaml:cloud-config.yml\n\n...\n    - name: hoge.service\n      enable: true\n      content: |\n        [Unit]\n        Description=hoge\n        Requires=docker-registry.service\n        After=docker-registry.serivce\n\n        [Service]\n        Type=simple\n        Restart=always\n        ExecStartPre=-/usr/bin/docker stop hoge\n        ExecStartPre=-/usr/bin/docker rm hoge\n        ExecStart=/usr/bin/docker run \\\n                    --rm \\\n                    --name=\"hoge\" \\\n                    -e \"VIRTUAL_HOST=hoge.mydomain.com\" \\\n                    -e \"LETSENCRYPT_HOST=hoge.mydomain.com\" \\\n                    -e \"LETSENCRYPT_EMAIL=hoge@mydomain.com\" \\\n                    -e \"TZ=Asia/Tokyo\" \\\n                    -e \"RAILS_ENV=production\" \\\n                    -e \"RAILS_DATABASE_USER=\" \\\n                    -e \"RAILS_DATABASE_PASSWORD=\" \\\n                    -e \"RAILS_DATABASE_HOST=\" \\\n                    -e \"RAILS_DATABASE=\" \\\n                    -e \"SECRET_KEY_BASE=\" \\\n                    localhost:5000/hoge-project\n        ExecStop=/usr/bin/docker stop hoge\n\n        [Install]\n        WantedBy=multi-user.target\n...\n\n\n```\n\n#### 5.2 cloud-config.yml\u3092\u8aad\u307f\u8fbc\u307f\n\n```\nsudo coreos-cloudinit -from-file=cloud-config.yml\nsudo cp cloud-config.yml /var/lib/coreos-install/user_data\n```\n\n#### 5.3 \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\n\n\uff08\u6700\u521d\u3053\u306e\u624b\u9806\u304c\u629c\u3051\u3066\u307e\u3057\u305f\uff09\n\n```\n$ /usr/bin/docker run --rm \\\n    -e \"RAILS_ENV=production\" \\\n    -e \"RAILS_DATABASE_USER=hoge\" \\\n    -e \"RAILS_DATABASE_PASSWORD=hoge\" \\\n    -e \"RAILS_DATABASE_HOST=hoge.host\" \\\n    -e \"RAILS_DATABASE=hoge\" \\\n    -e \"SECRET_KEY_BASE=\" \\\n    localhost:5000/hoge bundle exec rake db:migrate\n```\n\n\u3061\u3087\u3063\u3068\u9577\u304f\u3066\u9762\u5012\u3067\u3059\u304c cloud-config.yml \u3068\u540c\u3058\u5185\u5bb9\u306a\u306e\u3067\u30b3\u30d4\u30da\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u8a31\u5bb9\u7bc4\u56f2\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u8fba\u306f\u597d\u307f\u306b\u5fdc\u3058\u3066\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u30e9\u30c3\u30d7\u3057\u305f\u308a\u3001\u305d\u3082\u305d\u3082docker-build\u306e\u6642\u70b9\u3067\u74b0\u5883\u5909\u6570\u5165\u308c\u3066\u3057\u307e\u3046\u306a\u3069\u3067\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\n#### 5.4 \u30b5\u30fc\u30d3\u30b9\u306e\u8d77\u52d5\n\n```\n$ sudo systemctl start hoge.service\n$ sudo systemctl status hoge.service\n```\n\n\u3046\u307e\u304f\u7acb\u3061\u4e0a\u304c\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u3089\u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u3066\u5bfe\u5fdc\u3057\u307e\u3059\n\n```\n$ journalctl -fu hoge\n```\n\n\u4ee5\u4e0a\u3067\u3001\u30b5\u30fc\u30d3\u30b9\u30a4\u30f3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u306e\u72b6\u614b\u3067\u653e\u7f6e\u3057\u3066\u304a\u304f\u30681\u6642\u9593\u306b1\u56de\u3001SSL\u306e\u8a3c\u660e\u66f8\u306e\u66f4\u65b0\u304c\u884c\u308f\u308c\u308b\u306e\u3067https\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u66f4\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u8ffd\u52a0\u3059\u308b\n\u4e0a\u8a183\u301c5\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\n\n## \u4e00\u5b9a\u6642\u9593\u3054\u3068\u306b\u5b9f\u884c\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\n\ncron\u7684\u306a\u3082\u306e\u3082 systemd \u3067\u5b9f\u73fe\u3067\u304d\u308b\u306e\u3067 cloud-config.yml \u306b\u66f8\u304d\u307e\u3059\u3002\noneshot\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u5b9a\u7fa9\u3057\u3066timer\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```\n    - name: sample-job.service\n      content: |\n        [Unit]\n        Description=sample-job\n        Requires=docker-registry.service\n        After=docker-registry.serivce\n        [Service]\n        Type=oneshot\n        ExecStart=/usr/bin/docker run \\\n                    --rm \\\n                    -e \"TZ=Asia/Tokyo\" \\\n                    localhost:5000/sample-job\n    - name: sample-job.timer\n      command: start\n      content: |\n        [Unit]\n        Description=Run sample-job\n        [Timer]\n        OnCalendar=*:*\n```\n\n\u78ba\u8a8d\u306fsystemctl\u3092\u4f7f\u3046\u3002\n\n```\nsystemctl list-timers\n```\n\n# \u30b9\u30b1\u30fc\u30eb\u6226\u7565\n\n\u79c1\u306e\u74b0\u5883\u306f\u307e\u3060\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u3088\u3046\u306a\u72b6\u6cc1\u306b\u306f\u306a\u3063\u3066\u306a\u3044\u3067\u3059\u304c\u3001\u3082\u3057\u30e6\u30fc\u30b6\u6570\u304c\u5897\u3048\u305f\u6642\u306b\u305d\u308c\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u3068\u3044\u3046\u306e\u306f\u91cd\u8981\u3067\u3059\u3088\u306d\u3002\n\n\u4eca\u56deDocker\u30b3\u30f3\u30c6\u30ca\u306f\u307b\u307c\u72ec\u7acb\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30a2\u30af\u30bb\u30b9\u304c\u5897\u3048\u3066\u304d\u305f\u3089\u30b5\u30fc\u30d0\u3092\u5897\u3084\u3057\u3066\u8a72\u5f53\u306e\u30b5\u30fc\u30d3\u30b9\u3060\u3051\u5207\u308a\u51fa\u3057\u305f cloud-config.yml \u3092\u5229\u7528\u3057\u3066\u7c21\u5358\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001LB\u3092\u8ffd\u52a0\u3057\u3066\u8907\u6570\u306e\u30b5\u30fc\u30d0\u306b\u8ca0\u8377\u5206\u6563\u3059\u308b\u3053\u3068\u3082\u5bb9\u6613\u3067\u3059\u3002\n\n\u305d\u308c\u3067\u3082\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u6c17\u306b\u306a\u3063\u3066\u304d\u305f\u3089\u3001AWS\u306a\u3069\u306e\u4ed6\u306e\u30af\u30e9\u30a6\u30c9\u306b\u79fb\u3059\u3053\u3068\u3092\u8003\u3048\u308b\u3068\u3057\u3066\u3082Docker\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u6301\u3063\u3066\u3044\u304f\u3053\u3068\u306f\u5927\u3057\u305f\u4f5c\u696d\u306b\u306f\u306a\u3089\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u57fa\u672c\u7684\u306a\u6c4e\u7528\u6280\u8853\u3057\u304b\u4f7f\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u305d\u306e\u6642\u3005\u306b\u5fdc\u3058\u305f\u6700\u9069\u306a\u74b0\u5883\u306b\u6301\u3063\u3066\u3044\u3051\u308b\u306f\u305a\u3067\u3059\u3002\uff08DB\u306e\u30c7\u30fc\u30bf\u306e\u79fb\u884c\u306f\u5fc5\u8981\u3067\u3059\u3051\u3069\u306d!\uff09\n\n# \u307e\u3068\u3081\n\n\u4ee5\u4e0a\u3001Docker\u3092\u4f7f\u3063\u3066\u306e\u8907\u6570\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u969b\u306e\u30de\u30a4\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3067\u3057\u305f\u3002\n\n\u4e00\u898b\u8907\u96d1\u306a\u6c17\u3082\u3057\u307e\u3059\u304c\u3001\u30b5\u30fc\u30d0\u306e\u72b6\u614b\u306f cloud-config.yml \u3060\u3051\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3044\u3046\u4f7f\u3044\u65b9\u3092\u3059\u308b\u3068 cloud-config.yml \u304c\u975e\u5e38\u306b\u7e26\u9577\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001\u500b\u4eba\u7684\u306b\u306f\u8907\u6570\u306b\u308f\u304b\u308c\u3066\u308b\u3088\u308a\u7ba1\u7406\u3057\u3084\u3059\u304f\u3066\u597d\u304d\u3067\u3059\u3002\n\n\u5404\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u5b9a\u3082\u307b\u307c\u5b9a\u5f62\u306e Dockerfile, nginx.conf, supervisord \u3092\u7f6e\u3044\u3066\u304a\u3044\u3066 docker build \u3092\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5b9f\u969b\u306e\u904b\u7528\u306f\n\n- \u30ed\u30fc\u30ab\u30eb\u30de\u30b7\u30f3\u3067\u306e\u30d3\u30eb\u30c9\u3001\u30d7\u30c3\u30b7\u30e5\n- CoreOS\u4e0a\u3067\u306ecloud-config.yml\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\n\n\u8fba\u308a\u306f\u7c21\u5358\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u8aac\u660e\u3057\u305f\u3082\u306e\u3092\u306a\u3093\u3068\u306a\u304fGitHub\u306b\u307e\u3068\u3081\u3066\u304a\u304d\u307e\u3057\u305f\u3002\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4e00\u90e8\u3057\u304b\u66f8\u304b\u308c\u3066\u306a\u304f\u3066\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n https://github.com/miyasakura/my-docker-sample\n\n# \u304a\u308f\u308a\u306b\n\n\u3053\u308c\u3092\u8aad\u3093\u3067\u3001CoreOS\u3058\u3083\u306a\u304f\u3066\u3082Docker\u3068systemd\u304c\u5165\u3063\u3066\u308c\u3070\u3044\u3044\u3058\u3083\u3093\u3068\u304b\u3001\u7d20\u76f4\u306bAWS\u4f7f\u3048\u3070\u3044\u3044\u3058\u3083\u3093\u3068\u304b\u8272\u3005\u610f\u898b\u306f\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3057\u3001\u79c1\u3082\u3053\u306e\u74b0\u5883\u3067\u306e\u904b\u7528\u306f\u9577\u304f\u306f\u306a\u3044\u306e\u3067\u554f\u984c\u306f\u8272\u3005\u51fa\u3066\u304f\u308b\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\u305c\u3072\u307f\u306a\u3055\u3093\u304c\u8003\u3048\u308b\u30d9\u30b9\u30c8\u306a\u30b7\u30b9\u30c6\u30e0\u69cb\u6210\u3092\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n", "tags": ["CoreOS", "Rails", "vps", "docker", "\u79fb\u884c\u5fdc\u63f4"]}