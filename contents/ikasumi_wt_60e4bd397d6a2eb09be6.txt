{"context": " More than 1 year has passed since last update.underscore\u306b\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u52c9\u5f37\u534a\u5206\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3002\n\uff08lodash\u3082\u8aad\u3082\u3046\u3068\u601d\u3063\u3066\u3044\u305f\u3082\u306e\u306e\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u98a8\u306b1\u65e5\u30672\u3064\u3092\u6bd4\u8f03\u3057\u3066\u8aad\u3080\u80fd\u529b\u304c\u306a\u304b\u3063\u305f\u305f\u3081\u65b9\u91dd\u5909\u66f4\uff09\n\n\u5229\u7528\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\nunderscore.js(v1.8.3)\n\nreduce\u3068\u306f\n\nunderscorejs.org\u306ereduce\n\n\u3053\u3093\u306a\u8aac\u660e\u3002\n\n\nreduce_.reduce(list, iteratee, [memo], [context]) Aliases: inject, foldl\nAlso known as inject and foldl,\nreduce boils down a list of values into a single value.\nMemo is the initial state of the reduction, and each successive step of it should be returned by iteratee.\nThe iteratee is passed four arguments: the memo,then the value and index (or key) of the iteration, and finally a reference to the entire list.\nIf no memo is passed to the initial invocation of reduce, the iteratee is not invoked on the first element of the list. \nThe first element is instead passed as the memo in the invocation of the iteratee on the next element in the list.\n\nvar sum = _.reduce([1, 2, 3], function(memo, num){ return memo + num; }, 0);\n=> 6\n\ninject\u3084foldl\u306b\u30a8\u30a4\u30ea\u30a2\u30b9\u304c\u5f35\u3089\u308c\u3066\u3044\u308b\u3002\nreduce\u306f\u30ea\u30b9\u30c8\u306e\u5024\u3092\uff11\u3064\u306e\u5024\u306b\u96c6\u7d04\u3057\u3066\u8fd4\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\u3067\u3042\u308b\u3002\nMemo\u306freduction\u306e\u521d\u671f\u72b6\u614b\u3067\u3042\u308b\uff08\uff1f\uff09 //\u521d\u671f\u5024\u3092iteratee\u306b\u6301\u3063\u3066\u3044\u3051\u308b\u3063\u3066\u3053\u3068\uff1f \u305d\u3057\u3066\u5404\u30b9\u30c6\u30c3\u30d7(//\u305f\u3076\u3093iteratee\u3092\u56de\u3059\u3054\u3068)\u306b\u304a\u3044\u3066\u3001iteratee\u306b\u3088\u3063\u3066return\u3055\u308c\u308b\u3079\u304d\u3060\niteratee\u306b\u306f4\u3064\u306e\u5024\u304c\u6e21\u3055\u308c\u308b\uff08//\u305f\u3076\u3093\u3044\u3064\u3082\u308f\u305f\u3057\u3066\u3044\u308b3\u3064\uff0bmemo?\uff09iteratee\u306f\u30ea\u30b9\u30c8\u306e\u6700\u521d\u306eelement\u306e\u5834\u5408\u306f\u547c\u3073\u3060\u3055\u308c\u307e\u305b\u3093\u3002\n\u6700\u521d\u306eelement\u306f\u5358\u306bpass\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001memo\u3068\u3057\u3066\u6b21\u306eelement\u306eiteratee\u3067\u6e21\u3055\u308c\u307e\u3059\u3002\n\u3064\u307e\u308a\n\u30fbreduce\u306farray/object\u30921\u3064\u306e\u5024\u306b\u307e\u3068\u3081\u3066\u8fd4\u5374\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\n\u30fbreturn\u3059\u308b\u5024\u306e\u521d\u671f\u5024\u306fmemo\u3068\u3057\u3066\u6e21\u305b\u308b\n\u30fb\u6700\u521d\u306e\u5024\u306b\u5bfe\u3057\u3066iteratee\u306f\u9069\u5fdc\u3055\u308c\u306a\u3044\u304c\u3001\u6700\u521d\u306e\u5024\u306fmemo\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u308b\n\u3068\u3044\u3046\u3053\u3068\uff1f\n//\uff1f\uff1f\uff1f\u3000context\u306f\u3069\u3053\u306b\u304d\u3048\u305f\n\u306a\u306e\u3067\n\u3053\u3046\u3059\u308b\u3068\n'use strict';\nvar _ = require( \"underscore\" );\nvar arr = [ 1, 3, 5 ];\n\nvar memo = 5;\n\n//arr = { \"a\": 1, \"b\": 2, \"c\": 3 };\nvar result = _.reduce( arr, function( _memo, num ) {\n\n    console.log( \"memo:\" + memo );\n    console.log( \"_memo:\" + _memo );\n    console.log( \"num:\" + num );\n\n    console.log( \"--------------------\" );\n\n    _memo = _memo + num;\n    return _memo;\n}, memo );\n\nconsole.log( result );\n\n\u3053\u3046\u306a\u308b\nnode reduce.js\nmemo:5\n_memo:5\nnum:1\n--------------------\nmemo:5\n_memo:6\nnum:3\n--------------------\nmemo:5\n_memo:9\nnum:5\n--------------------\n14\n\n\nunderscore.reduce\n\n\u30b3\u30fc\u30c9\u7684\u306b\u306f\u3053\u306e\u3042\u305f\u308a\u3002\n_.reduce = _.foldl = _.inject = createReduce(1);\n\n\u305d\u306e\u307e\u307e\u3059\u3050\u4e0a\u306e\u3053\u3053\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n1\u4e0e\u3048\u3066\u3044\u308b\u306e\u306f\u3001reduceRight\u3068\u306e\u4f7f\u3044\u5206\u3051\u306e\u305f\u3081\nreduceRight\u3067\u306f\n_.reduceRight = _.foldr = createReduce(-1);\n\n\u3068\u4e0e\u3048\u3066\u3044\u308b\u3002\nvar keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n\n\u306e\u3042\u305f\u308a\u306f\u4ed6\u306ecollection\u7cfb\u306e\u95a2\u6570\u3068\u540c\u69d8\u306b\u3001array\u3060\u3063\u305f\u3089false,object\u3060\u3063\u305f\u3089key\u306e\u914d\u5217\u3092\u8fd4\u3057\u3001\u305d\u306e\u914d\u5217\u306e\u9577\u3055\u3092\u4ee3\u5165\u3001\nindex\u306f0 //\u5f15\u6570\u306edir\u304c1\u306a\u305f\u3081 reduceRight\u306e\u5834\u5408\u306f length -1 \nif (arguments.length < 3) {\n    memo = obj[keys ? keys[index] : index];\n    index += dir;\n}\n\n\u3053\u306e\u90e8\u5206\u306f\u3001\u914d\u5217\u306e\u5f15\u6570\u304c2\u4ee5\u4e0b\u3060\u3063\u305f\u5834\u5408(\u3064\u307e\u308amemo = undefined\u3060\u3063\u305f\u5834\u5408)\u3001\u521d\u671f\u5024\u306e\u3082\u3068\u3068\u306a\u308bmemo\u304c\u5b58\u5728\u3057\u306a\u3044\u305f\u3081\u3001\u3053\u308c\u3092\u6c7a\u5b9a\u3059\u308b\u3002\n\u914d\u5217\u3060\u3063\u305f\u5834\u5408\u306findex\u3092\u3001\u914d\u5217\u3058\u3083\u306a\u304b\u3063\u305f\u5834\u5408\u306findex[0]\u3092\u521d\u671f\u5024\u306b\u3059\u308b\n\u521d\u671f\u5024\u6c7a\u5b9a\u5f8c\u306findex += dir\u3059\u308b\uff08reduce\u306e\u5834\u5408\u306findex++\uff09\n\u305d\u306e\u5f8c\u3001iterator\u306b\u5f15\u304d\u7d99\u3044\u3067\u56de\u3059\n\nunderscore\u306b\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u52c9\u5f37\u534a\u5206\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3002\n\n\uff08lodash\u3082\u8aad\u3082\u3046\u3068\u601d\u3063\u3066\u3044\u305f\u3082\u306e\u306e\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u98a8\u306b1\u65e5\u30672\u3064\u3092\u6bd4\u8f03\u3057\u3066\u8aad\u3080\u80fd\u529b\u304c\u306a\u304b\u3063\u305f\u305f\u3081\u65b9\u91dd\u5909\u66f4\uff09\n\n##\u5229\u7528\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\n[underscore.js(v1.8.3)](https://github.com/jashkenas/underscore/tree/1.8.3)\n\n\n##reduce\u3068\u306f\n\n\n###[underscorejs.org\u306ereduce](http://underscorejs.org/#reduce)\n\n\u3053\u3093\u306a\u8aac\u660e\u3002\n>####reduce_.reduce(list, iteratee, [memo], [context]) Aliases: inject, foldl \n>Also known as inject and foldl,\n>reduce boils down a list of values into a single value.\n>Memo is the initial state of the reduction, and each successive step of it should be returned by iteratee.\n>The iteratee is passed four arguments: the memo,then the value and index (or key) of the iteration, and finally a reference to the entire list.\n\n>If no memo is passed to the initial invocation of reduce, the iteratee is not invoked on the first element of the list. \n>The first element is instead passed as the memo in the invocation of the iteratee on the next element in the list.\n\n```javascript\nvar sum = _.reduce([1, 2, 3], function(memo, num){ return memo + num; }, 0);\n=> 6\n```\n\ninject\u3084foldl\u306b\u30a8\u30a4\u30ea\u30a2\u30b9\u304c\u5f35\u3089\u308c\u3066\u3044\u308b\u3002\nreduce\u306f\u30ea\u30b9\u30c8\u306e\u5024\u3092\uff11\u3064\u306e\u5024\u306b\u96c6\u7d04\u3057\u3066\u8fd4\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\u3067\u3042\u308b\u3002\nMemo\u306freduction\u306e\u521d\u671f\u72b6\u614b\u3067\u3042\u308b\uff08\uff1f\uff09 //\u521d\u671f\u5024\u3092iteratee\u306b\u6301\u3063\u3066\u3044\u3051\u308b\u3063\u3066\u3053\u3068\uff1f \u305d\u3057\u3066\u5404\u30b9\u30c6\u30c3\u30d7(//\u305f\u3076\u3093iteratee\u3092\u56de\u3059\u3054\u3068)\u306b\u304a\u3044\u3066\u3001iteratee\u306b\u3088\u3063\u3066return\u3055\u308c\u308b\u3079\u304d\u3060\niteratee\u306b\u306f4\u3064\u306e\u5024\u304c\u6e21\u3055\u308c\u308b\uff08//\u305f\u3076\u3093\u3044\u3064\u3082\u308f\u305f\u3057\u3066\u3044\u308b3\u3064\uff0bmemo?\uff09iteratee\u306f\u30ea\u30b9\u30c8\u306e\u6700\u521d\u306eelement\u306e\u5834\u5408\u306f\u547c\u3073\u3060\u3055\u308c\u307e\u305b\u3093\u3002\n\u6700\u521d\u306eelement\u306f\u5358\u306bpass\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001memo\u3068\u3057\u3066\u6b21\u306eelement\u306eiteratee\u3067\u6e21\u3055\u308c\u307e\u3059\u3002\n\n\u3064\u307e\u308a\n\u30fbreduce\u306farray/object\u30921\u3064\u306e\u5024\u306b\u307e\u3068\u3081\u3066\u8fd4\u5374\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\n\u30fbreturn\u3059\u308b\u5024\u306e\u521d\u671f\u5024\u306fmemo\u3068\u3057\u3066\u6e21\u305b\u308b\n\u30fb\u6700\u521d\u306e\u5024\u306b\u5bfe\u3057\u3066iteratee\u306f\u9069\u5fdc\u3055\u308c\u306a\u3044\u304c\u3001\u6700\u521d\u306e\u5024\u306fmemo\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u308b\n\n\u3068\u3044\u3046\u3053\u3068\uff1f\n\n//\uff1f\uff1f\uff1f\u3000context\u306f\u3069\u3053\u306b\u304d\u3048\u305f\n\n\n\u306a\u306e\u3067\n\n\u3053\u3046\u3059\u308b\u3068\n\n```javascript\n'use strict';\nvar _ = require( \"underscore\" );\nvar arr = [ 1, 3, 5 ];\n\nvar memo = 5;\n\n//arr = { \"a\": 1, \"b\": 2, \"c\": 3 };\nvar result = _.reduce( arr, function( _memo, num ) {\n\n    console.log( \"memo:\" + memo );\n    console.log( \"_memo:\" + _memo );\n    console.log( \"num:\" + num );\n\n    console.log( \"--------------------\" );\n\n    _memo = _memo + num;\n    return _memo;\n}, memo );\n\nconsole.log( result );\n```\n\n\u3053\u3046\u306a\u308b\n\n\n```\nnode reduce.js\nmemo:5\n_memo:5\nnum:1\n--------------------\nmemo:5\n_memo:6\nnum:3\n--------------------\nmemo:5\n_memo:9\nnum:5\n--------------------\n14\n```\n\n###[underscore.reduce](https://github.com/jashkenas/underscore/blob/1.8.3/underscore.js#L205)\n\u30b3\u30fc\u30c9\u7684\u306b\u306f\u3053\u306e\u3042\u305f\u308a\u3002\n\n```javascript\n_.reduce = _.foldl = _.inject = createReduce(1);\n```\n\n\u305d\u306e\u307e\u307e\u3059\u3050\u4e0a\u306e[\u3053\u3053](https://github.com/jashkenas/underscore/blob/1.8.3/underscore.js#L178)\n\n```javascript\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n```\n\n1\u4e0e\u3048\u3066\u3044\u308b\u306e\u306f\u3001reduceRight\u3068\u306e\u4f7f\u3044\u5206\u3051\u306e\u305f\u3081\n\nreduceRight\u3067\u306f\n\n```\n_.reduceRight = _.foldr = createReduce(-1);\n```\n\u3068\u4e0e\u3048\u3066\u3044\u308b\u3002\n\n```\nvar keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n```\n\n\n\u306e\u3042\u305f\u308a\u306f\u4ed6\u306ecollection\u7cfb\u306e\u95a2\u6570\u3068\u540c\u69d8\u306b\u3001array\u3060\u3063\u305f\u3089false,object\u3060\u3063\u305f\u3089key\u306e\u914d\u5217\u3092\u8fd4\u3057\u3001\u305d\u306e\u914d\u5217\u306e\u9577\u3055\u3092\u4ee3\u5165\u3001\nindex\u306f0 //\u5f15\u6570\u306edir\u304c1\u306a\u305f\u3081 reduceRight\u306e\u5834\u5408\u306f length -1 \n\n```\nif (arguments.length < 3) {\n    memo = obj[keys ? keys[index] : index];\n    index += dir;\n}\n```\n\n\u3053\u306e\u90e8\u5206\u306f\u3001\u914d\u5217\u306e\u5f15\u6570\u304c2\u4ee5\u4e0b\u3060\u3063\u305f\u5834\u5408(\u3064\u307e\u308amemo = undefined\u3060\u3063\u305f\u5834\u5408)\u3001\u521d\u671f\u5024\u306e\u3082\u3068\u3068\u306a\u308bmemo\u304c\u5b58\u5728\u3057\u306a\u3044\u305f\u3081\u3001\u3053\u308c\u3092\u6c7a\u5b9a\u3059\u308b\u3002\n\n\u914d\u5217\u3060\u3063\u305f\u5834\u5408\u306findex\u3092\u3001\u914d\u5217\u3058\u3083\u306a\u304b\u3063\u305f\u5834\u5408\u306findex[0]\u3092\u521d\u671f\u5024\u306b\u3059\u308b\n\u521d\u671f\u5024\u6c7a\u5b9a\u5f8c\u306findex += dir\u3059\u308b\uff08reduce\u306e\u5834\u5408\u306findex++\uff09\n\n\u305d\u306e\u5f8c\u3001iterator\u306b\u5f15\u304d\u7d99\u3044\u3067\u56de\u3059\n\n", "tags": ["JavaScript", "Underscore.js"]}