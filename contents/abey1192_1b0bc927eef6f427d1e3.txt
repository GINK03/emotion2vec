{"tags": ["PlayFramework2.2.2", "AngularJS1.2.14", "Scala2.10.3"], "context": " More than 1 year has passed since last update.PlayFramework\u4e0a\u3067WebSocket\u3068Akka\u3092\u8a66\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3057\u3066\u3001\u3088\u304f\u3042\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3051\u308c\u3069\u3082\u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u3044\u3063\u3071\u3044\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8cbc\u4ed8\u3051\u305f\u306e\u3067\u9577\u304f\u306a\u308a\u307e\u3057\u305f\u304c\u3001PlayFramework\u3082Actor\u3082\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u3044\u306e\u3067\u3001\u4f55\u304b\u30a2\u30c9\u30d0\u30a4\u30b9\u306a\u3069\u9802\u3051\u305f\u3089\u5b09\u3057\u3044\u3067\u3059\u3002\n\n\u65b9\u91dd\n\n/chat/\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0ID?user_name=\u30e6\u30fc\u30b6\u540d \u3068\u3044\u3046URL\u3067WebSocket\u3092\u4f7f\u3063\u3066API\u3092\u4f5c\u308b\n\u8868\u793a\u306fAngular.js\u3067\u3084\u308b\n\u901a\u4fe1\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u4e0a\u308a\u304c\u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u3001\u4e0b\u308a\u3092JSON\u306b\u3059\u308b\n\u30c1\u30e3\u30c3\u30c8\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u306f\u3057\u306a\u3044\n\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3068\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306fApplication\u3092\u305d\u306e\u307e\u307e\u4f7f\u3044\u307e\u3057\u305f\u3002\n\nconf/routes\nGET     /                           controllers.Application.index\nGET     /chat/:roomId               controllers.Application.chat(roomId:String)\nGET     /assets/*file               controllers.Assets.at(path=\"/public\", file)\n\n\nWebSocket\u306e\u901a\u4fe1\u3092\u5f85\u3061\u53d7\u3051\u308b\u306b\u306f\u3001Action\u3067\u306f\u306a\u304fWebSocket.async\u3092\u4f7f\u3046\u3060\u3051\u3067\u3057\u305f\u3002\u3059\u3054\u3044\uff01\n\u623b\u308a\u5024\u306f Future[(Iteratee[T,_], Enumerator[T])] \u3068\u3044\u3046\u611f\u3058\u3089\u3057\u3044\u3067\u3059\u3002\n\u5b9f\u969b\u306e\u51e6\u7406\u3068\u3001\u623b\u308a\u5024\u3092\u4f5c\u308b\u3068\u3053\u308d\u307e\u3067\u305c\u3093\u3076ChatService\u3067\u3084\u3063\u3066\u3044\u307e\u3059\u3002\n\napp/controllers/Application.scala\npackage controllers\n\nimport play.api._\nimport play.api.mvc._\n\nimport services.ChatService\n\nobject Application extends Controller with ChatService {\n\n  def index = Action { request => Ok(views.html.index()) }\n\n  def chat(roomId:String) = WebSocket.async[String] { request =>\n    val userName = request.queryString(\"user_name\").headOption.getOrElse(\"anon\")\n\n    chatService.start(roomId, userName)\n  }\n}\n\n\n\n\u30b5\u30fc\u30d3\u30b9\nChatService\u3068\u3044\u3046\u30b5\u30fc\u30d3\u30b9\u3067\u3001\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u306e\u53d6\u5f97\u3068\u901a\u77e5\u3001WebSocket\u7528\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nactor\u3068\u306e\u901a\u4fe1\u306fFuture\u306b\u306a\u308b\u306e\u3067\u3001flatMap\u3092\u4f7f\u3063\u3066\u51e6\u7406\u3092\u3064\u306a\u3052\u3066\u3044\u307e\u3059\u3002\n\napp/services/ChatService.scala\npackage services\n\nimport scala.concurrent._\nimport scala.concurrent.duration._\nimport scala.concurrent.Future._\n\nimport scala.language.postfixOps\n\nimport akka.actor._\nimport akka.util.Timeout\n\nimport play.api.libs.iteratee._\nimport play.api.libs.concurrent._\nimport play.api.libs.concurrent.Execution.Implicits._\n//import play.api.libs.json.Json\n\nimport models.chat._\nimport services._\n\nclass ChatServiceImpl extends ChatRoomRepository with ChatRoomService {\n  // \n  def start(roomId:String, userName:String) = repository.chatRoom(roomId).flatMap {\n    case chatRoom:ActorRef => chatRoomService.join(chatRoom, userName)\n    case _                 => error\n  }\n\n  private def error = future {\n    val response = ChatResponse(room = \"none\", name = \"system\", text = \"chat room not found\")\n    (Iteratee.ignore[String], Enumerator[String](response.toString))\n  }\n}\n\ntrait ChatService {\n  def chatService = new ChatServiceImpl\n}\n\n\nChatRoomService\u3067\u5b9f\u969b\u306bWebSocket\u304c\u5fc5\u8981\u3068\u3059\u308b\u623b\u308a\u5024\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\n\napp/services/ChatRoomService.scala\npackage services\n\nimport scala.concurrent._\nimport scala.concurrent.duration._\n//import scala.concurrent.Future._\n\nimport scala.language.postfixOps\n\nimport akka.actor._\nimport akka.pattern.ask\nimport akka.util.Timeout\n\nimport play.api.libs.iteratee._\nimport play.api.libs.concurrent._\nimport play.api.libs.concurrent.Execution.Implicits._\nimport play.api.libs.json.Json\n\nimport models.chat._\nimport services._\n\nclass ChatRoomServiceImpl {\n  private[this] implicit val timeout = Timeout(1 second)\n\n  def join(chatRoom:ActorRef, userName:String) = (chatRoom ? Join(userName)).map {\n    case Joined(enumerator) => (in(chatRoom, userName), enumerator)\n    case _                  => error(chatRoom)\n  }\n\n  private def in(chatRoom:ActorRef, userName:String) = {\n    Iteratee.foreach[String](text => chatRoom ! Talk(userName, text)).map(_ => chatRoom ! Leave(userName))\n  }\n\n  private def error(chatRoom:ActorRef) = {\n    val response = ChatResponse(room = chatRoom.toString, name = \"system\", text = \"can not join\")\n    (Iteratee.ignore[String], Enumerator[String](response.toString))\n  }\n}\n\ntrait ChatRoomService {\n  def chatRoomService = new ChatRoomServiceImpl\n}\n\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\napp/services/ChatResponse.scala\npackage services\n\nimport play.api.libs.json.Json\n\ncase class ChatResponse(room:String, name:String, text:String) {\n  override def toString = {\n    Json.toJson(Map(\"room\" -> room, \"name\" -> name, \"text\" -> text)).toString\n  }\n}\n\n\n\n\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u306e\u53d6\u5f97(\u691c\u7d22\u3068\u751f\u6210)\n\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u306fChatRoomRepository\u30a2\u30af\u30bf\u30fc\u306e\u5b50\u4f9b\u3068\u3057\u3066\u751f\u6210\u3057\u3001ChatRoomRepository\u3092\u901a\u3057\u3066\u53d6\u5f97\u30fb\u751f\u6210\u3092\u884c\u3046\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\napp/models/ChatRoomRepository.scala\npackage models.chat\n\nimport akka.actor._\nimport akka.pattern.ask\nimport akka.util.Timeout\nimport akka.actor.Identify._\n\nimport scala.concurrent.duration._\nimport scala.util.Success\nimport scala.language.postfixOps\n\nimport play.api._\nimport play.api.Play.current\nimport play.api.libs.iteratee._\nimport play.api.libs.concurrent._\nimport play.api.libs.concurrent.Execution.Implicits._\n\nimport scala.concurrent.Future\n\ncase class FindChatRoom(roomId:String)\n\nclass ChatRoomRepositoryActor extends Actor with ChatRoomFactory {\n  implicit val timeout = Timeout(1 second)\n\n  def receive = {\n    case FindChatRoom(roomId) => sender ! chatRoom(roomId)\n    case x                    => println(x.toString)\n  }\n\n  private def chatRoom(roomId:String) = context.child(roomId) match {\n    case Some(room) => room\n    case None => createChatRoom(roomId)\n  }\n}\n\nobject ChatRoomRepository {\n  implicit val timeout = Timeout(1 second)\n  private[this] val repository = Akka.system.actorOf(Props[ChatRoomRepositoryActor])\n\n  def chatRoom(roomId:String) = repository ? FindChatRoom(roomId)\n}\n\ntrait ChatRoomRepository {\n  val repository = ChatRoomRepository\n}\n\n\nChatRoomFactory\u3092\u4f7f\u3063\u3066\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0(ChatRoom\u3068\u3044\u3046\u30a2\u30af\u30bf\u30fc)\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\nChatRoomFactory.scala\npackage models.chat\n\nimport akka.actor._\nimport akka.pattern.ask\n\ntrait ChatRoomFactory { this:Actor =>\n\n  def createChatRoom(name:String) = context.actorOf(Props(classOf[ChatRoom], name), name)\n\n}\n\n\n\n\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\n\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u672c\u4f53\u306b\u306a\u308bActor\u3067\u3059\u3002\n\u3044\u308d\u3044\u308d\u306a\u30b5\u30f3\u30d7\u30eb\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u3068\u304a\u308a Concurrent.broadcast \u3092\u4f7f\u3063\u3066Enumerator\u3092\u53d6\u5f97\u3057\u3001\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u3092\u4f7f\u3046\u3059\u3079\u3066\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u5171\u6709\u3057\u3066\u3044\u307e\u3059\u3002\n\nChatRoom.scala\npackage models.chat\n\nimport scala.language.postfixOps\nimport scala.concurrent.duration._\nimport scala.concurrent.Future\n\nimport akka.actor._\nimport akka.pattern.ask\nimport akka.util.Timeout\n\nimport play.api._\nimport play.api.Play.current\nimport play.api.libs.iteratee._\nimport play.api.libs.concurrent._\nimport play.api.libs.concurrent.Execution.Implicits._\n\nimport services._\n\ncase class Join(userName:String)\ncase class Leave(userName:String)\ncase class NewMember(userName:String)\ncase class Talk(userName:String, text:String)\ncase class Joined(enumerator:Enumerator[String])\n\ncase class ChatRoom(roomId:String) extends Actor {\n  private[this] val (enumerator, channel) = Concurrent.broadcast[String]\n\n  def receive = {\n    case Join(userName)       => join(userName)\n    case Leave(userName)      => dispatch(\"system\", s\"$userName is gone\")\n    case NewMember(userName)  => dispatch(\"system\", s\"$userName joined\")\n    case Talk(userName, text) => dispatch(userName, text)\n  }\n\n  private def join(userName:String) = {\n    sender ! Joined(enumerator)\n    self ! NewMember(userName)\n  }\n\n  private def dispatch(name:String, text:String) = {\n    val response = ChatResponse(room = roomId, name = name, text = text)\n    channel.push(response.toString)\n  }\n}\n\n\n\n\u30d3\u30e5\u30fc\n\u30d5\u30ed\u30f3\u30c8\u306f\u5c02\u9580\u5916\u306a\u306e\u3067\u3001\u3053\u3063\u3061\u306fangular.js\u3092\u3064\u304b\u3063\u3066\u30ac\u30ea\u30ac\u30ea\u3068\u66f8\u304d\u307e\u3059\u3002\n\nmain.scala.html\n@(title: String)(content: Html)\n\n<!DOCTYPE html>\n\n<html ng-app=\"chatApp\">\n    <head>\n        <title>@title</title>\n        <link rel=\"stylesheet\" media=\"screen\" href=\"@routes.Assets.at(\"stylesheets/main.css\")\">\n        <link rel=\"shortcut icon\" type=\"image/png\" href=\"@routes.Assets.at(\"images/favicon.png\")\">\n        <script src=\"@routes.Assets.at(\"javascripts/jquery-1.9.0.min.js\")\" type=\"text/javascript\"></script>\n        <script type=\"text/javascript\" src=\"@routes.Assets.at(\"javascripts/angular.js\")\"></script>\n        <script type=\"text/javascript\" src=\"@routes.Assets.at(\"javascripts/controllers.js\")\"></script>\n    </head>\n    <body>\n        @content\n    </body>\n</html>\n\n\n\u30d3\u30e5\u30fc\u306e\u672c\u4f53\u3002 Angular.js\u306e\u304a\u304b\u3052\u3067\u3059\u3063\u304d\u308a\u3057\u305f\u3082\u3093\u3067\u3059\u3002\n\nindex.scala.html\n@main(\"Akka test\") {\n\n    <section ng-controller=\"ChatCtrl\">\n\n        name:<input type=\"text\" id=\"username\" name=\"username\" ng-model=\"username\" />&nbsp;\n        room:<input type=\"text\" id=\"room\" name=\"room\" ng-model=\"room\" />&nbsp;\n        <button ng-click=\"join(room,username)\">Join</button>\n        <br />\n\n        messsage: <input type=\"text\" id=\"message\" name=\"message\" ng-model=\"message\" />&nbsp;\n        <button ng-click=\"send(message)\">Send</button>\n\n        <hr />\n        <article>\n            <p ng-repeat=\"message in messages\" ng-model=\"messages\">\n                {{message.name}} says: {{message.text}}\n            </p>\n        </article>\n    </section>\n}\n\n\n\u3059\u3054\u304f\u9069\u5f53\u306b\u4f5c\u3063\u305fangular.js\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3002WebSocket\u306e\u3042\u305f\u308a\u3001\u3060\u3044\u3076\u3072\u3069\u3044\u4f5c\u308a\u306b\u306a\u3063\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\n\npublic/javascripts/controllers.js\nvar chatApp = angular.module('chatApp', []);\n\nchatApp.controller('ChatCtrl', function ($scope) {\n  $scope.messages = [];\n  $scope.socket = null;\n\n  $scope.username = \"1\";\n  $scope.room = 'Lobby1';\n\n  $scope.join = function(room, username) {\n    if($scope.socket) $scope.socket.close();\n\n    var socket = new WebSocket(\"ws://localhost:9000/chat/\" + room + \"?user_name=\" + username);\n    socket.open = function() { socket.send(\"hello\"); }\n    socket.onclose = function() {}\n    socket.onmessage = function (e) {\n      $scope.$apply(function() { $scope.messages.push(JSON.parse(e.data)); });\n    }\n    $scope.socket = socket;\n  };\n\n  $scope.send = function(message) {\n    $scope.socket.send(message);\n  }\n});\n\n\nWebSocket\u3092\u3059\u3054\u304f\u7c21\u5358\u306b\u6271\u3048\u308b\u306e\u3068\u3001Actor\u3067\u975e\u540c\u671f\u306a\u90e8\u5206\u3092\u7c21\u5358\u306b\u304b\u3051\u308b\u306e\u3067\u3001\u3059\u3054\u304f\u697d\u3067\u3057\u305f\u3002\n\u3042\u3068\u306f\u8907\u6570\u306e\u30b5\u30fc\u30d0\u3067Actor\u3092\u5206\u6563\u3057\u305f\u308a\u3001\u3061\u3083\u3093\u3068\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u3057\u305f\u3044\u306a\u3063\u3066\u601d\u3063\u3066\u3044\u307e\u3059\u3002\nPlayFramework\u4e0a\u3067WebSocket\u3068Akka\u3092\u8a66\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3057\u3066\u3001\u3088\u304f\u3042\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3051\u308c\u3069\u3082\u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u3044\u3063\u3071\u3044\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8cbc\u4ed8\u3051\u305f\u306e\u3067\u9577\u304f\u306a\u308a\u307e\u3057\u305f\u304c\u3001PlayFramework\u3082Actor\u3082\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u3044\u306e\u3067\u3001\u4f55\u304b\u30a2\u30c9\u30d0\u30a4\u30b9\u306a\u3069\u9802\u3051\u305f\u3089\u5b09\u3057\u3044\u3067\u3059\u3002\n\n# \u65b9\u91dd\n\n* /chat/\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0ID?user_name=\u30e6\u30fc\u30b6\u540d \u3068\u3044\u3046URL\u3067WebSocket\u3092\u4f7f\u3063\u3066API\u3092\u4f5c\u308b\n* \u8868\u793a\u306fAngular.js\u3067\u3084\u308b\n* \u901a\u4fe1\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u4e0a\u308a\u304c\u30d7\u30ec\u30fc\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u3001\u4e0b\u308a\u3092JSON\u306b\u3059\u308b\n* \u30c1\u30e3\u30c3\u30c8\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u306f\u3057\u306a\u3044\n\n# \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3068\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306fApplication\u3092\u305d\u306e\u307e\u307e\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n~~~text:conf/routes\nGET     /                           controllers.Application.index\nGET     /chat/:roomId               controllers.Application.chat(roomId:String)\nGET     /assets/*file               controllers.Assets.at(path=\"/public\", file)\n~~~\n\nWebSocket\u306e\u901a\u4fe1\u3092\u5f85\u3061\u53d7\u3051\u308b\u306b\u306f\u3001Action\u3067\u306f\u306a\u304fWebSocket.async\u3092\u4f7f\u3046\u3060\u3051\u3067\u3057\u305f\u3002\u3059\u3054\u3044\uff01\n\u623b\u308a\u5024\u306f Future[(Iteratee[T,_], Enumerator[T])] \u3068\u3044\u3046\u611f\u3058\u3089\u3057\u3044\u3067\u3059\u3002\n\n\u5b9f\u969b\u306e\u51e6\u7406\u3068\u3001\u623b\u308a\u5024\u3092\u4f5c\u308b\u3068\u3053\u308d\u307e\u3067\u305c\u3093\u3076ChatService\u3067\u3084\u3063\u3066\u3044\u307e\u3059\u3002\n\n~~~scala:app/controllers/Application.scala\npackage controllers\n\nimport play.api._\nimport play.api.mvc._\n\nimport services.ChatService\n\nobject Application extends Controller with ChatService {\n\n  def index = Action { request => Ok(views.html.index()) }\n\n  def chat(roomId:String) = WebSocket.async[String] { request =>\n    val userName = request.queryString(\"user_name\").headOption.getOrElse(\"anon\")\n\n    chatService.start(roomId, userName)\n  }\n}\n~~~\n\n# \u30b5\u30fc\u30d3\u30b9\n\nChatService\u3068\u3044\u3046\u30b5\u30fc\u30d3\u30b9\u3067\u3001\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u306e\u53d6\u5f97\u3068\u901a\u77e5\u3001WebSocket\u7528\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nactor\u3068\u306e\u901a\u4fe1\u306fFuture\u306b\u306a\u308b\u306e\u3067\u3001flatMap\u3092\u4f7f\u3063\u3066\u51e6\u7406\u3092\u3064\u306a\u3052\u3066\u3044\u307e\u3059\u3002\n\n~~~scala:app/services/ChatService.scala\npackage services\n\nimport scala.concurrent._\nimport scala.concurrent.duration._\nimport scala.concurrent.Future._\n\nimport scala.language.postfixOps\n\nimport akka.actor._\nimport akka.util.Timeout\n\nimport play.api.libs.iteratee._\nimport play.api.libs.concurrent._\nimport play.api.libs.concurrent.Execution.Implicits._\n//import play.api.libs.json.Json\n\nimport models.chat._\nimport services._\n\nclass ChatServiceImpl extends ChatRoomRepository with ChatRoomService {\n  // \n  def start(roomId:String, userName:String) = repository.chatRoom(roomId).flatMap {\n    case chatRoom:ActorRef => chatRoomService.join(chatRoom, userName)\n    case _                 => error\n  }\n\n  private def error = future {\n    val response = ChatResponse(room = \"none\", name = \"system\", text = \"chat room not found\")\n    (Iteratee.ignore[String], Enumerator[String](response.toString))\n  }\n}\n\ntrait ChatService {\n  def chatService = new ChatServiceImpl\n}\n~~~\n\nChatRoomService\u3067\u5b9f\u969b\u306bWebSocket\u304c\u5fc5\u8981\u3068\u3059\u308b\u623b\u308a\u5024\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\n\n~~~scala:app/services/ChatRoomService.scala\npackage services\n\nimport scala.concurrent._\nimport scala.concurrent.duration._\n//import scala.concurrent.Future._\n\nimport scala.language.postfixOps\n\nimport akka.actor._\nimport akka.pattern.ask\nimport akka.util.Timeout\n\nimport play.api.libs.iteratee._\nimport play.api.libs.concurrent._\nimport play.api.libs.concurrent.Execution.Implicits._\nimport play.api.libs.json.Json\n\nimport models.chat._\nimport services._\n\nclass ChatRoomServiceImpl {\n  private[this] implicit val timeout = Timeout(1 second)\n\n  def join(chatRoom:ActorRef, userName:String) = (chatRoom ? Join(userName)).map {\n    case Joined(enumerator) => (in(chatRoom, userName), enumerator)\n    case _                  => error(chatRoom)\n  }\n\n  private def in(chatRoom:ActorRef, userName:String) = {\n    Iteratee.foreach[String](text => chatRoom ! Talk(userName, text)).map(_ => chatRoom ! Leave(userName))\n  }\n\n  private def error(chatRoom:ActorRef) = {\n    val response = ChatResponse(room = chatRoom.toString, name = \"system\", text = \"can not join\")\n    (Iteratee.ignore[String], Enumerator[String](response.toString))\n  }\n}\n\ntrait ChatRoomService {\n  def chatRoomService = new ChatRoomServiceImpl\n}\n~~~\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n~~~scala:app/services/ChatResponse.scala\npackage services\n\nimport play.api.libs.json.Json\n\ncase class ChatResponse(room:String, name:String, text:String) {\n  override def toString = {\n    Json.toJson(Map(\"room\" -> room, \"name\" -> name, \"text\" -> text)).toString\n  }\n}\n~~~\n\n# \u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u306e\u53d6\u5f97(\u691c\u7d22\u3068\u751f\u6210)\n\n\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u306fChatRoomRepository\u30a2\u30af\u30bf\u30fc\u306e\u5b50\u4f9b\u3068\u3057\u3066\u751f\u6210\u3057\u3001ChatRoomRepository\u3092\u901a\u3057\u3066\u53d6\u5f97\u30fb\u751f\u6210\u3092\u884c\u3046\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n~~~scala:app/models/ChatRoomRepository.scala\npackage models.chat\n\nimport akka.actor._\nimport akka.pattern.ask\nimport akka.util.Timeout\nimport akka.actor.Identify._\n\nimport scala.concurrent.duration._\nimport scala.util.Success\nimport scala.language.postfixOps\n\nimport play.api._\nimport play.api.Play.current\nimport play.api.libs.iteratee._\nimport play.api.libs.concurrent._\nimport play.api.libs.concurrent.Execution.Implicits._\n\nimport scala.concurrent.Future\n\ncase class FindChatRoom(roomId:String)\n\nclass ChatRoomRepositoryActor extends Actor with ChatRoomFactory {\n  implicit val timeout = Timeout(1 second)\n\n  def receive = {\n    case FindChatRoom(roomId) => sender ! chatRoom(roomId)\n    case x                    => println(x.toString)\n  }\n\n  private def chatRoom(roomId:String) = context.child(roomId) match {\n    case Some(room) => room\n    case None => createChatRoom(roomId)\n  }\n}\n\nobject ChatRoomRepository {\n  implicit val timeout = Timeout(1 second)\n  private[this] val repository = Akka.system.actorOf(Props[ChatRoomRepositoryActor])\n\n  def chatRoom(roomId:String) = repository ? FindChatRoom(roomId)\n}\n\ntrait ChatRoomRepository {\n  val repository = ChatRoomRepository\n}\n~~~\n\nChatRoomFactory\u3092\u4f7f\u3063\u3066\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0(ChatRoom\u3068\u3044\u3046\u30a2\u30af\u30bf\u30fc)\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n~~~scala:ChatRoomFactory.scala\npackage models.chat\n\nimport akka.actor._\nimport akka.pattern.ask\n\ntrait ChatRoomFactory { this:Actor =>\n\n  def createChatRoom(name:String) = context.actorOf(Props(classOf[ChatRoom], name), name)\n\n}\n~~~\n\n# \u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\n\n\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u672c\u4f53\u306b\u306a\u308bActor\u3067\u3059\u3002\n\u3044\u308d\u3044\u308d\u306a\u30b5\u30f3\u30d7\u30eb\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u3068\u304a\u308a Concurrent.broadcast \u3092\u4f7f\u3063\u3066Enumerator\u3092\u53d6\u5f97\u3057\u3001\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u3092\u4f7f\u3046\u3059\u3079\u3066\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u5171\u6709\u3057\u3066\u3044\u307e\u3059\u3002\n\n~~~scala:ChatRoom.scala\npackage models.chat\n\nimport scala.language.postfixOps\nimport scala.concurrent.duration._\nimport scala.concurrent.Future\n\nimport akka.actor._\nimport akka.pattern.ask\nimport akka.util.Timeout\n\nimport play.api._\nimport play.api.Play.current\nimport play.api.libs.iteratee._\nimport play.api.libs.concurrent._\nimport play.api.libs.concurrent.Execution.Implicits._\n\nimport services._\n\ncase class Join(userName:String)\ncase class Leave(userName:String)\ncase class NewMember(userName:String)\ncase class Talk(userName:String, text:String)\ncase class Joined(enumerator:Enumerator[String])\n\ncase class ChatRoom(roomId:String) extends Actor {\n  private[this] val (enumerator, channel) = Concurrent.broadcast[String]\n\n  def receive = {\n    case Join(userName)       => join(userName)\n    case Leave(userName)      => dispatch(\"system\", s\"$userName is gone\")\n    case NewMember(userName)  => dispatch(\"system\", s\"$userName joined\")\n    case Talk(userName, text) => dispatch(userName, text)\n  }\n\n  private def join(userName:String) = {\n    sender ! Joined(enumerator)\n    self ! NewMember(userName)\n  }\n\n  private def dispatch(name:String, text:String) = {\n    val response = ChatResponse(room = roomId, name = name, text = text)\n    channel.push(response.toString)\n  }\n}\n~~~\n\n# \u30d3\u30e5\u30fc\n\n\u30d5\u30ed\u30f3\u30c8\u306f\u5c02\u9580\u5916\u306a\u306e\u3067\u3001\u3053\u3063\u3061\u306fangular.js\u3092\u3064\u304b\u3063\u3066\u30ac\u30ea\u30ac\u30ea\u3068\u66f8\u304d\u307e\u3059\u3002\n\n~~~html:main.scala.html\n@(title: String)(content: Html)\n\n<!DOCTYPE html>\n\n<html ng-app=\"chatApp\">\n    <head>\n        <title>@title</title>\n        <link rel=\"stylesheet\" media=\"screen\" href=\"@routes.Assets.at(\"stylesheets/main.css\")\">\n        <link rel=\"shortcut icon\" type=\"image/png\" href=\"@routes.Assets.at(\"images/favicon.png\")\">\n        <script src=\"@routes.Assets.at(\"javascripts/jquery-1.9.0.min.js\")\" type=\"text/javascript\"></script>\n        <script type=\"text/javascript\" src=\"@routes.Assets.at(\"javascripts/angular.js\")\"></script>\n        <script type=\"text/javascript\" src=\"@routes.Assets.at(\"javascripts/controllers.js\")\"></script>\n    </head>\n    <body>\n        @content\n    </body>\n</html>\n~~~\n\n\u30d3\u30e5\u30fc\u306e\u672c\u4f53\u3002 Angular.js\u306e\u304a\u304b\u3052\u3067\u3059\u3063\u304d\u308a\u3057\u305f\u3082\u3093\u3067\u3059\u3002\n\n~~~html:index.scala.html\n@main(\"Akka test\") {\n\n\t<section ng-controller=\"ChatCtrl\">\n\n\t\tname:<input type=\"text\" id=\"username\" name=\"username\" ng-model=\"username\" />&nbsp;\n\t\troom:<input type=\"text\" id=\"room\" name=\"room\" ng-model=\"room\" />&nbsp;\n\t\t<button ng-click=\"join(room,username)\">Join</button>\n\t\t<br />\n\n\t\tmesssage: <input type=\"text\" id=\"message\" name=\"message\" ng-model=\"message\" />&nbsp;\n\t\t<button ng-click=\"send(message)\">Send</button>\n\n\t\t<hr />\n\t\t<article>\n\t\t\t<p ng-repeat=\"message in messages\" ng-model=\"messages\">\n\t\t\t\t{{message.name}} says: {{message.text}}\n\t\t\t</p>\n\t\t</article>\n\t</section>\n}\n~~~\n\n\u3059\u3054\u304f\u9069\u5f53\u306b\u4f5c\u3063\u305fangular.js\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3002WebSocket\u306e\u3042\u305f\u308a\u3001\u3060\u3044\u3076\u3072\u3069\u3044\u4f5c\u308a\u306b\u306a\u3063\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\n\n~~~javascript:public/javascripts/controllers.js\nvar chatApp = angular.module('chatApp', []);\n\nchatApp.controller('ChatCtrl', function ($scope) {\n  $scope.messages = [];\n  $scope.socket = null;\n\n  $scope.username = \"1\";\n  $scope.room = 'Lobby1';\n\n  $scope.join = function(room, username) {\n    if($scope.socket) $scope.socket.close();\n\n    var socket = new WebSocket(\"ws://localhost:9000/chat/\" + room + \"?user_name=\" + username);\n    socket.open = function() { socket.send(\"hello\"); }\n    socket.onclose = function() {}\n    socket.onmessage = function (e) {\n      $scope.$apply(function() { $scope.messages.push(JSON.parse(e.data)); });\n    }\n    $scope.socket = socket;\n  };\n\n  $scope.send = function(message) {\n  \t$scope.socket.send(message);\n  }\n});\n~~~\n\nWebSocket\u3092\u3059\u3054\u304f\u7c21\u5358\u306b\u6271\u3048\u308b\u306e\u3068\u3001Actor\u3067\u975e\u540c\u671f\u306a\u90e8\u5206\u3092\u7c21\u5358\u306b\u304b\u3051\u308b\u306e\u3067\u3001\u3059\u3054\u304f\u697d\u3067\u3057\u305f\u3002\n\u3042\u3068\u306f\u8907\u6570\u306e\u30b5\u30fc\u30d0\u3067Actor\u3092\u5206\u6563\u3057\u305f\u308a\u3001\u3061\u3083\u3093\u3068\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u3057\u305f\u3044\u306a\u3063\u3066\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n"}