{"tags": ["Android", "RxJava", "\u3042\u306a\u305f\u3068\u30b8\u30e3\u30d0"], "context": " More than 1 year has passed since last update.\n\u3053\u308c\u3089\u306e\u4e00\u9023\u306e\u5b9f\u88c5\u3092\u3069\u3046\u3059\u308b\u304b\u8003\u3048\u3066\u3044\u305f\u3002\n\n\u524d\u63d0\n\nREST API\u3092\u4f7f\u3063\u3066\u3044\u308b\nAPI\u306f\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb+\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u8fd4\u3059\n\u30e2\u30c7\u30eb\u306f\u30e1\u30e2\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5\u3001\u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u3082\u5bfe\u5fdc\u3059\u308b\n\n\n\u30e2\u30c7\u30eb\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5f62\u5f0f\n\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u4e2d\u306b\u306f\u30da\u30fc\u30b8\u60c5\u5831\u306a\u3069\u3001\u30b5\u30fc\u30d0/\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u30c7\u30fc\u30bf\u3092\u3084\u308a\u3068\u308a\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u308b\u3002\n\u30e1\u30bf\u30c7\u30fc\u30bf\u306f\u30e2\u30c7\u30eb\u306e\u5916\u306b\u6301\u305f\u305b\u305f\u3044\u306e\u3067\u3001\u30e2\u30c7\u30eb\u5c64\u3092Response\u30af\u30e9\u30b9\u3067\u30e9\u30c3\u30d7\u3057\u305f\u3002\u3053\u3053\u306b\u30da\u30fc\u30b8\u30cd\u30fc\u30b7\u30e7\u30f3\u306e\u3057\u304f\u307f\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u306b\u3059\u308b\u3002\npublic class Response<T> {\n    private T result;\n    private Extra extra;\n    private Observable<Response<T>> next;\n\n    public T getResult() {\n        return result;\n    }\n\n    public Extra getExtra() {\n        return extra;\n    }\n\n    public int nextPage() {\n        return extra.getLinks().getNext().getPage();\n    }\n\n    public Observable<Response<T>> getNext() {\n        return next;\n    }\n\nResponse#getNext \u3067\u6b21\u30da\u30fc\u30b8\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u304d\u308b\u53c2\u7167\u304c\u5f97\u3089\u308c\u308b\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3060\u3002\n\n\u30e2\u30c7\u30eb\u3078\u306e\u30a2\u30af\u30bb\u30b9\n\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u30e2\u30c7\u30eb\u306e\u53d6\u5f97\u5148\u306e\u62bd\u8c61\u5316\u3092\u3059\u308b\u3002\nnew RecipeService().search(\"tapas\", 1); // \u3069\u3053\u304b\u304b\u3089\u304b\u30e2\u30c7\u30eb\u304c\u8fd4\u3063\u3066\u304f\u308b\n\nRecipeService#search \u306f\uff08\u4eca\u306f\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u304c\uff09\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u30d2\u30c3\u30c8\u3057\u306a\u304b\u3063\u305f\u3089API\u3092\u53e9\u3044\u3066\u7d50\u679c\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u3002\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u53d7\u3051\u305f\u3068\u304d\u306b\u6b21\u306e\u30da\u30fc\u30b8\u306eObservable\u3092\u4f5c\u3063\u3066\u30bb\u30c3\u30c8\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30ea\u30b9\u30c8\u306e\u6700\u5f8c\u307e\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u305f\u3068\u304d\u306b Response#getNext \u3067\u6b21\u306e\u30da\u30fc\u30b8\u3092\u8981\u6c42\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\npublic Observable<Response<List<Recipe>>> search(final String keyword, final int page) {\n    String path = String.format(\"/recipes?keyword=%s&page=%s\", keyword, page);\n    return request(Method.GET, path, null, null, new TypeToken<Response<List<Recipe>>>() {\n    }).map(new Func1<Response<List<Recipe>>, Response<List<Recipe>>>() {\n        @Override\n        public Response<List<Recipe>> call(Response<List<Recipe>> r) {\n            r.setNext(search(keyword, r.nextPage()));\n            return r;\n        }\n    });\n}\n\npublic <T> Observable<T> request(Method method, String path, Map<String, String> headers, RequestBody body, TypeToken<T> type) {\n    return Observable.create(new RequestSubscriber<>(method, path, headers, body, type))\n            .subscribeOn(Schedulers.io())\n            .observeOn(AndroidSchedulers.mainThread());\n}\n\n\u88dc\u8db3\u3092\u3059\u308b\u3068\u3001Android\u306fJava 7\u3067\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3001\u3068\u3044\u3046\u304bJava 8\u306f\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001\u30e9\u30e0\u30c0\u3067\u306f\u306a\u304fFunc1\u3084Action1\u306a\u3069\u3092\u7d99\u627f\u3057\u3066\u4f7f\u3063\u3066\u3044\u308b\u3002\n\u305f\u3060\u3057 Retrolambda \u306e\u3088\u3046\u306a\u30d0\u30c3\u30af\u30dd\u30fc\u30c6\u30a3\u30f3\u30b0\u30c4\u30fc\u30eb\u3092\u4f7f\u3046\u3053\u3068\u3067\u30e9\u30e0\u30c0\u306a\u3069\u306e\u4e00\u90e8\u6a5f\u80fd\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n\u30ea\u30b9\u30c8\u3068\u30c7\u30fc\u30bf\u306e\u30a2\u30c0\u30d7\u30bf\u30fc\n\u6700\u521d\u306bController\u304b\u3089keyword\u3092\u6e21\u3057\u3066\u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u521d\u671f\u5316\u3059\u308b\u3002\nSearchResultAdapter searchResultAdapter = new SearchResultAdapter(this);\nsearchResultAdapter.search(\"tapas\");\n\n\u30a2\u30c0\u30d7\u30bf\u30fc\u306f\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u53d7\u3051\u53d6\u3063\u305f\u3089Subject\u3092\u751f\u6210\u3059\u308b\u3002\u3053\u308c\u306f\u3042\u3068\u3067\u30a4\u30d9\u30f3\u30c8\u306e\u767a\u706b\u306b\u4f7f\u3046\u3002\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u3063\u305f\u3068\u304d\u306b\u306f\u6b21\u306e\u30da\u30fc\u30b8\u306eObservable\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3082\u4fdd\u6301\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3002\npublic void search(String keyword) {\n    responseSubject = BehaviorSubject.create(new RecipeService().search(keyword, 1));\n    responseSubject.flatMap(new Func1<Observable<Response<List<Recipe>>>, Observable<Response<List<Recipe>>>>() {\n        @Override\n        public Observable<Response<List<Recipe>>> call(Observable<Response<List<Recipe>>> r) {\n            return r;\n        }\n    }).subscribe(new Action1<Response<List<Recipe>>>() {\n        @Override\n        public void call(Response<List<Recipe>> r) {\n            recipes.addAll(r.getResult());\n            notifyDataSetChanged();\n\n            pagedResponse = r.getNext();\n        }\n    });\n}\n\n\n\u6b21\u306e\u30da\u30fc\u30b8\u306e\u8981\u6c42\n\u672b\u7aef\u307e\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u305f\u3068\u304d\u306b\u767a\u706b\u3059\u308b\u3002\n@Override\npublic void onBindViewHolder(ViewHolder viewHolder, int i) {\n    ...\n    if (recipes.size() - 1 == i) {\n        responseSubject.onNext(pagedResponse);\n    }\n\n\n\u96d1\u611f\nRxJava\u304c\u6700\u8fd1\u6d41\u884c\u3063\u3066\u308b\u3063\u307d\u3044\uff08RxJava Night #rxjnight - connpass\uff09\u306e\u3067\u5c0e\u5165\u3059\u308b\u304b\u5224\u65ad\u3059\u308b\u305f\u3081\u306b\u3001\u5b9f\u7528\u7684\u306a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u6319\u3052\u3066\u305d\u308c\u304c\u5b9f\u88c5\u3067\u304d\u308b\u304b\u691c\u8a0e\u3057\u3066\u3044\u308b\u3002\nRxJava\u3092\u4f7f\u3046\u3053\u3068\u3067AsyncTaskLoader\u306a\u3069\u306e\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u3092\u66f8\u304f\u4f5c\u696d\u304b\u3089\u89e3\u653e\u3055\u308c\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u30c7\u30fc\u30bf\u3084\u30a4\u30d9\u30f3\u30c8\u3092\u62bd\u8c61\u7684\u306b\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u6271\u3044\u3084\u3059\u304f\u306a\u3063\u305f\u308a\u3001\u672c\u8cea\u306e\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u306b\u96c6\u4e2d\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u3066\u3044\u308b\u3002\n\u4e00\u65b9\u3067\u3001RxJava\u3092\u5c0e\u5165\u3057\u305f\u3053\u3068\u306b\u3088\u308b\u65b0\u3057\u3044\u8907\u96d1\u3055\u306b\u3069\u3046\u5bfe\u5fdc\u3059\u308b\u304b\u3068\u3044\u3046\u3053\u3068\u3082\u8003\u3048\u3066\u3044\u308b\u3002\n\u6628\u65e5RxJava\u306e\u77e5\u898b\u3092\u6c42\u3081\u3066\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3092\u6cf3\u3044\u3067\u3044\u305f\u3089\u3001RxJava\u3092\u5c0e\u5165\u3057\u305f\u3089eerie problems and sleepless nights\u306b\u306a\u3063\u305f\u3068\u3044\u3046 \u8a18\u4e8b \u3092\u898b\u3064\u3051\u3066\u9707\u3048\u3066\u3044\u305f\u3002\n\u305f\u3076\u3093\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3082\u9069\u5207\u306bunsubscribe\u3057\u306a\u3044\u3068\u3069\u3053\u304b\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3057\u3066\u3044\u308b\u3068\u601d\u3046\u3002\n\u4eca\u307e\u3067\u3082\u3044\u304f\u3064\u304b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5c0e\u5165\u3057\u3066\u5931\u6557\u3057\u305f\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u3001\u4eca\u56de\u3082\u614e\u91cd\u306b\u691c\u8a0e\u3092\u9032\u3081\u3066\u3044\u308b\u304c\u3001\u597d\u5947\u5fc3\u306b\u8ca0\u3051\u3066\u5c0e\u5165\u3057\u3066\u3057\u307e\u3044\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-11-03 16.39.14.png](https://qiita-image-store.s3.amazonaws.com/0/179/1f179092-a2ce-0ff9-ff07-7c27a838f82e.png)\n\n\u3053\u308c\u3089\u306e\u4e00\u9023\u306e\u5b9f\u88c5\u3092\u3069\u3046\u3059\u308b\u304b\u8003\u3048\u3066\u3044\u305f\u3002\n\n# \u524d\u63d0\n\n1. REST API\u3092\u4f7f\u3063\u3066\u3044\u308b\n2. API\u306f\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb+\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u8fd4\u3059\n3. \u30e2\u30c7\u30eb\u306f\u30e1\u30e2\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5\u3001\u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u3082\u5bfe\u5fdc\u3059\u308b\n\n# \u30e2\u30c7\u30eb\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5f62\u5f0f\n\n\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u4e2d\u306b\u306f\u30da\u30fc\u30b8\u60c5\u5831\u306a\u3069\u3001\u30b5\u30fc\u30d0/\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u30c7\u30fc\u30bf\u3092\u3084\u308a\u3068\u308a\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u308b\u3002\n\u30e1\u30bf\u30c7\u30fc\u30bf\u306f\u30e2\u30c7\u30eb\u306e\u5916\u306b\u6301\u305f\u305b\u305f\u3044\u306e\u3067\u3001\u30e2\u30c7\u30eb\u5c64\u3092Response\u30af\u30e9\u30b9\u3067\u30e9\u30c3\u30d7\u3057\u305f\u3002\u3053\u3053\u306b\u30da\u30fc\u30b8\u30cd\u30fc\u30b7\u30e7\u30f3\u306e\u3057\u304f\u307f\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\n```java\npublic class Response<T> {\n    private T result;\n    private Extra extra;\n    private Observable<Response<T>> next;\n\n    public T getResult() {\n        return result;\n    }\n\n    public Extra getExtra() {\n        return extra;\n    }\n\n    public int nextPage() {\n        return extra.getLinks().getNext().getPage();\n    }\n\n    public Observable<Response<T>> getNext() {\n        return next;\n    }\n```\n\n`Response#getNext` \u3067\u6b21\u30da\u30fc\u30b8\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u304d\u308b\u53c2\u7167\u304c\u5f97\u3089\u308c\u308b\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3060\u3002\n\n# \u30e2\u30c7\u30eb\u3078\u306e\u30a2\u30af\u30bb\u30b9\n\n\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u30e2\u30c7\u30eb\u306e\u53d6\u5f97\u5148\u306e\u62bd\u8c61\u5316\u3092\u3059\u308b\u3002\n\n```java\nnew RecipeService().search(\"tapas\", 1); // \u3069\u3053\u304b\u304b\u3089\u304b\u30e2\u30c7\u30eb\u304c\u8fd4\u3063\u3066\u304f\u308b\n```\n\n`RecipeService#search` \u306f\uff08\u4eca\u306f\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u304c\uff09\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u30d2\u30c3\u30c8\u3057\u306a\u304b\u3063\u305f\u3089API\u3092\u53e9\u3044\u3066\u7d50\u679c\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u3002\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u53d7\u3051\u305f\u3068\u304d\u306b\u6b21\u306e\u30da\u30fc\u30b8\u306eObservable\u3092\u4f5c\u3063\u3066\u30bb\u30c3\u30c8\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30ea\u30b9\u30c8\u306e\u6700\u5f8c\u307e\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u305f\u3068\u304d\u306b `Response#getNext` \u3067\u6b21\u306e\u30da\u30fc\u30b8\u3092\u8981\u6c42\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n```java\npublic Observable<Response<List<Recipe>>> search(final String keyword, final int page) {\n    String path = String.format(\"/recipes?keyword=%s&page=%s\", keyword, page);\n    return request(Method.GET, path, null, null, new TypeToken<Response<List<Recipe>>>() {\n    }).map(new Func1<Response<List<Recipe>>, Response<List<Recipe>>>() {\n        @Override\n        public Response<List<Recipe>> call(Response<List<Recipe>> r) {\n            r.setNext(search(keyword, r.nextPage()));\n            return r;\n        }\n    });\n}\n\npublic <T> Observable<T> request(Method method, String path, Map<String, String> headers, RequestBody body, TypeToken<T> type) {\n    return Observable.create(new RequestSubscriber<>(method, path, headers, body, type))\n            .subscribeOn(Schedulers.io())\n            .observeOn(AndroidSchedulers.mainThread());\n}\n```\n\n\u88dc\u8db3\u3092\u3059\u308b\u3068\u3001Android\u306fJava 7\u3067\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3001\u3068\u3044\u3046\u304bJava 8\u306f\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001\u30e9\u30e0\u30c0\u3067\u306f\u306a\u304fFunc1\u3084Action1\u306a\u3069\u3092\u7d99\u627f\u3057\u3066\u4f7f\u3063\u3066\u3044\u308b\u3002\n\u305f\u3060\u3057 [Retrolambda](https://github.com/orfjackal/retrolambda) \u306e\u3088\u3046\u306a\u30d0\u30c3\u30af\u30dd\u30fc\u30c6\u30a3\u30f3\u30b0\u30c4\u30fc\u30eb\u3092\u4f7f\u3046\u3053\u3068\u3067\u30e9\u30e0\u30c0\u306a\u3069\u306e\u4e00\u90e8\u6a5f\u80fd\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n# \u30ea\u30b9\u30c8\u3068\u30c7\u30fc\u30bf\u306e\u30a2\u30c0\u30d7\u30bf\u30fc\n\n\u6700\u521d\u306bController\u304b\u3089keyword\u3092\u6e21\u3057\u3066\u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n\n```java\nSearchResultAdapter searchResultAdapter = new SearchResultAdapter(this);\nsearchResultAdapter.search(\"tapas\");\n```\n\n\u30a2\u30c0\u30d7\u30bf\u30fc\u306f\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u53d7\u3051\u53d6\u3063\u305f\u3089Subject\u3092\u751f\u6210\u3059\u308b\u3002\u3053\u308c\u306f\u3042\u3068\u3067\u30a4\u30d9\u30f3\u30c8\u306e\u767a\u706b\u306b\u4f7f\u3046\u3002\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u3063\u305f\u3068\u304d\u306b\u306f\u6b21\u306e\u30da\u30fc\u30b8\u306eObservable\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3082\u4fdd\u6301\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3002\n\n```java\npublic void search(String keyword) {\n    responseSubject = BehaviorSubject.create(new RecipeService().search(keyword, 1));\n    responseSubject.flatMap(new Func1<Observable<Response<List<Recipe>>>, Observable<Response<List<Recipe>>>>() {\n        @Override\n        public Observable<Response<List<Recipe>>> call(Observable<Response<List<Recipe>>> r) {\n            return r;\n        }\n    }).subscribe(new Action1<Response<List<Recipe>>>() {\n        @Override\n        public void call(Response<List<Recipe>> r) {\n            recipes.addAll(r.getResult());\n            notifyDataSetChanged();\n\n            pagedResponse = r.getNext();\n        }\n    });\n}\n```\n\n# \u6b21\u306e\u30da\u30fc\u30b8\u306e\u8981\u6c42\n\n\u672b\u7aef\u307e\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u305f\u3068\u304d\u306b\u767a\u706b\u3059\u308b\u3002\n\n```java\n@Override\npublic void onBindViewHolder(ViewHolder viewHolder, int i) {\n    ...\n    if (recipes.size() - 1 == i) {\n        responseSubject.onNext(pagedResponse);\n    }\n```\n\n# \u96d1\u611f\n\nRxJava\u304c\u6700\u8fd1\u6d41\u884c\u3063\u3066\u308b\u3063\u307d\u3044\uff08[RxJava Night #rxjnight - connpass](http://connpass.com/event/9061/)\uff09\u306e\u3067\u5c0e\u5165\u3059\u308b\u304b\u5224\u65ad\u3059\u308b\u305f\u3081\u306b\u3001\u5b9f\u7528\u7684\u306a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u6319\u3052\u3066\u305d\u308c\u304c\u5b9f\u88c5\u3067\u304d\u308b\u304b\u691c\u8a0e\u3057\u3066\u3044\u308b\u3002\nRxJava\u3092\u4f7f\u3046\u3053\u3068\u3067AsyncTaskLoader\u306a\u3069\u306e\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u3092\u66f8\u304f\u4f5c\u696d\u304b\u3089\u89e3\u653e\u3055\u308c\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u30c7\u30fc\u30bf\u3084\u30a4\u30d9\u30f3\u30c8\u3092\u62bd\u8c61\u7684\u306b\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u6271\u3044\u3084\u3059\u304f\u306a\u3063\u305f\u308a\u3001\u672c\u8cea\u306e\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u306b\u96c6\u4e2d\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u3066\u3044\u308b\u3002\n\n\u4e00\u65b9\u3067\u3001RxJava\u3092\u5c0e\u5165\u3057\u305f\u3053\u3068\u306b\u3088\u308b\u65b0\u3057\u3044\u8907\u96d1\u3055\u306b\u3069\u3046\u5bfe\u5fdc\u3059\u308b\u304b\u3068\u3044\u3046\u3053\u3068\u3082\u8003\u3048\u3066\u3044\u308b\u3002\n\u6628\u65e5RxJava\u306e\u77e5\u898b\u3092\u6c42\u3081\u3066\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3092\u6cf3\u3044\u3067\u3044\u305f\u3089\u3001RxJava\u3092\u5c0e\u5165\u3057\u305f\u3089eerie problems and sleepless nights\u306b\u306a\u3063\u305f\u3068\u3044\u3046 [\u8a18\u4e8b](http://futurice.com/blog/top-7-tips-for-rxjava-on-android) \u3092\u898b\u3064\u3051\u3066\u9707\u3048\u3066\u3044\u305f\u3002\n\u305f\u3076\u3093\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3082\u9069\u5207\u306bunsubscribe\u3057\u306a\u3044\u3068\u3069\u3053\u304b\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3057\u3066\u3044\u308b\u3068\u601d\u3046\u3002\n\n\u4eca\u307e\u3067\u3082\u3044\u304f\u3064\u304b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5c0e\u5165\u3057\u3066\u5931\u6557\u3057\u305f\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u3001\u4eca\u56de\u3082\u614e\u91cd\u306b\u691c\u8a0e\u3092\u9032\u3081\u3066\u3044\u308b\u304c\u3001\u597d\u5947\u5fc3\u306b\u8ca0\u3051\u3066\u5c0e\u5165\u3057\u3066\u3057\u307e\u3044\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\u3002\n"}