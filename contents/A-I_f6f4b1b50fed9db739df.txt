{"tags": ["Veertu", "CoreOS", "docker", "MacOSX"], "context": " More than 1 year has passed since last update.\n\n\u307e\u305a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30e6\u30fc\u30b6\u306e core \u306b\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u8a2d\u5b9a\u3059\u308b\u3002\ncore@localhost ~ $ sudo passwd core\n\n\nIP \u30a2\u30c9\u30ec\u30b9\u3092\u8abf\u3079\u3066 SSH \u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3002\ncore@localhost ~ $ ifconfig ens3\nens3: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 192.168.64.8  netmask 255.255.255.0  broadcast 192.168.64.255\n        inet6 fe80::746d:78ff:fe7c:ddd8  prefixlen 64  scopeid 0x20<link>\n        ether 76:6d:78:7c:dd:d8  txqueuelen 1000  (Ethernet)\n        RX packets 442  bytes 47346 (46.2 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 372  bytes 52894 (51.6 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\n$ ssh core@192.168.64.8  -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\ncore@192.168.64.8's password:\nLast login: Thu Jan  7 15:32:37 2016\nCoreOS stable (766.5.0)\nUpdate Strategy: No Reboots\ncore@localhost ~ $ \n\n\n\u6b21\u306b Docker \u306e\u8a2d\u5b9a\ncore@localhost ~ $ cat /etc/systemd/system/docker-tcp.socket\n[Unit]\nDescription=Docker Socket for the API\n\n[Socket]\nListenStream=2375\nService=docker.service\nBindIPv6Only=both\n\n[Install]\nWantedBy=sockets.target\ncore@localhost ~ $ sudo systemctl stop docker\ncore@localhost ~ $ sudo systemctl start docker-tcp.socket\ncore@localhost ~ $ sudo systemctl start docker\n\n\n$ export DOCKER_HOST=tcp://192.168.64.8:2375\n$ docker info\nError response from daemon: client is newer than server (client API version: 1.21, server API version: 1.19)\n\n(\uff9f\u0434\uff9f)!\n\n\u6c17\u3092\u53d6\u308a\u76f4\u3057\u3066\u3001alpha \u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u6700\u65b0\u7248\u3092\u30c7\u30a3\u30b9\u30af\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n*) \u3053\u3053\u3067\u306f Vagrant \u7528\u306e SSH \u30ad\u30fc\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\ncore@localhost ~ $ cat cloud-config.yml\n#cloud-config\n\nssh_authorized_keys:\n  - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key\n\ncoreos:\n  units:\n    - name: docker-tcp.socket\n      command: start\n      runtime: no\n      content: |\n        [Unit]\n        Description=Docker Socket for the API\n        [Socket]\n        ListenStream=2375\n        Service=docker.service\n        BindIPv6Only=both\n        [Install]\n        WantedBy=sockets.target\n\n    - name: docker.service\n      command: start\ncore@localhost ~ $ sudo coreos-install -d /dev/sda -V current -C alpha -c cloud-config.yml\ncore@localhost ~ $ sudo reboot\n\n$ ssh core@192.168.64.8 -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.vagrant.d/insecure_private_key\nCoreOS alpha (899.1.0)\ncore@localhost ~ $ \n\n$ export DOCKER_HOST=tcp://192.168.64.8:2375\n$ docker info\nContainers: 0\nImages: 0\nServer Version: 1.9.1\nStorage Driver: overlay\n Backing Filesystem: extfs\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.3.3-coreos\nOperating System: CoreOS 899.1.0\nCPUs: 1\nTotal Memory: 997.5 MiB\nName: localhost\nID: Y7IJ:FYUN:5JUZ:KYG6:GBIA:JLCP:JJ7R:237W:RFFT:GGIF:K34F:7I53\nUsername: ailispaw\nRegistry: https://index.docker.io/v1/\n\n(\uff9f\u2200\uff9f)\uff77\uff80\uff7a\uff9a!!\n### \u307e\u305a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30e6\u30fc\u30b6\u306e `core` \u306b\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n```bash\ncore@localhost ~ $ sudo passwd core\n```\n\n### IP \u30a2\u30c9\u30ec\u30b9\u3092\u8abf\u3079\u3066 SSH \u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3002\n\n```bash\ncore@localhost ~ $ ifconfig ens3\nens3: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 192.168.64.8  netmask 255.255.255.0  broadcast 192.168.64.255\n        inet6 fe80::746d:78ff:fe7c:ddd8  prefixlen 64  scopeid 0x20<link>\n        ether 76:6d:78:7c:dd:d8  txqueuelen 1000  (Ethernet)\n        RX packets 442  bytes 47346 (46.2 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 372  bytes 52894 (51.6 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n```\n\n```bash\n$ ssh core@192.168.64.8  -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\ncore@192.168.64.8's password:\nLast login: Thu Jan  7 15:32:37 2016\nCoreOS stable (766.5.0)\nUpdate Strategy: No Reboots\ncore@localhost ~ $ \n```\n\n### \u6b21\u306b Docker \u306e\u8a2d\u5b9a\n\n```bash\ncore@localhost ~ $ cat /etc/systemd/system/docker-tcp.socket\n[Unit]\nDescription=Docker Socket for the API\n\n[Socket]\nListenStream=2375\nService=docker.service\nBindIPv6Only=both\n\n[Install]\nWantedBy=sockets.target\ncore@localhost ~ $ sudo systemctl stop docker\ncore@localhost ~ $ sudo systemctl start docker-tcp.socket\ncore@localhost ~ $ sudo systemctl start docker\n\n```\n\n```bash\n$ export DOCKER_HOST=tcp://192.168.64.8:2375\n$ docker info\nError response from daemon: client is newer than server (client API version: 1.21, server API version: 1.19)\n```\n\n(\uff9f\u0434\uff9f)!\n\n### \u6c17\u3092\u53d6\u308a\u76f4\u3057\u3066\u3001alpha \u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u6700\u65b0\u7248\u3092\u30c7\u30a3\u30b9\u30af\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\n*) \u3053\u3053\u3067\u306f Vagrant \u7528\u306e SSH \u30ad\u30fc\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n\n```bash\ncore@localhost ~ $ cat cloud-config.yml\n#cloud-config\n\nssh_authorized_keys:\n  - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key\n\ncoreos:\n  units:\n    - name: docker-tcp.socket\n      command: start\n      runtime: no\n      content: |\n        [Unit]\n        Description=Docker Socket for the API\n        [Socket]\n        ListenStream=2375\n        Service=docker.service\n        BindIPv6Only=both\n        [Install]\n        WantedBy=sockets.target\n\n    - name: docker.service\n      command: start\ncore@localhost ~ $ sudo coreos-install -d /dev/sda -V current -C alpha -c cloud-config.yml\ncore@localhost ~ $ sudo reboot\n```\n\n```bash\n$ ssh core@192.168.64.8 -q -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ~/.vagrant.d/insecure_private_key\nCoreOS alpha (899.1.0)\ncore@localhost ~ $ \n```\n\n```bash\n$ export DOCKER_HOST=tcp://192.168.64.8:2375\n$ docker info\nContainers: 0\nImages: 0\nServer Version: 1.9.1\nStorage Driver: overlay\n Backing Filesystem: extfs\nExecution Driver: native-0.2\nLogging Driver: json-file\nKernel Version: 4.3.3-coreos\nOperating System: CoreOS 899.1.0\nCPUs: 1\nTotal Memory: 997.5 MiB\nName: localhost\nID: Y7IJ:FYUN:5JUZ:KYG6:GBIA:JLCP:JJ7R:237W:RFFT:GGIF:K34F:7I53\nUsername: ailispaw\nRegistry: https://index.docker.io/v1/\n```\n\n(\uff9f\u2200\uff9f)\uff77\uff80\uff7a\uff9a!!\n"}