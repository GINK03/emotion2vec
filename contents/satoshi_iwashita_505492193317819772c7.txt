{"context": "zappa \u3092\u4f7f\u3063\u3066 hello world \u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\nzappa \u3068\u306f\nhttps://github.com/Miserlou/Zappa\nflask \u30d9\u30fc\u30b9\u306e aws \u3067 serverless python web service \u3092\u5b9f\u73fe\u3059\u308b\u30c4\u30fc\u30eb\u3060\u305d\u3046\u3067\u3059\u3002\napi gateway + lamdba + cloudwatch events \u3092\u99c6\u4f7f\u3059\u308b\u6a21\u69d8\u3002\n\u30c7\u30e2\u306e gif \u753b\u50cf\u304c\u523a\u6fc0\u7684\u3067\u3059\u306d\u3002\n\n\nflask \u3068\u306f\nhttp://flask.pocoo.org/\nwsgi + jinja2 \u3092\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3068\u3057\u305f python web application \u306e\u305f\u3081\u306e microframework \u3068\u306e\u3053\u3068\u3067\u3059\u3002\nfirst commit \u304c 2010 \u5e74\u3068\u306a\u304b\u306a\u304b\u6b74\u53f2\u304c\u3042\u308a\u307e\u3059\u3002 \n\u516c\u5f0f\u306e top \u30da\u30fc\u30b8\u306e\u307e\u3093\u307e\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067 http \u306b\u3088\u308b hello world \u304c\u3067\u304d\u307e\u3059\u3002\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    return \"Hello World!\\n\"\n\nif __name__ == \"__main__\":\n    app.run()\n\n$ pip install Flask\n$ python hello.py &\n * Running on http://localhost:5000/\n$ curl http://localhost:5000\nHello World!\n\n\n\u74b0\u5883\u69cb\u7bc9\n\u4eca\u56de\u306f vagrant \u4e0a\u306e centos7 \u3067\u52d5\u4f5c\u3055\u305b\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\nzappa \u306f virtualenv \u304c\u5fc5\u9808\u3067\u3059\u306e\u3067\u3001\u305d\u306e\u8fba\u308a\u304b\u3089\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n\u306a\u304a\u3001vagrant \u30e6\u30fc\u30b6\u3067\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u666e\u901a\u306b yum \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\nsudo yum install -y gcc libffi-devel python-devel openssl-devel zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel git\n\n\npip \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npip \u306f\u30b7\u30b9\u30c6\u30e0\u30ef\u30a4\u30c9\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\ncurl -L https://bootstrap.pypa.io/get-pip.py | sudo python\n\n\npyenv + virtualenv\npyenv \u3068 virtualenv \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u4e21\u65b9\u4e00\u6c17\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u7d20\u6674\u3089\u3057\u3044\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3042\u308a\u304c\u305f\u304f\u4f7f\u308f\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\ncurl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash\ncat << 'EOF' >> ~/.bash_profile\n\n### virtualenv\nexport PATH=\"/home/vagrant/.pyenv/bin:$PATH\"\neval \"$(pyenv init -)\"\neval \"$(pyenv virtualenv-init -)\"\nEOF\n\npyenv \u3068 virtualenv \u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u304c\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3067\u3059\u3002\nhttp://blog.ieknir.com/blog/pyenv-with-virtualenv/\n\nvirtualenvwrapper\n\u4fbf\u5229\u305d\u3046\u306a\u306e\u3067\u4ee5\u4e0b\u306e qiita \u3092\u53c2\u8003\u306b\u5c0e\u5165\u3057\u3066\u307f\u307e\u3059\u3002\nhttp://qiita.com/drafts/505492193317819772c7/edit\nsudo pip install virtualenvwrapper\nexport WORKON_HOME=\"~/python-venv\"\nmkdir -p $WORKON_HOME\nvirtualenvwrapper_sh=$(whereis virtualenvwrapper.sh | cut -d : -f2)\necho \"\"\"\nif [ -f ${virtualenvwrapper_sh} ]; then\n    export WORKON_HOME=$HOME/.virtualenvs\n    source ${virtualenvwrapper_sh}\nfi\n\"\"\" >> ~/.bash_profile\nsource ${virtualenvwrapper_sh}\n\n\u3053\u3053\u307e\u3067\u3092 github \u306b\u7f6e\u304d\u307e\u3057\u305f\u3002\n\npython \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n### install python\npyenv install 2.7.12\npyenv local 2.7.12\n\n2.7.12 \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n$ pyenv versions\n  system\n* 2.7.12 (set by PYENV_VERSION environment variable)\n\n\nzappa \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nmkvirtualenv\nmkvirtualenv \u3067\u5c02\u7528\u306e\u74b0\u5883\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\u30d7\u30ed\u30f3\u30d7\u30c8\u304c\u5909\u308f\u3063\u3066\u30aa\u30b7\u30e3\u30ec\u3067\u3059\u3002\nvagrant 07:42:55 ~$ mkvirtualenv zappa_2.7.12\n(zappa_2.7.12) vagrant 07:42:55 ~$\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u307f\u307e\u3059\u3002\n$ mkdir app\n$ cd app\n$ cat << EOF >> requirements.txt\nzappa\nflask\nEOF\n$ pip install -r requirements.txt\n$ zappa init\n\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557\n\u255a\u2550\u2550\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\n  \u2588\u2588\u2588\u2554\u255d \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\n \u2588\u2588\u2588\u2554\u255d  \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u255d \u2588\u2588\u2554\u2550\u2550\u2550\u255d \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2551     \u2588\u2588\u2551  \u2588\u2588\u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d     \u255a\u2550\u255d  \u255a\u2550\u255d\n\nWelcome to Zappa!\n\nZappa is a system for running server-less Python web applications on AWS Lambda and AWS API Gateway.\nThis `init` command will help you create and configure your new Zappa deployment.\nLet's get started!\n\nYour Zappa configuration can support multiple production environments, like 'dev', 'staging', and 'production'.\nWhat do you want to call this environment (default 'dev'): \n\n\u306a\u3093\u304b\u51fa\u305f\u3002\n\u74b0\u5883\u540d\u3092\u6c42\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u304c\u3001dev \u3068\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nYour Zappa deployments will need to be uploaded to a private S3 bucket.\nIf you don't have a bucket yet, we'll create one for you too.\nWhat do you want call your bucket? (default 'zappa-*****'):\n\nlambda \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306e S3 \u30d0\u30b1\u30c3\u30c8\u540d\u3092\u6c42\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u3053\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nIt looks like this is a Flask application.\nWhat's the modular path to your app's function?\nThis will likely be something like 'your_module.app'.\nWhere is your app's function?: \n\ntest.app \u3068\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nOkay, here's your zappa_settings.js:\n\n{\n    \"dev\": {\n        \"app_function\": \"test.app\",\n        \"s3_bucket\": \"zappa-******\"\n    }\n}\n\nDoes this look okay? (default y) [y/n]: y\n\nDone! Now you can deploy your Zappa application by executing:\n\n    $ zappa deploy dev\n\nAfter that, you can update your application code with:\n\n    $ zappa update dev\n\nTo learn more, check out the Zappa project page on GitHub: https://github.com/Miserlou/Zappa\nor stop by our Slack channel: http://bit.do/zappa\n\nEnjoy!\n\n\u521d\u671f\u5316\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3002\n\nzappa_settings.json\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 region \u304c us-east-1 \u3060\u3063\u305f\u306e\u3067\u3001\u7de8\u96c6\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001 credentials \u3067 profile \u3092\u5206\u3051\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070 profile_name \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n$  cat zappa_settings.json\n{\n    \"dev\": {\n        \"app_function\": \"test.app\",\n        \"s3_bucket\": \"zappa-*****\",\n        \"aws_region\": \"ap-northeast-1\",\n        \"profile_name\": \"profile_name\" //\u5fc5\u8981\u3042\u308c\u3070\n    }\n}\n\n\n\u30b5\u30f3\u30d7\u30eb\u306e\u914d\u7f6e\n\u3053\u3061\u3089 \u306e\u30b5\u30f3\u30d7\u30eb\u3092\u52d5\u304b\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n$  cat test.py\nimport logging\nfrom flask import Flask\n\napp = Flask(__name__)\nlogging.basicConfig()\nlogger = logging.getLogger(__name__)\nlogger.setLevel(logging.DEBUG)\n\n@app.route('/', methods=['GET', 'POST'])\ndef hello(event=None, context=None):\n    logger.info('Lambda function invoked index()')\n    return 'hello from Flask!\\n'\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n\n\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\u306f\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n~/app$  tree\n.\n\u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 test.py\n\u2514\u2500\u2500 zappa_settings.json\n\n0 directories, 3 files\n\n\naws credential \u306e\u8a2d\u5b9a\naws \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u65b9\u6cd5\u3067 credential \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\nawscli \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066 aws configure \u3059\u308b\n\n~/.aws/config \u3092\u4f5c\u6210\u3059\u308b\n\n\ndeploy \uff01\n\u3044\u3088\u3044\u3088 deploy \u3067\u3059\u3002\n(zappa_2.7.12-2) vagrant 08:05:26 ~/app$  zappa deploy dev\nPackaging project as zip...\nUploading zip (2.7MiB)...\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2.81M/2.81M [00:00<00:00, 2.97Mit/s]\nScheduling keep-warm..\nCreating API Gateway routes (this only happens once)..\n1008it [01:39, 10.17it/s]\nDeploying API Gateway..\nDeployed! https://*****.execute-api.ap-northeast-1.amazonaws.com/dev\n\n\u53e9\u3044\u3066\u307f\u307e\u3059\u3002\n(zappa_2.7.12-2) vagrant 08:07:45 ~/app$  curl -l https://*****.execute-api.ap-northeast-1.amazonaws.com/dev\nhello from Flask!\n\n\u3067\u305f\uff01\n\n\u30ed\u30b0\u306e\u78ba\u8a8d\nzappa tail dev \u3067 cloudwatch logs \u306e\u78ba\u8a8d\u304c\u3067\u304d\u3066\u4fbf\u5229\u3067\u3059\u3002\n(\u306a\u306b\u3084\u3089\u30a8\u30e9\u30fc\u304c\u3067\u3066\u308b\u3002\u3002)\n[1470384650490] [DEBUG] 2016-08-05T08:10:50.490Z    1f3ccb88-5ae4-11e6-b4c6-c9ecf09594ff    Zappa Event: {u'body': u'e30=', u'headers': {u'Via': u'1.1 9736f79fa942ea72a1eee114f49093dd.cloudfront.net (CloudFront)', u'CloudFront-Is-Desktop-Viewer': u'true', u'CloudFront-Is-SmartTV-Viewer': u'false', u'CloudFront-Forwarded-Proto': u'https', u'X-Forwarded-For': u'1.1.1.1, 2.2.2.2', u'CloudFront-Viewer-Country': u'JP', u'Accept': u'*/*', u'User-Agent': u'curl/7.43.0', u'Host': u'q14421ik6h.execute-api.ap-northeast-1.amazonaws.com', u'X-Forwarded-Proto': u'https', u'X-Amz-Cf-Id': u'RdcP863CiLrem7LekuwSQrt2YvNw29a9m3Es55O2Db6E9YGjqWQdCg==', u'CloudFront-Is-Tablet-Viewer': u'false', u'X-Forwarded-Port': u'443', u'CloudFront-Is-Mobile-Viewer': u'false'}, u'params': {}, u'method': u'GET', u'query': {}}\n[1470384650491] [INFO]  2016-08-05T08:10:50.491Z    1f3ccb88-5ae4-11e6-b4c6-c9ecf09594ff    Lambda function invoked index()\n[1470384650491] [INFO]  2016-08-05T08:10:50.491Z    1f3ccb88-5ae4-11e6-b4c6-c9ecf09594ff    1.1.1.1 - - [05/Aug/2016:08:10:50 +0000] \"GET / HTTP/1.1\" 200 18 \"\" \"curl/7.43.0\" 0/0.798\n[1470384659083] need more than 1 value to unpack: ValueError\nTraceback (most recent call last):\n  File \"/var/task/handler.py\", line 324, in lambda_handler\n    return LambdaHandler.lambda_handler(event, context)\n  File \"/var/task/handler.py\", line 121, in lambda_handler\n    return cls().handler(event, context)\n  File \"/var/task/handler.py\", line 146, in handler\n    app_function = self.import_module_and_get_function(whole_function)\n  File \"/var/task/handler.py\", line 114, in import_module_and_get_function\n    module, function = whole_function.rsplit('.', 1)\nValueError: need more than 1 value to unpack\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u66f4\u65b0\nzappa update dev \u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u66f4\u65b0\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u524a\u9664\nzappa undeploy dev \u3067 deploy \u3057\u305f\u5185\u5bb9\u3092\u5168\u3066\u524a\u9664\u3067\u304d\u307e\u3059\u3002\n$ zappa undeploy dev\nAre you sure you want to undeploy? [y/n] y\nDeleting API Gateway..\nRemoving keep-warm..\nDeleting Lambda function..\nDone!\n\n\n\u3055\u3044\u3054\u306b\n\u306a\u3093\u3060\u304b\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u5185\u306b hello world \u3059\u308b web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u69cb\u7bc9\u3067\u304d\u307e\u3057\u305f\u3002\n\u3059\u3054\u3044\u3067\u3059\u306d\u3002\nzappa \u3092\u4f7f\u3063\u3066 hello world \u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n# zappa \u3068\u306f\n\nhttps://github.com/Miserlou/Zappa\n\nflask \u30d9\u30fc\u30b9\u306e aws \u3067 serverless python web service \u3092\u5b9f\u73fe\u3059\u308b\u30c4\u30fc\u30eb\u3060\u305d\u3046\u3067\u3059\u3002\napi gateway + lamdba + cloudwatch events \u3092\u99c6\u4f7f\u3059\u308b\u6a21\u69d8\u3002\n\n\u30c7\u30e2\u306e gif \u753b\u50cf\u304c\u523a\u6fc0\u7684\u3067\u3059\u306d\u3002\n\n---\n\n# flask \u3068\u306f\n\nhttp://flask.pocoo.org/\n\nwsgi + jinja2 \u3092\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3068\u3057\u305f python web application \u306e\u305f\u3081\u306e microframework \u3068\u306e\u3053\u3068\u3067\u3059\u3002\nfirst commit \u304c 2010 \u5e74\u3068\u306a\u304b\u306a\u304b\u6b74\u53f2\u304c\u3042\u308a\u307e\u3059\u3002 \n\u516c\u5f0f\u306e top \u30da\u30fc\u30b8\u306e\u307e\u3093\u307e\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067 http \u306b\u3088\u308b hello world \u304c\u3067\u304d\u307e\u3059\u3002\n\n```py\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    return \"Hello World!\\n\"\n\nif __name__ == \"__main__\":\n    app.run()\n```\n\n```\n$ pip install Flask\n$ python hello.py &\n * Running on http://localhost:5000/\n$ curl http://localhost:5000\nHello World!\n```\n\n# \u74b0\u5883\u69cb\u7bc9\n\n\u4eca\u56de\u306f vagrant \u4e0a\u306e centos7 \u3067\u52d5\u4f5c\u3055\u305b\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\nzappa \u306f virtualenv \u304c\u5fc5\u9808\u3067\u3059\u306e\u3067\u3001\u305d\u306e\u8fba\u308a\u304b\u3089\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n\u306a\u304a\u3001`vagrant` \u30e6\u30fc\u30b6\u3067\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u666e\u901a\u306b yum \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```bash\nsudo yum install -y gcc libffi-devel python-devel openssl-devel zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel git\n```\n\n## pip \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\npip \u306f\u30b7\u30b9\u30c6\u30e0\u30ef\u30a4\u30c9\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```bash\ncurl -L https://bootstrap.pypa.io/get-pip.py | sudo python\n```\n\n## pyenv + virtualenv\n\npyenv \u3068 virtualenv \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u4e21\u65b9\u4e00\u6c17\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u7d20\u6674\u3089\u3057\u3044\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3042\u308a\u304c\u305f\u304f\u4f7f\u308f\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\n\n```bash\ncurl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash\ncat << 'EOF' >> ~/.bash_profile\n\n### virtualenv\nexport PATH=\"/home/vagrant/.pyenv/bin:$PATH\"\neval \"$(pyenv init -)\"\neval \"$(pyenv virtualenv-init -)\"\nEOF\n```\n\npyenv \u3068 virtualenv \u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u304c\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3067\u3059\u3002\nhttp://blog.ieknir.com/blog/pyenv-with-virtualenv/\n\n## virtualenvwrapper\n\n\u4fbf\u5229\u305d\u3046\u306a\u306e\u3067\u4ee5\u4e0b\u306e qiita \u3092\u53c2\u8003\u306b\u5c0e\u5165\u3057\u3066\u307f\u307e\u3059\u3002\nhttp://qiita.com/drafts/505492193317819772c7/edit\n\n```bash\nsudo pip install virtualenvwrapper\nexport WORKON_HOME=\"~/python-venv\"\nmkdir -p $WORKON_HOME\nvirtualenvwrapper_sh=$(whereis virtualenvwrapper.sh | cut -d : -f2)\necho \"\"\"\nif [ -f ${virtualenvwrapper_sh} ]; then\n    export WORKON_HOME=$HOME/.virtualenvs\n    source ${virtualenvwrapper_sh}\nfi\n\"\"\" >> ~/.bash_profile\nsource ${virtualenvwrapper_sh}\n```\n\n\u3053\u3053\u307e\u3067\u3092 [github](https://github.com/rriifftt/zappa-vagrant-init) \u306b\u7f6e\u304d\u307e\u3057\u305f\u3002\n\n## python \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n### install python\npyenv install 2.7.12\npyenv local 2.7.12\n```\n2.7.12 \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```\n$ pyenv versions\n  system\n* 2.7.12 (set by PYENV_VERSION environment variable)\n```\n\n# zappa \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n## mkvirtualenv\n\nmkvirtualenv \u3067\u5c02\u7528\u306e\u74b0\u5883\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\u30d7\u30ed\u30f3\u30d7\u30c8\u304c\u5909\u308f\u3063\u3066\u30aa\u30b7\u30e3\u30ec\u3067\u3059\u3002\n\n```\nvagrant 07:42:55 ~$ mkvirtualenv zappa_2.7.12\n(zappa_2.7.12) vagrant 07:42:55 ~$\n```\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\n$ mkdir app\n$ cd app\n$ cat << EOF >> requirements.txt\nzappa\nflask\nEOF\n$ pip install -r requirements.txt\n$ zappa init\n\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2557\n\u255a\u2550\u2550\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\n  \u2588\u2588\u2588\u2554\u255d \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\n \u2588\u2588\u2588\u2554\u255d  \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u255d \u2588\u2588\u2554\u2550\u2550\u2550\u255d \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2551     \u2588\u2588\u2551  \u2588\u2588\u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d     \u255a\u2550\u255d  \u255a\u2550\u255d\n\nWelcome to Zappa!\n\nZappa is a system for running server-less Python web applications on AWS Lambda and AWS API Gateway.\nThis `init` command will help you create and configure your new Zappa deployment.\nLet's get started!\n\nYour Zappa configuration can support multiple production environments, like 'dev', 'staging', and 'production'.\nWhat do you want to call this environment (default 'dev'): \n```\n\n\u306a\u3093\u304b\u51fa\u305f\u3002\n\u74b0\u5883\u540d\u3092\u6c42\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u304c\u3001dev \u3068\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```\nYour Zappa deployments will need to be uploaded to a private S3 bucket.\nIf you don't have a bucket yet, we'll create one for you too.\nWhat do you want call your bucket? (default 'zappa-*****'):\n```\n\nlambda \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306e S3 \u30d0\u30b1\u30c3\u30c8\u540d\u3092\u6c42\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u3053\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```\nIt looks like this is a Flask application.\nWhat's the modular path to your app's function?\nThis will likely be something like 'your_module.app'.\nWhere is your app's function?: \n```\n\ntest.app \u3068\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```\nOkay, here's your zappa_settings.js:\n\n{\n    \"dev\": {\n        \"app_function\": \"test.app\",\n        \"s3_bucket\": \"zappa-******\"\n    }\n}\n\nDoes this look okay? (default y) [y/n]: y\n\nDone! Now you can deploy your Zappa application by executing:\n\n\t$ zappa deploy dev\n\nAfter that, you can update your application code with:\n\n\t$ zappa update dev\n\nTo learn more, check out the Zappa project page on GitHub: https://github.com/Miserlou/Zappa\nor stop by our Slack channel: http://bit.do/zappa\n\nEnjoy!\n```\n\n\u521d\u671f\u5316\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3002\n\n## zappa_settings.json\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 region \u304c us-east-1 \u3060\u3063\u305f\u306e\u3067\u3001\u7de8\u96c6\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001 credentials \u3067 profile \u3092\u5206\u3051\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070 profile_name \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```\n$  cat zappa_settings.json\n{\n    \"dev\": {\n        \"app_function\": \"test.app\",\n        \"s3_bucket\": \"zappa-*****\",\n        \"aws_region\": \"ap-northeast-1\",\n        \"profile_name\": \"profile_name\" //\u5fc5\u8981\u3042\u308c\u3070\n    }\n}\n```\n\n## \u30b5\u30f3\u30d7\u30eb\u306e\u914d\u7f6e\n\n[\u3053\u3061\u3089](https://github.com/Miserlou/Zappa/blob/master/example/app.py) \u306e\u30b5\u30f3\u30d7\u30eb\u3092\u52d5\u304b\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```\n$  cat test.py\nimport logging\nfrom flask import Flask\n\napp = Flask(__name__)\nlogging.basicConfig()\nlogger = logging.getLogger(__name__)\nlogger.setLevel(logging.DEBUG)\n\n@app.route('/', methods=['GET', 'POST'])\ndef hello(event=None, context=None):\n    logger.info('Lambda function invoked index()')\n    return 'hello from Flask!\\n'\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n```\n\n\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\u306f\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```\n~/app$  tree\n.\n\u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 test.py\n\u2514\u2500\u2500 zappa_settings.json\n\n0 directories, 3 files\n```\n\n## aws credential \u306e\u8a2d\u5b9a\n\naws \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u65b9\u6cd5\u3067 credential \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n* awscli \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066 `aws configure` \u3059\u308b\n* `~/.aws/config` \u3092\u4f5c\u6210\u3059\u308b\n\n\n## deploy \uff01\n\n\u3044\u3088\u3044\u3088 deploy \u3067\u3059\u3002\n\n```\n(zappa_2.7.12-2) vagrant 08:05:26 ~/app$  zappa deploy dev\nPackaging project as zip...\nUploading zip (2.7MiB)...\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2.81M/2.81M [00:00<00:00, 2.97Mit/s]\nScheduling keep-warm..\nCreating API Gateway routes (this only happens once)..\n1008it [01:39, 10.17it/s]\nDeploying API Gateway..\nDeployed! https://*****.execute-api.ap-northeast-1.amazonaws.com/dev\n```\n\n\u53e9\u3044\u3066\u307f\u307e\u3059\u3002\n\n```\n(zappa_2.7.12-2) vagrant 08:07:45 ~/app$  curl -l https://*****.execute-api.ap-northeast-1.amazonaws.com/dev\nhello from Flask!\n```\n\n\u3067\u305f\uff01\n\n## \u30ed\u30b0\u306e\u78ba\u8a8d\n\n`zappa tail dev` \u3067 cloudwatch logs \u306e\u78ba\u8a8d\u304c\u3067\u304d\u3066\u4fbf\u5229\u3067\u3059\u3002\n(\u306a\u306b\u3084\u3089\u30a8\u30e9\u30fc\u304c\u3067\u3066\u308b\u3002\u3002)\n\n```\n[1470384650490] [DEBUG] 2016-08-05T08:10:50.490Z    1f3ccb88-5ae4-11e6-b4c6-c9ecf09594ff    Zappa Event: {u'body': u'e30=', u'headers': {u'Via': u'1.1 9736f79fa942ea72a1eee114f49093dd.cloudfront.net (CloudFront)', u'CloudFront-Is-Desktop-Viewer': u'true', u'CloudFront-Is-SmartTV-Viewer': u'false', u'CloudFront-Forwarded-Proto': u'https', u'X-Forwarded-For': u'1.1.1.1, 2.2.2.2', u'CloudFront-Viewer-Country': u'JP', u'Accept': u'*/*', u'User-Agent': u'curl/7.43.0', u'Host': u'q14421ik6h.execute-api.ap-northeast-1.amazonaws.com', u'X-Forwarded-Proto': u'https', u'X-Amz-Cf-Id': u'RdcP863CiLrem7LekuwSQrt2YvNw29a9m3Es55O2Db6E9YGjqWQdCg==', u'CloudFront-Is-Tablet-Viewer': u'false', u'X-Forwarded-Port': u'443', u'CloudFront-Is-Mobile-Viewer': u'false'}, u'params': {}, u'method': u'GET', u'query': {}}\n[1470384650491] [INFO]  2016-08-05T08:10:50.491Z    1f3ccb88-5ae4-11e6-b4c6-c9ecf09594ff    Lambda function invoked index()\n[1470384650491] [INFO]  2016-08-05T08:10:50.491Z    1f3ccb88-5ae4-11e6-b4c6-c9ecf09594ff    1.1.1.1 - - [05/Aug/2016:08:10:50 +0000] \"GET / HTTP/1.1\" 200 18 \"\" \"curl/7.43.0\" 0/0.798\n[1470384659083] need more than 1 value to unpack: ValueError\nTraceback (most recent call last):\n  File \"/var/task/handler.py\", line 324, in lambda_handler\n    return LambdaHandler.lambda_handler(event, context)\n  File \"/var/task/handler.py\", line 121, in lambda_handler\n    return cls().handler(event, context)\n  File \"/var/task/handler.py\", line 146, in handler\n    app_function = self.import_module_and_get_function(whole_function)\n  File \"/var/task/handler.py\", line 114, in import_module_and_get_function\n    module, function = whole_function.rsplit('.', 1)\nValueError: need more than 1 value to unpack\n```\n\n## \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u66f4\u65b0\n\n`zappa update dev` \u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u66f4\u65b0\u304c\u3067\u304d\u307e\u3059\u3002\n\n## \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u524a\u9664\n\n`zappa undeploy dev` \u3067 deploy \u3057\u305f\u5185\u5bb9\u3092\u5168\u3066\u524a\u9664\u3067\u304d\u307e\u3059\u3002\n\n```\n$ zappa undeploy dev\nAre you sure you want to undeploy? [y/n] y\nDeleting API Gateway..\nRemoving keep-warm..\nDeleting Lambda function..\nDone!\n```\n\n## \u3055\u3044\u3054\u306b\n\n\u306a\u3093\u3060\u304b\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u5185\u306b hello world \u3059\u308b web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u69cb\u7bc9\u3067\u304d\u307e\u3057\u305f\u3002\n\u3059\u3054\u3044\u3067\u3059\u306d\u3002\n", "tags": ["Python", "zappa", "Flask", "AWS", "serverless"]}