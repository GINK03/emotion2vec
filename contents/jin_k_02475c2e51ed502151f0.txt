{"context": " More than 1 year has passed since last update.\n\n\u521d\u3081\u306b\n\u3053\u3093\u306b\u3061\u306f\u3002CYBIRD\u30a8\u30f3\u30b8\u30cb\u30a2 Advent Calendar\u6700\u7d42\u65e5\u62c5\u5f53\u306e@jin_k\u3067\u3059\u3002\nCYBIRD2015\u5e74\u306e\u65b0\u5352\u5165\u793e\u3067\u30b2\u30fc\u30e0\u30a4\u30f3\u30d5\u30e9\u90e8\u3068\u3044\u3046\u90e8\u7f72\u306b\u6240\u5c5e\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n24\u65e5\u76ee\u306f@gotyoooo\u3055\u3093\u306eAmazon VPC NAT Gateway\u304c\u3042\u308b\u3068\u304d\u3002\u306a\u3044\u3068\u304d\u3002\u3067\u3057\u305f\u3002\nAmazon VPC NATGateway\u304c\u3042\u308b\u3068\u304d\u3068\u306a\u3044\u3068\u304d\u304c\u5206\u304b\u308a\u3084\u3059\u304f\u6574\u7406\u3055\u308c\u3066\u3044\u3066\u3001NAT Gateway\u3092\u4f7f\u3046\u3068\u4f55\u304b\u826f\u3044\u304b\u66f8\u3044\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305c\u3072\u3054\u89a7\u304f\u3060\u3055\u3044\uff01\n\n\u5185\u5bb9\u306b\u3064\u3044\u3066\n\u4eca\u56de\u306fJenkins\u30b5\u30fc\u30d0\u30fc\u304b\u3089S3\u7d4c\u7531\u3067Web\u30b5\u30fc\u30d0\u30fc\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u914d\u5e03\u3057\u3066\u307f\u305f\u8a71\u3092\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n(Jenkins\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3066\u308b\u904e\u7a0b\u306e\u8aac\u660e\u3068\u304b\u306f\u3042\u308a\u307e\u305b\u3093\u3002)\n\u5f93\u3063\u3066\u4eca\u56de\u306e\u8a71\u306f\u3061\u3087\u3063\u3068\u5909\u308f\u3063\u305fCapistrano\u306e\u8a71\u3092\u3059\u308b\u306e\u3067\u3001Capistrano\u306e\u30c7\u30d7\u30ed\u30a4\u6d41\u308c\u3084\u8aac\u660e\u30fb\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u306e\u8a71\u306f\u3057\u307e\u305b\u3093\u3002\n\u3068\u306f\u3044\u3048\u3001\u81ea\u5206\u3082\u307e\u3060\u521d\u5fc3\u8005\u306a\u306e\u3067\u4f55\u304b\u9593\u9055\u3063\u305f\u3053\u3068\u304c\u66f8\u3044\u3066\u3042\u308b\u5834\u5408\u3001\u3054\u6307\u6458\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n\u4eca\u56de\u306eCapistrano\u306e\u52d5\u304d\n\n\u3053\u306e\u3088\u3046\u306a\u52d5\u304d\u3092\u3057\u305f\u7406\u7531\n\nCapistrano3\u7cfb\u3067Github\u3068\u306e\u9023\u643a\u304cHTTPS\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306bgit\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u304c\u8f09\u305b\u3066\u3044\u308b\u306e\u3067\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fc\u7684\u306b\u826f\u304f\u306a\u3044\u3067\u3059\u3002\n\u5404\u81eaWeb\u30b5\u30fc\u30d0\u30fc\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u3067Jenkins\u306e\u30b5\u30fc\u30d0\u30fc\u306e\u8ca0\u62c5\u3092\u6e1b\u3089\u3059\u3002\n\u3044\u305a\u308c\u306b\u305b\u3088100%\u4fe1\u983c\u306f\u3067\u304d\u306a\u3044\u304c\u3001\u305d\u308c\u3067\u3082git\u3088\u308aS3\u306e\u65b9\u304c\u4fe1\u983c\u3067\u304d\u308b\u3002\n\n\n\u4ed5\u7d44\u307f(pull)\n\n1.git\u3068Jenkins\u3092\u9023\u643a\u3057\u3001\u6700\u65b0\u306efile\u3092Jenkins\u306b\u8fd4\u5374\u3057\u307e\u3059\u3002\n\u3000(\u4eca\u56de\u306f\uff11\u756a\u306b\u95a2\u3059\u308b\u5185\u5bb9\u306f\u3042\u308a\u307e\u305b\u3093\u3002)\n2.cap\u5b9f\u884c\u3057\u3001tar\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u56fa\u3081\u307e\u3059\u3002\n3.\u56fa\u3081\u305ftar\u3092S3\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n (\u73fe\u5728\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3068\u540c\u3058\u3082\u306e\u304cS3\u306b\u3042\u308b\u5834\u5408\u30013\u756a\u306e\u3053\u3068\u306f\u3057\u307e\u305b\u3093\u3002)\n4.\u5404\u81eaS3\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3088\u3046Web\u30b5\u30fc\u30d0\u30fc\u306b\u547d\u4ee4\u3057\u307e\u3059\u3002\n5.\u5404\u81eaWeb\u30b5\u30fc\u30d0\u30fc\u304cs3\u304b\u3089tar\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n6.\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305ftar\u3092\u5c55\u958b\u3057\u307e\u3059\u3002\n\n\u4ed5\u7d44\u307f(push)\n\n1.git\u3068Jenkins\u3092\u9023\u643a\u3057\u3001\u6700\u65b0\u306efile\u3092Jenkins\u306b\u8fd4\u5374\u3057\u307e\u3059\u3002\n\u3000(\u4eca\u56de\u306f\uff11\u756a\u306b\u95a2\u3059\u308b\u5185\u5bb9\u306f\u3042\u308a\u307e\u305b\u3093\u3002)\n2.cap\u5b9f\u884c\u3057\u3001tar\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u56fa\u3081\u307e\u3059\u3002\n3.Jenkins\u30b5\u30fc\u30d0\u30fc\u304b\u3089Web\u30b5\u30fc\u30d0\u30fc\u306btar\u3092\u9001\u308a\u3064\u3051\u307e\u3059\u3002\n4.tar\u3092\u5c55\u958b\u3057\u307e\u3059\u3002\n\u203bpull\u4ee5\u5916\u306f\u3059\u3079\u3066push\u306e\u51e6\u7406\u3092\u3057\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\narchive/tar/minitar 0.5.2\n\n$ gem install archive-tar-minitar -v 0.5.2\n\n\nRuby 2.1.0p0\n\n$ rvm install ruby-2.1.0\n$ rvm use ruby-2.1.0\n$ ruby --version\nruby 2.1.0p0 (2013-12-25 revision 44422) [x86_64-linux]\n\n\nCapistrano 3.2.1\n\n$ gem install capistrano\n$ cap --version\nCapistrano Version: 3.2.1 (Rake Version: 10.1.0)\n\nS3\u3078\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u305f\u3081\u306bRuby\u306eAWS SDK\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\naws-sdk-core 2.1.16\n\n$ gem install aws-sdk-core -v 2.1.16\n\n\naws-sdk-resources 2.1.16\n\n$ gem install aws-sdk-resources -v 2.1.16\n\nS3\u7d4c\u7531\u3067\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081AWS CLI\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u306e\u3067Web\u30b5\u30fc\u30d0\u30fc\u306binstall\u3057\u307e\u3059\u3002\nCredentialFile\u306fJenkins\u30b5\u30fc\u30d0\u30fc\u3001Web\u30b5\u30fc\u30d0\u30fc\u4e21\u65b9\u5fc5\u8981\u3067\u3059\u3002\n# yum -y install python-setuptools\n# easy_install pip\n# pip install awscli\n# vi /etc/aws/credential-file\n====\n[default]\noutput = json\nregion = ap-northeast-1\naws_access_key_id = XXXXXXXXXXXXXXXXXXXX\naws_secret_access_key = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n====\n\n\n\u30c7\u30d7\u30ed\u30a4\u65b9\u6cd5\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nCapfile\n$:.unshift File.expand_path(File.dirname(__FILE__) + '/lib')\n\n# Load DSL and Setup Up Stages\nrequire 'capistrano/setup'\n\n# Includes default deployment tasks\nrequire 'capistrano/deploy'\n\nDir.glob('lib/capistrano/tasks/*.rake').each { |r| import r }\n\n\n\nconfig/deploy.rb\n# config valid only for Capistrano 3.1\nset :pty, true\nlock '3.2.1'\nset :log_level, SSHKit::Logger::INFO\nset :application, 'JkTest'\nset :scm, :tarball_deploy\n\nset :tmp_dir, '/tmp'\nset :copy_exclude, ['docs']\n\nset :project_release_id, `git log --pretty=format:'%h' -n 1 HEAD`\n\n#(\u7701\u7565)\n\n\n\nconfig/deploy/production_pull.rb\nset :deploy_to, ENV['DEPLOY_TO']#Web\u30b5\u30fc\u30d0\u30fc\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u7f6e\u304f\u3068\u3053\u308d\u3067\u3059\u3002\nset :resource_path, ENV['RESOURCE_PATH']#\u4ee5\u4e0b\u306eJenkins\u30b5\u30fc\u30d0\u30fc\u306b\u3042\u308b\u3082\u306e\u3092tar\u3067\u56fa\u3081\u307e\u3059\u3002\n\nset :tmp_tarball, '/tmp/production'\nset :aws_credential_file, ENV['AWS_CREDENTIAL_FILE']#aws\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306bcredential-file\u304c\u66f8\u3044\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\n\nservers_str = ENV['SERVERS'].to_s\nservers_str = servers_str.gsub(/\\s/, '')\n\nservers_str.split(',').each do |target_server|\n    if target_server.empty?\n        next\n    end\n    server target_server,\n        user: ENV['WEB_SERVER_USER'],#Web\u30b5\u30fc\u30d0\u30fc\u306e\u30e6\u30fc\u30b6\u30fc\n        roles: ['app'],\n        ssh_options: {\n            keys: [ENV['WEB_SERVER_SSH']],#Web\u30b5\u30fc\u30d0\u30fc\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306essh\u304c\u7f6e\u3044\u3066\u3042\u308b\u5834\u6240\n            forward_agent: false,\n            auth_methods: ['publickey']\n        }\nend\n\n\n\nconfig/deploy/production_push.rb\nset :deploy_to, ENV['DEPLOY_TO']\nset :resource_path, ENV['RESOURCE_PATH']\n\nset :tmp_tarball, '/tmp/production'\nservers_str = ENV['SERVERS'].to_s\nservers_str = servers_str.gsub(/\\s/, '')\n\nservers_str.split(',').each do |target_server|\n    if target_server.empty?\n        next\n    end\n    server target_server,\n        user: ENV['WEB_SERVER_USER'],\n        roles: ['app'],\n        ssh_options: {\n            keys: [ENV['WEB_SERVER_SSH']],\n            forward_agent: false,\n            auth_methods: ['publickey']\n        }\nend\n\n\n\nlib/capistrano/tarball_deploy.rb\nrequire 'digest/md5'\nrequire 'zlib'\nrequire 'archive/tar/minitar'\nrequire 'aws-sdk-core'\n\nnamespace :tarball_deploy do\n\n    s3_samefile_check = false#\u4eca\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304cS3\u306b\u540c\u3058\u3082\u306e\u304c\u3042\u308b\u304bcheck\u3059\u308b\u5909\u6570\n\n    if !ENV['DEPLOY_TYPE'].nil?\n        # ENV\u3067\u6e21\u3063\u3066\u304d\u3066\u3044\u308c\u3070\u5024\u3092\u4e0a\u66f8\u304d\u3059\u308b\n        set :deploy_type, ENV['DEPLOY_TYPE']\n    end\n\n    desc 'check ENV value and configuration'\n    task :check do\n        if fetch(:tmp_tarball).nil?\n            set :tmp_tarball, ENV['TMP_TARBALL'] ? ENV['TMP_TARBALL'] : '/tmp'\n        end\n\n        run_locally do\n            execute \"mkdir -p #{fetch(:tmp_tarball).gsub(/\\/$/, '')}\"\n        end\n        on roles(:app) do\n            unless test 'which md5sum'\n                error 'command `md5sum\\' is not found.'\n                abort\n            end\n        end\n\n        if fetch(:deploy_type) == 'pull'\n            # check AWS configuration\n            #(\u7701\u7565)\n        end\n    end\n\n\n\nENV\u3067\u6e21\u3057\u3066\u3044\u308b\u74b0\u5883\u5909\u6570\u3092check\u3057\u307e\u3059\u3002\n\nlib/capistrano/tarball_deploy.rb\n\n#(\u7701\u7565)\n            # tar\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\n            if fetch(:deploy_type) == 'pull'\n                unless (s3_samefile_check)\n                    run_locally do\n                        upload_tarball_to_s3(tarball)\n                    end\n                end\n            else\n                # pull\u4ee5\u5916\u306f\u3059\u3079\u3066push\u578b\n                on roles(:app) do\n                    upload! tarball, fetch(:tmp_dir)\n                end\n            end\n\n\ntar\u3092S3\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u95a2\u6570\u5b9f\u884c\n\nlib/capistrano/tarball_deploy.rb\n        on roles(:app) do\n            if fetch(:deploy_type) == 'pull'\n                # S3\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u51e6\u7406\n                execute \"export AWS_CONFIG_FILE=#{fetch(:aws_credential_file)} && aws s3 cp s3://#{fetch(:bucket_name)}/#{fetch(:s3_path) + File.basename(tarball)} #{fetch(:tmp_dir)}/#{File.basename(tarball)}\"\n            end\n\n            # check tarball hash\n            #(\u7701\u7565)\n\n\n\nS3\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\nlib/capistrano/tarball_deploy.rb\n    desc 'create tarball'\n    file 'create_resource_tarball' do\n        # create tarball on Capistrano installed server\n        run_locally do\n            if fetch(:deploy_type) == 'pull'\n                Aws.config[:credentials] = Aws::SharedCredentials.new(\n                path: fetch(:aws_credential_file),\n                profile_name: fetch(:aws_profile_name)\n                )\n                Aws.config[:region] = fetch(:region)\n                s3 = Aws::S3::Client.new()\n                resp = s3.list_objects(bucket: fetch(:bucket_name),prefix: fetch(:s3_path))\n                resp.contents.each do |object|\n                    if (\"#{fetch(:s3_path)}release-#{fetch(:project_release_id)}.tar.gz\" == \"#{object.key}\")\n                        s3_samefile_check = true\n                    end\n                end\n            end\n\n            unless (s3_samefile_check)\n                info 'start to create tarball...'\n                Zlib::GzipWriter.open(\"#{fetch(:tmp_tarball)}/release-#{fetch(:project_release_id)}.tar.gz\", Zlib::BEST_COMPRESSION) do |gz|\n                    out = Archive::Tar::Minitar::Output.new(gz)\n                    Dir.chdir(\"#{fetch(:resource_path)}\")\n\n                    files = FileList['**/*']\n                    exclude_list = fetch(:copy_exclude) + ['.git']\n\n                    files.exclude(exclude_list).each do |file|\n                        Archive::Tar::Minitar::pack_file(file, out)\n                    end\n                    out.close\n                end\n                info 'Finished'\n                set :tarball_hash_value, Digest::MD5.hexdigest(File.open(\"#{fetch(:tmp_tarball)}/release-#{fetch(:project_release_id)}.tar.gz\").read)\n                info \"created tarball's hash: #{fetch(:tarball_hash_value)}\"\n            else\n                info 'Alrady updated.'\n            end\n        end\n    end\n\n\n\u540c\u3058\u3082\u306e\u304cS3\u306b\u306a\u3044\u5834\u5408\u3001tar\u3092\u56fa\u3081\u307e\u3059\u3002\n\nlib/capistrano/tarball_deploy.rb\n#(\u7701\u7565)\n    def upload_tarball_to_s3(upload_file)\n        Aws.config[:credentials] = Aws::SharedCredentials.new(\n            path: fetch(:aws_credential_file),\n            profile_name: fetch(:aws_profile_name)\n        )\n        Aws.config[:region] = fetch(:region)\n        s3 = Aws::S3::Client.new()\n        s3.put_object(\n            bucket: fetch(:bucket_name),\n            body: File.open(upload_file),\n            key: fetch(:s3_path) + File.basename(upload_file)\n        )\n    end\n\n    def check_aws_configuration()\n    #(\u7701\u7565)\nend\n\n\n\nJenkins\u8a2d\u5b9a\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u8a2d\u5b9a\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u3079\u3066\u74b0\u5883\u5909\u6570\u3067\u6e21\u3057\u305f\u3082\u306e\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u5316\u3057\u307e\u3059\u3002\n\n\n\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\ncd ${WORKSPACE}/capistrano\nSERVERS=${SERVER} /usr/local/bin/cap production_pull deploy DEPLOY_TYPE=${DEPLOY_TYPE} WEB_SERVER_SSH=${WEB_SERVER_SSH} WEB_SERVER_USER=${WEB_SERVER_USER} S3_PATH=${S3_PATH} REGION=${REGION} BUCKET_NAME=${BUCKET_NAME} RESOURCE_PATH=${RESOURCE_PATH} AWS_PROFILE_NAME=${AWS_PROFILE_NAME} AWS_CREDENTIAL_FILE=${AWS_CREDENTIAL_FILE} DEPLOY_TO=${DEPLOY_TO}\n\n\n\u8d77\u304d\u305f\u30a8\u30e9\u30fc\n\u30a8\u30e9\u30fc\u90e8\u5206\uff1asudo: sorry,you must have a tty to run sudo.\n\n\u53c2\u8003\uff1ahttp://qiita.com/e2_adachi/items/7abf974d81067bd2b746\nset :pty, true\u3092\u66f8\u304f\u3053\u3068\u3067\u89e3\u6c7a\nThe deploy has failed with an error: Exception while executing as xx@xxxxx: sudo /etc/init.d/httpd\n\u3000\u3000\u3000\u3000\u3000\u3000graceful\u3000\u3000\u3000 exit status: 1\n\u3000\u3000\u3000\u3000\u3000\u3000sudo /etc/init.d/httpd graceful stdout: [sudo] password for xx:\n\u3000\u3000\u3000\u3000\u3000\u3000sudo /etc/init.d/httpd graceful stderr: Nothing written\n\n\u53c2\u8003\uff1ahttp://blog.suz-lab.com/2011/01/sudoetcinitdhttpd.html\nhttp://yut.hatenablog.com/entry/20111013/1318436872\n/tmp/hudson4186181752264859077.sh: line 3: cap: command not found\n\n\u53c2\u8003\uff1ahttp://itpro.nikkeibp.co.jp/article/COLUMN/20060228/230996/\nwhich cap\u3067\u78ba\u8a8d\u3057\u305f\u3068\u3053\u308d\u3001cap\u3067\u306f\u306a\u304f\u3001/usr/local/bin/cap\u3067\u3057\u305f\u3002\nThe deploy has failed with an error: Exception while executing as xx@xxxxxx: getaddrinfo: nodename nor servname provided, or not known\n\n\u53c2\u8003:http://www.linux-beginner.com/linux_setei1.html\nIP\u30a2\u30c9\u30ec\u30b9\u3068\u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u30db\u30b9\u30c8\u540d\u306e\u8a2d\u5b9a\u304c\u3067\u304d\u3066\u306a\u3044\u3002\n\n\u6700\u5f8c\u306b\n\u4eca\u56deCapistrano\u306e\u3053\u3068\u3092\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\u3002\u8ab0\u304b\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u305b\u3067\u3059\u3002\nCapistrano\u3092\u77e5\u3063\u305f\u304d\u3063\u304b\u3051\u306f\u5148\u8f29\u304b\u3089\u793e\u5185\u3067\u4f7f\u3063\u3066\u3044\u308bCapistrano\u306e\u6539\u5584\u306e\u3053\u3068\u3067\u5b9f\u884c\u30c6\u30b9\u30c8\u30fb\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4fee\u6b63\u3092\u304a\u9858\u3044\u3055\u308c\u305f\u3053\u3068\u3067\u3057\u305f\u3002Capistrano\u3092\u7406\u89e3\u3084\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3068\u8a70\u307e\u3063\u305f\u308a\u3001\u5148\u8f29\u304b\u3089\u304a\u9858\u3044\u3055\u308c\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u5185\u5bb9\u304c\u7406\u89e3\u3067\u304d\u306a\u304f\u3063\u3066\u8272\u3005\u5927\u5909\u3067\u3057\u305f\u304c\u3001\u3044\u3044\u7d4c\u9a13\u306b\u306a\u308a\u307e\u3057\u305f\uff01\n\u6b8b\u5ff5\u306a\u304c\u3089CYBIRD\u30a8\u30f3\u30b8\u30cb\u30a2 Advent Calendar\u306f\u4ee5\u4e0a\u3068\u306a\u308a\u307e\u3059\u3002\n\u6765\u5e74\u304c\u304a\u697d\u3057\u307f\u3067\u3059\uff01\nMerry Christmas!!!      \n## \u521d\u3081\u306b\n\u3053\u3093\u306b\u3061\u306f\u3002[CYBIRD\u30a8\u30f3\u30b8\u30cb\u30a2 Advent Calendar](http://qiita.com/advent-calendar/2015/cybird)\u6700\u7d42\u65e5\u62c5\u5f53\u306e[@jin_k](http://qiita.com/jin_k)\u3067\u3059\u3002\nCYBIRD2015\u5e74\u306e\u65b0\u5352\u5165\u793e\u3067\u30b2\u30fc\u30e0\u30a4\u30f3\u30d5\u30e9\u90e8\u3068\u3044\u3046\u90e8\u7f72\u306b\u6240\u5c5e\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n24\u65e5\u76ee\u306f[@gotyoooo](http://qiita.com/gotyoooo)\u3055\u3093\u306e[Amazon VPC NAT Gateway\u304c\u3042\u308b\u3068\u304d\u3002\u306a\u3044\u3068\u304d\u3002](http://qiita.com/gotyoooo/items/a5e9dc4e19f6463ad081)\u3067\u3057\u305f\u3002\nAmazon VPC NATGateway\u304c\u3042\u308b\u3068\u304d\u3068\u306a\u3044\u3068\u304d\u304c\u5206\u304b\u308a\u3084\u3059\u304f\u6574\u7406\u3055\u308c\u3066\u3044\u3066\u3001NAT Gateway\u3092\u4f7f\u3046\u3068\u4f55\u304b\u826f\u3044\u304b\u66f8\u3044\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305c\u3072\u3054\u89a7\u304f\u3060\u3055\u3044\uff01\n\n##\u5185\u5bb9\u306b\u3064\u3044\u3066\n\u4eca\u56de\u306fJenkins\u30b5\u30fc\u30d0\u30fc\u304b\u3089S3\u7d4c\u7531\u3067Web\u30b5\u30fc\u30d0\u30fc\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u914d\u5e03\u3057\u3066\u307f\u305f\u8a71\u3092\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n(Jenkins\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3066\u308b\u904e\u7a0b\u306e\u8aac\u660e\u3068\u304b\u306f\u3042\u308a\u307e\u305b\u3093\u3002)\n\n\u5f93\u3063\u3066\u4eca\u56de\u306e\u8a71\u306f\u3061\u3087\u3063\u3068\u5909\u308f\u3063\u305fCapistrano\u306e\u8a71\u3092\u3059\u308b\u306e\u3067\u3001Capistrano\u306e\u30c7\u30d7\u30ed\u30a4\u6d41\u308c\u3084\u8aac\u660e\u30fb\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u306e\u8a71\u306f\u3057\u307e\u305b\u3093\u3002\n\u3068\u306f\u3044\u3048\u3001\u81ea\u5206\u3082\u307e\u3060\u521d\u5fc3\u8005\u306a\u306e\u3067\u4f55\u304b\u9593\u9055\u3063\u305f\u3053\u3068\u304c\u66f8\u3044\u3066\u3042\u308b\u5834\u5408\u3001\u3054\u6307\u6458\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n##\u4eca\u56de\u306eCapistrano\u306e\u52d5\u304d\n###\u3053\u306e\u3088\u3046\u306a\u52d5\u304d\u3092\u3057\u305f\u7406\u7531\n- Capistrano3\u7cfb\u3067Github\u3068\u306e\u9023\u643a\u304cHTTPS\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306bgit\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u304c\u8f09\u305b\u3066\u3044\u308b\u306e\u3067\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fc\u7684\u306b\u826f\u304f\u306a\u3044\u3067\u3059\u3002\n- \u5404\u81eaWeb\u30b5\u30fc\u30d0\u30fc\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u3067Jenkins\u306e\u30b5\u30fc\u30d0\u30fc\u306e\u8ca0\u62c5\u3092\u6e1b\u3089\u3059\u3002\n- \u3044\u305a\u308c\u306b\u305b\u3088100%\u4fe1\u983c\u306f\u3067\u304d\u306a\u3044\u304c\u3001\u305d\u308c\u3067\u3082git\u3088\u308aS3\u306e\u65b9\u304c\u4fe1\u983c\u3067\u304d\u308b\u3002\n\n###\u4ed5\u7d44\u307f(pull)\n<img width=\"1014\" alt=\"\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba 2015-12-22 15.41.43.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/101553/c6e5a253-469b-37f2-dfac-71fa1e63ba6e.png\">\n1.git\u3068Jenkins\u3092\u9023\u643a\u3057\u3001\u6700\u65b0\u306efile\u3092Jenkins\u306b\u8fd4\u5374\u3057\u307e\u3059\u3002\n\u3000(\u4eca\u56de\u306f\uff11\u756a\u306b\u95a2\u3059\u308b\u5185\u5bb9\u306f\u3042\u308a\u307e\u305b\u3093\u3002)\n2.cap\u5b9f\u884c\u3057\u3001tar\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u56fa\u3081\u307e\u3059\u3002\n3.\u56fa\u3081\u305ftar\u3092S3\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n (\u73fe\u5728\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3068\u540c\u3058\u3082\u306e\u304cS3\u306b\u3042\u308b\u5834\u5408\u30013\u756a\u306e\u3053\u3068\u306f\u3057\u307e\u305b\u3093\u3002)\n4.\u5404\u81eaS3\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3088\u3046Web\u30b5\u30fc\u30d0\u30fc\u306b\u547d\u4ee4\u3057\u307e\u3059\u3002\n5.\u5404\u81eaWeb\u30b5\u30fc\u30d0\u30fc\u304cs3\u304b\u3089tar\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n6.\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305ftar\u3092\u5c55\u958b\u3057\u307e\u3059\u3002\n###\u4ed5\u7d44\u307f(push)\n<img width=\"990\" alt=\"\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba 2015-12-22 19.19.00.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/101553/5c6f06dc-03e7-277b-cbd2-fe51a9e44907.png\">\n\n1.git\u3068Jenkins\u3092\u9023\u643a\u3057\u3001\u6700\u65b0\u306efile\u3092Jenkins\u306b\u8fd4\u5374\u3057\u307e\u3059\u3002\n\u3000(\u4eca\u56de\u306f\uff11\u756a\u306b\u95a2\u3059\u308b\u5185\u5bb9\u306f\u3042\u308a\u307e\u305b\u3093\u3002)\n2.cap\u5b9f\u884c\u3057\u3001tar\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u56fa\u3081\u307e\u3059\u3002\n3.Jenkins\u30b5\u30fc\u30d0\u30fc\u304b\u3089Web\u30b5\u30fc\u30d0\u30fc\u306btar\u3092\u9001\u308a\u3064\u3051\u307e\u3059\u3002\n4.tar\u3092\u5c55\u958b\u3057\u307e\u3059\u3002\n\n\u203bpull\u4ee5\u5916\u306f\u3059\u3079\u3066push\u306e\u51e6\u7406\u3092\u3057\u307e\u3059\u3002\n##\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n- archive/tar/minitar 0.5.2\n\n```\n$ gem install archive-tar-minitar -v 0.5.2\n```\n- Ruby 2.1.0p0\n\n```\n$ rvm install ruby-2.1.0\n$ rvm use ruby-2.1.0\n$ ruby --version\nruby 2.1.0p0 (2013-12-25 revision 44422) [x86_64-linux]\n```\n\n- Capistrano 3.2.1\n\n```\n$ gem install capistrano\n$ cap --version\nCapistrano Version: 3.2.1 (Rake Version: 10.1.0)\n```\n\nS3\u3078\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u305f\u3081\u306bRuby\u306eAWS SDK\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n- aws-sdk-core 2.1.16\n\n```\n$ gem install aws-sdk-core -v 2.1.16\n```\n\n- aws-sdk-resources 2.1.16\n\n```\n$ gem install aws-sdk-resources -v 2.1.16\n```\n\nS3\u7d4c\u7531\u3067\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081AWS CLI\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u306e\u3067Web\u30b5\u30fc\u30d0\u30fc\u306binstall\u3057\u307e\u3059\u3002\nCredentialFile\u306fJenkins\u30b5\u30fc\u30d0\u30fc\u3001Web\u30b5\u30fc\u30d0\u30fc\u4e21\u65b9\u5fc5\u8981\u3067\u3059\u3002\n\n```\n# yum -y install python-setuptools\n# easy_install pip\n# pip install awscli\n# vi /etc/aws/credential-file\n====\n[default]\noutput = json\nregion = ap-northeast-1\naws_access_key_id = XXXXXXXXXXXXXXXXXXXX\naws_secret_access_key = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n====\n```\n## \u30c7\u30d7\u30ed\u30a4\u65b9\u6cd5\n###\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\n```rb:Capfile\n$:.unshift File.expand_path(File.dirname(__FILE__) + '/lib')\n\n# Load DSL and Setup Up Stages\nrequire 'capistrano/setup'\n\n# Includes default deployment tasks\nrequire 'capistrano/deploy'\n\nDir.glob('lib/capistrano/tasks/*.rake').each { |r| import r }\n```\n\n```rb:config/deploy.rb\n# config valid only for Capistrano 3.1\nset :pty, true\nlock '3.2.1'\nset :log_level, SSHKit::Logger::INFO\nset :application, 'JkTest'\nset :scm, :tarball_deploy\n\nset :tmp_dir, '/tmp'\nset :copy_exclude, ['docs']\n\nset :project_release_id, `git log --pretty=format:'%h' -n 1 HEAD`\n\n#(\u7701\u7565)\n```\n```rb:config/deploy/production_pull.rb\nset :deploy_to, ENV['DEPLOY_TO']#Web\u30b5\u30fc\u30d0\u30fc\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u7f6e\u304f\u3068\u3053\u308d\u3067\u3059\u3002\nset :resource_path, ENV['RESOURCE_PATH']#\u4ee5\u4e0b\u306eJenkins\u30b5\u30fc\u30d0\u30fc\u306b\u3042\u308b\u3082\u306e\u3092tar\u3067\u56fa\u3081\u307e\u3059\u3002\n\nset :tmp_tarball, '/tmp/production'\nset :aws_credential_file, ENV['AWS_CREDENTIAL_FILE']#aws\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306bcredential-file\u304c\u66f8\u3044\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\n\nservers_str = ENV['SERVERS'].to_s\nservers_str = servers_str.gsub(/\\s/, '')\n\nservers_str.split(',').each do |target_server|\n    if target_server.empty?\n        next\n    end\n    server target_server,\n        user: ENV['WEB_SERVER_USER'],#Web\u30b5\u30fc\u30d0\u30fc\u306e\u30e6\u30fc\u30b6\u30fc\n        roles: ['app'],\n        ssh_options: {\n            keys: [ENV['WEB_SERVER_SSH']],#Web\u30b5\u30fc\u30d0\u30fc\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306essh\u304c\u7f6e\u3044\u3066\u3042\u308b\u5834\u6240\n            forward_agent: false,\n            auth_methods: ['publickey']\n        }\nend\n```\n\n```rb:config/deploy/production_push.rb\nset :deploy_to, ENV['DEPLOY_TO']\nset :resource_path, ENV['RESOURCE_PATH']\n\nset :tmp_tarball, '/tmp/production'\nservers_str = ENV['SERVERS'].to_s\nservers_str = servers_str.gsub(/\\s/, '')\n\nservers_str.split(',').each do |target_server|\n    if target_server.empty?\n        next\n    end\n    server target_server,\n        user: ENV['WEB_SERVER_USER'],\n        roles: ['app'],\n        ssh_options: {\n            keys: [ENV['WEB_SERVER_SSH']],\n            forward_agent: false,\n            auth_methods: ['publickey']\n        }\nend\n```\n\n```rb:lib/capistrano/tarball_deploy.rb\nrequire 'digest/md5'\nrequire 'zlib'\nrequire 'archive/tar/minitar'\nrequire 'aws-sdk-core'\n\nnamespace :tarball_deploy do\n\n    s3_samefile_check = false#\u4eca\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304cS3\u306b\u540c\u3058\u3082\u306e\u304c\u3042\u308b\u304bcheck\u3059\u308b\u5909\u6570\n\n    if !ENV['DEPLOY_TYPE'].nil?\n        # ENV\u3067\u6e21\u3063\u3066\u304d\u3066\u3044\u308c\u3070\u5024\u3092\u4e0a\u66f8\u304d\u3059\u308b\n        set :deploy_type, ENV['DEPLOY_TYPE']\n    end\n\n    desc 'check ENV value and configuration'\n    task :check do\n        if fetch(:tmp_tarball).nil?\n            set :tmp_tarball, ENV['TMP_TARBALL'] ? ENV['TMP_TARBALL'] : '/tmp'\n        end\n\n        run_locally do\n            execute \"mkdir -p #{fetch(:tmp_tarball).gsub(/\\/$/, '')}\"\n        end\n        on roles(:app) do\n            unless test 'which md5sum'\n                error 'command `md5sum\\' is not found.'\n                abort\n            end\n        end\n\n        if fetch(:deploy_type) == 'pull'\n            # check AWS configuration\n            #(\u7701\u7565)\n        end\n    end\n\n```\nENV\u3067\u6e21\u3057\u3066\u3044\u308b\u74b0\u5883\u5909\u6570\u3092check\u3057\u307e\u3059\u3002\n\n\n```rb:lib/capistrano/tarball_deploy.rb\n\n#(\u7701\u7565)\n            # tar\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\n            if fetch(:deploy_type) == 'pull'\n                unless (s3_samefile_check)\n                    run_locally do\n                        upload_tarball_to_s3(tarball)\n                    end\n                end\n            else\n                # pull\u4ee5\u5916\u306f\u3059\u3079\u3066push\u578b\n                on roles(:app) do\n                    upload! tarball, fetch(:tmp_dir)\n                end\n            end\n```\ntar\u3092S3\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u95a2\u6570\u5b9f\u884c\n\n```rb:lib/capistrano/tarball_deploy.rb\n        on roles(:app) do\n            if fetch(:deploy_type) == 'pull'\n                # S3\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u51e6\u7406\n                execute \"export AWS_CONFIG_FILE=#{fetch(:aws_credential_file)} && aws s3 cp s3://#{fetch(:bucket_name)}/#{fetch(:s3_path) + File.basename(tarball)} #{fetch(:tmp_dir)}/#{File.basename(tarball)}\"\n            end\n\n            # check tarball hash\n            #(\u7701\u7565)\n\n```\nS3\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\n```rb:lib/capistrano/tarball_deploy.rb\n    desc 'create tarball'\n    file 'create_resource_tarball' do\n        # create tarball on Capistrano installed server\n        run_locally do\n            if fetch(:deploy_type) == 'pull'\n                Aws.config[:credentials] = Aws::SharedCredentials.new(\n                path: fetch(:aws_credential_file),\n                profile_name: fetch(:aws_profile_name)\n                )\n                Aws.config[:region] = fetch(:region)\n                s3 = Aws::S3::Client.new()\n                resp = s3.list_objects(bucket: fetch(:bucket_name),prefix: fetch(:s3_path))\n                resp.contents.each do |object|\n                    if (\"#{fetch(:s3_path)}release-#{fetch(:project_release_id)}.tar.gz\" == \"#{object.key}\")\n                        s3_samefile_check = true\n                    end\n                end\n            end\n\n            unless (s3_samefile_check)\n                info 'start to create tarball...'\n                Zlib::GzipWriter.open(\"#{fetch(:tmp_tarball)}/release-#{fetch(:project_release_id)}.tar.gz\", Zlib::BEST_COMPRESSION) do |gz|\n                    out = Archive::Tar::Minitar::Output.new(gz)\n                    Dir.chdir(\"#{fetch(:resource_path)}\")\n\n                    files = FileList['**/*']\n                    exclude_list = fetch(:copy_exclude) + ['.git']\n\n                    files.exclude(exclude_list).each do |file|\n                        Archive::Tar::Minitar::pack_file(file, out)\n                    end\n                    out.close\n                end\n                info 'Finished'\n                set :tarball_hash_value, Digest::MD5.hexdigest(File.open(\"#{fetch(:tmp_tarball)}/release-#{fetch(:project_release_id)}.tar.gz\").read)\n                info \"created tarball's hash: #{fetch(:tarball_hash_value)}\"\n            else\n                info 'Alrady updated.'\n            end\n        end\n    end\n```\n\u540c\u3058\u3082\u306e\u304cS3\u306b\u306a\u3044\u5834\u5408\u3001tar\u3092\u56fa\u3081\u307e\u3059\u3002\n\n```rb:lib/capistrano/tarball_deploy.rb\n#(\u7701\u7565)\n    def upload_tarball_to_s3(upload_file)\n        Aws.config[:credentials] = Aws::SharedCredentials.new(\n            path: fetch(:aws_credential_file),\n            profile_name: fetch(:aws_profile_name)\n        )\n        Aws.config[:region] = fetch(:region)\n        s3 = Aws::S3::Client.new()\n        s3.put_object(\n            bucket: fetch(:bucket_name),\n            body: File.open(upload_file),\n            key: fetch(:s3_path) + File.basename(upload_file)\n        )\n    end\n\n    def check_aws_configuration()\n    #(\u7701\u7565)\nend\n```\n\n##Jenkins\u8a2d\u5b9a\n###\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u8a2d\u5b9a\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u3079\u3066\u74b0\u5883\u5909\u6570\u3067\u6e21\u3057\u305f\u3082\u306e\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u5316\u3057\u307e\u3059\u3002\n<img width=\"631\" alt=\"\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba 2015-12-22 19.51.46.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/101553/1dc42d7f-4b7c-01a2-0ee6-7d28d2862d79.png\">\n\n###\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\n```\ncd ${WORKSPACE}/capistrano\nSERVERS=${SERVER} /usr/local/bin/cap production_pull deploy DEPLOY_TYPE=${DEPLOY_TYPE} WEB_SERVER_SSH=${WEB_SERVER_SSH} WEB_SERVER_USER=${WEB_SERVER_USER} S3_PATH=${S3_PATH} REGION=${REGION} BUCKET_NAME=${BUCKET_NAME} RESOURCE_PATH=${RESOURCE_PATH} AWS_PROFILE_NAME=${AWS_PROFILE_NAME} AWS_CREDENTIAL_FILE=${AWS_CREDENTIAL_FILE} DEPLOY_TO=${DEPLOY_TO}\n```\n\n\n##\u8d77\u304d\u305f\u30a8\u30e9\u30fc\n```\n\u30a8\u30e9\u30fc\u90e8\u5206\uff1asudo: sorry,you must have a tty to run sudo.\n```\n\u53c2\u8003\uff1ahttp://qiita.com/e2_adachi/items/7abf974d81067bd2b746\nset :pty, true\u3092\u66f8\u304f\u3053\u3068\u3067\u89e3\u6c7a\n\n```\nThe deploy has failed with an error: Exception while executing as xx@xxxxx: sudo /etc/init.d/httpd\n\u3000\u3000\u3000\u3000\u3000\u3000graceful\u3000\u3000\u3000 exit status: 1\n\u3000\u3000\u3000\u3000\u3000\u3000sudo /etc/init.d/httpd graceful stdout: [sudo] password for xx:\n\u3000\u3000\u3000\u3000\u3000\u3000sudo /etc/init.d/httpd graceful stderr: Nothing written\n```\n\u53c2\u8003\uff1ahttp://blog.suz-lab.com/2011/01/sudoetcinitdhttpd.html\nhttp://yut.hatenablog.com/entry/20111013/1318436872\n\n\n```\n/tmp/hudson4186181752264859077.sh: line 3: cap: command not found\n```\n\u53c2\u8003\uff1ahttp://itpro.nikkeibp.co.jp/article/COLUMN/20060228/230996/\nwhich cap\u3067\u78ba\u8a8d\u3057\u305f\u3068\u3053\u308d\u3001cap\u3067\u306f\u306a\u304f\u3001/usr/local/bin/cap\u3067\u3057\u305f\u3002\n\n```\nThe deploy has failed with an error: Exception while executing as xx@xxxxxx: getaddrinfo: nodename nor servname provided, or not known\n```\n\u53c2\u8003:http://www.linux-beginner.com/linux_setei1.html\nIP\u30a2\u30c9\u30ec\u30b9\u3068\u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u30db\u30b9\u30c8\u540d\u306e\u8a2d\u5b9a\u304c\u3067\u304d\u3066\u306a\u3044\u3002\n\n\n## \u6700\u5f8c\u306b\n\u4eca\u56deCapistrano\u306e\u3053\u3068\u3092\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\u3002\u8ab0\u304b\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u305b\u3067\u3059\u3002\n\nCapistrano\u3092\u77e5\u3063\u305f\u304d\u3063\u304b\u3051\u306f\u5148\u8f29\u304b\u3089\u793e\u5185\u3067\u4f7f\u3063\u3066\u3044\u308bCapistrano\u306e\u6539\u5584\u306e\u3053\u3068\u3067\u5b9f\u884c\u30c6\u30b9\u30c8\u30fb\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4fee\u6b63\u3092\u304a\u9858\u3044\u3055\u308c\u305f\u3053\u3068\u3067\u3057\u305f\u3002Capistrano\u3092\u7406\u89e3\u3084\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3068\u8a70\u307e\u3063\u305f\u308a\u3001\u5148\u8f29\u304b\u3089\u304a\u9858\u3044\u3055\u308c\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u5185\u5bb9\u304c\u7406\u89e3\u3067\u304d\u306a\u304f\u3063\u3066\u8272\u3005\u5927\u5909\u3067\u3057\u305f\u304c\u3001\u3044\u3044\u7d4c\u9a13\u306b\u306a\u308a\u307e\u3057\u305f\uff01\n\n\u6b8b\u5ff5\u306a\u304c\u3089[CYBIRD\u30a8\u30f3\u30b8\u30cb\u30a2 Advent Calendar](http://qiita.com/advent-calendar/2015/cybird)\u306f\u4ee5\u4e0a\u3068\u306a\u308a\u307e\u3059\u3002\n\u6765\u5e74\u304c\u304a\u697d\u3057\u307f\u3067\u3059\uff01\n\nMerry Christmas!!!      \n", "tags": ["capistrano"]}