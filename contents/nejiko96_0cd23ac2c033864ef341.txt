{"context": "\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u3068\u3053\u308dAtCoder\u306e\u904e\u53bb\u554f\u3092\u3058\u308f\u3058\u308f\u3068\u89e3\u3044\u3066\u3044\u308b\u79c1\u3067\u3059\u3002\n\u6700\u8fd1OnlineJudgeHelper\u3068\u3044\u3046\u30c4\u30fc\u30eb\u306e\u5b58\u5728\u3092\u77e5\u308a\u300c\u3053\u308c\u4f7f\u3048\u3070\u3059\u3054\u304f\u6357\u308b\u3058\u3083\u3093\uff1f\u300d\u3068\u885d\u6483\u3092\u53d7\u3051\u305f\u308f\u3051\u3067\u3059\u304c\u3001\n\u300c\u3044\u3084\u3001\u3053\u308c\u304f\u3089\u3044\u306e\u30c4\u30fc\u30eb\u306f\u81ea\u5206\u3067\u4f5c\u308c\u306a\u3044\u3068\uff01\u300d\u3068\u3044\u3046\u5909\u306a\u610f\u5730\u3082\u3042\u3063\u3066\u3001\n\u7d50\u5c40\u30aa\u30ec\u30aa\u30ecAtCoder\u30c4\u30fc\u30eb\u3092\u81ea\u4f5c\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3088\u3001\u3068\u3044\u3046\u8a71\u3067\u3059\u3002\n\n\u30c6\u30b9\u30c8\u306e\u81ea\u52d5\u5b9f\u884c\n\u30c6\u30b9\u30c8\u306e\u81ea\u52d5\u5b9f\u884c\u3060\u3051\u306f\u308f\u308a\u3068\u6614\u304b\u3089\u3084\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u4ed5\u639b\u3051\u306f\u81f3\u3063\u3066\u30b7\u30f3\u30d7\u30eb\u306a\u3082\u306e\u3067\u3059\u3002\n\n\u5165\u529b\u30c7\u30fc\u30bf\u4f8b\u3092 \"data/A_001.in\" \u3068\u3044\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u7f6e\u3044\u3066\u304a\u304f\n\u51fa\u529b\u30c7\u30fc\u30bf\u4f8b\u3092 \"data/A_001.exp\" \u3068\u3044\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u7f6e\u3044\u3066\u304a\u304f\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u3001\u51fa\u529b\u7d50\u679c\u3092 \"data/A_001.out\" \u3068\u3044\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u4fdd\u5b58\n\"data/A_001.out\" \u3068 \"data/A_001.exp\" \u306e\u4e2d\u8eab\u3092\u6587\u5b57\u5217\u6bd4\u8f03\n\u4e0a\u8a18\u3092\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u756a\u53f7\u9806\u306b\u4e00\u62ec\u5b9f\u884c\n\n\ntesting.rb\ndef test_auto(prog)\n  1.upto(999) do |i|\n    break unless test(prog, i)\n  end\nend\n\ndef test(prog, n)\n  base, ext = prog.split('.')\n  q = base.split('_')[0]\n  cs = format('%s_%03d', q, n)\n  infile = \"data/#{cs}.in\"\n  outfile = \"data/#{cs}.out\"\n  expfile = \"data/#{cs}.exp\"\n\n  return false unless File.exist?(infile)\n  return false unless File.exist?(expfile)\n\n  cmd =\n    case ext\n    # \u62e1\u5f35\u5b50\uff08\u4f7f\u7528\u8a00\u8a9e\uff09\u306b\u3088\u3063\u3066\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\u3092\u5909\u3048\u308b\n    end\n\n  ec = system(\"#{cmd} < #{infile} > #{outfile}\")\n\n  input = File.read(infile)\n  result = File.read(outfile)\n  expected = File.read(expfile)\n\n  puts \"==== #{cs} ====\"\n  puts '-- input --'\n  print input\n  puts '-- expected --'\n  print expected\n  puts '-- result --'\n  print result\n  if !ec\n    puts '!!!!! RE !!!!!'\n  elsif result != expected\n    puts '!!!!! WA !!!!!'\n  else\n    puts '<< OK >>'\n  end\n  true\nend\n\n\n\u3061\u3087\u3063\u3068\u3046\u308c\u3057\u3044\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u306f\u3001\n\u4f8b\u3048\u3070D\u554f\u984c\u3067\u6700\u521d\u306b\u66f8\u3044\u305f\u201dD.cxx\u201d\u304c\u901a\u3089\u306a\u304b\u3063\u305f\uff01\u3068\u306a\u3063\u3066\u5225\u306e\u65b9\u6cd5\u3092\u8a66\u3057\u3066\u307f\u308b\u6642\u306b\u3001\n\u5225\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30a2\u30f3\u30b9\u30b3\u4ed8\u304d\u306e\"D_v2.cxx\"\u3068\u3044\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u3057\u3066\u304a\u304f\u3068\u3001\n\u3069\u3061\u3089\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u540c\u3058\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf(data/D_00X.in)\u3067\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3000\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u3057\u3070\u3089\u304f\u306f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u554f\u984c\u30da\u30fc\u30b8\u304b\u3089\uff11\u3064\uff11\u3064\u624b\u3067\u30b3\u30d4\u30fc\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\n\u3042\u308b\u6642\u3001\u300c\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3067\u81ea\u52d5\u5316\u3067\u304d\u308b\u3093\u3058\u3083\u306d\uff1f\u300d\u3068\u6c17\u304c\u3064\u304d\u307e\u3057\u305f\u3002\n\nscraping.rb\nrequire 'mechanize'\n\ndef _fetch_all\n  url = @url + 'assignments'\n  puts \"fetch from #{url} ...\"\n  sleep 0.1\n  page = @agent.get(url)\n  ('A'..'Z').each do |q|\n    link = page.link_with(text: q)\n    next unless link\n    _fetch(q, link.href)\n  end\nend\n\ndef _fetch(q, url)\n  puts \"fetch from #{url} ...\"\n  sleep 0.1\n  page = @agent.get(url)\n  fmt = smp = desc = ''\n  page.search(\"//div[contains(@class,'part')]\").each do |section|\n    h3 = section.search('h3')\n    next if h3.empty?\n    title = h3[0].content\n    pre = section.search('pre')\n    next if pre.empty?\n    data = pre[0].content.lstrip.gsub(\"\\r\\n\", \"\\n\")\n    case title\n    when /^\u5165\u529b$/\n      desc = section.content\n      fmt = data\n    when /^\u5165\u529b\u4f8b\\s*(\\d+)$/\n      _out_data(q, $1, 'in', data)\n      smp = data if data.size > smp.size\n    when /^\u51fa\u529b\u4f8b\\s*(\\d+)$/\n      _out_data(q, $1, 'exp', data)\n    end\n  end\n  _out_src(q, 'rb', src_gen_ruby(fmt, smp))\n  _out_src(q, 'cxx', src_gen_c(desc, fmt, smp))\nend\n\n\n\u554f\u984c\u306b\u3088\u3063\u3066\u30da\u30fc\u30b8\u306e\u69cb\u6210\u306b\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u304c\u3042\u308b\u305f\u3081\u3001\n\u4f7f\u3063\u3066\u3044\u3066\u3046\u307e\u304f\u53d6\u308c\u306a\u3044\u30b1\u30fc\u30b9\u304c\u51fa\u3066\u304d\u305f\u3089\u305d\u306e\u90fd\u5ea6\u4fee\u6b63\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001 \n\u6700\u8fd1\u306f\u5b89\u5b9a\u611f\u304c\u51fa\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u30ed\u30b0\u30a4\u30f3\u6a5f\u80fd\n\u904e\u53bb\u554f\u3070\u304b\u308a\u89e3\u3044\u3066\u3044\u305f\u306e\u3067\u3057\u3070\u3089\u304f\u6c17\u304c\u4ed8\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\n\u3042\u308b\u3068\u304d\u30b3\u30f3\u30c6\u30b9\u30c8\u4e2d\u306b\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u843d\u3068\u305d\u3046\u3068\u3057\u305f\u3089\u52d5\u304b\u306a\u304f\u3066\u3001\n\u30b3\u30f3\u30c6\u30b9\u30c8\u4e2d\u306f\u3053\u3046\u3044\u3046\u306e\u306f\u7981\u6b62\u306a\u306e\u304b\u306a\uff1f\u3068\u601d\u3063\u3066\u3044\u305f\u3089\u3001\n\u3069\u3046\u3084\u3089\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u30c4\u30fc\u30eb\u304b\u3089AtCoder\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304a\u3051\u3070\n\u30b3\u30f3\u30c6\u30b9\u30c8\u4e2d\u3067\u3082\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u3089\u3057\u3044\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u3001\n\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u6a5f\u80fd\u3092\u3064\u3051\u307e\u3057\u305f\u3002\n\u3053\u306e\u90e8\u5206\u306f\u81ea\u529b\u3067\u4f5c\u308c\u306a\u304f\u3066\u3001\u4ed6\u6240\u306eAtCoder\u30c4\u30fc\u30eb\u3092\u5927\u3044\u306b\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002  \n\n\u30bd\u30fc\u30b9\u63d0\u51fa\u6a5f\u80fd\n\u30ed\u30b0\u30a4\u30f3\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u3067\u304d\u308b\u3068\u3001\u305d\u308c\u3092\u5c11\u3057\u6539\u9020\u3059\u308b\u3060\u3051\u3067\u30bd\u30fc\u30b9\u306e\u63d0\u51fa\u3082\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u5b9f\u306f\u63d0\u51fa\u30d5\u30a9\u30fc\u30e0\u304b\u3089\u63d0\u51fa\u3057\u3066\u3082\u5927\u3057\u305f\u624b\u9593\u3058\u3083\u306a\u3044\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3001\n\u3042\u307e\u308a\u81ea\u52d5\u5316\u3059\u308b\u5fc5\u8981\u6027\u3092\u611f\u3058\u3066\u3044\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\n\u3067\u304d\u3066\u3057\u307e\u3046\u3068\u305d\u308c\u306a\u308a\u306b\u4fbf\u5229\u3067\u3059\u306d\u3002\n\u30bd\u30fc\u30b9\u306e\u62e1\u5f35\u5b50\u304b\u3089\u8a00\u8a9e\u3092\u81ea\u52d5\u5224\u5225\u3067\u304d\u308b\u306e\u3067\u3001\n\u8a00\u8a9e\u306e\u9078\u629e\u30df\u30b9\u3067\u4f59\u8a08\u306a\u30da\u30ca\u30eb\u30c6\u30a3\u3092\u304f\u3089\u3046\u3053\u3068\u304c\u306a\u304f\u306a\u308b\u306e\u3082\u3044\u3044\u3067\u3059\u3002\n\u30aa\u30ec\u30aa\u30ec\u30c4\u30fc\u30eb\u306a\u306e\u3067\u3001\u8a00\u8a9e\u306fRuby\u3068C++\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u3067\u3059\u3002\n\n\u30bd\u30fc\u30b9\u751f\u6210\u6a5f\u80fd\n\u305f\u3076\u3093OnlineJudgeHelper\u304c\u8a71\u984c\u306b\u306a\u3063\u305f\u3068\u304d\u306b\u3001\u8ab0\u304b\u304c\n\u300c\u5165\u529b\u90e8\u5206\u306e\u30bd\u30fc\u30b9\u306e\u81ea\u52d5\u751f\u6210\u304f\u3089\u3044\u3067\u304d\u306a\u3044\u3068\u300d\n\u307f\u305f\u3044\u306a\u767a\u8a00\u3092\u3057\u3066\u3044\u305f\u3093\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u305d\u308c\u3092\u601d\u3044\u5207\u308a\u771f\u306b\u53d7\u3051\u3066\u3057\u307e\u3044\u3001\n\u554f\u984c\u30da\u30fc\u30b8\u306e\u5165\u529b\u30c7\u30fc\u30bf\u306e\u8aac\u660e\u304b\u3089\u5165\u529b\u90e8\u5206\u306e\u30bd\u30fc\u30b9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u306b\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u307e\u3057\u305f\u3002\nRuby\u3068C++\u306e\u4e21\u65b9\u3067\u30bd\u30fc\u30b9\u3092\u51fa\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u30c7\u30fc\u30bf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u30d1\u30fc\u30b9\u3057\u305f\u7d50\u679c\u3092\n\u4e00\u65e6\u5171\u901a\u306e\u5165\u529b\u30c7\u30fc\u30bf\u5b9a\u7fa9\u7684\u306a\u69cb\u9020\u4f53\u306b\u7a81\u3063\u8fbc\u3080\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\nsrc_gen.rb\nInputDef = Struct.new(:type, :size, :fmt, :vars)\n\ndef parse_fmt(fmt)\n  inpdefs = []\n  fmt = fmt\n        .gsub(/-1/, '') # N-1 -> N\n        .gsub(/(-|\u3000)/, ' ') # a-b -> a b\n        .gsub(/[_,\\\\\\(\\)\\{\\}]/, '')\n        .split(\"\\n\")\n  fmt << ''\n  re = prev = nil\n  fmt.each do |f|\n    if re\n      if f =~ re\n        prev = f\n        next\n      end\n      inpdef = inpdefs.last\n      case inpdef.type\n      when :matrix\n        inpdef.size = prev[-2..-1].chars.to_a\n      when :varray\n        inpdef.size = prev =~ /(\\d+)$/ ? $1 : prev[-1]\n      end\n      re = prev = nil\n    end\n    case f\n    when /^([a-z]+).(\\s+\\1.)+\\s+[\\.|\u2026]+\\s+\\1.$/i, /^([a-z]+)[01](\\s+\\1.)+$/i\n      inpdefs << InputDef.new(:harray, f[-1], :number, $1)\n    when /^([a-z]+)..(\\s+\\1..)+\\s+[\\.|\u2026]+\\s+\\1..$/i\n      inpdefs << InputDef.new(:matrix, nil, :number, $1)\n      re = /(^#{$1}..(\\s+#{$1}..)+\\s+[\\.|\u2026]+\\s+#{$1}..|:|\uff1a|\\.+)$/\n      prev = f\n    when /^([a-z]+)..(\\1..)+\\s+[\\.|\u2026]+\\s+\\1..$/i\n      inpdefs << InputDef.new(:matrix, nil, :char, $1)\n      re = /(^#{$1}..(#{$1}..)+\\s+[\\.|\u2026]+\\s+#{$1}..|:|\uff1a|\\.+)$/\n      prev = f\n    when /^([a-z]+)[01][01](\\s+\\1..)+$/i\n      inpdefs << InputDef.new(:matrix, nil, :number, $1)\n      re = /(^#{$1}..(\\s+#{$1}..)+|:|\uff1a|\\.+)$/\n      prev = f\n    when /^[a-z]+(\\d)(\\s+[a-z]+\\1)*$/i\n      vars = f.split.map { |v| v[0..-2] }\n      inpdefs << InputDef.new(:varray, nil, :number, vars)\n      pat = vars.map { |v| v + '.+' }.join('\\s+')\n      re = Regexp.new(\"^(#{pat}|:|\uff1a|\\\\.+)$\")\n      prev = f\n    when /^[a-z]+(\\s+[a-z]+)*$/i\n      inpdefs << InputDef.new(:single, nil, :number, f.split)\n    end\n  end\n  inpdefs\nend\n\n\n\u4e0a\u8a18\u306e\u51e6\u7406\u3067\n\n\u5358\u72ec\u306e\u5909\u6570\n\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u6a2a\u306b\u4e26\u3093\u3060\u5358\u72ec\u306e\u5909\u6570\n\u6a2a\u65b9\u5411\u306e\u914d\u5217\n\u7e26\u65b9\u5411\u306e\u914d\u5217\n\u884c\u5217\n\n\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u30d1\u30fc\u30b9\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u307e\u3060\u6539\u826f\u4e2d\u3067\u3059\u3002\n\u30c7\u30fc\u30bf\u578b\u306f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u60c5\u5831\u3060\u3051\u3067\u306f\u5206\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u4e00\u65e6\u5168\u3066\u6574\u6570\u578b\u3068\u3057\u3066\u3001\n\u5f8c\u3067\u5165\u529b\u30c7\u30fc\u30bf\u4f8b\u3068\u7a81\u304d\u5408\u308f\u305b\u3066\u305d\u308c\u4ee5\u5916\u306e\u578b\u3092\u8a2d\u5b9a\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3068\u306f\u3044\u3063\u3066\u3082\u4eca\u306e\u3068\u3053\u308d\u3001\u6574\u6570\u3058\u3083\u306a\u3055\u305d\u3046\u306a\u3082\u306e\u306f\u5168\u3066\u6587\u5b57\u5217\u3068\u3044\u3046\u6271\u3044\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4f7f\u7528\u30a4\u30e1\u30fc\u30b8\n\u30b3\u30f3\u30c6\u30b9\u30c8\u540d\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u3063\u3066\u3001\u305d\u306e\u4e2d\u306b\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304d\u307e\u3059\u3002\n\nhelper.rb\nrequire '../../AtCoderFriends/helper.rb'\n\n# start\n\n# test_auto 'A.rb'\n# submit 'A.rb'\n\n# test_auto 'B.rb'\n# submit 'B.rb'\n\n# test_auto 'C.rb'\n# submit 'C.rb'\n\n# test_auto 'D.cxx'\n# submit 'D.cxx'\n\n\nSublime Text\u306e\u5de6\u5074\u306b\u30bd\u30fc\u30b9\u3001\u53f3\u5074\u306bhelper.rb\u3092\u958b\u3044\u3066\u3001\n\u9069\u5b9chelper.rb\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u89e3\u9664\u3057\u3066\u52d5\u304b\u3059\u3068\u3044\u3046\u4f7f\u3044\u65b9\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u30fb\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u751f\u6210\u2192\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u2192\u30b3\u30f3\u30d1\u30a4\u30eb\u2192\u30c6\u30b9\u30c8\u2192\u63d0\u51fa\n\u306e\u4f5c\u696d\u304c\u5168\u3066Sublime Text\u306e\u4e2d\u3067\u5b8c\u7d50\u3067\u304d\u308b\u306e\u3067\u3001\u81ea\u5206\u3068\u3057\u3066\u306f\u304b\u306a\u308a\u5feb\u9069\u3067\u3059\u3002\n\u30aa\u30ec\u30aa\u30ec\u30c4\u30fc\u30eb\u306a\u306e\u3067CLI\u3068\u304bGUI\u306e\u985e\u306f\u4e00\u5207\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u30bd\u30fc\u30b9\u4e00\u5f0f\u306f\u3053\u3061\u3089\nhttps://github.com/nejiko96/AtCoderFriends\n## \u306f\u3058\u3081\u306b\n\u3053\u306e\u3068\u3053\u308dAtCoder\u306e\u904e\u53bb\u554f\u3092\u3058\u308f\u3058\u308f\u3068\u89e3\u3044\u3066\u3044\u308b\u79c1\u3067\u3059\u3002\n\u6700\u8fd1[OnlineJudgeHelper](https://github.com/nodchip/OnlineJudgeHelper)\u3068\u3044\u3046\u30c4\u30fc\u30eb\u306e\u5b58\u5728\u3092\u77e5\u308a\u300c\u3053\u308c\u4f7f\u3048\u3070\u3059\u3054\u304f\u6357\u308b\u3058\u3083\u3093\uff1f\u300d\u3068\u885d\u6483\u3092\u53d7\u3051\u305f\u308f\u3051\u3067\u3059\u304c\u3001\n\u300c\u3044\u3084\u3001\u3053\u308c\u304f\u3089\u3044\u306e\u30c4\u30fc\u30eb\u306f\u81ea\u5206\u3067\u4f5c\u308c\u306a\u3044\u3068\uff01\u300d\u3068\u3044\u3046\u5909\u306a\u610f\u5730\u3082\u3042\u3063\u3066\u3001\n\u7d50\u5c40\u30aa\u30ec\u30aa\u30ecAtCoder\u30c4\u30fc\u30eb\u3092\u81ea\u4f5c\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3088\u3001\u3068\u3044\u3046\u8a71\u3067\u3059\u3002\n\n## \u30c6\u30b9\u30c8\u306e\u81ea\u52d5\u5b9f\u884c\n\u30c6\u30b9\u30c8\u306e\u81ea\u52d5\u5b9f\u884c\u3060\u3051\u306f\u308f\u308a\u3068\u6614\u304b\u3089\u3084\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u4ed5\u639b\u3051\u306f\u81f3\u3063\u3066\u30b7\u30f3\u30d7\u30eb\u306a\u3082\u306e\u3067\u3059\u3002\n\n- \u5165\u529b\u30c7\u30fc\u30bf\u4f8b\u3092 \"data/A_001.in\" \u3068\u3044\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u7f6e\u3044\u3066\u304a\u304f\n- \u51fa\u529b\u30c7\u30fc\u30bf\u4f8b\u3092 \"data/A_001.exp\" \u3068\u3044\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u7f6e\u3044\u3066\u304a\u304f\n- \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u3001\u51fa\u529b\u7d50\u679c\u3092 \"data/A_001.out\" \u3068\u3044\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u4fdd\u5b58\n- \"data/A_001.out\" \u3068 \"data/A_001.exp\" \u306e\u4e2d\u8eab\u3092\u6587\u5b57\u5217\u6bd4\u8f03\n- \u4e0a\u8a18\u3092\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u756a\u53f7\u9806\u306b\u4e00\u62ec\u5b9f\u884c\n\n```testing.rb\ndef test_auto(prog)\n  1.upto(999) do |i|\n    break unless test(prog, i)\n  end\nend\n\ndef test(prog, n)\n  base, ext = prog.split('.')\n  q = base.split('_')[0]\n  cs = format('%s_%03d', q, n)\n  infile = \"data/#{cs}.in\"\n  outfile = \"data/#{cs}.out\"\n  expfile = \"data/#{cs}.exp\"\n\n  return false unless File.exist?(infile)\n  return false unless File.exist?(expfile)\n\n  cmd =\n    case ext\n    # \u62e1\u5f35\u5b50\uff08\u4f7f\u7528\u8a00\u8a9e\uff09\u306b\u3088\u3063\u3066\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\u3092\u5909\u3048\u308b\n    end\n\n  ec = system(\"#{cmd} < #{infile} > #{outfile}\")\n\n  input = File.read(infile)\n  result = File.read(outfile)\n  expected = File.read(expfile)\n\n  puts \"==== #{cs} ====\"\n  puts '-- input --'\n  print input\n  puts '-- expected --'\n  print expected\n  puts '-- result --'\n  print result\n  if !ec\n    puts '!!!!! RE !!!!!'\n  elsif result != expected\n    puts '!!!!! WA !!!!!'\n  else\n    puts '<< OK >>'\n  end\n  true\nend\n```\n\n\u3061\u3087\u3063\u3068\u3046\u308c\u3057\u3044\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u306f\u3001\n\u4f8b\u3048\u3070D\u554f\u984c\u3067\u6700\u521d\u306b\u66f8\u3044\u305f\u201dD.cxx\u201d\u304c\u901a\u3089\u306a\u304b\u3063\u305f\uff01\u3068\u306a\u3063\u3066\u5225\u306e\u65b9\u6cd5\u3092\u8a66\u3057\u3066\u307f\u308b\u6642\u306b\u3001\n\u5225\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30a2\u30f3\u30b9\u30b3\u4ed8\u304d\u306e\"D_v2.cxx\"\u3068\u3044\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u3057\u3066\u304a\u304f\u3068\u3001\n\u3069\u3061\u3089\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u540c\u3058\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf(data/D_00X.in)\u3067\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n##\u3000\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u3057\u3070\u3089\u304f\u306f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u554f\u984c\u30da\u30fc\u30b8\u304b\u3089\uff11\u3064\uff11\u3064\u624b\u3067\u30b3\u30d4\u30fc\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\n\u3042\u308b\u6642\u3001\u300c\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3067\u81ea\u52d5\u5316\u3067\u304d\u308b\u3093\u3058\u3083\u306d\uff1f\u300d\u3068\u6c17\u304c\u3064\u304d\u307e\u3057\u305f\u3002\n\n```scraping.rb\nrequire 'mechanize'\n\ndef _fetch_all\n  url = @url + 'assignments'\n  puts \"fetch from #{url} ...\"\n  sleep 0.1\n  page = @agent.get(url)\n  ('A'..'Z').each do |q|\n    link = page.link_with(text: q)\n    next unless link\n    _fetch(q, link.href)\n  end\nend\n\ndef _fetch(q, url)\n  puts \"fetch from #{url} ...\"\n  sleep 0.1\n  page = @agent.get(url)\n  fmt = smp = desc = ''\n  page.search(\"//div[contains(@class,'part')]\").each do |section|\n    h3 = section.search('h3')\n    next if h3.empty?\n    title = h3[0].content\n    pre = section.search('pre')\n    next if pre.empty?\n    data = pre[0].content.lstrip.gsub(\"\\r\\n\", \"\\n\")\n    case title\n    when /^\u5165\u529b$/\n      desc = section.content\n      fmt = data\n    when /^\u5165\u529b\u4f8b\\s*(\\d+)$/\n      _out_data(q, $1, 'in', data)\n      smp = data if data.size > smp.size\n    when /^\u51fa\u529b\u4f8b\\s*(\\d+)$/\n      _out_data(q, $1, 'exp', data)\n    end\n  end\n  _out_src(q, 'rb', src_gen_ruby(fmt, smp))\n  _out_src(q, 'cxx', src_gen_c(desc, fmt, smp))\nend\n```\n\u554f\u984c\u306b\u3088\u3063\u3066\u30da\u30fc\u30b8\u306e\u69cb\u6210\u306b\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u304c\u3042\u308b\u305f\u3081\u3001\n\u4f7f\u3063\u3066\u3044\u3066\u3046\u307e\u304f\u53d6\u308c\u306a\u3044\u30b1\u30fc\u30b9\u304c\u51fa\u3066\u304d\u305f\u3089\u305d\u306e\u90fd\u5ea6\u4fee\u6b63\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001 \n\u6700\u8fd1\u306f\u5b89\u5b9a\u611f\u304c\u51fa\u3066\u304d\u307e\u3057\u305f\u3002\n\n## \u30ed\u30b0\u30a4\u30f3\u6a5f\u80fd\n\u904e\u53bb\u554f\u3070\u304b\u308a\u89e3\u3044\u3066\u3044\u305f\u306e\u3067\u3057\u3070\u3089\u304f\u6c17\u304c\u4ed8\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\n\u3042\u308b\u3068\u304d\u30b3\u30f3\u30c6\u30b9\u30c8\u4e2d\u306b\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u843d\u3068\u305d\u3046\u3068\u3057\u305f\u3089\u52d5\u304b\u306a\u304f\u3066\u3001\n\u30b3\u30f3\u30c6\u30b9\u30c8\u4e2d\u306f\u3053\u3046\u3044\u3046\u306e\u306f\u7981\u6b62\u306a\u306e\u304b\u306a\uff1f\u3068\u601d\u3063\u3066\u3044\u305f\u3089\u3001\n\u3069\u3046\u3084\u3089\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u30c4\u30fc\u30eb\u304b\u3089AtCoder\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304a\u3051\u3070\n\u30b3\u30f3\u30c6\u30b9\u30c8\u4e2d\u3067\u3082\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u3089\u3057\u3044\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u3001\n\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u6a5f\u80fd\u3092\u3064\u3051\u307e\u3057\u305f\u3002\n\u3053\u306e\u90e8\u5206\u306f\u81ea\u529b\u3067\u4f5c\u308c\u306a\u304f\u3066\u3001\u4ed6\u6240\u306eAtCoder\u30c4\u30fc\u30eb\u3092\u5927\u3044\u306b\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002  \n\n## \u30bd\u30fc\u30b9\u63d0\u51fa\u6a5f\u80fd\n\u30ed\u30b0\u30a4\u30f3\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u3067\u304d\u308b\u3068\u3001\u305d\u308c\u3092\u5c11\u3057\u6539\u9020\u3059\u308b\u3060\u3051\u3067\u30bd\u30fc\u30b9\u306e\u63d0\u51fa\u3082\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u5b9f\u306f\u63d0\u51fa\u30d5\u30a9\u30fc\u30e0\u304b\u3089\u63d0\u51fa\u3057\u3066\u3082\u5927\u3057\u305f\u624b\u9593\u3058\u3083\u306a\u3044\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3001\n\u3042\u307e\u308a\u81ea\u52d5\u5316\u3059\u308b\u5fc5\u8981\u6027\u3092\u611f\u3058\u3066\u3044\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\n\u3067\u304d\u3066\u3057\u307e\u3046\u3068\u305d\u308c\u306a\u308a\u306b\u4fbf\u5229\u3067\u3059\u306d\u3002\n\u30bd\u30fc\u30b9\u306e\u62e1\u5f35\u5b50\u304b\u3089\u8a00\u8a9e\u3092\u81ea\u52d5\u5224\u5225\u3067\u304d\u308b\u306e\u3067\u3001\n\u8a00\u8a9e\u306e\u9078\u629e\u30df\u30b9\u3067\u4f59\u8a08\u306a\u30da\u30ca\u30eb\u30c6\u30a3\u3092\u304f\u3089\u3046\u3053\u3068\u304c\u306a\u304f\u306a\u308b\u306e\u3082\u3044\u3044\u3067\u3059\u3002\n\u30aa\u30ec\u30aa\u30ec\u30c4\u30fc\u30eb\u306a\u306e\u3067\u3001\u8a00\u8a9e\u306fRuby\u3068C++\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u3067\u3059\u3002\n\n## \u30bd\u30fc\u30b9\u751f\u6210\u6a5f\u80fd\n\u305f\u3076\u3093OnlineJudgeHelper\u304c\u8a71\u984c\u306b\u306a\u3063\u305f\u3068\u304d\u306b\u3001\u8ab0\u304b\u304c\n\u300c\u5165\u529b\u90e8\u5206\u306e\u30bd\u30fc\u30b9\u306e\u81ea\u52d5\u751f\u6210\u304f\u3089\u3044\u3067\u304d\u306a\u3044\u3068\u300d\n\u307f\u305f\u3044\u306a\u767a\u8a00\u3092\u3057\u3066\u3044\u305f\u3093\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u305d\u308c\u3092\u601d\u3044\u5207\u308a\u771f\u306b\u53d7\u3051\u3066\u3057\u307e\u3044\u3001\n\u554f\u984c\u30da\u30fc\u30b8\u306e\u5165\u529b\u30c7\u30fc\u30bf\u306e\u8aac\u660e\u304b\u3089\u5165\u529b\u90e8\u5206\u306e\u30bd\u30fc\u30b9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u306b\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u307e\u3057\u305f\u3002\nRuby\u3068C++\u306e\u4e21\u65b9\u3067\u30bd\u30fc\u30b9\u3092\u51fa\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u30c7\u30fc\u30bf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u30d1\u30fc\u30b9\u3057\u305f\u7d50\u679c\u3092\n\u4e00\u65e6\u5171\u901a\u306e\u5165\u529b\u30c7\u30fc\u30bf\u5b9a\u7fa9\u7684\u306a\u69cb\u9020\u4f53\u306b\u7a81\u3063\u8fbc\u3080\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```src_gen.rb\nInputDef = Struct.new(:type, :size, :fmt, :vars)\n\ndef parse_fmt(fmt)\n  inpdefs = []\n  fmt = fmt\n        .gsub(/-1/, '') # N-1 -> N\n        .gsub(/(-|\u3000)/, ' ') # a-b -> a b\n        .gsub(/[_,\\\\\\(\\)\\{\\}]/, '')\n        .split(\"\\n\")\n  fmt << ''\n  re = prev = nil\n  fmt.each do |f|\n    if re\n      if f =~ re\n        prev = f\n        next\n      end\n      inpdef = inpdefs.last\n      case inpdef.type\n      when :matrix\n        inpdef.size = prev[-2..-1].chars.to_a\n      when :varray\n        inpdef.size = prev =~ /(\\d+)$/ ? $1 : prev[-1]\n      end\n      re = prev = nil\n    end\n    case f\n    when /^([a-z]+).(\\s+\\1.)+\\s+[\\.|\u2026]+\\s+\\1.$/i, /^([a-z]+)[01](\\s+\\1.)+$/i\n      inpdefs << InputDef.new(:harray, f[-1], :number, $1)\n    when /^([a-z]+)..(\\s+\\1..)+\\s+[\\.|\u2026]+\\s+\\1..$/i\n      inpdefs << InputDef.new(:matrix, nil, :number, $1)\n      re = /(^#{$1}..(\\s+#{$1}..)+\\s+[\\.|\u2026]+\\s+#{$1}..|:|\uff1a|\\.+)$/\n      prev = f\n    when /^([a-z]+)..(\\1..)+\\s+[\\.|\u2026]+\\s+\\1..$/i\n      inpdefs << InputDef.new(:matrix, nil, :char, $1)\n      re = /(^#{$1}..(#{$1}..)+\\s+[\\.|\u2026]+\\s+#{$1}..|:|\uff1a|\\.+)$/\n      prev = f\n    when /^([a-z]+)[01][01](\\s+\\1..)+$/i\n      inpdefs << InputDef.new(:matrix, nil, :number, $1)\n      re = /(^#{$1}..(\\s+#{$1}..)+|:|\uff1a|\\.+)$/\n      prev = f\n    when /^[a-z]+(\\d)(\\s+[a-z]+\\1)*$/i\n      vars = f.split.map { |v| v[0..-2] }\n      inpdefs << InputDef.new(:varray, nil, :number, vars)\n      pat = vars.map { |v| v + '.+' }.join('\\s+')\n      re = Regexp.new(\"^(#{pat}|:|\uff1a|\\\\.+)$\")\n      prev = f\n    when /^[a-z]+(\\s+[a-z]+)*$/i\n      inpdefs << InputDef.new(:single, nil, :number, f.split)\n    end\n  end\n  inpdefs\nend\n```\n\n\u4e0a\u8a18\u306e\u51e6\u7406\u3067\n\n- \u5358\u72ec\u306e\u5909\u6570\n- \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u6a2a\u306b\u4e26\u3093\u3060\u5358\u72ec\u306e\u5909\u6570\n- \u6a2a\u65b9\u5411\u306e\u914d\u5217\n- \u7e26\u65b9\u5411\u306e\u914d\u5217\n- \u884c\u5217\n\n\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u30d1\u30fc\u30b9\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u307e\u3060\u6539\u826f\u4e2d\u3067\u3059\u3002\n\n\u30c7\u30fc\u30bf\u578b\u306f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u60c5\u5831\u3060\u3051\u3067\u306f\u5206\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u4e00\u65e6\u5168\u3066\u6574\u6570\u578b\u3068\u3057\u3066\u3001\n\u5f8c\u3067\u5165\u529b\u30c7\u30fc\u30bf\u4f8b\u3068\u7a81\u304d\u5408\u308f\u305b\u3066\u305d\u308c\u4ee5\u5916\u306e\u578b\u3092\u8a2d\u5b9a\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3068\u306f\u3044\u3063\u3066\u3082\u4eca\u306e\u3068\u3053\u308d\u3001\u6574\u6570\u3058\u3083\u306a\u3055\u305d\u3046\u306a\u3082\u306e\u306f\u5168\u3066\u6587\u5b57\u5217\u3068\u3044\u3046\u6271\u3044\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n## \u4f7f\u7528\u30a4\u30e1\u30fc\u30b8\n\u30b3\u30f3\u30c6\u30b9\u30c8\u540d\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u3063\u3066\u3001\u305d\u306e\u4e2d\u306b\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304d\u307e\u3059\u3002\n\n```helper.rb\nrequire '../../AtCoderFriends/helper.rb'\n\n# start\n\n# test_auto 'A.rb'\n# submit 'A.rb'\n\n# test_auto 'B.rb'\n# submit 'B.rb'\n\n# test_auto 'C.rb'\n# submit 'C.rb'\n\n# test_auto 'D.cxx'\n# submit 'D.cxx'\n```\n\nSublime Text\u306e\u5de6\u5074\u306b\u30bd\u30fc\u30b9\u3001\u53f3\u5074\u306bhelper.rb\u3092\u958b\u3044\u3066\u3001\n\u9069\u5b9chelper.rb\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u89e3\u9664\u3057\u3066\u52d5\u304b\u3059\u3068\u3044\u3046\u4f7f\u3044\u65b9\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\u30fb\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u751f\u6210\u2192\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u2192\u30b3\u30f3\u30d1\u30a4\u30eb\u2192\u30c6\u30b9\u30c8\u2192\u63d0\u51fa\n\n\u306e\u4f5c\u696d\u304c\u5168\u3066Sublime Text\u306e\u4e2d\u3067\u5b8c\u7d50\u3067\u304d\u308b\u306e\u3067\u3001\u81ea\u5206\u3068\u3057\u3066\u306f\u304b\u306a\u308a\u5feb\u9069\u3067\u3059\u3002\n\u30aa\u30ec\u30aa\u30ec\u30c4\u30fc\u30eb\u306a\u306e\u3067CLI\u3068\u304bGUI\u306e\u985e\u306f\u4e00\u5207\u3042\u308a\u307e\u305b\u3093\u3002\n\n## \u30bd\u30fc\u30b9\u4e00\u5f0f\u306f\u3053\u3061\u3089\nhttps://github.com/nejiko96/AtCoderFriends\n\n\n\n\n\n\n\n", "tags": ["AtCoder"]}