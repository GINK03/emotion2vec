{"context": "\n\nPython & Pandas\u306b\u30c8\u30e9\u30a4\u3057\u3066\u307f\u305f\n\u4eca\u5f8c\u3001Python\u3067\u30c7\u30fc\u30bf\u5206\u6790\u3059\u308b\u3068\u304d\u306b\u5fc5\u305a\u5b9f\u884c\u3059\u308b\u3068\u601d\u308f\u308c\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30e1\u30e2\u3002\nIBM \u306eData Science Experience \u74b0\u5883\u3067 Python2 with Spark 2.0\u3067\u5b9f\u884c\u3002\uff08\u4eca\u56de\u306fSpark\u3067\u3042\u308b\u5fc5\u8981\u306f\u5168\u304f\u306a\u3044w\uff09\n\u5b9f\u969b\u306e\u5206\u6790\u4f5c\u696d\u3067\u306f\u30d5\u30a3\u30fc\u30eb\u30c9\u6570\u304c\u304b\u306a\u308a\u591a\u3044\u306e\u3067\u3001\u52b9\u7387\u3088\u304f\u5206\u6790\u3067\u304d\u308b\u3088\u3046\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u4e2d\u3067\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\uff08\u5217\u540d\uff09\u3092\u3067\u304d\u308b\u3060\u3051\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u306a\u304f\u3066\u3044\u3044\u65b9\u6cd5\u3092\u8003\u3048\u306a\u304c\u3089\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u6a5f\u68b0\u5b66\u7fd2\u306e\u30c7\u30fc\u30bf\u6e96\u5099\u3067\u5fc5\u8981\u306b\u306a\u308bSPSS Modeler\u306e\u300c\u30d5\u30a3\u30fc\u30eb\u30c9\u518d\u7de8\u6210\u300d\u76f8\u5f53\u306e\u6a5f\u80fd\u3068\u306a\u308b\u30ab\u30c6\u30b4\u30ea\u30fc\u30c7\u30fc\u30bf\u306e\u5217\u5c55\u958b\uff06\u30d5\u30e9\u30b0\u5316\u306b\u3064\u3044\u3066\u3082\u30c8\u30e9\u30a4\uff01\n\u6b20\u640d\u5024\u95a2\u9023\u306f\u4eca\u56de\u306f\u8a66\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u306e\u3067\u3001\u6b21\u306e\u6a5f\u4f1a\u306b\u3002\n\uff08\u672c\u8a18\u4e8b\u3067\u4f7f\u7528\u3057\u3066\u3044\u308bdf_wiskey\u306b\u306f\u3001\u4e88\u3081\u30c7\u30fc\u30bf\u3092\u5165\u529b\u6e08\u307f\uff09\n# \u307e\u305a\u306fDataFrame\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\ndf_wiskey.head(10)\n\n\n# \u7d9a\u3044\u3066\u5217\uff08\u30d5\u30a3\u30fc\u30eb\u30c9\uff09\u306e\u5c5e\u6027\u3092\u78ba\u8a8d\u3000\uff08\u4eca\u56de\u306f\u304b\u306a\u308a\u9069\u5f53\u306a\u307e\u307e\u9032\u3081\u308bw)\ndf_wiskey.dtypes\n\n\n#\u3000\u6570\u5024\u30c7\u30fc\u30bf\u306e\u57fa\u790e\u7d71\u8a08\ndf_wiskey.describe()\n\n\n# \u6570\u5024\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u5206\u5e03\u3092\u30b0\u30e9\u30d5\u5316\n\n# matplot\u3092 inline\u30e2\u30fc\u30c9\u306b\u3059\u308b\n%matplotlib inline\n\nimport matplotlib\nimport matplotlib.pyplot as plt\n\nfor x in df_wiskey.columns[df_wiskey.dtypes == 'float64']:\n    xdesc = df_wiskey[x].describe()\n    plt.hist(df_wiskey[x] , range=(xdesc['min'], xdesc['max']) )\n    plt.title( x )\n    plt.show()\n\n\n\n\n#\u6570\u5024\u30c7\u30fc\u30bf,\uff12\u5909\u6570\u9593\u306e\u76f8\u95a2\u95a2\u4fc2\ndf_wiskey.corr()\n\n\n#\u6570\u5024\u30c7\u30fc\u30bf\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\ndf_wiskey[df_wiskey.columns[df_wiskey.dtypes == 'object']].head(5) \n\n\n# \u6570\u5024\u30c7\u30fc\u30bf\u4ee5\u5916\uff08\u30ab\u30c6\u30b4\u30ea\u30fc\u5024\u3068\u4eee\u5b9a\uff09\u306b\u3064\u3044\u3066\u30c7\u30fc\u30bf\u51fa\u73fe\u983b\u5ea6\u3092\u96c6\u8a08\nfor x in df_wiskey.columns[df_wiskey.dtypes == 'object']:\n    valcal = df_wiskey[x].value_counts();\n    print '-- '+x+' -----------------------------------'\n    print valcal.head(10)\n    print '--------------------------------------------'\n\n\n\n\n# \u30ab\u30c6\u30b4\u30ea\u30fc\u30c7\u30fc\u30bf\u9593\u306e\u30af\u30ed\u30b9\u96c6\u8a08 -- \u30b7\u30f3\u30d7\u30eb\u3060\u3051\u3069\u8868\u793a\u306f\u9055\u548c\u611f\u3042\u308a\ncrosstab( df_wiskey.Country , df_wiskey.Category)\n\n\n# Country vs Category\u3067\u306e\u30d2\u30fc\u30c8\u30de\u30c3\u30d7  ( Bourbon\u306fUSA\u306b\u96c6\u4e2d\u3001SingleMalt\u306f\u307b\u3068\u3093\u3069\u306e\u56fd\u3092\u7db2\u7f85)\ndf_wiskey_pd = pivot_table( data=df_wiskey , columns='Country' , index='Category' , values='Name' , aggfunc='count')\nplt.imshow(df_wiskey_pd , aspect= 'auto' ,interpolation='nearest')\nplt.colorbar()\nplt.xticks(range(df_wiskey_pd.shape[1]), df_wiskey_pd.columns , rotation='vertical')\nplt.yticks(range(df_wiskey_pd.shape[0]), df_wiskey_pd.index)\nplt.show()\n\n\n# \u30e2\u30c7\u30ea\u30f3\u30b0\u624b\u6cd5\u306b\u5165\u529b\u3059\u308b\u305f\u3081\u306b\u3001Country\u5217\u306e\u30c7\u30fc\u30bf\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u5316\u3057\u3066\u3001T/F\u3092\u8a2d\u5b9a\u3059\u308b\u3000\n# ( \u5217\u540d\u306fCountry_XXXXXXXX \u3068\u3059\u308b) \nfor x in df_wiskey.groupby('Country').count().index : \n    x1 = 'Country_' + x  \n    df_wiskey[x1]  = 'F'\n    # Country\u5217\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u56fd\u304cxxxxx\u3060\u3063\u305f\u3089\u3001 Country_XXXXXXXXX\u306bT\u306b\u5909\u66f4 \n    df_wiskey.loc[df_wiskey[x1][df_wiskey.Country == x].index , x1] = 'T'\n\n#\u5148\u982d\uff13\u884c\u3060\u3051\u8868\u793a\ndf_wiskey.head(3)\n\n\n\n\u8ffd\u8a18\nData Scientist Experience\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306f\u306a\u304b\u306a\u304b\u4f7f\u3044\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u306a\u3044\n\u3000\u3000<\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8>\n\n###  Python & Pandas\u306b\u30c8\u30e9\u30a4\u3057\u3066\u307f\u305f\n\u4eca\u5f8c\u3001Python\u3067\u30c7\u30fc\u30bf\u5206\u6790\u3059\u308b\u3068\u304d\u306b\u5fc5\u305a\u5b9f\u884c\u3059\u308b\u3068\u601d\u308f\u308c\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30e1\u30e2\u3002\nIBM \u306eData Science Experience \u74b0\u5883\u3067 Python2 with Spark 2.0\u3067\u5b9f\u884c\u3002\uff08\u4eca\u56de\u306fSpark\u3067\u3042\u308b\u5fc5\u8981\u306f\u5168\u304f\u306a\u3044w\uff09\n\u5b9f\u969b\u306e\u5206\u6790\u4f5c\u696d\u3067\u306f\u30d5\u30a3\u30fc\u30eb\u30c9\u6570\u304c\u304b\u306a\u308a\u591a\u3044\u306e\u3067\u3001\u52b9\u7387\u3088\u304f\u5206\u6790\u3067\u304d\u308b\u3088\u3046\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u4e2d\u3067\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\uff08\u5217\u540d\uff09\u3092\u3067\u304d\u308b\u3060\u3051\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u306a\u304f\u3066\u3044\u3044\u65b9\u6cd5\u3092\u8003\u3048\u306a\u304c\u3089\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u6a5f\u68b0\u5b66\u7fd2\u306e\u30c7\u30fc\u30bf\u6e96\u5099\u3067\u5fc5\u8981\u306b\u306a\u308bSPSS Modeler\u306e\u300c\u30d5\u30a3\u30fc\u30eb\u30c9\u518d\u7de8\u6210\u300d\u76f8\u5f53\u306e\u6a5f\u80fd\u3068\u306a\u308b\u30ab\u30c6\u30b4\u30ea\u30fc\u30c7\u30fc\u30bf\u306e\u5217\u5c55\u958b\uff06\u30d5\u30e9\u30b0\u5316\u306b\u3064\u3044\u3066\u3082\u30c8\u30e9\u30a4\uff01\n\u6b20\u640d\u5024\u95a2\u9023\u306f\u4eca\u56de\u306f\u8a66\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u306e\u3067\u3001\u6b21\u306e\u6a5f\u4f1a\u306b\u3002\n\uff08\u672c\u8a18\u4e8b\u3067\u4f7f\u7528\u3057\u3066\u3044\u308bdf_wiskey\u306b\u306f\u3001\u4e88\u3081\u30c7\u30fc\u30bf\u3092\u5165\u529b\u6e08\u307f\uff09\n\n```\n# \u307e\u305a\u306fDataFrame\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\ndf_wiskey.head(10)\n```\n<img width=\"733\" alt=\"Screen Shot 2016-11-15 at 18.17.19.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/149522/452f6602-5578-ccf9-6e83-aa6cf3f401b9.png\">\n\n```\n# \u7d9a\u3044\u3066\u5217\uff08\u30d5\u30a3\u30fc\u30eb\u30c9\uff09\u306e\u5c5e\u6027\u3092\u78ba\u8a8d\u3000\uff08\u4eca\u56de\u306f\u304b\u306a\u308a\u9069\u5f53\u306a\u307e\u307e\u9032\u3081\u308bw)\ndf_wiskey.dtypes\n```\n<img width=\"231\" alt=\"Screen Shot 2016-11-15 at 18.17.37.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/149522/1e8bff22-c86b-79ee-8d15-1fa4a9ce764a.png\">\n\n```\n#\u3000\u6570\u5024\u30c7\u30fc\u30bf\u306e\u57fa\u790e\u7d71\u8a08\ndf_wiskey.describe()\n```\n<img width=\"403\" alt=\"Screen Shot 2016-11-15 at 18.17.48.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/149522/297e82e0-6865-759c-66af-a988c3de62e4.png\">\n\n```\n# \u6570\u5024\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u5206\u5e03\u3092\u30b0\u30e9\u30d5\u5316\n\n# matplot\u3092 inline\u30e2\u30fc\u30c9\u306b\u3059\u308b\n%matplotlib inline\n\nimport matplotlib\nimport matplotlib.pyplot as plt\n\nfor x in df_wiskey.columns[df_wiskey.dtypes == 'float64']:\n    xdesc = df_wiskey[x].describe()\n    plt.hist(df_wiskey[x] , range=(xdesc['min'], xdesc['max']) )\n    plt.title( x )\n    plt.show()\n```\n<img width=\"406\" alt=\"Screen Shot 2016-11-15 at 18.18.03.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/149522/88e40f36-645f-8d40-6e1f-7831f8d43df2.png\">\n<img width=\"393\" alt=\"Screen Shot 2016-11-15 at 18.18.11.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/149522/cb4141fe-9fc6-1761-9523-10c4001a381d.png\">\n<img width=\"393\" alt=\"Screen Shot 2016-11-15 at 18.18.20.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/149522/47813b0f-1693-3a53-395f-c4df4ac83f9d.png\">\n\n```\n#\u6570\u5024\u30c7\u30fc\u30bf,\uff12\u5909\u6570\u9593\u306e\u76f8\u95a2\u95a2\u4fc2\ndf_wiskey.corr()\n```\n<img width=\"355\" alt=\"Screen Shot 2016-11-15 at 18.18.29.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/149522/ab26a2cb-ff97-10ec-f164-b87e98146d20.png\">\n\n```\n#\u6570\u5024\u30c7\u30fc\u30bf\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\ndf_wiskey[df_wiskey.columns[df_wiskey.dtypes == 'object']].head(5) \n```\n<img width=\"554\" alt=\"Screen Shot 2016-11-15 at 18.18.35.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/149522/71374f96-6e95-00e2-2d12-5a00f6f6b335.png\">\n\n```\n# \u6570\u5024\u30c7\u30fc\u30bf\u4ee5\u5916\uff08\u30ab\u30c6\u30b4\u30ea\u30fc\u5024\u3068\u4eee\u5b9a\uff09\u306b\u3064\u3044\u3066\u30c7\u30fc\u30bf\u51fa\u73fe\u983b\u5ea6\u3092\u96c6\u8a08\nfor x in df_wiskey.columns[df_wiskey.dtypes == 'object']:\n    valcal = df_wiskey[x].value_counts();\n    print '-- '+x+' -----------------------------------'\n    print valcal.head(10)\n    print '--------------------------------------------'\n```\n<img width=\"649\" alt=\"Screen Shot 2016-11-15 at 18.18.43.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/149522/524ce5e3-d53f-5482-3b3f-d47d44b1b357.png\">\n<img width=\"570\" alt=\"Screen Shot 2016-11-15 at 18.18.54.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/149522/0f5f8902-de3d-a723-8af1-79b52f58c554.png\">\n<img width=\"501\" alt=\"Screen Shot 2016-11-15 at 18.19.01.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/149522/8967cfce-6485-24c0-6335-53e94b7ea423.png\">\n\n```\n# \u30ab\u30c6\u30b4\u30ea\u30fc\u30c7\u30fc\u30bf\u9593\u306e\u30af\u30ed\u30b9\u96c6\u8a08 -- \u30b7\u30f3\u30d7\u30eb\u3060\u3051\u3069\u8868\u793a\u306f\u9055\u548c\u611f\u3042\u308a\ncrosstab( df_wiskey.Country , df_wiskey.Category)\n```\n<img width=\"1066\" alt=\"Screen Shot 2016-11-15 at 18.19.11.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/149522/1a822195-6bfa-fb59-0459-94ca47c6b0d4.png\">\n\n```\n# Country vs Category\u3067\u306e\u30d2\u30fc\u30c8\u30de\u30c3\u30d7  ( Bourbon\u306fUSA\u306b\u96c6\u4e2d\u3001SingleMalt\u306f\u307b\u3068\u3093\u3069\u306e\u56fd\u3092\u7db2\u7f85)\ndf_wiskey_pd = pivot_table( data=df_wiskey , columns='Country' , index='Category' , values='Name' , aggfunc='count')\nplt.imshow(df_wiskey_pd , aspect= 'auto' ,interpolation='nearest')\nplt.colorbar()\nplt.xticks(range(df_wiskey_pd.shape[1]), df_wiskey_pd.columns , rotation='vertical')\nplt.yticks(range(df_wiskey_pd.shape[0]), df_wiskey_pd.index)\nplt.show()\n```\n<img width=\"462\" alt=\"Screen Shot 2016-11-15 at 18.19.19.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/149522/a4f5213a-9ab0-d68d-7d61-1a6733ebe6a8.png\">\n\n```\n# \u30e2\u30c7\u30ea\u30f3\u30b0\u624b\u6cd5\u306b\u5165\u529b\u3059\u308b\u305f\u3081\u306b\u3001Country\u5217\u306e\u30c7\u30fc\u30bf\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u5316\u3057\u3066\u3001T/F\u3092\u8a2d\u5b9a\u3059\u308b\u3000\n# ( \u5217\u540d\u306fCountry_XXXXXXXX \u3068\u3059\u308b) \nfor x in df_wiskey.groupby('Country').count().index : \n    x1 = 'Country_' + x  \n    df_wiskey[x1]  = 'F'\n    # Country\u5217\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u56fd\u304cxxxxx\u3060\u3063\u305f\u3089\u3001 Country_XXXXXXXXX\u306bT\u306b\u5909\u66f4 \n    df_wiskey.loc[df_wiskey[x1][df_wiskey.Country == x].index , x1] = 'T'\n```\n```\n#\u5148\u982d\uff13\u884c\u3060\u3051\u8868\u793a\ndf_wiskey.head(3)\n```\n<img width=\"1597\" alt=\"Screen Shot 2016-11-15 at 18.20.42.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/149522/104b7c32-df7a-e6ea-47b4-a5025a84d56e.png\">\n\n#### \u8ffd\u8a18\nData Scientist Experience\u306e\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u306f\u306a\u304b\u306a\u304b\u4f7f\u3044\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u306a\u3044:grinning:\n\u3000\u3000<\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8>\n\n![Notebook_Python2 copy.png](https://qiita-image-store.s3.amazonaws.com/0/149522/35d81719-dafb-c2d2-6fd1-335a77286eee.png)\n\n\n\n\n\n", "tags": ["Python", "pandas", "SPSS"]}