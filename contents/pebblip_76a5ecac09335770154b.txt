{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u696d\u52d9\u3067\u3082\u3088\u3046\u3084\u304fJava8\u306b\u79fb\u884c\u3059\u308b\u3088\u3046\u306a\u8a71\u304c\u51fa\u3066\u304d\u3066\u3044\u308b\u306e\u3067\u3001\u5fa9\u7fd2\u3092\u517c\u306d\u3066Java8\u306eStream API\u306e\u4f7f\u3044\u65b9\u3092\u5e7e\u3064\u304b\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3054\u3068\u306b\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\u305d\u308c\u305e\u308c\u3001Java7\u3067\u306e\u30b3\u30fc\u30c9\u30b9\u30b9\u30bf\u30a4\u30eb\u3068Java8\u306eStream\u3092\u7528\u3044\u305f\u30b3\u30fc\u30c9\u30b9\u30bf\u30a4\u30eb\u3067\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u8a18\u8f09\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30ea\u30b9\u30c8\u306e\u64cd\u4f5c\n\u30ea\u30b9\u30c8\uff08java.util.List\uff09\u306e\u64cd\u4f5c\u306fStream API\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3088\u308a\u7c21\u6f54\u306b\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u4ee5\u964d\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001\u6b21\u306e\u60d1\u661f\u30af\u30e9\u30b9\u3068\u3001\n\n    //\u60d1\u661f\n    public static class Planet {\n        private final String name;\n        private final int diameter;\n        private final String[] satellites;\n\n        public Planet(String name, int diameter, String... satelites) {\n            this.name = name;\n            this.diameter = diameter;\n            this.satellites = satelites;\n        }\n\n        //\u540d\u524d\n        public String getName() {\n            return name;\n        }\n\n        //\u76f4\u5f84\uff08km\uff09\n        public int getDiameter() {\n            return diameter;\n        }\n\n        //\u885b\u661f\u306e\u30ea\u30b9\u30c8\n        public List<String> getSatellites() {\n            return Arrays.asList(satellites);\n        }\n    }\n\n\u3053\u306e\u60d1\u661f\u30af\u30e9\u30b9\u3092\u8981\u7d20\u3068\u3059\u308b\u3001\u4e0b\u306e\u30ea\u30b9\u30c8\uff08planets\uff09\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n    //\u885b\u661f\u306f\u6700\u5927\uff12\u3064\u307e\u3067\u3068\u3057\u307e\u3059\u3002\n    //\u6614\u306f\u51a5\u738b\u661f\u3082\u60d1\u661f\u3067\u3057\u305f\u3002\u3002\u3002\n    List<Planet> planets = Arrays.asList(\n            new Planet(\"\u6c34\u661f\", 4879), \n            new Planet(\"\u91d1\u661f\", 12103),\n            new Planet(\"\u5730\u7403\", 12756, \"\u6708\"),\n            new Planet(\"\u706b\u661f\", 6794, \"\u30d5\u30a9\u30dc\u30b9\", \"\u30c0\u30a4\u30e2\u30b9\"), \n            new Planet(\"\u6728\u661f\", 142984, \"\u30a4\u30aa\", \"\u30a8\u30a6\u30ed\u30d1\"),\n            new Planet(\"\u571f\u661f\", 120536, \"\u30bf\u30a4\u30bf\u30f3\", \"\u30ec\u30a2\"), \n            new Planet(\"\u5929\u738b\u661f\", 51118, \"\u30c1\u30bf\u30cb\u30a2\", \"\u30aa\u30d9\u30ed\u30f3\"), \n            new Planet(\"\u6d77\u738b\u661f\", 49572, \"\u30c8\u30ea\u30c8\u30f3\", \"\u30d7\u30ed\u30c6\u30a6\u30b9\")\n    );\n\n\n\u3059\u3079\u3066\u306e\u8981\u7d20\u306b\u4f55\u304b\u306e\u51e6\u7406\u3092\u884c\u3046\n\u4f8b\u3048\u3070\u3001\u3059\u3079\u3066\u306e\u60d1\u661f\u306e\u540d\u524d\u3092\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nJava7:\n            for (Planet p : planets) {\n                System.out.println(p.getName());\n            }\n\n\nJava8:\n            planets.stream().forEach(p -> System.out.println(p.getName()));\n\nStream\u306eforEach\u30e1\u30bd\u30c3\u30c9\u306f\u3059\u3079\u3066\u8981\u7d20\u306b\u6307\u5b9a\u306e\u51e6\u7406\u3092\u9069\u7528\u3057\u307e\u3059\u3002\u3082\u3057\u304f\u306f\u3001Stream\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u307e\u3059\u3002\n            planets.forEach(p -> System.out.println(p.getName()));\n\n\n\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u306e\u307f\u3092\u62bd\u51fa\u3059\u308b\n\u4f8b\u3048\u3070\u3001\u76f4\u5f8410,000km\u4ee5\u4e0a\u306e\u60d1\u661f\u306e\u307f\u306e\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nJava7:\n            List<Planet> filtered = new ArrayList<>();\n            for (Planet p : planets) {\n                if (p.getDiameter() > 10000) {\n                    filtered.add(p);\n                }\n            }\n\n\nJava8:\n            List<Planet> filtered = planets.stream()\n                    .filter(p -> p.getDiameter() > 10000)\n                    .collect(Collectors.toList());\n\n\u62bd\u51fa\u3057\u3066\u5f97\u3089\u308c\u308b\u30ea\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n        [\u91d1\u661f,\u5730\u7403,\u6728\u661f,\u571f\u661f,\u5929\u738b\u661f,\u6d77\u738b\u661f]\n\n\n\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u306e\u6570\u3092\u6570\u3048\u308b\n\u4f8b\u3048\u3070\u3001\u76f4\u5f8410,000km\u4ee5\u4e0a\u306e\u60d1\u661f\u306e\u6570\u3092\u6570\u3048\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nJava7:\n            long count = 0;\n            for (Planet p : planets) {\n                if (p.getDiameter() > 10000) {\n                    count++;\n                }\n            }\n\n\nJava8:\n            long count = planets.stream()\n                    .filter(p -> p.getDiameter() > 10000)\n                    .count();\n\nStream\u306efilter\u30e1\u30bd\u30c3\u30c9\u306f\u6307\u5b9a\u3055\u308c\u305f\u6761\u4ef6\uff08\u8ff0\u8a9e\uff09\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u306e\u307f\u3092\u62bd\u51fa\u3057\u305fStream\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u304c\u4e00\u3064\u4ee5\u4e0a\u3042\u308b\u304b\u8abf\u3079\u308b\n\u4f8b\u3048\u3070\u3001\u76f4\u5f8410,000km\u4ee5\u4e0a\u306e\u60d1\u661f\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nJava7:\n            boolean found = false;\n            for (Planet p : planets) {\n                if (p.getDiameter() > 10000) {\n                    found = true;\n                    break;\n                }\n            }\n\n\nJava8:\n            boolean found = planets.stream()\n                    .anyMatch(p -> p.getDiameter() > 10000);\n\nStream\u306eanyMatch\u30e1\u30bd\u30c3\u30c9\u306f\u6307\u5b9a\u3055\u308c\u305f\u8ff0\u8a9e\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u304c\uff11\u3064\u3067\u3082\u3042\u308c\u3070 true \u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u304b\u8abf\u3079\u308b\n\u4f8b\u3048\u3070\u3001\u3059\u3079\u3066\u306e\u60d1\u661f\u304c\u76f4\u5f8410,000km\u4ee5\u4e0a\u304b\u3092\u8abf\u3079\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nJava7:\n            boolean matchedAll = true;\n            for (Planet p : planets) {\n                if (!(p.getDiameter() > 10000)) {\n                    matchedAll = false;\n                    break;\n                }\n            }\n\n\nJava8:\n            boolean matchedAll = planets.stream()\n                    .allMatch(p -> p.getDiameter() > 10000);        \n\nStream\u306eallMatch\u306f\u6307\u5b9a\u3055\u308c\u305f\u8ff0\u8a9e\u306b\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u4e00\u81f4\u3059\u308b\u5834\u5408\u306e\u307f true \u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u3092\u7570\u306a\u308b\u8981\u7d20\u306b\u5909\u63db\uff08\u5199\u50cf\uff09\u3057\u305f\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3059\u308b\n\u4f8b\u3048\u3070\u3001\u30ea\u30b9\u30c8\u306e\u5404\u60d1\u661f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u60d1\u661f\u540d\uff08String\uff09\u306e\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nJava7:\n            List<String> mappedList = new ArrayList<>();\n            for (Planet p : planets) {\n                mappedList.add(p.getName());\n            }\n\n\nJava8:\n            List<String> mappedList = planets.stream()\n                    .map(p -> p.getName())\n                    .collect(Collectors.toList());\n\nStream\u306emap\u30e1\u30bd\u30c3\u30c9\u306f\u3001Stream\u306e\u5404\u8981\u7d20\u3092\u5225\u306e\u578b\u306e\u8981\u7d20\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u305fStream\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u4e0a\u306e\u4f8b\u3067\u306f\u3001\u60d1\u661f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\uff08Planet\u578b\uff09\u3092\u60d1\u661f\u540d\uff08String\u578b\uff09\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u30e1\u30bd\u30c3\u30c9\u53c2\u7167\u3092\u5229\u7528\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3088\u308a\u7c21\u6f54\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n            List<String> mappedList = planets.stream()\n                    .map(Planet::getName)\n                    .collect(Collectors.toList());\n\n\n\u5404\u8981\u7d20\u3092\u7570\u306a\u308b\u8907\u6570\u8981\u7d20\u306b\u5909\u63db\u3057\u305f\u7d50\u679c\u3092\u30de\u30fc\u30b8\u3057\u305f\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3059\u308b\n\u5c11\u3057\u308f\u304b\u308a\u306b\u304f\u3044\u3067\u3059\u304c\u3001\u4e0a\u306e\u4f8b\u306f\u30ea\u30b9\u30c8\u306e\u5404\u8981\u7d20\u306e1:1\u3067\u306e\u5909\u63db\u3067\u3042\u308b\u306e\u306b\u5bfe\u3057\u30011:N\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u5404\u60d1\u661f\u306b\u5bfe\u5fdc\u3059\u308b\u885b\u661f\uff08\u8907\u6570\uff09\u3092\u30de\u30fc\u30b8\u3057\u3066\uff11\u3064\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nJava7:\n            List<String> sattelites = new ArrayList<>();\n            for (Planet p : planets) {\n                sattelites.addAll(p.getSatellites());\n            }\n\n\nJava8:\n            List<String> sattelites = planets.stream()\n                    .flatMap(p -> p.getSatellites().stream())\n                    .collect(Collectors.toList());  \n\nStream\u306eflatMap\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u5404\u8981\u7d20\u304b\u3089\u751f\u6210\u3055\u308c\u308bStream\u3092\uff11\u3064\u306b\u7d71\u5408\u3057\u305fStream\u3092\u751f\u6210\u3057\u307e\u3059\u3002\nJava7,8\u3044\u305a\u308c\u306e\u7d50\u679c\u3067\u3082\u3001\u4ee5\u4e0b\u306e\u885b\u661f\u304b\u3089\u306a\u308b\uff08\u30d5\u30e9\u30c3\u30c8\u306a\uff09\u30ea\u30b9\u30c8\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n        [\u6708,\u30d5\u30a9\u30dc\u30b9,\u30c0\u30a4\u30e2\u30b9,\u30a4\u30aa,\u30a8\u30a6\u30ed\u30d1,\u30bf\u30a4\u30bf\u30f3,\u30ec\u30a2,\u30c1\u30bf\u30cb\u30a2,\u30aa\u30d9\u30ed\u30f3,\u30c8\u30ea\u30c8\u30f3,\u30d7\u30ed\u30c6\u30a6\u30b9]\n\n\n\u5404\u8981\u7d20\u3092\u5408\u6210\u3057\u3066\uff11\u3064\u306e\u5024\u306b\u96c6\u7d04\u3059\u308b\n\u3053\u308c\u3082\u5c11\u3057\u308f\u304b\u308a\u306b\u304f\u3044\u3067\u3059\u304c\u3001\u95a2\u6570\u578b\u8a00\u8a9e\u3067\u306e\u7573\u307f\u8fbc\u307f\u95a2\u6570\u306e\u3053\u3068\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u5404\u60d1\u661f\u306e\u76f4\u5f84\u306e\u5408\u8a08\u3092\u6c42\u3081\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nJava7:\n            int totalDiameter = 0;\n            for (Planet p : planets) {\n                totalDiameter += p.getDiameter();\n            }\n\n\nJava8:\n             int totalDiameter = planets.stream()\n                     .map(p -> p.getDiameter())\n                     .reduce((accum, p) -> accum + p)\n                     .get();\n\nStream\u306ereduce\u30e1\u30bd\u30c3\u30c9\u304c\u95a2\u6570\u578b\u8a00\u8a9e\u3067\u306e\u7573\u307f\u8fbc\u307f\u95a2\u6570\uff08fold\u95a2\u6570\uff09\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002Stream\u3067\u306f\u5de6\u304b\u3089\u306e\u7573\u307f\u8fbc\u307f\u95a2\u6570\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002reduce\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u7d50\u679c\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u305f\u3081\uff08\u305f\u3068\u3048\u3070\u7a7a\u306eStream\u306e\u5834\u5408\u306a\u3069\uff09\u3001Optional\u578b\u3092\u8fd4\u3059\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u6700\u5f8c\u306eget\u30e1\u30bd\u30c3\u30c9\u3067\u5024\u3092\u53d6\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30ea\u30b9\u30c8\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u7c21\u7d04\u3059\u308b\n\u3044\u308f\u3086\u308b\u3001map-reduce\u30d1\u30bf\u30fc\u30f3\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u885b\u661f\u3092\u6301\u3064\u60d1\u661f\u3092\u62bd\u51fa\uff08filter\uff09\u3057\u3001\u305d\u306e\u60d1\u661f\u3092\u60d1\u661f\u540d\u306b\u5909\u63db\uff08map\uff09\u3057\u3001\u60d1\u661f\u540d\u306e\u30ea\u30b9\u30c8\u3092\u751f\u6210\uff08reduce\uff09\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nJava7:\n            List<String> planetWithSattelites = new ArrayList<>();\n            for (Planet p : planets) {\n                if (p.getSatellites().size() > 0) {\n                    planetWithSattelites.add(p.getName());\n                }\n            }\n\n\nJava8:\n            List<String> planetWithSattelites = planets.stream()\n                    .filter(p -> p.getSatellites().size() > 0)\n                    .map(Planet::getName)\n                    .collect(Collectors.toList());  \n\n\n\u30de\u30c3\u30d7\u306e\u64cd\u4f5c\nStream\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3001Java8\u3067\u306fMap\u306e\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3082\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\u3002\n\n\u3059\u3079\u3066\u306e\u30ad\u30fc\u3068\u5024\u306e\u30da\u30a2\u306b\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u884c\u3046\n\u4f8b\u3048\u3070\u3001\u6b21\u306eMap\u306e\u3059\u3079\u3066\u306e\u30ad\u30fc\u3068\u5024\u3092\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n        Map<String, String> map = new HashMap<>();\n        map.put(\"1\", \"one\");\n        map.put(\"2\", \"two\");\n        map.put(\"3\", \"three\");      \n\n\nJava7:\n            for (Map.Entry<String, String> entry : map.entrySet()) {\n                String key = entry.getKey();\n                String value = entry.getValue();\n                System.out.println(String.format(\"key=%s, value=%s\" ,key, value));\n            }\n\n\nJava8:\n            map.forEach((key, value) -> {\n                System.out.println(String.format(\"key=%s, value=%s\" ,key, value));\n            });     \n\n\n\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u64cd\u4f5c\n\u6b21\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u984c\u6750\u3068\u3057\u307e\u3059\u3002\n\n/tmp/sample.txt\nJava\nScala\nC\nC#\nJavaScript\nGroovy\n\n\n\n\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5168\u3066\u306e\u884c\u306b\u4f55\u304b\u306e\u51e6\u7406\u3092\u884c\u3046\n\u305f\u3068\u3048\u3070\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5168\u884c\u3092\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nJava7:\n            try (BufferedReader br = Files.newBufferedReader(Paths.get(\"/tmp/sample.txt\"), Charset.forName(\"utf-8\"))) {\n                String line;\n                while ((line = br.readLine()) != null) {\n                    System.out.println(line);\n                }\n            }\n\n\nJava8:\n            try (Stream<String> stream = Files.lines(Paths.get(\"/tmp/sample.txt\"), Charset.forName(\"utf-8\"))) {\n                stream.forEach(line -> System.out.println(line));\n            }\n\nFile\u304b\u3089\u751f\u6210\u3057\u305fStream\u306e\u5834\u5408\u306f\u3001\u660e\u793a\u7684\u306bStream\u3092\u30af\u30ed\u30fc\u30ba\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3088\u3063\u3066\u3001\u4e0a\u306e\u3088\u3046\u306btry-with-resources\u6587\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u3053\u306e\u5834\u5408\u306f\u5168\u884c\u3092\u30e1\u30e2\u30ea\u306b\u5c55\u958b\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n            for (String line : Files.readAllLines(Paths.get(\"/tmp/sample.txt\"), Charset.forName(\"utf-8\"))) {\n                System.out.println(line);\n            }\n\n\n\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u884c\u3092\u62bd\u51fa\u3059\u308b\n\u305f\u3068\u3048\u3070\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\"Java\"\u3068\u3044\u3046\u5358\u8a9e\u3092\u542b\u3080\u884c\u306e\u307f\u3092\u62bd\u51fa\u3057\u3066\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nJava7:\n            try (BufferedReader br = Files.newBufferedReader(Paths.get(\"/tmp/sample.txt\"), Charset.forName(\"utf-8\"))) {\n                String line;\n                while ((line = br.readLine()) != null) {\n                    if (line.contains(\"Java\")) {\n                        System.out.println(line);\n                    }\n                }\n            }\n\n\nJava8:\n            try (Stream<String> stream = Files.lines(Paths.get(\"/tmp/sample.txt\"))) {\n                stream.filter(line -> line.contains(\"Java\")).forEach(System.out::println);\n            }\n\n\u51fa\u529b\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nJava\nJavaScript\n\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u64cd\u4f5c\n/tmp/test \u306b\u4ee5\u4e0b\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n$ ls -a /tmp/test\n.   ..  .dir2   .file2  .file3  dir1    file1\n\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u5168\u3066\u306e\u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u30d5\u30a1\u30a4\u30eb\u3092\u62bd\u51fa\u3059\u308b\n\u305f\u3068\u3048\u3070\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea /tmp/test \u914d\u4e0b\u306e\u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u3092\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nJava7:\n            File dir = Paths.get(\"/tmp/test\").toFile();\n            for (File file : dir.listFiles()) {\n                System.out.println(file);\n            }\n\n\nJava8:\n            try (Stream<Path> stream = Files.list(Paths.get(\"/tmp/test\"))) {\n                stream.forEach(System.out::println);\n            }\n\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u3092\u62bd\u51fa\u3059\u308b\n\u305f\u3068\u3048\u3070\u3001/tmp/test \u304b\u3089\".\"\u304b\u3089\u59cb\u307e\u308b\u96a0\u3057\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u3092\u62bd\u51fa\u3057\u3066\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nJava7:\n            File dir = Paths.get(\"/tmp/test\").toFile();\n            for (File file : dir.listFiles()) {\n                if (!file.isFile()) {\n                    continue;\n                }\n                if (file.getName().startsWith(\".\")) {\n                    System.out.println(file.getName());\n                }\n            }\n\n\nJava8:\n            try (Stream<Path> stream = Files.list(Paths.get(\"/tmp/test\"))) {\n                stream\n                .filter(path -> path.toFile().isFile())\n                .map(path -> path.getFileName().toString())\n                .filter(name -> name.startsWith(\".\"))\n                .forEach(System.out::println);\n            }\n\n\u51fa\u529b\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n.file2\n.file3\n\n# \u306f\u3058\u3081\u306b\n\u696d\u52d9\u3067\u3082\u3088\u3046\u3084\u304fJava8\u306b\u79fb\u884c\u3059\u308b\u3088\u3046\u306a\u8a71\u304c\u51fa\u3066\u304d\u3066\u3044\u308b\u306e\u3067\u3001\u5fa9\u7fd2\u3092\u517c\u306d\u3066Java8\u306eStream API\u306e\u4f7f\u3044\u65b9\u3092\u5e7e\u3064\u304b\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3054\u3068\u306b\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\u305d\u308c\u305e\u308c\u3001Java7\u3067\u306e\u30b3\u30fc\u30c9\u30b9\u30b9\u30bf\u30a4\u30eb\u3068Java8\u306eStream\u3092\u7528\u3044\u305f\u30b3\u30fc\u30c9\u30b9\u30bf\u30a4\u30eb\u3067\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u8a18\u8f09\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u30ea\u30b9\u30c8\u306e\u64cd\u4f5c\n\u30ea\u30b9\u30c8\uff08java.util.List\uff09\u306e\u64cd\u4f5c\u306fStream API\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3088\u308a\u7c21\u6f54\u306b\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u4ee5\u964d\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001\u6b21\u306e\u60d1\u661f\u30af\u30e9\u30b9\u3068\u3001\n\n```java\n\n\t//\u60d1\u661f\n\tpublic static class Planet {\n\t\tprivate final String name;\n\t\tprivate final int diameter;\n\t\tprivate final String[] satellites;\n\n\t\tpublic Planet(String name, int diameter, String... satelites) {\n\t\t\tthis.name = name;\n\t\t\tthis.diameter = diameter;\n\t\t\tthis.satellites = satelites;\n\t\t}\n\t\t\n\t\t//\u540d\u524d\n\t\tpublic String getName() {\n\t\t\treturn name;\n\t\t}\n\n\t\t//\u76f4\u5f84\uff08km\uff09\n\t\tpublic int getDiameter() {\n\t\t\treturn diameter;\n\t\t}\n\t\t\n\t\t//\u885b\u661f\u306e\u30ea\u30b9\u30c8\n\t\tpublic List<String> getSatellites() {\n\t\t\treturn Arrays.asList(satellites);\n\t\t}\n\t}\n```\n\u3053\u306e\u60d1\u661f\u30af\u30e9\u30b9\u3092\u8981\u7d20\u3068\u3059\u308b\u3001\u4e0b\u306e\u30ea\u30b9\u30c8\uff08planets\uff09\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\n```java\n\t//\u885b\u661f\u306f\u6700\u5927\uff12\u3064\u307e\u3067\u3068\u3057\u307e\u3059\u3002\n\t//\u6614\u306f\u51a5\u738b\u661f\u3082\u60d1\u661f\u3067\u3057\u305f\u3002\u3002\u3002\n\tList<Planet> planets = Arrays.asList(\n\t\t\tnew Planet(\"\u6c34\u661f\", 4879), \n\t\t\tnew Planet(\"\u91d1\u661f\", 12103),\n\t\t\tnew Planet(\"\u5730\u7403\", 12756, \"\u6708\"),\n\t\t\tnew Planet(\"\u706b\u661f\", 6794, \"\u30d5\u30a9\u30dc\u30b9\", \"\u30c0\u30a4\u30e2\u30b9\"), \n\t\t\tnew Planet(\"\u6728\u661f\", 142984, \"\u30a4\u30aa\", \"\u30a8\u30a6\u30ed\u30d1\"),\n\t\t\tnew Planet(\"\u571f\u661f\", 120536, \"\u30bf\u30a4\u30bf\u30f3\", \"\u30ec\u30a2\"), \n\t\t\tnew Planet(\"\u5929\u738b\u661f\", 51118, \"\u30c1\u30bf\u30cb\u30a2\", \"\u30aa\u30d9\u30ed\u30f3\"), \n\t\t\tnew Planet(\"\u6d77\u738b\u661f\", 49572, \"\u30c8\u30ea\u30c8\u30f3\", \"\u30d7\u30ed\u30c6\u30a6\u30b9\")\n\t);\n```\n\n## \u3059\u3079\u3066\u306e\u8981\u7d20\u306b\u4f55\u304b\u306e\u51e6\u7406\u3092\u884c\u3046\n\u4f8b\u3048\u3070\u3001\u3059\u3079\u3066\u306e\u60d1\u661f\u306e\u540d\u524d\u3092\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### Java7:\n```java\n\t\t\tfor (Planet p : planets) {\n\t\t\t\tSystem.out.println(p.getName());\n\t\t\t}\n```\n#### Java8:\n```java\n\t\t\tplanets.stream().forEach(p -> System.out.println(p.getName()));\n```\nStream\u306eforEach\u30e1\u30bd\u30c3\u30c9\u306f\u3059\u3079\u3066\u8981\u7d20\u306b\u6307\u5b9a\u306e\u51e6\u7406\u3092\u9069\u7528\u3057\u307e\u3059\u3002\u3082\u3057\u304f\u306f\u3001Stream\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u307e\u3059\u3002\n\n```java\t\t\n\t\t\tplanets.forEach(p -> System.out.println(p.getName()));\n```\n## \u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u306e\u307f\u3092\u62bd\u51fa\u3059\u308b\n\u4f8b\u3048\u3070\u3001\u76f4\u5f8410,000km\u4ee5\u4e0a\u306e\u60d1\u661f\u306e\u307f\u306e\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### Java7:\n```java\n\t\t\tList<Planet> filtered = new ArrayList<>();\n\t\t\tfor (Planet p : planets) {\n\t\t\t\tif (p.getDiameter() > 10000) {\n\t\t\t\t\tfiltered.add(p);\n\t\t\t\t}\n\t\t\t}\n```\n#### Java8:\n\n```java\n\t\t\tList<Planet> filtered = planets.stream()\n\t\t\t\t\t.filter(p -> p.getDiameter() > 10000)\n\t\t\t\t\t.collect(Collectors.toList());\n```\n\n\u62bd\u51fa\u3057\u3066\u5f97\u3089\u308c\u308b\u30ea\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n```\n\t\t[\u91d1\u661f,\u5730\u7403,\u6728\u661f,\u571f\u661f,\u5929\u738b\u661f,\u6d77\u738b\u661f]\n```\n\n## \u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u306e\u6570\u3092\u6570\u3048\u308b\n\u4f8b\u3048\u3070\u3001\u76f4\u5f8410,000km\u4ee5\u4e0a\u306e\u60d1\u661f\u306e\u6570\u3092\u6570\u3048\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### Java7:\n```java\n\t\t\tlong count = 0;\n\t\t\tfor (Planet p : planets) {\n\t\t\t\tif (p.getDiameter() > 10000) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n```\n#### Java8:\n\n```java\n\t\t\tlong count = planets.stream()\n\t\t\t\t\t.filter(p -> p.getDiameter() > 10000)\n\t\t\t\t\t.count();\n```\nStream\u306efilter\u30e1\u30bd\u30c3\u30c9\u306f\u6307\u5b9a\u3055\u308c\u305f\u6761\u4ef6\uff08\u8ff0\u8a9e\uff09\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u306e\u307f\u3092\u62bd\u51fa\u3057\u305fStream\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n## \u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u304c\u4e00\u3064\u4ee5\u4e0a\u3042\u308b\u304b\u8abf\u3079\u308b\n\u4f8b\u3048\u3070\u3001\u76f4\u5f8410,000km\u4ee5\u4e0a\u306e\u60d1\u661f\u304c\u5b58\u5728\u3059\u308b\u304b\u3092\u8abf\u3079\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### Java7:\n```java\n\t\t\tboolean found = false;\n\t\t\tfor (Planet p : planets) {\n\t\t\t\tif (p.getDiameter() > 10000) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n```\n#### Java8:\n\n```java\n\t\t\tboolean found = planets.stream()\n\t\t\t\t\t.anyMatch(p -> p.getDiameter() > 10000);\n```\nStream\u306eanyMatch\u30e1\u30bd\u30c3\u30c9\u306f\u6307\u5b9a\u3055\u308c\u305f\u8ff0\u8a9e\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u304c\uff11\u3064\u3067\u3082\u3042\u308c\u3070 ```true``` \u3092\u8fd4\u3057\u307e\u3059\u3002\n\n##\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u304b\u8abf\u3079\u308b\n\u4f8b\u3048\u3070\u3001\u3059\u3079\u3066\u306e\u60d1\u661f\u304c\u76f4\u5f8410,000km\u4ee5\u4e0a\u304b\u3092\u8abf\u3079\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### Java7:\n```java\n\t\t\tboolean matchedAll = true;\n\t\t\tfor (Planet p : planets) {\n\t\t\t\tif (!(p.getDiameter() > 10000)) {\n\t\t\t\t\tmatchedAll = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n```\n#### Java8:\n\n```java\n\t\t\tboolean matchedAll = planets.stream()\n\t\t\t\t\t.allMatch(p -> p.getDiameter() > 10000);\t\t\n```\nStream\u306eallMatch\u306f\u6307\u5b9a\u3055\u308c\u305f\u8ff0\u8a9e\u306b\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u4e00\u81f4\u3059\u308b\u5834\u5408\u306e\u307f ```true``` \u3092\u8fd4\u3057\u307e\u3059\u3002\n\n## \u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u3092\u7570\u306a\u308b\u8981\u7d20\u306b\u5909\u63db\uff08\u5199\u50cf\uff09\u3057\u305f\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3059\u308b\n\u4f8b\u3048\u3070\u3001\u30ea\u30b9\u30c8\u306e\u5404\u60d1\u661f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u60d1\u661f\u540d\uff08String\uff09\u306e\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### Java7:\n```java\n\t\t\tList<String> mappedList = new ArrayList<>();\n\t\t\tfor (Planet p : planets) {\n\t\t\t\tmappedList.add(p.getName());\n\t\t\t}\n```\n#### Java8:\n\n```java\n\t\t\tList<String> mappedList = planets.stream()\n\t\t\t\t\t.map(p -> p.getName())\n\t\t\t\t\t.collect(Collectors.toList());\n```\nStream\u306emap\u30e1\u30bd\u30c3\u30c9\u306f\u3001Stream\u306e\u5404\u8981\u7d20\u3092\u5225\u306e\u578b\u306e\u8981\u7d20\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u305fStream\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u4e0a\u306e\u4f8b\u3067\u306f\u3001\u60d1\u661f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\uff08Planet\u578b\uff09\u3092\u60d1\u661f\u540d\uff08String\u578b\uff09\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n\u30e1\u30bd\u30c3\u30c9\u53c2\u7167\u3092\u5229\u7528\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3088\u308a\u7c21\u6f54\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```java\n\t\t\tList<String> mappedList = planets.stream()\n\t\t\t\t\t.map(Planet::getName)\n\t\t\t\t\t.collect(Collectors.toList());\n```\n\n## \u5404\u8981\u7d20\u3092\u7570\u306a\u308b\u8907\u6570\u8981\u7d20\u306b\u5909\u63db\u3057\u305f\u7d50\u679c\u3092\u30de\u30fc\u30b8\u3057\u305f\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3059\u308b\n\u5c11\u3057\u308f\u304b\u308a\u306b\u304f\u3044\u3067\u3059\u304c\u3001\u4e0a\u306e\u4f8b\u306f\u30ea\u30b9\u30c8\u306e\u5404\u8981\u7d20\u306e1:1\u3067\u306e\u5909\u63db\u3067\u3042\u308b\u306e\u306b\u5bfe\u3057\u30011:N\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u5404\u60d1\u661f\u306b\u5bfe\u5fdc\u3059\u308b\u885b\u661f\uff08\u8907\u6570\uff09\u3092\u30de\u30fc\u30b8\u3057\u3066\uff11\u3064\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### Java7:\n```java\n\t\t\tList<String> sattelites = new ArrayList<>();\n\t\t\tfor (Planet p : planets) {\n\t\t\t\tsattelites.addAll(p.getSatellites());\n\t\t\t}\n```\n#### Java8:\n```java\n\t\t\tList<String> sattelites = planets.stream()\n\t\t\t\t\t.flatMap(p -> p.getSatellites().stream())\n\t\t\t\t\t.collect(Collectors.toList());\t\n```\nStream\u306eflatMap\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u5404\u8981\u7d20\u304b\u3089\u751f\u6210\u3055\u308c\u308bStream\u3092\uff11\u3064\u306b\u7d71\u5408\u3057\u305fStream\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\nJava7,8\u3044\u305a\u308c\u306e\u7d50\u679c\u3067\u3082\u3001\u4ee5\u4e0b\u306e\u885b\u661f\u304b\u3089\u306a\u308b\uff08\u30d5\u30e9\u30c3\u30c8\u306a\uff09\u30ea\u30b9\u30c8\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n```\n\t\t[\u6708,\u30d5\u30a9\u30dc\u30b9,\u30c0\u30a4\u30e2\u30b9,\u30a4\u30aa,\u30a8\u30a6\u30ed\u30d1,\u30bf\u30a4\u30bf\u30f3,\u30ec\u30a2,\u30c1\u30bf\u30cb\u30a2,\u30aa\u30d9\u30ed\u30f3,\u30c8\u30ea\u30c8\u30f3,\u30d7\u30ed\u30c6\u30a6\u30b9]\n```\n\n## \u5404\u8981\u7d20\u3092\u5408\u6210\u3057\u3066\uff11\u3064\u306e\u5024\u306b\u96c6\u7d04\u3059\u308b\n\u3053\u308c\u3082\u5c11\u3057\u308f\u304b\u308a\u306b\u304f\u3044\u3067\u3059\u304c\u3001\u95a2\u6570\u578b\u8a00\u8a9e\u3067\u306e\u7573\u307f\u8fbc\u307f\u95a2\u6570\u306e\u3053\u3068\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u5404\u60d1\u661f\u306e\u76f4\u5f84\u306e\u5408\u8a08\u3092\u6c42\u3081\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### Java7:\n```java\t\t\n\t\t\tint totalDiameter = 0;\n\t\t\tfor (Planet p : planets) {\n\t\t\t\ttotalDiameter += p.getDiameter();\n\t\t\t}\n```\n#### Java8:\n\n```java\n\t\t\t int totalDiameter = planets.stream()\n\t\t\t\t\t .map(p -> p.getDiameter())\n\t\t\t\t\t .reduce((accum, p) -> accum + p)\n\t\t\t\t\t .get();\n```\nStream\u306ereduce\u30e1\u30bd\u30c3\u30c9\u304c\u95a2\u6570\u578b\u8a00\u8a9e\u3067\u306e\u7573\u307f\u8fbc\u307f\u95a2\u6570\uff08fold\u95a2\u6570\uff09\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002Stream\u3067\u306f\u5de6\u304b\u3089\u306e\u7573\u307f\u8fbc\u307f\u95a2\u6570\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002reduce\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u7d50\u679c\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u305f\u3081\uff08\u305f\u3068\u3048\u3070\u7a7a\u306eStream\u306e\u5834\u5408\u306a\u3069\uff09\u3001Optional\u578b\u3092\u8fd4\u3059\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u6700\u5f8c\u306eget\u30e1\u30bd\u30c3\u30c9\u3067\u5024\u3092\u53d6\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n## \u30ea\u30b9\u30c8\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u7c21\u7d04\u3059\u308b\n\u3044\u308f\u3086\u308b\u3001map-reduce\u30d1\u30bf\u30fc\u30f3\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u885b\u661f\u3092\u6301\u3064\u60d1\u661f\u3092\u62bd\u51fa\uff08filter\uff09\u3057\u3001\u305d\u306e\u60d1\u661f\u3092\u60d1\u661f\u540d\u306b\u5909\u63db\uff08map\uff09\u3057\u3001\u60d1\u661f\u540d\u306e\u30ea\u30b9\u30c8\u3092\u751f\u6210\uff08reduce\uff09\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### Java7:\n```java\n\t\t\tList<String> planetWithSattelites = new ArrayList<>();\n\t\t\tfor (Planet p : planets) {\n\t\t\t\tif (p.getSatellites().size() > 0) {\n\t\t\t\t\tplanetWithSattelites.add(p.getName());\n\t\t\t\t}\n\t\t\t}\n```\n#### Java8:\n\n```java\n\t\t\tList<String> planetWithSattelites = planets.stream()\n\t\t\t\t\t.filter(p -> p.getSatellites().size() > 0)\n\t\t\t\t\t.map(Planet::getName)\n\t\t\t\t\t.collect(Collectors.toList());\t\n```\n\n# \u30de\u30c3\u30d7\u306e\u64cd\u4f5c\nStream\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3001Java8\u3067\u306fMap\u306e\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3082\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\u3002\n\n## \u3059\u3079\u3066\u306e\u30ad\u30fc\u3068\u5024\u306e\u30da\u30a2\u306b\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u884c\u3046\n\u4f8b\u3048\u3070\u3001\u6b21\u306eMap\u306e\u3059\u3079\u3066\u306e\u30ad\u30fc\u3068\u5024\u3092\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\n\t\tMap<String, String> map = new HashMap<>();\n\t\tmap.put(\"1\", \"one\");\n\t\tmap.put(\"2\", \"two\");\n\t\tmap.put(\"3\", \"three\");\t\t\n```\n\n#### Java7:\n\n```java\n\t\t\tfor (Map.Entry<String, String> entry : map.entrySet()) {\n\t\t\t\tString key = entry.getKey();\n\t\t\t\tString value = entry.getValue();\n\t\t\t\tSystem.out.println(String.format(\"key=%s, value=%s\" ,key, value));\n\t\t\t}\n```\n\n#### Java8:\n\n```java\n\t\t\tmap.forEach((key, value) -> {\n\t\t\t\tSystem.out.println(String.format(\"key=%s, value=%s\" ,key, value));\n\t\t\t});\t\t\n```\n\n\n# \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u64cd\u4f5c\n\u6b21\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u984c\u6750\u3068\u3057\u307e\u3059\u3002\n\n```text:/tmp/sample.txt\nJava\nScala\nC\nC#\nJavaScript\nGroovy\n```\n\n## \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5168\u3066\u306e\u884c\u306b\u4f55\u304b\u306e\u51e6\u7406\u3092\u884c\u3046\n\u305f\u3068\u3048\u3070\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5168\u884c\u3092\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### Java7:\n\n```java\n\t\t\ttry (BufferedReader br = Files.newBufferedReader(Paths.get(\"/tmp/sample.txt\"), Charset.forName(\"utf-8\"))) {\n\t\t\t\tString line;\n\t\t\t\twhile ((line = br.readLine()) != null) {\n\t\t\t\t\tSystem.out.println(line);\n\t\t\t\t}\n\t\t\t}\n```\n\n#### Java8:\n\n```java\n\t\t\ttry (Stream<String> stream = Files.lines(Paths.get(\"/tmp/sample.txt\"), Charset.forName(\"utf-8\"))) {\n\t\t\t\tstream.forEach(line -> System.out.println(line));\n\t\t\t}\n```\nFile\u304b\u3089\u751f\u6210\u3057\u305fStream\u306e\u5834\u5408\u306f\u3001\u660e\u793a\u7684\u306bStream\u3092\u30af\u30ed\u30fc\u30ba\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3088\u3063\u3066\u3001\u4e0a\u306e\u3088\u3046\u306btry-with-resources\u6587\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u3053\u306e\u5834\u5408\u306f\u5168\u884c\u3092\u30e1\u30e2\u30ea\u306b\u5c55\u958b\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n```java\n\t\t\tfor (String line : Files.readAllLines(Paths.get(\"/tmp/sample.txt\"), Charset.forName(\"utf-8\"))) {\n\t\t\t\tSystem.out.println(line);\n\t\t\t}\n```\n\n## \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u884c\u3092\u62bd\u51fa\u3059\u308b\n\u305f\u3068\u3048\u3070\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\"Java\"\u3068\u3044\u3046\u5358\u8a9e\u3092\u542b\u3080\u884c\u306e\u307f\u3092\u62bd\u51fa\u3057\u3066\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### Java7:\n\n```java\n\t\t\ttry (BufferedReader br = Files.newBufferedReader(Paths.get(\"/tmp/sample.txt\"), Charset.forName(\"utf-8\"))) {\n\t\t\t\tString line;\n\t\t\t\twhile ((line = br.readLine()) != null) {\n\t\t\t\t\tif (line.contains(\"Java\")) {\n\t\t\t\t\t\tSystem.out.println(line);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n```\n\n#### Java8:\n\n```java\n\t\t\ttry (Stream<String> stream = Files.lines(Paths.get(\"/tmp/sample.txt\"))) {\n\t\t\t\tstream.filter(line -> line.contains(\"Java\")).forEach(System.out::println);\n\t\t\t}\n```\n\n\u51fa\u529b\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```text\nJava\nJavaScript\n```\n\n# \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u64cd\u4f5c\n\n```/tmp/test``` \u306b\u4ee5\u4e0b\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\n```shell-session\n$ ls -a /tmp/test\n.\t..\t.dir2\t.file2\t.file3\tdir1\tfile1\n```\n\n## \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u5168\u3066\u306e\u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u30d5\u30a1\u30a4\u30eb\u3092\u62bd\u51fa\u3059\u308b\n\u305f\u3068\u3048\u3070\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea ```/tmp/test``` \u914d\u4e0b\u306e\u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u3092\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### Java7:\n\n```java\n\t\t\tFile dir = Paths.get(\"/tmp/test\").toFile();\n\t\t\tfor (File file : dir.listFiles()) {\n\t\t\t\tSystem.out.println(file);\n\t\t\t}\n```\n\n#### Java8:\n\n```java\n\t\t\ttry (Stream<Path> stream = Files.list(Paths.get(\"/tmp/test\"))) {\n\t\t\t\tstream.forEach(System.out::println);\n\t\t\t}\n```\n\n## \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u3092\u62bd\u51fa\u3059\u308b\n\u305f\u3068\u3048\u3070\u3001```/tmp/test``` \u304b\u3089\".\"\u304b\u3089\u59cb\u307e\u308b\u96a0\u3057\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u3092\u62bd\u51fa\u3057\u3066\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### Java7:\n\n```java\n\t\t\tFile dir = Paths.get(\"/tmp/test\").toFile();\n\t\t\tfor (File file : dir.listFiles()) {\n\t\t\t\tif (!file.isFile()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (file.getName().startsWith(\".\")) {\n\t\t\t\t\tSystem.out.println(file.getName());\n\t\t\t\t}\n\t\t\t}\n```\n\n#### Java8:\n\n```java\n\t\t\ttry (Stream<Path> stream = Files.list(Paths.get(\"/tmp/test\"))) {\n\t\t\t\tstream\n\t\t\t\t.filter(path -> path.toFile().isFile())\n\t\t\t\t.map(path -> path.getFileName().toString())\n\t\t\t\t.filter(name -> name.startsWith(\".\"))\n\t\t\t\t.forEach(System.out::println);\n\t\t\t}\n```\n\n\u51fa\u529b\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```text\n.file2\n.file3\n```\n", "tags": ["Java", "java8"]}