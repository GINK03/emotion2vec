{"context": " More than 1 year has passed since last update.\nindex.js\n\n//\u3059\u3054\u3044API\n\nconst app = \u3059\u3054\u3044API();\n\nco(function* (){\n  yield cb => mongoose.connect(config.mongodbUri, cb);\n  console.log(`mongodb connect successfully at ${new Date()}`);\n  yield cb => app.listen(config.port, cb);\n  console.log(`server launch at ${new Date()} on port ${config.port}`);\n  if (app.env === 'test') {\n    yield cb => client.flushdb(cb);\n    process.send({ ok: true });\n  }\n}).catch(err => {\n  if (process.env.NODE_ENV === 'test') {\n    process.send({ ok: false });\n  }\n  console.error(err.message);\n  process.exit(1);\n});\n\n\n\u3053\u3093\u306a\u611f\u3058\u306bAPI\u3092\u7528\u610f\u3057\u3066\u304a\u304f\n\u30dd\u30a4\u30f3\u30c8\u306fNODE_ENV\u304ctest\u306e\u6642\u306b\nprocess.send({ ok: true });\u3092\u4ed5\u8fbc\u3093\u3067\u304a\u304f\u3053\u3068\u3067api\u30b5\u30fc\u30d0\u30fc\u306e\u6e96\u5099\u304c\u3067\u304d\u305f\u6642\u306b\u30c6\u30b9\u30c8\u3092\u958b\u59cb\u3067\u304d\u308b\n\ngulpfile.js\n'use strict';\n\nconst fork = require('child_process').fork;\n\nconst gulp = require('gulp');\nconst espower = require(\"gulp-espower\");\nconst mocha = require(\"gulp-mocha\");\n\ngulp.task(\"test\", ['db'], (cb) => {\n  const script = fork('./index.js');\n  script.on('message', msg => {\n    if (msg.ok) {\n      gulp.src('./test/*.js')\n        .pipe(espower())\n        .pipe(mocha({ reporter: 'nyan', timeout: 10000 }))\n        .on('error', (err) => {\n          cb(err);\n          script.kill();\n        })\n        .on('end', () => {\n          cb();\n          script.kill();\n        });\n    }\n  });\n});\n\n\ngulp\u306f\u3053\u3093\u306a\u611f\u3058\u3002\u65e9\u304fgulp 4\u306b\u4e0a\u304c\u3063\u3066\u6b32\u3057\u3044\u3002\ntask db\u3067db\u306e\u521d\u671f\u5316\u3092\u3084\u3063\u3066\u3044\u308b\u3002\n\u3053\u308c\u306fapi\u5074\u306b\u7d1b\u308c\u8fbc\u307e\u3057\u3066\u3082\u3044\u3044\u3051\u3069\u3001\u30c0\u30b5\u304f\u611f\u3058\u308b\u3002\n\u3061\u306a\u307f\u306bmongoose\u306eModel\u3092require\u3059\u308b\u3068mogoose.disconnect\u3092\u547c\u3093\u3067\u3082,\ngulp\u304c\u7d42\u4e86\u3057\u306a\u304f\u3066process.exit(0)\u3068\u304b\u3057\u3066\u3044\u308b.\u3069\u306e\u307f\u3061\u304b\u306a\u308a\u30c0\u30b5\u3044.\u306a\u3093\u3068\u304b\u3057\u305f\u3044\n\ntest/api.js\ndescribe('/api/', () => {\n  describe('/fuck/user/:id', () => {\n    it('fuck user', co.wrap(function* () {\n      const result = yield helper.post({\n        url : helper.createUrl('/api/fuck/user/hiroqn')\n      });\n\n      assert.equal(result.response.statusCode, 200);\n      assert.equal(result.body.user.length, '16cm');\n    }));\n  });\n});\n\n\n\nit\u304cPromise\u8fd4\u305b\u3070\u3044\u3044\u306e\u306fmocha\u306e\u512a\u3057\u3055\u3092\u611f\u3058\u308b\u3002\n\u3053\u3046\u3044\u3046\u30d8\u30eb\u30d1\u30fc\u3092\u3064\u304f\u3063\u3068\u3051\u3070\u5272\u308a\u3068\u697d\n\ntest/helper.js\n['get', 'post', 'put'].forEach(method => {\n  exports[method] = options =>\n    new Promise((resolve, reject) =>\n      request[method](options, (err, response, body) =>\n        err ? reject(err) : resolve({response, body})))});\n\n\n```js:index.js\n\n//\u3059\u3054\u3044API\n\nconst app = \u3059\u3054\u3044API();\n\nco(function* (){\n  yield cb => mongoose.connect(config.mongodbUri, cb);\n  console.log(`mongodb connect successfully at ${new Date()}`);\n  yield cb => app.listen(config.port, cb);\n  console.log(`server launch at ${new Date()} on port ${config.port}`);\n  if (app.env === 'test') {\n    yield cb => client.flushdb(cb);\n    process.send({ ok: true });\n  }\n}).catch(err => {\n  if (process.env.NODE_ENV === 'test') {\n    process.send({ ok: false });\n  }\n  console.error(err.message);\n  process.exit(1);\n});\n```\n\n\u3053\u3093\u306a\u611f\u3058\u306bAPI\u3092\u7528\u610f\u3057\u3066\u304a\u304f\n\n\u30dd\u30a4\u30f3\u30c8\u306fNODE_ENV\u304ctest\u306e\u6642\u306b\n`process.send({ ok: true });`\u3092\u4ed5\u8fbc\u3093\u3067\u304a\u304f\u3053\u3068\u3067api\u30b5\u30fc\u30d0\u30fc\u306e\u6e96\u5099\u304c\u3067\u304d\u305f\u6642\u306b\u30c6\u30b9\u30c8\u3092\u958b\u59cb\u3067\u304d\u308b\n\n```js:gulpfile.js\n'use strict';\n\nconst fork = require('child_process').fork;\n\nconst gulp = require('gulp');\nconst espower = require(\"gulp-espower\");\nconst mocha = require(\"gulp-mocha\");\n\ngulp.task(\"test\", ['db'], (cb) => {\n  const script = fork('./index.js');\n  script.on('message', msg => {\n    if (msg.ok) {\n      gulp.src('./test/*.js')\n        .pipe(espower())\n        .pipe(mocha({ reporter: 'nyan', timeout: 10000 }))\n        .on('error', (err) => {\n          cb(err);\n          script.kill();\n        })\n        .on('end', () => {\n          cb();\n          script.kill();\n        });\n    }\n  });\n});\n```\n\ngulp\u306f\u3053\u3093\u306a\u611f\u3058\u3002\u65e9\u304fgulp 4\u306b\u4e0a\u304c\u3063\u3066\u6b32\u3057\u3044\u3002\ntask db\u3067db\u306e\u521d\u671f\u5316\u3092\u3084\u3063\u3066\u3044\u308b\u3002\n\u3053\u308c\u306fapi\u5074\u306b\u7d1b\u308c\u8fbc\u307e\u3057\u3066\u3082\u3044\u3044\u3051\u3069\u3001\u30c0\u30b5\u304f\u611f\u3058\u308b\u3002\n\u3061\u306a\u307f\u306bmongoose\u306eModel\u3092require\u3059\u308b\u3068`mogoose.disconnect`\u3092\u547c\u3093\u3067\u3082,\ngulp\u304c\u7d42\u4e86\u3057\u306a\u304f\u3066`process.exit(0)`\u3068\u304b\u3057\u3066\u3044\u308b.\u3069\u306e\u307f\u3061\u304b\u306a\u308a\u30c0\u30b5\u3044.\u306a\u3093\u3068\u304b\u3057\u305f\u3044\n\n\n```js:test/api.js\ndescribe('/api/', () => {\n  describe('/fuck/user/:id', () => {\n    it('fuck user', co.wrap(function* () {\n      const result = yield helper.post({\n        url : helper.createUrl('/api/fuck/user/hiroqn')\n      });\n\n      assert.equal(result.response.statusCode, 200);\n      assert.equal(result.body.user.length, '16cm');\n    }));\n  });\n});\n\n```\n\nit\u304cPromise\u8fd4\u305b\u3070\u3044\u3044\u306e\u306fmocha\u306e\u512a\u3057\u3055\u3092\u611f\u3058\u308b\u3002\n\n\u3053\u3046\u3044\u3046\u30d8\u30eb\u30d1\u30fc\u3092\u3064\u304f\u3063\u3068\u3051\u3070\u5272\u308a\u3068\u697d\n\n```js:test/helper.js\n['get', 'post', 'put'].forEach(method => {\n  exports[method] = options =>\n    new Promise((resolve, reject) =>\n      request[method](options, (err, response, body) =>\n        err ? reject(err) : resolve({response, body})))});\n```\n", "tags": ["Node.js", "mocha", "power-assert", "JavaScript"]}