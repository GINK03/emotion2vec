{"context": " More than 1 year has passed since last update.\n\n\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\n\nLocationManager.swift\nimport CoreLocation\n\nlet LMLocationUpdateNotification : NSString = \"LMLocationUpdateNotification\"\n\nlet LMLocationInfoKey : NSString = \"LMLocationInfoKey\"\n\nclass LocationManager: NSObject, CLLocationManagerDelegate {\n\n    private var locationManager_: CLLocationManager\n    private var currentLocation: CLLocation!\n\n    struct Singleton {\n        static let sharedInstance = LocationManager()\n    }\n\n    class var sharedInstance: LocationManager {\n        return Singleton.sharedInstance\n    }\n\n    override init() {\n        locationManager_ = CLLocationManager()\n        locationManager_.desiredAccuracy = kCLLocationAccuracyBest\n        locationManager_.distanceFilter = 100 // meters\n        super.init()\n        locationManager_.delegate = self\n        // iOS8\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u304b\u30c1\u30a7\u30c3\u30af        \n        if (self.locationManager_.respondsToSelector(\"requestWhenInUseAuthorization\")) {\n            self.locationManager_.requestWhenInUseAuthorization()\n        }\n    }\n\n\n    func startUpdatingLocation()\n    {\n        println(\"Starting location updates\")\n        self.locationManager_.startUpdatingLocation()\n    }\n\n    func locationManager(manager: CLLocationManager!, didFailWithError error: NSError!) {\n        println(\"Location service failed with error: \\(error.localizedDescription)\")\n    }\n\n    func locationManager(manager: CLLocationManager!, didUpdateLocations locations: [AnyObject]!) {\n        var location = locations.last as CLLocation\n        println(\"Location = \\(location)\")\n\n        self.currentLocation = location\n\n        var userInfo = [ LMLocationInfoKey : location]\n        var center = NSNotificationCenter.defaultCenter()\n        center.postNotificationName(LMLocationUpdateNotification, object:self, userInfo: userInfo)\n        self.locationManager_.stopUpdatingLocation()\n    }\n\n    func locationManager(manager: CLLocationManager!, didChangeAuthorizationStatus status: CLAuthorizationStatus) {\n        if (status == .NotDetermined) {\n            if (self.locationManager_.respondsToSelector(\"requestWhenInUseAuthorization\")) {\n                self.locationManager_.requestWhenInUseAuthorization()\n            }\n        }\n    }\n}\n\n\n\nHow to use\nLocationManager.sharedInstance.startUpdatingLocation() \u3067\u73fe\u5728\u5730\u63a2\u3059\u3002\n\u73fe\u5728\u5730\u304c\u898b\u3064\u304b\u308b\u3068LMLocationUpdateNotification\u304c\u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u306b\u9001\u3089\u308c\u308b\u306e\u3067\u3001\u89b3\u6e2c\u3059\u308b\u5074\u306f\u305d\u306e\u901a\u77e5\u540d\u3092\u767b\u9332\u3057\u3066\u304a\u304f\u3002\nuserInfo\u8f9e\u66f8\u306b\u306fLMLocationKey\u306blocation\u304c\u5165\u3063\u3066\u3044\u308b\u3002\n\u4ee5\u4e0b\u3001\u4f8b\u3002\noverride func viewWillAppear(animated: Bool) {\n    super.viewWillAppear(animated)\n    var center = NSNotificationCenter.defaultCenter() as NSNotificationCenter\n\n        LocationManager.sharedInstance.startUpdatingLocation()\n        center.addObserver(self, selector: \"foundLocation:\", name: LMLocationUpdateNotification, object: nil)\n}\n\nfunc foundLocation(notif:NSNotification) {\n    println(\"foundLocation called\")\n\n    let info = notif.userInfo as NSDictionary!\n    var location = info[LMLocationInfoKey] as CLLocation\n\n    var coordinate = location.coordinate\n    // ...\u9069\u5f53\u306b\u4f4d\u7f6e\u60c5\u5831\u3092\u51e6\u7406\n}\n\n\n## \u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\n```LocationManager.swift\nimport CoreLocation\n    \nlet LMLocationUpdateNotification : NSString = \"LMLocationUpdateNotification\"\n    \nlet LMLocationInfoKey : NSString = \"LMLocationInfoKey\"\n    \nclass LocationManager: NSObject, CLLocationManagerDelegate {\n    \n    private var locationManager_: CLLocationManager\n    private var currentLocation: CLLocation!\n    \n    struct Singleton {\n        static let sharedInstance = LocationManager()\n    }\n\n    class var sharedInstance: LocationManager {\n        return Singleton.sharedInstance\n    }\n\n    override init() {\n        locationManager_ = CLLocationManager()\n        locationManager_.desiredAccuracy = kCLLocationAccuracyBest\n        locationManager_.distanceFilter = 100 // meters\n        super.init()\n        locationManager_.delegate = self\n        // iOS8\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u304b\u30c1\u30a7\u30c3\u30af        \n        if (self.locationManager_.respondsToSelector(\"requestWhenInUseAuthorization\")) {\n            self.locationManager_.requestWhenInUseAuthorization()\n        }\n    }\n\n\n    func startUpdatingLocation()\n    {\n        println(\"Starting location updates\")\n        self.locationManager_.startUpdatingLocation()\n    }\n\n    func locationManager(manager: CLLocationManager!, didFailWithError error: NSError!) {\n        println(\"Location service failed with error: \\(error.localizedDescription)\")\n    }\n\n    func locationManager(manager: CLLocationManager!, didUpdateLocations locations: [AnyObject]!) {\n        var location = locations.last as CLLocation\n        println(\"Location = \\(location)\")\n\n        self.currentLocation = location\n\n        var userInfo = [ LMLocationInfoKey : location]\n        var center = NSNotificationCenter.defaultCenter()\n        center.postNotificationName(LMLocationUpdateNotification, object:self, userInfo: userInfo)\n        self.locationManager_.stopUpdatingLocation()\n    }\n\n    func locationManager(manager: CLLocationManager!, didChangeAuthorizationStatus status: CLAuthorizationStatus) {\n        if (status == .NotDetermined) {\n            if (self.locationManager_.respondsToSelector(\"requestWhenInUseAuthorization\")) {\n                self.locationManager_.requestWhenInUseAuthorization()\n            }\n        }\n    }\n}\n```\n## How to use\n\nLocationManager.sharedInstance.startUpdatingLocation() \u3067\u73fe\u5728\u5730\u63a2\u3059\u3002\n\u73fe\u5728\u5730\u304c\u898b\u3064\u304b\u308b\u3068LMLocationUpdateNotification\u304c\u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u306b\u9001\u3089\u308c\u308b\u306e\u3067\u3001\u89b3\u6e2c\u3059\u308b\u5074\u306f\u305d\u306e\u901a\u77e5\u540d\u3092\u767b\u9332\u3057\u3066\u304a\u304f\u3002\nuserInfo\u8f9e\u66f8\u306b\u306fLMLocationKey\u306blocation\u304c\u5165\u3063\u3066\u3044\u308b\u3002\n\n\u4ee5\u4e0b\u3001\u4f8b\u3002\n\n    override func viewWillAppear(animated: Bool) {\n        super.viewWillAppear(animated)\n        var center = NSNotificationCenter.defaultCenter() as NSNotificationCenter\n\n            LocationManager.sharedInstance.startUpdatingLocation()\n            center.addObserver(self, selector: \"foundLocation:\", name: LMLocationUpdateNotification, object: nil)\n    }\n    \n    func foundLocation(notif:NSNotification) {\n        println(\"foundLocation called\")\n    \n        let info = notif.userInfo as NSDictionary!\n        var location = info[LMLocationInfoKey] as CLLocation\n    \n        var coordinate = location.coordinate\n        // ...\u9069\u5f53\u306b\u4f4d\u7f6e\u60c5\u5831\u3092\u51e6\u7406\n    }\n", "tags": ["memo", "Swift", "iOS"]}