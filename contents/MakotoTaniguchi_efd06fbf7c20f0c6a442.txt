{"context": "\n\n\u305f\u307e\u305f\u307eFizzBuzz\u306e\u8a71\u3057\u304c\u3067\u305f\u306e\u3067\u8a66\u3057\u306b\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n5\u5206\u7a0b\u8003\u3048\u3066\u5b9f\u88c5\u3057\u3066\u307f\u305f\u306e\u3067\u3001\u7c97\u3044\u306e\u3067\u3082\u3063\u3068\u826f\u3044\u8a2d\u8a08\u304c\u3042\u308b\u3088\u3068\u3044\u3046\u65b9\n\u30b3\u30e1\u30f3\u30c8\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\n\nFizzBuzz.cs\nvoid Main()\n{\n    int number = 100;\n    List<string> results = new List<string>();\n    for (var i = 1; i <= number; i++)\n    {\n        var fizz = new CheckFizz(i);\n        var buzz = new CheckBuzz(i);\n        if (fizz.Check() || buzz.Check())\n        {\n            results.Add(fizz.Result() + buzz.Result());\n        }\n        else\n        {\n            results.Add(i.ToString());\n        }\n    }\n\n    var result = string.Join(\" , \", results);\n    Console.WriteLine(result);\n}\n\npublic interface ICheck\n{\n    bool Check();\n    string Result();\n}\n\npublic class CheckFizz:ICheck\n{\n    private const int CheckNumber = 3;\n    private int InputNumber;\n    private const string Fizz = \"Fizz\";\n\n    public CheckFizz(int number)\n    {\n        InputNumber = number;\n    }\n\n    public bool Check()\n    {\n        return InputNumber % CheckNumber == 0;\n    }\n\n    public string Result()\n    {\n        if(this.Check())\n            return Fizz;\n\n        return string.Empty;\n    }\n}\n\npublic class CheckBuzz:ICheck\n{\n    private const int CheckNumber = 5;\n    private int InputNumber;\n    private const string Buzz = \"Buzz\";\n\n    public CheckBuzz(int number)\n    {\n        InputNumber = number;\n    }\n\n    public bool Check()\n    {\n        return InputNumber % CheckNumber == 0;\n    }\n\n    public string Result()\n    {\n        if (this.Check())\n            return Buzz;\n\n        return string.Empty;\n    }\n}\n\n\n\n\u30b3\u30e1\u30f3\u30c8\u9802\u3044\u3066\u304b\u3089\u4fee\u6b63\u3057\u305f\u7269\u306b\u306a\u308a\u307e\u3059\n\n\u4fee\u6b63\u5f8cFizzBuzz.cs\nvoid Main()\n{\n    int number = 100;\n    List<string> results = new List<string>();\n    for (var i = 1; i <= number; i++)\n    {\n        var check = CheckFactory.CreateInstance(i);\n        results.Add(check.Result());\n    }\n\n    var result = string.Join(\" , \", results);\n    Console.WriteLine(result);\n}\n\npublic interface ICheck\n{\n    bool Check();\n    string Result();\n}\n\npublic class CheckFactory\n{\n    public static ICheck CreateInstance(int inputNumber)\n    {\n        ICheck[] checkTypes = new ICheck[] {new CheckFizzBuzz(inputNumber), new CheckFizz(inputNumber), new CheckBuzz(inputNumber), new CheckNoFizzBuzz(inputNumber)};\n        foreach(var check in checkTypes)\n        if (check.Check())\n        {\n            return check;\n        }\n\n        return new CheckNoFizzBuzz(inputNumber);\n    }\n}\n\npublic class CheckFizz:ICheck\n{\n    private const int CheckNumber = 3;\n    private int InputNumber;\n    private const string Fizz = \"Fizz\";\n\n    public CheckFizz(int number)\n    {\n        InputNumber = number;\n    }\n\n    public bool Check()\n    {\n        return InputNumber % CheckNumber == 0;\n    }\n\n    public string Result()\n    {\n        return Fizz;\n    }\n}\n\npublic class CheckBuzz:ICheck\n{\n    private const int CheckNumber = 5;\n    private int InputNumber;\n    private const string Buzz = \"Buzz\";\n\n    public CheckBuzz(int number)\n    {\n        InputNumber = number;\n    }\n\n    public bool Check()\n    {\n        return InputNumber % CheckNumber == 0;\n    }\n\n    public string Result()\n    {\n        return Buzz;\n    }\n}\n\npublic class CheckFizzBuzz : ICheck\n{\n    private const int CheckNumber = 15;\n    private int InputNumber;\n    private const string FizzBuzz = \"FizzBuzz\";\n\n    public CheckFizzBuzz(int number)\n    {\n        InputNumber = number;\n    }\n\n    public bool Check()\n    {\n        return InputNumber % CheckNumber == 0;\n    }\n\n    public string Result()\n    {\n        return FizzBuzz;\n    }\n}\n\npublic class CheckNoFizzBuzz : ICheck\n{\n    private int InputNumber;\n\n    public CheckNoFizzBuzz(int number)\n    {\n        InputNumber = number;\n    }\n\n    public bool Check()\n    {\n        return true;\n    }\n\n    public string Result()\n    {\n        return InputNumber.ToString();\n    }\n}\n\n\n# \u305f\u307e\u305f\u307eFizzBuzz\u306e\u8a71\u3057\u304c\u3067\u305f\u306e\u3067\u8a66\u3057\u306b\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n5\u5206\u7a0b\u8003\u3048\u3066\u5b9f\u88c5\u3057\u3066\u307f\u305f\u306e\u3067\u3001\u7c97\u3044\u306e\u3067\u3082\u3063\u3068\u826f\u3044\u8a2d\u8a08\u304c\u3042\u308b\u3088\u3068\u3044\u3046\u65b9\n\u30b3\u30e1\u30f3\u30c8\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\n\n```CSharp:FizzBuzz.cs\nvoid Main()\n{\n\tint number = 100;\n\tList<string> results = new List<string>();\n\tfor (var i = 1; i <= number; i++)\n\t{\n\t\tvar fizz = new CheckFizz(i);\n\t\tvar buzz = new CheckBuzz(i);\n\t\tif (fizz.Check() || buzz.Check())\n\t\t{\n\t\t\tresults.Add(fizz.Result() + buzz.Result());\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresults.Add(i.ToString());\n\t\t}\n\t}\n\t\n\tvar result = string.Join(\" , \", results);\n\tConsole.WriteLine(result);\n}\n\npublic interface ICheck\n{\n\tbool Check();\n\tstring Result();\n}\n\npublic class CheckFizz:ICheck\n{\n\tprivate const int CheckNumber = 3;\n\tprivate int InputNumber;\n\tprivate const string Fizz = \"Fizz\";\n\n\tpublic CheckFizz(int number)\n\t{\n\t\tInputNumber = number;\n\t}\n\t\n\tpublic bool Check()\n\t{\n\t\treturn InputNumber % CheckNumber == 0;\n\t}\n\n\tpublic string Result()\n\t{\n\t\tif(this.Check())\n\t\t\treturn Fizz;\n\t\t\t\n\t\treturn string.Empty;\n\t}\n}\n\npublic class CheckBuzz:ICheck\n{\n\tprivate const int CheckNumber = 5;\n\tprivate int InputNumber;\n\tprivate const string Buzz = \"Buzz\";\n\n\tpublic CheckBuzz(int number)\n\t{\n\t\tInputNumber = number;\n\t}\n\n\tpublic bool Check()\n\t{\n\t\treturn InputNumber % CheckNumber == 0;\n\t}\n\n\tpublic string Result()\n\t{\n\t\tif (this.Check())\n\t\t\treturn Buzz;\n\n\t\treturn string.Empty;\n\t}\n}\n```\n\n#\u30b3\u30e1\u30f3\u30c8\u9802\u3044\u3066\u304b\u3089\u4fee\u6b63\u3057\u305f\u7269\u306b\u306a\u308a\u307e\u3059\n```CSharp:\u4fee\u6b63\u5f8cFizzBuzz.cs\nvoid Main()\n{\n    int number = 100;\n    List<string> results = new List<string>();\n    for (var i = 1; i <= number; i++)\n    {\n        var check = CheckFactory.CreateInstance(i);\n        results.Add(check.Result());\n    }\n\n    var result = string.Join(\" , \", results);\n    Console.WriteLine(result);\n}\n\npublic interface ICheck\n{\n\tbool Check();\n\tstring Result();\n}\n\npublic class CheckFactory\n{\n    public static ICheck CreateInstance(int inputNumber)\n    {\n        ICheck[] checkTypes = new ICheck[] {new CheckFizzBuzz(inputNumber), new CheckFizz(inputNumber), new CheckBuzz(inputNumber), new CheckNoFizzBuzz(inputNumber)};\n        foreach(var check in checkTypes)\n        if (check.Check())\n        {\n            return check;\n        }\n\n        return new CheckNoFizzBuzz(inputNumber);\n    }\n}\n\npublic class CheckFizz:ICheck\n{\n\tprivate const int CheckNumber = 3;\n\tprivate int InputNumber;\n\tprivate const string Fizz = \"Fizz\";\n\n\tpublic CheckFizz(int number)\n\t{\n\t\tInputNumber = number;\n\t}\n\t\n\tpublic bool Check()\n\t{\n\t\treturn InputNumber % CheckNumber == 0;\n\t}\n\n\tpublic string Result()\n\t{\n\t\treturn Fizz;\n\t}\n}\n\npublic class CheckBuzz:ICheck\n{\n\tprivate const int CheckNumber = 5;\n\tprivate int InputNumber;\n\tprivate const string Buzz = \"Buzz\";\n\n\tpublic CheckBuzz(int number)\n\t{\n\t\tInputNumber = number;\n\t}\n\n\tpublic bool Check()\n\t{\n\t\treturn InputNumber % CheckNumber == 0;\n\t}\n\n\tpublic string Result()\n\t{\n\t\treturn Buzz;\n\t}\n}\n\npublic class CheckFizzBuzz : ICheck\n{\n    private const int CheckNumber = 15;\n    private int InputNumber;\n    private const string FizzBuzz = \"FizzBuzz\";\n\n    public CheckFizzBuzz(int number)\n    {\n        InputNumber = number;\n    }\n\n    public bool Check()\n    {\n        return InputNumber % CheckNumber == 0;\n    }\n\n    public string Result()\n    {\n        return FizzBuzz;\n    }\n}\n\npublic class CheckNoFizzBuzz : ICheck\n{\n    private int InputNumber;\n\n    public CheckNoFizzBuzz(int number)\n    {\n        InputNumber = number;\n    }\n\n    public bool Check()\n    {\n        return true;\n    }\n\n    public string Result()\n    {\n        return InputNumber.ToString();\n    }\n}\n```\n", "tags": ["C#", "\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411"]}