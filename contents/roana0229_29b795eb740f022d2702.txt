{"tags": ["Qiita", "afnetworking", "iOS", "Swift"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u8a8d\u8a3c\u304b\u3089\u5229\u7528\u307e\u3067\u306e\u6d41\u308c\n\nhttps://qiita.com/settings/applications \u3067\u30a2\u30d7\u30ea\u3092\u767b\u9332\u3057\u3001Client ID, Client Secret\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306a\u8a8d\u8a3cURL\u3092UIWebView\u3067\u8868\u793a\u3059\u308b\nhttps://qiita.com/api/v2/oauth/authorize?client_id=***&scope=***\n\u30ea\u30c0\u30a4\u30ec\u30af\u30c8URL\u306e\u4f8b\nhttp://qiita.com/roana0229?code=xxx\n\u4e0a\u8a18\u306ecode\u90e8\u5206\u3092\u4f7f\u3063\u3066POST\u3059\u308b\n\n\nLogin.swift\nlet URL: String = \"https://qiita.com/api/v2/access_tokens?client_id=***&client_secret=***&code=\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u305fURL\u306b\u4ed8\u52a0\u3055\u308c\u3066\u3044\u308bcode\u90e8\u5206xxx\"\nvar manager: AFHTTPRequestOperationManager = AFHTTPRequestOperationManager()\nmanager.POST(URL, parameters: params, success: { (requestOperation: AFHTTPRequestOperation!, response: AnyObject!) in\n    // requestOperation.response.statusCode\n    // requestOperation.responseString\n}, failure:{ (requestOperation: AFHTTPRequestOperation!, response: AnyObject!) in\n})\n\n\n5. success:requestOperation.responseString\u306e\u5185\u5bb9\n\u3000 {\"client_id\":\"~\",\"scopes\":\"[~]\",\"token\":\"xxx\"}\n6. \u3053\u308c\u3067\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\u304c\u5b8c\u4e86\u3057\u305f\u306e\u3067\u3001GET\u306a\u3069\u3067\u5229\u7528\u3059\u308b\n\nGetWithBearer.swift\n// urlString\u306f\u4efb\u610f\u306eURL\nlet token: String = \"4\u3067\u53d6\u5f97\u3057\u305ftoken\"\nlet url: NSURL = NSURL(string: urlString)!\nlet request: NSURLRequest = NSURLRequest(URL: url)\nlet requestOperation: AFHTTPRequestOperation = AFHTTPRequestOperation(request: request)\nrequestOperation.setRedirectResponseBlock({ (connection: NSURLConnection!, request: NSURLRequest!, redirectResponse: NSURLResponse!) in\n    let fields: AnyObject = request.allHTTPHeaderFields!\n    if fields.objectForKey(AUTH_FIELD) != nil {\n        return request\n    }\n    var urlResuest: NSMutableURLRequest = NSMutableURLRequest(URL: request.URL, cachePolicy: request.cachePolicy, timeoutInterval: request.timeoutInterval)\n    let authValue: NSString = NSString(format: \"Bearer %@\", token)\n    urlResuest.setValue(authValue, forHTTPHeaderField: \"Authorization\")\n    return urlResuest\n})\n\nrequestOperation.setCompletionBlockWithSuccess( { (requestOperation: AFHTTPRequestOperation!, responseObject: AnyObject!) in\n    //requestOperation.response.statusCode\n    //requestOperation.responseString\n}, failure: { (requestOperation: AFHTTPRequestOperation!, error: NSError!) in\n    //requestOperation.response.statusCode\n    //requestOperation.responseString\n})\n\nrequestOperation.start()\n\n\n\n\u3061\u306a\u307f\u306bAlamofire\u306e\u5834\u5408\nhttps://github.com/Alamofire/Alamofire \u306eREADME.md\nCRUD & Authorization\u306e\u90e8\u5206\u306e\u3088\u3046\u306b\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n\n# \u8a8d\u8a3c\u304b\u3089\u5229\u7528\u307e\u3067\u306e\u6d41\u308c\n\n1. https://qiita.com/settings/applications \u3067\u30a2\u30d7\u30ea\u3092\u767b\u9332\u3057\u3001Client ID, Client Secret\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n2. \u3053\u306e\u3088\u3046\u306a\u8a8d\u8a3cURL\u3092UIWebView\u3067\u8868\u793a\u3059\u308b\n`https://qiita.com/api/v2/oauth/authorize?client_id=***&scope=***`\n\n3. \u30ea\u30c0\u30a4\u30ec\u30af\u30c8URL\u306e\u4f8b\n`http://qiita.com/roana0229?code=xxx`\n\n4. \u4e0a\u8a18\u306ecode\u90e8\u5206\u3092\u4f7f\u3063\u3066POST\u3059\u308b\n\n```Login.swift\nlet URL: String = \"https://qiita.com/api/v2/access_tokens?client_id=***&client_secret=***&code=\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u305fURL\u306b\u4ed8\u52a0\u3055\u308c\u3066\u3044\u308bcode\u90e8\u5206xxx\"\nvar manager: AFHTTPRequestOperationManager = AFHTTPRequestOperationManager()\nmanager.POST(URL, parameters: params, success: { (requestOperation: AFHTTPRequestOperation!, response: AnyObject!) in\n    // requestOperation.response.statusCode\n    // requestOperation.responseString\n}, failure:{ (requestOperation: AFHTTPRequestOperation!, response: AnyObject!) in\n})\n```\n\n5\\. success:requestOperation.responseString\u306e\u5185\u5bb9\n\u3000 `{\"client_id\":\"~\",\"scopes\":\"[~]\",\"token\":\"xxx\"}`\n\n6\\. \u3053\u308c\u3067\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\u304c\u5b8c\u4e86\u3057\u305f\u306e\u3067\u3001GET\u306a\u3069\u3067\u5229\u7528\u3059\u308b\n\n```GetWithBearer.swift\n// urlString\u306f\u4efb\u610f\u306eURL\nlet token: String = \"4\u3067\u53d6\u5f97\u3057\u305ftoken\"\nlet url: NSURL = NSURL(string: urlString)!\nlet request: NSURLRequest = NSURLRequest(URL: url)\nlet requestOperation: AFHTTPRequestOperation = AFHTTPRequestOperation(request: request)\nrequestOperation.setRedirectResponseBlock({ (connection: NSURLConnection!, request: NSURLRequest!, redirectResponse: NSURLResponse!) in\n    let fields: AnyObject = request.allHTTPHeaderFields!\n    if fields.objectForKey(AUTH_FIELD) != nil {\n        return request\n    }\n    var urlResuest: NSMutableURLRequest = NSMutableURLRequest(URL: request.URL, cachePolicy: request.cachePolicy, timeoutInterval: request.timeoutInterval)\n    let authValue: NSString = NSString(format: \"Bearer %@\", token)\n    urlResuest.setValue(authValue, forHTTPHeaderField: \"Authorization\")\n    return urlResuest\n})\n\nrequestOperation.setCompletionBlockWithSuccess( { (requestOperation: AFHTTPRequestOperation!, responseObject: AnyObject!) in\n    //requestOperation.response.statusCode\n    //requestOperation.responseString\n}, failure: { (requestOperation: AFHTTPRequestOperation!, error: NSError!) in\n    //requestOperation.response.statusCode\n    //requestOperation.responseString\n})\n\nrequestOperation.start()\n```\n\n# \u3061\u306a\u307f\u306bAlamofire\u306e\u5834\u5408\n\nhttps://github.com/Alamofire/Alamofire \u306eREADME.md\n***CRUD & Authorization***\u306e\u90e8\u5206\u306e\u3088\u3046\u306b\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n"}