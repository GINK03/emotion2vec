{"context": " More than 1 year has passed since last update.SQL\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308bPowerShell\u306f\u8a18\u4e8b\u3092\u66f8\u3044\u305f\u3051\u308c\u3069\u3082\u3001\u30ea\u30b9\u30c8\u30a2\u3059\u308b\u8a18\u4e8b\u306f\u4f5c\u6210\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u66f8\u3053\u3046\u304b\u3068\u3002\nSQL Server\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308bPowerShell\u30b9\u30af\u30ea\u30d7\u30c8\n\n\u30b3\u30fc\u30c9\n\nRestoreDB.ps1\nParam(\n    [String]$BakFilePath=\"C:\\DBBackup\\20150408.bak\",\n    [String]$ServerName=\"ServerInstanceName\",\n    [String]$BackupedDBName=\"DBNameFrom\",\n    [String]$RestoreDBName=\"DBNameTo\"\n    )\n\nif ($ServerName -eq \"\") {\n    Throw \"The ServerName Parameter is empty. You should input the ServerName Parameter.\"\n}\nif ($BackupedDBName -eq \"\") {\n    Throw \"The BackupDBName Parameter is empty. You should input the BackupDBName Parameter.\"\n}\nif ($RestoreDBName -eq \"\") {\n    Throw \"The RestoreDBName Parameter is empty. You should input the ResotreDBName Parameter.\"\n}\nif ($BakFilePath -eq \"\") {\n    Throw \"The backupDir Parameter is empty. You should input the backupDir Parameter.\"\n}\nif((Test-Path $BakFilePath) -eq $false){\n    Throw \"$($BakFilePath) is not exist.\"\n}\n\n$globalwatch = New-Object System.Diagnostics.StopWatch\n$globalwatch.Start()\n\nWrite-Output \"Backup file: $($BakFilePath)\"\nWrite-Output \"Database: $($BackupedDBName) => $($RestoreDBName) at $($ServerName)\"\n\nWrite-Output \"Started at $(get-date)\"\n\n\n[System.Reflection.Assembly]::LoadWithPartialName(\"Microsoft.SqlServer.SMO\") | Out-Null\n[System.Reflection.Assembly]::LoadWithPartialName(\"Microsoft.SqlServer.SmoExtended\") | Out-Null\n[Reflection.Assembly]::LoadWithPartialName(\"Microsoft.SqlServer.ConnectionInfo\") | Out-Null\n[Reflection.Assembly]::LoadWithPartialName(\"Microsoft.SqlServer.SmoEnum\") | Out-Null\n\n$smoserver = new-object (\"Microsoft.SqlServer.Management.Smo.Server\") $ServerName\n\n$smoDBObj= New-Object (\"Microsoft.SqlServer.Management.Smo.Database\")($smoserver, \"$($RestoreDBName)\")\n\n$RelocateData = New-Object (\"Microsoft.SqlServer.Management.Smo.RelocateFile\")($BackupedDBName, (Join-Path $smoserver.DefaultFile $RestoreDBName\".mdf\"))\n$RelocateLog  = New-Object (\"Microsoft.SqlServer.Management.Smo.RelocateFile\")($($BackupedDBName+\"_log\"), (Join-Path $smoserver.DefaultLog $RestoreDBName\"_log.ldf\"))\n\nRestore-SqlDatabase -ServerInstance $ServerName -Database $RestoreDBName -BackupFile $BakFilePath -RelocateFile @($RelocateData, $RelocateLog) -ReplaceDatabase\n\n$globalwatch.Stop()\nWrite-Output \"Ended at $(get-date)\"\nWrite-Output \"Total Elapsed Time: $($globalwatch.Elapsed.ToString())\"\n\nWrite-Output \"Finished!!\"\n\n\n\n\n\u4f7f\u3044\u65b9\n\u5148\u982d\u884c\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3001SQL\u30b5\u30fc\u30d0\u30fc\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u540d\u3001\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u5143\u306eDB\u540d\u3001\u5fa9\u5143\u5148\u306eDB\u540d\u3092\u6307\u5b9a\u3059\u308b\u3002\nSQL\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308bPowerShell\u306f\u8a18\u4e8b\u3092\u66f8\u3044\u305f\u3051\u308c\u3069\u3082\u3001\u30ea\u30b9\u30c8\u30a2\u3059\u308b\u8a18\u4e8b\u306f\u4f5c\u6210\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u66f8\u3053\u3046\u304b\u3068\u3002\n\n[SQL Server\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308bPowerShell\u30b9\u30af\u30ea\u30d7\u30c8](http://qiita.com/mo8135/items/e62c62422664c9b966be)\n\n\n#\u30b3\u30fc\u30c9\n```ps1:RestoreDB.ps1\nParam(\n    [String]$BakFilePath=\"C:\\DBBackup\\20150408.bak\",\n    [String]$ServerName=\"ServerInstanceName\",\n    [String]$BackupedDBName=\"DBNameFrom\",\n    [String]$RestoreDBName=\"DBNameTo\"\n    )\n\nif ($ServerName -eq \"\") {\n\tThrow \"The ServerName Parameter is empty. You should input the ServerName Parameter.\"\n}\nif ($BackupedDBName -eq \"\") {\n\tThrow \"The BackupDBName Parameter is empty. You should input the BackupDBName Parameter.\"\n}\nif ($RestoreDBName -eq \"\") {\n\tThrow \"The RestoreDBName Parameter is empty. You should input the ResotreDBName Parameter.\"\n}\nif ($BakFilePath -eq \"\") {\n\tThrow \"The backupDir Parameter is empty. You should input the backupDir Parameter.\"\n}\nif((Test-Path $BakFilePath) -eq $false){\n    Throw \"$($BakFilePath) is not exist.\"\n}\n\n$globalwatch = New-Object System.Diagnostics.StopWatch\n$globalwatch.Start()\n\nWrite-Output \"Backup file: $($BakFilePath)\"\nWrite-Output \"Database: $($BackupedDBName) => $($RestoreDBName) at $($ServerName)\"\n\nWrite-Output \"Started at $(get-date)\"\n\n\n[System.Reflection.Assembly]::LoadWithPartialName(\"Microsoft.SqlServer.SMO\") | Out-Null\n[System.Reflection.Assembly]::LoadWithPartialName(\"Microsoft.SqlServer.SmoExtended\") | Out-Null\n[Reflection.Assembly]::LoadWithPartialName(\"Microsoft.SqlServer.ConnectionInfo\") | Out-Null\n[Reflection.Assembly]::LoadWithPartialName(\"Microsoft.SqlServer.SmoEnum\") | Out-Null\n\n$smoserver = new-object (\"Microsoft.SqlServer.Management.Smo.Server\") $ServerName\n\n$smoDBObj= New-Object (\"Microsoft.SqlServer.Management.Smo.Database\")($smoserver, \"$($RestoreDBName)\")\n\n$RelocateData = New-Object (\"Microsoft.SqlServer.Management.Smo.RelocateFile\")($BackupedDBName, (Join-Path $smoserver.DefaultFile $RestoreDBName\".mdf\"))\n$RelocateLog  = New-Object (\"Microsoft.SqlServer.Management.Smo.RelocateFile\")($($BackupedDBName+\"_log\"), (Join-Path $smoserver.DefaultLog $RestoreDBName\"_log.ldf\"))\n\nRestore-SqlDatabase -ServerInstance $ServerName -Database $RestoreDBName -BackupFile $BakFilePath -RelocateFile @($RelocateData, $RelocateLog) -ReplaceDatabase\n\n$globalwatch.Stop()\nWrite-Output \"Ended at $(get-date)\"\nWrite-Output \"Total Elapsed Time: $($globalwatch.Elapsed.ToString())\"\n\nWrite-Output \"Finished!!\"\n\n```\n\n#\u4f7f\u3044\u65b9\n\u5148\u982d\u884c\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3001SQL\u30b5\u30fc\u30d0\u30fc\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u540d\u3001\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u5143\u306eDB\u540d\u3001\u5fa9\u5143\u5148\u306eDB\u540d\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n\n\n", "tags": ["SQLServer2014", "PowerShell"]}