{"context": " More than 1 year has passed since last update.CRTP (\u5947\u5999\u306b\u518d\u5e30\u3057\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3) \u3092\u4f7f\u3063\u305f\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30dd\u30ea\u30b7\u30fc\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u4f7f\u3044\u56de\u3057\u305f\u3044\u3068\u8272\u3005\u8a66\u884c\u932f\u8aa4\u3057\u305f\u7d50\u679c\u3001\u6700\u7d42\u7684\u306b StackOverflow \u306e\u3053\u306e\u8a18\u4e8b \u306b\u884c\u304d\u7740\u3044\u305f\u3002\n\u3053\u3053\u3067\u306f\u524d\u8ff0\u306e\u8a18\u4e8b\u304b\u3089\u6a5f\u80fd\u3092\u629c\u3044\u305f\u52a3\u5316\u7248\uff08\uff1f\uff09\u306e\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30af\u30e9\u30b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30af\u30e9\u30b9\u306e\u8981\u4ef6\n\u3053\u3093\u306a\u611f\u3058\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u305f\u3044\u3068\u3044\u3046\u306e\u304c\u767a\u7aef\u3067\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u53d6\u5f97\u306b\u4eee\u60f3\u95a2\u6570\u3092\u4f7f\u308f\u306a\u3044\n\u6700\u521d\u306b\u547c\u3070\u308c\u308b\u307e\u3067\u30e1\u30e2\u30ea\u3092\u5360\u6709\u3057\u306a\u3044\n\u30d7\u30ed\u30b0\u30e9\u30e0\u7d42\u4e86\u6642\u306b\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u547c\u3070\u308c\u308b\n\u4f7f\u3044\u56de\u305b\u3066\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u697d\n\n\n\u6700\u7d42\u7684\u306a\u30b3\u30fc\u30c9\n\nsingleton.hpp\ntemplate<typename T>\nclass Singleton\n{\npublic:\n    //! \u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\n    static T& getInstance()\n    {\n        // \u6700\u521d\u306b\u547c\u3070\u308c\u305f\u3068\u304d\u306b\u4e00\u5ea6\u3060\u3051\u521d\u671f\u5316\u3055\u308c\u308b\n        static T singleton; \n        return singleton;\n    }\n\nprotected:\n    Singleton() = default;\n    virtual ~Singleton() = default;\n\n    // \u30b3\u30d4\u30fc\u30fb\u4ee3\u5165\u7981\u6b62\n    Singleton(const Singleton&) = delete;\n    Singleton& operator=(const Singleton&) = delete;\n};\n\n\n\n\u6700\u4f4e\u9650\u306e\u4f7f\u3044\u65b9\n\u6700\u4f4e\u9650\u306e\u30b3\u30fc\u30c9\u306f\u30af\u30e9\u30b9\u5b9a\u7fa9\u306b Singleton \u30af\u30e9\u30b9\u7d99\u627f\u3092\u8db3\u3057\u305f\u3060\u3051\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u3082\u306e\u3067\u3059\u3002\nclass Foo : public Singleton<Foo>\n{\n};\n\n\u7d99\u627f\u5143\u3067\u3042\u308b Singleton \u30af\u30e9\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306b\u81ea\u5206\u81ea\u8eab (Foo) \u3092\u5165\u308c\u3066\u3044\u308b\u306e\u304c CRTP \u30a4\u30c7\u30a3\u30aa\u30e0\u7279\u6709\u306e\u3068\u3053\u308d\u3067\u3059\u3002\n\u898b\u6163\u308c\u306a\u3044\u3068\u5947\u5999\u306a\u611f\u3058\u3067\u3059\u304c\u4f7f\u7528\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u4f7f\u7528\u4f8b1\n\nsample1.cpp\n#include <iostream>\n#include \"singleton.hpp\"\nusing namespace std;\n\nclass Foo : public Singleton<Foo>\n{\npublic:\n  void bar() {\n      cout << \"\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3060\u3088\\n\";\n  }\n};\n\nint main(void)\n{\n    cout << \"*** CHECK POINT 1 ***\\n\";\n\n    Foo& foo = Foo::getInstance();\n    foo.bar();\n\n    cout << \"*** CHECK POINT 2 ***\\n\";\n\n}\n\n\n\n\u51fa\u529b\n*** CHECK POINT 1 ***\n\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3060\u3088\n*** CHECK POINT 2 ***\n\n\nFoo::getInstance() \u3092\u547c\u3076\u3068 Singleton \u30af\u30e9\u30b9\u306e static T& getInstance() \u304c\u547c\u3070\u308c\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570 T \u306b Foo \u304c\u6e21\u3055\u308c\u3066\u3044\u308b\u305f\u3081 Foo& \u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\u305d\u308c\u3067 Foo \u306e\u30e1\u30f3\u30d0\u95a2\u6570 bar() \u304c\u4f7f\u3048\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u304c CRTP \u306e\u30df\u30bd\u306e\u90e8\u5206\u3067\u3001\u300c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u53d6\u5f97\u306b\u4eee\u60f3\u95a2\u6570\u3092\u4f7f\u308f\u306a\u3044\u300d\u3068\u3044\u3046\u8981\u4ef6\u304c\u6e80\u305f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u57fa\u672c\u7684\u306a\u4f7f\u7528\u6cd5\u3053\u308c\u3060\u3051\u306a\u306e\u3067\u3059\u304c\u3001 Foo \u306b\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3084\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u6301\u305f\u305b\u305f\u3044\u3068\u304d\u306b\u306f\u3082\u3046\u3072\u3068\u4f5c\u696d\u5fc5\u8981\u3067\u3059\u3002\n\nprivate \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fb\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\u3059\u308b\u6700\u4f4e\u9650\u306e\u30b3\u30fc\u30c9\n\u7d99\u627f\u5148\u306e\u30af\u30e9\u30b9\u3067 Singleton \u3092\u30d5\u30ec\u30f3\u30c9\u30af\u30e9\u30b9\u306b\u767b\u9332\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nclass Foo : public Singleton<Foo>\n{\n  friend class Singleton;\n\n  Foo() { /* \u5b9f\u88c5 */ }\n  ~Foo() { /* \u5b9f\u88c5 */ }\n};\n\nSingleton::getInstance \u5185\u3067 Foo \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u305f\u3081\u3001 Singleton \u30af\u30e9\u30b9\u304c Foo \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fb\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u3052\u308b\u305f\u3081\u3067\u3059\u3002\n\n\u4f7f\u7528\u4f8b2\nprivate \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fb\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u4f7f\u7528\u4f8b\u3067\u3059\u3002\n\nsample2.cpp\n#include <iostream>\n#include \"singleton.hpp\"\nusing namespace std;\n\nclass Foo : public Singleton<Foo>\n{\npublic:\n\n  void bar() {\n      cout << \"\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3060\u3088\\n\";\n  }\n\nprivate:\n  friend class Singleton;\n\n  Foo() {\n      cout << \"\u751f\u307e\u308c\u305f\u3088\\n\";\n  }\n\n  ~Foo() {\n      cout << \"\u6b7b\u3093\u3060\u3088\\n\";\n  }\n};\n\nint main(void)\n{\n    cout << \"*** CHECK POINT 1 ***\\n\";\n\n    Foo& foo = Foo::getInstance();\n    foo.bar();\n\n    cout << \"*** CHECK POINT 2 ***\\n\";\n\n}\n\n\n\n\u51fa\u529b\n*** CHECK POINT 1 ***\n\u751f\u307e\u308c\u305f\u3088\n\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3060\u3088\n*** CHECK POINT 2 ***\n\u6b7b\u3093\u3060\u3088\n\n\n\u51fa\u529b\u3092\u898b\u308b\u3068 CHECK POINT 1 \u3088\u308a\u5f8c\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u547c\u3070\u308c\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308a\u307e\u3059\u3002\u3010\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30af\u30e9\u30b9\u306e\u8981\u4ef6\u3011\u306b\u6319\u3052\u305f\u3001\u300c2. \u6700\u521d\u306b\u547c\u3070\u308c\u308b\u307e\u3067\u30e1\u30e2\u30ea\u3092\u5360\u6709\u3057\u306a\u3044\u300d\u304c\u6e80\u305f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u300c3. \u30d7\u30ed\u30b0\u30e9\u30e0\u7d42\u4e86\u6642\u306b\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u547c\u3070\u308c\u308b\u300d\u306e\u3082\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\u306a\u304b\u306a\u304b\u4fbf\u5229\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u88dc\u8db3\n\u5192\u982d\u306b\u6319\u3052\u305f StackOverflow \u306e\u8a18\u4e8b \u3067\u306f\u3001\u3053\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3057\u305f\u6a5f\u80fd\u306b\u52a0\u3048\u3001\u6700\u521d\u306e getInstance \u4f7f\u7528\u6642\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u3057\u3001\u5f15\u6570\u4ed8\u304d\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u547c\u3079\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\u305d\u3061\u3089\u3082\u3054\u53c2\u8003\u304f\u3060\u3055\u3044\u3002\n[CRTP](https://ja.wikibooks.org/wiki/More_C%2B%2B_Idioms/%E5%A5%87%E5%A6%99%E3%81%AB%E5%86%8D%E5%B8%B0%E3%81%97%E3%81%9F%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%28Curiously_Recurring_Template_Pattern%29) (\u5947\u5999\u306b\u518d\u5e30\u3057\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3) \u3092\u4f7f\u3063\u305f\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30dd\u30ea\u30b7\u30fc\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u4f7f\u3044\u56de\u3057\u305f\u3044\u3068\u8272\u3005\u8a66\u884c\u932f\u8aa4\u3057\u305f\u7d50\u679c\u3001\u6700\u7d42\u7684\u306b [StackOverflow \u306e\u3053\u306e\u8a18\u4e8b](http://stackoverflow.com/questions/24964769/singletons-curiously-recurring-template-pattern-and-forwarding-constructor-para) \u306b\u884c\u304d\u7740\u3044\u305f\u3002\n\n\u3053\u3053\u3067\u306f\u524d\u8ff0\u306e\u8a18\u4e8b\u304b\u3089\u6a5f\u80fd\u3092\u629c\u3044\u305f\u52a3\u5316\u7248\uff08\uff1f\uff09\u306e\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30af\u30e9\u30b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n# \u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30af\u30e9\u30b9\u306e\u8981\u4ef6\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u305f\u3044\u3068\u3044\u3046\u306e\u304c\u767a\u7aef\u3067\u3059\u3002\n\n1. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u53d6\u5f97\u306b\u4eee\u60f3\u95a2\u6570\u3092\u4f7f\u308f\u306a\u3044\n2. \u6700\u521d\u306b\u547c\u3070\u308c\u308b\u307e\u3067\u30e1\u30e2\u30ea\u3092\u5360\u6709\u3057\u306a\u3044\n3. \u30d7\u30ed\u30b0\u30e9\u30e0\u7d42\u4e86\u6642\u306b\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u547c\u3070\u308c\u308b\n4. \u4f7f\u3044\u56de\u305b\u3066\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u697d\n\n# \u6700\u7d42\u7684\u306a\u30b3\u30fc\u30c9\n\n```cpp:singleton.hpp\ntemplate<typename T>\nclass Singleton\n{\npublic:\n    //! \u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\n    static T& getInstance()\n    {\n        // \u6700\u521d\u306b\u547c\u3070\u308c\u305f\u3068\u304d\u306b\u4e00\u5ea6\u3060\u3051\u521d\u671f\u5316\u3055\u308c\u308b\n        static T singleton; \n        return singleton;\n    }\n    \nprotected:\n    Singleton() = default;\n    virtual ~Singleton() = default;\n    \n    // \u30b3\u30d4\u30fc\u30fb\u4ee3\u5165\u7981\u6b62\n    Singleton(const Singleton&) = delete;\n    Singleton& operator=(const Singleton&) = delete;\n};\n```\n\n# \u6700\u4f4e\u9650\u306e\u4f7f\u3044\u65b9\n\n\u6700\u4f4e\u9650\u306e\u30b3\u30fc\u30c9\u306f\u30af\u30e9\u30b9\u5b9a\u7fa9\u306b Singleton \u30af\u30e9\u30b9\u7d99\u627f\u3092\u8db3\u3057\u305f\u3060\u3051\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u3082\u306e\u3067\u3059\u3002\n\n```cpp\nclass Foo : public Singleton<Foo>\n{\n};\n```\n\n\u7d99\u627f\u5143\u3067\u3042\u308b `Singleton` \u30af\u30e9\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306b\u81ea\u5206\u81ea\u8eab (Foo) \u3092\u5165\u308c\u3066\u3044\u308b\u306e\u304c CRTP \u30a4\u30c7\u30a3\u30aa\u30e0\u7279\u6709\u306e\u3068\u3053\u308d\u3067\u3059\u3002\n\u898b\u6163\u308c\u306a\u3044\u3068\u5947\u5999\u306a\u611f\u3058\u3067\u3059\u304c\u4f7f\u7528\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## \u4f7f\u7528\u4f8b1\n\n```cpp:sample1.cpp\n#include <iostream>\n#include \"singleton.hpp\"\nusing namespace std;\n\nclass Foo : public Singleton<Foo>\n{\npublic:\n  void bar() {\n      cout << \"\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3060\u3088\\n\";\n  }\n};\n\nint main(void)\n{\n    cout << \"*** CHECK POINT 1 ***\\n\";\n    \n    Foo& foo = Foo::getInstance();\n    foo.bar();\n    \n    cout << \"*** CHECK POINT 2 ***\\n\";\n    \n}\n```\n\n```txt:\u51fa\u529b\n*** CHECK POINT 1 ***\n\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3060\u3088\n*** CHECK POINT 2 ***\n```\n\n`Foo::getInstance()` \u3092\u547c\u3076\u3068 `Singleton` \u30af\u30e9\u30b9\u306e `static T& getInstance()` \u304c\u547c\u3070\u308c\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570 `T` \u306b `Foo` \u304c\u6e21\u3055\u308c\u3066\u3044\u308b\u305f\u3081 `Foo&` \u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\u305d\u308c\u3067 `Foo` \u306e\u30e1\u30f3\u30d0\u95a2\u6570 `bar()` \u304c\u4f7f\u3048\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u304c CRTP \u306e\u30df\u30bd\u306e\u90e8\u5206\u3067\u3001\u300c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u53d6\u5f97\u306b\u4eee\u60f3\u95a2\u6570\u3092\u4f7f\u308f\u306a\u3044\u300d\u3068\u3044\u3046\u8981\u4ef6\u304c\u6e80\u305f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u57fa\u672c\u7684\u306a\u4f7f\u7528\u6cd5\u3053\u308c\u3060\u3051\u306a\u306e\u3067\u3059\u304c\u3001 `Foo` \u306b\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3084\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u6301\u305f\u305b\u305f\u3044\u3068\u304d\u306b\u306f\u3082\u3046\u3072\u3068\u4f5c\u696d\u5fc5\u8981\u3067\u3059\u3002\n\n# private \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fb\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\u3059\u308b\u6700\u4f4e\u9650\u306e\u30b3\u30fc\u30c9\n\n\u7d99\u627f\u5148\u306e\u30af\u30e9\u30b9\u3067 `Singleton` \u3092\u30d5\u30ec\u30f3\u30c9\u30af\u30e9\u30b9\u306b\u767b\u9332\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```cpp\nclass Foo : public Singleton<Foo>\n{\n  friend class Singleton;\n\n  Foo() { /* \u5b9f\u88c5 */ }\n  ~Foo() { /* \u5b9f\u88c5 */ }\n};\n```\n\n`Singleton::getInstance` \u5185\u3067 `Foo` \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u305f\u3081\u3001 `Singleton` \u30af\u30e9\u30b9\u304c `Foo` \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fb\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u3052\u308b\u305f\u3081\u3067\u3059\u3002\n\n## \u4f7f\u7528\u4f8b2\n\nprivate \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fb\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u4f7f\u7528\u4f8b\u3067\u3059\u3002\n\n```cpp:sample2.cpp\n#include <iostream>\n#include \"singleton.hpp\"\nusing namespace std;\n\nclass Foo : public Singleton<Foo>\n{\npublic:\n  \n  void bar() {\n      cout << \"\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3060\u3088\\n\";\n  }\n  \nprivate:\n  friend class Singleton;\n\n  Foo() {\n      cout << \"\u751f\u307e\u308c\u305f\u3088\\n\";\n  }\n  \n  ~Foo() {\n      cout << \"\u6b7b\u3093\u3060\u3088\\n\";\n  }\n};\n\nint main(void)\n{\n    cout << \"*** CHECK POINT 1 ***\\n\";\n    \n    Foo& foo = Foo::getInstance();\n    foo.bar();\n    \n    cout << \"*** CHECK POINT 2 ***\\n\";\n    \n}\n```\n\n```txt:\u51fa\u529b\n*** CHECK POINT 1 ***\n\u751f\u307e\u308c\u305f\u3088\n\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3060\u3088\n*** CHECK POINT 2 ***\n\u6b7b\u3093\u3060\u3088\n```\n\n\u51fa\u529b\u3092\u898b\u308b\u3068 CHECK POINT 1 \u3088\u308a\u5f8c\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u547c\u3070\u308c\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308a\u307e\u3059\u3002\u3010\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30af\u30e9\u30b9\u306e\u8981\u4ef6\u3011\u306b\u6319\u3052\u305f\u3001\u300c2. \u6700\u521d\u306b\u547c\u3070\u308c\u308b\u307e\u3067\u30e1\u30e2\u30ea\u3092\u5360\u6709\u3057\u306a\u3044\u300d\u304c\u6e80\u305f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u300c3. \u30d7\u30ed\u30b0\u30e9\u30e0\u7d42\u4e86\u6642\u306b\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u547c\u3070\u308c\u308b\u300d\u306e\u3082\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\u306a\u304b\u306a\u304b\u4fbf\u5229\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n# \u88dc\u8db3\n\n\u5192\u982d\u306b\u6319\u3052\u305f [StackOverflow \u306e\u8a18\u4e8b](http://stackoverflow.com/questions/24964769/singletons-curiously-recurring-template-pattern-and-forwarding-constructor-para) \u3067\u306f\u3001\u3053\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3057\u305f\u6a5f\u80fd\u306b\u52a0\u3048\u3001\u6700\u521d\u306e `getInstance` \u4f7f\u7528\u6642\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u3057\u3001\u5f15\u6570\u4ed8\u304d\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u547c\u3079\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\u305d\u3061\u3089\u3082\u3054\u53c2\u8003\u304f\u3060\u3055\u3044\u3002\n", "tags": ["C++", "DesignPatterns"]}