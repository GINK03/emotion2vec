{"context": "\u524d v3.15.0 | \u6b21 v3.17.0\n\nESLint v3.16.0 has been released: https://t.co/bwDUMT8n4K\u2014 ESLint (@geteslint) 2017\u5e742\u670820\u65e5\n\nESLint 3.16.0 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u3002\n\u3044\u304f\u3064\u304b\u306e\u6a5f\u80fd\u8ffd\u52a0\u30fb\u30d0\u30b0\u4fee\u6b63\u304c\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30d7\u30e9\u30b0\u30a4\u30f3\u958b\u767a\u8005\u5411\u3051\u306e\u5909\u66f4\u304c\u4e3b\u3067\u3059\u3002\n\u8cea\u554f\u3084\u30d0\u30b0\u5831\u544a\u7b49\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u304a\u6c17\u8efd\u306b\u3053\u3061\u3089\u307e\u3067\u304a\u5bc4\u305b\u304f\u3060\u3055\u3044\u3002\n\n\n \u65e5\u672c\u8a9e Issue \u7ba1\u7406\u30ea\u30dd\u30b8\u30c8\u30ea\n\n\n \u65e5\u672c\u8a9e\u30b5\u30dd\u30fc\u30c8 \u30c1\u30e3\u30c3\u30c8\n\n\n \u672c\u5bb6\u30ea\u30dd\u30b8\u30c8\u30ea\n\n\n \u672c\u5bb6\u30b5\u30dd\u30fc\u30c8 \u30c1\u30e3\u30c3\u30c8\n\n\n\n\n\u2728 \u672c\u4f53\u306e\u5909\u66f4\n\n#7810: \u30c8\u30fc\u30af\u30f3\u30fb\u30b3\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b API \u3092\u6539\u5584\n\u30d7\u30e9\u30b0\u30a4\u30f3\u30fb\u30ab\u30b9\u30bf\u30e0 \u30eb\u30fc\u30eb\u958b\u767a\u8005\u5411\u3051\u3067\u3059\u3002\nAST \u30ce\u30fc\u30c9\u3092\u69cb\u6210\u3059\u308b\u30c8\u30fc\u30af\u30f3\u30fb\u30b3\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u516c\u958b API \u304c\u6539\u5584\u3055\u308c\u307e\u3057\u305f\u3002\n\nincludeComments \u30aa\u30d7\u30b7\u30e7\u30f3\n\u5f93\u6765\u306f\u3001\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u3068\u3001\u30c8\u30fc\u30af\u30f3\u304b\u30b3\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u3068\u3067\u7570\u306a\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\n\u4f8b\nsourceCode.getTokenAfter(node);\nsourceCode.getTokenOrCommentAfter(node);\n\n\n\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c 10 \u7a2e\u985e (Before, After, Between, First, Last, \u305d\u308c\u305e\u308c\u5358\u6570\u30fb\u8907\u6570) \u3042\u308b\u306e\u306b\u5bfe\u3057\u3066\u3001\u30c8\u30fc\u30af\u30f3\u304b\u30b3\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306f 2 \u7a2e\u985e\u3060\u3051\u3067\u3057\u305f\u3002\u4eca\u56de\u3001\u5404\u30e1\u30bd\u30c3\u30c9\u306b\u53d6\u5f97\u5bfe\u8c61\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u542b\u3081\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u3001getTokenOrCommentAfter\u3068getTokenOrCommentBefore\u306f\u975e\u63a8\u5968\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u4f8b\nsourceCode.getTokenAfter(node);\nsourceCode.getTokenAfter(node, {includeComments: true});\n\n\n\nfilter \u30aa\u30d7\u30b7\u30e7\u30f3\n\u30eb\u30fc\u30eb\u3092\u66f8\u3044\u3066\u3044\u308b\u3068\u300c\u30ce\u30fc\u30c9\u306e\u6b21\u306e\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3057\u305f\u3044\u304c\u3001\u9589\u3058\u30ab\u30c3\u30b3\u306f\u7121\u8996\u3057\u305f\u3044\u300d\u3068\u3044\u3046\u3088\u3046\u306a\u5834\u5408\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002\u5f93\u6765\u306f\u30eb\u30fc\u30d7\u6587\u3092\u7528\u3044\u3066\u63a2\u7d22\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u4f8b\nlet operatorToken = sourceCode.getTokenAfter(node.left);   \nwhile (operatorToken.value === \")\") {    \n    operatorToken = sourceCode.getTokenAfter(operatorToken);    \n} \n\n\n\u4eca\u56de\u3001\u6307\u5b9a\u3057\u305f\u6761\u4ef6\u306b\u30de\u30c3\u30c1\u3057\u306a\u3044\u30c8\u30fc\u30af\u30f3\u3092\u7121\u8996\u3059\u308b\u305f\u3081\u306e filter \u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u4f8b\nconst operatorToken = sourceCode.getTokenAfter(node.left, {filter: t => t.value !== \")\"});\n\n\n\n#8035, #8054: \u5927\u304d\u306a\u30d5\u30a1\u30a4\u30eb\u5411\u3051\u306e\u6027\u80fd\u6539\u5584\neslint --fix \u7b49\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u898b\u76f4\u3057\u3066\u3001\u8a08\u7b97\u91cf (O(n)\u7684\u306a\u3084\u3064) \u3092\u6539\u5584\u3057\u307e\u3057\u305f\u3002\n\u5927\u304d\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u6642\u306e\u6027\u80fd\u304c\u6539\u5584\u3057\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\ud83d\udca1 \u65b0\u3057\u3044\u30eb\u30fc\u30eb\n\u4eca\u56de\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\ud83d\udd27 \u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u305f\u30eb\u30fc\u30eb\n\u4eca\u56de\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u2712\ufe0f eslint --fix \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u30eb\u30fc\u30eb\n\n#7841: no-unused-labels\n\n\n\u4f8b\nfoo: while (a) { foo(a) }\n\n// gets fixed to:\n\nwhile (a) { foo(a) }\n\n\n\n\u304a\u307e\u3051\n\nExcited about the new token iterator options for rule authors included in this release! Great work by @mysticatea https://t.co/HmPjvykByd\u2014 Kai Cataldo (@kai_cataldo) 2017\u5e742\u670820\u65e5\n\n\u524d [v3.15.0] | \u6b21 [v3.17.0]\n\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"en\" dir=\"ltr\">ESLint v3.16.0 has been released: <a href=\"https://t.co/bwDUMT8n4K\">https://t.co/bwDUMT8n4K</a></p>&mdash; ESLint (@geteslint) <a href=\"https://twitter.com/geteslint/status/833726987218874372\">2017\u5e742\u670820\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nESLint 3.16.0 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u3002\n\u3044\u304f\u3064\u304b\u306e\u6a5f\u80fd\u8ffd\u52a0\u30fb\u30d0\u30b0\u4fee\u6b63\u304c\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u30d7\u30e9\u30b0\u30a4\u30f3\u958b\u767a\u8005\u5411\u3051\u306e\u5909\u66f4\u304c\u4e3b\u3067\u3059\u3002\n\n\u8cea\u554f\u3084\u30d0\u30b0\u5831\u544a\u7b49\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u304a\u6c17\u8efd\u306b\u3053\u3061\u3089\u307e\u3067\u304a\u5bc4\u305b\u304f\u3060\u3055\u3044\u3002\n\n- :globe_with_meridians: [\u65e5\u672c\u8a9e Issue \u7ba1\u7406\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/eslint/eslint-jp)\n- :speech_balloon: [\u65e5\u672c\u8a9e\u30b5\u30dd\u30fc\u30c8 \u30c1\u30e3\u30c3\u30c8](https://gitter.im/eslint/eslint-jp)\n- :globe_with_meridians: [\u672c\u5bb6\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/eslint/eslint)\n- :speech_balloon: [\u672c\u5bb6\u30b5\u30dd\u30fc\u30c8 \u30c1\u30e3\u30c3\u30c8](https://gitter.im/eslint/eslint)\n\n----\n\n# \u2728 \u672c\u4f53\u306e\u5909\u66f4\n\n## [#7810]: \u30c8\u30fc\u30af\u30f3\u30fb\u30b3\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b API \u3092\u6539\u5584\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u30fb\u30ab\u30b9\u30bf\u30e0 \u30eb\u30fc\u30eb\u958b\u767a\u8005\u5411\u3051\u3067\u3059\u3002\nAST \u30ce\u30fc\u30c9\u3092\u69cb\u6210\u3059\u308b\u30c8\u30fc\u30af\u30f3\u30fb\u30b3\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u516c\u958b API \u304c\u6539\u5584\u3055\u308c\u307e\u3057\u305f\u3002\n\n### `includeComments` \u30aa\u30d7\u30b7\u30e7\u30f3\n\n\u5f93\u6765\u306f\u3001\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u3068\u3001\u30c8\u30fc\u30af\u30f3\u304b\u30b3\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u3068\u3067\u7570\u306a\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\n```js:\u4f8b\nsourceCode.getTokenAfter(node);\nsourceCode.getTokenOrCommentAfter(node);\n```\n\n\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c 10 \u7a2e\u985e (Before, After, Between, First, Last, \u305d\u308c\u305e\u308c\u5358\u6570\u30fb\u8907\u6570) \u3042\u308b\u306e\u306b\u5bfe\u3057\u3066\u3001\u30c8\u30fc\u30af\u30f3\u304b\u30b3\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306f 2 \u7a2e\u985e\u3060\u3051\u3067\u3057\u305f\u3002\u4eca\u56de\u3001\u5404\u30e1\u30bd\u30c3\u30c9\u306b\u53d6\u5f97\u5bfe\u8c61\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u542b\u3081\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u3001`getTokenOrCommentAfter`\u3068`getTokenOrCommentBefore`\u306f\u975e\u63a8\u5968\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```js:\u4f8b\nsourceCode.getTokenAfter(node);\nsourceCode.getTokenAfter(node, {includeComments: true});\n```\n\n### `filter` \u30aa\u30d7\u30b7\u30e7\u30f3\n\n\u30eb\u30fc\u30eb\u3092\u66f8\u3044\u3066\u3044\u308b\u3068\u300c\u30ce\u30fc\u30c9\u306e\u6b21\u306e\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3057\u305f\u3044\u304c\u3001\u9589\u3058\u30ab\u30c3\u30b3\u306f\u7121\u8996\u3057\u305f\u3044\u300d\u3068\u3044\u3046\u3088\u3046\u306a\u5834\u5408\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002\u5f93\u6765\u306f\u30eb\u30fc\u30d7\u6587\u3092\u7528\u3044\u3066\u63a2\u7d22\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n```js:\u4f8b\nlet operatorToken = sourceCode.getTokenAfter(node.left);   \nwhile (operatorToken.value === \")\") {    \n    operatorToken = sourceCode.getTokenAfter(operatorToken);    \n} \n```\n\n\u4eca\u56de\u3001\u6307\u5b9a\u3057\u305f\u6761\u4ef6\u306b\u30de\u30c3\u30c1\u3057\u306a\u3044\u30c8\u30fc\u30af\u30f3\u3092\u7121\u8996\u3059\u308b\u305f\u3081\u306e `filter` \u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n```js:\u4f8b\nconst operatorToken = sourceCode.getTokenAfter(node.left, {filter: t => t.value !== \")\"});\n```\n\n## [#8035], [#8054]: \u5927\u304d\u306a\u30d5\u30a1\u30a4\u30eb\u5411\u3051\u306e\u6027\u80fd\u6539\u5584\n\n`eslint --fix` \u7b49\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u898b\u76f4\u3057\u3066\u3001\u8a08\u7b97\u91cf (`O(n)`\u7684\u306a\u3084\u3064) \u3092\u6539\u5584\u3057\u307e\u3057\u305f\u3002\n\u5927\u304d\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u6642\u306e\u6027\u80fd\u304c\u6539\u5584\u3057\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \ud83d\udca1 \u65b0\u3057\u3044\u30eb\u30fc\u30eb\n\n\u4eca\u56de\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n# \ud83d\udd27 \u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u305f\u30eb\u30fc\u30eb\n\n\u4eca\u56de\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n# \u2712\ufe0f `eslint --fix` \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u30eb\u30fc\u30eb\n\n## [#7841]: [no-unused-labels]\n\n```js:\u4f8b\nfoo: while (a) { foo(a) }\n\n// gets fixed to:\n\nwhile (a) { foo(a) }\n```\n\n----\n\n[v3.15.0]: http://qiita.com/mysticatea/items/98e996a608d2271cf1c9\n[v3.17.0]: http://qiita.com/mysticatea/items/a2d72c76671c2197c712\n[#7810]: https://github.com/eslint/eslint/issues/7810\n[#8035]: https://github.com/eslint/eslint/issues/8035\n[#8054]: https://github.com/eslint/eslint/issues/8054\n[#7841]: https://github.com/eslint/eslint/issues/7841\n[#9999]: https://github.com/eslint/eslint/issues/9999\n[no-unused-labels]: http://eslint.org/docs/rules/no-unused-labels\n[xxxx]: http://eslint.org/docs/rules/xxxx\n\n<!-- \n![JSCS Icon](http://jscs.info/favicon.ico) JSCS \u4e92\u63db\u30eb\u30fc\u30eb\u3067\u3059\u3002\n-->\n\n\u304a\u307e\u3051\n\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"en\" dir=\"ltr\">Excited about the new token iterator options for rule authors included in this release! Great work by <a href=\"https://twitter.com/mysticatea\">@mysticatea</a> <a href=\"https://t.co/HmPjvykByd\">https://t.co/HmPjvykByd</a></p>&mdash; Kai Cataldo (@kai_cataldo) <a href=\"https://twitter.com/kai_cataldo/status/833733546317606913\">2017\u5e742\u670820\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n", "tags": ["ESLint", "JavaScript", "Node.js"]}