{"context": "Xcode \u6a19\u6e96\u306e XCTest Framework \u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u306b\u3064\u3044\u3066\u6574\u7406\u3002\n\n\u5c0e\u5165\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u6642\u306b\u5c0e\u5165\u3059\u308b\u5834\u5408\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u30c6\u30b9\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u542b\u3081\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u65e2\u5b58\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5c0e\u5165\u3059\u308b\u5834\u5408\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u3053\u306e\u3088\u3046\u306b\u30c6\u30b9\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n\u30c6\u30b9\u30c8\u5b9f\u884c\n\u5168\u3066\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306f\u3001 Product -> Test \u3082\u3057\u304f\u306f \u2318 + U \u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u30e1\u30bd\u30c3\u30c9\u5358\u4f4d\u3084\u30af\u30e9\u30b9\u5358\u4f4d\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306f\u3001\u3053\u306e\u3088\u3046\u306b Test Navigator \u3084\u30a8\u30c7\u30a3\u30bf\u30fc\u3067\u30c6\u30b9\u30c8\u5bfe\u8c61\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u5408\u308f\u305b\u308b\u3068\u30c6\u30b9\u30c8\u5b9f\u884c\u30dc\u30bf\u30f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u3053\u308c\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3053\u3068\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\n\n\u30c6\u30b9\u30c8\u7d50\u679c\n\u30c6\u30b9\u30c8\u7d50\u679c\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u5931\u6557\u3059\u308b\u3068\u8d64\u8272\u306e\u30a2\u30a4\u30b3\u30f3\u304c\u8868\u793a\u3055\u308c\u3001\u6210\u529f\u3059\u308b\u3068\u7dd1\u8272\u306e\u30a2\u30a4\u30b3\u30f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306f - (void)testXXX \u306e\u3088\u3046\u306b\u982d\u306b test \u3092\u3064\u3051\u307e\u3059\u3002\u3053\u308c\u3067\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30c6\u30b9\u30c8\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u3060\u3068 Xcode \u304c\u81ea\u52d5\u7684\u306b\u5224\u65ad\u3057\u307e\u3059\u3002\n\u5024\u306e\u78ba\u8a8d\u306f XCTAssertNotNil \u3084 XCTAssertTrue \u306a\u3069\u306e\u3088\u3046\u306b XCTAssertXXX \u3068\u3044\u3063\u305f\u30de\u30af\u30ed\u3092\u5229\u7528\u3057\u3066\u884c\u3044\u307e\u3059\u3002\n\n\u623b\u308a\u5024\n\u623b\u308a\u5024\u306e\u78ba\u8a8d\u3092\u3059\u308b\u5834\u5408\u306f\u3001\u7d20\u76f4\u306b\u6bd4\u8f03\u3057\u307e\u3059\u3002\n\nsampleTests.m\n- (void)testReturnValue {\n    DataManager *manager = [[DataManager alloc] init];\n    NSDictionary *userData = [manager selectUserData];\n\n    // \u623b\u308a\u5024\u3092\u78ba\u8a8d\u3059\u308b\u5834\u5408\u306f\u3001\u7d20\u76f4\u306b\u6bd4\u8f03\u3059\u308b\u3002\n    XCTAssertNotNil(userData);\n\n    XCTAssertNotNil(userData[UserDataUsername]);\n    XCTAssertEqualObjects(userData[UserDataUsername], @\"TEST1234\");\n\n    XCTAssertNotNil(userData[UserDataUUID]);\n    XCTAssertEqualObjects(userData[UserDataUUID], @\"CAD34831-E763-45A9-8BA2-31991DCB682B\");\n\n    XCTAssertNotNil(userData[UserDataRank]);\n    XCTAssertEqual([userData[UserDataRank] longValue], 1);\n\n    XCTAssertNotNil(userData[UserDataLatestAccessDate]);\n}\n\n\nXCTAssertNotNil \u306b\u3066\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c nil \u3067\u3042\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\nXCTAssertEqual \u3084 XCTAssertEqualObjects \u306b\u3066\u671f\u5f85\u3057\u305f\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\n\n\u975e\u540c\u671f\u51e6\u7406\n\u901a\u4fe1\u51e6\u7406\u306b\u4ee3\u8868\u3055\u308c\u308b\u975e\u540c\u671f\u51e6\u7406\u306e\u30c6\u30b9\u30c8\u3092\u3059\u308b\u306b\u306f XCTestExpectation \u3092\u5229\u7528\u3057\u3066\u884c\u3044\u307e\u3059\u3002\n\u975e\u540c\u671f\u51e6\u7406\u306e\u5b8c\u4e86\u6642\u306b -fulfill \u3092\u547c\u3073\u51fa\u3057\u3001\u975e\u540c\u671f\u51e6\u7406\u306e\u76e3\u8996\u3092\u7d42\u4e86\u3055\u305b\u307e\u3059\u3002\n\u76e3\u8996\u3059\u308b\u6642\u9593\uff08\u79d2\u6570\uff09\u306f -waitForExpectationsWithTimeout:handler: \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u6307\u5b9a\u3057\u305f\u6642\u9593\u4ee5\u5185\u306b\u51e6\u7406\u304c\u7d42\u308f\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u30c6\u30b9\u30c8\u5931\u6557\u3068\u306a\u308a\u307e\u3059\u3002\n\nBlocks\nBlocks \u306e\u5834\u5408\u306f\u3001 -expectationWithDescription: \u3067\u76e3\u8996\u7528\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001\u975e\u540c\u671f\u51e6\u7406\u5b8c\u4e86\u6642\u306b\u547c\u3070\u308c\u308b Blocks \u306e\u4e2d\u3067\u5024\u306e\u691c\u8a3c\u3092\u884c\u3044\u307e\u3059\u3002\n\nsampleTests.m\n- (void)testCallApiBlocks {\n    // \u975e\u540c\u671f\u51e6\u7406\u306e\u5b8c\u4e86\u3092\u76e3\u8996\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n    XCTestExpectation *expectation = [self expectationWithDescription:@\"CallApiBlocks\"];\n\n    NetworkManager *manager = [[NetworkManager alloc] init];\n    [manager callApiWithCommand:@\"update\" parameters:nil completionHandler:^(BOOL result, NSDictionary * _Nullable resultData, NSError * _Nullable error) {\n        // \u975e\u540c\u671f\u51e6\u7406\u306e\u76e3\u8996\u3092\u7d42\u4e86\n        [expectation fulfill];\n        // \u7d50\u679c\u3092\u78ba\u8a8d\n        XCTAssertNotNil(resultData, @\"result data is nil.\");\n    }];\n\n    // \u6307\u5b9a\u79d2\u6570\uff08\uff16\uff10\u79d2\uff09\u5f85\u3064\n    [self waitForExpectationsWithTimeout:60 handler:^(NSError * _Nullable error) {\n        XCTAssertNil(error, @\"has error.\");\n    }];\n}\n\n\n\nDelegate\nDelegate \u306e\u5834\u5408\u3082\u3001-expectationWithDescription: \u3067\u76e3\u8996\u7528\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001 Delegate \u306e\u8a2d\u5b9a\u3092\u884c\u3044\u3001\u975e\u540c\u671f\u51e6\u7406\u5b8c\u4e86\u6642\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u5024\u306e\u691c\u8a3c\u3092\u884c\u3044\u307e\u3059\u3002\n\nsampleTests.m\n- (void)testCallApiDelegate {\n    // \u975e\u540c\u671f\u51e6\u7406\u306e\u5b8c\u4e86\u3092\u76e3\u8996\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n    callApiExpectation = [self expectationWithDescription:@\"CallApiDelegate\"];\n\n    NetworkManager *manager = [[NetworkManager alloc] init];\n    manager.delegate = self;\n    [manager callApiWithCommand:@\"update\" parameters:nil completionHandler:nil];\n\n    // \u6307\u5b9a\u79d2\u6570\u5f85\u3064\n    [self waitForExpectationsWithTimeout:60 handler:^(NSError * _Nullable error) {\n        XCTAssertNil(error, @\"has error.\");\n    }];\n}\n\n- (void)callbackApiResult:(NSDictionary *)result\n{\n    // \u975e\u540c\u671f\u51e6\u7406\u306e\u76e3\u8996\u3092\u7d42\u4e86\n    [callApiExpectation fulfill];\n    // \u7d50\u679c\u3092\u78ba\u8a8d\n    XCTAssertNotNil(result, @\"Api Resut is nil.\");\n}\n\n\n\nNotification\nNotification \u306e\u5834\u5408\u306f\u3001 -expectationForNotification:object:handler: \u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e\u901a\u77e5\u304c\u6765\u308b\u3068 handler \u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u3053\u306e\u4e2d\u3067\u5024\u306e\u691c\u8a3c\u3092\u884c\u3044\u307e\u3059\u3002\u307e\u305f\u3001handler \u304c nil \u306e\u5834\u5408\u3001\u901a\u77e5\u304c\u6765\u308b\u3068\u7121\u6761\u4ef6\u3067\u30c6\u30b9\u30c8\u6210\u529f\u3068\u306a\u308a\u307e\u3059\u3002\n\nsampleTests.m\n- (void)testCallApiNotification {\n    // \u901a\u77e5\u3092\u76e3\u8996\u3059\u308b\n    [self expectationForNotification:ApiCallbackNotification object:nil handler:^BOOL(NSNotification * _Nonnull notification) {\n        // \u7d50\u679c\u3092\u78ba\u8a8d\n        XCTAssertNotNil([notification object], @\"Notification object is nil.\");\n        // \u901a\u77e5\u306e\u76e3\u8996\u3092\u7d42\u4e86\n        return YES;\n    }];\n\n    NetworkManager *manager = [[NetworkManager alloc] init];\n    [manager callApiWithCommand:@\"update\" parameters:nil completionHandler:nil];\n\n    // \u6307\u5b9a\u79d2\u6570\u5f85\u3064\n    [self waitForExpectationsWithTimeout:60 handler:^(NSError * _Nullable error) {\n        XCTAssertNil(error, @\"has error.\");\n    }];\n}\n\n\n\nUI\u30c6\u30b9\u30c8\nUI\u30c6\u30b9\u30c8\u306f\u3001\u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u3092\u52d5\u304b\u3057\u306a\u304c\u3089\u306e\u30c6\u30b9\u30c8\u3068\u3001\u30ed\u30b8\u30c3\u30af\u30c6\u30b9\u30c8\u3068\u540c\u69d8\u306b ViewController \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u3066\u306e\u30c6\u30b9\u30c8\u306e\u4e8c\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u6e96\u5099\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u304b\u3089\u753b\u9762\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5bfe\u8c61\u3068\u306a\u308b View \u306e  accessibilityIdentifier \u3068 viewTag \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\n\nViewController.m\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    // Do any additional setup after loading the view, typically from a nib.\n\n    // \u30c6\u30b9\u30c8\u5bfe\u8c61\u3068\u3059\u308b View \u306e accessibilityIdentifier \u3068 viewTag \u3092\u8a2d\u5b9a\u3059\u308b\u3002\n    self.lblUsername.accessibilityIdentifier = ViewIdentifierUsernameLabel;\n    self.lblUsername.tag = MainViewTagUsernameLabel;\n    self.btnCallApi.accessibilityIdentifier = ViewIdentifierCallApiButton;\n    self.btnCallApi.tag = MainViewTagCallApiButton;\n    self.btnImageDownload.accessibilityIdentifier = ViewIdentifierImageDownloadButton;\n    self.btnImageDownload.tag = MainViewTagImageDownloadButton;\n    self.btnShowNextView.accessibilityIdentifier = ViewIdentifierShowNextViewButton;\n    self.btnShowNextView.tag = MainViewTagShowNextViewButton;\n    self.btnShowAlertView.accessibilityIdentifier = ViewIdentifierShowAlertViewButton;\n    self.btnShowAlertView.tag = MainViewTagShowAlertViewButton;\n\n    /* \u7701\u7565 */\n}\n\n\n\u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5bfe\u8c61\u3068\u3057\u305f\u30c6\u30b9\u30c8\u3067\u753b\u9762\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f accessibilityIdentifier \u3067\u6307\u5b9a\u3057\u305f\u5024\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3001ViewController \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5bfe\u8c61\u3068\u3057\u305f\u30c6\u30b9\u30c8\u3067\u753b\u9762\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f viewTag \u3067\u6307\u5b9a\u3057\u305f\u5024\u3067\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\nViewController \u306b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u7528\u610f\u3057\u3066 Interface Builder \u3068\u9023\u643a\u3055\u305b\u3066\u3082\u3001\u30c6\u30b9\u30c8\u6642\u306b\u306f\u3053\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304b\u3089\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u8868\u793a\u5185\u5bb9\u306e\u78ba\u8a8d\n\n\u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\nsampleUITests.m\n- (void)testViewContentsForTestApplication {\n    // \u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n    // accessibilityIdentifier \u306b ViewIdentifierUsernameLabel \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UILabel \u3092\u53d6\u5f97\n    XCUIElement *labelElement = app.staticTexts[ViewIdentifierUsernameLabel];\n    // UILabel \u306e text \u3092\u78ba\u8a8d\n    XCTAssertEqualObjects(labelElement.label, @\"TEST1234\", @\"Usename is not expected value.\");\n}\n\n\n\n\u30af\u30e9\u30b9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\nViewController \u30af\u30e9\u30b9\u304b\u3089\u76f4\u63a5\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u7279\u306b\u6ce8\u610f\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u3067\u3059\u304c\u3001 Storyboard \u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u3001bundle \u306e\u6307\u5b9a\u3092\u6ce8\u610f\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u30a2\u30d7\u30ea\u672c\u4f53\u5074\u3067 Storyboard \u3092\u53d6\u5f97\u3059\u308b\u5834\u5408\u306f\u3001bundle \u306f nil \u3067\u554f\u984c\u306a\u3044\u3067\u3059\u304c\u3001\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u5074\u3067 Storyboard \u3092\u53d6\u5f97\u3059\u308b\u5834\u5408\u306f\u3001bundle \u306b\u306f\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u542b\u3080 bundle \u3092\u8a2d\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\nsampleUITests.m\n- (void)testViewContentsForClassInstance {\n    // Storybord \u3092\u53d6\u5f97\u3002Bundle \u306e\u6307\u5b9a\u306b\u6ce8\u610f\u3059\u308b\u3002\n    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@\"Main\" bundle:[NSBundle bundleForClass:[self class]]];\n    // \u78ba\u8a8d\u3057\u305f\u3044\u3000View Controller \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3002\n    ViewController *mainVC = [storyboard instantiateInitialViewController];\n    XCTAssertNotNil(mainVC, @\"View controller is nil.\");\n    XCTAssertTrue([mainVC isKindOfClass:[ViewController class]], @\"Target is not 'ViewController'\");\n\n    // UILabel \u3092\u53d6\u5f97\n    UILabel *lblUsername = [mainVC.view viewWithTag:MainViewTagUsernameLabel];\n    XCTAssertNotNil(lblUsername, @\"Username label is nil.\");\n    XCTAssertTrue([lblUsername isKindOfClass:[UILabel class]], @\"Target is not 'UILabel'\");\n\n    // UILabel \u306e text \u3092\u78ba\u8a8d\n    XCTAssertEqualObjects(lblUsername.text, @\"TEST1234\", @\"Usename is not expected value.\");\n}\n\n\n\n\u753b\u9762\u64cd\u4f5c\u306e\u78ba\u8a8d\n\u753b\u9762\u64cd\u4f5c\u306e\u78ba\u8a8d\u306f\u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u3092\u5229\u7528\u3057\u305f\u65b9\u304c\u4fbf\u5229\u3067\u3059\u3002\nViewController \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u30b3\u30fc\u30c9\u3092\u5225\u9014\u7528\u610f\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\nsampleUITests.m\n- (void)testCountUp {\n    // \u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n    // accessibilityIdentifier \u306b ViewIdentifierNumberLabel \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UILabel \u3092\u53d6\u5f97\n    XCUIElement *labelElement = app.staticTexts[ViewIdentifierNumberLabel];\n    // \u521d\u671f\u5024\u3092\u78ba\u8a8d\n    XCTAssertEqualObjects(labelElement.label, @\"1\");\n\n    // accessibilityIdentifier \u306b ViewIdentifierCountUpButton \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIButton \u3092\u53d6\u5f97\n    XCUIElement *buttonElement = app.staticTexts[ViewIdentifierCountUpButton];\n    // \u30dc\u30bf\u30f3\u3092\uff13\u56de\u30bf\u30c3\u30d7\n    [buttonElement tap]; // 1 -> 2\n    [buttonElement tap]; // 2 -> 3\n    [buttonElement tap]; // 3 -> 4\n\n    // UILabel \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\n    XCTAssertEqualObjects(labelElement.label, @\"4\");\n}\n\n\n\n\u975e\u540c\u671f\u51e6\u7406\u306e\u78ba\u8a8d\nAPI\u30ea\u30af\u30a8\u30b9\u30c8\u306a\u3069\u975e\u540c\u671f\u51e6\u7406\u3092\u4f34\u3046\u30c6\u30b9\u30c8\u3092\u884c\u3046\u306b\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u5b9f\u884c\u6642\u3068\u975e\u540c\u671f\u51e6\u7406\u7d42\u4e86\u6642\u306b\u72b6\u614b\u304c\u5909\u308f\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u5b9f\u884c\u6642\u306b\u306f\u8aad\u307f\u8fbc\u307f\u4e2d\u753b\u9762\u3092\u8868\u793a\u3057\u3001\u975e\u540c\u671f\u51e6\u7406\u304c\u7d42\u4e86\u3057\u305f\u3089\u3053\u306e\u753b\u9762\u3092\u975e\u8868\u793a\u306b\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u3001 -expectationForPredicate:evaluatedWithObject:handler: \u3092\u5229\u7528\u3057\u3066\u6307\u5b9a\u3057\u305f\u6761\u4ef6\u3068\u306a\u308b\u307e\u3067\u5f85\u3064\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nsampleUITests.m\n- (void)testCallApi {\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n\n    // accessibilityIdentifier \u306b ViewIdentifierCallApiButton \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIButton \u3092\u53d6\u5f97\n    XCUIElement *buttonElement = app.buttons[ViewIdentifierCallApiButton];\n    // \u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\n    [buttonElement tap];\n\n    // \u975e\u540c\u671f\u51e6\u7406\u4e2d\u306f View \u3092\u8868\u793a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\n    // accessibilityIdentifier \u306b ViewIdentifierLoadingView \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIView \u3092\u53d6\u5f97\n    XCUIElement *loadingElement = app.otherElements[ViewIdentifierLoadingView];\n    // \u975e\u540c\u671f\u51e6\u7406\u4e2d\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b View \u304c\u975e\u8868\u793a\u306b\u306a\u308b\u307e\u3067\u6307\u5b9a\u79d2\u6570\uff08\uff15\u79d2\uff09\u5f85\u3064\u3002\n    NSPredicate *predicate = [NSPredicate predicateWithFormat:@\"exists == NO\"];\n    [self expectationForPredicate:predicate evaluatedWithObject:loadingElement handler:nil];\n    [self waitForExpectationsWithTimeout:5 handler:nil];\n\n    // \u975e\u540c\u671f\u51e6\u7406\u306e\u7d50\u679c\u3092\u78ba\u8a8d\u3059\u308b\n    XCUIElement *labelElement = app.staticTexts[ViewIdentifierUsernameLabel];\n    XCTAssertEqualObjects(labelElement.label, @\"TEST5678\", @\"Usename is not default value.\");\n}\n\n\n\n\u30a2\u30e9\u30fc\u30c8\u8868\u793a\u306e\u78ba\u8a8d\n\n\u3053\u306e\u3088\u3046\u306a\u30a2\u30e9\u30fc\u30c8\u306e\u78ba\u8a8d\u3092\u3059\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30bf\u30a4\u30c8\u30eb\u306b\u8a2d\u5b9a\u3057\u305f\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u3066\u30a2\u30e9\u30fc\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u30dc\u30bf\u30f3\u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u306b\u30dc\u30bf\u30f3\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\nsampleUITests.m\n- (void)testAlertMessageCancel {\n    // \u30a2\u30e9\u30fc\u30c8\u3092\u8868\u793a\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n    [app.buttons[ViewIdentifierShowAlertViewButton] tap];\n\n    // \u8868\u793a\u3055\u308c\u305f\u30a2\u30e9\u30fc\u30c8\u306e Cancel \u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\n    XCUIElementQuery *collectionViewsQuery = app.alerts[@\"Title\"].collectionViews;\n    XCUIElement *cancelButton = collectionViewsQuery.buttons[@\"Cancel\"];\n    [cancelButton tap];\n\n    // \u753b\u9762\u306e\u8868\u793a\u5185\u5bb9\u304c\u5909\u308f\u3063\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\n    XCUIElement *labelElement = app.staticTexts[ViewIdentifierUsernameLabel];\n    XCTAssertEqualObjects(labelElement.label, @\"TEST1234\", @\"Usename is not default value.\");\n}\n\n\n\u307e\u305f\u3001\u8868\u793a\u3055\u308c\u308b\u30a2\u30e9\u30fc\u30c8\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3082\u30a2\u30e9\u30fc\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\nsampleUITests.m\n- (void)testAlertMessageOK {\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n\n    // accessibilityIdentifier \u306b ViewIdentifierShowAlertViewButton \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIButton \u3092\u53d6\u5f97\n    XCUIElement *buttonElement = app.buttons[ViewIdentifierShowAlertViewButton];\n    // \u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\n    [buttonElement tap];\n\n    // \u30a2\u30e9\u30fc\u30c8\u304c\u8868\u793a\u3055\u308c\u308b\u307e\u3067\u6307\u5b9a\u79d2\u6570\uff08\uff15\u79d2\uff09\u5f85\u3064\u3002\n    NSPredicate *predicate = [NSPredicate predicateWithFormat:@\"0 < count\"];\n    [self expectationForPredicate:predicate evaluatedWithObject:app.alerts handler:nil];\n    [self waitForExpectationsWithTimeout:5 handler:nil];\n\n    // \u30a2\u30e9\u30fc\u30c8\u306f\u4e00\u3064\u3057\u304b\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u306f\u305a\u3002\n    XCTAssertEqual(app.alerts.count, 1);\n\n    // \u8868\u793a\u3055\u308c\u305f\u30a2\u30e9\u30fc\u30c8\u306e OK \u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\n    XCUIElement *alertElement = [app.alerts elementBoundByIndex:0];\n    XCUIElement *okButtonElement = alertElement.collectionViews.buttons[@\"OK\"];\n    [okButtonElement tap];\n\n    // \u753b\u9762\u306e\u8868\u793a\u5185\u5bb9\u304c\u5909\u308f\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n    XCUIElement *labelElement = app.staticTexts[ViewIdentifierUsernameLabel];\n    XCTAssertEqualObjects(labelElement.label, @\"TEST9012\", @\"Usename is not expected value.\");\n}\n\n\n\n\u753b\u9762\u9077\u79fb\u306e\u78ba\u8a8d\n\u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\u3057\u305f\u6642\u306b\u5225\u306a\u753b\u9762\u3078\u9077\u79fb\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u5834\u5408\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u3068\u540c\u69d8\u306a\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\nsampleUITests.m\n- (void)testShowItemsTableViewController {\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n\n    // accessibilityIdentifier \u306b ViewIdentifierCallApiButton \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIButton \u3092\u53d6\u5f97\n    XCUIElement *buttonElement = app.buttons[ViewIdentifierShowNextViewButton];\n    // \u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\n    [buttonElement tap];\n\n    // accessibilityIdentifier \u306b ItemListViewIdentifierTableview \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UITableView \u3092\u53d6\u5f97\n    XCUIElement *tableElement = app.tables[ItemListViewIdentifierTableview];\n\n    // \u753b\u9762\u9077\u79fb\u304c\u884c\u308f\u308c\u308b\u306e\u3067\u3001 View \u304c\u8868\u793a\u3055\u308c\u308b\u307e\u3067\u6307\u5b9a\u79d2\u6570\uff08\uff15\u79d2\uff09\u5f85\u3064\u3002\n    NSPredicate *predicate = [NSPredicate predicateWithFormat:@\"exists == YES\"];\n    [self expectationForPredicate:predicate evaluatedWithObject:tableElement handler:nil];\n    [self waitForExpectationsWithTimeout:5 handler:nil];\n}\n\n\n\nTable View \u306e\u78ba\u8a8d\nTable View \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3059\u308b\u5834\u5408\u306f\u3001ViewController \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3068\u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\n\nViewController\n\nsampleUITests.m\n- (void)testTableViewContents {\n    // Storybord \u3092\u53d6\u5f97\u3002Bundle \u306e\u6307\u5b9a\u306b\u6ce8\u610f\u3059\u308b\u3002\n    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@\"Main\" bundle:[NSBundle bundleForClass:[self class]]];\n    // \u78ba\u8a8d\u3057\u305f\u3044\u3000View Controller \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3002\n    ItemsTableViewController *itemsTableVC = [storyboard instantiateViewControllerWithIdentifier:@\"itemsTableViewController\"];\n    XCTAssertNotNil(itemsTableVC);\n    XCTAssertTrue([itemsTableVC isKindOfClass:[ItemsTableViewController class]]);\n\n    // \u8868\u793a\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u6570\u3092\u78ba\u8a8d\u3002\n    XCTAssertEqual(itemsTableVC.tableView.numberOfSections, 1);\n    XCTAssertEqual([itemsTableVC.tableView numberOfRowsInSection:0], 6);\n\n    // Cell \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3002\n    ItemTableViewCell *itemCell = [itemsTableVC.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:0]];\n    XCTAssertNotNil(itemCell);\n    XCTAssertEqualObjects(itemCell.lblIdentifier.text, @\"1\");\n}\n\n\n\n\u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\nsampleUITests.m\n- (void)testTableCellContents {\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n\n    // TableViewController \u3092\u8868\u793a\u3055\u305b\u308b\u3002\n    // accessibilityIdentifier \u306b ViewIdentifierCallApiButton \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIButton \u3092\u53d6\u5f97\n    XCUIElement *buttonElement = app.buttons[ViewIdentifierShowNextViewButton];\n    // \u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\n    [buttonElement tap];\n\n    // accessibilityIdentifier \u306b ItemListViewIdentifierTableview \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UITableView \u3092\u53d6\u5f97\n    XCUIElement *tableElement = app.tables[ItemListViewIdentifierTableView];\n\n    // \u753b\u9762\u9077\u79fb\u304c\u884c\u308f\u308c\u308b\u306e\u3067\u3001 View \u304c\u8868\u793a\u3055\u308c\u308b\u307e\u3067\u6307\u5b9a\u79d2\u6570\uff08\uff15\u79d2\uff09\u5f85\u3064\u3002\n    NSPredicate *tableViewPredicate = [NSPredicate predicateWithFormat:@\"exists == YES\"];\n    [self expectationForPredicate:tableViewPredicate evaluatedWithObject:tableElement handler:nil];\n    [self waitForExpectationsWithTimeout:5 handler:nil];\n\n    // Cell \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3002\n    XCUIElement *cellElement = [tableElement.cells elementBoundByIndex:3];\n    XCTAssertEqualObjects(cellElement.staticTexts[ItemCellIdentifierIdentifier].label, @\"3\");\n    XCTAssertEqualObjects(cellElement.staticTexts[ItemCellIdentifierName].label, @\"ItemC\");\n}\n\n\n\nCell \u306e\u64cd\u4f5c\u78ba\u8a8d\nCell \u3092\u30bf\u30c3\u30d7\u3057\u3066\u5225\u306e\u753b\u9762\u306b\u9077\u79fb\u3059\u308b\u5834\u5408\u306e\n\nsampleUITests.m\n- (void)testTableViewCellAction {\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n\n    // TableViewController \u3092\u8868\u793a\u3055\u305b\u308b\u3002\n    // accessibilityIdentifier \u306b ViewIdentifierCallApiButton \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIButton \u3092\u53d6\u5f97\n    XCUIElement *buttonElement = app.buttons[ViewIdentifierShowNextViewButton];\n    // \u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\n    [buttonElement tap];\n\n    // accessibilityIdentifier \u306b ItemListViewIdentifierTableview \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UITableView \u3092\u53d6\u5f97\n    XCUIElement *tableElement = app.tables[ItemListViewIdentifierTableView];\n\n    // \u753b\u9762\u9077\u79fb\u304c\u884c\u308f\u308c\u308b\u306e\u3067\u3001 View \u304c\u8868\u793a\u3055\u308c\u308b\u307e\u3067\u6307\u5b9a\u79d2\u6570\uff08\uff15\u79d2\uff09\u5f85\u3064\u3002\n    NSPredicate *tableViewPredicate = [NSPredicate predicateWithFormat:@\"exists == YES\"];\n    [self expectationForPredicate:tableViewPredicate evaluatedWithObject:tableElement handler:nil];\n    [self waitForExpectationsWithTimeout:5 handler:nil];\n\n    // Cell \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3002\n    NSString *cellKey = [NSString stringWithFormat:ItemListViewIdentifierTableViewCell, 0, 1];\n    XCUIElement *cellElement = tableElement.cells[cellKey];\n    XCTAssertEqualObjects(cellElement.staticTexts[ItemCellIdentifierIdentifier].label, @\"2\");\n    XCTAssertEqualObjects(cellElement.staticTexts[ItemCellIdentifierName].label, @\"ItemB\");\n\n    // accessibilityIdentifier \u306b ItemViewIdentifier \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIView \u3092\u53d6\u5f97\n    XCUIElement *itemViewElement = app.otherElements[ItemViewIdentifier];\n\n    // Cell \u3092\u30bf\u30c3\u30d7\n    [cellElement tap];\n\n    // \u753b\u9762\u9077\u79fb\u304c\u884c\u308f\u308c\u308b\u306e\u3067\u3001 View \u304c\u8868\u793a\u3055\u308c\u308b\u307e\u3067\u6307\u5b9a\u79d2\u6570\uff08\uff15\u79d2\uff09\u5f85\u3064\u3002\n    NSPredicate *itemViewPredicate = [NSPredicate predicateWithFormat:@\"exists == YES\"];\n    [self expectationForPredicate:itemViewPredicate evaluatedWithObject:itemViewElement handler:nil];\n    [self waitForExpectationsWithTimeout:5 handler:nil];\n\n    // \u8868\u793a\u5185\u5bb9\u3092\u78ba\u8a8d\u3059\u308b\u3002\n    XCUIElement *itemNameElement = itemViewElement.staticTexts[ItemViewIdentifierItemName];\n    XCTAssertEqualObjects(itemNameElement.label, @\"ItemB\");\n}\n\n\n\n\u64cd\u4f5c\u8a18\u9332\nXcode \u306b\u306f\u30ec\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u6a5f\u80fd\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306b\u30a2\u30d7\u30ea\u3092\u64cd\u4f5c\u3057\u305f\u8a18\u9332\u3092\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\nXcode \u6a19\u6e96\u306e XCTest Framework \u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u306b\u3064\u3044\u3066\u6574\u7406\u3002\n\n# \u5c0e\u5165\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u6642\u306b\u5c0e\u5165\u3059\u308b\u5834\u5408\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u30c6\u30b9\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u542b\u3081\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n![2c92142e-0af2-1fc92-67f3-d88c0cbe2be2.png](https://qiita-image-store.s3.amazonaws.com/0/134810/4a6706f0-c58e-7b3f-6e5d-abd31d51b947.png \"2c92142e-0af2-1fc92-67f3-d88c0cbe2be2.png\")\n\n\n\u65e2\u5b58\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5c0e\u5165\u3059\u308b\u5834\u5408\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n![5b2eebbc-24fd-151ed-cc68-a0716265d566.png](https://qiita-image-store.s3.amazonaws.com/0/134810/7ca7365d-503d-ccbb-878c-f23253b4e256.png \"5b2eebbc-24fd-151ed-cc68-a0716265d566.png\")\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u3053\u306e\u3088\u3046\u306b\u30c6\u30b9\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n![UT_AddTestTargets.png](https://qiita-image-store.s3.amazonaws.com/0/134810/a4cf3174-c063-d5f3-83fc-0927659cf9a6.png \"UT_AddTestTargets.png\")\n\n# \u30c6\u30b9\u30c8\u5b9f\u884c\n\u5168\u3066\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306f\u3001 Product -> Test \u3082\u3057\u304f\u306f \u2318 + U \u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u30e1\u30bd\u30c3\u30c9\u5358\u4f4d\u3084\u30af\u30e9\u30b9\u5358\u4f4d\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306f\u3001\u3053\u306e\u3088\u3046\u306b Test Navigator \u3084\u30a8\u30c7\u30a3\u30bf\u30fc\u3067\u30c6\u30b9\u30c8\u5bfe\u8c61\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u5408\u308f\u305b\u308b\u3068\u30c6\u30b9\u30c8\u5b9f\u884c\u30dc\u30bf\u30f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u3053\u308c\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3053\u3068\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n![UT_RunTest1.png](https://qiita-image-store.s3.amazonaws.com/0/134810/a02b5c29-cbf5-2db8-c697-7148b6bee89d.png \"UT_RunTest1.png\")\n\n![UT_RunTest2.png](https://qiita-image-store.s3.amazonaws.com/0/134810/9793a7dd-ca4c-3cc2-5e2a-4765ebaa9eda.png \"UT_RunTest2.png\")\n\n# \u30c6\u30b9\u30c8\u7d50\u679c\n\u30c6\u30b9\u30c8\u7d50\u679c\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u5931\u6557\u3059\u308b\u3068\u8d64\u8272\u306e\u30a2\u30a4\u30b3\u30f3\u304c\u8868\u793a\u3055\u308c\u3001\u6210\u529f\u3059\u308b\u3068\u7dd1\u8272\u306e\u30a2\u30a4\u30b3\u30f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n![UT_Results.png](https://qiita-image-store.s3.amazonaws.com/0/134810/8dccd80e-8cb3-f81c-4b4e-fa9334c47ad0.png \"UT_Results.png\")\n\n\n# \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306f ` - (void)testXXX ` \u306e\u3088\u3046\u306b\u982d\u306b test \u3092\u3064\u3051\u307e\u3059\u3002\u3053\u308c\u3067\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30c6\u30b9\u30c8\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u3060\u3068 Xcode \u304c\u81ea\u52d5\u7684\u306b\u5224\u65ad\u3057\u307e\u3059\u3002\n\u5024\u306e\u78ba\u8a8d\u306f ` XCTAssertNotNil ` \u3084 ` XCTAssertTrue ` \u306a\u3069\u306e\u3088\u3046\u306b ` XCTAssertXXX ` \u3068\u3044\u3063\u305f\u30de\u30af\u30ed\u3092\u5229\u7528\u3057\u3066\u884c\u3044\u307e\u3059\u3002\n\n## \u623b\u308a\u5024\n\u623b\u308a\u5024\u306e\u78ba\u8a8d\u3092\u3059\u308b\u5834\u5408\u306f\u3001\u7d20\u76f4\u306b\u6bd4\u8f03\u3057\u307e\u3059\u3002\n\n```objc:sampleTests.m\n- (void)testReturnValue {\n    DataManager *manager = [[DataManager alloc] init];\n    NSDictionary *userData = [manager selectUserData];\n\n    // \u623b\u308a\u5024\u3092\u78ba\u8a8d\u3059\u308b\u5834\u5408\u306f\u3001\u7d20\u76f4\u306b\u6bd4\u8f03\u3059\u308b\u3002\n    XCTAssertNotNil(userData);\n\n    XCTAssertNotNil(userData[UserDataUsername]);\n    XCTAssertEqualObjects(userData[UserDataUsername], @\"TEST1234\");\n\n    XCTAssertNotNil(userData[UserDataUUID]);\n    XCTAssertEqualObjects(userData[UserDataUUID], @\"CAD34831-E763-45A9-8BA2-31991DCB682B\");\n\n    XCTAssertNotNil(userData[UserDataRank]);\n    XCTAssertEqual([userData[UserDataRank] longValue], 1);\n\n    XCTAssertNotNil(userData[UserDataLatestAccessDate]);\n}\n```\n\n` XCTAssertNotNil ` \u306b\u3066\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c nil \u3067\u3042\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\n` XCTAssertEqual ` \u3084 ` XCTAssertEqualObjects ` \u306b\u3066\u671f\u5f85\u3057\u305f\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\n\n## \u975e\u540c\u671f\u51e6\u7406\n\u901a\u4fe1\u51e6\u7406\u306b\u4ee3\u8868\u3055\u308c\u308b\u975e\u540c\u671f\u51e6\u7406\u306e\u30c6\u30b9\u30c8\u3092\u3059\u308b\u306b\u306f ` XCTestExpectation ` \u3092\u5229\u7528\u3057\u3066\u884c\u3044\u307e\u3059\u3002\n\u975e\u540c\u671f\u51e6\u7406\u306e\u5b8c\u4e86\u6642\u306b ` -fulfill ` \u3092\u547c\u3073\u51fa\u3057\u3001\u975e\u540c\u671f\u51e6\u7406\u306e\u76e3\u8996\u3092\u7d42\u4e86\u3055\u305b\u307e\u3059\u3002\n\u76e3\u8996\u3059\u308b\u6642\u9593\uff08\u79d2\u6570\uff09\u306f ` -waitForExpectationsWithTimeout:handler: ` \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u6307\u5b9a\u3057\u305f\u6642\u9593\u4ee5\u5185\u306b\u51e6\u7406\u304c\u7d42\u308f\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u30c6\u30b9\u30c8\u5931\u6557\u3068\u306a\u308a\u307e\u3059\u3002\n\n### Blocks\nBlocks \u306e\u5834\u5408\u306f\u3001 ` -expectationWithDescription: ` \u3067\u76e3\u8996\u7528\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001\u975e\u540c\u671f\u51e6\u7406\u5b8c\u4e86\u6642\u306b\u547c\u3070\u308c\u308b Blocks \u306e\u4e2d\u3067\u5024\u306e\u691c\u8a3c\u3092\u884c\u3044\u307e\u3059\u3002\n\n```objc:sampleTests.m\n- (void)testCallApiBlocks {\n    // \u975e\u540c\u671f\u51e6\u7406\u306e\u5b8c\u4e86\u3092\u76e3\u8996\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n    XCTestExpectation *expectation = [self expectationWithDescription:@\"CallApiBlocks\"];\n    \n    NetworkManager *manager = [[NetworkManager alloc] init];\n    [manager callApiWithCommand:@\"update\" parameters:nil completionHandler:^(BOOL result, NSDictionary * _Nullable resultData, NSError * _Nullable error) {\n        // \u975e\u540c\u671f\u51e6\u7406\u306e\u76e3\u8996\u3092\u7d42\u4e86\n        [expectation fulfill];\n        // \u7d50\u679c\u3092\u78ba\u8a8d\n        XCTAssertNotNil(resultData, @\"result data is nil.\");\n    }];\n    \n    // \u6307\u5b9a\u79d2\u6570\uff08\uff16\uff10\u79d2\uff09\u5f85\u3064\n    [self waitForExpectationsWithTimeout:60 handler:^(NSError * _Nullable error) {\n        XCTAssertNil(error, @\"has error.\");\n    }];\n}\n```\n\n### Delegate\nDelegate \u306e\u5834\u5408\u3082\u3001` -expectationWithDescription: ` \u3067\u76e3\u8996\u7528\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001 Delegate \u306e\u8a2d\u5b9a\u3092\u884c\u3044\u3001\u975e\u540c\u671f\u51e6\u7406\u5b8c\u4e86\u6642\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u5024\u306e\u691c\u8a3c\u3092\u884c\u3044\u307e\u3059\u3002\n\n```objc:sampleTests.m\n- (void)testCallApiDelegate {\n    // \u975e\u540c\u671f\u51e6\u7406\u306e\u5b8c\u4e86\u3092\u76e3\u8996\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n    callApiExpectation = [self expectationWithDescription:@\"CallApiDelegate\"];\n    \n    NetworkManager *manager = [[NetworkManager alloc] init];\n    manager.delegate = self;\n    [manager callApiWithCommand:@\"update\" parameters:nil completionHandler:nil];\n\n    // \u6307\u5b9a\u79d2\u6570\u5f85\u3064\n    [self waitForExpectationsWithTimeout:60 handler:^(NSError * _Nullable error) {\n        XCTAssertNil(error, @\"has error.\");\n    }];\n}\n\n- (void)callbackApiResult:(NSDictionary *)result\n{\n    // \u975e\u540c\u671f\u51e6\u7406\u306e\u76e3\u8996\u3092\u7d42\u4e86\n    [callApiExpectation fulfill];\n    // \u7d50\u679c\u3092\u78ba\u8a8d\n    XCTAssertNotNil(result, @\"Api Resut is nil.\");\n}\n```\n\n### Notification\nNotification \u306e\u5834\u5408\u306f\u3001 ` -expectationForNotification:object:handler: ` \u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e\u901a\u77e5\u304c\u6765\u308b\u3068 handler \u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u3053\u306e\u4e2d\u3067\u5024\u306e\u691c\u8a3c\u3092\u884c\u3044\u307e\u3059\u3002\u307e\u305f\u3001handler \u304c nil \u306e\u5834\u5408\u3001\u901a\u77e5\u304c\u6765\u308b\u3068\u7121\u6761\u4ef6\u3067\u30c6\u30b9\u30c8\u6210\u529f\u3068\u306a\u308a\u307e\u3059\u3002\n\n```objc:sampleTests.m\n- (void)testCallApiNotification {\n    // \u901a\u77e5\u3092\u76e3\u8996\u3059\u308b\n    [self expectationForNotification:ApiCallbackNotification object:nil handler:^BOOL(NSNotification * _Nonnull notification) {\n        // \u7d50\u679c\u3092\u78ba\u8a8d\n        XCTAssertNotNil([notification object], @\"Notification object is nil.\");\n        // \u901a\u77e5\u306e\u76e3\u8996\u3092\u7d42\u4e86\n        return YES;\n    }];\n    \n    NetworkManager *manager = [[NetworkManager alloc] init];\n    [manager callApiWithCommand:@\"update\" parameters:nil completionHandler:nil];\n\n    // \u6307\u5b9a\u79d2\u6570\u5f85\u3064\n    [self waitForExpectationsWithTimeout:60 handler:^(NSError * _Nullable error) {\n        XCTAssertNil(error, @\"has error.\");\n    }];\n}\n```\n\n# UI\u30c6\u30b9\u30c8\nUI\u30c6\u30b9\u30c8\u306f\u3001\u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u3092\u52d5\u304b\u3057\u306a\u304c\u3089\u306e\u30c6\u30b9\u30c8\u3068\u3001\u30ed\u30b8\u30c3\u30af\u30c6\u30b9\u30c8\u3068\u540c\u69d8\u306b ViewController \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u3066\u306e\u30c6\u30b9\u30c8\u306e\u4e8c\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002\n\n## \u6e96\u5099\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u304b\u3089\u753b\u9762\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5bfe\u8c61\u3068\u306a\u308b View \u306e  ` accessibilityIdentifier ` \u3068 ` viewTag ` \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n![UT_ViewIdentifier.png](https://qiita-image-store.s3.amazonaws.com/0/134810/a769adf7-f5b5-68e0-d3c8-8b0196dcf8b2.png \"UT_ViewIdentifier.png\")\n\n![UT_ViewTag.png](https://qiita-image-store.s3.amazonaws.com/0/134810/708ab37c-aa33-eda6-eea8-bc97bad39284.png \"UT_ViewTag.png\")\n\n```objc:ViewController.m\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    // Do any additional setup after loading the view, typically from a nib.\n\n    // \u30c6\u30b9\u30c8\u5bfe\u8c61\u3068\u3059\u308b View \u306e accessibilityIdentifier \u3068 viewTag \u3092\u8a2d\u5b9a\u3059\u308b\u3002\n    self.lblUsername.accessibilityIdentifier = ViewIdentifierUsernameLabel;\n    self.lblUsername.tag = MainViewTagUsernameLabel;\n    self.btnCallApi.accessibilityIdentifier = ViewIdentifierCallApiButton;\n    self.btnCallApi.tag = MainViewTagCallApiButton;\n    self.btnImageDownload.accessibilityIdentifier = ViewIdentifierImageDownloadButton;\n    self.btnImageDownload.tag = MainViewTagImageDownloadButton;\n    self.btnShowNextView.accessibilityIdentifier = ViewIdentifierShowNextViewButton;\n    self.btnShowNextView.tag = MainViewTagShowNextViewButton;\n    self.btnShowAlertView.accessibilityIdentifier = ViewIdentifierShowAlertViewButton;\n    self.btnShowAlertView.tag = MainViewTagShowAlertViewButton;\n\n    /* \u7701\u7565 */\n}\n```\n\n\u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5bfe\u8c61\u3068\u3057\u305f\u30c6\u30b9\u30c8\u3067\u753b\u9762\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f ` accessibilityIdentifier ` \u3067\u6307\u5b9a\u3057\u305f\u5024\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3001ViewController \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5bfe\u8c61\u3068\u3057\u305f\u30c6\u30b9\u30c8\u3067\u753b\u9762\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f ` viewTag ` \u3067\u6307\u5b9a\u3057\u305f\u5024\u3067\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\nViewController \u306b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u7528\u610f\u3057\u3066 Interface Builder \u3068\u9023\u643a\u3055\u305b\u3066\u3082\u3001\u30c6\u30b9\u30c8\u6642\u306b\u306f\u3053\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304b\u3089\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n## \u8868\u793a\u5185\u5bb9\u306e\u78ba\u8a8d\n### \u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n```objc:sampleUITests.m\n- (void)testViewContentsForTestApplication {\n    // \u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n    // accessibilityIdentifier \u306b ViewIdentifierUsernameLabel \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UILabel \u3092\u53d6\u5f97\n    XCUIElement *labelElement = app.staticTexts[ViewIdentifierUsernameLabel];\n    // UILabel \u306e text \u3092\u78ba\u8a8d\n    XCTAssertEqualObjects(labelElement.label, @\"TEST1234\", @\"Usename is not expected value.\");\n}\n```\n\n### \u30af\u30e9\u30b9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\nViewController \u30af\u30e9\u30b9\u304b\u3089\u76f4\u63a5\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u7279\u306b\u6ce8\u610f\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u3067\u3059\u304c\u3001 Storyboard \u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u3001bundle \u306e\u6307\u5b9a\u3092\u6ce8\u610f\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u30a2\u30d7\u30ea\u672c\u4f53\u5074\u3067 Storyboard \u3092\u53d6\u5f97\u3059\u308b\u5834\u5408\u306f\u3001bundle \u306f nil \u3067\u554f\u984c\u306a\u3044\u3067\u3059\u304c\u3001\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u5074\u3067 Storyboard \u3092\u53d6\u5f97\u3059\u308b\u5834\u5408\u306f\u3001bundle \u306b\u306f\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u542b\u3080 bundle \u3092\u8a2d\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n```objc:sampleUITests.m\n- (void)testViewContentsForClassInstance {\n    // Storybord \u3092\u53d6\u5f97\u3002Bundle \u306e\u6307\u5b9a\u306b\u6ce8\u610f\u3059\u308b\u3002\n    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@\"Main\" bundle:[NSBundle bundleForClass:[self class]]];\n    // \u78ba\u8a8d\u3057\u305f\u3044\u3000View Controller \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3002\n    ViewController *mainVC = [storyboard instantiateInitialViewController];\n    XCTAssertNotNil(mainVC, @\"View controller is nil.\");\n    XCTAssertTrue([mainVC isKindOfClass:[ViewController class]], @\"Target is not 'ViewController'\");\n\n    // UILabel \u3092\u53d6\u5f97\n    UILabel *lblUsername = [mainVC.view viewWithTag:MainViewTagUsernameLabel];\n    XCTAssertNotNil(lblUsername, @\"Username label is nil.\");\n    XCTAssertTrue([lblUsername isKindOfClass:[UILabel class]], @\"Target is not 'UILabel'\");\n    \n    // UILabel \u306e text \u3092\u78ba\u8a8d\n    XCTAssertEqualObjects(lblUsername.text, @\"TEST1234\", @\"Usename is not expected value.\");\n}\n```\n\n## \u753b\u9762\u64cd\u4f5c\u306e\u78ba\u8a8d\n\u753b\u9762\u64cd\u4f5c\u306e\u78ba\u8a8d\u306f\u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u3092\u5229\u7528\u3057\u305f\u65b9\u304c\u4fbf\u5229\u3067\u3059\u3002\nViewController \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u30b3\u30fc\u30c9\u3092\u5225\u9014\u7528\u610f\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n```objc:sampleUITests.m\n- (void)testCountUp {\n    // \u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n    // accessibilityIdentifier \u306b ViewIdentifierNumberLabel \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UILabel \u3092\u53d6\u5f97\n    XCUIElement *labelElement = app.staticTexts[ViewIdentifierNumberLabel];\n    // \u521d\u671f\u5024\u3092\u78ba\u8a8d\n    XCTAssertEqualObjects(labelElement.label, @\"1\");\n\n    // accessibilityIdentifier \u306b ViewIdentifierCountUpButton \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIButton \u3092\u53d6\u5f97\n    XCUIElement *buttonElement = app.staticTexts[ViewIdentifierCountUpButton];\n    // \u30dc\u30bf\u30f3\u3092\uff13\u56de\u30bf\u30c3\u30d7\n    [buttonElement tap]; // 1 -> 2\n    [buttonElement tap]; // 2 -> 3\n    [buttonElement tap]; // 3 -> 4\n\n    // UILabel \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\n    XCTAssertEqualObjects(labelElement.label, @\"4\");\n}\n```\n\n## \u975e\u540c\u671f\u51e6\u7406\u306e\u78ba\u8a8d\nAPI\u30ea\u30af\u30a8\u30b9\u30c8\u306a\u3069\u975e\u540c\u671f\u51e6\u7406\u3092\u4f34\u3046\u30c6\u30b9\u30c8\u3092\u884c\u3046\u306b\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u5b9f\u884c\u6642\u3068\u975e\u540c\u671f\u51e6\u7406\u7d42\u4e86\u6642\u306b\u72b6\u614b\u304c\u5909\u308f\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u5b9f\u884c\u6642\u306b\u306f\u8aad\u307f\u8fbc\u307f\u4e2d\u753b\u9762\u3092\u8868\u793a\u3057\u3001\u975e\u540c\u671f\u51e6\u7406\u304c\u7d42\u4e86\u3057\u305f\u3089\u3053\u306e\u753b\u9762\u3092\u975e\u8868\u793a\u306b\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u3001 ` -expectationForPredicate:evaluatedWithObject:handler: ` \u3092\u5229\u7528\u3057\u3066\u6307\u5b9a\u3057\u305f\u6761\u4ef6\u3068\u306a\u308b\u307e\u3067\u5f85\u3064\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```objc:sampleUITests.m\n- (void)testCallApi {\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n\n    // accessibilityIdentifier \u306b ViewIdentifierCallApiButton \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIButton \u3092\u53d6\u5f97\n    XCUIElement *buttonElement = app.buttons[ViewIdentifierCallApiButton];\n    // \u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\n    [buttonElement tap];\n\n    // \u975e\u540c\u671f\u51e6\u7406\u4e2d\u306f View \u3092\u8868\u793a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\n    // accessibilityIdentifier \u306b ViewIdentifierLoadingView \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIView \u3092\u53d6\u5f97\n    XCUIElement *loadingElement = app.otherElements[ViewIdentifierLoadingView];\n    // \u975e\u540c\u671f\u51e6\u7406\u4e2d\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b View \u304c\u975e\u8868\u793a\u306b\u306a\u308b\u307e\u3067\u6307\u5b9a\u79d2\u6570\uff08\uff15\u79d2\uff09\u5f85\u3064\u3002\n    NSPredicate *predicate = [NSPredicate predicateWithFormat:@\"exists == NO\"];\n    [self expectationForPredicate:predicate evaluatedWithObject:loadingElement handler:nil];\n    [self waitForExpectationsWithTimeout:5 handler:nil];\n\n    // \u975e\u540c\u671f\u51e6\u7406\u306e\u7d50\u679c\u3092\u78ba\u8a8d\u3059\u308b\n    XCUIElement *labelElement = app.staticTexts[ViewIdentifierUsernameLabel];\n    XCTAssertEqualObjects(labelElement.label, @\"TEST5678\", @\"Usename is not default value.\");\n}\n```\n\n## \u30a2\u30e9\u30fc\u30c8\u8868\u793a\u306e\u78ba\u8a8d\n\n![UT_AlertMessage.png](https://qiita-image-store.s3.amazonaws.com/0/134810/3d48b195-79ba-0e86-8f35-16b7e70de736.png \"UT_AlertMessage.png\")\n\n\u3053\u306e\u3088\u3046\u306a\u30a2\u30e9\u30fc\u30c8\u306e\u78ba\u8a8d\u3092\u3059\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30bf\u30a4\u30c8\u30eb\u306b\u8a2d\u5b9a\u3057\u305f\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u3066\u30a2\u30e9\u30fc\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u30dc\u30bf\u30f3\u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u306b\u30dc\u30bf\u30f3\u306e\u30bf\u30a4\u30c8\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```objc:sampleUITests.m\n- (void)testAlertMessageCancel {\n    // \u30a2\u30e9\u30fc\u30c8\u3092\u8868\u793a\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n    [app.buttons[ViewIdentifierShowAlertViewButton] tap];\n\n    // \u8868\u793a\u3055\u308c\u305f\u30a2\u30e9\u30fc\u30c8\u306e Cancel \u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\n    XCUIElementQuery *collectionViewsQuery = app.alerts[@\"Title\"].collectionViews;\n    XCUIElement *cancelButton = collectionViewsQuery.buttons[@\"Cancel\"];\n    [cancelButton tap];\n\n    // \u753b\u9762\u306e\u8868\u793a\u5185\u5bb9\u304c\u5909\u308f\u3063\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\n    XCUIElement *labelElement = app.staticTexts[ViewIdentifierUsernameLabel];\n    XCTAssertEqualObjects(labelElement.label, @\"TEST1234\", @\"Usename is not default value.\");\n}\n```\n\n\u307e\u305f\u3001\u8868\u793a\u3055\u308c\u308b\u30a2\u30e9\u30fc\u30c8\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3082\u30a2\u30e9\u30fc\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n```objc:sampleUITests.m\n- (void)testAlertMessageOK {\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n    \n    // accessibilityIdentifier \u306b ViewIdentifierShowAlertViewButton \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIButton \u3092\u53d6\u5f97\n    XCUIElement *buttonElement = app.buttons[ViewIdentifierShowAlertViewButton];\n    // \u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\n    [buttonElement tap];\n\n    // \u30a2\u30e9\u30fc\u30c8\u304c\u8868\u793a\u3055\u308c\u308b\u307e\u3067\u6307\u5b9a\u79d2\u6570\uff08\uff15\u79d2\uff09\u5f85\u3064\u3002\n    NSPredicate *predicate = [NSPredicate predicateWithFormat:@\"0 < count\"];\n    [self expectationForPredicate:predicate evaluatedWithObject:app.alerts handler:nil];\n    [self waitForExpectationsWithTimeout:5 handler:nil];\n\n    // \u30a2\u30e9\u30fc\u30c8\u306f\u4e00\u3064\u3057\u304b\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u306f\u305a\u3002\n    XCTAssertEqual(app.alerts.count, 1);\n\n    // \u8868\u793a\u3055\u308c\u305f\u30a2\u30e9\u30fc\u30c8\u306e OK \u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\n    XCUIElement *alertElement = [app.alerts elementBoundByIndex:0];\n    XCUIElement *okButtonElement = alertElement.collectionViews.buttons[@\"OK\"];\n    [okButtonElement tap];\n\n    // \u753b\u9762\u306e\u8868\u793a\u5185\u5bb9\u304c\u5909\u308f\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n    XCUIElement *labelElement = app.staticTexts[ViewIdentifierUsernameLabel];\n    XCTAssertEqualObjects(labelElement.label, @\"TEST9012\", @\"Usename is not expected value.\");\n}\n```\n\n## \u753b\u9762\u9077\u79fb\u306e\u78ba\u8a8d\n\u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\u3057\u305f\u6642\u306b\u5225\u306a\u753b\u9762\u3078\u9077\u79fb\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u5834\u5408\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u3068\u540c\u69d8\u306a\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\n```objc:sampleUITests.m\n- (void)testShowItemsTableViewController {\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n\n    // accessibilityIdentifier \u306b ViewIdentifierCallApiButton \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIButton \u3092\u53d6\u5f97\n    XCUIElement *buttonElement = app.buttons[ViewIdentifierShowNextViewButton];\n    // \u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\n    [buttonElement tap];\n    \n    // accessibilityIdentifier \u306b ItemListViewIdentifierTableview \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UITableView \u3092\u53d6\u5f97\n    XCUIElement *tableElement = app.tables[ItemListViewIdentifierTableview];\n    \n    // \u753b\u9762\u9077\u79fb\u304c\u884c\u308f\u308c\u308b\u306e\u3067\u3001 View \u304c\u8868\u793a\u3055\u308c\u308b\u307e\u3067\u6307\u5b9a\u79d2\u6570\uff08\uff15\u79d2\uff09\u5f85\u3064\u3002\n    NSPredicate *predicate = [NSPredicate predicateWithFormat:@\"exists == YES\"];\n    [self expectationForPredicate:predicate evaluatedWithObject:tableElement handler:nil];\n    [self waitForExpectationsWithTimeout:5 handler:nil];\n}\n```\n\n## Table View \u306e\u78ba\u8a8d\nTable View \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3059\u308b\u5834\u5408\u306f\u3001ViewController \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3068\u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\n\n### ViewController\n\n```objc:sampleUITests.m\n- (void)testTableViewContents {\n    // Storybord \u3092\u53d6\u5f97\u3002Bundle \u306e\u6307\u5b9a\u306b\u6ce8\u610f\u3059\u308b\u3002\n    UIStoryboard *storyboard = [UIStoryboard storyboardWithName:@\"Main\" bundle:[NSBundle bundleForClass:[self class]]];\n    // \u78ba\u8a8d\u3057\u305f\u3044\u3000View Controller \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3002\n    ItemsTableViewController *itemsTableVC = [storyboard instantiateViewControllerWithIdentifier:@\"itemsTableViewController\"];\n    XCTAssertNotNil(itemsTableVC);\n    XCTAssertTrue([itemsTableVC isKindOfClass:[ItemsTableViewController class]]);\n\n    // \u8868\u793a\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u6570\u3092\u78ba\u8a8d\u3002\n    XCTAssertEqual(itemsTableVC.tableView.numberOfSections, 1);\n    XCTAssertEqual([itemsTableVC.tableView numberOfRowsInSection:0], 6);\n\n    // Cell \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3002\n    ItemTableViewCell *itemCell = [itemsTableVC.tableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:0]];\n    XCTAssertNotNil(itemCell);\n    XCTAssertEqualObjects(itemCell.lblIdentifier.text, @\"1\");\n}\n```\n\n### \u30c6\u30b9\u30c8\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n```objc:sampleUITests.m\n- (void)testTableCellContents {\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n    \n    // TableViewController \u3092\u8868\u793a\u3055\u305b\u308b\u3002\n    // accessibilityIdentifier \u306b ViewIdentifierCallApiButton \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIButton \u3092\u53d6\u5f97\n    XCUIElement *buttonElement = app.buttons[ViewIdentifierShowNextViewButton];\n    // \u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\n    [buttonElement tap];\n    \n    // accessibilityIdentifier \u306b ItemListViewIdentifierTableview \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UITableView \u3092\u53d6\u5f97\n    XCUIElement *tableElement = app.tables[ItemListViewIdentifierTableView];\n    \n    // \u753b\u9762\u9077\u79fb\u304c\u884c\u308f\u308c\u308b\u306e\u3067\u3001 View \u304c\u8868\u793a\u3055\u308c\u308b\u307e\u3067\u6307\u5b9a\u79d2\u6570\uff08\uff15\u79d2\uff09\u5f85\u3064\u3002\n    NSPredicate *tableViewPredicate = [NSPredicate predicateWithFormat:@\"exists == YES\"];\n    [self expectationForPredicate:tableViewPredicate evaluatedWithObject:tableElement handler:nil];\n    [self waitForExpectationsWithTimeout:5 handler:nil];\n    \n    // Cell \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3002\n    XCUIElement *cellElement = [tableElement.cells elementBoundByIndex:3];\n    XCTAssertEqualObjects(cellElement.staticTexts[ItemCellIdentifierIdentifier].label, @\"3\");\n    XCTAssertEqualObjects(cellElement.staticTexts[ItemCellIdentifierName].label, @\"ItemC\");\n}\n```\n\n## Cell \u306e\u64cd\u4f5c\u78ba\u8a8d\nCell \u3092\u30bf\u30c3\u30d7\u3057\u3066\u5225\u306e\u753b\u9762\u306b\u9077\u79fb\u3059\u308b\u5834\u5408\u306e\n\n```objc:sampleUITests.m\n- (void)testTableViewCellAction {\n    XCUIApplication *app = [[XCUIApplication alloc] init];\n\n    // TableViewController \u3092\u8868\u793a\u3055\u305b\u308b\u3002\n    // accessibilityIdentifier \u306b ViewIdentifierCallApiButton \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIButton \u3092\u53d6\u5f97\n    XCUIElement *buttonElement = app.buttons[ViewIdentifierShowNextViewButton];\n    // \u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\n    [buttonElement tap];\n\n    // accessibilityIdentifier \u306b ItemListViewIdentifierTableview \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UITableView \u3092\u53d6\u5f97\n    XCUIElement *tableElement = app.tables[ItemListViewIdentifierTableView];\n\n    // \u753b\u9762\u9077\u79fb\u304c\u884c\u308f\u308c\u308b\u306e\u3067\u3001 View \u304c\u8868\u793a\u3055\u308c\u308b\u307e\u3067\u6307\u5b9a\u79d2\u6570\uff08\uff15\u79d2\uff09\u5f85\u3064\u3002\n    NSPredicate *tableViewPredicate = [NSPredicate predicateWithFormat:@\"exists == YES\"];\n    [self expectationForPredicate:tableViewPredicate evaluatedWithObject:tableElement handler:nil];\n    [self waitForExpectationsWithTimeout:5 handler:nil];\n\n    // Cell \u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3002\n    NSString *cellKey = [NSString stringWithFormat:ItemListViewIdentifierTableViewCell, 0, 1];\n    XCUIElement *cellElement = tableElement.cells[cellKey];\n    XCTAssertEqualObjects(cellElement.staticTexts[ItemCellIdentifierIdentifier].label, @\"2\");\n    XCTAssertEqualObjects(cellElement.staticTexts[ItemCellIdentifierName].label, @\"ItemB\");\n\n    // accessibilityIdentifier \u306b ItemViewIdentifier \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b UIView \u3092\u53d6\u5f97\n    XCUIElement *itemViewElement = app.otherElements[ItemViewIdentifier];\n\n    // Cell \u3092\u30bf\u30c3\u30d7\n    [cellElement tap];\n\n    // \u753b\u9762\u9077\u79fb\u304c\u884c\u308f\u308c\u308b\u306e\u3067\u3001 View \u304c\u8868\u793a\u3055\u308c\u308b\u307e\u3067\u6307\u5b9a\u79d2\u6570\uff08\uff15\u79d2\uff09\u5f85\u3064\u3002\n    NSPredicate *itemViewPredicate = [NSPredicate predicateWithFormat:@\"exists == YES\"];\n    [self expectationForPredicate:itemViewPredicate evaluatedWithObject:itemViewElement handler:nil];\n    [self waitForExpectationsWithTimeout:5 handler:nil];\n\n    // \u8868\u793a\u5185\u5bb9\u3092\u78ba\u8a8d\u3059\u308b\u3002\n    XCUIElement *itemNameElement = itemViewElement.staticTexts[ItemViewIdentifierItemName];\n    XCTAssertEqualObjects(itemNameElement.label, @\"ItemB\");\n}\n```\n\n## \u64cd\u4f5c\u8a18\u9332\nXcode \u306b\u306f\u30ec\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u6a5f\u80fd\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306b\u30a2\u30d7\u30ea\u3092\u64cd\u4f5c\u3057\u305f\u8a18\u9332\u3092\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n![UT_Recording.png](https://qiita-image-store.s3.amazonaws.com/0/134810/85c14756-5116-d756-8c7c-dd5312db2a86.png \"UT_Recording.png\")\n\n![UT_Recorded.png](https://qiita-image-store.s3.amazonaws.com/0/134810/5cfb9525-909b-7f57-8ea4-17c2c3f89554.png \"UT_Recorded.png\")\n", "tags": ["Xcode", "unittest", "Objective-C", "iOS"]}