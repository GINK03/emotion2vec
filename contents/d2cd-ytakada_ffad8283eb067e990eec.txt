{"context": "\n\n\u6982\u8981\nWiFi\u306e\u63a5\u7d9a\u60c5\u5831\u306f\u3001\u6642\u3068\u5834\u5408\u306b\u3088\u3063\u3066\u5909\u308f\u308a\u307e\u3059\u3002\n\u305d\u306e\u90fd\u5ea6PC\u3068\u30b1\u30fc\u30d6\u30eb\u3067\u7e4b\u3044\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3057\u76f4\u3059\u306e\u306f\u5927\u5909\u9762\u5012\u3067\u3059\u3002\n@exabugs\u3055\u3093\u306e\u3053\u3061\u3089\u306e\u6295\u7a3f\u304c\u3068\u3066\u3082\u826f\u3044\u30a2\u30a4\u30c7\u30a2\u3060\u306a\u3041\u3068\u601d\u3044\u3001\n\u6e29\u6e7f\u5ea6\u8a08\uff0b\u5149\u5ea6\u8a08\u306b\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306f\u3001SSID/PW\u3060\u3051\u3067\u306f\u306a\u304f\u3001\n\u30c7\u30fc\u30bf\u306e\u9001\u4fe1\u5148host\u3068path\u3082\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u8d77\u52d5\u30e2\u30fc\u30c9\u3092\u300c\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30e2\u30fc\u30c9\u300d\u3068\u300c\u6e2c\u5b9a\u30e2\u30fc\u30c9\u300d\u306b\u308f\u3051\u3066\u3001\u30d4\u30f3\u72b6\u614b\u3067\u8d77\u52d5\u3057\u5206\u3051\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\uff08\u5f8c\u8ff0\uff09\u3002\n\n\u4f7f\u7528\u6750\u6599\n\nESP-WROOM-02 \uff08\u79cb\u6708\u96fb\u5b50\u3067650\u5186\uff09\nDHT22\uff08ebay\u3067350\u5186\u7a0b\u5ea6\uff09\nCDS\u30bb\u30eb(\u79cb\u6708\u96fb\u5b50\u3067100\u51864\u500b\u5165)\n\u30b9\u30e9\u30a4\u30c9\u30b9\u30a4\u30c3\u30c1(\u79cb\u6708\u96fb\u5b50\u3067100\u51864\u500b\u5165)\n\u30b8\u30e3\u30f3\u30d1\u30d4\u30f3\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u30d1\u30ef\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb(ebay\u306790\u5186\u7a0b\u5ea6)\nUSB-TTL\u30b7\u30ea\u30a2\u30eb\u30b3\u30f3\u30d0\u30fc\u30bf(ebay\u3067100\u5186\u7a0b\u5ea6)\n\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u30d1\u30ef\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u30013.3v, 5.v\u306e\u4e21\u65b9\u304c\u51fa\u529b\u3067\u304d\u3001\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u306b\u305d\u306e\u307e\u307e\u3055\u305b\u3066\u3001\u3068\u3066\u3082\u4fbf\u5229\u3067\u304a\u3059\u3059\u3081\u3067\u3059\u3002\n\u203b\u4f46\u3057USB\u30b3\u30cd\u30af\u30bf\u90e8\u304c\u30e1\u30b9\u306a\u306e\u3067\u3001type A\u306e\u30aa\u30b9\u30aa\u30b9\u30b1\u30fc\u30d6\u30eb\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059(\u3053\u3046\u3044\u3046\u306e\u3067\u3059)\u3002\n\n\u56f3\n\nWROOM-02\u306e\u30d1\u30fc\u30c4\u90e8\u54c1\u304cfritzing\u306b\u306a\u3044\u306e\u3067\u3001\u9069\u5f53\u306aIC\u3092\u4ee3\u308f\u308a\u306b\u7528\u3044\u3066\u304a\u308a\u307e\u3059\u3002\u8aad\u307f\u66ff\u3048\u3066\u4e0b\u3055\u3044\u3002\u3002\u3002\n\n\u5149\u30bb\u30f3\u30b5\u306f\u3001WROOM-02\u306eADC\u6a5f\u80fd\u3092\u6301\u3063\u305fTOUT PIN\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n\n0V - 1V\u306e\u9593\u3067\u306e\u6e2c\u5b9a\u3067\u3059\u306e\u3067\u3001100k\u306847k\u306e\u62b5\u6297\u3067\u5206\u5727\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\u30b9\u30e9\u30a4\u30c9\u30b9\u30a4\u30c3\u30c1\n\n\n\u5de6\u306b\u3057\u3066\u8d77\u52d5\uff1aWROOM-02 \u30d7\u30ed\u30b0\u30e9\u30e0\u30e2\u30fc\u30c9\n\u53f3\u306b\u3057\u3066\u8d77\u52d5\uff1aWROOM-02 \u901a\u5e38\u8d77\u52d5\n\n\nIO5\u30d4\u30f3\u3092LOW\u306b\u3059\u308b\u3068\u3001\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\uff08\u5f8c\u8ff0\uff09\n\n\n\n\u30b9\u30b1\u30c3\u30c1\n\u4eca\u56de\u306f\u3001\u4e0b\u8a18\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7528\u3044\u307e\u3057\u305f\u3002\n\nFS.h\n\n\n\u30c7\u30fc\u30bf\u6c38\u7d9a\u5316\u7528\n\n\nRestClient.h\n\n\nHTTP Rest Client \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u7ba1\u7406\u304b\u3089\u3001rest\u3067\u691c\u7d22\u3059\u308b\u3068\u51fa\u3066\u304d\u307e\u3059\u3002\n\n\nDHT.h\n\n\nDHT22\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\n\ngithub\u306b\u3082\u3042\u3052\u3066\u3044\u307e\u3059\n\n#include <ESP8266WebServer.h>\n#include <RestClient.h>\n#include <FS.h>\n#include <DHT.h>\n\n/////////////////////////\n/// definitions\n// setup\u30e2\u30fc\u30c9\u6642\u306essid/password\n#define SSID \"esp8266\"\n#define PASSWORD \"12345678\"\n\n// \u3053\u306e\u30d4\u30f3\u304cLOW\u306a\u3089\u3070\u5f37\u5236\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30e2\u30fc\u30c9\n#define PIN_FORCE_SETUP 5\n\n// \u6c38\u7d9a\u5316\u30d5\u30a1\u30a4\u30eb\u540d\n#define WIFI_CONFIG \"/wifi.conf\"\n#define DATA_SEND_URL_CONFIG \"/data_send.txt\"\n\n// \u6e29\u6e7f\u5ea6\u8a08\n#define DHTPIN 4\n#define DHTTYPE DHT22\n\n// CDS\u30bb\u30eb\u306e\u30d4\u30f3\uff08ESP8266\u306b\u306fADC\u306f1\u3064\u3057\u304b\u7121\u304f\u30010V-1V\u306e\u7bc4\u56f2\u309210bit\u5206\u89e3\u80fd\u3067\u8aad\u3081\u308b\u3089\u3057\u3044\n// \u30d4\u30f3\u306fTOUT\u56fa\u5b9a\u3002\n#define CDSPIN A0\n// memo : \u79cb\u6708\u306eCDS\u3001\u5b9f\u6e2c\u30675k(\u660e) - 500k(\u6db2\u6676\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u5149)\u3060\u3063\u305f\n//       \u624b\u3067\u8986\u3046\u306815M\u7a0b\u5ea6\u307e\u3067\u4e0a\u304c\u3063\u305f\n// http://akizukidenshi.com/catalog/g/gI-00110/\n// 100k \u3068 47k\u3067\u5206\u5727\u3057\u3066\u3001A0\u3067\u6e2c\u5b9a\u3059\u308b\u3068\u3001\u7d04920\uff5e20\u304f\u3089\u3044\u307e\u3067\u5909\u5316\u3059\u308b\n\n// \u8a2d\u5b9a\u306eform\u30da\u30fc\u30b8\n#define INDEX_HTML \\\n  \"<html><head><meta name='viewport' content='width=device-width,initial-scale=1'></head><body>\" \\\n  \"<form method='GET' action='/set_ssid'><div>SSID:<input name='ssid'></div>\" \\\n  \"<div>PW:<input name='pw'></div>\" \\\n  \"<button>OK</button></form>\" \\\n  \"<hr>\" \\\n  \"<form method='GET' action='/set_data_url'><div>send host:<input name='host'></div>\" \\\n  \"<div>send path:<input name='path'></div>\" \\\n  \"<button>OK</button></form>\" \\\n  \"</body></html>\"\n/////////////////////////\n\n\n/////////////////////////\n// \u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\nESP8266WebServer *server;\nRestClient *client; \n// \u30c7\u30fc\u30bf\u9001\u4fe1\u5148\u306e\u30db\u30b9\u30c8\n// memo: RestClient\u304chost\u3092\u30dd\u30a4\u30f3\u30bf\u3067\u4fdd\u5b58\u3059\u308b\u306e\u3067\u3001\u6d88\u3055\u306a\u3044\u3067\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\u3002\nchar host[100];\n// \u30c7\u30fc\u30bf\u9001\u4fe1\u5148\u306e\u30d1\u30b9\nchar path[100];\n// \u6e29\u6e7f\u5ea6\u8a08\nDHT dht(DHTPIN, DHTTYPE);\n\n/////////////////////////\n\n\n/////////////////////////\n// \u95a2\u6570\n\nint try_connect(const char *, const char *);\n\n// setup\u30e2\u30fc\u30c9\u30cf\u30f3\u30c9\u30e9\uff1aindex\nvoid handleIndex() {\n  server->send(200, \"text/html\", INDEX_HTML);\n}\n\n// setup\u30e2\u30fc\u30c9\u30cf\u30f3\u30c9\u30e9\uff1aSSID/PW\u306e\u8a2d\u5b9a\nvoid handle_set_ssid() {\n  String ssid = server->arg(\"ssid\");\n  String pw   = server->arg(\"pw\");\n\n  if (ssid.length() > 0 && pw.length() > 0) {\n    // ok\n    // \u63a5\u7d9a\u3057\u3066\u307f\u308b\n    try_connect(ssid.c_str(), pw.c_str());\n    if (! is_wifi_connected()) {\n      // \u63a5\u7d9a\u5931\u6557\n      setup_config_mode();\n      /*\n      WiFi.softAPdisconnect(true);\n      WiFi.disconnect(true);\n      WiFi.mode(WIFI_AP);\n      WiFi.softAP(SSID, PASSWORD);\n      */\n      Serial.println(\"connection failed!\");\n    }\n    else {\n      // \u63a5\u7d9a\u6210\u529f\n      // wifi\u8a2d\u5b9a\u4fdd\u5b58\n      save_wifi_config(ssid, pw);\n      Serial.println(\"successfully connected!\");\n    }\n  }\n  else {\n    server->send(200, \"text/html\", \"need ssid and pw\");\n  }\n}\n\n// setup\u30e2\u30fc\u30c9\u30cf\u30f3\u30c9\u30e9\uff1a\u30c7\u30fc\u30bf\u9001\u4fe1\u5148\u306e\u8a2d\u5b9a\nvoid handle_set_data_url() {\n  String host = server->arg(\"host\");\n  String path = server->arg(\"path\");\n\n  if (host.length() > 0 && path.length() > 0) {\n    // ok\n    save_data_send_config(host, path);\n    server->send(200, \"text/html\", \"OK!\");\n  }\n  else {\n    server->send(200, \"text/html\", \"need host and path\");\n  }\n}\n\n// WIFI\u8a2d\u5b9a\u306e\u30bb\u30fc\u30d6\nvoid save_wifi_config(String ssid, String pw) {\n  File f  = SPIFFS.open(WIFI_CONFIG, \"w\");\n  f.println(ssid);\n  f.println(pw);\n  f.close();\n}\n\n// WIFI\u8a2d\u5b9a\u306e\u30ed\u30fc\u30c9\nvoid load_wifi_config(char *out_ssid, char *out_pw) {\n  File f  = SPIFFS.open(WIFI_CONFIG, \"r\");\n  String ssid = f.readStringUntil('\\n');\n  String pw   = f.readStringUntil('\\n');\n  ssid.trim();\n  pw.trim();\n  sprintf(out_ssid, \"%s\", ssid.c_str());\n  sprintf(out_pw, \"%s\", pw.c_str());\n  f.close();\n  Serial.println(\"ssid : \" + ssid);\n  Serial.println(\"pw   : \" + pw);\n}\n\n// \u30c7\u30fc\u30bf\u9001\u4fe1\u5148\u8a2d\u5b9a\u306e\u30bb\u30fc\u30d6\nvoid save_data_send_config(String host, String path) {\n  File f  = SPIFFS.open(DATA_SEND_URL_CONFIG, \"w\");\n  f.println(host);\n  f.println(path);\n  f.close();\n}\n\n// \u30c7\u30fc\u30bf\u9001\u4fe1\u5148\u306e\u30ed\u30fc\u30c9\nvoid load_data_send_config(char *o_host, char *o_path) {\n  File f  = SPIFFS.open(DATA_SEND_URL_CONFIG, \"r\");\n  String host  = f.readStringUntil('\\n');\n  String path  = f.readStringUntil('\\n');\n  host.trim();\n  path.trim();\n  sprintf(o_host, \"%s\", host.c_str());\n  sprintf(o_path, \"%s\", path.c_str());\n  Serial.println(\"host : \" + host);\n  Serial.println(\"path : \" + path);\n  f.close();\n}\n\n// WIFI\u3064\u306a\u304c\u3063\u3066\u3044\u308b\uff1f\nbool is_wifi_connected() {\n  return WiFi.status() == WL_CONNECTED;\n}\n\n// WIFI\u306b\u63a5\u7d9a\u3059\u308b\nint try_connect(const char  *ssid, const char *pw) {\n  Serial.println(\"ssid : \" + String(ssid));\n  Serial.println(\"pw   : \" + String(pw));\n  WiFi.softAPdisconnect(true);\n  WiFi.disconnect(true);\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, pw);\n  int wait = 20;\n  while (! is_wifi_connected()) {\n    delay(500);\n    if (wait-- == 0)  break;\n  }\n\n  Serial.println(\"\");\n  Serial.print(\"Connected to \");\n  Serial.println(ssid);\n  Serial.print(\"IP address: \");\n  Serial.println(WiFi.localIP());\n\n  return WiFi.status();\n}\n\n// \u30b5\u30fc\u30d0\u7acb\u3066\u308b\nvoid setup_config_mode() {\n  WiFi.softAP(SSID, PASSWORD);\n  if (server != NULL) {\n    delete server;\n  }\n  server  = new ESP8266WebServer(80);\n  server->on(\"/\", handleIndex);\n  server->on(\"/set_ssid\", handle_set_ssid);\n  server->on(\"/set_data_url\", handle_set_data_url);\n  server->begin();\n  Serial.println(\"server started\");\n}\n\n// \u6e29\u6e7f\u5ea6\u306e\u8aad\u307f\u8fbc\u307f\nbool read_hum_temp(float *o_hum, float *o_temp) {\n  *o_hum    = dht.readHumidity();\n  *o_temp   = dht.readTemperature();\n\n  if (isnan(*o_hum) || isnan(*o_temp)) {\n    // \u8aad\u307f\u8fbc\u307f\u5931\u6557\n    return false;\n  }\n  return true;\n}\n\n\n//////////////////////\nvoid setup() {\n  // \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u958b\u59cb\n  SPIFFS.begin();\n  // \u6e29\u6e7f\u5ea6\u8a08\u958b\u59cb\n  dht.begin();\n  // Serial\u306bException (29):\u304c\u3067\u305f\u3089\u4e0b\u8a18\u3092\u5b9f\u65bd\u3057\u3066\u307f\u308b\n  // https://github.com/esp8266/Arduino/issues/1648#issuecomment-185856545\n  //ESP.eraseConfig();\n  // ESP.reset(); \n  // http://qiita.com/exabugs/items/2f67ae363a1387c8967c\n\n  Serial.begin(9600);\n\n  // \u5f37\u5236\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30e2\u30fc\u30c9\u30d4\u30f3\n  pinMode(PIN_FORCE_SETUP, INPUT_PULLUP);\n  delay(200);\n  int setupMode = digitalRead(PIN_FORCE_SETUP);\n\n  if (setupMode == HIGH) {\n    // \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30d4\u30f3\u304cHIGH\u306a\u3089\u3070\u3001WiFi\u306b\u63a5\u7d9a\u3059\u308b\n    Serial.println(\"Setup pin = HIGH\");\n    load_data_send_config(host, path);\n    char ssid[64];\n    char pw[64];\n    load_wifi_config(ssid, pw);\n    Serial.println(\"load done\");\n    try_connect(ssid, pw);\n    Serial.println(\"HIGH done\");\n  }\n  else {\n    Serial.println(\"Setup pin = LOW\");\n    WiFi.disconnect();\n  }\n\n  // WiFi\u306b\u7e4b\u304c\u3063\u305f\u304b\u30c1\u30a7\u30c3\u30af\n  if ((! is_wifi_connected()) || setupMode == LOW) {\n    // Config Mode\n    Serial.println(\"entering setup config mode\");\n    setup_config_mode();\n  }\n  else {\n    // \u30c7\u30fc\u30bf\u9001\u4fe1\u30e2\u30fc\u30c9\n    client  = new RestClient(host);\n    Serial.println(\"RestClient setup done\");\n  }\n}\n\n\nvoid loop() {\n  if (is_wifi_connected()) {\n    // WiFi\u63a5\u7d9a\u6642\u306e\u30e1\u30a4\u30f3\u51e6\u7406\n    // \u660e\u308b\u3055\n    int brightness  = analogRead(CDSPIN);\n    // \u6e7f\u5ea6\n    float humidity;\n    // \u6e29\u5ea6\n    float temperature;\n    if (read_hum_temp(&humidity, &temperature) == false) {\n      // \u8aad\u307f\u8fbc\u307f\u5931\u6557\n      Serial.println(\"hum temp read failed\");\n      delay(2000);\n      return;\n    }\n    String req_path = String(path);\n    req_path  += String(\"?hum=\") + humidity + \"&temp=\" + temperature + \"&bri=\" + brightness;\n    Serial.println(req_path);\n\n    String response = \"\";\n    int status = client->get(req_path.c_str(), &response);\n    Serial.print(\"status = \");\n    Serial.println(status);\n    //Serial.println(response);\n    //Note: response\u304c\u3042\u307e\u308a\u306b\u3082\u5927\u304d\u3044\u3068\u3001\u30b7\u30b9\u30c6\u30e0\u304c\u843d\u3061\u308b\n    delay(60000);\n  }\n  else {\n    //setup_config_mode();\n    server->handleClient();\n  }\n}\n\n\n\n\u8d77\u52d5\u30e2\u30fc\u30c9\u8aac\u660e\n\n\u6b21\u306e\uff12\u7a2e\u985e\u306e\u30e2\u30fc\u30c9\u304c\u3042\u308a\u307e\u3059\n\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30e2\u30fc\u30c9\n\n\nWeb\u30b5\u30fc\u30d0\u3001AP\u3068\u3057\u3066\u8d77\u52d5\u3057\u3001\u5404\u7a2e\u306e\u8a2d\u5b9a\u304cWeb\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u53ef\u80fd\u306a\u30e2\u30fc\u30c9\n\n\n\u6e2c\u5b9a\u30e2\u30fc\u30c9\n\n\n\u6e29\u6e7f\u5ea6\u3001\u5149\u5ea6\u3092\u8a08\u6e2c\u3057\u3001\u9001\u4fe1\u3059\u308b\u30e2\u30fc\u30c9\n\n\n\n\n\u6c38\u7d9a\u5316\u3055\u308c\u305fWiFi\u306essid/pw\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\u3057\u307e\u3059\nIO5\u756a\u30d4\u30f3\u3092LOW\u306b\u3057\u3066\u8d77\u52d5\u3059\u308b\u3068\u3001\u5f37\u5236\u7684\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\u3057\u307e\u3059\n\n\n\u307e\u3068\u3081\nWROOM-02\u306e\u8a2d\u5b9a\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u5b9f\u65bd\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u958b\u767a\u74b0\u5883\u3044\u3089\u305a\u3067\u3001\u8a2d\u7f6e\u3057\u305f\u3044\u5834\u6240\u306e\u72b6\u6cc1\u306b\u5fdc\u3058\u3066SSID\u3084\u9001\u4fe1\u5148\u304c\u30b9\u30de\u30db\u30d6\u30e9\u30a6\u30b6\u3067\u5909\u66f4\u53ef\u80fd\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u96d1\u611f\nWROOM-02\u306f\u30d5\u30e9\u30c3\u30b7\u30e5\u306e\u5bb9\u91cf\u304c\u5927\u304d\u304f\u3066\u3001\u30b3\u30fc\u30c9\u30b5\u30a4\u30ba\u3092atmega328\u7b49\u3068\u6bd4\u3079\u3001\u3042\u307e\u308a\u610f\u8b58\u3057\u306a\u304f\u3066\u3082\u3044\u3044\u305f\u3081\u826f\u3044\u3067\u3059\u306d\u3002\n\u307e\u305f\u3001Arduino\u306fString\u30af\u30e9\u30b9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001sprintf\u3044\u3089\u305a\u306a\u306e\u3082good\u3067\u3059\u3002\n\u4f1a\u793e\u306b\u6301\u3063\u3066\u884c\u3063\u3066\u3001\u30b0\u30e9\u30d5\u5316\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u6982\u8981\nWiFi\u306e\u63a5\u7d9a\u60c5\u5831\u306f\u3001\u6642\u3068\u5834\u5408\u306b\u3088\u3063\u3066\u5909\u308f\u308a\u307e\u3059\u3002\n\u305d\u306e\u90fd\u5ea6PC\u3068\u30b1\u30fc\u30d6\u30eb\u3067\u7e4b\u3044\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3057\u76f4\u3059\u306e\u306f\u5927\u5909\u9762\u5012\u3067\u3059\u3002\n\n[@exabugs\u3055\u3093\u306e\u3053\u3061\u3089\u306e\u6295\u7a3f](http://qiita.com/exabugs/items/2f67ae363a1387c8967c)\u304c\u3068\u3066\u3082\u826f\u3044\u30a2\u30a4\u30c7\u30a2\u3060\u306a\u3041\u3068\u601d\u3044\u3001\n\u6e29\u6e7f\u5ea6\u8a08\uff0b\u5149\u5ea6\u8a08\u306b\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u306f\u3001SSID/PW\u3060\u3051\u3067\u306f\u306a\u304f\u3001\n\u30c7\u30fc\u30bf\u306e\u9001\u4fe1\u5148host\u3068path\u3082\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u8d77\u52d5\u30e2\u30fc\u30c9\u3092\u300c\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30e2\u30fc\u30c9\u300d\u3068\u300c\u6e2c\u5b9a\u30e2\u30fc\u30c9\u300d\u306b\u308f\u3051\u3066\u3001\u30d4\u30f3\u72b6\u614b\u3067\u8d77\u52d5\u3057\u5206\u3051\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\uff08\u5f8c\u8ff0\uff09\u3002\n\n\n# \u4f7f\u7528\u6750\u6599\n\n- ESP-WROOM-02 \uff08[\u79cb\u6708\u96fb\u5b50\u3067650\u5186](http://akizukidenshi.com/catalog/g/gK-09758/)\uff09\n- DHT22\uff08[ebay\u3067350\u5186\u7a0b\u5ea6](http://www.ebay.com/sch/i.html?_from=R40&_sacat=0&LH_BIN=1&_nkw=dht22&_sop=15)\uff09\n- CDS\u30bb\u30eb([\u79cb\u6708\u96fb\u5b50\u3067100\u51864\u500b\u5165](http://akizukidenshi.com/catalog/g/gI-05886/))\n- \u30b9\u30e9\u30a4\u30c9\u30b9\u30a4\u30c3\u30c1([\u79cb\u6708\u96fb\u5b50\u3067100\u51864\u500b\u5165](http://akizukidenshi.com/catalog/g/gP-01665/))\n- \u30b8\u30e3\u30f3\u30d1\u30d4\u30f3\n- \u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\n- \u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u30d1\u30ef\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb([ebay\u306790\u5186\u7a0b\u5ea6](http://www.ebay.com/sch/i.html?_odkw=breadboard+power&_sop=15&LH_BIN=1&_osacat=0&_from=R40&_trksid=p2045573.m570.l1313.TR0.TRC0.H0.XMB102.TRS0&_nkw=MB102&_sacat=0))\n- USB-TTL\u30b7\u30ea\u30a2\u30eb\u30b3\u30f3\u30d0\u30fc\u30bf([ebay\u3067100\u5186\u7a0b\u5ea6](http://www.ebay.com/sch/i.html?_from=R40&_sacat=0&LH_BIN=1&_nkw=PL2303HX&_sop=15))\n\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u30d1\u30ef\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u30013.3v, 5.v\u306e\u4e21\u65b9\u304c\u51fa\u529b\u3067\u304d\u3001\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u306b\u305d\u306e\u307e\u307e\u3055\u305b\u3066\u3001\u3068\u3066\u3082\u4fbf\u5229\u3067\u304a\u3059\u3059\u3081\u3067\u3059\u3002\n\u203b\u4f46\u3057USB\u30b3\u30cd\u30af\u30bf\u90e8\u304c\u30e1\u30b9\u306a\u306e\u3067\u3001type A\u306e\u30aa\u30b9\u30aa\u30b9\u30b1\u30fc\u30d6\u30eb\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059([\u3053\u3046\u3044\u3046\u306e\u3067\u3059](http://www.ebay.com/itm/252455456681))\u3002\n\n\n# \u56f3\n![wroom-02-\u6e29\u5ea6\u6e7f\u5ea6\u5149\u5ea6_\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9.png](https://qiita-image-store.s3.amazonaws.com/0/129201/2fcc2033-266f-fc77-ae94-a8f1a9219f29.png)\n\nWROOM-02\u306e\u30d1\u30fc\u30c4\u90e8\u54c1\u304cfritzing\u306b\u306a\u3044\u306e\u3067\u3001\u9069\u5f53\u306aIC\u3092\u4ee3\u308f\u308a\u306b\u7528\u3044\u3066\u304a\u308a\u307e\u3059\u3002\u8aad\u307f\u66ff\u3048\u3066\u4e0b\u3055\u3044\u3002\u3002\u3002\n\n- \u5149\u30bb\u30f3\u30b5\u306f\u3001WROOM-02\u306eADC\u6a5f\u80fd\u3092\u6301\u3063\u305fTOUT PIN\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\n    - 0V - 1V\u306e\u9593\u3067\u306e\u6e2c\u5b9a\u3067\u3059\u306e\u3067\u3001100k\u306847k\u306e\u62b5\u6297\u3067\u5206\u5727\u3057\u3066\u3044\u307e\u3059\u3002\n- \u30b9\u30e9\u30a4\u30c9\u30b9\u30a4\u30c3\u30c1\n    - \u5de6\u306b\u3057\u3066\u8d77\u52d5\uff1aWROOM-02 \u30d7\u30ed\u30b0\u30e9\u30e0\u30e2\u30fc\u30c9\n    - \u53f3\u306b\u3057\u3066\u8d77\u52d5\uff1aWROOM-02 \u901a\u5e38\u8d77\u52d5\n- IO5\u30d4\u30f3\u3092LOW\u306b\u3059\u308b\u3068\u3001\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\uff08\u5f8c\u8ff0\uff09\n\n\n![7461.jpg](https://qiita-image-store.s3.amazonaws.com/0/129201/d6700c74-1954-2f53-dc2f-843c23b73c3d.jpeg)\n\n# \u30b9\u30b1\u30c3\u30c1\n\n\u4eca\u56de\u306f\u3001\u4e0b\u8a18\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7528\u3044\u307e\u3057\u305f\u3002\n\n- FS.h\n    - \u30c7\u30fc\u30bf\u6c38\u7d9a\u5316\u7528\n- RestClient.h\n    - HTTP Rest Client \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u7ba1\u7406\u304b\u3089\u3001rest\u3067\u691c\u7d22\u3059\u308b\u3068\u51fa\u3066\u304d\u307e\u3059\u3002\n- DHT.h\n    - DHT22\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\n\n[github\u306b\u3082\u3042\u3052\u3066\u3044\u307e\u3059](https://github.com/alf-ytakada/arduino-esp8266-humtemp/)\n\n```cpp\n\n#include <ESP8266WebServer.h>\n#include <RestClient.h>\n#include <FS.h>\n#include <DHT.h>\n\n/////////////////////////\n/// definitions\n// setup\u30e2\u30fc\u30c9\u6642\u306essid/password\n#define SSID \"esp8266\"\n#define PASSWORD \"12345678\"\n\n// \u3053\u306e\u30d4\u30f3\u304cLOW\u306a\u3089\u3070\u5f37\u5236\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30e2\u30fc\u30c9\n#define PIN_FORCE_SETUP 5\n\n// \u6c38\u7d9a\u5316\u30d5\u30a1\u30a4\u30eb\u540d\n#define WIFI_CONFIG \"/wifi.conf\"\n#define DATA_SEND_URL_CONFIG \"/data_send.txt\"\n\n// \u6e29\u6e7f\u5ea6\u8a08\n#define DHTPIN 4\n#define DHTTYPE DHT22\n\n// CDS\u30bb\u30eb\u306e\u30d4\u30f3\uff08ESP8266\u306b\u306fADC\u306f1\u3064\u3057\u304b\u7121\u304f\u30010V-1V\u306e\u7bc4\u56f2\u309210bit\u5206\u89e3\u80fd\u3067\u8aad\u3081\u308b\u3089\u3057\u3044\n// \u30d4\u30f3\u306fTOUT\u56fa\u5b9a\u3002\n#define CDSPIN A0\n// memo : \u79cb\u6708\u306eCDS\u3001\u5b9f\u6e2c\u30675k(\u660e) - 500k(\u6db2\u6676\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u5149)\u3060\u3063\u305f\n//       \u624b\u3067\u8986\u3046\u306815M\u7a0b\u5ea6\u307e\u3067\u4e0a\u304c\u3063\u305f\n// http://akizukidenshi.com/catalog/g/gI-00110/\n// 100k \u3068 47k\u3067\u5206\u5727\u3057\u3066\u3001A0\u3067\u6e2c\u5b9a\u3059\u308b\u3068\u3001\u7d04920\uff5e20\u304f\u3089\u3044\u307e\u3067\u5909\u5316\u3059\u308b\n\n// \u8a2d\u5b9a\u306eform\u30da\u30fc\u30b8\n#define INDEX_HTML \\\n  \"<html><head><meta name='viewport' content='width=device-width,initial-scale=1'></head><body>\" \\\n  \"<form method='GET' action='/set_ssid'><div>SSID:<input name='ssid'></div>\" \\\n  \"<div>PW:<input name='pw'></div>\" \\\n  \"<button>OK</button></form>\" \\\n  \"<hr>\" \\\n  \"<form method='GET' action='/set_data_url'><div>send host:<input name='host'></div>\" \\\n  \"<div>send path:<input name='path'></div>\" \\\n  \"<button>OK</button></form>\" \\\n  \"</body></html>\"\n/////////////////////////\n\n\n/////////////////////////\n// \u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\nESP8266WebServer *server;\nRestClient *client; \n// \u30c7\u30fc\u30bf\u9001\u4fe1\u5148\u306e\u30db\u30b9\u30c8\n// memo: RestClient\u304chost\u3092\u30dd\u30a4\u30f3\u30bf\u3067\u4fdd\u5b58\u3059\u308b\u306e\u3067\u3001\u6d88\u3055\u306a\u3044\u3067\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\u3002\nchar host[100];\n// \u30c7\u30fc\u30bf\u9001\u4fe1\u5148\u306e\u30d1\u30b9\nchar path[100];\n// \u6e29\u6e7f\u5ea6\u8a08\nDHT dht(DHTPIN, DHTTYPE);\n\n/////////////////////////\n\n\n/////////////////////////\n// \u95a2\u6570\n\nint try_connect(const char *, const char *);\n\n// setup\u30e2\u30fc\u30c9\u30cf\u30f3\u30c9\u30e9\uff1aindex\nvoid handleIndex() {\n  server->send(200, \"text/html\", INDEX_HTML);\n}\n\n// setup\u30e2\u30fc\u30c9\u30cf\u30f3\u30c9\u30e9\uff1aSSID/PW\u306e\u8a2d\u5b9a\nvoid handle_set_ssid() {\n  String ssid = server->arg(\"ssid\");\n  String pw   = server->arg(\"pw\");\n\n  if (ssid.length() > 0 && pw.length() > 0) {\n    // ok\n    // \u63a5\u7d9a\u3057\u3066\u307f\u308b\n    try_connect(ssid.c_str(), pw.c_str());\n    if (! is_wifi_connected()) {\n      // \u63a5\u7d9a\u5931\u6557\n      setup_config_mode();\n      /*\n      WiFi.softAPdisconnect(true);\n      WiFi.disconnect(true);\n      WiFi.mode(WIFI_AP);\n      WiFi.softAP(SSID, PASSWORD);\n      */\n      Serial.println(\"connection failed!\");\n    }\n    else {\n      // \u63a5\u7d9a\u6210\u529f\n      // wifi\u8a2d\u5b9a\u4fdd\u5b58\n      save_wifi_config(ssid, pw);\n      Serial.println(\"successfully connected!\");\n    }\n  }\n  else {\n    server->send(200, \"text/html\", \"need ssid and pw\");\n  }\n}\n\n// setup\u30e2\u30fc\u30c9\u30cf\u30f3\u30c9\u30e9\uff1a\u30c7\u30fc\u30bf\u9001\u4fe1\u5148\u306e\u8a2d\u5b9a\nvoid handle_set_data_url() {\n  String host = server->arg(\"host\");\n  String path = server->arg(\"path\");\n\n  if (host.length() > 0 && path.length() > 0) {\n    // ok\n    save_data_send_config(host, path);\n    server->send(200, \"text/html\", \"OK!\");\n  }\n  else {\n    server->send(200, \"text/html\", \"need host and path\");\n  }\n}\n\n// WIFI\u8a2d\u5b9a\u306e\u30bb\u30fc\u30d6\nvoid save_wifi_config(String ssid, String pw) {\n  File f  = SPIFFS.open(WIFI_CONFIG, \"w\");\n  f.println(ssid);\n  f.println(pw);\n  f.close();\n}\n\n// WIFI\u8a2d\u5b9a\u306e\u30ed\u30fc\u30c9\nvoid load_wifi_config(char *out_ssid, char *out_pw) {\n  File f  = SPIFFS.open(WIFI_CONFIG, \"r\");\n  String ssid = f.readStringUntil('\\n');\n  String pw   = f.readStringUntil('\\n');\n  ssid.trim();\n  pw.trim();\n  sprintf(out_ssid, \"%s\", ssid.c_str());\n  sprintf(out_pw, \"%s\", pw.c_str());\n  f.close();\n  Serial.println(\"ssid : \" + ssid);\n  Serial.println(\"pw   : \" + pw);\n}\n\n// \u30c7\u30fc\u30bf\u9001\u4fe1\u5148\u8a2d\u5b9a\u306e\u30bb\u30fc\u30d6\nvoid save_data_send_config(String host, String path) {\n  File f  = SPIFFS.open(DATA_SEND_URL_CONFIG, \"w\");\n  f.println(host);\n  f.println(path);\n  f.close();\n}\n\n// \u30c7\u30fc\u30bf\u9001\u4fe1\u5148\u306e\u30ed\u30fc\u30c9\nvoid load_data_send_config(char *o_host, char *o_path) {\n  File f  = SPIFFS.open(DATA_SEND_URL_CONFIG, \"r\");\n  String host  = f.readStringUntil('\\n');\n  String path  = f.readStringUntil('\\n');\n  host.trim();\n  path.trim();\n  sprintf(o_host, \"%s\", host.c_str());\n  sprintf(o_path, \"%s\", path.c_str());\n  Serial.println(\"host : \" + host);\n  Serial.println(\"path : \" + path);\n  f.close();\n}\n\n// WIFI\u3064\u306a\u304c\u3063\u3066\u3044\u308b\uff1f\nbool is_wifi_connected() {\n  return WiFi.status() == WL_CONNECTED;\n}\n\n// WIFI\u306b\u63a5\u7d9a\u3059\u308b\nint try_connect(const char  *ssid, const char *pw) {\n  Serial.println(\"ssid : \" + String(ssid));\n  Serial.println(\"pw   : \" + String(pw));\n  WiFi.softAPdisconnect(true);\n  WiFi.disconnect(true);\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, pw);\n  int wait = 20;\n  while (! is_wifi_connected()) {\n    delay(500);\n    if (wait-- == 0)  break;\n  }\n  \n  Serial.println(\"\");\n  Serial.print(\"Connected to \");\n  Serial.println(ssid);\n  Serial.print(\"IP address: \");\n  Serial.println(WiFi.localIP());\n\n  return WiFi.status();\n}\n\n// \u30b5\u30fc\u30d0\u7acb\u3066\u308b\nvoid setup_config_mode() {\n  WiFi.softAP(SSID, PASSWORD);\n  if (server != NULL) {\n    delete server;\n  }\n  server  = new ESP8266WebServer(80);\n  server->on(\"/\", handleIndex);\n  server->on(\"/set_ssid\", handle_set_ssid);\n  server->on(\"/set_data_url\", handle_set_data_url);\n  server->begin();\n  Serial.println(\"server started\");\n}\n\n// \u6e29\u6e7f\u5ea6\u306e\u8aad\u307f\u8fbc\u307f\nbool read_hum_temp(float *o_hum, float *o_temp) {\n  *o_hum    = dht.readHumidity();\n  *o_temp   = dht.readTemperature();\n\n  if (isnan(*o_hum) || isnan(*o_temp)) {\n    // \u8aad\u307f\u8fbc\u307f\u5931\u6557\n    return false;\n  }\n  return true;\n}\n\n\n//////////////////////\nvoid setup() {\n  // \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u958b\u59cb\n  SPIFFS.begin();\n  // \u6e29\u6e7f\u5ea6\u8a08\u958b\u59cb\n  dht.begin();\n  // Serial\u306bException (29):\u304c\u3067\u305f\u3089\u4e0b\u8a18\u3092\u5b9f\u65bd\u3057\u3066\u307f\u308b\n  // https://github.com/esp8266/Arduino/issues/1648#issuecomment-185856545\n  //ESP.eraseConfig();\n  // ESP.reset(); \n  // http://qiita.com/exabugs/items/2f67ae363a1387c8967c\n\n  Serial.begin(9600);\n\n  // \u5f37\u5236\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30e2\u30fc\u30c9\u30d4\u30f3\n  pinMode(PIN_FORCE_SETUP, INPUT_PULLUP);\n  delay(200);\n  int setupMode = digitalRead(PIN_FORCE_SETUP);\n  \n  if (setupMode == HIGH) {\n    // \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30d4\u30f3\u304cHIGH\u306a\u3089\u3070\u3001WiFi\u306b\u63a5\u7d9a\u3059\u308b\n    Serial.println(\"Setup pin = HIGH\");\n    load_data_send_config(host, path);\n    char ssid[64];\n    char pw[64];\n    load_wifi_config(ssid, pw);\n    Serial.println(\"load done\");\n    try_connect(ssid, pw);\n    Serial.println(\"HIGH done\");\n  }\n  else {\n    Serial.println(\"Setup pin = LOW\");\n    WiFi.disconnect();\n  }\n\n  // WiFi\u306b\u7e4b\u304c\u3063\u305f\u304b\u30c1\u30a7\u30c3\u30af\n  if ((! is_wifi_connected()) || setupMode == LOW) {\n    // Config Mode\n    Serial.println(\"entering setup config mode\");\n    setup_config_mode();\n  }\n  else {\n    // \u30c7\u30fc\u30bf\u9001\u4fe1\u30e2\u30fc\u30c9\n    client  = new RestClient(host);\n    Serial.println(\"RestClient setup done\");\n  }\n}\n\n\nvoid loop() {\n  if (is_wifi_connected()) {\n    // WiFi\u63a5\u7d9a\u6642\u306e\u30e1\u30a4\u30f3\u51e6\u7406\n    // \u660e\u308b\u3055\n    int brightness  = analogRead(CDSPIN);\n    // \u6e7f\u5ea6\n    float humidity;\n    // \u6e29\u5ea6\n    float temperature;\n    if (read_hum_temp(&humidity, &temperature) == false) {\n      // \u8aad\u307f\u8fbc\u307f\u5931\u6557\n      Serial.println(\"hum temp read failed\");\n      delay(2000);\n      return;\n    }\n    String req_path = String(path);\n    req_path  += String(\"?hum=\") + humidity + \"&temp=\" + temperature + \"&bri=\" + brightness;\n    Serial.println(req_path);\n\n    String response = \"\";\n    int status = client->get(req_path.c_str(), &response);\n    Serial.print(\"status = \");\n    Serial.println(status);\n    //Serial.println(response);\n    //Note: response\u304c\u3042\u307e\u308a\u306b\u3082\u5927\u304d\u3044\u3068\u3001\u30b7\u30b9\u30c6\u30e0\u304c\u843d\u3061\u308b\n    delay(60000);\n  }\n  else {\n    //setup_config_mode();\n    server->handleClient();\n  }\n}\n\n```\n\n## \u8d77\u52d5\u30e2\u30fc\u30c9\u8aac\u660e\n- \u6b21\u306e\uff12\u7a2e\u985e\u306e\u30e2\u30fc\u30c9\u304c\u3042\u308a\u307e\u3059\n    - \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30e2\u30fc\u30c9\n        - Web\u30b5\u30fc\u30d0\u3001AP\u3068\u3057\u3066\u8d77\u52d5\u3057\u3001\u5404\u7a2e\u306e\u8a2d\u5b9a\u304cWeb\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u53ef\u80fd\u306a\u30e2\u30fc\u30c9\n    - \u6e2c\u5b9a\u30e2\u30fc\u30c9\n        - \u6e29\u6e7f\u5ea6\u3001\u5149\u5ea6\u3092\u8a08\u6e2c\u3057\u3001\u9001\u4fe1\u3059\u308b\u30e2\u30fc\u30c9\n- \u6c38\u7d9a\u5316\u3055\u308c\u305fWiFi\u306essid/pw\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\u3057\u307e\u3059\n- IO5\u756a\u30d4\u30f3\u3092LOW\u306b\u3057\u3066\u8d77\u52d5\u3059\u308b\u3068\u3001\u5f37\u5236\u7684\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\u3057\u307e\u3059\n\n# \u307e\u3068\u3081\nWROOM-02\u306e\u8a2d\u5b9a\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u5b9f\u65bd\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u958b\u767a\u74b0\u5883\u3044\u3089\u305a\u3067\u3001\u8a2d\u7f6e\u3057\u305f\u3044\u5834\u6240\u306e\u72b6\u6cc1\u306b\u5fdc\u3058\u3066SSID\u3084\u9001\u4fe1\u5148\u304c\u30b9\u30de\u30db\u30d6\u30e9\u30a6\u30b6\u3067\u5909\u66f4\u53ef\u80fd\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\n# \u96d1\u611f\nWROOM-02\u306f\u30d5\u30e9\u30c3\u30b7\u30e5\u306e\u5bb9\u91cf\u304c\u5927\u304d\u304f\u3066\u3001\u30b3\u30fc\u30c9\u30b5\u30a4\u30ba\u3092atmega328\u7b49\u3068\u6bd4\u3079\u3001\u3042\u307e\u308a\u610f\u8b58\u3057\u306a\u304f\u3066\u3082\u3044\u3044\u305f\u3081\u826f\u3044\u3067\u3059\u306d\u3002\n\u307e\u305f\u3001Arduino\u306fString\u30af\u30e9\u30b9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001sprintf\u3044\u3089\u305a\u306a\u306e\u3082good\u3067\u3059\u3002\n\n\n\u4f1a\u793e\u306b\u6301\u3063\u3066\u884c\u3063\u3066\u3001\u30b0\u30e9\u30d5\u5316\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["ESP8266", "ESP-WROOM-02", "IoT", "Arduino"]}