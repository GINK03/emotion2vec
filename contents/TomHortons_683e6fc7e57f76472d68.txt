{"context": "\n\n\u306f\u3058\u3081\u306b\n\u672c\u8a18\u4e8b\u306fPython2.7, numpy 1.11, scipy 0.17, scikit-learn 0.18, matplotlib 1.5\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\njupyter notebook\u4e0a\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\u307f\u3067\u3059\uff0e\nData loading utilities\u3092\u5143\u306b\uff0c\u8a18\u4e8b\u3092\u66f8\u304f\u6642\u306b\u3055\u3063\u3068\u6e96\u5099\u3067\u304d\u308b\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u307e\u3068\u3081\u307e\u3057\u305f\uff0e\nversion 0.18\u3068\u305d\u308c\u4ee5\u524d\u3067\u306f\u4e00\u90e8\u4ed5\u69d8\u304c\u5909\u308f\u3063\u3066\u3044\u307e\u3059\uff0e\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u4f7f\u7528\u3059\u308b\u305f\u3073\u306b\u9010\u6b21\u66f4\u65b0\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\n\u76ee\u6b21\n\nloading dataset\n\n\niris\nboston\ndiabetes\ndigits\nlinnerud\n\n\nGenerating dataset\n\n\nblobs\nmake_classification\n\n\n\u53c2\u8003\n\n\n1. Loading dataset\nSklearn\u306eLorder\u3092\u4f7f\u7528\u3057\uff0c\u4e8b\u524d\u306b\u6e96\u5099\u3055\u308c\u305f\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3057\u307e\u3059\uff0e\nData loading utilities\u3067\u306f\uff0ctoy datasets\u3068\u3057\u30665\u3064\u306e\u30c7\u30fc\u30bf\u3092\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059\uff0e\n\u3053\u308c\u3089\u306f\u30c7\u30fc\u30bf\u91cf\u304c\u5927\u304d\u304f\u306a\u3044\u5206(100\u30b5\u30f3\u30d7\u30eb\u524d\u5f8c)\uff0c\u30aa\u30d5\u30e9\u30a4\u30f3\u3067\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3067\u304b\u306a\u308a\u8a73\u3057\u304f\u307e\u3068\u3081\u3066\u3042\u3063\u305f\u306e\u3067\uff0c\u30c7\u30fc\u30bf\u306e\u7c21\u5358\u306a\u7d39\u4ecb\u3060\u3051\u3057\u307e\u3059\uff0e\n\n1.1. iris\n\u57fa\u672c\u7684\u306airis\u30c7\u30fc\u30bf\u3092bunch object\u3067\u53d6\u5f97\u3059\u308b\uff0e\n(ver0.18\u304b\u3089load_iris(return_X_y=True)\u3068\u3059\u308b\u3053\u3068\u3067\u30c7\u30fc\u30bf\uff06\u30e9\u30d9\u30eb\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u53d6\u5f97\u53ef\u80fd)\n\u5206\u985e\u554f\u984c\u306b\u7528\u3044\u308b\uff0e\n\nload_iris.py\nfrom sklearn.datasets import load_iris\ndata = load_iris()\nprint data.target_names\nprint data.target[:10]\nprint data.data[:10]\n\n\n\u5b9f\u884c\u3059\u308b\u3068\uff13\u3064\u306e\u30e9\u30d9\u30eb\u540d\uff0c\u30c7\u30fc\u30bf\u306e\u30e9\u30d9\u30eb\uff0c\uff14\u6b21\u5143\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5f97\u3089\u308c\u308b\uff0e\u30b5\u30a4\u30ba\u306f\u30e9\u30d9\u30eb\u3054\u3068\u306b50\u30b5\u30f3\u30d7\u30eb\uff0e\n\u5b9f\u884c\u4f8b:\n['setosa' 'versicolor' 'virginica']\n[0 0 0 0 0 0 0 0 0 0]\n[[ 5.1  3.5  1.4  0.2]\n [ 4.9  3.   1.4  0.2]\n [ 4.7  3.2  1.3  0.2]\n [ 4.6  3.1  1.5  0.2]\n [ 5.   3.6  1.4  0.2]\n [ 5.4  3.9  1.7  0.4]\n [ 4.6  3.4  1.4  0.3]\n [ 5.   3.4  1.5  0.2]\n [ 4.4  2.9  1.4  0.2]\n [ 4.9  3.1  1.5  0.1]]\n\n\n1.2. boston\n\u30dc\u30b9\u30c8\u30f3\u5e02\u90ca\u5916\u306e\uff11\uff13\u7a2e\u985e\u306e\u60c5\u5831\u3068\u5730\u57df\u5225\u4f4f\u5b85\u4fa1\u683c\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\uff0e\u56de\u5e30\u554f\u984c\u306b\u5229\u7528\u3067\u304d\u308b\uff0e\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u6570\n\u6b21\u5143\u6570\n\u7279\u5fb4\n\u30e9\u30d9\u30eb\n\n\n\n\n506\n13\nreal x>0\nreal 5<y<50\n\n\n\n\u30d1\u30e9\u30e1\u30fc\u30bf(12\u500b)\u306e\u8aac\u660e\n0. CRIM: \u4eba\u53e3 1 \u4eba\u5f53\u305f\u308a\u306e\u72af\u7f6a\u767a\u751f\u6570    \n1. 25,000 \u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\u4ee5\u4e0a\u306e\u4f4f\u5c45\u533a\u753b\u306e\u5360\u3081\u308b\u5272\u5408\n2. INDUS: \u5c0f\u58f2\u696d\u4ee5\u5916\u306e\u5546\u696d\u304c\u5360\u3081\u308b\u9762\u7a4d\u306e\u5272\u5408\n3. CHAS: \u30c1\u30e3\u30fc\u30eb\u30ba\u5ddd\u306b\u3088\u308b\u30c0\u30df\u30fc\u5909\u6570 (1: \u5ddd\u306e\u5468\u8fba, 0: \u305d\u308c\u4ee5\u5916)\n4. NOX: NOx \u306e\u6fc3\u5ea6\n5. RM: \u4f4f\u5c45\u306e\u5e73\u5747\u90e8\u5c4b\u6570\n6. AGE: 1940 \u5e74\u3088\u308a\u524d\u306b\u5efa\u3066\u3089\u308c\u305f\u7269\u4ef6\u306e\u5272\u5408\n7. DIS: 5 \u3064\u306e\u30dc\u30b9\u30c8\u30f3\u5e02\u306e\u96c7\u7528\u65bd\u8a2d\u304b\u3089\u306e\u8ddd\u96e2 (\u91cd\u307f\u4ed8\u3051\u6e08)\n8. RAD: \u74b0\u72b6\u9ad8\u901f\u9053\u8def\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3057\u3084\u3059\u3055\n9. TAX: $10,000 \u30c9\u30eb\u3042\u305f\u308a\u306e\u4e0d\u52d5\u7523\u7a0e\u7387\u306e\u7dcf\u8a08\n10. PTRATIO: \u753a\u6bce\u306e\u5150\u7ae5\u3068\u6559\u5e2b\u306e\u6bd4\u7387\n11. B: \u753a\u6bce\u306e\u9ed2\u4eba (Bk) \u306e\u6bd4\u7387\u3092\u6b21\u306e\u5f0f\u3067\u8868\u3057\u305f\u3082\u306e\u3002 1000(Bk \u2013 0.63)^2\n12. LSTAT: \u7d66\u4e0e\u306e\u4f4e\u3044\u8077\u696d\u306b\u5f93\u4e8b\u3059\u308b\u4eba\u53e3\u306e\u5272\u5408 (%)\n\n\u4e0b\u306e\u56f3\u306f\uff0c\u4eba\u5de5\uff11\u4eba\u3042\u305f\u308a\u306e\u72af\u7f6a\u767a\u751f\u7387\u3068\uff0c\u30dc\u30b9\u30c8\u30f3\u5e02\u90ca\u5916\u306e\u5730\u57df\u5225\u4f4f\u5b85\u4fa1\u683c\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u3082\u306e\u3067\u3059\uff0e\n\n\n1.3. diabetes\n\u7cd6\u5c3f\u75c5\u60a3\u8005442\u4eba\u306e\u691c\u67fb\u6570\u5024\u3068\uff11\u5e74\u5f8c\u306e\u75be\u60a3\u9032\u884c\u72b6\u6cc1\uff0e\u56de\u5e30\u554f\u984c\u306b\u7528\u3044\u308b\uff0e\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u6570\n\u6b21\u5143\u6570\n\u7279\u5fb4\n\u30e9\u30d9\u30eb\n\n\n\n\n442\n10\nreal -2>x>2\nint 25<y<346\n\n\n\n\n1.4. digits\n0 \uff5e 9 \u306e 10 \u6587\u5b57\u306e\u624b\u66f8\u304d\u306e\u6570\u5b57\u3092 64 (8\u00d78) \u500b\u306e\u753b\u7d20\u306b\u5206\u89e3\u3057\u305f\u3082\u306e\uff0e\u753b\u50cf\u8a8d\u8b58\u306b\u7528\u3044\u308b\uff0e\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u6570\n\u6b21\u5143\u6570\n\u7279\u5fb4\n\u30e9\u30d9\u30eb\n\n\n\n\n1.797\n64\nint 0<x<16\nint 0<y<9\n\n\n\n\n1.5. Linnerud\n\u30ce\u30fc\u30b9\u30ab\u30ed\u30e9\u30a4\u30ca\u5dde\u7acb\u5927\u5b66\u306e A. C. linnerud \u535a\u58eb\u304c\u4f5c\u6210\u3057\u305f\uff0c20\u4eba\u306e\u6210\u4eba\u7537\u6027\u306b\u5bfe\u3057\u3066\u30d5\u30a3\u30c3\u30c8\u30cd\u30b9\u30af\u30e9\u30d6\u3067\u6e2c\u5b9a\u3057\u305f3\u3064\u306e\u751f\u7406\u5b66\u7684\u7279\u5fb4\u30683\u3064\u306e\u904b\u52d5\u80fd\u529b\u306e\u95a2\u4fc2\uff0e\u591a\u5909\u6570\u89e3\u6790\u306b\u7528\u3044\u308b\uff0e\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u6570\n\u6b21\u5143\u6570\n\n\n\n\n20\n\u8aac\u660e\u5909\u6570:3, \u76ee\u7684\u5909\u6570:3\n\n\n\n\u8aac\u660e\u5909\u6570\u306e\u4e2d\u8eab\n    Chins   Situps  Jumps\n0   5   162 60\n1   2   110 60\n2   12  101 101\n3   12  105 37\n4   13  155 58\n\n\u76ee\u7684\u5909\u6570\u306e\u4e2d\u8eab\nWeight  Waist   Pulse\n0   191 36  50\n1   189 37  52\n2   193 38  58\n3   162 35  62\n\n\n2. Generating dataset\nSample generator\u3092\u4f7f\u7528\u3057\uff0c\u7279\u5fb4\u306e\u3042\u308b\u30c7\u30fc\u30bf\u3092\u305d\u306e\u90fd\u5ea6\u751f\u6210\u3057\u307e\u3059\uff0e\n\u7279\u5b9a\u306e\u7279\u5fb4\u3092\u6301\u3063\u305f\u30c7\u30fc\u30bf\u3092\u6b32\u3057\u3044\u3060\u3051\u751f\u6210\u53ef\u80fd\uff0e\n\n2.1. blobs\n\u4e2d\u5fc3\u306e\u3042\u308b\u67d3\u307f\u304c\u5e83\u304c\u3063\u305f\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3059\u308b.\nn_samples, centers\u3067\u305d\u308c\u305e\u308c\u30b5\u30f3\u30d7\u30eb\u6570\u3068\u30af\u30e9\u30b9\u30bf\u306e\u6570\u3092\u9078\u629e\u53ef\u80fd\uff0e\nn_features\u3067\u30e9\u30d9\u30eb\u306e\u6570\u3092\u8a2d\u5b9a\u53ef\u80fd\uff0e\n\nmake_blobs.py\nfrom sklearn.datasets.samples_generator import make_blobs\nX, y = make_blobs(n_samples=10, centers=3, n_features=2, random_state=0)\nprint(X.shape)\n\n\n\u5b9f\u884c\u4f8b:\narray([[ 1.12031365,  5.75806083],\n       [ 1.7373078 ,  4.42546234],\n       [ 2.36833522,  0.04356792],\n       [ 0.87305123,  4.71438583],\n       [-0.66246781,  2.17571724],\n       [ 0.74285061,  1.46351659],\n       [-4.07989383,  3.57150086],\n       [ 3.54934659,  0.6925054 ],\n       [ 2.49913075,  1.23133799],\n       [ 1.9263585 ,  4.15243012]])\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\uff13\u3064\u306e\u30c7\u30fc\u30bf\u96c6\u5408\u30922\u30af\u30e9\u30b9\u3067\u751f\u6210\u3057\u3066\u3044\u308b\uff0e\n(version 0.18\u4ee5\u524d\u3067\u306ftrain_test_split\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059)\n\n\n2.2. make_classification\n\u5206\u985e\u554f\u984c\u3092\u53d6\u308a\u6271\u3044\u305f\u3044\u6642\u306b\uff0c\u591a\u6b21\u5143\u306e\u30c7\u30fc\u30bf\u3068\u305d\u308c\u305e\u308c\u306e\u30e9\u30d9\u30eb\u3092\u751f\u6210\u3067\u304d\u308b\uff0e\n\u3053\u3061\u3089\u306e\u30b5\u30a4\u30c8\u306b\u8a73\u7d30\u306a\u8aac\u660e\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\n\u57fa\u672c\u7684\u306bn_features\uff0cn_classes\uff0cn_informative\u3092\u8abf\u6574\u3059\u308b\u3053\u3068\u3067\uff0c\u76f8\u95a2\u95a2\u4fc2\u3092\u542b\u3093\u3060\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n\n\nParameter name\nDescription\nDefault\n\n\n\n\nn_features\n\u751f\u6210\u3059\u308b\u30c7\u30fc\u30bf\u306e\u6b21\u5143\u6570\n20\n\n\nn_classes\n\u30e9\u30d9\u30eb\u306e\u6570\n2\n\n\nn_informative\n\u30c7\u30fc\u30bf\u306e\u751f\u6210\u30d7\u30ed\u30bb\u30b9\u3067\u4f7f\u7528\u3059\u308b\u6b63\u898f\u5206\u5e03\u306e\u6570\n2\n\n\nn_cluster_per_class\n\u5404\u30e9\u30d9\u30eb\u306b\u542b\u307e\u308c\u308b\u6b63\u898f\u5206\u5e03\u306e\u6570\n2\n\n\n\n\nmake_classification.py\nfrom sklearn.datasets import make_classification\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nX1, Y1 = make_classification(n_samples=1000, n_features=2, n_redundant=0, n_informative=2,n_clusters_per_class=2, n_classes=2)\nplt.scatter(X1[:, 0], X1[:, 1], marker='o', c=Y1)\n\n\n\u5b9f\u884c\u4f8b:\n(Informative features\u3068Redundunt fetures\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u629e\u3057\u3066\u3044\u308b\u305f\u3081\uff0c\u30d7\u30ed\u30c3\u30c8\u306f\u5b9f\u884c\u6bce\u306b\u5909\u5316\u3057\u307e\u3059\uff0e)\n\n\nscikit-learn\u306e\u4f8b\n\u5206\u304b\u308a\u3084\u3059\u3044example\u304c\u3042\u3063\u305f\u306e\u3067\uff0c\u3053\u3061\u3089\u3082\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0e\n\n\n\u53c2\u8003\nData loading utilities\nblobs\nmake_classification\nscikit-learn\u3092\u7528\u3044\u305f\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u751f\u6210\n# \u306f\u3058\u3081\u306b\n\u672c\u8a18\u4e8b\u306fPython2.7, numpy 1.11, scipy 0.17, scikit-learn 0.18, matplotlib 1.5\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\njupyter notebook\u4e0a\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\u307f\u3067\u3059\uff0e\n[Data loading utilities](http://scikit-learn.org/stable/datasets/)\u3092\u5143\u306b\uff0c\u8a18\u4e8b\u3092\u66f8\u304f\u6642\u306b\u3055\u3063\u3068\u6e96\u5099\u3067\u304d\u308b\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u307e\u3068\u3081\u307e\u3057\u305f\uff0e\nversion 0.18\u3068\u305d\u308c\u4ee5\u524d\u3067\u306f\u4e00\u90e8\u4ed5\u69d8\u304c\u5909\u308f\u3063\u3066\u3044\u307e\u3059\uff0e\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u4f7f\u7528\u3059\u308b\u305f\u3073\u306b\u9010\u6b21\u66f4\u65b0\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\n# \u76ee\u6b21\n1. loading dataset\n    * iris\n    * boston\n    * diabetes\n    * digits\n    * linnerud\n2. Generating dataset\n    * blobs\n    * make_classification\n4. \u53c2\u8003\n\n# 1. Loading dataset\nSklearn\u306eLorder\u3092\u4f7f\u7528\u3057\uff0c\u4e8b\u524d\u306b\u6e96\u5099\u3055\u308c\u305f\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3057\u307e\u3059\uff0e\n[Data loading utilities](http://scikit-learn.org/stable/datasets/)\u3067\u306f\uff0ctoy datasets\u3068\u3057\u30665\u3064\u306e\u30c7\u30fc\u30bf\u3092\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059\uff0e\n\u3053\u308c\u3089\u306f\u30c7\u30fc\u30bf\u91cf\u304c\u5927\u304d\u304f\u306a\u3044\u5206(100\u30b5\u30f3\u30d7\u30eb\u524d\u5f8c)\uff0c\u30aa\u30d5\u30e9\u30a4\u30f3\u3067\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://pythondatascience.plavox.info/scikit-learn/scikit-learn%E3%81%AB%E4%BB%98%E5%B1%9E%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E3%83%87%E3%83%BC%E3%82%BF%E3%82%BB%E3%83%83%E3%83%88/)\u3067\u304b\u306a\u308a\u8a73\u3057\u304f\u307e\u3068\u3081\u3066\u3042\u3063\u305f\u306e\u3067\uff0c\u30c7\u30fc\u30bf\u306e\u7c21\u5358\u306a\u7d39\u4ecb\u3060\u3051\u3057\u307e\u3059\uff0e\n\n## 1.1. iris\n\u57fa\u672c\u7684\u306airis\u30c7\u30fc\u30bf\u3092bunch object\u3067\u53d6\u5f97\u3059\u308b\uff0e\n(ver0.18\u304b\u3089load_iris(return_X_y=True)\u3068\u3059\u308b\u3053\u3068\u3067\u30c7\u30fc\u30bf\uff06\u30e9\u30d9\u30eb\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u53d6\u5f97\u53ef\u80fd)\n\u5206\u985e\u554f\u984c\u306b\u7528\u3044\u308b\uff0e\n\n```load_iris.py\nfrom sklearn.datasets import load_iris\ndata = load_iris()\nprint data.target_names\nprint data.target[:10]\nprint data.data[:10]\n```\n\u5b9f\u884c\u3059\u308b\u3068\uff13\u3064\u306e\u30e9\u30d9\u30eb\u540d\uff0c\u30c7\u30fc\u30bf\u306e\u30e9\u30d9\u30eb\uff0c\uff14\u6b21\u5143\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5f97\u3089\u308c\u308b\uff0e\u30b5\u30a4\u30ba\u306f\u30e9\u30d9\u30eb\u3054\u3068\u306b50\u30b5\u30f3\u30d7\u30eb\uff0e\n\u5b9f\u884c\u4f8b:\n\n```\n['setosa' 'versicolor' 'virginica']\n[0 0 0 0 0 0 0 0 0 0]\n[[ 5.1  3.5  1.4  0.2]\n [ 4.9  3.   1.4  0.2]\n [ 4.7  3.2  1.3  0.2]\n [ 4.6  3.1  1.5  0.2]\n [ 5.   3.6  1.4  0.2]\n [ 5.4  3.9  1.7  0.4]\n [ 4.6  3.4  1.4  0.3]\n [ 5.   3.4  1.5  0.2]\n [ 4.4  2.9  1.4  0.2]\n [ 4.9  3.1  1.5  0.1]]\n```\n\n## 1.2. boston\n\u30dc\u30b9\u30c8\u30f3\u5e02\u90ca\u5916\u306e\uff11\uff13\u7a2e\u985e\u306e\u60c5\u5831\u3068\u5730\u57df\u5225\u4f4f\u5b85\u4fa1\u683c\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\uff0e\u56de\u5e30\u554f\u984c\u306b\u5229\u7528\u3067\u304d\u308b\uff0e\n\n|\u30b5\u30f3\u30d7\u30eb\u6570|\u6b21\u5143\u6570|\u7279\u5fb4|\u30e9\u30d9\u30eb|\n|:---:|:---:|:---:|:---:|\n|506|13|real x>0|real 5<y<50|\n\n\u30d1\u30e9\u30e1\u30fc\u30bf(12\u500b)\u306e\u8aac\u660e\n\n    0. CRIM: \u4eba\u53e3 1 \u4eba\u5f53\u305f\u308a\u306e\u72af\u7f6a\u767a\u751f\u6570\t\n    1. 25,000 \u5e73\u65b9\u30d5\u30a3\u30fc\u30c8\u4ee5\u4e0a\u306e\u4f4f\u5c45\u533a\u753b\u306e\u5360\u3081\u308b\u5272\u5408\n    2. INDUS: \u5c0f\u58f2\u696d\u4ee5\u5916\u306e\u5546\u696d\u304c\u5360\u3081\u308b\u9762\u7a4d\u306e\u5272\u5408\n    3. CHAS: \u30c1\u30e3\u30fc\u30eb\u30ba\u5ddd\u306b\u3088\u308b\u30c0\u30df\u30fc\u5909\u6570 (1: \u5ddd\u306e\u5468\u8fba, 0: \u305d\u308c\u4ee5\u5916)\n    4. NOX: NOx \u306e\u6fc3\u5ea6\n    5. RM: \u4f4f\u5c45\u306e\u5e73\u5747\u90e8\u5c4b\u6570\n    6. AGE: 1940 \u5e74\u3088\u308a\u524d\u306b\u5efa\u3066\u3089\u308c\u305f\u7269\u4ef6\u306e\u5272\u5408\n    7. DIS: 5 \u3064\u306e\u30dc\u30b9\u30c8\u30f3\u5e02\u306e\u96c7\u7528\u65bd\u8a2d\u304b\u3089\u306e\u8ddd\u96e2 (\u91cd\u307f\u4ed8\u3051\u6e08)\n    8. RAD: \u74b0\u72b6\u9ad8\u901f\u9053\u8def\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3057\u3084\u3059\u3055\n    9. TAX: $10,000 \u30c9\u30eb\u3042\u305f\u308a\u306e\u4e0d\u52d5\u7523\u7a0e\u7387\u306e\u7dcf\u8a08\n    10. PTRATIO: \u753a\u6bce\u306e\u5150\u7ae5\u3068\u6559\u5e2b\u306e\u6bd4\u7387\n    11. B: \u753a\u6bce\u306e\u9ed2\u4eba (Bk) \u306e\u6bd4\u7387\u3092\u6b21\u306e\u5f0f\u3067\u8868\u3057\u305f\u3082\u306e\u3002 1000(Bk \u2013 0.63)^2\n    12. LSTAT: \u7d66\u4e0e\u306e\u4f4e\u3044\u8077\u696d\u306b\u5f93\u4e8b\u3059\u308b\u4eba\u53e3\u306e\u5272\u5408 (%)\n\n\u4e0b\u306e\u56f3\u306f\uff0c\u4eba\u5de5\uff11\u4eba\u3042\u305f\u308a\u306e\u72af\u7f6a\u767a\u751f\u7387\u3068\uff0c\u30dc\u30b9\u30c8\u30f3\u5e02\u90ca\u5916\u306e\u5730\u57df\u5225\u4f4f\u5b85\u4fa1\u683c\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u3082\u306e\u3067\u3059\uff0e\n\n![download (3).png](https://qiita-image-store.s3.amazonaws.com/0/72093/9a00391b-cec0-8508-fa1d-c137ae028906.png)\n\n\n## 1.3. diabetes\n\u7cd6\u5c3f\u75c5\u60a3\u8005442\u4eba\u306e\u691c\u67fb\u6570\u5024\u3068\uff11\u5e74\u5f8c\u306e\u75be\u60a3\u9032\u884c\u72b6\u6cc1\uff0e\u56de\u5e30\u554f\u984c\u306b\u7528\u3044\u308b\uff0e\n\n|\u30b5\u30f3\u30d7\u30eb\u6570|\u6b21\u5143\u6570|\u7279\u5fb4|\u30e9\u30d9\u30eb|\n|:---:|:---:|:---:|:---:|\n|442|10|real -2>x>2|int 25<y<346|\n\n## 1.4. digits\n0 \uff5e 9 \u306e 10 \u6587\u5b57\u306e\u624b\u66f8\u304d\u306e\u6570\u5b57\u3092 64 (8\u00d78) \u500b\u306e\u753b\u7d20\u306b\u5206\u89e3\u3057\u305f\u3082\u306e\uff0e\u753b\u50cf\u8a8d\u8b58\u306b\u7528\u3044\u308b\uff0e\n\n|\u30b5\u30f3\u30d7\u30eb\u6570|\u6b21\u5143\u6570|\u7279\u5fb4|\u30e9\u30d9\u30eb|\n|:---:|:---:|:---:|:---:|\n|1.797|64|int 0<x<16|int 0<y<9|\n\n## 1.5. Linnerud\n\u30ce\u30fc\u30b9\u30ab\u30ed\u30e9\u30a4\u30ca\u5dde\u7acb\u5927\u5b66\u306e A. C. linnerud \u535a\u58eb\u304c\u4f5c\u6210\u3057\u305f\uff0c20\u4eba\u306e\u6210\u4eba\u7537\u6027\u306b\u5bfe\u3057\u3066\u30d5\u30a3\u30c3\u30c8\u30cd\u30b9\u30af\u30e9\u30d6\u3067\u6e2c\u5b9a\u3057\u305f3\u3064\u306e\u751f\u7406\u5b66\u7684\u7279\u5fb4\u30683\u3064\u306e\u904b\u52d5\u80fd\u529b\u306e\u95a2\u4fc2\uff0e\u591a\u5909\u6570\u89e3\u6790\u306b\u7528\u3044\u308b\uff0e\n\n|\u30b5\u30f3\u30d7\u30eb\u6570|\u6b21\u5143\u6570|\n|:---:|:---:|\n|20|\u8aac\u660e\u5909\u6570:3, \u76ee\u7684\u5909\u6570:3|\n\n\u8aac\u660e\u5909\u6570\u306e\u4e2d\u8eab\n\n```\n\tChins\tSitups\tJumps\n0\t5\t162\t60\n1\t2\t110\t60\n2\t12\t101\t101\n3\t12\t105\t37\n4\t13\t155\t58\n```\n\n\u76ee\u7684\u5909\u6570\u306e\u4e2d\u8eab\n\n```\nWeight\tWaist\tPulse\n0\t191\t36\t50\n1\t189\t37\t52\n2\t193\t38\t58\n3\t162\t35\t62\n```\n\n# 2. Generating dataset\nSample generator\u3092\u4f7f\u7528\u3057\uff0c\u7279\u5fb4\u306e\u3042\u308b\u30c7\u30fc\u30bf\u3092\u305d\u306e\u90fd\u5ea6\u751f\u6210\u3057\u307e\u3059\uff0e\n\u7279\u5b9a\u306e\u7279\u5fb4\u3092\u6301\u3063\u305f\u30c7\u30fc\u30bf\u3092\u6b32\u3057\u3044\u3060\u3051\u751f\u6210\u53ef\u80fd\uff0e\n\n## 2.1. blobs\n\u4e2d\u5fc3\u306e\u3042\u308b\u67d3\u307f\u304c\u5e83\u304c\u3063\u305f\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3059\u308b.\nn_samples, centers\u3067\u305d\u308c\u305e\u308c\u30b5\u30f3\u30d7\u30eb\u6570\u3068\u30af\u30e9\u30b9\u30bf\u306e\u6570\u3092\u9078\u629e\u53ef\u80fd\uff0e\nn_features\u3067\u30e9\u30d9\u30eb\u306e\u6570\u3092\u8a2d\u5b9a\u53ef\u80fd\uff0e\n\n```make_blobs.py\nfrom sklearn.datasets.samples_generator import make_blobs\nX, y = make_blobs(n_samples=10, centers=3, n_features=2, random_state=0)\nprint(X.shape)\n```\n\n\u5b9f\u884c\u4f8b:\n\n```\narray([[ 1.12031365,  5.75806083],\n       [ 1.7373078 ,  4.42546234],\n       [ 2.36833522,  0.04356792],\n       [ 0.87305123,  4.71438583],\n       [-0.66246781,  2.17571724],\n       [ 0.74285061,  1.46351659],\n       [-4.07989383,  3.57150086],\n       [ 3.54934659,  0.6925054 ],\n       [ 2.49913075,  1.23133799],\n       [ 1.9263585 ,  4.15243012]])\n```\n\n[\u30b5\u30f3\u30d7\u30eb](http://scikit-learn.org/stable/auto_examples/calibration/plot_calibration.html#sphx-glr-auto-examples-calibration-plot-calibration-py)\u3067\u306f\uff13\u3064\u306e\u30c7\u30fc\u30bf\u96c6\u5408\u30922\u30af\u30e9\u30b9\u3067\u751f\u6210\u3057\u3066\u3044\u308b\uff0e\n(version 0.18\u4ee5\u524d\u3067\u306ftrain_test_split\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059)\n![test](http://scikit-learn.org/stable/_images/sphx_glr_plot_calibration_001.png)\n\n## 2.2. make_classification\n\u5206\u985e\u554f\u984c\u3092\u53d6\u308a\u6271\u3044\u305f\u3044\u6642\u306b\uff0c\u591a\u6b21\u5143\u306e\u30c7\u30fc\u30bf\u3068\u305d\u308c\u305e\u308c\u306e\u30e9\u30d9\u30eb\u3092\u751f\u6210\u3067\u304d\u308b\uff0e\n[\u3053\u3061\u3089\u306e\u30b5\u30a4\u30c8](http://overlap.hatenablog.jp/entry/2015/10/08/022246)\u306b\u8a73\u7d30\u306a\u8aac\u660e\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\n\u57fa\u672c\u7684\u306bn_features\uff0cn_classes\uff0cn_informative\u3092\u8abf\u6574\u3059\u308b\u3053\u3068\u3067\uff0c\u76f8\u95a2\u95a2\u4fc2\u3092\u542b\u3093\u3060\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n|Parameter name|Description|Default|\n|:---|:---|:--|\n|n_features|\u751f\u6210\u3059\u308b\u30c7\u30fc\u30bf\u306e\u6b21\u5143\u6570|20|\n|n_classes|\u30e9\u30d9\u30eb\u306e\u6570|2|\n|n_informative|\u30c7\u30fc\u30bf\u306e\u751f\u6210\u30d7\u30ed\u30bb\u30b9\u3067\u4f7f\u7528\u3059\u308b\u6b63\u898f\u5206\u5e03\u306e\u6570|2|\n|n_cluster_per_class|\u5404\u30e9\u30d9\u30eb\u306b\u542b\u307e\u308c\u308b\u6b63\u898f\u5206\u5e03\u306e\u6570|2|\n\n```make_classification.py\nfrom sklearn.datasets import make_classification\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nX1, Y1 = make_classification(n_samples=1000, n_features=2, n_redundant=0, n_informative=2,n_clusters_per_class=2, n_classes=2)\nplt.scatter(X1[:, 0], X1[:, 1], marker='o', c=Y1)\n```\n\u5b9f\u884c\u4f8b:\n(Informative features\u3068Redundunt fetures\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u629e\u3057\u3066\u3044\u308b\u305f\u3081\uff0c\u30d7\u30ed\u30c3\u30c8\u306f\u5b9f\u884c\u6bce\u306b\u5909\u5316\u3057\u307e\u3059\uff0e)\n![example2](https://d17oy1vhnax1f7.cloudfront.net/items/2p2O2K3B420i42351e0m/Image%202016-11-15%20at%206.18.29%20PM.png?v=4525c651)\n\n### scikit-learn\u306e\u4f8b\n\u5206\u304b\u308a\u3084\u3059\u3044[example](http://scikit-learn.org/stable/auto_examples/datasets/plot_random_dataset.html#sphx-glr-auto-examples-datasets-plot-random-dataset-py)\u304c\u3042\u3063\u305f\u306e\u3067\uff0c\u3053\u3061\u3089\u3082\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0e\n![example2](http://scikit-learn.org/stable/_images/sphx_glr_plot_random_dataset_001.png)\n# \u53c2\u8003\n[Data loading utilities](http://scikit-learn.org/stable/datasets/)\n[blobs](http://scikit-learn.org/stable/auto_examples/calibration/plot_calibration.html#sphx-glr-auto-examples-calibration-plot-calibration-py)\n[make_classification](http://scikit-learn.org/stable/_images/sphx_glr_plot_random_dataset_001.png)\n[scikit-learn\u3092\u7528\u3044\u305f\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u751f\u6210](http://overlap.hatenablog.jp/entry/2015/10/08/022246)\n", "tags": ["Python", "scikit-learn", "analytics", "matplotlib"]}