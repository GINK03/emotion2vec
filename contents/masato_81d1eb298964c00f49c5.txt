{"tags": ["ESP8266", "ArduinoUno", "Wi-Fi"], "context": " More than 1 year has passed since last update.\u524d\u56deESP8266\u30e2\u30b8\u30e5\u30fc\u30eb\u306bCoolTerm\u304b\u3089\u30b7\u30ea\u30a2\u30eb\u63a5\u7d9a\u3092\u3057\u3066AT\u30b3\u30de\u30f3\u30c9\u3092\u767a\u884c\u3059\u308bWi-Fi\u306e\u63a5\u7d9a\u30c6\u30b9\u30c8\u3092\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u6642\u306fArduino\u306fESP8266\u3078\u306e\u96fb\u6e90\u4f9b\u7d66\u306b\u3057\u304b\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002Arduino IDE\u3067Web\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u3044\u3066\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u304b\u3089\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u914d\u7dda\nESP8266\u306e3.3V\u306eRX\u3068TX\u3092Arduino Uno\u306eGPIO\u306b\u63a5\u7d9a\u3057\u3066\u3082\u52d5\u4f5c\u3057\u307e\u3057\u305f\u3002\u30ed\u30b8\u30c3\u30af\u30ec\u30d9\u30eb\u30b3\u30f3\u30d0\u30fc\u30bf\u30fc\u3092\u4f7f\u3063\u305f\u65b9\u304c\u3088\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nRX (ESP8266)    -> PIN 3 (Arduino)\nTX (ESP8266)    -> PIN 2 (Arduino) \nCH_PD (ESP8266) -> VCC (Arduino Uno 3.3V)\nVCC (ESP8266)   -> VCC (Arduino Uno 3.3V)\nGND (ESP8266)   -> GND (Arduino)\n\n\n\n\u30b9\u30b1\u30c3\u30c1\nArduino IDE\u3067\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u307e\u3059\u3002AT\u30b3\u30de\u30f3\u30c9\u306fCoolTerm\u304b\u3089\u5b9f\u884c\u3057\u305f\u3082\u306e\u3068\u540c\u3058\u3067\u3059\u3002Arduino\u306eC++\u306f\u6163\u308c\u306a\u3044\u306e\u3067\u66f8\u304f\u306e\u304c\u5927\u5909\u3067\u3059\u3002\u6539\u884c\u30b3\u30fc\u30c9\u306e\u6271\u3044\u3067\u5d4c\u307e\u308a\u307e\u3057\u305f\u3002ESP8266\u306eSoftwareSerial\u304b\u3089HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8aad\u307f\u8fbc\u307fSerial\u306b\u51fa\u529b\u3059\u308b\u3068\u3053\u308d\u3067\u306f\u3001if(c == '\\r') Serial.print('\\n');\u306e\u3088\u3046\u306bCR\u306e\u5f8c\u306bLF\u3092\u8ffd\u52a0\u3057\u306a\u3044\u3068\u51fa\u529b\u304c\u9014\u4e2d\u3067\u5207\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u308c\u3067\u3082CoolTerm\u3067\u51fa\u529b\u3057\u305f\u5185\u5bb9\u3088\u308a\u5c11\u306a\u3044\u306e\u3067\u3001\u30b3\u30fc\u30c9\u306f\u898b\u76f4\u3057\u304c\u5fc5\u8981\u3067\u3059\u3002\n#include <SoftwareSerial.h>\n\n#define SSID \"xxx\"\n#define PASS \"xxx\"\n#define BROKER_URL \"xxx.xxx.xxx.x\"\n#define ESP_RX_PIN 2\n#define ESP_TX_PIN 3\n#define TIMEOUT 4000\n\nSoftwareSerial esp8266Serial(ESP_RX_PIN, ESP_TX_PIN);\n\nvoid setup()\n{\n  if(connectWiFi())\n  {\n    getStatus();\n    sendCmd(\"AT+CIPCLOSE\",0);\n  } else {\n    Serial.println(\"not connected\");\n  }\n  Serial.println(\"finished\");\n}\n\nvoid loop()\n{\n}\n\nvoid getStatus()\n{\n  String cmd = \"AT+CIPSTART=\\\"TCP\\\",\\\"\";\n  cmd += BROKER_URL;\n  cmd += \"\\\",3000\";\n  sendCmd(cmd,500);\n\n  String httpCmd = \"GET /status HTTP/1.1\\r\\n\";\n    httpCmd += \"Host: \";\n    httpCmd += BROKER_URL;\n    httpCmd += \"\\r\\n\\r\\n\";\n\n  cmd = \"AT+CIPSEND=\";\n  cmd += httpCmd.length();\n\n  esp8266Serial.print(cmd);\n  esp8266Serial.print(\"\\r\\n\");\n\n  Serial.println(cmd);\n\n  if(esp8266Serial.find(\">\"))\n  {\n    esp8266Serial.print(httpCmd);\n    delay(500);\n    if(esp8266Serial.available())\n    {\n      while(esp8266Serial.available())\n      {\n        char c = esp8266Serial.read();\n        Serial.write(c);\n        if(c == '\\r') Serial.print('\\n');\n      }\n      Serial.print(\"\\r\\n\");\n    } else {\n      Serial.println(\"http failed\");\n    }\n  } else {\n    Serial.println(\"not started\");\n  }\n}\n\nbool connectWiFi() {\n  Serial.begin(9600);\n  esp8266Serial.begin(9600);\n  esp8266Serial.setTimeout(TIMEOUT);\n\n  if( sendCmd(\"AT+RST\",3000))\n  {\n    String cmd = \"AT+CWJAP=\\\"\";\n    cmd += SSID;\n    cmd += \"\\\",\\\"\";\n    cmd += PASS;\n    cmd += \"\\\"\";\n    return sendCmd(cmd,5000);\n  } else {\n    return false;\n  }\n}\n\nbool sendCmd(String cmd, int wait) {\n  esp8266Serial.print(cmd);\n  esp8266Serial.print(\"\\r\\n\");\n  Serial.println(cmd);\n  delay(wait);\n\n  if(esp8266Serial.find(\"OK\")) {\n    Serial.println(\"OK\");\n    return true;\n  } else {\n    Serial.println(\"NG\");\n    return false;\n  }\n}\n\n\u30b9\u30b1\u30c3\u30c1\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u304b\u3089\u5b9f\u884c\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002Arduino\u5358\u4f53\u304b\u3089\u3067\u3082\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u63a5\u7d9a\u3057\u3066HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u767a\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u305f\u3060C++\u3067AT\u30b3\u30de\u30f3\u30c9\u3092\u66f8\u304f\u306e\u3082\u5927\u5909\u3067\u3059\u3002Arduino\u306fRaspberry Pi\u304b\u3089Firmata\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u64cd\u4f5c\u3057\u3066\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u63a5\u7d9a\u306fLinux\u306b\u4efb\u305b\u305f\u65b9\u304c\u7c21\u5358\u3067\u3059\u3002\nAT+RST\nOK\nAT+CWJAP=\"xxx\",\"xxx\"\nOK\nAT+CIPSTART=\"TCP\",\"xxx.xxx.xxx.x\",3000\nOK\nAT+CIPSEND=45\n GET /status HTTP/1.1\nHost: xxx.xxx.xxx.x\n\n\n\nSEND OK\n\n\n\n+IPD,54: restify\n\nRequest-Id: c641b1b0-dad9-11e4-9cf7-a53c7accdff6\n\nResponse-Time: 2\n\n\n\n{\"meshblu\":\"online\"}\n\nOK\n\n\nAT+CIPCLOSE\nOK\nfinished\n\n[\u524d\u56de](http://qiita.com/masato/items/a3b71f8a17b876be8f76)ESP8266\u30e2\u30b8\u30e5\u30fc\u30eb\u306bCoolTerm\u304b\u3089\u30b7\u30ea\u30a2\u30eb\u63a5\u7d9a\u3092\u3057\u3066AT\u30b3\u30de\u30f3\u30c9\u3092\u767a\u884c\u3059\u308bWi-Fi\u306e\u63a5\u7d9a\u30c6\u30b9\u30c8\u3092\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u6642\u306fArduino\u306fESP8266\u3078\u306e\u96fb\u6e90\u4f9b\u7d66\u306b\u3057\u304b\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002Arduino IDE\u3067Web\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u3044\u3066\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u304b\u3089\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n## \u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u914d\u7dda\n\nESP8266\u306e3.3V\u306eRX\u3068TX\u3092Arduino Uno\u306eGPIO\u306b\u63a5\u7d9a\u3057\u3066\u3082\u52d5\u4f5c\u3057\u307e\u3057\u305f\u3002\u30ed\u30b8\u30c3\u30af\u30ec\u30d9\u30eb\u30b3\u30f3\u30d0\u30fc\u30bf\u30fc\u3092\u4f7f\u3063\u305f\u65b9\u304c\u3088\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n* RX (ESP8266)    -> PIN 3 (Arduino)\n* TX (ESP8266)    -> PIN 2 (Arduino) \n* CH_PD (ESP8266) -> VCC (Arduino Uno 3.3V)\n* VCC (ESP8266)   -> VCC (Arduino Uno 3.3V)\n* GND (ESP8266)   -> GND (Arduino)\n\n![ESP8266-Arduino.png](https://qiita-image-store.s3.amazonaws.com/0/43745/f1ec9e62-3a77-6936-2efc-5433109818e1.png)\n\n\n## \u30b9\u30b1\u30c3\u30c1\n\nArduino IDE\u3067\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u304d\u307e\u3059\u3002AT\u30b3\u30de\u30f3\u30c9\u306fCoolTerm\u304b\u3089\u5b9f\u884c\u3057\u305f\u3082\u306e\u3068\u540c\u3058\u3067\u3059\u3002Arduino\u306eC++\u306f\u6163\u308c\u306a\u3044\u306e\u3067\u66f8\u304f\u306e\u304c\u5927\u5909\u3067\u3059\u3002\u6539\u884c\u30b3\u30fc\u30c9\u306e\u6271\u3044\u3067\u5d4c\u307e\u308a\u307e\u3057\u305f\u3002ESP8266\u306eSoftwareSerial\u304b\u3089HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8aad\u307f\u8fbc\u307fSerial\u306b\u51fa\u529b\u3059\u308b\u3068\u3053\u308d\u3067\u306f\u3001`if(c == '\\r') Serial.print('\\n');`\u306e\u3088\u3046\u306bCR\u306e\u5f8c\u306bLF\u3092\u8ffd\u52a0\u3057\u306a\u3044\u3068\u51fa\u529b\u304c\u9014\u4e2d\u3067\u5207\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u308c\u3067\u3082CoolTerm\u3067\u51fa\u529b\u3057\u305f\u5185\u5bb9\u3088\u308a\u5c11\u306a\u3044\u306e\u3067\u3001\u30b3\u30fc\u30c9\u306f\u898b\u76f4\u3057\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n``` c\n#include <SoftwareSerial.h>\n\n#define SSID \"xxx\"\n#define PASS \"xxx\"\n#define BROKER_URL \"xxx.xxx.xxx.x\"\n#define ESP_RX_PIN 2\n#define ESP_TX_PIN 3\n#define TIMEOUT 4000\n\nSoftwareSerial esp8266Serial(ESP_RX_PIN, ESP_TX_PIN);\n\nvoid setup()\n{\n  if(connectWiFi())\n  {\n    getStatus();\n    sendCmd(\"AT+CIPCLOSE\",0);\n  } else {\n    Serial.println(\"not connected\");\n  }\n  Serial.println(\"finished\");\n}\n \nvoid loop()\n{\n}\n\nvoid getStatus()\n{\n  String cmd = \"AT+CIPSTART=\\\"TCP\\\",\\\"\";\n  cmd += BROKER_URL;\n  cmd += \"\\\",3000\";\n  sendCmd(cmd,500);\n    \n  String httpCmd = \"GET /status HTTP/1.1\\r\\n\";\n    httpCmd += \"Host: \";\n    httpCmd += BROKER_URL;\n    httpCmd += \"\\r\\n\\r\\n\";\n    \n  cmd = \"AT+CIPSEND=\";\n  cmd += httpCmd.length();\n  \n  esp8266Serial.print(cmd);\n  esp8266Serial.print(\"\\r\\n\");\n  \n  Serial.println(cmd);\n  \n  if(esp8266Serial.find(\">\"))\n  {\n    esp8266Serial.print(httpCmd);\n    delay(500);\n    if(esp8266Serial.available())\n    {\n      while(esp8266Serial.available())\n      {\n        char c = esp8266Serial.read();\n        Serial.write(c);\n        if(c == '\\r') Serial.print('\\n');\n      }\n      Serial.print(\"\\r\\n\");\n    } else {\n      Serial.println(\"http failed\");\n    }\n  } else {\n    Serial.println(\"not started\");\n  }\n}\n\nbool connectWiFi() {\n  Serial.begin(9600);\n  esp8266Serial.begin(9600);\n  esp8266Serial.setTimeout(TIMEOUT);\n  \n  if( sendCmd(\"AT+RST\",3000))\n  {\n    String cmd = \"AT+CWJAP=\\\"\";\n    cmd += SSID;\n    cmd += \"\\\",\\\"\";\n    cmd += PASS;\n    cmd += \"\\\"\";\n    return sendCmd(cmd,5000);\n  } else {\n    return false;\n  }\n}\n\nbool sendCmd(String cmd, int wait) {\n  esp8266Serial.print(cmd);\n  esp8266Serial.print(\"\\r\\n\");\n  Serial.println(cmd);\n  delay(wait);\n\n  if(esp8266Serial.find(\"OK\")) {\n    Serial.println(\"OK\");\n    return true;\n  } else {\n    Serial.println(\"NG\");\n    return false;\n  }\n}\n```\n\n\u30b9\u30b1\u30c3\u30c1\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u304b\u3089\u5b9f\u884c\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002Arduino\u5358\u4f53\u304b\u3089\u3067\u3082\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u63a5\u7d9a\u3057\u3066HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u767a\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u305f\u3060C++\u3067AT\u30b3\u30de\u30f3\u30c9\u3092\u66f8\u304f\u306e\u3082\u5927\u5909\u3067\u3059\u3002Arduino\u306fRaspberry Pi\u304b\u3089Firmata\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u64cd\u4f5c\u3057\u3066\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u63a5\u7d9a\u306fLinux\u306b\u4efb\u305b\u305f\u65b9\u304c\u7c21\u5358\u3067\u3059\u3002\n\n```\nAT+RST\nOK\nAT+CWJAP=\"xxx\",\"xxx\"\nOK\nAT+CIPSTART=\"TCP\",\"xxx.xxx.xxx.x\",3000\nOK\nAT+CIPSEND=45\n GET /status HTTP/1.1\nHost: xxx.xxx.xxx.x\n\n\n\nSEND OK\n\n\n\n+IPD,54: restify\n\nRequest-Id: c641b1b0-dad9-11e4-9cf7-a53c7accdff6\n\nResponse-Time: 2\n\n\n\n{\"meshblu\":\"online\"}\n\nOK\n\n\nAT+CIPCLOSE\nOK\nfinished\n```\n"}