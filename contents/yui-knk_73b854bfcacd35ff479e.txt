{"context": " More than 1 year has passed since last update.src/compiler\u4ee5\u4e0b\u3092\u8aad\u3093\u3067\u3044\u308b\u3068\u3001\u3061\u3087\u3044\u3061\u3087\u3044record\u3063\u3066\u3067\u3066\u304f\u308b\u3051\u3069\u3001doc\u306b\u306a\u304b\u3063\u305f\u306e\u3067\u8abf\u3079\u3066\u307f\u305f\u3002\nclass String\n...\n  record ToU64Info, value, negative, invalid\n...\nend\n\n\u5b9f\u4f53\u306f\u30de\u30af\u30ed\u3067src/macros.cr\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\nmacro record(name, *fields)\n  struct {{name.id}}\n    getter {{*fields}}\n\n    def initialize({{ *fields.map { |field| \"@#{field.id}\".id } }})\n    end\n\n    {{yield}}\n\n    def clone\n      {{name.id}}.new({{ *fields.map { |field| \"@#{field.id}.clone\".id } }})\n    end\n  end\nend\n\ngetter\u3068clone\u3064\u304d\u306estruct\u3092\u305d\u306e\u30af\u30e9\u30b9\u5185\u306b\u5b9a\u7fa9\u3057\u3066\u304f\u308c\u308b\u3002\nclass My\n  record MyRecord, key, value\n\n  def initialize(@key, @value)\n  end\n\n  def record\n    MyRecord.new @key, @value\n  end\nend\n\nmy = My.new \"hoge\", 10\n\nputs my.record\n#=> My::MyRecord(@key=\"hoge\", @value=10)\nputs typeof(my.record)\n#=> My::MyRecord\nputs my.record.key\n#=> hoge\n\n\u30d6\u30ed\u30c3\u30af\u3082\u3068\u308b\u3053\u3068\u304c\u3067\u304d\u3001struct\u306e\u6587\u8108\u3067yield\u3057\u3066\u304f\u308c\u308b\u3002\nclass My\n  record MyRecord, key, value do\n    def to_hash\n      hash = {} of typeof(@key) => typeof(@value)\n      hash[@key] = @value\n      hash\n    end\n  end\n\n  def initialize(@key, @value)\n  end\n\n  def record\n    MyRecord.new @key, @value\n  end\nend\n\nmy = My.new \"hoge\", 10\n\nputs my.record.to_hash\n#=> {\"hoge\" => 10}\n\n\u3042\u308c\u3001\u30de\u30af\u30ed\u3060\u3068\u30d6\u30ed\u30c3\u30af\u5185\u3067def\u3067\u304d\u308b\u3093\u3060\u3002\u3002\n\n`src/compiler`\u4ee5\u4e0b\u3092\u8aad\u3093\u3067\u3044\u308b\u3068\u3001\u3061\u3087\u3044\u3061\u3087\u3044`record`\u3063\u3066\u3067\u3066\u304f\u308b\u3051\u3069\u3001doc\u306b\u306a\u304b\u3063\u305f\u306e\u3067\u8abf\u3079\u3066\u307f\u305f\u3002\n\n```rb\nclass String\n...\n  record ToU64Info, value, negative, invalid\n...\nend\n```\n\n\u5b9f\u4f53\u306f\u30de\u30af\u30ed\u3067`src/macros.cr`\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\n\n```rb\nmacro record(name, *fields)\n  struct {{name.id}}\n    getter {{*fields}}\n\n    def initialize({{ *fields.map { |field| \"@#{field.id}\".id } }})\n    end\n\n    {{yield}}\n\n    def clone\n      {{name.id}}.new({{ *fields.map { |field| \"@#{field.id}.clone\".id } }})\n    end\n  end\nend\n```\n\n`getter`\u3068`clone`\u3064\u304d\u306e`struct`\u3092\u305d\u306e\u30af\u30e9\u30b9\u5185\u306b\u5b9a\u7fa9\u3057\u3066\u304f\u308c\u308b\u3002\n\n```rb\nclass My\n  record MyRecord, key, value\n\n  def initialize(@key, @value)\n  end\n\n  def record\n    MyRecord.new @key, @value\n  end\nend\n\nmy = My.new \"hoge\", 10\n\nputs my.record\n#=> My::MyRecord(@key=\"hoge\", @value=10)\nputs typeof(my.record)\n#=> My::MyRecord\nputs my.record.key\n#=> hoge\n```\n\n\u30d6\u30ed\u30c3\u30af\u3082\u3068\u308b\u3053\u3068\u304c\u3067\u304d\u3001`struct`\u306e\u6587\u8108\u3067yield\u3057\u3066\u304f\u308c\u308b\u3002\n\n```rb\nclass My\n  record MyRecord, key, value do\n    def to_hash\n      hash = {} of typeof(@key) => typeof(@value)\n      hash[@key] = @value\n      hash\n    end\n  end\n\n  def initialize(@key, @value)\n  end\n\n  def record\n    MyRecord.new @key, @value\n  end\nend\n\nmy = My.new \"hoge\", 10\n\nputs my.record.to_hash\n#=> {\"hoge\" => 10}\n```\n\n\u3042\u308c\u3001\u30de\u30af\u30ed\u3060\u3068\u30d6\u30ed\u30c3\u30af\u5185\u3067`def`\u3067\u304d\u308b\u3093\u3060\u3002\u3002\n", "tags": ["crystal"]}