{"context": "\n\n\u306f\u3058\u3081\u306b\n\u4f8b\u3048\u3070\u97f3\u697d\u30b2\u30fc\u30e0\u306e\u3088\u3046\u306a\u66f2\u3068\u540c\u671f\u304c\u5fc5\u8981\u306b\u306a\u308b\u3082\u306e\u3092\u4f5c\u308b\u3068\u304d\u306b\u3001\u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e\u304b\u3089\u8a08\u7b97\u3059\u308b\u3082\u306e\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e\u3084BPM\u304b\u3089\u4eca\u3053\u306e\u66f2\u304c\u3001\u4f55\u5c0f\u7bc0\u76ee\u3067\u4f55\u62cd\u76ee\u304b\u3092\u53d6\u5f97\u3059\u308bclass\u306e\u4f5c\u308a\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u74b0\u5883\n\u4eca\u56de\u4f7f\u7528\u3059\u308b\u74b0\u5883\u306fC++\u3068Siv3D\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u304c\u3001\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u7684\u306b\u306f\u3001\u73fe\u5728\u306e\u66f2\u306e\u518d\u751f\u4f4d\u7f6e\u304c\u4f55\u304b\u3057\u3089\u306e\u5f62\u3067\u53d6\u5f97\u3067\u304d\u308c\u3070\u3001\u5358\u4f4d\u3092\u3042\u308f\u305b\u3066\u540c\u3058\u8a08\u7b97\u3092\u3057\u3066\u3084\u308c\u3070\u518d\u73fe\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\n\u4eca\u56de\u4f7f\u7528\u3059\u308bSiv3D\u306b\u306f\u6700\u521d\u304b\u3089s3d::SoundBeat\u3068\u3044\u3046\u66f2\u3068\u540c\u671f\u3059\u308b\u305f\u3081\u306eclass\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4f7f\u3044\u65b9\u306f\n\nMain.cpp\n\n\nvoid Main()\n{\n    int bpm = 134; //\u66f2\u306ebpm\n    int32 offsetSample = 54500; //\u66f2\u306e\u30aa\u30d5\u30bb\u30c3\u30c8(\u5358\u4f4d\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570)\n\n    const SoundBeat beat(offsetSample, bpm);//\u540c\u671fclass\n\n    const Sound sound(L\"Example/\u98a8\u306e\u4e18.mp3\");//\u66f2\n\n    while (System::Update())\n    {\n        const auto b = beat(sound,4,4);\n\n        b.bar; //\u73fe\u5728\u306e\u5c0f\u7bc0\n        b.beat;//\u73fe\u5728\u306e\u62cd\n        b.f;   //\u73fe\u5728\u306e\u62cd\u306e\u521d\u3081\u304b\u3089\u3069\u3093\u306a\u3082\u3093\u304b [0,1)\n    }\n}\n\n\n\n\u3068\u3044\u3063\u305f\u3082\u306e\u3067\u3059\u304c\u3001\u6c17\u306b\u306a\u308b\u70b9\u304c2\u70b9\u3042\u308a\u307e\u3059\u3002\n1.\u3000\u5185\u90e8\u3067\u6301\u3063\u3066\u3044\u308bbpm\u304c\u6574\u6570\u578b\n2.\u3000\u5185\u90e8\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u518d\u751f\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u304c\u6bce\u30d5\u30ec\u30fc\u30e0\u66f4\u65b0\u3055\u308c\u306a\u3044\n\u7cbe\u5ea6\u304c\u5927\u5207\u306b\u306a\u308b\u97f3\u697d\u30b2\u30fc\u30e0\u3067\u306f\u66f4\u65b0\u306f\u983b\u7e41\u306a\u307b\u3046\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3057\u3001bpm\u304c\u6574\u6570\u306e\u307f\u306e\u3068\u3053\u308d\u304c\u697d\u66f2\u306b\u3088\u3063\u3066\u306f\u4f7f\u3048\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3057\u305f\u304c\u3063\u3066\u4eca\u56de\u306f\u3053\u308c\u3089\u306e\u70b9\u3092\u6539\u5584\u3057\u305f\u72ec\u81ea\u306eSoundBeat\u3092\u4f5c\u308b\u3053\u3068\u3068\u3057\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\ns3d::SoundBeat\u3068\u5168\u304f\u540c\u3058\u4f7f\u3044\u65b9\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u4f5c\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u304c\u3001\u4f55\u62cd\u76ee\u304b\u307e\u3067\u306f\u8a08\u7b97\u3057\u306a\u304f\u3066\u3082\u4f7f\u3044\u3084\u3059\u304b\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u8a08\u7b97\u91cf\u3092\u6e1b\u3089\u3057\u3066\u3001\u4f55\u5c0f\u7bc0\u76ee\u306e\u3069\u3093\u306a\u3082\u3093\u304b\u3092\u53d6\u5f97\u3059\u308b\u3060\u3051\u3067\u3082\u69cb\u308f\u306a\u3044\u3068\u306f\u601d\u3044\u307e\u3059\u3002\n\n\u5168\u4f53\u50cf\n\nMySoundBeat.h\nnamespace Mahou\n{\n    //\u73fe\u5728\u306e\u62cd\u3084\u5c0f\u7bc0\u306a\u3069\u306e\u60c5\u5831\u3092\u6301\u3063\u305f\u69cb\u9020\u4f53\n    struct BeatCount\n    {\n        int64 bar;      //\u73fe\u5728\u306e\u5c0f\u7bc0\n        int32 beat;     //\u73fe\u5728\u306e\u5c0f\u7bc0\u306e\u4f55\u62cd\u76ee\u304b\n        double f;       //\u73fe\u5728\u306e\u62cd\u306e\u3069\u3093\u306a\u3082\u3093\u304b [0,1)\n        BeatCount(int64 bar,int32 beat, double f) :\n            bar(bar),\n            beat(beat),\n            f(f)\n        {}\n    };\n\n    //\u540c\u671fclass\n    class SoundBeat\n    {\n    private:\n        double m_bpm;\n        int64 m_offsetSample;\n\n    public:\n        SoundBeat() :\n            m_bpm(0),\n            m_offsetSample(0)\n        {}\n        SoundBeat(const int64 offsetSample, const double bpm) :\n            m_bpm(bpm),\n            m_offsetSample(offsetSample)\n        {}\n\n       //a/b\u62cd\u5b50\n        BeatCount operator()(const Sound& sound, const int32 a = 4,const int32 b = 4)const;\n\n\n}\n\n\ns3d::SoundBeat\u540c\u69d8\u306boperator()\u3067\u5f15\u6570\u306bSound\u578b\u3068\u3001\u305d\u306e\u66f2\u306e\u62cd\u5b50\u306e\u60c5\u5831\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u4f55\u5c0f\u7bc0\u76ee\u304b\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n\u53d6\u5f97\u95a2\u6570\n\n\u306f\u3058\u3081\u306b\ns3d::SoundBeat\u306e\u5185\u90e8\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u306f\u304a\u305d\u3089\u304fSound::streamPosSample()\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u95a2\u6570\u306f\u73fe\u572850Hz\u3067\u3057\u304b\u66f4\u65b0\u3055\u308c\u306a\u3044\u3089\u3057\u304f\u300160FPS\u306e\u5834\u54086\u30d5\u30ec\u30fc\u30e0\u306b1\u56de\u3001\u66f4\u65b0\u3055\u308c\u306a\u3044\u6642\u304c\u3042\u308a\u307e\u3059\u3002\n\u5bfe\u3057\u3066\u3001Sound::samplesPlayed()\u95a2\u6570\u306f\u6bce\u30d5\u30ec\u30fc\u30e0\u66f4\u65b0\u304c\u884c\u308f\u308c\u308b\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\n\nMySoundBeat.cpp\nnamespace Mahou\n{\n        BeatCount SoundBeat::operator()(const Sound& sound, const int32 a,const int32 b)const\n        {\n            //1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n            const int64 samplePerBar = static_cast<int64>(60.0f * 4.0f*a/b / m_bpm * 44100.0f);\n            //1\u62cd\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n            const int32 samplePerBeat = static_cast<int32>(samplePerBar / a);\n            //\u73fe\u5728\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n            const int64 currentSample = sound.samplesPlayed() - m_offsetSample;\n\n            //\u73fe\u5728\u304c\u4f55\u5c0f\u7bc0\u76ee\u304b\n            const int64 currentBar = currentSample / samplePerBar;\n            const int64 restSample = currentSample%samplePerBar;    //\u4f59\u3063\u305f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n\n            //\u73fe\u5728\u304c\u4f55\u62cd\u76ee\u304b\n            const int32 currentBeat = static_cast<int32>(restSample/ samplePerBeat);\n            const int32 restBeatSample = static_cast<int32>(restSample%samplePerBeat); //\u4f59\u3063\u305f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n\n            const double f = (double)restBeatSample/ (samplePerBeat);\n\n            return BeatCount{ currentBar,currentBeat,f };\n        }\n\n}\n\n\n\n\u89e3\u8aac\n\n\u5358\u4f4d\nSound::samplesPlayed()\u306e\u6271\u3046\u5358\u4f4d\u306f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u3067\u3059\u3002\n\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\u304c44100\u306e\u5834\u5408\u30011\u79d2\u959344100\u56de\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u308f\u304b\u308a\u3084\u3059\u304f\u8a00\u3046\u3068\n1\u79d2=44100\u56de\n2\u79d2=88200\u56de\n\u2026\n\u3068\u306a\u308b\u306e\u3067\u3001\u3059\u3079\u3066\u79d2\u6570*44100\u3067\u6271\u3046\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u3053\u3053\u306e\u5358\u4f4d\u306f\u3001\u958b\u767a\u74b0\u5883\u306b\u3088\u3063\u3066\u3001\u79d2\u3060\u3063\u305f\u308a\u30df\u30ea\u79d2\u3060\u3063\u305f\u308a\u3082\u3059\u308b\u3068\u601d\u3046\u306e\u3067\u4ee5\u964d\u306e\u8a08\u7b97\u3082\u5404\u81ea\u5358\u4f4d\u3092\u5408\u308f\u305b\u307e\u3057\u3087\u3046\u3002\n\n1\u5c0f\u7bc0\u30011\u62cd\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u3092\u6c42\u3081\u308b\n//1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\nconst int64 samplePerBar = static_cast<int64>(60.0f * 4.0f*a/b / m_bpm * 44100.0f);\n\n\u307e\u305a4/4\u62cd\u5b50(1/1\u62cd\u5b50)\u306e\u66f2\u3067bpm\u304c120\u306e\u66421\u5c0f\u7bc0\u306f\u4f55\u79d2\u304b\u8003\u3048\u307e\u3059\u3002\nbpm\u3068\u306fbeat/minutes\u3059\u306a\u308f\u30611\u5206\u9593\u306b\u3042\u308b\u62cd\u6570\u3067\u3059\u3002\nbpm120\u3068\u3044\u3046\u3053\u3068\u306f1\u5206\u9593\u306b120\u62cd\u3068\u3044\u3046\u3053\u3068\u306a\u306e\u3067\u30014/4\u62cd\u5b50\u306e\u5834\u5408\n60\u79d2(1\u5206)=30\u5c0f\u7bc0(120\u62cd)\n\u304b\u30891\u5c0f\u7bc0=2\u79d2\u3068\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u540c\u69d8\u306bbpm\u304cn\u30674/4\u62cd\u5b50\u306e\u6642\u306f\n60\u79d2=n/4\u5c0f\u7bc0\u304b\u3089\n1\u5c0f\u7bc0=240/n\u79d2\u3068\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u306d\u3002\n\u3067\u306f\u3001a/b\u62cd\u5b50\u306e\u5834\u5408\u3069\u3046\u306a\u308b\u3067\u3057\u3087\u3046\u304b?\n\u3053\u308c\u306f\u7c21\u5358\u3067\n\u3055\u3063\u304d\u5f97\u305f\u5024\u306ba/b\u3092\u304b\u3051\u308b\u3060\u3051\u3067\u3059\u3002\n\u3088\u3063\u3066\nbpm\u304cn\u3067a/b\u62cd\u5b50\u306e\u6642\u30011\u5c0f\u7bc0\u306e\u79d2\u6570\u306f\n(240/n)*(a/b)\u3068\u306a\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u304c\u5358\u4f4d\u306a\u306e\u3067\u3053\u308c\u306b44100\u3092\u304b\u3051\u305f\u3082\u306e\u304c1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u3068\u306a\u308a\u307e\u3059\u306d\uff01\n1\u62cd\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u306f\n1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u3092a\u3067\u5272\u308c\u3070\u51fa\u308b\u306e\u3067\n//1\u62cd\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\nconst int32 samplePerBeat = static_cast<int32>(samplePerBar / a);\n\n\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u73fe\u5728\u306e\u66f2\u304c\u4f55\u5c0f\u7bc0\u306e\u4f55\u62cd\u76ee\u304b\u3092\u6c42\u3081\u308b\n\u307e\u305a\u3001\u5b9f\u969b\u306e\u66f2\u30c7\u30fc\u30bf\u306e\u518d\u751f\u4f4d\u7f6e\u3068\u30aa\u30d5\u30bb\u30c3\u30c8\u304b\u3089\u6539\u3081\u3066\u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e\u3092\u6c42\u3081\u307e\u3059\u3002\n\u3053\u308c\u306f\u518d\u751f\u4f4d\u7f6e\u304b\u3089\u30aa\u30d5\u30bb\u30c3\u30c8\u3092\u5f15\u304f\u3060\u3051\u3067\u3059\u3002\n //\u73fe\u5728\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\nconst int64 currentSample = sound.samplesPlayed() - m_offsetSample;\n\n\u3082\u3061\u308d\u3093\u5225\u306e\u74b0\u5883\u306e\u5834\u5408\u306fsound.samplesPlayed()\u306e\u90e8\u5206\u3092\u5404\u74b0\u5883\u306e\u518d\u751f\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u306b\u7f6e\u304d\u63db\u3048\u3066\u3001\u30aa\u30d5\u30bb\u30c3\u30c8\u7b49\u306e\u5358\u4f4d\u3092\u5408\u308f\u305b\u308c\u3070OK\u3067\u3059\u3002\n\u6b21\u306b\u3001\u73fe\u5728\u4f55\u5c0f\u7bc0\u76ee\u304b\u3092\u6c42\u3081\u307e\u3059\u304c\u3002\n\u3055\u3063\u304d1\u5c0f\u7bc0\u304c\u3069\u308c\u3060\u3051\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u304b\u3092\u6c42\u3081\u305f\u306e\u3067\u3001\n\u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e/1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u3067\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n //\u73fe\u5728\u304c\u4f55\u5c0f\u7bc0\u76ee\u304b\n const int64 currentBar = currentSample / samplePerBar;\n\n\u540c\u69d8\u306b\u73fe\u5728\u304c\u4f55\u62cd\u76ee\u304b\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e-\u73fe\u5728\u306e\u5c0f\u7bc0*1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n\u3067\u4f59\u308a\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u3092\u6c42\u3081\u307e\u3059\u3002\n\u4eca\u56de\u3001\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u306f\u6574\u6570\u578b\u306a\u306e\u3067\n\u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e%1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n\u3067\u3082\u540c\u69d8\u306b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u6c42\u3081\u305f\u4f59\u308a\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570/1\u62cd\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n\u3067\u73fe\u5728\u4f55\u62cd\u76ee\u304b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nconst int64 restSample = currentSample%samplePerBar;    //\u4f59\u3063\u305f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n//\u73fe\u5728\u304c\u4f55\u62cd\u76ee\u304b\nconst int32 currentBeat = static_cast<int32>(restSample/ samplePerBeat);\n\n\u6700\u5f8c\u306b\u3001\n\u3055\u3089\u306b\u4f59\u3063\u305f\u5206\u3092\u540c\u69d8\u306b\u8a08\u7b97\u3057\n\u305d\u306e\u4f59\u308a\u30921\u62cd\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u3067\u5272\u3063\u305f\u5024\u304c\n\u73fe\u5728\u306e\u62cd\u304b\u3089\u3069\u3093\u306a\u3082\u3093\u304b\u306b\u306a\u308a\u307e\u3059\u3002\n const int32 restBeatSample = static_cast<int32>(restSample%samplePerBeat); //\u4f59\u3063\u305f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n\nconst double f = (double)restBeatSample/ (samplePerBeat);\n\n\u3053\u308c\u3067\n\n\u73fe\u5728\u306e\u5c0f\u7bc0\n\u73fe\u5728\u306e\u62cd\n\u73fe\u5728\u306e\u62cd\u304b\u3089\u3069\u3093\u306a\u3082\u3093\u304b [0,1)\n\n\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u4f7f\u3044\u65b9\u306f\u4e0a\u3067\u7d39\u4ecb\u3057\u305fs3d::SoundBeat\u3068\u540c\u3058\u3067\u3059\u3002\n\n\u307e\u3068\u3081\n\n\u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e\u3068bpm\u3001\u30aa\u30d5\u30bb\u30c3\u30c8\u3001(\u62cd\u5b50)\u304b\u3089\u73fe\u5728\u306e\u5c0f\u7bc0\u3084\u62cd\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\uff01\n\u5358\u4f4d\u3092\u3042\u308f\u305b\u3055\u3048\u3059\u308c\u3070\u540c\u3058\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3055\u307e\u3056\u307e\u306a\u74b0\u5883\u3067\u5b9f\u88c5\u53ef\u80fd\n\n\n\u304a\u307e\u3051\n\n\u62cd\u304c\u5fc5\u8981\u306a\u3044\u5834\u5408\u306e\u4f8b\n\u4ee5\u4e0b\u306f\u81ea\u5206\u304c\u4f5c\u6210\u3057\u305f\u97f3\u697d\u30b2\u30fc\u30e0ColorfulTone\u3067\u5b9f\u969b\u306b\u4f7f\u7528\u3057\u305fclass\u3067\u3059\u3002\n\nSoundBar.h\nusing BPMType=double;\nnamespace Mahou\n{\n\n    struct BarCount\n    {\n        int64 bar;\n\n        double f;\n        BarCount(int64 bar, double f) :bar(bar), f(f) {}\n    };\n\n    class SoundBar\n    {\n    private:\n        BPMType m_bpm;\n        int64 m_offsetSample;\n\n    public:\n        SoundBar() :\n            m_bpm(0),\n            m_offsetSample(0)\n        {}\n        SoundBar(int64 offsetSample, BPMType bpm) :\n            m_bpm(bpm),\n            m_offsetSample(offsetSample)\n        {}\n        BarCount operator()(const Sound& sound)const\n        {\n            //1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30eb\u6570\n            const int64 samplePerBar = 60.0f * 4.0f / m_bpm * 44100.0f;\n#ifdef VIEWER_MODE\n            const int64 currentSample = sound.streamPosSample()- m_offsetSample;\n#else\n            const int64 currentSample = sound.samplesPlayed() - m_offsetSample;\n\n#endif\n\n            const int64 currentBar = currentSample / samplePerBar;\n            const int64 restSample = currentSample%samplePerBar;\n            const double f = (double)restSample / samplePerBar;\n\n            return BarCount{ currentBar,f };\n        }\n        const int64 getOffset()const { return m_offsetSample; }\n        const BPMType& getBPM()const { return m_bpm; }\n    };\n\n\n}\n\n\n\ns3d::Sound::samplesPlayed()\u306f\u30d0\u30c3\u30d5\u30a1\u306b\u9001\u4fe1\u3092\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u306e\u6570\u306a\u306e\u3067\u518d\u751f\u4f4d\u7f6e\u3092\u5909\u66f4\u3057\u305f\u308a\u3057\u305f\u5834\u5408\u306f\u540c\u671f\u304c\u5d29\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3057\u305f\u304c\u3063\u3066\u3001\u81ea\u7531\u306b\u518d\u751f\u4f4d\u7f6e\u3092\u5909\u66f4\u3067\u304d\u308b\u30d3\u30e5\u30fc\u30ef\u30fc\u306e\u3068\u304d\u306e\u307fs3d::Sound::streamPosSample()\u306b\u5207\u308a\u66ff\u3048\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n#\u306f\u3058\u3081\u306b\n\u4f8b\u3048\u3070\u97f3\u697d\u30b2\u30fc\u30e0\u306e\u3088\u3046\u306a\u66f2\u3068\u540c\u671f\u304c\u5fc5\u8981\u306b\u306a\u308b\u3082\u306e\u3092\u4f5c\u308b\u3068\u304d\u306b\u3001\u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e\u304b\u3089\u8a08\u7b97\u3059\u308b\u3082\u306e\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e\u3084BPM\u304b\u3089\u4eca\u3053\u306e\u66f2\u304c\u3001\u4f55\u5c0f\u7bc0\u76ee\u3067\u4f55\u62cd\u76ee\u304b\u3092\u53d6\u5f97\u3059\u308bclass\u306e\u4f5c\u308a\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n##\u74b0\u5883\n\u4eca\u56de\u4f7f\u7528\u3059\u308b\u74b0\u5883\u306fC++\u3068Siv3D\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u304c\u3001\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u7684\u306b\u306f\u3001\u73fe\u5728\u306e\u66f2\u306e\u518d\u751f\u4f4d\u7f6e\u304c\u4f55\u304b\u3057\u3089\u306e\u5f62\u3067\u53d6\u5f97\u3067\u304d\u308c\u3070\u3001\u5358\u4f4d\u3092\u3042\u308f\u305b\u3066\u540c\u3058\u8a08\u7b97\u3092\u3057\u3066\u3084\u308c\u3070\u518d\u73fe\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n##\u3061\u306a\u307f\u306b\n\n\u4eca\u56de\u4f7f\u7528\u3059\u308bSiv3D\u306b\u306f\u6700\u521d\u304b\u3089`s3d::SoundBeat`\u3068\u3044\u3046\u66f2\u3068\u540c\u671f\u3059\u308b\u305f\u3081\u306eclass\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4f7f\u3044\u65b9\u306f\n\n```cpp:Main.cpp\n\n\nvoid Main()\n{\n\tint bpm = 134; //\u66f2\u306ebpm\n\tint32 offsetSample = 54500; //\u66f2\u306e\u30aa\u30d5\u30bb\u30c3\u30c8(\u5358\u4f4d\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570)\n\n\tconst SoundBeat beat(offsetSample, bpm);//\u540c\u671fclass\n\n\tconst Sound sound(L\"Example/\u98a8\u306e\u4e18.mp3\");//\u66f2\n\n\twhile (System::Update())\n\t{\n\t\tconst auto b = beat(sound,4,4);\n\n\t\tb.bar; //\u73fe\u5728\u306e\u5c0f\u7bc0\n        b.beat;//\u73fe\u5728\u306e\u62cd\n        b.f;   //\u73fe\u5728\u306e\u62cd\u306e\u521d\u3081\u304b\u3089\u3069\u3093\u306a\u3082\u3093\u304b [0,1)\n    }\n}\n\n```\n\n\u3068\u3044\u3063\u305f\u3082\u306e\u3067\u3059\u304c\u3001\u6c17\u306b\u306a\u308b\u70b9\u304c2\u70b9\u3042\u308a\u307e\u3059\u3002\n\n1.\u3000\u5185\u90e8\u3067\u6301\u3063\u3066\u3044\u308bbpm\u304c\u6574\u6570\u578b\n2.\u3000\u5185\u90e8\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u518d\u751f\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u304c\u6bce\u30d5\u30ec\u30fc\u30e0\u66f4\u65b0\u3055\u308c\u306a\u3044\n\n\u7cbe\u5ea6\u304c\u5927\u5207\u306b\u306a\u308b\u97f3\u697d\u30b2\u30fc\u30e0\u3067\u306f\u66f4\u65b0\u306f\u983b\u7e41\u306a\u307b\u3046\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3057\u3001bpm\u304c\u6574\u6570\u306e\u307f\u306e\u3068\u3053\u308d\u304c\u697d\u66f2\u306b\u3088\u3063\u3066\u306f\u4f7f\u3048\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u3057\u305f\u304c\u3063\u3066\u4eca\u56de\u306f\u3053\u308c\u3089\u306e\u70b9\u3092\u6539\u5584\u3057\u305f\u72ec\u81ea\u306eSoundBeat\u3092\u4f5c\u308b\u3053\u3068\u3068\u3057\u307e\u3059\u3002\n\n#\u30b3\u30fc\u30c9\n\n`s3d::SoundBeat`\u3068\u5168\u304f\u540c\u3058\u4f7f\u3044\u65b9\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u4f5c\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u304c\u3001\u4f55\u62cd\u76ee\u304b\u307e\u3067\u306f\u8a08\u7b97\u3057\u306a\u304f\u3066\u3082\u4f7f\u3044\u3084\u3059\u304b\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u8a08\u7b97\u91cf\u3092\u6e1b\u3089\u3057\u3066\u3001\u4f55\u5c0f\u7bc0\u76ee\u306e\u3069\u3093\u306a\u3082\u3093\u304b\u3092\u53d6\u5f97\u3059\u308b\u3060\u3051\u3067\u3082\u69cb\u308f\u306a\u3044\u3068\u306f\u601d\u3044\u307e\u3059\u3002\n\n##\u5168\u4f53\u50cf\n\n```cpp:MySoundBeat.h\nnamespace Mahou\n{\n    //\u73fe\u5728\u306e\u62cd\u3084\u5c0f\u7bc0\u306a\u3069\u306e\u60c5\u5831\u3092\u6301\u3063\u305f\u69cb\u9020\u4f53\n\tstruct BeatCount\n\t{\n\t\tint64 bar;\t\t//\u73fe\u5728\u306e\u5c0f\u7bc0\n\t\tint32 beat;\t\t//\u73fe\u5728\u306e\u5c0f\u7bc0\u306e\u4f55\u62cd\u76ee\u304b\n\t\tdouble f;\t\t//\u73fe\u5728\u306e\u62cd\u306e\u3069\u3093\u306a\u3082\u3093\u304b [0,1)\n\t\tBeatCount(int64 bar,int32 beat, double f) :\n\t\t\tbar(bar),\n\t\t\tbeat(beat),\n\t\t\tf(f)\n\t\t{}\n\t};\n\n    //\u540c\u671fclass\n\tclass SoundBeat\n\t{\n\tprivate:\n\t\tdouble m_bpm;\n\t\tint64 m_offsetSample;\n\n\tpublic:\n\t\tSoundBeat() :\n\t\t\tm_bpm(0),\n\t\t\tm_offsetSample(0)\n\t\t{}\n\t\tSoundBeat(const int64 offsetSample, const double bpm) :\n\t\t\tm_bpm(bpm),\n\t\t\tm_offsetSample(offsetSample)\n\t\t{}\n\n       //a/b\u62cd\u5b50\n\t\tBeatCount operator()(const Sound& sound, const int32 a = 4,const int32 b = 4)const;\n\n\n}\n```\n\n`s3d::SoundBeat`\u540c\u69d8\u306b`operator()`\u3067\u5f15\u6570\u306bSound\u578b\u3068\u3001\u305d\u306e\u66f2\u306e\u62cd\u5b50\u306e\u60c5\u5831\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u4f55\u5c0f\u7bc0\u76ee\u304b\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n##\u53d6\u5f97\u95a2\u6570\n\n###\u306f\u3058\u3081\u306b\n`s3d::SoundBeat`\u306e\u5185\u90e8\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u306f\u304a\u305d\u3089\u304f`Sound::streamPosSample()`\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u95a2\u6570\u306f\u73fe\u572850Hz\u3067\u3057\u304b\u66f4\u65b0\u3055\u308c\u306a\u3044\u3089\u3057\u304f\u300160FPS\u306e\u5834\u54086\u30d5\u30ec\u30fc\u30e0\u306b1\u56de\u3001\u66f4\u65b0\u3055\u308c\u306a\u3044\u6642\u304c\u3042\u308a\u307e\u3059\u3002\n\u5bfe\u3057\u3066\u3001`Sound::samplesPlayed()`\u95a2\u6570\u306f\u6bce\u30d5\u30ec\u30fc\u30e0\u66f4\u65b0\u304c\u884c\u308f\u308c\u308b\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n###\u30b3\u30fc\u30c9\n\n```cpp:MySoundBeat.cpp\nnamespace Mahou\n{\n\t\tBeatCount SoundBeat::operator()(const Sound& sound, const int32 a,const int32 b)const\n\t\t{\n\t\t\t//1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n\t\t\tconst int64 samplePerBar = static_cast<int64>(60.0f * 4.0f*a/b / m_bpm * 44100.0f);\n\t\t\t//1\u62cd\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n\t\t\tconst int32 samplePerBeat = static_cast<int32>(samplePerBar / a);\n\t\t\t//\u73fe\u5728\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n\t\t\tconst int64 currentSample = sound.samplesPlayed() - m_offsetSample;\n\n\t\t\t//\u73fe\u5728\u304c\u4f55\u5c0f\u7bc0\u76ee\u304b\n\t\t\tconst int64 currentBar = currentSample / samplePerBar;\n\t\t\tconst int64 restSample = currentSample%samplePerBar;\t//\u4f59\u3063\u305f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n\n\t\t\t//\u73fe\u5728\u304c\u4f55\u62cd\u76ee\u304b\n\t\t\tconst int32 currentBeat = static_cast<int32>(restSample/ samplePerBeat);\n\t\t\tconst int32 restBeatSample = static_cast<int32>(restSample%samplePerBeat); //\u4f59\u3063\u305f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n\n\t\t\tconst double f = (double)restBeatSample/ (samplePerBeat);\n\n\t\t\treturn BeatCount{ currentBar,currentBeat,f };\n\t\t}\n\n}\n```\n\n##\u89e3\u8aac\n###\u5358\u4f4d\n`Sound::samplesPlayed()`\u306e\u6271\u3046\u5358\u4f4d\u306f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u3067\u3059\u3002\n\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\u304c44100\u306e\u5834\u5408\u30011\u79d2\u959344100\u56de\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u308f\u304b\u308a\u3084\u3059\u304f\u8a00\u3046\u3068\n1\u79d2=44100\u56de\n2\u79d2=88200\u56de\n\u2026\n\u3068\u306a\u308b\u306e\u3067\u3001\u3059\u3079\u3066**\u79d2\u6570*44100**\u3067\u6271\u3046\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u3053\u3053\u306e\u5358\u4f4d\u306f\u3001\u958b\u767a\u74b0\u5883\u306b\u3088\u3063\u3066\u3001\u79d2\u3060\u3063\u305f\u308a\u30df\u30ea\u79d2\u3060\u3063\u305f\u308a\u3082\u3059\u308b\u3068\u601d\u3046\u306e\u3067\u4ee5\u964d\u306e\u8a08\u7b97\u3082\u5404\u81ea\u5358\u4f4d\u3092\u5408\u308f\u305b\u307e\u3057\u3087\u3046\u3002\n\n###1\u5c0f\u7bc0\u30011\u62cd\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u3092\u6c42\u3081\u308b\n\n```cpp\n//1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\nconst int64 samplePerBar = static_cast<int64>(60.0f * 4.0f*a/b / m_bpm * 44100.0f);\n```\n\u307e\u305a4/4\u62cd\u5b50(1/1\u62cd\u5b50)\u306e\u66f2\u3067bpm\u304c120\u306e\u66421\u5c0f\u7bc0\u306f\u4f55\u79d2\u304b\u8003\u3048\u307e\u3059\u3002\nbpm\u3068\u306f*beat/minutes*\u3059\u306a\u308f\u30611\u5206\u9593\u306b\u3042\u308b\u62cd\u6570\u3067\u3059\u3002\nbpm120\u3068\u3044\u3046\u3053\u3068\u306f1\u5206\u9593\u306b120\u62cd\u3068\u3044\u3046\u3053\u3068\u306a\u306e\u3067\u30014/4\u62cd\u5b50\u306e\u5834\u5408\n`60\u79d2(1\u5206)=30\u5c0f\u7bc0(120\u62cd)`\n\u304b\u3089`1\u5c0f\u7bc0=2\u79d2`\u3068\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u540c\u69d8\u306bbpm\u304cn\u30674/4\u62cd\u5b50\u306e\u6642\u306f\n`60\u79d2=n/4\u5c0f\u7bc0`\u304b\u3089\n`1\u5c0f\u7bc0=240/n\u79d2`\u3068\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u306d\u3002\n\u3067\u306f\u3001a/b\u62cd\u5b50\u306e\u5834\u5408\u3069\u3046\u306a\u308b\u3067\u3057\u3087\u3046\u304b?\n\u3053\u308c\u306f\u7c21\u5358\u3067\n\u3055\u3063\u304d\u5f97\u305f\u5024\u306ba/b\u3092\u304b\u3051\u308b\u3060\u3051\u3067\u3059\u3002\n\u3088\u3063\u3066\nbpm\u304cn\u3067a/b\u62cd\u5b50\u306e\u6642\u30011\u5c0f\u7bc0\u306e\u79d2\u6570\u306f\n**(240/n)*(a/b)**\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u304c\u5358\u4f4d\u306a\u306e\u3067\u3053\u308c\u306b44100\u3092\u304b\u3051\u305f\u3082\u306e\u304c1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u3068\u306a\u308a\u307e\u3059\u306d\uff01\n\n1\u62cd\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u306f\n1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u3092a\u3067\u5272\u308c\u3070\u51fa\u308b\u306e\u3067\n\n```cpp\n//1\u62cd\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\nconst int32 samplePerBeat = static_cast<int32>(samplePerBar / a);\n```\n\u3068\u306a\u308a\u307e\u3059\u3002\n\n###\u73fe\u5728\u306e\u66f2\u304c\u4f55\u5c0f\u7bc0\u306e\u4f55\u62cd\u76ee\u304b\u3092\u6c42\u3081\u308b\n\n\u307e\u305a\u3001\u5b9f\u969b\u306e\u66f2\u30c7\u30fc\u30bf\u306e\u518d\u751f\u4f4d\u7f6e\u3068\u30aa\u30d5\u30bb\u30c3\u30c8\u304b\u3089\u6539\u3081\u3066\u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e\u3092\u6c42\u3081\u307e\u3059\u3002\n\u3053\u308c\u306f\u518d\u751f\u4f4d\u7f6e\u304b\u3089\u30aa\u30d5\u30bb\u30c3\u30c8\u3092\u5f15\u304f\u3060\u3051\u3067\u3059\u3002\n\n```cpp\n //\u73fe\u5728\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\nconst int64 currentSample = sound.samplesPlayed() - m_offsetSample;\n```\n\n\u3082\u3061\u308d\u3093\u5225\u306e\u74b0\u5883\u306e\u5834\u5408\u306fsound.samplesPlayed()\u306e\u90e8\u5206\u3092\u5404\u74b0\u5883\u306e\u518d\u751f\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u306b\u7f6e\u304d\u63db\u3048\u3066\u3001\u30aa\u30d5\u30bb\u30c3\u30c8\u7b49\u306e\u5358\u4f4d\u3092\u5408\u308f\u305b\u308c\u3070OK\u3067\u3059\u3002\n\n\n\u6b21\u306b\u3001\u73fe\u5728\u4f55\u5c0f\u7bc0\u76ee\u304b\u3092\u6c42\u3081\u307e\u3059\u304c\u3002\n\u3055\u3063\u304d1\u5c0f\u7bc0\u304c\u3069\u308c\u3060\u3051\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u304b\u3092\u6c42\u3081\u305f\u306e\u3067\u3001\n`\u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e/1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570`\u3067\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```cpp\n //\u73fe\u5728\u304c\u4f55\u5c0f\u7bc0\u76ee\u304b\n const int64 currentBar = currentSample / samplePerBar;\n```\n\n\u540c\u69d8\u306b\u73fe\u5728\u304c\u4f55\u62cd\u76ee\u304b\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n`\u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e-\u73fe\u5728\u306e\u5c0f\u7bc0*1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570`\n\u3067\u4f59\u308a\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u3092\u6c42\u3081\u307e\u3059\u3002\n\u4eca\u56de\u3001\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u306f\u6574\u6570\u578b\u306a\u306e\u3067\n`\u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e%1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570`\n\u3067\u3082\u540c\u69d8\u306b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n`\u6c42\u3081\u305f\u4f59\u308a\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570/1\u62cd\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570`\n\u3067\u73fe\u5728\u4f55\u62cd\u76ee\u304b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```cpp\nconst int64 restSample = currentSample%samplePerBar;    //\u4f59\u3063\u305f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n//\u73fe\u5728\u304c\u4f55\u62cd\u76ee\u304b\nconst int32 currentBeat = static_cast<int32>(restSample/ samplePerBeat);\n```\n\n\u6700\u5f8c\u306b\u3001\n\u3055\u3089\u306b\u4f59\u3063\u305f\u5206\u3092\u540c\u69d8\u306b\u8a08\u7b97\u3057\n\u305d\u306e\u4f59\u308a\u30921\u62cd\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u3067\u5272\u3063\u305f\u5024\u304c\n\u73fe\u5728\u306e\u62cd\u304b\u3089\u3069\u3093\u306a\u3082\u3093\u304b\u306b\u306a\u308a\u307e\u3059\u3002\n\n```cpp\n const int32 restBeatSample = static_cast<int32>(restSample%samplePerBeat); //\u4f59\u3063\u305f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\n\nconst double f = (double)restBeatSample/ (samplePerBeat);\n```\n\n\u3053\u308c\u3067\n\n+ \u73fe\u5728\u306e\u5c0f\u7bc0\n+ \u73fe\u5728\u306e\u62cd\n+ \u73fe\u5728\u306e\u62cd\u304b\u3089\u3069\u3093\u306a\u3082\u3093\u304b [0,1)\n\n\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u4f7f\u3044\u65b9\u306f\u4e0a\u3067\u7d39\u4ecb\u3057\u305f`s3d::SoundBeat`\u3068\u540c\u3058\u3067\u3059\u3002\n\n#\u307e\u3068\u3081\n\n+ \u73fe\u5728\u306e\u518d\u751f\u4f4d\u7f6e\u3068bpm\u3001\u30aa\u30d5\u30bb\u30c3\u30c8\u3001(\u62cd\u5b50)\u304b\u3089\u73fe\u5728\u306e\u5c0f\u7bc0\u3084\u62cd\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\uff01\n+ \u5358\u4f4d\u3092\u3042\u308f\u305b\u3055\u3048\u3059\u308c\u3070\u540c\u3058\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3055\u307e\u3056\u307e\u306a\u74b0\u5883\u3067\u5b9f\u88c5\u53ef\u80fd\n\n#\u304a\u307e\u3051\n##\u62cd\u304c\u5fc5\u8981\u306a\u3044\u5834\u5408\u306e\u4f8b\n\n\u4ee5\u4e0b\u306f\u81ea\u5206\u304c\u4f5c\u6210\u3057\u305f\u97f3\u697d\u30b2\u30fc\u30e0[ColorfulTone](http://www11.atpages.jp/tyanmahou/game/ColorfulTone/)\u3067\u5b9f\u969b\u306b\u4f7f\u7528\u3057\u305fclass\u3067\u3059\u3002\n\n\n```cpp:SoundBar.h\nusing BPMType=double;\nnamespace Mahou\n{\n\n\tstruct BarCount\n\t{\n\t\tint64 bar;\n\n\t\tdouble f;\n\t\tBarCount(int64 bar, double f) :bar(bar), f(f) {}\n\t};\n\n\tclass SoundBar\n\t{\n\tprivate:\n\t\tBPMType m_bpm;\n\t\tint64 m_offsetSample;\n\n\tpublic:\n\t\tSoundBar() :\n\t\t\tm_bpm(0),\n\t\t\tm_offsetSample(0)\n\t\t{}\n\t\tSoundBar(int64 offsetSample, BPMType bpm) :\n\t\t\tm_bpm(bpm),\n\t\t\tm_offsetSample(offsetSample)\n\t\t{}\n\t\tBarCount operator()(const Sound& sound)const\n\t\t{\n\t\t\t//1\u5c0f\u7bc0\u306e\u30b5\u30f3\u30d7\u30eb\u6570\n\t\t\tconst int64 samplePerBar = 60.0f * 4.0f / m_bpm * 44100.0f;\n#ifdef VIEWER_MODE\n\t\t\tconst int64 currentSample = sound.streamPosSample()- m_offsetSample;\n#else\n\t\t\tconst int64 currentSample = sound.samplesPlayed() - m_offsetSample;\n\t\t\t\n#endif\n\n\t\t\tconst int64 currentBar = currentSample / samplePerBar;\n\t\t\tconst int64 restSample = currentSample%samplePerBar;\n\t\t\tconst double f = (double)restSample / samplePerBar;\n\n\t\t\treturn BarCount{ currentBar,f };\n\t\t}\n\t\tconst int64 getOffset()const { return m_offsetSample; }\n\t\tconst BPMType& getBPM()const { return m_bpm; }\n\t};\n\n\n}\n\n```\n\n`s3d::Sound::samplesPlayed()`\u306f\u30d0\u30c3\u30d5\u30a1\u306b\u9001\u4fe1\u3092\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u306e\u6570\u306a\u306e\u3067\u518d\u751f\u4f4d\u7f6e\u3092\u5909\u66f4\u3057\u305f\u308a\u3057\u305f\u5834\u5408\u306f\u540c\u671f\u304c\u5d29\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3057\u305f\u304c\u3063\u3066\u3001\u81ea\u7531\u306b\u518d\u751f\u4f4d\u7f6e\u3092\u5909\u66f4\u3067\u304d\u308b\u30d3\u30e5\u30fc\u30ef\u30fc\u306e\u3068\u304d\u306e\u307f`s3d::Sound::streamPosSample()`\u306b\u5207\u308a\u66ff\u3048\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n", "tags": ["Siv3D", "C++"]}