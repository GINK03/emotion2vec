{"context": " More than 1 year has passed since last update.require \"active_record\"\nActiveRecord::VERSION::STRING           # => \"4.2.1\"\nActiveRecord::Base.establish_connection(:adapter => \"sqlite3\", :database => \":memory:\")\nclass User < ActiveRecord::Base; end\ndef _(code); code.to_sql; end\nUser.arel_table[:x].instance_eval do\n  _ eq(nil)                            # => \"users.x IS NULL\"\n  _ eq(0)                              # => \"users.x = 0\"\n  _ eq_any([0,1])                      # => \"(users.x = 0 OR users.x = 1)\"\n  _ eq_all([0,1])                      # => \"(users.x = 0 AND users.x = 1)\"\n\n  _ not_eq(nil)                        # => \"users.x IS NOT NULL\"\n  _ not_eq(0)                          # => \"users.x != 0\"\n  _ not_eq_any([0,1])                  # => \"(users.x != 0 OR users.x != 1)\"\n  _ not_eq_all([0,1])                  # => \"(users.x != 0 AND users.x != 1)\"\n\n  _ gt(0)                              # => \"users.x > 0\"\n  _ gt_any([0,1])                      # => \"(users.x > 0 OR users.x > 1)\"\n  _ gt_all([0,1])                      # => \"(users.x > 0 AND users.x > 1)\"\n  _ gteq(0)                            # => \"users.x >= 0\"\n  _ gteq_any([0,1])                    # => \"(users.x >= 0 OR users.x >= 1)\"\n  _ gteq_all([0,1])                    # => \"(users.x >= 0 AND users.x >= 1)\"\n\n  _ lt(0)                              # => \"users.x < 0\"\n  _ lt_any([0,1])                      # => \"(users.x < 0 OR users.x < 1)\"\n  _ lt_all([0,1])                      # => \"(users.x < 0 AND users.x < 1)\"\n  _ lteq(0)                            # => \"users.x <= 0\"\n  _ lteq_any([0,1])                    # => \"(users.x <= 0 OR users.x <= 1)\"\n  _ lteq_all([0,1])                    # => \"(users.x <= 0 AND users.x <= 1)\"\n\n  _ self.in(0)                         # => \"users.x IN (0)\"\n  _ self.in([0,1])                     # => \"users.x IN (0, 1)\"\n  _ in_any([[0,1], [2,3]])             # => \"(users.x IN (0, 1) OR users.x IN (2, 3))\"\n  _ in_all([[0,1], [2,3]])             # => \"(users.x IN (0, 1) AND users.x IN (2, 3))\"\n\n  _ not_in(0)                          # => \"users.x NOT IN (0)\"\n  _ not_in([0,1])                      # => \"users.x NOT IN (0, 1)\"\n  _ not_in_any([[0,1], [2,3]])         # => \"(users.x NOT IN (0, 1) OR users.x NOT IN (2, 3))\"\n  _ not_in_all([[0,1], [2,3]])         # => \"(users.x NOT IN (0, 1) AND users.x NOT IN (2, 3))\"\n\n  _ matches(\"%a%\")                     # => \"users.x LIKE '%a%'\"\n  _ matches_all([\"%a%\", \"%b%\"])        # => \"(users.x LIKE '%a%' AND users.x LIKE '%b%')\"\n  _ matches_any([\"%a%\", \"%b%\"])        # => \"(users.x LIKE '%a%' OR users.x LIKE '%b%')\"\n\n  _ does_not_match(\"%a%\")              # => \"users.x NOT LIKE '%a%'\"\n  _ does_not_match_all([\"%a%\", \"%b%\"]) # => \"(users.x NOT LIKE '%a%' AND users.x NOT LIKE '%b%')\"\n  _ does_not_match_any([\"%a%\", \"%b%\"]) # => \"(users.x NOT LIKE '%a%' OR users.x NOT LIKE '%b%')\"\n\n  _ between(0..1)                      # => \"users.x BETWEEN 0 AND 1\"\n  _ between(0...2)                     # => \"users.x >= 0 AND users.x < 2\"\n\n  _ not_between(0..1)                  # => \"(users.x < 0 OR users.x > 1)\"\n  _ not_between(0...2)                 # => \"(users.x < 0 OR users.x >= 2)\"\n\n  I = Float::INFINITY\n  _ between(0..I)                      # => \"users.x >= 0\"\n  _ between(-I..0)                     # => \"users.x <= 0\"\n  _ between(-I..I)                     # => \"1=1\"\n\n  _ not_between(0..I)                  # => \"users.x < 0\"\n  _ not_between(-I..0)                 # => \"users.x > 0\"\n  _ not_between(-I..I)                 # => \"1=0\"\nend\n\nRange \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 in, not_in \u306b\u6e21\u3059\u4f7f\u3044\u65b9\u306f\u975e\u63a8\u5968\u306b\u306a\u3063\u305f\u3088\u3046\u3067\u3059\u3002\n```ruby\nrequire \"active_record\"\nActiveRecord::VERSION::STRING           # => \"4.2.1\"\nActiveRecord::Base.establish_connection(:adapter => \"sqlite3\", :database => \":memory:\")\nclass User < ActiveRecord::Base; end\ndef _(code); code.to_sql; end\nUser.arel_table[:x].instance_eval do\n  _ eq(nil)                            # => \"users.x IS NULL\"\n  _ eq(0)                              # => \"users.x = 0\"\n  _ eq_any([0,1])                      # => \"(users.x = 0 OR users.x = 1)\"\n  _ eq_all([0,1])                      # => \"(users.x = 0 AND users.x = 1)\"\n\n  _ not_eq(nil)                        # => \"users.x IS NOT NULL\"\n  _ not_eq(0)                          # => \"users.x != 0\"\n  _ not_eq_any([0,1])                  # => \"(users.x != 0 OR users.x != 1)\"\n  _ not_eq_all([0,1])                  # => \"(users.x != 0 AND users.x != 1)\"\n\n  _ gt(0)                              # => \"users.x > 0\"\n  _ gt_any([0,1])                      # => \"(users.x > 0 OR users.x > 1)\"\n  _ gt_all([0,1])                      # => \"(users.x > 0 AND users.x > 1)\"\n  _ gteq(0)                            # => \"users.x >= 0\"\n  _ gteq_any([0,1])                    # => \"(users.x >= 0 OR users.x >= 1)\"\n  _ gteq_all([0,1])                    # => \"(users.x >= 0 AND users.x >= 1)\"\n\n  _ lt(0)                              # => \"users.x < 0\"\n  _ lt_any([0,1])                      # => \"(users.x < 0 OR users.x < 1)\"\n  _ lt_all([0,1])                      # => \"(users.x < 0 AND users.x < 1)\"\n  _ lteq(0)                            # => \"users.x <= 0\"\n  _ lteq_any([0,1])                    # => \"(users.x <= 0 OR users.x <= 1)\"\n  _ lteq_all([0,1])                    # => \"(users.x <= 0 AND users.x <= 1)\"\n\n  _ self.in(0)                         # => \"users.x IN (0)\"\n  _ self.in([0,1])                     # => \"users.x IN (0, 1)\"\n  _ in_any([[0,1], [2,3]])             # => \"(users.x IN (0, 1) OR users.x IN (2, 3))\"\n  _ in_all([[0,1], [2,3]])             # => \"(users.x IN (0, 1) AND users.x IN (2, 3))\"\n\n  _ not_in(0)                          # => \"users.x NOT IN (0)\"\n  _ not_in([0,1])                      # => \"users.x NOT IN (0, 1)\"\n  _ not_in_any([[0,1], [2,3]])         # => \"(users.x NOT IN (0, 1) OR users.x NOT IN (2, 3))\"\n  _ not_in_all([[0,1], [2,3]])         # => \"(users.x NOT IN (0, 1) AND users.x NOT IN (2, 3))\"\n\n  _ matches(\"%a%\")                     # => \"users.x LIKE '%a%'\"\n  _ matches_all([\"%a%\", \"%b%\"])        # => \"(users.x LIKE '%a%' AND users.x LIKE '%b%')\"\n  _ matches_any([\"%a%\", \"%b%\"])        # => \"(users.x LIKE '%a%' OR users.x LIKE '%b%')\"\n\n  _ does_not_match(\"%a%\")              # => \"users.x NOT LIKE '%a%'\"\n  _ does_not_match_all([\"%a%\", \"%b%\"]) # => \"(users.x NOT LIKE '%a%' AND users.x NOT LIKE '%b%')\"\n  _ does_not_match_any([\"%a%\", \"%b%\"]) # => \"(users.x NOT LIKE '%a%' OR users.x NOT LIKE '%b%')\"\n\n  _ between(0..1)                      # => \"users.x BETWEEN 0 AND 1\"\n  _ between(0...2)                     # => \"users.x >= 0 AND users.x < 2\"\n\n  _ not_between(0..1)                  # => \"(users.x < 0 OR users.x > 1)\"\n  _ not_between(0...2)                 # => \"(users.x < 0 OR users.x >= 2)\"\n\n  I = Float::INFINITY\n  _ between(0..I)                      # => \"users.x >= 0\"\n  _ between(-I..0)                     # => \"users.x <= 0\"\n  _ between(-I..I)                     # => \"1=1\"\n\n  _ not_between(0..I)                  # => \"users.x < 0\"\n  _ not_between(-I..0)                 # => \"users.x > 0\"\n  _ not_between(-I..I)                 # => \"1=0\"\nend\n```\n\nRange \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 in, not_in \u306b\u6e21\u3059\u4f7f\u3044\u65b9\u306f\u975e\u63a8\u5968\u306b\u306a\u3063\u305f\u3088\u3046\u3067\u3059\u3002\n", "tags": ["ActiveRecord", "Arel", "Rails"]}