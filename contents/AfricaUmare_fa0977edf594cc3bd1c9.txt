{"context": "\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n\u3053\u306e\u30de\u30af\u30ed\u306f\u3001\u60aa\u540d\u9ad8\u304dExcel\u65b9\u773c\u7d19\u3067\u66f8\u985e\u3092\u4f5c\u308b\u3068\u304d\u306b\u4f7f\u3046\u30de\u30af\u30ed\u3067\u3059\u3002\n(\u3067\u304d\u308c\u3070\u4f7f\u3044\u305f\u304f\u306a\u3044\u3051\u3069\u3001\u4f1a\u793e\u3084\u53d6\u5f15\u5148\u306e\u90fd\u5408\u3067Excel\u65b9\u773c\u7d19\u306e\u30d5\u30a9\u30fc\u30e0\u3092\u4f7f\u308f\u3056\u308b\u3092\u5f97\u306a\u3044\u3001\u3001\u3001)\n\u5177\u4f53\u7684\u306b\u306f\u3001\u8907\u6570\u306e\u30bb\u30eb\u304c\u7f6b\u7dda\u3067\u56f2\u307e\u308c\u305f\u7bc4\u56f2\u3092\u7d50\u5408\u3057\u305f\u3044\u3068\u3044\u3046\u306e\u304c\u3053\u306e\u30de\u30af\u30ed\u306e\u76ee\u7684\u3002(\u4e0b\u56f3\u53c2\u7167)\n\n\n\u4f7f\u3044\u65b9\n\u5f8c\u8ff0\u306e\u30b3\u30fc\u30c9\u3092\u3001Excel VBA\u306e\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u30b3\u30d4\u30fc\u3059\u308c\u3070\u3001\u305d\u306e\u307e\u307e\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\n\u7bc4\u56f2\u3092\u9078\u629e\u3057\u3001Alt+8\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u304b\u3089\u30de\u30af\u30ed\u3092\u547c\u3073\u51fa\u3057\u5b9f\u884c\u3057\u307e\u3059\n\n\u3000\n\u3044\u308d\u3044\u308d\u306a\u7f6b\u7dda\u306b\u5bfe\u3057\u3066\u3053\u306e\u30de\u30af\u30ed\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u7f6b\u7dda\u3067\u56f2\u307e\u308c\u305f\u8907\u6570\u306e\u7570\u306a\u308b\u30bb\u30eb\u306b\u30c6\u30ad\u30b9\u30c8\u304c\u5165\u529b\u3057\u3066\u3042\u308b\u3068\u3001\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u70b9\u306f\u3001\u30bb\u30eb\u7d50\u5408\u6642\u306b\u30c7\u30fc\u30bf\u3082\u30de\u30fc\u30b8\u3059\u308bExcel\u30de\u30af\u30ed \u3092\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u89e3\u6c7a\u3057\u307e\u3059\u306d\u3002(\u500b\u4eba\u7684\u306b\u306f\u5fc5\u8981\u6027\u304c\u8584\u304b\u3063\u305f\u306e\u3067\u3001\u7d44\u307f\u8fbc\u3081\u3066\u306a\u3044\u3067\u3059)\n\n(\u308f\u304b\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u3001\u30de\u30fc\u30b8\u3057\u305f\u7bc4\u56f2\u3092\u9ec4\u8272\u3067\u8272\u4ed8\u3057\u3066\u307e\u3059)\n\n\n\u30b3\u30fc\u30c9\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3092Excel VBA\u306e\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u30b3\u30d4\u30fc\u3059\u308c\u3070\u3059\u3050\u306b\u4f7f\u3048\u307e\u3059\u3002\n\nModule1.bas\nAttribute VB_Name = \"Module1\"\nOption Explicit\n\nPublic Sub mergeInBoader()\n    Dim setRng As Range, mergeRng As Range, iRng As Range\n\n    Const NG As Integer = -4142 '\u7f6b\u7dda\u306a\u3057\n    Const OK As Integer = 1 '\u7f6b\u7dda\u3042\u308a\n\n    If TypeName(Selection) <> \"Range\" Then Exit Sub\n    Set setRng = Selection\n\n    For Each iRng In setRng\n        If iRng.Borders(xlEdgeTop).LineStyle = OK And _\n            iRng.Borders(xlEdgeLeft).LineStyle = OK Then '\u5de6\u3068\u4e0a\u306b\u7f6b\u7dda\u304c\u3042\u308b\u3068\u304d\n\n            Set mergeRng = mergeRight(iRng, setRng, OK, NG) '\u53f3\u306e\u7f6b\u7dda\u307e\u3067\u306e\u7bc4\u56f2\u3092\u62bd\u51fa\n            Set mergeRng = mergeBottom(mergeRng, setRng, OK, NG) '\u4e0b\u306e\u7f6b\u7dda\u307e\u3067\u306e\u7bc4\u56f2\u3092\u62bd\u51fa\n            Set mergeRng = checkBoader(mergeRng, OK, NG) '\u67a0\u7dda\u304c\u9014\u5207\u308c\u3066\u306a\u3044\u304b/\u5185\u5074\u306b\u7f6b\u7dda\u304c\u306a\u3044\u304b\u3092\u78ba\u8a8d\n\n            If Not mergeRng Is Nothing Then\n                mergeRng.Merge '\u62bd\u51fa\u7bc4\u56f2\u3092\u30de\u30fc\u30b8\u3059\u308b\n            End If\n        End If\n    Next\nEnd Sub\n\nPrivate Function mergeRight(ByRef iRng As Range, ByRef setRng As Range, ByVal OK As Integer, ByVal NG As Integer) As Range\n\n    Dim i As Long\n    Dim iCount As Long\n\n    Set mergeRight = iRng\n\n    If iRng.Borders(xlEdgeRight).LineStyle = OK Then Exit Function    'iRng\u306e\u53f3\u306b\u7f6b\u7dda\u304c\u3042\u308c\u3070\u7d42\u4e86\n\n    'iRng\u306e\u53f3\u306b\u7f6b\u7dda\u304c\u306a\u3044\u5834\u5408\u3001mergeRight\u306e\u7bc4\u56f2\u3092\u53f3\u306b\u62e1\u5927\n    i = 0\n    iCount = setRng(1, setRng.Columns.Count).Column - iRng.Column + 1\n\n    Do While i < iCount\n        If iRng.Offset(0, i).Borders(xlEdgeRight).LineStyle = NG Then '\u53f3\u306b\u7f6b\u7dda\u304c\u306a\u3044\u5834\u5408\n            Set mergeRight = Union(mergeRight, iRng.Offset(0, i + 1))\n            i = i + 1\n        Else '\u53f3\u306b\u7f6b\u7dda\u304c\u3042\u308b\u5834\u5408\n            i = Columns.Count\n        End If\n    Loop\n\n    If i <> Columns.Count Then     '\u62bd\u51fa\u7bc4\u56f2\u306e\u53f3\u7aef\u307e\u3067\u7f6b\u7dda\u304c\u306a\u304b\u3063\u305f\u5834\u5408\n        Set mergeRight = Nothing\n    End If\n\nEnd Function\n\nPrivate Function mergeBottom(ByRef iRng As Range, ByRef setRng As Range, ByVal OK As Integer, ByVal NG As Integer) As Range\n\n    Dim i As Long\n    Dim iCount As Long\n\n    Set mergeBottom = iRng\n\n    If iRng Is Nothing Then Exit Function   '\u30a8\u30e9\u30fc\u51e6\u7406\n    If iRng.Borders(xlEdgeBottom).LineStyle = OK Then Exit Function    'iRng\u306e\u4e0b\u306b\u7f6b\u7dda\u304c\u3042\u308c\u3070\u7d42\u4e86\n\n    'iRng\u306e\u4e0b\u306b\u7f6b\u7dda\u304c\u306a\u3044\u5834\u5408\u3001mergeBottom\u306e\u7bc4\u56f2\u3092\u4e0b\u306b\u62e1\u5927\n    i = 0\n    iCount = setRng(setRng.Rows.Count, 1).Row - iRng.Row + 1\n\n    Do While i < iCount\n        If iRng.Offset(i, 0).Borders(xlEdgeBottom).LineStyle = NG Then '\u4e0b\u306b\u7f6b\u7dda\u304c\u306a\u3044\u5834\u5408\n            Set mergeBottom = Union(mergeBottom, iRng.Offset(i + 1, 0))\n            i = i + 1\n        Else '\u4e0b\u306b\u7f6b\u7dda\u304c\u3042\u308b\u5834\u5408\n            i = Rows.Count\n        End If\n    Loop\n\n    If i <> Rows.Count Then     '\u62bd\u51fa\u7bc4\u56f2\u306e\u4e0b\u7aef\u307e\u3067\u7f6b\u7dda\u304c\u306a\u304b\u3063\u305f\u5834\u5408\n        Set mergeBottom = Nothing\n    End If\n\nEnd Function\n\nPrivate Function checkBoader(ByRef mergeRng As Range, ByVal OK As Integer, ByVal NG As Integer) As Range\n\n    Dim iRng As Range\n    Dim i As Long, j As Long\n\n    Set checkBoader = mergeRng\n    If mergeRng Is Nothing Then Exit Function   '\u30a8\u30e9\u30fc\u51e6\u7406\n\n    For i = 1 To mergeRng.Rows.Count\n        For j = 1 To mergeRng.Columns.Count\n            Set iRng = mergeRng(i, j)  '\u30de\u30fc\u30b8\u4e88\u5b9a\u9818\u57df\u306e\u5404\u30ec\u30f3\u30b8\u306b\u3064\u3044\u3066\u8a55\u4fa1\n\n            ' \u9818\u57df\u306e\u7aef\u306b\u67a0\u7dda\u304c\u3042\u308b\u304b\u78ba\u8a8d\n            If i = 1 And iRng.Borders(xlEdgeTop).LineStyle = NG Then Set checkBoader = Nothing '\u4e0a\u5074\n            If i = mergeRng.Rows.Count And iRng.Borders(xlEdgeBottom).LineStyle = NG Then Set checkBoader = Nothing '\u4e0b\u5074\n            If j = 1 And iRng.Borders(xlEdgeLeft).LineStyle = NG Then Set checkBoader = Nothing '\u5de6\u5074\n            If j = mergeRng.Columns.Count And iRng.Borders(xlEdgeRight).LineStyle = NG Then Set checkBoader = Nothing '\u53f3\u5074\n\n            ' \u9818\u57df\u306e\u5185\u5074\u306b\u7f6b\u7dda\u304c\u306a\u3044\u304b\u78ba\u8a8d\n            If mergeRng.Rows.Count = 1 Or mergeRng.Columns.Count = 1 Then Exit Function '\u4e00\u5217/\u4e00\u884c\u306e\u5834\u5408\u306fCheck\u9664\u5916\n            If i <> 1 And iRng.Borders(xlEdgeTop).LineStyle = OK Then Set checkBoader = Nothing '\u4e0a\u7aef\u4ee5\u5916\u306e\u4e0a\u5074\n            If i <> mergeRng.Rows.Count And iRng.Borders(xlEdgeBottom).LineStyle = OK Then Set checkBoader = Nothing '\u4e0b\u7aef\u4ee5\u5916\u306e\u4e0b\u5074\n            If j <> 1 And iRng.Borders(xlEdgeLeft).LineStyle = OK Then Set checkBoader = Nothing '\u5de6\u7aef\u4ee5\u5916\u306e\u5de6\u5074\n            If j <> mergeRng.Columns.Count And iRng.Borders(xlEdgeRight).LineStyle = OK Then Set checkBoader = Nothing '\u53f3\u7aef\u4ee5\u5916\u306e\u53f3\u5074\n\n        Next\n    Next\n\nEnd Function\n\n\n\n\u53c2\u8003\n\n\u7f6b\u7dda\u306e\u67a0\u5185\u3092\u3001\u500b\u5225\u306b\u4e00\u6c17\u306b\u30bb\u30eb\u306e\u7d50\u5408\u3059\u308b\u65b9\u6cd5\u306f\u3042\u308a\u307e\u3059\u304b\uff1f\nOffice TANAKA \u30bb\u30eb\u306e\u64cd\u4f5c(\u7f6b\u7dda\u306e\u8a2d\u5b9a)\nExcel\u3067\u67a0\u7dda\u3067\u56f2\u307e\u308c\u305f\u30bb\u30eb\u306e\u7bc4\u56f2\u3092\u53d6\u5f97\u3059\u308b VBA Function\n\n## \u3084\u308a\u305f\u3044\u3053\u3068\n\u3053\u306e\u30de\u30af\u30ed\u306f\u3001\u60aa\u540d\u9ad8\u304dExcel\u65b9\u773c\u7d19\u3067\u66f8\u985e\u3092\u4f5c\u308b\u3068\u304d\u306b\u4f7f\u3046\u30de\u30af\u30ed\u3067\u3059\u3002\n(\u3067\u304d\u308c\u3070\u4f7f\u3044\u305f\u304f\u306a\u3044\u3051\u3069\u3001\u4f1a\u793e\u3084\u53d6\u5f15\u5148\u306e\u90fd\u5408\u3067Excel\u65b9\u773c\u7d19\u306e\u30d5\u30a9\u30fc\u30e0\u3092\u4f7f\u308f\u3056\u308b\u3092\u5f97\u306a\u3044\u3001\u3001\u3001)\n\n\u5177\u4f53\u7684\u306b\u306f\u3001\u8907\u6570\u306e\u30bb\u30eb\u304c\u7f6b\u7dda\u3067\u56f2\u307e\u308c\u305f\u7bc4\u56f2\u3092\u7d50\u5408\u3057\u305f\u3044\u3068\u3044\u3046\u306e\u304c\u3053\u306e\u30de\u30af\u30ed\u306e\u76ee\u7684\u3002(\u4e0b\u56f3\u53c2\u7167)\n![\u3084\u308a\u305f\u3044\u3053\u30681.PNG](https://qiita-image-store.s3.amazonaws.com/0/80231/2158c556-48e8-d041-e323-f0ab09993acf.png)\n\n## \u4f7f\u3044\u65b9\n\u5f8c\u8ff0\u306e\u30b3\u30fc\u30c9\u3092\u3001Excel VBA\u306e\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u30b3\u30d4\u30fc\u3059\u308c\u3070\u3001\u305d\u306e\u307e\u307e\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\n* \u7bc4\u56f2\u3092\u9078\u629e\u3057\u3001Alt+8\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u304b\u3089\u30de\u30af\u30ed\u3092\u547c\u3073\u51fa\u3057\u5b9f\u884c\u3057\u307e\u3059\n![\u4f7f\u3044\u65b91.PNG](https://qiita-image-store.s3.amazonaws.com/0/80231/87f3a756-5a5e-ed30-e004-4f076a5d3298.png)\n\u3000\n \n\n* \u3044\u308d\u3044\u308d\u306a\u7f6b\u7dda\u306b\u5bfe\u3057\u3066\u3053\u306e\u30de\u30af\u30ed\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u7f6b\u7dda\u3067\u56f2\u307e\u308c\u305f\u8907\u6570\u306e\u7570\u306a\u308b\u30bb\u30eb\u306b\u30c6\u30ad\u30b9\u30c8\u304c\u5165\u529b\u3057\u3066\u3042\u308b\u3068\u3001\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u70b9\u306f\u3001[\u30bb\u30eb\u7d50\u5408\u6642\u306b\u30c7\u30fc\u30bf\u3082\u30de\u30fc\u30b8\u3059\u308bExcel\u30de\u30af\u30ed](http://www.relief.jp/itnote/archives/003779.php) \u3092\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u89e3\u6c7a\u3057\u307e\u3059\u306d\u3002(\u500b\u4eba\u7684\u306b\u306f\u5fc5\u8981\u6027\u304c\u8584\u304b\u3063\u305f\u306e\u3067\u3001\u7d44\u307f\u8fbc\u3081\u3066\u306a\u3044\u3067\u3059)\n![\u4f7f\u3044\u65b92.PNG](https://qiita-image-store.s3.amazonaws.com/0/80231/be7c28fd-bbeb-4116-6eb5-d50281e3f565.png)\n(\u308f\u304b\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u3001\u30de\u30fc\u30b8\u3057\u305f\u7bc4\u56f2\u3092\u9ec4\u8272\u3067\u8272\u4ed8\u3057\u3066\u307e\u3059)\n\n## \u30b3\u30fc\u30c9\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3092Excel VBA\u306e\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u30b3\u30d4\u30fc\u3059\u308c\u3070\u3059\u3050\u306b\u4f7f\u3048\u307e\u3059\u3002\n\n```vbnet:Module1.bas\nAttribute VB_Name = \"Module1\"\nOption Explicit\n\nPublic Sub mergeInBoader()\n    Dim setRng As Range, mergeRng As Range, iRng As Range\n    \n    Const NG As Integer = -4142 '\u7f6b\u7dda\u306a\u3057\n    Const OK As Integer = 1 '\u7f6b\u7dda\u3042\u308a\n    \n    If TypeName(Selection) <> \"Range\" Then Exit Sub\n    Set setRng = Selection\n    \n    For Each iRng In setRng\n        If iRng.Borders(xlEdgeTop).LineStyle = OK And _\n            iRng.Borders(xlEdgeLeft).LineStyle = OK Then '\u5de6\u3068\u4e0a\u306b\u7f6b\u7dda\u304c\u3042\u308b\u3068\u304d\n            \n            Set mergeRng = mergeRight(iRng, setRng, OK, NG) '\u53f3\u306e\u7f6b\u7dda\u307e\u3067\u306e\u7bc4\u56f2\u3092\u62bd\u51fa\n            Set mergeRng = mergeBottom(mergeRng, setRng, OK, NG) '\u4e0b\u306e\u7f6b\u7dda\u307e\u3067\u306e\u7bc4\u56f2\u3092\u62bd\u51fa\n            Set mergeRng = checkBoader(mergeRng, OK, NG) '\u67a0\u7dda\u304c\u9014\u5207\u308c\u3066\u306a\u3044\u304b/\u5185\u5074\u306b\u7f6b\u7dda\u304c\u306a\u3044\u304b\u3092\u78ba\u8a8d\n            \n            If Not mergeRng Is Nothing Then\n                mergeRng.Merge '\u62bd\u51fa\u7bc4\u56f2\u3092\u30de\u30fc\u30b8\u3059\u308b\n            End If\n        End If\n    Next\nEnd Sub\n\nPrivate Function mergeRight(ByRef iRng As Range, ByRef setRng As Range, ByVal OK As Integer, ByVal NG As Integer) As Range\n\n    Dim i As Long\n    Dim iCount As Long\n\n    Set mergeRight = iRng\n    \n    If iRng.Borders(xlEdgeRight).LineStyle = OK Then Exit Function    'iRng\u306e\u53f3\u306b\u7f6b\u7dda\u304c\u3042\u308c\u3070\u7d42\u4e86\n    \n    'iRng\u306e\u53f3\u306b\u7f6b\u7dda\u304c\u306a\u3044\u5834\u5408\u3001mergeRight\u306e\u7bc4\u56f2\u3092\u53f3\u306b\u62e1\u5927\n    i = 0\n    iCount = setRng(1, setRng.Columns.Count).Column - iRng.Column + 1\n    \n    Do While i < iCount\n        If iRng.Offset(0, i).Borders(xlEdgeRight).LineStyle = NG Then '\u53f3\u306b\u7f6b\u7dda\u304c\u306a\u3044\u5834\u5408\n            Set mergeRight = Union(mergeRight, iRng.Offset(0, i + 1))\n            i = i + 1\n        Else '\u53f3\u306b\u7f6b\u7dda\u304c\u3042\u308b\u5834\u5408\n            i = Columns.Count\n        End If\n    Loop\n    \n    If i <> Columns.Count Then     '\u62bd\u51fa\u7bc4\u56f2\u306e\u53f3\u7aef\u307e\u3067\u7f6b\u7dda\u304c\u306a\u304b\u3063\u305f\u5834\u5408\n        Set mergeRight = Nothing\n    End If\n    \nEnd Function\n\nPrivate Function mergeBottom(ByRef iRng As Range, ByRef setRng As Range, ByVal OK As Integer, ByVal NG As Integer) As Range\n\n    Dim i As Long\n    Dim iCount As Long\n    \n    Set mergeBottom = iRng\n\n    If iRng Is Nothing Then Exit Function   '\u30a8\u30e9\u30fc\u51e6\u7406\n    If iRng.Borders(xlEdgeBottom).LineStyle = OK Then Exit Function    'iRng\u306e\u4e0b\u306b\u7f6b\u7dda\u304c\u3042\u308c\u3070\u7d42\u4e86\n\n    'iRng\u306e\u4e0b\u306b\u7f6b\u7dda\u304c\u306a\u3044\u5834\u5408\u3001mergeBottom\u306e\u7bc4\u56f2\u3092\u4e0b\u306b\u62e1\u5927\n    i = 0\n    iCount = setRng(setRng.Rows.Count, 1).Row - iRng.Row + 1\n    \n    Do While i < iCount\n        If iRng.Offset(i, 0).Borders(xlEdgeBottom).LineStyle = NG Then '\u4e0b\u306b\u7f6b\u7dda\u304c\u306a\u3044\u5834\u5408\n            Set mergeBottom = Union(mergeBottom, iRng.Offset(i + 1, 0))\n            i = i + 1\n        Else '\u4e0b\u306b\u7f6b\u7dda\u304c\u3042\u308b\u5834\u5408\n            i = Rows.Count\n        End If\n    Loop\n\n    If i <> Rows.Count Then     '\u62bd\u51fa\u7bc4\u56f2\u306e\u4e0b\u7aef\u307e\u3067\u7f6b\u7dda\u304c\u306a\u304b\u3063\u305f\u5834\u5408\n        Set mergeBottom = Nothing\n    End If\n\nEnd Function\n\nPrivate Function checkBoader(ByRef mergeRng As Range, ByVal OK As Integer, ByVal NG As Integer) As Range\n\n    Dim iRng As Range\n    Dim i As Long, j As Long\n\n    Set checkBoader = mergeRng\n    If mergeRng Is Nothing Then Exit Function   '\u30a8\u30e9\u30fc\u51e6\u7406\n      \n    For i = 1 To mergeRng.Rows.Count\n        For j = 1 To mergeRng.Columns.Count\n            Set iRng = mergeRng(i, j)  '\u30de\u30fc\u30b8\u4e88\u5b9a\u9818\u57df\u306e\u5404\u30ec\u30f3\u30b8\u306b\u3064\u3044\u3066\u8a55\u4fa1\n            \n            ' \u9818\u57df\u306e\u7aef\u306b\u67a0\u7dda\u304c\u3042\u308b\u304b\u78ba\u8a8d\n            If i = 1 And iRng.Borders(xlEdgeTop).LineStyle = NG Then Set checkBoader = Nothing '\u4e0a\u5074\n            If i = mergeRng.Rows.Count And iRng.Borders(xlEdgeBottom).LineStyle = NG Then Set checkBoader = Nothing '\u4e0b\u5074\n            If j = 1 And iRng.Borders(xlEdgeLeft).LineStyle = NG Then Set checkBoader = Nothing '\u5de6\u5074\n            If j = mergeRng.Columns.Count And iRng.Borders(xlEdgeRight).LineStyle = NG Then Set checkBoader = Nothing '\u53f3\u5074\n            \n            ' \u9818\u57df\u306e\u5185\u5074\u306b\u7f6b\u7dda\u304c\u306a\u3044\u304b\u78ba\u8a8d\n            If mergeRng.Rows.Count = 1 Or mergeRng.Columns.Count = 1 Then Exit Function '\u4e00\u5217/\u4e00\u884c\u306e\u5834\u5408\u306fCheck\u9664\u5916\n            If i <> 1 And iRng.Borders(xlEdgeTop).LineStyle = OK Then Set checkBoader = Nothing '\u4e0a\u7aef\u4ee5\u5916\u306e\u4e0a\u5074\n            If i <> mergeRng.Rows.Count And iRng.Borders(xlEdgeBottom).LineStyle = OK Then Set checkBoader = Nothing '\u4e0b\u7aef\u4ee5\u5916\u306e\u4e0b\u5074\n            If j <> 1 And iRng.Borders(xlEdgeLeft).LineStyle = OK Then Set checkBoader = Nothing '\u5de6\u7aef\u4ee5\u5916\u306e\u5de6\u5074\n            If j <> mergeRng.Columns.Count And iRng.Borders(xlEdgeRight).LineStyle = OK Then Set checkBoader = Nothing '\u53f3\u7aef\u4ee5\u5916\u306e\u53f3\u5074\n            \n        Next\n    Next\n\nEnd Function\n```\n\n## \u53c2\u8003\n1. [\u7f6b\u7dda\u306e\u67a0\u5185\u3092\u3001\u500b\u5225\u306b\u4e00\u6c17\u306b\u30bb\u30eb\u306e\u7d50\u5408\u3059\u308b\u65b9\u6cd5\u306f\u3042\u308a\u307e\u3059\u304b\uff1f](http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1497332139)\n2. [Office TANAKA \u30bb\u30eb\u306e\u64cd\u4f5c(\u7f6b\u7dda\u306e\u8a2d\u5b9a)](http://officetanaka.net/excel/vba/cell/cell07.htm)\n3. [Excel\u3067\u67a0\u7dda\u3067\u56f2\u307e\u308c\u305f\u30bb\u30eb\u306e\u7bc4\u56f2\u3092\u53d6\u5f97\u3059\u308b VBA Function](http://d.hatena.ne.jp/arakik10/20130127/p1)\n", "tags": ["Excel", "VBA", "ExcelVBA"]}