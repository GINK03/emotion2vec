{"tags": ["Alamofire", "Swift"], "context": " More than 1 year has passed since last update.Bridge-Header\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306bObjective-C\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u3048\u308b\u306e\u3067\u305a\u3063\u3068AFNetworking\u3092\u3064\u304b\u3063\u3066\u307e\u3057\u305f\u3002\n\u3060\u3051\u3069\u3001\u4eca\u66f4\u3060\u304cSwift\u3060\u3051\u306b\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u3066Alamofire\u3092\u4f7f\u3063\u3066\u307f\u305f\u3002  \n\u8ee2\u8f09:http://kixixixixi.hatenablog.com/entry/20151007/1444213987\nHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308b\u969b\u306f\u3044\u3064\u3082Helper\u4f5c\u3063\u3066\u3044\u308b\u306e\u3067\u4eca\u56de\u3082\u305d\u306e\u65b9\u91dd\u3067Alamofire\u3092\u53e9\u304d\u306b\u3044\u304fHelper\u30e1\u30bd\u30c3\u30c9\u3092\u3064\u304f\u308a\u307e\u3057\u305f\u3002\n      func callAPI(\n        path path:String,\n        method:Alamofire.Method,\n        params:[String: AnyObject]?,\n        notificationName:Notice,\n        success:SuccessCallbackBlock,\n        failure:FailureCallbackBlock\n        )\n    {\n\n        Alamofire.request(\n            method,\n            APIHost + path,\n            parameters: params\n            )\n            .responseJSON { request, response, result in\n\n                if response?.statusCode >= 400\n                {\n                    failure(error: result.error)\n                    self.sendNotification(notificationName, success: false, responseObject: nil)\n\n                }\n                else\n                {\n                    self.sendNotification(notificationName, success: true, responseObject: success(response: result.value))\n                }\n        }\n    }\n\n\u3053\u306eHelper\u3092\u4f5c\u3063\u3066\u304a\u3044\u3066\n        callAPI(\n            path: \"/login.json\",\n            method: .GET,\n            params: nil,\n            notificationName: .Login,\n            success: { (response) -> (AnyObject?) in\n\n                if let my = response as? NSDictionary\n                {\n                    // do something\n                }\n\n                return nil\n            },\n            failure: { (error) -> () in\n                // do something\n            }\n        )\n\n\u3053\u3046\u3044\u3063\u305f\u611f\u3058\u3067API\u3092\u305f\u305f\u304f\u3002\nNSNocification\u3092\u4f7f\u3063\u3066\u901a\u4fe1\u7d50\u679c\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\u306e\u3067sendnotification\u30e1\u30bd\u30c3\u30c9\u3084Notice\u306eenum\u306f\u5225\u3067\u4f5c\u3063\u3066\u3042\u308a\u307e\u3059\u3002\nAPIHost\u306f\u3044\u308f\u305a\u3082\u304c\u306a\u3002\n\u30d6\u30ed\u30c3\u30af\u306e\u578b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3064\u304f\u3063\u305f\u3002\npublic typealias SuccessCallbackBlock = (response:AnyObject?) -> (AnyObject?)\npublic typealias FailureCallbackBlock = (error: ErrorType?) -> ()\n\n\u3053\u308c\u3067\u3068\u308a\u3042\u3048\u305a\u3067\u304d\u3066\u3001AFNetworking\u3088\u308aswift\u3063\u307d\u304f\u3066\u4f7f\u3044\u3084\u3059\u3044\u306a\u3068\u601d\u3063\u305f\u3051\u3069\u30a2\u30d7\u30ea\u3092\u518d\u8d77\u52d5\u3059\u308b\u3068session\u304c\u5207\u308c\u3066\u3057\u307e\u3046\u306e\u304c\u3044\u305f\u3060\u3051\u306a\u3044\u3002cookie\u3092\u3069\u3053\u306b\u3082\u4fdd\u5b58\u3057\u3066\u306a\u3044\u304b\u3089\u306a\u30fc\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067Helper\u3092\u3044\u3058\u3063\u3066Cookie\u3092\u4fdd\u5b58\u3059\u308b\u6a5f\u69cb\u3092\u4f5c\u3063\u3066Session\u3092\u6c38\u7d9a\u5316\u3057\u3066\u307f\u305f\u3002  \n    var manager : Alamofire.Manager?\n    func configureManager() -> Alamofire.Manager?\n    {\n        if manager == nil\n        {\n            if let cookiesData:NSData = NSUserDefaults.standardUserDefaults().objectForKey(CookieKey) as? NSData\n            {\n                for cookie:NSHTTPCookie in NSKeyedUnarchiver.unarchiveObjectWithData(cookiesData) as! [NSHTTPCookie]\n                {\n                    NSHTTPCookieStorage.sharedHTTPCookieStorage().setCookie(cookie)\n                }\n            }\n\n            let cfg = NSURLSessionConfiguration.defaultSessionConfiguration()\n            cfg.HTTPCookieStorage = NSHTTPCookieStorage.sharedHTTPCookieStorage()\n            manager = Alamofire.Manager(configuration: cfg)\n        }\n        return manager\n    }\n\n\n    func callBasicAPI(\n        path path:String,\n        method:Alamofire.Method,\n        params:[String: AnyObject]?,\n        notificationName:Notice,\n        success:SuccessCallbackBlock,\n        failure:FailureCallbackBlock\n        )\n    {\n\n        configureManager()?.request(\n            method,\n            APIHost + path,\n            parameters: params\n            )\n            .responseJSON { request, response, result in\n\n                let cookies = NSHTTPCookie.cookiesWithResponseHeaderFields(response?.allHeaderFields as! [String:String], forURL: response!.URL!)\n                for var i = 0; i < cookies.count; i++ \n                {\n                    NSHTTPCookieStorage.sharedHTTPCookieStorage().setCookie(cookies[i])\n                }\n\n                let cookiesData:NSData = NSKeyedArchiver.archivedDataWithRootObject(NSHTTPCookieStorage.sharedHTTPCookieStorage().cookies!)\n                NSUserDefaults.standardUserDefaults().setObject(cookiesData, forKey: CookieKey)\n\n                if response?.statusCode >= 400\n                {\n                    failure(error: result.error)\n                    self.sendNotification(notificationName, success: false, responseObject: nil)\n\n                }\n                else\n                {\n                    self.sendNotification(notificationName, success: true, responseObject: success(response: result.value))\n                }\n        }\n    }\n\nHelper\u3067\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3063\u307d\u3044manager\u3092\u3064\u304f\u308a\u3001\u305d\u3053\u3067 NSUserDefaults \u306b\u4fdd\u5b58\u3057\u3066\u304a\u3044\u305fCookie\u3092\u5f15\u3063\u5f35\u3063\u3066\u304d\u3066\u5f53\u3066\u308b\u3002\n\u901a\u4fe1\u306e\u6210\u529f\u6642\u306b\u90fd\u5ea6\u3001Heder\u306b\u4ed8\u4e0e\u3055\u308c\u305fCookie\u3092 NSUserDefaults \u306b\u4fdd\u5b58\u3002\n\u3053\u308c\u3067session\u306f\u6c38\u7d9a\u5316\u3067\u304d\u307e\u3057\u305f\u3002\nHelper\u4f5c\u3063\u3066\u304a\u304f\u3068\u3001\u30e2\u30c7\u30eb\u7b49\u304b\u3089API\u53e9\u304d\u306b\u3044\u304f\u3068\u304d\u306f\u610f\u8b58\u3057\u306a\u3044\u3067\u3044\u3044\u306e\u3067\u697d\u3067\u3044\u3044\u3067\u3059\u3002\n\u4ee5\u4e0a\u3002\nBridge-Header\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306bObjective-C\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u3048\u308b\u306e\u3067\u305a\u3063\u3068AFNetworking\u3092\u3064\u304b\u3063\u3066\u307e\u3057\u305f\u3002  \n\u3060\u3051\u3069\u3001\u4eca\u66f4\u3060\u304cSwift\u3060\u3051\u306b\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u3066Alamofire\u3092\u4f7f\u3063\u3066\u307f\u305f\u3002  \n\n\u8ee2\u8f09:http://kixixixixi.hatenablog.com/entry/20151007/1444213987\n\n  \nHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308b\u969b\u306f\u3044\u3064\u3082Helper\u4f5c\u3063\u3066\u3044\u308b\u306e\u3067\u4eca\u56de\u3082\u305d\u306e\u65b9\u91dd\u3067Alamofire\u3092\u53e9\u304d\u306b\u3044\u304fHelper\u30e1\u30bd\u30c3\u30c9\u3092\u3064\u304f\u308a\u307e\u3057\u305f\u3002\n  \n```\n      func callAPI(\n        path path:String,\n        method:Alamofire.Method,\n        params:[String: AnyObject]?,\n        notificationName:Notice,\n        success:SuccessCallbackBlock,\n        failure:FailureCallbackBlock\n        )\n    {\n        \n        Alamofire.request(\n            method,\n            APIHost + path,\n            parameters: params\n            )\n            .responseJSON { request, response, result in\n                \n                if response?.statusCode >= 400\n                {\n                    failure(error: result.error)\n                    self.sendNotification(notificationName, success: false, responseObject: nil)\n                    \n                }\n                else\n                {\n                    self.sendNotification(notificationName, success: true, responseObject: success(response: result.value))\n                }\n        }\n    }\n```\n\n\u3053\u306eHelper\u3092\u4f5c\u3063\u3066\u304a\u3044\u3066\n\n```\n        callAPI(\n            path: \"/login.json\",\n            method: .GET,\n            params: nil,\n            notificationName: .Login,\n            success: { (response) -> (AnyObject?) in\n                \n                if let my = response as? NSDictionary\n                {\n                    // do something\n                }\n                \n                return nil\n            },\n            failure: { (error) -> () in\n                // do something\n            }\n        )\n```\n\n\u3053\u3046\u3044\u3063\u305f\u611f\u3058\u3067API\u3092\u305f\u305f\u304f\u3002  \nNSNocification\u3092\u4f7f\u3063\u3066\u901a\u4fe1\u7d50\u679c\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\u306e\u3067sendnotification\u30e1\u30bd\u30c3\u30c9\u3084Notice\u306eenum\u306f\u5225\u3067\u4f5c\u3063\u3066\u3042\u308a\u307e\u3059\u3002  \nAPIHost\u306f\u3044\u308f\u305a\u3082\u304c\u306a\u3002\n\u30d6\u30ed\u30c3\u30af\u306e\u578b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3064\u304f\u3063\u305f\u3002\n\n```\npublic typealias SuccessCallbackBlock = (response:AnyObject?) -> (AnyObject?)\npublic typealias FailureCallbackBlock = (error: ErrorType?) -> ()\n```\n\n\u3053\u308c\u3067\u3068\u308a\u3042\u3048\u305a\u3067\u304d\u3066\u3001AFNetworking\u3088\u308aswift\u3063\u307d\u304f\u3066\u4f7f\u3044\u3084\u3059\u3044\u306a\u3068\u601d\u3063\u305f\u3051\u3069\u30a2\u30d7\u30ea\u3092\u518d\u8d77\u52d5\u3059\u308b\u3068session\u304c\u5207\u308c\u3066\u3057\u307e\u3046\u306e\u304c\u3044\u305f\u3060\u3051\u306a\u3044\u3002cookie\u3092\u3069\u3053\u306b\u3082\u4fdd\u5b58\u3057\u3066\u306a\u3044\u304b\u3089\u306a\u30fc\u3002  \n\u3068\u3044\u3046\u3053\u3068\u3067Helper\u3092\u3044\u3058\u3063\u3066Cookie\u3092\u4fdd\u5b58\u3059\u308b\u6a5f\u69cb\u3092\u4f5c\u3063\u3066Session\u3092\u6c38\u7d9a\u5316\u3057\u3066\u307f\u305f\u3002  \n\n```\n    var manager : Alamofire.Manager?\n    func configureManager() -> Alamofire.Manager?\n    {\n        if manager == nil\n        {\n            if let cookiesData:NSData = NSUserDefaults.standardUserDefaults().objectForKey(CookieKey) as? NSData\n            {\n                for cookie:NSHTTPCookie in NSKeyedUnarchiver.unarchiveObjectWithData(cookiesData) as! [NSHTTPCookie]\n                {\n                    NSHTTPCookieStorage.sharedHTTPCookieStorage().setCookie(cookie)\n                }\n            }\n            \n            let cfg = NSURLSessionConfiguration.defaultSessionConfiguration()\n            cfg.HTTPCookieStorage = NSHTTPCookieStorage.sharedHTTPCookieStorage()\n            manager = Alamofire.Manager(configuration: cfg)\n        }\n        return manager\n    }\n\n        \n    func callBasicAPI(\n        path path:String,\n        method:Alamofire.Method,\n        params:[String: AnyObject]?,\n        notificationName:Notice,\n        success:SuccessCallbackBlock,\n        failure:FailureCallbackBlock\n        )\n    {\n        \n        configureManager()?.request(\n            method,\n            APIHost + path,\n            parameters: params\n            )\n            .responseJSON { request, response, result in\n                \n                let cookies = NSHTTPCookie.cookiesWithResponseHeaderFields(response?.allHeaderFields as! [String:String], forURL: response!.URL!)\n                for var i = 0; i < cookies.count; i++ \n                {\n                    NSHTTPCookieStorage.sharedHTTPCookieStorage().setCookie(cookies[i])\n                }\n                \n                let cookiesData:NSData = NSKeyedArchiver.archivedDataWithRootObject(NSHTTPCookieStorage.sharedHTTPCookieStorage().cookies!)\n                NSUserDefaults.standardUserDefaults().setObject(cookiesData, forKey: CookieKey)\n                \n                if response?.statusCode >= 400\n                {\n                    failure(error: result.error)\n                    self.sendNotification(notificationName, success: false, responseObject: nil)\n                    \n                }\n                else\n                {\n                    self.sendNotification(notificationName, success: true, responseObject: success(response: result.value))\n                }\n        }\n    }\n```\n\nHelper\u3067\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3063\u307d\u3044manager\u3092\u3064\u304f\u308a\u3001\u305d\u3053\u3067 `NSUserDefaults` \u306b\u4fdd\u5b58\u3057\u3066\u304a\u3044\u305fCookie\u3092\u5f15\u3063\u5f35\u3063\u3066\u304d\u3066\u5f53\u3066\u308b\u3002  \n\u901a\u4fe1\u306e\u6210\u529f\u6642\u306b\u90fd\u5ea6\u3001Heder\u306b\u4ed8\u4e0e\u3055\u308c\u305fCookie\u3092 `NSUserDefaults` \u306b\u4fdd\u5b58\u3002  \n\u3053\u308c\u3067session\u306f\u6c38\u7d9a\u5316\u3067\u304d\u307e\u3057\u305f\u3002  \nHelper\u4f5c\u3063\u3066\u304a\u304f\u3068\u3001\u30e2\u30c7\u30eb\u7b49\u304b\u3089API\u53e9\u304d\u306b\u3044\u304f\u3068\u304d\u306f\u610f\u8b58\u3057\u306a\u3044\u3067\u3044\u3044\u306e\u3067\u697d\u3067\u3044\u3044\u3067\u3059\u3002\n  \n\u4ee5\u4e0a\u3002\n"}