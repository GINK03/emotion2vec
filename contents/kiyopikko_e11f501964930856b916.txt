{"context": "\n\n\u7d50\u8ad6\n\u7dba\u9e97\u304b\u3069\u3046\u304b\u306f\u3055\u3066\u304a\u304d\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3084\u308b\u3068\u4e00\u5fdccss-modulesify\u3067PostCSS\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u554f\u984c\u306a\u304f\u4f7f\u3048\u307e\u3057\u305f\uff08ES2015, React\u74b0\u5883\uff09\u3002\u6765\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u52a0\u5de5\u3057\u3066\u308b\u3060\u3051\u306e\u8a71\u3067\u3059\u304c\u3002\nvar fs         = require('fs');\nvar through2   = require('through2');\nvar browserify = require('browserify');\nvar postcss    = require('postcss');\n\nvar b = browserify('src/index.js');\nb.transform(\"babelify\", {presets: [\"es2015\", \"react\"]});\n\nvar cssProcessors = [\n    require('postcss-nested'),\n    require('cssnano')\n];\n\nb.plugin(require('css-modulesify'), {\n  rootDir: __dirname\n});\n\nb.on('css stream', function (css) {\n  var postcssStream = through2(\n    function transform(chunk, enc, next){\n      postcss(cssProcessors)\n        .process(chunk)\n        .then(function (result) {\n            next(null, result.css);\n        });\n    }\n  );\n\n  css\n    .pipe(postcssStream)\n    .pipe(fs.createWriteStream('dist/modules.min.css'));\n});\n\nvar bundle = b.bundle();\nbundle.pipe(fs.createWriteStream('dist/bundle.js'));\n\ngulp\u306a\u3089\u4ee5\u4e0b\u3002\n\ngulpfile.js\nvar gulp       = require('gulp');\nvar postcss    = require('gulp-postcss');\nvar streamify  = require('gulp-streamify');\nvar browserify = require('browserify');\nvar source     = require('vinyl-source-stream');\n\nvar cssProcessors = [\n  require('postcss-nested'),\n  require('cssnano')\n];\n\n\ngulp.task('build', function(){\n\n  var browserified = function () {\n    var b = browserify('src/index.js');\n    b.transform(\"babelify\", {presets: [\"es2015\", \"react\"]});\n    b.plugin(require('css-modulesify'), {\n      rootDir: __dirname\n    });\n    b.on('css stream', function (css) {\n      css\n        .pipe(source('modules.min.css'))\n        .pipe(streamify(postcss(cssProcessors)))\n        .pipe(gulp.dest('dist/'));\n    });\n    return b.bundle();\n  };\n\n  browserified()\n    .on(\"error\", function (err) { console.log(\"Error : \" + err.message); })\n    .pipe(source('bundle.js'))\n    .pipe(gulp.dest('dist/'));\n});\n\n\n\n\u305d\u3082\u305d\u3082\u306e\u554f\u984c\nCSS Modules\u3092Browserify\u3067\u4f7f\u3046css-modulesify\u3067\u3001CSS\u3092\u826f\u3044\u611f\u3058\u306bminify\u3059\u308b\u30d7\u30e9\u30b0\u30a4\u30f3cssnano\u304c\u4f7f\u3048\u307e\u305b\u3093\u3067\u3057\u305f\u3002\ncss-modulesify\u306f\u3001\u4f7f\u3044\u305f\u3044PostCSS\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306buse\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\nvar b = require('browserify')();\nvar fs = require('fs');\n\nb.add('./main.js');\nb.plugin(require('css-modulesify'), {\n  rootDir: __dirname,\n  use: [\n    require('postcss-nested'),\n    require('cssnano')\n  ]\n});\n\nvar bundle = b.bundle();\nbundle.on('css stream', function (css) {\n  css.pipe(fs.createWriteStream('mycss.css'));\n});\n\n\u305f\u3060\u3053\u308c\u3060\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u308f\u308c\u3066\u3044\u308bCSS Modules\u7528\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\uff08postcss-modules-local-by-default, postcss-modules-extract-imports, postcss-modules-scope, postcss-modules-values\uff09\u3092\u4e0a\u66f8\u304d\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u306a\u306e\u3067\u3001use\u3067\u306f\u306a\u304fpostcssAfter after\u3092\u4f7f\u3046\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u8d70\u3063\u305f\u3042\u3068\u306b\u6307\u5b9a\u3057\u305f\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5b9f\u884c\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u7684\u306a\u3053\u3068\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3057\u305f\u3002\n...\n\nb.plugin(require('css-modulesify'), {\n  rootDir: __dirname,\n  after: [\n    require('postcss-nested'),\n    require('cssnano')\n  ]\n});\n\n...\n\n\u3067\u3059\u304c\u3001\u8a00\u308f\u308c\u305f\u901a\u308a\u306b\u3084\u3063\u3066\u3082\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306bcssnano\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u66f8\u304d\u51fa\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u304c\u7a7a\u306eCSS\u306b\u306a\u3063\u3066\u3044\u305f\uff08\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u51e6\u7406\u304c\u6b62\u307e\u3063\u3066\u3044\u305f\uff1f\uff09\u3001\u3068\u3044\u3046\u306e\u304c\u554f\u984c\u3067\u3057\u305f\uff08cssnext\u3082\u4f7f\u3048\u306a\u3044\u3063\u3066\u3044\u3046issue\u304c\u305f\u3063\u3066\u307e\u3057\u305f\uff09\u3002\n\u306a\u306e\u3067\u5192\u982d\u306e\u3088\u3046\u306b\u3001css-modulesify\u5185\u3067\u306f\u30d7\u30e9\u30b0\u30a4\u30f3\u306f\u4f7f\u308f\u305a\u3001css-modulesify\u304b\u3089\u6d41\u308c\u3066\u304d\u305fCSS\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306bPostCSS\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5f53\u3066\u3066\u3042\u3052\u308b\u3053\u3068\u3067\u554f\u984c\u3092\u56de\u907f\u3057\u307e\u3057\u305f\u3002\n\u305d\u3082\u305d\u3082\u3001\n\nPlease note that this is still highly experimental.\n\n\u3063\u3066\u8a00\u308f\u308c\u3066\u308b\u306e\u3067\u554f\u984c\u306f\u8d77\u3053\u3063\u3066\u5f53\u7136\u306a\u306e\u3068\u3001\u3053\u308c\u306f\u3042\u304f\u307e\u3067\u56de\u907f\u7b56\u306a\u306e\u3067\u3001\u72b6\u6cc1\u304c\u6b63\u78ba\u306b\u628a\u63e1\u3067\u304d\u6b21\u7b2cissue\u306b\u5831\u544a\u3057\u3066\u6539\u5584\u306b\u8ca2\u732e\u3057\u3088\u3046\u304b\u3068\u601d\u3044\u307e\u3059\uff08\u306f\u3084\u304fhighly experimental\u3058\u3083\u306a\u304f\u306a\u3063\u3066\u6b32\u3057\u3044...\uff09\u3002\n\u203b\u4fee\u6b63(2016-03-16)\uff1a0.22.0\u306e\u5909\u66f4\u306b\u3042\u308f\u305b\u305f\n# \u7d50\u8ad6\n\n\u7dba\u9e97\u304b\u3069\u3046\u304b\u306f\u3055\u3066\u304a\u304d\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3084\u308b\u3068\u4e00\u5fdccss-modulesify\u3067PostCSS\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u554f\u984c\u306a\u304f\u4f7f\u3048\u307e\u3057\u305f\uff08ES2015, React\u74b0\u5883\uff09\u3002\u6765\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u52a0\u5de5\u3057\u3066\u308b\u3060\u3051\u306e\u8a71\u3067\u3059\u304c\u3002\n\n```js\nvar fs         = require('fs');\nvar through2   = require('through2');\nvar browserify = require('browserify');\nvar postcss    = require('postcss');\n\nvar b = browserify('src/index.js');\nb.transform(\"babelify\", {presets: [\"es2015\", \"react\"]});\n\nvar cssProcessors = [\n    require('postcss-nested'),\n    require('cssnano')\n];\n\nb.plugin(require('css-modulesify'), {\n  rootDir: __dirname\n});\n\nb.on('css stream', function (css) {\n  var postcssStream = through2(\n    function transform(chunk, enc, next){\n      postcss(cssProcessors)\n        .process(chunk)\n        .then(function (result) {\n            next(null, result.css);\n        });\n    }\n  );\n\n  css\n    .pipe(postcssStream)\n    .pipe(fs.createWriteStream('dist/modules.min.css'));\n});\n\nvar bundle = b.bundle();\nbundle.pipe(fs.createWriteStream('dist/bundle.js'));\n```\n\ngulp\u306a\u3089\u4ee5\u4e0b\u3002\n\n```js:gulpfile.js\nvar gulp       = require('gulp');\nvar postcss    = require('gulp-postcss');\nvar streamify  = require('gulp-streamify');\nvar browserify = require('browserify');\nvar source     = require('vinyl-source-stream');\n\nvar cssProcessors = [\n  require('postcss-nested'),\n  require('cssnano')\n];\n\n\ngulp.task('build', function(){\n\n  var browserified = function () {\n    var b = browserify('src/index.js');\n    b.transform(\"babelify\", {presets: [\"es2015\", \"react\"]});\n    b.plugin(require('css-modulesify'), {\n      rootDir: __dirname\n    });\n    b.on('css stream', function (css) {\n      css\n        .pipe(source('modules.min.css'))\n        .pipe(streamify(postcss(cssProcessors)))\n        .pipe(gulp.dest('dist/'));\n    });\n    return b.bundle();\n  };\n\n  browserified()\n    .on(\"error\", function (err) { console.log(\"Error : \" + err.message); })\n    .pipe(source('bundle.js'))\n    .pipe(gulp.dest('dist/'));\n});\n```\n\n\n# \u305d\u3082\u305d\u3082\u306e\u554f\u984c\n\n[CSS Modules](http://postd.cc/css-modules/)\u3092Browserify\u3067\u4f7f\u3046[css-modulesify](https://github.com/css-modules/css-modulesify)\u3067\u3001CSS\u3092\u826f\u3044\u611f\u3058\u306bminify\u3059\u308b\u30d7\u30e9\u30b0\u30a4\u30f3[cssnano](http://cssnano.co/)\u304c\u4f7f\u3048\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\ncss-modulesify\u306f\u3001\u4f7f\u3044\u305f\u3044PostCSS\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b`use`\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n```js\nvar b = require('browserify')();\nvar fs = require('fs');\n\nb.add('./main.js');\nb.plugin(require('css-modulesify'), {\n  rootDir: __dirname,\n  use: [\n    require('postcss-nested'),\n    require('cssnano')\n  ]\n});\n\nvar bundle = b.bundle();\nbundle.on('css stream', function (css) {\n  css.pipe(fs.createWriteStream('mycss.css'));\n});\n```\n\n\u305f\u3060\u3053\u308c\u3060\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u308f\u308c\u3066\u3044\u308bCSS Modules\u7528\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\uff08`postcss-modules-local-by-default`, `postcss-modules-extract-imports`, `postcss-modules-scope`, `postcss-modules-values`\uff09\u3092\u4e0a\u66f8\u304d\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u306a\u306e\u3067\u3001`use`\u3067\u306f\u306a\u304f~~`postcssAfter`~~ `after`\u3092\u4f7f\u3046\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u8d70\u3063\u305f\u3042\u3068\u306b\u6307\u5b9a\u3057\u305f\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5b9f\u884c\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u7684\u306a\u3053\u3068\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3057\u305f\u3002\n\n\n```js\n...\n\nb.plugin(require('css-modulesify'), {\n  rootDir: __dirname,\n  after: [\n    require('postcss-nested'),\n    require('cssnano')\n  ]\n});\n\n...\n```\n\n\u3067\u3059\u304c\u3001\u8a00\u308f\u308c\u305f\u901a\u308a\u306b\u3084\u3063\u3066\u3082\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306b`cssnano`\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u66f8\u304d\u51fa\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u304c\u7a7a\u306eCSS\u306b\u306a\u3063\u3066\u3044\u305f\uff08\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u51e6\u7406\u304c\u6b62\u307e\u3063\u3066\u3044\u305f\uff1f\uff09\u3001\u3068\u3044\u3046\u306e\u304c\u554f\u984c\u3067\u3057\u305f\uff08[`cssnext`\u3082\u4f7f\u3048\u306a\u3044\u3063\u3066\u3044\u3046issue\u304c\u305f\u3063\u3066\u307e\u3057\u305f](https://github.com/css-modules/css-modulesify/issues/44)\uff09\u3002\n\n\u306a\u306e\u3067\u5192\u982d\u306e\u3088\u3046\u306b\u3001css-modulesify\u5185\u3067\u306f\u30d7\u30e9\u30b0\u30a4\u30f3\u306f\u4f7f\u308f\u305a\u3001css-modulesify\u304b\u3089\u6d41\u308c\u3066\u304d\u305fCSS\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306bPostCSS\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5f53\u3066\u3066\u3042\u3052\u308b\u3053\u3068\u3067\u554f\u984c\u3092\u56de\u907f\u3057\u307e\u3057\u305f\u3002\n\n\u305d\u3082\u305d\u3082\u3001\n> **Please note that this is still highly experimental.**\n\n\u3063\u3066\u8a00\u308f\u308c\u3066\u308b\u306e\u3067\u554f\u984c\u306f\u8d77\u3053\u3063\u3066\u5f53\u7136\u306a\u306e\u3068\u3001\u3053\u308c\u306f\u3042\u304f\u307e\u3067\u56de\u907f\u7b56\u306a\u306e\u3067\u3001\u72b6\u6cc1\u304c\u6b63\u78ba\u306b\u628a\u63e1\u3067\u304d\u6b21\u7b2cissue\u306b\u5831\u544a\u3057\u3066\u6539\u5584\u306b\u8ca2\u732e\u3057\u3088\u3046\u304b\u3068\u601d\u3044\u307e\u3059\uff08\u306f\u3084\u304fhighly experimental\u3058\u3083\u306a\u304f\u306a\u3063\u3066\u6b32\u3057\u3044...\uff09\u3002\n\n\u203b\u4fee\u6b63(2016-03-16)\uff1a0.22.0\u306e\u5909\u66f4\u306b\u3042\u308f\u305b\u305f\n", "tags": ["browserify", "CSS", "reactjs", "postcss", "css-modules"]}