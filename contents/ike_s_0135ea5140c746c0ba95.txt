{"context": " More than 1 year has passed since last update.ruby\u3067zookeeper\u3092\u4f7f\u3046\u30e1\u30e2\n\nGemfile\ngem 'zk'\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nbundle\n\nor\ngem install zk\n\nAPI\u30e1\u30e2\n\n\u63a5\u7d9a\nzk = ZK.new(\"host:port,host:port,.../chroot\")\n\n\n\n\u30ed\u30c3\u30af\nlocker = zk.locker('key_name')\nbegin\n  if ex_locker.lock!\n  # do something while holding lock\n  else\n    raise \"Oh noes, we didn't get teh lock!\"\n  end\nensure\n  locker.unlock!\nend\n\nor \n\nzk.with_lock('key_name') do\n\nend\n\n\n\nhttps://github.com/zk-ruby/zk/blob/master/lib/zk/locker.rb\n\netc\n# node\u4f5c\u6210\nzk.create(path, data, opts={})\n\n# ephemeral mode\nzk.create(\"/path\", '', :ephemeral => true)\n# => \"/path\"\n\n# sequence & ephemeral\nzk.create(\"/path\", '', :sequence => true, :ephemeral => true)\n# => \"/path0\"\n\n# \u53d6\u5f97\ndata, stat = zk.get(path, opts={})\n\n# data\u30bb\u30c3\u30c8\nzk.set(path, data, opts={})\n\n# \u5b58\u5728\u78ba\u8a8d\nzk.exists?(path, opts={})\n\n# \u5b50node\u306e\u53d6\u5f97\nzk.children(path)\n# => [ \"a\", \"b\" ]\n\n# \u524a\u9664\nzk.delete(\"/path\")\nzk.delete(\"/path\", :version => version)\n\n\n#close\nzk.close \nzk.close!  # pending\u4e2d\u306e\u30a4\u30d9\u30f3\u30c8\u3084thread\u3082\u5f37\u5236\u7d42\u4e86\n\n\n\u53c2\u8003\nhttps://github.com/zk-ruby/zk/blob/master/lib/zk/client/base.rb\nhttps://gist.github.com/juno/1471792\nruby\u3067zookeeper\u3092\u4f7f\u3046\u30e1\u30e2\n\n```ruby:Gemfile\ngem 'zk'\n```\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\nbundle\n```\n\nor\n\n```\ngem install zk\n```\n\nAPI\u30e1\u30e2\n\n```ruby:\u63a5\u7d9a\nzk = ZK.new(\"host:port,host:port,.../chroot\")\n```\n\n```ruby:\u30ed\u30c3\u30af\nlocker = zk.locker('key_name')\nbegin\n  if ex_locker.lock!\n  # do something while holding lock\n  else\n    raise \"Oh noes, we didn't get teh lock!\"\n  end\nensure\n  locker.unlock!\nend\n\nor \n\nzk.with_lock('key_name') do\n  \nend\n\n```\n\nhttps://github.com/zk-ruby/zk/blob/master/lib/zk/locker.rb\n\n\n```ruby:etc\n# node\u4f5c\u6210\nzk.create(path, data, opts={})\n\n# ephemeral mode\nzk.create(\"/path\", '', :ephemeral => true)\n# => \"/path\"\n\n# sequence & ephemeral\nzk.create(\"/path\", '', :sequence => true, :ephemeral => true)\n# => \"/path0\"\n\n# \u53d6\u5f97\ndata, stat = zk.get(path, opts={})\n\n# data\u30bb\u30c3\u30c8\nzk.set(path, data, opts={})\n\n# \u5b58\u5728\u78ba\u8a8d\nzk.exists?(path, opts={})\n\n# \u5b50node\u306e\u53d6\u5f97\nzk.children(path)\n# => [ \"a\", \"b\" ]\n\n# \u524a\u9664\nzk.delete(\"/path\")\nzk.delete(\"/path\", :version => version)\n\n\n#close\nzk.close \nzk.close!  # pending\u4e2d\u306e\u30a4\u30d9\u30f3\u30c8\u3084thread\u3082\u5f37\u5236\u7d42\u4e86\n```\n\n\u53c2\u8003\nhttps://github.com/zk-ruby/zk/blob/master/lib/zk/client/base.rb\n\nhttps://gist.github.com/juno/1471792\n\n", "tags": ["Ruby", "ZooKeeper"]}