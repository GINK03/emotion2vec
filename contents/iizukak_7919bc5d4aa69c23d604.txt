{"context": " More than 1 year has passed since last update.\u3053\u306e\u7ae0\u3067\u306f\u3001Scheme\u306b\u304a\u3051\u308b\u6570\u5024\u3092\u7528\u3044\u305f\u518d\u5e30\u306b\u3064\u3044\u3066\u5b66\u3076\u3002\n\nadd1, sub1\n\u3044\u308f\u3086\u308b\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3068\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u3092\u3059\u308b\u95a2\u6570\u5b9a\u7fa9\u3059\u308b\u3002\n\nadd1.scm\n(define add1\n  (lambda (n)\n    (+ n 1)))\n\n(define sub1\n  (lambda (n)\n    (- n 1)))\n\n(print (add1 10))\n(print (sub1 10))\n\n\n\u6570\u5024\u306f\u30a2\u30c8\u30e0\u3002\u6574\u6570\u3082\u5c0f\u6570\u3082\u6570\u5024\u3067\u3042\u308a\u30a2\u30c8\u30e0\u3067\u3042\u308b\u3002\u3067\u30823\u7ae0\u3067\u306f0\u4ee5\u4e0a\u306e\u6574\u6570\u306e\u307f\u6271\u3046\u3002\n\no+, o-\n\u4e0a\u8a18\u306e add1, sub1 \u3092\u7528\u3044\u3066\u6574\u6570\u540c\u58eb\u306e\u52a0\u7b97\u3068\u4e57\u7b97\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\no-.scm\n(define o-\n  (lambda (n m)\n    (cond\n      ((zero? m) n)\n      (else (sub1 (o- n (sub1 m)))))))\n\n(print (o+ 4 3))\n(print (o- 4 3))\n\n\n\u51fa\u529b\u306f 7 1 \u3002\n\naddtup\n\u6570\u5024\u306e\u30ea\u30b9\u30c8\u3092\u30bf\u30c3\u30d7\u3068\u3044\u3046\u3002\u7a7a\u306e\u30bf\u30c3\u30d7 () \u3092\u7a7a\u30bf\u30c3\u30d7\u3068\u3044\u3046\u3002\u30bf\u30c3\u30d7\u306b\u542b\u307e\u308c\u308b\u3059\u3079\u3066\u306e\u6570\u5024\u3092\u52a0\u7b97\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3059\u95a2\u6570 addtup \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\naddtup.scm\n(define addtup\n  (lambda (tup)\n    (cond\n      ((null? tup) 0)\n      (else (o+ (car tup) (addtup (cdr tup)))))))\n\n(print (addtup '(10 20 40)))\n\n\n\nx\n\u81ea\u7136\u306a\u4e57\u7b97\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\nx.scm\n(define x\n  (lambda (n m)\n    (cond\n      ((zero? m) 0)\n      (else (o+ n (x n (sub1 m)))))))\n\n(print (x 10 20))\n\n\n\ntup+\n\u3075\u305f\u3064\u306e\u30bf\u30c3\u30d7 tup1, tup2 \u3092\u5f15\u6570\u306b\u3068\u308a\u3001\u305d\u308c\u305e\u308c\u306e\u30bf\u30c3\u30d7\u306en\u756a\u76ee\u306e\u8981\u7d20\u540c\u58eb\u3092\u52a0\u7b97\u3057\u305f\u65b0\u3057\u3044\u30bf\u30c3\u30d7\u3092\u8fd4\u3059\u95a2\u6570 tup+ \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\ntup+.scm\n(define tup+\n  (lambda (tup1 tup2)\n    (cond \n      ((null? tup1) tup2)\n      ((null? tup2) tup1)\n      (else\n        (cons (o+ (car tup1) (car tup2))\n              (tup+\n                (cdr tup1) (cdr tup2)))))))\n\n\n(define tup1 '(3 7))\n(define tup2 '(4 6 8 1))\n(print (tup+ tup1 tup2))\n\n\n\u51fa\u529b\u306f (7 13 8 1) \u3002\n\u3053\u306e\u7ae0\u3067\u306f\u3001Scheme\u306b\u304a\u3051\u308b\u6570\u5024\u3092\u7528\u3044\u305f\u518d\u5e30\u306b\u3064\u3044\u3066\u5b66\u3076\u3002\n\n##add1, sub1\n\u3044\u308f\u3086\u308b\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3068\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u3092\u3059\u308b\u95a2\u6570\u5b9a\u7fa9\u3059\u308b\u3002\n\n```Lisp:add1.scm\n(define add1\n  (lambda (n)\n    (+ n 1)))\n\n(define sub1\n  (lambda (n)\n    (- n 1)))\n\n(print (add1 10))\n(print (sub1 10))\n```\n\n\u6570\u5024\u306f\u30a2\u30c8\u30e0\u3002\u6574\u6570\u3082\u5c0f\u6570\u3082\u6570\u5024\u3067\u3042\u308a\u30a2\u30c8\u30e0\u3067\u3042\u308b\u3002\u3067\u30823\u7ae0\u3067\u306f0\u4ee5\u4e0a\u306e\u6574\u6570\u306e\u307f\u6271\u3046\u3002\n\n##o+, o-\n\u4e0a\u8a18\u306e `add1`, `sub1` \u3092\u7528\u3044\u3066\u6574\u6570\u540c\u58eb\u306e\u52a0\u7b97\u3068\u4e57\u7b97\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```Lisp:o-.scm\n(define o-\n  (lambda (n m)\n    (cond\n      ((zero? m) n)\n      (else (sub1 (o- n (sub1 m)))))))\n\n(print (o+ 4 3))\n(print (o- 4 3))\n```\n\n\u51fa\u529b\u306f `7 1` \u3002\n\n##addtup\n\u6570\u5024\u306e\u30ea\u30b9\u30c8\u3092\u30bf\u30c3\u30d7\u3068\u3044\u3046\u3002\u7a7a\u306e\u30bf\u30c3\u30d7 `()` \u3092\u7a7a\u30bf\u30c3\u30d7\u3068\u3044\u3046\u3002\u30bf\u30c3\u30d7\u306b\u542b\u307e\u308c\u308b\u3059\u3079\u3066\u306e\u6570\u5024\u3092\u52a0\u7b97\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3059\u95a2\u6570 `addtup` \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```Lisp:addtup.scm\n(define addtup\n  (lambda (tup)\n    (cond\n      ((null? tup) 0)\n      (else (o+ (car tup) (addtup (cdr tup)))))))\n\n(print (addtup '(10 20 40)))\n```\n\n##x\n\u81ea\u7136\u306a\u4e57\u7b97\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```Lisp:x.scm\n(define x\n  (lambda (n m)\n    (cond\n      ((zero? m) 0)\n      (else (o+ n (x n (sub1 m)))))))\n\n(print (x 10 20))\n```\n\n##tup+\n\u3075\u305f\u3064\u306e\u30bf\u30c3\u30d7 `tup1`, `tup2` \u3092\u5f15\u6570\u306b\u3068\u308a\u3001\u305d\u308c\u305e\u308c\u306e\u30bf\u30c3\u30d7\u306en\u756a\u76ee\u306e\u8981\u7d20\u540c\u58eb\u3092\u52a0\u7b97\u3057\u305f\u65b0\u3057\u3044\u30bf\u30c3\u30d7\u3092\u8fd4\u3059\u95a2\u6570 `tup+` \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```Lisp:tup+.scm\n(define tup+\n  (lambda (tup1 tup2)\n    (cond \n      ((null? tup1) tup2)\n      ((null? tup2) tup1)\n      (else\n        (cons (o+ (car tup1) (car tup2))\n              (tup+\n                (cdr tup1) (cdr tup2)))))))\n\n\n(define tup1 '(3 7))\n(define tup2 '(4 6 8 1))\n(print (tup+ tup1 tup2))\n```\n\n\u51fa\u529b\u306f `(7 13 8 1)` \u3002", "tags": ["Scheme"]}