{"context": " More than 1 year has passed since last update.Ruby\u7528\u306eObject-Relational Mapper\u3067\u3042\u308bActiveRecord\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u304d\u306b\u3001Polymorphic\u306a\u95a2\u9023\u5148\u306b\u5bfe\u3057\u3066\u66f4\u306bPreload\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u89e6\u308c\u307e\u3059\u3002\n\n\u6587\u8108\n\u4f8b\u3048\u3070\u3001Twitter\u306e\u901a\u77e5\u4e00\u89a7\u753b\u9762\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3092\u958b\u767a\u3057\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001Model\u3001Controller\u3001View\u3092\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\nModel\n# SVO = Subject + Verb + Object\nclass Notification < ActiveRecord::Base\n  belongs_to :object, polymorphic: true\n  belongs_to :subject, class_name: \"User\"\nend\n\nclass FavoriteNotification < Notification\nend\n\nclass MentionNotification < Notification\nend\n\nclass Mention < ActiveRecord::Base\n  belongs_to :mentioned_tweet, class_name: \"Tweet\"\n  belongs_to :tweet\nend\n\nclass Favorite < ActiveRecord::Base\n  belongs_to :tweet\nend\n\nclass Tweet < ActiveRecord::Base\nend\n\nclass User < ActiveRecord::Base\n  has_many :notifications\nend\n\n\nController\nclass NotificationsController < ApplicationController\n  def index\n    @notifications = current_user.notifications.order(created_at: :desc)\n  end\nend\n\n\nView\nul\n  - @notifications.each do |notification|\n    li\n      = link_to notification.subject do\n        = notification.subject.name\n      | \u304c\n      - case notification\n      - when FavoriteNotification\n        = link_to notification.object.tweet do\n          = notification.object.tweet.title\n        | \u3092\u304a\u6c17\u306b\u5165\u308a\u306b\u767b\u9332\u3057\u307e\u3057\u305f\n      - when MentionNotification\n        = link_to notification.object.mentioned_tweet do\n          = notification.object.mentioned_tweet.title\n        | \u306b\n        = link_to notification.object.tweet\n          | \u8fd4\u4fe1\u3057\u307e\u3057\u305f\n\n\n\u554f\u984c\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306fN+1\u30af\u30a8\u30ea\u554f\u984c\u3001\u3059\u306a\u308f\u3061Notification 1\u4ef6\u3054\u3068\u306b\u500b\u5225\u306bSELECT\u30af\u30a8\u30ea\u304c\u767a\u884c\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u95a2\u9023\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u3092Preload\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\nclass NotificationController < ApplicationController\n  def index\n    @notification = Notification.order(created_at: :desc).preload(\n      :subject,\n      object: [\n        :mentioned_tweet,\n        :tweet,\n      ],\n    )\n  end\nend\n\n\u3057\u304b\u3057\u3001\u3053\u306e\u30b3\u30fc\u30c9\u3067\u306f\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002Mention\u306fmentioned_tweet\u306b\u7d10\u4ed8\u3044\u3066\u3044\u308b\u3082\u306e\u306e\u3001Favorite\u304cmentioned_tweet\u306b\u7d10\u4ed8\u3044\u3066\u3044\u306a\u3044\u305f\u3081\u3067\u3059\u3002\nActiveRecord::AssociationNotFoundError:\n  Association named 'mentioned_tweet' was not found on Favorite\n\n\n\u5bfe\u7b56\n\nModel\n\u307e\u305a Notification.belongs_to(:object) \u306e\u95a2\u9023\u3092\u53d6\u308a\u9664\u304d\u3001\u4e8c\u3064\u306e\u5225\u306e\u540d\u524d\u306e\u95a2\u9023\u306b\u5206\u3051\u307e\u3059\u3002\u6b21\u306b\u3001activerecord-belongs_to_if \u3092\u5229\u7528\u3057\u3066\u305d\u308c\u305e\u308c\u306e\u95a2\u9023\u304c\u6210\u308a\u7acb\u3064\u305f\u3081\u306e\u6761\u4ef6\u3092\u4e0e\u3048\u307e\u3059\u3002\u3053\u306e\u6761\u4ef6\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u3001\u4f8b\u3048\u3070 notifications.preload(:favorite) \u3068\u3057\u305f\u3068\u304d\u306b\u3001\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308bnotification\u3060\u3051favorite\u3092preload\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nclass Notification < ActiveRecord::Base\n  #belongs_to :object, polymorphic: true\n  belongs_to :favorite, foreign_key: :object_id, if: -> { is_a?(FavoriteNotification) }\n  belongs_to :mention, foreign_key: :object_id, if: -> { is_a?(MentionNotification) }\n  belongs_to :subject, class_name: \"User\"\nend\n\n\nController\nController\u3067\u306f\u3001Preload\u3059\u308b\u5bfe\u8c61\u3092object\u304b\u3089\u5909\u66f4\u3057\u307e\u3059\u3002favorite\u306b\u3064\u3044\u3066\u306f\u95a2\u9023\u3059\u308btweet\u3092\u3001mention\u306b\u3064\u3044\u3066\u306f\u95a2\u9023\u3059\u308bmentioned_tweet\u3068tweet\u3092\u305d\u308c\u305e\u308cPreload\u3055\u305b\u307e\u3059\u3002\nclass NotificationController < ApplicationController\n  def index\n    @notification = Notification.order(created_at: :desc).preload(\n      :subject,\n      favorite: :tweet,\n      mention: [\n        :mentioned_tweet,\n        :tweet,\n      ],\n    )\n  end\nend\n\n\nView\nView\u3082\u3001notification.object\u3067\u306f\u306a\u304f\u3001notification.favorite\u3084notification.mention\u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nul\n  - @notifications.each do |notification|\n    li\n      = link_to notification.subject do\n        = notification.subject.name\n      | \u304c\n      - case notification\n      - when FavoriteNotification\n        = link_to notification.favorite.tweet do\n          = notification.favorite.tweet.title\n        | \u3092\u304a\u6c17\u306b\u5165\u308a\u306b\u767b\u9332\u3057\u307e\u3057\u305f\n      - when MentionNotification\n        = link_to notification.mention.mentioned_tweet do\n          = notification.mention.mentioned_tweet.title\n        | \u306b\n        = link_to notification.mention.tweet\n          | \u8fd4\u4fe1\u3057\u307e\u3057\u305f\n\n\n\u7d50\u679c\n\u3053\u308c\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bN+1\u30af\u30a8\u30ea\u554f\u984c\u304c\u5c11\u3057\u7de9\u548c\u3055\u308c\u307e\u3059\u3002\nSELECT notifications.* FROM notifications WHERE notifications.receiver_id = 1 ORDER BY notifications.created_at DESC\nSELECT users.* FROM users WHERE users.id IN (2)\nSELECT favorites.* FROM favorites WHERE favorites.id IN (4, 127, 128, 133, 134)\nSELECT tweets.* FROM tweets WHERE tweets.id IN (10, 25, 26, 20, 3)\nSELECT mentions.* FROM mentions WHERE mentions.id IN (6)\nSELECT tweets.* FROM tweets WHERE tweets.id IN (27)\nSELECT tweets.* FROM tweets WHERE tweets.id IN (25)\n\n\n\u8ab2\u984c\nFavorite\u3068Mention\u306e\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u5225\u3005\u306bTweet\u3092\u554f\u3044\u5408\u308f\u305b\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u3001\u5c11\u3057\u7121\u99c4\u3068\u8a00\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u307e\u3042\u4f55\u3082\u5bfe\u7b56\u3057\u306a\u3044\u3088\u308a\u306f\u5e7e\u5206\u30de\u30b7\u3067\u3057\u3087\u3046\u3002\u3053\u308c\u3089\u3092\u307e\u3068\u3081\u3066\u53d6\u5f97\u3055\u305b\u308b\u306b\u306f\u3001Notification.belongs_to(:object)\u306f\u6b8b\u3057\u3066\u304a\u3044\u3066\u3001Favorite.belongs_to(:mentioned_tweet, if: -> { false })\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u3001notification.preload(object: [:mentioned_tweet, :tweet]) \u3068\u51fa\u6765\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nRuby\u7528\u306eObject-Relational Mapper\u3067\u3042\u308bActiveRecord\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u304d\u306b\u3001Polymorphic\u306a\u95a2\u9023\u5148\u306b\u5bfe\u3057\u3066\u66f4\u306bPreload\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u89e6\u308c\u307e\u3059\u3002\n\n## \u6587\u8108\n\u4f8b\u3048\u3070\u3001[Twitter\u306e\u901a\u77e5\u4e00\u89a7\u753b\u9762](https://twitter.com/i/notifications)\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3092\u958b\u767a\u3057\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001Model\u3001Controller\u3001View\u3092\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\n### Model\n```rb\n# SVO = Subject + Verb + Object\nclass Notification < ActiveRecord::Base\n  belongs_to :object, polymorphic: true\n  belongs_to :subject, class_name: \"User\"\nend\n\nclass FavoriteNotification < Notification\nend\n\nclass MentionNotification < Notification\nend\n\nclass Mention < ActiveRecord::Base\n  belongs_to :mentioned_tweet, class_name: \"Tweet\"\n  belongs_to :tweet\nend\n\nclass Favorite < ActiveRecord::Base\n  belongs_to :tweet\nend\n\nclass Tweet < ActiveRecord::Base\nend\n\nclass User < ActiveRecord::Base\n  has_many :notifications\nend\n```\n\n### Controller\n```rb\nclass NotificationsController < ApplicationController\n  def index\n    @notifications = current_user.notifications.order(created_at: :desc)\n  end\nend\n```\n\n### View\n```slim\nul\n  - @notifications.each do |notification|\n    li\n      = link_to notification.subject do\n        = notification.subject.name\n      | \u304c\n      - case notification\n      - when FavoriteNotification\n        = link_to notification.object.tweet do\n          = notification.object.tweet.title\n        | \u3092\u304a\u6c17\u306b\u5165\u308a\u306b\u767b\u9332\u3057\u307e\u3057\u305f\n      - when MentionNotification\n        = link_to notification.object.mentioned_tweet do\n          = notification.object.mentioned_tweet.title\n        | \u306b\n        = link_to notification.object.tweet\n          | \u8fd4\u4fe1\u3057\u307e\u3057\u305f\n```\n\n## \u554f\u984c\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306f[N+1\u30af\u30a8\u30ea\u554f\u984c](http://guides.rubyonrails.org/active_record_querying.html#eager-loading-associations)\u3001\u3059\u306a\u308f\u3061Notification 1\u4ef6\u3054\u3068\u306b\u500b\u5225\u306bSELECT\u30af\u30a8\u30ea\u304c\u767a\u884c\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u95a2\u9023\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u3092Preload\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\n\n```rb\nclass NotificationController < ApplicationController\n  def index\n    @notification = Notification.order(created_at: :desc).preload(\n      :subject,\n      object: [\n        :mentioned_tweet,\n        :tweet,\n      ],\n    )\n  end\nend\n```\n\n\u3057\u304b\u3057\u3001\u3053\u306e\u30b3\u30fc\u30c9\u3067\u306f\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002Mention\u306fmentioned_tweet\u306b\u7d10\u4ed8\u3044\u3066\u3044\u308b\u3082\u306e\u306e\u3001Favorite\u304cmentioned_tweet\u306b\u7d10\u4ed8\u3044\u3066\u3044\u306a\u3044\u305f\u3081\u3067\u3059\u3002\n\n```\nActiveRecord::AssociationNotFoundError:\n  Association named 'mentioned_tweet' was not found on Favorite\n```\n\n## \u5bfe\u7b56\n### Model\n\u307e\u305a `Notification.belongs_to(:object)` \u306e\u95a2\u9023\u3092\u53d6\u308a\u9664\u304d\u3001\u4e8c\u3064\u306e\u5225\u306e\u540d\u524d\u306e\u95a2\u9023\u306b\u5206\u3051\u307e\u3059\u3002\u6b21\u306b\u3001[activerecord-belongs_to_if](https://github.com/r7kamura/activerecord-belongs_to_if) \u3092\u5229\u7528\u3057\u3066\u305d\u308c\u305e\u308c\u306e\u95a2\u9023\u304c\u6210\u308a\u7acb\u3064\u305f\u3081\u306e\u6761\u4ef6\u3092\u4e0e\u3048\u307e\u3059\u3002\u3053\u306e\u6761\u4ef6\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u3001\u4f8b\u3048\u3070 `notifications.preload(:favorite)` \u3068\u3057\u305f\u3068\u304d\u306b\u3001\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308bnotification\u3060\u3051favorite\u3092preload\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```rb\nclass Notification < ActiveRecord::Base\n  #belongs_to :object, polymorphic: true\n  belongs_to :favorite, foreign_key: :object_id, if: -> { is_a?(FavoriteNotification) }\n  belongs_to :mention, foreign_key: :object_id, if: -> { is_a?(MentionNotification) }\n  belongs_to :subject, class_name: \"User\"\nend\n```\n\n### Controller\nController\u3067\u306f\u3001Preload\u3059\u308b\u5bfe\u8c61\u3092object\u304b\u3089\u5909\u66f4\u3057\u307e\u3059\u3002favorite\u306b\u3064\u3044\u3066\u306f\u95a2\u9023\u3059\u308btweet\u3092\u3001mention\u306b\u3064\u3044\u3066\u306f\u95a2\u9023\u3059\u308bmentioned_tweet\u3068tweet\u3092\u305d\u308c\u305e\u308cPreload\u3055\u305b\u307e\u3059\u3002\n\n```rb\nclass NotificationController < ApplicationController\n  def index\n    @notification = Notification.order(created_at: :desc).preload(\n      :subject,\n      favorite: :tweet,\n      mention: [\n        :mentioned_tweet,\n        :tweet,\n      ],\n    )\n  end\nend\n```\n\n### View\nView\u3082\u3001notification.object\u3067\u306f\u306a\u304f\u3001notification.favorite\u3084notification.mention\u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```slim\nul\n  - @notifications.each do |notification|\n    li\n      = link_to notification.subject do\n        = notification.subject.name\n      | \u304c\n      - case notification\n      - when FavoriteNotification\n        = link_to notification.favorite.tweet do\n          = notification.favorite.tweet.title\n        | \u3092\u304a\u6c17\u306b\u5165\u308a\u306b\u767b\u9332\u3057\u307e\u3057\u305f\n      - when MentionNotification\n        = link_to notification.mention.mentioned_tweet do\n          = notification.mention.mentioned_tweet.title\n        | \u306b\n        = link_to notification.mention.tweet\n          | \u8fd4\u4fe1\u3057\u307e\u3057\u305f\n```\n\n### \u7d50\u679c\n\u3053\u308c\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bN+1\u30af\u30a8\u30ea\u554f\u984c\u304c\u5c11\u3057\u7de9\u548c\u3055\u308c\u307e\u3059\u3002\n\n```sql\nSELECT notifications.* FROM notifications WHERE notifications.receiver_id = 1 ORDER BY notifications.created_at DESC\nSELECT users.* FROM users WHERE users.id IN (2)\nSELECT favorites.* FROM favorites WHERE favorites.id IN (4, 127, 128, 133, 134)\nSELECT tweets.* FROM tweets WHERE tweets.id IN (10, 25, 26, 20, 3)\nSELECT mentions.* FROM mentions WHERE mentions.id IN (6)\nSELECT tweets.* FROM tweets WHERE tweets.id IN (27)\nSELECT tweets.* FROM tweets WHERE tweets.id IN (25)\n```\n\n### \u8ab2\u984c\nFavorite\u3068Mention\u306e\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u5225\u3005\u306bTweet\u3092\u554f\u3044\u5408\u308f\u305b\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u3001\u5c11\u3057\u7121\u99c4\u3068\u8a00\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u307e\u3042\u4f55\u3082\u5bfe\u7b56\u3057\u306a\u3044\u3088\u308a\u306f\u5e7e\u5206\u30de\u30b7\u3067\u3057\u3087\u3046\u3002\u3053\u308c\u3089\u3092\u307e\u3068\u3081\u3066\u53d6\u5f97\u3055\u305b\u308b\u306b\u306f\u3001`Notification.belongs_to(:object)`\u306f\u6b8b\u3057\u3066\u304a\u3044\u3066\u3001`Favorite.belongs_to(:mentioned_tweet, if: -> { false })`\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u3001`notification.preload(object: [:mentioned_tweet, :tweet])` \u3068\u51fa\u6765\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n", "tags": ["ActiveRecord", "Ruby", "Rails"]}