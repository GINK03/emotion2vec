{"context": " More than 1 year has passed since last update.\n\n\u554f\u984c\nPhalcon\u81ea\u4f53\u304c\u3069\u3093\u306a\u306b\u901f\u304f\u3066\u3082\u3001Query\u3092\u5927\u91cf\u306b\u767a\u884c\u3059\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3089\u7c21\u5358\u306b\u9045\u304f\u306a\u308a\u307e\u3059\u3002\n\u6709\u540d\u306a\u554f\u984c\u3068\u3057\u3066N+1\u554f\u984c\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\nN+1\u554f\u984c\u3068\u306f\u4f55\u305e\u3084\u3068\u3044\u3046\u306e\u306f\u7f6e\u3044\u3068\u3044\u3066\u3001\u8981\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u4f55\u5ea6\u3082\u901a\u4fe1\u3055\u305b\u308b\u3088\u3046\u306a\u51e6\u7406\u306f\u554f\u984c\u3060\u304b\u3089\u3001\u305d\u3046\u306a\u3063\u3066\u3044\u308b\u7b87\u6240\u3092\u63a2\u3057\u305f\u3044\u308f\u3051\u3067\u3059\u3002\n\n\u5bfe\u7b56\n1\u5ea6\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u5927\u91cf\u306eQuery\u304c\u767a\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3001\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u3001DI\u306b\u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u4ed5\u8fbc\u307f\u307e\u3059\u3002\n\nbefore\n\u4f55\u3082\u5bfe\u7b56\u3057\u3066\u306a\u3044\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n$di->set('db', function () use ($config) {\n    return new MysqlAdapter([\n        'host'          => $config->database->host,\n        'username'      => $config->database->username,\n        'password'      => $config->database->password,\n        'dbname'        => $config->database->dbname,\n        'charset'       => $config->database->charset,\n        'options'       => [\n            PDO::ATTR_EMULATE_PREPARES => false,\n            PDO::ATTR_STRINGIFY_FETCHES => false,\n        ]\n    ]);\n}, true);\n\n\u30ed\u30b0\u3050\u3089\u3044\u53d6\u3063\u3066\u308b\u308f\uff01\u3063\u3066\u4eba\u306a\u3089\u2193\u3053\u3093\u306a\u611f\u3058\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n$di->set('db', function () use ($di, $config) {\n\n    $connection = new MysqlAdapter([\n        'host'          => $config->database->host,\n        'username'      => $config->database->username,\n        'password'      => $config->database->password,\n        'dbname'        => $config->database->dbname,\n        'charset'       => $config->database->charset,\n        'options'       => [\n            PDO::ATTR_EMULATE_PREPARES => false,\n            PDO::ATTR_STRINGIFY_FETCHES => false,\n        ]\n    ]);\n\n    if (DEBUG) {\n        $date = date('Ymd');\n        $logger = new FileLogger($config->application->logsDir .\"sql/{$date}.log\");\n        $eventsManager = $di->getShared('eventsManager');\n        $eventsManager->attach('db', function ($event, $connection) use ($logger) {\n            if ($event->getType() == 'beforeQuery') {\n                $logger->debug($connection->getSQLStatement());\n            }\n        });\n        $connection->setEventsManager($eventsManager);\n    }\n\n    return $connection;\n}, true);\n\n\nafter\n$di->set('db', function () use ($di, $config) {\n\n    $connection = new MysqlAdapter([\n        'host'          => $config->database->host,\n        'username'      => $config->database->username,\n        'password'      => $config->database->password,\n        'dbname'        => $config->database->dbname,\n        'charset'       => $config->database->charset,\n        'options'       => [\n            PDO::ATTR_EMULATE_PREPARES => false,\n            PDO::ATTR_STRINGIFY_FETCHES => false,\n        ]\n    ]);\n\n    if (DEBUG) {\n        $date = date('Ymd');\n        $logger = new FileLogger($config->application->logsDir .\"sql/{$date}.log\");\n        $eventsManager = $di->getShared('eventsManager');\n        $queryCounter = 0;\n        $eventsManager->attach('db', function ($event, $connection) use ($logger, &$queryCounter) {\n            if ($event->getType() == 'beforeQuery') {\n                $logger->debug($connection->getSQLStatement());\n                $queryCounter ++;\n                if ($queryCounter == 10) {\n                    echo '<script>console.warn(\"queryCounter\u304c10\u4ee5\u4e0a\u306b\u306a\u308a\u307e\u3057\u305f\u3002\")</script>';\n                }\n            }\n        });\n        $connection->setEventsManager($eventsManager);\n    }\n\n    return $connection;\n}, true);\n\n$queryCounter\u3092\u8ffd\u52a0\u3057\u3066\u3001\u305d\u308c\u304c10\u306e\u3068\u304d\u306bJavaScript\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u8b66\u544a\u3092\u51fa\u3059\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002Google Chrome\u306eDeveloper Tools\u7b49\u3067\u30c1\u30a7\u30c3\u30af\u3067\u304d\u307e\u3059\u3002\n\u3044\u3063\u305d\u306e\u3053\u3068\u3001$queryCounter\u304c10\u3068\u304b\u306b\u306a\u308b\u5834\u5408\u306b\u306f\u4f8b\u5916\u3092\u5410\u304f\u3088\u3046\u306b\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n## \u554f\u984c\nPhalcon\u81ea\u4f53\u304c\u3069\u3093\u306a\u306b\u901f\u304f\u3066\u3082\u3001Query\u3092\u5927\u91cf\u306b\u767a\u884c\u3059\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3089\u7c21\u5358\u306b\u9045\u304f\u306a\u308a\u307e\u3059\u3002\n\u6709\u540d\u306a\u554f\u984c\u3068\u3057\u3066N+1\u554f\u984c\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\nN+1\u554f\u984c\u3068\u306f\u4f55\u305e\u3084\u3068\u3044\u3046\u306e\u306f\u7f6e\u3044\u3068\u3044\u3066\u3001\u8981\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u4f55\u5ea6\u3082\u901a\u4fe1\u3055\u305b\u308b\u3088\u3046\u306a\u51e6\u7406\u306f\u554f\u984c\u3060\u304b\u3089\u3001\u305d\u3046\u306a\u3063\u3066\u3044\u308b\u7b87\u6240\u3092\u63a2\u3057\u305f\u3044\u308f\u3051\u3067\u3059\u3002\n\n\n## \u5bfe\u7b56\n\n1\u5ea6\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u5927\u91cf\u306eQuery\u304c\u767a\u884c\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3001\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u3001DI\u306b\u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u4ed5\u8fbc\u307f\u307e\u3059\u3002\n\n### before\n\n\u4f55\u3082\u5bfe\u7b56\u3057\u3066\u306a\u3044\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n```php\n$di->set('db', function () use ($config) {\n    return new MysqlAdapter([\n        'host'          => $config->database->host,\n        'username'      => $config->database->username,\n        'password'      => $config->database->password,\n        'dbname'        => $config->database->dbname,\n        'charset'       => $config->database->charset,\n        'options'       => [\n            PDO::ATTR_EMULATE_PREPARES => false,\n            PDO::ATTR_STRINGIFY_FETCHES => false,\n        ]\n    ]);\n}, true);\n```\n\n\u30ed\u30b0\u3050\u3089\u3044\u53d6\u3063\u3066\u308b\u308f\uff01\u3063\u3066\u4eba\u306a\u3089\u2193\u3053\u3093\u306a\u611f\u3058\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n```php\n$di->set('db', function () use ($di, $config) {\n\n    $connection = new MysqlAdapter([\n        'host'          => $config->database->host,\n        'username'      => $config->database->username,\n        'password'      => $config->database->password,\n        'dbname'        => $config->database->dbname,\n        'charset'       => $config->database->charset,\n        'options'       => [\n            PDO::ATTR_EMULATE_PREPARES => false,\n            PDO::ATTR_STRINGIFY_FETCHES => false,\n        ]\n    ]);\n\n    if (DEBUG) {\n        $date = date('Ymd');\n        $logger = new FileLogger($config->application->logsDir .\"sql/{$date}.log\");\n        $eventsManager = $di->getShared('eventsManager');\n        $eventsManager->attach('db', function ($event, $connection) use ($logger) {\n            if ($event->getType() == 'beforeQuery') {\n                $logger->debug($connection->getSQLStatement());\n            }\n        });\n        $connection->setEventsManager($eventsManager);\n    }\n\n    return $connection;\n}, true);\n```\n\n### after\n\n```php\n$di->set('db', function () use ($di, $config) {\n\n    $connection = new MysqlAdapter([\n        'host'          => $config->database->host,\n        'username'      => $config->database->username,\n        'password'      => $config->database->password,\n        'dbname'        => $config->database->dbname,\n        'charset'       => $config->database->charset,\n        'options'       => [\n            PDO::ATTR_EMULATE_PREPARES => false,\n            PDO::ATTR_STRINGIFY_FETCHES => false,\n        ]\n    ]);\n\n    if (DEBUG) {\n        $date = date('Ymd');\n        $logger = new FileLogger($config->application->logsDir .\"sql/{$date}.log\");\n        $eventsManager = $di->getShared('eventsManager');\n        $queryCounter = 0;\n        $eventsManager->attach('db', function ($event, $connection) use ($logger, &$queryCounter) {\n            if ($event->getType() == 'beforeQuery') {\n                $logger->debug($connection->getSQLStatement());\n                $queryCounter ++;\n                if ($queryCounter == 10) {\n                    echo '<script>console.warn(\"queryCounter\u304c10\u4ee5\u4e0a\u306b\u306a\u308a\u307e\u3057\u305f\u3002\")</script>';\n                }\n            }\n        });\n        $connection->setEventsManager($eventsManager);\n    }\n\n    return $connection;\n}, true);\n```\n\n`$queryCounter`\u3092\u8ffd\u52a0\u3057\u3066\u3001\u305d\u308c\u304c10\u306e\u3068\u304d\u306bJavaScript\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u8b66\u544a\u3092\u51fa\u3059\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002Google Chrome\u306eDeveloper Tools\u7b49\u3067\u30c1\u30a7\u30c3\u30af\u3067\u304d\u307e\u3059\u3002\n\n\u3044\u3063\u305d\u306e\u3053\u3068\u3001`$queryCounter`\u304c10\u3068\u304b\u306b\u306a\u308b\u5834\u5408\u306b\u306f\u4f8b\u5916\u3092\u5410\u304f\u3088\u3046\u306b\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n", "tags": ["Phalcon", "SQL", "PHP"]}