{"context": "\n\n\u5e8f\n\u300cIoT\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u958b\u767a\u300d\u306a\u308b\u3082\u306e\u3092\u8003\u3048\u308b\u3001\u306a\u308b\u30b7\u30ea\u30fc\u30ba\u3067\u3001Nim\u8a00\u8a9e\u3067\u5b66\u3073\u3064\u3064\u3001\u5b9f\u6848\u4ef6\u5316\u3092\u76ee\u6307\u3059\u3053\u3068\u306b\u3057\u305f\u3002\u4f55\u306e\u4e8b\u306f\u306a\u306e\u304b\u306f\u30dd\u30a8\u30e0\u3063\u307d\u304f\u66f8\u3044\u305f\u30b7\u30ea\u30fc\u30ba\u2460\u3092\u53c2\u8003\u306e\u3053\u3068\u3002\u4eca\u56de\u306f\u3001Nim\u3067IoT\u3059\u308b\u305f\u3081\u306e\u5b66\u7fd2\u6559\u6750\u3068\u3057\u3066\u826f\u3044\u306e\u3067\u306f\u3068\u8003\u3048\u3066\u3044\u308b\u3001\uff12\u3064\u306epure Nim\u30e9\u30a4\u30d6\u30e9\u30ea(Nim\u306e\u307f\u3067\u66f8\u304b\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea)\u3092\u8efd\u304f\u53d6\u308a\u4e0a\u3052\u308b\u3002\n\n1. nimyaml\n\n\u540d\u524d\u306e\u901a\u308a\u3001Nim\u3067YAML\u3092\u6271\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3002python\u3068\u540c\u69d8\u306b\u30a4\u30f3\u30c7\u30f3\u30c8\u3067\u8a18\u8ff0\u3057\u3066\u3044\u304fnim\u3068YAML\u306f\u3001\u76f8\u6027\u304c\u826f\u3055\u305d\u3046\u3002YAML\u306f\u3001Ruby on Rails\u3084Play!\u306a\u3069\u306eweb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3084\u69cb\u6210\u7ba1\u7406\u30c4\u30fc\u30ebansible\u3001\u3055\u3089\u306b\u3001nim\u306eCI(\u7d99\u7d9a\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3)\u8a2d\u5b9a\u306e\u8a18\u8ff0\u306b\u3082\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\n\u306f\u3058\u3081\u306b\u3001\u3084\u3084\u9577\u304f\u306a\u308b\u304c\u3001pure Nim\u306aYAML\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308bNimYAML\u306b\u304a\u3051\u308bCI\u5411\u3051\u306eYAML\u6587\u66f8\u3092\u898b\u3066\u307f\u3088\u3046\u3002\n\ntravis.yml\n# Copied from https://github.com/nim-lang/Nim/wiki/TravisCI\nlanguage: c\nenv:\n  # Build and test against the master and devel branches of Nim\n  - BRANCH=master\n  - BRANCH=devel\ncompiler:\n  # Build and test using both gcc and clang\n  - gcc\n  - clang\nmatrix:\n  allow_failures:\n    # Ignore failures when building against the devel Nim branch\n    - env: BRANCH=devel\n  fast_finish: true\n\n  - |\n    if [ ! -x nim-$BRANCH/bin/nim ]; then\n      git clone -b $BRANCH --depth 1 git://github.com/nim-lang/nim nim-$BRANCH/\n      cd nim-$BRANCH\n      git clone -b $BRANCH --depth 1 git://github.com/nim-lang/csources csources/\n      cd csources\n      sh build.sh\n      cd ..\n      rm -rf csources\n      bin/nim c koch\n      ./koch boot -d:release\n    else\n      cd nim-$BRANCH\n      git fetch origin\n      if ! git merge FETCH_HEAD | grep \"Already up-to-date\"; then\n        bin/nim c koch\n        ./koch boot -d:release\n      fi\n    fi\n    cd ..\nbefore_script:\n    - export PATH=\"nim-$BRANCH/bin${PATH:+:$PATH}\"\nscript:\n    - nim lexerTests\n    - nim parserTests\n    - nim jsonTests\n    - nim domTests\n    - nim serializationTests\n    - nim quickstartTests\n\n#### \u4ee5\u4e0b\uff0c\u7565 ####\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u5bfe\u8c61\u8a00\u8a9e(C)\u3001\u5bfe\u8c61\u30d6\u30e9\u30f3\u30c1\uff08master,devel\uff09\u3001\u4f7f\u7528\u30b3\u30f3\u30d1\u30a4\u30e9(gcc, clang)... \u306a\u3069\u304c\u6de1\u3005\u3068\u5217\u6319\u3055\u308c\u3066\u3044\u308b\u4e2d\u3001install:\u306e\u3068\u3053\u308d\u306b\u3001bash\u30b9\u30af\u30ea\u30d7\u30c8\u305d\u306e\u3082\u306e\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3002\u8a18\u8ff0\u306e\u81ea\u7531\u5ea6\u304c\u9ad8\u3044\u3053\u3068\u304b\u4f3a\u3048\u308b\u3060\u308d\u3046\u3002\n\nYAML\u306fJSON\u306e\u4e0a\u4f4d\u4e92\u63db\u3002\nPlay!\u3084ansible\u3067\u3001\u6f20\u7136\u306a\u3069YAML\u3092\u4f5c\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u8003\u3048\u305f\u3053\u3068\u3082\u306a\u304b\u3063\u305f\u306e\u3060\u3051\u308c\u3069\u3001YAML\u306fJSON\u306e\u4e0a\u4f4d\u4e92\u63db\u3002\u3059\u306a\u308f\u3061\u3001JSON\u6587\u66f8\u306fYAML\u6587\u66f8\u306b\u5909\u63db\u53ef\u80fd\u3002\u9006\u306eYAML\u6587\u66f8\u3092JSON\u6587\u66f8\u306b\u5909\u63db\u3082\u3001\u4e00\u5de5\u592b\u3059\u308c\u3070\u3001\u53ef\u80fd\u3002\n\u30b3\u30fc\u30c9\u4f8b\u306f\u3001\u4ee5\u524d\u66f8\u3044\u305fNim\u30dd\u30a8\u30e0\u306b\u66f8\u3044\u305f\u3002IoT\u6848\u4ef6\u3067\u306eYAML\u81ea\u4f53\u306e\u4f7f\u3044\u3069\u3053\u308d\u3082\u3001\u8003\u3048\u3066\u3044\u308b\u3093\u3060\u3051\u3069\u3001\u305d\u308c\u306f\u307e\u305f\u306e\u6a5f\u4f1a\u306b\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u304f\u3002\nNim\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u59cb\u3081\u3066\u6c17\u304c\u3064\u3044\u305f\u306e\u306f\u3001\u306f\u3058\u3081\u306b\u5192\u982d\u306eimport\u6587\u3092\u898b\u3066\u304a\u304f\u3079\u304d\u3068\u3044\u3046\u3053\u3068\u3002\n\u4f8b\u3048\u3070\u3001NimYAML\u306e\nhttps://github.com/flyx/NimYAML/blob/devel/yaml/dom.nim\n\u306b\u3042\u308b\u3001dom.nim\u306eimport\u6587\u3002\n\nimport tables, streams, hashes, sets, strutils\n\ntables\u3063\u3066\u3044\u3046\u3001\u540d\u524d\u304b\u3089\u306f\u4f55\u304b\u306e\u30c6\u30fc\u30d6\u30eb\u306a\u3093\u3060\u308d\u3046\u306a\u3001\u304f\u3089\u3044\u3057\u304b\u5206\u304b\u3089\u306a\u3044\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u8981\u6ce8\u610f\u3060(dom.nim\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e2d\u306b\u3001tables\u3068\u3044\u3046\u30bf\u30fc\u30e0\u306f\u3053\u3053\u306b\u3057\u305f\u767b\u5834\u3057\u3066\u3044\u306a\u3044)\u3002\n\u5e78\u3044\u3001nim\u672c\u5bb6\u30b5\u30a4\u30c8\u3067\u306f\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3064\u3044\u3066\u3001\u3051\u3063\u3053\u3046\u3057\u3063\u304b\u308a\u3068\u6587\u66f8\u5316\u3055\u308c\u3066\u3044\u308b\u3002\nhttp://nim-lang.org/docs/tables.html\n\u3053\u3053\u3092\u3061\u3089\u898b\u3057\u3066\u3001tables\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3001{1: \"one\", 2: \"two\"}.toTable \u3068\u304b\u3001{1: \"one\", 2: \"two\"}.newTable\u3068\u3044\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3053\u3068\u3092\u77e5\u3063\u3066\u304a\u3051\u3070\u3001\n\ndom.nim\nproc newYamlNode*(fields: openarray[(YamlNode, YamlNode)],\n                  tag: string = \"?\"): YamlNode =\n  YamlNode(kind: yMapping, fields: newTable(fields), tag: tag)\n\n\n\u3068\u3044\u3063\u305f\u30b3\u30fc\u30c9\u4e2d\u306enewTable\u306e\u5f79\u5272\u3092\u63a8\u6e2c\u3059\u308b\u306e\u306b\u5f79\u7acb\u3064\u3002\n\u203btables\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u304b\u306a\u308a\u30e1\u30bd\u30c3\u30c9\u306e\u591a\u3044\u91cd\u8981\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6a21\u69d8\u3060\u3002\n\n2. nimongo\n\u540d\u524d\u306e\u901a\u308a\u3001Nim\u3067MongoDb\u3092\u6271\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\u672c\u5bb6\u306emongo\u30c9\u30e9\u30a4\u30d0\u3068\u306f\u5225\u9014\u306b\u3001\u958b\u767a\u8005\u306e\u6271\u3044\u3084\u3059\u3044pure nim \u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u958b\u767a\u3055\u308c\u3066\u3044\u308b\u3002\n\nnimongo has a main intention to provide developer-friendly way to interact with MongoDB using Nim programming language without any other dependencies.\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u304f\u3002\nmongodb\u306f\uff0cJSON\u3092\u6271\u3046\u6709\u540d\u3069\u3053\u308d\u306e\u6587\u66f8\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3002\nmongodb\u306f\u3001\u5185\u90e8\u7684\u306b\u30d0\u30a4\u30ca\u30ea\u5f62\u5f0f\u306eJSON\u3067\u3042\u308bBSON\u3092\u6271\u3063\u3066\u3044\u308b\u3002nim\u3067\u306e\u30d0\u30a4\u30ca\u30ea\u306e\u6271\u3044\u65b9\u3092\u77e5\u308b\u4e0a\u3067\u3082\u3001bson.nim\u306f\u3058\u3063\u304f\u308a\u898b\u3066\u304a\u304d\u305f\u3044\u3068\u3053\u308d\u3002\n \u5148\u7a0b\u3068\u540c\u69d8\u306b\u3001import\u6587\u304b\u3089\u898b\u3066\u3044\u304f\u3002\nimport algorithm\nimport base64\nimport macros\nimport md5\nimport oids\nimport sequtils\nimport streams\nimport strutils\nimport times\nimport tables\n\n\u30bd\u30fc\u30c8\u6a5f\u80fd\u306a\u3069\u306e\u57fa\u672c\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u96c6\u307e\u3063\u305falgorithm\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069\u3082\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3060\u304c\u3001\u9006\u306b\u3001\u4f55\u3092\u3057\u3066\u3044\u308b\u306e\u304b\u306f\u660e\u767d\u306abase64\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069\u306f\u3001nim\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u8aad\u89e3\u5165\u9580\u306b\u3088\u3055\u305d\u3046\u3060\u3002\nhttp://nim-lang.org/docs/base64.html\nimport base64\nlet encoded = encode(\"Hello World\")\necho(encoded) # SGVsbG8gV29ybGQ=\n\nNim\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u3046\u3061pure nim\u306a\u3082\u306e\u306f\u3044\u304b\u306b\u96c6\u3081\u3089\u308c\u3066\u3044\u308b\u6a21\u69d8\u3002\nhttps://github.com/nim-lang/Nim/tree/master/lib/pure\n\u3059\u3067\u306b\u591a\u6570\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u53ce\u3081\u3089\u308c\u3066\u3044\u308b\u3002\u6642\u9593\u304c\u3042\u308b\u6642\u306b\u3072\u305f\u3059\u3089\u8aad\u3093\u3067\u307f\u305f\u3044\u3082\u306e\u3060\u3002\n\n\u304a\u6b21\u306f\nIoT\u6a5f\u5668\u4e0a\u306eNim <--Internet--> \u30b5\u30fc\u30d0\u5074\u306eNim <--> \u30d0\u30c3\u30af\u30a8\u30f3\u30c9(\u305f\u3076\u3093mongodb)\n\u3068\u3044\u3063\u305f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u5b9f\u73fe\u3059\u3079\u304f\u3001\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306b\u7740\u624b\u3057\u305f\u3044\u3002\n# \u5e8f\n\u300cIoT\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u958b\u767a\u300d\u306a\u308b\u3082\u306e\u3092\u8003\u3048\u308b\u3001\u306a\u308b\u30b7\u30ea\u30fc\u30ba\u3067\u3001Nim\u8a00\u8a9e\u3067\u5b66\u3073\u3064\u3064\u3001\u5b9f\u6848\u4ef6\u5316\u3092\u76ee\u6307\u3059\u3053\u3068\u306b\u3057\u305f\u3002\u4f55\u306e\u4e8b\u306f\u306a\u306e\u304b\u306f[\u30dd\u30a8\u30e0\u3063\u307d\u304f\u66f8\u3044\u305f\u30b7\u30ea\u30fc\u30ba\u2460](http://qiita.com/kmry2045/items/7c8265cafe8de46dab4f)\u3092\u53c2\u8003\u306e\u3053\u3068\u3002\u4eca\u56de\u306f\u3001Nim\u3067IoT\u3059\u308b\u305f\u3081\u306e\u5b66\u7fd2\u6559\u6750\u3068\u3057\u3066\u826f\u3044\u306e\u3067\u306f\u3068\u8003\u3048\u3066\u3044\u308b\u3001\uff12\u3064\u306epure Nim\u30e9\u30a4\u30d6\u30e9\u30ea(Nim\u306e\u307f\u3067\u66f8\u304b\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea)\u3092\u8efd\u304f\u53d6\u308a\u4e0a\u3052\u308b\u3002\n\n# 1. [nimyaml](https://nimyaml.org/)\n\u540d\u524d\u306e\u901a\u308a\u3001Nim\u3067YAML\u3092\u6271\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3002python\u3068\u540c\u69d8\u306b\u30a4\u30f3\u30c7\u30f3\u30c8\u3067\u8a18\u8ff0\u3057\u3066\u3044\u304fnim\u3068YAML\u306f\u3001\u76f8\u6027\u304c\u826f\u3055\u305d\u3046\u3002YAML\u306f\u3001Ruby on Rails\u3084Play!\u306a\u3069\u306eweb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3084\u69cb\u6210\u7ba1\u7406\u30c4\u30fc\u30ebansible\u3001\u3055\u3089\u306b\u3001nim\u306eCI(\u7d99\u7d9a\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3)\u8a2d\u5b9a\u306e\u8a18\u8ff0\u306b\u3082\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\n\n\u306f\u3058\u3081\u306b\u3001\u3084\u3084\u9577\u304f\u306a\u308b\u304c\u3001pure Nim\u306aYAML\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308bNimYAML\u306b\u304a\u3051\u308bCI\u5411\u3051\u306eYAML\u6587\u66f8\u3092\u898b\u3066\u307f\u3088\u3046\u3002\n\n```.travis.yml\n# Copied from https://github.com/nim-lang/Nim/wiki/TravisCI\nlanguage: c\nenv:\n  # Build and test against the master and devel branches of Nim\n  - BRANCH=master\n  - BRANCH=devel\ncompiler:\n  # Build and test using both gcc and clang\n  - gcc\n  - clang\nmatrix:\n  allow_failures:\n    # Ignore failures when building against the devel Nim branch\n    - env: BRANCH=devel\n  fast_finish: true\n\n  - |\n    if [ ! -x nim-$BRANCH/bin/nim ]; then\n      git clone -b $BRANCH --depth 1 git://github.com/nim-lang/nim nim-$BRANCH/\n      cd nim-$BRANCH\n      git clone -b $BRANCH --depth 1 git://github.com/nim-lang/csources csources/\n      cd csources\n      sh build.sh\n      cd ..\n      rm -rf csources\n      bin/nim c koch\n      ./koch boot -d:release\n    else\n      cd nim-$BRANCH\n      git fetch origin\n      if ! git merge FETCH_HEAD | grep \"Already up-to-date\"; then\n        bin/nim c koch\n        ./koch boot -d:release\n      fi\n    fi\n    cd ..\nbefore_script:\n    - export PATH=\"nim-$BRANCH/bin${PATH:+:$PATH}\"\nscript:\n    - nim lexerTests\n    - nim parserTests\n    - nim jsonTests\n    - nim domTests\n    - nim serializationTests\n    - nim quickstartTests\n\n#### \u4ee5\u4e0b\uff0c\u7565 ####\n```\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u5bfe\u8c61\u8a00\u8a9e(C)\u3001\u5bfe\u8c61\u30d6\u30e9\u30f3\u30c1\uff08master,devel\uff09\u3001\u4f7f\u7528\u30b3\u30f3\u30d1\u30a4\u30e9(gcc, clang)... \u306a\u3069\u304c\u6de1\u3005\u3068\u5217\u6319\u3055\u308c\u3066\u3044\u308b\u4e2d\u3001install:\u306e\u3068\u3053\u308d\u306b\u3001bash\u30b9\u30af\u30ea\u30d7\u30c8\u305d\u306e\u3082\u306e\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3002\u8a18\u8ff0\u306e\u81ea\u7531\u5ea6\u304c\u9ad8\u3044\u3053\u3068\u304b\u4f3a\u3048\u308b\u3060\u308d\u3046\u3002\n\n##YAML\u306fJSON\u306e\u4e0a\u4f4d\u4e92\u63db\u3002\nPlay!\u3084ansible\u3067\u3001\u6f20\u7136\u306a\u3069YAML\u3092\u4f5c\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u8003\u3048\u305f\u3053\u3068\u3082\u306a\u304b\u3063\u305f\u306e\u3060\u3051\u308c\u3069\u3001YAML\u306fJSON\u306e\u4e0a\u4f4d\u4e92\u63db\u3002\u3059\u306a\u308f\u3061\u3001JSON\u6587\u66f8\u306fYAML\u6587\u66f8\u306b\u5909\u63db\u53ef\u80fd\u3002\u9006\u306eYAML\u6587\u66f8\u3092JSON\u6587\u66f8\u306b\u5909\u63db\u3082\u3001\u4e00\u5de5\u592b\u3059\u308c\u3070\u3001\u53ef\u80fd\u3002\n\n\u30b3\u30fc\u30c9\u4f8b\u306f\u3001\u4ee5\u524d\u66f8\u3044\u305f[Nim\u30dd\u30a8\u30e0](http://qiita.com/kmry2045/items/a4a687aba2d3189c993e#iot%E6%99%82%E4%BB%A3%E3%81%AB%E6%B4%BB%E3%81%8D%E3%81%9D%E3%81%86%E3%81%AAnimjsonyaml%E3%82%92%E6%89%B1%E3%81%86%E4%BE%8B)\u306b\u66f8\u3044\u305f\u3002IoT\u6848\u4ef6\u3067\u306eYAML\u81ea\u4f53\u306e\u4f7f\u3044\u3069\u3053\u308d\u3082\u3001\u8003\u3048\u3066\u3044\u308b\u3093\u3060\u3051\u3069\u3001\u305d\u308c\u306f\u307e\u305f\u306e\u6a5f\u4f1a\u306b\u3002\n\n##\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u304f\u3002\n\nNim\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u59cb\u3081\u3066\u6c17\u304c\u3064\u3044\u305f\u306e\u306f\u3001\u306f\u3058\u3081\u306b\u5192\u982d\u306eimport\u6587\u3092\u898b\u3066\u304a\u304f\u3079\u304d\u3068\u3044\u3046\u3053\u3068\u3002\n\u4f8b\u3048\u3070\u3001NimYAML\u306e\nhttps://github.com/flyx/NimYAML/blob/devel/yaml/dom.nim\n\u306b\u3042\u308b\u3001dom.nim\u306eimport\u6587\u3002\n> import tables, streams, hashes, sets, strutils\n\ntables\u3063\u3066\u3044\u3046\u3001\u540d\u524d\u304b\u3089\u306f\u4f55\u304b\u306e\u30c6\u30fc\u30d6\u30eb\u306a\u3093\u3060\u308d\u3046\u306a\u3001\u304f\u3089\u3044\u3057\u304b\u5206\u304b\u3089\u306a\u3044\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u8981\u6ce8\u610f\u3060(dom.nim\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e2d\u306b\u3001tables\u3068\u3044\u3046\u30bf\u30fc\u30e0\u306f\u3053\u3053\u306b\u3057\u305f\u767b\u5834\u3057\u3066\u3044\u306a\u3044)\u3002\n\u5e78\u3044\u3001nim\u672c\u5bb6\u30b5\u30a4\u30c8\u3067\u306f\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3064\u3044\u3066\u3001\u3051\u3063\u3053\u3046\u3057\u3063\u304b\u308a\u3068\u6587\u66f8\u5316\u3055\u308c\u3066\u3044\u308b\u3002\nhttp://nim-lang.org/docs/tables.html\n\n\u3053\u3053\u3092\u3061\u3089\u898b\u3057\u3066\u3001tables\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3001{1: \"one\", 2: \"two\"}.toTable \u3068\u304b\u3001{1: \"one\", 2: \"two\"}.newTable\u3068\u3044\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3053\u3068\u3092\u77e5\u3063\u3066\u304a\u3051\u3070\u3001\n\n```dom.nim\nproc newYamlNode*(fields: openarray[(YamlNode, YamlNode)],\n                  tag: string = \"?\"): YamlNode =\n  YamlNode(kind: yMapping, fields: newTable(fields), tag: tag)\n```\n\u3068\u3044\u3063\u305f\u30b3\u30fc\u30c9\u4e2d\u306enewTable\u306e\u5f79\u5272\u3092\u63a8\u6e2c\u3059\u308b\u306e\u306b\u5f79\u7acb\u3064\u3002\n\n*\u203btables\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u304b\u306a\u308a\u30e1\u30bd\u30c3\u30c9\u306e\u591a\u3044\u91cd\u8981\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6a21\u69d8\u3060\u3002*\n\n\n# 2. nimongo\n\u540d\u524d\u306e\u901a\u308a\u3001Nim\u3067MongoDb\u3092\u6271\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\n\u672c\u5bb6\u306emongo\u30c9\u30e9\u30a4\u30d0\u3068\u306f\u5225\u9014\u306b\u3001\u958b\u767a\u8005\u306e\u6271\u3044\u3084\u3059\u3044pure nim \u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u958b\u767a\u3055\u308c\u3066\u3044\u308b\u3002\n>nimongo has a main intention to provide developer-friendly way to interact with MongoDB using Nim programming language without any other dependencies.\n\n\n##\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u304f\u3002\n\nmongodb\u306f\uff0cJSON\u3092\u6271\u3046\u6709\u540d\u3069\u3053\u308d\u306e\u6587\u66f8\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3002\nmongodb\u306f\u3001\u5185\u90e8\u7684\u306b\u30d0\u30a4\u30ca\u30ea\u5f62\u5f0f\u306eJSON\u3067\u3042\u308bBSON\u3092\u6271\u3063\u3066\u3044\u308b\u3002nim\u3067\u306e\u30d0\u30a4\u30ca\u30ea\u306e\u6271\u3044\u65b9\u3092\u77e5\u308b\u4e0a\u3067\u3082\u3001[bson.nim](https://github.com/SSPkrolik/nimongo/blob/master/nimongo/bson.nim)\u306f\u3058\u3063\u304f\u308a\u898b\u3066\u304a\u304d\u305f\u3044\u3068\u3053\u308d\u3002\n \u5148\u7a0b\u3068\u540c\u69d8\u306b\u3001import\u6587\u304b\u3089\u898b\u3066\u3044\u304f\u3002\n \n ```nim\nimport algorithm\nimport base64\nimport macros\nimport md5\nimport oids\nimport sequtils\nimport streams\nimport strutils\nimport times\nimport tables\n```\n\n\n \u30bd\u30fc\u30c8\u6a5f\u80fd\u306a\u3069\u306e\u57fa\u672c\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u96c6\u307e\u3063\u305falgorithm\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069\u3082\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3060\u304c\u3001\u9006\u306b\u3001\u4f55\u3092\u3057\u3066\u3044\u308b\u306e\u304b\u306f\u660e\u767d\u306abase64\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069\u306f\u3001nim\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u8aad\u89e3\u5165\u9580\u306b\u3088\u3055\u305d\u3046\u3060\u3002\n \nhttp://nim-lang.org/docs/base64.html\n\n```nim\nimport base64\nlet encoded = encode(\"Hello World\")\necho(encoded) # SGVsbG8gV29ybGQ=\n```\n\nNim\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u3046\u3061pure nim\u306a\u3082\u306e\u306f\u3044\u304b\u306b\u96c6\u3081\u3089\u308c\u3066\u3044\u308b\u6a21\u69d8\u3002\nhttps://github.com/nim-lang/Nim/tree/master/lib/pure\n\n\u3059\u3067\u306b\u591a\u6570\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u53ce\u3081\u3089\u308c\u3066\u3044\u308b\u3002\u6642\u9593\u304c\u3042\u308b\u6642\u306b\u3072\u305f\u3059\u3089\u8aad\u3093\u3067\u307f\u305f\u3044\u3082\u306e\u3060\u3002\n\n#\u304a\u6b21\u306f\n\nIoT\u6a5f\u5668\u4e0a\u306eNim <--Internet--> \u30b5\u30fc\u30d0\u5074\u306eNim <--> \u30d0\u30c3\u30af\u30a8\u30f3\u30c9(\u305f\u3076\u3093mongodb)\n\u3068\u3044\u3063\u305f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u5b9f\u73fe\u3059\u3079\u304f\u3001\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306b\u7740\u624b\u3057\u305f\u3044\u3002\n\n\n\n", "tags": ["Nim", "YAML", "MongoDB"]}