{"tags": ["Clojure", "linebot"], "context": "\n\n\u6982\u8981\n\u30c1\u30e3\u30c3\u30c8\u30dc\u30c3\u30c8\u3068\u3044\u3046\u8a00\u8449\u304c\u6d41\u884c\u8a9e\u3058\u307f\u3066\u304d\u305f\u6628\u4eca\u3002\n\u6765\u305f\u308bLINE BOT AWARDS\u306bClojure\u3067\u53c2\u6226\u3057\u305f\u3044\u3068\u3044\u3046\u65b9\u3005\u3082\u5f53\u7136\u3044\u3089\u3063\u3057\u3083\u308b\u3053\u3068\u304b\u3068\u5b58\u3058\u3042\u3052\u307e\u3059\u3002\n\u3057\u304b\u3057\u516c\u5f0f\u306eLINE Messaging API SDK\u306b\u306f\u3001\u4f55\u6545\u3060\u304bClojure\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u304b\u3068\u8a00\u3063\u3066Java\u306eSDK\u3092Clojure\u304b\u3089\u547c\u3076\u306e\u306f\u8ca0\u3051\u305f\u6c17\u304c\u3057\u307e\u3059\u3002\n\u3084\u308b\u3053\u3068\u3068\u8a00\u3048\u3070HTTP + JSON\u306e\u901a\u4fe1\u3060\u3051\u306a\u306e\u3067\u3001\u96e3\u3057\u3044\u3053\u3068\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3057\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001Java\u306eSDK\u3092\u4f7f\u308f\u305a\u306bClojure\u3067LINE BOT\u306e\u5b9f\u88c5\u3092\u9032\u3081\u3066\u3044\u304d\u3001\u6700\u7d42\u7684\u306b\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u306e\u904e\u7a0b\u3092\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3067\u3054\u7d39\u4ecb\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\nhttps://github.com/xorphitus/line-bot-sdk-clojure\n\u6b63\u76f4\u307e\u3060\u307e\u3060\u6a5f\u80fd\u4e0d\u8db3\u306a\u3068\u3053\u308d\u306f\u3042\u308a\u307e\u3059\u304c\u2026\u751f\u6696\u304b\u304f\u3054\u9451\u8cde\u4e0b\u3055\u3044\u3002\nPull Req\u306f\u3082\u3061\u308d\u3093\u3001\u300c\u3053\u3046\u3057\u305f\u65b9\u304c\u30a4\u30b1\u3066\u308b\u300d\u300c\u3053\u3053\u304c\u30d0\u30b0\u3063\u3066\u308b\u300d\u7b49\u306e\u3054\u6307\u6458\u3082\u5927\u6b53\u8fce\u3067\u3059\u3002\n\n\u307e\u305a\u30aa\u30a6\u30e0\u8fd4\u3057BOT\u306eWeb\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u3063\u3066\u307f\u308b\n\u4e00\u756a\u6700\u521d\u306f\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u5316\u306f\u305b\u305a\u6700\u3082\u7c21\u7d20\u306a\u5f62\u3067LINE BOT\u3068\u306a\u308bWeb\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u3068\u3053\u308d\u304b\u3089\u59cb\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u6700\u7d42\u7684\u306a\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u4e0a\u304c\u3063\u3066\u3044\u307e\u3057\u3066\u3001\u30ea\u30d5\u30a1\u30af\u30bf\u306e\u6bb5\u968e\u306b\u5fdc\u3058\u3066tag\u3092\u6253\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u307e\u305a\u3053\u306e\u72b6\u614b\u306b\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u30a4\u30f3\u30d5\u30e9\u74b0\u5883\n\u307e\u305a\u306f\u52d5\u3051\u3070\u826f\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3001LINE BOT \u3092\u3068\u308a\u3042\u3048\u305a\u30bf\u30c0\u3067 Heroku \u3067\u52d5\u304b\u3059\u306e\u69cb\u6210\u3067\u59cb\u3081\u307e\u3057\u305f\u3002\n\u306a\u304a\u3001\u3053\u3061\u3089\u306e\u3088\u3046\u306a\u975e\u540c\u671f\u306a\u4ed5\u7d44\u307f\u306b\u306f\u4eca\u56de\u306f\u8a00\u53ca\u3057\u307e\u305b\u3093\u3002\n\u6700\u521d\u306fAWS\u306b\u3066Lambda + API Gateway\u3067\u52d5\u304b\u3059\u4e88\u5b9a\u3067\u3057\u305f\u304c\u3001IP\u56fa\u5b9a\u304c\u5fc5\u8981\u306a\u4ef6\u3092\u77e5\u308a\u9762\u5012\u306b\u306a\u3063\u3066\u64a4\u9000\u3057\u305f\u3068\u3044\u3046\u3002\n\nWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u571f\u53f0\u3092\u4f5c\u308b\n\nHeroku\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\u3068\u308a\u3042\u3048\u305a\u5b89\u5b9a\u306eCompojure\u3067\u3059\u3002\n(\u3057\u304b\u3057\u5f8c\u306b\u306a\u3063\u3066\u6c17\u3065\u3044\u305f\u3093\u3067\u3059\u304c\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u304c\u5b9f\u8cea1\u3064\u3060\u3051\u306a\u306e\u3067\u7d20\u306eRing\u3067\u3082\u3042\u307e\u308a\u554f\u984c\u306a\u304b\u3063\u305f\u3088\u3046\u306a\u2026\u3002\u307e\u3042\u76e3\u8996\u7528URL\u7b49\u306e\u8ffd\u52a0\u3092\u898b\u8d8a\u3057\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u2026)\n$ lein new compojure clojure-line-bot\n\nHeroku\u3067\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nHeroku\u672c\u5bb6\u306eclojure-getting-started\u3068\u6bd4\u8f03\u3057\u3066\u4e0d\u8db3\u3057\u3066\u3044\u308b\u90e8\u5206\u3092\u9069\u5f53\u306b\u5165\u308c\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u305d\u3061\u3089\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u542b\u307e\u308c\u3066\u3044\u308bcompojure.handler.site\u306fDEPRECATED\u3060\u305d\u3046\u3067\u3059\u3002\nhttps://weavejester.github.io/compojure/compojure.handler.html\ngit diff\u3067\u306e\u5dee\u5206\u3092\u4ee5\u4e0b\u306b\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\ndiff --git a/Procfile b/Procfile\nnew file mode 100644\nindex 0000000..5e8fbb4\n--- /dev/null\n+++ b/Procfile\n@@ -0,0 +1 @@\n+web: java $JVM_OPTS -cp target/clojure-line-bot-standalone.jar clojure.main -m clojure-line-bot.handler\n\\ No newline at end of file\ndiff --git a/project.clj b/project.clj\nindex 1d58561..f1d9dba 100644\n--- a/project.clj\n+++ b/project.clj\n@@ -4,9 +4,13 @@\n   :min-lein-version \"2.0.0\"\n   :dependencies [[org.clojure/clojure \"1.8.0\"]\n                  [compojure \"1.5.1\"]\n-                 [ring/ring-defaults \"0.2.1\"]]\n-  :plugins [[lein-ring \"0.9.7\"]]\n+                 [ring/ring-defaults \"0.2.1\"]\n+                 [ring/ring-jetty-adapter \"1.5.0\"]\n+                 [environ \"1.1.0\"]]\n+  :plugins [[lein-ring \"0.9.7\"]\n+            [lein-environ \"1.1.0\"]]\n   :ring {:handler clojure-line-bot.handler/app}\n+  :uberjar-name \"clojure-line-bot-standalone.jar\"\n   :profiles\n   {:dev {:dependencies [[javax.servlet/servlet-api \"2.5\"]\n                         [ring/ring-mock \"0.3.0\"]]}})\ndiff --git a/src/clojure_line_bot/handler.clj b/src/clojure_line_bot/handler.clj\nindex 276c95c..2e4dce6 100644\n--- a/src/clojure_line_bot/handler.clj\n+++ b/src/clojure_line_bot/handler.clj\n@@ -1,7 +1,9 @@\n (ns clojure-line-bot.handler\n   (:require [compojure.core :refer :all]\n             [compojure.route :as route]\n-            [ring.middleware.defaults :refer [wrap-defaults site-defaults]]))\n+            [environ.core :refer [env]]\n+            [ring.middleware.defaults :refer [wrap-defaults site-defaults]]\n+            [ring.adapter.jetty :as jetty]))\n\n (defroutes app-routes\n   (GET \"/\" [] \"Hello World\")\n@@ -9,3 +11,7 @@\n\n (def app\n   (wrap-defaults app-routes site-defaults))\n+\n+(defn -main [& [port]]\n+  (let [port (Integer. (or port (env :port) 5000))]\n+    (jetty/run-jetty app {:port port :join? false})))\n\n\nWebhook URL\u3092\u8a2d\u3051\u308b\nLINE\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u305f\u3068\u304d\u306bLINE\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u308b\u3001\u3053\u3061\u3089\u306eWeb API\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002\n\u30d1\u30b9\u306f/linebot/callback\u3068\u3057\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u6bb5\u968e\u3067\u306fPOST\u3055\u308c\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u3092\u305d\u306e\u307e\u307e\u8868\u793a\u3059\u308b\u4ed5\u69d8\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u5909\u66f4\u5185\u5bb9\u306f\u4ee5\u4e0b\u3068\u306a\u308a\u307e\u3059\u3002\ndiff --git a/src/clojure_line_bot/handler.clj b/src/clojure_line_bot/handler.clj\nindex 2e4dce6..fc1c2f3 100644\n--- a/src/clojure_line_bot/handler.clj\n+++ b/src/clojure_line_bot/handler.clj\n@@ -2,15 +2,17 @@\n   (:require [compojure.core :refer :all]\n             [compojure.route :as route]\n             [environ.core :refer [env]]\n-            [ring.middleware.defaults :refer [wrap-defaults site-defaults]]\n+            [ring.middleware.defaults :refer [wrap-defaults api-defaults]]\n             [ring.adapter.jetty :as jetty]))\n\n (defroutes app-routes\n-  (GET \"/\" [] \"Hello World\")\n+  (POST \"/linebot/callback\" {body :body} body)\n   (route/not-found \"Not Found\"))\n\n (def app\n-  (wrap-defaults app-routes site-defaults))\n+  (wrap-defaults app-routes (assoc-in api-defaults\n+                                      [:params :urlencoded] false)))\n\n (defn -main [& [port]]\n   (let [port (Integer. (or port (env :port) 5000))]\n\ndefroutes\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u8ffd\u52a0\u3057\u3066\u3044\u308b\u306e\u306b\u52a0\u3048\u3001wrap-defaults\u306e\u7b2c\u4e8c\u5f15\u6570\u3092site-defaults\u304b\u3089api-defaults\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\nsite-defaults\u306e\u5834\u5408\u3001\u305d\u306e\u540d\u306e\u901a\u308aWeb API\u3067\u306f\u306a\u304fWeb\u30b5\u30a4\u30c8\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u305f\u3081\u3001CSRF\u5bfe\u7b56\u3067POST\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u30a8\u30e9\u30fc\u306b\u306a\u3063\u305f\u308a\u3001Cookie\u7b49\u306e\u4f59\u5206\u306a\u3082\u306e\u3092\u542b\u3093\u3067\u3044\u308b\u305f\u3081\u3067\u3059\u3002\n\u4e2d\u8eab\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\u53c2\u8003: Compojure\u306eCSRF\u5bfe\u7b56\u30c8\u30fc\u30af\u30f3\u306eanti-forgery-token\u4f5c\u6210\n\u4eca\u56de\u306fWeb API\u3068\u306a\u308a\u307e\u3059\u306e\u3067\u3001api-defaults\u3092\u9078\u3073\u307e\u3057\u305f\u3002\n\u305d\u308c\u306b\u52a0\u3048\u3001\u4e0a\u8a18\u306e\u901a\u308a:urlencoded\u3092false\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8a2d\u5b9a\u304c\u306a\u3044\u5834\u5408\u3001curl\u306e-d\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u304c\u7a7a\u306b\u306a\u308b\u305f\u3081\u3067\u3059(\u539f\u56e0\u306f\u672a\u8abf\u67fb)\u3002\n\u3067\u306f\u3053\u3053\u3067\u4e00\u5ea6\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\u3002\n\u307e\u305a\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n$ lein ring server-headless\n\n(\u3082\u3061\u308d\u3093REPL\u304b\u3089(start-server)\u7684\u306a\u3053\u3068\u3092\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093)\n\u7d9a\u3044\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308a\u307e\u3059\u3002\n$ curl http://localhost:3000/linebot/callback -X POST -d 'hogehoge'\nhogehoge\n\n\u6210\u529f\u3057\u307e\u3057\u305f\u3002\n\u3053\u308c\u3067LINE BOT\u4ee5\u524d\u306e\u90e8\u5206\u304c\u5b8c\u6210\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u304b\u3089\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3059\u308b\nLINE Messaging API\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3088\u308b\u3068\u3001\u30c6\u30ad\u30b9\u30c8\u3067\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u4ee5\u5916\u306b\u3082\u3044\u304f\u3064\u304b\u306e\u30a4\u30d9\u30f3\u30c8\u60c5\u5831\u304cPOST\u3055\u308c\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30aa\u30a6\u30e0\u8fd4\u3057\u3092\u4f5c\u308d\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305d\u306e\u4e2d\u304b\u3089\u30c6\u30ad\u30b9\u30c8\u3067\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u30a4\u30d9\u30f3\u30c8\u306e\u307f\u3092\u62bd\u51fa\u3057\u3001\u305d\u306e\u4e2d\u304b\u3089\u9001\u4fe1\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3055\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306fJSON\u5f62\u5f0f\u3067\u3059\u306e\u3067\u30d1\u30fc\u30b9\u306e\u305f\u3081\u306bCheshire\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\nRing-JSON\u306e\u5229\u7528\u3082\u8003\u3048\u305f\u306e\u3067\u3059\u304c\u3001\u5f8c\u306b\u3053\u306ePOST\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u691c\u8a3c\u51e6\u7406\u3092\u542b\u3081\u308b\u969b\u306b\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u305d\u306e\u307e\u307e\u306e\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u304c\u5fc5\u8981\u3068\u306a\u308b\u305f\u3081\u4eca\u56de\u306f\u898b\u9001\u308a\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001\u3053\u306e\u6642\u70b9\u3067\u30ed\u30ae\u30f3\u30b0\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308bTimbre\u3082\u5c0e\u5165\u3057\u307e\u3059\u3002\nLINE\u306b\u3066\u30dc\u30c3\u30c8\u304b\u3089\u5fdc\u7b54\u3092\u8fd4\u3059\u305f\u3081\u306b\u306f\u6b21\u9805\u3067\u8aac\u660e\u3059\u308bLINE\u5074\u306eAPI\u30b3\u30fc\u30eb\u3092\u3053\u3061\u3089\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u3061\u3089\u3092\u4f5c\u308b\u307e\u3067\u306f\u6b63\u5e38\u306b\u52d5\u4f5c\u3092\u3057\u3066\u3044\u308b\u304b\u306e\u78ba\u8a8d\u3092\u30ed\u30b0\u306b\u3066\u884c\u3044\u305f\u3044\u304b\u3089\u3067\u3059\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067project.clj\u306b\u4e21\u8005\u3092\u52a0\u3048\u3001hander.clj\u3067\u3088\u3057\u306a\u306brequire\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066LINE\u306b\u9001\u4fe1\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u672c\u6587\u3092\u30ed\u30b0\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n(POST \"/linebot/callback\" {body :body}\n  (->> (parse-string (slurp body) true)\n       :events\n       (filter #(and\n                 (= (:type %) \"message\")\n                 (= (get-in % [:message :type]) \"text\")))\n       (map #(info (get-in % [:message :text])))))\n\n\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u52d5\u4f5c\u78ba\u8a8d\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306bcurl\u3057\u3066\u30ed\u30b0\u3092\u78ba\u8a8d\u3059\u308c\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u3002\ncurl http://localhost:3000/linebot/callback -X POST -d '\n{\n  \"events\": [\n    {\n      \"replyToken\": \"nHuyWiB7yP5Zw52FIkcQobQuGDXCTA\",\n      \"type\": \"message\",\n      \"timestamp\": 1462629479859,\n      \"source\": {\n        \"type\": \"user\",\n        \"userId\": \"U206d25c2ea6bd87c17655609a1c37cb8\"\n      },\n      \"message\": {\n        \"id\": \"325708\",\n        \"type\": \"text\",\n        \"text\": \"Hello, world\"\n      }\n    },\n    {\n      \"replyToken\": \"nHuyWiB7yP5Zw52FIkcQobQuGDXCTA\",\n      \"type\": \"follow\",\n      \"timestamp\": 1462629479859,\n      \"source\": {\n        \"type\": \"user\",\n        \"userId\": \"U206d25c2ea6bd87c17655609a1c37cb8\"\n      }\n    }\n  ]\n}\n'\n\n\u6b21\u3044\u3067Heroku\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3001LINE\u304b\u3089\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u98db\u3076\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3001LINE\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6295\u3052\u3066\u307f\u307e\u3059\u3002\n\u304c\u3001\u3053\u306e\u4eee\u5b9a\u306f\u8272\u3005\u306a\u65b9\u304c\u89e3\u8aac\u6e08\u307f\u3067\u3057\u3087\u3046\u304b\u3089\u5272\u611b\u3057\u307e\u3059\u3002\n\u7d50\u679c\u306fheroku logs\u3067\u306e\u78ba\u8a8d\u3068\u306a\u308a\u307e\u3059\u3002\n\nLINE\u304b\u3089\u8fd4\u4e8b\u304c\u6765\u308b\u3088\u3046\u306b\u3059\u308b\nBOT\u304b\u3089\u8fd4\u4e8b\u3092\u3055\u305b\u308b\u306b\u306f\u3001Reply Message API\u3092\u53e9\u304d\u307e\u3059\u3002\n\u305d\u306eHTTP\u30b3\u30fc\u30eb\u3092\u3059\u308b\u306b\u3042\u305f\u308aclj-http\u3092\u5c0e\u5165\u3057\u307e\u3057\u305f\u3002\n\u306a\u304a\u3001LINE\u306eAPI\u3092\u30b3\u30fc\u30eb\u3092\u3059\u308b\u305f\u3081\u306e\u30c8\u30fc\u30af\u30f3\u306f\u30cf\u30fc\u30c9\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u305f\u304f\u306a\u3044\u306e\u3067\u74b0\u5883\u5909\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u6700\u521d\u306bHeroku\u5bfe\u5fdc\u3055\u305b\u305f\u6642\u306bEnviron\u3092\u672c\u5bb6\u306b\u5023\u3063\u3066\u5c0e\u5165\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u6d3b\u7528\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u304c\u5b8c\u6210\u3057\u305f\u30aa\u30a6\u30e0\u8fd4\u3057LINE BOT\u306eClojure\u5b9f\u88c5\u3068\u306a\u308a\u307e\u3059\u3002\n(ns clojure-line-bot.handler\n  (:require [compojure.core :refer :all]\n            [compojure.route :as route]\n            [environ.core :refer [env]]\n            [cheshire.core :refer [parse-string generate-string]]\n            [clj-http.client :as http-client]\n            [taoensso.timbre :as timbre :refer [error]]\n            [ring.middleware.defaults :refer [wrap-defaults api-defaults]]\n            [ring.adapter.jetty :as jetty]))\n\n(def line-channel-token (env :line-channel-token))\n(def line-api-endpoint \"https://api.line.me/v2/bot\")\n(def line-api-reply-path \"/message/reply\")\n\n(defn reply [to-user-id reply-token message]\n  (let [body (generate-string {:to to-user-id\n                               :replyToken reply-token\n                               :messages [{:type \"text\"\n                                           :text message}]})]\n    (try\n      (http-client/post (str line-api-endpoint line-api-reply-path)\n                        {:body body\n                         :headers {\"Authorization\" (str \"Bearer \" line-channel-token)}\n                         :content-type :json})\n      (catch Exception e\n        (let [exception-data (.getData e)\n              status (:status exception-data)\n              message (:body exception-data)]\n          (error (format \"status %d. %s\" status message)))))))\n\n(defroutes app-routes\n  (POST \"/linebot/callback\" {body :body}\n    (->> (parse-string (slurp body) true)\n         :events\n         (filter #(and\n                   (= (:type %) \"message\")\n                   (= (get-in % [:message :type]) \"text\")))\n         ;; map\u306e\u7d50\u679c\u3092\u305d\u306e\u307e\u307e\u8fd4\u3057\u3066\u3044\u308b\u306e\u304c\u884c\u5100\u60aa\u3044\u6c17\u3082\u3057\u307e\u3059\u304c\n         ;; status code 200\u304c\u8fd4\u308c\u3070OK\u306a\u3088\u3046\u306a\u306e\u3067\u3044\u3063\u305f\u3093\u3053\u306e\u307e\u307e\n         (map #(reply (get-in % [:source :userId])\n                      (:replyToken %)\n                      (get-in % [:message :text])))))\n  (route/not-found \"Not Found\"))\n\n(def app\n  (wrap-defaults app-routes (assoc-in api-defaults\n                                      [:params :urlencoded] false)))\n\n(defn -main [& [port]]\n  (let [port (Integer. (or port (env :port) 5000))]\n    (jetty/run-jetty app {:port port :join? false})))\n\n\u3054\u304f\u5f53\u305f\u308a\u524d\u306e\u8a71\u3067\u3059\u304c\u3001\u3053\u306eAPI\u30b3\u30fc\u30eb\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306b\u5099\u3048\u3066\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u30ed\u30b0\u51fa\u529b\u306f\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3053\u308c\u304c\u306a\u3044\u3068LINE\u306eAPI\u304b\u3089\u30a8\u30e9\u30fc\u304c\u8fd4\u3063\u3066\u304d\u305f\u6642\u306b\u3088\u304f\u5206\u304b\u3089\u306a\u304f\u306a\u308b\u306e\u3067\u3002\n\u3061\u306a\u307f\u306bmap\u4e2d\u3067reply\u95a2\u6570\u547c\u3073\u51fa\u3057\u306b\u3088\u308bHTTP\u30b3\u30fc\u30eb\u3092\u3057\u3066\u3044\u308b\u306e\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u307e\u3067\u306b\u76f4\u5217\u306bN\u56deI/O\u304c\u767a\u751f\u3059\u308b\u308f\u3051\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u3044\u3063\u305f\u3093\u826f\u3057\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u691c\u8a3c\n\u3055\u3066\u3001\u4e0a\u8a18\u306eBOT\u306f\u30c7\u30f3\u30b8\u30e3\u30fc\u3067\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u691c\u8a3c\u3092\u884c\u306a\u3063\u3066\u3044\u306a\u3044\u305f\u3081\u3067\u3059\u3002\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u4ee5\u4e0b\u306e\u8aac\u660e\u304c\u3042\u308a\u307e\u3059\u3002\n\nSignature Valdation\n\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u9001\u4fe1\u5143\u304cLINE\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u7f72\u540d\u691c\u8a3c\u3092\u884c\u308f\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n\u5404\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u306f X-Line-Signature \u30d8\u30c3\u30c0\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nX-Line-Signature \u30d8\u30c3\u30c0\u306e\u5024\u3068\u3001Request Body \u3068 Channel Secret \u304b\u3089\u8a08\u7b97\u3057\u305f Signature \u304c\u540c\u3058\u3082\u306e\u3067\u3042\u308b\u3053\u3068\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u3054\u3068\u306b\u5fc5\u305a\u691c\u8a3c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u691c\u8a3c\u306f\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u884c\u3044\u307e\u3059\u3002\n1. Channel Secret\u3092\u79d8\u5bc6\u9375\u3068\u3057\u3066\u3001HMAC-SHA256\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u308aRequest Body\u306e\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u3092\u5f97\u308b\u3002\n2. \u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u3092BASE64\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u6587\u5b57\u5217\u304c\u3001Request Header\u306b\u4ed8\u4e0e\u3055\u308c\u305fSignature\u3068\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u691c\u8a3c\u51e6\u7406\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u30c6\u30b9\u30c8\u3092\u66f8\u304f\nClojure\u306b\u9650\u3089\u305a\u3001\u3053\u306e\u624b\u306e\u3082\u306e\u306f\u5148\u306b\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u305f\u65b9\u304c\u500b\u4eba\u7684\u306b\u697d\u3060\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\nREPL\u5b9f\u884c\u3057\u3066\u5f97\u3089\u308c\u305f\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u3092\u773a\u3081\u3066\u3082\u3001\u305d\u308c\u304c\u6b63\u3057\u3044\u5024\u304b\u81ea\u5206\u306b\u306f\u5206\u304b\u3089\u306a\u3044\u306e\u3067\u2026\u3002\n\u3072\u3068\u307e\u305a\u306f\u7a7a\u5b9f\u88c5\u3092\u3057\u307e\u3059\u3002\n(defn validate-signature [content signature]\n  true)\n\n\u6b21\u306blein new\u3057\u305f\u6642\u306b\u4f5c\u3089\u308c\u305f\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\u3053\u3061\u3089\u304b\u3089\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n(deftest test-validate-signature\n  (let [signature \"3q8QXTAGaey18yL8FWTqdVlbMr6hcuNvM4tefa0o9nA=\"\n        content \"{}\"]\n    (is (true? (validate-signature content signature))))\n  (let [signature \"596359635963\"\n        content \"{}\"]\n    (is (false? (validate-signature content signature)))))\n\nSecret\u306b\u3064\u3044\u3066\u306f\u3001\u305b\u3063\u304b\u304fEnviron\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067project.clj\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u8a66\u3057\u306blein test\u3092\u6253\u3061\u3001\u30c6\u30b9\u30c8\u3092\u901a\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u305f\u3089\u6e96\u5099\u5b8c\u4e86\u3067\u3059\u3002\n\u86c7\u8db3\u3067\u3059\u304c\u3001project.clj\u306eprofiles\u306e\u4e2d\u3067\u30c6\u30b9\u30c8\u7528\u306bEnvirion\u306e\u74b0\u5883\u5909\u6570\u8a2d\u5b9a\u3092\u3057\u305f\u3089\u3001CIDER\u306e\u30c6\u30b9\u30c8\u5b9f\u884cC-c C-t C-n\u304c\u305d\u306e\u5024\u3092\u8aad\u3093\u3067\u304f\u308c\u306a\u304b\u3063\u305f\u3067\u3059\u3002\u672a\u89e3\u6c7a\u4e8b\u4ef6\u3002\n\n\u5b9f\u88c5\n\u4ee5\u4e0b\u3001\u524d\u9805\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3064\u3064\u884c\u306a\u3044\u307e\u3057\u305f\u3002\n\u307e\u305a\u306f\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u306e\u8a08\u7b97\u306b\u3042\u305f\u308apandect\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\n\u305d\u308c\u4ee5\u5916\u306f\u2026\u7279\u7b46\u3059\u308b\u3068\u3053\u308d\u306f\u306a\u3044\u3067\u3059\u3002\n\u5b9f\u88c5\u306f\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n(def line-channel-secret (env :line-channel-secret))\n\n(defn validate-signature [content signature]\n  (let [hash (sha256-hmac-bytes content line-channel-secret)\n        decoded-signature (.. java.util.Base64 getDecoder (decode signature))]\n    (. java.security.MessageDigest isEqual hash decoded-signature)))\n\n(defroutes app-routes\n  (POST \"/linebot/callback\" {body :body headers :headers}\n    (let [content (slurp body)]\n      (if (validate-signature content (get headers \"x-line-signature\"))\n        (\n        ;; valid\u3060\u3063\u305f\u3089\u30aa\u30a6\u30e0\u8fd4\u3057\u3053\u308c\u307e\u3067\u901a\u308a\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\n        )\n        ;; invalid\u3060\u3063\u305f\u3089400\n        {:status 400\n         :headers {}\n         :body \"bad request\"}))))\n\n\u3061\u306a\u307f\u306bBase64\u3068MessageDigest\u306fimport\u3057\u3066\u540d\u524d\u7a7a\u9593\u3092\u4ed8\u4e0e\u3057\u306a\u3044\u65b9\u304c\u305d\u308c\u3063\u307d\u3044\u6c17\u304c\u3057\u307e\u3059\u3002\n\n\u8a18\u8ff0\u3092\u7dba\u9e97\u306b\n\u3055\u3066\u3053\u308c\u3067\u30aa\u30a6\u30e0\u8fd4\u3057\u306b\u306f\u6210\u529f\u3057\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u7d42\u308f\u3063\u3066\u306f\u6b63\u76f4\u5fae\u5999\u306a\u306e\u3067\u3082\u3046\u5c11\u3057\u7d9a\u3051\u307e\u3059\u3002\nLINE\u304b\u3089\u9001\u4fe1\u3055\u308c\u305f\u30a4\u30d9\u30f3\u30c8\u3092\u3055\u3070\u304f\u51e6\u7406\u3092\u518d\u3073\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n(->> (parse-string content true)\n     :events\n     (filter #(and\n               (= (:type %) \"message\")\n               (= (get-in % [:message :type]) \"text\")))\n     (map #(reply (get-in % [:source :userId])\n                  (:replyToken %)\n                  (get-in % [:message :text]))))\n\n\u30b7\u30fc\u30b1\u30f3\u30b9\u304b\u3089\u5bfe\u8c61\u306e\u30d6\u30c4\u3092\u63a2\u3057\u3066\u53d6\u5f97\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u304c\u3001\u30a4\u30d9\u30f3\u30c8\u306e\u7a2e\u985e\u306b\u306fMessage\u4ee5\u5916\u306b\u3082Follow\u306a\u3069\u8907\u6570\u3042\u308a\u3001\u307e\u305fMessage\u30a4\u30d9\u30f3\u30c8\u306b\u3064\u3044\u3066\u306fText\u306e\u4ed6\u306bImage\u306a\u3069\u8907\u6570\u7a2e\u985e\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306fText\u306eMessage\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u306e\u3001\u5404\u30a4\u30d9\u30f3\u30c8\u306b\u5bfe\u3059\u308b\u632f\u821e\u3044\u3092\u5b9a\u7fa9\u3059\u308b\u306e\u306f\u3001\u4e0a\u8a18\u306e\u307e\u307e\u3067\u306f\u6ce5\u81ed\u3055\u304c\u3042\u308a\u307e\u3059\u3002\n\u3067\u306f\u3001\u3053\u3093\u306a\u98a8\u306b\u30de\u30c3\u30d7\u3067\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u308b\u306e\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\n(def line-events\n  {\"message\" {\"text\" #(reply (get-in % [:source :userId])\n                             (:replyToken %)\n                             (get-in % [:message :text]))\n              :else #(info (str \"message\u3060\u3051\u3069text\u4ee5\u5916\u304c\u6765\u305f\u3088\" %))}\n   :else #(info (str \"message\u4ee5\u5916\u304c\u6765\u305f\u3088\" %))})\n\n\u3053\u306eline-events\u3092\u51e6\u7406\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3001(\u76f8\u5909\u308f\u3089\u305a)LINE\u3078\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u3069\u3046\u3059\u308b\u304b\u3068\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u5fd8\u308c\u3066\u9032\u3081\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\n(defn route-line-events [events]\n  (map (fn [event]\n         (let [ev-type (:type event)]\n           (if-let [handler (get line-events ev-type)]\n             (if (or (not= ev-type \"message\") (fn? handler))\n               (handler event)\n               (let [sub-type (get-in event [:message :type])\n                     sub-events handler]\n                 (if-let [sub-handler (get sub-events sub-type)]\n                   (sub-handler event)\n                   ((:else sub-events) event))))\n             ((:else line-events) event))))\n       events))\n\n(defroutes app-routes\n  (POST \"/linebot/callback\" {body :body headers :headers}\n    (let [content (slurp body)]\n      (if (validate-signature content (get headers \"x-line-signature\"))\n        (->> (parse-string content true)\n             :events\n             route-line-events)\n        {:status 400\n         :headers {}\n         :body \"bad request\"}))))\n\n\u3067\u3082\u3001\u6298\u89d2\u3067\u3059\u304b\u3089Compojure\u306edefroutes\u307f\u305f\u3044\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n;; \u3053\u3046\u66f8\u304d\u305f\u3044\n(deflineevents app-lineevents\n  (MESSAGE [event]\n           (TEXT [event]\n                 (reply (get-in event [:source :userId])\n                        (:replyToken event)\n                        (get-in event [:message :text])))\n           (ELSE [event]\n                 (info (str \"message\u3060\u3051\u3069text\u4ee5\u5916\u304c\u6765\u305f\u3088\" event))))\n  (ELSE [event]\n        (info (str \"message\u4ee5\u5916\u304c\u6765\u305f\u3088\" event))))\n\n\u3061\u306a\u307f\u306b\u3067\u3059\u304c\u3001\u30de\u30af\u30ed\u30fb\u30af\u30e9\u30d6\u306e\u6700\u521d\u306e\u30eb\u30fc\u30eb\u306f\u300c\u30de\u30af\u30ed\u3092\u66f8\u304f\u306a\u300d\u3060\u305d\u3046\u3067\u3059\u3002\n\u9591\u8a71\u4f11\u984c\u3002\n\u6700\u521d\u306f\u30b7\u30f3\u30d7\u30eb\u306b\u3053\u306e\u5f62\u3092\u4f5c\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\n(deflineevents app-lineevents\n  (MESSAGE [event]\n           (reply (get-in event [:source :userId])\n                  (:replyToken event)\n                  (get-in event [:message :text])))\n  (ELSE [event]\n        (info (str \"message\u4ee5\u5916\u304c\u6765\u305f\u3088\" event))))\n\n\u305d\u3057\u3066\u751f\u307e\u308c\u305f\u306e\u304c\u3053\u3061\u3089\u3067\u3059\u3002\n(defn compile-event [name args handler]\n  (let [arg (first args)]\n    {name `(fn[~arg] ~handler)}))\n\n(defmacro MESSAGE [arg handler]\n  (compile-event \"message\" arg handler))\n\n(defmacro ELSE [arg handler]\n  (compile-event :else arg handler))\n\n(defmacro deflineevents [name & forms]\n  `(defn ~name [events#]\n     (let [handler-map# (apply merge ~@forms)]\n       (map (fn [event#]\n              (let [ev-type# (:type event#)]\n                (if-let [handler# (get handler-map# ev-type#)]\n                  (if (or (not= ev-type# \"message\") (fn? handler#))\n                    (handler# event#)\n                    (let [sub-type# (get-in event# [:message :type])\n                          sub-events# handler#]\n                      (if-let [sub-handler# (get sub-events# sub-type#)]\n                        (sub-handler# event#)\n                        ((:else sub-events#) event#))))\n                  ((:else handler-map#) event#))))\n            events#))))\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u5316\n\u300c\u8a18\u8ff0\u3092\u7dba\u9e97\u306b\u300d\u3068\u3044\u3046\u30b3\u30f3\u30bb\u30d7\u30c8\u3067\u30de\u30af\u30ed\u5316\u3057\u307e\u3057\u305f\u304c\u3001\u305f\u304b\u3060\u304b\u30aa\u30a6\u30e0\u8fd4\u3057\u306e\u305f\u3081\u306b\u3053\u3093\u306a\u30de\u30af\u30ed\u3092\u66f8\u304f\u306e\u306f\u3044\u305f\u3060\u3051\u307e\u305b\u3093\u3057\u3001Clojure\u3067LINE BOT\u3092\u4f5c\u308b\u5ea6\u306b\u8a18\u8ff0\u3059\u308b\u306e\u3082\u6c17\u304c\u3072\u3051\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u5316\u3067\u3059\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067\u4eca\u56de\u306e\u6700\u7d42\u6210\u679c\u7269\u306f\u751f\u307e\u308c\u307e\u3057\u305f\u3002\n\u307e\u305a\u306flein new\u306b\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u305f\u5f8c\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u79fb\u690d\u3057\u3066\u304d\u307e\u3059\u3002\n$ lein new line-bot-sdk-clojure\n\n\u6b21\u306b\u3001Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u30ed\u30fc\u30ab\u30eb\u306b\u3042\u308b\u4e0a\u8a18\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u307f\u3001\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nlein install\u306b\u3088\u308a\u3001\u4e0a\u8a18\u3092\u30ed\u30fc\u30ab\u30eb\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n$ cd /path/to/line-bot-sdk-clojure\n$ lein install\n\n\u3053\u3053\u307e\u3067\u304f\u308c\u3070\u3001\u30ed\u30fc\u30ab\u30eb\u306eWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306eproject.clj\u306edependencies\u306b[line-bot-sdk-clojure \"0.1.0-SNAPSHOT\"]\u3092\u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u7c21\u5358\u306a\u52d5\u4f5c\u78ba\u8a8d\u7a0b\u5ea6\u3067\u3042\u308c\u3070\u3053\u308c\u3067\u3042\u308b\u7a0b\u5ea6\u306f\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\n\u3057\u304b\u3057\u306a\u304c\u3089\u4eca\u56de\u306fHeroku\u3067\u52d5\u4f5c\u3055\u305b\u308b\u524d\u63d0\u306a\u308f\u3051\u3067\u3001Heroku\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3088\u3046\u3082\u306e\u306a\u3089\u516c\u958b\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u4e0a\u3052\u305f\u3044\u3068\u3053\u308d\u3067\u3059 (buidpack\u3092\u30b4\u30cb\u30e7\u30b4\u30cb\u30e7\u3059\u308c\u3070\u3044\u3044\u306e\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u304c\u3001\u4eca\u56de\u306f\u6311\u307f\u307e\u305b\u3093\u3067\u3057\u305f) \u3002\n\u3068\u3044\u3046\u308f\u3051\u3067Clojars\u306b\u4e0a\u3052\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u767b\u9332\u3057\u305f\u5f8c\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3066\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3066\u3070OK\u3067\u3059\u3002\n$ lein deploy clojars\n\n\u306a\u304a\u3001\u4ee5\u4e0a\u3092\u591a\u5c11\u30ea\u30d5\u30a1\u30af\u30bf\u3057\u305f\u308a\u3057\u305f\u3082\u306e\u304c\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\u3002\u547c\u3073\u51fa\u3057I/F\u3082\u591a\u5c11\u5909\u3048\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/xorphitus/line-bot-sdk-clojure\n# \u6982\u8981\n\n\u30c1\u30e3\u30c3\u30c8\u30dc\u30c3\u30c8\u3068\u3044\u3046\u8a00\u8449\u304c\u6d41\u884c\u8a9e\u3058\u307f\u3066\u304d\u305f\u6628\u4eca\u3002\n\u6765\u305f\u308b[LINE BOT AWARDS](https://botawards.line.me/ja/)\u306bClojure\u3067\u53c2\u6226\u3057\u305f\u3044\u3068\u3044\u3046\u65b9\u3005\u3082\u5f53\u7136\u3044\u3089\u3063\u3057\u3083\u308b\u3053\u3068\u304b\u3068\u5b58\u3058\u3042\u3052\u307e\u3059\u3002\n\n\u3057\u304b\u3057[\u516c\u5f0f\u306eLINE Messaging API SDK](https://github.com/line)\u306b\u306f\u3001\u4f55\u6545\u3060\u304bClojure\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u304b\u3068\u8a00\u3063\u3066Java\u306eSDK\u3092Clojure\u304b\u3089\u547c\u3076\u306e\u306f\u8ca0\u3051\u305f\u6c17\u304c\u3057\u307e\u3059\u3002\n\u3084\u308b\u3053\u3068\u3068\u8a00\u3048\u3070HTTP + JSON\u306e\u901a\u4fe1\u3060\u3051\u306a\u306e\u3067\u3001\u96e3\u3057\u3044\u3053\u3068\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3057\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001Java\u306eSDK\u3092\u4f7f\u308f\u305a\u306bClojure\u3067LINE BOT\u306e\u5b9f\u88c5\u3092\u9032\u3081\u3066\u3044\u304d\u3001\u6700\u7d42\u7684\u306b\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u306e\u904e\u7a0b\u3092\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3067\u3054\u7d39\u4ecb\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\n\nhttps://github.com/xorphitus/line-bot-sdk-clojure\n\n\u6b63\u76f4\u307e\u3060\u307e\u3060\u6a5f\u80fd\u4e0d\u8db3\u306a\u3068\u3053\u308d\u306f\u3042\u308a\u307e\u3059\u304c\u2026\u751f\u6696\u304b\u304f\u3054\u9451\u8cde\u4e0b\u3055\u3044\u3002\nPull Req\u306f\u3082\u3061\u308d\u3093\u3001\u300c\u3053\u3046\u3057\u305f\u65b9\u304c\u30a4\u30b1\u3066\u308b\u300d\u300c\u3053\u3053\u304c\u30d0\u30b0\u3063\u3066\u308b\u300d\u7b49\u306e\u3054\u6307\u6458\u3082\u5927\u6b53\u8fce\u3067\u3059\u3002\n\n\n# \u307e\u305a\u30aa\u30a6\u30e0\u8fd4\u3057BOT\u306eWeb\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u3063\u3066\u307f\u308b\n\n\u4e00\u756a\u6700\u521d\u306f\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u5316\u306f\u305b\u305a\u6700\u3082\u7c21\u7d20\u306a\u5f62\u3067LINE BOT\u3068\u306a\u308bWeb\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u3068\u3053\u308d\u304b\u3089\u59cb\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u6700\u7d42\u7684\u306a\u30b3\u30fc\u30c9\u306f[\u3053\u3061\u3089](https://github.com/xorphitus/clojure-line-bot)\u306b\u4e0a\u304c\u3063\u3066\u3044\u307e\u3057\u3066\u3001\u30ea\u30d5\u30a1\u30af\u30bf\u306e\u6bb5\u968e\u306b\u5fdc\u3058\u3066tag\u3092\u6253\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u307e\u305a[\u3053\u306e\u72b6\u614b](https://github.com/xorphitus/clojure-line-bot/tree/0.1.0-basic)\u306b\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u30a4\u30f3\u30d5\u30e9\u74b0\u5883\n\n\u307e\u305a\u306f\u52d5\u3051\u3070\u826f\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3001[LINE BOT \u3092\u3068\u308a\u3042\u3048\u305a\u30bf\u30c0\u3067 Heroku \u3067\u52d5\u304b\u3059](http://qiita.com/yuya_takeyama/items/0660a59d13e2cd0b2516)\u306e\u69cb\u6210\u3067\u59cb\u3081\u307e\u3057\u305f\u3002\n\n\u306a\u304a\u3001[\u3053\u3061\u3089](http://qiita.com/yoichiro6642/items/6d4c7309210af20a5c8f)\u306e\u3088\u3046\u306a\u975e\u540c\u671f\u306a\u4ed5\u7d44\u307f\u306b\u306f\u4eca\u56de\u306f\u8a00\u53ca\u3057\u307e\u305b\u3093\u3002\n\n~~\u6700\u521d\u306fAWS\u306b\u3066Lambda + API Gateway\u3067\u52d5\u304b\u3059\u4e88\u5b9a\u3067\u3057\u305f\u304c\u3001IP\u56fa\u5b9a\u304c\u5fc5\u8981\u306a\u4ef6\u3092\u77e5\u308a\u9762\u5012\u306b\u306a\u3063\u3066\u64a4\u9000\u3057\u305f\u3068\u3044\u3046\u3002~~\n\n\n## Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u571f\u53f0\u3092\u4f5c\u308b\n\n### Heroku\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\n\u3068\u308a\u3042\u3048\u305a\u5b89\u5b9a\u306e[Compojure](https://github.com/weavejester/compojure)\u3067\u3059\u3002\n\n(\u3057\u304b\u3057\u5f8c\u306b\u306a\u3063\u3066\u6c17\u3065\u3044\u305f\u3093\u3067\u3059\u304c\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u304c\u5b9f\u8cea1\u3064\u3060\u3051\u306a\u306e\u3067\u7d20\u306eRing\u3067\u3082\u3042\u307e\u308a\u554f\u984c\u306a\u304b\u3063\u305f\u3088\u3046\u306a\u2026\u3002\u307e\u3042\u76e3\u8996\u7528URL\u7b49\u306e\u8ffd\u52a0\u3092\u898b\u8d8a\u3057\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u2026)\n\n```bash\n$ lein new compojure clojure-line-bot\n```\n\nHeroku\u3067\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nHeroku\u672c\u5bb6\u306e[clojure-getting-started](https://github.com/heroku/clojure-getting-started)\u3068\u6bd4\u8f03\u3057\u3066\u4e0d\u8db3\u3057\u3066\u3044\u308b\u90e8\u5206\u3092\u9069\u5f53\u306b\u5165\u308c\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u305d\u3061\u3089\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u542b\u307e\u308c\u3066\u3044\u308b`compojure.handler.site`\u306fDEPRECATED\u3060\u305d\u3046\u3067\u3059\u3002\nhttps://weavejester.github.io/compojure/compojure.handler.html\n\ngit diff\u3067\u306e\u5dee\u5206\u3092\u4ee5\u4e0b\u306b\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\n\n```diff\ndiff --git a/Procfile b/Procfile\nnew file mode 100644\nindex 0000000..5e8fbb4\n--- /dev/null\n+++ b/Procfile\n@@ -0,0 +1 @@\n+web: java $JVM_OPTS -cp target/clojure-line-bot-standalone.jar clojure.main -m clojure-line-bot.handler\n\\ No newline at end of file\ndiff --git a/project.clj b/project.clj\nindex 1d58561..f1d9dba 100644\n--- a/project.clj\n+++ b/project.clj\n@@ -4,9 +4,13 @@\n   :min-lein-version \"2.0.0\"\n   :dependencies [[org.clojure/clojure \"1.8.0\"]\n                  [compojure \"1.5.1\"]\n-                 [ring/ring-defaults \"0.2.1\"]]\n-  :plugins [[lein-ring \"0.9.7\"]]\n+                 [ring/ring-defaults \"0.2.1\"]\n+                 [ring/ring-jetty-adapter \"1.5.0\"]\n+                 [environ \"1.1.0\"]]\n+  :plugins [[lein-ring \"0.9.7\"]\n+            [lein-environ \"1.1.0\"]]\n   :ring {:handler clojure-line-bot.handler/app}\n+  :uberjar-name \"clojure-line-bot-standalone.jar\"\n   :profiles\n   {:dev {:dependencies [[javax.servlet/servlet-api \"2.5\"]\n                         [ring/ring-mock \"0.3.0\"]]}})\ndiff --git a/src/clojure_line_bot/handler.clj b/src/clojure_line_bot/handler.clj\nindex 276c95c..2e4dce6 100644\n--- a/src/clojure_line_bot/handler.clj\n+++ b/src/clojure_line_bot/handler.clj\n@@ -1,7 +1,9 @@\n (ns clojure-line-bot.handler\n   (:require [compojure.core :refer :all]\n             [compojure.route :as route]\n-            [ring.middleware.defaults :refer [wrap-defaults site-defaults]]))\n+            [environ.core :refer [env]]\n+            [ring.middleware.defaults :refer [wrap-defaults site-defaults]]\n+            [ring.adapter.jetty :as jetty]))\n\n (defroutes app-routes\n   (GET \"/\" [] \"Hello World\")\n@@ -9,3 +11,7 @@\n\n (def app\n   (wrap-defaults app-routes site-defaults))\n+\n+(defn -main [& [port]]\n+  (let [port (Integer. (or port (env :port) 5000))]\n+    (jetty/run-jetty app {:port port :join? false})))\n```\n\n\n### Webhook URL\u3092\u8a2d\u3051\u308b\n\nLINE\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u305f\u3068\u304d\u306bLINE\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u308b\u3001\u3053\u3061\u3089\u306eWeb API\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u30d1\u30b9\u306f`/linebot/callback`\u3068\u3057\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u6bb5\u968e\u3067\u306fPOST\u3055\u308c\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u3092\u305d\u306e\u307e\u307e\u8868\u793a\u3059\u308b\u4ed5\u69d8\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u5909\u66f4\u5185\u5bb9\u306f\u4ee5\u4e0b\u3068\u306a\u308a\u307e\u3059\u3002\n\n```diff\ndiff --git a/src/clojure_line_bot/handler.clj b/src/clojure_line_bot/handler.clj\nindex 2e4dce6..fc1c2f3 100644\n--- a/src/clojure_line_bot/handler.clj\n+++ b/src/clojure_line_bot/handler.clj\n@@ -2,15 +2,17 @@\n   (:require [compojure.core :refer :all]\n             [compojure.route :as route]\n             [environ.core :refer [env]]\n-            [ring.middleware.defaults :refer [wrap-defaults site-defaults]]\n+            [ring.middleware.defaults :refer [wrap-defaults api-defaults]]\n             [ring.adapter.jetty :as jetty]))\n\n (defroutes app-routes\n-  (GET \"/\" [] \"Hello World\")\n+  (POST \"/linebot/callback\" {body :body} body)\n   (route/not-found \"Not Found\"))\n\n (def app\n-  (wrap-defaults app-routes site-defaults))\n+  (wrap-defaults app-routes (assoc-in api-defaults\n+                                      [:params :urlencoded] false)))\n\n (defn -main [& [port]]\n   (let [port (Integer. (or port (env :port) 5000))]\n```\n\n`defroutes`\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u8ffd\u52a0\u3057\u3066\u3044\u308b\u306e\u306b\u52a0\u3048\u3001`wrap-defaults`\u306e\u7b2c\u4e8c\u5f15\u6570\u3092`site-defaults`\u304b\u3089`api-defaults`\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\n\n`site-defaults`\u306e\u5834\u5408\u3001\u305d\u306e\u540d\u306e\u901a\u308aWeb API\u3067\u306f\u306a\u304fWeb\u30b5\u30a4\u30c8\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u305f\u3081\u3001CSRF\u5bfe\u7b56\u3067POST\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u30a8\u30e9\u30fc\u306b\u306a\u3063\u305f\u308a\u3001Cookie\u7b49\u306e\u4f59\u5206\u306a\u3082\u306e\u3092\u542b\u3093\u3067\u3044\u308b\u305f\u3081\u3067\u3059\u3002\n\u4e2d\u8eab\u306f[\u3053\u3061\u3089](https://github.com/ring-clojure/ring-defaults/blob/0.2.1/src/ring/middleware/defaults.clj#L36)\u3067\u3059\u3002\n\n\u53c2\u8003: [Compojure\u306eCSRF\u5bfe\u7b56\u30c8\u30fc\u30af\u30f3\u306eanti-forgery-token\u4f5c\u6210](http://qiita.com/masato/items/9b8ef38c5ce0378b8355)\n\n\u4eca\u56de\u306fWeb API\u3068\u306a\u308a\u307e\u3059\u306e\u3067\u3001`api-defaults`\u3092\u9078\u3073\u307e\u3057\u305f\u3002\n\u305d\u308c\u306b\u52a0\u3048\u3001\u4e0a\u8a18\u306e\u901a\u308a`:urlencoded`\u3092`false`\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8a2d\u5b9a\u304c\u306a\u3044\u5834\u5408\u3001`curl`\u306e`-d`\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u304c\u7a7a\u306b\u306a\u308b\u305f\u3081\u3067\u3059(\u539f\u56e0\u306f\u672a\u8abf\u67fb)\u3002\n\n\u3067\u306f\u3053\u3053\u3067\u4e00\u5ea6\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```bash\n$ lein ring server-headless\n```\n\n(\u3082\u3061\u308d\u3093REPL\u304b\u3089`(start-server)`\u7684\u306a\u3053\u3068\u3092\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093)\n\n\u7d9a\u3044\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308a\u307e\u3059\u3002\n\n```bash\n$ curl http://localhost:3000/linebot/callback -X POST -d 'hogehoge'\nhogehoge\n```\n\n\u6210\u529f\u3057\u307e\u3057\u305f\u3002\n\u3053\u308c\u3067LINE BOT\u4ee5\u524d\u306e\u90e8\u5206\u304c\u5b8c\u6210\u3068\u306a\u308a\u307e\u3059\u3002\n\n\n## \u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u304b\u3089\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3059\u308b\n\n[LINE Messaging API\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://devdocs.line.me/ja/#webhook-event-object)\u306b\u3088\u308b\u3068\u3001\u30c6\u30ad\u30b9\u30c8\u3067\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u4ee5\u5916\u306b\u3082\u3044\u304f\u3064\u304b\u306e\u30a4\u30d9\u30f3\u30c8\u60c5\u5831\u304cPOST\u3055\u308c\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30aa\u30a6\u30e0\u8fd4\u3057\u3092\u4f5c\u308d\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305d\u306e\u4e2d\u304b\u3089\u30c6\u30ad\u30b9\u30c8\u3067\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u30a4\u30d9\u30f3\u30c8\u306e\u307f\u3092\u62bd\u51fa\u3057\u3001\u305d\u306e\u4e2d\u304b\u3089\u9001\u4fe1\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3055\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306fJSON\u5f62\u5f0f\u3067\u3059\u306e\u3067\u30d1\u30fc\u30b9\u306e\u305f\u3081\u306b[Cheshire](https://github.com/dakrone/cheshire)\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\n[Ring-JSON](https://github.com/ring-clojure/ring-json)\u306e\u5229\u7528\u3082\u8003\u3048\u305f\u306e\u3067\u3059\u304c\u3001\u5f8c\u306b\u3053\u306ePOST\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u691c\u8a3c\u51e6\u7406\u3092\u542b\u3081\u308b\u969b\u306b\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u305d\u306e\u307e\u307e\u306e\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u304c\u5fc5\u8981\u3068\u306a\u308b\u305f\u3081\u4eca\u56de\u306f\u898b\u9001\u308a\u307e\u3057\u305f\u3002\n\n\u307e\u305f\u3001\u3053\u306e\u6642\u70b9\u3067\u30ed\u30ae\u30f3\u30b0\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b[Timbre](https://github.com/ptaoussanis/timbre)\u3082\u5c0e\u5165\u3057\u307e\u3059\u3002\nLINE\u306b\u3066\u30dc\u30c3\u30c8\u304b\u3089\u5fdc\u7b54\u3092\u8fd4\u3059\u305f\u3081\u306b\u306f\u6b21\u9805\u3067\u8aac\u660e\u3059\u308bLINE\u5074\u306eAPI\u30b3\u30fc\u30eb\u3092\u3053\u3061\u3089\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u3061\u3089\u3092\u4f5c\u308b\u307e\u3067\u306f\u6b63\u5e38\u306b\u52d5\u4f5c\u3092\u3057\u3066\u3044\u308b\u304b\u306e\u78ba\u8a8d\u3092\u30ed\u30b0\u306b\u3066\u884c\u3044\u305f\u3044\u304b\u3089\u3067\u3059\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067project.clj\u306b\u4e21\u8005\u3092\u52a0\u3048\u3001hander.clj\u3067\u3088\u3057\u306a\u306brequire\u3057\u307e\u3059\u3002\n\n\u305d\u3057\u3066LINE\u306b\u9001\u4fe1\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u672c\u6587\u3092\u30ed\u30b0\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```clj\n(POST \"/linebot/callback\" {body :body}\n  (->> (parse-string (slurp body) true)\n       :events\n       (filter #(and\n                 (= (:type %) \"message\")\n                 (= (get-in % [:message :type]) \"text\")))\n       (map #(info (get-in % [:message :text])))))\n```\n\n\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u52d5\u4f5c\u78ba\u8a8d\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b`curl`\u3057\u3066\u30ed\u30b0\u3092\u78ba\u8a8d\u3059\u308c\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n```bash\ncurl http://localhost:3000/linebot/callback -X POST -d '\n{\n  \"events\": [\n    {\n      \"replyToken\": \"nHuyWiB7yP5Zw52FIkcQobQuGDXCTA\",\n      \"type\": \"message\",\n      \"timestamp\": 1462629479859,\n      \"source\": {\n        \"type\": \"user\",\n        \"userId\": \"U206d25c2ea6bd87c17655609a1c37cb8\"\n      },\n      \"message\": {\n        \"id\": \"325708\",\n        \"type\": \"text\",\n        \"text\": \"Hello, world\"\n      }\n    },\n    {\n      \"replyToken\": \"nHuyWiB7yP5Zw52FIkcQobQuGDXCTA\",\n      \"type\": \"follow\",\n      \"timestamp\": 1462629479859,\n      \"source\": {\n        \"type\": \"user\",\n        \"userId\": \"U206d25c2ea6bd87c17655609a1c37cb8\"\n      }\n    }\n  ]\n}\n'\n```\n\n\u6b21\u3044\u3067Heroku\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3001LINE\u304b\u3089\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u98db\u3076\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3001LINE\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6295\u3052\u3066\u307f\u307e\u3059\u3002\n\u304c\u3001\u3053\u306e\u4eee\u5b9a\u306f\u8272\u3005\u306a\u65b9\u304c\u89e3\u8aac\u6e08\u307f\u3067\u3057\u3087\u3046\u304b\u3089\u5272\u611b\u3057\u307e\u3059\u3002\n\n\u7d50\u679c\u306f`heroku logs`\u3067\u306e\u78ba\u8a8d\u3068\u306a\u308a\u307e\u3059\u3002\n\n\n## LINE\u304b\u3089\u8fd4\u4e8b\u304c\u6765\u308b\u3088\u3046\u306b\u3059\u308b\n\nBOT\u304b\u3089\u8fd4\u4e8b\u3092\u3055\u305b\u308b\u306b\u306f\u3001Reply Message API\u3092\u53e9\u304d\u307e\u3059\u3002\n\u305d\u306eHTTP\u30b3\u30fc\u30eb\u3092\u3059\u308b\u306b\u3042\u305f\u308a[clj-http](https://github.com/dakrone/clj-http)\u3092\u5c0e\u5165\u3057\u307e\u3057\u305f\u3002\n\n\u306a\u304a\u3001LINE\u306eAPI\u3092\u30b3\u30fc\u30eb\u3092\u3059\u308b\u305f\u3081\u306e\u30c8\u30fc\u30af\u30f3\u306f\u30cf\u30fc\u30c9\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u305f\u304f\u306a\u3044\u306e\u3067\u74b0\u5883\u5909\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u6700\u521d\u306bHeroku\u5bfe\u5fdc\u3055\u305b\u305f\u6642\u306b[Environ](https://github.com/weavejester/environ)\u3092\u672c\u5bb6\u306b\u5023\u3063\u3066\u5c0e\u5165\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u6d3b\u7528\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u304c\u5b8c\u6210\u3057\u305f\u30aa\u30a6\u30e0\u8fd4\u3057LINE BOT\u306eClojure\u5b9f\u88c5\u3068\u306a\u308a\u307e\u3059\u3002\n\n```clj\n(ns clojure-line-bot.handler\n  (:require [compojure.core :refer :all]\n            [compojure.route :as route]\n            [environ.core :refer [env]]\n            [cheshire.core :refer [parse-string generate-string]]\n            [clj-http.client :as http-client]\n            [taoensso.timbre :as timbre :refer [error]]\n            [ring.middleware.defaults :refer [wrap-defaults api-defaults]]\n            [ring.adapter.jetty :as jetty]))\n\n(def line-channel-token (env :line-channel-token))\n(def line-api-endpoint \"https://api.line.me/v2/bot\")\n(def line-api-reply-path \"/message/reply\")\n\n(defn reply [to-user-id reply-token message]\n  (let [body (generate-string {:to to-user-id\n                               :replyToken reply-token\n                               :messages [{:type \"text\"\n                                           :text message}]})]\n    (try\n      (http-client/post (str line-api-endpoint line-api-reply-path)\n                        {:body body\n                         :headers {\"Authorization\" (str \"Bearer \" line-channel-token)}\n                         :content-type :json})\n      (catch Exception e\n        (let [exception-data (.getData e)\n              status (:status exception-data)\n              message (:body exception-data)]\n          (error (format \"status %d. %s\" status message)))))))\n\n(defroutes app-routes\n  (POST \"/linebot/callback\" {body :body}\n    (->> (parse-string (slurp body) true)\n         :events\n         (filter #(and\n                   (= (:type %) \"message\")\n                   (= (get-in % [:message :type]) \"text\")))\n         ;; map\u306e\u7d50\u679c\u3092\u305d\u306e\u307e\u307e\u8fd4\u3057\u3066\u3044\u308b\u306e\u304c\u884c\u5100\u60aa\u3044\u6c17\u3082\u3057\u307e\u3059\u304c\n         ;; status code 200\u304c\u8fd4\u308c\u3070OK\u306a\u3088\u3046\u306a\u306e\u3067\u3044\u3063\u305f\u3093\u3053\u306e\u307e\u307e\n         (map #(reply (get-in % [:source :userId])\n                      (:replyToken %)\n                      (get-in % [:message :text])))))\n  (route/not-found \"Not Found\"))\n\n(def app\n  (wrap-defaults app-routes (assoc-in api-defaults\n                                      [:params :urlencoded] false)))\n\n(defn -main [& [port]]\n  (let [port (Integer. (or port (env :port) 5000))]\n    (jetty/run-jetty app {:port port :join? false})))\n```\n\n\u3054\u304f\u5f53\u305f\u308a\u524d\u306e\u8a71\u3067\u3059\u304c\u3001\u3053\u306eAPI\u30b3\u30fc\u30eb\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306b\u5099\u3048\u3066\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u30ed\u30b0\u51fa\u529b\u306f\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3053\u308c\u304c\u306a\u3044\u3068LINE\u306eAPI\u304b\u3089\u30a8\u30e9\u30fc\u304c\u8fd4\u3063\u3066\u304d\u305f\u6642\u306b\u3088\u304f\u5206\u304b\u3089\u306a\u304f\u306a\u308b\u306e\u3067\u3002\n\n\u3061\u306a\u307f\u306b`map`\u4e2d\u3067`reply`\u95a2\u6570\u547c\u3073\u51fa\u3057\u306b\u3088\u308bHTTP\u30b3\u30fc\u30eb\u3092\u3057\u3066\u3044\u308b\u306e\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u307e\u3067\u306b\u76f4\u5217\u306bN\u56deI/O\u304c\u767a\u751f\u3059\u308b\u308f\u3051\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u3044\u3063\u305f\u3093\u826f\u3057\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n# \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u691c\u8a3c\n\n\u3055\u3066\u3001\u4e0a\u8a18\u306eBOT\u306f\u30c7\u30f3\u30b8\u30e3\u30fc\u3067\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u691c\u8a3c\u3092\u884c\u306a\u3063\u3066\u3044\u306a\u3044\u305f\u3081\u3067\u3059\u3002\n\n[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://devdocs.line.me/ja/?shell#webhook)\u306b\u4ee5\u4e0b\u306e\u8aac\u660e\u304c\u3042\u308a\u307e\u3059\u3002\n\n> Signature Valdation\n> \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u9001\u4fe1\u5143\u304cLINE\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u7f72\u540d\u691c\u8a3c\u3092\u884c\u308f\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n> \u5404\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u306f X-Line-Signature \u30d8\u30c3\u30c0\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n> X-Line-Signature \u30d8\u30c3\u30c0\u306e\u5024\u3068\u3001Request Body \u3068 Channel Secret \u304b\u3089\u8a08\u7b97\u3057\u305f Signature \u304c\u540c\u3058\u3082\u306e\u3067\u3042\u308b\u3053\u3068\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u3054\u3068\u306b\u5fc5\u305a\u691c\u8a3c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n>\n> \u691c\u8a3c\u306f\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u884c\u3044\u307e\u3059\u3002\n> 1. Channel Secret\u3092\u79d8\u5bc6\u9375\u3068\u3057\u3066\u3001HMAC-SHA256\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u308aRequest Body\u306e\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u3092\u5f97\u308b\u3002\n> 2. \u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u3092BASE64\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u6587\u5b57\u5217\u304c\u3001Request Header\u306b\u4ed8\u4e0e\u3055\u308c\u305fSignature\u3068\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u691c\u8a3c\u51e6\u7406\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n\n## \u307e\u305a\u306f\u30c6\u30b9\u30c8\u3092\u66f8\u304f\n\nClojure\u306b\u9650\u3089\u305a\u3001\u3053\u306e\u624b\u306e\u3082\u306e\u306f\u5148\u306b\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u305f\u65b9\u304c\u500b\u4eba\u7684\u306b\u697d\u3060\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\nREPL\u5b9f\u884c\u3057\u3066\u5f97\u3089\u308c\u305f\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u3092\u773a\u3081\u3066\u3082\u3001\u305d\u308c\u304c\u6b63\u3057\u3044\u5024\u304b\u81ea\u5206\u306b\u306f\u5206\u304b\u3089\u306a\u3044\u306e\u3067\u2026\u3002\n\n\u3072\u3068\u307e\u305a\u306f\u7a7a\u5b9f\u88c5\u3092\u3057\u307e\u3059\u3002\n\n```clj\n(defn validate-signature [content signature]\n  true)\n```\n\n\u6b21\u306b`lein new`\u3057\u305f\u6642\u306b\u4f5c\u3089\u308c\u305f\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n[\u3053\u3061\u3089](https://github.com/line/line-bot-sdk-java/blob/1.5.0/line-bot-api-client/src/test/java/com/linecorp/bot/client/LineSignatureValidatorTest.java)\u304b\u3089\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\n\n```clj\n(deftest test-validate-signature\n  (let [signature \"3q8QXTAGaey18yL8FWTqdVlbMr6hcuNvM4tefa0o9nA=\"\n        content \"{}\"]\n    (is (true? (validate-signature content signature))))\n  (let [signature \"596359635963\"\n        content \"{}\"]\n    (is (false? (validate-signature content signature)))))\n```\n\nSecret\u306b\u3064\u3044\u3066\u306f\u3001\u305b\u3063\u304b\u304fEnviron\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067project.clj\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\u8a66\u3057\u306b`lein test`\u3092\u6253\u3061\u3001\u30c6\u30b9\u30c8\u3092\u901a\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u305f\u3089\u6e96\u5099\u5b8c\u4e86\u3067\u3059\u3002\n\n\u86c7\u8db3\u3067\u3059\u304c\u3001project.clj\u306e`profiles`\u306e\u4e2d\u3067\u30c6\u30b9\u30c8\u7528\u306bEnvirion\u306e\u74b0\u5883\u5909\u6570\u8a2d\u5b9a\u3092\u3057\u305f\u3089\u3001CIDER\u306e\u30c6\u30b9\u30c8\u5b9f\u884c`C-c C-t C-n`\u304c\u305d\u306e\u5024\u3092\u8aad\u3093\u3067\u304f\u308c\u306a\u304b\u3063\u305f\u3067\u3059\u3002\u672a\u89e3\u6c7a\u4e8b\u4ef6\u3002\n\n\n## \u5b9f\u88c5\n\n\u4ee5\u4e0b\u3001\u524d\u9805\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3064\u3064\u884c\u306a\u3044\u307e\u3057\u305f\u3002\n\n\u307e\u305a\u306f\u30c0\u30a4\u30b8\u30a7\u30b9\u30c8\u5024\u306e\u8a08\u7b97\u306b\u3042\u305f\u308a[pandect](https://github.com/xsc/pandect)\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\n\n\u305d\u308c\u4ee5\u5916\u306f\u2026\u7279\u7b46\u3059\u308b\u3068\u3053\u308d\u306f\u306a\u3044\u3067\u3059\u3002\n\n\u5b9f\u88c5\u306f\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```clj\n(def line-channel-secret (env :line-channel-secret))\n\n(defn validate-signature [content signature]\n  (let [hash (sha256-hmac-bytes content line-channel-secret)\n        decoded-signature (.. java.util.Base64 getDecoder (decode signature))]\n    (. java.security.MessageDigest isEqual hash decoded-signature)))\n\n(defroutes app-routes\n  (POST \"/linebot/callback\" {body :body headers :headers}\n    (let [content (slurp body)]\n      (if (validate-signature content (get headers \"x-line-signature\"))\n        (\n        ;; valid\u3060\u3063\u305f\u3089\u30aa\u30a6\u30e0\u8fd4\u3057\u3053\u308c\u307e\u3067\u901a\u308a\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\n        )\n        ;; invalid\u3060\u3063\u305f\u3089400\n        {:status 400\n         :headers {}\n         :body \"bad request\"}))))\n```\n\n\u3061\u306a\u307f\u306b`Base64`\u3068`MessageDigest`\u306f`import`\u3057\u3066\u540d\u524d\u7a7a\u9593\u3092\u4ed8\u4e0e\u3057\u306a\u3044\u65b9\u304c\u305d\u308c\u3063\u307d\u3044\u6c17\u304c\u3057\u307e\u3059\u3002\n\n\n# \u8a18\u8ff0\u3092\u7dba\u9e97\u306b\n\n\u3055\u3066\u3053\u308c\u3067\u30aa\u30a6\u30e0\u8fd4\u3057\u306b\u306f\u6210\u529f\u3057\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u7d42\u308f\u3063\u3066\u306f\u6b63\u76f4\u5fae\u5999\u306a\u306e\u3067\u3082\u3046\u5c11\u3057\u7d9a\u3051\u307e\u3059\u3002\n\nLINE\u304b\u3089\u9001\u4fe1\u3055\u308c\u305f\u30a4\u30d9\u30f3\u30c8\u3092\u3055\u3070\u304f\u51e6\u7406\u3092\u518d\u3073\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```clj\n(->> (parse-string content true)\n     :events\n     (filter #(and\n               (= (:type %) \"message\")\n               (= (get-in % [:message :type]) \"text\")))\n     (map #(reply (get-in % [:source :userId])\n                  (:replyToken %)\n                  (get-in % [:message :text]))))\n```\n\n\u30b7\u30fc\u30b1\u30f3\u30b9\u304b\u3089\u5bfe\u8c61\u306e\u30d6\u30c4\u3092\u63a2\u3057\u3066\u53d6\u5f97\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u304c\u3001\u30a4\u30d9\u30f3\u30c8\u306e\u7a2e\u985e\u306b\u306fMessage\u4ee5\u5916\u306b\u3082Follow\u306a\u3069\u8907\u6570\u3042\u308a\u3001\u307e\u305fMessage\u30a4\u30d9\u30f3\u30c8\u306b\u3064\u3044\u3066\u306fText\u306e\u4ed6\u306bImage\u306a\u3069\u8907\u6570\u7a2e\u985e\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306fText\u306eMessage\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u306e\u3001\u5404\u30a4\u30d9\u30f3\u30c8\u306b\u5bfe\u3059\u308b\u632f\u821e\u3044\u3092\u5b9a\u7fa9\u3059\u308b\u306e\u306f\u3001\u4e0a\u8a18\u306e\u307e\u307e\u3067\u306f\u6ce5\u81ed\u3055\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3067\u306f\u3001\u3053\u3093\u306a\u98a8\u306b\u30de\u30c3\u30d7\u3067\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u308b\u306e\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\n\n```clj\n(def line-events\n  {\"message\" {\"text\" #(reply (get-in % [:source :userId])\n                             (:replyToken %)\n                             (get-in % [:message :text]))\n              :else #(info (str \"message\u3060\u3051\u3069text\u4ee5\u5916\u304c\u6765\u305f\u3088\" %))}\n   :else #(info (str \"message\u4ee5\u5916\u304c\u6765\u305f\u3088\" %))})\n```\n\n\u3053\u306e`line-events`\u3092\u51e6\u7406\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3001(\u76f8\u5909\u308f\u3089\u305a)LINE\u3078\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u3069\u3046\u3059\u308b\u304b\u3068\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u5fd8\u308c\u3066\u9032\u3081\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\n\n```clj\n(defn route-line-events [events]\n  (map (fn [event]\n         (let [ev-type (:type event)]\n           (if-let [handler (get line-events ev-type)]\n             (if (or (not= ev-type \"message\") (fn? handler))\n               (handler event)\n               (let [sub-type (get-in event [:message :type])\n                     sub-events handler]\n                 (if-let [sub-handler (get sub-events sub-type)]\n                   (sub-handler event)\n                   ((:else sub-events) event))))\n             ((:else line-events) event))))\n       events))\n\n(defroutes app-routes\n  (POST \"/linebot/callback\" {body :body headers :headers}\n    (let [content (slurp body)]\n      (if (validate-signature content (get headers \"x-line-signature\"))\n        (->> (parse-string content true)\n             :events\n             route-line-events)\n        {:status 400\n         :headers {}\n         :body \"bad request\"}))))\n```\n\n\u3067\u3082\u3001\u6298\u89d2\u3067\u3059\u304b\u3089Compojure\u306e`defroutes`\u307f\u305f\u3044\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```clj\n;; \u3053\u3046\u66f8\u304d\u305f\u3044\n(deflineevents app-lineevents\n  (MESSAGE [event]\n           (TEXT [event]\n                 (reply (get-in event [:source :userId])\n                        (:replyToken event)\n                        (get-in event [:message :text])))\n           (ELSE [event]\n                 (info (str \"message\u3060\u3051\u3069text\u4ee5\u5916\u304c\u6765\u305f\u3088\" event))))\n  (ELSE [event]\n        (info (str \"message\u4ee5\u5916\u304c\u6765\u305f\u3088\" event))))\n```\n\n\u3061\u306a\u307f\u306b\u3067\u3059\u304c\u3001\u30de\u30af\u30ed\u30fb\u30af\u30e9\u30d6\u306e\u6700\u521d\u306e\u30eb\u30fc\u30eb\u306f\u300c\u30de\u30af\u30ed\u3092\u66f8\u304f\u306a\u300d\u3060\u305d\u3046\u3067\u3059\u3002\n\n\u9591\u8a71\u4f11\u984c\u3002\n\n\u6700\u521d\u306f\u30b7\u30f3\u30d7\u30eb\u306b\u3053\u306e\u5f62\u3092\u4f5c\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\n\n```clj\n(deflineevents app-lineevents\n  (MESSAGE [event]\n           (reply (get-in event [:source :userId])\n                  (:replyToken event)\n                  (get-in event [:message :text])))\n  (ELSE [event]\n        (info (str \"message\u4ee5\u5916\u304c\u6765\u305f\u3088\" event))))\n```\n\n\u305d\u3057\u3066\u751f\u307e\u308c\u305f\u306e\u304c\u3053\u3061\u3089\u3067\u3059\u3002\n\n```clj\n(defn compile-event [name args handler]\n  (let [arg (first args)]\n    {name `(fn[~arg] ~handler)}))\n\n(defmacro MESSAGE [arg handler]\n  (compile-event \"message\" arg handler))\n\n(defmacro ELSE [arg handler]\n  (compile-event :else arg handler))\n\n(defmacro deflineevents [name & forms]\n  `(defn ~name [events#]\n     (let [handler-map# (apply merge ~@forms)]\n       (map (fn [event#]\n              (let [ev-type# (:type event#)]\n                (if-let [handler# (get handler-map# ev-type#)]\n                  (if (or (not= ev-type# \"message\") (fn? handler#))\n                    (handler# event#)\n                    (let [sub-type# (get-in event# [:message :type])\n                          sub-events# handler#]\n                      (if-let [sub-handler# (get sub-events# sub-type#)]\n                        (sub-handler# event#)\n                        ((:else sub-events#) event#))))\n                  ((:else handler-map#) event#))))\n            events#))))\n```\n\n\n# \u30e9\u30a4\u30d6\u30e9\u30ea\u5316\n\n\u300c\u8a18\u8ff0\u3092\u7dba\u9e97\u306b\u300d\u3068\u3044\u3046\u30b3\u30f3\u30bb\u30d7\u30c8\u3067\u30de\u30af\u30ed\u5316\u3057\u307e\u3057\u305f\u304c\u3001\u305f\u304b\u3060\u304b\u30aa\u30a6\u30e0\u8fd4\u3057\u306e\u305f\u3081\u306b\u3053\u3093\u306a\u30de\u30af\u30ed\u3092\u66f8\u304f\u306e\u306f\u3044\u305f\u3060\u3051\u307e\u305b\u3093\u3057\u3001Clojure\u3067LINE BOT\u3092\u4f5c\u308b\u5ea6\u306b\u8a18\u8ff0\u3059\u308b\u306e\u3082\u6c17\u304c\u3072\u3051\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u5316\u3067\u3059\u3002\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u4eca\u56de\u306e\u6700\u7d42\u6210\u679c\u7269\u306f\u751f\u307e\u308c\u307e\u3057\u305f\u3002\n\n\u307e\u305a\u306f`lein new`\u306b\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u305f\u5f8c\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u79fb\u690d\u3057\u3066\u304d\u307e\u3059\u3002\n\n```\n$ lein new line-bot-sdk-clojure\n```\n\n\u6b21\u306b\u3001Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u30ed\u30fc\u30ab\u30eb\u306b\u3042\u308b\u4e0a\u8a18\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u307f\u3001\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n`lein install`\u306b\u3088\u308a\u3001\u4e0a\u8a18\u3092\u30ed\u30fc\u30ab\u30eb\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n\n```\n$ cd /path/to/line-bot-sdk-clojure\n$ lein install\n```\n\n\u3053\u3053\u307e\u3067\u304f\u308c\u3070\u3001\u30ed\u30fc\u30ab\u30eb\u306eWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306eproject.clj\u306edependencies\u306b`[line-bot-sdk-clojure \"0.1.0-SNAPSHOT\"]`\u3092\u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u7c21\u5358\u306a\u52d5\u4f5c\u78ba\u8a8d\u7a0b\u5ea6\u3067\u3042\u308c\u3070\u3053\u308c\u3067\u3042\u308b\u7a0b\u5ea6\u306f\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\n\n\u3057\u304b\u3057\u306a\u304c\u3089\u4eca\u56de\u306fHeroku\u3067\u52d5\u4f5c\u3055\u305b\u308b\u524d\u63d0\u306a\u308f\u3051\u3067\u3001Heroku\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3088\u3046\u3082\u306e\u306a\u3089\u516c\u958b\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u4e0a\u3052\u305f\u3044\u3068\u3053\u308d\u3067\u3059 (buidpack\u3092\u30b4\u30cb\u30e7\u30b4\u30cb\u30e7\u3059\u308c\u3070\u3044\u3044\u306e\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u304c\u3001\u4eca\u56de\u306f\u6311\u307f\u307e\u305b\u3093\u3067\u3057\u305f) \u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067[Clojars](https://clojars.org/)\u306b\u4e0a\u3052\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u767b\u9332\u3057\u305f\u5f8c\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3066\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3066\u3070OK\u3067\u3059\u3002\n\n```\n$ lein deploy clojars\n```\n\n\u306a\u304a\u3001\u4ee5\u4e0a\u3092\u591a\u5c11\u30ea\u30d5\u30a1\u30af\u30bf\u3057\u305f\u308a\u3057\u305f\u3082\u306e\u304c\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\u3002\u547c\u3073\u51fa\u3057I/F\u3082\u591a\u5c11\u5909\u3048\u3066\u3044\u307e\u3059\u3002\n\nhttps://github.com/xorphitus/line-bot-sdk-clojure\n"}