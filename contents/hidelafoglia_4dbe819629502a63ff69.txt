{"context": " More than 1 year has passed since last update.\n\nProject\u4f5c\u6210\n\nGET /accounts/login \u3067\u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u3092\u51fa\u3059\nPOST /accounts/login \u3067\u30ed\u30b0\u30a4\u30f3\u3057\u3001/accounts/profile/ \u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\nGET /accounts/profile \u3067\u500b\u4eba\u60c5\u5831\u8868\u793a\n\n\nstartproject\n(v17)hdknr@wzy:~/ve/v17/src$ mkdir -p ua/web\n(v17)hdknr@wzy:~/ve/v17/src$ django-admin startproject app ua/web\n(v17)hdknr@wzy:~/ve/v17/src$ cd ua/web\n\n(v17)hdknr@wzy:~/ve/v17/src/ua/web$ python manage.py migrate\n(v17)hdknr@wzy:~/ve/v17/src/ua/web$ python manage.py createsuperuser\n\n\naccounts \u8ffd\u52a0\n(v17)hdknr@wzy:~/ve/v17/src/ua/web$ python manage.py startapp accounts\n\n\napp/settings.py\nINSTALLED_APPS += (\n    'accounts',\n)\n\n\napp/urls.py\n    url(r'^accounts/', include('accounts.urls')),\n\n\naccounts/urls.py\nfrom django.conf.urls import patterns, url\nimport views\n\nurlpatterns = patterns(\n    '',\n    url(r'login/$', 'django.contrib.auth.views.login'),\n    url(r'profile/$', views.profile),\n)\n\n\naccounts/views.py\nfrom django.contrib.auth.decorators import login_required\nfrom django.template.response import TemplateResponse\n\nimport models\n\n\n@login_required\ndef profile(request):\n    ua = None\n    return TemplateResponse(\n        request,\n        'registration/profile.html',\n        dict(request=request, ua=ua, ))\n\n\naccounts/templates/registration\n(v17)hdknr@wzy:~/ve/v17/src/ua/web$ mkdir -p accounts/templates/registration\n\n\nlogin.html\n\n<form method=\"post\">{% csrf_token %}\n{{ form.as_p }}\n<input type=\"submit\" />\n</form>\n\n\nprofile.html\n\n{{ request.user }}\n{{ ua }}\n\n\n\u3053\u306e\u6642\u70b9\u3067\u30ed\u30b0\u30a4\u30f3\u307e\u3067\u52d5\u304d\u307e\u3059\n\n\nUserAgent\u30e2\u30c7\u30eb\n\nUA\u5224\u5b9a(accounts/ua.py)\n\nagent_type() : \u6b63\u898f\u8868\u73fe\u3067 \u30de\u30c3\u30c1\u30f3\u30b0\u3059\u308b agent\u3092\u898b\u3064\u3051\u308b\n\nimport re\n\n\nDETECTOR = [\n    # Featured Phone\n    r'(?P<agent>DoCoMo)',\n    r'(?P<agent>SoftBank)',\n    r'^(?P<agent>KDDI)',     # if no KDDI, HDML browser.\n    r'(?P<agent>Vodafone)',\n\n    ....\n]\n\n\ndef agent_type(agent_string):\n    for d in DETECTOR:\n        m = re.search(d, agent_string, flags=re.IGNORECASE)\n        m = m and m.groupdict() or {}\n        if m:\n            return m['agent'].lower().replace('-', '').replace(' ', '')\n    return \"generic\"\n\n\n\u30e2\u30c7\u30eb(accounts/models.py)\nfrom django.db import models\nfrom django.contrib.auth.models import User\nfrom django.utils.translation import ugettext_lazy as _\n\nfrom ua import agent_type\nimport hashlib\n\nclass UserAgent(models.Model):\n    agent = models.CharField(\n        _(u'User Agent'),\n        max_length=30, default=\"PC\")\n    key = models.CharField(\n        _(u'User Agent Header MD5 Hash'),\n        max_length=40, unique=True, db_index=True,)\n    header = models.CharField(\n        _(u'User Agent Header'),  max_length=512, )\n    users = models.ManyToManyField(\n        User, default=None, null=True, blank=True)\n\n\n    @classmethod\n    def get_ua(cls, ua_header, user=None):\n        ua, created = cls.objects.get_or_create(\n            key=hashlib.md5(ua_header).hexdigest())\n\n        if created:\n            ua.agent = agent_type(ua_header)\n            ua.header = ua_header\n            ua.save()\n\n        if user:\n            ua.users.add(user)\n\n        return ua\n\n    def __unicode__(self):\n        return \"%s(%s)\" % (self.agent, getattr(self, 'id', ''))\n\n\n/accounts/profile\u3067\u8a18\u9332\u3059\u308b(acounts/views.py)\n\nprofile()\u4fee\u6b63\n\n@login_required\ndef profile(request):\n    ua = models.UserAgent.get_ua(\n        request.META.get('HTTP_USER_AGENT', 'N/A'),\n        request.user)\n\n    return TemplateResponse(\n        request,\n        'registration/profile.html',\n        dict(request=request, ua=ua, ))\n\n\n\u30de\u30a4\u30b0\u30ec\u30fc\u30c8\n(v17)hdknr@wzy:~/ve/v17/src/ua/web$ python manage.py makemigrations accounts\nMigrations for 'accounts':\n  0001_initial.py:\n    - Create model UserAgent\n\n(v17)hdknr@wzy:~/ve/v17/src/ua/web$ python manage.py migrate  accounts\nOperations to perform:\n  Apply all migrations: accounts\nRunning migrations:\n  Applying accounts.0001_initial... OK\n\n\naccounts/admin.py\nfrom django.contrib import admin\nimport models\n\n\nclass UserAgentAdmin(admin.ModelAdmin):\n    list_display = tuple(\n        [f.name for f in models.UserAgent._meta.fields\n         if f.name not in ['key']]\n    )\n\nadmin.site.register(UserAgent, UserAgentAdmin)\n\n\n\n\u3053\u306e\u6642\u70b9\u3067UserAgent\u306eAdmin\u7ba1\u7406\u3067\u304d\u308b\n\n\nAdmin\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\n\nUserAgentAdmin(accounts/admin.py)\n\n1. agent\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3059\u308b\n    list_filter = ('agent', )    \n\n\n2. users\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u7de8\u96c6\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u3059\u308b\n    add_exclude = ('users',)\n    edit_exclude = ('users',)\n\n    def add_view(self, *args, **kwargs):\n        self.exclude = getattr(self, 'add_exclude', ())\n        return super(UserAgentAdmin, self).add_view(*args, **kwargs)\n\n    def change_view(self, *args, **kwargs):\n        self.exclude = getattr(self, 'edit_exclude', ())\n        return super(UserAgentAdmin, self).change_view(*args, **kwargs)\n\n\n3. UserAgent\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u6570\u3092\u8868\u793a\u3055\u305b\u3001\u4e00\u89a7\u306b\u30ea\u30f3\u30af\u3055\u305b\u308b\nfrom django.core.urlresolvers import reverse\n\n    list_display = tuple(\n        [f.name for f in models.UserAgent._meta.fields\n         if f.name not in ['key']]\n    ) + ('users_count',)\n\n    def users_count(self, obj):\n        if not obj.users.exists():\n            return '0'\n\n        uri = reverse(\"admin:%s_changelist\" % obj.users.model._meta.db_table)\n        query = \"?useragent__id__exact=%d\" % (obj.id)\n        return mark_safe(\n            u\"<a href='%s'>%d Users</a>\" % (uri + query, obj.users.count()))\n\n    users_count.allow_tags = True\n\n\n\n4. users\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u7de8\u96c6\u3055\u305b\u306a\u3044\u5909\u308f\u308a\u306b\u3001 \u30ed\u30b0\u30a4\u30f3\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u3078\u306e\u30ea\u30f3\u30af\u3092\u8868\u793a\u3055\u305b\u308b\n    readonly_fields = ('ua_users', )\n\n    def ua_users(self, instance):\n        try:\n            return \",\".join([\n                mark_safe('<a href=\"%s\">%s</a>   ' % (\n                    reverse(\"admin:%s_change\" % u._meta.db_table, args=[u.id]),\n                    u.__unicode__()))\n                for u in instance.users.all()])\n        except:\n            return \"errors\"\n\n    ua_users.short_description = \"UserAgent Users\"\n    ua_users.allow_tags = True\n\n\n\nUserAdmin(accounts/admin.py)\n\nUser\u304b\u3089UserAgent\u306eAdmin\u753b\u9762\u306b\u623b\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\nfrom django.db.models.manager import Manager\nfrom django.utils.safestring import mark_safe\nfrom django.contrib.auth.admin import UserAdmin\n\n\n\u30e2\u30c7\u30eb\u3068\u305d\u306e\u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30fc\u30eb\u30c9\u304c\u6307\u5b9a\u3055\u308c\u305f\u3068\u304d\u306b\u3001\u305d\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306eAdmin\u753b\u9762\u306b\u623b\u308c\u308b\u30ea\u30f3\u30af\u3092\u4f5c\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\n\ndef link_to_relation(self, obj, field=\"\"):\n    fobj = obj and getattr(obj, field, None)\n\n    if fobj is None:\n        return \"No Link\"\n\n    if issubclass(fobj.__class__, Manager):\n        fobj = fobj.all()\n    else:\n        fobj = [fobj, ]\n\n    return mark_safe(\"<br/>\".join([\n        '<a href=\"%s\">%s</a>' % (\n            reverse(\"admin:%s_change\" % ln._meta.db_table, args=[ln.id]),\n            ln.__unicode__()\n        ) for ln in fobj]))\n\n\nUser\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068useragent_set \u3067\u30d0\u30c3\u30af\u30ea\u30f3\u30af\u3092\u4f5c\u308b\n\nuseragent_link = lambda self, obj: link_to_relation(self, obj, \"useragent_set\")\nuseragent_link.short_description = u\"User Agent\"\nuseragent_link.allow_tags = True\n\n\n\u3053\u308c\u3092UserAdmin\u306b\u8ffd\u52a0\u3057\u3066\u3084\u308b\n\nUserAdmin.list_display = tuple(\n    set(UserAdmin.list_display + ('useragent_link', )))\nUserAdmin.useragent_link = useragent_link\n\n\n\u3055\u3089\u306bUserAdmin\u3067UserAgent#agent\u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\nUserAdmin.list_filter = UserAdmin.list_filter + ('useragent__agent',)\n\n\n\u3053\u308c\u3067\u623b\u308c\u308b\n\n\n\n# Project\u4f5c\u6210\n\n- GET /accounts/login \u3067\u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u3092\u51fa\u3059\n- POST /accounts/login \u3067\u30ed\u30b0\u30a4\u30f3\u3057\u3001/accounts/profile/ \u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\n- GET /accounts/profile \u3067\u500b\u4eba\u60c5\u5831\u8868\u793a\n\n## startproject\n\n~~~\n(v17)hdknr@wzy:~/ve/v17/src$ mkdir -p ua/web\n(v17)hdknr@wzy:~/ve/v17/src$ django-admin startproject app ua/web\n(v17)hdknr@wzy:~/ve/v17/src$ cd ua/web\n~~~\n\n~~~\n(v17)hdknr@wzy:~/ve/v17/src/ua/web$ python manage.py migrate\n(v17)hdknr@wzy:~/ve/v17/src/ua/web$ python manage.py createsuperuser\n~~~\n\n## accounts \u8ffd\u52a0\n\n~~~\n(v17)hdknr@wzy:~/ve/v17/src/ua/web$ python manage.py startapp accounts\n~~~\n\n### app/settings.py\n\n~~~\nINSTALLED_APPS += (\n    'accounts',\n)\n~~~\n\n### app/urls.py\n\n\n~~~\n    url(r'^accounts/', include('accounts.urls')),\n~~~\n\n### accounts/urls.py\n\n\n~~~\nfrom django.conf.urls import patterns, url\nimport views\n\nurlpatterns = patterns(\n    '',\n    url(r'login/$', 'django.contrib.auth.views.login'),\n    url(r'profile/$', views.profile),\n)\n~~~\n\n\n### accounts/views.py\n\n\n~~~\nfrom django.contrib.auth.decorators import login_required\nfrom django.template.response import TemplateResponse\n\nimport models\n\n\n@login_required\ndef profile(request):\n    ua = None\n    return TemplateResponse(\n        request,\n        'registration/profile.html',\n        dict(request=request, ua=ua, ))\n~~~\n\n### accounts/templates/registration\n\n~~~\n(v17)hdknr@wzy:~/ve/v17/src/ua/web$ mkdir -p accounts/templates/registration\n~~~\n\n- login.html\n\n~~~\n<form method=\"post\">{% csrf_token %}\n{{ form.as_p }}\n<input type=\"submit\" />\n</form>\n~~~\n\n- profile.html\n\n~~~\n{{ request.user }}\n{{ ua }}\n~~~\n\n- \u3053\u306e\u6642\u70b9\u3067\u30ed\u30b0\u30a4\u30f3\u307e\u3067\u52d5\u304d\u307e\u3059\n\n# UserAgent\u30e2\u30c7\u30eb\n\n## UA\u5224\u5b9a(accounts/ua.py)\n\n- agent_type() : \u6b63\u898f\u8868\u73fe\u3067 \u30de\u30c3\u30c1\u30f3\u30b0\u3059\u308b agent\u3092\u898b\u3064\u3051\u308b\n\n~~~\nimport re\n\n\nDETECTOR = [\n    # Featured Phone\n    r'(?P<agent>DoCoMo)',\n    r'(?P<agent>SoftBank)',\n    r'^(?P<agent>KDDI)',     # if no KDDI, HDML browser.\n    r'(?P<agent>Vodafone)',\n\n    ....\n]\n\n\ndef agent_type(agent_string):\n    for d in DETECTOR:\n        m = re.search(d, agent_string, flags=re.IGNORECASE)\n        m = m and m.groupdict() or {}\n        if m:\n            return m['agent'].lower().replace('-', '').replace(' ', '')\n    return \"generic\"\n~~~    \n\n\n## \u30e2\u30c7\u30eb(accounts/models.py)\n\n~~~\nfrom django.db import models\nfrom django.contrib.auth.models import User\nfrom django.utils.translation import ugettext_lazy as _\n\nfrom ua import agent_type\nimport hashlib\n\nclass UserAgent(models.Model):\n    agent = models.CharField(\n        _(u'User Agent'),\n        max_length=30, default=\"PC\")\n    key = models.CharField(\n        _(u'User Agent Header MD5 Hash'),\n        max_length=40, unique=True, db_index=True,)\n    header = models.CharField(\n        _(u'User Agent Header'),  max_length=512, )\n    users = models.ManyToManyField(\n        User, default=None, null=True, blank=True)\n\n\n    @classmethod\n    def get_ua(cls, ua_header, user=None):\n        ua, created = cls.objects.get_or_create(\n            key=hashlib.md5(ua_header).hexdigest())\n\n        if created:\n            ua.agent = agent_type(ua_header)\n            ua.header = ua_header\n            ua.save()\n\n        if user:\n            ua.users.add(user)\n\n        return ua\n\n    def __unicode__(self):\n        return \"%s(%s)\" % (self.agent, getattr(self, 'id', ''))\n~~~\n\n## /accounts/profile\u3067\u8a18\u9332\u3059\u308b(acounts/views.py)\n\n- profile()\u4fee\u6b63\n\n~~~\n@login_required\ndef profile(request):\n    ua = models.UserAgent.get_ua(\n        request.META.get('HTTP_USER_AGENT', 'N/A'),\n        request.user)\n\n    return TemplateResponse(\n        request,\n        'registration/profile.html',\n        dict(request=request, ua=ua, ))\n~~~        \n\n## \u30de\u30a4\u30b0\u30ec\u30fc\u30c8\n\n~~~\n(v17)hdknr@wzy:~/ve/v17/src/ua/web$ python manage.py makemigrations accounts\nMigrations for 'accounts':\n  0001_initial.py:\n    - Create model UserAgent\n~~~\n~~~    \n(v17)hdknr@wzy:~/ve/v17/src/ua/web$ python manage.py migrate  accounts\nOperations to perform:\n  Apply all migrations: accounts\nRunning migrations:\n  Applying accounts.0001_initial... OK\n~~~      \n\n## accounts/admin.py\n\n~~~\nfrom django.contrib import admin\nimport models\n\n\nclass UserAgentAdmin(admin.ModelAdmin):\n    list_display = tuple(\n        [f.name for f in models.UserAgent._meta.fields\n         if f.name not in ['key']]\n    )\n\nadmin.site.register(UserAgent, UserAgentAdmin)\n\n~~~    \n\n- \u3053\u306e\u6642\u70b9\u3067UserAgent\u306eAdmin\u7ba1\u7406\u3067\u304d\u308b\n\n# Admin\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\n\n## UserAgentAdmin(accounts/admin.py)\n\n###  1. agent\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3059\u308b\n\n~~~    \n    list_filter = ('agent', )    \n~~~\n\n### 2. users\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u7de8\u96c6\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u3059\u308b\n\n~~~    \n    add_exclude = ('users',)\n    edit_exclude = ('users',)\n\n    def add_view(self, *args, **kwargs):\n        self.exclude = getattr(self, 'add_exclude', ())\n        return super(UserAgentAdmin, self).add_view(*args, **kwargs)\n\n    def change_view(self, *args, **kwargs):\n        self.exclude = getattr(self, 'edit_exclude', ())\n        return super(UserAgentAdmin, self).change_view(*args, **kwargs)\n~~~\n\n### 3. UserAgent\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u6570\u3092\u8868\u793a\u3055\u305b\u3001\u4e00\u89a7\u306b\u30ea\u30f3\u30af\u3055\u305b\u308b\n\n~~~\nfrom django.core.urlresolvers import reverse\n~~~\n\n~~~    \n    list_display = tuple(\n        [f.name for f in models.UserAgent._meta.fields\n         if f.name not in ['key']]\n    ) + ('users_count',)\n\n    def users_count(self, obj):\n        if not obj.users.exists():\n            return '0'\n\n        uri = reverse(\"admin:%s_changelist\" % obj.users.model._meta.db_table)\n        query = \"?useragent__id__exact=%d\" % (obj.id)\n        return mark_safe(\n            u\"<a href='%s'>%d Users</a>\" % (uri + query, obj.users.count()))\n\n    users_count.allow_tags = True\n~~~\n    \n![image](https://raw.githubusercontent.com/hdknr/scriptogr.am/master/django/ua/UserAgent.list.png)\n    \n### 4. users\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u7de8\u96c6\u3055\u305b\u306a\u3044\u5909\u308f\u308a\u306b\u3001 \u30ed\u30b0\u30a4\u30f3\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u3078\u306e\u30ea\u30f3\u30af\u3092\u8868\u793a\u3055\u305b\u308b\n\n~~~    \n    readonly_fields = ('ua_users', )\n\n    def ua_users(self, instance):\n        try:\n            return \",\".join([\n                mark_safe('<a href=\"%s\">%s</a>   ' % (\n                    reverse(\"admin:%s_change\" % u._meta.db_table, args=[u.id]),\n                    u.__unicode__()))\n                for u in instance.users.all()])\n        except:\n            return \"errors\"\n\n    ua_users.short_description = \"UserAgent Users\"\n    ua_users.allow_tags = True\n~~~    \n\n![image](https://raw.githubusercontent.com/hdknr/scriptogr.am/master/django/ua/UserAgent.edit.png)\n    \n\n## UserAdmin(accounts/admin.py)\n\n- User\u304b\u3089UserAgent\u306eAdmin\u753b\u9762\u306b\u623b\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\n~~~\nfrom django.db.models.manager import Manager\nfrom django.utils.safestring import mark_safe\nfrom django.contrib.auth.admin import UserAdmin\n~~~\n\n- \u30e2\u30c7\u30eb\u3068\u305d\u306e\u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30fc\u30eb\u30c9\u304c\u6307\u5b9a\u3055\u308c\u305f\u3068\u304d\u306b\u3001\u305d\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306eAdmin\u753b\u9762\u306b\u623b\u308c\u308b\u30ea\u30f3\u30af\u3092\u4f5c\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\n\n~~~\ndef link_to_relation(self, obj, field=\"\"):\n    fobj = obj and getattr(obj, field, None)\n\n    if fobj is None:\n        return \"No Link\"\n\n    if issubclass(fobj.__class__, Manager):\n        fobj = fobj.all()\n    else:\n        fobj = [fobj, ]\n\n    return mark_safe(\"<br/>\".join([\n        '<a href=\"%s\">%s</a>' % (\n            reverse(\"admin:%s_change\" % ln._meta.db_table, args=[ln.id]),\n            ln.__unicode__()\n        ) for ln in fobj]))\n~~~        \n\n- User\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068useragent_set \u3067\u30d0\u30c3\u30af\u30ea\u30f3\u30af\u3092\u4f5c\u308b\n\n~~~\nuseragent_link = lambda self, obj: link_to_relation(self, obj, \"useragent_set\")\nuseragent_link.short_description = u\"User Agent\"\nuseragent_link.allow_tags = True\n~~~\n\n- \u3053\u308c\u3092UserAdmin\u306b\u8ffd\u52a0\u3057\u3066\u3084\u308b\n\n~~~\nUserAdmin.list_display = tuple(\n    set(UserAdmin.list_display + ('useragent_link', )))\nUserAdmin.useragent_link = useragent_link\n~~~\n\n- \u3055\u3089\u306bUserAdmin\u3067UserAgent#agent\u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\n~~~\nUserAdmin.list_filter = UserAdmin.list_filter + ('useragent__agent',)\n~~~\n\n- \u3053\u308c\u3067\u623b\u308c\u308b\n\n![image](https://raw.githubusercontent.com/hdknr/scriptogr.am/master/django/ua/User.list.png)\n\n", "tags": ["Django", "Python", "admin"]}