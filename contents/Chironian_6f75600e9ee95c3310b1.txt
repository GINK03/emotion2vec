{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306fADVENTAR\u306eC++ Advent Calender 2015\u306e18\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u3068\u3053\u308d\u3067\u3001\u5f53\u6295\u7a3f\u306fQiita\u306eC++ Advent Calendar 2015\u306e\u8a18\u4e8b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u5b9f\u306f\u3001ADVENTAR\u3078\u6295\u7a3f\u3092\u767b\u9332\u3057\u305f\u5f53\u8a18\u4e8b\u304c\u601d\u3063\u305f\u3088\u308a\u81a8\u3089\u3093\u3060\u305f\u3081\u3001\u5206\u5272\u3057\u3066\u4e00\u90e8\u3092Qiita\u306eC++\u30ab\u30ec\u30f3\u30c0\u30fc\u3078\u6295\u7a3f\u3055\u305b\u3066\u9802\u3044\u3066\u304a\u308a\u307e\u3059\u3002\n\n1.\u306f\u3058\u3081\u306b\n\u79c1\u306f\u3001\u6298\u89d2\u306eC++\u3092\u30d9\u30bf\u30fcC\u3068\u3057\u3066\u9577\u5e74\u4f7f\u3063\u3066\u307e\u3057\u305f\u304c\u3001\u53bb\u5e74\u3001\u4eca\u66f4\u3067\u3059\u304cC++11\u898f\u683c\u306e\u5b58\u5728\u3092\u77e5\u308aC++\u306e\u767a\u5c55\u306b\u3073\u3063\u304f\u308a\u3002\u30d0\u30ea\u30d0\u30ea\u4f7f\u3044\u59cb\u3081\u3066\u3001\u591a\u5c11\u306f\u5f79\u306b\u7acb\u3061\u305d\u3046\u306a\u5c0f\u6280\u30c4\u30fc\u30eb\u3092\u3044\u304f\u3064\u304b\u4f5c\u3063\u305f\u306e\u3067\u3001\u305d\u306e\u4e2d\u304b\u3089\uff12\u3064\u3001\u3054\u7d39\u4ecb\u3055\u305b\u3066\u9802\u304d\u307e\u3059\u3002\n\u3082\u3057\u3001\u304a\u5f79\u306b\u7acb\u3064\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u5e78\u3044\u3067\u3059\u3002\n\n2.\u307e\u305a\u306f\u8efd\u304fstd::extent<>\u7528\u30de\u30af\u30ed\nC++11\u3067\u898f\u683c\u3055\u308c\u305f\u591a\u6b21\u5143\u751f\u914d\u5217\u306e\u8981\u7d20\u6570\u3092\u53d6\u3063\u3066\u304f\u308bstd::extent<>\u306f\u4fbf\u5229\u306a\u306e\u3067\u3059\u304c\u3001\u30e9\u30e0\u30c0\u5f0f\u306e\u4e2d\u306a\u3069\u3067\u53c2\u7167\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3068\u4f7f\u3048\u307e\u305b\u3093\u3002\u53c2\u7167\u3092std::remove_reference<>\u3067\u5916\u305b\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u6ec5\u591a\u77e2\u9c48\u9577\u304f\u306a\u308b\u306e\u3067\u5acc\u3089\u3057\u3044\u3067\u3059\u3002\n\u3053\u3093\u306a\u6642\u306f\u3001\u30bf\u30a4\u30d7\u91cf\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u30de\u30af\u30ed\u5316\u3067\u3059\u3002EXTENT()\u306f\uff11\u6b21\u5143\u7528\u3001EXTENT_N()\u306f\u591a\u6b21\u5143\u7528\u3067\u3059\u3002\n\u4f7f\u3044\u65b9\u306f\u6b21\u7bc0\u3092\u53c2\u7167\u4e0b\u3055\u3044\u3002\u65e9\u901f\u30e9\u30e0\u30c0\u5f0f\u306e\u4e2d\u3067\u4f7f\u3063\u3066\u307e\u3059\u3002\n\nextent.h\n#include <type_traits>\n\n#define EXTENT(dType)           \\\n    std::extent<typename std::remove_reference<decltype(dType)>::type, 0>::value\n#define EXTENT_N(dType, dRank)  \\\n    std::extent<typename std::remove_reference<decltype(dType)>::type, dRank>::value\n\n\n\n3.\u672c\u547d\u3001\u30b9\u30c8\u30ed\u30f3\u30b0\u30fb\u30d6\u30ec\u30fc\u30af\n\u591a\u91cd\u30eb\u30fc\u30d7\u3084\u30eb\u30fc\u30d7\u306e\u4e2d\u306eswitch\u304b\u3089\u30eb\u30fc\u30d7\u8131\u51fa\u306b\u82e6\u52b4\u3055\u308c\u305f\u65b9\u306f\u3044\u307e\u305b\u3093\u304b\uff1f\u3000\u305d\u3093\u306a\u3042\u306a\u305f\u306b\u6717\u5831(?)\u3067\u3059\u3002\nC++11\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30e9\u30e0\u30c0\u5f0f\u306f\u3001return;\u3067\u547c\u3073\u51fa\u3057\u5143\u306b\u623b\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30e9\u30e0\u30c0\u5f0f\u306f\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u304b\u3089\u3001\u305d\u306e\u307e\u307e\u76f4\u63a5\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3092\u4f7f\u3063\u3066\u30e9\u30e0\u30c0\u5f0f\u3092\u305d\u306e\u5834\u5b9f\u884c\u3057\u3001\u5185\u90e8\u306e\u591a\u91cd\u30eb\u30fc\u30d7\u304b\u3089return;\u3059\u308b\u3068\u3001\u3042\u3089\u4e0d\u601d\u8b70\u3001\u591a\u91cd\u30eb\u30fc\u30d7\u3092\u30d6\u30ec\u30fc\u30af\u3067\u304d\u307e\u3059\u3002\n\u66f4\u306b\u623b\u308a\u5024\u3092\u8fd4\u5374\u3067\u304d\u308b\u306e\u3067\u3001\u6700\u5f8c\u307e\u3067\u56de\u3063\u305f\u30890\u3001\u30d6\u30ec\u30fc\u30af\u3057\u305f\u30890\u4ee5\u5916\u3092\u8fd4\u5374\u3059\u308c\u3070\u3001\u629c\u3051\u305f\u3068\u3053\u308d\u3067\u30d6\u30ec\u30fc\u30af\u51e6\u7406\u3084\u975e\u30d6\u30ec\u30fc\u30af\u51e6\u7406\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u3060\u3051\u66f8\u304f\u3068\u21e9\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\nif ( int ret = [&]()->int { {\u30eb\u30fc\u30d7{\u30d6\u30ec\u30fc\u30af\u3057\u305f\u3044\u6642return x;} } return 0;}() )\n{\n\u3000\u3000\u30d6\u30ec\u30fc\u30af\u6642\u306e\u51e6\u7406;\n}\nelse\n{\n\u3000\u3000\u6700\u5f8c\u307e\u3067\u56de\u3063\u305f\u6642\u306e\u51e6\u7406;\n}\n\u592a\u6587\u5b57\u90e8\u5206\u304c\u30e9\u30e0\u30c0\u5f0f\u3067\u3059\u3002\u30e9\u30e0\u30c0\u5f0f\u3092\u5b9a\u7fa9\u3057\u3066\u305d\u306e\u307e\u307e\u5b9f\u884c\u3057\u3001\u305d\u306e\u623b\u308a\u5024\u3092ret\u5909\u6570\u3078\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u300c\u3053\u3053\u3067\u30eb\u30fc\u30d7\u300d\u306e\u4e2d\u3067\u3001return x;\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u30eb\u30fc\u30d7\u3084switch\u3092\u5168\u3066\u4e2d\u65ad\u3057\u3001x\u3092ret\u3078\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u3053\u306eret\u5909\u6570\u306f\u3001then\u7bc0\u5185\u3067\u3082\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\uff08else\u7bc0\u5185\u3067\u3082\u3082\u3061\u308d\u3093\u53c2\u7167\u3067\u304d\u307e\u3059\u304c\u3001\u5e38\u306b0\u306a\u306e\u3067\u610f\u5473\u306a\u3044\u3067\u3059\u3002\uff09\n\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nTRY(ret)\n{\n    \u30eb\u30fc\u30d7\n    {\n        \u30d6\u30ec\u30fc\u30af\u3057\u305f\u3044\u6642\u3001BREAK(x); // \u305f\u3060\u3057\u3001x\u306fint\u578b\u3067x!=0\n    }\n}\nBROKEN()\n{\n    \u30d6\u30ec\u30fc\u30af\u6642\u306e\u51e6\u7406; // ret\u306bBREAK(x)\u306ex\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3002\n}\nNOT_BROKEN()\n{\n    \u6700\u5f8c\u307e\u3067\u56de\u3063\u305f\u6642\u306e\u51e6\u7406; // ret\u306f\u5e38\u306b0\n}\n\n\u4ee5\u4e0b\u3001\u30bd\u30fc\u30b9\u3067\u3059\u3002\u6709\u52b9\u884c\u306f\u305f\u3063\u305f5\u884c\u3067\u3059\u3002\u3067\u3082\u3053\u306e5\u884c\u3060\u3051\u3060\u3068\u3001\u78ba\u5b9f\u306b\u30cf\u30de\u308b\u306e\u3067\u30b3\u30e1\u30f3\u30c8\u3092\u4ed8\u3051\u3066\u307e\u3059\u3002\n\nstrong_break.h\n// ***************************************************************************\n//      \u30b9\u30c8\u30ed\u30f3\u30b0\u30fb\u30d6\u30ec\u30fc\u30af\n//          \u4f7f\u3044\u65b9\u4f8b\u2460\uff1a\n//              TRY(ret)        // \u5185\u90e8\u3067int ret;\u3068\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u3002\n//              {\n//                  while(...)\n//                  {\n//                      :\n//                      while(...)\n//                      {\n//                          :\n//                          switch(...)\n//                          {\n//                              :\n//              BREAK(1);       // ret\u306b1\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u3002\n//                              :\n//                          }\n//                          :\n//                      }\n//                      :\n//                  }\n//              }\n//              BROKEN()        // BREAK(x);\u3057\u305f\u3002(\u305f\u3060\u3057\u3001x!=0)\n//              {\n//                  std::cout << \"BROKEN(ret=\" << ret << \")\\n\";\n//              }\n//              NOT_BROKEN()    // \u30eb\u30fc\u30d7\u3092\u6700\u5f8c\u307e\u3067\u56de\u3063\u305f(\u3082\u3057\u304f\u306fBREAK(0);\u3057\u305f\u3002)\n//              {\n//                  std::cout << \"NOT_BROKEN\\n\";\n//              }\n//\n//          \u4f7f\u3044\u65b9\u4f8b\u2461(BROKEN\u306e\u307f)\uff1a\n//              TRY(ret)        // \u5185\u90e8\u3067int ret;\u3068\u5ba3\u8a00\u3055\u308c\u308b\u3002\n//              {\n//                  :\n//              BREAK(2);       // ret\u306b2\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u3002\n//                  :\n//              }\n//              BROKEN()        // BREAK(x);\u3057\u305f\u3002(\u305f\u3060\u3057\u3001x!=0)\n//              {\n//                  std::cout << \"BROKEN(ret=\" << ret << \")\\n\";\n//              }\n//\n//          \u4f7f\u3044\u65b9\u4f8b\u2462(COMPLETED\u306e\u307f)\uff1a\n//              TRY(ret)        // \u5185\u90e8\u3067int ret;\u3068\u5ba3\u8a00\u3055\u308c\u308b\u3002\n//              {\n//                  :\n//              BREAK(3);       // ret\u306b3\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u3002\n//                  :\n//              }\n//              COMPLETED()     // \u30eb\u30fc\u30d7\u3092\u6700\u5f8c\u307e\u3067\u56de\u3063\u305f(\u3082\u3057\u304f\u306fBREAK(0);\u3057\u305f\u3002)\n//              {\n//                  std::cout << \"COMPLETED()\\n\";\n//              }\n// ***************************************************************************\n\n#pragma once\n\n#define TRY(dVar)       if (int dVar=[&]()->int {\n#define BREAK(dValue)   return dValue\n#define BROKEN()        return 0;}())\n#define NOT_BROKEN()    else\n#define COMPLETED()     return 0;}()){}else\n\n\n\u4ee5\u4e0b\u4f7f\u7528\u4f8b\u3067\u3059\u3002\n\nstrong_break.cpp\n#include <iostream>\nusing namespace std;\n\n#include \"strong_break.h\"\n#include \"extent.h\"\n\nint main()\n{\n    int const values[]={4,2,9,3,6};\n\n    // \u5358\u30eb\u30fc\u30d7\u304b\u3089\u8131\u51fa\u3057\u3001\u30d6\u30ec\u30fc\u30af\u3057\u305f\u6642\u306b\u51e6\u7406\n    TRY(ret)\n    {\n        for (int i=0; i < EXTENT(values); ++i) {\n            if (values[i] == 3)\n    BREAK(i+1);\n        }\n    }\n    BROKEN()\n    {\n        std::cout << \"BROKEN(ret=\" << ret << \")\\n\";\n    }\n\n    // \u5358\u30eb\u30fc\u30d7\u304b\u3089\u8131\u51fa\u3057\u3001\u30d6\u30ec\u30fc\u30af\u3057\u305f\u6642\u3068\u3057\u306a\u304b\u3063\u305f\u6642\u306e\u4e21\u65b9\u3067\u51e6\u7406\n    TRY(ret)\n    {\n        for (int i=0; i < EXTENT(values); ++i) {\n            if (values[i] == 10)\n    BREAK(i+1);\n        }\n    }\n    BROKEN()\n    {\n        std::cout << \"BROKEN(ret=\" << ret << \")\\n\";\n    }\n    NOT_BROKEN()\n    {\n        std::cout << \"NOT_BROKEN(ret=\" << ret << \")\\n\";\n    }\n\n    // \u5358\u30eb\u30fc\u30d7\u304b\u3089\u8131\u51fa\u3057\u3001\u6700\u5f8c\u307e\u3067\u5b9f\u884c\u3057\u305f\u6642(=\u30d6\u30ec\u30fc\u30af\u3057\u306a\u304b\u3063\u305f\u6642)\u306b\u51e6\u7406\n    TRY(ret)\n    {\n        for (int i=0; i < EXTENT(values); ++i) {\n            if (values[i] == 10)\n    BREAK(i+1);\n        }\n    }\n    COMPLETED()\n    {\n        std::cout << \"COMPLETED(ret=\" << ret << \")\\n\";\n    }\n\n    // \u591a\u91cd\u30eb\u30fc\u30d7\u304b\u3089\u306e\u8131\u51fa\n    int const values2D[][2]={{4,0},{2,6},{9,7},{3,2},{6,1}};\n    TRY(ret)\n    {\n        for (int i=0; i < EXTENT_N(values2D, 0); ++i) {\n            for (int j=0; j < EXTENT_N(values2D, 1); ++j) {\n                if (values2D[i][j] == 6) {\n    BREAK(i+1);\n                }\n            }\n        }\n    }\n    BROKEN()\n    {\n        std::cout << \"BROKEN(ret=\" << ret << \")\\n\";\n    }\n\n    // \u30eb\u30fc\u30d7\u5185\u306eswitch\u304b\u3089\u306e\u30eb\u30fc\u30d7\u8131\u51fa\n    TRY(ret)\n    {\n        for (int i=0; i < EXTENT(values); ++i) {\n            switch(values[i])\n            {\n            case 0:\n                break;\n            case 1:\n                break;\n            case 9:\n    BREAK(i+1);\n            }\n        }\n    }\n    BROKEN()\n    {\n        std::cout << \"BROKEN(ret=\" << ret << \")\\n\";\n    }\n\n    return 0;\n}\n\n\nC++11\u5bfe\u5fdc\u304c\u5fc5\u8981\u3067\u3059\u3002MSVC 2015\u3068MinGW 4.9.2\u306e-std=c++11\u30aa\u30d7\u30b7\u30e7\u30f3\u4ed8\u304d\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\n\u3010\u9591\u8a71\u4f11\u984c\u3011\n\u672c\u5f53\u306f\u3001TRY {...} CATCH(int e) {...}\u307f\u305f\u3044\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u79c1\u306e\u982d\u3067\u306f\u3044\u304f\u3089\u8003\u3048\u3066\u3082\u3067\u304d\u305d\u3046\u306b\u306a\u304b\u3063\u305f\u306e\u3067\u8ae6\u3081\u307e\u3057\u305f\u3002\nTRY(int ret)\u307f\u305f\u3044\u306b\u300c\u623b\u308a\u5024\u306e\u578b\u300d\u3092\u30e6\u30fc\u30b6\u304c\u5b9a\u7fa9\u3059\u308b\u3088\u3046\u306b\u3082\u3067\u304d\u308b\u7b48\u3067\u3059\u304c\u3001\u4f7f\u3046\u306e\u304c\u96e3\u3057\u304f\u306a\u308a\u305d\u3046\uff08bool\u3078\u306e\u6697\u9ed9\u306e\u578b\u5909\u63db\u304c\u5fc5\u9808\uff09\u306a\u5272\u306b\u30e1\u30ea\u30c3\u30c8\u304c\u5c11\u306a\u3044\u306e\u3067\u3053\u3061\u3089\u3082\u65ad\u5ff5\u3057\u3066\u307e\u3059\u3002\n\n4.\u6700\u5f8c\u306b\n\u6b63\u76f4\u3001\u304b\u306a\u308a\u610f\u8868\u3092\u7a81\u304f\u5b9f\u88c5\u3068\u601d\u3044\u307e\u3059\u3002\n\u52dd\u8ca0\u3054\u3068\u306a\u3089\u610f\u8868\u3092\u7a81\u304f\u306e\u306f\u826f\u3044\u3053\u3068\u3067\u3059\u304c\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u4e16\u754c\u3067\u306f\u91cd\u3005\u614e\u3080\u3079\u304d\u3053\u3068\u3067\u3059\u3002\u77e5\u3089\u306a\u3044\u4eba\u306b\u3068\u3063\u3066\u3001\u975e\u5e38\u306b\u8ff7\u60d1\u306a\u8a71\u3067\u3059\u304b\u3089\u3002\n\u3067\u3059\u306e\u3067\u3001\u696d\u52d9\u3067\u306f\u4f7f\u3046\u524d\u306b\u95a2\u4fc2\u8005\u306e\u4e86\u89e3\u3092\u5f97\u308b\u3053\u3068\u3092\u304a\u85a6\u3081\u3057\u307e\u3059\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7279\u6027\u306b\u3088\u3063\u3066\u306f\u4f7f\u3046\u3079\u304d\u3067\u306a\u3044\u30b1\u30fc\u30b9\u3082\u3042\u308a\u307e\u3059\u306e\u3067\u3002\n\u56e0\u307f\u306b\u3001\u3053\u308c\u306e\u7c21\u6613\u7248\u306b\u3064\u3044\u3066teratail\u3067\u610f\u898b\u3092\u805e\u3044\u3066\u307f\u305f\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u53ef\u8aad\u6027\u306e\u9762\u304b\u3089\u4f7f\u308f\u306a\u3044\u3068\u306e\u56de\u7b54\u304c\u5927\u534a\u3067\u3057\u305f\u3002\u305d\u306e\u5f8c\u898b\u3064\u3051\u305f\u306e\u3067\u3059\u304c\u3001stackoverflow\u306e4\u5e74\u524d\u306eQA\u3067\u76f4\u63a5\u30e9\u30e0\u30c0\u5f0f\u3092\u4f7f\u3046\u6848\u306b\u3064\u3044\u3066\u3001\u540c\u69d8\u306a\u8b70\u8ad6\u304c\u3055\u308c\u3066\u307e\u3057\u305f\u3002\u56de\u7b54\u3082\u5927\u5dee\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3053\u306e\u6642\u3088\u308a\u81ea\u7136\u306a\u69cb\u6587\u3067\u304b\u3051\u308b\u3088\u3046\u306b\u3067\u304d\u305f\u3057\u3001goto\u4f7f\u3046\u3088\u308a\u30b3\u30fc\u30c9\u3092\u7dba\u9e97\u306b\u4fdd\u3066\u308b\u306e\u3067\u3001\u79c1\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u4f7f\u3044\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306f[ADVENTAR\u306eC++ Advent Calender 2015](http://www.adventar.org/calendars/926)\u306e18\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u3068\u3053\u308d\u3067\u3001\u5f53\u6295\u7a3f\u306f[Qiita\u306eC++ Advent Calendar 2015](http://qiita.com/advent-calendar/2015/c_plusplus_programming_language)\u306e\u8a18\u4e8b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u5b9f\u306f\u3001ADVENTAR\u3078\u6295\u7a3f\u3092\u767b\u9332\u3057\u305f\u5f53\u8a18\u4e8b\u304c\u601d\u3063\u305f\u3088\u308a\u81a8\u3089\u3093\u3060\u305f\u3081\u3001\u5206\u5272\u3057\u3066\u4e00\u90e8\u3092Qiita\u306eC++\u30ab\u30ec\u30f3\u30c0\u30fc\u3078[\u6295\u7a3f](http://qiita.com/Chironian/items/643d2e1a25d4f258f3e4)\u3055\u305b\u3066\u9802\u3044\u3066\u304a\u308a\u307e\u3059\u3002\n\n#1.\u306f\u3058\u3081\u306b\n\u79c1\u306f\u3001\u6298\u89d2\u306eC++\u3092\u30d9\u30bf\u30fcC\u3068\u3057\u3066\u9577\u5e74\u4f7f\u3063\u3066\u307e\u3057\u305f\u304c\u3001\u53bb\u5e74\u3001\u4eca\u66f4\u3067\u3059\u304cC++11\u898f\u683c\u306e\u5b58\u5728\u3092\u77e5\u308aC++\u306e\u767a\u5c55\u306b\u3073\u3063\u304f\u308a\u3002\u30d0\u30ea\u30d0\u30ea\u4f7f\u3044\u59cb\u3081\u3066\u3001\u591a\u5c11\u306f\u5f79\u306b\u7acb\u3061\u305d\u3046\u306a\u5c0f\u6280\u30c4\u30fc\u30eb\u3092\u3044\u304f\u3064\u304b\u4f5c\u3063\u305f\u306e\u3067\u3001\u305d\u306e\u4e2d\u304b\u3089\uff12\u3064\u3001\u3054\u7d39\u4ecb\u3055\u305b\u3066\u9802\u304d\u307e\u3059\u3002\n\u3082\u3057\u3001\u304a\u5f79\u306b\u7acb\u3064\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u5e78\u3044\u3067\u3059\u3002\n#2.\u307e\u305a\u306f\u8efd\u304fstd::extent<>\u7528\u30de\u30af\u30ed\nC++11\u3067\u898f\u683c\u3055\u308c\u305f\u591a\u6b21\u5143\u751f\u914d\u5217\u306e\u8981\u7d20\u6570\u3092\u53d6\u3063\u3066\u304f\u308b[std::extent<>](http://www.cplusplus.com/reference/type_traits/extent/)\u306f\u4fbf\u5229\u306a\u306e\u3067\u3059\u304c\u3001\u30e9\u30e0\u30c0\u5f0f\u306e\u4e2d\u306a\u3069\u3067\u53c2\u7167\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3068\u4f7f\u3048\u307e\u305b\u3093\u3002\u53c2\u7167\u3092[std::remove_reference<>](http://www.cplusplus.com/reference/type_traits/remove_reference/)\u3067\u5916\u305b\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u6ec5\u591a\u77e2\u9c48\u9577\u304f\u306a\u308b\u306e\u3067\u5acc\u3089\u3057\u3044\u3067\u3059\u3002\n\u3053\u3093\u306a\u6642\u306f\u3001\u30bf\u30a4\u30d7\u91cf\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u30de\u30af\u30ed\u5316\u3067\u3059\u3002EXTENT()\u306f\uff11\u6b21\u5143\u7528\u3001EXTENT_N()\u306f\u591a\u6b21\u5143\u7528\u3067\u3059\u3002\n\u4f7f\u3044\u65b9\u306f\u6b21\u7bc0\u3092\u53c2\u7167\u4e0b\u3055\u3044\u3002\u65e9\u901f\u30e9\u30e0\u30c0\u5f0f\u306e\u4e2d\u3067\u4f7f\u3063\u3066\u307e\u3059\u3002\n\n```extent.h\n#include <type_traits>\n\n#define EXTENT(dType)           \\\n    std::extent<typename std::remove_reference<decltype(dType)>::type, 0>::value\n#define EXTENT_N(dType, dRank)  \\\n    std::extent<typename std::remove_reference<decltype(dType)>::type, dRank>::value\n```\n\n#3.\u672c\u547d\u3001\u30b9\u30c8\u30ed\u30f3\u30b0\u30fb\u30d6\u30ec\u30fc\u30af\n\u591a\u91cd\u30eb\u30fc\u30d7\u3084\u30eb\u30fc\u30d7\u306e\u4e2d\u306eswitch\u304b\u3089\u30eb\u30fc\u30d7\u8131\u51fa\u306b\u82e6\u52b4\u3055\u308c\u305f\u65b9\u306f\u3044\u307e\u305b\u3093\u304b\uff1f\u3000\u305d\u3093\u306a\u3042\u306a\u305f\u306b\u6717\u5831(?)\u3067\u3059\u3002\n\nC++11\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f[\u30e9\u30e0\u30c0\u5f0f](http://kaworu.jpn.org/cpp/%E3%83%A9%E3%83%A0%E3%83%80%E5%BC%8F)\u306f\u3001return;\u3067\u547c\u3073\u51fa\u3057\u5143\u306b\u623b\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30e9\u30e0\u30c0\u5f0f\u306f\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u304b\u3089\u3001\u305d\u306e\u307e\u307e\u76f4\u63a5\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3092\u4f7f\u3063\u3066\u30e9\u30e0\u30c0\u5f0f\u3092\u305d\u306e\u5834\u5b9f\u884c\u3057\u3001\u5185\u90e8\u306e\u591a\u91cd\u30eb\u30fc\u30d7\u304b\u3089return;\u3059\u308b\u3068\u3001\u3042\u3089\u4e0d\u601d\u8b70\u3001\u591a\u91cd\u30eb\u30fc\u30d7\u3092\u30d6\u30ec\u30fc\u30af\u3067\u304d\u307e\u3059\u3002\n\n\u66f4\u306b\u623b\u308a\u5024\u3092\u8fd4\u5374\u3067\u304d\u308b\u306e\u3067\u3001\u6700\u5f8c\u307e\u3067\u56de\u3063\u305f\u30890\u3001\u30d6\u30ec\u30fc\u30af\u3057\u305f\u30890\u4ee5\u5916\u3092\u8fd4\u5374\u3059\u308c\u3070\u3001\u629c\u3051\u305f\u3068\u3053\u308d\u3067\u30d6\u30ec\u30fc\u30af\u51e6\u7406\u3084\u975e\u30d6\u30ec\u30fc\u30af\u51e6\u7406\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u3060\u3051\u66f8\u304f\u3068\u21e9\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\nif ( int ret = **\\[&\\]()->int { {\u30eb\u30fc\u30d7{\u30d6\u30ec\u30fc\u30af\u3057\u305f\u3044\u6642return x;} } return 0;}()** )\n{\n\u3000\u3000\u30d6\u30ec\u30fc\u30af\u6642\u306e\u51e6\u7406;\n}\nelse\n{\n\u3000\u3000\u6700\u5f8c\u307e\u3067\u56de\u3063\u305f\u6642\u306e\u51e6\u7406;\n}\n\n\u592a\u6587\u5b57\u90e8\u5206\u304c[\u30e9\u30e0\u30c0\u5f0f](http://kaworu.jpn.org/cpp/%E3%83%A9%E3%83%A0%E3%83%80%E5%BC%8F)\u3067\u3059\u3002\u30e9\u30e0\u30c0\u5f0f\u3092\u5b9a\u7fa9\u3057\u3066\u305d\u306e\u307e\u307e\u5b9f\u884c\u3057\u3001\u305d\u306e\u623b\u308a\u5024\u3092ret\u5909\u6570\u3078\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u300c\u3053\u3053\u3067\u30eb\u30fc\u30d7\u300d\u306e\u4e2d\u3067\u3001return x;\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u30eb\u30fc\u30d7\u3084switch\u3092\u5168\u3066\u4e2d\u65ad\u3057\u3001x\u3092ret\u3078\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u3053\u306eret\u5909\u6570\u306f\u3001then\u7bc0\u5185\u3067\u3082\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\uff08else\u7bc0\u5185\u3067\u3082\u3082\u3061\u308d\u3093\u53c2\u7167\u3067\u304d\u307e\u3059\u304c\u3001\u5e38\u306b0\u306a\u306e\u3067\u610f\u5473\u306a\u3044\u3067\u3059\u3002\uff09\n\n\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```cpp\nTRY(ret)\n{\n    \u30eb\u30fc\u30d7\n    {\n        \u30d6\u30ec\u30fc\u30af\u3057\u305f\u3044\u6642\u3001BREAK(x); // \u305f\u3060\u3057\u3001x\u306fint\u578b\u3067x!=0\n    }\n}\nBROKEN()\n{\n    \u30d6\u30ec\u30fc\u30af\u6642\u306e\u51e6\u7406; // ret\u306bBREAK(x)\u306ex\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3002\n}\nNOT_BROKEN()\n{\n    \u6700\u5f8c\u307e\u3067\u56de\u3063\u305f\u6642\u306e\u51e6\u7406; // ret\u306f\u5e38\u306b0\n}\n```\n\u4ee5\u4e0b\u3001\u30bd\u30fc\u30b9\u3067\u3059\u3002\u6709\u52b9\u884c\u306f\u305f\u3063\u305f5\u884c\u3067\u3059\u3002\u3067\u3082\u3053\u306e5\u884c\u3060\u3051\u3060\u3068\u3001\u78ba\u5b9f\u306b\u30cf\u30de\u308b\u306e\u3067\u30b3\u30e1\u30f3\u30c8\u3092\u4ed8\u3051\u3066\u307e\u3059\u3002\n\n```strong_break.h\n// ***************************************************************************\n//      \u30b9\u30c8\u30ed\u30f3\u30b0\u30fb\u30d6\u30ec\u30fc\u30af\n//          \u4f7f\u3044\u65b9\u4f8b\u2460\uff1a\n//              TRY(ret)        // \u5185\u90e8\u3067int ret;\u3068\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u3002\n//              {\n//                  while(...)\n//                  {\n//                      :\n//                      while(...)\n//                      {\n//                          :\n//                          switch(...)\n//                          {\n//                              :\n//              BREAK(1);       // ret\u306b1\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u3002\n//                              :\n//                          }\n//                          :\n//                      }\n//                      :\n//                  }\n//              }\n//              BROKEN()        // BREAK(x);\u3057\u305f\u3002(\u305f\u3060\u3057\u3001x!=0)\n//              {\n//                  std::cout << \"BROKEN(ret=\" << ret << \")\\n\";\n//              }\n//              NOT_BROKEN()    // \u30eb\u30fc\u30d7\u3092\u6700\u5f8c\u307e\u3067\u56de\u3063\u305f(\u3082\u3057\u304f\u306fBREAK(0);\u3057\u305f\u3002)\n//              {\n//                  std::cout << \"NOT_BROKEN\\n\";\n//              }\n//\n//          \u4f7f\u3044\u65b9\u4f8b\u2461(BROKEN\u306e\u307f)\uff1a\n//              TRY(ret)        // \u5185\u90e8\u3067int ret;\u3068\u5ba3\u8a00\u3055\u308c\u308b\u3002\n//              {\n//                  :\n//              BREAK(2);       // ret\u306b2\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u3002\n//                  :\n//              }\n//              BROKEN()        // BREAK(x);\u3057\u305f\u3002(\u305f\u3060\u3057\u3001x!=0)\n//              {\n//                  std::cout << \"BROKEN(ret=\" << ret << \")\\n\";\n//              }\n//\n//          \u4f7f\u3044\u65b9\u4f8b\u2462(COMPLETED\u306e\u307f)\uff1a\n//              TRY(ret)        // \u5185\u90e8\u3067int ret;\u3068\u5ba3\u8a00\u3055\u308c\u308b\u3002\n//              {\n//                  :\n//              BREAK(3);       // ret\u306b3\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u3002\n//                  :\n//              }\n//              COMPLETED()     // \u30eb\u30fc\u30d7\u3092\u6700\u5f8c\u307e\u3067\u56de\u3063\u305f(\u3082\u3057\u304f\u306fBREAK(0);\u3057\u305f\u3002)\n//              {\n//                  std::cout << \"COMPLETED()\\n\";\n//              }\n// ***************************************************************************\n\n#pragma once\n\n#define TRY(dVar)       if (int dVar=[&]()->int {\n#define BREAK(dValue)   return dValue\n#define BROKEN()        return 0;}())\n#define NOT_BROKEN()    else\n#define COMPLETED()     return 0;}()){}else\n```\n\u4ee5\u4e0b\u4f7f\u7528\u4f8b\u3067\u3059\u3002\n\n```strong_break.cpp\n#include <iostream>\nusing namespace std;\n\n#include \"strong_break.h\"\n#include \"extent.h\"\n\nint main()\n{\n    int const values[]={4,2,9,3,6};\n\n    // \u5358\u30eb\u30fc\u30d7\u304b\u3089\u8131\u51fa\u3057\u3001\u30d6\u30ec\u30fc\u30af\u3057\u305f\u6642\u306b\u51e6\u7406\n    TRY(ret)\n    {\n        for (int i=0; i < EXTENT(values); ++i) {\n            if (values[i] == 3)\n    BREAK(i+1);\n        }\n    }\n    BROKEN()\n    {\n        std::cout << \"BROKEN(ret=\" << ret << \")\\n\";\n    }\n\n    // \u5358\u30eb\u30fc\u30d7\u304b\u3089\u8131\u51fa\u3057\u3001\u30d6\u30ec\u30fc\u30af\u3057\u305f\u6642\u3068\u3057\u306a\u304b\u3063\u305f\u6642\u306e\u4e21\u65b9\u3067\u51e6\u7406\n    TRY(ret)\n    {\n        for (int i=0; i < EXTENT(values); ++i) {\n            if (values[i] == 10)\n    BREAK(i+1);\n        }\n    }\n    BROKEN()\n    {\n        std::cout << \"BROKEN(ret=\" << ret << \")\\n\";\n    }\n    NOT_BROKEN()\n    {\n        std::cout << \"NOT_BROKEN(ret=\" << ret << \")\\n\";\n    }\n\n    // \u5358\u30eb\u30fc\u30d7\u304b\u3089\u8131\u51fa\u3057\u3001\u6700\u5f8c\u307e\u3067\u5b9f\u884c\u3057\u305f\u6642(=\u30d6\u30ec\u30fc\u30af\u3057\u306a\u304b\u3063\u305f\u6642)\u306b\u51e6\u7406\n    TRY(ret)\n    {\n        for (int i=0; i < EXTENT(values); ++i) {\n            if (values[i] == 10)\n    BREAK(i+1);\n        }\n    }\n    COMPLETED()\n    {\n        std::cout << \"COMPLETED(ret=\" << ret << \")\\n\";\n    }\n\n    // \u591a\u91cd\u30eb\u30fc\u30d7\u304b\u3089\u306e\u8131\u51fa\n    int const values2D[][2]={{4,0},{2,6},{9,7},{3,2},{6,1}};\n    TRY(ret)\n    {\n        for (int i=0; i < EXTENT_N(values2D, 0); ++i) {\n            for (int j=0; j < EXTENT_N(values2D, 1); ++j) {\n                if (values2D[i][j] == 6) {\n    BREAK(i+1);\n                }\n            }\n        }\n    }\n    BROKEN()\n    {\n        std::cout << \"BROKEN(ret=\" << ret << \")\\n\";\n    }\n\n    // \u30eb\u30fc\u30d7\u5185\u306eswitch\u304b\u3089\u306e\u30eb\u30fc\u30d7\u8131\u51fa\n    TRY(ret)\n    {\n        for (int i=0; i < EXTENT(values); ++i) {\n            switch(values[i])\n            {\n            case 0:\n                break;\n            case 1:\n                break;\n            case 9:\n    BREAK(i+1);\n            }\n        }\n    }\n    BROKEN()\n    {\n        std::cout << \"BROKEN(ret=\" << ret << \")\\n\";\n    }\n\n    return 0;\n}\n```\nC++11\u5bfe\u5fdc\u304c\u5fc5\u8981\u3067\u3059\u3002MSVC 2015\u3068MinGW 4.9.2\u306e-std=c++11\u30aa\u30d7\u30b7\u30e7\u30f3\u4ed8\u304d\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3010\u9591\u8a71\u4f11\u984c\u3011\n\u672c\u5f53\u306f\u3001`TRY {...} CATCH(int e) {...}`\u307f\u305f\u3044\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u79c1\u306e\u982d\u3067\u306f\u3044\u304f\u3089\u8003\u3048\u3066\u3082\u3067\u304d\u305d\u3046\u306b\u306a\u304b\u3063\u305f\u306e\u3067\u8ae6\u3081\u307e\u3057\u305f\u3002\n`TRY(int ret)`\u307f\u305f\u3044\u306b\u300c\u623b\u308a\u5024\u306e\u578b\u300d\u3092\u30e6\u30fc\u30b6\u304c\u5b9a\u7fa9\u3059\u308b\u3088\u3046\u306b\u3082\u3067\u304d\u308b\u7b48\u3067\u3059\u304c\u3001\u4f7f\u3046\u306e\u304c\u96e3\u3057\u304f\u306a\u308a\u305d\u3046\uff08bool\u3078\u306e\u6697\u9ed9\u306e\u578b\u5909\u63db\u304c\u5fc5\u9808\uff09\u306a\u5272\u306b\u30e1\u30ea\u30c3\u30c8\u304c\u5c11\u306a\u3044\u306e\u3067\u3053\u3061\u3089\u3082\u65ad\u5ff5\u3057\u3066\u307e\u3059\u3002\n\n#4.\u6700\u5f8c\u306b\n\u6b63\u76f4\u3001\u304b\u306a\u308a\u610f\u8868\u3092\u7a81\u304f\u5b9f\u88c5\u3068\u601d\u3044\u307e\u3059\u3002\n\u52dd\u8ca0\u3054\u3068\u306a\u3089\u610f\u8868\u3092\u7a81\u304f\u306e\u306f\u826f\u3044\u3053\u3068\u3067\u3059\u304c\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u4e16\u754c\u3067\u306f\u91cd\u3005\u614e\u3080\u3079\u304d\u3053\u3068\u3067\u3059\u3002\u77e5\u3089\u306a\u3044\u4eba\u306b\u3068\u3063\u3066\u3001\u975e\u5e38\u306b\u8ff7\u60d1\u306a\u8a71\u3067\u3059\u304b\u3089\u3002\n\u3067\u3059\u306e\u3067\u3001\u696d\u52d9\u3067\u306f\u4f7f\u3046\u524d\u306b\u95a2\u4fc2\u8005\u306e\u4e86\u89e3\u3092\u5f97\u308b\u3053\u3068\u3092\u304a\u85a6\u3081\u3057\u307e\u3059\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7279\u6027\u306b\u3088\u3063\u3066\u306f\u4f7f\u3046\u3079\u304d\u3067\u306a\u3044\u30b1\u30fc\u30b9\u3082\u3042\u308a\u307e\u3059\u306e\u3067\u3002\n\n\u56e0\u307f\u306b\u3001\u3053\u308c\u306e\u7c21\u6613\u7248\u306b\u3064\u3044\u3066[teratail\u3067\u610f\u898b\u3092\u805e\u3044\u3066\u307f\u305f](https://teratail.com/questions/19023)\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u53ef\u8aad\u6027\u306e\u9762\u304b\u3089\u4f7f\u308f\u306a\u3044\u3068\u306e\u56de\u7b54\u304c\u5927\u534a\u3067\u3057\u305f\u3002\u305d\u306e\u5f8c\u898b\u3064\u3051\u305f\u306e\u3067\u3059\u304c\u3001[stackoverflow\u306e4\u5e74\u524d\u306eQA](http://stackoverflow.com/questions/6077718/is-this-a-valid-abuse-of-lambda-expressions)\u3067\u76f4\u63a5\u30e9\u30e0\u30c0\u5f0f\u3092\u4f7f\u3046\u6848\u306b\u3064\u3044\u3066\u3001\u540c\u69d8\u306a\u8b70\u8ad6\u304c\u3055\u308c\u3066\u307e\u3057\u305f\u3002\u56de\u7b54\u3082\u5927\u5dee\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u3053\u306e\u6642\u3088\u308a\u81ea\u7136\u306a\u69cb\u6587\u3067\u304b\u3051\u308b\u3088\u3046\u306b\u3067\u304d\u305f\u3057\u3001goto\u4f7f\u3046\u3088\u308a\u30b3\u30fc\u30c9\u3092\u7dba\u9e97\u306b\u4fdd\u3066\u308b\u306e\u3067\u3001\u79c1\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u4f7f\u3044\u307e\u3059\u3002\n", "tags": ["C++", "C++11"]}