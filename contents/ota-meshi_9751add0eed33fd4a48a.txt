{"context": "S3\u306e\u30c6\u30b9\u30c8\u7528\u30c0\u30df\u30fc\u30b5\u30fc\u30d0\u30fc\u306fFake S3\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u3068\u805e\u304d\u307e\u3057\u305f\u304cRuby\u3089\u3057\u304f\u3001\u79c1Java\u5c4b\u306a\u306e\u3067Java\u3067\u3082\u7121\u3044\u304b\u306a\u30fc\u3068\u63a2\u3057\u305f\u3089S3 ninja\u3068\u3044\u3046\u306e\u304c\u3042\u308a\u307e\u3057\u305f\u3002\nS3 ninja\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u305d\u3046\u3057\u307e\u3057\u3087\u3046\u3002\nFake S3\u306f\u307e\u305f\u4eca\u5ea6\u3002\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u308b\n\u901a\u5e38\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u4f7f\u3046\u3088\u3046\u3067\u3059\u304c\u3001\u9762\u5012\u306a\u306e\u3067\u3001\u4eca\u56de\u306fmaven\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3001Junit\u3067\u7121\u7406\u3084\u308a\u8d77\u52d5\u3055\u305b\u307e\u3059\u3002\n\npom.xml\n\npom.xml\n        <dependency>\n            <groupId>com.amazonaws</groupId>\n            <artifactId>aws-java-sdk-s3</artifactId>\n            <version>1.11.91</version>\n        </dependency>\n        <dependency>\n            <groupId>com.scireum</groupId>\n            <artifactId>s3ninja</artifactId>\n            <version>2.7</version>\n        </dependency>\n\n\n\nJUnit\u30b3\u30fc\u30c9\n\nTest.java\n    static {\n        //\u5fc5\u8981\u306a\u30d5\u30a9\u30eb\u30c0\u3092\u6398\u308b\n        try {\n            Files.createDirectories(Paths.get(\"data/s3\"));\n        } catch (IOException e) {\n        }\n\n        //s3ninja\u8d77\u52d5\n        Thread thread = new Thread(() -> {\n            try {\n                Method main = Class.forName(\"IPL\").getMethod(\"main\", new Class[] { String[].class });\n                main.invoke(null, (Object) new String[0]);\n            } catch (Exception e) {\n                throw new RuntimeException(e);\n            }\n        });\n        thread.start();\n\n        try {\n            Thread.sleep(1000);//\u5ff5\u306e\u305f\u3081\n        } catch (InterruptedException e) {\n        }\n\n    }\n\n    @Test\n    public void test() throws IOException {\n        AmazonS3 s3 = AmazonS3Client.builder()\n                .withEndpointConfiguration(new EndpointConfiguration(\"http://localhost:9444/s3\", null))\n                .withCredentials(new AWSStaticCredentialsProvider(\n                        new BasicAWSCredentials(\"AKIAIOSFODNN7EXAMPLE\", \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\")))\n                .withPathStyleAccessEnabled(true)\n                .withClientConfiguration(new ClientConfiguration().withSignerOverride(\"S3SignerType\"))\n                .build();\n\n        //\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\n        s3.putObject(new PutObjectRequest(\"bucket\", \"s3test.txt\", new File(\"test.txt\")));\n\n        //\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n        try (S3Object s3Object = s3.getObject(new GetObjectRequest(\"bucket\", \"s3test.txt\"));\n                InputStream input = s3Object.getObjectContent()) {\n            assertThat(IOUtils.toByteArray(input), is(Files.readAllBytes(Paths.get(\"test.txt\"))));\n        }\n\n    }\n\n\n\n\u8aac\u660e\n\n\u521d\u671f\u51e6\u7406\n\n\n\u5229\u7528\u3059\u308b\u306b\u306f./data/s3\u3068\u3044\u3046\u30d5\u30a9\u30eb\u30c0\u304c\u5fc5\u8981\u3089\u3057\u3044\u306e\u3067\u6398\u308a\u307e\u3059\u3002\n\nS3 ninja\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306b\u3001IPL#main\u3092\u547c\u3073\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30af\u30e9\u30b9\u306fimport\u51fa\u6765\u306a\u3044\u306e\u3067reflection\u3067\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n\nAmazonS3Client\u751f\u6210\n\n\nendpoint\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nCredentials\u306b\u5fc5\u8981\u306a\u5024\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002S3 ninja\u3092\u666e\u901a\u306b\u8d77\u52d5\u3057\u3066web\u753b\u9762\u958b\u3044\u305f\u3089\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\nPathStyleAccessEnabled\u3092true\u306b\u3057\u306a\u3044\u3068\u30c0\u30e1\u307f\u305f\u3044\u3067\u3059\u3002\n\"S3SignerType\"\u3068\u3044\u3046\u306e\u3092\u8a2d\u5b9a\u3057\u306a\u3044\u3068\u30c0\u30e1\u307f\u305f\u3044\u3067\u3059\u3002\n\n\n\u30c6\u30b9\u30c8\n\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3001\u305d\u308c\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u5143\u30d5\u30a1\u30a4\u30eb\u3068\u6bd4\u3079\u3066\u307e\u3059\u3002\n\n\n\n\n\u53c2\u8003\uff1a\n\u30ed\u30fc\u30ab\u30ebS3\u306a\u308bninja\u3092\u5165\u308c\u3066\u307f\u305f\n[S3](https://aws.amazon.com/jp/documentation/s3/)\u306e\u30c6\u30b9\u30c8\u7528\u30c0\u30df\u30fc\u30b5\u30fc\u30d0\u30fc\u306f[Fake S3](https://github.com/jubos/fake-s3)\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u3068\u805e\u304d\u307e\u3057\u305f\u304cRuby\u3089\u3057\u304f\u3001\u79c1Java\u5c4b\u306a\u306e\u3067Java\u3067\u3082\u7121\u3044\u304b\u306a\u30fc\u3068\u63a2\u3057\u305f\u3089[S3 ninja](http://s3ninja.net/)\u3068\u3044\u3046\u306e\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n[S3 ninja](http://s3ninja.net/)\n\n![ninja.jpg](http://s3ninja.net/assets/images/ninja.jpg)\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u305d\u3046\u3057\u307e\u3057\u3087\u3046\u3002\n[Fake S3](https://github.com/jubos/fake-s3)\u306f\u307e\u305f\u4eca\u5ea6\u3002\n\n# \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u308b\n\n\u901a\u5e38\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u4f7f\u3046\u3088\u3046\u3067\u3059\u304c\u3001\u9762\u5012\u306a\u306e\u3067\u3001\u4eca\u56de\u306fmaven\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3001Junit\u3067\u7121\u7406\u3084\u308a\u8d77\u52d5\u3055\u305b\u307e\u3059\u3002\n\n## pom.xml  \n\n```xml:pom.xml\n\t\t<dependency>\n\t\t\t<groupId>com.amazonaws</groupId>\n\t\t\t<artifactId>aws-java-sdk-s3</artifactId>\n\t\t\t<version>1.11.91</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.scireum</groupId>\n\t\t\t<artifactId>s3ninja</artifactId>\n\t\t\t<version>2.7</version>\n\t\t</dependency>\n```\n\n## JUnit\u30b3\u30fc\u30c9\n\n```java:Test.java\n\tstatic {\n\t\t//\u5fc5\u8981\u306a\u30d5\u30a9\u30eb\u30c0\u3092\u6398\u308b\n\t\ttry {\n\t\t\tFiles.createDirectories(Paths.get(\"data/s3\"));\n\t\t} catch (IOException e) {\n\t\t}\n\n\t\t//s3ninja\u8d77\u52d5\n\t\tThread thread = new Thread(() -> {\n\t\t\ttry {\n\t\t\t\tMethod main = Class.forName(\"IPL\").getMethod(\"main\", new Class[] { String[].class });\n\t\t\t\tmain.invoke(null, (Object) new String[0]);\n\t\t\t} catch (Exception e) {\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t});\n\t\tthread.start();\n\n\t\ttry {\n\t\t\tThread.sleep(1000);//\u5ff5\u306e\u305f\u3081\n\t\t} catch (InterruptedException e) {\n\t\t}\n\n\t}\n\n\t@Test\n\tpublic void test() throws IOException {\n\t\tAmazonS3 s3 = AmazonS3Client.builder()\n\t\t\t\t.withEndpointConfiguration(new EndpointConfiguration(\"http://localhost:9444/s3\", null))\n\t\t\t\t.withCredentials(new AWSStaticCredentialsProvider(\n\t\t\t\t\t\tnew BasicAWSCredentials(\"AKIAIOSFODNN7EXAMPLE\", \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\")))\n\t\t\t\t.withPathStyleAccessEnabled(true)\n\t\t\t\t.withClientConfiguration(new ClientConfiguration().withSignerOverride(\"S3SignerType\"))\n\t\t\t\t.build();\n\n\t\t//\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\n\t\ts3.putObject(new PutObjectRequest(\"bucket\", \"s3test.txt\", new File(\"test.txt\")));\n\n\t\t//\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\t\ttry (S3Object s3Object = s3.getObject(new GetObjectRequest(\"bucket\", \"s3test.txt\"));\n\t\t\t\tInputStream input = s3Object.getObjectContent()) {\n\t\t\tassertThat(IOUtils.toByteArray(input), is(Files.readAllBytes(Paths.get(\"test.txt\"))));\n\t\t}\n\n\t}\n```\n\n## \u8aac\u660e\n\n* \u521d\u671f\u51e6\u7406\n    * \u5229\u7528\u3059\u308b\u306b\u306f`./data/s3`\u3068\u3044\u3046\u30d5\u30a9\u30eb\u30c0\u304c\u5fc5\u8981\u3089\u3057\u3044\u306e\u3067\u6398\u308a\u307e\u3059\u3002\n    * **S3 ninja**\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306b\u3001IPL#main\u3092\u547c\u3073\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30af\u30e9\u30b9\u306fimport\u51fa\u6765\u306a\u3044\u306e\u3067reflection\u3067\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n* AmazonS3Client\u751f\u6210\n    * endpoint\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n    * Credentials\u306b\u5fc5\u8981\u306a\u5024\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002**S3 ninja**\u3092\u666e\u901a\u306b\u8d77\u52d5\u3057\u3066web\u753b\u9762\u958b\u3044\u305f\u3089\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n    * PathStyleAccessEnabled\u3092true\u306b\u3057\u306a\u3044\u3068\u30c0\u30e1\u307f\u305f\u3044\u3067\u3059\u3002\n    * \"S3SignerType\"\u3068\u3044\u3046\u306e\u3092\u8a2d\u5b9a\u3057\u306a\u3044\u3068\u30c0\u30e1\u307f\u305f\u3044\u3067\u3059\u3002\n* \u30c6\u30b9\u30c8\n    * \u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3001\u305d\u308c\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u5143\u30d5\u30a1\u30a4\u30eb\u3068\u6bd4\u3079\u3066\u307e\u3059\u3002\n\n\n\n---\n\n\u53c2\u8003\uff1a\n[\u30ed\u30fc\u30ab\u30ebS3\u306a\u308bninja\u3092\u5165\u308c\u3066\u307f\u305f](https://www.walksocket.com/archives/387)\n\n\n\n\n\n\n\n", "tags": ["AWS", "S3", "Java", "S3ninja", "JUnit"]}