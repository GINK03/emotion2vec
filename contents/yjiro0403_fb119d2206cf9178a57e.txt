{"context": " More than 1 year has passed since last update.\u305d\u3082\u305d\u3082\u306a\u3093\u3067Unity\u3067\u3084\u3089\u3093\u3068\u3044\u3051\u3093\u306e\u3058\u3083\uff01\uff01\n...\u3068\u3044\u3046\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u6fc0\u6012\u304b\u3089Visual Studio\u3067Oculus\u3092\u59cb\u3081\u307e\u3057\u305f.\n\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306f\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u4eca\u56de\u306fVisual Studio\u306e\u7c21\u5358\u306a\u74b0\u5883\u69cb\u7bc9+\u89d2\u5ea6\u53d6\u5f97\u30b3\u30fc\u30c9\u3092\n(Oculus\u306e\u5c0e\u5165\u65b9\u6cd5\u306f\u3044\u308d\u3093\u306a\u3068\u3053\u308d\u306b\u3042\u308b\u306e\u3067\u5272\u611b\u3057\u307e\u3059)\n\nVisual Studio\u306e\u74b0\u5883\u69cb\u7bc9\n\u4eca\u56de\u79c1\u306fVisual Studio2013\u3092\u4f7f\u7528.\nOculus SDK\u306eSamples\u306e\u4e2d\u304b\u3089sln\u3092\u8d77\u52d5\u3057\u3066\u898b\u306a\u304c\u3089\u3084\u308b\u3068\u3044\u3044\u304b\u3082.\n\u4ee5\u4e0bVisual Studio\u306e\u8a2d\u5b9a\n\n\u8ffd\u52a0\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n $(OVRSDKROOT)\\LibOVR\\Include\n $(OVRSDKROOT)\\LibOVRKernel\\Src\n\n$(OVRSDKROOT)\u306fOCULUS\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u305f\u3068\u3053\u308d\u3067\u3059\u304c\u304a\u305d\u3089\u304f\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u767b\u9332\u3055\u308c\u3066\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068.\n\n\u8ffd\u52a0\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n$(OVRSDKROOT)\\LibOVR\\Lib\\Windows\\Win32\\Debug\\VS2013\n$(OVRSDKROOT)\\LibOVRKernel\\Lib\\Windows\\Win32\\Debug\\VS2013\n\nVS2013\u306e\u3068\u3053\u308d\u306f\u74b0\u5883\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059.\n\n\u8ffd\u52a0\u306e\u5165\u529b\u30d5\u30a1\u30a4\u30eb\n$(OVRSDKROOT)\\LibOVRKernel\\Lib\\Windows\\Win32\\Debug\\VS2013\\LibOVRKernel.lib\n$(OVRSDKROOT)\\LibOVR\\Lib\\Windows\\$(Platform)\\$(Configuration)\\VS2013\\LibOVR.lib\n\n\u30e9\u30f3\u30bf\u30a4\u30e0\u30e9\u30a4\u30d6\u30e9\u30ea\n\u81ea\u5206\u306f/MTd\u306b\u3057\u3066\u3044\u307e\u3059. \u8a2d\u5b9a\u6b21\u7b2c\u3067\u306f\u52d5\u304b\u306a\u3044\u304b\u3082.\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\u4eca\u56deOculus\u306e\u59ff\u52e2\u3092\u51fa\u529b\u3059\u308b\u30b3\u30f3\u30bd\u30fc\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308a\u307e\u3057\u305f.\n\u7c21\u5358\u306a\u3082\u306e\u306a\u306e\u3067\u3053\u3053\u306b\u8f09\u305b\u307e\u3059.\n\nHeadTrack.cpp\n#include <stdio.h>\n#include <tchar.h>\n\n\n\n// TODO: \u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5fc5\u8981\u306a\u8ffd\u52a0\u30d8\u30c3\u30c0\u30fc\u3092\u3053\u3053\u3067\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n#include <Windows.h>\n#include <opencv.hpp>\n#include <highgui.hpp>\n#include <iostream>\n#include <fstream>\n#include <string>\n\n//oculus\u4f7f\u7528\n#include <OVR_CAPI_0_8_0.h>\n#include <Kernel/OVR_System.h>\n#include \"OVR_CAPI.h\"\n#include \"OVR_CAPI_GL.h\"\n\nusing namespace std;\nusing namespace OVR;\n\n\nvoid Application()\n{\n    ovrResult result = ovr_Initialize(nullptr);\n\n    if (OVR_FAILURE(result)){\n        cout << \"ovr_Initialize FAILURE\" << endl;\n        return;\n    }\n        //ovrHmd    hmd = nullptr;\n        ovrSession session;\n        ovrGraphicsLuid luid;\n        result = ovr_Create(&session, &luid);\n\n        if (result == ovrSuccess)\n        {\n\n            // Get more details about the HMD.\n            ovrHmdDesc desc = ovr_GetHmdDesc(session);\n            ovrSizei resolution = desc.Resolution;\n            //get oculus tracking\n            ovr_ConfigureTracking(session, ovrTrackingCap_Orientation |\n                ovrTrackingCap_MagYawCorrection |\n                ovrTrackingCap_Position, 0);\n            while (1){\n\n                // Do something with the HMD.\n                // Query the HMD for the current tracking state.\n                ovrTrackingState ts = ovr_GetTrackingState(session, ovr_GetTimeInSeconds(),NULL);\n                if (ts.StatusFlags & (ovrStatus_OrientationTracked | ovrStatus_PositionTracked))\n                {\n                    ovrPoseStatef pose = ts.HeadPose;\n\n                    cout << \"X=  \" << pose.ThePose.Orientation.x << endl;\n                    cout << \"y=  \" << pose.ThePose.Orientation.y << endl;\n                    cout << \"z=  \" << pose.ThePose.Orientation.z << endl;\n\n\n                    //\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u307f\n                    std::ofstream ofs(\"C:\\\\works\\\\KinectInteraction\\\\Debug\\\\HeadPosition.txt\");\n                    ofs << pose.ThePose.Orientation.y << endl;\n                    ofs << pose.ThePose.Orientation.x << endl;\n                    ofs << pose.ThePose.Orientation.z << endl;\n                    Sleep(100);\n                }\n\n                if (cv::waitKey(10) != -1)\n                    break;\n\n            }\n\n            ovr_Destroy(session);\n        }\n\n        ovr_Shutdown(); \n}\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n\n    Application();\n\n    return 0;\n}\n\n\n\nOpenCV\u5165\u3063\u3066\u308b\u3051\u3069\u9069\u5b9c\u5909\u3048\u3066\u304f\u3060\u3055\u3044 \u7b11\n\nHelp\n\u305f\u307e\u306b\u30ed\u30fc\u30eb\u30fb\u30d4\u30c3\u30c1\u30fb\u30e8\u30fc\u89d2\u304c\u53cd\u8ee2\u3057\u3066\u3082\u3068\u306b\u623b\u308a\u307e\u305b\u3093.\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5834\u5408\u306f\u3059\u3050\u306b\u623b\u308b\u306e\u306b...\n\u3060\u308c\u304b\u308f\u304b\u308b\u4eba\u304c\u3044\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\uff01\n\n\u53c2\u8003\n\u516c\u5f0f\u30b5\u30a4\u30c8\u306eDeveloper Guide\nLibOVR Reference Manual\n\u305d\u3082\u305d\u3082\u306a\u3093\u3067Unity\u3067\u3084\u3089\u3093\u3068\u3044\u3051\u3093\u306e\u3058\u3083\uff01\uff01\n...\u3068\u3044\u3046\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u6fc0\u6012\u304b\u3089Visual Studio\u3067Oculus\u3092\u59cb\u3081\u307e\u3057\u305f.\n\n\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306f\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u4eca\u56de\u306fVisual Studio\u306e\u7c21\u5358\u306a\u74b0\u5883\u69cb\u7bc9+\u89d2\u5ea6\u53d6\u5f97\u30b3\u30fc\u30c9\u3092\n(Oculus\u306e\u5c0e\u5165\u65b9\u6cd5\u306f\u3044\u308d\u3093\u306a\u3068\u3053\u308d\u306b\u3042\u308b\u306e\u3067\u5272\u611b\u3057\u307e\u3059)\n\n#Visual Studio\u306e\u74b0\u5883\u69cb\u7bc9\n\u4eca\u56de\u79c1\u306fVisual Studio2013\u3092\u4f7f\u7528.\nOculus SDK\u306eSamples\u306e\u4e2d\u304b\u3089sln\u3092\u8d77\u52d5\u3057\u3066\u898b\u306a\u304c\u3089\u3084\u308b\u3068\u3044\u3044\u304b\u3082.\n\n\u4ee5\u4e0bVisual Studio\u306e\u8a2d\u5b9a\n##\u8ffd\u52a0\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\n```\n $(OVRSDKROOT)\\LibOVR\\Include\n $(OVRSDKROOT)\\LibOVRKernel\\Src\n```\n\n$(OVRSDKROOT)\u306fOCULUS\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u305f\u3068\u3053\u308d\u3067\u3059\u304c\u304a\u305d\u3089\u304f\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u767b\u9332\u3055\u308c\u3066\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068.\n\n##\u8ffd\u52a0\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\n```\n$(OVRSDKROOT)\\LibOVR\\Lib\\Windows\\Win32\\Debug\\VS2013\n$(OVRSDKROOT)\\LibOVRKernel\\Lib\\Windows\\Win32\\Debug\\VS2013\n```\n\nVS2013\u306e\u3068\u3053\u308d\u306f\u74b0\u5883\u306b\u3088\u3063\u3066\u7570\u306a\u308a\u307e\u3059.\n\n##\u8ffd\u52a0\u306e\u5165\u529b\u30d5\u30a1\u30a4\u30eb\n\n```\n$(OVRSDKROOT)\\LibOVRKernel\\Lib\\Windows\\Win32\\Debug\\VS2013\\LibOVRKernel.lib\n$(OVRSDKROOT)\\LibOVR\\Lib\\Windows\\$(Platform)\\$(Configuration)\\VS2013\\LibOVR.lib\n```\n\n\u30e9\u30f3\u30bf\u30a4\u30e0\u30e9\u30a4\u30d6\u30e9\u30ea\n\u81ea\u5206\u306f/MTd\u306b\u3057\u3066\u3044\u307e\u3059. \u8a2d\u5b9a\u6b21\u7b2c\u3067\u306f\u52d5\u304b\u306a\u3044\u304b\u3082.\n\n#\u30d7\u30ed\u30b0\u30e9\u30e0\n\u4eca\u56deOculus\u306e\u59ff\u52e2\u3092\u51fa\u529b\u3059\u308b\u30b3\u30f3\u30bd\u30fc\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308a\u307e\u3057\u305f.\n\u7c21\u5358\u306a\u3082\u306e\u306a\u306e\u3067\u3053\u3053\u306b\u8f09\u305b\u307e\u3059.\n\n```cpp:HeadTrack.cpp\n#include <stdio.h>\n#include <tchar.h>\n\n\n\n// TODO: \u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5fc5\u8981\u306a\u8ffd\u52a0\u30d8\u30c3\u30c0\u30fc\u3092\u3053\u3053\u3067\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n#include <Windows.h>\n#include <opencv.hpp>\n#include <highgui.hpp>\n#include <iostream>\n#include <fstream>\n#include <string>\n\n//oculus\u4f7f\u7528\n#include <OVR_CAPI_0_8_0.h>\n#include <Kernel/OVR_System.h>\n#include \"OVR_CAPI.h\"\n#include \"OVR_CAPI_GL.h\"\n\nusing namespace std;\nusing namespace OVR;\n\n\nvoid Application()\n{\n\tovrResult result = ovr_Initialize(nullptr);\n\n\tif (OVR_FAILURE(result)){\n\t\tcout << \"ovr_Initialize FAILURE\" << endl;\n\t\treturn;\n\t}\n\t\t//ovrHmd    hmd = nullptr;\n\t\tovrSession session;\n\t\tovrGraphicsLuid luid;\n\t\tresult = ovr_Create(&session, &luid);\n\n\t\tif (result == ovrSuccess)\n\t\t{\n\n\t\t\t// Get more details about the HMD.\n\t\t\tovrHmdDesc desc = ovr_GetHmdDesc(session);\n\t\t\tovrSizei resolution = desc.Resolution;\n\t\t\t//get oculus tracking\n\t\t\tovr_ConfigureTracking(session, ovrTrackingCap_Orientation |\n\t\t\t\tovrTrackingCap_MagYawCorrection |\n\t\t\t\tovrTrackingCap_Position, 0);\n\t\t\twhile (1){\n\n\t\t\t\t// Do something with the HMD.\n\t\t\t\t// Query the HMD for the current tracking state.\n\t\t\t\tovrTrackingState ts = ovr_GetTrackingState(session, ovr_GetTimeInSeconds(),NULL);\n\t\t\t\tif (ts.StatusFlags & (ovrStatus_OrientationTracked | ovrStatus_PositionTracked))\n\t\t\t\t{\n\t\t\t\t\tovrPoseStatef pose = ts.HeadPose;\n\t\t\t\t\t\n\t\t\t\t\tcout << \"X=  \" << pose.ThePose.Orientation.x << endl;\n\t\t\t\t\tcout << \"y=  \" << pose.ThePose.Orientation.y << endl;\n\t\t\t\t\tcout << \"z=  \" << pose.ThePose.Orientation.z << endl;\n\t\t\t\t\t\n\n\t\t\t\t\t//\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u307f\n\t\t\t\t\tstd::ofstream ofs(\"C:\\\\works\\\\KinectInteraction\\\\Debug\\\\HeadPosition.txt\");\n\t\t\t\t\tofs << pose.ThePose.Orientation.y << endl;\n\t\t\t\t\tofs << pose.ThePose.Orientation.x << endl;\n\t\t\t\t\tofs << pose.ThePose.Orientation.z << endl;\n\t\t\t\t\tSleep(100);\n\t\t\t\t}\n\n\t\t\t\tif (cv::waitKey(10) != -1)\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tovr_Destroy(session);\n\t\t}\n\n\t\tovr_Shutdown();\t\n}\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n\n\tApplication();\n\n\treturn 0;\n}\n\n```\n\nOpenCV\u5165\u3063\u3066\u308b\u3051\u3069\u9069\u5b9c\u5909\u3048\u3066\u304f\u3060\u3055\u3044 \u7b11\n\n#Help\n\u305f\u307e\u306b\u30ed\u30fc\u30eb\u30fb\u30d4\u30c3\u30c1\u30fb\u30e8\u30fc\u89d2\u304c\u53cd\u8ee2\u3057\u3066\u3082\u3068\u306b\u623b\u308a\u307e\u305b\u3093.\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5834\u5408\u306f\u3059\u3050\u306b\u623b\u308b\u306e\u306b...\n\u3060\u308c\u304b\u308f\u304b\u308b\u4eba\u304c\u3044\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\uff01\n\n#\u53c2\u8003\n[\u516c\u5f0f\u30b5\u30a4\u30c8\u306eDeveloper Guide](http://static.oculus.com/documentation/pdfs/pcsdk/latest/dg.pdf)\n[LibOVR Reference Manual](https://developer.oculus.com/doc/0.8.0.0-libovr/index.html)\n", "tags": ["VC++", "Oculus"]}