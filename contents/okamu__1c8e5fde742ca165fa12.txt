{"context": "\n\n\u7d4c\u7def\n\n\u4eca\u6d41\u884c\u308a\u306eRancher\u3092\u4f7f\u3063\u3066docker\u30b3\u30f3\u30c6\u30ca\u3092\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\nRancher\u306b\u306f\u300cCATALOG\u300d\u3068\u3044\u3046docker-compose.yml\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u3092\u5143\u306b\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\u307e\u305f\u3069\u3093\u306a\u30b5\u30fc\u30d3\u30b9\u304b\u3044\u3064\u3082\u6c17\u306b\u306a\u3063\u3066\u305f\u306e\u3067\u3001\u3069\u3046\u305b\u306a\u3089\u4f7f\u3044\u3053\u306a\u3057\u305f\u3044\u306e\u3067\u5099\u5fd8\u9332\u3068\u3057\u3066\n\u8272\u3005\u306a\u30b5\u30fc\u30d3\u30b9\u306edocker-compose\u304c\u3042\u308b\u306e\u3067\u53c2\u8003\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\n\u307e\u305f\u3001glusterFS\u306e\u3088\u3046\u306b\u6d88\u3048\u3066\u3057\u307e\u3046\u524d\u306e\u30e1\u30e2\u3068\u3057\u3066\u3082\n\n\n\u4f7f\u3044\u65b9\n\n${xxx}\u306f\u9069\u5b9c\u3001\u5024\u3092\u4ee3\u5165\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u7279\u306b\u304a\u3059\u3059\u3081\n\nConsul\nElasticsearch\nHadoop + Yarn\nDatadog\nwordpress\n\n\ndocker-compose\u30b5\u30f3\u30d7\u30eb\n\nAlfresco\n\n\n\u30d5\u30a1\u30a4\u30eb\u5185\u5168\u6587\u691c\u7d22\u30fb\u30bf\u30b0\u4ed8\u3051\u3067\u30d5\u30a1\u30a4\u30eb\u304c\u975e\u5e38\u306b\u63a2\u3057\u3084\u3059\u3044\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u53c2\u7167/\u66f4\u65b0\u5c65\u6b74\u304c\u53ef\u8996\u5316\u3055\u308c\u3066\u30c1\u30fc\u30e0\u30b3\u30e9\u30dc\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3084\u3059\u304f\u306a\u308b\n\u5168\u6587\u691c\u7d22\u3067\u304d\u308b\u30d5\u30a1\u30a4\u30eb\u30b5\u30fc\u30d0\u3068\u3057\u3066\u306eAlfresco\n\n\ndocker-compose.yml\nalfresco:\n  environment:\n    CIFS_ENABLED: 'false'\n    FTP_ENABLED: 'false'\n  tty: true\n  image: webcenter/rancher-alfresco:v5.1-201605-1\n  links:\n  - postgres:db\n  stdin_open: true\n  ports:\n  - 8080:8080/tcp\n  volumes_from:\n    - alfresco-data\nalfresco-data:\n  image: alpine\n  volumes:\n  - /opt/alfresco/alf_data\n  net: none\n  command: /bin/true\npostgres:\n  environment:\n    PGDATA: /var/lib/postgresql/data/pgdata\n    POSTGRES_DB: ${database_name}\n    POSTGRES_PASSWORD: ${database_password}\n    POSTGRES_USER: ${database_user}\n  tty: true\n  image: postgres:9.4\n  stdin_open: true\n  volumes_from:\n    - postgres-data\npostgres-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  image: alpine\n  volumes:\n  - /var/lib/postgresql/data/pgdata\n  net: none\n  command: /bin/true\n\n\n\n\nApache Kafka\n\n\n2011\u5e74\u306bLinkedIn\u304b\u3089\u516c\u958b\u3055\u308c\u305f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u5206\u6563\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3067\u3042\u308b\uff0eKafka\u306f\u30a6\u30a7\u30d6\u30b5\u30fc\u30d3\u30b9\u306a\u3069\u304b\u3089\u767a\u305b\u3089\u308c\u308b\u5927\u5bb9\u91cf\u306e\u30c7\u30fc\u30bf\uff08e.g., \u30ed\u30b0\u3084\u30a4\u30d9\u30f3\u30c8\uff09\u3092\u9ad8\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8/\u4f4e\u30ec\u30a4\u30c6\u30f3\u30b7\u306b\u53ce\u96c6/\u914d\u4fe1\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u306b\u958b\u767a\u3055\u308c\u3066\u3044\u308b\uff0e\nFast \u3068\u306b\u304b\u304f\u5927\u91cf\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\nScalable Kafka\u306f\u30b7\u30f3\u30b0\u30eb\u30af\u30e9\u30b9\u30bf\u3067\u5927\u898f\u6a21\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u306a\u3057\u3067Elastic\u304b\u3064\u900f\u904e\u7684\u306b\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\nDurable \u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u30c7\u30a3\u30b9\u30af\u306b\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\uff0c\u304b\u3064\u30af\u30e9\u30b9\u30bf\u5185\u3067\u30ec\u30d7\u30ea\u30ab\u304c\u4f5c\u6210\u3055\u308c\u308b\u305f\u3081\u30c7\u30fc\u30bf\u306e\u640d\u5931\u3092\u9632\u3052\u308b\uff08\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u5f71\u97ff\u306a\u304fTB\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff09\nDistributed by Design \u30af\u30e9\u30b9\u30bf\u306f\u8010\u969c\u5bb3\u6027\u306e\u3042\u308b\u8a2d\u8a08\u306b\u306a\u3063\u3066\u3044\u308b\nApache Kafka\u306b\u5165\u9580\u3057\u305f\n\n\ndocker-compose.yml\n\nbroker:\n  tty: true\n  image: rawmind/alpine-kafka:0.10.0.1-1\n  volumes_from:\n    - broker-volume\n    - broker-conf\n  environment:\n    - JVMFLAGS=-Xmx${kafka_mem}m -Xms${kafka_mem}m\n    - CONFD_INTERVAL=${kafka_interval}\n    - ZK_SERVICE=${zk_link}\n    - KAFKA_DELETE_TOPICS=${kafka_delete_topics}\n    - KAFKA_LOG_DIRS=${kafka_log_dir}\n    - KAFKA_LOG_RETENTION_HOURS=${kafka_log_retention}\n    - KAFKA_NUM_PARTITIONS=${kafka_num_partitions}\n    - ADVERTISE_PUB_IP=${kafka_pub_ip}\n  external_links:\n    - ${zk_link}:zk\n  labels: \n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: broker-volume, broker-conf\nbroker-conf:\n  net: none\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  image: rawmind/rancher-kafka:0.10.0.0-3\n  volumes:\n    - /opt/tools\nbroker-volume:\n  net: none\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  environment:\n    - SERVICE_UID=10003\n    - SERVICE_GID=10003\n    - SERVICE_VOLUME=${kafka_log_dir}\n  volumes:\n    - ${kafka_log_dir}\n  volume_driver: local\n  image: rawmind/alpine-volume:0.0.2-1\n\n\n\n\nApache Zookeeper\n\n\n\u5206\u6563\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5411\u3051\u306e\u9ad8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306a\u5354\u8abf\u30b5\u30fc\u30d3\u30b9\n\u5206\u6563\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u4e0a\u3067\u5fc5\u8981\u3068\u306a\u308b,\u540c\u671f, \u8a2d\u5b9a\u7ba1\u7406, \u30b0\u30eb\u30fc\u30d4\u30f3\u30b0, \u540d\u524d\u7ba1\u7406, \u306a\u3069\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u30b5\u30fc\u30d3\u30b9\nzookeeper \u3068\u306f\n\n\ndocker-compose.yml\nzk:\n  tty: true\n  image: rawmind/alpine-zk:3.4.9\n  volumes_from:\n    - zk-volume\n    - zk-conf\n  environment:\n    - JVMFLAGS=-Xmx${zk_mem}m -Xms${zk_mem}m\n    - ZK_DATA_DIR=${zk_data_dir}\n    - ZK_INIT_LIMIT=${zk_init_limit}\n    - ZK_MAX_CLIENT_CXNS=${zk_max_client_cxns}\n    - ZK_SYNC_LIMIT=${zk_sync_limit}\n    - ZK_TICK_TIME=${zk_tick_time}\n  labels: \n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: zk-volume, zk-conf\nzk-conf:\n  net: none\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  image: rawmind/rancher-zk:3.4.8-5\n  volumes:\n    - /opt/tools\nzk-volume:\n  net: none\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  environment:\n    - SERVICE_UID=10002\n    - SERVICE_GID=10002\n    - SERVICE_VOLUME=${zk_data_dir}\n  volumes:\n    - ${zk_data_dir}\n  volume_driver: local\n  image: rawmind/alpine-volume:0.0.2-1\n\n\n\nasciinema.org\n\n\nAsciinema\u306f\u7aef\u672b\u306e\u64cd\u4f5c\u3092\u5171\u6709\u3067\u304d\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\n\u52d5\u753b\u306e\u30b7\u30fc\u30af\u304c\u3067\u304d\u308b\n\u52d5\u753b\u3092\u30c6\u30ad\u30b9\u30c8\u3068\u3057\u3066\u30b3\u30d4\u30fc\u3067\u304d\u308b\n\u5c0e\u5165\u304c\u7c21\u5358\n\u9332\u753b\u304c\u7c21\u5358\nAsciinema\u3067\u83ef\u9e97\u306b\u7aef\u672b\u64cd\u4f5c\u3092\u5171\u6709\u3059\u308b\n\n\ndocker-composer.yml\nasciinema-org:  \n  image: 'asciinema/asciinema.org:latest'\n  links:\n    - postgres\n    - redis\n  restart: always\n  ports:\n    - ${port}:3000\n  environment:\n    HOST: ${host}:${port}\n    DATABASE_URL: postgresql://postgres:${postgres_password}@postgres/asciinema\n    REDIS_URL: redis://redis:6379\n    RAILS_ENV: development\n\npostgres:\n  image: 'postgres:latest'\n  ports:\n    - 5432:5432\n  environment:\n    POSTGRES_PASSWORD: ${postgres_password}\n  container_name: postgres\n\nredis:\n  image: 'redis:latest'\n  ports:\n    - 6379:6379\n  container_name: redis\n\nsidekiq:\n  image: 'asciinema/asciinema.org:latest'\n  links:\n    - postgres\n    - redis\n  command: 'ruby start_sidekiq.rb'\n  environment:\n    HOST: ${host}:${port}\n    DATABASE_URL: postgresql://postgres:${postgres_password}@postgres/asciinema\n    REDIS_URL: redis://redis:6379\n    RAILS_ENV: development\n\n\n\n\n\nBind9 Domain Name Server\n\n\nDNS \u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u4e00\u3064\u3067\u3042\u308b BIND (Berkeley Internet Name Domain) \nBIND\u306f\u3001\u30b5\u30fc\u30d0(named)\u3001 \u30ea\u30be\u30eb\u30d0(libresolv.a)\u3001\u7ba1\u7406\u7528\u30d7\u30ed\u30b0\u30e9\u30e0(nslookup, dig) \u306a\u3069\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u4e00\u9023\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u7fa4\u3067\u3059\u3002 \u73fe\u5728\u306f\u3001Internet Software Consortium \u306b\u3088\u3063\u3066\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nDNS\u30b5\u30fc\u30d0\u69cb\u7bc9\u624b\u9806(\u30bd\u30fc\u30b9\u304b\u3089BIND 9.10.1-P1\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb + \u5185\u90e8\u5411\u3051\u6a29\u5a01DNS\u30b5\u30fc\u30d0\u69cb\u7bc9)\n\n\ndocker-compose.yml\nbind9:\n  image: digitallumberjack/docker-bind9:v1.2.0\n  ports: \n   - ${BIND9_PORT}:53/tcp\n   - ${BIND9_PORT}:53/udp\n  environment:\n    BIND9_ROOTDOMAIN: ${BIND9_ROOTDOMAIN}\n    BIND9_KEYNAME: ${BIND9_KEYNAME}\n    BIND9_KEY: ${BIND9_KEY}\n    BIND9_FORWARDERS: ${BIND9_FORWARDERS}\n    RANCHER_ENV: \"true\"\n\n\n\n\nCloud9\n\n\nCloud9\uff08\u30af\u30e9\u30a6\u30c99\uff09\u3068\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u3092\u30af\u30e9\u30a6\u30c9\u74b0\u5883\u3067\u5229\u7528\u3067\u304d\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002IDE\uff08\u7d71\u5408\u958b\u767a\u74b0\u5883\uff09\u3068\u3057\u3066\u306e\u6a5f\u80fd\u304c\u5145\u5b9f\u3057\u3066\u304a\u308a\u3001GitHub\u3084Heroku\u3068\u3044\u3063\u305f\u4ed6\u306e\u30c4\u30fc\u30eb\u3068\u306e\u9023\u643a\u3082\u30b9\u30e0\u30fc\u30ba\u306b\u884c\u3048\u307e\u3059\u3002\n\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u52d5\u304f\u305f\u3081\u3001PC\u306b\u4f9d\u5b58\u3059\u308b\u3053\u3068\u306a\u304f\u958b\u767a\u74b0\u5883\u3092\u6e96\u5099\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u304c\u5229\u70b9\u3067\u3059\u3002\u307e\u305f\u3001\u7121\u6599\u3067\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3082\u826f\u3055\u306e\u3072\u3068\u3064\u3067\u3059\u3002\nGitHub\u9023\u643a\u3067Cloud9\u3092\u4f7f\u3046\u306e\u306b\u632b\u6298\u3059\u308b\u307e\u3067\u306e\u6d41\u308c\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u4ed8\u304d\u3067\u8a73\u3057\u304f\u7d39\u4ecb\uff082016/08/10\u8ffd\u8a18\u6709\u308a\uff09\n\n\ndocker-compose.yml\ncloud9-sdk:\n  command: \"--listen 0.0.0.0 --port ${cloud9_port} -w /workspace --collab --auth ${cloud9_user}:${cloud9_pass}\"\n  image: \"rawmind/cloud9-sdk:0.3.0-2\"\n  restart: \"always\"\n  volumes:\n    - \"/var/run/docker.sock:/var/run/docker.sock\"\n    - \"/usr/local/bin/docker:/bin/docker\"\n    - \"/workspace\"\n  environment:\n    GIT_REPO: ${cloud9_repo}\n  labels:\n    traefik.domain: ${cloud9_domain}\n    traefik.port: ${cloud9_port}\n    traefik.enable: ${cloud9_publish}\n\n\n\n\nCloudFlare\n\n\nCloudFlare\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u4e0a\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u53ef\u80fd\u306a\u30d5\u30a1\u30a4\u30eb\uff08\u753b\u50cf / CSS / js\u30d5\u30a1\u30a4\u30eb\u306a\u3069\uff09\u3092\u69cb\u7bc9\u3057\u3066\u3044\u308b\u4e16\u754c\u4e2d\u306e\u8907\u6570\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30b7\u30b9\u30c6\u30e0\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u30b5\u30a4\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5927\u5e45\u306b\u5411\u4e0a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30b5\u30a4\u30c8\u306e\u8868\u793a\u901f\u5ea6\u3092\u9ad8\u901f\u5316\u3059\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\nCloudFlare\u5c0e\u5165\n\n\ndocker-compose.yml\ncloudflare:\n  image: rancher/external-dns:v0.6.0\n  command: -provider=cloudflare\n  expose: \n   - 1000\n  environment:\n    CLOUDFLARE_EMAIL: ${CLOUDFLARE_EMAIL}\n    CLOUDFLARE_KEY: ${CLOUDFLARE_KEY}\n    ROOT_DOMAIN: ${ROOT_DOMAIN}\n    NAME_TEMPLATE: ${NAME_TEMPLATE}\n    TTL: ${TTL}\n  labels:\n    io.rancher.container.create_agent: \"true\"\n    io.rancher.container.agent.role: \"external-dns\"\n\n\n\n\nConcrete5\n\n\nconcrete5\u3068\u306f\u3001\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u4e0a\u3067\u3001\u8ab0\u3067\u3082\u7c21\u5358\u3067\u3001\u3057\u304b\u3082\u76f4\u611f\u7684\u306b\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u306e\u904b\u55b6\u7ba1\u7406\u304c\u51fa\u6765\u308b\u3001\u624b\u8efd\u3067\u753b\u671f\u7684\u306aCMS\uff08\u30b3\u30f3\u30c6\u30f3\u30c4\u30fb\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30fb\u30b7\u30b9\u30c6\u30e0\uff09\u3067\u3059\u3002\nWordPress\u3067\u4f01\u696d\u30b5\u30a4\u30c8\u3092\u3064\u304f\u308b\u3088\u308a\u3082concrete5\u3068\u3044\u3046CMS\u304c\u9069\u3057\u3066\u3044\u308b\u7406\u7531 | \u682a\u5f0f\u4f1a\u793ebridge\n\n\ndocker-compose.yml\nCMSMysql:\n    environment:\n        MYSQL_ROOT_PASSWORD: ${root_password}\n        MYSQL_DATABASE: ${db_name}\n        MYSQL_USER: ${db_username}\n        MYSQL_PASSWORD: ${db_password}\n    labels:\n        io.rancher.container.pull_image: always\n    tty: true\n    image: mysql\n    volumes:\n    - ${db_data_location}:/var/lib/mysql\n    stdin_open: true\n    volume_driver: ${volume_driver}\n\nCMSConfig:\n    image: opensaas/concrete5\n    tty: true\n    stdin_open: true\n    links:\n    - CMSMysql:mysql\n    volumes:\n    - ${cms_application_data}:/var/www/html/application\n    - ${cms_packages_data}:/var/www/html/packages\n    labels:\n        io.rancher.container.hostname_override: container_name\n        io.rancher.container.start_once: true\n    volume_driver: ${volume_driver}\n    command: bash -c \"chown -R www-data. application; chown -R www-data. packages; sleep 2m; php -f concrete/bin/concrete5.php c5:install --db-server=mysql --db-username=${db_username} --db-password=${db_password} --db-database=${db_name} --site=${cms_sitename} --admin-email=${cms_admin_email} --admin-password=${cms_admin_password} -n -vvv\"\n\nConcrete5App:\n    labels:\n        io.rancher.container.pull_image: always\n        io.rancher.sidekicks: CMSConfig\n    tty: true\n    links:\n    - CMSMysql:mysql\n    image: opensaas/concrete5\n    volumes:\n    - ${cms_application_data}:/var/www/html/application\n    - ${cms_packages_data}:/var/www/html/packages\n    volume_driver: ${volume_driver}\n    stdin_open: true\n\n\n\nConfluence\n\n\nConflunence\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4f5c\u6210\u3084\u8b70\u8ad6\u3092\u4e00\u7b87\u6240\u306b\u307e\u3068\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u60c5\u5831\u5171\u6709\u30c4\u30fc\u30eb\u3067\u3059\u3002\nConfluence\u3068\u306f\uff1f\nslack\u3068\u9023\u643a\u3057\u305f\u3089\u4fbf\u5229\u305d\u3046\u3067\u3059Slack\u3068Confluence\u3092\u9023\u643a\u3059\u308b\u65b9\u6cd5\n\n\n\ndocker-compose.yml\nconfluence:\n  image: sanderkleykens/confluence:6.0.1\n  restart: always\n  environment:\n    - CATALINA_OPTS=-Xms${heap_size} -Xmx${heap_size} ${jvm_args}\n    - CONFLUENCE_PROXY_PORT=${proxy_port}\n    - CONFLUENCE_PROXY_NAME=${proxy_name}\n    - CONFLUENCE_PROXY_SCHEME=${proxy_scheme}\n    - CONFLUENCE_CONTEXT_PATH=${context_path}\n  external_links:\n    - ${database_link}:database\n  volumes:\n    - ${confluence_home}:/var/atlassian/confluence\n\n\n\n\nConsul Cluster\n\n\n\u8907\u6570\u53f0\u306e\u30b5\u30fc\u30d0\u69cb\u6210\u306b\u3088\u3063\u3066\uff0cWeb\u30b5\u30fc\u30d0\u3067\u3042\u308c\u3070\u901a\u4fe1\u91cf\u3084\u30a2\u30af\u30bb\u30b9\u306e\u8ca0\u8377\u5206\u6563\u3092\u56f3\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3042\u308b\u3044\u306f\uff0c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3084\u30ad\u30e3\u30c3\u30b7\u30e5\u7528\u306e\u30b5\u30fc\u30d0\u3092\u5197\u9577\u5316\u69cb\u6210\u306b\u3059\u308b\u3053\u3068\u3067\uff0c\u969c\u5bb3\u767a\u751f\u6642\u306b\u304a\u3051\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u7d99\u7d9a\u6027\uff08\u7a3c\u52d5\u6642\u9593\uff09\u3092\u9ad8\u3081\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30c4\u30fc\u30eb\u3068\u3057\u3066\u306eConsul\u306e\u4f7f\u3044\u65b9\nConsul\u30b5\u30fc\u30d0\u30af\u30e9\u30b9\u30bf\n\n\ndocker-compose.yml\nconsul-conf:\n  image: husseingalal/consul-config\n  labels:\n    io.rancher.container.hostname_override: container_name\n  volumes_from:\n    - consul\n  net: \"container:consul\"\nconsul:\n  image: husseingalal/consul\n  labels:\n    io.rancher.sidekicks: consul-conf\n  volumes:\n    - /opt/rancher/ssl\n    - /opt/rancher/config\n    - /var/consul\n\n\n\n\nConsul-Registrator\n\n\nRegistrator\u306f\u3001Docker\u3067\u7acb\u3061\u4e0a\u3052\u305f\u30b3\u30f3\u30c6\u30ca\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u3001Consul \u3084 etcd\u3001SkyDNS 2\u3078\u767b\u9332\u3059\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002\nDocker-Registrator(Normal/internal)\u3067Consul\u306b\u767b\u9332\u3055\u308c\u308b\u5185\u5bb9\u306f\uff1f\nAmazon ECS + registrator + consul \u3067\u30b5\u30fc\u30d3\u30b9\u306e\u81ea\u52d5\u767b\u9332\u8d85\u30b7\u30f3\u30d7\u30eb\u30d1\u30bf\u30fc\u30f3\n\n\ndocker-compose.yml\nconsul-registrator:\n  log_driver: ''\n  labels:\n    io.rancher.sidekicks: consul,consul-data\n    io.rancher.scheduler.global: 'true'\n    io.rancher.container.pull_image: always\n    io.rancher.container.hostname_override: container_name\n  tty: true\n  restart: always\n  command:\n    - consul://consul:8500\n  log_opt: {}\n  image: gliderlabs/registrator:v7\n  links:\n    - consul\n  volumes:\n    - /var/run/docker.sock:/tmp/docker.sock\n  stdin_open: true\nconsul:\n  ports:\n    - 8300:8300/tcp\n    - 8301:8301/tcp\n    - 8301:8301/udp\n    - 8302:8302/tcp\n    - 8302:8302/udp\n    - 8400:8400/tcp\n    - 8500:8500/tcp\n    - 8600:8600/tcp\n    - 8600:8600/udp\n  log_driver: ''\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.global: 'true'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.dns: true\n  tty: true\n  net: host\n  restart: always\n  command:\n    - agent\n    - -retry-join\n    - ${consul_server}\n    - -recursor=169.254.169.250\n    - -client=0.0.0.0\n  environment:\n    CONSUL_LOCAL_CONFIG: \"{\\\"leave_on_terminate\\\": true, \\\"datacenter\\\": \\\"${consul_datacenter}\\\"}\"\n    CONSUL_BIND_INTERFACE: eth0\n  volumes_from:\n    - consul-data\n  log_opt: {}\n  image: consul:v0.6.4\n  stdin_open: true\nconsul-data:\n  image: consul:v0.6.4\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.global: 'true'\n    io.rancher.container.start_once: true\n  volumes:\n    - /consul/data\n  entrypoint: /bin/true\n\n\n\n\nDataDog Agent & DogStatsD\n\n\n\u3010Docker\u3011\"\u307e\u305f\u6b7b\u3093\u3067\u308b\uff01\uff01\"\u30b3\u30f3\u30c6\u30ca\u306e\u6b7b\u6d3b\u7ba1\u7406\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fc\nDatadog \u3067 Docker \u30b3\u30f3\u30c6\u30ca\u3092\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\n\n\ndocker-compose.yml\ndatadog-init:\n  image: janeczku/datadog-rancher-init:v2.2.3\n  net: none\n  command: /bin/true\n  volumes:\n    - /opt/rancher\n  labels:\n    io.rancher.container.start_once: 'true'\n    io.rancher.container.pull_image: always\ndatadog-agent:\n  image: datadog/docker-dd-agent:11.3.585\n  entrypoint: /opt/rancher/entrypoint-wrapper.py\n  command:\n    - supervisord\n    - -n\n    - -c\n    - /etc/dd-agent/supervisor.conf\n  restart: always\n  environment:\n    API_KEY: ${api_key}\n    SD_BACKEND_HOST: ${sd_backend_host}\n    SD_BACKEND_PORT: ${sd_backend_port}\n    SD_TEMPLATE_DIR: ${sd_template_dir}\n    STATSD_METRIC_NAMESPACE: ${statsd_namespace}\n    DD_STATSD_STANDALONE: \"${statsd_standalone}\"\n    DD_HOST_LABELS: ${host_labels}\n    DD_CONTAINER_LABELS: ${service_labels}\n    DD_SERVICE_DISCOVERY: ${service_discovery}\n    DD_SD_CONFIG_BACKEND: ${sd_config_backend}\n    DD_CONSUL_TOKEN: ${dd_consul_token}\n    DD_CONSUL_SCHEME: ${dd_consul_scheme}\n    DD_CONSUL_VERIFY: ${dd_consul_verify}\n  volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n    - /proc/:/host/proc/:ro\n    - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro\n  volumes_from:\n    - datadog-init\n  labels:\n    io.rancher.scheduler.global: \"${global_service}\"\n    io.rancher.sidekicks: 'datadog-init'\n\n\n\n\nDNS Update (RFC2136)\n\n\nDynamic DNS\u306e\u57fa\u790e\u3068nsupdate\n\n\ndocker-compose.yml\nrfc2136dns:\n  image: rancher/external-dns:v0.6.0\n  command: -provider=rfc2136\n  expose:\n   - 1000\n  environment:\n    RFC2136_HOST: ${RFC2136_HOST}\n    RFC2136_PORT: ${RFC2136_PORT}\n    RFC2136_TSIG_KEYNAME: ${RFC2136_TSIG_KEYNAME}\n    RFC2136_TSIG_SECRET: ${RFC2136_TSIG_SECRET}\n    ROOT_DOMAIN: ${ROOT_DOMAIN}\n    NAME_TEMPLATE: ${NAME_TEMPLATE}\n    TTL: ${TTL}\n  labels:\n    io.rancher.container.create_agent: \"true\"\n    io.rancher.container.agent.role: \"external-dns\"\n\n\n\n\nDNSimple DNS\n\n\nDNSimple\u3092\u5229\u7528\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\nhttps://dnsimple.com/\n\n\ndocker-compose.yml\ndnsimple:\n  image: rancher/external-dns:v0.6.0\n  command: -provider=dnsimple\n  expose: \n   - 1000\n  environment:\n    DNSIMPLE_TOKEN: ${DNSIMPLE_TOKEN}\n    DNSIMPLE_EMAIL: ${DNSIMPLE_EMAIL}\n    ROOT_DOMAIN: ${ROOT_DOMAIN}\n    NAME_TEMPLATE: ${NAME_TEMPLATE}\n    TTL: ${TTL}\n  labels:\n    io.rancher.container.create_agent: \"true\"\n    io.rancher.container.agent.role: \"external-dns\"\n\n\n\nDokuWiki\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u524d\u63d0\u3068\u3057\u306a\u3044\u3001\u4f7f\u3044\u6613\u304f\u6c4e\u7528\u6027\u306e\u9ad8\u3044\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30a6\u30a3\u30ad\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u4e0d\u8981\u306eWiki\u30af\u30ed\u30fc\u30f3\u300cDokuWiki\u300d\u306e\u5c0e\u5165\n\n\ndocker-compose.yml\ndokuwiki-server:\n  ports:\n  - ${http_port}:80/tcp\n  labels:\n    io.rancher.sidekicks: dokuwiki-data\n  hostname: ${dokuwiki_hostname}\n  image: ununseptium/dokuwiki-docker\n  volumes_from:\n  - dokuwiki-data\n\ndokuwiki-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  entrypoint:\n  - /bin/true\n  hostname: dokuwikidata\n  image: ununseptium/dokuwiki-docker\n  volumes:\n  - /var/www/html/data\n  - /var/www/html/lib/plugins\n\n\n\n\nDrone\n\n\nDocker\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u74b0\u5883\u3092\u6bce\u56de\u69cb\u7bc9\u3001\u7834\u68c4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3057\u304b\u3082Drone\u306eCI\u74b0\u5883\u69cb\u7bc9\u306b\u3064\u3044\u3066\u3082Docker\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\u3002\nDocker\u3092\u4f7f\u3063\u305fCI\u30b5\u30fc\u30d0\u300cDrone\u300d\u30ec\u30d3\u30e5\u30fc\nOSS\u7248\u3000drone.io \u3092\u4f7f\u3063\u3066 Docker Image \u3092\u30d3\u30eb\u30c9\n\n\ndocker-compose.yml\ndrone-lb:\n  ports:\n  - ${public_port}:8000\n  tty: true\n  image: rancher/load-balancer-service\n  links:\n  - drone-server:drone-server\n  stdin_open: true\n\ndrone-healthcheck:\n  image: rancher/drone-config:v0.1.0\n  net: 'container:drone-server'\n  volumes_from:\n    - drone-data-volume\n  entrypoint: /giddyup health\n\ndrone-server:\n  image: rancher/drone-config:v0.1.0\n  volumes_from:\n    - drone-data-volume\n  labels: \n    io.rancher.sidekicks: drone-data-volume,drone-daemon,drone-healthcheck\n  external_links:\n    - ${database_service}:database\n\ndrone-daemon:\n  image: rancher/drone:0.4\n  net: 'container:drone-server'\n  volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n  volumes_from:\n    - drone-data-volume\n  entrypoint: /opt/rancher/rancher_entry.sh\n\n## Do not change below. Could cause data loss in upgrade.\ndrone-data-volume:\n  image: busybox\n  net: none\n  command: /bin/true\n  labels:\n    io.rancher.container.start_once: 'true'\n  volumes:\n    - /var/lib/drone\n    - /etc/drone\n    - /opt/rancher\n\n\n\n\nDrone Rancher Node Manager\n\n\n\u4e00\u3064\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u30db\u30b9\u30c8\u3054\u3068\u306b\u5b9f\u884c\u3057\u3001\u5358\u4e00\u306e\u30ef\u30fc\u30ab\u30fc\u3092\u767b\u9332\u3057\u3066\u304f\u308c\u308brancher\u5411\u3051\u306eci\u30c4\u30fc\u30eb\u3063\u307d\u3044\n\n\ndocker-compose.yml\ndrone-agent:\n  labels:\n    io.rancher.scheduler.global: 'true'\n  tty: true\n  image: rancher/socat-docker\n  volumes:\n  - /var/run/docker.sock:/var/run/docker.sock\n  - /var/lib/docker:/var/lib/docker\n  stdin_open: true\ndynamic-drones-mgr-0:\n  environment:\n    DRONE_TOKEN: ${DRONE_TOKEN}\n    DRONE_URL: http://droneserver:8000\n  external_links:\n  - ${DRONE_SERVICE}:droneserver\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/drone-agent\n  tty: true\n  entrypoint:\n  - /dynamic-drone-nodes\n  - /stacks/${STACK_NAME}/services/drone-agent\n  image: rancher/drone-config:v0.1.0\n  stdin_open: true\n\n\n\n\nRancher ECR Credentials Updater\n\n\nEC2 Container Registry \u306b\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u5916\u306b\u7f6e\u304d\u305f\u304f\u306a\u3044\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092AWS\u5185\u3067\u7ba1\u7406\u3059\u308b\u306e\u306b\u9069\u3057\u3066\u3044\u307e\u3059\nAmazon ECR + ECS CLI \u30cf\u30f3\u30ba\u30aa\u30f3\n\n\ndocker-compose.yml\necr-updater:\n  environment:\n    AWS_ACCESS_KEY_ID: ${aws_access_key_id}\n    AWS_SECRET_ACCESS_KEY: ${aws_secret_access_key}\n    AWS_REGION: ${aws_region}\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.container.create_agent: 'true'\n    io.rancher.container.agent.role: environment\n  tty: true\n  image: objectpartners/rancher-ecr-credentials:1.1.0\n  stdin_open: true\n\n\n\n\n\nElasticsearch\n\n\n\u8a2d\u8a08\u30d5\u30ed\u30fc\u307e\u3067\u5909\u3048\u3066\u3057\u307e\u3046\u753b\u671f\u7684\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6307\u5411\u578b\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\nElasticsearch \u5165\u9580\nDocker\u3067\u7c21\u5358\u306bElasticsearch\u306e\u30af\u30e9\u30b9\u30bf\u3092\u8a66\u3057\u3066\u307f\u308b\n\n\ndocker-compose.yml\nelasticsearch-masters:\n  image: rancher/elasticsearch-conf:v0.4.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-master,elasticsearch-datavolume-masters\nelasticsearch-datavolume-masters:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n  entrypoint: /bin/true\n  image: elasticsearch:1.7.3\nelasticsearch-base-master:\n  labels:\n    elasticsearch.master.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:1.7.3\n  net: \"container:elasticsearch-masters\"\n  volumes_from:\n    - elasticsearch-masters\n    - elasticsearch-datavolume-masters\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n\n\nelasticsearch-datanodes:\n  image: rancher/elasticsearch-conf:v0.4.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-datanode,elasticsearch-datavolume-datanode\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n  links:\n    - elasticsearch-masters:es-masters\nelasticsearch-datavolume-datanode:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n  entrypoint: /bin/true\n  image: elasticsearch:1.7.3\nelasticsearch-base-datanode:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:1.7.3\n  links:\n    - elasticsearch-masters:es-masters\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n  volumes_from:\n    - elasticsearch-datanodes\n    - elasticsearch-datavolume-datanode\n  net: \"container:elasticsearch-datanodes\"\n\n\nelasticsearch-clients:\n  image: rancher/elasticsearch-conf:v0.4.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-clients,elasticsearch-datavolume-clients\n  links:\n    - elasticsearch-masters:es-masters\nelasticsearch-datavolume-clients:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n  entrypoint: /bin/true\n  image: elasticsearch:1.7.3\nelasticsearch-base-clients:\n  labels:\n    elasticsearch.client.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:1.7.3\n  volumes_from:\n    - elasticsearch-clients\n    - elasticsearch-datavolume-clients\n  net: \"container:elasticsearch-clients\"\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n\n\nkopf:\n  image: rancher/kopf:v0.4.0\n  ports: \n    - \"80:80\"\n  environment:\n    KOPF_SERVER_NAME: 'es.dev'\n    KOPF_ES_SERVERS: 'es-clients:9200'\n  labels:\n    io.rancher.container.hostname_override: container_name\n  links:\n    - elasticsearch-clients:es-clients\n\n\n\n\nElasticsearch 2.x\n\n\nElasticsearch Marvel 2.x \u306f\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u3067\u3082\u7121\u6599\u3067\u4f7f\u3048\u308b\u306e\u3067\u5165\u308c\u3066\u304a\u3053\u3046\n\n\ndocker-compose.yml\nelasticsearch-masters:\n  image: rancher/elasticsearch-conf:v0.5.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-master,elasticsearch-datavolume-masters\n  volumes_from:\n    - elasticsearch-datavolume-masters\nelasticsearch-datavolume-masters:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n    - /usr/share/elasticsearch/config\n    - /opt/rancher/bin\n  entrypoint: /bin/true\n  image: elasticsearch:2.2.1\nelasticsearch-base-master:\n  labels:\n    elasticsearch.master.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:2.2.1\n  net: \"container:elasticsearch-masters\"\n  volumes_from:\n    - elasticsearch-datavolume-masters\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n\n\nelasticsearch-datanodes:\n  image: rancher/elasticsearch-conf:v0.5.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-datanode,elasticsearch-datavolume-datanode\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n  links:\n    - elasticsearch-masters:es-masters\n  volumes_from:\n    - elasticsearch-datavolume-datanode\nelasticsearch-datavolume-datanode:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n    - /usr/share/elasticsearch/config\n    - /opt/rancher/bin\n  entrypoint: /bin/true\n  image: elasticsearch:2.2.1\nelasticsearch-base-datanode:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:2.2.1\n  links:\n    - elasticsearch-masters:es-masters\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n  volumes_from:\n    - elasticsearch-datavolume-datanode\n  net: \"container:elasticsearch-datanodes\"\n\n\nelasticsearch-clients:\n  image: rancher/elasticsearch-conf:v0.5.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-clients,elasticsearch-datavolume-clients\n  links:\n    - elasticsearch-masters:es-masters\n  volumes_from:\n    - elasticsearch-datavolume-clients\nelasticsearch-datavolume-clients:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n    - /usr/share/elasticsearch/config\n    - /opt/rancher/bin\n  entrypoint: /bin/true\n  image: elasticsearch:2.2.1\nelasticsearch-base-clients:\n  labels:\n    elasticsearch.client.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:2.2.1\n  volumes_from:\n    - elasticsearch-datavolume-clients\n  net: \"container:elasticsearch-clients\"\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n\n\nkopf:\n  image: rancher/kopf:v0.4.0\n  ports:\n    - \"${kopf_port}:80\"\n  environment:\n    KOPF_SERVER_NAME: 'es.dev'\n    KOPF_ES_SERVERS: 'es-clients:9200'\n  labels:\n    io.rancher.container.hostname_override: container_name\n  links:\n    - elasticsearch-clients:es-clients\n\n\n\nAWS ELB Classic External LB\n\n\nelb\u3068\u9023\u643a\u304c\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\nhttp://rancher.com/inside-the-external-elb-catalog-template/\n\n\ndocker-compsoe.yml\nelbv1:\n  image: rancher/external-lb:v0.2.1\n  command: -provider=elbv1\n  expose: \n   - 1000\n  environment:\n    ELBV1_AWS_ACCESS_KEY: ${ELBV1_AWS_ACCESS_KEY}\n    ELBV1_AWS_SECRET_KEY: ${ELBV1_AWS_SECRET_KEY}\n    ELBV1_AWS_REGION: ${ELBV1_AWS_REGION}\n    ELBV1_AWS_VPCID: ${ELBV1_AWS_VPCID}\n    ELBV1_USE_PRIVATE_IP: ${ELBV1_USE_PRIVATE_IP}\n  labels:\n    io.rancher.container.create_agent: \"true\"\n    io.rancher.container.agent.role: \"external-dns\"\n\n\n\n\nEtcd\n\n\netcd \u306f Go \u8a00\u8a9e\u3067\u8a18\u8ff0\u3055\u308c\u305f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u9ad8\u4fe1\u983c\u5206\u6563 KVS\u3067\u3059\u3002\u307e\u305f etcd \u30af\u30e9\u30b9\u30bf\u306f\u3001CoreOS \u4e0a\u306e Docker \u30b3\u30f3\u30c6\u30ca\u74b0\u5883\u7b49\u306b\u914d\u5099\u3055\u308c\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u9593\u3067\u30b5\u30fc\u30d3\u30b9\u8a2d\u5b9a\u60c5\u5831\u306a\u3069\u3092\u4ea4\u63db\u3001\u5171\u6709\u3059\u308b\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u5c1a\u3001\u540c\u69d8\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3067\u306f\u3001Apache ZooKeeper \u3084 consul \u7b49\u304c\u8a72\u5f53\u3059\u308b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\netcd + docker \u3067\u7c21\u5358\u306b\u30ea\u30e2\u30fc\u30c8\u30b3\u30f3\u30c6\u30ca\u306b\u63a5\u7d9a\u3057\u3088\u3046\nCentOS \u3067\u59cb\u3081\u308b etcd\n\n\ndocker-compose.yml\netcd:\n    image: rancher/etcd:v2.3.7-11\n    labels:\n        io.rancher.scheduler.affinity:host_label_soft: etcd=true\n        io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n        io.rancher.sidekicks: data\n    environment:\n        RANCHER_DEBUG: '${RANCHER_DEBUG}'\n        EMBEDDED_BACKUPS: '${EMBEDDED_BACKUPS}'\n        BACKUP_PERIOD: '${BACKUP_PERIOD}'\n        BACKUP_RETENTION: '${BACKUP_RETENTION}'\n    volumes:\n    - etcd:/pdata\n    - ${BACKUP_LOCATION}:/data-backup\n    volumes_from:\n    - data\ndata:\n  image: busybox\n  command: /bin/true\n  net: none\n  volumes:\n  - /data\n  labels:\n    io.rancher.container.start_once: 'true'\n\n\n\nF5 BIG-IP\n\n\nVirtual Edition(\u4ee5\u5f8cBIG-IP VE)\u3068\u306f\u3001\u7c21\u5358\u306b\u3044\u3046\u3068\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\uff08\u8ca0\u8377\u5206\u6563\u88c5\u7f6e\uff09\u307f\u305f\u3044\u3067\u3059\u3002\n\u30a4\u30f3\u30d5\u30e9\u30a8\u30f3\u30b8\u30cb\u30a2\u5411\u3051\u3001F5 BIG-IP Virtual Edition for AWS \u3092\u4f7f\u3063\u3066\u307f\u308b\n\n\ndocker-compose.yml\nexternal-lb:\n  image: rancher/external-lb:v0.1.1\n  command: -provider=f5_BigIP\n  expose: \n   - 1000\n  environment:\n    F5_BIGIP_HOST: ${F5_BIGIP_HOST}\n    F5_BIGIP_USER: ${F5_BIGIP_USER}\n    F5_BIGIP_PWD: ${F5_BIGIP_PWD}\n    LB_TARGET_RANCHER_SUFFIX: ${LB_TARGET_RANCHER_SUFFIX}\n\n\n\n\nFBCTF\n\nFBCTF\u3068\u3044\u3046Facebook\u304c\u51fa\u3057\u305f\u65d7\u53d6\u308a\u30b2\u30fc\u30e0\u306e\u3088\u3046\u306b\u3001\u554f\u984c\u3092\u30af\u30ea\u30a2\u3057\u3066\u3044\u304f\u30b2\u30fc\u30e0\u3060\u305d\u3046\u3067\u3059\nFacebook CTF(fbctf)\u3067\u904a\u3093\u3067\u3044\u308b\u4eba\u3044\u305f\n\n\ndocker-compse.yml\nfbctf:  \n  image: 'qazbnm456/dockerized_fbctf:multi_containers'\n  links:\n    - mysql\n    - memcached\n  restart: always\n  ports:\n    - ${http_port}:80\n    - ${https_port}:443\n  environment:\n    MYSQL_HOST: mysql\n    MYSQL_PORT: 3306\n    MYSQL_DATABASE: ${mysql_database}\n    MYSQL_USER: ${mysql_user}\n    MYSQL_PASSWORD: ${mysql_password}\n    MEMCACHED_PORT: 11211\n    SSL_SELF_SIGNED: ${ssl}\n\nmysql:\n  image: 'mysql:5.5'\n  restart: always\n  environment:\n    MYSQL_ROOT_PASSWORD: root\n    MYSQL_USER: ${mysql_user}\n    MYSQL_PASSWORD: ${mysql_password}\n  container_name: mysql\n\nmemcached:\n  image: 'memcached:latest'\n  restart: always\n  container_name: memcached\n\n\n\nGhost\n\n\n\u8efd\u91cf\u30d6\u30ed\u30b0\u306e1\u3064\nGhost\nDocker\u3067Ghost\u3092\u52d5\u304b\u3057\u3066\u307f\u308b #1\n\n\ndocker-compose.yml\nghost:\n  image: ghost\n  ports:\n    - ${public_port}:2368\n\n\n\n\nGitLab\n\n\nGitLab\u3068\u306f\u3001GitHub\u306e\u3088\u3046\u306a\u30b5\u30fc\u30d3\u30b9\u3092\u793e\u5185\u306a\u3069\u306e\u30af\u30ed\u30fc\u30ba\u30c9\u306a\u74b0\u5883\u306b\u72ec\u81ea\u3067\u69cb\u7bc9\u3067\u304d\u308b\u3088\u3046\u306b\u516c\u958b\u3055\u308c\u305f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3067\u3059\u3002\n\n\ndocker-compose.yml\nfbctf:  \n  image: 'qazbnm456/dockerized_fbctf:multi_containers'\n  links:\n    - mysql\n    - memcached\n  restart: always\n  ports:\n    - ${http_port}:80\n    - ${https_port}:443\n  environment:\n    MYSQL_HOST: mysql\n    MYSQL_PORT: 3306\n    MYSQL_DATABASE: ${mysql_database}\n    MYSQL_USER: ${mysql_user}\n    MYSQL_PASSWORD: ${mysql_password}\n    MEMCACHED_PORT: 11211\n    SSL_SELF_SIGNED: ${ssl}\n\nmysql:\n  image: 'mysql:5.5'\n  restart: always\n  environment:\n    MYSQL_ROOT_PASSWORD: root\n    MYSQL_USER: ${mysql_user}\n    MYSQL_PASSWORD: ${mysql_password}\n  container_name: mysql\n\nmemcached:\n  image: 'memcached:latest'\n  restart: always\n  container_name: memcached\n\n\n\n\nGocd agent\n\n\nCI/CD\u30c4\u30fc\u30eb\u306e\uff11\u3064(Jenkins\u3084Travis CI\u306a\u3069\u306e\u4ef2\u9593\u3063\u307d\u3044)\n\n\ndocker-compose.yml\ngocd-agent:\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n    gocd.role: agent\n  tty: true\n  image: rawmind/rancher-goagent:16.2.1-1\n  external_links:\n  - ${goserver_ip}:gocd-server\n  environment:\n  - AGENT_MEM=${mem_initial}m\n  - AGENT_MAX_MEM=${mem_max}m\n  - GO_SERVER=gocd-server.rancher.internal\n  - GO_SERVER_PORT=${goserver_port}\n  volumes:\n  - /var/run/docker.sock:/var/run/docker.sock\n\n\n\n\nGocd server\n\n\nCI/CD\u30c4\u30fc\u30eb\u306e\uff11\u3064(Jenkins\u3084Travis CI\u306a\u3069\u306e\u4ef2\u9593\u3063\u307d\u3044)\n\n\ndocker-compose.yml\ngocd-server:\n  labels:\n    gocd.role: server\n  tty: true\n  image: rawmind/rancher-goserver:16.2.1-3\n  volumes_from:\n  - gocd-volume\n  environment:\n  - SERVER_MEM=${mem_initial}m\n  - SERVER_MAX_MEM=${mem_max}m\n  ports:\n  - ${public_port}:8153\n  - ${ssh_port}:8154\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: gocd-volume\ngocd-volume:\n  net: none\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n  - ${volume_work}:/opt/go-server/work\n  volume_driver: ${volume_driver}\n  entrypoint: /bin/true\n  image: busybox\n\n\n\n\nGogs\n\n\nGo\u3067\u4f5c\u3089\u308c\u305fGitHub\u30af\u30ed\u30fc\u30f3\n\u7a76\u6975\u7684\u306b\u7c21\u5358\u306b\u59cb\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308bGo\u3067\u4f5c\u3089\u308c\u305fGitHub\u30af\u30ed\u30fc\u30f3\u300cGogs\u300d\n\n\ndocker-compose.yml\ngogs:\n    image: gogs/gogs:latest\n    ports:\n        - ${http_port}:3000\n        - ${ssh_port}:22\n    links:\n        - mysql:db\n\nmysql:\n    image: mysql:latest\n    ports:\n        - ${public_port}:3306\n    environment:\n        MYSQL_ROOT_PASSWORD: ${mysql_password}\n\n\n\nGrafana\n\n\nKibana\u306fElasticsearch\u3001Grafana\u306fGraphite or InfluxDB\u3092\u4e3b\u306b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3068\u3057\u3066Web\u30d6\u30e9\u30a6\u30b6\u3067\u52d5\u4f5c\u3059\u308b\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u30c4\u30fc\u30eb\u3067\u3059(Kibana\u3068Grafana\u306e\u6bd4\u8f03)\nInfluxDB\u3068Grafana\u3092\u4f7f\u3063\u3066\u30b5\u30fc\u30d0\u30fc\u30ea\u30bd\u30fc\u30b9\u306e\u53ef\u8996\u5316\u3092\u3059\u308b\n\n\ndocker-compose.yml\ngrafana:\n    image: grafana/grafana:latest\n    ports:\n        - ${http_port}:3000\n    environment:\n        GF_SECURITY_ADMIN_USER: ${admin_username}\n        GF_SECURITY_ADMIN_PASSWORD: ${admin_password}\n        GF_SECURITY_SECRET_KEY: ${secret_key}\n\n\n\n\nHadoop + Yarn\n\n\n\u30d3\u30c3\u30b0\u30fb\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308b\u306e\u306b\u6700\u3082\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u30c4\u30fc\u30eb\n\u3042\u306e\u65e5\u898b\u305fYARN\u306e\u304a\u4ed5\u4e8b\u3092\u50d5\u9054\u306f\u307e\u3060\u77e5\u3089\u306a\u3044\u3002\n\n\ndocker-compose.yml\nbootstrap-hdfs:\n  image: rancher/hadoop-base:v0.3.5\n  labels:\n    io.rancher.container.start_once: true\n  command: 'su -c \"sleep 20 && exec /bootstrap-hdfs.sh\" hdfs'\n  net: \"container:namenode-primary\"\n  volumes_from:\n    - namenode-primary-data\nsl-namenode-config:\n  image: rancher/hadoop-followers-config:v0.3.5\n  net: \"container:namenode-primary\"\n  environment:\n    NODETYPE: \"hdfs\"\n  volumes_from:\n    - namenode-primary-data\nnamenode-config:\n  image: rancher/hadoop-config:v0.3.5\n  net: \"container:namenode-primary\"\n  volumes_from:\n    - namenode-primary-data\nnamenode-primary:\n  image: rancher/hadoop-base:v0.3.5\n  command: 'su -c \"sleep 15 && /usr/local/hadoop-2.7.1/bin/hdfs namenode\" hdfs'\n  volumes_from:\n    - namenode-primary-data\n  ports:\n    - 50070:50070\n  labels:\n    io.rancher.sidekicks: namenode-config,sl-namenode-config,bootstrap-hdfs,namenode-primary-data\n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.affinity:container_label_soft: io.rancher.stack_service.name=$${stack_name}/yarn-resourcemanager,io.rancher.stack_service.name=$${stack_name}/jobhistory-server\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/datanode\nnamenode-primary-data:\n  image: rancher/hadoop-base:v0.3.5\n  volumes:\n    - '${cluster}-namenode-primary-config:/etc/hadoop'\n    - '/tmp'\n  net: none\n  labels:\n    io.rancher.container.start_once: true\n  command: '/bootstrap-local.sh'\n\n\ndatanode-config:\n  image: rancher/hadoop-config:v0.3.5\n  net: \"container:datanode\"\n  volumes_from:\n    - datanode-data\ndatanode-data:\n  image: rancher/hadoop-base:v0.3.5\n  net: none\n  volumes:\n    - '${cluster}-datanode-config:/etc/hadoop'\n    - '/tmp'\n  labels:\n    io.rancher.container.start_once: true\n  command: '/bootstrap-local.sh'\ndatanode:\n  image: rancher/hadoop-base:v0.3.5\n  volumes_from:\n    - datanode-data\n  labels:\n    io.rancher.sidekicks: datanode-config,datanode-data\n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/namenode-primary,io.rancher.stack_service.name=$${stack_name}/yarn-resourcemanager\n  links:\n    - 'namenode-primary:namenode'\n  command: 'su -c \"sleep 45 && exec /usr/local/hadoop-2.7.1/bin/hdfs datanode\" hdfs'\n\nyarn-nodemanager-config:\n  image: rancher/hadoop-config:v0.3.5\n  net: \"container:yarn-nodemanager\"\n  volumes_from:\n    - yarn-nodemanager-data\nyarn-nodemanager-data:\n  image: rancher/hadoop-base:v0.3.5\n  net: none\n  volumes:\n    - '${cluster}-yarn-nodemanager-config:/etc/hadoop'\n    - '/tmp'\n  labels:\n    io.rancher.container.start_once: true\n  command: '/bootstrap-local.sh'\nyarn-nodemanager:\n  image: rancher/hadoop-base:v0.3.5\n  volumes_from:\n    - yarn-nodemanager-data\n  ports:\n    - '8042:8042'\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: yarn-nodemanager-config,yarn-nodemanager-data\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/namenode-primary,io.rancher.stack_service.name=$${stack_name}/yarn-resourcemanager,io.rancher.stack_service.name=$${stack_name}/jobhistory-server,\n    io.rancher.scheduler.affinity:container_label: io.rancher.stack_service.name=$${stack_name}/datanode\n  links:\n    - 'namenode-primary:namenode'\n    - 'yarn-resourcemanager:yarn-rm'\n  command: 'su -c \"sleep 45 && exec /usr/local/hadoop-2.7.1/bin/yarn nodemanager\" yarn'\n\njobhistory-server-config:\n  image: rancher/hadoop-config:v0.3.5\n  net: \"container:jobhistory-server\"\n  volumes_from:\n    - jobhistory-server-data\njobhistory-server-data:\n  image: rancher/hadoop-base:v0.3.5\n  net: none\n  volumes:\n    - '${cluster}-jobhistory-config:/etc/hadoop'\n    - '/tmp'\n  labels:\n    io.rancher.container.start_once: true\n  command: '/bootstrap-local.sh'\njobhistory-server:\n  image: rancher/hadoop-base:v0.3.5\n  volumes_from:\n    - jobhistory-server-data\n  links:\n    - 'namenode-primary:namenode'\n    - 'yarn-resourcemanager:yarn-rm'\n  ports:\n    - '10020:10020'\n    - '19888:19888'\n  labels:\n    io.rancher.sidekicks: jobhistory-server-config,jobhistory-server-data\n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.affinity:container_label: io.rancher.stack_service.name=$${stack_name}/yarn-resourcemanager,io.rancher.stack_service.name=$${stack_name}/namenode-primary\n  command: 'su -c \"sleep 45 && /usr/local/hadoop-2.7.1/bin/mapred historyserver\" mapred'\n\nyarn-resourcemanager-config:\n  image: rancher/hadoop-config:v0.3.5\n  net: \"container:yarn-resourcemanager\"\n  volumes_from:\n    - yarn-resourcemanager-data\nsl-yarn-resourcemanager-config:\n  image: rancher/hadoop-followers-config:v0.3.5\n  net: \"container:yarn-resourcemanager\"\n  environment:\n    NODETYPE: \"yarn\"\n  volumes_from:\n    - yarn-resourcemanager-data\nyarn-resourcemanager-data:\n  image: rancher/hadoop-base:v0.3.5\n  net: none\n  volumes:\n    - '${cluster}-yarn-resourcemanager-config:/etc/hadoop'\n    - '/tmp'\n  labels:\n    io.rancher.container.start_once: true\n  command: '/bootstrap-local.sh'\nyarn-resourcemanager:\n  image: rancher/hadoop-base:v0.3.5\n  volumes_from:\n    - yarn-resourcemanager-data\n  ports:\n    - '8088:8088'\n  links:\n    - 'namenode-primary:namenode'\n  labels:\n    io.rancher.sidekicks: yarn-resourcemanager-config,sl-yarn-resourcemanager-config,yarn-resourcemanager-data\n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name},io.rancher.stack_service.name=$${stack_name}/datanode,io.rancher.stack_service.name=$${stack_name}/yarn-nodemanager\n    io.rancher.scheduler.affinity:container_label: io.rancher.stack_service.name=$${stack_name}/namenode-primary\n  command: 'su -c \"sleep 30 && /usr/local/hadoop-2.7.1/bin/yarn resourcemanager\" yarn'\n\n\n\n\nJanitor\n\n\n\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u30ea\u30bd\u30fc\u30b9\u3092\u81ea\u52d5\u524a\u9664\u3059\u308b\u30c4\u30fc\u30eb\n\u4f7f\u3063\u3066\u3044\u306a\u3044AWS\u30ea\u30bd\u30fc\u30b9\u3092\u76e3\u8996\u3057\u3066\u81ea\u52d5\u524a\u9664\u3059\u308bJanitor Monkey\u3092\u4f7f\u3063\u3066\u307f\u305f\n\n\ndocker-compose.yml\ncleanup:\n  image: meltwater/docker-cleanup:1.8.0\n  environment:\n    CLEAN_PERIOD: ${FREQUENCY}\n    DELAY_TIME: \"900\"\n    KEEP_IMAGES: \"${KEEP}\"\n    KEEP_CONTAINERS: \"${KEEPC}\"\n    KEEP_CONTAINERS_NAMED: \"${KEEPCN}\"\n    LOOP: \"true\"\n    DEBUG: \"0\"\n  labels:\n     io.rancher.scheduler.global: \"true\"\n     io.rancher.scheduler.affinity:host_label_ne: \"${EXCLUDE_LABEL}\"\n  net: none\n  privileged: true\n  tty: false\n  stdin_open: false\n  volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n    - /var/lib/docker:/var/lib/docker\n\n\n\n\nJenkins\n\n\n\u304a\u306a\u3058\u307fci\u30c4\u30fc\u30eb\nJenkins + docker\u3067\u30c6\u30b9\u30c8\u306e\u4e26\u5217\u5316\n\n\ndocker-compose.yml\njenkins-primary:\n  image: \"jenkins:2.19.4\"\n  ports:\n    - \"${PORT}:8080\"\n  labels:\n    io.rancher.sidekicks: jenkins-plugins,jenkins-datavolume\n    io.rancher.container.hostname_override: container_name\n  volumes_from:\n    - jenkins-plugins\n    - jenkins-datavolume\n  entrypoint: /usr/share/jenkins/rancher/jenkins.sh\njenkins-plugins:\n  image: rancher/jenkins-plugins:v0.1.1\njenkins-datavolume:\n  image: \"busybox\"\n  volumes:\n    - ${volume_work}:/var/jenkins_home\n  labels:\n    io.rancher.container.start_once: true\n  entrypoint: [\"chown\", \"-R\", \"1000:1000\", \"/var/jenkins_home\"]\n\n\n\nJenkins Swarm Plugin Clients\n\n\nJenkins\u5074\u3067\u3001\u52d5\u7684\u306b\u30b9\u30ec\u30fc\u30d6\u304c\u8ffd\u52a0\u3055\u308c\u305f\u308a\u3059\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u3088\u3046\u3067\u3059\nDocker Compose\u3067Jenkins\u3068Selenium Grid\u3092\u4e00\u6c17\u306b\u7acb\u3061\u4e0a\u3052\u308b\n\n\ndocker-compose.yml\nswarm-clients:\n  image: \"rancher/jenkins-swarm:v0.2.0\"\n  user: \"${user}\"\n  labels:\n    io.rancher.scheduler.affinity:host_label_soft: ci=worker\n    io.rancher.container.hostname_override: container_name\n  external_links:\n    - \"${jenkins_service}:jenkins-primary\"\n  environment:\n    JENKINS_PASS: \"${jenkins_pass}\"\n    JENKINS_USER: \"${jenkins_user}\"\n    SWARM_EXECUTORS: \"${swarm_executors}\"\n  volumes:\n    - '/var/run/docker.sock:/var/run/docker.sock'\n    - '/var/jenkins_home/workspace:/var/jenkins_home/workspace'\n    - '/tmp:/tmp'\n\n\n\n\nKibana 4\n\n\nElastic\u793e\u304c\u63d0\u4f9b\u3059\u308b\u30ed\u30b0\u30c7\u30fc\u30bf\u89e3\u6790/\u53ef\u8996\u5316\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u57fa\u672c\u7684\u306b\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u300cElasticsearch\u300d\u3068\u30bb\u30c3\u30c8\u3067\u4f7f\u308f\u308c\u307e\u3059\u3002\nKibana 4 BETA\u30d5\u30a1\u30fc\u30b9\u30c8\u30a4\u30f3\u30d7\u30ec\u30c3\u30b7\u30e7\u30f3\n\n\ndocker-compose.yml\nkibana-vip:\n  ports:\n  - \"${public_port}:80\"\n  restart: always\n  tty: true\n  image: rancher/load-balancer-service\n  links:\n  - nginx-proxy:kibana4\n  stdin_open: true\nnginx-proxy-conf:\n  image: rancher/nginx-conf:v0.2.0\n  command: \"-backend=rancher --prefix=/2015-07-25\"\n  labels:\n    io.rancher.container.hostname_override: container_name\nnginx-proxy:\n  image: rancher/nginx:v1.9.4-3\n  volumes_from:\n    - nginx-proxy-conf\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: nginx-proxy-conf,kibana4\n  external_links:\n    - ${elasticsearch_source}:elasticsearch\nkibana4:\n  restart: always\n  tty: true\n  image: kibana:4.4.2\n  net: \"container:nginx-proxy\"\n  stdin_open: true\n  environment:\n    ELASTICSEARCH_URL: \"http://elasticsearch:9200\"\n  labels:\n    io.rancher.container.hostname_override: container_name\n\n\n\n\nLet's Encrypt\n\n\n\u7121\u6599\u3067ssl\u304c\u53d6\u5f97\u3067\u304d\u308b\nLet's Encrypt \u3067\u624b\u8efd\u306b HTTPS \u30b5\u30fc\u30d0\u3092\u8a2d\u5b9a\u3059\u308b\nDocker\u3067Let\u2019s Encrypt\u3057\u3088\u3063\u304b\nrancher\u3092ssl\u3092\u53d6\u5f97\u3057\u3066\u307f\u3088\u3046(\u57f7\u7b46\u4e2d)\n\n\ndocker-compose.yml\nletsencrypt:\n  image: janeczku/rancher-letsencrypt:v0.3.0\n  environment:\n    EULA: ${EULA}\n    API_VERSION: ${API_VERSION}\n    CERT_NAME: ${CERT_NAME}\n    EMAIL: ${EMAIL}\n    DOMAINS: ${DOMAINS}\n    PUBLIC_KEY_TYPE: ${PUBLIC_KEY_TYPE}\n    RENEWAL_TIME: ${RENEWAL_TIME}\n    PROVIDER: ${PROVIDER}\n    CLOUDFLARE_EMAIL: ${CLOUDFLARE_EMAIL}\n    CLOUDFLARE_KEY: ${CLOUDFLARE_KEY}\n    DO_ACCESS_TOKEN: ${DO_ACCESS_TOKEN}\n    AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}\n    AWS_SECRET_KEY: ${AWS_SECRET_KEY}\n    DNSIMPLE_EMAIL: ${DNSIMPLE_EMAIL}\n    DNSIMPLE_KEY: ${DNSIMPLE_KEY}\n    DYN_CUSTOMER_NAME: ${DYN_CUSTOMER_NAME}\n    DYN_USER_NAME: ${DYN_USER_NAME}\n    DYN_PASSWORD: ${DYN_PASSWORD}\n  volumes:\n    - ${STORAGE_VOLUME}/etc/letsencrypt/production/certs\n  labels:\n    io.rancher.container.create_agent: 'true'\n    io.rancher.container.agent.role: 'environment'\n\n\n\nLiferay Portal\n\n\nWeb\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30dd\u30fc\u30bf\u30eb\uff08\u793e\u5185\u30dd\u30fc\u30bf\u30eb\u3001\u5bfe\u5916\u30b5\u30a4\u30c8\uff09\u88fd\u54c1\u3067\u3059\u3002\n\u30dd\u30fc\u30bf\u30eb\uff08\u793e\u5185\u30dd\u30fc\u30bf\u30eb\u3001\u5bfe\u5916\u30b5\u30a4\u30c8\uff09\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3001\u304a\u3088\u3073\u305d\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u7528\u306b\u958b\u767a\u3055\u308c\u305f\u30dd\u30fc\u30c8\u30ec\u30c3\u30c8\uff08\u6a5f\u80fd\u90e8\u54c1\uff09\u3001\u53ca\u3073\u30dd\u30fc\u30c8\u30ec\u30c3\u30c8\u306e\u958b\u767a\u74b0\u5883\u304b\u3089\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nLiferay Portal\uff08\u30e9\u30a4\u30d5\u30ec\u30a4 \u30dd\u30fc\u30bf\u30eb\uff09\u306fJava\u3067\u5b9f\u88c5\u3055\u308c\u3066\u304a\u308a\u3001JBoss, Apache Tomcat, WebSphere\u306a\u3069\u591a\u304f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3084Web\u30b3\u30f3\u30c6\u30ca\u4e0a\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\nLiferay Portal\uff08\u30e9\u30a4\u30d5\u30ec\u30a4 \u30dd\u30fc\u30bf\u30eb\uff09\u306e\u6982\u8981\n\n\ndocker-compose.yml\nliferay:\n  ports:\n  - 8080:8080/tcp\n  environment:\n    SETUP_WIZARD_ENABLED: ${SETUP_WIZARD_ENABLED}\n    DB_KIND: mysql\n    DB_HOST: liferaydb\n    DB_USERNAME: ${MYSQL_USER}\n    DB_PASSWORD: ${MYSQL_PASSWORD}\n  log_driver: ''\n  labels:\n    io.rancher.container.pull_image: always\n  tty: true\n  log_opt: {}\n  image: rsippl/liferay:7.0.0-2\n  links:\n  - mysql:liferaydb\n  stdin_open: true\nmysql:\n  environment:\n    MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}\n    MYSQL_DATABASE: ${MYSQL_DATABASE}\n    MYSQL_USER: ${MYSQL_USER}\n    MYSQL_PASSWORD: ${MYSQL_PASSWORD}\n  log_driver: ''\n  labels:\n    io.rancher.container.pull_image: always\n  tty: true\n  command:\n  - --character-set-server=utf8\n  - --collation-server=utf8_general_ci\n  log_opt: {}\n  image: mysql:5.6.30\n  stdin_open: true\n\n\n\nLogmatic\n\ngo\u3067\u66f8\u304b\u308c\u305f log analyzer \u306e\u3088\u3046\u3067\u3059\nlogmatic.io\n\n\ndocker-compose.yml\nlogmatic-agent:\n  image: logmatic/logmatic-docker\n  entrypoint: /usr/src/app/index.js\n  command: ${logmatic_key} ${opts_args}\n  restart: always\n  volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n    - /proc/:/host/proc/:ro\n    - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro\n  labels:\n    io.rancher.scheduler.global: \"true\"\n\n\n\n\nLogspout\n\n\n\u30db\u30b9\u30c8\u5185\u3067\u52d5\u304b\u3057\u305f\u5168\u3066\u306eDocker\u30b3\u30f3\u30c6\u30ca\u306e\u51fa\u529b\u3092\u96c6\u7d04\u3057\u3066\uff0c\u597d\u304d\u306a\u3068\u3053\u308d\u306b\u98db\u3070\u3059\uff08\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\uff09\u305f\u3081\u306e\u30c4\u30fc\u30eb\nlogspout\u3067Docker\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u306e\u96c6\u7d04\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\nlogspout \u3067 CoreOS \u4e0a\u306e Docker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u96c6\u7d04\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\n\n\ndocker-compose.yml\nlogspout:\n  restart: always\n  environment:\n    ROUTE_URIS: \"${route_uri}\"\n    LOGSPOUT: 'ignore'\n    SYSLOG_HOSTNAME: \"${envname}\"\n  volumes:\n  - '/var/run/docker.sock:/var/run/docker.sock'\n  labels:\n    io.rancher.scheduler.global: 'true'\n    io.rancher.container.hostname_override: container_name\n  tty: true\n  image: bekt/logspout-logstash:latest\n  stdin_open: true\n\n\n\nLogstash\n\n\nElastic\u793e\u304c\u63d0\u4f9b\u3059\u308b\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30ed\u30b0\u53ce\u96c6\u7ba1\u7406\u30c4\u30fc\u30eb\u3067\u3059\u3002\u30ed\u30b0\u3092\u53ce\u96c6\u3057\u30011\u3064\u306e\u30b5\u30fc\u30d0\u306b\u96c6\u7d04\u3057\u3066\u7ba1\u7406\u3057\u307e\u3059\u3002\u4e3b\u306b\u3001Elastic\u793e\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u300cElasticsearch\u300d\u3068\u306e\u30bb\u30c3\u30c8\u3067\u306e\u4f7f\u7528\u3092\u60f3\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nELK(ElasticSearch, Logstash, Kibana)+fluentd\u306e\u74b0\u5883\u3092Docker Compose\u3067\u69cb\u7bc9\u3057\u3064\u3064\u3001\u8a66\u3057\u306bCloudWatch\u306e\u7d71\u8a08\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3057\u3066\u307f\u305f\n\n\ndocker-compose.yml\nlogstash-indexer-config:\n  restart: always\n  image: rancher/logstash-config:v0.2.0\n  labels:\n    io.rancher.container.hostname_override: container_name\nredis:\n  restart: always\n  tty: true\n  image: redis:3.2.6-alpine\n  stdin_open: true\n  labels:\n    io.rancher.container.hostname_override: container_name\nlogstash-indexer:\n  restart: always\n  tty: true\n  volumes_from:\n  - logstash-indexer-config\n  command:\n  - logstash\n  - -f\n  - /etc/logstash\n  image: logstash:5.1.1-alpine\n  links:\n  - redis:redis\n  external_links:\n  - ${elasticsearch_link}:elasticsearch\n  stdin_open: true\n  labels:\n    io.rancher.sidekicks: logstash-indexer-config\n    io.rancher.container.hostname_override: container_name\nlogstash-collector-config:\n  restart: always\n  image: rancher/logstash-config:v0.2.0\n  labels:\n    io.rancher.container.hostname_override: container_name\nlogstash-collector:\n  restart: always\n  tty: true\n  links:\n  - redis:redis\n  ports:\n  - \"5000/udp\"\n  - \"6000/tcp\"\n  volumes_from:\n  - logstash-collector-config\n  command:\n  - logstash\n  - -f\n  - /etc/logstash\n  image: logstash:5.1.1-alpine\n  stdin_open: true\n  labels:\n    io.rancher.sidekicks: logstash-collector-config\n    io.rancher.container.hostname_override: container_name\n\n\n\nMariaDB Galera Cluster\n\n\nMySQL (MariaDB) \u306e\u5197\u9577\u5316\u3067\u540c\u671f\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7528\u3044\u305f\u30de\u30eb\u30c1\u30de\u30b9\u30bf\u578b\u306e\u30af\u30e9\u30b9\u30bf\u3092\u7d44\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3002\ndocker run\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3 MariaDB Galera Cluster 5.5 (kudotty/mariadb-galeracluster-5.5)\n\n\ndocker-compose.yml\nmariadb-galera-server:\n  image: rancher/galera:10.0.22-rancher2\n  net: \"container:galera\"\n  environment:\n    TERM: \"xterm\"\n    MYSQL_ROOT_PASSWORD: \"${mysql_root_password}\"\n    MYSQL_DATABASE: \"${mysql_database}\"\n    MYSQL_USER: \"${mysql_user}\"\n    MYSQL_PASSWORD: \"${mysql_password}\"\n  volumes_from:\n    - 'mariadb-galera-data'\n  labels:\n    io.rancher.container.hostname_override: container_name\n  entrypoint: bash -x /opt/rancher/start_galera\nmariadb-galera-data:\n  image: rancher/galera:10.0.22-rancher2\n  net: none\n  environment:\n    MYSQL_ALLOW_EMPTY_PASSWORD: \"yes\"\n  volumes:\n    - /var/lib/mysql\n    - /etc/mysql/conf.d\n    - /docker-entrypoint-initdb.d\n    - /opt/rancher\n  command: /bin/true\n  labels:\n    io.rancher.container.start_once: true\ngalera-leader-forwarder:\n  image: rancher/galera-leader-proxy:v0.1.0\n  net: \"container:galera\"\n  volumes_from:\n   - 'mariadb-galera-data'\ngalera:\n  image: rancher/galera-conf:v0.2.0\n  labels:\n    io.rancher.sidekicks: mariadb-galera-data,mariadb-galera-server,galera-leader-forwarder\n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n  volumes_from:\n    - 'mariadb-galera-data'\n  stdin_open: true\n  tty: true\n  command: /bin/bash\n\ngalera-lb:\n  expose:\n  - 3306:3307/tcp\n  tty: true\n  image: rancher/load-balancer-service\n  links:\n  - galera:galera\n  stdin_open: true\n\n\n\n\nMinecraft\n\n\n\u3053\u308c\u3067\u30de\u30a4\u30f3\u30af\u30e9\u30d5\u30c8\u304c\u3044\u3064\u3067\u3082\u904a\u3079\u307e\u3059\n\n\ndocker-compose.yml\n\nMinecraft:\n  environment:\n    - EULA\n    - VERSION\n    - DIFFICULTY\n    - MODE\n    - LEVEL_TYPE\n    - GENERATOR_SETTINGS\n    - PVP\n    - WHITELIST\n    - OPS\n    - MOTD\n    - SEED\n    - WORLD\n  tty: true\n  image: itzg/minecraft-server\n  stdin_open: true\n  labels:\n    io.rancher.sidekicks: MinecraftData\n  volumes_from:\n    - MinecraftData\n\nMinecraftData:\n  image: busybox\n  labels:\n    io.rancher.container.start_once: 'true'\n  net: none\n  entrypoint: /bin/true\n  volumes:\n    - ${DATA_VOLUME}/data\n  volume_driver: ${VOLUME_DRIVER}\n\nMinecraftLB:\n  ports:\n  - ${PORT}:25565/tcp\n  tty: true\n  image: rancher/load-balancer-service\n  links:\n  - Minecraft:Minecraft\n  stdin_open: true\n\n\n\nMongoDB\n\n\nRDBMS\u3067\u306f\u306a\u304f\u3001\u3044\u308f\u3086\u308bNoSQL\u3068\u547c\u3070\u308c\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5206\u985e\u3055\u308c\u308b\u3082\u306e\nfig/docker-compose\u4e8b\u59cb\u3081\n\n\ndocker-compose.yml\nmongo-cluster:\n  restart: always\n  environment:\n    MONGO_SERVICE_NAME: mongo-cluster\n  tty: true\n  entrypoint: /opt/rancher/bin/entrypoint.sh\n  command:\n  - --replSet\n  - \"${replset_name}\"\n  image: mongo:3.2\n  labels:\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: mongo-base, mongo-datavolume\n  volumes_from:\n    - mongo-datavolume\n    - mongo-base\nmongo-base:\n  restart: always\n  net: none\n  tty: true\n  labels:\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  image: rancher/mongodb-conf:v0.1.0\n  stdin_open: true\n  entrypoint: /bin/true\nmongo-datavolume:\n  net: none\n  labels:\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /data/db\n  entrypoint: /bin/true\n  image: busybox\n\n\n\n\nMumble\n\n\n\u591a\u4eba\u6570\u3067\u3082\u9045\u5ef6\u306a\u3057\u3067\u8efd\u5feb\u306b\u4f7f\u3048\u308b\u30dc\u30a4\u30b9\u30c1\u30e3\u30c3\u30c8\n\u300cMumble\u300d \u306e\u4f7f\u3044\u65b9\n\n\ndocker-compose.yml\nmumble:\n  image: ranchercb/murmur:latest\n  ports:\n  - 64738:64738\n  - 64738:64738/udp\n\n\n\n\nNetdata\n\n\nnetdata\u306f\u3001Zabbix\u3084Nagios\u306a\u3069\u306e\u76e3\u8996\u30c4\u30fc\u30eb\u3068\u306f\u7570\u306a\u308a\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u304c\u3067\u304d\u308b\u30c4\u30fc\u30eb\u3067\u3059\u3002\n\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306a\u30ea\u30bd\u30fc\u30b9\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u30c4\u30fc\u30eb\u306enetdata\u3092\u8a66\u3057\u3066\u307f\u305f\nnetdata\u3092\u4f7f\u3063\u3066\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u53ef\u8996\u5316\u3057\u3066\u307f\u308b\n\n\ndocker-compose.yml\nnetdata:\n  image: titpetric/netdata:latest\n  labels:\n    io.rancher.scheduler.global: 'true'\n  cap_add:\n  - SYS_PTRACE\n  volumes:\n  - /proc:/host/proc:ro\n  - /sys:/host/sys:ro\n  environment:\n    NETDATA_PORT: \"${NETDATA_PORT}\"\n\n\n\nNuxeo\n\n\n\u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306fNuxeo\u30b5\u30fc\u30d0\u30fc\u3092\u3059\u3079\u3066\u306e\u30b3\u30f3\u30d1\u30cb\u30aa\u30f3\uff08Elasticsearch\u3001Redis\u3001Postgres\uff09\u3068\u5171\u306b\u5c55\u958b\u3057\u3001Nuxeo\u3092\u3042\u306a\u305f\u306e\u4e0a\u3067\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\n\n\ndocker-compose.yml\npostgres-datavolume:\n  labels:\n    io.rancher.container.start_once: 'true'\n    io.rancher.container.hostname_override: container_name\n  image: nuxeo/postgres\n  entrypoint: chown -R postgres:postgres /var/lib/postgresql/data\n  volume_driver: ${volumedriver}\n  volumes:\n    - /var/lib/postgresql/data\n\npostgres:\n  image: nuxeo/postgres\n  environment:\n    - POSTGRES_USER=nuxeo\n    - POSTGRES_PASSWORD=nuxeo    \n  labels:\n    io.rancher.sidekicks: postgres-datavolume\n    io.rancher.container.hostname_override: container_name\n  volumes_from:\n  - postgres-datavolume\n\n# Copied from default Rancher ES Stack : don't modifiy service names\nelasticsearch-masters:\n  image: rancher/elasticsearch-conf:v0.4.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-master,elasticsearch-datavolume-masters\n  volume_driver: ${volumedriver}\nelasticsearch-datavolume-masters:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  entrypoint: /bin/true\n  image: elasticsearch:1.7.3\n  volume_driver: ${volumedriver}\nelasticsearch-base-master:\n  labels:\n    elasticsearch.master.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:1.7.3\n  net: \"container:elasticsearch-masters\"\n  volumes_from:\n    - elasticsearch-masters\n    - elasticsearch-datavolume-masters\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n\n\nredis:\n  labels:    \n    io.rancher.container.hostname_override: container_name\n  tty: true\n  image: redis:3.0.3\n  stdin_open: true\n  volume_driver: ${volumedriver}\n\nnuxeo-datavolume:\n  labels:\n    io.rancher.container.start_once: 'true'\n    io.rancher.container.hostname_override: container_name\n  image: nuxeo\n  entrypoint: /bin/true\n  volume_driver: ${volumedriver}\n  volumes:\n    - /var/lib/nuxeo/data\n    - /var/log/nuxeo\n\nnuxeo:\n  environment:\n    NUXEO_CLID: ${clid}\n    NUXEO_PACKAGES: ${packages}\n    NUXEO_DB_HOST: postgres\n    NUXEO_DB_TYPE: postgresql\n    NUXEO_ES_HOSTS: elasticsearch:9300\n    NUXEO_DATA: /data/nuxeo/data/\n    NUXEO_LOG: /data/nuxeo/log/\n    NUXEO_REDIS_HOST: redis\n    NUXEO_URL: ${url}\n  labels:\n    io.rancher.sidekicks: nuxeo-datavolume    \n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n  image: nuxeo:FT\n  links:\n  - redis:redis\n  - postgres:postgres\n  - elasticsearch-masters:elasticsearch\n  volumes_from:\n  - nuxeo-datavolume\n\nlb:\n  expose:\n  - 80:8080\n  image: rancher/load-balancer-service\n  links:\n  - nuxeo:nuxeo\n\n\n\n\nOdoo\n\n\nOdoo\uff08\u65e7\u79f0OpenERP\uff09\u306f\u30d9\u30eb\u30ae\u30fc\u306eOpenERP S.A.\u793e\u306b\u3088\u308a\u958b\u767a\u3068\u308a\u307e\u3068\u3081\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3001\u4e16\u754c\u3067\u5927\u4eba\u6c17\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u696d\u52d9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b9\u30a4\u30fc\u30c8\u3067\u3059\u3002\u6a5f\u80fd\u3092\u8c4a\u5bcc\u306b\u5099\u3048\u3001\u64cd\u4f5c\u6027\u3001\u62e1\u5f35\u6027\u3001\u4fdd\u5b88\u6027\u306e\u5404\u9762\u3067\u512a\u308c\u3066\u304a\u308a\u3001\u5727\u5012\u7684\u306a\u30b3\u30b9\u30c8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u8a87\u308a\u307e\u3059\u3002\u30ab\u30d0\u30fc\u9818\u57df\u306f\u3001\u5f93\u6765\u306eERP\u30d1\u30c3\u30b1\u30fc\u30b8\u5b88\u5099\u7bc4\u56f2\u3092\u3082\u306f\u3084\u8d8a\u3048\u3001CMS\u3001E\u30b3\u30de\u30fc\u30b9\u3001\u30a4\u30d9\u30f3\u30c8\u7ba1\u7406\u7b49\u3001\u591a\u5c90\u306b\u4e98\u308a\u307e\u3059\u3002\nOdoo8\u30d7\u30e9\u30b0\u30a4\u30f3\u5168\u90e8\u5165\u308a\u30a4\u30e1\u30fc\u30b8\u4f5c\u3063\u305f(896.4 MB)\n\n\ndocker-compose.yml\nodoo:\n  image: odoo\n  ports:\n    - \"8069:8069\"\n  links:\n    - db\ndb:\n  image: postgres\n  environment:\n    - POSTGRES_USER=odoo\n    - POSTGRES_PASSWORD=odoo\n\n\n\n\nOpenVPN\n\n\n\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u63a5\u7d9a\u3057\u3066\u3044\u308bPC\u304c1\u53f0\u3042\u308c\u3070\u3001VPN\u30b5\u30fc\u30d0\u30fc\u304c\u8a2d\u7f6e\u3067\u304d\u307e\u3059\uff08\u81ea\u793e\u5185\u30b5\u30fc\u30d0\u30fc\u306f\u3082\u3061\u308d\u3093\u3001\u30ec\u30f3\u30bf\u30ebVPS\u306a\u3069\u3067\u904b\u7528\u3057\u3066\u3044\u308b\u30b1\u30fc\u30b9\u3082\u3042\u308a\u307e\u3059\uff09\u3002\u7279\u5b9a\u306e\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30d7\u30ed\u30d0\u30a4\u30c0\u306a\u3069\u306e\u5236\u7d04\u3082\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u3088\u3046\u306a\u512a\u308c\u305f\u7279\u5fb4\u304b\u3089\u3001\u500b\u4eba\u30e6\u30fc\u30b6\u30fc\u3084\u4e2d\u5c0f\u4f01\u696d\u3067\u306e\u5c0e\u5165\u306b\u9069\u3057\u3066\u3044\u307e\u3059\ndocker\u3067vpn\u30b5\u30fc\u30d0\u30fc\u3092\u305f\u3066\u308b\n\n\ndocker-compose.yml\nopenvpn-httpbasic-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  entrypoint:\n  - /bin/true\n  image: busybox\n  volumes:\n  - /etc/openvpn/\n\nopenvpn-httpbasic-server:\n  ports:\n  - 1194:1194/tcp\n  environment:\n    AUTH_METHOD: httpbasic\n    AUTH_HTTPBASIC_URL: ${AUTH_HTTPBASIC_URL}\n    CERT_COUNTRY: ${CERT_COUNTRY}\n    CERT_PROVINCE: ${CERT_PROVINCE}\n    CERT_CITY: ${CERT_CITY}\n    CERT_ORG: ${CERT_ORG}\n    CERT_EMAIL: ${CERT_EMAIL}\n    CERT_OU: ${CERT_OU}\n    REMOTE_IP: ${REMOTE_IP}\n    REMOTE_PORT: ${REMOTE_PORT}\n    VPNPOOL_NETWORK: ${VPNPOOL_NETWORK}\n    VPNPOOL_CIDR: ${VPNPOOL_CIDR}\n    OPENVPN_EXTRACONF: ${OPENVPN_EXTRACONF}\n  labels:\n    io.rancher.sidekicks: openvpn-httpbasic-data\n    io.rancher.container.pull_image: always\n  image: mdns/rancher-openvpn:1.0\n  privileged: true\n  volumes_from:\n  - openvpn-httpbasic-data\n\n\n\nOpenVPN-httpdigest\n\n\n\nDigest\u8a8d\u8a3c\u3067OpenVPN\u3092\u4f7f\u7528\u3067\u304d\u308b\n\n\ndocker-compose.yml\nopenvpn-httpdigest-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  entrypoint:\n  - /bin/true\n  image: busybox\n  volumes:\n  - /etc/openvpn/\n\nopenvpn-httpdigest-server:\n  ports:\n  - 1194:1194/tcp\n  environment:\n    AUTH_METHOD: httpdigest\n    AUTH_HTTPDIGEST_URL: ${AUTH_HTTPDIGEST_URL}\n    CERT_COUNTRY: ${CERT_COUNTRY}\n    CERT_PROVINCE: ${CERT_PROVINCE}\n    CERT_CITY: ${CERT_CITY}\n    CERT_ORG: ${CERT_ORG}\n    CERT_EMAIL: ${CERT_EMAIL}\n    CERT_OU: ${CERT_OU}\n    REMOTE_IP: ${REMOTE_IP}\n    REMOTE_PORT: ${REMOTE_PORT}\n    VPNPOOL_NETWORK: ${VPNPOOL_NETWORK}\n    VPNPOOL_CIDR: ${VPNPOOL_CIDR}\n    OPENVPN_EXTRACONF: ${OPENVPN_EXTRACONF}\n  labels:\n    io.rancher.sidekicks: openvpn-httpdigest-data\n    io.rancher.container.pull_image: always\n  image: mdns/rancher-openvpn:1.0\n  privileged: true\n  volumes_from:\n  - openvpn-httpdigest-data\n\n\n\n\nOpenVPN-LDAP\n\n\nLDAP\u30a2\u30ab\u30a6\u30f3\u30c8\u3067OpenVPN\u3092\u4f7f\u7528\u3067\u304d\u308b\nOpenVPN\u306b\u30e6\u30fc\u30b6\u30fc/\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u30ed\u30b0\u30a4\u30f3(LDAP\u8a8d\u8a3c)\n\n\ndocker-compose.yml\nopenvpn-ldap-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  entrypoint:\n  - /bin/true\n  image: busybox\n  volumes:\n  - /etc/openvpn/\n\nopenvpn-ldap-server:\n  ports:\n  - 1194:1194/tcp\n  environment:\n    AUTH_METHOD: ldap\n    AUTH_LDAP_URL: ${AUTH_LDAP_URL}\n    AUTH_LDAP_BASEDN: ${AUTH_LDAP_BASEDN}\n    AUTH_LDAP_SEARCH: ${AUTH_LDAP_SEARCH}\n    AUTH_LDAP_BINDDN: ${AUTH_LDAP_BINDDN}\n    AUTH_LDAP_BINDPWD: ${AUTH_LDAP_BINDPWD}\n    CERT_COUNTRY: ${CERT_COUNTRY}\n    CERT_PROVINCE: ${CERT_PROVINCE}\n    CERT_CITY: ${CERT_CITY}\n    CERT_ORG: ${CERT_ORG}\n    CERT_EMAIL: ${CERT_EMAIL}\n    CERT_OU: ${CERT_OU}\n    REMOTE_IP: ${REMOTE_IP}\n    REMOTE_PORT: ${REMOTE_PORT}\n    VPNPOOL_NETWORK: ${VPNPOOL_NETWORK}\n    VPNPOOL_CIDR: ${VPNPOOL_CIDR}\n    OPENVPN_EXTRACONF: ${OPENVPN_EXTRACONF}\n  labels:\n    io.rancher.sidekicks: openvpn-ldap-data\n    io.rancher.container.pull_image: always\n  image: mdns/rancher-openvpn:1.0\n  privileged: true\n  volumes_from:\n  - openvpn-ldap-data\n\n\n\n\nOwncloud\n\n\nDropbox \u306e\u3088\u3046\u306a\u30aa\u30f3\u30e9\u30a4\u30f3\u30b9\u30c8\u30ec\u30fc\u30b8\u30b5\u30fc\u30d3\u30b9\u3092\u7c21\u5358\u306b\u69cb\u7bc9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u3059\u3002\nownCloud \u306e Docker \u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u308b\n\n\ndocker-compose.yml\nowncloud:\n  image: owncloud\n  ports:\n   - \"80:80\"\n  links:\n    - db\n\ndb:\n  image: mariadb\n  environment:\n    - MYSQL_ROOT_PASSWORD=password\n\n\n\nPercona XtraDB Cluster\n\n\n\u30de\u30eb\u30c1\u30de\u30b9\u30bf\u3067\u30af\u30e9\u30b9\u30bf\u69cb\u7bc9\u304c\u53ef\u80fd\u306aMySQL\u4e92\u63dbRDBMS\u3067\u3059\u3002\nPercona XtraDB Cluster\u3092Docker\u3067\u69cb\u7bc9\u3059\u308b\n\n\ndocker-compose.yml\npxc-clustercheck:\n  image: flowman/percona-xtradb-cluster-clustercheck:v2.0\n  net: \"container:pxc\"\n  labels:\n    io.rancher.container.hostname_override: container_name\n  volumes_from:\n    - 'pxc-data'    \npxc-server:\n  image: flowman/percona-xtradb-cluster:5.6.28-1\n  net: \"container:pxc\"\n  environment:\n    MYSQL_ROOT_PASSWORD: \"${mysql_root_password}\"\n    PXC_SST_PASSWORD: \"${pxc_sst_password}\"\n    MYSQL_DATABASE: \"${mysql_database}\"\n    MYSQL_USER: \"${mysql_user}\"\n    MYSQL_PASSWORD: \"${mysql_password}\"    \n  labels:\n    io.rancher.container.hostname_override: container_name\n  volumes_from:\n    - 'pxc-data'\n  entrypoint: bash -x /opt/rancher/start_pxc\npxc-data:\n  image: flowman/percona-xtradb-cluster:5.6.28-1\n  net: none\n  environment:\n    MYSQL_ALLOW_EMPTY_PASSWORD: \"yes\"\n  volumes:\n    - /var/lib/mysql\n    - /etc/mysql/conf.d\n    - /docker-entrypoint-initdb.d\n  command: /bin/true\n  labels:\n    io.rancher.container.start_once: true    \npxc:\n  image: flowman/percona-xtradb-cluster-confd:v0.2.0\n  labels:\n    io.rancher.sidekicks: pxc-clustercheck,pxc-server,pxc-data\n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n  volumes_from:\n    - 'pxc-data'\n\n\n\n\nPHP Adminer\n\n\nAdminer\u306f\u3001PHP\u3067\u4f5c\u3089\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u7ba1\u7406\u30c4\u30fc\u30eb\u3067\u3059\u3002(Apache License or GPL 2)\nphpMyAdmin\u306e\u3088\u3046\u306bWeb\u4e0a\u3067MySQL\u306a\u3069\u203b\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u64cd\u4f5c\u3067\u304d\u308b (\u4e00\u901a\u308a\u306e\u3053\u3068\u306f\u3067\u304d\u308b)\nMySQL\u4ee5\u5916\u3067\u4f7f\u7528\u3057\u305f\u3053\u3068\u306f\u306a\u3044\u3067\u3059\u304c\u3001\u516c\u5f0f\u3067\u306f\u4e0b\u8a18\u306e\u5bfe\u5fdc\u3092\u8b33\u3063\u3066\u3044\u307e\u3059\u3002\nMySQL, PostgreSQL, SQLite, MS SQL, Oracle, Firebird, SimpleDB, Elasticsearch, MongoDB\n1\u30d5\u30a1\u30a4\u30eb\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u8a2d\u7f6e\u304c\u7c21\u5358\nAdminer\u3092\u8a2d\u7f6e\u3059\u308b\n\n\ndocker-compose.yml\nadminer:\n  image: 'clue/adminer:latest'\n  restart: on-failure\n\n\n\nPlone 5.0\n\n\nPlone \u306f WordPress \u3068\u9055\u3044\u300cPython\u300d\uff0b\u300c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u300d\uff0b\u300cDBMS\u300d\uff0b\u300cCMS \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u300d\u3092\u4e00\u5ea6\u306b\u3059\u3079\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u300cPHP\u300d\uff0b\u300cWeb \u30b5\u30fc\u30d0\u300d\uff0b\u300cMySQL\u300d\u3092\u5225\u9014\u7528\u610f\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 WordPress \u3088\u308a\u5c0e\u5165\u305d\u306e\u3082\u306e\u306f\u7c21\u5358\u306b\u3067\u304d\u308b\u3002\nYet Another \u4ed5\u4e8b\u306e\u30c4\u30fc\u30eb\n\n\ndocker-compose.yml\nzeoserver:\n  image: plone:5.0\n  labels:\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.community.plone=true\n    io.rancher.community.plone: \"true\"\n  volumes:\n  - ${volume_name}:/data\n  volume_driver: ${volume_driver}\n  command: [\"zeoserver\"]\n\nplone:\n  image: plone:5.0\n  labels:\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.community.plone=true\n    io.rancher.community.plone: \"true\"\n  links:\n  - zeoserver:zeoserver\n  environment:\n    ADDONS: ${addons}\n    ZEO_ADDRESS: zeoserver:8100\n\nlb:\n  image: rancher/load-balancer-service\n  labels:\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.community.plone=true\n    io.rancher.community.plone: \"true\"\n  links:\n  - plone:plone\n  ports:\n  - ${http_port}:8080\n\n\n\n\nPointHQ DNS\n\n\n1\u30a2\u30d7\u30ea\u6bce\u30671\u30c9\u30e1\u30a4\u30f3\u306b\u3064\u304d10\u30ec\u30b3\u30fc\u30c9\u307e\u3067\u7121\u6599\u3067\u767b\u9332\u3067\u304d\u308b\n\u7ba1\u7406\u753b\u9762\u304b\u3089\u30c9\u30e1\u30a4\u30f3\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u6570\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\nPointDNS\u3067Heroku\u30a2\u30d7\u30ea\u306bNaked domain\u3092\u5272\u308a\u5f53\u3066\u308b\n\n\ndocker-compose.yml\npointhq:\n  image: rancher/external-dns:v0.2.1\n  command: --provider pointhq\n  expose: \n   - 1000\n  environment:\n    POINTHQ_TOKEN: ${POINTHQ_TOKEN}\n    POINTHQ_EMAIL: ${POINTHQ_EMAIL}\n    ROOT_DOMAIN: ${ROOT_DOMAIN}\n    TTL: ${TTL}\n  labels:\n    io.rancher.container.create_agent: \"true\"\n    io.rancher.container.agent.role: \"external-dns\"\n\n\n\n\nPowerDNS\n\n\nPowerDNS\u3068\u306f\u3001\u30aa\u30e9\u30f3\u30c0\u306ePowerDNS.COM BV\u304c\u958b\u767a\u3092\u884c\u3063\u305f\u3001\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306eDNS\u30b5\u30fc\u30d0\u3067\u3059\u3002\n\u4e45\u3057\u3076\u308a\u306bPowerDNS\u3092\u3055\u308f\u308b\nPowerDNS\u3067DNS\u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u308b\u3002\n\n\ndocker-compose.yml\npowerdns:\n  image: rancher/external-dns:v0.5.0\n  command: \"-provider=powerdns\"\n  expose:\n   - 1000\n  environment:\n    POWERDNS_API_KEY: ${POWERDNS_API_KEY}\n    POWERDNS_URL: ${POWERDNS_URL}\n    ROOT_DOMAIN: ${ROOT_DOMAIN}\n    TTL: ${TTL}\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.container.create_agent: \"true\"\n    io.rancher.container.agent.role: \"external-dns\"\n\n\n\nPrometheus\n\n\n\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30b5\u30fc\u30d3\u30b9\u76e3\u8996\u30b7\u30b9\u30c6\u30e0\u3068\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\u3010Docker\u3011\"\u307e\u305f\u6b7b\u3093\u3067\u308b\uff01\uff01\"\u30b3\u30f3\u30c6\u30ca\u306e\u6b7b\u6d3b\u7ba1\u7406\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fc\n\u3010\u5165\u9580\u3011Prometheus\u3067\u30b5\u30fc\u30d0\u3084Docker\u30b3\u30f3\u30c6\u30ca\u306e\u30ea\u30bd\u30fc\u30b9\u76e3\u8996\nprometheus\u306eexporter\u306ecollectd-exporter\u3092docker\u3067\u3061\u3087\u308d\u3063\u3068\u52d5\u304b\u3057\u3066\u307f\u308b\n\n\ndocker-compose.yml\ncadvisor:\n  labels:\n    io.rancher.scheduler.global: 'true'\n  tty: true\n  image: google/cadvisor:latest\n  stdin_open: true\n  volumes:\n    - \"/:/rootfs:ro\"\n    - \"/var/run:/var/run:rw\"\n    - \"/sys:/sys:ro\"\n    - \"/var/lib/docker/:/var/lib/docker:ro\"\n\nnode-exporter:\n  labels:\n    io.rancher.scheduler.global: 'true'\n  tty: true\n  image: prom/node-exporter:latest\n  stdin_open: true\n\nprom-conf:\n    tty: true\n    image: infinityworks/prom-conf:17\n    volumes:\n      - /etc/prom-conf/\n    net: none\n\nprometheus:\n    tty: true\n    image: prom/prometheus:v1.4.1\n    command: -alertmanager.url=http://alertmanager:9093 -config.file=/etc/prom-conf/prometheus.yml -storage.local.path=/prometheus -web.console.libraries=/etc/prometheus/console_libraries -web.console.templates=/etc/prometheus/consoles\n    ports:\n      - 9090:9090\n    labels:\n      io.rancher.sidekicks: prom-conf\n    volumes_from:\n       - prom-conf\n    links:\n      - cadvisor:cadvisor\n      - node-exporter:node-exporter\n      - prometheus-rancher-exporter:prometheus-rancher-exporter\n\ninfluxdb:\n  image: tutum/influxdb:0.10\n  ports:\n    - 2003:2003\n  environment:\n    - PRE_CREATE_DB=grafana;prometheus;rancher\n    - GRAPHITE_DB=rancher\n    - GRAPHITE_BINDING=:2003\n\ngraf-db:\n    tty: true\n    image: infinityworks/graf-db:10\n    command: cat\n    volumes:\n      - /var/lib/grafana/\n    net: none\n\ngrafana:\n    tty: true\n    image: grafana/grafana:4.0.2\n    ports:\n      - 3000:3000\n    labels:\n      io.rancher.sidekicks: graf-db\n    volumes_from:\n       - graf-db\n    links:\n      - prometheus:prometheus\n      - prometheus-rancher-exporter:prometheus-rancher-exporter\n\nprometheus-rancher-exporter:\n    tty: true\n    labels:\n      io.rancher.container.create_agent: true\n      io.rancher.container.agent.role: environment\n    image: infinityworks/prometheus-rancher-exporter:v0.22.40\n\n\n\n\nPuppet 4 .x (standalone)\n\n\n\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306a\u30b7\u30b9\u30c6\u30e0\u81ea\u52d5\u7ba1\u7406\u30c4\u30fc\u30eb Puppet\nPuppet\u306fRuby\u3067\u3067\u304d\u305f\uff0cUNIX\u7cfbOS\u306e\u30b7\u30b9\u30c6\u30e0\u7ba1\u7406\u3092\u81ea\u52d5\u3067\u884c\u3046\u305f\u3081\u306e\u30c4\u30fc\u30eb\nPuppet\u5c0e\u5165\u524d\u306b\u77e5\u308a\u305f\u304b\u3063\u305f\u3053\u3068\n\n\ndocker-compose.yml\npuppet-lb:\n  ports:\n  - ${PUPPET_PORT}:8140/tcp\n  labels:\n    io.rancher.loadbalancer.target.puppet: 8140=${PUPPET_PORT}\n  tty: true\n  image: rancher/load-balancer-service\n  links:\n  - puppet:puppet\n  stdin_open: true\n\npuppet:\n  hostname: puppet\n  domainname: puppet.rancher.internal\n  labels:\n    io.rancher.sidekicks: puppet-config-volumes\n  image: nrvale0/puppetserver-standalone\n  environment:\n    - CONTROL_REPO_GIT_URI=${CONTROL_REPO_GIT_URI}\n  volumes_from:\n    - puppet-config-volumes\n\npuppet-config-volumes:\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: \"true\"\n  volumes:\n   - /etc/puppetlabs/ssl\n   - /opt/puppetlabs/r10k/cache\n   - /etc/puppetlabs/code\n  entrypoint: /bin/true\n  image: alpine\n\n\n\npx-dev\n\n\nPX-Developer\uff08PX-Dev\uff09\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u30c7\u30fc\u30bf\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002 PX-Dev\u81ea\u4f53\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b9\u30bf\u30c3\u30af\u3068\u3068\u3082\u306b\u30b3\u30f3\u30c6\u30ca\u3068\u3057\u3066\u5c55\u958b\u3055\u308c\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b9\u30bf\u30c3\u30af\u3067PX-Dev\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u74b0\u5883\u3067\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u6c38\u7d9a\u6027\u3001\u5bb9\u91cf\u7ba1\u7406\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3001\u53ef\u7528\u6027\u3092\u30b3\u30f3\u30c6\u30ca\u5358\u4f4d\u3067\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002 Docker Engine\u3092\u642d\u8f09\u3057\u305f\u30b5\u30fc\u30d0\u30fc\u306bPX-Developer\u30b3\u30f3\u30c6\u30ca\u3092\u5c55\u958b\u3059\u308b\u3068\u3001\u305d\u306e\u30b5\u30fc\u30d0\u30fc\u306f\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3055\u308c\u305f\u30b9\u30c8\u30ec\u30fc\u30b8\u30ce\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u3068\u7d71\u5408\u3055\u308c\u305f\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u7a3c\u50cd\u306f\u3001\u30d9\u30a2\u30e1\u30bf\u30eb\u99c6\u52d5\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u3082\u305f\u3089\u3057\u307e\u3059\u3002\nhttps://github.com/portworx/px-dev\n\n\ndocker-compose.yml\nportworx:\n  labels:\n    io.rancher.container.create_agent: 'true'\n    io.rancher.scheduler.global: 'true'\n    io.rancher.container.pull_image: 'always'\n  image: portworx/px-dev\n  container_name: px\n  ipc: host\n  net: host\n  privileged: true\n  environment:\n    CLUSTER_ID: ${cluster_id}\n    KVDB: ${kvdb}\n  volumes:\n     - /dev:/dev\n     - /usr/src:/usr/src\n     - /run/docker/plugins:/run/docker/plugins\n     - /var/lib/osd:/var/lib/osd:shared\n     - /etc/pwx:/etc/pwx\n     - /opt/pwx/bin:/export_bin:shared\n     - /var/run/docker.sock:/var/run/docker.sock\n     - /var/cores:/var/cores\n  command: -c ${cluster_id} -k ${kvdb} -a -z -f\n\n\n\nQuasarDB\n\n\nquasardb\u306f\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u89e3\u6790\u7528\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u5b9a\u7fa9\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30c6\u30af\u30ce\u30ed\u30b8\u3067\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u9593\u306e\u30ea\u30f3\u30af\u304c\u6b20\u843d\u3057\u3066\u3044\u307e\u3059\u3002\nquasardb\u30c7\u30fc\u30bf\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u30d1\u30bf\u30fc\u30f3\u3092\u5f37\u5236\u3057\u307e\u305b\u3093\u3002 \u30c7\u30fc\u30bf\u306f\u3001Microsoft Excel\u3001ActivePivot\u3001Apache Spark\u306a\u3069\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3084\u30de\u30eb\u30c1\u8a00\u8a9eAPI\u3092\u4f7f\u7528\u3057\u3066\u76f4\u63a5\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\nhttps://www.quasardb.net/-what-is-nosql-\n\n\ndocker-compose.yml\nqdb-ui:\n  ports:\n  - ${webport}:${webport}/tcp\n  environment:\n    DEVICE: ${device}\n    PEER: qdb1\n    PORT: '${qdbport}'\n    WEBPORT: '${webport}'\n  labels:\n    io.rancher.container.dns: 'true'\n  command:\n  - /start.sh\n  - httpd\n  image: makazi/quasardb:2.0.0-rc.8\n  net: host\n\nqdb1-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  command:\n  - /bin/true\n  image: busybox\n  volumes:\n  - /var/db/qdb\n  - /var/lib/qdb\n\nqdb2-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  command:\n  - /bin/true\n  image: busybox\n  volumes:\n  - /var/db/qdb\n  - /var/lib/qdb\n\nqdb2:\n  ports:\n  - ${qdbport}:${qdbport}/tcp\n  environment:\n    ID: 2/2\n    DEVICE: ${device}\n    PEER: qdb1\n    PORT: '${qdbport}'\n    REPLICATION: ${replication}\n  labels:\n    io.rancher.sidekicks: qdb2-data\n    io.rancher.container.dns: 'true'\n  command:\n  - /start.sh\n  image: makazi/quasardb:2.0.0-rc.8\n  volumes_from:\n  - qdb2-data\n  net: host\nqdb1:\n  ports:\n  - ${qdbport}:${qdbport}/tcp\n  environment:\n    ID: 1/2\n    DEVICE: ${device}\n    PORT: '${qdbport}'\n    REPLICATION: ${replication}\n  labels:\n    io.rancher.sidekicks: qdb1-data\n    io.rancher.container.dns: 'true'\n  command:\n  - /start.sh\n  image: makazi/quasardb:2.0.0-rc.8\n  volumes_from:\n  - qdb1-data\n  net: host\n\n\n\nRabbitMQ\n\n\nRabbitMQ\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0\u306e\u305f\u3081\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3067\u3059\u3002\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u65b0\u4eba\u30d7\u30ed\u30b0\u30e9\u30de\u306b\u77e5\u3063\u3066\u3082\u3089\u3044\u305f\u3044RabbitMQ\u521d\u5fc3\u8005\u306e\u5165\u9580\u306e\u5165\u9580\n13\u65e5\u76ee: RabbitMQ\u306e\u500b\u4eba\u7684\u306b\u96e3\u3057\u304b\u3063\u305f\u7528\u8a9e\u306e\u8aac\u660e\n\u306f\u3058\u3081\u3066\u306e RabbitMQ\n\n\ndocker-compose.yml\nrabbitmq:\n  image: rdaneel/rabbitmq-conf:0.2.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: rabbitmq-base,rabbitmq-datavolume\n  volumes_from:\n    - rabbitmq-datavolume\n  environment:\n    - RABBITMQ_NET_TICKTIME=${net_ticktime}\n    - RABBITMQ_CLUSTER_PARTITION_HANDLING=${cluster_partition_handling}\n    - CONFD_ARGS=${confd_args}\nrabbitmq-datavolume:\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /etc/rabbitmq\n    - /opt/rancher/bin\n  entrypoint: /bin/true\n  image: rabbitmq:3.6-management\nrabbitmq-base:\n  labels:\n    io.rancher.container.hostname_override: container_name\n  image: rabbitmq:3.6-management\n  restart: always\n  volumes_from:\n    - rabbitmq-datavolume\n  net: \"container:rabbitmq\"\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n  environment:\n    - RABBITMQ_ERLANG_COOKIE=${erlang_cookie}\n\n\nLaunch\n\n\n\nrancher-security-bench\n\n\n\u5404\u30b3\u30f3\u30c6\u30ca\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u72b6\u6cc1\u304c\u898b\u308c\u307e\u3059\n\u30b3\u30f3\u30c6\u30ca\u30fc\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\n\n\ndocker-compose.yml\nrancher-bench-security:\n  image: germanramos/rancher-bench-security:1.11.0\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.global: 'true'\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n  net: host\n  pid: host\n  stdin_open: true\n  tty: true\n  volumes:\n    - /var/lib:/var/lib\n    - /var/run/docker.sock:/var/run/docker.sock\n    - /usr/lib/systemd:/usr/lib/systemd\n    - /etc:/etc\n    - /tmp:/tmp\n  environment:\n    - INTERVAL=${INTERVAL}\n\nweb-server:\n  image: germanramos/nginx-php-fpm:v5.6.21\n  stdin_open: true\n  tty: true\n  labels:\n    traefik.enable: stack\n    traefik.domain: ${TRAEFIK_DOMAIN}\n    traefik.port: 80\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.global: 'true'\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n  volumes:\n    - /tmp/cis:/var/www/html\n\n\n\n\nRegistry\n\n\nprivate docker hub\u3067\u3059\nLDAP\u3068\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u9023\u643a\u3067\u304d\u308b\n\n\ndocker-compose.yml\ndb:\n  image: mysql:5.7.10\n  environment:\n    MYSQL_DATABASE: portus\n    MYSQL_ROOT_PASSWORD: ${ROOTPASSWORD}\n    MYSQL_USER: portus\n    MYSQL_PASSWORD: ${DBPASSWORD}\n  tty: true\n  stdin_open: true\n  volumes:\n  - ${DIR}/db:/var/lib/mysql\n  labels:\n    registry.portus.db: 1\nsslproxy:\n  image: nginx:1.9.9\n  tty: true\n  stdin_open: true\n  links:\n  - portus:portus\n  volumes:\n  - ${DIR}/certs:/etc/nginx/certs:ro\n  - ${DIR}/proxy:/etc/nginx/conf.d:ro\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft: registry.portus.db=1\nregistry:\n  image: registry:2.3.1\n  environment:\n    REGISTRY_LOG_LEVEL: warn\n    REGISTRY_STORAGE_DELETE_ENABLED: true\n    REGISTRY_AUTH: token\n    REGISTRY_AUTH_TOKEN_REALM: https://${DOMAIN}:${PPORT}/v2/token\n    REGISTRY_AUTH_TOKEN_SERVICE: ${DOMAIN}:${RPORT}\n    REGISTRY_AUTH_TOKEN_ISSUER: ${DOMAIN}\n    REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /certs/registry.crt\n    REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry.crt\n    REGISTRY_HTTP_TLS_KEY: /certs/registry.key\n    REGISTRY_HTTP_SECRET: httpsecret\n    REGISTRY_NOTIFICATIONS_ENDPOINTS: >\n      - name: portus\n        url: http://portus:3000/v2/webhooks/events\n        timeout: 500\n        threshold: 5\n        backoff: 1\n  tty: true\n  stdin_open: true\n  links:\n  - portus:portus\n  volumes:\n  - ${DIR}/certs:/certs\n  - ${DIR}/data:/var/lib/registry\nlb:\n  image: rancher/load-balancer-service\n  tty: true\n  stdin_open: true\n  ports:\n  - ${RPORT}:5000/tcp\n  - ${PPORT}:443/tcp\n  labels:\n    io.rancher.loadbalancer.target.sslproxy: ${PPORT}=443\n    io.rancher.loadbalancer.target.registry: ${RPORT}=5000\n    io.rancher.scheduler.global: 'true'\n    io.rancher.scheduler.affinity:not_host_label: lb=0\n    io.rancher.scheduler.affinity:not_host_label: registry.enabled=false\n  links:\n  - registry:registry\n  - sslproxy:sslproxy\nportus:\n  image: sshipway/portus:2.0.5\n  environment: \n    PORTUS_MACHINE_FQDN: ${DOMAIN}\n    PORTUS_PRODUCTION_HOST: db\n    PORTUS_PRODUCTION_DATABASE: portus\n    PORTUS_PRODUCTION_USERNAME: portus\n    PORTUS_PRODUCTION_PASSWORD: ${DBPASSWORD}\n    PORTUS_GRAVATAR_ENABLED: true\n    PORTUS_KEY_PATH: /certs/registry.key\n    PORTUS_PASSWORD: ${DBPASSWORD}\n    PORTUS_SECRET_KEY_BASE: ${ROOTPASSWORD}\n    PORTUS_CHECK_SSL_USAGE_ENABLED: true\n    PORTUS_SMTP_ENABLED: false\n    PORTUS_LDAP_ENABLED: ${LDAP}\n    PORTUS_LDAP_HOSTNAME: ${LDAPHOST}\n    PORTUS_LDAP_PORT: ${LDAPPORT}\n    PORTUS_LDAP_METHOD: ${LDAPTLS}\n    PORTUS_LDAP_BASE: ${LDAPBASE}\n    PORTUS_LDAP_UID: ${LDAPBINDUID} \n    PORTUS_LDAP_AUTHENTICATION_ENABLED: ${LDAPBIND}\n    PORTUS_LDAP_AUTHENTICATION_BIND_DN: ${LDAPBINDDN}\n    PORTUS_LDAP_AUTHENTICATION_PASSWORD: ${LDAPBINDPASS}\n    PORTUS_LDAP_GUESS_EMAIL_ENABLED: true\n    PORTUS_LDAP_GUESS_EMAIL_ATTR: mail\n    PORTUS_PORT: ${PPORT}\n    REGISTRY_SSL_ENABLED: true\n    REGISTRY_HOSTNAME: ${DOMAIN}\n    REGISTRY_PORT: ${RPORT}\n    REGISTRY_NAME: Registry\n  tty: true\n  stdin_open: true\n  volumes:\n  - ${DIR}/certs:/certs\n  - ${DIR}/proxy:/etc/nginx/conf.d\n  links:\n  - db:db\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.affinity:container_label_soft: registry.portus.db=1\n    registry.portus.app: 1\n\n\n\nRegistry Convoy\n\n\nRegistry\u3092convoy\u306evolume\u3092\u5229\u7528\u3057\u3066\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\n\n\ndocker-compose.yml\ndb:\n  image: mysql:5.7.10\n  environment:\n    MYSQL_DATABASE: portus\n    MYSQL_ROOT_PASSWORD: ${ROOTPASSWORD}\n    MYSQL_USER: portus\n    MYSQL_PASSWORD: ${DBPASSWORD}\n  tty: true\n  stdin_open: true\n  volume_driver: ${DRIVER}\n  volumes:\n  - ${PFX}-db:/var/lib/mysql\n  labels:\n    registry.portus.db: 1\nsslproxy:\n  image: nginx:1.9.9\n  tty: true\n  stdin_open: true\n  links:\n  - portus:portus\n  volume_driver: ${DRIVER}\n  volumes:\n  - ${PFX}-certs:/etc/nginx/certs:ro\n  - ${PFX}-proxy:/etc/nginx/conf.d:ro\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft: registry.portus.db=1\nregistry:\n  image: registry:2.3.1\n  environment:\n    REGISTRY_LOG_LEVEL: warn\n    REGISTRY_STORAGE_DELETE_ENABLED: true\n    REGISTRY_AUTH: token\n    REGISTRY_AUTH_TOKEN_REALM: https://${DOMAIN}:${PPORT}/v2/token\n    REGISTRY_AUTH_TOKEN_SERVICE: ${DOMAIN}:${RPORT}\n    REGISTRY_AUTH_TOKEN_ISSUER: ${DOMAIN}\n    REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /certs/registry.crt\n    REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry.crt\n    REGISTRY_HTTP_TLS_KEY: /certs/registry.key\n    REGISTRY_HTTP_SECRET: httpsecret\n    REGISTRY_NOTIFICATIONS_ENDPOINTS: >\n      - name: portus\n        url: http://portus:3000/v2/webhooks/events\n        timeout: 500\n        threshold: 5\n        backoff: 1\n  tty: true\n  stdin_open: true\n  links:\n  - portus:portus\n  volume_driver: ${DRIVER}\n  volumes:\n  - ${PFX}-certs:/certs\n  - ${PFX}-data:/var/lib/registry\nlb:\n  image: rancher/load-balancer-service\n  tty: true\n  stdin_open: true\n  ports:\n  - ${RPORT}:5000/tcp\n  - ${PPORT}:443/tcp\n  labels:\n    io.rancher.loadbalancer.target.sslproxy: ${PPORT}=443\n    io.rancher.loadbalancer.target.registry: ${RPORT}=5000\n    io.rancher.scheduler.global: 'true'\n    io.rancher.scheduler.affinity:not_host_label: lb=0\n    io.rancher.scheduler.affinity:not_host_label: registry.enabled=false\n  links:\n  - registry:registry\n  - sslproxy:sslproxy\nportus:\n  image: sshipway/portus:2.0.5\n  environment: \n    PORTUS_MACHINE_FQDN: ${DOMAIN}\n    PORTUS_PRODUCTION_HOST: db\n    PORTUS_PRODUCTION_DATABASE: portus\n    PORTUS_PRODUCTION_USERNAME: portus\n    PORTUS_PRODUCTION_PASSWORD: ${DBPASSWORD}\n    PORTUS_GRAVATAR_ENABLED: true\n    PORTUS_KEY_PATH: /certs/registry.key\n    PORTUS_PASSWORD: ${DBPASSWORD}\n    PORTUS_SECRET_KEY_BASE: ${ROOTPASSWORD}\n    PORTUS_CHECK_SSL_USAGE_ENABLED: true\n    PORTUS_SMTP_ENABLED: false\n    PORTUS_LDAP_ENABLED: ${LDAP}\n    PORTUS_LDAP_HOSTNAME: ${LDAPHOST}\n    PORTUS_LDAP_PORT: ${LDAPPORT}\n    PORTUS_LDAP_METHOD: ${LDAPTLS}\n    PORTUS_LDAP_BASE: ${LDAPBASE}\n    PORTUS_LDAP_UID: cn\n    PORTUS_LDAP_AUTHENTICATION_ENABLED: ${LDAPBIND}\n    PORTUS_LDAP_AUTHENTICATION_BIND_DN: ${LDAPBINDDN}\n    PORTUS_LDAP_AUTHENTICATION_PASSWORD: ${LDAPBINDPASS}\n    PORTUS_LDAP_GUESS_EMAIL_ENABLED: true\n    PORTUS_LDAP_GUESS_EMAIL_ATTR: mail\n    PORTUS_PORT: ${PPORT}\n    REGISTRY_SSL_ENABLED: true\n    REGISTRY_HOSTNAME: ${DOMAIN}\n    REGISTRY_PORT: ${RPORT}\n    REGISTRY_NAME: Registry\n  tty: true\n  stdin_open: true\n  volume_driver: ${DRIVER}\n  volumes:\n  - ${PFX}-certs:/certs\n  - ${PFX}-proxy:/etc/nginx/conf.d\n  links:\n  - db:db\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.affinity:container_label_soft: registry.portus.db=1\n    registry.portus.app: 1\n\n\n\n\nREX-Ray\n\n\nREX-Ray\u306f\u3001\u30d9\u30f3\u30c0\u30fc\u306b\u4f9d\u5b58\u3057\u306a\u3044\u30b9\u30c8\u30ec\u30fc\u30b8\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30a8\u30f3\u30b8\u30f3\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u4e3b\u306a\u8a2d\u8a08\u76ee\u6a19\u306f\u3001Docker\u30b3\u30f3\u30c6\u30ca\u304a\u3088\u3073Mesos\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u30bf\u30b9\u30af\u306b\u6c38\u7d9a\u7684\u306a\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u307e\u305f\u3001Go\u30d1\u30c3\u30b1\u30fc\u30b8\u3001CLI\u30c4\u30fc\u30eb\u3001\u304a\u3088\u3073Linux\u30b5\u30fc\u30d3\u30b9\u3068\u3057\u3066\u8ffd\u52a0\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3067\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\ndocker-compose.yml\nrexray:\n    image: wlan0/sdc2\n    stdin_open: true\n    tty: true\n    privileged: true\n    net: host\n    environment:\n        STACK_NAME: ${SCALEIO_STACK_NAME}\n        SYSTEM_ID: ${SCALEIO_SYSTEM_ID}\n        MDM_IP:    ${SCALEIO_MDM_IP}\n    volumes:\n        - /proc:/host/proc\n    labels:\n        io.rancher.container.pull_image: always\n        io.rancher.container.dns: true\n        io.rancher.scheduler.affinity:host_label: rexray.scaleio=true\n\n\n\n\nRocketChat\n\n\nmeteor\u88fd\u306e\u30c1\u30e3\u30c3\u30c8\u30a2\u30d7\u30ea\u3067\u3059\u3002\nBYOS\u306a\u306e\u3067\u3001\u81ea\u5206\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001\u8d77\u52d5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u308b\u3067Slack\u306e\u3088\u3046\u306a\u3001\u3068\u3044\u3046\u304b\u307b\u3068\u3093\u3069Slack\u306aUI\u3067\u3059\u3002\nSlack\u306e\u3088\u3046\u306aBYOS\u3067OSS\u306a\u30c1\u30e3\u30c3\u30c8 Rocket.Chat \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n\nRoute53 DNS\n\n\naws \u306bRoute53\u3068\u3044\u3044\u611f\u3058\u306b\u9023\u643a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nAWS Route53\u30c9\u30e1\u30a4\u30f3\u53d6\u5f97\u304b\u3089Certificate Manager\u3067\u306e\u8a3c\u660e\u66f8\u4f5c\u6210\u307e\u3067\n\n\ndocker-compose.yml\nmongo:\n  image: mongo\n# volumes:\n#    - ./data/runtime/db:/data/db\n#    - ./data/dump:/dump\n  command: mongod --smallfiles --oplogSize 128\n\nrocketchat:\n  image: rocketchat/rocket.chat:latest\n# volumes:\n#    - ./uploads:/app/uploads\n  environment:\n    - PORT=3000\n    - ROOT_URL=http://yourhost:3000\n    - MONGO_URL=mongodb://mongo:27017/rocketchat\n  links:\n    - mongo:mongo\n  ports:\n    - 3000:3000\n\n# hubot, the popular chatbot (add the bot user first and change the password before starting this image)\nhubot:\n  image: rocketchat/hubot-rocketchat\n  environment:\n    - ROCKETCHAT_URL=rocketchat:3000\n    - ROCKETCHAT_ROOM=GENERAL\n    - ROCKETCHAT_USER=bot\n    - ROCKETCHAT_PASSWORD=botpassword\n    - BOT_NAME=bot\n# you can add more scripts as you'd like here, they need to be installable by npm\n    - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics\n  links:\n    - rocketchat:rocketchat\n# this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier\n  ports:\n    - 3001:8080\n\n\n\n\nScaleIO NAS/DAS\n\n\n\u5206\u6563\u30b9\u30c8\u30ec\u30fc\u30b8\u30b7\u30b9\u30c6\u30e0\u30fbSDS(Software Defined Storage)\n\u5206\u6563\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u3057\u3066Sheepdog, DRBD, VSAN, ScaleIO\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\u6700\u8fd1\u3067\u306fSDS(Software Defined Storage)\u3068\u30ab\u30c6\u30b4\u30e9\u30a4\u30ba\u3055\u308c\u308b\u3053\u3068\u3082\u591a\u3044\u3067\u3059\u3002\n\u660e\u65e5\u304b\u3089\u8a66\u305b\u308b\uff01\u30bd\u30d5\u30c8\u30a6\u30a8\u30a2\u30d9\u30fc\u30b9\u30b9\u30c8\u30ec\u30fc\u30b8\u300cScaleIO\u300d\u306e\u3054\u7d39\u4ecb\n\n\ndocker-compose.yml\n\ntb:\n  privileged: true\n  volumes:\n   - /sys/fs/cgroup:/sys/fs/cgroup:ro\n  image: wlan0/tb\n  labels:\n      io.rancher.container.pull_image: always\n      io.rancher.container.hostname_override: container_name\n\nsds:\n  privileged: true\n  volumes:\n   - /sys/fs/cgroup:/sys/fs/cgroup:ro\n  image: wlan0/sds\n  labels:\n      io.rancher.container.hostname_override: container_name\n      io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n      io.rancher.container.pull_image: always\n\nmdm:\n  privileged: true\n  volumes:\n   - /sys/fs/cgroup:/sys/fs/cgroup:ro\n   - /dev/shm:/dev/shm\n  image: wlan0/mdm\n  labels:\n      io.rancher.container.hostname_override: container_name\n      io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/primary_mdm\n      io.rancher.container.pull_image: always\n\nprimary-mdm:\n  privileged: true\n  volumes:\n   - /sys/fs/cgroup:/sys/fs/cgroup:ro\n   - /dev/shm:/dev/shm\n  image: wlan0/mdm\n  command: /usr/sbin/init\n  entrypoint: /run_mdm_and_configure.sh\n  labels:\n      io.rancher.container.hostname_override: container_name\n      io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/mdm\n      io.rancher.container.pull_image: always\n\n\n\n\nSecrets Bridge\n\n\nSecrets Bridge\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u8d77\u52d5\u6642\u306eDocker\u30b3\u30f3\u30c6\u30ca\u304cVault\u5185\u306e\u79d8\u5bc6\u3068\u5b89\u5168\u306b\u63a5\u7d9a\u3055\u308c\u308b\u3088\u3046\u306b\u3001Rancher\u3068Vault\u3092\u7d71\u5408\u3059\u308b\u6a19\u6e96\u5316\u3055\u308c\u305f\u65b9\u6cd5\u3067\u3059\u3002\n\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30d6\u30ea\u30c3\u30b8\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\n\n\ndocker-compose.yml\nsecrets-bridge:\n    image: rancher/secrets-bridge:v0.2.0\n    environment:\n        CATTLE_ACCESS_KEY: ${CATTLE_ACCESS_KEY}\n        CATTLE_SECRET_KEY: ${CATTLE_SECRET_KEY}\n        CATTLE_URL: ${CATTLE_URL}\n        VAULT_TOKEN: ${VAULT_TOKEN}\n        VAULT_CUBBYPATH: ${VAULT_CUBBYPATH}\n    command: \n        - server\n        - --vault-url\n        - ${VAULT_URL}\n        - --rancher-url\n        - $CATTLE_URL\n        - --rancher-secret\n        - ${CATTLE_SECRET_KEY}\n        - --rancher-access\n        - ${CATTLE_ACCESS_KEY}\nsecrets-bridge-lb:\n    ports:\n        - \"${LBPORT}:8181\"\n    image: rancher/load-balancer-service\n    links:\n        - secrets-bridge:secrets-bridge\n\n\n\nSecrets Bridge Agents\n\n\nSecrets Bridge\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u8d77\u52d5\u6642\u306eDocker\u30b3\u30f3\u30c6\u30ca\u304cVault\u5185\u306e\u79d8\u5bc6\u3068\u5b89\u5168\u306b\u63a5\u7d9a\u3055\u308c\u308b\u3088\u3046\u306b\u3001Rancher\u3068Vault\u3092\u7d71\u5408\u3059\u308b\u6a19\u6e96\u5316\u3055\u308c\u305f\u65b9\u6cd5\u3067\u3059\u3002\n\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30d6\u30ea\u30c3\u30b8\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\n\n\ndocker-compose.yml\nsecrets-bridge:\n    image: rancher/secrets-bridge:v0.2.0\n    command: agent --bridge-url ${BRIDGE_URL}\n    volumes:\n        - /var/run/docker.sock:/var/run/docker.sock\n    privileged: true\n    labels:\n        io.rancher.container.create_agent: true\n        io.rancher.container.agent.role: agent\n        io.rancher.scheduler.global: true\n\n\n\nSematext Docker Agent\n\n\nhttps://github.com/sematext/sematext-agent-docker\nDocker\u7528Sematext Agent\u306f\u3001SPM Docker Monitoring\uff06Logsene / Hosted ELK Log Management\u7528\u306eDocker API\u304b\u3089\u30e1\u30c8\u30ea\u30c3\u30af\u3001\u30a4\u30d9\u30f3\u30c8\u3001\u30ed\u30b0\u3092\u53ce\u96c6\u3057\u307e\u3059\u3002 CoreOS\u3001RancherOS\u3001Docker Swarm\u3001Kubernetes\u3001Apache Mesos\u3001Hashicorp Nomad\u3001Amzon ECS\u3001...\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\ndocker-compose.yml\nsematext-agent:  \n  image: 'sematext/sematext-agent-docker:${image_version}'\n  environment:\n    - LOGSENE_TOKEN=${logsene_token}\n    - SPM_TOKEN=${spm_token}\n    - GEOIP_ENABLED=${geoip_enabled}\n    - HTTPS_PROXY=${https_proxy}\n    - HTTP_PROXY=${http_proxy}\n    - MATCH_BY_IMAGE=${match_by_image}\n    - MATCH_BY_NAME=${match_by_name}\n    - SKIP_BY_IMAGE=${match_by_image}\n    - SKIP_BY_NAME=${match_by_name}\n    - LOGAGENT_PATTERNS=${logagent_patterns}\n    - KUBERNETES=${kubernetes}\n  restart: always\n  volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n  labels:\n    io.rancher.scheduler.global: 'true'\n\nLaunch\n\n\n\nSentry\n\n\n\u69d8\u3005\u306a\u8a00\u8a9e\u304b\u3089\u9001\u4fe1\u3055\u308c\u305f\u30a4\u30d9\u30f3\u30c8\u30ed\u30b0\u3092\u8868\u793a\u3057\u3066\u304f\u308c\u308b\u3084\u3064\nSentry\u3067js\u306e\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u53ce\u96c6\u3057\u3066\u307f\u305f\n\u30a4\u30d9\u30f3\u30c8\u30ed\u30b0\u53ce\u96c6\u30c4\u30fc\u30eb\u306e Sentry \u304c\u51c4\u305d\u3046\n\n\ndocker-compose.yml\nsentry-postgres:\n  environment:\n    POSTGRES_USER: sentry\n    POSTGRES_PASSWORD: secret\n    PGDATA: /data/postgres/data\n  log_driver: ''\n  labels:\n    io.rancher.container.pull_image: always\n  tty: true\n  log_opt: {}\n  image: postgres:9.5.3\n  stdin_open: true\nsentry-cron:\n  environment:\n    SENTRY_EMAIL_HOST: ${sentry_email_host}\n    SENTRY_EMAIL_PASSWORD: ${sentry_email_password}\n    SENTRY_EMAIL_PORT: '${sentry_email_port}'\n    SENTRY_EMAIL_USER: ${sentry_email_user}\n    SENTRY_SECRET_KEY: ${sentry_secret_key}\n    SENTRY_SERVER_EMAIL: ${sentry_server_email}\n  log_driver: ''\n  labels:\n    io.rancher.container.pull_image: always\n  tty: true\n  command:\n  - run\n  - cron\n  log_opt: {}\n  image: sentry:8.5.0\n  links:\n  - sentry-postgres:postgres\n  - sentry-redis:redis\n  stdin_open: true\nsentry-redis:\n  log_driver: ''\n  labels:\n    io.rancher.container.pull_image: always\n  tty: true\n  log_opt: {}\n  image: redis:3.2.0-alpine\n  stdin_open: true\nsentry:\n  ports:\n  - ${sentry_public_port}:9000/tcp\n  environment:\n    SENTRY_EMAIL_HOST: ${sentry_email_host}\n    SENTRY_EMAIL_PASSWORD: ${sentry_email_password}\n    SENTRY_EMAIL_PORT: '${sentry_email_port}'\n    SENTRY_EMAIL_USER: ${sentry_email_user}\n    SENTRY_SECRET_KEY: ${sentry_secret_key}\n    SENTRY_SERVER_EMAIL: ${sentry_server_email}\n  log_driver: ''\n  labels:\n    io.rancher.container.pull_image: always\n  tty: true\n  command:\n  - /bin/bash\n  - -c\n  - sentry upgrade --noinput && sentry createuser --email ${sentry_inital_user_email} --password ${sentry_inital_user_password} --superuser && /entrypoint.sh run web || /entrypoint.sh run web\n  log_opt: {}\n  image: sentry:8.5.0\n  links:\n  - sentry-postgres:postgres\n  - sentry-redis:redis\n  stdin_open: true\nsentry-worker:\n  environment:\n    SENTRY_EMAIL_HOST: ${sentry_email_host}\n    SENTRY_EMAIL_PASSWORD: ${sentry_email_password}\n    SENTRY_EMAIL_PORT: '${sentry_email_port}'\n    SENTRY_EMAIL_USER: ${sentry_email_user}\n    SENTRY_SECRET_KEY: ${sentry_secret_key}\n    SENTRY_SERVER_EMAIL: ${sentry_server_email}\n  log_driver: ''\n  labels:\n    io.rancher.scheduler.global: 'true'\n    io.rancher.container.pull_image: always\n  tty: true\n  command:\n  - run\n  - worker\n  log_opt: {}\n  image: sentry:8.5.0\n  links:\n  - sentry-postgres:postgres\n  - sentry-redis:redis\n  stdin_open: true\n\n\n\nSonarQube\n\n\n\u30b9\u30a4\u30b9\u306eSonarSource\u793e\u304c\u4e3b\u306b\u958b\u767a\u3092\u884c\u3063\u3066\u3044\u308b\u7d71\u5408\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u54c1\u8cea\u7ba1\u7406\u3092\u884c\u3048\u308b\u7d71\u5408\u54c1\u8cea\u7ba1\u7406\u30c4\u30fc\u30eb\nSonarQube\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u54c1\u8cea\u7ba1\u7406\u3092\u306f\u3058\u3081\u308b\uff08\u6982\u8981\uff09\nSonarQube\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u54c1\u8cea\u30c1\u30a7\u30c3\u30af\n\n\ndocker-compose.yml\nsonarqube-data:\n    image: busybox\n    net: none\n    labels:\n      io.rancher.container.start_once: true\n    volumes:\n        - /opt/sonarqube/extensions/plugins\n\nsonarqube:\n    image: sonarqube\n    ports:\n        - ${http_port}:9000\n    links:\n        - postgres\n    environment:\n        http_proxy: ${http_proxy}\n        https_proxy: ${https_proxy}\n        SONARQUBE_JDBC_USERNAME: ${postgres_user}\n        SONARQUBE_JDBC_PASSWORD: ${postgres_password}\n        SONARQUBE_JDBC_URL: jdbc:postgresql://postgres/sonar\n    labels:\n        io.rancher.sidekicks: sonarqube-data\n    volumes_from:\n        - sonarqube-data        \n\npostgres-data:\n    image: busybox\n    net: none\n    labels:\n      io.rancher.container.start_once: true\n    volumes:\n        - ${postgres_data}\n\npostgres:\n    image: postgres:latest\n    ports:\n        - ${postgress_port}:5432\n    environment:\n        PGDATA: ${postgres_data}\n        POSTGRES_DB: ${postgres_db}\n        POSTGRES_USER: ${postgres_user}\n        POSTGRES_PASSWORD: ${postgres_password}\n    tty: true\n    stdin_open: true\n    labels:\n        io.rancher.sidekicks: postgres-data\n    volumes_from:\n        - postgres-data\n\n\n\n\n\nSysdig\n\n\nstrace + tcpdump + lsof + htop + iftop + Lua = sysdig \u3063\u3066\u611f\u3058\u3067\u3059\u3002curses \u306b\u3088\u308b\u30b0\u30e9\u30d5\u30a3\u30ab\u30eb\u306aUI\u51fa\u529b\u306a\u3069\u3082\u53ef\u80fd\u3067\u3059\u3002\nLogging drivers\u3092\u8a66\u3057\u3066\u307f\u305f\n\n\ndocker-compose.yml\nsysdig:\n  container_name: sysdig\n  privileged: true\n  stdin_open: true\n  tty: true\n  image: sysdig/sysdig:${VERSION}\n  volumes:\n    - /var/run/docker.sock:/host/var/run/docker.sock\n    - /dev:/host/dev\n    - /proc:/host/proc:ro\n    - /boot:/host/boot:ro\n    - /lib/modules:/host/lib/modules:ro\n    - /usr:/host/usr:ro\n  labels:\n     io.rancher.scheduler.global: true\n     io.rancher.scheduler.affinity:host_label_ne: ${HOST_EXCLUDE_LABEL}\n\n\n\nSysdig Cloud\n\n\nSysdig \u306e\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u7248\n\n\ndocker-compose.yml\nsysdig-agent:\n  container_name: sysdig-agent\n  privileged: true\n  image: sysdig/agent:${VERSION}\n  net: \"host\"\n  pid: \"host\"\n  environment:\n    ACCESS_KEY: ${SDC_ACCESS_KEY}\n    TAGS: \"${SDC_TAGS}\"\n    ADDITIONAL_CONF: \"${SDC_ADDITIONAL_CONF}\"\n  log_opt:\n    max-size: ${LOG_SIZE}\n  volumes:\n    - /var/run/docker.sock:/host/var/run/docker.sock\n    - /dev:/host/dev\n    - /proc:/host/proc:ro\n    - /boot:/host/boot:ro\n    - /lib/modules:/host/lib/modules:ro\n    - /usr:/host/usr:ro\n  labels:\n     io.rancher.scheduler.global: true\n     io.rancher.scheduler.affinity:host_label_ne: ${HOST_EXCLUDE_LABEL}\n\n\n\nTaiga\n\n\n\u3084\u305f\u3089\u30c7\u30b6\u30a4\u30f3\u304c\u304d\u308c\u3044\u306a\u30a2\u30b8\u30e3\u30a4\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7ba1\u7406\u30c4\u30fc\u30eb\u3002Trello\u30af\u30ed\u30fc\u30f3\u3068\u3044\u3046\u611f\u3058\u306f\u306a\u304f\u3001Redmine\u62e1\u5f35\u306eAlminium\u306b\u4f3c\u3066\u3044\u308b\u3002\nTAIGA on Docker\u3067\u672c\u683c\u30a2\u30b8\u30e3\u30a4\u30eb\u958b\u767a\u7ba1\u7406\n\n\ndocker-compose.yml\npostgres:\n  image: postgres\n  environment:\n    - POSTGRES_DB=taiga\n    - POSTGRES_USER=taiga\n    - POSTGRES_PASSWORD=password\n  volumes:\n    - ${DATABASE}:/var/lib/postgresql/data\n\nrabbit:\n  image: rabbitmq:3\n  hostname: rabbit\n\nredis:\n  image: redis:3\n\ncelery:\n  image: celery\n  links:\n    - rabbit\n\nevents:\n  image: kartoffeltoby/taiga-events:latest\n  links:\n    - rabbit\n\ntaiga:\n  image: kartoffeltoby/taiga:latest\n  restart: always\n  links:\n    - postgres\n    - events\n    - rabbit\n    - redis\n  environment:\n    - TAIGA_HOSTNAME=${DOMAIN}\n    - TAIGA_DB_HOST=postgres\n    - TAIGA_DB_NAME=taiga\n    - TAIGA_DB_USER=taiga\n    - TAIGA_DB_PASSWORD=password\n    - HTTPS_SELF_DOMAIN=${DOMAIN}\n    - TAIGA_SSL=True\n    - TAIGA_SLEEP=10\n  volumes:\n    - ${DATA}:/usr/src/taiga-back/media\n\n\n\nTeamCity\n\n\n\u5206\u6563\u578b\u7d99\u7d9a\u7684\u7d71\u5408\u30b5\u30fc\u30d0\u30fc\nTeamCity\u306f\u3001\u72ec\u5275\u7684\u306a\u7d99\u7d9a\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3001\u30b3\u30fc\u30c9\u54c1\u8cea\u5206\u6790\u3001\u30d3\u30eb\u30c9\u554f\u984c\u306e\u65e9\u671f\u5831\u544a\u30c4\u30fc\u30eb\u3067\u3059\u3002\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u975e\u5e38\u306b\u7c21\u5358\u3067\u307b\u3093\u306e\u6570\u5206\u3067\u7d42\u308f\u308a\u307e\u3059\u306e\u3067\u3042\u3063\u3068\u3044\u3046\u9593\u306b\u30b3\u30fc\u30c9\u3084\u30ea\u30ea\u30fc\u30b9\u7ba1\u7406\u306e\u54c1\u8cea\u5411\u4e0a\u3092\u4f53\u611f\u3067\u304d\u308b\u3053\u3068\u3067\u3057\u3087\u3046\u3002\nTeamCity\u306fJava\u3001.NET\u3001Ruby\u958b\u767a\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3001\u4e3b\u8981\u306aIDE\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3001\u30d0\u30b0\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3068\u5b8c\u5168\u306b\u9023\u643a\u3067\u304d\u307e\u3059\u3002\nnode \u00d7 TeamCity \u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3 \u301cTeamCity\u4e0a\u3067node, npm \u3092\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u301c\nmocha \u00d7 TeamCity \u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3 \u301c\u30c6\u30b9\u30c8\u7d50\u679c\u3001\u30ab\u30d0\u30ec\u30c3\u30b8\u3092TeamCity \u306b\u8868\u793a\u3059\u308b\u301c\n\n\ndocker-compose.yml\nteamcity-data:\n    image: busybox\n    tty: true\n    volumes:\n        - /var/lib/teamcity\n\nteamcity-server:\n    image: sjoerdmulder/teamcity:latest\n    ports:\n        - ${http_port}:8111\n    links:\n        - postgres:${postgress_container}\n    environment:\n        http_proxy: ${http_proxy}\n        https_proxy: ${https_proxy}\n    labels:\n        io.rancher.sidekicks: teamcity-data\n    volumes_from:\n        - teamcity-data        \n\npostgres-data:\n    image: busybox\n    tty: true\n    volumes:\n        - ${postgres_data}\n\npostgres:\n    image: postgres:latest\n    ports:\n        - ${postgress_port}:5432\n    environment:\n        PGDATA: ${postgres_data}\n        POSTGRES_DB: ${postgres_db}\n        POSTGRES_USER: ${postgres_user}\n        POSTGRES_PASSWORD: ${postgres_password}\n    tty: true\n    stdin_open: true\n    labels:\n        io.rancher.sidekicks: postgres-data\n    volumes_from:\n        - postgres-data\n\nteamcity-agent:\n    image: sjoerdmulder/teamcity-agent:latest\n    links:\n        - teamcity-server:teamcity-server\n    environment:\n        TEAMCITY_SERVER: http://teamcity-server:8111\n\n\n\n\nTraefik\n\n\nTraefik\u3068\u306f\u69d8\u3005\u306a\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\uff08docker\u3001swarm\u3001kubernetes\u3001mesos\u3001consul\u3001zookeeper\u306a\u3069\uff09\u306e\u72b6\u614b\u3092\u5143\u306b\u8a2d\u5b9a\u3092\u52d5\u7684\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u517c\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3067\u3059\u3002Go\u3067\u66f8\u304b\u308c\u3066\u304a\u308a\u3001\u4ed6\u306eGo\u88fd\u30c4\u30fc\u30eb\u3068\u540c\u3058\u304f\u3001\u30d0\u30a4\u30ca\u30ea\u3092\u3072\u3068\u3064\u7f6e\u304f\u3060\u3051\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u7dba\u9e97\u306aGUI\u3082\u5099\u3048\u3066\u3044\u307e\u3059\u3002\nCoreOS\u74b0\u5883\u3067traefik\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3092\u884c\u3046\u65b9\u6cd5\nTraefik \u3068 consul \u3092\u4f7f\u3063\u3066 web \u30b5\u30fc\u30d3\u30b9\u3092\u304a\u6c17\u8efd\u306b\u3076\u3089\u4e0b\u3052\u308b\n\n\ndocker-compose.yml\ntraefik:\n  ports:\n  - ${admin_port}:8000/tcp\n  - ${http_port}:${http_port}/tcp\n  - ${https_port}:${https_port}/tcp\n  log_driver: ''\n  labels:\n    io.rancher.scheduler.global: 'true'\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.sidekicks: traefik-conf\n    io.rancher.container.hostname_override: container_name\n  tty: true\n  log_opt: {}\n  image: rawmind/alpine-traefik:1.1.2-1\n  environment:\n  - CONF_INTERVAL=${refresh_interval}\n  - TRAEFIK_HTTP_PORT=${http_port}\n  - TRAEFIK_HTTPS_PORT=${https_port}\n  - TRAEFIK_HTTPS_ENABLE=${https_enable}\n  - TRAEFIK_ACME_ENABLE=${acme_enable}\n  - TRAEFIK_ACME_EMAIL=${acme_email}\n  - TRAEFIK_ACME_ONDEMAND=${acme_ondemand}\n  - TRAEFIK_ACME_ONHOSTRULE=${acme_onhostrule}\n  volumes_from:\n  - traefik-conf\ntraefik-conf:\n  log_driver: ''\n  labels:\n    io.rancher.scheduler.global: 'true'\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.start_once: 'true'\n  tty: true\n  log_opt: {}\n  image: rawmind/rancher-traefik:0.3.4-18\n  net: none\n  volumes:\n    - /opt/tools\n\n\n\n\n\nTurtl\n\n\n\u30ce\u30fc\u30c8\u3001\u7814\u7a76\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001\u30d6\u30c3\u30af\u30de\u30fc\u30af\u3001\u5922\u306e\u30ed\u30b0\u3001\u5199\u771f\u3001\u66f8\u985e\u305d\u306e\u4ed6\u306e\u5b89\u5168\u3092\u5b88\u308b\u305f\u3081\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u5834\u6240\u3067\u3059\u3002 Turtl\u306e\u7c21\u5358\u306a\u30bf\u30b0\u4ed8\u3051\u3068\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306f\u3001\u500b\u4eba\u7684\u306a\u30d7\u30ed\u30d5\u30a7\u30c3\u30b7\u30e7\u30ca\u30eb\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u305f\u3081\u306b\u7d44\u7e54\u5316\u3084\u7814\u7a76\u306b\u7406\u60f3\u7684\u3067\u3059\u3002\n\u6700\u9ad8\u306e\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u306eTurtl\u3092Evernote\u3060\u3068\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002\nhttps://turtlapp.com/\n\n\ndocker-compose.yml\nturtl-api-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  entrypoint:\n  - /bin/true\n  image: busybox\n  volumes:\n    - /opt/api/uploads\n    - /var/lib/rethinkdb/instance1\n\nturtl-api:\n  ports:\n    - 8181:8181/tcp\n  environment:\n    DISPLAY_ERRORS: ${DISPLAY_ERRORS}\n    FQDN: ${FQDN}\n    SITE_URL: ${SITE_URL}\n    LOCAL_UPLOAD_URL: ${LOCAL_UPLOAD_URL}\n    LOCAL_UPLOAD_PATH: ${LOCAL_UPLOAD_PATH}\n    AWS_S3_TOKEN: ${AWS_S3_TOKEN}\n    ADMIN_EMAIL: ${ADMIN_EMAIL}\n    EMAIL_FROM: ${EMAIL_FROM}\n    SMTP_USER: ${SMTP_USER}\n    SMTP_PASS: ${SMTP_PASS}\n    DEFAULT_STORAGE_LIMIT: ${DEFAULT_STORAGE_LIMIT}\n    STORAGE_INVITE_CREDIT: ${STORAGE_INVITE_CREDIT}\n  image: webofmars/turtl-docker:latest\n  stdin_open: true\n  tty: true\n  labels:\n    io.rancher.sidekicks: turtl-api-data\n  volumes_from:\n    - turtl-api-data\n\n\n\n\nWeave Scope\n\n\nWeave Scope \u306f\u30d6\u30e9\u30a6\u30b6\u3092\u901a\u3057\u3066\u3001\u30db\u30b9\u30c8\u4e0a\u3067\u3069\u306e\u3088\u3046\u306a\u30b3\u30f3\u30c6\u30ca\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\uff08\u30d7\u30ed\u30bb\u30b9\uff09\u304c\u7a3c\u50cd\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u305d\u306e\u95a2\u9023\u6027\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u30de\u30c3\u30d4\u30f3\u30b0\uff08\u5730\u56f3\u5316\uff09\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3059\u3002\nWeave Scope\u3067\u30b3\u30f3\u30c6\u30ca\u69cb\u6210\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u8996\u899a\u5316\n\n\ndocker-compose.yml\nweavescope-probe:\n  image: weaveworks/scope:1.0.0\n  privileged: true\n  net: host\n  pid: host\n  labels:\n    io.rancher.scheduler.global: true\n    io.rancher.container.dns: true\n  links:\n  - weavescope-app\n  volumes:\n  - \"/var/run/docker.sock:/var/run/docker.sock\"\n  tty: true\n  command:\n  - \"--probe.docker\"\n  - \"true\"\n  - \"--no-app\"\n  - \"weavescope-app\"\nweavescope-app:\n  image: weaveworks/scope:1.0.0\n  ports:\n  - \"4040:4040\"\n  command:\n  - \"--no-probe\"\n\n\n\n\nWekan\n\n\n\u304b\u3093\u3070\u3093\u5f0f\u7ba1\u7406\u30c4\u30fc\u30ebWekan\u306fTrello\u30af\u30ed\u30fc\u30f3\u306e\u4e00\u3064\u3002\nDocker\u3067Wekan\u3092\u4f7f\u3046\n\n\ndocker-compose.yml\nwekandb:\n  image: mongo\n#  volumes:\n#    - ./data/runtime/db:/data/db\n#    - ./data/dump:/dump\n  command: mongod --smallfiles --oplogSize 128\n  ports:\n    - 27017\n\nwekan:\n  image: mquandalle/wekan\n  links:\n    - wekandb\n  environment:\n    - MONGO_URL=mongodb://wekandb/wekan\n    - ROOT_URL=http://localhost:80\n  ports:\n    - 80:80\n\n\n\nWordpress\n\n\n\u5b9a\u756a\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30d6\u30ed\u30b0\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\n\n\ndocker-compose.yml\nwordpress:\n  image: wordpress\n  links:\n    - db:mysql\n  ports:\n    - ${public_port}:80\n\ndb:\n  image: mariadb\n  environment:\n    MYSQL_ROOT_PASSWORD: example\n\n\n\n\nXPilots\n\n\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u578b\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30b2\u30fc\u30e0\u300cXPilot\u300d\n\n\ndocker-compose.yml\nserver:\n  environment:\n    PASSWORD: ${PASSWORD}\n  log_driver: ''\n  command:\n  - -server\n  log_opt: {}\n  tty: false\n  stdin_open: false\n  image: sshipway/xpilot:latest\n  labels:\n    xpilot: server\nclient:\n  environment:\n    DISPLAY: ${DISPLAY}\n    NAME: ${NAME}\n    SERVER: xpilot\n  log_driver: ''\n  command:\n  - xpilot\n  log_opt: {}\n  image: sshipway/xpilot:latest\n  links:\n  - server:xpilot\n  tty: false\n  stdin_open: false\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft: xpilot=server\n    io.rancher.container.start_once: 'true'\n\n\n\n\n\u307e\u3068\u3081\n\n\u3051\u3063\u3053\u3046\u9577\u3044\u8a18\u4e8b\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\n\u4fee\u6b63\u70b9\u3084\u8ffd\u52a0\u3057\u3066\u307b\u3057\u3044\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u308c\u3070\u304a\u3057\u3089\u305b\u304f\u3060\u3055\u3044\u307e\u3057\u3002\n\u6b21\u306fk8s\u3082\u5168\u3066\u6652\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3046\n\n# \u7d4c\u7def\n- \u4eca\u6d41\u884c\u308a\u306e[**Rancher**](http://qiita.com/cyberblack28/items/d1c6259c137c7c71703b)\u3092\u4f7f\u3063\u3066docker\u30b3\u30f3\u30c6\u30ca\u3092\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\n- Rancher\u306b\u306f\u300cCATALOG\u300d\u3068\u3044\u3046docker-compose.yml\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u3092\u5143\u306b\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n- \u307e\u305f\u3069\u3093\u306a\u30b5\u30fc\u30d3\u30b9\u304b\u3044\u3064\u3082\u6c17\u306b\u306a\u3063\u3066\u305f\u306e\u3067\u3001\u3069\u3046\u305b\u306a\u3089\u4f7f\u3044\u3053\u306a\u3057\u305f\u3044\u306e\u3067\u5099\u5fd8\u9332\u3068\u3057\u3066\n- **\u8272\u3005\u306a\u30b5\u30fc\u30d3\u30b9\u306edocker-compose\u304c\u3042\u308b\u306e\u3067\u53c2\u8003\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093**\n- \u307e\u305f\u3001glusterFS\u306e\u3088\u3046\u306b\u6d88\u3048\u3066\u3057\u307e\u3046\u524d\u306e\u30e1\u30e2\u3068\u3057\u3066\u3082\n\n# \u4f7f\u3044\u65b9\n- ${xxx}\u306f\u9069\u5b9c\u3001\u5024\u3092\u4ee3\u5165\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u7279\u306b\u304a\u3059\u3059\u3081\n- [Consul](http://qiita.com/okamu_/items/1c8e5fde742ca165fa12#consul-cluster)\n- [Elasticsearch](http://qiita.com/okamu_/items/1c8e5fde742ca165fa12#elasticsearch)\n- [Hadoop + Yarn](http://qiita.com/okamu_/items/1c8e5fde742ca165fa12#hadoop--yarn)\n- [Datadog](http://qiita.com/okamu_/items/1c8e5fde742ca165fa12#datadog-agent--dogstatsd)\n- [wordpress](http://qiita.com/okamu_/items/1c8e5fde742ca165fa12#wordpress)\n\n# docker-compose\u30b5\u30f3\u30d7\u30eb\n\n##Alfresco\n![community-alfresco_1.png](https://qiita-image-store.s3.amazonaws.com/0/62822/3c794c73-330b-0227-3291-c60cd05b0bf4.png)\n\n- \u30d5\u30a1\u30a4\u30eb\u5185\u5168\u6587\u691c\u7d22\u30fb\u30bf\u30b0\u4ed8\u3051\u3067\u30d5\u30a1\u30a4\u30eb\u304c\u975e\u5e38\u306b\u63a2\u3057\u3084\u3059\u3044\n- \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u53c2\u7167/\u66f4\u65b0\u5c65\u6b74\u304c\u53ef\u8996\u5316\u3055\u308c\u3066\u30c1\u30fc\u30e0\u30b3\u30e9\u30dc\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3084\u3059\u304f\u306a\u308b\n- [\u5168\u6587\u691c\u7d22\u3067\u304d\u308b\u30d5\u30a1\u30a4\u30eb\u30b5\u30fc\u30d0\u3068\u3057\u3066\u306eAlfresco](http://qiita.com/SavingThrow/items/f73af660b5b8c713d6d2)\n\n```docker-compose.yml\nalfresco:\n  environment:\n    CIFS_ENABLED: 'false'\n    FTP_ENABLED: 'false'\n  tty: true\n  image: webcenter/rancher-alfresco:v5.1-201605-1\n  links:\n  - postgres:db\n  stdin_open: true\n  ports:\n  - 8080:8080/tcp\n  volumes_from:\n    - alfresco-data\nalfresco-data:\n  image: alpine\n  volumes:\n  - /opt/alfresco/alf_data\n  net: none\n  command: /bin/true\npostgres:\n  environment:\n    PGDATA: /var/lib/postgresql/data/pgdata\n    POSTGRES_DB: ${database_name}\n    POSTGRES_PASSWORD: ${database_password}\n    POSTGRES_USER: ${database_user}\n  tty: true\n  image: postgres:9.4\n  stdin_open: true\n  volumes_from:\n    - postgres-data\npostgres-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  image: alpine\n  volumes:\n  - /var/lib/postgresql/data/pgdata\n  net: none\n  command: /bin/true\n\n```\n\n## Apache Kafka\n![community-kafka.jpg](https://qiita-image-store.s3.amazonaws.com/0/62822/939b62ce-f9e0-9ace-2e2b-c62f1d737a0e.jpeg)\n\n- 2011\u5e74\u306bLinkedIn\u304b\u3089\u516c\u958b\u3055\u308c\u305f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u5206\u6563\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3067\u3042\u308b\uff0eKafka\u306f\u30a6\u30a7\u30d6\u30b5\u30fc\u30d3\u30b9\u306a\u3069\u304b\u3089\u767a\u305b\u3089\u308c\u308b\u5927\u5bb9\u91cf\u306e\u30c7\u30fc\u30bf\uff08e.g., \u30ed\u30b0\u3084\u30a4\u30d9\u30f3\u30c8\uff09\u3092\u9ad8\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8/\u4f4e\u30ec\u30a4\u30c6\u30f3\u30b7\u306b\u53ce\u96c6/\u914d\u4fe1\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u306b\u958b\u767a\u3055\u308c\u3066\u3044\u308b\uff0e\n- Fast \u3068\u306b\u304b\u304f\u5927\u91cf\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\n- Scalable Kafka\u306f\u30b7\u30f3\u30b0\u30eb\u30af\u30e9\u30b9\u30bf\u3067\u5927\u898f\u6a21\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u306a\u3057\u3067Elastic\u304b\u3064\u900f\u904e\u7684\u306b\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n- Durable \u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u30c7\u30a3\u30b9\u30af\u306b\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\uff0c\u304b\u3064\u30af\u30e9\u30b9\u30bf\u5185\u3067\u30ec\u30d7\u30ea\u30ab\u304c\u4f5c\u6210\u3055\u308c\u308b\u305f\u3081\u30c7\u30fc\u30bf\u306e\u640d\u5931\u3092\u9632\u3052\u308b\uff08\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u5f71\u97ff\u306a\u304fTB\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff09\n- Distributed by Design \u30af\u30e9\u30b9\u30bf\u306f\u8010\u969c\u5bb3\u6027\u306e\u3042\u308b\u8a2d\u8a08\u306b\u306a\u3063\u3066\u3044\u308b\n- [Apache Kafka\u306b\u5165\u9580\u3057\u305f](http://deeeet.com/writing/2015/09/01/apache-kafka/)\n\n```docker-compose.yml\n\nbroker:\n  tty: true\n  image: rawmind/alpine-kafka:0.10.0.1-1\n  volumes_from:\n    - broker-volume\n    - broker-conf\n  environment:\n    - JVMFLAGS=-Xmx${kafka_mem}m -Xms${kafka_mem}m\n    - CONFD_INTERVAL=${kafka_interval}\n    - ZK_SERVICE=${zk_link}\n    - KAFKA_DELETE_TOPICS=${kafka_delete_topics}\n    - KAFKA_LOG_DIRS=${kafka_log_dir}\n    - KAFKA_LOG_RETENTION_HOURS=${kafka_log_retention}\n    - KAFKA_NUM_PARTITIONS=${kafka_num_partitions}\n    - ADVERTISE_PUB_IP=${kafka_pub_ip}\n  external_links:\n    - ${zk_link}:zk\n  labels: \n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: broker-volume, broker-conf\nbroker-conf:\n  net: none\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  image: rawmind/rancher-kafka:0.10.0.0-3\n  volumes:\n    - /opt/tools\nbroker-volume:\n  net: none\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  environment:\n    - SERVICE_UID=10003\n    - SERVICE_GID=10003\n    - SERVICE_VOLUME=${kafka_log_dir}\n  volumes:\n    - ${kafka_log_dir}\n  volume_driver: local\n  image: rawmind/alpine-volume:0.0.2-1\n\n```\n\n## Apache Zookeeper\n![community-zookeeper.png](https://qiita-image-store.s3.amazonaws.com/0/62822/2fcad409-7339-cd87-cdb3-eb780103f67e.png)\n\n- \u5206\u6563\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5411\u3051\u306e\u9ad8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306a\u5354\u8abf\u30b5\u30fc\u30d3\u30b9\n- \u5206\u6563\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u4e0a\u3067\u5fc5\u8981\u3068\u306a\u308b,\u540c\u671f, \u8a2d\u5b9a\u7ba1\u7406, \u30b0\u30eb\u30fc\u30d4\u30f3\u30b0, \u540d\u524d\u7ba1\u7406, \u306a\u3069\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u30b5\u30fc\u30d3\u30b9\n- [zookeeper \u3068\u306f](http://qiita.com/Itomaki/items/aec0ce677a28c83c6893)\n\n```docker-compose.yml\nzk:\n  tty: true\n  image: rawmind/alpine-zk:3.4.9\n  volumes_from:\n    - zk-volume\n    - zk-conf\n  environment:\n    - JVMFLAGS=-Xmx${zk_mem}m -Xms${zk_mem}m\n    - ZK_DATA_DIR=${zk_data_dir}\n    - ZK_INIT_LIMIT=${zk_init_limit}\n    - ZK_MAX_CLIENT_CXNS=${zk_max_client_cxns}\n    - ZK_SYNC_LIMIT=${zk_sync_limit}\n    - ZK_TICK_TIME=${zk_tick_time}\n  labels: \n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: zk-volume, zk-conf\nzk-conf:\n  net: none\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  image: rawmind/rancher-zk:3.4.8-5\n  volumes:\n    - /opt/tools\nzk-volume:\n  net: none\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  environment:\n    - SERVICE_UID=10002\n    - SERVICE_GID=10002\n    - SERVICE_VOLUME=${zk_data_dir}\n  volumes:\n    - ${zk_data_dir}\n  volume_driver: local\n  image: rawmind/alpine-volume:0.0.2-1\n```\n\n## asciinema.org\n![community-asciinema-org.jpg](https://qiita-image-store.s3.amazonaws.com/0/62822/9eda6e52-2735-d76a-dd1e-dd87e79f8c99.jpeg)\n\n- Asciinema\u306f\u7aef\u672b\u306e\u64cd\u4f5c\u3092\u5171\u6709\u3067\u304d\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\n- \u52d5\u753b\u306e\u30b7\u30fc\u30af\u304c\u3067\u304d\u308b\n- \u52d5\u753b\u3092\u30c6\u30ad\u30b9\u30c8\u3068\u3057\u3066\u30b3\u30d4\u30fc\u3067\u304d\u308b\n- \u5c0e\u5165\u304c\u7c21\u5358\n- \u9332\u753b\u304c\u7c21\u5358\n- [Asciinema\u3067\u83ef\u9e97\u306b\u7aef\u672b\u64cd\u4f5c\u3092\u5171\u6709\u3059\u308b](http://techracho.bpsinc.jp/yamasita-taisuke/2014_05_15/17397)\n\n```docker-composer.yml\nasciinema-org:  \n  image: 'asciinema/asciinema.org:latest'\n  links:\n    - postgres\n    - redis\n  restart: always\n  ports:\n    - ${port}:3000\n  environment:\n    HOST: ${host}:${port}\n    DATABASE_URL: postgresql://postgres:${postgres_password}@postgres/asciinema\n    REDIS_URL: redis://redis:6379\n    RAILS_ENV: development\n\npostgres:\n  image: 'postgres:latest'\n  ports:\n    - 5432:5432\n  environment:\n    POSTGRES_PASSWORD: ${postgres_password}\n  container_name: postgres\n\nredis:\n  image: 'redis:latest'\n  ports:\n    - 6379:6379\n  container_name: redis\n\nsidekiq:\n  image: 'asciinema/asciinema.org:latest'\n  links:\n    - postgres\n    - redis\n  command: 'ruby start_sidekiq.rb'\n  environment:\n    HOST: ${host}:${port}\n    DATABASE_URL: postgresql://postgres:${postgres_password}@postgres/asciinema\n    REDIS_URL: redis://redis:6379\n    RAILS_ENV: development\n\n\n```\n\n## Bind9 Domain Name Server\n![community-infra-bind9.png](https://qiita-image-store.s3.amazonaws.com/0/62822/4938f535-5dbc-b675-6657-2ae58fc91847.png)\n\n- DNS \u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u4e00\u3064\u3067\u3042\u308b BIND (Berkeley Internet Name Domain) \n- BIND\u306f\u3001\u30b5\u30fc\u30d0(named)\u3001 \u30ea\u30be\u30eb\u30d0(libresolv.a)\u3001\u7ba1\u7406\u7528\u30d7\u30ed\u30b0\u30e9\u30e0(nslookup, dig) \u306a\u3069\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u4e00\u9023\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u7fa4\u3067\u3059\u3002 \u73fe\u5728\u306f\u3001[Internet Software Consortium](http://www.isc.org/) \u306b\u3088\u3063\u3066\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n- [DNS\u30b5\u30fc\u30d0\u69cb\u7bc9\u624b\u9806(\u30bd\u30fc\u30b9\u304b\u3089BIND 9.10.1-P1\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb + \u5185\u90e8\u5411\u3051\u6a29\u5a01DNS\u30b5\u30fc\u30d0\u69cb\u7bc9)](http://qiita.com/na0AaooQ/items/9ed548dd6db2a0c911c4)\n\n```docker-compose.yml\nbind9:\n  image: digitallumberjack/docker-bind9:v1.2.0\n  ports: \n   - ${BIND9_PORT}:53/tcp\n   - ${BIND9_PORT}:53/udp\n  environment:\n    BIND9_ROOTDOMAIN: ${BIND9_ROOTDOMAIN}\n    BIND9_KEYNAME: ${BIND9_KEYNAME}\n    BIND9_KEY: ${BIND9_KEY}\n    BIND9_FORWARDERS: ${BIND9_FORWARDERS}\n    RANCHER_ENV: \"true\"\n\n```\n## Cloud9 \n![community-cloud9.png](https://qiita-image-store.s3.amazonaws.com/0/62822/07309592-bdfd-ecc3-ece6-8b1cda7dfd8b.png)\n\n- Cloud9\uff08\u30af\u30e9\u30a6\u30c99\uff09\u3068\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u3092\u30af\u30e9\u30a6\u30c9\u74b0\u5883\u3067\u5229\u7528\u3067\u304d\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002IDE\uff08\u7d71\u5408\u958b\u767a\u74b0\u5883\uff09\u3068\u3057\u3066\u306e\u6a5f\u80fd\u304c\u5145\u5b9f\u3057\u3066\u304a\u308a\u3001GitHub\u3084Heroku\u3068\u3044\u3063\u305f\u4ed6\u306e\u30c4\u30fc\u30eb\u3068\u306e\u9023\u643a\u3082\u30b9\u30e0\u30fc\u30ba\u306b\u884c\u3048\u307e\u3059\u3002\n\n- \u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u52d5\u304f\u305f\u3081\u3001PC\u306b\u4f9d\u5b58\u3059\u308b\u3053\u3068\u306a\u304f\u958b\u767a\u74b0\u5883\u3092\u6e96\u5099\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u304c\u5229\u70b9\u3067\u3059\u3002\u307e\u305f\u3001\u7121\u6599\u3067\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3082\u826f\u3055\u306e\u3072\u3068\u3064\u3067\u3059\u3002\n\n- [GitHub\u9023\u643a\u3067Cloud9\u3092\u4f7f\u3046\u306e\u306b\u632b\u6298\u3059\u308b\u307e\u3067\u306e\u6d41\u308c\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u4ed8\u304d\u3067\u8a73\u3057\u304f\u7d39\u4ecb\uff082016/08/10\u8ffd\u8a18\u6709\u308a\uff09](http://qiita.com/YujiTsushima/items/514a8c990d79c3f300b3)\n\n```docker-compose.yml\ncloud9-sdk:\n  command: \"--listen 0.0.0.0 --port ${cloud9_port} -w /workspace --collab --auth ${cloud9_user}:${cloud9_pass}\"\n  image: \"rawmind/cloud9-sdk:0.3.0-2\"\n  restart: \"always\"\n  volumes:\n    - \"/var/run/docker.sock:/var/run/docker.sock\"\n    - \"/usr/local/bin/docker:/bin/docker\"\n    - \"/workspace\"\n  environment:\n    GIT_REPO: ${cloud9_repo}\n  labels:\n    traefik.domain: ${cloud9_domain}\n    traefik.port: ${cloud9_port}\n    traefik.enable: ${cloud9_publish}\n\n```\n\n\n## CloudFlare\n![community-infra-cloudflare.png](https://qiita-image-store.s3.amazonaws.com/0/62822/3d13a2e1-bf7d-e996-17e8-a4e27b8f633f.png)\n\n\n- CloudFlare\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u4e0a\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u53ef\u80fd\u306a\u30d5\u30a1\u30a4\u30eb\uff08\u753b\u50cf / CSS / js\u30d5\u30a1\u30a4\u30eb\u306a\u3069\uff09\u3092\u69cb\u7bc9\u3057\u3066\u3044\u308b\u4e16\u754c\u4e2d\u306e\u8907\u6570\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30b7\u30b9\u30c6\u30e0\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u30b5\u30a4\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5927\u5e45\u306b\u5411\u4e0a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30b5\u30a4\u30c8\u306e\u8868\u793a\u901f\u5ea6\u3092\u9ad8\u901f\u5316\u3059\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n- [CloudFlare\u5c0e\u5165](http://sinap.jp/blog/2011/06/cdn-cloudflare.html)\n\n```docker-compose.yml\ncloudflare:\n  image: rancher/external-dns:v0.6.0\n  command: -provider=cloudflare\n  expose: \n   - 1000\n  environment:\n    CLOUDFLARE_EMAIL: ${CLOUDFLARE_EMAIL}\n    CLOUDFLARE_KEY: ${CLOUDFLARE_KEY}\n    ROOT_DOMAIN: ${ROOT_DOMAIN}\n    NAME_TEMPLATE: ${NAME_TEMPLATE}\n    TTL: ${TTL}\n  labels:\n    io.rancher.container.create_agent: \"true\"\n    io.rancher.container.agent.role: \"external-dns\"\n\n```\n\n## Concrete5 \n\n![community-Concrete5.png](https://qiita-image-store.s3.amazonaws.com/0/62822/9ddfc900-225d-664c-5545-cfd3d3c00114.png)\n\n- concrete5\u3068\u306f\u3001\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u4e0a\u3067\u3001\u8ab0\u3067\u3082\u7c21\u5358\u3067\u3001\u3057\u304b\u3082\u76f4\u611f\u7684\u306b\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u306e\u904b\u55b6\u7ba1\u7406\u304c\u51fa\u6765\u308b\u3001\u624b\u8efd\u3067\u753b\u671f\u7684\u306aCMS\uff08\u30b3\u30f3\u30c6\u30f3\u30c4\u30fb\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30fb\u30b7\u30b9\u30c6\u30e0\uff09\u3067\u3059\u3002\n- [WordPress\u3067\u4f01\u696d\u30b5\u30a4\u30c8\u3092\u3064\u304f\u308b\u3088\u308a\u3082concrete5\u3068\u3044\u3046CMS\u304c\u9069\u3057\u3066\u3044\u308b\u7406\u7531 | \u682a\u5f0f\u4f1a\u793ebridge](https://bge.jp/corporate-concrete5/)\n\n```docker-compose.yml\nCMSMysql:\n    environment:\n        MYSQL_ROOT_PASSWORD: ${root_password}\n        MYSQL_DATABASE: ${db_name}\n        MYSQL_USER: ${db_username}\n        MYSQL_PASSWORD: ${db_password}\n    labels:\n        io.rancher.container.pull_image: always\n    tty: true\n    image: mysql\n    volumes:\n    - ${db_data_location}:/var/lib/mysql\n    stdin_open: true\n    volume_driver: ${volume_driver}\n\nCMSConfig:\n    image: opensaas/concrete5\n    tty: true\n    stdin_open: true\n    links:\n    - CMSMysql:mysql\n    volumes:\n    - ${cms_application_data}:/var/www/html/application\n    - ${cms_packages_data}:/var/www/html/packages\n    labels:\n        io.rancher.container.hostname_override: container_name\n        io.rancher.container.start_once: true\n    volume_driver: ${volume_driver}\n    command: bash -c \"chown -R www-data. application; chown -R www-data. packages; sleep 2m; php -f concrete/bin/concrete5.php c5:install --db-server=mysql --db-username=${db_username} --db-password=${db_password} --db-database=${db_name} --site=${cms_sitename} --admin-email=${cms_admin_email} --admin-password=${cms_admin_password} -n -vvv\"\n\nConcrete5App:\n    labels:\n        io.rancher.container.pull_image: always\n        io.rancher.sidekicks: CMSConfig\n    tty: true\n    links:\n    - CMSMysql:mysql\n    image: opensaas/concrete5\n    volumes:\n    - ${cms_application_data}:/var/www/html/application\n    - ${cms_packages_data}:/var/www/html/packages\n    volume_driver: ${volume_driver}\n    stdin_open: true\n```\n\n## Confluence\n![community-confluence.png](https://qiita-image-store.s3.amazonaws.com/0/62822/fa1828d9-322a-b85d-bdc4-dc71cb5d3014.png)\n\n- Conflunence\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4f5c\u6210\u3084\u8b70\u8ad6\u3092\u4e00\u7b87\u6240\u306b\u307e\u3068\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u60c5\u5831\u5171\u6709\u30c4\u30fc\u30eb\u3067\u3059\u3002\n- [Confluence\u3068\u306f\uff1f](https://seleck.cc/377)\n- slack\u3068\u9023\u643a\u3057\u305f\u3089\u4fbf\u5229\u305d\u3046\u3067\u3059[Slack\u3068Confluence\u3092\u9023\u643a\u3059\u308b\u65b9\u6cd5](http://qiita.com/kajinari/items/08957b34d268abec77fa)\n\n```docker-compose.yml\nconfluence:\n  image: sanderkleykens/confluence:6.0.1\n  restart: always\n  environment:\n    - CATALINA_OPTS=-Xms${heap_size} -Xmx${heap_size} ${jvm_args}\n    - CONFLUENCE_PROXY_PORT=${proxy_port}\n    - CONFLUENCE_PROXY_NAME=${proxy_name}\n    - CONFLUENCE_PROXY_SCHEME=${proxy_scheme}\n    - CONFLUENCE_CONTEXT_PATH=${context_path}\n  external_links:\n    - ${database_link}:database\n  volumes:\n    - ${confluence_home}:/var/atlassian/confluence\n\n```\n\n## Consul Cluster\n![community-consul-registrator.png](https://qiita-image-store.s3.amazonaws.com/0/62822/01899dc8-fcea-cf8e-8bab-89f7b805d975.png)\n\n- \u8907\u6570\u53f0\u306e\u30b5\u30fc\u30d0\u69cb\u6210\u306b\u3088\u3063\u3066\uff0cWeb\u30b5\u30fc\u30d0\u3067\u3042\u308c\u3070\u901a\u4fe1\u91cf\u3084\u30a2\u30af\u30bb\u30b9\u306e\u8ca0\u8377\u5206\u6563\u3092\u56f3\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3042\u308b\u3044\u306f\uff0c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3084\u30ad\u30e3\u30c3\u30b7\u30e5\u7528\u306e\u30b5\u30fc\u30d0\u3092\u5197\u9577\u5316\u69cb\u6210\u306b\u3059\u308b\u3053\u3068\u3067\uff0c\u969c\u5bb3\u767a\u751f\u6642\u306b\u304a\u3051\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u7d99\u7d9a\u6027\uff08\u7a3c\u52d5\u6642\u9593\uff09\u3092\u9ad8\u3081\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n- [\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30c4\u30fc\u30eb\u3068\u3057\u3066\u306eConsul\u306e\u4f7f\u3044\u65b9](http://qiita.com/foostan/items/954f73173ea34eb361da)\n- [Consul\u30b5\u30fc\u30d0\u30af\u30e9\u30b9\u30bf](http://www.creationline.com/lab/10353)\n\n```docker-compose.yml\nconsul-conf:\n  image: husseingalal/consul-config\n  labels:\n    io.rancher.container.hostname_override: container_name\n  volumes_from:\n    - consul\n  net: \"container:consul\"\nconsul:\n  image: husseingalal/consul\n  labels:\n    io.rancher.sidekicks: consul-conf\n  volumes:\n    - /opt/rancher/ssl\n    - /opt/rancher/config\n    - /var/consul\n\n```\n\n## Consul-Registrator\n![community-consul-registrator.png](https://qiita-image-store.s3.amazonaws.com/0/62822/3e46161b-63d2-2b86-8fb0-7c6377e385ec.png)\n\n- Registrator\u306f\u3001Docker\u3067\u7acb\u3061\u4e0a\u3052\u305f\u30b3\u30f3\u30c6\u30ca\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u3001Consul \u3084 etcd\u3001SkyDNS 2\u3078\u767b\u9332\u3059\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002\n- [Docker-Registrator(Normal/internal)\u3067Consul\u306b\u767b\u9332\u3055\u308c\u308b\u5185\u5bb9\u306f\uff1f](http://kimutansk.hatenablog.com/entry/2015/07/12/211803)\n- [Amazon ECS + registrator + consul \u3067\u30b5\u30fc\u30d3\u30b9\u306e\u81ea\u52d5\u767b\u9332\u8d85\u30b7\u30f3\u30d7\u30eb\u30d1\u30bf\u30fc\u30f3](https://blog.cloudpack.jp/2015/07/01/simple-pattern-amazon-ecs-and-registrator-and-consul-to-autoregister-with-haproxy/)\n\n```docker-compose.yml\nconsul-registrator:\n  log_driver: ''\n  labels:\n    io.rancher.sidekicks: consul,consul-data\n    io.rancher.scheduler.global: 'true'\n    io.rancher.container.pull_image: always\n    io.rancher.container.hostname_override: container_name\n  tty: true\n  restart: always\n  command:\n    - consul://consul:8500\n  log_opt: {}\n  image: gliderlabs/registrator:v7\n  links:\n    - consul\n  volumes:\n    - /var/run/docker.sock:/tmp/docker.sock\n  stdin_open: true\nconsul:\n  ports:\n    - 8300:8300/tcp\n    - 8301:8301/tcp\n    - 8301:8301/udp\n    - 8302:8302/tcp\n    - 8302:8302/udp\n    - 8400:8400/tcp\n    - 8500:8500/tcp\n    - 8600:8600/tcp\n    - 8600:8600/udp\n  log_driver: ''\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.global: 'true'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.dns: true\n  tty: true\n  net: host\n  restart: always\n  command:\n    - agent\n    - -retry-join\n    - ${consul_server}\n    - -recursor=169.254.169.250\n    - -client=0.0.0.0\n  environment:\n    CONSUL_LOCAL_CONFIG: \"{\\\"leave_on_terminate\\\": true, \\\"datacenter\\\": \\\"${consul_datacenter}\\\"}\"\n    CONSUL_BIND_INTERFACE: eth0\n  volumes_from:\n    - consul-data\n  log_opt: {}\n  image: consul:v0.6.4\n  stdin_open: true\nconsul-data:\n  image: consul:v0.6.4\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.global: 'true'\n    io.rancher.container.start_once: true\n  volumes:\n    - /consul/data\n  entrypoint: /bin/true\n\n```\n\n## DataDog Agent & DogStatsD\n![community-datadog.png](https://qiita-image-store.s3.amazonaws.com/0/62822/a92a8633-308f-3146-311b-0accf02bf47a.png)\n\n- [\u3010Docker\u3011\"\u307e\u305f\u6b7b\u3093\u3067\u308b\uff01\uff01\"\u30b3\u30f3\u30c6\u30ca\u306e\u6b7b\u6d3b\u7ba1\u7406\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fc](http://qiita.com/okamu_/items/34e64882954c6a67bcf4#datadog)\n- [Datadog \u3067 Docker \u30b3\u30f3\u30c6\u30ca\u3092\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3059\u308b](http://qiita.com/spesnova/items/b1f2cc4e33ddf7cea285)\n\n```docker-compose.yml\ndatadog-init:\n  image: janeczku/datadog-rancher-init:v2.2.3\n  net: none\n  command: /bin/true\n  volumes:\n    - /opt/rancher\n  labels:\n    io.rancher.container.start_once: 'true'\n    io.rancher.container.pull_image: always\ndatadog-agent:\n  image: datadog/docker-dd-agent:11.3.585\n  entrypoint: /opt/rancher/entrypoint-wrapper.py\n  command:\n    - supervisord\n    - -n\n    - -c\n    - /etc/dd-agent/supervisor.conf\n  restart: always\n  environment:\n    API_KEY: ${api_key}\n    SD_BACKEND_HOST: ${sd_backend_host}\n    SD_BACKEND_PORT: ${sd_backend_port}\n    SD_TEMPLATE_DIR: ${sd_template_dir}\n    STATSD_METRIC_NAMESPACE: ${statsd_namespace}\n    DD_STATSD_STANDALONE: \"${statsd_standalone}\"\n    DD_HOST_LABELS: ${host_labels}\n    DD_CONTAINER_LABELS: ${service_labels}\n    DD_SERVICE_DISCOVERY: ${service_discovery}\n    DD_SD_CONFIG_BACKEND: ${sd_config_backend}\n    DD_CONSUL_TOKEN: ${dd_consul_token}\n    DD_CONSUL_SCHEME: ${dd_consul_scheme}\n    DD_CONSUL_VERIFY: ${dd_consul_verify}\n  volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n    - /proc/:/host/proc/:ro\n    - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro\n  volumes_from:\n    - datadog-init\n  labels:\n    io.rancher.scheduler.global: \"${global_service}\"\n    io.rancher.sidekicks: 'datadog-init'\n\n```\n\n## DNS Update (RFC2136)\n![community-infra-dnsupdate-rfc2136.png](https://qiita-image-store.s3.amazonaws.com/0/62822/5b728c72-62f6-7885-715e-3dd21236b44b.png)\n\n- [Dynamic DNS\u306e\u57fa\u790e\u3068nsupdate](http://www.atmarkit.co.jp/ait/articles/0307/08/news001.html)\n\n```docker-compose.yml\nrfc2136dns:\n  image: rancher/external-dns:v0.6.0\n  command: -provider=rfc2136\n  expose:\n   - 1000\n  environment:\n    RFC2136_HOST: ${RFC2136_HOST}\n    RFC2136_PORT: ${RFC2136_PORT}\n    RFC2136_TSIG_KEYNAME: ${RFC2136_TSIG_KEYNAME}\n    RFC2136_TSIG_SECRET: ${RFC2136_TSIG_SECRET}\n    ROOT_DOMAIN: ${ROOT_DOMAIN}\n    NAME_TEMPLATE: ${NAME_TEMPLATE}\n    TTL: ${TTL}\n  labels:\n    io.rancher.container.create_agent: \"true\"\n    io.rancher.container.agent.role: \"external-dns\"\n\n```\n\n\n## DNSimple DNS\n![community-dnsimple.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/bd8fa365-ee79-e033-8306-5e59b70d528c.png)\n\n- DNSimple\u3092\u5229\u7528\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\n- [https://dnsimple.com/](https://dnsimple.com/)\n\n```docker-compose.yml\ndnsimple:\n  image: rancher/external-dns:v0.6.0\n  command: -provider=dnsimple\n  expose: \n   - 1000\n  environment:\n    DNSIMPLE_TOKEN: ${DNSIMPLE_TOKEN}\n    DNSIMPLE_EMAIL: ${DNSIMPLE_EMAIL}\n    ROOT_DOMAIN: ${ROOT_DOMAIN}\n    NAME_TEMPLATE: ${NAME_TEMPLATE}\n    TTL: ${TTL}\n  labels:\n    io.rancher.container.create_agent: \"true\"\n    io.rancher.container.agent.role: \"external-dns\"\n```\n\n## DokuWiki\n![community-dokuwiki.png](https://qiita-image-store.s3.amazonaws.com/0/62822/c4cda57b-7677-a507-8064-2eacd106353c.png)\n\n- \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u524d\u63d0\u3068\u3057\u306a\u3044\u3001\u4f7f\u3044\u6613\u304f\u6c4e\u7528\u6027\u306e\u9ad8\u3044\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30a6\u30a3\u30ad\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\n- [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u4e0d\u8981\u306eWiki\u30af\u30ed\u30fc\u30f3\u300cDokuWiki\u300d\u306e\u5c0e\u5165](http://qiita.com/yaju/items/4c69360da367b697b5ec)\n\n```docker-compose.yml\ndokuwiki-server:\n  ports:\n  - ${http_port}:80/tcp\n  labels:\n    io.rancher.sidekicks: dokuwiki-data\n  hostname: ${dokuwiki_hostname}\n  image: ununseptium/dokuwiki-docker\n  volumes_from:\n  - dokuwiki-data\n  \ndokuwiki-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  entrypoint:\n  - /bin/true\n  hostname: dokuwikidata\n  image: ununseptium/dokuwiki-docker\n  volumes:\n  - /var/www/html/data\n  - /var/www/html/lib/plugins\n\n```\n\n## Drone\n![community-drone.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/f55f0e52-a725-1fa3-14a0-f559347c7ed4.png)\n\n- Docker\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u74b0\u5883\u3092\u6bce\u56de\u69cb\u7bc9\u3001\u7834\u68c4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3057\u304b\u3082Drone\u306eCI\u74b0\u5883\u69cb\u7bc9\u306b\u3064\u3044\u3066\u3082Docker\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\u3002\n- [Docker\u3092\u4f7f\u3063\u305fCI\u30b5\u30fc\u30d0\u300cDrone\u300d\u30ec\u30d3\u30e5\u30fc](http://knowledge.sakura.ad.jp/tech/2729/)\n- [OSS\u7248\u3000drone.io \u3092\u4f7f\u3063\u3066 Docker Image \u3092\u30d3\u30eb\u30c9](http://qiita.com/quickguard/items/3b711fc871f42bf0772d)\n\n```docker-compose.yml\ndrone-lb:\n  ports:\n  - ${public_port}:8000\n  tty: true\n  image: rancher/load-balancer-service\n  links:\n  - drone-server:drone-server\n  stdin_open: true\n\ndrone-healthcheck:\n  image: rancher/drone-config:v0.1.0\n  net: 'container:drone-server'\n  volumes_from:\n    - drone-data-volume\n  entrypoint: /giddyup health\n\ndrone-server:\n  image: rancher/drone-config:v0.1.0\n  volumes_from:\n    - drone-data-volume\n  labels: \n    io.rancher.sidekicks: drone-data-volume,drone-daemon,drone-healthcheck\n  external_links:\n    - ${database_service}:database\n\ndrone-daemon:\n  image: rancher/drone:0.4\n  net: 'container:drone-server'\n  volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n  volumes_from:\n    - drone-data-volume\n  entrypoint: /opt/rancher/rancher_entry.sh\n\n## Do not change below. Could cause data loss in upgrade.\ndrone-data-volume:\n  image: busybox\n  net: none\n  command: /bin/true\n  labels:\n    io.rancher.container.start_once: 'true'\n  volumes:\n    - /var/lib/drone\n    - /etc/drone\n    - /opt/rancher\n\n```\n\n## Drone Rancher Node Manager\n![community-drone.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/af6f34c0-c33c-267a-8d18-9cf0d4a71253.png)\n\n- \u4e00\u3064\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u306f\u3001\u30db\u30b9\u30c8\u3054\u3068\u306b\u5b9f\u884c\u3057\u3001\u5358\u4e00\u306e\u30ef\u30fc\u30ab\u30fc\u3092\u767b\u9332\u3057\u3066\u304f\u308c\u308brancher\u5411\u3051\u306eci\u30c4\u30fc\u30eb\u3063\u307d\u3044\n\n```docker-compose.yml\ndrone-agent:\n  labels:\n    io.rancher.scheduler.global: 'true'\n  tty: true\n  image: rancher/socat-docker\n  volumes:\n  - /var/run/docker.sock:/var/run/docker.sock\n  - /var/lib/docker:/var/lib/docker\n  stdin_open: true\ndynamic-drones-mgr-0:\n  environment:\n    DRONE_TOKEN: ${DRONE_TOKEN}\n    DRONE_URL: http://droneserver:8000\n  external_links:\n  - ${DRONE_SERVICE}:droneserver\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/drone-agent\n  tty: true\n  entrypoint:\n  - /dynamic-drone-nodes\n  - /stacks/${STACK_NAME}/services/drone-agent\n  image: rancher/drone-config:v0.1.0\n  stdin_open: true\n\n```\n\n## Rancher ECR Credentials Updater\n![community-ecr.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/75f77ba3-4650-38a1-3589-31677c3c0738.png)\n\n- EC2 Container Registry \u306b\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u5916\u306b\u7f6e\u304d\u305f\u304f\u306a\u3044\u30b3\u30f3\u30c6\u30ca\u30a4\u30e1\u30fc\u30b8\u3092AWS\u5185\u3067\u7ba1\u7406\u3059\u308b\u306e\u306b\u9069\u3057\u3066\u3044\u307e\u3059\n- [Amazon ECR + ECS CLI \u30cf\u30f3\u30ba\u30aa\u30f3](http://qiita.com/zakky/items/be1e1a20cf7718ffae73)\n\n```docker-compose.yml\necr-updater:\n  environment:\n    AWS_ACCESS_KEY_ID: ${aws_access_key_id}\n    AWS_SECRET_ACCESS_KEY: ${aws_secret_access_key}\n    AWS_REGION: ${aws_region}\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.container.create_agent: 'true'\n    io.rancher.container.agent.role: environment\n  tty: true\n  image: objectpartners/rancher-ecr-credentials:1.1.0\n  stdin_open: true\n\n\n```\n\n## Elasticsearch\n![community-elasticsearch.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/b87f84cd-8a05-65bf-120c-5a0f59bc32ba.png)\n\n- \u8a2d\u8a08\u30d5\u30ed\u30fc\u307e\u3067\u5909\u3048\u3066\u3057\u307e\u3046\u753b\u671f\u7684\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6307\u5411\u578b\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\n- [Elasticsearch \u5165\u9580](http://dev.classmethod.jp/server-side/elasticsearch-getting-started-02/)\n- [Docker\u3067\u7c21\u5358\u306bElasticsearch\u306e\u30af\u30e9\u30b9\u30bf\u3092\u8a66\u3057\u3066\u307f\u308b](http://qiita.com/jun-1/items/11edfe8fae71a3e958ce)\n\n```docker-compose.yml\nelasticsearch-masters:\n  image: rancher/elasticsearch-conf:v0.4.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-master,elasticsearch-datavolume-masters\nelasticsearch-datavolume-masters:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n  entrypoint: /bin/true\n  image: elasticsearch:1.7.3\nelasticsearch-base-master:\n  labels:\n    elasticsearch.master.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:1.7.3\n  net: \"container:elasticsearch-masters\"\n  volumes_from:\n    - elasticsearch-masters\n    - elasticsearch-datavolume-masters\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n\n\nelasticsearch-datanodes:\n  image: rancher/elasticsearch-conf:v0.4.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-datanode,elasticsearch-datavolume-datanode\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n  links:\n    - elasticsearch-masters:es-masters\nelasticsearch-datavolume-datanode:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n  entrypoint: /bin/true\n  image: elasticsearch:1.7.3\nelasticsearch-base-datanode:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:1.7.3\n  links:\n    - elasticsearch-masters:es-masters\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n  volumes_from:\n    - elasticsearch-datanodes\n    - elasticsearch-datavolume-datanode\n  net: \"container:elasticsearch-datanodes\"\n\n\nelasticsearch-clients:\n  image: rancher/elasticsearch-conf:v0.4.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-clients,elasticsearch-datavolume-clients\n  links:\n    - elasticsearch-masters:es-masters\nelasticsearch-datavolume-clients:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n  entrypoint: /bin/true\n  image: elasticsearch:1.7.3\nelasticsearch-base-clients:\n  labels:\n    elasticsearch.client.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:1.7.3\n  volumes_from:\n    - elasticsearch-clients\n    - elasticsearch-datavolume-clients\n  net: \"container:elasticsearch-clients\"\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n\n\nkopf:\n  image: rancher/kopf:v0.4.0\n  ports: \n    - \"80:80\"\n  environment:\n    KOPF_SERVER_NAME: 'es.dev'\n    KOPF_ES_SERVERS: 'es-clients:9200'\n  labels:\n    io.rancher.container.hostname_override: container_name\n  links:\n    - elasticsearch-clients:es-clients\n\n```\n\n## Elasticsearch 2.x\n![community-elasticsearch.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/f88487a2-733d-483a-f80a-dcb5927c4b0c.png)\n\n- [Elasticsearch Marvel 2.x \u306f\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u3067\u3082\u7121\u6599\u3067\u4f7f\u3048\u308b\u306e\u3067\u5165\u308c\u3066\u304a\u3053\u3046](http://dev.classmethod.jp/server-side/elasticsearch/elasticsearch-marvel-2-x-basic-license/)\n\n```docker-compose.yml\nelasticsearch-masters:\n  image: rancher/elasticsearch-conf:v0.5.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-master,elasticsearch-datavolume-masters\n  volumes_from:\n    - elasticsearch-datavolume-masters\nelasticsearch-datavolume-masters:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n    - /usr/share/elasticsearch/config\n    - /opt/rancher/bin\n  entrypoint: /bin/true\n  image: elasticsearch:2.2.1\nelasticsearch-base-master:\n  labels:\n    elasticsearch.master.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:2.2.1\n  net: \"container:elasticsearch-masters\"\n  volumes_from:\n    - elasticsearch-datavolume-masters\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n\n\nelasticsearch-datanodes:\n  image: rancher/elasticsearch-conf:v0.5.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-datanode,elasticsearch-datavolume-datanode\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n  links:\n    - elasticsearch-masters:es-masters\n  volumes_from:\n    - elasticsearch-datavolume-datanode\nelasticsearch-datavolume-datanode:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n    - /usr/share/elasticsearch/config\n    - /opt/rancher/bin\n  entrypoint: /bin/true\n  image: elasticsearch:2.2.1\nelasticsearch-base-datanode:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:2.2.1\n  links:\n    - elasticsearch-masters:es-masters\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n  volumes_from:\n    - elasticsearch-datavolume-datanode\n  net: \"container:elasticsearch-datanodes\"\n\n\nelasticsearch-clients:\n  image: rancher/elasticsearch-conf:v0.5.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-clients,elasticsearch-datavolume-clients\n  links:\n    - elasticsearch-masters:es-masters\n  volumes_from:\n    - elasticsearch-datavolume-clients\nelasticsearch-datavolume-clients:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /usr/share/elasticsearch/data\n    - /usr/share/elasticsearch/config\n    - /opt/rancher/bin\n  entrypoint: /bin/true\n  image: elasticsearch:2.2.1\nelasticsearch-base-clients:\n  labels:\n    elasticsearch.client.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:2.2.1\n  volumes_from:\n    - elasticsearch-datavolume-clients\n  net: \"container:elasticsearch-clients\"\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n\n\nkopf:\n  image: rancher/kopf:v0.4.0\n  ports:\n    - \"${kopf_port}:80\"\n  environment:\n    KOPF_SERVER_NAME: 'es.dev'\n    KOPF_ES_SERVERS: 'es-clients:9200'\n  labels:\n    io.rancher.container.hostname_override: container_name\n  links:\n    - elasticsearch-clients:es-clients\n```\n\n## AWS ELB Classic External LB \n![community-aws-elbv1.png](https://qiita-image-store.s3.amazonaws.com/0/62822/2992035a-8e31-2f01-4845-d5066bf11efb.png)\n\n- elb\u3068\u9023\u643a\u304c\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\n- http://rancher.com/inside-the-external-elb-catalog-template/\n\n```docker-compsoe.yml\nelbv1:\n  image: rancher/external-lb:v0.2.1\n  command: -provider=elbv1\n  expose: \n   - 1000\n  environment:\n    ELBV1_AWS_ACCESS_KEY: ${ELBV1_AWS_ACCESS_KEY}\n    ELBV1_AWS_SECRET_KEY: ${ELBV1_AWS_SECRET_KEY}\n    ELBV1_AWS_REGION: ${ELBV1_AWS_REGION}\n    ELBV1_AWS_VPCID: ${ELBV1_AWS_VPCID}\n    ELBV1_USE_PRIVATE_IP: ${ELBV1_USE_PRIVATE_IP}\n  labels:\n    io.rancher.container.create_agent: \"true\"\n    io.rancher.container.agent.role: \"external-dns\"\n\n```\n\n## Etcd\n![community-etcd-ha.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/b48ed5dc-d3a0-3e82-b753-a6e78311b07e.png)\n\n- etcd \u306f Go \u8a00\u8a9e\u3067\u8a18\u8ff0\u3055\u308c\u305f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u9ad8\u4fe1\u983c\u5206\u6563 KVS\u3067\u3059\u3002\u307e\u305f etcd \u30af\u30e9\u30b9\u30bf\u306f\u3001CoreOS \u4e0a\u306e Docker \u30b3\u30f3\u30c6\u30ca\u74b0\u5883\u7b49\u306b\u914d\u5099\u3055\u308c\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u9593\u3067\u30b5\u30fc\u30d3\u30b9\u8a2d\u5b9a\u60c5\u5831\u306a\u3069\u3092\u4ea4\u63db\u3001\u5171\u6709\u3059\u308b\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u5c1a\u3001\u540c\u69d8\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3067\u306f\u3001Apache ZooKeeper \u3084 consul \u7b49\u304c\u8a72\u5f53\u3059\u308b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\n- [etcd + docker \u3067\u7c21\u5358\u306b\u30ea\u30e2\u30fc\u30c8\u30b3\u30f3\u30c6\u30ca\u306b\u63a5\u7d9a\u3057\u3088\u3046](http://qiita.com/mopemope/items/710f05ce1ede955b4867)\n- [CentOS \u3067\u59cb\u3081\u308b etcd](https://blog.cloudpack.jp/2014/11/26/getting-start-etcd-with-centos/)\n\n```docker-compose.yml\netcd:\n    image: rancher/etcd:v2.3.7-11\n    labels:\n        io.rancher.scheduler.affinity:host_label_soft: etcd=true\n        io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n        io.rancher.sidekicks: data\n    environment:\n        RANCHER_DEBUG: '${RANCHER_DEBUG}'\n        EMBEDDED_BACKUPS: '${EMBEDDED_BACKUPS}'\n        BACKUP_PERIOD: '${BACKUP_PERIOD}'\n        BACKUP_RETENTION: '${BACKUP_RETENTION}'\n    volumes:\n    - etcd:/pdata\n    - ${BACKUP_LOCATION}:/data-backup\n    volumes_from:\n    - data\ndata:\n  image: busybox\n  command: /bin/true\n  net: none\n  volumes:\n  - /data\n  labels:\n    io.rancher.container.start_once: 'true'\n```\n\n## F5 BIG-IP\n![community-f5.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/683afd8b-db1b-abd4-e5fb-e8abc51728ce.png)\n\n- Virtual Edition(\u4ee5\u5f8cBIG-IP VE)\u3068\u306f\u3001\u7c21\u5358\u306b\u3044\u3046\u3068\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\uff08\u8ca0\u8377\u5206\u6563\u88c5\u7f6e\uff09\u307f\u305f\u3044\u3067\u3059\u3002\n- [\u30a4\u30f3\u30d5\u30e9\u30a8\u30f3\u30b8\u30cb\u30a2\u5411\u3051\u3001F5 BIG-IP Virtual Edition for AWS \u3092\u4f7f\u3063\u3066\u307f\u308b](http://dev.classmethod.jp/etc/f5-big-ip-ve-for-aws/)\n\n```docker-compose.yml\nexternal-lb:\n  image: rancher/external-lb:v0.1.1\n  command: -provider=f5_BigIP\n  expose: \n   - 1000\n  environment:\n    F5_BIGIP_HOST: ${F5_BIGIP_HOST}\n    F5_BIGIP_USER: ${F5_BIGIP_USER}\n    F5_BIGIP_PWD: ${F5_BIGIP_PWD}\n    LB_TARGET_RANCHER_SUFFIX: ${LB_TARGET_RANCHER_SUFFIX}\n\n```\n\n## FBCTF\n- FBCTF\u3068\u3044\u3046Facebook\u304c\u51fa\u3057\u305f\u65d7\u53d6\u308a\u30b2\u30fc\u30e0\u306e\u3088\u3046\u306b\u3001\u554f\u984c\u3092\u30af\u30ea\u30a2\u3057\u3066\u3044\u304f\u30b2\u30fc\u30e0\u3060\u305d\u3046\u3067\u3059\n- [Facebook CTF(fbctf)\u3067\u904a\u3093\u3067\u3044\u308b\u4eba\u3044\u305f](http://qiita.com/atpons/items/254d154c38aea3deb7fa#%E9%81%8A%E3%82%93%E3%81%A7%E3%81%BF%E3%82%8B)\n\n```docker-compse.yml\nfbctf:  \n  image: 'qazbnm456/dockerized_fbctf:multi_containers'\n  links:\n    - mysql\n    - memcached\n  restart: always\n  ports:\n    - ${http_port}:80\n    - ${https_port}:443\n  environment:\n    MYSQL_HOST: mysql\n    MYSQL_PORT: 3306\n    MYSQL_DATABASE: ${mysql_database}\n    MYSQL_USER: ${mysql_user}\n    MYSQL_PASSWORD: ${mysql_password}\n    MEMCACHED_PORT: 11211\n    SSL_SELF_SIGNED: ${ssl}\n\nmysql:\n  image: 'mysql:5.5'\n  restart: always\n  environment:\n    MYSQL_ROOT_PASSWORD: root\n    MYSQL_USER: ${mysql_user}\n    MYSQL_PASSWORD: ${mysql_password}\n  container_name: mysql\n\nmemcached:\n  image: 'memcached:latest'\n  restart: always\n  container_name: memcached\n```\n\n## Ghost\n![community-ghost.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/0a59e067-206e-f6eb-3e04-f2e6b384ecac.png)\n\n- \u8efd\u91cf\u30d6\u30ed\u30b0\u306e1\u3064\n- [Ghost](https://ghost.org/)\n- [Docker\u3067Ghost\u3092\u52d5\u304b\u3057\u3066\u307f\u308b #1](http://qiita.com/blackle0pard_/items/91ca53c85882186d9ca2)\n\n```docker-compose.yml\nghost:\n  image: ghost\n  ports:\n    - ${public_port}:2368\n\n```\n\n\n## GitLab\n![community-gitlab.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/d4dc88a6-a955-0edf-bb91-dff54ee8ba90.png)\n\n- GitLab\u3068\u306f\u3001GitHub\u306e\u3088\u3046\u306a\u30b5\u30fc\u30d3\u30b9\u3092\u793e\u5185\u306a\u3069\u306e\u30af\u30ed\u30fc\u30ba\u30c9\u306a\u74b0\u5883\u306b\u72ec\u81ea\u3067\u69cb\u7bc9\u3067\u304d\u308b\u3088\u3046\u306b\u516c\u958b\u3055\u308c\u305f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3067\u3059\u3002\n\n```docker-compose.yml\nfbctf:  \n  image: 'qazbnm456/dockerized_fbctf:multi_containers'\n  links:\n    - mysql\n    - memcached\n  restart: always\n  ports:\n    - ${http_port}:80\n    - ${https_port}:443\n  environment:\n    MYSQL_HOST: mysql\n    MYSQL_PORT: 3306\n    MYSQL_DATABASE: ${mysql_database}\n    MYSQL_USER: ${mysql_user}\n    MYSQL_PASSWORD: ${mysql_password}\n    MEMCACHED_PORT: 11211\n    SSL_SELF_SIGNED: ${ssl}\n\nmysql:\n  image: 'mysql:5.5'\n  restart: always\n  environment:\n    MYSQL_ROOT_PASSWORD: root\n    MYSQL_USER: ${mysql_user}\n    MYSQL_PASSWORD: ${mysql_password}\n  container_name: mysql\n\nmemcached:\n  image: 'memcached:latest'\n  restart: always\n  container_name: memcached\n\n```\n\n\n## Gocd agent\n![community-gocd-agent.png.png](https://qiita-image-store.s3.amazonaws.com/0/62822/46a82c4e-a10f-705d-2853-5585210340ca.png)\n\n- CI/CD\u30c4\u30fc\u30eb\u306e\uff11\u3064(Jenkins\u3084Travis CI\u306a\u3069\u306e\u4ef2\u9593\u3063\u307d\u3044)\n\n```docker-compose.yml\ngocd-agent:\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n    gocd.role: agent\n  tty: true\n  image: rawmind/rancher-goagent:16.2.1-1\n  external_links:\n  - ${goserver_ip}:gocd-server\n  environment:\n  - AGENT_MEM=${mem_initial}m\n  - AGENT_MAX_MEM=${mem_max}m\n  - GO_SERVER=gocd-server.rancher.internal\n  - GO_SERVER_PORT=${goserver_port}\n  volumes:\n  - /var/run/docker.sock:/var/run/docker.sock\n\n```\n\n## Gocd server\n![community-gocd-agent.png.png](https://qiita-image-store.s3.amazonaws.com/0/62822/80bf3d1d-5c4b-fa3a-b364-55da316b481b.png)\n\n- CI/CD\u30c4\u30fc\u30eb\u306e\uff11\u3064(Jenkins\u3084Travis CI\u306a\u3069\u306e\u4ef2\u9593\u3063\u307d\u3044)\n\n``` docker-compose.yml\ngocd-server:\n  labels:\n    gocd.role: server\n  tty: true\n  image: rawmind/rancher-goserver:16.2.1-3\n  volumes_from:\n  - gocd-volume\n  environment:\n  - SERVER_MEM=${mem_initial}m\n  - SERVER_MAX_MEM=${mem_max}m\n  ports:\n  - ${public_port}:8153\n  - ${ssh_port}:8154\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: gocd-volume\ngocd-volume:\n  net: none\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n  - ${volume_work}:/opt/go-server/work\n  volume_driver: ${volume_driver}\n  entrypoint: /bin/true\n  image: busybox\n\n```\n\n## Gogs\n![community-gogs.png.png](https://qiita-image-store.s3.amazonaws.com/0/62822/5a727c99-60e5-4265-4756-6520ba1a1325.png)\n\n- Go\u3067\u4f5c\u3089\u308c\u305fGitHub\u30af\u30ed\u30fc\u30f3\n- [\u7a76\u6975\u7684\u306b\u7c21\u5358\u306b\u59cb\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308bGo\u3067\u4f5c\u3089\u308c\u305fGitHub\u30af\u30ed\u30fc\u30f3\u300cGogs\u300d](http://www.softantenna.com/wp/webservice/gogs/)\n\n```docker-compose.yml\ngogs:\n    image: gogs/gogs:latest\n    ports:\n        - ${http_port}:3000\n        - ${ssh_port}:22\n    links:\n        - mysql:db\n\nmysql:\n    image: mysql:latest\n    ports:\n        - ${public_port}:3306\n    environment:\n        MYSQL_ROOT_PASSWORD: ${mysql_password}\n```\n\n\n## Grafana\n![community-grafana.png](https://qiita-image-store.s3.amazonaws.com/0/62822/703765f9-f34f-86e6-f461-bbfeb5fc248f.png)\n\n- Kibana\u306fElasticsearch\u3001Grafana\u306fGraphite or InfluxDB\u3092\u4e3b\u306b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3068\u3057\u3066Web\u30d6\u30e9\u30a6\u30b6\u3067\u52d5\u4f5c\u3059\u308b\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u30c4\u30fc\u30eb\u3067\u3059([Kibana\u3068Grafana\u306e\u6bd4\u8f03](http://qiita.com/m_mizutani/items/878bb4c3fa1716e4ba9d))\n- [InfluxDB\u3068Grafana\u3092\u4f7f\u3063\u3066\u30b5\u30fc\u30d0\u30fc\u30ea\u30bd\u30fc\u30b9\u306e\u53ef\u8996\u5316\u3092\u3059\u308b](http://qiita.com/airtoxin/items/806e0bfbdecba115b3be)\n\n```docker-compose.yml\ngrafana:\n    image: grafana/grafana:latest\n    ports:\n        - ${http_port}:3000\n    environment:\n        GF_SECURITY_ADMIN_USER: ${admin_username}\n        GF_SECURITY_ADMIN_PASSWORD: ${admin_password}\n        GF_SECURITY_SECRET_KEY: ${secret_key}\n\n```\n\n## Hadoop + Yarn\n![community-hadoop.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/e4f22ed3-53af-d304-e344-bc1cd97bba08.png)\n\n- \u30d3\u30c3\u30b0\u30fb\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308b\u306e\u306b\u6700\u3082\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u30c4\u30fc\u30eb\n- [\u3042\u306e\u65e5\u898b\u305fYARN\u306e\u304a\u4ed5\u4e8b\u3092\u50d5\u9054\u306f\u307e\u3060\u77e5\u3089\u306a\u3044\u3002](http://qiita.com/keigodasu/items/09f7e0a15d721b0b5212)\n\n```docker-compose.yml\nbootstrap-hdfs:\n  image: rancher/hadoop-base:v0.3.5\n  labels:\n    io.rancher.container.start_once: true\n  command: 'su -c \"sleep 20 && exec /bootstrap-hdfs.sh\" hdfs'\n  net: \"container:namenode-primary\"\n  volumes_from:\n    - namenode-primary-data\nsl-namenode-config:\n  image: rancher/hadoop-followers-config:v0.3.5\n  net: \"container:namenode-primary\"\n  environment:\n    NODETYPE: \"hdfs\"\n  volumes_from:\n    - namenode-primary-data\nnamenode-config:\n  image: rancher/hadoop-config:v0.3.5\n  net: \"container:namenode-primary\"\n  volumes_from:\n    - namenode-primary-data\nnamenode-primary:\n  image: rancher/hadoop-base:v0.3.5\n  command: 'su -c \"sleep 15 && /usr/local/hadoop-2.7.1/bin/hdfs namenode\" hdfs'\n  volumes_from:\n    - namenode-primary-data\n  ports:\n    - 50070:50070\n  labels:\n    io.rancher.sidekicks: namenode-config,sl-namenode-config,bootstrap-hdfs,namenode-primary-data\n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.affinity:container_label_soft: io.rancher.stack_service.name=$${stack_name}/yarn-resourcemanager,io.rancher.stack_service.name=$${stack_name}/jobhistory-server\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/datanode\nnamenode-primary-data:\n  image: rancher/hadoop-base:v0.3.5\n  volumes:\n    - '${cluster}-namenode-primary-config:/etc/hadoop'\n    - '/tmp'\n  net: none\n  labels:\n    io.rancher.container.start_once: true\n  command: '/bootstrap-local.sh'\n\n\ndatanode-config:\n  image: rancher/hadoop-config:v0.3.5\n  net: \"container:datanode\"\n  volumes_from:\n    - datanode-data\ndatanode-data:\n  image: rancher/hadoop-base:v0.3.5\n  net: none\n  volumes:\n    - '${cluster}-datanode-config:/etc/hadoop'\n    - '/tmp'\n  labels:\n    io.rancher.container.start_once: true\n  command: '/bootstrap-local.sh'\ndatanode:\n  image: rancher/hadoop-base:v0.3.5\n  volumes_from:\n    - datanode-data\n  labels:\n    io.rancher.sidekicks: datanode-config,datanode-data\n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/namenode-primary,io.rancher.stack_service.name=$${stack_name}/yarn-resourcemanager\n  links:\n    - 'namenode-primary:namenode'\n  command: 'su -c \"sleep 45 && exec /usr/local/hadoop-2.7.1/bin/hdfs datanode\" hdfs'\n\nyarn-nodemanager-config:\n  image: rancher/hadoop-config:v0.3.5\n  net: \"container:yarn-nodemanager\"\n  volumes_from:\n    - yarn-nodemanager-data\nyarn-nodemanager-data:\n  image: rancher/hadoop-base:v0.3.5\n  net: none\n  volumes:\n    - '${cluster}-yarn-nodemanager-config:/etc/hadoop'\n    - '/tmp'\n  labels:\n    io.rancher.container.start_once: true\n  command: '/bootstrap-local.sh'\nyarn-nodemanager:\n  image: rancher/hadoop-base:v0.3.5\n  volumes_from:\n    - yarn-nodemanager-data\n  ports:\n    - '8042:8042'\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: yarn-nodemanager-config,yarn-nodemanager-data\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/namenode-primary,io.rancher.stack_service.name=$${stack_name}/yarn-resourcemanager,io.rancher.stack_service.name=$${stack_name}/jobhistory-server,\n    io.rancher.scheduler.affinity:container_label: io.rancher.stack_service.name=$${stack_name}/datanode\n  links:\n    - 'namenode-primary:namenode'\n    - 'yarn-resourcemanager:yarn-rm'\n  command: 'su -c \"sleep 45 && exec /usr/local/hadoop-2.7.1/bin/yarn nodemanager\" yarn'\n\njobhistory-server-config:\n  image: rancher/hadoop-config:v0.3.5\n  net: \"container:jobhistory-server\"\n  volumes_from:\n    - jobhistory-server-data\njobhistory-server-data:\n  image: rancher/hadoop-base:v0.3.5\n  net: none\n  volumes:\n    - '${cluster}-jobhistory-config:/etc/hadoop'\n    - '/tmp'\n  labels:\n    io.rancher.container.start_once: true\n  command: '/bootstrap-local.sh'\njobhistory-server:\n  image: rancher/hadoop-base:v0.3.5\n  volumes_from:\n    - jobhistory-server-data\n  links:\n    - 'namenode-primary:namenode'\n    - 'yarn-resourcemanager:yarn-rm'\n  ports:\n    - '10020:10020'\n    - '19888:19888'\n  labels:\n    io.rancher.sidekicks: jobhistory-server-config,jobhistory-server-data\n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.affinity:container_label: io.rancher.stack_service.name=$${stack_name}/yarn-resourcemanager,io.rancher.stack_service.name=$${stack_name}/namenode-primary\n  command: 'su -c \"sleep 45 && /usr/local/hadoop-2.7.1/bin/mapred historyserver\" mapred'\n\nyarn-resourcemanager-config:\n  image: rancher/hadoop-config:v0.3.5\n  net: \"container:yarn-resourcemanager\"\n  volumes_from:\n    - yarn-resourcemanager-data\nsl-yarn-resourcemanager-config:\n  image: rancher/hadoop-followers-config:v0.3.5\n  net: \"container:yarn-resourcemanager\"\n  environment:\n    NODETYPE: \"yarn\"\n  volumes_from:\n    - yarn-resourcemanager-data\nyarn-resourcemanager-data:\n  image: rancher/hadoop-base:v0.3.5\n  net: none\n  volumes:\n    - '${cluster}-yarn-resourcemanager-config:/etc/hadoop'\n    - '/tmp'\n  labels:\n    io.rancher.container.start_once: true\n  command: '/bootstrap-local.sh'\nyarn-resourcemanager:\n  image: rancher/hadoop-base:v0.3.5\n  volumes_from:\n    - yarn-resourcemanager-data\n  ports:\n    - '8088:8088'\n  links:\n    - 'namenode-primary:namenode'\n  labels:\n    io.rancher.sidekicks: yarn-resourcemanager-config,sl-yarn-resourcemanager-config,yarn-resourcemanager-data\n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name},io.rancher.stack_service.name=$${stack_name}/datanode,io.rancher.stack_service.name=$${stack_name}/yarn-nodemanager\n    io.rancher.scheduler.affinity:container_label: io.rancher.stack_service.name=$${stack_name}/namenode-primary\n  command: 'su -c \"sleep 30 && /usr/local/hadoop-2.7.1/bin/yarn resourcemanager\" yarn'\n\n```\n\n## Janitor\n![community-janitor.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/4f27d3ab-fd10-ce25-c98b-e546cc56ca2f.png)\n\n- \u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u30ea\u30bd\u30fc\u30b9\u3092\u81ea\u52d5\u524a\u9664\u3059\u308b\u30c4\u30fc\u30eb\n- [\u4f7f\u3063\u3066\u3044\u306a\u3044AWS\u30ea\u30bd\u30fc\u30b9\u3092\u76e3\u8996\u3057\u3066\u81ea\u52d5\u524a\u9664\u3059\u308bJanitor Monkey\u3092\u4f7f\u3063\u3066\u307f\u305f](http://blog.serverworks.co.jp/tech/2013/07/01/janitor-monkey-tutorial/)\n\n```docker-compose.yml\ncleanup:\n  image: meltwater/docker-cleanup:1.8.0\n  environment:\n    CLEAN_PERIOD: ${FREQUENCY}\n    DELAY_TIME: \"900\"\n    KEEP_IMAGES: \"${KEEP}\"\n    KEEP_CONTAINERS: \"${KEEPC}\"\n    KEEP_CONTAINERS_NAMED: \"${KEEPCN}\"\n    LOOP: \"true\"\n    DEBUG: \"0\"\n  labels:\n     io.rancher.scheduler.global: \"true\"\n     io.rancher.scheduler.affinity:host_label_ne: \"${EXCLUDE_LABEL}\"\n  net: none\n  privileged: true\n  tty: false\n  stdin_open: false\n  volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n    - /var/lib/docker:/var/lib/docker\n\n```\n\n## Jenkins\n![community-jenkins-swarm.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/679db50f-0b73-6c1d-eef6-63e8a741bb6b.png)\n\n- \u304a\u306a\u3058\u307fci\u30c4\u30fc\u30eb\n- [Jenkins + docker\u3067\u30c6\u30b9\u30c8\u306e\u4e26\u5217\u5316](http://qiita.com/namutaka/items/b0892f315b9ab2ca52ef)\n\n```docker-compose.yml\njenkins-primary:\n  image: \"jenkins:2.19.4\"\n  ports:\n    - \"${PORT}:8080\"\n  labels:\n    io.rancher.sidekicks: jenkins-plugins,jenkins-datavolume\n    io.rancher.container.hostname_override: container_name\n  volumes_from:\n    - jenkins-plugins\n    - jenkins-datavolume\n  entrypoint: /usr/share/jenkins/rancher/jenkins.sh\njenkins-plugins:\n  image: rancher/jenkins-plugins:v0.1.1\njenkins-datavolume:\n  image: \"busybox\"\n  volumes:\n    - ${volume_work}:/var/jenkins_home\n  labels:\n    io.rancher.container.start_once: true\n  entrypoint: [\"chown\", \"-R\", \"1000:1000\", \"/var/jenkins_home\"]\n```\n\n## Jenkins Swarm Plugin Clients\n![community-jenkins-swarm.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/38ed99a0-ab99-0e7c-3806-d584f0ad658f.png)\n\n- Jenkins\u5074\u3067\u3001\u52d5\u7684\u306b\u30b9\u30ec\u30fc\u30d6\u304c\u8ffd\u52a0\u3055\u308c\u305f\u308a\u3059\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u3088\u3046\u3067\u3059\n- [Docker Compose\u3067Jenkins\u3068Selenium Grid\u3092\u4e00\u6c17\u306b\u7acb\u3061\u4e0a\u3052\u308b](http://qiita.com/ootaken/items/26d37cb34d3b575277e0)\n\n```docker-compose.yml\nswarm-clients:\n  image: \"rancher/jenkins-swarm:v0.2.0\"\n  user: \"${user}\"\n  labels:\n    io.rancher.scheduler.affinity:host_label_soft: ci=worker\n    io.rancher.container.hostname_override: container_name\n  external_links:\n    - \"${jenkins_service}:jenkins-primary\"\n  environment:\n    JENKINS_PASS: \"${jenkins_pass}\"\n    JENKINS_USER: \"${jenkins_user}\"\n    SWARM_EXECUTORS: \"${swarm_executors}\"\n  volumes:\n    - '/var/run/docker.sock:/var/run/docker.sock'\n    - '/var/jenkins_home/workspace:/var/jenkins_home/workspace'\n    - '/tmp:/tmp'\n\n```\n\n## Kibana 4\n![community-kibana.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/6a0ea5e6-aceb-1ff5-2b8f-f5c4918b4c15.png)\n\n- Elastic\u793e\u304c\u63d0\u4f9b\u3059\u308b\u30ed\u30b0\u30c7\u30fc\u30bf\u89e3\u6790/\u53ef\u8996\u5316\u30c4\u30fc\u30eb\u3067\u3059\u3002 \u57fa\u672c\u7684\u306b\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u300cElasticsearch\u300d\u3068\u30bb\u30c3\u30c8\u3067\u4f7f\u308f\u308c\u307e\u3059\u3002\n- [Kibana 4 BETA\u30d5\u30a1\u30fc\u30b9\u30c8\u30a4\u30f3\u30d7\u30ec\u30c3\u30b7\u30e7\u30f3](http://qiita.com/harukasan/items/3737a1cc0bed2facc14e)\n\n```docker-compose.yml\nkibana-vip:\n  ports:\n  - \"${public_port}:80\"\n  restart: always\n  tty: true\n  image: rancher/load-balancer-service\n  links:\n  - nginx-proxy:kibana4\n  stdin_open: true\nnginx-proxy-conf:\n  image: rancher/nginx-conf:v0.2.0\n  command: \"-backend=rancher --prefix=/2015-07-25\"\n  labels:\n    io.rancher.container.hostname_override: container_name\nnginx-proxy:\n  image: rancher/nginx:v1.9.4-3\n  volumes_from:\n    - nginx-proxy-conf\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: nginx-proxy-conf,kibana4\n  external_links:\n    - ${elasticsearch_source}:elasticsearch\nkibana4:\n  restart: always\n  tty: true\n  image: kibana:4.4.2\n  net: \"container:nginx-proxy\"\n  stdin_open: true\n  environment:\n    ELASTICSEARCH_URL: \"http://elasticsearch:9200\"\n  labels:\n    io.rancher.container.hostname_override: container_name\n\n```\n\n## Let's Encrypt\n![community-letsencrypt.png](https://qiita-image-store.s3.amazonaws.com/0/62822/53f0acbe-5aae-f54e-c84c-d749e8cdcaba.png)\n\n- \u7121\u6599\u3067ssl\u304c\u53d6\u5f97\u3067\u304d\u308b\n- [Let's Encrypt \u3067\u624b\u8efd\u306b HTTPS \u30b5\u30fc\u30d0\u3092\u8a2d\u5b9a\u3059\u308b](http://qiita.com/ww24/items/9fa19594b4e3a8eb9b6f)\n- [Docker\u3067Let\u2019s Encrypt\u3057\u3088\u3063\u304b](http://qiita.com/sawanoboly/items/9fdde1707de5e975dd15)\n- [rancher\u3092ssl\u3092\u53d6\u5f97\u3057\u3066\u307f\u3088\u3046(\u57f7\u7b46\u4e2d)]()\n\n```docker-compose.yml\nletsencrypt:\n  image: janeczku/rancher-letsencrypt:v0.3.0\n  environment:\n    EULA: ${EULA}\n    API_VERSION: ${API_VERSION}\n    CERT_NAME: ${CERT_NAME}\n    EMAIL: ${EMAIL}\n    DOMAINS: ${DOMAINS}\n    PUBLIC_KEY_TYPE: ${PUBLIC_KEY_TYPE}\n    RENEWAL_TIME: ${RENEWAL_TIME}\n    PROVIDER: ${PROVIDER}\n    CLOUDFLARE_EMAIL: ${CLOUDFLARE_EMAIL}\n    CLOUDFLARE_KEY: ${CLOUDFLARE_KEY}\n    DO_ACCESS_TOKEN: ${DO_ACCESS_TOKEN}\n    AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}\n    AWS_SECRET_KEY: ${AWS_SECRET_KEY}\n    DNSIMPLE_EMAIL: ${DNSIMPLE_EMAIL}\n    DNSIMPLE_KEY: ${DNSIMPLE_KEY}\n    DYN_CUSTOMER_NAME: ${DYN_CUSTOMER_NAME}\n    DYN_USER_NAME: ${DYN_USER_NAME}\n    DYN_PASSWORD: ${DYN_PASSWORD}\n  volumes:\n    - ${STORAGE_VOLUME}/etc/letsencrypt/production/certs\n  labels:\n    io.rancher.container.create_agent: 'true'\n    io.rancher.container.agent.role: 'environment'\n```\n\n## Liferay Portal\n![community-liferay.png](https://qiita-image-store.s3.amazonaws.com/0/62822/a6549c4c-f09d-12d1-48b8-b4788551310f.png)\n\n- Web\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30dd\u30fc\u30bf\u30eb\uff08\u793e\u5185\u30dd\u30fc\u30bf\u30eb\u3001\u5bfe\u5916\u30b5\u30a4\u30c8\uff09\u88fd\u54c1\u3067\u3059\u3002\n- \u30dd\u30fc\u30bf\u30eb\uff08\u793e\u5185\u30dd\u30fc\u30bf\u30eb\u3001\u5bfe\u5916\u30b5\u30a4\u30c8\uff09\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3001\u304a\u3088\u3073\u305d\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u7528\u306b\u958b\u767a\u3055\u308c\u305f\u30dd\u30fc\u30c8\u30ec\u30c3\u30c8\uff08\u6a5f\u80fd\u90e8\u54c1\uff09\u3001\u53ca\u3073\u30dd\u30fc\u30c8\u30ec\u30c3\u30c8\u306e\u958b\u767a\u74b0\u5883\u304b\u3089\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n- Liferay Portal\uff08\u30e9\u30a4\u30d5\u30ec\u30a4 \u30dd\u30fc\u30bf\u30eb\uff09\u306fJava\u3067\u5b9f\u88c5\u3055\u308c\u3066\u304a\u308a\u3001JBoss, Apache Tomcat, WebSphere\u306a\u3069\u591a\u304f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3084Web\u30b3\u30f3\u30c6\u30ca\u4e0a\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\n- [Liferay Portal\uff08\u30e9\u30a4\u30d5\u30ec\u30a4 \u30dd\u30fc\u30bf\u30eb\uff09\u306e\u6982\u8981](http://liferay-unisrv.jp/liferay)\n\n```docker-compose.yml\nliferay:\n  ports:\n  - 8080:8080/tcp\n  environment:\n    SETUP_WIZARD_ENABLED: ${SETUP_WIZARD_ENABLED}\n    DB_KIND: mysql\n    DB_HOST: liferaydb\n    DB_USERNAME: ${MYSQL_USER}\n    DB_PASSWORD: ${MYSQL_PASSWORD}\n  log_driver: ''\n  labels:\n    io.rancher.container.pull_image: always\n  tty: true\n  log_opt: {}\n  image: rsippl/liferay:7.0.0-2\n  links:\n  - mysql:liferaydb\n  stdin_open: true\nmysql:\n  environment:\n    MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}\n    MYSQL_DATABASE: ${MYSQL_DATABASE}\n    MYSQL_USER: ${MYSQL_USER}\n    MYSQL_PASSWORD: ${MYSQL_PASSWORD}\n  log_driver: ''\n  labels:\n    io.rancher.container.pull_image: always\n  tty: true\n  command:\n  - --character-set-server=utf8\n  - --collation-server=utf8_general_ci\n  log_opt: {}\n  image: mysql:5.6.30\n  stdin_open: true\n```\n\n## Logmatic\n- go\u3067\u66f8\u304b\u308c\u305f log analyzer \u306e\u3088\u3046\u3067\u3059\n- [logmatic.io](https://logmatic.io/)\n\n```docker-compose.yml\nlogmatic-agent:\n  image: logmatic/logmatic-docker\n  entrypoint: /usr/src/app/index.js\n  command: ${logmatic_key} ${opts_args}\n  restart: always\n  volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n    - /proc/:/host/proc/:ro\n    - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro\n  labels:\n    io.rancher.scheduler.global: \"true\"\n\n```\n\n## Logspout\n![community-logspout.1.png](https://qiita-image-store.s3.amazonaws.com/0/62822/cac09883-76af-1b44-3ae6-720c590dc749.png)\n\n- \u30db\u30b9\u30c8\u5185\u3067\u52d5\u304b\u3057\u305f\u5168\u3066\u306eDocker\u30b3\u30f3\u30c6\u30ca\u306e\u51fa\u529b\u3092\u96c6\u7d04\u3057\u3066\uff0c\u597d\u304d\u306a\u3068\u3053\u308d\u306b\u98db\u3070\u3059\uff08\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\uff09\u305f\u3081\u306e\u30c4\u30fc\u30eb\n- [logspout\u3067Docker\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u306e\u96c6\u7d04\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0](http://deeeet.com/writing/2014/05/14/logspout/)\n- [logspout \u3067 CoreOS \u4e0a\u306e Docker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u96c6\u7d04\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b](http://qiita.com/spesnova/items/e05413eafadb9ff60056)\n\n```docker-compose.yml\nlogspout:\n  restart: always\n  environment:\n    ROUTE_URIS: \"${route_uri}\"\n    LOGSPOUT: 'ignore'\n    SYSLOG_HOSTNAME: \"${envname}\"\n  volumes:\n  - '/var/run/docker.sock:/var/run/docker.sock'\n  labels:\n    io.rancher.scheduler.global: 'true'\n    io.rancher.container.hostname_override: container_name\n  tty: true\n  image: bekt/logspout-logstash:latest\n  stdin_open: true\n```\n\n## Logstash\n![community-logstash.png](https://qiita-image-store.s3.amazonaws.com/0/62822/3f5dd398-5ea6-bfa2-c0ab-5ced306c2788.png)\n\n- Elastic\u793e\u304c\u63d0\u4f9b\u3059\u308b\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30ed\u30b0\u53ce\u96c6\u7ba1\u7406\u30c4\u30fc\u30eb\u3067\u3059\u3002\u30ed\u30b0\u3092\u53ce\u96c6\u3057\u30011\u3064\u306e\u30b5\u30fc\u30d0\u306b\u96c6\u7d04\u3057\u3066\u7ba1\u7406\u3057\u307e\u3059\u3002\u4e3b\u306b\u3001Elastic\u793e\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u300cElasticsearch\u300d\u3068\u306e\u30bb\u30c3\u30c8\u3067\u306e\u4f7f\u7528\u3092\u60f3\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n- [ELK(ElasticSearch, Logstash, Kibana)+fluentd\u306e\u74b0\u5883\u3092Docker Compose\u3067\u69cb\u7bc9\u3057\u3064\u3064\u3001\u8a66\u3057\u306bCloudWatch\u306e\u7d71\u8a08\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3057\u3066\u307f\u305f](http://qiita.com/khiraiwa/items/dc7e1c446d7e0c7d9482)\n\n```docker-compose.yml\nlogstash-indexer-config:\n  restart: always\n  image: rancher/logstash-config:v0.2.0\n  labels:\n    io.rancher.container.hostname_override: container_name\nredis:\n  restart: always\n  tty: true\n  image: redis:3.2.6-alpine\n  stdin_open: true\n  labels:\n    io.rancher.container.hostname_override: container_name\nlogstash-indexer:\n  restart: always\n  tty: true\n  volumes_from:\n  - logstash-indexer-config\n  command:\n  - logstash\n  - -f\n  - /etc/logstash\n  image: logstash:5.1.1-alpine\n  links:\n  - redis:redis\n  external_links:\n  - ${elasticsearch_link}:elasticsearch\n  stdin_open: true\n  labels:\n    io.rancher.sidekicks: logstash-indexer-config\n    io.rancher.container.hostname_override: container_name\nlogstash-collector-config:\n  restart: always\n  image: rancher/logstash-config:v0.2.0\n  labels:\n    io.rancher.container.hostname_override: container_name\nlogstash-collector:\n  restart: always\n  tty: true\n  links:\n  - redis:redis\n  ports:\n  - \"5000/udp\"\n  - \"6000/tcp\"\n  volumes_from:\n  - logstash-collector-config\n  command:\n  - logstash\n  - -f\n  - /etc/logstash\n  image: logstash:5.1.1-alpine\n  stdin_open: true\n  labels:\n    io.rancher.sidekicks: logstash-collector-config\n    io.rancher.container.hostname_override: container_name\n```\n\n## MariaDB Galera Cluster \n![community-galera.png](https://qiita-image-store.s3.amazonaws.com/0/62822/31891a93-d0e7-f0af-6c71-aa98d0c8f5c8.png)\n\n- MySQL (MariaDB) \u306e\u5197\u9577\u5316\u3067\u540c\u671f\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7528\u3044\u305f\u30de\u30eb\u30c1\u30de\u30b9\u30bf\u578b\u306e\u30af\u30e9\u30b9\u30bf\u3092\u7d44\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- [docker run\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3 MariaDB Galera Cluster 5.5 (kudotty/mariadb-galeracluster-5.5)](http://qiita.com/kudotty/items/ce4ea5c2c5842c3f1c69)\n\n```docker-compose.yml\nmariadb-galera-server:\n  image: rancher/galera:10.0.22-rancher2\n  net: \"container:galera\"\n  environment:\n    TERM: \"xterm\"\n    MYSQL_ROOT_PASSWORD: \"${mysql_root_password}\"\n    MYSQL_DATABASE: \"${mysql_database}\"\n    MYSQL_USER: \"${mysql_user}\"\n    MYSQL_PASSWORD: \"${mysql_password}\"\n  volumes_from:\n    - 'mariadb-galera-data'\n  labels:\n    io.rancher.container.hostname_override: container_name\n  entrypoint: bash -x /opt/rancher/start_galera\nmariadb-galera-data:\n  image: rancher/galera:10.0.22-rancher2\n  net: none\n  environment:\n    MYSQL_ALLOW_EMPTY_PASSWORD: \"yes\"\n  volumes:\n    - /var/lib/mysql\n    - /etc/mysql/conf.d\n    - /docker-entrypoint-initdb.d\n    - /opt/rancher\n  command: /bin/true\n  labels:\n    io.rancher.container.start_once: true\ngalera-leader-forwarder:\n  image: rancher/galera-leader-proxy:v0.1.0\n  net: \"container:galera\"\n  volumes_from:\n   - 'mariadb-galera-data'\ngalera:\n  image: rancher/galera-conf:v0.2.0\n  labels:\n    io.rancher.sidekicks: mariadb-galera-data,mariadb-galera-server,galera-leader-forwarder\n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n  volumes_from:\n    - 'mariadb-galera-data'\n  stdin_open: true\n  tty: true\n  command: /bin/bash\n\ngalera-lb:\n  expose:\n  - 3306:3307/tcp\n  tty: true\n  image: rancher/load-balancer-service\n  links:\n  - galera:galera\n  stdin_open: true\n\n```\n\n## Minecraft\n![community-minecraft.png](https://qiita-image-store.s3.amazonaws.com/0/62822/cd2d02a7-1531-94f5-bcab-fa03a9de7dcb.png)\n\n- \u3053\u308c\u3067\u30de\u30a4\u30f3\u30af\u30e9\u30d5\u30c8\u304c\u3044\u3064\u3067\u3082\u904a\u3079\u307e\u3059\n\n```docker-compose.yml\n\nMinecraft:\n  environment:\n    - EULA\n    - VERSION\n    - DIFFICULTY\n    - MODE\n    - LEVEL_TYPE\n    - GENERATOR_SETTINGS\n    - PVP\n    - WHITELIST\n    - OPS\n    - MOTD\n    - SEED\n    - WORLD\n  tty: true\n  image: itzg/minecraft-server\n  stdin_open: true\n  labels:\n    io.rancher.sidekicks: MinecraftData\n  volumes_from:\n    - MinecraftData\n\nMinecraftData:\n  image: busybox\n  labels:\n    io.rancher.container.start_once: 'true'\n  net: none\n  entrypoint: /bin/true\n  volumes:\n    - ${DATA_VOLUME}/data\n  volume_driver: ${VOLUME_DRIVER}\n\nMinecraftLB:\n  ports:\n  - ${PORT}:25565/tcp\n  tty: true\n  image: rancher/load-balancer-service\n  links:\n  - Minecraft:Minecraft\n  stdin_open: true\n```\n\n## MongoDB\n![community-MongoDB.png](https://qiita-image-store.s3.amazonaws.com/0/62822/e36124fe-5abc-a7da-32fa-0e81adb16720.png)\n\n- RDBMS\u3067\u306f\u306a\u304f\u3001\u3044\u308f\u3086\u308bNoSQL\u3068\u547c\u3070\u308c\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5206\u985e\u3055\u308c\u308b\u3082\u306e\n- [fig/docker-compose\u4e8b\u59cb\u3081](http://qiita.com/taka4sato/items/f03004e449538b325b5e)\n\n```docker-compose.yml\nmongo-cluster:\n  restart: always\n  environment:\n    MONGO_SERVICE_NAME: mongo-cluster\n  tty: true\n  entrypoint: /opt/rancher/bin/entrypoint.sh\n  command:\n  - --replSet\n  - \"${replset_name}\"\n  image: mongo:3.2\n  labels:\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: mongo-base, mongo-datavolume\n  volumes_from:\n    - mongo-datavolume\n    - mongo-base\nmongo-base:\n  restart: always\n  net: none\n  tty: true\n  labels:\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  image: rancher/mongodb-conf:v0.1.0\n  stdin_open: true\n  entrypoint: /bin/true\nmongo-datavolume:\n  net: none\n  labels:\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /data/db\n  entrypoint: /bin/true\n  image: busybox\n\n```\n\n##  Mumble\n![community-mumble.png](https://qiita-image-store.s3.amazonaws.com/0/62822/7072797a-a13a-caab-3d9c-e22a04a0d960.png)\n\n- \u591a\u4eba\u6570\u3067\u3082\u9045\u5ef6\u306a\u3057\u3067\u8efd\u5feb\u306b\u4f7f\u3048\u308b\u30dc\u30a4\u30b9\u30c1\u30e3\u30c3\u30c8\n- [\u300cMumble\u300d \u306e\u4f7f\u3044\u65b9](https://mag.osdn.jp/10/03/11/093256)\n\n```docker-compose.yml\nmumble:\n  image: ranchercb/murmur:latest\n  ports:\n  - 64738:64738\n  - 64738:64738/udp\n\n```\n\n## Netdata\n![community-netdata.png](https://qiita-image-store.s3.amazonaws.com/0/62822/fddc03e5-29b7-e6c2-a77a-c1b31b4214af.png)\n\n- netdata\u306f\u3001Zabbix\u3084Nagios\u306a\u3069\u306e\u76e3\u8996\u30c4\u30fc\u30eb\u3068\u306f\u7570\u306a\u308a\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u304c\u3067\u304d\u308b\u30c4\u30fc\u30eb\u3067\u3059\u3002\n- [\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306a\u30ea\u30bd\u30fc\u30b9\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u30c4\u30fc\u30eb\u306enetdata\u3092\u8a66\u3057\u3066\u307f\u305f](http://dev.classmethod.jp/tool/netdata/)\n- [netdata\u3092\u4f7f\u3063\u3066\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u53ef\u8996\u5316\u3057\u3066\u307f\u308b](http://qiita.com/kjtanaka/items/ce6eedfbe334989f0748)\n\n```docker-compose.yml\nnetdata:\n  image: titpetric/netdata:latest\n  labels:\n    io.rancher.scheduler.global: 'true'\n  cap_add:\n  - SYS_PTRACE\n  volumes:\n  - /proc:/host/proc:ro\n  - /sys:/host/sys:ro\n  environment:\n    NETDATA_PORT: \"${NETDATA_PORT}\"\n```\n\n## Nuxeo\n![community-nuxeo.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/4ea64ae7-162c-9e06-401f-f55ae1a0efbb.png)\n\n- \u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306fNuxeo\u30b5\u30fc\u30d0\u30fc\u3092\u3059\u3079\u3066\u306e\u30b3\u30f3\u30d1\u30cb\u30aa\u30f3\uff08Elasticsearch\u3001Redis\u3001Postgres\uff09\u3068\u5171\u306b\u5c55\u958b\u3057\u3001Nuxeo\u3092\u3042\u306a\u305f\u306e\u4e0a\u3067\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\n\n```docker-compose.yml\npostgres-datavolume:\n  labels:\n    io.rancher.container.start_once: 'true'\n    io.rancher.container.hostname_override: container_name\n  image: nuxeo/postgres\n  entrypoint: chown -R postgres:postgres /var/lib/postgresql/data\n  volume_driver: ${volumedriver}\n  volumes:\n    - /var/lib/postgresql/data\n\npostgres:\n  image: nuxeo/postgres\n  environment:\n    - POSTGRES_USER=nuxeo\n    - POSTGRES_PASSWORD=nuxeo    \n  labels:\n    io.rancher.sidekicks: postgres-datavolume\n    io.rancher.container.hostname_override: container_name\n  volumes_from:\n  - postgres-datavolume\n\n# Copied from default Rancher ES Stack : don't modifiy service names\nelasticsearch-masters:\n  image: rancher/elasticsearch-conf:v0.4.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: elasticsearch-base-master,elasticsearch-datavolume-masters\n  volume_driver: ${volumedriver}\nelasticsearch-datavolume-masters:\n  labels:\n    elasticsearch.datanode.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  entrypoint: /bin/true\n  image: elasticsearch:1.7.3\n  volume_driver: ${volumedriver}\nelasticsearch-base-master:\n  labels:\n    elasticsearch.master.config.version: '0'\n    io.rancher.container.hostname_override: container_name\n  image: elasticsearch:1.7.3\n  net: \"container:elasticsearch-masters\"\n  volumes_from:\n    - elasticsearch-masters\n    - elasticsearch-datavolume-masters\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n\n\nredis:\n  labels:    \n    io.rancher.container.hostname_override: container_name\n  tty: true\n  image: redis:3.0.3\n  stdin_open: true\n  volume_driver: ${volumedriver}\n\nnuxeo-datavolume:\n  labels:\n    io.rancher.container.start_once: 'true'\n    io.rancher.container.hostname_override: container_name\n  image: nuxeo\n  entrypoint: /bin/true\n  volume_driver: ${volumedriver}\n  volumes:\n    - /var/lib/nuxeo/data\n    - /var/log/nuxeo\n\nnuxeo:\n  environment:\n    NUXEO_CLID: ${clid}\n    NUXEO_PACKAGES: ${packages}\n    NUXEO_DB_HOST: postgres\n    NUXEO_DB_TYPE: postgresql\n    NUXEO_ES_HOSTS: elasticsearch:9300\n    NUXEO_DATA: /data/nuxeo/data/\n    NUXEO_LOG: /data/nuxeo/log/\n    NUXEO_REDIS_HOST: redis\n    NUXEO_URL: ${url}\n  labels:\n    io.rancher.sidekicks: nuxeo-datavolume    \n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n  image: nuxeo:FT\n  links:\n  - redis:redis\n  - postgres:postgres\n  - elasticsearch-masters:elasticsearch\n  volumes_from:\n  - nuxeo-datavolume\n\nlb:\n  expose:\n  - 80:8080\n  image: rancher/load-balancer-service\n  links:\n  - nuxeo:nuxeo\n\n```\n\n## Odoo\n![community-odoo.png](https://qiita-image-store.s3.amazonaws.com/0/62822/4f02b876-2d3f-d133-b878-da7c0774430e.png)\n\n- Odoo\uff08\u65e7\u79f0OpenERP\uff09\u306f\u30d9\u30eb\u30ae\u30fc\u306eOpenERP S.A.\u793e\u306b\u3088\u308a\u958b\u767a\u3068\u308a\u307e\u3068\u3081\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3001\u4e16\u754c\u3067\u5927\u4eba\u6c17\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u696d\u52d9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b9\u30a4\u30fc\u30c8\u3067\u3059\u3002\u6a5f\u80fd\u3092\u8c4a\u5bcc\u306b\u5099\u3048\u3001\u64cd\u4f5c\u6027\u3001\u62e1\u5f35\u6027\u3001\u4fdd\u5b88\u6027\u306e\u5404\u9762\u3067\u512a\u308c\u3066\u304a\u308a\u3001\u5727\u5012\u7684\u306a\u30b3\u30b9\u30c8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u8a87\u308a\u307e\u3059\u3002\u30ab\u30d0\u30fc\u9818\u57df\u306f\u3001\u5f93\u6765\u306eERP\u30d1\u30c3\u30b1\u30fc\u30b8\u5b88\u5099\u7bc4\u56f2\u3092\u3082\u306f\u3084\u8d8a\u3048\u3001CMS\u3001E\u30b3\u30de\u30fc\u30b9\u3001\u30a4\u30d9\u30f3\u30c8\u7ba1\u7406\u7b49\u3001\u591a\u5c90\u306b\u4e98\u308a\u307e\u3059\u3002\n- [Odoo8\u30d7\u30e9\u30b0\u30a4\u30f3\u5168\u90e8\u5165\u308a\u30a4\u30e1\u30fc\u30b8\u4f5c\u3063\u305f(896.4 MB)](http://qiita.com/tukiyo3/items/d1480682d6286e421328)\n\n```docker-compose.yml\nodoo:\n  image: odoo\n  ports:\n    - \"8069:8069\"\n  links:\n    - db\ndb:\n  image: postgres\n  environment:\n    - POSTGRES_USER=odoo\n    - POSTGRES_PASSWORD=odoo\n\n```\n\n\n## OpenVPN\n![community-openvpn-httpbasic.png.png](https://qiita-image-store.s3.amazonaws.com/0/62822/f0afd031-68cc-c0bb-8c4e-a406dc26ae66.png)\n\n- \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u63a5\u7d9a\u3057\u3066\u3044\u308bPC\u304c1\u53f0\u3042\u308c\u3070\u3001VPN\u30b5\u30fc\u30d0\u30fc\u304c\u8a2d\u7f6e\u3067\u304d\u307e\u3059\uff08\u81ea\u793e\u5185\u30b5\u30fc\u30d0\u30fc\u306f\u3082\u3061\u308d\u3093\u3001\u30ec\u30f3\u30bf\u30ebVPS\u306a\u3069\u3067\u904b\u7528\u3057\u3066\u3044\u308b\u30b1\u30fc\u30b9\u3082\u3042\u308a\u307e\u3059\uff09\u3002\u7279\u5b9a\u306e\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30d7\u30ed\u30d0\u30a4\u30c0\u306a\u3069\u306e\u5236\u7d04\u3082\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u3088\u3046\u306a\u512a\u308c\u305f\u7279\u5fb4\u304b\u3089\u3001\u500b\u4eba\u30e6\u30fc\u30b6\u30fc\u3084\u4e2d\u5c0f\u4f01\u696d\u3067\u306e\u5c0e\u5165\u306b\u9069\u3057\u3066\u3044\u307e\u3059\n- [docker\u3067vpn\u30b5\u30fc\u30d0\u30fc\u3092\u305f\u3066\u308b](http://qiita.com/to_obara/items/0622bdc5cacaa2758057)\n\n```docker-compose.yml\nopenvpn-httpbasic-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  entrypoint:\n  - /bin/true\n  image: busybox\n  volumes:\n  - /etc/openvpn/\n\nopenvpn-httpbasic-server:\n  ports:\n  - 1194:1194/tcp\n  environment:\n    AUTH_METHOD: httpbasic\n    AUTH_HTTPBASIC_URL: ${AUTH_HTTPBASIC_URL}\n    CERT_COUNTRY: ${CERT_COUNTRY}\n    CERT_PROVINCE: ${CERT_PROVINCE}\n    CERT_CITY: ${CERT_CITY}\n    CERT_ORG: ${CERT_ORG}\n    CERT_EMAIL: ${CERT_EMAIL}\n    CERT_OU: ${CERT_OU}\n    REMOTE_IP: ${REMOTE_IP}\n    REMOTE_PORT: ${REMOTE_PORT}\n    VPNPOOL_NETWORK: ${VPNPOOL_NETWORK}\n    VPNPOOL_CIDR: ${VPNPOOL_CIDR}\n    OPENVPN_EXTRACONF: ${OPENVPN_EXTRACONF}\n  labels:\n    io.rancher.sidekicks: openvpn-httpbasic-data\n    io.rancher.container.pull_image: always\n  image: mdns/rancher-openvpn:1.0\n  privileged: true\n  volumes_from:\n  - openvpn-httpbasic-data\n```\n\n## OpenVPN-httpdigest\n![community-openvpn-httpbasic.png.png](https://qiita-image-store.s3.amazonaws.com/0/62822/59d2be8f-d365-5f55-6ab1-acba3375cd9f.png)\n\n- [Digest\u8a8d\u8a3c](https://ja.wikipedia.org/wiki/Digest%E8%AA%8D%E8%A8%BC)\u3067OpenVPN\u3092\u4f7f\u7528\u3067\u304d\u308b\n\n```docker-compose.yml\nopenvpn-httpdigest-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  entrypoint:\n  - /bin/true\n  image: busybox\n  volumes:\n  - /etc/openvpn/\n\nopenvpn-httpdigest-server:\n  ports:\n  - 1194:1194/tcp\n  environment:\n    AUTH_METHOD: httpdigest\n    AUTH_HTTPDIGEST_URL: ${AUTH_HTTPDIGEST_URL}\n    CERT_COUNTRY: ${CERT_COUNTRY}\n    CERT_PROVINCE: ${CERT_PROVINCE}\n    CERT_CITY: ${CERT_CITY}\n    CERT_ORG: ${CERT_ORG}\n    CERT_EMAIL: ${CERT_EMAIL}\n    CERT_OU: ${CERT_OU}\n    REMOTE_IP: ${REMOTE_IP}\n    REMOTE_PORT: ${REMOTE_PORT}\n    VPNPOOL_NETWORK: ${VPNPOOL_NETWORK}\n    VPNPOOL_CIDR: ${VPNPOOL_CIDR}\n    OPENVPN_EXTRACONF: ${OPENVPN_EXTRACONF}\n  labels:\n    io.rancher.sidekicks: openvpn-httpdigest-data\n    io.rancher.container.pull_image: always\n  image: mdns/rancher-openvpn:1.0\n  privileged: true\n  volumes_from:\n  - openvpn-httpdigest-data\n\n```\n\n## OpenVPN-LDAP\n![community-openvpn-httpbasic.png.png](https://qiita-image-store.s3.amazonaws.com/0/62822/ce2c4433-2eef-91fc-6012-c9e5ccaaef2e.png)\n\n- LDAP\u30a2\u30ab\u30a6\u30f3\u30c8\u3067OpenVPN\u3092\u4f7f\u7528\u3067\u304d\u308b\n- [OpenVPN\u306b\u30e6\u30fc\u30b6\u30fc/\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u30ed\u30b0\u30a4\u30f3(LDAP\u8a8d\u8a3c)](https://blog.cloudpack.jp/2013/09/19/server-news-openvpn-ldap-login/)\n\n```docker-compose.yml\nopenvpn-ldap-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  entrypoint:\n  - /bin/true\n  image: busybox\n  volumes:\n  - /etc/openvpn/\n\nopenvpn-ldap-server:\n  ports:\n  - 1194:1194/tcp\n  environment:\n    AUTH_METHOD: ldap\n    AUTH_LDAP_URL: ${AUTH_LDAP_URL}\n    AUTH_LDAP_BASEDN: ${AUTH_LDAP_BASEDN}\n    AUTH_LDAP_SEARCH: ${AUTH_LDAP_SEARCH}\n    AUTH_LDAP_BINDDN: ${AUTH_LDAP_BINDDN}\n    AUTH_LDAP_BINDPWD: ${AUTH_LDAP_BINDPWD}\n    CERT_COUNTRY: ${CERT_COUNTRY}\n    CERT_PROVINCE: ${CERT_PROVINCE}\n    CERT_CITY: ${CERT_CITY}\n    CERT_ORG: ${CERT_ORG}\n    CERT_EMAIL: ${CERT_EMAIL}\n    CERT_OU: ${CERT_OU}\n    REMOTE_IP: ${REMOTE_IP}\n    REMOTE_PORT: ${REMOTE_PORT}\n    VPNPOOL_NETWORK: ${VPNPOOL_NETWORK}\n    VPNPOOL_CIDR: ${VPNPOOL_CIDR}\n    OPENVPN_EXTRACONF: ${OPENVPN_EXTRACONF}\n  labels:\n    io.rancher.sidekicks: openvpn-ldap-data\n    io.rancher.container.pull_image: always\n  image: mdns/rancher-openvpn:1.0\n  privileged: true\n  volumes_from:\n  - openvpn-ldap-data\n\n```\n\n## Owncloud\n![community-owncloud.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/85baf4a3-b726-d45f-abe4-0e45e30dc6a5.png)\n\n- Dropbox \u306e\u3088\u3046\u306a\u30aa\u30f3\u30e9\u30a4\u30f3\u30b9\u30c8\u30ec\u30fc\u30b8\u30b5\u30fc\u30d3\u30b9\u3092\u7c21\u5358\u306b\u69cb\u7bc9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u3059\u3002\n- [ownCloud \u306e Docker \u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u308b](http://qiita.com/rerofumi/items/ecabf751c3234f46148b)\n\n```docker-compose.yml\nowncloud:\n  image: owncloud\n  ports:\n   - \"80:80\"\n  links:\n    - db\n\ndb:\n  image: mariadb\n  environment:\n    - MYSQL_ROOT_PASSWORD=password\n```\n\n## Percona XtraDB Cluster\n![community-pxc.1.png](https://qiita-image-store.s3.amazonaws.com/0/62822/336ca999-8762-cdcd-81c7-ffa553b60576.png)\n\n- \u30de\u30eb\u30c1\u30de\u30b9\u30bf\u3067\u30af\u30e9\u30b9\u30bf\u69cb\u7bc9\u304c\u53ef\u80fd\u306aMySQL\u4e92\u63dbRDBMS\u3067\u3059\u3002\n- [Percona XtraDB Cluster\u3092Docker\u3067\u69cb\u7bc9\u3059\u308b](http://qiita.com/nownabe/items/7d4420f8a657aafe85f6)\n\n```docker-compose.yml\npxc-clustercheck:\n  image: flowman/percona-xtradb-cluster-clustercheck:v2.0\n  net: \"container:pxc\"\n  labels:\n    io.rancher.container.hostname_override: container_name\n  volumes_from:\n    - 'pxc-data'    \npxc-server:\n  image: flowman/percona-xtradb-cluster:5.6.28-1\n  net: \"container:pxc\"\n  environment:\n    MYSQL_ROOT_PASSWORD: \"${mysql_root_password}\"\n    PXC_SST_PASSWORD: \"${pxc_sst_password}\"\n    MYSQL_DATABASE: \"${mysql_database}\"\n    MYSQL_USER: \"${mysql_user}\"\n    MYSQL_PASSWORD: \"${mysql_password}\"    \n  labels:\n    io.rancher.container.hostname_override: container_name\n  volumes_from:\n    - 'pxc-data'\n  entrypoint: bash -x /opt/rancher/start_pxc\npxc-data:\n  image: flowman/percona-xtradb-cluster:5.6.28-1\n  net: none\n  environment:\n    MYSQL_ALLOW_EMPTY_PASSWORD: \"yes\"\n  volumes:\n    - /var/lib/mysql\n    - /etc/mysql/conf.d\n    - /docker-entrypoint-initdb.d\n  command: /bin/true\n  labels:\n    io.rancher.container.start_once: true    \npxc:\n  image: flowman/percona-xtradb-cluster-confd:v0.2.0\n  labels:\n    io.rancher.sidekicks: pxc-clustercheck,pxc-server,pxc-data\n    io.rancher.container.hostname_override: container_name\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n  volumes_from:\n    - 'pxc-data'\n\n```\n\n## PHP Adminer\n![community-adminer.png](https://qiita-image-store.s3.amazonaws.com/0/62822/1477b53b-f25b-c5b0-8af1-47164af1558c.png)\n\n- Adminer\u306f\u3001PHP\u3067\u4f5c\u3089\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u7ba1\u7406\u30c4\u30fc\u30eb\u3067\u3059\u3002(Apache License or GPL 2)\n- phpMyAdmin\u306e\u3088\u3046\u306bWeb\u4e0a\u3067MySQL\u306a\u3069\u203b\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u64cd\u4f5c\u3067\u304d\u308b (\u4e00\u901a\u308a\u306e\u3053\u3068\u306f\u3067\u304d\u308b)\nMySQL\u4ee5\u5916\u3067\u4f7f\u7528\u3057\u305f\u3053\u3068\u306f\u306a\u3044\u3067\u3059\u304c\u3001\u516c\u5f0f\u3067\u306f\u4e0b\u8a18\u306e\u5bfe\u5fdc\u3092\u8b33\u3063\u3066\u3044\u307e\u3059\u3002\n- MySQL, PostgreSQL, SQLite, MS SQL, Oracle, Firebird, SimpleDB, Elasticsearch, MongoDB\n1\u30d5\u30a1\u30a4\u30eb\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u8a2d\u7f6e\u304c\u7c21\u5358\n- [Adminer\u3092\u8a2d\u7f6e\u3059\u308b](http://qiita.com/nissuk/items/2b1aee7f81f351c7ab05)\n\n```docker-compose.yml\nadminer:\n  image: 'clue/adminer:latest'\n  restart: on-failure\n```\n\n## Plone 5.0\n![community-plone.png](https://qiita-image-store.s3.amazonaws.com/0/62822/d23f4ebc-515c-e115-fcaf-add1ea273239.png)\n\n- Plone \u306f WordPress \u3068\u9055\u3044\u300cPython\u300d\uff0b\u300c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u300d\uff0b\u300cDBMS\u300d\uff0b\u300cCMS \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u300d\u3092\u4e00\u5ea6\u306b\u3059\u3079\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u300cPHP\u300d\uff0b\u300cWeb \u30b5\u30fc\u30d0\u300d\uff0b\u300cMySQL\u300d\u3092\u5225\u9014\u7528\u610f\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 WordPress \u3088\u308a\u5c0e\u5165\u305d\u306e\u3082\u306e\u306f\u7c21\u5358\u306b\u3067\u304d\u308b\u3002\n- [Yet Another \u4ed5\u4e8b\u306e\u30c4\u30fc\u30eb](http://news.mynavi.jp/column/yetanother/066/)\n\n```docker-compose.yml\nzeoserver:\n  image: plone:5.0\n  labels:\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.community.plone=true\n    io.rancher.community.plone: \"true\"\n  volumes:\n  - ${volume_name}:/data\n  volume_driver: ${volume_driver}\n  command: [\"zeoserver\"]\n\nplone:\n  image: plone:5.0\n  labels:\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.community.plone=true\n    io.rancher.community.plone: \"true\"\n  links:\n  - zeoserver:zeoserver\n  environment:\n    ADDONS: ${addons}\n    ZEO_ADDRESS: zeoserver:8100\n\nlb:\n  image: rancher/load-balancer-service\n  labels:\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.community.plone=true\n    io.rancher.community.plone: \"true\"\n  links:\n  - plone:plone\n  ports:\n  - ${http_port}:8080\n\n```\n\n## PointHQ DNS\n![community-infra-pointhq.png](https://qiita-image-store.s3.amazonaws.com/0/62822/0f11f014-883c-dcc5-ddc2-add494b13e6c.png)\n\n- 1\u30a2\u30d7\u30ea\u6bce\u30671\u30c9\u30e1\u30a4\u30f3\u306b\u3064\u304d10\u30ec\u30b3\u30fc\u30c9\u307e\u3067\u7121\u6599\u3067\u767b\u9332\u3067\u304d\u308b\n- \u7ba1\u7406\u753b\u9762\u304b\u3089\u30c9\u30e1\u30a4\u30f3\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u6570\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n- [PointDNS\u3067Heroku\u30a2\u30d7\u30ea\u306bNaked domain\u3092\u5272\u308a\u5f53\u3066\u308b](http://shindolog.hatenablog.com/entry/2015/02/01/225521)\n\n```docker-compose.yml\npointhq:\n  image: rancher/external-dns:v0.2.1\n  command: --provider pointhq\n  expose: \n   - 1000\n  environment:\n    POINTHQ_TOKEN: ${POINTHQ_TOKEN}\n    POINTHQ_EMAIL: ${POINTHQ_EMAIL}\n    ROOT_DOMAIN: ${ROOT_DOMAIN}\n    TTL: ${TTL}\n  labels:\n    io.rancher.container.create_agent: \"true\"\n    io.rancher.container.agent.role: \"external-dns\"\n\n```\n\n## PowerDNS \n![community-infra-powerdns-external-dns.png](https://qiita-image-store.s3.amazonaws.com/0/62822/408a5caf-63ed-9b74-14fe-838127142d43.png)\n\n- PowerDNS\u3068\u306f\u3001\u30aa\u30e9\u30f3\u30c0\u306ePowerDNS.COM BV\u304c\u958b\u767a\u3092\u884c\u3063\u305f\u3001\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306eDNS\u30b5\u30fc\u30d0\u3067\u3059\u3002\n- [\u4e45\u3057\u3076\u308a\u306bPowerDNS\u3092\u3055\u308f\u308b](http://qiita.com/hondam/items/2f9a9ae0223d40af22f6)\n- [PowerDNS\u3067DNS\u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u308b\u3002](http://takuya-1st.hatenablog.jp/entry/2016/07/14/202554)\n\n```docker-compose.yml\npowerdns:\n  image: rancher/external-dns:v0.5.0\n  command: \"-provider=powerdns\"\n  expose:\n   - 1000\n  environment:\n    POWERDNS_API_KEY: ${POWERDNS_API_KEY}\n    POWERDNS_URL: ${POWERDNS_URL}\n    ROOT_DOMAIN: ${ROOT_DOMAIN}\n    TTL: ${TTL}\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.container.create_agent: \"true\"\n    io.rancher.container.agent.role: \"external-dns\"\n```\n\n## Prometheus\n![community-Prometheus.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/7d60d3d6-c92e-41c0-7a20-863a533a23f7.png)\n\n- \u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30b5\u30fc\u30d3\u30b9\u76e3\u8996\u30b7\u30b9\u30c6\u30e0\u3068\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n- [\u3010Docker\u3011\"\u307e\u305f\u6b7b\u3093\u3067\u308b\uff01\uff01\"\u30b3\u30f3\u30c6\u30ca\u306e\u6b7b\u6d3b\u7ba1\u7406\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fc](http://qiita.com/okamu_/items/34e64882954c6a67bcf4#prometheus)\n- [\u3010\u5165\u9580\u3011Prometheus\u3067\u30b5\u30fc\u30d0\u3084Docker\u30b3\u30f3\u30c6\u30ca\u306e\u30ea\u30bd\u30fc\u30b9\u76e3\u8996](http://pocketstudio.jp/log3/2015/02/11/what_is_prometheus_monitoring/)\n- [prometheus\u306eexporter\u306ecollectd-exporter\u3092docker\u3067\u3061\u3087\u308d\u3063\u3068\u52d5\u304b\u3057\u3066\u307f\u308b](http://qiita.com/letusfly85/items/db6eca043f2a0d89620e)\n\n```docker-compose.yml\ncadvisor:\n  labels:\n    io.rancher.scheduler.global: 'true'\n  tty: true\n  image: google/cadvisor:latest\n  stdin_open: true\n  volumes:\n    - \"/:/rootfs:ro\"\n    - \"/var/run:/var/run:rw\"\n    - \"/sys:/sys:ro\"\n    - \"/var/lib/docker/:/var/lib/docker:ro\"\n\nnode-exporter:\n  labels:\n    io.rancher.scheduler.global: 'true'\n  tty: true\n  image: prom/node-exporter:latest\n  stdin_open: true\n\nprom-conf:\n    tty: true\n    image: infinityworks/prom-conf:17\n    volumes:\n      - /etc/prom-conf/\n    net: none\n\nprometheus:\n    tty: true\n    image: prom/prometheus:v1.4.1\n    command: -alertmanager.url=http://alertmanager:9093 -config.file=/etc/prom-conf/prometheus.yml -storage.local.path=/prometheus -web.console.libraries=/etc/prometheus/console_libraries -web.console.templates=/etc/prometheus/consoles\n    ports:\n      - 9090:9090\n    labels:\n      io.rancher.sidekicks: prom-conf\n    volumes_from:\n       - prom-conf\n    links:\n      - cadvisor:cadvisor\n      - node-exporter:node-exporter\n      - prometheus-rancher-exporter:prometheus-rancher-exporter\n\ninfluxdb:\n  image: tutum/influxdb:0.10\n  ports:\n    - 2003:2003\n  environment:\n    - PRE_CREATE_DB=grafana;prometheus;rancher\n    - GRAPHITE_DB=rancher\n    - GRAPHITE_BINDING=:2003\n\ngraf-db:\n    tty: true\n    image: infinityworks/graf-db:10\n    command: cat\n    volumes:\n      - /var/lib/grafana/\n    net: none\n\ngrafana:\n    tty: true\n    image: grafana/grafana:4.0.2\n    ports:\n      - 3000:3000\n    labels:\n      io.rancher.sidekicks: graf-db\n    volumes_from:\n       - graf-db\n    links:\n      - prometheus:prometheus\n      - prometheus-rancher-exporter:prometheus-rancher-exporter\n\nprometheus-rancher-exporter:\n    tty: true\n    labels:\n      io.rancher.container.create_agent: true\n      io.rancher.container.agent.role: environment\n    image: infinityworks/prometheus-rancher-exporter:v0.22.40\n\n```\n\n## Puppet 4 .x (standalone)\n![community-puppet-standalone.png](https://qiita-image-store.s3.amazonaws.com/0/62822/734d6644-fc15-0b9d-3ee8-404fec56de92.png)\n\n\n- [\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306a\u30b7\u30b9\u30c6\u30e0\u81ea\u52d5\u7ba1\u7406\u30c4\u30fc\u30eb Puppet](http://gihyo.jp/admin/serial/01/puppet)\n- Puppet\u306fRuby\u3067\u3067\u304d\u305f\uff0cUNIX\u7cfbOS\u306e\u30b7\u30b9\u30c6\u30e0\u7ba1\u7406\u3092\u81ea\u52d5\u3067\u884c\u3046\u305f\u3081\u306e\u30c4\u30fc\u30eb\n- [Puppet\u5c0e\u5165\u524d\u306b\u77e5\u308a\u305f\u304b\u3063\u305f\u3053\u3068](http://qiita.com/kijibato/items/939019983c7734045960)\n\n```docker-compose.yml\npuppet-lb:\n  ports:\n  - ${PUPPET_PORT}:8140/tcp\n  labels:\n    io.rancher.loadbalancer.target.puppet: 8140=${PUPPET_PORT}\n  tty: true\n  image: rancher/load-balancer-service\n  links:\n  - puppet:puppet\n  stdin_open: true\n\npuppet:\n  hostname: puppet\n  domainname: puppet.rancher.internal\n  labels:\n    io.rancher.sidekicks: puppet-config-volumes\n  image: nrvale0/puppetserver-standalone\n  environment:\n    - CONTROL_REPO_GIT_URI=${CONTROL_REPO_GIT_URI}\n  volumes_from:\n    - puppet-config-volumes\n\npuppet-config-volumes:\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: \"true\"\n  volumes:\n   - /etc/puppetlabs/ssl\n   - /opt/puppetlabs/r10k/cache\n   - /etc/puppetlabs/code\n  entrypoint: /bin/true\n  image: alpine\n```\n\n## px-dev\n![687474703a2f2f692e696d6775722e636f6d2f6c384a526878672e6a7067.png](https://qiita-image-store.s3.amazonaws.com/0/62822/0875fdad-4d86-8fca-4b12-6b3901d381e5.png)\n\n- PX-Developer\uff08PX-Dev\uff09\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u30c7\u30fc\u30bf\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002 PX-Dev\u81ea\u4f53\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b9\u30bf\u30c3\u30af\u3068\u3068\u3082\u306b\u30b3\u30f3\u30c6\u30ca\u3068\u3057\u3066\u5c55\u958b\u3055\u308c\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b9\u30bf\u30c3\u30af\u3067PX-Dev\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u74b0\u5883\u3067\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u6c38\u7d9a\u6027\u3001\u5bb9\u91cf\u7ba1\u7406\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3001\u53ef\u7528\u6027\u3092\u30b3\u30f3\u30c6\u30ca\u5358\u4f4d\u3067\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002 Docker Engine\u3092\u642d\u8f09\u3057\u305f\u30b5\u30fc\u30d0\u30fc\u306bPX-Developer\u30b3\u30f3\u30c6\u30ca\u3092\u5c55\u958b\u3059\u308b\u3068\u3001\u305d\u306e\u30b5\u30fc\u30d0\u30fc\u306f\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3055\u308c\u305f\u30b9\u30c8\u30ec\u30fc\u30b8\u30ce\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002 \u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u3068\u7d71\u5408\u3055\u308c\u305f\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u7a3c\u50cd\u306f\u3001\u30d9\u30a2\u30e1\u30bf\u30eb\u99c6\u52d5\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u3082\u305f\u3089\u3057\u307e\u3059\u3002\n- https://github.com/portworx/px-dev\n\n```docker-compose.yml\nportworx:\n  labels:\n    io.rancher.container.create_agent: 'true'\n    io.rancher.scheduler.global: 'true'\n    io.rancher.container.pull_image: 'always'\n  image: portworx/px-dev\n  container_name: px\n  ipc: host\n  net: host\n  privileged: true\n  environment:\n    CLUSTER_ID: ${cluster_id}\n    KVDB: ${kvdb}\n  volumes:\n     - /dev:/dev\n     - /usr/src:/usr/src\n     - /run/docker/plugins:/run/docker/plugins\n     - /var/lib/osd:/var/lib/osd:shared\n     - /etc/pwx:/etc/pwx\n     - /opt/pwx/bin:/export_bin:shared\n     - /var/run/docker.sock:/var/run/docker.sock\n     - /var/cores:/var/cores\n  command: -c ${cluster_id} -k ${kvdb} -a -z -f\n```\n\n## QuasarDB \n![community-quasardb-community.png](https://qiita-image-store.s3.amazonaws.com/0/62822/38827883-9eb7-f8e1-ca6b-8d144f936b1e.png)\n\n\n- quasardb\u306f\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u89e3\u6790\u7528\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u5b9a\u7fa9\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30c6\u30af\u30ce\u30ed\u30b8\u3067\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u9593\u306e\u30ea\u30f3\u30af\u304c\u6b20\u843d\u3057\u3066\u3044\u307e\u3059\u3002\n- quasardb\u30c7\u30fc\u30bf\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u30d1\u30bf\u30fc\u30f3\u3092\u5f37\u5236\u3057\u307e\u305b\u3093\u3002 \u30c7\u30fc\u30bf\u306f\u3001Microsoft Excel\u3001ActivePivot\u3001Apache Spark\u306a\u3069\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3084\u30de\u30eb\u30c1\u8a00\u8a9eAPI\u3092\u4f7f\u7528\u3057\u3066\u76f4\u63a5\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n- https://www.quasardb.net/-what-is-nosql-\n\n```docker-compose.yml\nqdb-ui:\n  ports:\n  - ${webport}:${webport}/tcp\n  environment:\n    DEVICE: ${device}\n    PEER: qdb1\n    PORT: '${qdbport}'\n    WEBPORT: '${webport}'\n  labels:\n    io.rancher.container.dns: 'true'\n  command:\n  - /start.sh\n  - httpd\n  image: makazi/quasardb:2.0.0-rc.8\n  net: host\n\nqdb1-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  command:\n  - /bin/true\n  image: busybox\n  volumes:\n  - /var/db/qdb\n  - /var/lib/qdb\n\nqdb2-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  command:\n  - /bin/true\n  image: busybox\n  volumes:\n  - /var/db/qdb\n  - /var/lib/qdb\n\nqdb2:\n  ports:\n  - ${qdbport}:${qdbport}/tcp\n  environment:\n    ID: 2/2\n    DEVICE: ${device}\n    PEER: qdb1\n    PORT: '${qdbport}'\n    REPLICATION: ${replication}\n  labels:\n    io.rancher.sidekicks: qdb2-data\n    io.rancher.container.dns: 'true'\n  command:\n  - /start.sh\n  image: makazi/quasardb:2.0.0-rc.8\n  volumes_from:\n  - qdb2-data\n  net: host\nqdb1:\n  ports:\n  - ${qdbport}:${qdbport}/tcp\n  environment:\n    ID: 1/2\n    DEVICE: ${device}\n    PORT: '${qdbport}'\n    REPLICATION: ${replication}\n  labels:\n    io.rancher.sidekicks: qdb1-data\n    io.rancher.container.dns: 'true'\n  command:\n  - /start.sh\n  image: makazi/quasardb:2.0.0-rc.8\n  volumes_from:\n  - qdb1-data\n  net: host\n```\n\n## RabbitMQ \n![community-rabbitmq-3.png](https://qiita-image-store.s3.amazonaws.com/0/62822/bed7bc6c-cf46-3499-8283-db58dce92a8c.png)\n\n- RabbitMQ\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0\u306e\u305f\u3081\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3067\u3059\u3002\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n- [\u65b0\u4eba\u30d7\u30ed\u30b0\u30e9\u30de\u306b\u77e5\u3063\u3066\u3082\u3089\u3044\u305f\u3044RabbitMQ\u521d\u5fc3\u8005\u306e\u5165\u9580\u306e\u5165\u9580](http://qiita.com/gambaray/items/3cc02b419c860a96bc94)\n- [13\u65e5\u76ee: RabbitMQ\u306e\u500b\u4eba\u7684\u306b\u96e3\u3057\u304b\u3063\u305f\u7528\u8a9e\u306e\u8aac\u660e](http://kimikimi714.hatenablog.com/entry/2014/12/13/221621)\n- [\u306f\u3058\u3081\u3066\u306e RabbitMQ](http://ameblo.jp/principia-ca/entry-11233853011.html)\n\n```docker-compose.yml\nrabbitmq:\n  image: rdaneel/rabbitmq-conf:0.2.0\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.sidekicks: rabbitmq-base,rabbitmq-datavolume\n  volumes_from:\n    - rabbitmq-datavolume\n  environment:\n    - RABBITMQ_NET_TICKTIME=${net_ticktime}\n    - RABBITMQ_CLUSTER_PARTITION_HANDLING=${cluster_partition_handling}\n    - CONFD_ARGS=${confd_args}\nrabbitmq-datavolume:\n  labels:\n    io.rancher.container.hostname_override: container_name\n    io.rancher.container.start_once: true\n  volumes:\n    - /etc/rabbitmq\n    - /opt/rancher/bin\n  entrypoint: /bin/true\n  image: rabbitmq:3.6-management\nrabbitmq-base:\n  labels:\n    io.rancher.container.hostname_override: container_name\n  image: rabbitmq:3.6-management\n  restart: always\n  volumes_from:\n    - rabbitmq-datavolume\n  net: \"container:rabbitmq\"\n  entrypoint:\n    - /opt/rancher/bin/run.sh\n  environment:\n    - RABBITMQ_ERLANG_COOKIE=${erlang_cookie}\n\n\nLaunch\n```\n\n## rancher-security-bench\n![community-rancher-bench-security.png](https://qiita-image-store.s3.amazonaws.com/0/62822/46fa6317-87eb-753d-8fe1-8f0295478c37.png)\n\n- \u5404\u30b3\u30f3\u30c6\u30ca\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u72b6\u6cc1\u304c\u898b\u308c\u307e\u3059\n- [\u30b3\u30f3\u30c6\u30ca\u30fc\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3](http://qiita.com/okamu_/items/34e64882954c6a67bcf4#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E3%83%BC)\n\n```docker-compose.yml\nrancher-bench-security:\n  image: germanramos/rancher-bench-security:1.11.0\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.global: 'true'\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n  net: host\n  pid: host\n  stdin_open: true\n  tty: true\n  volumes:\n    - /var/lib:/var/lib\n    - /var/run/docker.sock:/var/run/docker.sock\n    - /usr/lib/systemd:/usr/lib/systemd\n    - /etc:/etc\n    - /tmp:/tmp\n  environment:\n    - INTERVAL=${INTERVAL}\n\nweb-server:\n  image: germanramos/nginx-php-fpm:v5.6.21\n  stdin_open: true\n  tty: true\n  labels:\n    traefik.enable: stack\n    traefik.domain: ${TRAEFIK_DOMAIN}\n    traefik.port: 80\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.global: 'true'\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.hostname_override: container_name\n  volumes:\n    - /tmp/cis:/var/www/html\n\n```\n\n## Registry\n![community-registry.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/88854d72-ab7b-d43d-e2dc-1f2770555c84.png)\n\n- private docker hub\u3067\u3059\n- LDAP\u3068\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u9023\u643a\u3067\u304d\u308b\n\n```docker-compose.yml\ndb:\n  image: mysql:5.7.10\n  environment:\n    MYSQL_DATABASE: portus\n    MYSQL_ROOT_PASSWORD: ${ROOTPASSWORD}\n    MYSQL_USER: portus\n    MYSQL_PASSWORD: ${DBPASSWORD}\n  tty: true\n  stdin_open: true\n  volumes:\n  - ${DIR}/db:/var/lib/mysql\n  labels:\n    registry.portus.db: 1\nsslproxy:\n  image: nginx:1.9.9\n  tty: true\n  stdin_open: true\n  links:\n  - portus:portus\n  volumes:\n  - ${DIR}/certs:/etc/nginx/certs:ro\n  - ${DIR}/proxy:/etc/nginx/conf.d:ro\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft: registry.portus.db=1\nregistry:\n  image: registry:2.3.1\n  environment:\n    REGISTRY_LOG_LEVEL: warn\n    REGISTRY_STORAGE_DELETE_ENABLED: true\n    REGISTRY_AUTH: token\n    REGISTRY_AUTH_TOKEN_REALM: https://${DOMAIN}:${PPORT}/v2/token\n    REGISTRY_AUTH_TOKEN_SERVICE: ${DOMAIN}:${RPORT}\n    REGISTRY_AUTH_TOKEN_ISSUER: ${DOMAIN}\n    REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /certs/registry.crt\n    REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry.crt\n    REGISTRY_HTTP_TLS_KEY: /certs/registry.key\n    REGISTRY_HTTP_SECRET: httpsecret\n    REGISTRY_NOTIFICATIONS_ENDPOINTS: >\n      - name: portus\n        url: http://portus:3000/v2/webhooks/events\n        timeout: 500\n        threshold: 5\n        backoff: 1\n  tty: true\n  stdin_open: true\n  links:\n  - portus:portus\n  volumes:\n  - ${DIR}/certs:/certs\n  - ${DIR}/data:/var/lib/registry\nlb:\n  image: rancher/load-balancer-service\n  tty: true\n  stdin_open: true\n  ports:\n  - ${RPORT}:5000/tcp\n  - ${PPORT}:443/tcp\n  labels:\n    io.rancher.loadbalancer.target.sslproxy: ${PPORT}=443\n    io.rancher.loadbalancer.target.registry: ${RPORT}=5000\n    io.rancher.scheduler.global: 'true'\n    io.rancher.scheduler.affinity:not_host_label: lb=0\n    io.rancher.scheduler.affinity:not_host_label: registry.enabled=false\n  links:\n  - registry:registry\n  - sslproxy:sslproxy\nportus:\n  image: sshipway/portus:2.0.5\n  environment: \n    PORTUS_MACHINE_FQDN: ${DOMAIN}\n    PORTUS_PRODUCTION_HOST: db\n    PORTUS_PRODUCTION_DATABASE: portus\n    PORTUS_PRODUCTION_USERNAME: portus\n    PORTUS_PRODUCTION_PASSWORD: ${DBPASSWORD}\n    PORTUS_GRAVATAR_ENABLED: true\n    PORTUS_KEY_PATH: /certs/registry.key\n    PORTUS_PASSWORD: ${DBPASSWORD}\n    PORTUS_SECRET_KEY_BASE: ${ROOTPASSWORD}\n    PORTUS_CHECK_SSL_USAGE_ENABLED: true\n    PORTUS_SMTP_ENABLED: false\n    PORTUS_LDAP_ENABLED: ${LDAP}\n    PORTUS_LDAP_HOSTNAME: ${LDAPHOST}\n    PORTUS_LDAP_PORT: ${LDAPPORT}\n    PORTUS_LDAP_METHOD: ${LDAPTLS}\n    PORTUS_LDAP_BASE: ${LDAPBASE}\n    PORTUS_LDAP_UID: ${LDAPBINDUID} \n    PORTUS_LDAP_AUTHENTICATION_ENABLED: ${LDAPBIND}\n    PORTUS_LDAP_AUTHENTICATION_BIND_DN: ${LDAPBINDDN}\n    PORTUS_LDAP_AUTHENTICATION_PASSWORD: ${LDAPBINDPASS}\n    PORTUS_LDAP_GUESS_EMAIL_ENABLED: true\n    PORTUS_LDAP_GUESS_EMAIL_ATTR: mail\n    PORTUS_PORT: ${PPORT}\n    REGISTRY_SSL_ENABLED: true\n    REGISTRY_HOSTNAME: ${DOMAIN}\n    REGISTRY_PORT: ${RPORT}\n    REGISTRY_NAME: Registry\n  tty: true\n  stdin_open: true\n  volumes:\n  - ${DIR}/certs:/certs\n  - ${DIR}/proxy:/etc/nginx/conf.d\n  links:\n  - db:db\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.affinity:container_label_soft: registry.portus.db=1\n    registry.portus.app: 1\n```\n\n## Registry Convoy\n![community-registry.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/7bf354cb-2130-0291-d6b7-60fedd4e617e.png)\n\n- Registry\u3092convoy\u306evolume\u3092\u5229\u7528\u3057\u3066\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\n\n```docker-compose.yml\ndb:\n  image: mysql:5.7.10\n  environment:\n    MYSQL_DATABASE: portus\n    MYSQL_ROOT_PASSWORD: ${ROOTPASSWORD}\n    MYSQL_USER: portus\n    MYSQL_PASSWORD: ${DBPASSWORD}\n  tty: true\n  stdin_open: true\n  volume_driver: ${DRIVER}\n  volumes:\n  - ${PFX}-db:/var/lib/mysql\n  labels:\n    registry.portus.db: 1\nsslproxy:\n  image: nginx:1.9.9\n  tty: true\n  stdin_open: true\n  links:\n  - portus:portus\n  volume_driver: ${DRIVER}\n  volumes:\n  - ${PFX}-certs:/etc/nginx/certs:ro\n  - ${PFX}-proxy:/etc/nginx/conf.d:ro\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft: registry.portus.db=1\nregistry:\n  image: registry:2.3.1\n  environment:\n    REGISTRY_LOG_LEVEL: warn\n    REGISTRY_STORAGE_DELETE_ENABLED: true\n    REGISTRY_AUTH: token\n    REGISTRY_AUTH_TOKEN_REALM: https://${DOMAIN}:${PPORT}/v2/token\n    REGISTRY_AUTH_TOKEN_SERVICE: ${DOMAIN}:${RPORT}\n    REGISTRY_AUTH_TOKEN_ISSUER: ${DOMAIN}\n    REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /certs/registry.crt\n    REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry.crt\n    REGISTRY_HTTP_TLS_KEY: /certs/registry.key\n    REGISTRY_HTTP_SECRET: httpsecret\n    REGISTRY_NOTIFICATIONS_ENDPOINTS: >\n      - name: portus\n        url: http://portus:3000/v2/webhooks/events\n        timeout: 500\n        threshold: 5\n        backoff: 1\n  tty: true\n  stdin_open: true\n  links:\n  - portus:portus\n  volume_driver: ${DRIVER}\n  volumes:\n  - ${PFX}-certs:/certs\n  - ${PFX}-data:/var/lib/registry\nlb:\n  image: rancher/load-balancer-service\n  tty: true\n  stdin_open: true\n  ports:\n  - ${RPORT}:5000/tcp\n  - ${PPORT}:443/tcp\n  labels:\n    io.rancher.loadbalancer.target.sslproxy: ${PPORT}=443\n    io.rancher.loadbalancer.target.registry: ${RPORT}=5000\n    io.rancher.scheduler.global: 'true'\n    io.rancher.scheduler.affinity:not_host_label: lb=0\n    io.rancher.scheduler.affinity:not_host_label: registry.enabled=false\n  links:\n  - registry:registry\n  - sslproxy:sslproxy\nportus:\n  image: sshipway/portus:2.0.5\n  environment: \n    PORTUS_MACHINE_FQDN: ${DOMAIN}\n    PORTUS_PRODUCTION_HOST: db\n    PORTUS_PRODUCTION_DATABASE: portus\n    PORTUS_PRODUCTION_USERNAME: portus\n    PORTUS_PRODUCTION_PASSWORD: ${DBPASSWORD}\n    PORTUS_GRAVATAR_ENABLED: true\n    PORTUS_KEY_PATH: /certs/registry.key\n    PORTUS_PASSWORD: ${DBPASSWORD}\n    PORTUS_SECRET_KEY_BASE: ${ROOTPASSWORD}\n    PORTUS_CHECK_SSL_USAGE_ENABLED: true\n    PORTUS_SMTP_ENABLED: false\n    PORTUS_LDAP_ENABLED: ${LDAP}\n    PORTUS_LDAP_HOSTNAME: ${LDAPHOST}\n    PORTUS_LDAP_PORT: ${LDAPPORT}\n    PORTUS_LDAP_METHOD: ${LDAPTLS}\n    PORTUS_LDAP_BASE: ${LDAPBASE}\n    PORTUS_LDAP_UID: cn\n    PORTUS_LDAP_AUTHENTICATION_ENABLED: ${LDAPBIND}\n    PORTUS_LDAP_AUTHENTICATION_BIND_DN: ${LDAPBINDDN}\n    PORTUS_LDAP_AUTHENTICATION_PASSWORD: ${LDAPBINDPASS}\n    PORTUS_LDAP_GUESS_EMAIL_ENABLED: true\n    PORTUS_LDAP_GUESS_EMAIL_ATTR: mail\n    PORTUS_PORT: ${PPORT}\n    REGISTRY_SSL_ENABLED: true\n    REGISTRY_HOSTNAME: ${DOMAIN}\n    REGISTRY_PORT: ${RPORT}\n    REGISTRY_NAME: Registry\n  tty: true\n  stdin_open: true\n  volume_driver: ${DRIVER}\n  volumes:\n  - ${PFX}-certs:/certs\n  - ${PFX}-proxy:/etc/nginx/conf.d\n  links:\n  - db:db\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.affinity:container_label_soft: registry.portus.db=1\n    registry.portus.app: 1\n\n```\n\n## REX-Ray\n![community-rexray.jpeg](https://qiita-image-store.s3.amazonaws.com/0/62822/8a40039e-b422-59ba-0823-6abc995e250a.jpeg)\n\n- REX-Ray\u306f\u3001\u30d9\u30f3\u30c0\u30fc\u306b\u4f9d\u5b58\u3057\u306a\u3044\u30b9\u30c8\u30ec\u30fc\u30b8\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30a8\u30f3\u30b8\u30f3\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u4e3b\u306a\u8a2d\u8a08\u76ee\u6a19\u306f\u3001Docker\u30b3\u30f3\u30c6\u30ca\u304a\u3088\u3073Mesos\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u30bf\u30b9\u30af\u306b\u6c38\u7d9a\u7684\u306a\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n- \u307e\u305f\u3001Go\u30d1\u30c3\u30b1\u30fc\u30b8\u3001CLI\u30c4\u30fc\u30eb\u3001\u304a\u3088\u3073Linux\u30b5\u30fc\u30d3\u30b9\u3068\u3057\u3066\u8ffd\u52a0\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3067\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```docker-compose.yml\nrexray:\n    image: wlan0/sdc2\n    stdin_open: true\n    tty: true\n    privileged: true\n    net: host\n    environment:\n        STACK_NAME: ${SCALEIO_STACK_NAME}\n        SYSTEM_ID: ${SCALEIO_SYSTEM_ID}\n        MDM_IP:    ${SCALEIO_MDM_IP}\n    volumes:\n        - /proc:/host/proc\n    labels:\n        io.rancher.container.pull_image: always\n        io.rancher.container.dns: true\n        io.rancher.scheduler.affinity:host_label: rexray.scaleio=true\n\n```\n\n## RocketChat\n![community-rocket-chat.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/2bbb7ded-2f46-9e50-b914-333980b3015a.png)\n\n- meteor\u88fd\u306e\u30c1\u30e3\u30c3\u30c8\u30a2\u30d7\u30ea\u3067\u3059\u3002\n- BYOS\u306a\u306e\u3067\u3001\u81ea\u5206\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001\u8d77\u52d5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n- \u307e\u308b\u3067Slack\u306e\u3088\u3046\u306a\u3001\u3068\u3044\u3046\u304b\u307b\u3068\u3093\u3069Slack\u306aUI\u3067\u3059\u3002\n- [Slack\u306e\u3088\u3046\u306aBYOS\u3067OSS\u306a\u30c1\u30e3\u30c3\u30c8 Rocket.Chat \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b](http://qiita.com/yasuhiroki/items/0e06ccda1c53f616d74d)\n\n## Route53 DNS\n![library-route53.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/b4b30512-8553-be96-0955-5bbc200e82da.png)\n\n- aws \u306bRoute53\u3068\u3044\u3044\u611f\u3058\u306b\u9023\u643a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n- [AWS Route53\u30c9\u30e1\u30a4\u30f3\u53d6\u5f97\u304b\u3089Certificate Manager\u3067\u306e\u8a3c\u660e\u66f8\u4f5c\u6210\u307e\u3067](http://qiita.com/sk565/items/2da1fc0c5fc676f54994)\n\n```docker-compose.yml\nmongo:\n  image: mongo\n# volumes:\n#    - ./data/runtime/db:/data/db\n#    - ./data/dump:/dump\n  command: mongod --smallfiles --oplogSize 128\n\nrocketchat:\n  image: rocketchat/rocket.chat:latest\n# volumes:\n#    - ./uploads:/app/uploads\n  environment:\n    - PORT=3000\n    - ROOT_URL=http://yourhost:3000\n    - MONGO_URL=mongodb://mongo:27017/rocketchat\n  links:\n    - mongo:mongo\n  ports:\n    - 3000:3000\n\n# hubot, the popular chatbot (add the bot user first and change the password before starting this image)\nhubot:\n  image: rocketchat/hubot-rocketchat\n  environment:\n    - ROCKETCHAT_URL=rocketchat:3000\n    - ROCKETCHAT_ROOM=GENERAL\n    - ROCKETCHAT_USER=bot\n    - ROCKETCHAT_PASSWORD=botpassword\n    - BOT_NAME=bot\n# you can add more scripts as you'd like here, they need to be installable by npm\n    - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics\n  links:\n    - rocketchat:rocketchat\n# this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier\n  ports:\n    - 3001:8080\n\n```\n\n## ScaleIO NAS/DAS\n![community-scaleio.jpeg](https://qiita-image-store.s3.amazonaws.com/0/62822/56a8ff93-d77a-874e-50a2-a77cc8a49d59.jpeg)\n\n\n- \u5206\u6563\u30b9\u30c8\u30ec\u30fc\u30b8\u30b7\u30b9\u30c6\u30e0\u30fbSDS(Software Defined Storage)\n- \u5206\u6563\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u3057\u3066Sheepdog, DRBD, VSAN, ScaleIO\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\u6700\u8fd1\u3067\u306fSDS(Software Defined Storage)\u3068\u30ab\u30c6\u30b4\u30e9\u30a4\u30ba\u3055\u308c\u308b\u3053\u3068\u3082\u591a\u3044\u3067\u3059\u3002\n- [\u660e\u65e5\u304b\u3089\u8a66\u305b\u308b\uff01\u30bd\u30d5\u30c8\u30a6\u30a8\u30a2\u30d9\u30fc\u30b9\u30b9\u30c8\u30ec\u30fc\u30b8\u300cScaleIO\u300d\u306e\u3054\u7d39\u4ecb](http://www.slideshare.net/VirtualTech-JP/scaleio-openstack-20159)\n\n```docker-compose.yml\n\ntb:\n  privileged: true\n  volumes:\n   - /sys/fs/cgroup:/sys/fs/cgroup:ro\n  image: wlan0/tb\n  labels:\n      io.rancher.container.pull_image: always\n      io.rancher.container.hostname_override: container_name\n\nsds:\n  privileged: true\n  volumes:\n   - /sys/fs/cgroup:/sys/fs/cgroup:ro\n  image: wlan0/sds\n  labels:\n      io.rancher.container.hostname_override: container_name\n      io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n      io.rancher.container.pull_image: always\n\nmdm:\n  privileged: true\n  volumes:\n   - /sys/fs/cgroup:/sys/fs/cgroup:ro\n   - /dev/shm:/dev/shm\n  image: wlan0/mdm\n  labels:\n      io.rancher.container.hostname_override: container_name\n      io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/primary_mdm\n      io.rancher.container.pull_image: always\n\nprimary-mdm:\n  privileged: true\n  volumes:\n   - /sys/fs/cgroup:/sys/fs/cgroup:ro\n   - /dev/shm:/dev/shm\n  image: wlan0/mdm\n  command: /usr/sbin/init\n  entrypoint: /run_mdm_and_configure.sh\n  labels:\n      io.rancher.container.hostname_override: container_name\n      io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/mdm\n      io.rancher.container.pull_image: always\n\n```\n\n## Secrets Bridge\n![community-secrets-bridge-server.png](https://qiita-image-store.s3.amazonaws.com/0/62822/fe3a635b-8335-e934-04b5-b1cc8b2b5e9e.png)\n\n- Secrets Bridge\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u8d77\u52d5\u6642\u306eDocker\u30b3\u30f3\u30c6\u30ca\u304cVault\u5185\u306e\u79d8\u5bc6\u3068\u5b89\u5168\u306b\u63a5\u7d9a\u3055\u308c\u308b\u3088\u3046\u306b\u3001Rancher\u3068Vault\u3092\u7d71\u5408\u3059\u308b\u6a19\u6e96\u5316\u3055\u308c\u305f\u65b9\u6cd5\u3067\u3059\u3002\n- \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30d6\u30ea\u30c3\u30b8\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\n\n```docker-compose.yml\nsecrets-bridge:\n    image: rancher/secrets-bridge:v0.2.0\n    environment:\n        CATTLE_ACCESS_KEY: ${CATTLE_ACCESS_KEY}\n        CATTLE_SECRET_KEY: ${CATTLE_SECRET_KEY}\n        CATTLE_URL: ${CATTLE_URL}\n        VAULT_TOKEN: ${VAULT_TOKEN}\n        VAULT_CUBBYPATH: ${VAULT_CUBBYPATH}\n    command: \n        - server\n        - --vault-url\n        - ${VAULT_URL}\n        - --rancher-url\n        - $CATTLE_URL\n        - --rancher-secret\n        - ${CATTLE_SECRET_KEY}\n        - --rancher-access\n        - ${CATTLE_ACCESS_KEY}\nsecrets-bridge-lb:\n    ports:\n        - \"${LBPORT}:8181\"\n    image: rancher/load-balancer-service\n    links:\n        - secrets-bridge:secrets-bridge\n```\n\n## Secrets Bridge Agents\n![community-secrets-bridge-server.png](https://qiita-image-store.s3.amazonaws.com/0/62822/fe3a635b-8335-e934-04b5-b1cc8b2b5e9e.png)\n\n- Secrets Bridge\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u8d77\u52d5\u6642\u306eDocker\u30b3\u30f3\u30c6\u30ca\u304cVault\u5185\u306e\u79d8\u5bc6\u3068\u5b89\u5168\u306b\u63a5\u7d9a\u3055\u308c\u308b\u3088\u3046\u306b\u3001Rancher\u3068Vault\u3092\u7d71\u5408\u3059\u308b\u6a19\u6e96\u5316\u3055\u308c\u305f\u65b9\u6cd5\u3067\u3059\u3002\n- \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30d6\u30ea\u30c3\u30b8\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\n\n```docker-compose.yml\nsecrets-bridge:\n    image: rancher/secrets-bridge:v0.2.0\n    command: agent --bridge-url ${BRIDGE_URL}\n    volumes:\n        - /var/run/docker.sock:/var/run/docker.sock\n    privileged: true\n    labels:\n        io.rancher.container.create_agent: true\n        io.rancher.container.agent.role: agent\n        io.rancher.scheduler.global: true\n```\n\n## Sematext Docker Agent\n![community-sematext.png](https://qiita-image-store.s3.amazonaws.com/0/62822/a64aa516-702d-f68d-436c-ef5cd571fe77.png)\n\n- https://github.com/sematext/sematext-agent-docker\n- Docker\u7528Sematext Agent\u306f\u3001SPM Docker Monitoring\uff06Logsene / Hosted ELK Log Management\u7528\u306eDocker API\u304b\u3089\u30e1\u30c8\u30ea\u30c3\u30af\u3001\u30a4\u30d9\u30f3\u30c8\u3001\u30ed\u30b0\u3092\u53ce\u96c6\u3057\u307e\u3059\u3002 CoreOS\u3001RancherOS\u3001Docker Swarm\u3001Kubernetes\u3001Apache Mesos\u3001Hashicorp Nomad\u3001Amzon ECS\u3001...\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n```docker-compose.yml\nsematext-agent:  \n  image: 'sematext/sematext-agent-docker:${image_version}'\n  environment:\n    - LOGSENE_TOKEN=${logsene_token}\n    - SPM_TOKEN=${spm_token}\n    - GEOIP_ENABLED=${geoip_enabled}\n    - HTTPS_PROXY=${https_proxy}\n    - HTTP_PROXY=${http_proxy}\n    - MATCH_BY_IMAGE=${match_by_image}\n    - MATCH_BY_NAME=${match_by_name}\n    - SKIP_BY_IMAGE=${match_by_image}\n    - SKIP_BY_NAME=${match_by_name}\n    - LOGAGENT_PATTERNS=${logagent_patterns}\n    - KUBERNETES=${kubernetes}\n  restart: always\n  volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n  labels:\n    io.rancher.scheduler.global: 'true'\n\nLaunch\n```\n\n## Sentry\n![community-sentry.png](https://qiita-image-store.s3.amazonaws.com/0/62822/6d96bb39-dc02-563d-626c-1fb1fc3ab154.png)\n\n- \u69d8\u3005\u306a\u8a00\u8a9e\u304b\u3089\u9001\u4fe1\u3055\u308c\u305f\u30a4\u30d9\u30f3\u30c8\u30ed\u30b0\u3092\u8868\u793a\u3057\u3066\u304f\u308c\u308b\u3084\u3064\n- [Sentry\u3067js\u306e\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u53ce\u96c6\u3057\u3066\u307f\u305f](http://qiita.com/yukika/items/0bbced3920b36cef9d27)\n- [\u30a4\u30d9\u30f3\u30c8\u30ed\u30b0\u53ce\u96c6\u30c4\u30fc\u30eb\u306e Sentry \u304c\u51c4\u305d\u3046](http://d.hatena.ne.jp/heavenshell/20130325/1364224078)\n\n```docker-compose.yml\nsentry-postgres:\n  environment:\n    POSTGRES_USER: sentry\n    POSTGRES_PASSWORD: secret\n    PGDATA: /data/postgres/data\n  log_driver: ''\n  labels:\n    io.rancher.container.pull_image: always\n  tty: true\n  log_opt: {}\n  image: postgres:9.5.3\n  stdin_open: true\nsentry-cron:\n  environment:\n    SENTRY_EMAIL_HOST: ${sentry_email_host}\n    SENTRY_EMAIL_PASSWORD: ${sentry_email_password}\n    SENTRY_EMAIL_PORT: '${sentry_email_port}'\n    SENTRY_EMAIL_USER: ${sentry_email_user}\n    SENTRY_SECRET_KEY: ${sentry_secret_key}\n    SENTRY_SERVER_EMAIL: ${sentry_server_email}\n  log_driver: ''\n  labels:\n    io.rancher.container.pull_image: always\n  tty: true\n  command:\n  - run\n  - cron\n  log_opt: {}\n  image: sentry:8.5.0\n  links:\n  - sentry-postgres:postgres\n  - sentry-redis:redis\n  stdin_open: true\nsentry-redis:\n  log_driver: ''\n  labels:\n    io.rancher.container.pull_image: always\n  tty: true\n  log_opt: {}\n  image: redis:3.2.0-alpine\n  stdin_open: true\nsentry:\n  ports:\n  - ${sentry_public_port}:9000/tcp\n  environment:\n    SENTRY_EMAIL_HOST: ${sentry_email_host}\n    SENTRY_EMAIL_PASSWORD: ${sentry_email_password}\n    SENTRY_EMAIL_PORT: '${sentry_email_port}'\n    SENTRY_EMAIL_USER: ${sentry_email_user}\n    SENTRY_SECRET_KEY: ${sentry_secret_key}\n    SENTRY_SERVER_EMAIL: ${sentry_server_email}\n  log_driver: ''\n  labels:\n    io.rancher.container.pull_image: always\n  tty: true\n  command:\n  - /bin/bash\n  - -c\n  - sentry upgrade --noinput && sentry createuser --email ${sentry_inital_user_email} --password ${sentry_inital_user_password} --superuser && /entrypoint.sh run web || /entrypoint.sh run web\n  log_opt: {}\n  image: sentry:8.5.0\n  links:\n  - sentry-postgres:postgres\n  - sentry-redis:redis\n  stdin_open: true\nsentry-worker:\n  environment:\n    SENTRY_EMAIL_HOST: ${sentry_email_host}\n    SENTRY_EMAIL_PASSWORD: ${sentry_email_password}\n    SENTRY_EMAIL_PORT: '${sentry_email_port}'\n    SENTRY_EMAIL_USER: ${sentry_email_user}\n    SENTRY_SECRET_KEY: ${sentry_secret_key}\n    SENTRY_SERVER_EMAIL: ${sentry_server_email}\n  log_driver: ''\n  labels:\n    io.rancher.scheduler.global: 'true'\n    io.rancher.container.pull_image: always\n  tty: true\n  command:\n  - run\n  - worker\n  log_opt: {}\n  image: sentry:8.5.0\n  links:\n  - sentry-postgres:postgres\n  - sentry-redis:redis\n  stdin_open: true\n```\n\n## SonarQube\n![community-sonarqube.png](https://qiita-image-store.s3.amazonaws.com/0/62822/d4826f76-94cb-aaa0-679c-3b1608ebe975.png)\n\n\n- \u30b9\u30a4\u30b9\u306eSonarSource\u793e\u304c\u4e3b\u306b\u958b\u767a\u3092\u884c\u3063\u3066\u3044\u308b\u7d71\u5408\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u54c1\u8cea\u7ba1\u7406\u3092\u884c\u3048\u308b\u7d71\u5408\u54c1\u8cea\u7ba1\u7406\u30c4\u30fc\u30eb\n- [SonarQube\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u54c1\u8cea\u7ba1\u7406\u3092\u306f\u3058\u3081\u308b\uff08\u6982\u8981\uff09](http://qiita.com/sh-ogawa/items/fac0eca110c3558dfae9)\n- [SonarQube\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u54c1\u8cea\u30c1\u30a7\u30c3\u30af](http://qiita.com/teradonburi/items/776e4735395af872320a)\n\n```docker-compose.yml\nsonarqube-data:\n    image: busybox\n    net: none\n    labels:\n      io.rancher.container.start_once: true\n    volumes:\n        - /opt/sonarqube/extensions/plugins\n\nsonarqube:\n    image: sonarqube\n    ports:\n        - ${http_port}:9000\n    links:\n        - postgres\n    environment:\n        http_proxy: ${http_proxy}\n        https_proxy: ${https_proxy}\n        SONARQUBE_JDBC_USERNAME: ${postgres_user}\n        SONARQUBE_JDBC_PASSWORD: ${postgres_password}\n        SONARQUBE_JDBC_URL: jdbc:postgresql://postgres/sonar\n    labels:\n        io.rancher.sidekicks: sonarqube-data\n    volumes_from:\n        - sonarqube-data        \n\npostgres-data:\n    image: busybox\n    net: none\n    labels:\n      io.rancher.container.start_once: true\n    volumes:\n        - ${postgres_data}\n\npostgres:\n    image: postgres:latest\n    ports:\n        - ${postgress_port}:5432\n    environment:\n        PGDATA: ${postgres_data}\n        POSTGRES_DB: ${postgres_db}\n        POSTGRES_USER: ${postgres_user}\n        POSTGRES_PASSWORD: ${postgres_password}\n    tty: true\n    stdin_open: true\n    labels:\n        io.rancher.sidekicks: postgres-data\n    volumes_from:\n        - postgres-data\n\n\n```\n\n## Sysdig\n![community-sysdig.png](https://qiita-image-store.s3.amazonaws.com/0/62822/ba8e2978-a7a7-390a-50ad-c6f4d361abad.png)\n\n- strace + tcpdump + lsof + htop + iftop + Lua = sysdig \u3063\u3066\u611f\u3058\u3067\u3059\u3002curses \u306b\u3088\u308b\u30b0\u30e9\u30d5\u30a3\u30ab\u30eb\u306aUI\u51fa\u529b\u306a\u3069\u3082\u53ef\u80fd\u3067\u3059\u3002\n- [Logging drivers\u3092\u8a66\u3057\u3066\u307f\u305f](http://dev.classmethod.jp/cloud/aws/docker-1-6-released/)\n\n```docker-compose.yml\nsysdig:\n  container_name: sysdig\n  privileged: true\n  stdin_open: true\n  tty: true\n  image: sysdig/sysdig:${VERSION}\n  volumes:\n    - /var/run/docker.sock:/host/var/run/docker.sock\n    - /dev:/host/dev\n    - /proc:/host/proc:ro\n    - /boot:/host/boot:ro\n    - /lib/modules:/host/lib/modules:ro\n    - /usr:/host/usr:ro\n  labels:\n     io.rancher.scheduler.global: true\n     io.rancher.scheduler.affinity:host_label_ne: ${HOST_EXCLUDE_LABEL}\n```\n\n## Sysdig Cloud\n![community-sysdig-cloud.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/281f02bd-0633-42f4-c866-13bbecac260a.png)\n\n- Sysdig \u306e\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u7248\n\n```docker-compose.yml\nsysdig-agent:\n  container_name: sysdig-agent\n  privileged: true\n  image: sysdig/agent:${VERSION}\n  net: \"host\"\n  pid: \"host\"\n  environment:\n    ACCESS_KEY: ${SDC_ACCESS_KEY}\n    TAGS: \"${SDC_TAGS}\"\n    ADDITIONAL_CONF: \"${SDC_ADDITIONAL_CONF}\"\n  log_opt:\n    max-size: ${LOG_SIZE}\n  volumes:\n    - /var/run/docker.sock:/host/var/run/docker.sock\n    - /dev:/host/dev\n    - /proc:/host/proc:ro\n    - /boot:/host/boot:ro\n    - /lib/modules:/host/lib/modules:ro\n    - /usr:/host/usr:ro\n  labels:\n     io.rancher.scheduler.global: true\n     io.rancher.scheduler.affinity:host_label_ne: ${HOST_EXCLUDE_LABEL}\n```\n\n## Taiga\n![community-taiga.png](https://qiita-image-store.s3.amazonaws.com/0/62822/78f59e9d-b007-8744-d615-664aaad5bdf8.png)\n\n- \u3084\u305f\u3089\u30c7\u30b6\u30a4\u30f3\u304c\u304d\u308c\u3044\u306a\u30a2\u30b8\u30e3\u30a4\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7ba1\u7406\u30c4\u30fc\u30eb\u3002Trello\u30af\u30ed\u30fc\u30f3\u3068\u3044\u3046\u611f\u3058\u306f\u306a\u304f\u3001Redmine\u62e1\u5f35\u306eAlminium\u306b\u4f3c\u3066\u3044\u308b\u3002\n- [TAIGA on Docker\u3067\u672c\u683c\u30a2\u30b8\u30e3\u30a4\u30eb\u958b\u767a\u7ba1\u7406](http://blog.namiking.net/post/2015/09/docker-taiga/)\n\n```docker-compose.yml\npostgres:\n  image: postgres\n  environment:\n    - POSTGRES_DB=taiga\n    - POSTGRES_USER=taiga\n    - POSTGRES_PASSWORD=password\n  volumes:\n    - ${DATABASE}:/var/lib/postgresql/data\n\nrabbit:\n  image: rabbitmq:3\n  hostname: rabbit\n\nredis:\n  image: redis:3\n\ncelery:\n  image: celery\n  links:\n    - rabbit\n\nevents:\n  image: kartoffeltoby/taiga-events:latest\n  links:\n    - rabbit\n\ntaiga:\n  image: kartoffeltoby/taiga:latest\n  restart: always\n  links:\n    - postgres\n    - events\n    - rabbit\n    - redis\n  environment:\n    - TAIGA_HOSTNAME=${DOMAIN}\n    - TAIGA_DB_HOST=postgres\n    - TAIGA_DB_NAME=taiga\n    - TAIGA_DB_USER=taiga\n    - TAIGA_DB_PASSWORD=password\n    - HTTPS_SELF_DOMAIN=${DOMAIN}\n    - TAIGA_SSL=True\n    - TAIGA_SLEEP=10\n  volumes:\n    - ${DATA}:/usr/src/taiga-back/media\n```\n\n\n## TeamCity\n![community-teamcity.png](https://qiita-image-store.s3.amazonaws.com/0/62822/95da3b4c-ea05-868f-67a2-f947244b8da6.png)\n\n- \u5206\u6563\u578b\u7d99\u7d9a\u7684\u7d71\u5408\u30b5\u30fc\u30d0\u30fc\n- TeamCity\u306f\u3001\u72ec\u5275\u7684\u306a\u7d99\u7d9a\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3001\u30b3\u30fc\u30c9\u54c1\u8cea\u5206\u6790\u3001\u30d3\u30eb\u30c9\u554f\u984c\u306e\u65e9\u671f\u5831\u544a\u30c4\u30fc\u30eb\u3067\u3059\u3002\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u975e\u5e38\u306b\u7c21\u5358\u3067\u307b\u3093\u306e\u6570\u5206\u3067\u7d42\u308f\u308a\u307e\u3059\u306e\u3067\u3042\u3063\u3068\u3044\u3046\u9593\u306b\u30b3\u30fc\u30c9\u3084\u30ea\u30ea\u30fc\u30b9\u7ba1\u7406\u306e\u54c1\u8cea\u5411\u4e0a\u3092\u4f53\u611f\u3067\u304d\u308b\u3053\u3068\u3067\u3057\u3087\u3046\u3002\nTeamCity\u306fJava\u3001.NET\u3001Ruby\u958b\u767a\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3001\u4e3b\u8981\u306aIDE\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3001\u30d0\u30b0\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3068\u5b8c\u5168\u306b\u9023\u643a\u3067\u304d\u307e\u3059\u3002\n- [node \u00d7 TeamCity \u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3 \u301cTeamCity\u4e0a\u3067node, npm \u3092\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u301c](http://qiita.com/AHA_oretama/items/acc535d3bdc313816a59)\n- [mocha \u00d7 TeamCity \u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3 \u301c\u30c6\u30b9\u30c8\u7d50\u679c\u3001\u30ab\u30d0\u30ec\u30c3\u30b8\u3092TeamCity \u306b\u8868\u793a\u3059\u308b\u301c](http://qiita.com/AHA_oretama/items/09d82f1a2c78c1bf4a7b)\n\n```docker-compose.yml\nteamcity-data:\n    image: busybox\n    tty: true\n    volumes:\n        - /var/lib/teamcity\n\nteamcity-server:\n    image: sjoerdmulder/teamcity:latest\n    ports:\n        - ${http_port}:8111\n    links:\n        - postgres:${postgress_container}\n    environment:\n        http_proxy: ${http_proxy}\n        https_proxy: ${https_proxy}\n    labels:\n        io.rancher.sidekicks: teamcity-data\n    volumes_from:\n        - teamcity-data        \n\npostgres-data:\n    image: busybox\n    tty: true\n    volumes:\n        - ${postgres_data}\n\npostgres:\n    image: postgres:latest\n    ports:\n        - ${postgress_port}:5432\n    environment:\n        PGDATA: ${postgres_data}\n        POSTGRES_DB: ${postgres_db}\n        POSTGRES_USER: ${postgres_user}\n        POSTGRES_PASSWORD: ${postgres_password}\n    tty: true\n    stdin_open: true\n    labels:\n        io.rancher.sidekicks: postgres-data\n    volumes_from:\n        - postgres-data\n\nteamcity-agent:\n    image: sjoerdmulder/teamcity-agent:latest\n    links:\n        - teamcity-server:teamcity-server\n    environment:\n        TEAMCITY_SERVER: http://teamcity-server:8111\n\n```\n\n## Traefik\n![community-traefik.png](https://qiita-image-store.s3.amazonaws.com/0/62822/3de8b1a3-3b1c-e020-a3d8-4f761b50996f.png)\n\n- Traefik\u3068\u306f\u69d8\u3005\u306a\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\uff08docker\u3001swarm\u3001kubernetes\u3001mesos\u3001consul\u3001zookeeper\u306a\u3069\uff09\u306e\u72b6\u614b\u3092\u5143\u306b\u8a2d\u5b9a\u3092\u52d5\u7684\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u517c\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3067\u3059\u3002Go\u3067\u66f8\u304b\u308c\u3066\u304a\u308a\u3001\u4ed6\u306eGo\u88fd\u30c4\u30fc\u30eb\u3068\u540c\u3058\u304f\u3001\u30d0\u30a4\u30ca\u30ea\u3092\u3072\u3068\u3064\u7f6e\u304f\u3060\u3051\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u7dba\u9e97\u306aGUI\u3082\u5099\u3048\u3066\u3044\u307e\u3059\u3002\n- [CoreOS\u74b0\u5883\u3067traefik\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3092\u884c\u3046\u65b9\u6cd5](http://qiita.com/kanga/items/8fe2face1f8611e340ae)\n- [Traefik \u3068 consul \u3092\u4f7f\u3063\u3066 web \u30b5\u30fc\u30d3\u30b9\u3092\u304a\u6c17\u8efd\u306b\u3076\u3089\u4e0b\u3052\u308b](http://qiita.com/woremacx/items/b6215cd6cf919fdb3824)\n\n``` docker-compose.yml\ntraefik:\n  ports:\n  - ${admin_port}:8000/tcp\n  - ${http_port}:${http_port}/tcp\n  - ${https_port}:${https_port}/tcp\n  log_driver: ''\n  labels:\n    io.rancher.scheduler.global: 'true'\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.sidekicks: traefik-conf\n    io.rancher.container.hostname_override: container_name\n  tty: true\n  log_opt: {}\n  image: rawmind/alpine-traefik:1.1.2-1\n  environment:\n  - CONF_INTERVAL=${refresh_interval}\n  - TRAEFIK_HTTP_PORT=${http_port}\n  - TRAEFIK_HTTPS_PORT=${https_port}\n  - TRAEFIK_HTTPS_ENABLE=${https_enable}\n  - TRAEFIK_ACME_ENABLE=${acme_enable}\n  - TRAEFIK_ACME_EMAIL=${acme_email}\n  - TRAEFIK_ACME_ONDEMAND=${acme_ondemand}\n  - TRAEFIK_ACME_ONHOSTRULE=${acme_onhostrule}\n  volumes_from:\n  - traefik-conf\ntraefik-conf:\n  log_driver: ''\n  labels:\n    io.rancher.scheduler.global: 'true'\n    io.rancher.scheduler.affinity:host_label: ${host_label}\n    io.rancher.scheduler.affinity:container_label_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}\n    io.rancher.container.start_once: 'true'\n  tty: true\n  log_opt: {}\n  image: rawmind/rancher-traefik:0.3.4-18\n  net: none\n  volumes:\n    - /opt/tools\n\n\n```\n\n## Turtl\n![community-turtl.png](https://qiita-image-store.s3.amazonaws.com/0/62822/adde1261-43f1-6fa7-9111-c1179d02042b.png)\n\n\n- \u30ce\u30fc\u30c8\u3001\u7814\u7a76\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001\u30d6\u30c3\u30af\u30de\u30fc\u30af\u3001\u5922\u306e\u30ed\u30b0\u3001\u5199\u771f\u3001\u66f8\u985e\u305d\u306e\u4ed6\u306e\u5b89\u5168\u3092\u5b88\u308b\u305f\u3081\u306e\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u5834\u6240\u3067\u3059\u3002 Turtl\u306e\u7c21\u5358\u306a\u30bf\u30b0\u4ed8\u3051\u3068\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306f\u3001\u500b\u4eba\u7684\u306a\u30d7\u30ed\u30d5\u30a7\u30c3\u30b7\u30e7\u30ca\u30eb\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u305f\u3081\u306b\u7d44\u7e54\u5316\u3084\u7814\u7a76\u306b\u7406\u60f3\u7684\u3067\u3059\u3002\n- \u6700\u9ad8\u306e\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u306eTurtl\u3092Evernote\u3060\u3068\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n- https://turtlapp.com/\n\n```docker-compose.yml\nturtl-api-data:\n  labels:\n    io.rancher.container.start_once: 'true'\n  entrypoint:\n  - /bin/true\n  image: busybox\n  volumes:\n    - /opt/api/uploads\n    - /var/lib/rethinkdb/instance1\n\nturtl-api:\n  ports:\n    - 8181:8181/tcp\n  environment:\n    DISPLAY_ERRORS: ${DISPLAY_ERRORS}\n    FQDN: ${FQDN}\n    SITE_URL: ${SITE_URL}\n    LOCAL_UPLOAD_URL: ${LOCAL_UPLOAD_URL}\n    LOCAL_UPLOAD_PATH: ${LOCAL_UPLOAD_PATH}\n    AWS_S3_TOKEN: ${AWS_S3_TOKEN}\n    ADMIN_EMAIL: ${ADMIN_EMAIL}\n    EMAIL_FROM: ${EMAIL_FROM}\n    SMTP_USER: ${SMTP_USER}\n    SMTP_PASS: ${SMTP_PASS}\n    DEFAULT_STORAGE_LIMIT: ${DEFAULT_STORAGE_LIMIT}\n    STORAGE_INVITE_CREDIT: ${STORAGE_INVITE_CREDIT}\n  image: webofmars/turtl-docker:latest\n  stdin_open: true\n  tty: true\n  labels:\n    io.rancher.sidekicks: turtl-api-data\n  volumes_from:\n    - turtl-api-data\n\n```\n\n## Weave Scope\n![community-weavescope.png](https://qiita-image-store.s3.amazonaws.com/0/62822/77029398-b66a-b4f9-d08b-64f27b1f545b.png)\n\n- Weave Scope \u306f\u30d6\u30e9\u30a6\u30b6\u3092\u901a\u3057\u3066\u3001\u30db\u30b9\u30c8\u4e0a\u3067\u3069\u306e\u3088\u3046\u306a\u30b3\u30f3\u30c6\u30ca\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\uff08\u30d7\u30ed\u30bb\u30b9\uff09\u304c\u7a3c\u50cd\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u305d\u306e\u95a2\u9023\u6027\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u30de\u30c3\u30d4\u30f3\u30b0\uff08\u5730\u56f3\u5316\uff09\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3059\u3002\n- [Weave Scope\u3067\u30b3\u30f3\u30c6\u30ca\u69cb\u6210\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u8996\u899a\u5316](http://pocketstudio.jp/log3/2015/07/14/weave-scope-container-visualization/)\n\n```docker-compose.yml\nweavescope-probe:\n  image: weaveworks/scope:1.0.0\n  privileged: true\n  net: host\n  pid: host\n  labels:\n    io.rancher.scheduler.global: true\n    io.rancher.container.dns: true\n  links:\n  - weavescope-app\n  volumes:\n  - \"/var/run/docker.sock:/var/run/docker.sock\"\n  tty: true\n  command:\n  - \"--probe.docker\"\n  - \"true\"\n  - \"--no-app\"\n  - \"weavescope-app\"\nweavescope-app:\n  image: weaveworks/scope:1.0.0\n  ports:\n  - \"4040:4040\"\n  command:\n  - \"--no-probe\"\n\n```\n\n## Wekan\n![community-wekan.svg.png](https://qiita-image-store.s3.amazonaws.com/0/62822/f7c08c14-9c37-9c21-c353-d6ae18701608.png)\n\n- \u304b\u3093\u3070\u3093\u5f0f\u7ba1\u7406\u30c4\u30fc\u30ebWekan\u306fTrello\u30af\u30ed\u30fc\u30f3\u306e\u4e00\u3064\u3002\n- [Docker\u3067Wekan\u3092\u4f7f\u3046](http://qiita.com/takasan/items/250bf29922b337ce9576)\n\n```docker-compose.yml\nwekandb:\n  image: mongo\n#  volumes:\n#    - ./data/runtime/db:/data/db\n#    - ./data/dump:/dump\n  command: mongod --smallfiles --oplogSize 128\n  ports:\n    - 27017\n\nwekan:\n  image: mquandalle/wekan\n  links:\n    - wekandb\n  environment:\n    - MONGO_URL=mongodb://wekandb/wekan\n    - ROOT_URL=http://localhost:80\n  ports:\n    - 80:80\n```\n\n## Wordpress\n![community-wordpress.png](https://qiita-image-store.s3.amazonaws.com/0/62822/278f2057-1024-9764-1cf5-af2a0a102b0d.png)\n\n- \u5b9a\u756a\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30d6\u30ed\u30b0\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\n\n```docker-compose.yml\nwordpress:\n  image: wordpress\n  links:\n    - db:mysql\n  ports:\n    - ${public_port}:80\n\ndb:\n  image: mariadb\n  environment:\n    MYSQL_ROOT_PASSWORD: example\n\n```\n\n## XPilots\n![community-xpilot.1.png](https://qiita-image-store.s3.amazonaws.com/0/62822/12d8a18f-40f7-5c81-d0c8-5223145e82de.png)\n\n- \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u578b\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30b2\u30fc\u30e0\u300cXPilot\u300d\n\n```docker-compose.yml\nserver:\n  environment:\n    PASSWORD: ${PASSWORD}\n  log_driver: ''\n  command:\n  - -server\n  log_opt: {}\n  tty: false\n  stdin_open: false\n  image: sshipway/xpilot:latest\n  labels:\n    xpilot: server\nclient:\n  environment:\n    DISPLAY: ${DISPLAY}\n    NAME: ${NAME}\n    SERVER: xpilot\n  log_driver: ''\n  command:\n  - xpilot\n  log_opt: {}\n  image: sshipway/xpilot:latest\n  links:\n  - server:xpilot\n  tty: false\n  stdin_open: false\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft: xpilot=server\n    io.rancher.container.start_once: 'true'\n\n```\n\n## \u307e\u3068\u3081\n- \u3051\u3063\u3053\u3046\u9577\u3044\u8a18\u4e8b\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\n- \u4fee\u6b63\u70b9\u3084\u8ffd\u52a0\u3057\u3066\u307b\u3057\u3044\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u308c\u3070\u304a\u3057\u3089\u305b\u304f\u3060\u3055\u3044\u307e\u3057\u3002\n- \u6b21\u306fk8s\u3082\u5168\u3066\u6652\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3046\n\n", "tags": ["rancher", "docker", "docker-compose"]}