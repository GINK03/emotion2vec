{"context": "\u30b2\u30fc\u30e0\u30a8\u30f3\u30b8\u30f3\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u30fb\u30c4\u30fc\u30eb\u306e\u958b\u767a Advent Calendar 4 \u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u6700\u65b0\u306e C++ \u306e\u30d1\u30ef\u30fc\u3092\u624b\u306b\u5165\u308c\u3088\u3046\n\n\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u30ea\u30c6\u30e9\u30eb\n// \u56db\u89d2\u5f62\u3092 45\u00b0 \u56de\u8ee2\u3055\u305b\u3066\u63cf\u753b\nrect.rotated(45_deg).draw();\n\n\nRange-based for \u30eb\u30fc\u30d7\n// \u5199\u771f\u306b\u542b\u307e\u308c\u308b\u9854\u3092\u3059\u3079\u3066\u691c\u51fa\u3057\u3001\u767d\u304f\u5857\u308a\u3064\u3076\u3059\nfor (const auto& face : Imaging::DetectFaces(image))\n{\n    face.overwrite(image, Palette::White);\n}\n\n\n\u53ef\u5909\u5f15\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n// \u753b\u9762\u306b \"\u4eca\u65e5\u306f 12 \u6708 4 \u65e5\" \u3068\u8868\u793a\nPrintln(L\"\u4eca\u65e5\u306f {} \u6708 {} \u65e5\"_fmt, 12, 4);\n\n\n\u30e9\u30e0\u30c0\u5f0f\nArray<Circle> balls;\n\n// \u753b\u9762\u3088\u308a\u4e0a\u306b\u51fa\u305f\u30dc\u30fc\u30eb\u3092\u524a\u9664\nEraese_if(balls, [](const auto& ball){ return ball.y < 0; });\n\n\u3000Siv3D \u306f 2011 \u5e74\u4ee5\u964d\u306b\u5c0e\u5165\u3055\u308c\u305f C++ \u306e\u6700\u65b0\u898f\u683c (C++11/14/17) \u306b\u57fa\u3065\u3044\u3066\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u3060\u3051\u3067\u306a\u304f\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30fb\u30b5\u30f3\u30d7\u30eb\u306e\u3059\u3079\u3066\u304c\u6700\u65b0\u306e C++ \u898f\u683c\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u3001Siv3D \u3092\u4f7f\u3046\u3053\u3068\u3067\u65b0\u3057\u3044 C++ \u306e\u66f8\u304d\u65b9\u3092\u5b66\u7fd2\u3067\u304d\u307e\u3059\u3002\n\n\u7a76\u6975\u306b\u77ed\u3044\u30b3\u30fc\u30c9\u3067\u30b2\u30fc\u30e0\u3084\u30a2\u30d7\u30ea\u3092\u958b\u767a\u3057\u3088\u3046\n\n\u56f3\u5f62\u3068\u6587\u5b57 (7 \u884c)\n\n# include <Siv3D.hpp>\n\nvoid Main()\n{\n    const Font font(30);\n\n    while (System::Update())\n    {\n        Circle(Mouse::Pos(), 100).draw();\n\n        font(Mouse::Pos()).draw(50, 200, Palette::Orange);\n    }\n}\n\n\n\u30da\u30a4\u30f3\u30c8 (9 \u884c)\n\n# include <Siv3D.hpp>\n\nvoid Main()\n{\n    Image image(Window::Size(), Palette::White);\n\n    DynamicTexture texture(image);\n\n    while (System::Update())\n    {\n        if (Input::MouseL.pressed)\n        {\n            Line(Mouse::PreviousPos(), Mouse::Pos()).overwrite(image, 8, Palette::Orange);\n\n            texture.fill(image);\n        }\n\n        texture.draw();\n    }\n}\n\n\n\u96fb\u5353 (10 \u884c)\n\n# include <Siv3D.hpp>\n\nvoid Main()\n{\n    Graphics::SetBackground(Color(240));\n\n    const Font font(40);\n\n    String expression;\n\n    while (System::Update())\n    {\n        Input::GetCharsHelper(expression);\n\n        font(expression).draw(10, 10, Palette::Black);\n\n        if (const auto result = EvaluateOpt(expression))\n        {\n            font(result.value()).draw(10, 250, Palette::Black);\n        }\n    }\n}\n\n\nKinect (15 \u884c)\n\n# include <Siv3D.hpp>\n\nvoid Main()\n{\n    KinectV2::Start();\n\n    DynamicTexture depthTexture;\n\n    std::array<Optional<KinectV2Body>, 6> bodies;\n\n    while (System::Update())\n    {\n        if (KinectV2::HasNewDepthFrame())\n        {\n            KinectV2::GetDepthFrame(depthTexture);\n        }\n\n        if (KinectV2::HasNewBodyFrame())\n        {\n            KinectV2::GetBodyFrame(bodies);\n        }\n\n        depthTexture.draw();\n\n        for (const auto& body : bodies)\n        {\n            if (body)\n            {\n                for (const auto& joint : body->joints)\n                {\n                    Circle(joint.depthSpacePos, 15).drawFrame(6.0, 0.0, Palette::Red);\n                }\n            }\n        }\n    }\n}\n\n\nMIDI \u30b7\u30fc\u30b1\u30f3\u30b5 (21 \u884c)\n\n# include <Siv3D.hpp>\n\nvoid Main()\n{\n    Window::Resize(480, 480);\n    Graphics::SetBackground(Palette::White);\n    Midi::SendMessage(MidiMessage::SetInstrument(0, GMInstrument::MusicBox));\n\n    const Array<uint8> midis{ 86, 84, 83, 81, 79, 77, 76, 74, 72, 71, 69, 67, 65, 64, 62, 60 };\n    const int32 dotSize = 30;\n\n    Grid<bool> dots(16, 16);\n    int32 previousLine = 0;\n\n    while (System::Update())\n    {\n        const int32 currentLine = Time::MillisecSince1601() / 160 % 16;\n\n        if (currentLine != previousLine)\n        {\n            for (auto i : step(dots.height))\n            {\n                Midi::SendMessage(dots[i][currentLine] ? MidiMessage::NoteOn(0, midis[i]) : MidiMessage::NoteOff(0, midis[i]));\n            }\n\n            previousLine = currentLine;\n        }\n\n        for (auto p : step({ dots.width, dots.height }))\n        {\n            Rect rect(p * dotSize, dotSize, dotSize);\n\n            if (rect.leftClicked)\n            {\n                dots[p.y][p.x] = !dots[p.y][p.x];\n            }\n\n            const Color color = HSV(40, 0.2 + dots[p.y][p.x] * 0.8 - (p.x == currentLine) * 0.2, 0.9 + dots[p.y][p.x] * 0.1);\n\n            rect.stretched(-1).draw(color);\n        }\n    }\n}\n\n\n\u30d6\u30ed\u30c3\u30af\u304f\u305a\u3057 (28 \u884c)\n\n# include <Siv3D.hpp>\n\nvoid Main()\n{\n    const Size blockSize(40, 20);\n    const double speed = 8.0;\n    Rect bar(60, 10);\n    Circle ball(320, 400, 8);\n    Vec2 ballSpeed(0, -speed);\n\n    Array<Rect> blocks;\n    for (auto p : step({ Window::Width() / blockSize.x , 5 }))\n    {\n        blocks.emplace_back((p*blockSize).moveBy(0, 60), blockSize);\n    }\n\n    while (System::Update())\n    {\n        ball.moveBy(ballSpeed);\n        bar.setCenter(Mouse::Pos().x, 420);\n\n        for (auto it = blocks.begin(); it != blocks.end(); ++it)\n        {\n            if (it->intersects(ball))\n            {\n                (it->bottom.intersects(ball) || it->top.intersects(ball) ? ballSpeed.y : ballSpeed.x) *= -1;\n\n                blocks.erase(it);\n                break;\n            }\n        }\n\n        for (auto const& block : blocks)\n        {\n            block.stretched(-1).draw(HSV(block.y - 40));\n        }\n\n        if (ball.y < 0 && ballSpeed.y <  0)\n        {\n            ballSpeed.y *= -1;\n        }\n\n        if ((ball.x < 0 && ballSpeed.x < 0) || (Window::Width() < ball.x && ballSpeed.x > 0))\n        {\n            ballSpeed.x *= -1;\n        }\n\n        if (ballSpeed.y > 0 && bar.intersects(ball))\n        {\n            ballSpeed = Vec2((ball.x - bar.center.x) / 8, -ballSpeed.y).setLength(speed);\n        }\n\n        ball.draw();\n        bar.draw();\n    }\n}\n\n\u3000Siv3D \u306f C++ \u30b2\u30fc\u30e0\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5e38\u8b58\u3092\u7834\u308b\u8c4a\u5bcc\u306a\u6a5f\u80fd\u3068\u7dfb\u5bc6\u306a\u8a2d\u8a08\u306b\u3088\u308a\u3001\u9a5a\u304f\u307b\u3069\u77ed\u3044\u30b3\u30fc\u30c9\u3067\u30b2\u30fc\u30e0\u3084\u30a2\u30d7\u30ea\u306e\u672c\u8cea\u7684\u306a\u90e8\u5206\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002\u516c\u5f0f\u30b5\u30f3\u30d7\u30eb\u96c6\u306b\u306f\u6570\u884c\uff5e\u6570\u5341\u884c\u306e\u30b3\u30fc\u30c9\u3067\u52d5\u4f5c\u3059\u308b\u69d8\u3005\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002(\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30b2\u30fc\u30e0 / \u30d4\u30a2\u30ce / Twitter \u30af\u30e9\u30a4\u30a2\u30f3\u30c8 / 15 \u30d1\u30ba\u30eb \u306a\u3069)\n\n\u72ec\u5275\u7684\u306a\u30af\u30ea\u30a8\u30a4\u30bf\u30fc\u306b\u306a\u308d\u3046\n\u3000Siv3D \u306b\u306f\u4e00\u898b\u30b2\u30fc\u30e0\u3068\u306f\u95a2\u4fc2\u306a\u3044\u3088\u3046\u306b\u601d\u3048\u308b\u6a5f\u80fd\u3082\u591a\u304f\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u306a\u306b\u3057\u308d\u76ee\u6a19\u306f\u300c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u3067\u304d\u308b\u3053\u3068\u306a\u3089\u4f55\u3067\u3082\u7c21\u5358\u306b\u4f5c\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u300d\u3060\u304b\u3089\u3067\u3059\u3002\u3053\u3046\u3057\u305f\u305f\u304f\u3055\u3093\u306e\u6280\u8853\u3068\u30a2\u30a4\u30c7\u30a2\u306e\u7d44\u307f\u5408\u308f\u305b\u306e\u81ea\u7531\u5ea6\u306e\u9ad8\u3055\u304c\u3001\u8ab0\u3082\u898b\u305f\u3053\u3068\u306e\u306a\u3044\u3088\u3046\u306a\u9b45\u529b\u7684\u306a\u30b2\u30fc\u30e0\u3084\u30a2\u30d7\u30ea\u3092\u751f\u307f\u51fa\u3059\u30c1\u30e3\u30f3\u30b9\u306b\u3064\u306a\u304c\u308a\u307e\u3059\u3002\n\n\u30b2\u30fc\u30e0\u306e\u30ed\u30b8\u30c3\u30af\u3084\u30d3\u30b8\u30e5\u30a2\u30eb\u8868\u73fe\n\nDirect3D 11 \u306b\u3088\u308b 2D / 3D \u63cf\u753b\n\n\u3042\u305f\u308a\u5224\u5b9a (\u70b9 / \u7dda\u5206 / \u9577\u65b9\u5f62 / \u5186 / \u4e09\u89d2\u5f62 / \u56db\u89d2\u5f62 / \u591a\u89d2\u5f62\u3069\u3046\u3057\u306e\u5224\u5b9a\u304c 1 \u884c\u3067\u66f8\u3051\u308b\uff09\n\u30b7\u30fc\u30f3\u7ba1\u7406\n\u7269\u7406\u6f14\u7b97\n\u30d9\u30af\u30c8\u30eb\u3068\u884c\u5217\u3001\u30af\u30a9\u30fc\u30bf\u30cb\u30aa\u30f3\n\u6975\u5ea7\u6a19\u7cfb\n\u4e71\u6570\u30fb\u30ce\u30a4\u30ba\n\u30a4\u30fc\u30b8\u30f3\u30b0\n\nGUI (\u30dc\u30bf\u30f3\u3001\u30b9\u30e9\u30a4\u30c0\u30fc\u3001\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3001\u30e9\u30b8\u30aa\u30dc\u30bf\u30f3\u3001\u30c6\u30ad\u30b9\u30c8\u30a8\u30ea\u30a2\u7b49) \nCSV, INI, XML, JSON \u30d5\u30a1\u30a4\u30eb\u30d1\u30fc\u30b5\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\n\u30c9\u30e9\u30c3\u30b0 & \u30c9\u30ed\u30c3\u30d7\n\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\n\n\n\u97f3\u58f0\u51e6\u7406\n\n\u30eb\u30fc\u30d7\u518d\u751f\n\u97f3\u91cf\u3001\u30b9\u30d4\u30fc\u30c9\u306e\u5909\u66f4\n\u30d5\u30a7\u30fc\u30c9\u30a4\u30f3 / \u30d5\u30a7\u30fc\u30c9\u30a2\u30a6\u30c8\n\u30c6\u30f3\u30dd\u3001\u30d4\u30c3\u30c1\u306e\u5909\u66f4\nMIDI \u518d\u751f\u3001MIDI \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\nMIDI \u8b5c\u9762\u53d6\u5f97\n\u6587\u7ae0\u306e\u8aad\u307f\u4e0a\u3052 \n\u6ce2\u5f62\u7de8\u96c6\n\u9332\u97f3\u3084\u518d\u751f\u3057\u3066\u3044\u308b\u97f3\u697d\u3092 FFT \u3067\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u89e3\u6790\n\n\u30aa\u30fc\u30c7\u30a3\u30aa\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u3068\u66f8\u304d\u51fa\u3057 (WAVE, MP3, Ogg Vorbis, AAC, WMA, Opus)\n\n\n\u753b\u50cf\u51e6\u7406\n\n\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u306e\u51e6\u7406\n\u5404\u7a2e\u30d5\u30a3\u30eb\u30bf\u306b\u3088\u308b\u753b\u50cf\u52a0\u5de5\n\u95be\u5024\u51e6\u7406\n\u56f3\u5f62\u306e\u66f8\u304d\u8fbc\u307f\n\u5857\u308a\u3064\u3076\u3057\n\u8f2a\u90ed\u691c\u51fa\n\u591a\u89d2\u5f62\u62bd\u51fa\nAR \u30de\u30fc\u30ab\u30fc\u691c\u51fa\nQR \u30b3\u30fc\u30c9\u691c\u51fa\n\u624b\u66f8\u304d\u6587\u5b57\u30fb\u56f3\u5f62\u8a8d\u8b58\nInpaint \u306b\u3088\u308b\u753b\u50cf\u4fee\u6b63\nGrabCut \u306b\u3088\u308b\u4f3c\u305f\u8272\u306e\u90e8\u5206\u306e\u62bd\u51fa\n\u5199\u771f\u3084\u30a4\u30e9\u30b9\u30c8\u304b\u3089\u306e\u9854\u691c\u51fa\n\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u3068\u66f8\u304d\u51fa\u3057 (PNG, JPEG, BMP, GIF, TIFF, TGA, DDS, WebP, JPEG2000, PPM)\n\n\n\u69d8\u3005\u306a\u5165\u529b\u30c7\u30d0\u30a4\u30b9\n\n\u30de\u30a6\u30b9\n\u30ad\u30fc\u30dc\u30fc\u30c9\n\u30b2\u30fc\u30e0\u30d1\u30c3\u30c9\nXbox 360 \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\uff08+\u632f\u52d5\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\uff09\nWeb \u30ab\u30e1\u30e9\u306b\u3088\u308b\u64ae\u5f71\n\u30de\u30a4\u30af\u306b\u3088\u308b\u9332\u97f3\n\u30de\u30eb\u30c1\u30bf\u30c3\u30c1\n\u30da\u30f3\u30bf\u30d6\uff08+\u30da\u30f3\u306e\u50be\u304d\u3068\u7b46\u5727\uff09\n\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1 (Arduino \u7b49)\nKinect v1 / v2\nLeap Motion \u306b\u3088\u308b\u624b\u3068\u6307\u306e\u52d5\u304d\u306e\u691c\u51fa\nTobii EyeX \u306b\u3088\u308b\u8996\u7dda\u8ffd\u8de1\nMyo\n\n\n\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3078\n\u3000Siv3D \u306f\u5168\u56fd\u5404\u5730\u306e\u4e2d\u9ad8\u751f\u3001\u9ad8\u5c02\u30fb\u5c02\u9580\u5b66\u6821\u751f\u3001\u5927\u5b66\u751f\u3001\u793e\u4f1a\u4eba\uff08\u30d7\u30ed\u306e\u30b2\u30fc\u30e0\u958b\u767a\u8005\u3092\u542b\u3080\uff09\u306e \u6c17\u92ed\u306e\u958b\u767a\u8005\u304c\u5229\u7528\u3057\u3001Game Jam \u3084 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u57f7\u7b46 \u306a\u3069\u3001\u30e6\u30fc\u30b6\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u30a4\u30d9\u30f3\u30c8\u3082\u983b\u7e41\u306b\u5b9f\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3000\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u5e74\u306b\u6570\u56de\u306e\u983b\u5ea6\u3067\u66f4\u65b0\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u5bfe\u5fdc\u3084\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5316\u306a\u3069\u3001\u5927\u898f\u6a21\u306a\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u8a08\u753b\u3082\u9032\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\u3000\u4f7f\u3063\u3066\u3044\u3066\u56f0\u3063\u305f\u3068\u304d\u306e\u30b5\u30dd\u30fc\u30c8\u306f\u3001\u63b2\u793a\u677f\u30fbSlack\u30fbTwitter \u30cf\u30c3\u30b7\u30e5\u30bf\u30b0 \u3092\u6d3b\u7528\u3057\u307e\u3057\u3087\u3046\u3002\u63b2\u793a\u677f\u306b\u3053\u308c\u307e\u3067\u5bc4\u305b\u3089\u308c\u305f 170 \u4ef6\u306e\u8cea\u554f\u306b\u306f\u3059\u3079\u3066\u56de\u7b54\u304c\u3064\u304d\u3001100 \u4eba\u4ee5\u4e0a\u304c\u53c2\u52a0\u3059\u308b Slack \u3067\u306f\u3001\u958b\u767a\u306e\u76f8\u8ac7\u3084\u5c06\u6765\u306e Siv3D \u306b\u3064\u3044\u3066\u306e\u8b70\u8ad6\u304c\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u3000\u3082\u3057\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067 Siv3D \u3092\u6c17\u306b\u5165\u3063\u3066\u3044\u305f\u3060\u3051\u305f\u3089\u3001\u305c\u3072 Siv3D \u516c\u5f0f\u30b5\u30a4\u30c8 \u3092\u8a2a\u308c\u3066\u304f\u3060\u3055\u3044\u3002\n\u3000\u81ea\u5206\u304c\u3081\u3061\u3083\u304f\u3061\u3083\u697d\u3057\u304f\u306a\u308b\u3088\u3046\u306a\u3001\u53cb\u9054\u304c\u3042\u3063\u3068\u9a5a\u304f\u3088\u3046\u306a\u3001\u4e16\u754c\u4e2d\u306b\u611b\u3055\u308c\u308b\u3088\u3046\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u958b\u767a\u306e\u304a\u5f79\u306b\u7acb\u3066\u308b\u3053\u3068\u3092\u5fc3\u5f85\u3061\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n[\u30b2\u30fc\u30e0\u30a8\u30f3\u30b8\u30f3\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u30fb\u30c4\u30fc\u30eb\u306e\u958b\u767a Advent Calendar](http://qiita.com/advent-calendar/2016/gameengine) 4 \u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n# \u6700\u65b0\u306e C++ \u306e\u30d1\u30ef\u30fc\u3092\u624b\u306b\u5165\u308c\u3088\u3046\n#### \u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u30ea\u30c6\u30e9\u30eb\n\n```cpp\n// \u56db\u89d2\u5f62\u3092 45\u00b0 \u56de\u8ee2\u3055\u305b\u3066\u63cf\u753b\nrect.rotated(45_deg).draw();\n```\n\n#### Range-based for \u30eb\u30fc\u30d7\n\n```cpp\n// \u5199\u771f\u306b\u542b\u307e\u308c\u308b\u9854\u3092\u3059\u3079\u3066\u691c\u51fa\u3057\u3001\u767d\u304f\u5857\u308a\u3064\u3076\u3059\nfor (const auto& face : Imaging::DetectFaces(image))\n{\n\tface.overwrite(image, Palette::White);\n}\n```\n\n#### \u53ef\u5909\u5f15\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\n```cpp\n// \u753b\u9762\u306b \"\u4eca\u65e5\u306f 12 \u6708 4 \u65e5\" \u3068\u8868\u793a\nPrintln(L\"\u4eca\u65e5\u306f {} \u6708 {} \u65e5\"_fmt, 12, 4);\n```\n\n#### \u30e9\u30e0\u30c0\u5f0f\n\n```cpp\nArray<Circle> balls;\n\n// \u753b\u9762\u3088\u308a\u4e0a\u306b\u51fa\u305f\u30dc\u30fc\u30eb\u3092\u524a\u9664\nEraese_if(balls, [](const auto& ball){ return ball.y < 0; });\n```\n\n\u3000Siv3D \u306f 2011 \u5e74\u4ee5\u964d\u306b\u5c0e\u5165\u3055\u308c\u305f C++ \u306e\u6700\u65b0\u898f\u683c (C++11/14/17) \u306b\u57fa\u3065\u3044\u3066\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u3060\u3051\u3067\u306a\u304f\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30fb\u30b5\u30f3\u30d7\u30eb\u306e\u3059\u3079\u3066\u304c\u6700\u65b0\u306e C++ \u898f\u683c\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u3001Siv3D \u3092\u4f7f\u3046\u3053\u3068\u3067\u65b0\u3057\u3044 C++ \u306e\u66f8\u304d\u65b9\u3092\u5b66\u7fd2\u3067\u304d\u307e\u3059\u3002\n\n# \u7a76\u6975\u306b\u77ed\u3044\u30b3\u30fc\u30c9\u3067\u30b2\u30fc\u30e0\u3084\u30a2\u30d7\u30ea\u3092\u958b\u767a\u3057\u3088\u3046\n#### \u56f3\u5f62\u3068\u6587\u5b57 (7 \u884c)\n<img src=\"https://github.com/Siv3D/Reference-JP/raw/master/resource/siv3d/top1.gif?raw=true\" width=\"320\" height=\"240\">\n\n```cpp\n# include <Siv3D.hpp>\n\nvoid Main()\n{\n\tconst Font font(30);\n\n\twhile (System::Update())\n\t{\n\t\tCircle(Mouse::Pos(), 100).draw();\n\n\t\tfont(Mouse::Pos()).draw(50, 200, Palette::Orange);\n\t}\n}\n```\n\n#### \u30da\u30a4\u30f3\u30c8 (9 \u884c)\n<img src=\"https://github.com/Siv3D/Reference-JP/raw/master/resource/siv3d/top2.gif?raw=true\" width=\"320\" height=\"240\">\n\n```cpp\n# include <Siv3D.hpp>\n\nvoid Main()\n{\n    Image image(Window::Size(), Palette::White);\n\n    DynamicTexture texture(image);\n\n    while (System::Update())\n    {\n        if (Input::MouseL.pressed)\n        {\n            Line(Mouse::PreviousPos(), Mouse::Pos()).overwrite(image, 8, Palette::Orange);\n\n            texture.fill(image);\n        }\n\n        texture.draw();\n    }\n}\n```\n\n#### \u96fb\u5353 (10 \u884c)\n<img src=\"https://github.com/Siv3D/Reference-JP/raw/master/resource/sample/Calculator/Calculator.gif\" width=\"320\" height=\"240\">\n\n```cpp\n# include <Siv3D.hpp>\n\nvoid Main()\n{\n    Graphics::SetBackground(Color(240));\n\n    const Font font(40);\n\n    String expression;\n\n    while (System::Update())\n    {\n        Input::GetCharsHelper(expression);\n\n        font(expression).draw(10, 10, Palette::Black);\n\n        if (const auto result = EvaluateOpt(expression))\n        {\n            font(result.value()).draw(10, 250, Palette::Black);\n        }\n    }\n}\n```\n\n#### Kinect (15 \u884c)\n<img src=\"https://github.com/Siv3D/Reference-JP/raw/master/resource/siv3d/top7.png?raw=true\" width=\"320\" height=\"240\">\n\n```cpp\n# include <Siv3D.hpp>\n\nvoid Main()\n{\n    KinectV2::Start();\n\n    DynamicTexture depthTexture;\n\n    std::array<Optional<KinectV2Body>, 6> bodies;\n\n    while (System::Update())\n    {\n        if (KinectV2::HasNewDepthFrame())\n        {\n            KinectV2::GetDepthFrame(depthTexture);\n        }\n\n        if (KinectV2::HasNewBodyFrame())\n        {\n            KinectV2::GetBodyFrame(bodies);\n        }\n\n        depthTexture.draw();\n\n        for (const auto& body : bodies)\n        {\n            if (body)\n            {\n                for (const auto& joint : body->joints)\n                {\n                    Circle(joint.depthSpacePos, 15).drawFrame(6.0, 0.0, Palette::Red);\n                }\n            }\n        }\n    }\n}\n```\n\n#### MIDI \u30b7\u30fc\u30b1\u30f3\u30b5 (21 \u884c)\n<img src=\"https://github.com/Siv3D/Reference-JP/raw/master/resource/sample/MIDISequencer/MIDISequencer.png\" width=\"320\" height=\"320\">\n\n\n```cpp\n# include <Siv3D.hpp>\n\nvoid Main()\n{\n    Window::Resize(480, 480);\n    Graphics::SetBackground(Palette::White);\n    Midi::SendMessage(MidiMessage::SetInstrument(0, GMInstrument::MusicBox));\n\n    const Array<uint8> midis{ 86, 84, 83, 81, 79, 77, 76, 74, 72, 71, 69, 67, 65, 64, 62, 60 };\n    const int32 dotSize = 30;\n\n    Grid<bool> dots(16, 16);\n    int32 previousLine = 0;\n\n    while (System::Update())\n    {\n        const int32 currentLine = Time::MillisecSince1601() / 160 % 16;\n\n        if (currentLine != previousLine)\n        {\n            for (auto i : step(dots.height))\n            {\n                Midi::SendMessage(dots[i][currentLine] ? MidiMessage::NoteOn(0, midis[i]) : MidiMessage::NoteOff(0, midis[i]));\n            }\n\n            previousLine = currentLine;\n        }\n\n        for (auto p : step({ dots.width, dots.height }))\n        {\n            Rect rect(p * dotSize, dotSize, dotSize);\n\n            if (rect.leftClicked)\n            {\n                dots[p.y][p.x] = !dots[p.y][p.x];\n            }\n\n            const Color color = HSV(40, 0.2 + dots[p.y][p.x] * 0.8 - (p.x == currentLine) * 0.2, 0.9 + dots[p.y][p.x] * 0.1);\n\n            rect.stretched(-1).draw(color);\n        }\n    }\n}\n```\n\n#### \u30d6\u30ed\u30c3\u30af\u304f\u305a\u3057 (28 \u884c)\n<img src=\"https://github.com/Siv3D/Reference-JP/raw/master/resource/siv3d/top3.gif?raw=true\" width=\"320\" height=\"240\">\n\n```cpp\n# include <Siv3D.hpp>\n\nvoid Main()\n{\n    const Size blockSize(40, 20);\n    const double speed = 8.0;\n    Rect bar(60, 10);\n    Circle ball(320, 400, 8);\n    Vec2 ballSpeed(0, -speed);\n\n    Array<Rect> blocks;\n    for (auto p : step({ Window::Width() / blockSize.x , 5 }))\n    {\n        blocks.emplace_back((p*blockSize).moveBy(0, 60), blockSize);\n    }\n\n    while (System::Update())\n    {\n        ball.moveBy(ballSpeed);\n        bar.setCenter(Mouse::Pos().x, 420);\n\n        for (auto it = blocks.begin(); it != blocks.end(); ++it)\n        {\n            if (it->intersects(ball))\n            {\n                (it->bottom.intersects(ball) || it->top.intersects(ball) ? ballSpeed.y : ballSpeed.x) *= -1;\n\n                blocks.erase(it);\n                break;\n            }\n        }\n\n        for (auto const& block : blocks)\n        {\n            block.stretched(-1).draw(HSV(block.y - 40));\n        }\n\n        if (ball.y < 0 && ballSpeed.y <  0)\n        {\n            ballSpeed.y *= -1;\n        }\n\n        if ((ball.x < 0 && ballSpeed.x < 0) || (Window::Width() < ball.x && ballSpeed.x > 0))\n        {\n            ballSpeed.x *= -1;\n        }\n\n        if (ballSpeed.y > 0 && bar.intersects(ball))\n        {\n            ballSpeed = Vec2((ball.x - bar.center.x) / 8, -ballSpeed.y).setLength(speed);\n        }\n\n        ball.draw();\n        bar.draw();\n    }\n}\n```\n\n\u3000Siv3D \u306f C++ \u30b2\u30fc\u30e0\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5e38\u8b58\u3092\u7834\u308b\u8c4a\u5bcc\u306a\u6a5f\u80fd\u3068\u7dfb\u5bc6\u306a\u8a2d\u8a08\u306b\u3088\u308a\u3001\u9a5a\u304f\u307b\u3069\u77ed\u3044\u30b3\u30fc\u30c9\u3067\u30b2\u30fc\u30e0\u3084\u30a2\u30d7\u30ea\u306e\u672c\u8cea\u7684\u306a\u90e8\u5206\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u96c6\u4e2d\u3067\u304d\u307e\u3059\u3002\u516c\u5f0f\u30b5\u30f3\u30d7\u30eb\u96c6\u306b\u306f\u6570\u884c\uff5e\u6570\u5341\u884c\u306e\u30b3\u30fc\u30c9\u3067\u52d5\u4f5c\u3059\u308b\u69d8\u3005\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002([\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30b2\u30fc\u30e0](https://github.com/Siv3D/Reference-JP/wiki/%E3%82%B7%E3%83%A5%E3%83%BC%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E3%82%B2%E3%83%BC%E3%83%A0) / [\u30d4\u30a2\u30ce](https://github.com/Siv3D/Reference-JP/wiki/%E3%83%94%E3%82%A2%E3%83%8E) / [Twitter \u30af\u30e9\u30a4\u30a2\u30f3\u30c8](https://github.com/Siv3D/Reference-JP/wiki/Twitter%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88) / [15 \u30d1\u30ba\u30eb](https://github.com/Siv3D/Reference-JP/wiki/15%E3%83%91%E3%82%BA%E3%83%AB) \u306a\u3069)\n\n# \u72ec\u5275\u7684\u306a\u30af\u30ea\u30a8\u30a4\u30bf\u30fc\u306b\u306a\u308d\u3046\n\n\u3000Siv3D \u306b\u306f\u4e00\u898b\u30b2\u30fc\u30e0\u3068\u306f\u95a2\u4fc2\u306a\u3044\u3088\u3046\u306b\u601d\u3048\u308b\u6a5f\u80fd\u3082\u591a\u304f\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u306a\u306b\u3057\u308d\u76ee\u6a19\u306f\u300c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u3067\u304d\u308b\u3053\u3068\u306a\u3089\u4f55\u3067\u3082\u7c21\u5358\u306b\u4f5c\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u300d\u3060\u304b\u3089\u3067\u3059\u3002\u3053\u3046\u3057\u305f\u305f\u304f\u3055\u3093\u306e\u6280\u8853\u3068\u30a2\u30a4\u30c7\u30a2\u306e\u7d44\u307f\u5408\u308f\u305b\u306e\u81ea\u7531\u5ea6\u306e\u9ad8\u3055\u304c\u3001\u8ab0\u3082\u898b\u305f\u3053\u3068\u306e\u306a\u3044\u3088\u3046\u306a\u9b45\u529b\u7684\u306a\u30b2\u30fc\u30e0\u3084\u30a2\u30d7\u30ea\u3092\u751f\u307f\u51fa\u3059\u30c1\u30e3\u30f3\u30b9\u306b\u3064\u306a\u304c\u308a\u307e\u3059\u3002\n\n#### \u30b2\u30fc\u30e0\u306e\u30ed\u30b8\u30c3\u30af\u3084\u30d3\u30b8\u30e5\u30a2\u30eb\u8868\u73fe\n- Direct3D 11 \u306b\u3088\u308b 2D / 3D \u63cf\u753b\n- [\u3042\u305f\u308a\u5224\u5b9a](https://github.com/Siv3D/Reference-JP/wiki/%E5%9B%B3%E5%BD%A2%E3%81%AE%E5%BD%93%E3%81%9F%E3%82%8A%E5%88%A4%E5%AE%9A) (\u70b9 / \u7dda\u5206 / \u9577\u65b9\u5f62 / \u5186 / \u4e09\u89d2\u5f62 / \u56db\u89d2\u5f62 / \u591a\u89d2\u5f62\u3069\u3046\u3057\u306e\u5224\u5b9a\u304c 1 \u884c\u3067\u66f8\u3051\u308b\uff09\n- [\u30b7\u30fc\u30f3\u7ba1\u7406](http://qiita.com/hamukun8686/items/4620d630b538c78a6e02)\n- \u7269\u7406\u6f14\u7b97\n- \u30d9\u30af\u30c8\u30eb\u3068\u884c\u5217\u3001\u30af\u30a9\u30fc\u30bf\u30cb\u30aa\u30f3\n- \u6975\u5ea7\u6a19\u7cfb\n- \u4e71\u6570\u30fb\u30ce\u30a4\u30ba\n- \u30a4\u30fc\u30b8\u30f3\u30b0\n- [GUI](https://github.com/Siv3D/Reference-JP/wiki/GUI) (\u30dc\u30bf\u30f3\u3001\u30b9\u30e9\u30a4\u30c0\u30fc\u3001\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3001\u30e9\u30b8\u30aa\u30dc\u30bf\u30f3\u3001\u30c6\u30ad\u30b9\u30c8\u30a8\u30ea\u30a2\u7b49) \n- [CSV, INI, XML, JSON \u30d5\u30a1\u30a4\u30eb\u30d1\u30fc\u30b5](https://github.com/Siv3D/Reference-JP/wiki/INI,CSV,JSON)\n- \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\n- \u30c9\u30e9\u30c3\u30b0 & \u30c9\u30ed\u30c3\u30d7\n- \u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\n\n#### \u97f3\u58f0\u51e6\u7406\n- \u30eb\u30fc\u30d7\u518d\u751f\n- \u97f3\u91cf\u3001\u30b9\u30d4\u30fc\u30c9\u306e\u5909\u66f4\n- \u30d5\u30a7\u30fc\u30c9\u30a4\u30f3 / \u30d5\u30a7\u30fc\u30c9\u30a2\u30a6\u30c8\n- \u30c6\u30f3\u30dd\u3001\u30d4\u30c3\u30c1\u306e\u5909\u66f4\n- MIDI \u518d\u751f\u3001MIDI \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\n- [MIDI \u8b5c\u9762\u53d6\u5f97](https://www.youtube.com/watch?v=MYcoLttVX68)\n- \u6587\u7ae0\u306e\u8aad\u307f\u4e0a\u3052 \n- [\u6ce2\u5f62\u7de8\u96c6](https://github.com/Siv3D/Reference-JP/wiki/%E9%9F%B3%E5%A3%B0%E5%90%88%E6%88%90)\n- \u9332\u97f3\u3084\u518d\u751f\u3057\u3066\u3044\u308b\u97f3\u697d\u3092 [FFT \u3067\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u89e3\u6790](https://github.com/Siv3D/Reference-JP/wiki/%E3%82%AA%E3%83%BC%E3%83%87%E3%82%A3%E3%82%AA%E3%82%B9%E3%83%9A%E3%82%AF%E3%83%88%E3%83%A9%E3%83%A0)\n- \u30aa\u30fc\u30c7\u30a3\u30aa\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u3068\u66f8\u304d\u51fa\u3057 (WAVE, MP3, Ogg Vorbis, AAC, WMA, Opus)\n\n#### \u753b\u50cf\u51e6\u7406\n- \u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u306e\u51e6\u7406\n- \u5404\u7a2e\u30d5\u30a3\u30eb\u30bf\u306b\u3088\u308b\u753b\u50cf\u52a0\u5de5\n- \u95be\u5024\u51e6\u7406\n- \u56f3\u5f62\u306e\u66f8\u304d\u8fbc\u307f\n- \u5857\u308a\u3064\u3076\u3057\n- \u8f2a\u90ed\u691c\u51fa\n- [\u591a\u89d2\u5f62\u62bd\u51fa](https://github.com/Siv3D/Reference-JP/wiki/Image%20to%20Polygon)\n- AR \u30de\u30fc\u30ab\u30fc\u691c\u51fa\n- QR \u30b3\u30fc\u30c9\u691c\u51fa\n- [\u624b\u66f8\u304d\u6587\u5b57\u30fb\u56f3\u5f62\u8a8d\u8b58](https://github.com/Siv3D/Reference-JP/wiki/%E6%89%8B%E6%9B%B8%E3%81%8D%E6%96%87%E5%AD%97%E8%AA%8D%E8%AD%98)\n- [Inpaint \u306b\u3088\u308b\u753b\u50cf\u4fee\u6b63](https://twitter.com/Reputeless/status/765575969813901312)\n- [GrabCut \u306b\u3088\u308b\u4f3c\u305f\u8272\u306e\u90e8\u5206\u306e\u62bd\u51fa](https://twitter.com/Reputeless/status/766207025839677441)\n- [\u5199\u771f\u3084\u30a4\u30e9\u30b9\u30c8\u304b\u3089\u306e\u9854\u691c\u51fa](https://github.com/Siv3D/Reference-JP/wiki/%E9%A1%94%E6%A4%9C%E5%87%BA)\n- \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u3068\u66f8\u304d\u51fa\u3057 (PNG, JPEG, BMP, GIF, TIFF, TGA, DDS, WebP, JPEG2000, PPM)\n\n#### \u69d8\u3005\u306a\u5165\u529b\u30c7\u30d0\u30a4\u30b9\n- \u30de\u30a6\u30b9\n- \u30ad\u30fc\u30dc\u30fc\u30c9\n- \u30b2\u30fc\u30e0\u30d1\u30c3\u30c9\n- Xbox 360 \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\uff08+\u632f\u52d5\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\uff09\n- Web \u30ab\u30e1\u30e9\u306b\u3088\u308b\u64ae\u5f71\n- \u30de\u30a4\u30af\u306b\u3088\u308b\u9332\u97f3\n- \u30de\u30eb\u30c1\u30bf\u30c3\u30c1\n- \u30da\u30f3\u30bf\u30d6\uff08+\u30da\u30f3\u306e\u50be\u304d\u3068\u7b46\u5727\uff09\n- \u30b7\u30ea\u30a2\u30eb\u901a\u4fe1 (Arduino \u7b49)\n- Kinect v1 / v2\n- [Leap Motion \u306b\u3088\u308b\u624b\u3068\u6307\u306e\u52d5\u304d\u306e\u691c\u51fa](https://github.com/Siv3D/Reference-JP/wiki/Leap%20Motion)\n- Tobii EyeX \u306b\u3088\u308b\u8996\u7dda\u8ffd\u8de1\n- Myo\n\n\n# \u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3078\n\n\u3000Siv3D \u306f\u5168\u56fd\u5404\u5730\u306e\u4e2d\u9ad8\u751f\u3001\u9ad8\u5c02\u30fb\u5c02\u9580\u5b66\u6821\u751f\u3001\u5927\u5b66\u751f\u3001\u793e\u4f1a\u4eba\uff08\u30d7\u30ed\u306e\u30b2\u30fc\u30e0\u958b\u767a\u8005\u3092\u542b\u3080\uff09\u306e [\u6c17\u92ed\u306e\u958b\u767a\u8005\u304c\u5229\u7528\u3057](https://twitter.com/search?f=tweets&vertical=default&q=Siv3D&src=typd)\u3001[Game Jam](http://siv3d-gamejam.hatenablog.com/entry/start) \u3084 [\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u57f7\u7b46](http://qiita.com/advent-calendar/2016/siv3d) \u306a\u3069\u3001\u30e6\u30fc\u30b6\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u30a4\u30d9\u30f3\u30c8\u3082\u983b\u7e41\u306b\u5b9f\u65bd\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3000\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u5e74\u306b\u6570\u56de\u306e\u983b\u5ea6\u3067\u66f4\u65b0\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u5bfe\u5fdc\u3084\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5316\u306a\u3069\u3001\u5927\u898f\u6a21\u306a\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u8a08\u753b\u3082\u9032\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\u3000\u4f7f\u3063\u3066\u3044\u3066\u56f0\u3063\u305f\u3068\u304d\u306e\u30b5\u30dd\u30fc\u30c8\u306f\u3001[\u63b2\u793a\u677f](http://siv3d.jp/bbs/patio.cgi)\u30fb[Slack](https://github.com/Siv3D/Reference-JP/wiki/Slack)\u30fb[Twitter \u30cf\u30c3\u30b7\u30e5\u30bf\u30b0](https://twitter.com/search?f=tweets&vertical=default&q=%23Siv3D%20OR%20Siv3D&src=typd) \u3092\u6d3b\u7528\u3057\u307e\u3057\u3087\u3046\u3002\u63b2\u793a\u677f\u306b\u3053\u308c\u307e\u3067\u5bc4\u305b\u3089\u308c\u305f 170 \u4ef6\u306e\u8cea\u554f\u306b\u306f\u3059\u3079\u3066\u56de\u7b54\u304c\u3064\u304d\u3001100 \u4eba\u4ee5\u4e0a\u304c\u53c2\u52a0\u3059\u308b Slack \u3067\u306f\u3001\u958b\u767a\u306e\u76f8\u8ac7\u3084\u5c06\u6765\u306e Siv3D \u306b\u3064\u3044\u3066\u306e\u8b70\u8ad6\u304c\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3000\u3082\u3057\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067 Siv3D \u3092\u6c17\u306b\u5165\u3063\u3066\u3044\u305f\u3060\u3051\u305f\u3089\u3001\u305c\u3072 [Siv3D \u516c\u5f0f\u30b5\u30a4\u30c8](https://github.com/Siv3D/Reference-JP/wiki) \u3092\u8a2a\u308c\u3066\u304f\u3060\u3055\u3044\u3002\n\u3000\u81ea\u5206\u304c\u3081\u3061\u3083\u304f\u3061\u3083\u697d\u3057\u304f\u306a\u308b\u3088\u3046\u306a\u3001\u53cb\u9054\u304c\u3042\u3063\u3068\u9a5a\u304f\u3088\u3046\u306a\u3001\u4e16\u754c\u4e2d\u306b\u611b\u3055\u308c\u308b\u3088\u3046\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u958b\u767a\u306e\u304a\u5f79\u306b\u7acb\u3066\u308b\u3053\u3068\u3092\u5fc3\u5f85\u3061\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n![works.jpg](https://qiita-image-store.s3.amazonaws.com/0/30255/dd15bc88-b855-0731-04ec-261ea49714df.jpeg)\n\n", "tags": ["Siv3D", "C++"]}