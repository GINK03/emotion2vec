{"context": " More than 1 year has passed since last update.\n\nDirichlet Process\u3092\u4f7f\u3046\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\n\u4ee5\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306a1\u6b21\u5143\u30c7\u30fc\u30bf\u3092\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u305f\u3044\u3068\u3057\u307e\u3059\u3002\n\n\u660e\u3089\u304b\u306b3\u500b\u306e\u30af\u30e9\u30b9\u30bf\u304c\u3042\u308b\u3063\u307d\u3044\u306e\u3067\u3001k=3k=3k = 3\u3068\u3057\u3066k means clustering\u3092\u3059\u308c\u3070\u89e3\u6c7a\u3002\n\u30fb\u30fb\u30fb\u306a\u306e\u3067\u3059\u304c\u3001Dirichlet Process\u306f\u30af\u30e9\u30b9\u30bf\u6570\u3092\u4e8b\u524d\u306b\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u4e0a\u8a18\u4e00\u6b21\u5143\u30c7\u30fc\u30bf\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092Dirichlet Process\u306b\u3088\u308a\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\nDirichlet Process\u306f\u30d9\u30a4\u30b8\u30a2\u30f3\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u3067\u3059\u304c\u3001\u30d9\u30a4\u30b8\u30a2\u30f3\u30e2\u30c7\u30eb\u3092\u4f7f\u3046\u3068\u4f55\u304c\u5b09\u3057\u3044\u304b\u306f\u3053\u3061\u3089\u3067\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002\n\nDirichlet Process\u306e\u6982\u8981\nDirichlet Process\u306f\u3001\u30d9\u30fc\u30b9\u3068\u306a\u308b\u78ba\u7387\u5206\u5e03G0G0G_0\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u03b1\u03b1\\alpha\u3067\u5b9a\u7fa9\u3055\u308c\u3001nnn\u500b\u76ee\u306e\u30b5\u30f3\u30d7\u30eb\u03b8n\u03b8n\\theta_n\u3092\u3001\n\\frac{\\alpha}{\\alpha + n - 1}\n\u03b1\u03b1+n\u22121\u03b1\u03b1+n\u22121{\\frac{\\alpha}{\\alpha + n - 1}\n}\n\u306e\u78ba\u7387\u3067G0G0G_0\u304b\u3089\u3001\n\\frac{1}{\\alpha + n - 1}\n1\u03b1+n\u221211\u03b1+n\u22121{\\frac{1}{\\alpha + n - 1}\n}\n\u306e\u78ba\u7387\u3067\u4ee5\u524d\u9078\u3093\u3060\u03b8=\u03b8i\u03b8=\u03b8i\\theta = \\theta_i\u3068\u540c\u3058\u5024\u3092\u9078\u3076\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u3088\u3063\u3066\u65e2\u306b\u9078\u3070\u308c\u305f\u5024\u306f\u518d\u3073\u9078\u3070\u308c\u3084\u3059\u304f\u306a\u308b\u4e0a\u3001\u591a\u304f\u9078\u3070\u308c\u3066\u3044\u308b\u5024\u306f\u9ad8\u3044\u78ba\u7387\u3067\u307e\u305f\u9078\u3070\u308c\u308b\u3068\u3044\u3046\u6027\u8cea\u304c\u751f\u307e\u308c\u308b\u305f\u3081\u306b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u73fe\u8c61\u3092\u4eba\u5de5\u7684\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u3067\u9078\u3070\u308c\u308b\u5024\u03b81,\u22ef,\u03b8n\u03b81,\u22ef,\u03b8n\\theta_1, \\cdots, \\theta_n\u3092\u6b63\u898f\u5206\u5e03\u306e\u5e73\u5747\u5024\u3068\u8003\u3048\u308c\u3070\u3001\u5192\u982d\u3067\u63d0\u793a\u3057\u305f\u554f\u984c\u306b\u5bfe\u3057\u3066\u9069\u7528\u3067\u304d\u307e\u3059\u3002\nDirichlet Process\u306b\u3088\u308a\u5206\u5e03\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3068\u898b\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u306e\u3067\u3001Dirichlet Process\u306f\u300c\u78ba\u7387\u5206\u5e03\u306e\u78ba\u7387\u5206\u5e03\u300d\u3068\u8aac\u660e\u3055\u308c\u307e\u3059\u3002\n\nDirichlet Process\u306e\u5b9f\u88c5\n\u591a\u304f\u306e\u30d9\u30a4\u30b8\u30a2\u30f3\u30fb\u30e2\u30c7\u30eb\u306e\u4f8b\u306b\u6f0f\u308c\u305a\u3001Dirichlet Process\u3082MCMC\u3084Gibbs Sampling\u3092\u4f7f\u3063\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u307e\u3059\u3002\n\u5192\u982d\u3067\u793a\u3057\u305f\u5b66\u7fd2\u30c7\u30fc\u30bf\u306f\u30013\u3064\u306e\u30ac\u30a6\u30b9\u5206\u5e03N(\u22127.5,1),N(0,1),N(7.5,1)N(\u22127.5,1),N(0,1),N(7.5,1)N(-7.5, 1), N(0, 1), N(7.5, 1)\u304b\u3089\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\ny_array <- c(\n  rnorm(64, mean = -7.5, sd = 1),\n  rnorm(64, mean =    0, sd = 1),\n  rnorm(64, mean =  7.5, sd = 1)\n\n\nConjugate Prior\n\u4e8b\u5f8c\u5206\u5e03\u3068\u4e8b\u524d\u5206\u5e03\u304c\u540c\u3058\u65cf\uff08\u6b63\u898f\u5206\u5e03\u7b49\uff09\u306b\u5c5e\u3057\u3066\u3044\u308b\u3053\u3068\u3092Conjugate\u3068\u8a00\u3044\u307e\u3059\u3002\n\u3053\u306e\u3068\u304d\u3001Gibbs Sampling\u304c\u7c21\u5358\u306b\u306a\u308b\u306e\u3067(\u53c2\u8003\u6587\u732e[1]\u53c2\u7167)\u3053\u306e\u8a18\u4e8b\u3067\u306f\u6b63\u898f\u5206\u5e03\u306eConjugate Prior\u3092\u6271\u3044\u307e\u3059\u3002\nDirichlet Process\u306e\u30d9\u30fc\u30b9\u5206\u5e03G0G0G_0\u306f\u3001\nG0 <- function(theta) {\n  dnorm(theta, mean = 0, sd = 1)\n}\n\n\u307e\u305f\u3001\u03b8\u03b8\\theta\u306f\u76ee\u7684\u5909\u6570yyy\u3092\u751f\u6210\u3059\u308b\u6b63\u898f\u5206\u5e03\u306e\u5e73\u5747\u5024\u3068\u3057\u3001\u305d\u306e\u78ba\u7387\u5206\u5e03\u3092F(y,\u03b8)F(y,\u03b8)F(y, \\theta)\u3067\u8868\u3057\u307e\u3059\u3002\nF <- function(y, theta) {\n  dnorm(y, mean = theta, sd = 1)\n}\n\n\nGibbs Sampling\n\u53c2\u8003\u6587\u732e[1]\u306e\u5f0f\u3092\u4f7f\u3044\u307e\u3059\u3002\nGibbs Sampling\u306e\u305f\u3081\u306b\u3001iii\u756a\u76ee\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u03b8i\u03b8i\\theta_i\u3092\u3001iii\u756a\u76ee\u4ee5\u5916\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u03b8\u2212i\\theta_{-i}\u3092\u56fa\u5b9a\u3057\u3066\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\n\n\\theta_i \\big | \\theta_{-i}, y_i \\sim \\sum_{j \\ne i} q_{i, j} \\delta(\\theta_j) + r_i H_i\n\\tag{1}\n\u03b8i|\u03b8\u2212i,yi\u223c\u2211j\u2260iqi,j\u03b4(\u03b8j)+riHi{\\theta_i \\big | \\theta_{-i}, y_i \\sim \\sum_{j \\ne i} q_{i, j} \\delta(\\theta_j) + r_i H_i\n\\tag{1}\n}\n\u3053\u3053\u3067\u03b4(\u22c5)\\delta(\\cdot)\u306f\u30c7\u30a3\u30e9\u30c3\u30af\u306e\u30c7\u30eb\u30bf\u95a2\u6570\uff08\u305f\u3060\u3057\u5b9f\u88c5\u4e0a\u306f\u76f4\u63a5\u30c7\u30eb\u30bf\u95a2\u6570\u3092\u4f7f\u3044\u307e\u305b\u3093\uff09\u3067\u3001\nq_{i, j} = b F(y_i, \\theta_j)\nqi,j=bF(yi,\u03b8j){q_{i, j} = b F(y_i, \\theta_j)\n}\nr_i = b \\alpha \\int F(y_i, \\theta) \\mathrm d G_0(\\theta)\nri=b\u03b1\u222bF(yi,\u03b8)dG0(\u03b8){r_i = b \\alpha \\int F(y_i, \\theta) \\mathrm d G_0(\\theta)\n}\nH_i \\sim G_0(\\theta) F(y_i, \\theta)\nHi\u223cG0(\u03b8)F(yi,\u03b8){H_i \\sim G_0(\\theta) F(y_i, \\theta)\n}\n\u305f\u3060\u3057F(y,\u03b8)F(y, \\theta)\u306fP(y|\u03b8)P\\left(y \\big | \\theta \\right)\u306e\u6761\u4ef6\u4ed8\u304d\u78ba\u7387\u3067\u3001bb\u306f\u2211j\u2260iqi,j+ri=1\\sum_{j \\ne i} q_{i, j} + r_i = 1\u3068\u306a\u308b\u3088\u3046\u306a\u5b9a\u6570\u3067\u3059\u3002\n\u4eca\u56de\u306fConjugate Prior\u3068\u3057\u3066F(y,\u03b8)F(y, \\theta)\u53ca\u3073G0(\u03b8)G_0(\\theta)\u306f\u3044\u305a\u308c\u3082\u6b63\u898f\u5206\u5e03\u3092\u4f7f\u3046\u305f\u3081\u3001rir_i\u306e\u7a4d\u5206\u306f\u89e3\u6790\u7684\u306b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d[1]\u5b9a\u6570\u3068\u306a\u308a\u307e\u3059\u3002\nr_i = \\frac{1}{2} b \\alpha\nri=12b\u03b1{r_i = \\frac{1}{2} b \\alpha\n}\n\u3068\u306a\u308a\u307e\u3059\u3002\u3053\u3053\u307e\u3067\u306e\u30b3\u30fc\u30c9\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\ny_i <- y_array[y_index]\n\n# theta-wise array\nq_over_b <- F(y_i, theta_array[-y_index])\n# constant\nr_over_b <- 0.5 * alpha\n\nb <- (sum(q_over_b) + r_over_b)^(-1)\nr <- r_over_b * b\nq <- q_over_b * b\n\n\u6b21\u306b\u5f0f(1)(1)\u306b\u57fa\u3065\u304f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3092\u3057\u307e\u3059\u3002\n\u30c7\u30eb\u30bf\u95a2\u6570\u3092\u76f4\u63a5\u8a55\u4fa1\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u4ee5\u4e0b\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u3063\u3066Dirichlet Process\u3092\u5b9f\u88c5\u3057\u307e\u3059[2]\u3002\nA. rir_i\u306e\u78ba\u7387\u3067\u3001\u65b0\u305f\u306a\u70b9\u3092Hi\u223cG0(\u03b8)F(yi,\u03b8)H_i \\sim G_0(\\theta)F(y_i, \\theta)\u306e\u5206\u5e03\u306b\u5f93\u3044\u30b5\u30f3\u30d7\u30eb\u3059\u308b\nB. qi,jq_{i, j}\u306e\u78ba\u7387\u3067\u3001\u03b8j\\theta_j\u306e\u5024\u3092\u30b5\u30f3\u30d7\u30eb\u3059\u308b\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\ndice <- runif(n = 1, min = 0, max = 1)\nif (dice < r) {\n  # sample a new point from G0 * F\n  distribution_function <- function(theta) G0(theta) * F(y_i, theta)\n  # totally empirical\n  threshold <- max(distribution_function(c(0, 10))) * 3\n  new_theta <- sample_from_distribution(\n    min = min_theta,\n    max = max_theta,\n    distribution = distribution_function,\n    threshold = threshold)\n} else {\n  # sample from existing theta with probability proportonial to q\n  new_theta <- sample(size = 1, x = theta_array[-y_index], prob = q)\n}\n\nthreshold\u306fRejection Method\u306e\u305f\u3081\u306e\u3082\u306e\u3067\u96d1\u306a\u65b9\u6cd5\u3067\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u4eca\u56de\u306e\u554f\u984c\u306b\u5bfe\u3057\u3066\u306f\u5341\u5206\u306b\u5927\u304d\u3044\u306f\u305a\u3067\u3059\u3002\u826f\u3044\u8a2d\u5b9a\u306e\u65b9\u6cd5\u3092\u3054\u5b58\u77e5\u3067\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n\u5b9f\u884c\u7d50\u679c\nDirichlet Process\u306e\u03b1\\alpha\u304c\u5927\u304d\u3044\u307b\u3069\u3001\u300c\u65e2\u306b\u30b5\u30f3\u30d7\u30eb\u3055\u308c\u3066\u3044\u308b\u03b8\\theta\u3092\u9078\u3070\u305a\u3001G0G_0\u304b\u3089\u65b0\u305f\u306a\u03b8\\theta\u3092\u9078\u3093\u3067\u304f\u308b\u78ba\u7387\u300d\u304c\u5927\u304d\u304f\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u6027\u8cea\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001\u03b1=(100,1,0.01)\\alpha = (100, 1, 0.01)\u306e\u5834\u5408\u306e\u5b9f\u884c\u7d50\u679c\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\nalpha = 100 \u306e\u5834\u5408\n\u5404\u30b5\u30f3\u30d7\u30eb\u6bce\u306e\u30e6\u30cb\u30fc\u30af\u306a\u03b8\\theta\u306e\u6570\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u898b\u3066\u307f\u307e\u3059\u3002\nunique_elements <- apply(theta_samples, MARGIN = 1, FUN = function(x) x %>% unique %>% length)\nhist(unique_elements)\n\n\n\u03b1\\alpha\u306e\u5024\u304c\u5927\u304d\u3059\u304e\u308b\u305f\u3081\u306b\u3001\u65b0\u3057\u3044\u5024\u306e\u03b8\\theta\u304c\u9078\u3070\u308c\u308b\u78ba\u7387\u304c\u9ad8\u3059\u304e\u3066\u5b66\u7fd2\u3059\u3079\u304d\u30e2\u30c7\u30eb\u3092\u3046\u307e\u304f\u6349\u3048\u3089\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u03b8\\theta\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3082\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u73fe\u8c61\u3092\u9069\u5207\u306b\u8868\u308f\u3057\u3066\u3044\u307e\u305b\u3093\u3002\nhist(theta_samples, probability = TRUE)\n\n\n\nalpha = 1 \u306e\u5834\u5408\n\n\u03b1=1\\alpha = 1\u3068\u3057\u3066\u3082\u3001\u30e6\u30cb\u30fc\u30af\u306a\u03b8\\theta\u306e\u6570\u306f\u307e\u3060\u591a\u3044\u3067\u3059\u3002\n\u305f\u3060\u3057\u03b8\\theta\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u898b\u308b\u3068\u3001\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3057\u305f\u6b63\u898f\u5206\u5e03\u306e3\u3064\u306e\u5e73\u5747\u5024(\u03b8=\u22127.5,0,7.5)\\theta = -7.5, 0, 7.5)\u3092\u6349\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\nalpha = 0.01 \u306e\u5834\u5408\n\u03b1=0.01\\alpha = 0.01\u306e\u3068\u304d\u3001\u30e6\u30cb\u30fc\u30af\u306a\u03b8\\theta\u306e\u6570\u304c4\u500b\u4ed8\u8fd1\u3067\u73fe\u8c61\u3092\u3088\u304f\u6349\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u03b8\\theta\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3082\u03b1=1\\alpha = 1\u306e\u3068\u304d\u306b\u6bd4\u3079\u3066\u30b7\u30e3\u30fc\u30d7\u306a\u5206\u5e03\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\n\n\n\u6240\u611f\n\u5f53\u521d\u76ee\u7684\u3068\u3057\u3066\u3044\u305f\u3001\u30af\u30e9\u30b9\u30bf\u6570\u306e\u81ea\u52d5\u7684\u306a\u691c\u51fa\u3092\u9054\u6210\u3057\u305f\u3068\u8a00\u3048\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u03b1\\alpha\u3092\u8abf\u6574\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3082\u306e\u306e\u3001\u300c\u751f\u6210\u30ac\u30a6\u30b9\u5206\u5e03\u306f\u591a\u52063\u500b\u304f\u3089\u3044\u300d\u7a0b\u5ea6\u306e\u60c5\u5831\u304b\u3089\u03b1\\alpha\u3092\u89e3\u6790\u306b\u5dee\u3057\u652f\u3048\u306a\u3044\u7a0b\u5ea6\u306b\u8abf\u6574\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u73fe\u5b9f\u306e\u554f\u984c\u306b\u9069\u7528\u3059\u308b\u4e0a\u3067\u6c17\u306b\u306a\u3063\u305f\u70b9\u3092\u6319\u3052\u3066\u304a\u304d\u307e\u3059\u3002\n\nGG\u3084FF\u306e\u5206\u5e03\u3092\u3069\u3046\u8a2d\u8a08\u3059\u308b\u304b\uff08\u30d9\u30a4\u30b8\u30a2\u30f3\u30fb\u30e2\u30c7\u30eb\u5168\u822c\u3067\u8a00\u3048\u308b\u3053\u3068\u3060\u304c\u3001\u52d8\u304c\u5fc5\u8981\u306b\u306a\u308a\u305d\u3046\uff09\n\u03b1\\alpha\u3092\u3042\u308b\u7a0b\u5ea6Robust\u306b\u6c7a\u3081\u308b\u65b9\u6cd5\u306f\u3042\u308b\u306e\u3060\u308d\u3046\u304b\uff1f\n\u4eca\u56de\u306e\u3088\u3046\u306aConjugate prior\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u3001\u3082\u3063\u3068\u9762\u5012\u306a\u5f0f\u3092\u53d6\u308a\u6271\u3046\u5fc5\u8981\u304c\u3042\u308b[1]\n\u4eca\u56de\u306e\u5358\u7d14\u306aMCMC\u306f\u53ce\u675f\u6027\u80fd\u304c\u60aa\u3044\u70b9\u304c\u6307\u6458\u3055\u308c\u3066\u3044\u3066\u3001\u6539\u5584\u306e\u4f59\u5730\u304c\u3042\u308b[1]\n\u3053\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\u306f\u53c2\u8003\u6587\u732e\u306b\u6319\u3052\u305f\u8907\u6570\u306e\u30bd\u30fc\u30b9\u306e\u5185\u5bb9\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u304c\u3001\u4f53\u7cfb\u7684\u306b\u8aac\u660e\u3057\u3066\u3044\u308b\u6559\u79d1\u66f8\u7b49\u3092\u3054\u5b58\u77e5\u3067\u3057\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u53c2\u8003\u6587\u732e\n\nMarkov Chain Sampling Methods for Dirichlet Process Mixture Models : Radford M. Neal\nEstimating Mixture of Dirichlet Process Models : Steven N. MacEachern; Peter Muller\nDirichlet Process : A gentle tutorial (Khalid El-Arini\u6c0f\u306b\u3088\u308b\u30d7\u30ec\u30bc\u30f3\u8cc7\u6599)\nYee Whye Teh\u5148\u751f\u306b\u3088\u308bMLSS\u306e\u8b1b\u7fa9\n\n\n(\u53c2\u8003)\u5168\u30b3\u30fc\u30c9\nlibrary(magrittr)\n\nF <- function(y, theta) {\n  dnorm(y, mean = theta, sd = 1)\n}\n\nG0 <- function(theta) {\n  dnorm(theta, mean = 0, sd = 1)\n}\n\nsample_from_distribution <- function(min, max, distribution, threshold) {\n  while (TRUE) {\n    x <- runif(n = 1, min = min, max = max)\n    dice <- runif(n = 1, min = 0, max = 1)\n    if (dice < distribution(x) / threshold) {\n      return(x)\n    }\n  }\n}\n\nalpha <- 1\nnum_iterations <- 4096\nmin_theta <- -10\nmax_theta <-  10\n\ny_array <- c(\n  rnorm(64, mean = -7.5, sd = 1),\n  rnorm(64, mean =    0, sd = 1),\n  rnorm(64, mean =  7.5, sd = 1)\n)\nnum_samples <- length(y_array)\ntheta_array <- rep(0, num_samples)\n\ntheta_samples <- matrix(nrow = num_iterations, ncol = num_samples)\n\nfor (iteration in 1:num_iterations) {\n  for (y_index in 1:num_samples) {\n    y_i <- y_array[y_index]\n\n    # theta-wise array\n    q_over_b <- F(y_i, theta_array[-y_index])\n    # constant\n    r_over_b <- 0.5 * alpha\n\n    b <- (sum(q_over_b) + r_over_b)^(-1)\n    r <- r_over_b * b\n    q <- q_over_b * b\n\n    dice <- runif(n = 1, min = 0, max = 1)\n    if (dice < r) {\n      # sample a new point from G0 * F\n      distribution_function <- function(theta) G0(theta) * F(y_i, theta)\n      # totally empirical\n      threshold <- max(distribution_function(c(0, 10))) * 3\n      new_theta <- sample_from_distribution(\n        min = min_theta,\n        max = max_theta,\n        distribution = distribution_function,\n        threshold = threshold)\n    } else {\n      # sample from existing theta with probability proportonial to q\n      new_theta <- sample(size = 1, x = theta_array[-y_index], prob = q)\n    }\n    theta_array[y_index] <- new_theta\n    theta_samples[iteration, y_index] <- new_theta\n  }\n}\n\nnull_axis <- rep(0, y_array %>% length)\nplot(y_array, null_axis)\nhist(y_array)\nhist(theta_samples, probability = TRUE)\n\n# histogram of unique elements\nunique_elements <- apply(theta_samples, MARGIN = 1, FUN = function(x) x %>% unique %>% length)\nhist(unique_elements)\n\n# Dirichlet Process\u3092\u4f7f\u3046\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\n\n\u4ee5\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306a1\u6b21\u5143\u30c7\u30fc\u30bf\u3092\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u305f\u3044\u3068\u3057\u307e\u3059\u3002\n\n![y_dist.png](https://qiita-image-store.s3.amazonaws.com/0/67217/d3ce26e8-5814-4db8-1481-dfdd1e928852.png)\n\n\u660e\u3089\u304b\u306b3\u500b\u306e\u30af\u30e9\u30b9\u30bf\u304c\u3042\u308b\u3063\u307d\u3044\u306e\u3067\u3001$k = 3$\u3068\u3057\u3066k means clustering\u3092\u3059\u308c\u3070\u89e3\u6c7a\u3002\n\n\u30fb\u30fb\u30fb\u306a\u306e\u3067\u3059\u304c\u3001Dirichlet Process\u306f\u30af\u30e9\u30b9\u30bf\u6570\u3092\u4e8b\u524d\u306b\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u4e0a\u8a18\u4e00\u6b21\u5143\u30c7\u30fc\u30bf\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092Dirichlet Process\u306b\u3088\u308a\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\nDirichlet Process\u306f\u30d9\u30a4\u30b8\u30a2\u30f3\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u3067\u3059\u304c\u3001\u30d9\u30a4\u30b8\u30a2\u30f3\u30e2\u30c7\u30eb\u3092\u4f7f\u3046\u3068\u4f55\u304c\u5b09\u3057\u3044\u304b\u306f[\u3053\u3061\u3089](http://qiita.com/sergeant-wizard/items/d0ec93f625e596258182)\u3067\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002\n\n# Dirichlet Process\u306e\u6982\u8981\n\nDirichlet Process\u306f\u3001\u30d9\u30fc\u30b9\u3068\u306a\u308b\u78ba\u7387\u5206\u5e03$G_0$\u3068\u30d1\u30e9\u30e1\u30fc\u30bf$\\alpha$\u3067\u5b9a\u7fa9\u3055\u308c\u3001$n$\u500b\u76ee\u306e\u30b5\u30f3\u30d7\u30eb$\\theta_n$\u3092\u3001\n\n```math\n\\frac{\\alpha}{\\alpha + n - 1}\n```\n\n\u306e\u78ba\u7387\u3067$G_0$\u304b\u3089\u3001\n\n```math\n\\frac{1}{\\alpha + n - 1}\n```\n\n\u306e\u78ba\u7387\u3067\u4ee5\u524d\u9078\u3093\u3060$\\theta = \\theta_i$\u3068\u540c\u3058\u5024\u3092\u9078\u3076\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u3088\u3063\u3066\u65e2\u306b\u9078\u3070\u308c\u305f\u5024\u306f\u518d\u3073\u9078\u3070\u308c\u3084\u3059\u304f\u306a\u308b\u4e0a\u3001\u591a\u304f\u9078\u3070\u308c\u3066\u3044\u308b\u5024\u306f\u9ad8\u3044\u78ba\u7387\u3067\u307e\u305f\u9078\u3070\u308c\u308b\u3068\u3044\u3046\u6027\u8cea\u304c\u751f\u307e\u308c\u308b\u305f\u3081\u306b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u73fe\u8c61\u3092\u4eba\u5de5\u7684\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u3067\u9078\u3070\u308c\u308b\u5024$\\theta_1, \\cdots, \\theta_n$\u3092\u6b63\u898f\u5206\u5e03\u306e\u5e73\u5747\u5024\u3068\u8003\u3048\u308c\u3070\u3001\u5192\u982d\u3067\u63d0\u793a\u3057\u305f\u554f\u984c\u306b\u5bfe\u3057\u3066\u9069\u7528\u3067\u304d\u307e\u3059\u3002\n\nDirichlet Process\u306b\u3088\u308a\u5206\u5e03\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3068\u898b\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u306e\u3067\u3001Dirichlet Process\u306f\u300c\u78ba\u7387\u5206\u5e03\u306e\u78ba\u7387\u5206\u5e03\u300d\u3068\u8aac\u660e\u3055\u308c\u307e\u3059\u3002\n\n# Dirichlet Process\u306e\u5b9f\u88c5\n\n\u591a\u304f\u306e\u30d9\u30a4\u30b8\u30a2\u30f3\u30fb\u30e2\u30c7\u30eb\u306e\u4f8b\u306b\u6f0f\u308c\u305a\u3001Dirichlet Process\u3082MCMC\u3084Gibbs Sampling\u3092\u4f7f\u3063\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u307e\u3059\u3002\n\u5192\u982d\u3067\u793a\u3057\u305f\u5b66\u7fd2\u30c7\u30fc\u30bf\u306f\u30013\u3064\u306e\u30ac\u30a6\u30b9\u5206\u5e03$N(-7.5, 1), N(0, 1), N(7.5, 1)$\u304b\u3089\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n```r\ny_array <- c(\n  rnorm(64, mean = -7.5, sd = 1),\n  rnorm(64, mean =    0, sd = 1),\n  rnorm(64, mean =  7.5, sd = 1)\n```\n\n## Conjugate Prior\n\n\u4e8b\u5f8c\u5206\u5e03\u3068\u4e8b\u524d\u5206\u5e03\u304c\u540c\u3058\u65cf\uff08\u6b63\u898f\u5206\u5e03\u7b49\uff09\u306b\u5c5e\u3057\u3066\u3044\u308b\u3053\u3068\u3092Conjugate\u3068\u8a00\u3044\u307e\u3059\u3002\n\u3053\u306e\u3068\u304d\u3001Gibbs Sampling\u304c\u7c21\u5358\u306b\u306a\u308b\u306e\u3067(\u53c2\u8003\u6587\u732e[1]\u53c2\u7167)\u3053\u306e\u8a18\u4e8b\u3067\u306f\u6b63\u898f\u5206\u5e03\u306eConjugate Prior\u3092\u6271\u3044\u307e\u3059\u3002\n\nDirichlet Process\u306e\u30d9\u30fc\u30b9\u5206\u5e03$G_0$\u306f\u3001\n\n```r\nG0 <- function(theta) {\n  dnorm(theta, mean = 0, sd = 1)\n}\n```\n\n\u307e\u305f\u3001$\\theta$\u306f\u76ee\u7684\u5909\u6570$y$\u3092\u751f\u6210\u3059\u308b\u6b63\u898f\u5206\u5e03\u306e\u5e73\u5747\u5024\u3068\u3057\u3001\u305d\u306e\u78ba\u7387\u5206\u5e03\u3092$F(y, \\theta)$\u3067\u8868\u3057\u307e\u3059\u3002\n\n```r\nF <- function(y, theta) {\n  dnorm(y, mean = theta, sd = 1)\n}\n```\n\n## Gibbs Sampling\n\n\u53c2\u8003\u6587\u732e[1]\u306e\u5f0f\u3092\u4f7f\u3044\u307e\u3059\u3002\n\nGibbs Sampling\u306e\u305f\u3081\u306b\u3001$i$\u756a\u76ee\u306e\u30d1\u30e9\u30e1\u30fc\u30bf$\\theta_i$\u3092\u3001$i$\u756a\u76ee\u4ee5\u5916\u306e\u30d1\u30e9\u30e1\u30fc\u30bf$\\theta_{-i}$\u3092\u56fa\u5b9a\u3057\u3066\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\n\n![flow.png](https://qiita-image-store.s3.amazonaws.com/0/67217/7abdcf83-5c1a-b81a-9822-f67eb450a2cb.png)\n\n```math\n\\theta_i \\big | \\theta_{-i}, y_i \\sim \\sum_{j \\ne i} q_{i, j} \\delta(\\theta_j) + r_i H_i\n\\tag{1}\n```\n\n\u3053\u3053\u3067$\\delta(\\cdot)$\u306f\u30c7\u30a3\u30e9\u30c3\u30af\u306e\u30c7\u30eb\u30bf\u95a2\u6570\uff08\u305f\u3060\u3057\u5b9f\u88c5\u4e0a\u306f\u76f4\u63a5\u30c7\u30eb\u30bf\u95a2\u6570\u3092\u4f7f\u3044\u307e\u305b\u3093\uff09\u3067\u3001\n\n```math\nq_{i, j} = b F(y_i, \\theta_j)\n```\n\n```math\nr_i = b \\alpha \\int F(y_i, \\theta) \\mathrm d G_0(\\theta)\n```\n\n```math\nH_i \\sim G_0(\\theta) F(y_i, \\theta)\n```\n\n\u305f\u3060\u3057$F(y, \\theta)$\u306f$P\\left(y \\big | \\theta \\right)$\u306e\u6761\u4ef6\u4ed8\u304d\u78ba\u7387\u3067\u3001$b$\u306f$\\sum_{j \\ne i} q_{i, j} + r_i = 1$\u3068\u306a\u308b\u3088\u3046\u306a\u5b9a\u6570\u3067\u3059\u3002\n\n\u4eca\u56de\u306fConjugate Prior\u3068\u3057\u3066$F(y, \\theta)$\u53ca\u3073$G_0(\\theta)$\u306f\u3044\u305a\u308c\u3082\u6b63\u898f\u5206\u5e03\u3092\u4f7f\u3046\u305f\u3081\u3001$r_i$\u306e\u7a4d\u5206\u306f\u89e3\u6790\u7684\u306b\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d[1]\u5b9a\u6570\u3068\u306a\u308a\u307e\u3059\u3002\n\n```math\nr_i = \\frac{1}{2} b \\alpha\n```\n\n\u3068\u306a\u308a\u307e\u3059\u3002\u3053\u3053\u307e\u3067\u306e\u30b3\u30fc\u30c9\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n```r\ny_i <- y_array[y_index]\n\n# theta-wise array\nq_over_b <- F(y_i, theta_array[-y_index])\n# constant\nr_over_b <- 0.5 * alpha\n\nb <- (sum(q_over_b) + r_over_b)^(-1)\nr <- r_over_b * b\nq <- q_over_b * b\n```\n\n\u6b21\u306b\u5f0f$(1)$\u306b\u57fa\u3065\u304f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3092\u3057\u307e\u3059\u3002\n\u30c7\u30eb\u30bf\u95a2\u6570\u3092\u76f4\u63a5\u8a55\u4fa1\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u4ee5\u4e0b\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u3063\u3066Dirichlet Process\u3092\u5b9f\u88c5\u3057\u307e\u3059[2]\u3002\n\nA. $r_i$\u306e\u78ba\u7387\u3067\u3001\u65b0\u305f\u306a\u70b9\u3092$H_i \\sim G_0(\\theta)F(y_i, \\theta)$\u306e\u5206\u5e03\u306b\u5f93\u3044\u30b5\u30f3\u30d7\u30eb\u3059\u308b\nB. $q_{i, j}$\u306e\u78ba\u7387\u3067\u3001$\\theta_j$\u306e\u5024\u3092\u30b5\u30f3\u30d7\u30eb\u3059\u308b\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\n```r\ndice <- runif(n = 1, min = 0, max = 1)\nif (dice < r) {\n  # sample a new point from G0 * F\n  distribution_function <- function(theta) G0(theta) * F(y_i, theta)\n  # totally empirical\n  threshold <- max(distribution_function(c(0, 10))) * 3\n  new_theta <- sample_from_distribution(\n    min = min_theta,\n    max = max_theta,\n    distribution = distribution_function,\n    threshold = threshold)\n} else {\n  # sample from existing theta with probability proportonial to q\n  new_theta <- sample(size = 1, x = theta_array[-y_index], prob = q)\n}\n```\n\nthreshold\u306fRejection Method\u306e\u305f\u3081\u306e\u3082\u306e\u3067\u96d1\u306a\u65b9\u6cd5\u3067\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u4eca\u56de\u306e\u554f\u984c\u306b\u5bfe\u3057\u3066\u306f\u5341\u5206\u306b\u5927\u304d\u3044\u306f\u305a\u3067\u3059\u3002\u826f\u3044\u8a2d\u5b9a\u306e\u65b9\u6cd5\u3092\u3054\u5b58\u77e5\u3067\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n# \u5b9f\u884c\u7d50\u679c\n\nDirichlet Process\u306e$\\alpha$\u304c\u5927\u304d\u3044\u307b\u3069\u3001\u300c\u65e2\u306b\u30b5\u30f3\u30d7\u30eb\u3055\u308c\u3066\u3044\u308b$\\theta$\u3092\u9078\u3070\u305a\u3001$G_0$\u304b\u3089\u65b0\u305f\u306a$\\theta$\u3092\u9078\u3093\u3067\u304f\u308b\u78ba\u7387\u300d\u304c\u5927\u304d\u304f\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u6027\u8cea\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001$\\alpha = (100, 1, 0.01)$\u306e\u5834\u5408\u306e\u5b9f\u884c\u7d50\u679c\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n## alpha = 100 \u306e\u5834\u5408\n\n\u5404\u30b5\u30f3\u30d7\u30eb\u6bce\u306e\u30e6\u30cb\u30fc\u30af\u306a$\\theta$\u306e\u6570\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n```r\nunique_elements <- apply(theta_samples, MARGIN = 1, FUN = function(x) x %>% unique %>% length)\nhist(unique_elements)\n```\n\n![unique_elements_100.png](https://qiita-image-store.s3.amazonaws.com/0/67217/3c8cce58-50eb-df31-130d-befa542020c3.png)\n\n$\\alpha$\u306e\u5024\u304c\u5927\u304d\u3059\u304e\u308b\u305f\u3081\u306b\u3001\u65b0\u3057\u3044\u5024\u306e$\\theta$\u304c\u9078\u3070\u308c\u308b\u78ba\u7387\u304c\u9ad8\u3059\u304e\u3066\u5b66\u7fd2\u3059\u3079\u304d\u30e2\u30c7\u30eb\u3092\u3046\u307e\u304f\u6349\u3048\u3089\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n$\\theta$\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3082\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u73fe\u8c61\u3092\u9069\u5207\u306b\u8868\u308f\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n```r\nhist(theta_samples, probability = TRUE)\n```\n\n![theta_hist_100.png](https://qiita-image-store.s3.amazonaws.com/0/67217/71507c35-e90b-7ec2-7675-cb9ccd719c28.png)\n\n\n## alpha = 1 \u306e\u5834\u5408\n\n![unique_elements_1.png](https://qiita-image-store.s3.amazonaws.com/0/67217/3fd54e43-77e2-4dc6-bd74-77a0ef605fdc.png)\n\n$\\alpha = 1$\u3068\u3057\u3066\u3082\u3001\u30e6\u30cb\u30fc\u30af\u306a$\\theta$\u306e\u6570\u306f\u307e\u3060\u591a\u3044\u3067\u3059\u3002\n\u305f\u3060\u3057$\\theta$\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u898b\u308b\u3068\u3001\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3057\u305f\u6b63\u898f\u5206\u5e03\u306e3\u3064\u306e\u5e73\u5747\u5024($\\theta = -7.5, 0, 7.5)$\u3092\u6349\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n![theta_hist_1.png](https://qiita-image-store.s3.amazonaws.com/0/67217/694d3cf2-6614-b45e-2776-7786cea2de9a.png)\n\n## alpha = 0.01 \u306e\u5834\u5408\n\n$\\alpha = 0.01$\u306e\u3068\u304d\u3001\u30e6\u30cb\u30fc\u30af\u306a$\\theta$\u306e\u6570\u304c4\u500b\u4ed8\u8fd1\u3067\u73fe\u8c61\u3092\u3088\u304f\u6349\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n![unique_elements_001.png](https://qiita-image-store.s3.amazonaws.com/0/67217/fffa4778-fe03-a5ef-574f-84c414c0a878.png)\n\n$\\theta$\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3082$\\alpha = 1$\u306e\u3068\u304d\u306b\u6bd4\u3079\u3066\u30b7\u30e3\u30fc\u30d7\u306a\u5206\u5e03\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\n\n![theta_hist_001.png](https://qiita-image-store.s3.amazonaws.com/0/67217/3e5b455c-b13e-e310-3a39-b05a94582b9a.png)\n\n# \u6240\u611f\n\n\u5f53\u521d\u76ee\u7684\u3068\u3057\u3066\u3044\u305f\u3001\u30af\u30e9\u30b9\u30bf\u6570\u306e\u81ea\u52d5\u7684\u306a\u691c\u51fa\u3092\u9054\u6210\u3057\u305f\u3068\u8a00\u3048\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n$\\alpha$\u3092\u8abf\u6574\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3082\u306e\u306e\u3001\u300c\u751f\u6210\u30ac\u30a6\u30b9\u5206\u5e03\u306f\u591a\u52063\u500b\u304f\u3089\u3044\u300d\u7a0b\u5ea6\u306e\u60c5\u5831\u304b\u3089$\\alpha$\u3092\u89e3\u6790\u306b\u5dee\u3057\u652f\u3048\u306a\u3044\u7a0b\u5ea6\u306b\u8abf\u6574\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u73fe\u5b9f\u306e\u554f\u984c\u306b\u9069\u7528\u3059\u308b\u4e0a\u3067\u6c17\u306b\u306a\u3063\u305f\u70b9\u3092\u6319\u3052\u3066\u304a\u304d\u307e\u3059\u3002\n\n- $G$\u3084$F$\u306e\u5206\u5e03\u3092\u3069\u3046\u8a2d\u8a08\u3059\u308b\u304b\uff08\u30d9\u30a4\u30b8\u30a2\u30f3\u30fb\u30e2\u30c7\u30eb\u5168\u822c\u3067\u8a00\u3048\u308b\u3053\u3068\u3060\u304c\u3001\u52d8\u304c\u5fc5\u8981\u306b\u306a\u308a\u305d\u3046\uff09\n- $\\alpha$\u3092\u3042\u308b\u7a0b\u5ea6Robust\u306b\u6c7a\u3081\u308b\u65b9\u6cd5\u306f\u3042\u308b\u306e\u3060\u308d\u3046\u304b\uff1f\n- \u4eca\u56de\u306e\u3088\u3046\u306aConjugate prior\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u3001\u3082\u3063\u3068\u9762\u5012\u306a\u5f0f\u3092\u53d6\u308a\u6271\u3046\u5fc5\u8981\u304c\u3042\u308b[1]\n- \u4eca\u56de\u306e\u5358\u7d14\u306aMCMC\u306f\u53ce\u675f\u6027\u80fd\u304c\u60aa\u3044\u70b9\u304c\u6307\u6458\u3055\u308c\u3066\u3044\u3066\u3001\u6539\u5584\u306e\u4f59\u5730\u304c\u3042\u308b[1]\n- \u3053\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\u306f\u53c2\u8003\u6587\u732e\u306b\u6319\u3052\u305f\u8907\u6570\u306e\u30bd\u30fc\u30b9\u306e\u5185\u5bb9\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u304c\u3001\u4f53\u7cfb\u7684\u306b\u8aac\u660e\u3057\u3066\u3044\u308b\u6559\u79d1\u66f8\u7b49\u3092\u3054\u5b58\u77e5\u3067\u3057\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u53c2\u8003\u6587\u732e\n\n1. Markov Chain Sampling Methods for Dirichlet Process Mixture Models : Radford M. Neal\n2. Estimating Mixture of Dirichlet Process Models : Steven N. MacEachern; Peter Muller\n1. [Dirichlet Process : A gentle tutorial (Khalid El-Arini\u6c0f\u306b\u3088\u308b\u30d7\u30ec\u30bc\u30f3\u8cc7\u6599)](https://www.cs.cmu.edu/~kbe/dp_tutorial.pdf)\n2. [Yee Whye Teh\u5148\u751f\u306b\u3088\u308bMLSS\u306e\u8b1b\u7fa9](http://videolectures.net/mlss07_teh_dp/#)\n\n# (\u53c2\u8003)\u5168\u30b3\u30fc\u30c9\n\n```r\nlibrary(magrittr)\n\nF <- function(y, theta) {\n  dnorm(y, mean = theta, sd = 1)\n}\n\nG0 <- function(theta) {\n  dnorm(theta, mean = 0, sd = 1)\n}\n\nsample_from_distribution <- function(min, max, distribution, threshold) {\n  while (TRUE) {\n    x <- runif(n = 1, min = min, max = max)\n    dice <- runif(n = 1, min = 0, max = 1)\n    if (dice < distribution(x) / threshold) {\n      return(x)\n    }\n  }\n}\n\nalpha <- 1\nnum_iterations <- 4096\nmin_theta <- -10\nmax_theta <-  10\n\ny_array <- c(\n  rnorm(64, mean = -7.5, sd = 1),\n  rnorm(64, mean =    0, sd = 1),\n  rnorm(64, mean =  7.5, sd = 1)\n)\nnum_samples <- length(y_array)\ntheta_array <- rep(0, num_samples)\n\ntheta_samples <- matrix(nrow = num_iterations, ncol = num_samples)\n  \nfor (iteration in 1:num_iterations) {\n  for (y_index in 1:num_samples) {\n    y_i <- y_array[y_index]\n    \n    # theta-wise array\n    q_over_b <- F(y_i, theta_array[-y_index])\n    # constant\n    r_over_b <- 0.5 * alpha\n    \n    b <- (sum(q_over_b) + r_over_b)^(-1)\n    r <- r_over_b * b\n    q <- q_over_b * b\n    \n    dice <- runif(n = 1, min = 0, max = 1)\n    if (dice < r) {\n      # sample a new point from G0 * F\n      distribution_function <- function(theta) G0(theta) * F(y_i, theta)\n      # totally empirical\n      threshold <- max(distribution_function(c(0, 10))) * 3\n      new_theta <- sample_from_distribution(\n        min = min_theta,\n        max = max_theta,\n        distribution = distribution_function,\n        threshold = threshold)\n    } else {\n      # sample from existing theta with probability proportonial to q\n      new_theta <- sample(size = 1, x = theta_array[-y_index], prob = q)\n    }\n    theta_array[y_index] <- new_theta\n    theta_samples[iteration, y_index] <- new_theta\n  }\n}\n    \nnull_axis <- rep(0, y_array %>% length)\nplot(y_array, null_axis)\nhist(y_array)\nhist(theta_samples, probability = TRUE)\n\n# histogram of unique elements\nunique_elements <- apply(theta_samples, MARGIN = 1, FUN = function(x) x %>% unique %>% length)\nhist(unique_elements)\n```\n", "tags": ["MachineLearning", "\u6a5f\u68b0\u5b66\u7fd2", "R", "\u30c7\u30fc\u30bf\u5206\u6790", "\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0"]}