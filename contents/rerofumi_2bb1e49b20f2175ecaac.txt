{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nGo\u8a00\u8a9e\u306e cgo \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u4f7f\u3063\u3066 libmecab \u3092\u547c\u3073\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\u73cd\u3057\u3044\u7269\u3067\u306f\u7121\u304f\u3080\u3057\u308d\u826f\u304f\u898b\u304b\u3051\u308b\u306e\u3067\u3059\u304c\u3001\u624b\u7fd2\u3044\u3067\u81ea\u4f5c\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4ed6\u306f mecab_nbest_sparse_tostr() \u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u304c\u591a\u304f\u3001\u305d\u308c\u3067\u306f\u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u3067\u3057\u304b\u4f7f\u3048\u306a\u3044\u7269\u306b\u306a\u308b\u305f\u3081\u3001mecab_lattice_tostr() \u3092\u4f7f\u3046\u69d8\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5f15\u3063\u304b\u304b\u3063\u305f\u3068\u3053\u308d\n\nimport \"C\" \u306f include \u76f4\u4e0b\u306b\u66f8\u304f\n// #include <mecab.h>\n// #include <stdio.h>\nimport \"C\"\nimport \u3068 include \u306e\u9593\u306b\u7a7a\u6539\u884c\u631f\u3080\u3068\u52d5\u304b\u306a\u3044\u305d\u3046\u3067\u3059\u3002\n\u305a\u3044\u3076\u3093\u306a\u3084\u3093\u3060\u3002\n\nC \u306e\u30dd\u30a4\u30f3\u30bf\u623b\u308a\u306e\u7d0d\u3081\u65b9\u304c\u826f\u304f\u308f\u304b\u3063\u3066\u306a\u3044\n`hoge := C.moga()'\n\u3068 := \u3067\u623b\u308a\u5024\u3092\u53d7\u3051\u53d6\u308d\u3046\u3068\u3057\u3066\u4e0a\u624b\u304f\u3044\u304b\u306a\u3044\u6642\u304c\u3042\u3063\u305f\u306e\u3067\u3059\u304c\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3068\u304d\u304c\u3042\u308a\u3001\u305d\u306e\u3068\u304d\u3069\u3046\u3044\u3046\u578b\u306a\u306e\u304b\u826f\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u5358\u306b\u79c1\u306e\u7d4c\u9a13\u4e0d\u8db3\u3002\n\n\u4f7f\u3044\u65b9\ngo install bitbucket.org/rerofumi/mecab\n\u3067\u3069\u30fc\u305e\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nmecab-bind.go\npackage mecab\n\n// #cgo CFLAGS: -I/usr/local/include\n// #cgo LDFLAGS: -L/usr/local/lib -lmecab -lstdc++\n// #include <mecab.h>\n// #include <stdio.h>\nimport \"C\"\n\nimport \"strings\"\n\n/* --------------------------------- */\n/* --- error define                  */\n/* --------------------------------- */\ntype mecabError struct {\n    message string\n}\n\nfunc (err mecabError) Error() string {\n    return err.message\n}\n\n/* --------------------------------- */\n/* --- mecab parse                   */\n/* --------------------------------- */\nfunc Parse(line string) (result []string, err error) {\n    var parse []string\n    sentence := C.CString(line)\n\n    model := C.mecab_model_new2(C.CString(\"\"))\n    if model == nil {\n        return parse, mecabError{\"mecab model is not created.\"}\n    }\n    mecab := C.mecab_model_new_tagger(model)\n    if mecab == nil {\n        return parse, mecabError{\"mecab tagger is not created.\"}\n    }\n    lattice := C.mecab_model_new_lattice(model)\n    if lattice == nil {\n        return parse, mecabError{\"mecab lattice is not created.\"}\n    }\n\n    C.mecab_lattice_set_sentence(lattice, sentence)\n    C.mecab_parse_lattice(mecab, lattice)\n\n    lines := strings.Split(C.GoString(C.mecab_lattice_tostr(lattice)), \"\\n\")\n\n    for _, item := range lines {\n        if strings.Index(item, \"EOS\") != 0  {\n            if len(item) > 1 {\n                parse = append(parse, item)\n            }\n        }\n    }\n\n    C.mecab_destroy(mecab)\n    C.mecab_lattice_destroy(lattice)\n    C.mecab_model_destroy(model)\n\n    return parse, nil\n}\n\n\n\n\u4fee\u6b63\u5c65\u6b74\n2014/08/12 - \u78ba\u4fdd\u3057\u305f mecab \u69cb\u9020\u4f53\u306e\u89e3\u653e\u3092\u5fd8\u308c\u3066\u3044\u305f\u306e\u3067\u8ffd\u52a0\u3001\u30e1\u30e2\u30ea\u98df\u3044\u5c3d\u304f\u3057\u3066\u843d\u3061\u305f\u3068\u3053\u308d\u3067\u6c17\u304c\u3064\u3044\u305f (;\u00b4 \u0414`)\n\u73fe\u72b6\u3067\u3082\u30a8\u30e9\u30fc\u30ea\u30bf\u30fc\u30f3\u6642\u306b\u30b4\u30df\u304c\u6b8b\u308a\u305d\u3046\u3067\u306f\u3042\u308b\u3002\n# \u6982\u8981\nGo\u8a00\u8a9e\u306e cgo \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u4f7f\u3063\u3066 libmecab \u3092\u547c\u3073\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\n\u73cd\u3057\u3044\u7269\u3067\u306f\u7121\u304f\u3080\u3057\u308d\u826f\u304f\u898b\u304b\u3051\u308b\u306e\u3067\u3059\u304c\u3001\u624b\u7fd2\u3044\u3067\u81ea\u4f5c\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4ed6\u306f mecab_nbest_sparse_tostr() \u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u304c\u591a\u304f\u3001\u305d\u308c\u3067\u306f\u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u3067\u3057\u304b\u4f7f\u3048\u306a\u3044\u7269\u306b\u306a\u308b\u305f\u3081\u3001mecab_lattice_tostr() \u3092\u4f7f\u3046\u69d8\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u5f15\u3063\u304b\u304b\u3063\u305f\u3068\u3053\u308d\n## import \"C\" \u306f include \u76f4\u4e0b\u306b\u66f8\u304f\n`// #include <mecab.h>\n// #include <stdio.h>\nimport \"C\"`\nimport \u3068 include \u306e\u9593\u306b\u7a7a\u6539\u884c\u631f\u3080\u3068\u52d5\u304b\u306a\u3044\u305d\u3046\u3067\u3059\u3002\n\u305a\u3044\u3076\u3093\u306a\u3084\u3093\u3060\u3002\n\n## C \u306e\u30dd\u30a4\u30f3\u30bf\u623b\u308a\u306e\u7d0d\u3081\u65b9\u304c\u826f\u304f\u308f\u304b\u3063\u3066\u306a\u3044\n`hoge := C.moga()'\n\u3068 := \u3067\u623b\u308a\u5024\u3092\u53d7\u3051\u53d6\u308d\u3046\u3068\u3057\u3066\u4e0a\u624b\u304f\u3044\u304b\u306a\u3044\u6642\u304c\u3042\u3063\u305f\u306e\u3067\u3059\u304c\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3068\u304d\u304c\u3042\u308a\u3001\u305d\u306e\u3068\u304d\u3069\u3046\u3044\u3046\u578b\u306a\u306e\u304b\u826f\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u5358\u306b\u79c1\u306e\u7d4c\u9a13\u4e0d\u8db3\u3002\n\n# \u4f7f\u3044\u65b9\n`go install bitbucket.org/rerofumi/mecab`\n\u3067\u3069\u30fc\u305e\u3002\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n```mecab-bind.go\npackage mecab\n\n// #cgo CFLAGS: -I/usr/local/include\n// #cgo LDFLAGS: -L/usr/local/lib -lmecab -lstdc++\n// #include <mecab.h>\n// #include <stdio.h>\nimport \"C\"\n\nimport \"strings\"\n\n/* --------------------------------- */\n/* --- error define                  */\n/* --------------------------------- */\ntype mecabError struct {\n\tmessage string\n}\n\nfunc (err mecabError) Error() string {\n\treturn err.message\n}\n\n/* --------------------------------- */\n/* --- mecab parse                   */\n/* --------------------------------- */\nfunc Parse(line string) (result []string, err error) {\n\tvar parse []string\n\tsentence := C.CString(line)\n\n\tmodel := C.mecab_model_new2(C.CString(\"\"))\n\tif model == nil {\n\t\treturn parse, mecabError{\"mecab model is not created.\"}\n\t}\n\tmecab := C.mecab_model_new_tagger(model)\n\tif mecab == nil {\n\t\treturn parse, mecabError{\"mecab tagger is not created.\"}\n\t}\n\tlattice := C.mecab_model_new_lattice(model)\n\tif lattice == nil {\n\t\treturn parse, mecabError{\"mecab lattice is not created.\"}\n\t}\n\n\tC.mecab_lattice_set_sentence(lattice, sentence)\n\tC.mecab_parse_lattice(mecab, lattice)\n\t\n\tlines := strings.Split(C.GoString(C.mecab_lattice_tostr(lattice)), \"\\n\")\n\n\tfor _, item := range lines {\n\t\tif strings.Index(item, \"EOS\") != 0  {\n\t\t\tif len(item) > 1 {\n\t\t\t\tparse = append(parse, item)\n\t\t\t}\n\t\t}\n\t}\n\n\tC.mecab_destroy(mecab)\n\tC.mecab_lattice_destroy(lattice)\n\tC.mecab_model_destroy(model)\n\n\treturn parse, nil\n}\n```\n\n# \u4fee\u6b63\u5c65\u6b74\n2014/08/12 - \u78ba\u4fdd\u3057\u305f mecab \u69cb\u9020\u4f53\u306e\u89e3\u653e\u3092\u5fd8\u308c\u3066\u3044\u305f\u306e\u3067\u8ffd\u52a0\u3001\u30e1\u30e2\u30ea\u98df\u3044\u5c3d\u304f\u3057\u3066\u843d\u3061\u305f\u3068\u3053\u308d\u3067\u6c17\u304c\u3064\u3044\u305f (;\u00b4 \u0414`)\n\u73fe\u72b6\u3067\u3082\u30a8\u30e9\u30fc\u30ea\u30bf\u30fc\u30f3\u6642\u306b\u30b4\u30df\u304c\u6b8b\u308a\u305d\u3046\u3067\u306f\u3042\u308b\u3002\n", "tags": ["Go", "golang", "mecab"]}