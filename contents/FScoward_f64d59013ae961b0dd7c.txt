{"context": " More than 1 year has passed since last update.\n\n\u4f7f\u7528\u3057\u305f\u3082\u306e\n\n\n\u30e1\u30fc\u30eb\u9001\u4fe1\n\npostal\n\n\n\n\u30a2\u30cb\u30e1\u306e\u653e\u9001\u60c5\u5831\n\n\u30a2\u30cb\u30e1\u30de\u30c3\u30d7\n\n\n\njson \u30d1\u30fc\u30b9\n\ndata.json\n\n\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nproject.clj\n(defproject animemap-clj \"0.1.0-SNAPSHOT\"\n  :description \"FIXME: write description\"\n  :url \"http://example.com/FIXME\"\n  :license {:name \"Eclipse Public License\"\n            :url \"http://www.eclipse.org/legal/epl-v10.html\"}\n  :dependencies [[org.clojure/clojure \"1.6.0\"]\n                 [org.clojure/data.json \"0.2.5\"]\n                 [com.draines/postal \"1.11.1\"]]\n  :main animemap-clj.core)\n\n\n\ncore.clj\n\n(ns animemap-clj.core\n  (:require [clojure.data.json :as json]\n            [postal.core :as postal]))\n\n(def anime (slurp \"http://animemap.net/api/table/tokyo.json\"))\n(def anime-map (:item (:response (json/read-str anime :key-fn keyword))))\n(def today (filter #(= (:today %) \"1\") anime-map))\n\n(defn make-email-txt [source]\n  (str \"[title] \" (:title source)\n       \" [time] \" (:time source)\n       \"\\n\"))\n\n(defn send-email [subject txt]\n  (postal/send-message {:host \"smtp.gmail.com\"\n                 :user \"<username>\"\n                 :pass \"<password>\"\n                 :ssl :yes}\n                {:from \"<from address>\"\n                 :to \"<to address>\"\n                 :subject subject\n                 :body txt})\n  {:code 0, :error :SUCCESS, :message \"message sent\"})\n\n(def body (map #(make-email-txt %) today))\n\n(defn -main []\n  (send-email \"\u4eca\u65e5\u306e\u30a2\u30cb\u30e1\" (apply str body)))\n\n\n\n\n\u611f\u60f3\ndata.json \u3092\u4f7f\u3048\u3070\u7c21\u5358\u306bjson\u306e\u5185\u5bb9\u3092\u53d6\u5f97\u3067\u304d\u308b\u3057\u3001\u30e1\u30fc\u30eb\u9001\u4fe1\u3082postal\u3067\u7c21\u5358\u306b\u51fa\u6765\u3066\u3044\u3044\u3067\u3059\u306d\u3002\n# \u4f7f\u7528\u3057\u305f\u3082\u306e\n- \u30e1\u30fc\u30eb\u9001\u4fe1\n    - [postal](https://github.com/drewr/postal)\n\n- \u30a2\u30cb\u30e1\u306e\u653e\u9001\u60c5\u5831\n    - [\u30a2\u30cb\u30e1\u30de\u30c3\u30d7](http://animemap.net/pages/api/)\n\n- json \u30d1\u30fc\u30b9\n    - [data.json](https://github.com/clojure/data.json)\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n```clj:project.clj\n(defproject animemap-clj \"0.1.0-SNAPSHOT\"\n  :description \"FIXME: write description\"\n  :url \"http://example.com/FIXME\"\n  :license {:name \"Eclipse Public License\"\n            :url \"http://www.eclipse.org/legal/epl-v10.html\"}\n  :dependencies [[org.clojure/clojure \"1.6.0\"]\n                 [org.clojure/data.json \"0.2.5\"]\n                 [com.draines/postal \"1.11.1\"]]\n  :main animemap-clj.core)\n```\n\n```clj:core.clj\n\n(ns animemap-clj.core\n  (:require [clojure.data.json :as json]\n            [postal.core :as postal]))\n\n(def anime (slurp \"http://animemap.net/api/table/tokyo.json\"))\n(def anime-map (:item (:response (json/read-str anime :key-fn keyword))))\n(def today (filter #(= (:today %) \"1\") anime-map))\n\n(defn make-email-txt [source]\n  (str \"[title] \" (:title source)\n       \" [time] \" (:time source)\n       \"\\n\"))\n\n(defn send-email [subject txt]\n  (postal/send-message {:host \"smtp.gmail.com\"\n                 :user \"<username>\"\n                 :pass \"<password>\"\n                 :ssl :yes}\n                {:from \"<from address>\"\n                 :to \"<to address>\"\n                 :subject subject\n                 :body txt})\n  {:code 0, :error :SUCCESS, :message \"message sent\"})\n\n(def body (map #(make-email-txt %) today))\n\n(defn -main []\n  (send-email \"\u4eca\u65e5\u306e\u30a2\u30cb\u30e1\" (apply str body)))\n\n```\n\n# \u611f\u60f3\n\ndata.json \u3092\u4f7f\u3048\u3070\u7c21\u5358\u306bjson\u306e\u5185\u5bb9\u3092\u53d6\u5f97\u3067\u304d\u308b\u3057\u3001\u30e1\u30fc\u30eb\u9001\u4fe1\u3082postal\u3067\u7c21\u5358\u306b\u51fa\u6765\u3066\u3044\u3044\u3067\u3059\u306d\u3002\n", "tags": ["Clojure1.6.0"]}