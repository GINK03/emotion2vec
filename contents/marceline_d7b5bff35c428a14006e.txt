{"context": " More than 1 year has passed since last update.\n\n\u74b0\u5883\n\nOpenVSwitch version 2.0.2\nRyu version 3.29\n\n\u30a2\u30af\u30bb\u30b9\u5148\u306e\u30b5\u30fc\u30d0\u7fa4\u306f\u5168\u3066Docker\u30b3\u30f3\u30c6\u30ca\u3068\u3057\u3066\u5efa\u3066\u3066\u307e\u3059\u3002\n\u666e\u901a\u306b\u30b3\u30f3\u30c6\u30ca\u3068OVS\u306e\u30d6\u30ea\u30c3\u30b8\u304f\u3063\u4ed8\u3051\u3088\u3046\u3068\u3059\u308b\u3068\u7d50\u69cb\u5927\u5909\u306a\u3093\u3067\u3059\u304c\u3001socketplane\u3092\u4f7f\u3046\u3068\u697d\u306b\u3067\u304d\u307e\u3057\u305f\u3002\n(socketplane\u306b\u3064\u3044\u3066\u306f\u8a18\u4e8b\u3084\u89e3\u8aac\u304c\u5168\u7136\u30cd\u30c3\u30c8\u4e0a\u306b\u306a\u3044\u306e\u3067\u3044\u3064\u304b\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002)\n\n\u7c21\u5358\u306a\u56f3\n(\u3082\u3063\u3068\u4e0a\u624b\u304f\u66f8\u304d\u305f\u3044\u2026)\n\n\n\u9759\u7684\u306a\u7d4c\u8def\u5236\u5fa1\n\u975e\u5e38\u306b\u7c21\u5358\u306a\u5834\u5408\u306b\u3064\u3044\u3066\u8003\u3048\u307e\u3059\u3002\n\u4eca\u56de\u4f8b\u306b\u6319\u3052\u3066\u3044\u308b\u306e\u306f\u3001IP\u30a2\u30c9\u30ec\u30b9\u306b\u3088\u308b\u5236\u5fa1\u3068TCP\u30dd\u30fc\u30c8\u756a\u53f7\u306b\u3088\u308b\u5236\u5fa1\u3067\u3059\u3002\n\u5358\u7d14\u306a\u3053\u3068\u3067\u3059\u304c\u3044\u304f\u3064\u304b\u6ce8\u610f\u70b9\u304c\u3042\u308b\u306e\u3067\u30e1\u30e2\u3002\n\n\u306f\u3058\u3081\u306b\n\u57fa\u672c\u7684\u306bRyu\u306b\u5165\u3063\u3066\u3044\u308bsimple_switch_13.py\u3092\u6539\u826f\u3057\u3066\u3044\u307e\u3059\u3002\n\u7279\u8a18\u3057\u3066\u3044\u306a\u3044\u3068\u3053\u308d\u306f\u305d\u306e\u307e\u307e\u6d41\u7528\u3057\u3066\u308b\u306e\u3067\u3001simple_switch_13.py\u306b\u8ffd\u8a18\u3059\u308c\u3070\u554f\u984c\u306a\u3044\u306f\u305a\u3067\u3059\u3002\n\n\u30d5\u30ed\u30fc\u30c6\u30fc\u30d6\u30eb\u3078\u306e\u8ffd\u52a0\ntable_mod(self, datapath):\u3068\u3044\u3046\u95a2\u6570\u3092\u7528\u610f\u3057\u307e\u3059\u3002(\u540d\u524d\u306f\u306a\u3093\u3067\u3082\u3044\u3044\u3067\u3059\u304c)\n\u3053\u308c\u306f\u3001class SimpleSwitch13(app_manager.RyuApp):\u306e\u4e2d\u306edef switch_features_handler(self, ev):\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\nswitch.py\nclass SimpleSwitch13(app_manager.RyuApp):\n\n             #\u301c\u4e2d\u7565\u301c\n\n    @set_ev_cls(ofp_event.EventOFPSwitchFeatures, CONFIG_DISPATCHER)\n    def switch_features_handler(self, ev):\n        datapath = ev.msg.datapath\n        ofproto = datapath.ofproto\n        parser = datapath.ofproto_parser\n\n        self.table_mod(datapath) # \u8ffd\u8a18\n\n    def add_flow(self, datapath, priority, match, actions, buffer_id=None):\n\n             #\u301c\u4e2d\u7565\u301c\n\n    # add_flow\u306e\u4e0b\u306b\u8ffd\u52a0\n    def table_mod(self, datapath):\n        ofproto = datapath.ofproto\n        parser = datapath.ofproto_parser\n\n        #\u3053\u3053\u306b\u8ffd\u52a0\u3057\u305f\u3044\u30eb\u30fc\u30eb\u3092\u66f8\u304d\u307e\u3059\n\n\n\n\nIP\u30a2\u30c9\u30ec\u30b9\u306b\u3088\u308b\u5236\u5fa1\n10.1.0.2\u5b9b\u306e\u30d1\u30b1\u30c3\u30c8\u3092\u5168\u306610.1.0.3\u306b\u9001\u308b\u3068\u3057\u307e\u3059\u3002\n\nswitch.py\n    def table_mod(self, datapath):\n        ofproto = datapath.ofproto\n        parser = datapath.ofproto_parser\n\n        # IPaddr Entry\n        match = parser.OFPMatch(in_port=1,eth_type=0x0800,ipv4_dst='10.1.0.2')\n        actions = [parser.OFPActionSetField(eth_dst='02:42:0a:01:00:03'),parser.OFPActionSetField(ipv4_dst='10.1.0.3'),parser.OFPActionOutput(3,ofproto.OFPCML_NO_BUFFER)]\n        self.add_flow(datapath, 2, match, actions)\n\n        match = parser.OFPMatch(in_port=3,eth_type=0x0800,ipv4_dst='10.1.0.1')\n        actions = [parser.OFPActionSetField(ipv4_src='10.1.0.2'),parser.OFPActionOutput(1,ofproto.OFPCML_NO_BUFFER)]\n        self.add_flow(datapath, 2, match, actions)\n\n\n\nL3\u3092\u66f8\u304d\u63db\u3048\u308b\u306e\u304c\u30e1\u30a4\u30f3\u3067\u3059\u304c\u3001parser.OFPActionSetField(eth_dst='02:42:0a:01:00:03')\u306b\u3088\u3063\u3066L2\u306e\u5b9b\u5148\u3082\u66f8\u304d\u63db\u3048\u3066\u304a\u304b\u306a\u3044\u3068\u5c4a\u304d\u307e\u305b\u3093\u3002\n\u8fd4\u3063\u3066\u304f\u308b\u30d1\u30b1\u30c3\u30c8\u306e\u9001\u4fe1\u5143\u30a2\u30c9\u30ec\u30b9\u3082ipv4_src='10.1.0.2'\u3068\u3057\u3066\u66f8\u304d\u63db\u3048\u306a\u3044\u3068L3\u901a\u4fe1\u306f\u51fa\u6765\u307e\u305b\u3093\u3002(\u9001\u4fe1\u5143\u3092\u66f8\u304d\u63db\u3048\u306a\u304f\u3066\u3082ping\u306f\u901a\u308b\u306e\u3067\u7d50\u69cb\u60a9\u3093\u3060)\n\u307e\u305f\u3001\u8fd4\u308a\u306fparser.OFPActionOutput(1,ofproto.OFPCML_NO_BUFFER)\u306b\u3088\u308a\u554f\u7b54\u7121\u7528\u3067OVS\u306e1\u756a\u30dd\u30fc\u30c8\u304b\u3089\u51fa\u3057\u3066\u307e\u3059\u304c\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306b\u9001\u3063\u3066\u3082\u554f\u984c\u306a\u3044\u3067\u3059\u3002\u6b21\u306eTCP\u30dd\u30fc\u30c8\u306e\u4f8b\u3067\u306f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306b\u9001\u3063\u3066\u3044\u307e\u3059\n\u203b IPv4\u306b\u3064\u3044\u3066\u306ematch\u3092\u3057\u305f\u3044\u5834\u5408\u306feth_type=0x0800\u3092\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n( \u30d5\u30ec\u30fc\u30e0\u30bf\u30a4\u30d7\u306b\u3064\u3044\u3066 \u53c2\u8003: Ethernet\u30bf\u30a4\u30d7\u756a\u53f7 )\n\n\u52d5\u4f5c\n$ curl 10.1.0.2\nHello Container.\n( 10.1.0.3 / web container )\n\nApache\u304c\u52d5\u3044\u3066\u308b\u306e\u306f10.1.0.3\u306e\u30b3\u30f3\u30c6\u30ca\u3060\u3051\u306a\u306e\u3067\u3001curl 10.1.0.2\u304c10.1.0.3\u5b9b\u306b\u9001\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u30b9\u30a4\u30c3\u30c1\u8d77\u52d5\u3057\u3066\u306a\u3044\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002(\u5f53\u305f\u308a\u524d\u3067\u3059\u304c)\n$ curl 10.1.0.2\ncurl: (7) Failed to connect to 10.1.0.2 port 80: \u63a5\u7d9a\u3092\u62d2\u5426\u3055\u308c\u307e\u3057\u305f\n\n\nTCP\u30dd\u30fc\u30c8\u756a\u53f7\u306b\u3088\u308b\u5236\u5fa1\n23\u756a\u30dd\u30fc\u30c8\u5b9b\u3060\u3063\u305f\u3082\u306e\u309280\u756a\u5b9b\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\nport.py\n    def table_mod(self, datapath):\n        ofproto = datapath.ofproto\n        parser = datapath.ofproto_parser\n\n        # TCP_Port Entry\n        match = parser.OFPMatch(in_port=1,eth_type=0x0800,ip_proto=socket.IPPROTO_TCP, tcp_dst=23)\n        actions = [parser.OFPActionSetField(tcp_dst=80),parser.OFPActionOutput(ofproto.OFPP_CONTROLLER,ofproto.OFPCML_NO_BUFFER)]\n        self.add_flow(datapath, 2, match, actions)\n\n        match = parser.OFPMatch(eth_type=0x0800,ip_proto=socket.IPPROTO_TCP,tcp_src=80)\n        actions = [parser.OFPActionSetField(tcp_src=23),parser.OFPActionOutput(ofproto.OFPP_CONTROLLER,ofproto.OFPCML_NO_BUFFER)]\n        self.add_flow(datapath, 2, match, actions)\n\n\n\nsimple_switch_13.py\u306e\u5b9f\u88c5\u3067\u306f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u304cARP\u30c6\u30fc\u30d6\u30eb\u3068MAC\u30a2\u30c9\u30ec\u30b9\u30c6\u30fc\u30d6\u30eb(\u306e\u5f79\u5272\u3092\u3059\u308b\u3082\u306e)\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u30d5\u30ed\u30fc\u30c6\u30fc\u30d6\u30eb\u3067TCP\u306e\u5b9b\u5148\u3068\u9001\u4fe1\u5143\u3092\u66f8\u304d\u63db\u3048\u305f\u3089\u305d\u306e\u307e\u307e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306b\u9001\u308a\u3001\u305d\u306e\u5f8c\u306e\u7d4c\u8def\u9078\u629e\u306f\u305d\u3063\u3061\u306b\u4efb\u305b\u3066\u307e\u3059\u3002\nOpenFlow1.3\u3067\u306f\u8907\u6570\u500b\u306e\u30d5\u30ed\u30fc\u30c6\u30fc\u30d6\u30eb\u3092\u5229\u7528\u3057\u305f\u5236\u5fa1\u3082\u3067\u304d\u308b\u306e\u3067\u3001ARP\u30c6\u30fc\u30d6\u30eb\u3068MAC\u30a2\u30c9\u30ec\u30b9\u30c6\u30fc\u30d6\u30eb\u3092\u6301\u3063\u305f\u30d5\u30ed\u30fc\u30c6\u30fc\u30d6\u30eb\u3092\u5225\u3067\u7528\u610f\u3057\u3066\u3001\u66f8\u304d\u63db\u3048\u305f\u5f8c\u306b\u305d\u3061\u3089\u306b\u98db\u3070\u3059\u307b\u3046\u304c\u30ed\u30b9\u306f\u5c11\u306a\u304f\u306a\u308a\u305d\u3046\u3067\u3059\u3002\n\u203b \u5148\u7a0b\u540c\u69d8\u3067\u3059\u304c\u3001TCP\u306b\u3064\u3044\u3066\u306ematch\u3092\u3057\u305f\u3044\u5834\u5408\u306feth_type=0x0800\u306b\u52a0\u3048\u3066ip_proto=socket.IPPROTO_TCP\u3092\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u52d5\u4f5c\n$ telnet 10.1.0.3 23\nTrying 10.1.0.3...\nConnected to 10.1.0.3.\nEscape character is '^]'.\nquit\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>501 Not Implemented</title>\n</head><body>\n<h1>Not Implemented</h1>\n<p>quit to /index.html not supported.<br />\n</p>\n<hr>\n<address>Apache/2.4.7 (Ubuntu) Server at 127.0.0.1 Port 80</address>\n</body></html>\nConnection closed by foreign host.\n\n23\u756a\u306btelnet\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304cHTTP\u306e\u5185\u5bb9\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\u4ee5\u4e0a2\u3064\u3092\u7d44\u307f\u5408\u308f\u305b\u308c\u3070(\u9759\u7684\u3067\u306f\u3042\u308a\u307e\u3059\u304c)\u305d\u308c\u306a\u308a\u306b\u67d4\u8edf\u306a\u7d4c\u8def\u5236\u5fa1\u304c\u51fa\u6765\u305d\u3046\u3067\u3059\u3002\n\u5225\u306e\u65b9\u6cd5\u3084\u52d5\u7684\u306a\u7d4c\u8def\u5236\u5fa1\u306b\u3064\u3044\u3066\u306f\u307e\u305f\u4eca\u5ea6\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u53c2\u8003\n\n\u30b9\u30a4\u30c3\u30c1\u30f3\u30b0\u30cf\u30d6 \u2014 Ryubook 1.0 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nRyu\u306e\u30de\u30c3\u30c1\u51e6\u7406(OFPMatch)\n\n# \u74b0\u5883\n* OpenVSwitch version 2.0.2\n* Ryu version 3.29\n\n\u30a2\u30af\u30bb\u30b9\u5148\u306e\u30b5\u30fc\u30d0\u7fa4\u306f\u5168\u3066Docker\u30b3\u30f3\u30c6\u30ca\u3068\u3057\u3066\u5efa\u3066\u3066\u307e\u3059\u3002\n\u666e\u901a\u306b\u30b3\u30f3\u30c6\u30ca\u3068OVS\u306e\u30d6\u30ea\u30c3\u30b8\u304f\u3063\u4ed8\u3051\u3088\u3046\u3068\u3059\u308b\u3068\u7d50\u69cb\u5927\u5909\u306a\u3093\u3067\u3059\u304c\u3001[socketplane](https://github.com/socketplane/socketplane)\u3092\u4f7f\u3046\u3068\u697d\u306b\u3067\u304d\u307e\u3057\u305f\u3002\n(socketplane\u306b\u3064\u3044\u3066\u306f\u8a18\u4e8b\u3084\u89e3\u8aac\u304c\u5168\u7136\u30cd\u30c3\u30c8\u4e0a\u306b\u306a\u3044\u306e\u3067\u3044\u3064\u304b\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002)\n\n## \u7c21\u5358\u306a\u56f3\n(\u3082\u3063\u3068\u4e0a\u624b\u304f\u66f8\u304d\u305f\u3044\u2026)\n![\u30b9\u30e9\u30a4\u30c8\u30992.jpg](https://qiita-image-store.s3.amazonaws.com/0/93740/6e20c454-e730-3ed4-42ec-1a3d0fa19499.jpeg)\n\n# \u9759\u7684\u306a\u7d4c\u8def\u5236\u5fa1\n\u975e\u5e38\u306b\u7c21\u5358\u306a\u5834\u5408\u306b\u3064\u3044\u3066\u8003\u3048\u307e\u3059\u3002\n\u4eca\u56de\u4f8b\u306b\u6319\u3052\u3066\u3044\u308b\u306e\u306f\u3001IP\u30a2\u30c9\u30ec\u30b9\u306b\u3088\u308b\u5236\u5fa1\u3068TCP\u30dd\u30fc\u30c8\u756a\u53f7\u306b\u3088\u308b\u5236\u5fa1\u3067\u3059\u3002\n\u5358\u7d14\u306a\u3053\u3068\u3067\u3059\u304c\u3044\u304f\u3064\u304b\u6ce8\u610f\u70b9\u304c\u3042\u308b\u306e\u3067\u30e1\u30e2\u3002\n\n## \u306f\u3058\u3081\u306b\n\u57fa\u672c\u7684\u306bRyu\u306b\u5165\u3063\u3066\u3044\u308b`simple_switch_13.py`\u3092\u6539\u826f\u3057\u3066\u3044\u307e\u3059\u3002\n\u7279\u8a18\u3057\u3066\u3044\u306a\u3044\u3068\u3053\u308d\u306f\u305d\u306e\u307e\u307e\u6d41\u7528\u3057\u3066\u308b\u306e\u3067\u3001`simple_switch_13.py`\u306b\u8ffd\u8a18\u3059\u308c\u3070\u554f\u984c\u306a\u3044\u306f\u305a\u3067\u3059\u3002\n\n## \u30d5\u30ed\u30fc\u30c6\u30fc\u30d6\u30eb\u3078\u306e\u8ffd\u52a0\n`table_mod(self, datapath):`\u3068\u3044\u3046\u95a2\u6570\u3092\u7528\u610f\u3057\u307e\u3059\u3002(\u540d\u524d\u306f\u306a\u3093\u3067\u3082\u3044\u3044\u3067\u3059\u304c)\n\u3053\u308c\u306f\u3001`class SimpleSwitch13(app_manager.RyuApp):`\u306e\u4e2d\u306e`def switch_features_handler(self, ev):`\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n\n```py:switch.py\nclass SimpleSwitch13(app_manager.RyuApp):\n\n             #\u301c\u4e2d\u7565\u301c\n\n    @set_ev_cls(ofp_event.EventOFPSwitchFeatures, CONFIG_DISPATCHER)\n    def switch_features_handler(self, ev):\n        datapath = ev.msg.datapath\n        ofproto = datapath.ofproto\n        parser = datapath.ofproto_parser\n\n        self.table_mod(datapath) # \u8ffd\u8a18\n\n    def add_flow(self, datapath, priority, match, actions, buffer_id=None):\n\n             #\u301c\u4e2d\u7565\u301c\n\n    # add_flow\u306e\u4e0b\u306b\u8ffd\u52a0\n    def table_mod(self, datapath):\n        ofproto = datapath.ofproto\n        parser = datapath.ofproto_parser\n\n        #\u3053\u3053\u306b\u8ffd\u52a0\u3057\u305f\u3044\u30eb\u30fc\u30eb\u3092\u66f8\u304d\u307e\u3059\n\n```\n\n## IP\u30a2\u30c9\u30ec\u30b9\u306b\u3088\u308b\u5236\u5fa1\n10.1.0.2\u5b9b\u306e\u30d1\u30b1\u30c3\u30c8\u3092\u5168\u306610.1.0.3\u306b\u9001\u308b\u3068\u3057\u307e\u3059\u3002\n\n```py:switch.py\n    def table_mod(self, datapath):\n        ofproto = datapath.ofproto\n        parser = datapath.ofproto_parser\n\n        # IPaddr Entry\n        match = parser.OFPMatch(in_port=1,eth_type=0x0800,ipv4_dst='10.1.0.2')\n        actions = [parser.OFPActionSetField(eth_dst='02:42:0a:01:00:03'),parser.OFPActionSetField(ipv4_dst='10.1.0.3'),parser.OFPActionOutput(3,ofproto.OFPCML_NO_BUFFER)]\n        self.add_flow(datapath, 2, match, actions)\n\n        match = parser.OFPMatch(in_port=3,eth_type=0x0800,ipv4_dst='10.1.0.1')\n        actions = [parser.OFPActionSetField(ipv4_src='10.1.0.2'),parser.OFPActionOutput(1,ofproto.OFPCML_NO_BUFFER)]\n        self.add_flow(datapath, 2, match, actions)\n\n```\n\nL3\u3092\u66f8\u304d\u63db\u3048\u308b\u306e\u304c\u30e1\u30a4\u30f3\u3067\u3059\u304c\u3001`parser.OFPActionSetField(eth_dst='02:42:0a:01:00:03')`\u306b\u3088\u3063\u3066L2\u306e\u5b9b\u5148\u3082\u66f8\u304d\u63db\u3048\u3066\u304a\u304b\u306a\u3044\u3068\u5c4a\u304d\u307e\u305b\u3093\u3002\n\n\u8fd4\u3063\u3066\u304f\u308b\u30d1\u30b1\u30c3\u30c8\u306e\u9001\u4fe1\u5143\u30a2\u30c9\u30ec\u30b9\u3082`ipv4_src='10.1.0.2'`\u3068\u3057\u3066\u66f8\u304d\u63db\u3048\u306a\u3044\u3068L3\u901a\u4fe1\u306f\u51fa\u6765\u307e\u305b\u3093\u3002(\u9001\u4fe1\u5143\u3092\u66f8\u304d\u63db\u3048\u306a\u304f\u3066\u3082ping\u306f\u901a\u308b\u306e\u3067\u7d50\u69cb\u60a9\u3093\u3060)\n\u307e\u305f\u3001\u8fd4\u308a\u306f`parser.OFPActionOutput(1,ofproto.OFPCML_NO_BUFFER)`\u306b\u3088\u308a\u554f\u7b54\u7121\u7528\u3067OVS\u306e1\u756a\u30dd\u30fc\u30c8\u304b\u3089\u51fa\u3057\u3066\u307e\u3059\u304c\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306b\u9001\u3063\u3066\u3082\u554f\u984c\u306a\u3044\u3067\u3059\u3002\u6b21\u306eTCP\u30dd\u30fc\u30c8\u306e\u4f8b\u3067\u306f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306b\u9001\u3063\u3066\u3044\u307e\u3059\n\n\u203b IPv4\u306b\u3064\u3044\u3066\u306ematch\u3092\u3057\u305f\u3044\u5834\u5408\u306f`eth_type=0x0800`\u3092\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n( \u30d5\u30ec\u30fc\u30e0\u30bf\u30a4\u30d7\u306b\u3064\u3044\u3066 \u53c2\u8003: [Ethernet\u30bf\u30a4\u30d7\u756a\u53f7](http://www.infraexpert.com/study/tea13.htm) )\n\n\n### \u52d5\u4f5c\n```bash\n$ curl 10.1.0.2\nHello Container.\n( 10.1.0.3 / web container )\n```\nApache\u304c\u52d5\u3044\u3066\u308b\u306e\u306f10.1.0.3\u306e\u30b3\u30f3\u30c6\u30ca\u3060\u3051\u306a\u306e\u3067\u3001`curl 10.1.0.2`\u304c10.1.0.3\u5b9b\u306b\u9001\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u30b9\u30a4\u30c3\u30c1\u8d77\u52d5\u3057\u3066\u306a\u3044\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002(\u5f53\u305f\u308a\u524d\u3067\u3059\u304c)\n\n```bash\n$ curl 10.1.0.2\ncurl: (7) Failed to connect to 10.1.0.2 port 80: \u63a5\u7d9a\u3092\u62d2\u5426\u3055\u308c\u307e\u3057\u305f\n```\n## TCP\u30dd\u30fc\u30c8\u756a\u53f7\u306b\u3088\u308b\u5236\u5fa1\n23\u756a\u30dd\u30fc\u30c8\u5b9b\u3060\u3063\u305f\u3082\u306e\u309280\u756a\u5b9b\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\n\n```py:port.py\n    def table_mod(self, datapath):\n        ofproto = datapath.ofproto\n        parser = datapath.ofproto_parser\n\n        # TCP_Port Entry\n        match = parser.OFPMatch(in_port=1,eth_type=0x0800,ip_proto=socket.IPPROTO_TCP, tcp_dst=23)\n        actions = [parser.OFPActionSetField(tcp_dst=80),parser.OFPActionOutput(ofproto.OFPP_CONTROLLER,ofproto.OFPCML_NO_BUFFER)]\n        self.add_flow(datapath, 2, match, actions)\n\n        match = parser.OFPMatch(eth_type=0x0800,ip_proto=socket.IPPROTO_TCP,tcp_src=80)\n        actions = [parser.OFPActionSetField(tcp_src=23),parser.OFPActionOutput(ofproto.OFPP_CONTROLLER,ofproto.OFPCML_NO_BUFFER)]\n        self.add_flow(datapath, 2, match, actions)\n\n```\nsimple_switch_13.py\u306e\u5b9f\u88c5\u3067\u306f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u304cARP\u30c6\u30fc\u30d6\u30eb\u3068MAC\u30a2\u30c9\u30ec\u30b9\u30c6\u30fc\u30d6\u30eb(\u306e\u5f79\u5272\u3092\u3059\u308b\u3082\u306e)\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u30d5\u30ed\u30fc\u30c6\u30fc\u30d6\u30eb\u3067TCP\u306e\u5b9b\u5148\u3068\u9001\u4fe1\u5143\u3092\u66f8\u304d\u63db\u3048\u305f\u3089\u305d\u306e\u307e\u307e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306b\u9001\u308a\u3001\u305d\u306e\u5f8c\u306e\u7d4c\u8def\u9078\u629e\u306f\u305d\u3063\u3061\u306b\u4efb\u305b\u3066\u307e\u3059\u3002\n\nOpenFlow1.3\u3067\u306f\u8907\u6570\u500b\u306e\u30d5\u30ed\u30fc\u30c6\u30fc\u30d6\u30eb\u3092\u5229\u7528\u3057\u305f\u5236\u5fa1\u3082\u3067\u304d\u308b\u306e\u3067\u3001ARP\u30c6\u30fc\u30d6\u30eb\u3068MAC\u30a2\u30c9\u30ec\u30b9\u30c6\u30fc\u30d6\u30eb\u3092\u6301\u3063\u305f\u30d5\u30ed\u30fc\u30c6\u30fc\u30d6\u30eb\u3092\u5225\u3067\u7528\u610f\u3057\u3066\u3001\u66f8\u304d\u63db\u3048\u305f\u5f8c\u306b\u305d\u3061\u3089\u306b\u98db\u3070\u3059\u307b\u3046\u304c\u30ed\u30b9\u306f\u5c11\u306a\u304f\u306a\u308a\u305d\u3046\u3067\u3059\u3002\n\n\n\u203b \u5148\u7a0b\u540c\u69d8\u3067\u3059\u304c\u3001TCP\u306b\u3064\u3044\u3066\u306ematch\u3092\u3057\u305f\u3044\u5834\u5408\u306f`eth_type=0x0800`\u306b\u52a0\u3048\u3066`ip_proto=socket.IPPROTO_TCP`\u3092\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u52d5\u4f5c\n\n```bash\n$ telnet 10.1.0.3 23\nTrying 10.1.0.3...\nConnected to 10.1.0.3.\nEscape character is '^]'.\nquit\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>501 Not Implemented</title>\n</head><body>\n<h1>Not Implemented</h1>\n<p>quit to /index.html not supported.<br />\n</p>\n<hr>\n<address>Apache/2.4.7 (Ubuntu) Server at 127.0.0.1 Port 80</address>\n</body></html>\nConnection closed by foreign host.\n```\n23\u756a\u306btelnet\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304cHTTP\u306e\u5185\u5bb9\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n## \u307e\u3068\u3081\n\n\u4ee5\u4e0a2\u3064\u3092\u7d44\u307f\u5408\u308f\u305b\u308c\u3070(\u9759\u7684\u3067\u306f\u3042\u308a\u307e\u3059\u304c)\u305d\u308c\u306a\u308a\u306b\u67d4\u8edf\u306a\u7d4c\u8def\u5236\u5fa1\u304c\u51fa\u6765\u305d\u3046\u3067\u3059\u3002\n\u5225\u306e\u65b9\u6cd5\u3084\u52d5\u7684\u306a\u7d4c\u8def\u5236\u5fa1\u306b\u3064\u3044\u3066\u306f\u307e\u305f\u4eca\u5ea6\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u53c2\u8003\n* [\u30b9\u30a4\u30c3\u30c1\u30f3\u30b0\u30cf\u30d6 \u2014 Ryubook 1.0 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://osrg.github.io/ryu-book/ja/html/switching_hub.html)\n* [Ryu\u306e\u30de\u30c3\u30c1\u51e6\u7406(OFPMatch)](http://mediawiki.tuntunkun.com/index.php/Ryu%E3%81%AE%E3%83%9E%E3%83%83%E3%83%81%E5%87%A6%E7%90%86(OFPMatch))\n", "tags": ["OpenFlow", "Ryu", "OpenVSwitch"]}