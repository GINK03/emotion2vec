{"context": " More than 1 year has passed since last update.\n\n\u81ea\u5206\u7528\n\n\u81ea\u5206\u7528\u30b3\u30f3\u30c6\u30ca\ndocker run -it -d --name dev -h dev.local tukiyo3/ubuntu-dev\n\n\n\n\u79d8\u5bc6\u9375\u3092\u53d6\u5f97\nwget -o ~/.ssh/id_rsa.vagrant \\\n https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant\n\n\n\n~/.ssh/config\nHost dev \n    User vagrant\n    HostName dev.local\n    IdentityFile ~/.ssh/id_rsa.vagrant\n\n\n\nhttp://dev.local\nssh vagrant@dev.local\nssh dev -X\n\n\u3067\u63a5\u7d9a\u304c\u3067\u304d\u308b\u3002\n\nWARNING: Failed to contact D-Bus daemon.\n\n\u30b3\u30f3\u30c6\u30ca\u5185\u3067dbus\u30b5\u30fc\u30d3\u30b9\u304c\u8d77\u52d5\u3057\u3066\u3044\u306a\u3044\u3068\u3053\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3002\n\n\nDockerfile\nCMD service ssh start &&\\\n    service dbus start &&\\\n    service avahi-daemon start &&\\\n    ip a | grep \"inet \" &&\\\n    tail -f -n0 /var/log/dmesg\n\n\n\napt-get install\u6642\u306e\u5165\u529b\u5f85\u3061\u3092\u7121\u52b9\u306b\u3059\u308b\n\nubuntu - How do I ask apt-get to skip any interactive post-install configuration steps? - Server Fault\n\nDEBIAN_FRONTEND=noninteractive \\\n apt-get install -y [packagename]\n\n\n\u30b3\u30f3\u30c6\u30ca\u3067/etc/rc2.d/S\u301c\u3092\u5b9f\u884c\u3055\u305b\u308b\n\nubuntu 14.04\u3067\u78ba\u8a8d\u3002\n\n\nDockerfile\nCMD /etc/init.d/rc 2 && tail -f /var/log/dmesg\n\n\n\nDockerfile\u5185\u3067 >\u3092\u4f7f\u3046\u65b9\u6cd5\n\nDockerfile\nRUN (echo /etc/init.d/ssh start > /.bashrc)\n\n\n\nCMD \u3067ip\u30a2\u30c9\u30ec\u30b9\u3092\u8868\u793a\n\nip a s | grep \"inet \"\n\n\nDockerfile\nFROM tukiyo3/ubuntu-debootstrap-ja:14.10\n\nEXPOSE 22 80 443 8000 8080 3389 5901 5902\nWORKDIR /workspace\nVOLUME [\"/workspace\"]\n\nCMD /etc/init.d/rc 2 && ip a s | grep \"inet \" && tail -f -n0 /var/log/dmesg\n\n\n\nkitematic\u3067EXEC\u3059\u308b\u6642\u7528\u306bSHELL\u5909\u6570\u6307\u5b9a\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\n\nDockerfile\nENV SHELL /bin/bash\n\n\n\u6307\u5b9a\u3057\u3066\u304a\u304b\u306a\u3044\u3068 /bin/sh \u304c\u5b9f\u884c\u3055\u308c\u308b\u69d8\u5b50\n\nkitematic\u7528\u306bVOLUME\u6307\u5b9a\u3057\u3066\u304a\u304f\u3068mount\u3067\u304d\u308b\u306e\u3067\u4fbf\u5229\n\nDockerfile\nWORKDIR /workspace\nVOLUME [\"/workspace\"]\n\n\n\n\nssh\u3057\u305f\u3044\n\nGithub\u304b\u3089\u516c\u958b\u9375\u3092\u53d6\u5f97\nRUN mkdir /root/.ssh && \\\n    (curl https://github.com/tukiyo.keys > /root/.ssh/authorized_keys) &&\\\n    chmod 600 /root/.ssh/authorized_keys\n\n\n\nVagrant\u306e\u516c\u958b\u9375\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\n(curl -q https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub > /root/.ssh/authorized_keys)\n\n\n\nssh\u306e\u30dd\u30fc\u30c8\u3092\u5909\u66f4\nRUN sed -i.org -e 's/Port 22/Port 10022/' /etc/ssh/sshd_config\n\n\n\n--net\u00a0host\ndocker run -it --net host \u30a4\u30e1\u30fc\u30b8\n\n\n\nboot2docker\u306eip\u3067\u63a5\u7d9a\u304c\u3067\u304d\u308b\nssh root@192.168.99.100 -p 10022\n\n\n\n\u4e0d\u8981\u306b\u306a\u3063\u305fimage\u3092\u307e\u3068\u3081\u3066\u524a\u9664\n\n2\u9031\u9593\u4ee5\u4e0a\u904e\u304e\u305fnone\u306aimage\u3092\u524a\u9664\u3059\u308b\n\n\nclean_none_images.sh\nfor i in $(docker images | awk /weeks/'{print $3}')\ndo\n  docker rmi $i\ndone\n\n\n\ncron\u306b\u4ee5\u4e0b\u8ffd\u52a0\n10 10 * * 1 $HOME/cron/clean_none_images.sh\n\n\n\n\u4e0d\u8981\u306b\u306a\u3063\u305fimage\u3092\u307e\u3068\u3081\u3066\u524a\u96642\n\ndocker-cleanup.sh\ndocker rm `docker ps -a | grep Exit | awk '{print $1}'`\ndocker rmi `docker images | grep none | awk '{print $3}'`\n\n\n## \u81ea\u5206\u7528\n\n```bash:\u81ea\u5206\u7528\u30b3\u30f3\u30c6\u30ca\ndocker run -it -d --name dev -h dev.local tukiyo3/ubuntu-dev\n```\n\n```bash:\u79d8\u5bc6\u9375\u3092\u53d6\u5f97\nwget -o ~/.ssh/id_rsa.vagrant \\\n https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant\n```\n\n```text:~/.ssh/config\nHost dev \n    User vagrant\n    HostName dev.local\n    IdentityFile ~/.ssh/id_rsa.vagrant\n```\n\n* http://dev.local\n* `ssh vagrant@dev.local`\n* `ssh dev -X`\n\n\u3067\u63a5\u7d9a\u304c\u3067\u304d\u308b\u3002\n\n\n## WARNING: Failed to contact D-Bus daemon.\n\n* \u30b3\u30f3\u30c6\u30ca\u5185\u3067dbus\u30b5\u30fc\u30d3\u30b9\u304c\u8d77\u52d5\u3057\u3066\u3044\u306a\u3044\u3068\u3053\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3002\n\n```bash:Dockerfile\nCMD service ssh start &&\\\n    service dbus start &&\\\n    service avahi-daemon start &&\\\n    ip a | grep \"inet \" &&\\\n    tail -f -n0 /var/log/dmesg\n```\n\n## apt-get install\u6642\u306e\u5165\u529b\u5f85\u3061\u3092\u7121\u52b9\u306b\u3059\u308b\n\n* [ubuntu - How do I ask apt-get to skip any interactive post-install configuration steps? - Server Fault](http://serverfault.com/questions/227190/how-do-i-ask-apt-get-to-skip-any-interactive-post-install-configuration-steps)\n\n```bash:\nDEBIAN_FRONTEND=noninteractive \\\n apt-get install -y [packagename]\n```\n\n## \u30b3\u30f3\u30c6\u30ca\u3067/etc/rc2.d/S\u301c\u3092\u5b9f\u884c\u3055\u305b\u308b\n\n* ubuntu 14.04\u3067\u78ba\u8a8d\u3002\n\n```bash:Dockerfile\nCMD /etc/init.d/rc 2 && tail -f /var/log/dmesg\n```\n\n## Dockerfile\u5185\u3067 ` > `\u3092\u4f7f\u3046\u65b9\u6cd5\n\n```bash:Dockerfile\nRUN (echo /etc/init.d/ssh start > /.bashrc)\n```\n\n## CMD \u3067ip\u30a2\u30c9\u30ec\u30b9\u3092\u8868\u793a\n\n* `ip a s | grep \"inet \"`\n\n```bash:Dockerfile\nFROM tukiyo3/ubuntu-debootstrap-ja:14.10\n\nEXPOSE 22 80 443 8000 8080 3389 5901 5902\nWORKDIR /workspace\nVOLUME [\"/workspace\"]\n\nCMD /etc/init.d/rc 2 && ip a s | grep \"inet \" && tail -f -n0 /var/log/dmesg\n```\n\n## kitematic\u3067EXEC\u3059\u308b\u6642\u7528\u306bSHELL\u5909\u6570\u6307\u5b9a\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\n\n```bash:Dockerfile\nENV SHELL /bin/bash\n```\n\n\u6307\u5b9a\u3057\u3066\u304a\u304b\u306a\u3044\u3068 /bin/sh \u304c\u5b9f\u884c\u3055\u308c\u308b\u69d8\u5b50\n\n\n## kitematic\u7528\u306bVOLUME\u6307\u5b9a\u3057\u3066\u304a\u304f\u3068mount\u3067\u304d\u308b\u306e\u3067\u4fbf\u5229\n\n```bash:Dockerfile\nWORKDIR /workspace\nVOLUME [\"/workspace\"]\n```\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-08-22 10.19.41.png](https://qiita-image-store.s3.amazonaws.com/0/25728/e3e8fcaa-bd2a-475b-71e3-70da8b443a17.png)\n\n## ssh\u3057\u305f\u3044\n\n```bash:Github\u304b\u3089\u516c\u958b\u9375\u3092\u53d6\u5f97\nRUN mkdir /root/.ssh && \\\n    (curl https://github.com/tukiyo.keys > /root/.ssh/authorized_keys) &&\\\n    chmod 600 /root/.ssh/authorized_keys\n```\n\n```bash:Vagrant\u306e\u516c\u958b\u9375\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\n(curl -q https://raw.github.com/mitchellh/vagrant/master/keys/vagrant.pub > /root/.ssh/authorized_keys)\n```\n\n```bash:ssh\u306e\u30dd\u30fc\u30c8\u3092\u5909\u66f4\nRUN sed -i.org -e 's/Port 22/Port 10022/' /etc/ssh/sshd_config\n```\n\n```bash:--net&nbsp;host\ndocker run -it --net host \u30a4\u30e1\u30fc\u30b8\n```\n\n```bash:boot2docker\u306eip\u3067\u63a5\u7d9a\u304c\u3067\u304d\u308b\nssh root@192.168.99.100 -p 10022\n```\n\n\n## \u4e0d\u8981\u306b\u306a\u3063\u305fimage\u3092\u307e\u3068\u3081\u3066\u524a\u9664\n\n* 2\u9031\u9593\u4ee5\u4e0a\u904e\u304e\u305fnone\u306aimage\u3092\u524a\u9664\u3059\u308b\n\n```bash:clean_none_images.sh\nfor i in $(docker images | awk /weeks/'{print $3}')\ndo\n  docker rmi $i\ndone\n```\n\n```bash:cron\u306b\u4ee5\u4e0b\u8ffd\u52a0\n10 10 * * 1 $HOME/cron/clean_none_images.sh\n```\n\n## \u4e0d\u8981\u306b\u306a\u3063\u305fimage\u3092\u307e\u3068\u3081\u3066\u524a\u96642\n\n```bash:docker-cleanup.sh\ndocker rm `docker ps -a | grep Exit | awk '{print $1}'`\ndocker rmi `docker images | grep none | awk '{print $3}'`\n```\n", "tags": ["dockerfile", "snippets", "Kitematic", "docker"]}