{"context": "\u3053\u306e\u8a18\u4e8b\u306f (bouzuya) PureScript Advent Calendar 2016 \u306e 8 \u65e5\u76ee\u3067\u3059\u3002 (bouzuya) PureScript Advent Calendar 2016 \u306f bouzuya \u306e PureScript \u5b66\u7fd2\u306e\u8a18\u9332\u3067\u3059\u3002\n\n\u2190 7 \u65e5\u76ee\u300e PureScript by Example 3 \u7ae0\u306e\u524d\u534a\u3092\u8aad\u3080 - Qiita \u300f\n\u2192 9 \u65e5\u76ee\u300e PureScript IDE (Visual Studio Code \u62e1\u5f35) \u306e\u7d39\u4ecb - Qiita \u300f\n\n\n\u6982\u8981\n\u6628\u65e5\u306b\u7d9a\u304d PureScript by Example \u3068 PureScript Language Guide \u3092\u898b\u306a\u304c\u3089\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002\u4eca\u65e5\u306f PureScript by Example \u306e 3 \u7ae0 \u306e\u5f8c\u534a\u3092\u8aad\u307f\u307e\u3059\u3002\n\u203b\u6ce8\u610f\u4e8b\u9805: \u82f1\u8a9e\u3068\u65e5\u672c\u8a9e\u8a33\u3067\u306f\u5927\u304d\u306a\u5dee\u7570\u304c\u3042\u308a\u307e\u3059\u30020.10.x \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u82f1\u8a9e\u306e\u5074\u3067\u9032\u3081\u307e\u3059\u3002\n\n\nPureScript by Example 2016-12-05 \u6642\u70b9\u3067 0.10.x \u5411\u3051\n\n\u5b9f\u4f8b\u306b\u3088\u308b PureScript 2016-12-05 \u6642\u70b9\u3067 0.7 \u5411\u3051\n\nPureScript Language Guide \u5bfe\u8c61\u30d0\u30fc\u30b8\u30e7\u30f3\u4e0d\u660e\n\n\nPureScript by Example 3.6\ntype \u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u578b\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u304d\u307e\u3059\u3002type \u306f\u578b\u30b7\u30ce\u30cb\u30e0 (type synonyms) \u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nLanguage Guide:\n\nType Synonyms - Language Guide\n\ntype Entry =\n  { firstName :: String\n  , lastName  :: String\n  , address   :: Address\n  }\ntype Address =\n  { street :: String\n  , city   :: String\n  , state  :: String\n  }\ntype AddressBook = List Entry\n\n\u3053\u3053\u3067\u306f firstName & lastName & address \u304b\u3089\u306a\u308b\u30ec\u30b3\u30fc\u30c9\u306b Entry \u3068\u3044\u3046\u540d\u524d\u306e\u578b\u30b7\u30ce\u30cb\u30e0\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\u30ec\u30b3\u30fc\u30c9\u304c\u30ec\u30b3\u30fc\u30c9\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002\nLanguage Guide \u306e\u4f8b\u3092\u898b\u308b\u3068 type Bar a = { foo :: a, bar :: a } \u306e\u3088\u3046\u306a\u5b9a\u7fa9\u3082\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u306d\u3002\u3078\u3048\u3002\nList Entry \u3068 Array Entry \u306f\u5225\u7269\u3067\u3059\u3063\u3066\u3002\u305d\u308a\u3083\u3042\u3001\u305d\u3046\u3067\u3057\u3087\u3046\u306d\u3002\n\nPureScript by Example 3.7\nList \u306f\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf (type constructor) \u306e\u4f8b\u3060\u305d\u3046\u3067\u3059\u3002\u540d\u524d\u306e\u3068\u304a\u308a\u578b\u3092\u69cb\u7bc9\u3059\u308b\u3093\u3067\u3057\u3087\u3046\u3002\u4e0a\u8a18\u306e AddressBook \u3067\u4f7f\u3063\u305f List Entry \u306f List a \u304c Entry \u306b\u9069\u7528\u3055\u308c\u305f\u3082\u306e\u3002\n\u7a2e (kind) \u306e\u8a71\u3067\u3059\u306d\u3002\n$ npm run pulp:psci\n\n> chapter3@1.0.0 pulp:psci /Users/bouzuya/.ghq/github.com/paf31/purescript-book/exercises/chapter3\n> pulp psci\n\nimpPSCi, version 0.10.2\nType :? for help\n\n> import Data.List\n> Nil :: List\nError found:\nin module $PSCI\n\n  In a type-annotated expression x :: t, the type t must have kind *.\n  The error arises from the type\n\n    List\n\n  having the kind\n\n    * -> *\n\n  instead.\n\nin value declaration it\n\nSee https://github.com/purescript/purescript/wiki/Error-Code-ExpectedType for more information,\nor to contribute content related to this error.\n\n> :kind Int\n*\n> :kind List\n* -> *\n> :kind List Int\n*\n\n\u95a2\u6570\u9069\u7528\u307f\u305f\u3044\u3067\u3059\u306d\u3002List \u306f\u578b\u5f15\u6570\u3092\u3072\u3068\u3064\u3068\u3063\u3066\u578b\u3092\u8fd4\u3059\u308f\u3051\u3067\u3059\u306d\u3002\nLanguage Guide:\n\nKind System - Language Guide\n\nPureScript \u3067\u306f\u307b\u304b\u306b\u3082 ! \u3084 # \u304c\u3042\u308b\u3093\u3067\u3059\u306d\u3002\u307e\u305f\u5f8c\u3067\u51fa\u3066\u304f\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\nPureScript by Example 3.8\nshowEntry :: Entry -> String\nshowEntry entry = entry.lastName <> \", \" <>\n                  entry.firstName <> \": \" <>\n                  showAddress entry.address\n\n\u578b\u3092\u66f8\u3044\u3066\u304b\u3089\u3001\u95a2\u6570\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u306d\u3002\u5b9f\u88c5\u306f (<>) \u3067 String \u3092\u304f\u3063\u3064\u3051\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u306d\u3002\nshowAddress \u3082\u5927\u5dee\u306a\u3044\u3067\u3059\u306d\u3002\u30b9\u30eb\u30fc\u3002\n\nPureScript by Example 3.9\npsci \u3067 showAddress \u3068 showEntry \u3092\u305f\u3081\u3057\u3066\u3044\u307e\u3059\u306d\u3002\u30b9\u30eb\u30fc\u3002\n$ npm run pulp:psci\n\n> chapter3@1.0.0 pulp:psci /Users/bouzuya/.ghq/github.com/paf31/purescript-book/exercises/chapter3\n> pulp psci\n\nPSCi, version 0.10.2\nType :? for help\n\n> import Data.AddressBook\n> let address = { street: \"123 Fake St.\", city: \"Faketown\", state: \"CA\" }\n> showAddress address\n\"123 Fake St., Faketown, CA\"\n\n> let entry = { firstName: \"John\", lastName: \"Smith\", address: address }\n> showEntry entry\n\"Smith, John: 123 Fake St., Faketown, CA\"\n\n\nPureScript by Example 3.10\nemptyBook :: AddressBook\nemptyBook = empty\n\n\u5f53\u7136\u3067\u3059\u3051\u3069 emptyBook \u306f\u7a7a\u306e List \u306b\u3059\u308b\u307f\u305f\u3044\u3067\u3059\u3002\ninsertEntry :: Entry -> AddressBook -> AddressBook\ninsertEntry entry book = Cons entry book\n\npsci \u3067 Cons \u306e\u578b\u3092\u78ba\u8a8d\u3057\u3066\u3001\u60f3\u5b9a\u3057\u305f\u578b\u3068\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u306d\u3002\n> import Data.List\n> :type Cons\nforall t1. t1 -> List t1 -> List t1\n\nAddressBook \u306f List Entry \u306a\u306e\u3067 t1 \u3092 Entry \u3060\u3068\u89e3\u91c8\u3059\u308c\u3070\u4e00\u81f4\u3057\u307e\u3059\u3002\n\nPureScript by Example 3.11\n\u4f55\u5ea6\u304b\u30b9\u30eb\u30fc\u3057\u305f\u30ab\u30ea\u30fc\u5316\u3067\u3059\u306d\u3002PureScript \u306e\u95a2\u6570\u306f\u30ab\u30ea\u30fc\u5316\u3055\u308c\u305f\u5f62\u3067\u3042\u308a\u3001\u3072\u3068\u3064\u306e\u5f15\u6570\u3057\u304b\u53d6\u308c\u307e\u305b\u3093\u3002\u8907\u6570\u306e\u5f15\u6570\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u306f\u3001\u6b21\u306e\u5f15\u6570\u3092\u3068\u308b\u95a2\u6570\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u305f\u3068\u3048\u3070 insertEntry \u306f Entry -> AddressBook -> AddressBook \u306a\u306e\u3067\u3001Entry \u3092\u3068\u3063\u3066 AddressBook -> AddressBook \u3068\u3044\u3046\u95a2\u6570\u3092\u8fd4\u3057\u307e\u3059\u3002\u8fd4\u3055\u308c\u305f\u3053\u306e\u95a2\u6570\u306f\u3055\u3089\u306b AddressBook \u3092\u3068\u3063\u3066 AddressBook \u3092\u8fd4\u3057\u307e\u3059\u3002\u578b\u306e\u3068\u304a\u308a\u3067\u3059\u3057\u3001\u95a2\u6570\u306e\u5f15\u6570\u306f\u5e38\u306b\u3072\u3068\u3064\u3067\u3059\u3002\u3053\u306e\u4f8b\u306e\u3088\u3046\u306b\u3001\u95a2\u6570\u306e\u4e00\u90e8\u306e\u5f15\u6570\u3060\u3051\u3092\u6e21\u3059\u3053\u3068\u3092\u90e8\u5206\u9069\u7528\u3068\u8a00\u3044\u307e\u3059\u3002\n> let john = { firstName: \"John\", lastName: \"Smith\", address: address }\n> let insertJohn = insertEntry john\n\ninsertJohn \u306f\u90e8\u5206\u9069\u7528\u3057\u305f\u7d50\u679c\u3001\u5f97\u3089\u308c\u305f\u95a2\u6570\u3067\u3059\u3002john \u3092 insert \u3059\u308b\u95a2\u6570\u3067\u3059\u3002 (\u305d\u3093\u306a\u306b john \u3070\u304b\u308a\u8981\u3089\u306a\u3044\u6c17\u306f\u3057\u307e\u3059\u304c\u2026\u2026)\nPureScript by Example \u3067\u306f\u52a0\u3048\u3066\u30a4\u30fc\u30bf\u5909\u63db\u306b\u89e6\u308c\u3066\u3044\u307e\u3059\u3002\ninsertEntry :: Entry -> PhoneBook -> PhoneBook\ninsertEntry entry book = Cons entry book\n\n\u3053\u308c\u306f\ninsertEntry :: Entry -> PhoneBook -> PhoneBook\ninsertEntry = Cons\n\n\u3068\u540c\u3058\u52d5\u304d\u3092\u3057\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u540c\u3058\u5f15\u6570\u306a\u306e\u3067\u3001\u308f\u3056\u308f\u3056\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u3002\n\u3053\u306e\u5f62\u5f0f\u306b\u306f\u5229\u70b9\u304c\u3042\u308b\u306e\u3067\u3057\u3087\u3046\u304c\u3001\u500b\u4eba\u7684\u306b\u306f\u5f15\u6570\u3092\u660e\u793a\u3057\u3066\u3044\u308b\u307b\u3046\u304c\u8aad\u307f\u3084\u3059\u3044\u3088\u3046\u306b\u611f\u3058\u307e\u3059\u3002\u578b\u3092\u898b\u306a\u3044\u3068\u4f55\u3092\u53d6\u308b\u306e\u304b\u3082\u3088\u304f\u5206\u304b\u308a\u307e\u305b\u3093\u3057\u2026\u2026\u3002\u307e\u3060\u6163\u308c\u3066\u3044\u306a\u3044\u3060\u3051\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nPureScript by Example 3.12\nList \u306e\u305f\u3081\u306e\u95a2\u6570\u3092\u7d44\u307f\u5408\u308f\u305b\u3066 AddressBook \u304b\u3089 Entry \u3092\u63a2\u3059\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n> import Data.List\n> :t filter\nforall a. (a -> Boolean) -> List a -> List a\n\n> :t head\nforall a. List a -> Maybe a\n\nfilter \u306f\u30ab\u30ea\u30fc\u5316\u3055\u308c\u305f 2 \u5f15\u6570\u306e\u95a2\u6570\u3067\u3059\u306d\u3002\u7b2c 1 \u5f15\u6570\u306e\u95a2\u6570\u3067\u7b2c 2 \u5f15\u6570\u306e List \u3092 filter \u3057\u3066\u3001\u305d\u306e\u7d50\u679c\u3067\u3042\u308b List \u3092\u8fd4\u3059\u307f\u305f\u3044\u3067\u3059\u306d\u3002\nhead \u306f List \u306e\u5148\u982d\u8981\u7d20\u3092\u8fd4\u3057\u307e\u3059\u3002\nPursuit:\n\nfilter - Data.List - purescript-lists - Pursuit\nhead - Data.List - purescript-lists - Pursuit\n\na \u3092\u305d\u308c\u305e\u308c AddressBook \u306b\u304a\u3051\u308b\u8981\u7d20\u306b\u7f6e\u304d\u63db\u3048\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nfilter :: (Entry -> Boolean) -> AddressBook -> AddressBook\nhead :: AddressBook -> Maybe Entry\n\n\u3053\u308c\u3089\u3092\u4f7f\u3063\u3066 findEntry \u3092\u3064\u304f\u308a\u307e\u3059\u3002\nfindEntry :: String -> String -> AddressBook -> Maybe Entry\nfindEntry firstName lastName book = head $ filter filterEntry book\n  where\n    filterEntry :: Entry -> Boolean\n    filterEntry entry = entry.firstName == firstName && entry.lastName == lastName\n\n($) \u3084 where \u304c\u521d\u51fa\u306a\u3093\u3067\u3059\u3051\u3069\u3001\u6982\u8981\u3068\u3057\u3066\u306f filter \u3057\u305f\u3082\u306e\u3092 head \u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\nwhere \u3067\u88dc\u52a9\u95a2\u6570\u3068\u3057\u3066 filterEntry \u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002findEntry \u306e\u5f15\u6570\u306b\u6e21\u3055\u308c\u305f firstName \u3068 lastName \u306b\u4e00\u81f4\u3059\u308b Entry \u304b\u3092 Boolean \u3067\u8fd4\u3059\u95a2\u6570\u3067\u3059\u306d\u3002\n\nPureScript by Example 3.13\n\u4e2d\u7f6e\u6f14\u7b97\u5b50 (infix operator) \u30fb\u4e2d\u7f6e\u95a2\u6570 (infix function) \u306e\u8a71\u3067\u3059\u3002\u4e0a\u8a18\u306e ($) \u306b\u95a2\u9023\u3057\u305f\u8a71\u3067\u3059\u3002\nPursuit:\n\n($) - Data.Function - purescript-prelude - Pursuit\n\nhead $ filter filterEntry book \u306f head (filter filterEntry book) \u3068\u540c\u3058\u52d5\u304d\u3092\u3057\u307e\u3059\u3002\n($) \u306f apply \u306e alias \u3067\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\napply :: forall a b. (a -> b) -> a -> b\napply f x = f x\n\ninfixr 0 apply as $\n\n($) \u306f\u53f3\u7d50\u5408\u306e\u4f4e\u3044\u512a\u5148\u9806\u4f4d\u306e\u6f14\u7b97\u5b50\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 apply \u306f\u7b2c\u4e00\u5f15\u6570\u306e\u95a2\u6570\u3092\u7b2c\u4e8c\u5f15\u6570\u306e\u5024\u306b\u9069\u7528\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n($) \u3092\u4f7f\u3048\u3070\u62ec\u5f27\u306e\u5165\u308c\u5b50\u3092\u89e3\u6d88\u3067\u304d\u307e\u3059\u3002\nstreet (address (boss employee))\nstreet $ address $ boss employee\n\n\u306a\u308b\u307b\u3069\u3001\u4fbf\u5229\u3067\u3059\u306d\u3002\n\u3061\u306a\u307f\u306b\u95a2\u6570\u3092\u6f14\u7b97\u5b50\u7684\u306b\u4f7f\u3046\u3053\u3068\u3082\u3001\u305d\u306e\u9006\u3082\u3067\u304d\u307e\u3059\u3002\u6f14\u7b97\u5b50\u3092\u95a2\u6570\u7684\u306b\u4f7f\u3046\u5834\u5408\u306f () \u3067\u62ec\u308a\u3001\u95a2\u6570\u3092\u6f14\u7b97\u5b50\u7684\u306b\u4f7f\u3046\u5834\u5408\u306f ` \u3067\u62ec\u308c\u3070\u826f\u3044\u3067\u3059\u3002\nnpm run pulp:psci\n> chapter3@1.0.0 pulp:psci /Users/bouzuya/.ghq/github.com/paf31/purescript-book/exercises/chapter3\n> pulp psci\n\nPSCi, version 0.10.2\nType :? for help\n\n> import Prelude ((+))\n> 1 + 2\n3\n\n> (+) 1 2\n3\n\n> let f = (+)\n> f 1 2\n3\n\n> 1 `f` 2\n3\n\nLanguage Guide:\n\nFunctions as Operators - Language Guide\n\nUser-defined operators - Language Guide\n[https://github.com/purescript/purescript/wiki/Language-Guide#functions-as-operators]\n\n\nPureScript by Example 3.14\n\u95a2\u6570\u5408\u6210\u306e\u8a71\u3067\u3059\u306d\u3002>>> \u3068 <<< \u3067\u3059\u3002\u305d\u308c\u305e\u308c compose \u3068 composeFlipped \u306e alias \u3067\u3059\u3002\nPursuit:\n\n(<<<) - Control.Semigroupoid - purescript-prelude - Pursuit\n(>>>) - Control.Semigroupoid - purescript-prelude - Pursuit\n\n\u524d\u8ff0\u306e findEntry \u3067\u3042\u308c\u3070\u6b21\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u3089\u308c\u307e\u3059\u3002\nhead $ filter filterEntry book\n(head <<< filter filterEntry) book\n(filter filterEntry >>> head) book\n\ninsertEntry = Cons \u306e\u3088\u3046\u306b book \u3092\u524a\u308c\u3070\u3001findEntry firstName lastName = head <<< filter filterEntry \u3068\u3067\u304d\u307e\u3059\u3002\u3075\u3080\u3075\u3080\u3002\n\nPureScript by Example 3.15\npsci \u3067\u305f\u3081\u3057\u3066\u3044\u307e\u3059\u306d\u3002\nShow \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306a\u3044\u3068\u8868\u793a\u3067\u304d\u306a\u3044\u7b87\u6240\u306f map showEntry entry \u306e\u3088\u3046\u306b\u3057\u3066\u56de\u907f\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u53e4\u3044\u5206\u3060\u3068 (<$>) \u3088\u308a\u3082\u8aad\u307f\u304b\u305f\u306e\u5206\u304b\u308b map \u306b\u306a\u3063\u305f\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u304b\u3002\nPursuit:\n\nmap - Data.Functor - purescript-prelude - Pursuit\n(<$>) - Data.Functor - purescript-prelude - Pursuit\n\n\n\u307e\u3068\u3081\n3 \u7ae0\u306e\u5f8c\u534a\u306f\u5bc6\u5ea6\u304c\u9ad8\u304b\u3063\u305f\u3067\u3059\u3002\u614c\u3066\u3066\u9032\u3081\u305f\u306e\u3067\u3001\u96d1\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n\u53c2\u8003\n\nLanguage Guide - Functions as Operators\nLanguage Guide - Kind System\nLanguage Guide - Type Synonyms\nLanguage Guide - User-defined operators\nLanguage Guide\nPureScript by Example - 3. Functions and Records\nPureScript by Example\nPursuit - (<$>) - Data.Functor - purescript-prelude\nPursuit - (<<<) - Control.Semigroupoid - purescript-prelude\nPursuit - (>>>) - Control.Semigroupoid - purescript-prelude\nPursuit - filter - Data.List - purescript-lists\nPursuit - head - Data.List - purescript-lists\nPursuit - map - Data.Functor - purescript-prelude\nPursuit\npaf31/purescript-book\n\n\n\u6b21\u56de\u4ee5\u964d\u306e TODO\n\nPureScript by Example & PureScript Language Guide \u3092\u8aad\u307f\u9032\u3081\u308b\nTagged Unions / Newtype\npsc-package\nPureScript IDE \u306e\u5c0e\u5165\n24 Days of PureScript, 2016\n24 Days of PureScript, 2014\n\u67d0\u6c0f\u306e\u8a18\u4e8b\u306e\u7d39\u4ecb\n\ngithub.com/purescript \u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\n\ngithub.com/purescript-node \u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\n\ngithub.com/purescript-contrib \u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\n\n\u3053\u306e\u8a18\u4e8b\u306f [(bouzuya) PureScript Advent Calendar 2016](http://www.adventar.org/calendars/1494) \u306e 8 \u65e5\u76ee\u3067\u3059\u3002 (bouzuya) PureScript Advent Calendar 2016 \u306f bouzuya \u306e PureScript \u5b66\u7fd2\u306e\u8a18\u9332\u3067\u3059\u3002\n\n- \u2190 7 \u65e5\u76ee\u300e [PureScript by Example 3 \u7ae0\u306e\u524d\u534a\u3092\u8aad\u3080 - Qiita][2016-12-07] \u300f\n- \u2192 9 \u65e5\u76ee\u300e [PureScript IDE (Visual Studio Code \u62e1\u5f35) \u306e\u7d39\u4ecb - Qiita][2016-12-09] \u300f\n\n## \u6982\u8981\n\n\u6628\u65e5\u306b\u7d9a\u304d [PureScript by Example][purescript-by-example] \u3068 [PureScript Language Guide][language-guide] \u3092\u898b\u306a\u304c\u3089\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002\u4eca\u65e5\u306f [PureScript by Example \u306e 3 \u7ae0][purescript-by-example-3] \u306e\u5f8c\u534a\u3092\u8aad\u307f\u307e\u3059\u3002\n\n\u203b\u6ce8\u610f\u4e8b\u9805: \u82f1\u8a9e\u3068\u65e5\u672c\u8a9e\u8a33\u3067\u306f\u5927\u304d\u306a\u5dee\u7570\u304c\u3042\u308a\u307e\u3059\u3002`0.10.x` \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u82f1\u8a9e\u306e\u5074\u3067\u9032\u3081\u307e\u3059\u3002\n\n- [PureScript by Example][purescript-by-example] 2016-12-05 \u6642\u70b9\u3067 0.10.x \u5411\u3051\n- [\u5b9f\u4f8b\u306b\u3088\u308b PureScript][purescript-by-example-ja] 2016-12-05 \u6642\u70b9\u3067 0.7 \u5411\u3051\n- [PureScript Language Guide][language-guide] \u5bfe\u8c61\u30d0\u30fc\u30b8\u30e7\u30f3\u4e0d\u660e\n\n## PureScript by Example 3.6\n\n`type` \u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u578b\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u304d\u307e\u3059\u3002`type` \u306f\u578b\u30b7\u30ce\u30cb\u30e0 (type synonyms) \u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\nLanguage Guide:\n\n- [Type Synonyms - Language Guide][language-guide-type-synonyms]\n\n```\ntype Entry =\n  { firstName :: String\n  , lastName  :: String\n  , address   :: Address\n  }\ntype Address =\n  { street :: String\n  , city   :: String\n  , state  :: String\n  }\ntype AddressBook = List Entry\n```\n\n\u3053\u3053\u3067\u306f `firstName` & `lastName` & `address` \u304b\u3089\u306a\u308b\u30ec\u30b3\u30fc\u30c9\u306b `Entry` \u3068\u3044\u3046\u540d\u524d\u306e\u578b\u30b7\u30ce\u30cb\u30e0\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\u30ec\u30b3\u30fc\u30c9\u304c\u30ec\u30b3\u30fc\u30c9\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002\n\nLanguage Guide \u306e\u4f8b\u3092\u898b\u308b\u3068 `type Bar a = { foo :: a, bar :: a }` \u306e\u3088\u3046\u306a\u5b9a\u7fa9\u3082\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u306d\u3002\u3078\u3048\u3002\n\n`List Entry` \u3068 `Array Entry` \u306f\u5225\u7269\u3067\u3059\u3063\u3066\u3002\u305d\u308a\u3083\u3042\u3001\u305d\u3046\u3067\u3057\u3087\u3046\u306d\u3002\n\n## PureScript by Example 3.7\n\n`List` \u306f\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf (type constructor) \u306e\u4f8b\u3060\u305d\u3046\u3067\u3059\u3002\u540d\u524d\u306e\u3068\u304a\u308a\u578b\u3092\u69cb\u7bc9\u3059\u308b\u3093\u3067\u3057\u3087\u3046\u3002\u4e0a\u8a18\u306e `AddressBook` \u3067\u4f7f\u3063\u305f `List Entry` \u306f `List a` \u304c `Entry` \u306b\u9069\u7528\u3055\u308c\u305f\u3082\u306e\u3002\n\n\u7a2e (kind) \u306e\u8a71\u3067\u3059\u306d\u3002\n\n```\n$ npm run pulp:psci\n\n> chapter3@1.0.0 pulp:psci /Users/bouzuya/.ghq/github.com/paf31/purescript-book/exercises/chapter3\n> pulp psci\n\nimpPSCi, version 0.10.2\nType :? for help\n\n> import Data.List\n> Nil :: List\nError found:\nin module $PSCI\n\n  In a type-annotated expression x :: t, the type t must have kind *.\n  The error arises from the type\n\n    List\n\n  having the kind\n\n    * -> *\n\n  instead.\n\nin value declaration it\n\nSee https://github.com/purescript/purescript/wiki/Error-Code-ExpectedType for more information,\nor to contribute content related to this error.\n\n> :kind Int\n*\n> :kind List\n* -> *\n> :kind List Int\n*\n```\n\n\u95a2\u6570\u9069\u7528\u307f\u305f\u3044\u3067\u3059\u306d\u3002`List` \u306f\u578b\u5f15\u6570\u3092\u3072\u3068\u3064\u3068\u3063\u3066\u578b\u3092\u8fd4\u3059\u308f\u3051\u3067\u3059\u306d\u3002\n\nLanguage Guide:\n\n- [Kind System - Language Guide][language-guide-kind-system]\n\nPureScript \u3067\u306f\u307b\u304b\u306b\u3082 `!` \u3084 `#` \u304c\u3042\u308b\u3093\u3067\u3059\u306d\u3002\u307e\u305f\u5f8c\u3067\u51fa\u3066\u304f\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\n## PureScript by Example 3.8\n\n```\nshowEntry :: Entry -> String\nshowEntry entry = entry.lastName <> \", \" <>\n                  entry.firstName <> \": \" <>\n                  showAddress entry.address\n```\n\n\u578b\u3092\u66f8\u3044\u3066\u304b\u3089\u3001\u95a2\u6570\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u306d\u3002\u5b9f\u88c5\u306f `(<>)` \u3067 `String` \u3092\u304f\u3063\u3064\u3051\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u306d\u3002\n\n`showAddress` \u3082\u5927\u5dee\u306a\u3044\u3067\u3059\u306d\u3002\u30b9\u30eb\u30fc\u3002\n\n## PureScript by Example 3.9\n\n`psci` \u3067 `showAddress` \u3068 `showEntry` \u3092\u305f\u3081\u3057\u3066\u3044\u307e\u3059\u306d\u3002\u30b9\u30eb\u30fc\u3002\n\n```\n$ npm run pulp:psci\n\n> chapter3@1.0.0 pulp:psci /Users/bouzuya/.ghq/github.com/paf31/purescript-book/exercises/chapter3\n> pulp psci\n\nPSCi, version 0.10.2\nType :? for help\n\n> import Data.AddressBook\n> let address = { street: \"123 Fake St.\", city: \"Faketown\", state: \"CA\" }\n> showAddress address\n\"123 Fake St., Faketown, CA\"\n\n> let entry = { firstName: \"John\", lastName: \"Smith\", address: address }\n> showEntry entry\n\"Smith, John: 123 Fake St., Faketown, CA\"\n```\n\n## PureScript by Example 3.10\n\n```\nemptyBook :: AddressBook\nemptyBook = empty\n```\n\n\u5f53\u7136\u3067\u3059\u3051\u3069 `emptyBook` \u306f\u7a7a\u306e List \u306b\u3059\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\n```\ninsertEntry :: Entry -> AddressBook -> AddressBook\ninsertEntry entry book = Cons entry book\n```\n\n`psci` \u3067 `Cons` \u306e\u578b\u3092\u78ba\u8a8d\u3057\u3066\u3001\u60f3\u5b9a\u3057\u305f\u578b\u3068\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u306d\u3002\n\n```\n> import Data.List\n> :type Cons\nforall t1. t1 -> List t1 -> List t1\n```\n\n`AddressBook` \u306f `List Entry` \u306a\u306e\u3067 `t1` \u3092 `Entry` \u3060\u3068\u89e3\u91c8\u3059\u308c\u3070\u4e00\u81f4\u3057\u307e\u3059\u3002\n\n## PureScript by Example 3.11\n\n\u4f55\u5ea6\u304b\u30b9\u30eb\u30fc\u3057\u305f\u30ab\u30ea\u30fc\u5316\u3067\u3059\u306d\u3002PureScript \u306e\u95a2\u6570\u306f\u30ab\u30ea\u30fc\u5316\u3055\u308c\u305f\u5f62\u3067\u3042\u308a\u3001\u3072\u3068\u3064\u306e\u5f15\u6570\u3057\u304b\u53d6\u308c\u307e\u305b\u3093\u3002\u8907\u6570\u306e\u5f15\u6570\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u306f\u3001\u6b21\u306e\u5f15\u6570\u3092\u3068\u308b\u95a2\u6570\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u305f\u3068\u3048\u3070 `insertEntry` \u306f `Entry -> AddressBook -> AddressBook` \u306a\u306e\u3067\u3001`Entry` \u3092\u3068\u3063\u3066 `AddressBook -> AddressBook` \u3068\u3044\u3046\u95a2\u6570\u3092\u8fd4\u3057\u307e\u3059\u3002\u8fd4\u3055\u308c\u305f\u3053\u306e\u95a2\u6570\u306f\u3055\u3089\u306b `AddressBook` \u3092\u3068\u3063\u3066 `AddressBook` \u3092\u8fd4\u3057\u307e\u3059\u3002\u578b\u306e\u3068\u304a\u308a\u3067\u3059\u3057\u3001\u95a2\u6570\u306e\u5f15\u6570\u306f\u5e38\u306b\u3072\u3068\u3064\u3067\u3059\u3002\u3053\u306e\u4f8b\u306e\u3088\u3046\u306b\u3001\u95a2\u6570\u306e\u4e00\u90e8\u306e\u5f15\u6570\u3060\u3051\u3092\u6e21\u3059\u3053\u3068\u3092\u90e8\u5206\u9069\u7528\u3068\u8a00\u3044\u307e\u3059\u3002\n\n```\n> let john = { firstName: \"John\", lastName: \"Smith\", address: address }\n> let insertJohn = insertEntry john\n```\n\n`insertJohn` \u306f\u90e8\u5206\u9069\u7528\u3057\u305f\u7d50\u679c\u3001\u5f97\u3089\u308c\u305f\u95a2\u6570\u3067\u3059\u3002`john` \u3092 insert \u3059\u308b\u95a2\u6570\u3067\u3059\u3002 (\u305d\u3093\u306a\u306b john \u3070\u304b\u308a\u8981\u3089\u306a\u3044\u6c17\u306f\u3057\u307e\u3059\u304c\u2026\u2026)\n\nPureScript by Example \u3067\u306f\u52a0\u3048\u3066\u30a4\u30fc\u30bf\u5909\u63db\u306b\u89e6\u308c\u3066\u3044\u307e\u3059\u3002\n\n```\ninsertEntry :: Entry -> PhoneBook -> PhoneBook\ninsertEntry entry book = Cons entry book\n```\n\n\u3053\u308c\u306f\n\n```\ninsertEntry :: Entry -> PhoneBook -> PhoneBook\ninsertEntry = Cons\n```\n\n\u3068\u540c\u3058\u52d5\u304d\u3092\u3057\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u540c\u3058\u5f15\u6570\u306a\u306e\u3067\u3001\u308f\u3056\u308f\u3056\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u3002\n\n\u3053\u306e\u5f62\u5f0f\u306b\u306f\u5229\u70b9\u304c\u3042\u308b\u306e\u3067\u3057\u3087\u3046\u304c\u3001\u500b\u4eba\u7684\u306b\u306f\u5f15\u6570\u3092\u660e\u793a\u3057\u3066\u3044\u308b\u307b\u3046\u304c\u8aad\u307f\u3084\u3059\u3044\u3088\u3046\u306b\u611f\u3058\u307e\u3059\u3002\u578b\u3092\u898b\u306a\u3044\u3068\u4f55\u3092\u53d6\u308b\u306e\u304b\u3082\u3088\u304f\u5206\u304b\u308a\u307e\u305b\u3093\u3057\u2026\u2026\u3002\u307e\u3060\u6163\u308c\u3066\u3044\u306a\u3044\u3060\u3051\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n## PureScript by Example 3.12\n\n`List` \u306e\u305f\u3081\u306e\u95a2\u6570\u3092\u7d44\u307f\u5408\u308f\u305b\u3066 `AddressBook` \u304b\u3089 `Entry` \u3092\u63a2\u3059\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\n```\n> import Data.List\n> :t filter\nforall a. (a -> Boolean) -> List a -> List a\n\n> :t head\nforall a. List a -> Maybe a\n```\n\n`filter` \u306f\u30ab\u30ea\u30fc\u5316\u3055\u308c\u305f 2 \u5f15\u6570\u306e\u95a2\u6570\u3067\u3059\u306d\u3002\u7b2c 1 \u5f15\u6570\u306e\u95a2\u6570\u3067\u7b2c 2 \u5f15\u6570\u306e `List` \u3092 filter \u3057\u3066\u3001\u305d\u306e\u7d50\u679c\u3067\u3042\u308b `List` \u3092\u8fd4\u3059\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\n`head` \u306f `List` \u306e\u5148\u982d\u8981\u7d20\u3092\u8fd4\u3057\u307e\u3059\u3002\n\nPursuit:\n\n- [filter - Data.List - purescript-lists - Pursuit][pursuit-filter]\n- [head - Data.List - purescript-lists - Pursuit][pursuit-head]\n\n`a` \u3092\u305d\u308c\u305e\u308c AddressBook \u306b\u304a\u3051\u308b\u8981\u7d20\u306b\u7f6e\u304d\u63db\u3048\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\nfilter :: (Entry -> Boolean) -> AddressBook -> AddressBook\nhead :: AddressBook -> Maybe Entry\n```\n\n\u3053\u308c\u3089\u3092\u4f7f\u3063\u3066 `findEntry` \u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\n```\nfindEntry :: String -> String -> AddressBook -> Maybe Entry\nfindEntry firstName lastName book = head $ filter filterEntry book\n  where\n    filterEntry :: Entry -> Boolean\n    filterEntry entry = entry.firstName == firstName && entry.lastName == lastName\n```\n\n`($)` \u3084 `where` \u304c\u521d\u51fa\u306a\u3093\u3067\u3059\u3051\u3069\u3001\u6982\u8981\u3068\u3057\u3066\u306f `filter` \u3057\u305f\u3082\u306e\u3092 `head` \u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\n`where` \u3067\u88dc\u52a9\u95a2\u6570\u3068\u3057\u3066 `filterEntry` \u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002`findEntry` \u306e\u5f15\u6570\u306b\u6e21\u3055\u308c\u305f `firstName` \u3068 `lastName` \u306b\u4e00\u81f4\u3059\u308b `Entry` \u304b\u3092 `Boolean` \u3067\u8fd4\u3059\u95a2\u6570\u3067\u3059\u306d\u3002\n\n## PureScript by Example 3.13\n\n\u4e2d\u7f6e\u6f14\u7b97\u5b50 (infix operator) \u30fb\u4e2d\u7f6e\u95a2\u6570 (infix function) \u306e\u8a71\u3067\u3059\u3002\u4e0a\u8a18\u306e `($)` \u306b\u95a2\u9023\u3057\u305f\u8a71\u3067\u3059\u3002\n\nPursuit:\n\n- [($) - Data.Function - purescript-prelude - Pursuit][pursuit-apply]\n\n`head $ filter filterEntry book` \u306f `head (filter filterEntry book)` \u3068\u540c\u3058\u52d5\u304d\u3092\u3057\u307e\u3059\u3002\n\n`($)` \u306f `apply` \u306e alias \u3067\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```\napply :: forall a b. (a -> b) -> a -> b\napply f x = f x\n\ninfixr 0 apply as $\n```\n\n`($)` \u306f\u53f3\u7d50\u5408\u306e\u4f4e\u3044\u512a\u5148\u9806\u4f4d\u306e\u6f14\u7b97\u5b50\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 `apply` \u306f\u7b2c\u4e00\u5f15\u6570\u306e\u95a2\u6570\u3092\u7b2c\u4e8c\u5f15\u6570\u306e\u5024\u306b\u9069\u7528\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n\n`($)` \u3092\u4f7f\u3048\u3070\u62ec\u5f27\u306e\u5165\u308c\u5b50\u3092\u89e3\u6d88\u3067\u304d\u307e\u3059\u3002\n\n```\nstreet (address (boss employee))\nstreet $ address $ boss employee\n```\n\n\u306a\u308b\u307b\u3069\u3001\u4fbf\u5229\u3067\u3059\u306d\u3002\n\n\u3061\u306a\u307f\u306b\u95a2\u6570\u3092\u6f14\u7b97\u5b50\u7684\u306b\u4f7f\u3046\u3053\u3068\u3082\u3001\u305d\u306e\u9006\u3082\u3067\u304d\u307e\u3059\u3002\u6f14\u7b97\u5b50\u3092\u95a2\u6570\u7684\u306b\u4f7f\u3046\u5834\u5408\u306f `()` \u3067\u62ec\u308a\u3001\u95a2\u6570\u3092\u6f14\u7b97\u5b50\u7684\u306b\u4f7f\u3046\u5834\u5408\u306f ` \u3067\u62ec\u308c\u3070\u826f\u3044\u3067\u3059\u3002\n\n```\nnpm run pulp:psci\n> chapter3@1.0.0 pulp:psci /Users/bouzuya/.ghq/github.com/paf31/purescript-book/exercises/chapter3\n> pulp psci\n\nPSCi, version 0.10.2\nType :? for help\n\n> import Prelude ((+))\n> 1 + 2\n3\n\n> (+) 1 2\n3\n\n> let f = (+)\n> f 1 2\n3\n\n> 1 `f` 2\n3\n```\n\nLanguage Guide:\n\n- [Functions as Operators - Language Guide][language-guide-functions-and-operators]\n- [User-defined operators - Language Guide][language-guide-user-defined-operators]\n[https://github.com/purescript/purescript/wiki/Language-Guide#functions-as-operators]\n\n## PureScript by Example 3.14\n\n\u95a2\u6570\u5408\u6210\u306e\u8a71\u3067\u3059\u306d\u3002`>>>` \u3068 `<<<` \u3067\u3059\u3002\u305d\u308c\u305e\u308c `compose` \u3068 `composeFlipped` \u306e alias \u3067\u3059\u3002\n\nPursuit:\n\n- [(<<<) - Control.Semigroupoid - purescript-prelude - Pursuit][pursuit-compose]\n- [(>>>) - Control.Semigroupoid - purescript-prelude - Pursuit][pursuit-compose-flipped]\n\n\u524d\u8ff0\u306e `findEntry` \u3067\u3042\u308c\u3070\u6b21\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u3089\u308c\u307e\u3059\u3002\n\n```\nhead $ filter filterEntry book\n(head <<< filter filterEntry) book\n(filter filterEntry >>> head) book\n```\n\n`insertEntry = Cons` \u306e\u3088\u3046\u306b `book` \u3092\u524a\u308c\u3070\u3001`findEntry firstName lastName = head <<< filter filterEntry` \u3068\u3067\u304d\u307e\u3059\u3002\u3075\u3080\u3075\u3080\u3002\n\n## PureScript by Example 3.15\n\n`psci` \u3067\u305f\u3081\u3057\u3066\u3044\u307e\u3059\u306d\u3002\n\n`Show` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306a\u3044\u3068\u8868\u793a\u3067\u304d\u306a\u3044\u7b87\u6240\u306f `map showEntry entry` \u306e\u3088\u3046\u306b\u3057\u3066\u56de\u907f\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u53e4\u3044\u5206\u3060\u3068 `(<$>)` \u3088\u308a\u3082\u8aad\u307f\u304b\u305f\u306e\u5206\u304b\u308b `map` \u306b\u306a\u3063\u305f\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u304b\u3002\n\nPursuit:\n\n- [map - Data.Functor - purescript-prelude - Pursuit][pursuit-map]\n- [(<$>) - Data.Functor - purescript-prelude - Pursuit][pursuit-map-op]\n\n## \u307e\u3068\u3081\n\n3 \u7ae0\u306e\u5f8c\u534a\u306f\u5bc6\u5ea6\u304c\u9ad8\u304b\u3063\u305f\u3067\u3059\u3002\u614c\u3066\u3066\u9032\u3081\u305f\u306e\u3067\u3001\u96d1\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n## \u53c2\u8003\n\n- [Language Guide - Functions as Operators][language-guide-functions-and-operators]\n- [Language Guide - Kind System][language-guide-kind-system]\n- [Language Guide - Type Synonyms][language-guide-type-synonyms]\n- [Language Guide - User-defined operators][language-guide-user-defined-operators]\n- [Language Guide](https://github.com/purescript/purescript/wiki/Language-Guide)\n- [PureScript by Example - 3. Functions and Records][purescript-by-example-3]\n- [PureScript by Example][purescript-by-example]\n- [Pursuit - (<$>) - Data.Functor - purescript-prelude][pursuit-map-op]\n- [Pursuit - (<<<) - Control.Semigroupoid - purescript-prelude][pursuit-compose]\n- [Pursuit - (>>>) - Control.Semigroupoid - purescript-prelude][pursuit-compose-flipped]\n- [Pursuit - filter - Data.List - purescript-lists][pursuit-filter]\n- [Pursuit - head - Data.List - purescript-lists][pursuit-head]\n- [Pursuit - map - Data.Functor - purescript-prelude][pursuit-map]\n- [Pursuit][pursuit]\n- [paf31/purescript-book][]\n\n## \u6b21\u56de\u4ee5\u964d\u306e TODO\n\n- PureScript by Example & PureScript Language Guide \u3092\u8aad\u307f\u9032\u3081\u308b\n- Tagged Unions / Newtype\n- `psc-package`\n- PureScript IDE \u306e\u5c0e\u5165\n- [24 Days of PureScript, 2016][paf31/24-days-of-purescript-2016]\n- [24 Days of PureScript, 2014](https://gist.github.com/paf31/8e9177b20ee920480fbc)\n- \u67d0\u6c0f\u306e\u8a18\u4e8b\u306e\u7d39\u4ecb\n- [github.com/purescript](https://github.com/purescript/) \u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\n- [github.com/purescript-node](https://github.com/purescript-node) \u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\n- [github.com/purescript-contrib](https://github.com/purescript-contrib) \u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\n\n[2016-12-01]: http://qiita.com/bouzuya/items/a5be85ec3e496e5bf436\n[2016-12-02]: http://qiita.com/bouzuya/items/806335ea74ead0e33d95\n[2016-12-03]: http://qiita.com/bouzuya/items/86cc9aaaddcc1aa790cf\n[2016-12-04]: http://qiita.com/bouzuya/items/b2b80c22c50d0c1e739c\n[2016-12-05]: http://qiita.com/bouzuya/items/f19ee0b86e9aec3f0afa\n[2016-12-06]: http://qiita.com/bouzuya/items/4694ac25f68931115319\n[2016-12-07]: http://qiita.com/bouzuya/items/62c6ad30ecba3c68a7a3\n[2016-12-09]: http://qiita.com/bouzuya/items/868eafc19b96619c025a\n[paf31/24-days-of-purescript-2016]: https://github.com/paf31/24-days-of-purescript-2016\n[paf31/purescript-book]: https://github.com/paf31/purescript-book/tree/8ad7d2af75ad4c795d5075018e9ee45005799e6f\n[pursuit]: https://pursuit.purescript.org/\n[pursuit-apply]: https://pursuit.purescript.org/packages/purescript-prelude/2.1.0/docs/Data.Function#v:($)\n[pursuit-compose]: https://pursuit.purescript.org/packages/purescript-prelude/2.1.0/docs/Control.Semigroupoid#v:(%3C%3C%3C)\n[pursuit-compose-flipped]: https://pursuit.purescript.org/packages/purescript-prelude/2.1.0/docs/Control.Semigroupoid#v:(%3E%3E%3E)\n[pursuit-filter]: https://pursuit.purescript.org/packages/purescript-lists/3.2.1/docs/Data.List#v:filter\n[pursuit-head]: https://pursuit.purescript.org/packages/purescript-lists/3.2.1/docs/Data.List#v:head\n[pursuit-map-op]: https://pursuit.purescript.org/packages/purescript-prelude/2.1.0/docs/Data.Functor#v:(%3C$%3E)\n[pursuit-map]: https://pursuit.purescript.org/packages/purescript-prelude/2.1.0/docs/Data.Functor#v:map\n[purescript/purescript-math]: https://github.com/purescript/purescript-math\n[purescript-by-example]: https://leanpub.com/purescript/read\n[purescript-by-example-3]: https://leanpub.com/purescript/read#leanpub-auto-functions-and-records\n[purescript-by-example-ja]: http://hiruberuto.bitbucket.org/purescript/\n[language-guide]: https://github.com/purescript/purescript/wiki/Language-Guide\n[language-guide-type-synonyms]: https://github.com/purescript/purescript/wiki/Language-Guide#type-synonyms\n[language-guide-kind-system]: https://github.com/purescript/purescript/wiki/Language-Guide#kind-system\n[language-guide-functions-and-operators]: https://github.com/purescript/purescript/wiki/Language-Guide#functions-as-operators\n[language-guide-user-defined-operators]: https://github.com/purescript/purescript/wiki/Language-Guide#user-defined-operators\n", "tags": ["purescript"]}