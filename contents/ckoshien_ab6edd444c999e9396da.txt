{"context": " More than 1 year has passed since last update.RhythmicaLylics\u3067txt2ass\u51fa\u529b\u3057\u305f\u30ab\u30e9\u30aa\u30b1\u30bf\u30b0\u3092\u8aad\u307f\u8fbc\u3080\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\n\u3053\u306e\u5f8caviutl\u3067\u8aad\u307f\u8fbc\u3081\u308bexo\u5f62\u5f0f\u3067\u306e\u51fa\u529b\u3092\u4e88\u5b9a\u3002\n\n\u6b63\u898f\u8868\u73fe\u3068\u30c6\u30ad\u30b9\u30c8\u51e6\u7406\u96e3\u3057\u3044\u3002\n\npublic class ass2exoJ {\n    private static List<Tag> wordList;\n    private static List<Tag> rubyStrList;\n\n\n\n    public static void main(String args[]){\n        String fileName=\"aaaaaaa.kra\";\n        File file = new File(fileName);\n\n        try {\n            BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file),\"MS932\"));\n            String str;\n            wordList=new ArrayList<Tag>();\n            rubyStrList=new ArrayList<Tag>();\n            str=br.readLine();\n            while(str != null){\n                //()\u62ec\u308a\u306e\u30eb\u30d3\u90e8\u3092\u629c\u304d\u51fa\u3059\n                Pattern pattern = Pattern.compile(\"\\\\(.+?\\\\)\");\n                Matcher matcher = pattern.matcher(str);\n                List<String> rubyList = new ArrayList<String>();\n                List<String> charList = new ArrayList<String>();\n                String rubyStr;\n                while (matcher.find()) {\n                    rubyStr=matcher.group().replace(\"(\",\"\");\n                    rubyStr=rubyStr.replace(\")\",\"\");\n                    rubyList.add(rubyStr);\n                }\n                for (int i=0;i<rubyList.size();i++) {\n                    //\u30eb\u30d3\u3092\u30bf\u30a4\u30e0\u30b3\u30fc\u30c9\u3092\u542b\u3081\u3066\u9664\u53bb;\n                    //System.out.println(rubyList.get(i));\n                    str=str.replace(rubyList.get(i), \"\");\n                }\n                //\u5168\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u3092\u9664\u53bb\n                str=str.replaceAll(\" \", \"\");\n                str=str.replaceAll(\"\u3000\", \"\");\n\n                Pattern pattern2 = Pattern.compile(\"\\\\[.+?\\\\]..?\\\\[.+?\\\\]\");\n                Matcher matcher2 = pattern2.matcher(str);\n                while (matcher2.find()) {\n                    charList.add(matcher2.group());\n                }\n                rubyStrList=addTagList(rubyList, rubyStrList);\n                wordList = addTagList(charList,wordList);\n                str = br.readLine();\n            }\n            for(int i=0;i<wordList.size();i++){\n                if(wordList.get(i).lineEndFlg==0){\n                    System.out.print(\"[\"+wordList.get(i).beginTime+\"]\"+\"\"+wordList.get(i).word+\"[\"+wordList.get(i).endTime+\"]\");\n                }else{\n                    System.out.println(\"[\"+wordList.get(i).beginTime+\"]\"+\"\"+wordList.get(i).word+\"[\"+wordList.get(i).endTime+\"]\");\n                }\n\n            }\n            for(int i=0;i<rubyStrList.size();i++){\n                if(rubyStrList.get(i).lineEndFlg==0){\n                    System.out.print(\"[\"+rubyStrList.get(i).beginTime+\"]\"+\"\"+rubyStrList.get(i).word+\"[\"+rubyStrList.get(i).endTime+\"]\");\n                }else{\n                    System.out.println(\"[\"+rubyStrList.get(i).beginTime+\"]\"+\"\"+rubyStrList.get(i).word+\"[\"+rubyStrList.get(i).endTime+\"]\");\n                }\n\n            }\n\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n    }\n\n\n\n    public static List<Tag> addTagList(List<String> list,List<Tag> wordList){\n        for (int i=0;i<list.size();i++) {\n            Tag tag = new Tag();\n            String str;\n            //\u30bf\u30a4\u30e0\u30b3\u30fc\u30c9\u304c3\u500b\u4ee5\u4e0a\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\n            if(list.get(i).split(\"\\\\[\").length - 1>2){\n                int index=list.get(i).indexOf(\"]\");\n                //\u6587\u5b57\u5217\u3092\u629c\u304d\u51fa\u3057\u3066\u8981\u7d20\u5165\u308c\u66ff\u3048\n                str = list.get(i).substring(index+1);\n                tag.beginTime=str.substring(str.indexOf(\"[\")+1, str.indexOf(\"]\"));\n                tag.word=str.substring(str.indexOf(\"]\")+1,str.lastIndexOf(\"[\"));\n                tag.endTime=str.substring(str.lastIndexOf(\"[\")+1, str.lastIndexOf(\"]\"));\n            }else{\n                str = list.get(i);\n                tag.beginTime=str.substring(str.indexOf(\"[\")+1, str.indexOf(\"]\"));\n                tag.word=str.substring(str.indexOf(\"]\")+1,str.lastIndexOf(\"[\"));\n                tag.endTime=str.substring(str.lastIndexOf(\"[\")+1, str.lastIndexOf(\"]\"));\n            }\n            if(i==list.size()-1){\n                tag.lineEndFlg=1;\n            }else{\n                tag.lineEndFlg=0;\n            }\n            wordList.add(tag);\n        }\n        return wordList;\n    }\n}\n\npublic class Tag {\n    public String beginTime;\n    public String endTime;\n    public String word;\n    public int lineEndFlg;\n\n}\n\nRhythmicaLylics\u3067txt2ass\u51fa\u529b\u3057\u305f\u30ab\u30e9\u30aa\u30b1\u30bf\u30b0\u3092\u8aad\u307f\u8fbc\u3080\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\n\u3053\u306e\u5f8caviutl\u3067\u8aad\u307f\u8fbc\u3081\u308bexo\u5f62\u5f0f\u3067\u306e\u51fa\u529b\u3092\u4e88\u5b9a\u3002\n\n- \u6b63\u898f\u8868\u73fe\u3068\u30c6\u30ad\u30b9\u30c8\u51e6\u7406\u96e3\u3057\u3044\u3002\n\n```java\npublic class ass2exoJ {\n\tprivate static List<Tag> wordList;\n\tprivate static List<Tag> rubyStrList;\n\n\n\n\tpublic static void main(String args[]){\n\t\tString fileName=\"aaaaaaa.kra\";\n\t\tFile file = new File(fileName);\n\n\t\ttry {\n\t\t\tBufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file),\"MS932\"));\n\t\t\tString str;\n\t\t\twordList=new ArrayList<Tag>();\n\t\t\trubyStrList=new ArrayList<Tag>();\n\t\t\tstr=br.readLine();\n\t\t\twhile(str != null){\n\t\t\t\t//()\u62ec\u308a\u306e\u30eb\u30d3\u90e8\u3092\u629c\u304d\u51fa\u3059\n\t\t\t\tPattern pattern = Pattern.compile(\"\\\\(.+?\\\\)\");\n\t\t\t\tMatcher matcher = pattern.matcher(str);\n\t\t\t\tList<String> rubyList = new ArrayList<String>();\n\t\t\t\tList<String> charList = new ArrayList<String>();\n\t\t        String rubyStr;\n\t\t\t\twhile (matcher.find()) {\n\t\t        \trubyStr=matcher.group().replace(\"(\",\"\");\n\t\t        \trubyStr=rubyStr.replace(\")\",\"\");\n\t\t            rubyList.add(rubyStr);\n\t\t        }\n\t\t        for (int i=0;i<rubyList.size();i++) {\n\t\t        \t//\u30eb\u30d3\u3092\u30bf\u30a4\u30e0\u30b3\u30fc\u30c9\u3092\u542b\u3081\u3066\u9664\u53bb;\n\t\t        \t//System.out.println(rubyList.get(i));\n\t\t        \tstr=str.replace(rubyList.get(i), \"\");\n\t\t        }\n\t\t        //\u5168\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u3092\u9664\u53bb\n\t\t        str=str.replaceAll(\" \", \"\");\n\t\t        str=str.replaceAll(\"\u3000\", \"\");\n\n\t\t        Pattern pattern2 = Pattern.compile(\"\\\\[.+?\\\\]..?\\\\[.+?\\\\]\");\n\t\t\t\tMatcher matcher2 = pattern2.matcher(str);\n\t\t\t\twhile (matcher2.find()) {\n\t\t            charList.add(matcher2.group());\n\t\t        }\n\t\t\t\trubyStrList=addTagList(rubyList, rubyStrList);\n\t\t\t\twordList = addTagList(charList,wordList);\n\t\t\t\tstr = br.readLine();\n\t\t\t}\n\t\t\tfor(int i=0;i<wordList.size();i++){\n\t\t\t\tif(wordList.get(i).lineEndFlg==0){\n\t\t\t\t\tSystem.out.print(\"[\"+wordList.get(i).beginTime+\"]\"+\"\"+wordList.get(i).word+\"[\"+wordList.get(i).endTime+\"]\");\n\t\t\t\t}else{\n\t\t\t\t\tSystem.out.println(\"[\"+wordList.get(i).beginTime+\"]\"+\"\"+wordList.get(i).word+\"[\"+wordList.get(i).endTime+\"]\");\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tfor(int i=0;i<rubyStrList.size();i++){\n\t\t\t\tif(rubyStrList.get(i).lineEndFlg==0){\n\t\t\t\t\tSystem.out.print(\"[\"+rubyStrList.get(i).beginTime+\"]\"+\"\"+rubyStrList.get(i).word+\"[\"+rubyStrList.get(i).endTime+\"]\");\n\t\t\t\t}else{\n\t\t\t\t\tSystem.out.println(\"[\"+rubyStrList.get(i).beginTime+\"]\"+\"\"+rubyStrList.get(i).word+\"[\"+rubyStrList.get(i).endTime+\"]\");\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} catch (FileNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n\n\n\n\tpublic static List<Tag> addTagList(List<String> list,List<Tag> wordList){\n\t\tfor (int i=0;i<list.size();i++) {\n\t\t\tTag tag = new Tag();\n\t\t\tString str;\n\t\t\t//\u30bf\u30a4\u30e0\u30b3\u30fc\u30c9\u304c3\u500b\u4ee5\u4e0a\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\n\t\t\tif(list.get(i).split(\"\\\\[\").length - 1>2){\n\t\t\t\tint index=list.get(i).indexOf(\"]\");\n\t\t\t\t//\u6587\u5b57\u5217\u3092\u629c\u304d\u51fa\u3057\u3066\u8981\u7d20\u5165\u308c\u66ff\u3048\n\t\t\t\tstr = list.get(i).substring(index+1);\n\t\t\t\ttag.beginTime=str.substring(str.indexOf(\"[\")+1, str.indexOf(\"]\"));\n\t\t\t\ttag.word=str.substring(str.indexOf(\"]\")+1,str.lastIndexOf(\"[\"));\n\t\t\t\ttag.endTime=str.substring(str.lastIndexOf(\"[\")+1, str.lastIndexOf(\"]\"));\n\t\t\t}else{\n\t\t\t\tstr = list.get(i);\n\t\t\t\ttag.beginTime=str.substring(str.indexOf(\"[\")+1, str.indexOf(\"]\"));\n\t\t\t\ttag.word=str.substring(str.indexOf(\"]\")+1,str.lastIndexOf(\"[\"));\n\t\t\t\ttag.endTime=str.substring(str.lastIndexOf(\"[\")+1, str.lastIndexOf(\"]\"));\n\t\t\t}\n\t\t\tif(i==list.size()-1){\n\t\t\t\ttag.lineEndFlg=1;\n\t\t\t}else{\n\t\t\t\ttag.lineEndFlg=0;\n\t\t\t}\n\t\t\twordList.add(tag);\n\t\t}\n\t\treturn wordList;\n\t}\n}\n\npublic class Tag {\n\tpublic String beginTime;\n\tpublic String endTime;\n\tpublic String word;\n\tpublic int lineEndFlg;\n\n}\n```\n", "tags": ["ASS", "Java", "\u6b63\u898f\u8868\u73fe"]}