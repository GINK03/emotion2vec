{"context": "\n\nRxJava \u5165\u9580\u8a18\u4e8b\u30b9\u30af\u30e9\u30c3\u30d7\n\u203b\u30b9\u30af\u30e9\u30c3\u30d7\u306f\u73fe\u5728\u9032\u884c\u4e2d\u3067\u3059\n\u5f15\u7528\u8a18\u4e8b\u3067\u3059\u304c\u3001\u8457\u8005\u306e\u660e\u793a\u304c\u9593\u306b\u5408\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\n\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n\n\u65e5\u672c\u8a9e\n\n2015\u5e74\u306b\u5099\u3048\u3066\u77e5\u3063\u3066\u304a\u304d\u305f\u3044\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u6f6e\u6d41\n\n\uff08\u95a2\u6570\u578b\uff09\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u306f\u4f55\u3067\u3059\u304b\uff1f\uff08\u7ffb\u8a33\u8a18\u4e8b\uff09\n\u6ce8\u76ee\u3092\u96c6\u3081\u308b\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u305f\u3081\u306e Rx \u5165\u9580\uff08\u524d\u7de8\uff09\n\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u305f\u3081\u306e Rx \u5165\u9580\uff08\u5f8c\u7de8\uff09\n\u306a\u305c\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u91cd\u8981\u304b\u3002\n\n\n\u82f1\u8a9e\n\nReactiveX\nReactive programming - Wikipedia\nFunctional Reactive Programming with RxJava\nBuild Your Custom Observable/Operator\nHow to read \"marble diagram\"\n\n\nRxJava\n\n\u65e5\u672c\u8a9e\n\nReactiveX \uff08\u30ea\u30a2\u30af\u30c6\u30a3\u30d6 \u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\uff09\u306b\u5165\u9580\u3057\u305f\n7\u3064\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5b66\u3076RxJava\u306e\u6319\u52d5\nRxJava\u5b66\u7fd2\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3063\u307d\u3044\u3082\u306e\n\u660e\u65e5\u304b\u3089\u4f7f\u3048\u308bRxjava\u983b\u51fa\u30d1\u30bf\u30fc\u30f3 (Droid kaigi 2016)\n\n\n\u82f1\u8a9e\n\n\nMastering observables - Couchbase Server 3.0/3.1 Developer Guide\n\nCouchbase \u306e\u958b\u767a\u8005\u30ac\u30a4\u30c9\u306bObservable\u306e\u4f7f\u3044\u65b9\u89e3\u8aac\u304c\u3042\u308b\n\n\nDemystifying RxJava Subscribers (\u00d8redev 2015)\nHiroshi Kurokawa: DroidKaigi, Custom Rx Operators and Observables\n\n\n\u6700\u65b0\u60c5\u5831\n\n\u65e5\u672c\u8a9e\n\n\nRxJava Advent Calendar 2015\n\n\u4eca\u5e74\u306e\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\n\n\n\n# RxJava \u5165\u9580\u8a18\u4e8b\u30b9\u30af\u30e9\u30c3\u30d7\n\n```\n\u203b\u30b9\u30af\u30e9\u30c3\u30d7\u306f\u73fe\u5728\u9032\u884c\u4e2d\u3067\u3059\n\u5f15\u7528\u8a18\u4e8b\u3067\u3059\u304c\u3001\u8457\u8005\u306e\u660e\u793a\u304c\u9593\u306b\u5408\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n```\n\n## \u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n### \u65e5\u672c\u8a9e\n- [2015\u5e74\u306b\u5099\u3048\u3066\u77e5\u3063\u3066\u304a\u304d\u305f\u3044\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u6f6e\u6d41](http://qiita.com/hirokidaichi/items/9c1d862099c2e12f5b0f)\n- [\uff08\u95a2\u6570\u578b\uff09\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u306f\u4f55\u3067\u3059\u304b\uff1f](http://postd.cc/what-is-functional-reactive-programming/)\uff08\u7ffb\u8a33\u8a18\u4e8b\uff09\n- [\u6ce8\u76ee\u3092\u96c6\u3081\u308b\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0](http://www.infoq.com/jp/news/2013/09/reactive-programming-emerging)\n- [\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u305f\u3081\u306e Rx \u5165\u9580\uff08\u524d\u7de8\uff09](http://okapies.hateblo.jp/entry/2015/03/04/031148)\n- [\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u305f\u3081\u306e Rx \u5165\u9580\uff08\u5f8c\u7de8\uff09](http://okapies.hateblo.jp/entry/2015/03/15/184247)\n- [\u306a\u305c\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u91cd\u8981\u304b\u3002](http://d.hatena.ne.jp/pokarim/20101226)\n\n### \u82f1\u8a9e\n- [ReactiveX](http://reactivex.io/)\n- [Reactive programming - Wikipedia](https://en.wikipedia.org/wiki/Reactive_programming)\n- [Functional Reactive Programming with RxJava](https://speakerdeck.com/benjchristensen/functional-reactive-programming-with-rxjava-javaone-2013)\n- [Build Your Custom Observable/Operator](https://speakerdeck.com/hkurokawa/operator)\n- [How to read \"marble diagram\"](http://www.slideshare.net/yanzm/how-to-read-marble-diagram)\n\n## RxJava \n### \u65e5\u672c\u8a9e\n- [ReactiveX \uff08\u30ea\u30a2\u30af\u30c6\u30a3\u30d6 \u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\uff09\u306b\u5165\u9580\u3057\u305f](http://bati11blog.hatenablog.com/entry/2015/04/30/170343)\n- [7\u3064\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5b66\u3076RxJava\u306e\u6319\u52d5](http://techlife.cookpad.com/entry/2015/04/13/170000)\n- [RxJava\u5b66\u7fd2\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3063\u307d\u3044\u3082\u306e](https://speakerdeck.com/sys1yagi/rxjavaxue-xi-falsehesutohurakuteisutuhoimofalse)\n- [\u660e\u65e5\u304b\u3089\u4f7f\u3048\u308bRxjava\u983b\u51fa\u30d1\u30bf\u30fc\u30f3 (Droid kaigi 2016)](http://www.slideshare.net/KazukiYoshida/droidkaigi-rxjava)\n\n\n### \u82f1\u8a9e\n- [Mastering observables - Couchbase Server 3.0/3.1 Developer Guide](http://docs.couchbase.com/developer/java-2.1/observables.html)\n - Couchbase \u306e\u958b\u767a\u8005\u30ac\u30a4\u30c9\u306bObservable\u306e\u4f7f\u3044\u65b9\u89e3\u8aac\u304c\u3042\u308b\n- [Demystifying RxJava Subscribers (\u00d8redev 2015)](https://speakerdeck.com/jakewharton/demystifying-rxjava-subscribers-oredev-2015)\n- [Hiroshi Kurokawa: DroidKaigi, Custom Rx Operators and Observables](https://youtu.be/nKc-bPp9hE8)\n\n## \u6700\u65b0\u60c5\u5831\n### \u65e5\u672c\u8a9e\n- [RxJava Advent Calendar 2015](http://qiita.com/advent-calendar/2015/rxjava)\n - \u4eca\u5e74\u306e\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\n", "tags": ["RxJava"]}