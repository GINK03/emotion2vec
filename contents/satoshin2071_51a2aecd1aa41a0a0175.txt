{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nGoogleSpeechAPIv2\u3067\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u3092RecordSoundBox\u3092\u5229\u7528\u3057\u3066\u751f\u6210\u3057\u305f\u969b\u306e\u30e1\u30e2\n\u3061\u306a\u307f\u306b\u30bf\u30fc\u30df\u30ca\u30eb\u7b49\u3067\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u305f\u3044\u3068\u304d\u306f\u4ee5\u4e0b\nsox\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nbrew install sox\n\nrec\u30b3\u30de\u30f3\u30c9\u3067\u9332\u97f3\nrec --encoding signed-integer --bits 16 --channels 1 --rate 16000 test.wav\n\n\n\u5909\u66f4\u7b87\u6240\nRecordSoundBox\u306e\u4e2d\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308bALAudioDevice\u3092ALAudioRecorder\u306b\u7f6e\u304d\u63db\u3048\u308b\u3002\n\nMyClass.py\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self, False)\n        try:\n            #self.ad = ALProxy(\"ALAudioDevice\")\n            self.audioRecorder = ALProxy(\"ALAudioRecorder\")\n        except Exception as e:\n            #self.ad = None\n            self.audioRecorder = None\n            self.logger.error(e)\n        self.filepath = \"\"\n\n    def onLoad(self):\n        self.bIsRecording = False\n        self.bIsRunning = False\n\n    def onUnload(self):\n        self.bIsRunning = False\n        if( self.bIsRecording ):\n            #self.ad.stopMicrophonesRecording()\n            self.audioRecorder.stopMicrophonesRecording()\n            self.bIsRecording = False\n\n    def onInput_onStart(self, p):\n        if(self.bIsRunning):\n            return\n        self.bIsRunning = True\n        sExtension = self.toExtension( self.getParameter(\"Microphones used\") )\n        self.filepath = p + sExtension\n        self.log(self.filepath)\n        #if self.ad:\n        if self.audioRecorder:\n            self.log('audioRecorder created!!!')\n            channnels = [0,0,1,0]\n            self.audioRecorder.startMicrophonesRecording(self.filepath,'wav', 16000, channnels)\n            #self.ad.startMicrophonesRecording( self.filepath )\n            self.bIsRecording = True\n        else:\n            self.logger.warning(\"No sound recorded\")\n\n    def onInput_onStop(self):\n        if( self.bIsRunning ):\n            self.onUnload()\n            self.onStopped(self.filepath)\n\n    def toExtension(self, sMicrophones):\n        if( sMicrophones == \"Front head microphone only (.ogg)\" ):\n            return \".ogg\"\n        else:\n\n\n\n\u5b9f\u969b\u306b\u5229\u7528\u3067\u304d\u308b\u304b\u30c1\u30a7\u30c3\u30af\n\nssh\u3067\u63a5\u7d9a\u3057\u3066/tmp\u4ee5\u4e0b\u306b\u751f\u6210\u3055\u308c\u305f\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u3092/home/nao\u306e\u9069\u5f53\u306a\u5834\u6240\u306b\u30b3\u30d4\u30fc\n\u30b3\u30ec\u30b0\u30e9\u30d5\u306e\u63a5\u7d9a\u2192\u4e0a\u7d1a\u5411\u3051\u2192\u30d5\u30a1\u30a4\u30eb\u306e\u8ee2\u9001\u3092\u4f7f\u3063\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9(FTP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u304a\u597d\u307f\u3067)\n\n\u3053\u3061\u3089\u306eRuby\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5229\u7528\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u3001speechAPI\u3092\u53e9\u3044\u3066\u78ba\u8a8d(\u30ad\u30fc\u7b49\u306f\u53d6\u5f97\u6e08\u307f\u3068\u3059\u308b)\n\n% ruby ./speech_api_example.rb recordings.wav\n{\"result\"=>[]}\n{\"result\"=>[{\"alternative\"=>[{\"transcript\"=>\"\u30a2\u30c3\u30d7\u30d5\u30ed\u30f3\u30c6\u30a3\u30a2\", \"confidence\"=>0.95207101}, {\"transcript\"=>\"\u30a2\u30c3\u30d7\u30d5\u30ed\u30f3\u30c8\"}, {\"transcript\"=>\"\u30d5\u30ed\u30f3\u30c6\u30a3\u30a2\"}, {\"transcript\"=>\"frontier\"}, {\"transcript\"=>\"\u30a2\u30c3\u30d7\u30d5\u30ed\u30f3\u30c8\u3088\"}], \"final\"=>true}], \"result_index\"=>0}\n\n\u3044\u3051\u307e\u3057\u305f\u3002\n## \u6982\u8981\nGoogleSpeechAPIv2\u3067\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u3092RecordSoundBox\u3092\u5229\u7528\u3057\u3066\u751f\u6210\u3057\u305f\u969b\u306e\u30e1\u30e2\n\n\u3061\u306a\u307f\u306b\u30bf\u30fc\u30df\u30ca\u30eb\u7b49\u3067\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u305f\u3044\u3068\u304d\u306f\u4ee5\u4e0b\n\n```\nsox\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nbrew install sox\n\nrec\u30b3\u30de\u30f3\u30c9\u3067\u9332\u97f3\nrec --encoding signed-integer --bits 16 --channels 1 --rate 16000 test.wav\n```\n\n## \u5909\u66f4\u7b87\u6240\nRecordSoundBox\u306e\u4e2d\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308bALAudioDevice\u3092ALAudioRecorder\u306b\u7f6e\u304d\u63db\u3048\u308b\u3002\n\n```python:MyClass.py\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self, False)\n        try:\n            #self.ad = ALProxy(\"ALAudioDevice\")\n            self.audioRecorder = ALProxy(\"ALAudioRecorder\")\n        except Exception as e:\n            #self.ad = None\n            self.audioRecorder = None\n            self.logger.error(e)\n        self.filepath = \"\"\n\n    def onLoad(self):\n        self.bIsRecording = False\n        self.bIsRunning = False\n\n    def onUnload(self):\n        self.bIsRunning = False\n        if( self.bIsRecording ):\n            #self.ad.stopMicrophonesRecording()\n            self.audioRecorder.stopMicrophonesRecording()\n            self.bIsRecording = False\n\n    def onInput_onStart(self, p):\n        if(self.bIsRunning):\n            return\n        self.bIsRunning = True\n        sExtension = self.toExtension( self.getParameter(\"Microphones used\") )\n        self.filepath = p + sExtension\n        self.log(self.filepath)\n        #if self.ad:\n        if self.audioRecorder:\n            self.log('audioRecorder created!!!')\n            channnels = [0,0,1,0]\n            self.audioRecorder.startMicrophonesRecording(self.filepath,'wav', 16000, channnels)\n            #self.ad.startMicrophonesRecording( self.filepath )\n            self.bIsRecording = True\n        else:\n            self.logger.warning(\"No sound recorded\")\n\n    def onInput_onStop(self):\n        if( self.bIsRunning ):\n            self.onUnload()\n            self.onStopped(self.filepath)\n\n    def toExtension(self, sMicrophones):\n        if( sMicrophones == \"Front head microphone only (.ogg)\" ):\n            return \".ogg\"\n        else:\n```\n## \u5b9f\u969b\u306b\u5229\u7528\u3067\u304d\u308b\u304b\u30c1\u30a7\u30c3\u30af\n\n1. ssh\u3067\u63a5\u7d9a\u3057\u3066/tmp\u4ee5\u4e0b\u306b\u751f\u6210\u3055\u308c\u305f\u97f3\u58f0\u30d5\u30a1\u30a4\u30eb\u3092/home/nao\u306e\u9069\u5f53\u306a\u5834\u6240\u306b\u30b3\u30d4\u30fc\n2. \u30b3\u30ec\u30b0\u30e9\u30d5\u306e\u63a5\u7d9a\u2192\u4e0a\u7d1a\u5411\u3051\u2192\u30d5\u30a1\u30a4\u30eb\u306e\u8ee2\u9001\u3092\u4f7f\u3063\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9(FTP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u304a\u597d\u307f\u3067)\n3. [\u3053\u3061\u3089\u306eRuby\u30b9\u30af\u30ea\u30d7\u30c8](http://qiita.com/ysk_1031/items/8b8990a65bc586f33a20)\u3092\u5229\u7528\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u3001speechAPI\u3092\u53e9\u3044\u3066\u78ba\u8a8d(\u30ad\u30fc\u7b49\u306f\u53d6\u5f97\u6e08\u307f\u3068\u3059\u308b)\n\n```\n% ruby ./speech_api_example.rb recordings.wav\n{\"result\"=>[]}\n{\"result\"=>[{\"alternative\"=>[{\"transcript\"=>\"\u30a2\u30c3\u30d7\u30d5\u30ed\u30f3\u30c6\u30a3\u30a2\", \"confidence\"=>0.95207101}, {\"transcript\"=>\"\u30a2\u30c3\u30d7\u30d5\u30ed\u30f3\u30c8\"}, {\"transcript\"=>\"\u30d5\u30ed\u30f3\u30c6\u30a3\u30a2\"}, {\"transcript\"=>\"frontier\"}, {\"transcript\"=>\"\u30a2\u30c3\u30d7\u30d5\u30ed\u30f3\u30c8\u3088\"}], \"final\"=>true}], \"result_index\"=>0}\n```\n\n\u3044\u3051\u307e\u3057\u305f\u3002\n", "tags": ["Pepper"]}