{"context": " More than 1 year has passed since last update.\u5e30\u3063\u3066\u304d\u3066\u304b\u3089\u306a\u3093\u304b\u3084\u308d\u3046\u3068\u601d\u3063\u3066\u3082\u7e8f\u307e\u3063\u305f\u6642\u9593\u304c\u53d6\u308c\u306a\u3044\u305f\u3081\u3001\n\u305d\u3093\u306a\u6642\u306f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u89e3\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\uff11\u65e5\uff11\u500b\u3001\u534a\u5e74\u3082\u3084\u308c\u3070\uff11\uff18\uff10\u500b\u3067\u3059\u3002\n\u5730\u9053\u306b\u3084\u3063\u3066\u3044\u304d\u307e\u3059\u3002\nAOJ\u306e\u3088\u3046\u306b\u4e88\u3081\u8ab2\u984c\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3068\u53d6\u3063\u4ed8\u304d\u3084\u3059\u3044\u3067\u3059\u306d\u3002\n\u305d\u3093\u306a\u8a33\u3067\u4eca\u56de\u306f\n\n\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\n\u7c21\u5358\u306b\u8a00\u3046\u3068\u3001\u3042\u308b\u914d\u5217\u306e\u672b\u5c3e\u3068\u672b\u5c3e\u2212\uff11\u306e\u6570\u3092\u6bd4\u8f03\u3057\u30bd\u30fc\u30c8\u3057\u3066\u3044\u304f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059\u3002\n\u305d\u3093\u306a\u306b\u88dc\u8db3\u306f\u5fc5\u8981\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u4e00\u5fdc\u4f8b\u3092\u66f8\u304f\u3068\n\u4f8b\n* \u914d\u5217 6 4 5 3 1 2\n\u4e26\u3073\u66ff\u3048\u306e\u9806\u5e8f\u306f\n* 6 4 5 3 1 2 // 1 < 2\u306a\u306e\u3067\u4f55\u3082\u3057\u306a\u3044\n* 6 4 5 1 3 2 // 3 < 1\u306a\u306e\u3067\u5165\u308c\u66ff\u3048\n* 6 4 1 5 3 2 // 5 < 1\u306a\u306e\u3067\u5165\u308c\u66ff\u3048\n* 6 1 4 5 3 2 // 4 < 1\u306a\u306e\u3067\u5165\u308c\u66ff\u3048\n* 1 6 4 5 3 2 // 6 < 1\u306a\u306e\u3067\u5165\u308c\u66ff\u3048\n* 1 6 4 5 2 3 // \u307e\u305f\u672b\u5c3e\u306e\u6570\u5024\u3092\u6bd4\u8f03\u3057\u3001 3 > 2\u306a\u306e\u3067\u5165\u308c\u66ff\u3048\n\u30fb\u30fb\u30fb\u7701\u7565 \npackage aoj.sort;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class BubbleSort {\n    public static void main(String args[]) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        // \u554f\u984c\u3092\u89e3\u304f\u70ba\u306b\u5165\u529b\u3092\u53d7\u3051\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u7121\u8996\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n        int elementNum = Integer.parseInt(br.readLine());\n        String line = br.readLine();\n        int[] numArray = parseInt(getSplitLine(line));\n\n                // \u3053\u3053\u304b\u3089\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\n        int count = 0;\n        for (int i = 0; i < numArray.length - 1; i++) {\n            for (int j = numArray.length - 1; j > i; j--) {\n                if (numArray[j - 1] > numArray[j]) {\n                    int tmpNum = numArray[j - 1];\n                    numArray[j - 1] = numArray[j];\n                    numArray[j] = tmpNum;\n                    count++;\n                }\n            }\n        }\n        System.out.println(Arrays.toString(numArray)\n                .replaceAll(\"[\\\\[\\\\],]\", \"\"));\n        System.out.println(count);\n    }\n\n    private static String[] getSplitLine(String line) {\n        return line.split(\"\\\\s\");\n    }\n\n    private static int[] parseInt(String[] line) {\n        int[] numArray = new int[line.length];\n        for (int i = 0; i < line.length; i++) {\n            numArray[i] = Integer.parseInt(line[i]);\n        }\n        return numArray;\n    }\n\n}\n\n\n\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\u306f\n\u30c7\u30fc\u30bf\u306e\u7dcf\u6570\u3092 num \u3068\u3059\u308b\u3068\u3001\u6bd4\u8f03\u56de\u6570\u306f\u3000num(num-1)/2\u3000\u56de\u3002\n\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n\u6d41\u77f3\u306b\u3082\u3046\u5c11\u3057\u96e3\u3057\u3044\u3082\u306e\u306b\u624b\u3092\u51fa\u3057\u305f\u3044\u3067\u3059\u304c\u3001\u30da\u30fc\u30b9\u3092\u5d29\u3055\u305a\n\u57fa\u672c\u3092\u3057\u3063\u304b\u308a\u601d\u3044\u51fa\u3057\u307e\u3057\u3087\u3046\u3002\u3002\u3002\n\u571f\u65e5\u306fScala\u3067BDD\u3067\u3082\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u5e30\u3063\u3066\u304d\u3066\u304b\u3089\u306a\u3093\u304b\u3084\u308d\u3046\u3068\u601d\u3063\u3066\u3082\u7e8f\u307e\u3063\u305f\u6642\u9593\u304c\u53d6\u308c\u306a\u3044\u305f\u3081\u3001\n\u305d\u3093\u306a\u6642\u306f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u89e3\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n\uff11\u65e5\uff11\u500b\u3001\u534a\u5e74\u3082\u3084\u308c\u3070\uff11\uff18\uff10\u500b\u3067\u3059\u3002\n\u5730\u9053\u306b\u3084\u3063\u3066\u3044\u304d\u307e\u3059\u3002\nAOJ\u306e\u3088\u3046\u306b\u4e88\u3081\u8ab2\u984c\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3068\u53d6\u3063\u4ed8\u304d\u3084\u3059\u3044\u3067\u3059\u306d\u3002\n\n\u305d\u3093\u306a\u8a33\u3067\u4eca\u56de\u306f\n\n#\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\n\n\u7c21\u5358\u306b\u8a00\u3046\u3068\u3001\u3042\u308b\u914d\u5217\u306e\u672b\u5c3e\u3068\u672b\u5c3e\u2212\uff11\u306e\u6570\u3092\u6bd4\u8f03\u3057\u30bd\u30fc\u30c8\u3057\u3066\u3044\u304f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059\u3002\n\u305d\u3093\u306a\u306b\u88dc\u8db3\u306f\u5fc5\u8981\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u4e00\u5fdc\u4f8b\u3092\u66f8\u304f\u3068\n\n\u4f8b\n* \u914d\u5217 6 4 5 3 1 2\n\u4e26\u3073\u66ff\u3048\u306e\u9806\u5e8f\u306f\n* 6 4 5 3 1 2 // 1 < 2\u306a\u306e\u3067\u4f55\u3082\u3057\u306a\u3044\n* 6 4 5 1 3 2 // 3 < 1\u306a\u306e\u3067\u5165\u308c\u66ff\u3048\n* 6 4 1 5 3 2 // 5 < 1\u306a\u306e\u3067\u5165\u308c\u66ff\u3048\n* 6 1 4 5 3 2 // 4 < 1\u306a\u306e\u3067\u5165\u308c\u66ff\u3048\n* 1 6 4 5 3 2 // 6 < 1\u306a\u306e\u3067\u5165\u308c\u66ff\u3048\n* 1 6 4 5 2 3 // \u307e\u305f\u672b\u5c3e\u306e\u6570\u5024\u3092\u6bd4\u8f03\u3057\u3001 3 > 2\u306a\u306e\u3067\u5165\u308c\u66ff\u3048\n\u30fb\u30fb\u30fb\u7701\u7565 \n\n```java\npackage aoj.sort;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class BubbleSort {\n\tpublic static void main(String args[]) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t// \u554f\u984c\u3092\u89e3\u304f\u70ba\u306b\u5165\u529b\u3092\u53d7\u3051\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u7121\u8996\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\t\tint elementNum = Integer.parseInt(br.readLine());\n\t\tString line = br.readLine();\n\t\tint[] numArray = parseInt(getSplitLine(line));\n\n                // \u3053\u3053\u304b\u3089\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\n\t\tint count = 0;\n\t\tfor (int i = 0; i < numArray.length - 1; i++) {\n\t\t\tfor (int j = numArray.length - 1; j > i; j--) {\n\t\t\t\tif (numArray[j - 1] > numArray[j]) {\n\t\t\t\t\tint tmpNum = numArray[j - 1];\n\t\t\t\t\tnumArray[j - 1] = numArray[j];\n\t\t\t\t\tnumArray[j] = tmpNum;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(Arrays.toString(numArray)\n\t\t\t\t.replaceAll(\"[\\\\[\\\\],]\", \"\"));\n\t\tSystem.out.println(count);\n\t}\n\n\tprivate static String[] getSplitLine(String line) {\n\t\treturn line.split(\"\\\\s\");\n\t}\n\n\tprivate static int[] parseInt(String[] line) {\n\t\tint[] numArray = new int[line.length];\n\t\tfor (int i = 0; i < line.length; i++) {\n\t\t\tnumArray[i] = Integer.parseInt(line[i]);\n\t\t}\n\t\treturn numArray;\n\t}\n\n}\n\n```\n\n\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\u306f\n\u30c7\u30fc\u30bf\u306e\u7dcf\u6570\u3092 num \u3068\u3059\u308b\u3068\u3001\u6bd4\u8f03\u56de\u6570\u306f\u3000num(num-1)/2\u3000\u56de\u3002\n\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u6d41\u77f3\u306b\u3082\u3046\u5c11\u3057\u96e3\u3057\u3044\u3082\u306e\u306b\u624b\u3092\u51fa\u3057\u305f\u3044\u3067\u3059\u304c\u3001\u30da\u30fc\u30b9\u3092\u5d29\u3055\u305a\n\u57fa\u672c\u3092\u3057\u3063\u304b\u308a\u601d\u3044\u51fa\u3057\u307e\u3057\u3087\u3046\u3002\u3002\u3002\n\u571f\u65e5\u306fScala\u3067BDD\u3067\u3082\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002", "tags": ["Java", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"]}