{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nLinux\u306b\u306f\u30d7\u30ed\u30bb\u30b9\u306e\u5165\u51fa\u529b\u3092\u30b3\u30de\u30f3\u30c9\u7b49\u3067\u3053\u3063\u305d\u308a\uff1f\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u4eca\u56de\u306f\u30d7\u30ed\u30bb\u30b9\u306e\u6a19\u6e96\u5165\u51fa\u529b\u3092\u8997\u3044\u3066\u3057\u307e\u3046\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u305d\u306e\uff11\uff08strace\u30b3\u30de\u30f3\u30c9\u306e\u6574\u5f62\uff09\n\u53c2\u8003\u30b5\u30a4\u30c8\uff1a\u8d70\u884c\u4e2d\u306e\u30d7\u30ed\u30bb\u30b9\u306e\u6a19\u6e96\u51fa\u529b\u3092\u6a2a\u53d6\u308a\u3059\u308b\u65b9\u6cd5 (\u30b3\u30de\u30f3\u30c9\u7248)\n\nscript1\nstrace -p `pgrep a.out` -e write -s 256 2>&1 | sed -ne 's/^write(1, \\\"\\(.*\\)\\\"\\.*, [0-9]*) *= [0-9]*$/\\1/p'\n\n\n\u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u73fe\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n\u3067\u3082\u51fa\u529b\u7d50\u679c\u7b49\u306f\u3042\u308b\u7a0b\u5ea6\u7e1b\u3089\u308c\u3066\u3044\u308b\u306e\u3067\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u306a\u3089\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u624b\u3092\u51fa\u305d\u3046\u3002\n\n\u305d\u306e\uff12\uff08ptrace\u306b\u3088\u308b\u30c4\u30fc\u30eb\u4f5c\u6210\uff09\n\u53c2\u8003\u30b5\u30a4\u30c8\uff1a\u8d70\u884c\u4e2d\u306e\u30d7\u30ed\u30bb\u30b9\u306e\u6a19\u6e96\u51fa\u529b\u3092\u6a2a\u53d6\u308a\u3059\u308b\u65b9\u6cd5 (ptrace\u7248)\n\u53c2\u8003\u30b5\u30a4\u30c8\uff1ahttp://guillot.iiens.net/softs/sniff-noecho.c\n\nmain.c\n#include <stdio.h>\n#include <unistd.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/ptrace.h>\n#include <sys/types.h>\n#include <sys/wait.h>\n#include <sys/syscall.h>\n#include <asm/user.h>\n\n\nvoid getdata(pid_t p, long addr, char *str, int len)\n{\n    int i;\n    long data;\n\n    for( i=0; i<len; i+=sizeof(long) ){\n        // \u6587\u5b57\u5217\u3092\u30b3\u30d4\u30fc\u3059\u308b\n        data = ptrace( PTRACE_PEEKDATA, p, addr+i, NULL );\n        memcpy( str+i, &data, sizeof(long) );\n    }\n    str[len] = '\\0';\n    return;\n}\n\n\nint main( int argc, char **argv ) {\n    pid_t p;\n    int st;\n    int fd=-1;\n    int in_syscall=1;\n    char *str;\n    struct user_regs_struct regs;\n\n\n    if( argc<2 ){\n        printf( \"usage: %s <pid> [<fd>]\\n\", argv[0] );\n        return 0;\n    }\n    if( argc>2 ) fd=atoi(argv[2]); // \u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\u6307\u5b9a\u306e\u3042\u308b\u3068\u304d\n\n    setbuf(stdout,NULL); // \u6a19\u6e96\u51fa\u529b\u3092\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3057\u306a\u3044\n\n    // \u30a2\u30bf\u30c3\u30c1\u3059\u308b\n    p = atoi(argv[1]);\n    if( ptrace(PTRACE_ATTACH,p,NULL,NULL)<0 ){\n        perror(\"ptrace\");\n        exit(1);\n    }\n    wait(&st); // \u7121\u3044\u3068\u5b89\u5b9a\u3057\u306a\u3044\n\n    while( ptrace(PTRACE_SYSCALL,p,NULL,NULL)==0 ){\n        // \u6b62\u307e\u308b\u306e\u3092\u5f85\u3064\n        wait(&st);\n        if(WIFEXITED(st)) break;\n\n        ptrace(PTRACE_GETREGS, p, 0, &regs);\n        do{\n            // \u6a19\u6e96\u5165\u51fa\u529b\u4ee5\u5916\u306f\u30b9\u30ad\u30c3\u30d7\n            if( ( regs.orig_eax != SYS_write )\n              &&( regs.orig_eax != SYS_read ) ){\n                break;\n            }\n\n            // \u6a19\u6e96\u51fa\u529b \u6761\u4ef6\u5224\u5b9a\n            if(regs.orig_eax==SYS_write){\n                if( fd != -1 && fd != regs.ebx ){\n                    break;\n                }\n            }\n            // \u6a19\u6e96\u5165\u529b \u6761\u4ef6\u5224\u5b9a\n            if(regs.orig_eax==SYS_read){\n                if( 0 != regs.ebx ){\n                    break;\n                }\n            }\n\n            // \u6a19\u6e96\u5165\u51fa\u529b\u306e\u51e6\u7406\n            // \u30ec\u30b8\u30b9\u30bf\u3092\u53d6\u308a\u51fa\u3059\n            // regs.orig_eax  \u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u756a\u53f7\n            // regs.ebx  \u30d5\u30a1\u30a4\u30eb\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\n            // regs.ecx  \u6587\u5b57\u5217\u306e\u3042\u308b\u30a2\u30c9\u30ec\u30b9\n            // regs.edx  \u30b5\u30a4\u30ba\n            in_syscall = 1-in_syscall; // \u4ea4\u4e92\u306b\n            if(in_syscall){\n                str = malloc( regs.edx+sizeof(long) ); // \u5c11\u3057\u4f59\u8a08\u306b\n                getdata( p, regs.ecx, str, regs.edx );\n                fputs(str,stdout);\n                free(str); // \u5f8c\u59cb\u672b\n            }\n        }while(0);\n    }\n\n    return 0;\n}\n\n\n\u3061\u306a\u307f\u306b\u4ee5\u4e0b\u306e\u7406\u7531\u3067\u3050\u3060\u3050\u3060\u306a\u30bd\u30fc\u30b9\u3067\u3042\u308b\u3002\n\n\u30a8\u30e9\u30fc\u51e6\u7406\u304c\u306a\u3044\natoi\u306b\u3066\u6570\u5b57\u4ee5\u5916\u304c\u304f\u308b\u5834\u5408\u306e\u30b1\u30a2\n\u6307\u5b9a\u3057\u305fpid\u306b\u5bfe\u3059\u308b\u30b1\u30a2\uff08\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u8aad\u8fbc\u307f\u6a29\u9650\u304c\u306a\u3044\u7b49\uff09\n\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u30a4\u30f3\u3001\u30a2\u30a6\u30c8\uff1f\u3092\u3057\u3063\u304b\u308a\u51e6\u7406\u3057\u3066\u3044\u306a\u3044\u3002\uff08\u4ea4\u4e92\u306b \u3068\u304b\u3044\u3046\u30b3\u30e1\u30f3\u30c8\u306e\u3068\u3053\u308d\u3067\u9069\u5f53\u306b\u3084\u3063\u3066\u3044\u308b\uff09\n\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3067SIG_HUP\u7b49\u53d7\u53d6\u3063\u305f\u5834\u5408\u306e\u7d42\u4e86\u51e6\u7406\u304c\u7121\u3044\u3002\uff08\uff1dptrace\u4e2d\u306bCtrl-C\u306a\u3093\u3066\u3084\u308b\u3068\u6a19\u6e96\u5165\u51fa\u529b\u304c\u8ff7\u5b50\u306b\u306a\u308b\uff09\nCentOS6 \u3067\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u5931\u6557\u3057\u305f\u3002\uff08error: asm/user.h: \u305d\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u3042\u308a\u307e\u305b\u3093\uff09\n\n\u3042\u3048\u3066\u4f5c\u308b\u307b\u3069\u3067\u3082\u306a\u3044\u304c\u3001Makefile\u3082\u4ee5\u4e0b\u306b\u3064\u3051\u3066\u304a\u304f\u3002\n\nMakefile\nSRCS  = ptrace_io.c\nTARGET= ptrace_io\n\nCC      = gcc\nCFLAGS  = -g -Wall\nINCLUDE =\n\n.SUFFIXES: .c .o\n.c.o:\n        $(CC) $(CFLAGS) $(INCLUDE) -c $< -o $@\n\nOBJS = $(SRCS:.c=.o)\n\nall: $(TARGET)\n\n$(TARGET):$(OBJS)\n        -@/bin/rm $@ > /dev/null 2>&1\n        $(CC) -o $(TARGET) $(OBJS)\n\nclean:\n        rm -f *.o\n\n\n\u4e0a\u8a18\u53c2\u8003\u30b5\u30a4\u30c8\u306b\u3042\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u53c2\u8003\u306b\u6539\u826f\u3059\u308b\u4f59\u5730\u304c\u3042\u308b\u3002\n#\u6982\u8981\n\nLinux\u306b\u306f\u30d7\u30ed\u30bb\u30b9\u306e\u5165\u51fa\u529b\u3092\u30b3\u30de\u30f3\u30c9\u7b49\u3067\u3053\u3063\u305d\u308a\uff1f\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u4eca\u56de\u306f\u30d7\u30ed\u30bb\u30b9\u306e\u6a19\u6e96\u5165\u51fa\u529b\u3092\u8997\u3044\u3066\u3057\u307e\u3046\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n#\u305d\u306e\uff11\uff08strace\u30b3\u30de\u30f3\u30c9\u306e\u6574\u5f62\uff09\n\n\u53c2\u8003\u30b5\u30a4\u30c8\uff1a[\u8d70\u884c\u4e2d\u306e\u30d7\u30ed\u30bb\u30b9\u306e\u6a19\u6e96\u51fa\u529b\u3092\u6a2a\u53d6\u308a\u3059\u308b\u65b9\u6cd5](http://d.hatena.ne.jp/iww/20080129/stdout) (\u30b3\u30de\u30f3\u30c9\u7248)\n\n\n```bash:script1\nstrace -p `pgrep a.out` -e write -s 256 2>&1 | sed -ne 's/^write(1, \\\"\\(.*\\)\\\"\\.*, [0-9]*) *= [0-9]*$/\\1/p'\n```\n\n\u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u73fe\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n\u3067\u3082\u51fa\u529b\u7d50\u679c\u7b49\u306f\u3042\u308b\u7a0b\u5ea6\u7e1b\u3089\u308c\u3066\u3044\u308b\u306e\u3067\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u306a\u3089\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u624b\u3092\u51fa\u305d\u3046\u3002\n\n#\u305d\u306e\uff12\uff08ptrace\u306b\u3088\u308b\u30c4\u30fc\u30eb\u4f5c\u6210\uff09\n\n\u53c2\u8003\u30b5\u30a4\u30c8\uff1a[\u8d70\u884c\u4e2d\u306e\u30d7\u30ed\u30bb\u30b9\u306e\u6a19\u6e96\u51fa\u529b\u3092\u6a2a\u53d6\u308a\u3059\u308b\u65b9\u6cd5](http://d.hatena.ne.jp/iww/20091123/ptrace) (ptrace\u7248)\n\u53c2\u8003\u30b5\u30a4\u30c8\uff1ahttp://guillot.iiens.net/softs/sniff-noecho.c\n\n```c:main.c\n#include <stdio.h>\n#include <unistd.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/ptrace.h>\n#include <sys/types.h>\n#include <sys/wait.h>\n#include <sys/syscall.h>\n#include <asm/user.h>\n\n\nvoid getdata(pid_t p, long addr, char *str, int len)\n{\n    int i;\n    long data;\n\n    for( i=0; i<len; i+=sizeof(long) ){\n        // \u6587\u5b57\u5217\u3092\u30b3\u30d4\u30fc\u3059\u308b\n        data = ptrace( PTRACE_PEEKDATA, p, addr+i, NULL );\n        memcpy( str+i, &data, sizeof(long) );\n    }\n    str[len] = '\\0';\n    return;\n}\n\n\nint main( int argc, char **argv ) {\n    pid_t p;\n    int st;\n    int fd=-1;\n    int in_syscall=1;\n    char *str;\n    struct user_regs_struct regs;\n\n\n    if( argc<2 ){\n        printf( \"usage: %s <pid> [<fd>]\\n\", argv[0] );\n        return 0;\n    }\n    if( argc>2 ) fd=atoi(argv[2]); // \u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\u6307\u5b9a\u306e\u3042\u308b\u3068\u304d\n\n    setbuf(stdout,NULL); // \u6a19\u6e96\u51fa\u529b\u3092\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3057\u306a\u3044\n\n    // \u30a2\u30bf\u30c3\u30c1\u3059\u308b\n    p = atoi(argv[1]);\n    if( ptrace(PTRACE_ATTACH,p,NULL,NULL)<0 ){\n        perror(\"ptrace\");\n        exit(1);\n    }\n    wait(&st); // \u7121\u3044\u3068\u5b89\u5b9a\u3057\u306a\u3044\n\n    while( ptrace(PTRACE_SYSCALL,p,NULL,NULL)==0 ){\n        // \u6b62\u307e\u308b\u306e\u3092\u5f85\u3064\n        wait(&st);\n        if(WIFEXITED(st)) break;\n\n        ptrace(PTRACE_GETREGS, p, 0, &regs);\n        do{\n            // \u6a19\u6e96\u5165\u51fa\u529b\u4ee5\u5916\u306f\u30b9\u30ad\u30c3\u30d7\n            if( ( regs.orig_eax != SYS_write )\n              &&( regs.orig_eax != SYS_read ) ){\n                break;\n            }\n\n            // \u6a19\u6e96\u51fa\u529b \u6761\u4ef6\u5224\u5b9a\n            if(regs.orig_eax==SYS_write){\n                if( fd != -1 && fd != regs.ebx ){\n                    break;\n                }\n            }\n            // \u6a19\u6e96\u5165\u529b \u6761\u4ef6\u5224\u5b9a\n            if(regs.orig_eax==SYS_read){\n                if( 0 != regs.ebx ){\n                    break;\n                }\n            }\n\n            // \u6a19\u6e96\u5165\u51fa\u529b\u306e\u51e6\u7406\n            // \u30ec\u30b8\u30b9\u30bf\u3092\u53d6\u308a\u51fa\u3059\n            // regs.orig_eax  \u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u756a\u53f7\n            // regs.ebx  \u30d5\u30a1\u30a4\u30eb\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\n            // regs.ecx  \u6587\u5b57\u5217\u306e\u3042\u308b\u30a2\u30c9\u30ec\u30b9\n            // regs.edx  \u30b5\u30a4\u30ba\n            in_syscall = 1-in_syscall; // \u4ea4\u4e92\u306b\n            if(in_syscall){\n                str = malloc( regs.edx+sizeof(long) ); // \u5c11\u3057\u4f59\u8a08\u306b\n                getdata( p, regs.ecx, str, regs.edx );\n                fputs(str,stdout);\n                free(str); // \u5f8c\u59cb\u672b\n            }\n        }while(0);\n    }\n\n    return 0;\n}\n```\n\n\u3061\u306a\u307f\u306b\u4ee5\u4e0b\u306e\u7406\u7531\u3067\u3050\u3060\u3050\u3060\u306a\u30bd\u30fc\u30b9\u3067\u3042\u308b\u3002\n\n* \u30a8\u30e9\u30fc\u51e6\u7406\u304c\u306a\u3044\n* atoi\u306b\u3066\u6570\u5b57\u4ee5\u5916\u304c\u304f\u308b\u5834\u5408\u306e\u30b1\u30a2\n* \u6307\u5b9a\u3057\u305fpid\u306b\u5bfe\u3059\u308b\u30b1\u30a2\uff08\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u8aad\u8fbc\u307f\u6a29\u9650\u304c\u306a\u3044\u7b49\uff09\n* \u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u30a4\u30f3\u3001\u30a2\u30a6\u30c8\uff1f\u3092\u3057\u3063\u304b\u308a\u51e6\u7406\u3057\u3066\u3044\u306a\u3044\u3002\uff08\u4ea4\u4e92\u306b \u3068\u304b\u3044\u3046\u30b3\u30e1\u30f3\u30c8\u306e\u3068\u3053\u308d\u3067\u9069\u5f53\u306b\u3084\u3063\u3066\u3044\u308b\uff09\n* \u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3067SIG_HUP\u7b49\u53d7\u53d6\u3063\u305f\u5834\u5408\u306e\u7d42\u4e86\u51e6\u7406\u304c\u7121\u3044\u3002\uff08\uff1dptrace\u4e2d\u306bCtrl-C\u306a\u3093\u3066\u3084\u308b\u3068\u6a19\u6e96\u5165\u51fa\u529b\u304c\u8ff7\u5b50\u306b\u306a\u308b\uff09\n* CentOS6 \u3067\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u5931\u6557\u3057\u305f\u3002\uff08error: asm/user.h: \u305d\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u3042\u308a\u307e\u305b\u3093\uff09\n\n\n\u3042\u3048\u3066\u4f5c\u308b\u307b\u3069\u3067\u3082\u306a\u3044\u304c\u3001Makefile\u3082\u4ee5\u4e0b\u306b\u3064\u3051\u3066\u304a\u304f\u3002\n\n```make:Makefile\nSRCS  = ptrace_io.c\nTARGET= ptrace_io\n\nCC      = gcc\nCFLAGS  = -g -Wall\nINCLUDE =\n\n.SUFFIXES: .c .o\n.c.o:\n        $(CC) $(CFLAGS) $(INCLUDE) -c $< -o $@\n\nOBJS = $(SRCS:.c=.o)\n\nall: $(TARGET)\n\n$(TARGET):$(OBJS)\n        -@/bin/rm $@ > /dev/null 2>&1\n        $(CC) -o $(TARGET) $(OBJS)\n\nclean:\n        rm -f *.o\n```\n\n\u4e0a\u8a18\u53c2\u8003\u30b5\u30a4\u30c8\u306b\u3042\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u53c2\u8003\u306b\u6539\u826f\u3059\u308b\u4f59\u5730\u304c\u3042\u308b\u3002\n\n", "tags": ["CentOS", "GCC"]}