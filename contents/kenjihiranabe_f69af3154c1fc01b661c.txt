{"tags": ["\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411", "C++", "C\u8a00\u8a9e"], "context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f\u30012003\u5e74\u306b\u30e1\u30eb\u30de\u30ac\u300c\u9031\u9593\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5036\u697d\u90e8\u300d\u306b\u66f8\u3044\u3066\u3044\u305f\u8a18\u4e8b\u3092\u82e5\u5e72\u7de8\u96c6\u30fb\u4fee\u6b63\u3057\u3066Qiita\u306b\u8ee2\u8f09\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n\n\u5143\u8a18\u4e8b\uff1a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u539f\u5247[1] - OCP(Open-Close Principle)\n\n\n\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u539f\u5247[1] - OCP(Open-Close Principle)\n\u9031\u520a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5036\u697d\u90e8 2003-01\u53f7\u306e\u66f8\u8a55\u300e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u5165\u9580\u300f\u306e\u4e2d\u3067\u3001\nOCP\"Open-Close Principle\"\u3068\u3057\u3066\u3001\n\n\u300c\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u5909\u66f4\u306b\u5bfe\u3057\u3066\u9589\u3058\u3066\u304a\u308a\u3001\u62e1\u5f35\u306b\u5bfe\u3057\u3066\u958b\u3044\u3066\u3044\u308b\u3079\u304d\u300d\n\n\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u7b2c1\u56de\u76ee\u306f\u3001\u3053\u306eOCP \u304b\u3089\u3067\u3059\u3002\u6b21\u306eC\u8a00\u8a9e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3069\u3046\u601d\u3044\u307e\u3059\u304b\uff1f\n\nshape.h\ntypedef struct { int x, y; } Point;\ntypedef struct { Point p1, p2; } Line;\ntypedef enum { LINE, POINT } Kind;\ntypedef union { Point* point; Line* line; } ShapeUnion;\n\ntypedef struct {\n  Kind kind;\n  ShapeUnion of;\n} Shape;\n\n\n\ndraw.c\n#include \"shape.h\"\nvoid draw(Shape* shape) {\n  switch(shape->kind) {\n  case LINE:\n  /* draw line (shape->of->line.p1  ---- shape->of->line.p2) */\n  break;\n  case POINT:\n  /*  draw point (shape->of->point)*/\n  break;\n  }\n}\n\n\n\u3053\u308c\u306f\u3001\u79c1\u304c15\u5e74\u524d\u306b\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3067\u3059\u3002\u306a\u304b\u306a\u304b\u30a4\u30b1\u3066\u308b\u3067\u3057\u3087\uff1f\n(\u7de8\u96c6\u6ce8: \u73fe\u5728\u304b\u308926\u5e74\u524d\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\u3002\u3002\u7279\u306b\u3001union \u3092 of \u3067\u53c2\u7167\u3057\u3066\u3044\u308b\u306e\u304c\u6c17\u306b\u5165\u3063\u3066\u3044\u307e\u3057\u305f) \n\u3067\u3082\u3001Kind\u3068\u3057\u3066\u65b0\u305f\u306bCIRCLE\u3092\u8ffd\u52a0\u3057\u305f\u3068\u304d\u3001\u3053\u306edraw\u95a2\u6570\u3092\u4fee\u6b63\u3057\u3001 case CIRCLE\u3092\u8ffd\u52a0\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u3044\u306e\u3067\u3059\u3002\n\u3067\u306f\u3001\u3069\u3046\u3059\u308b\u306e\uff1fC++\u3067\u306f\u3001\n\nshape.h\nclass Shape {\n  public:\n    virtual void draw() = 0;\n};\n\n\n\npoint.cc\n#include \"shape.h\"\nclass Point : public Shape {\n    int x, y;\npublic:\n    void draw() { /* draw point (x,y) */   }\n};\n\n\n\nline.cc\n#include \"shape.h\"\nclass Line : public Shape {\n    Point p1, p2;\npublic:\n    void draw() { /* draw line p1-p2 */ }\n};\n\n\n\u3068\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3001Circle\u306e\u8ffd\u52a0\u306f\u3001\u300c\u65e2\u5b58\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5168\u304f\u5909\u66f4\u305b\u305a\u306b\u300d(\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u3048\u3082\uff01)\u3067\u304d\u308b\u306e\u3067\u3059\u3002\u3053\u308c\u304c\u3001 Close\u3057\u3066\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Open\u306b\u3059\u308b\u3068\u3044\u3046\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 \u306e1\u3064\u306e\u771f\u9aa8\u9802\u306a\u306e\u3067\u3059\u3002\n\n\u4fee\u6b63\u306e\u8ad6\u7406\u3092\u3001\u8ffd\u52a0\u306e\u8ad6\u7406\u306b\u5909\u63db\u3057\u3066\u3044\u308b\n\n\u3068\u3044\u3048\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f\u3001\u69cb\u9020\u5316\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067 goto\u304c\u60aa\u3060\u3063\u305f\u3088\u3046\u306b\u3001switch\u5206\u5c90\u306f\u60aa\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\u3002 (2\u7b87\u6240\u4ee5\u4e0a\u540c\u3058\u5206\u5c90\u304c\u3042\u308b\u5834\u5408)\u3002\n\u5f8c\u65e5\u8ac7\uff08\u7de8\u96c6\u6ce8\uff1a11\u5e74\u524d\u306e\u5f8c\u65e5\u8ac7\u3067\u3059\uff09\u3002\n\u73fe\u5728\u3067\u306f\u3001\u300e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u300f\u3068\u3044\u3046\u518d\u8a2d\u8a08\u6280\u8853\u304c\u6ce8\u76ee\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u3001 \u30b3\u30fc\u30c91\u3092\u30b3\u30fc\u30c92\u306b\u518d\u8a2d\u8a08\u3059\u308b\u3053\u3068\u3092\u3001Replace Conditional With Polymorphism (\u591a\u614b\u306b\u3088\u308b\u6761\u4ef6\u5206\u5c90\u306e\u7f6e\u304d\u63db\u3048)\u3068\u547c\u3093\u3067\u3044\u307e\u3059\u3002\u307e\u305f\u3001switch\u6587\u304c\u5fc5\u305a\u3057\u3082 \u60aa\u3068\u3044\u3046\u8a33\u3067\u306f\u306a\u304f\u3001\u540c\u3058\u30d1\u30bf\u30fc\u30f3\u306eswitch\u304c\u7e70\u308a\u8fd4\u3055\u308c\u308b\u3053\u3068\u304c\u60aa\u3060\u3001\u3068 \u3044\u3046\u89e3\u91c8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002(Once and Only Once\u306e\u539f\u5247)\n\uff08\u7de8\u96c6\u6642\u8ffd\u52a0\uff09\u53c2\u8003\uff1a\n\n\n\u300cBertrand Meyer\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u5165\u9580\u300d\u3081\u3082\u300d(@satton_maroyaka\u3055\u3093)\n\n\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u6cd5\u5247\u96c6\u300d(\u77f3\u4e95\u52dd\u3055\u3093)\n\n\u300c\u958b\u653e\u9589\u9396\u539f\u5247\u3068 expression problem\u300d(@magicant \u3055\u3093)\n\n\u3053\u306e\u8a18\u4e8b\u306f\u30012003\u5e74\u306b\u30e1\u30eb\u30de\u30ac[\u300c\u9031\u9593\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5036\u697d\u90e8\u300d](http://objectclub.jp/ml-arch/magazine/2.html)\u306b\u66f8\u3044\u3066\u3044\u305f\u8a18\u4e8b\u3092\u82e5\u5e72\u7de8\u96c6\u30fb\u4fee\u6b63\u3057\u3066Qiita\u306b\u8ee2\u8f09\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n\n* \u5143\u8a18\u4e8b\uff1a[\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u539f\u5247[1] - OCP(Open-Close Principle)](http://objectclub.jp/technicaldoc/object-orientation/principle/principle01)\n\n# \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u539f\u5247[1] - OCP(Open-Close Principle)\n\n[\u9031\u520a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5036\u697d\u90e8 2003-01\u53f7\u306e\u66f8\u8a55\u300e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u5165\u9580\u300f](http://objectclub.jp/ml-arch/magazine/2.html)\u306e\u4e2d\u3067\u3001\n\nOCP\"Open-Close Principle\"\u3068\u3057\u3066\u3001\n\n>\u300c\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u5909\u66f4\u306b\u5bfe\u3057\u3066\u9589\u3058\u3066\u304a\u308a\u3001\u62e1\u5f35\u306b\u5bfe\u3057\u3066\u958b\u3044\u3066\u3044\u308b\u3079\u304d\u300d\n\n\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u7b2c1\u56de\u76ee\u306f\u3001\u3053\u306eOCP \u304b\u3089\u3067\u3059\u3002\u6b21\u306eC\u8a00\u8a9e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3069\u3046\u601d\u3044\u307e\u3059\u304b\uff1f\n\n```shape.h\ntypedef struct { int x, y; } Point;\ntypedef struct { Point p1, p2; } Line;\ntypedef enum { LINE, POINT } Kind;\ntypedef union { Point* point; Line* line; } ShapeUnion;\n\ntypedef struct {\n  Kind kind;\n  ShapeUnion of;\n} Shape;\n```\n```draw.c\n#include \"shape.h\"\nvoid draw(Shape* shape) {\n  switch(shape->kind) {\n  case LINE:\n  /* draw line (shape->of->line.p1  ---- shape->of->line.p2) */\n  break;\n  case POINT:\n  /*  draw point (shape->of->point)*/\n  break;\n  }\n}\n```\n\n\u3053\u308c\u306f\u3001\u79c1\u304c15\u5e74\u524d\u306b\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3067\u3059\u3002\u306a\u304b\u306a\u304b\u30a4\u30b1\u3066\u308b\u3067\u3057\u3087\uff1f\n\n(\u7de8\u96c6\u6ce8: \u73fe\u5728\u304b\u308926\u5e74\u524d\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\u3002\u3002\u7279\u306b\u3001union \u3092 of \u3067\u53c2\u7167\u3057\u3066\u3044\u308b\u306e\u304c\u6c17\u306b\u5165\u3063\u3066\u3044\u307e\u3057\u305f) \n\n\u3067\u3082\u3001Kind\u3068\u3057\u3066\u65b0\u305f\u306bCIRCLE\u3092\u8ffd\u52a0\u3057\u305f\u3068\u304d\u3001\u3053\u306edraw\u95a2\u6570\u3092\u4fee\u6b63\u3057\u3001 case CIRCLE\u3092\u8ffd\u52a0\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u3044\u306e\u3067\u3059\u3002\n\n\u3067\u306f\u3001\u3069\u3046\u3059\u308b\u306e\uff1fC++\u3067\u306f\u3001\n\n```shape.h\nclass Shape {\n  public:\n    virtual void draw() = 0;\n};\n```\n```point.cc\n#include \"shape.h\"\nclass Point : public Shape {\n    int x, y;\npublic:\n    void draw() { /* draw point (x,y) */   }\n};\n```\n```line.cc\n#include \"shape.h\"\nclass Line : public Shape {\n    Point p1, p2;\npublic:\n    void draw() { /* draw line p1-p2 */ }\n};\n``` \n\n\u3068\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3001Circle\u306e\u8ffd\u52a0\u306f\u3001\u300c\u65e2\u5b58\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5168\u304f\u5909\u66f4\u305b\u305a\u306b\u300d(\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u3048\u3082\uff01)\u3067\u304d\u308b\u306e\u3067\u3059\u3002\u3053\u308c\u304c\u3001 Close\u3057\u3066\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Open\u306b\u3059\u308b\u3068\u3044\u3046\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 \u306e1\u3064\u306e\u771f\u9aa8\u9802\u306a\u306e\u3067\u3059\u3002\n\n* **\u4fee\u6b63\u306e\u8ad6\u7406\u3092\u3001\u8ffd\u52a0\u306e\u8ad6\u7406\u306b\u5909\u63db\u3057\u3066\u3044\u308b**\n\n\u3068\u3044\u3048\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f\u3001\u69cb\u9020\u5316\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067 goto\u304c\u60aa\u3060\u3063\u305f\u3088\u3046\u306b\u3001switch\u5206\u5c90\u306f\u60aa\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\u3002 (2\u7b87\u6240\u4ee5\u4e0a\u540c\u3058\u5206\u5c90\u304c\u3042\u308b\u5834\u5408)\u3002\n\n\u5f8c\u65e5\u8ac7\uff08\u7de8\u96c6\u6ce8\uff1a11\u5e74\u524d\u306e\u5f8c\u65e5\u8ac7\u3067\u3059\uff09\u3002\n\n\u73fe\u5728\u3067\u306f\u3001\u300e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u300f\u3068\u3044\u3046\u518d\u8a2d\u8a08\u6280\u8853\u304c\u6ce8\u76ee\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u3001 \u30b3\u30fc\u30c91\u3092\u30b3\u30fc\u30c92\u306b\u518d\u8a2d\u8a08\u3059\u308b\u3053\u3068\u3092\u3001Replace Conditional With Polymorphism (\u591a\u614b\u306b\u3088\u308b\u6761\u4ef6\u5206\u5c90\u306e\u7f6e\u304d\u63db\u3048)\u3068\u547c\u3093\u3067\u3044\u307e\u3059\u3002\u307e\u305f\u3001switch\u6587\u304c\u5fc5\u305a\u3057\u3082 \u60aa\u3068\u3044\u3046\u8a33\u3067\u306f\u306a\u304f\u3001\u540c\u3058\u30d1\u30bf\u30fc\u30f3\u306eswitch\u304c\u7e70\u308a\u8fd4\u3055\u308c\u308b\u3053\u3068\u304c\u60aa\u3060\u3001\u3068 \u3044\u3046\u89e3\u91c8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002(Once and Only Once\u306e\u539f\u5247)\n\n\n\uff08\u7de8\u96c6\u6642\u8ffd\u52a0\uff09\u53c2\u8003\uff1a\n\n* [\u300cBertrand Meyer\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u5165\u9580\u300d\u3081\u3082\u300d](http://qiita.com/satton_maroyaka/items/b791ee17409aeec4c4e3)(@satton_maroyaka\u3055\u3093)\n* [\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u6cd5\u5247\u96c6\u300d](http://qiita.com/kenjihiranabe/items/9eddc70e279861992274)(\u77f3\u4e95\u52dd\u3055\u3093)\n* [\u300c\u958b\u653e\u9589\u9396\u539f\u5247\u3068 expression problem\u300d](http://qiita.com/magicant/items/be6129aa601e87e089d3)(@magicant \u3055\u3093)\n"}