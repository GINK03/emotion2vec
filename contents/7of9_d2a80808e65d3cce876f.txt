{"context": " More than 1 year has passed since last update.\n\u52d5\u4f5c\u78ba\u8a8d\nCentOS 6.5\n\n\n\u30bd\u30d5\u30c8\u8a2d\u8a08 @ mindmup\n\u4e0a\u8a18\u306e\u8a2d\u8a08\u306e\u5143\u3001UDP\u901a\u4fe1\u306b\u3088\u308b\u8a2d\u5b9a\u306eset/get\u51e6\u7406\u3092\u5b9f\u88c5\u4e2d\u3002\nv0.1 @ github\n\n\u8a2d\u5b9a\u306e\u30af\u30e9\u30b9\n\nutilSetting.py\nclass CSetting:\n    def __init__(self):\n        self.monip = \"192.168.10.8\"\n        self.monport = 9000\n        self.comdelay = 0 # [msec]\n\n    def getMonip(self):\n        return self.monip\n\n    def setMonip(self,monip_):\n        self.monip = monip_\n        return\n\n    def getMonport(self):\n        return self.monport\n\n    def setMonport(self,monport_):\n        self.monport = monport_\n        return\n\n    def getComdelay(self):\n        return self.comdelay\n\n    def setComdelay(self, comdelay_):\n        self.comdelay = comdelay_\n        return\n\n\n\nUDP\u901a\u4fe1\u306e\u5b9f\u88c5\n\nutilUdpCmd.py\nimport time\nimport socket\nfrom utilSetting import CSetting\n\ng_setting = CSetting()\n\n# TODO: error handling > cmd typo etc\n\n'''\nv0.1 2015/11/13\n  - can get/set settings (monitor ip, monitor port, com delay[msec])\n'''\n\ndef procSetCommand(rcvstr):\n    cmds = rcvstr.split(\",\")\n    if \"mon\" in cmds[1]:\n        count = len(cmds)\n        if count == 4:\n            g_setting.setMonip(cmds[2])\n            g_setting.setMonport(cmds[3])\n            print \"set monitor (ip, port)\"\n            print g_setting.getMonip()\n            print g_setting.getMonport()\n    if \"comdelay\" in cmds[1]:\n        g_setting.setComdelay(int(cmds[2]))\n        print \"set comdelay\"\n        print g_setting.getComdelay()\n\ndef procGetCommand(rcvstr):\n    cmds = rcvstr.split(\",\")\n    count = len(cmds)\n    if count == 2:\n        if \"monip\" in cmds[1]:\n            print \"monip,\" + g_setting.getMonip()\n        if \"monport\" in cmds[1]:\n            print \"monport,\" + `g_setting.getMonport()`\n        if \"comdelay\" in cmds[1]:\n            print \"comdelay,\" + `g_setting.getComdelay()`\n    return\n\ndef procCommand(rcvstr):\n    rcvstr = rcvstr.rstrip('\\n')\n    rcvstr = rcvstr.rstrip('\\r')\n    print \"rcvd:[\", rcvstr, \"]\"\n    cmds = rcvstr.split(\",\")\n    if \"set\" in cmds[0]:\n        procSetCommand(rcvstr)\n    if \"get\" in cmds[0]:\n        procGetCommand(rcvstr)\n    return\n\ndef recvCommand(cmdsock, rcvcmd):\n    try:\n        data,address = cmdsock.recvfrom(100)\n    except socket.error:\n        pass\n    else:\n        rcvcmd = rcvcmd + data\n        return rcvcmd, True\n    return rcvcmd, False\n\ndef main():\n    cmdip = \"\"\n    cmdport = 7000\n    cmdsock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n    cmdsock.bind((cmdip, cmdport))\n    cmdsock.setblocking(0)\n\n    rcvcmd = \"\"\n\n    while 1:\n        rcvcmd,rcvd = recvCommand(cmdsock, rcvcmd)\n        if rcvd == True and \"\\n\" in rcvcmd:\n            procCommand(rcvcmd)\n            rcvcmd = \"\"\n\nif __name__ == '__main__':\n    main()\n\n\n\n\u5b9f\u884c\n\n\u52d5\u4f5c\u78ba\u8a8d\n\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c: CentOS 6.5 (IP: 192.168.10.8)\nUDP\u30b3\u30de\u30f3\u30c9\u9001\u4fe1: Mac OS X 10.8.5\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u306f\u4ee5\u4e0b\u3067\u884c\u3046\u3002\n$ python utilUdpCmd.py\n\n\n\u30e2\u30cb\u30bf\u30fcIP,port\u8a2d\u5b9a\nMacOSX\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u4ee5\u4e0b\u3092\u5b9f\u884c\u3002\n$ echo \"set,mon,192.168.10.5,8000\" | nc -w 1 -u 192.168.10.8 7000\n\n\u3059\u308b\u3068\u3001CentOS\u3067\u306f\u4ee5\u4e0b\u3068\u306a\u308b\u3002\n[python-151113-lineMonitor]$ python utilUdpCmd.py \nrcvd:[ set,mon,192.168.10.5,8000 ]\nset monitor (ip, port)\n192.168.10.5\n8000\n\n\nCOM\u901a\u4fe1\u30c7\u30a3\u30ec\u30a4\u8a2d\u5b9a\nMacOSX\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u4ee5\u4e0b\u3092\u5b9f\u884c\u3002\n$ echo \"set,comdelay,300\" | nc -w  1 -u 192.168.10.8 7000\n\n\u3059\u308b\u3068\u3001CentOS\u3067\u306f\u4ee5\u4e0b\u3068\u306a\u308b\u3002\n[python-151113-lineMonitor]$ python utilUdpCmd.py \nrcvd:[ set,comdelay,300 ]\nset comdelay\n300\n\n\n\u8a2d\u5b9a\u53d6\u5f97\nMacOSX\u3067\u4ee5\u4e0b\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u308c\u305e\u308c\u306e\u8a2d\u5b9a\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n$ echo \"get,comdelay\" | nc -w  1 -u 192.168.10.8 7000\n$ echo \"get,monip\" | nc -w  1 -u 192.168.10.8 7000\n$ echo \"get,monport\" | nc -w  1 -u 192.168.10.8 7000\n\u4e0a\u8a18\u3067\u8a2d\u5b9a\u304c\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u306f\u306a\u3063\u305f\u3002\npython\u306f\u307e\u3060\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u70b9\u304c\u8272\u3005\u3042\u308a\u3001\u73fe\u72b6\u306e\u5b9f\u88c5\u304c\u6700\u9069\u3068\u306f\u601d\u3048\u306a\u3044\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u81ea\u5206\u306e\u3084\u308a\u305f\u3044\u3053\u3068\u3092\u5b9f\u88c5\u3057\u3066\u304b\u3089\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n```txt:\u52d5\u4f5c\u78ba\u8a8d\nCentOS 6.5\n```\n\n[\u30bd\u30d5\u30c8\u8a2d\u8a08 @ mindmup](https://atlas.mindmup.com/2015/11/90a4a2a06c370133eea40fc7cf8ea63c/151112_line_monitor/index.html)\n\n\u4e0a\u8a18\u306e\u8a2d\u8a08\u306e\u5143\u3001UDP\u901a\u4fe1\u306b\u3088\u308b\u8a2d\u5b9a\u306eset/get\u51e6\u7406\u3092\u5b9f\u88c5\u4e2d\u3002\n\n[v0.1 @ github](https://github.com/yasokada/python-151113-lineMonitor/releases/tag/v0.1)\n\n## \u8a2d\u5b9a\u306e\u30af\u30e9\u30b9\n\n```utilSetting.py\nclass CSetting:\n\tdef __init__(self):\n\t\tself.monip = \"192.168.10.8\"\n\t\tself.monport = 9000\n\t\tself.comdelay = 0 # [msec]\n\n\tdef getMonip(self):\n\t\treturn self.monip\n\n\tdef setMonip(self,monip_):\n\t\tself.monip = monip_\n\t\treturn\n\n\tdef getMonport(self):\n\t\treturn self.monport\n\n\tdef setMonport(self,monport_):\n\t\tself.monport = monport_\n\t\treturn\n\n\tdef getComdelay(self):\n\t\treturn self.comdelay\n\n\tdef setComdelay(self, comdelay_):\n\t\tself.comdelay = comdelay_\n\t\treturn\n```\n\n##UDP\u901a\u4fe1\u306e\u5b9f\u88c5\n\n```utilUdpCmd.py\nimport time\nimport socket\nfrom utilSetting import CSetting\n\ng_setting = CSetting()\n\n# TODO: error handling > cmd typo etc\n\n'''\nv0.1 2015/11/13\n  - can get/set settings (monitor ip, monitor port, com delay[msec])\n'''\n\ndef procSetCommand(rcvstr):\n\tcmds = rcvstr.split(\",\")\n\tif \"mon\" in cmds[1]:\n\t\tcount = len(cmds)\n\t\tif count == 4:\n\t\t\tg_setting.setMonip(cmds[2])\n\t\t\tg_setting.setMonport(cmds[3])\n\t\t\tprint \"set monitor (ip, port)\"\n\t\t\tprint g_setting.getMonip()\n\t\t\tprint g_setting.getMonport()\n\tif \"comdelay\" in cmds[1]:\n\t\tg_setting.setComdelay(int(cmds[2]))\n\t\tprint \"set comdelay\"\n\t\tprint g_setting.getComdelay()\n\ndef procGetCommand(rcvstr):\n\tcmds = rcvstr.split(\",\")\n\tcount = len(cmds)\n\tif count == 2:\n\t\tif \"monip\" in cmds[1]:\n\t\t\tprint \"monip,\" + g_setting.getMonip()\n\t\tif \"monport\" in cmds[1]:\n\t\t\tprint \"monport,\" + `g_setting.getMonport()`\n\t\tif \"comdelay\" in cmds[1]:\n\t\t\tprint \"comdelay,\" + `g_setting.getComdelay()`\n\treturn\n\ndef procCommand(rcvstr):\n\trcvstr = rcvstr.rstrip('\\n')\n\trcvstr = rcvstr.rstrip('\\r')\n\tprint \"rcvd:[\", rcvstr, \"]\"\n\tcmds = rcvstr.split(\",\")\n\tif \"set\" in cmds[0]:\n\t\tprocSetCommand(rcvstr)\n\tif \"get\" in cmds[0]:\n\t\tprocGetCommand(rcvstr)\n\treturn\n\ndef recvCommand(cmdsock, rcvcmd):\n\ttry:\n\t\tdata,address = cmdsock.recvfrom(100)\n\texcept socket.error:\n\t\tpass\n\telse:\n\t\trcvcmd = rcvcmd + data\n\t\treturn rcvcmd, True\n\treturn rcvcmd, False\n\ndef main():\n\tcmdip = \"\"\n\tcmdport = 7000\n\tcmdsock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\tcmdsock.bind((cmdip, cmdport))\n\tcmdsock.setblocking(0)\n\n\trcvcmd = \"\"\n\n\twhile 1:\n\t\trcvcmd,rcvd = recvCommand(cmdsock, rcvcmd)\n\t\tif rcvd == True and \"\\n\" in rcvcmd:\n\t\t\tprocCommand(rcvcmd)\n\t\t\trcvcmd = \"\"\n\nif __name__ == '__main__':\n\tmain()\n```\n\n##\u5b9f\u884c\n\n```txt:\u52d5\u4f5c\u78ba\u8a8d\n\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c: CentOS 6.5 (IP: 192.168.10.8)\nUDP\u30b3\u30de\u30f3\u30c9\u9001\u4fe1: Mac OS X 10.8.5\n```\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u306f\u4ee5\u4e0b\u3067\u884c\u3046\u3002\n\n```\n$ python utilUdpCmd.py\n```\n\n### \u30e2\u30cb\u30bf\u30fcIP,port\u8a2d\u5b9a\n\nMacOSX\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u4ee5\u4e0b\u3092\u5b9f\u884c\u3002\n\n```\n$ echo \"set,mon,192.168.10.5,8000\" | nc -w 1 -u 192.168.10.8 7000\n```\n\n\u3059\u308b\u3068\u3001CentOS\u3067\u306f\u4ee5\u4e0b\u3068\u306a\u308b\u3002\n\n```\n[python-151113-lineMonitor]$ python utilUdpCmd.py \nrcvd:[ set,mon,192.168.10.5,8000 ]\nset monitor (ip, port)\n192.168.10.5\n8000\n```\n\n### COM\u901a\u4fe1\u30c7\u30a3\u30ec\u30a4\u8a2d\u5b9a\n\nMacOSX\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u4ee5\u4e0b\u3092\u5b9f\u884c\u3002\n\n```\n$ echo \"set,comdelay,300\" | nc -w  1 -u 192.168.10.8 7000\n```\n\n\u3059\u308b\u3068\u3001CentOS\u3067\u306f\u4ee5\u4e0b\u3068\u306a\u308b\u3002\n\n```\n[python-151113-lineMonitor]$ python utilUdpCmd.py \nrcvd:[ set,comdelay,300 ]\nset comdelay\n300\n```\n\n### \u8a2d\u5b9a\u53d6\u5f97\n\nMacOSX\u3067\u4ee5\u4e0b\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u308c\u305e\u308c\u306e\u8a2d\u5b9a\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n`$ echo \"get,comdelay\" | nc -w  1 -u 192.168.10.8 7000`\n`$ echo \"get,monip\" | nc -w  1 -u 192.168.10.8 7000`\n`$ echo \"get,monport\" | nc -w  1 -u 192.168.10.8 7000`\n\n\u4e0a\u8a18\u3067\u8a2d\u5b9a\u304c\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u306f\u306a\u3063\u305f\u3002\n\npython\u306f\u307e\u3060\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u70b9\u304c\u8272\u3005\u3042\u308a\u3001\u73fe\u72b6\u306e\u5b9f\u88c5\u304c\u6700\u9069\u3068\u306f\u601d\u3048\u306a\u3044\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u81ea\u5206\u306e\u3084\u308a\u305f\u3044\u3053\u3068\u3092\u5b9f\u88c5\u3057\u3066\u304b\u3089\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\n", "tags": ["myLineMonitor", "borgBYOP"]}