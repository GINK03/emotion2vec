{"context": " More than 1 year has passed since last update.\u30af\u30e9\u30b7\u30ab\u30eb\u306a\u30af\u30e9\u30b9\u7d99\u627f\u3092\u5b9f\u73fe\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3002\nbackbone.js\u3092\u5143\u306b\u3057\u3066\u307e\u3059\u3002\n(function (win, doc, exports) {\n\n    var ctor = function () {};\n\n    function copyClone(obj) {\n\n        var args = Array.prototype.slice.call(arguments, 1),\n            l    = args.length,\n            i    = 0,\n            src, prop;\n\n        for (; i < l; i++) {\n            src = args[i];\n            for (prop in src) {\n                obj[prop] = args[i][prop];\n            }\n        }\n\n        return obj;\n    }\n\n    function inherit(_super, protoProps, staticProps) {\n\n        var child;\n\n        //copy constructor to `child` if it has constructor property as own property.\n        if (protoProps && Object.prototype.hasOwnProperty.call(protoProps, 'constructor')) {\n            child = protoProps.constructor;\n        }\n\n        //else, child is function as to apply `_super`.\n        else {\n            child = function () {\n                _super.apply(this, arguments);\n            };\n        }\n\n        //copy _super property to child.\n        copyClone(child, _super);\n\n        //store the temporary _super.prototype in ctor.prototype.\n        ctor.prototype = _super.prototype;\n\n        //create instance to child.prototype as new ctor.\n        child.prototype = new ctor();\n\n        //if the protoProps is defined, copy it to child.\n        if (protoProps) {\n            copyClone(child.prototype, protoProps);\n        }\n\n        //if the staticProps is defined, copy it to child.\n        if (staticProps) {\n            copyClone(child, staticProp);\n        }\n\n        //child.prototype.constructor is child.\n        child.prototype.constructor = child;\n\n        //Finally, _super.prototype is stored in child.__super__ property.\n        child.__super__ = _super.prototype;\n\n        return child;\n    }\n\n    /* ------------------------------------------------------------------\n        EXPORTS\n    --------------------------------------------------------------------- */\n    exports.inherit = inherit;\n    exports.copyClone = copyClone;\n\n}(window, document, window));\n\n\n\u30af\u30e9\u30b7\u30ab\u30eb\u306a\u30af\u30e9\u30b9\u7d99\u627f\u3092\u5b9f\u73fe\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3002\nbackbone.js\u3092\u5143\u306b\u3057\u3066\u307e\u3059\u3002\n\n\n```javascript\n(function (win, doc, exports) {\n\n    var ctor = function () {};\n\n    function copyClone(obj) {\n\n        var args = Array.prototype.slice.call(arguments, 1),\n            l    = args.length,\n            i    = 0,\n            src, prop;\n\n        for (; i < l; i++) {\n            src = args[i];\n            for (prop in src) {\n                obj[prop] = args[i][prop];\n            }\n        }\n\n        return obj;\n    }\n\n    function inherit(_super, protoProps, staticProps) {\n\n        var child;\n\n        //copy constructor to `child` if it has constructor property as own property.\n        if (protoProps && Object.prototype.hasOwnProperty.call(protoProps, 'constructor')) {\n            child = protoProps.constructor;\n        }\n\n        //else, child is function as to apply `_super`.\n        else {\n            child = function () {\n                _super.apply(this, arguments);\n            };\n        }\n\n        //copy _super property to child.\n        copyClone(child, _super);\n\n        //store the temporary _super.prototype in ctor.prototype.\n        ctor.prototype = _super.prototype;\n\n        //create instance to child.prototype as new ctor.\n        child.prototype = new ctor();\n\n        //if the protoProps is defined, copy it to child.\n        if (protoProps) {\n            copyClone(child.prototype, protoProps);\n        }\n\n        //if the staticProps is defined, copy it to child.\n        if (staticProps) {\n            copyClone(child, staticProp);\n        }\n\n        //child.prototype.constructor is child.\n        child.prototype.constructor = child;\n\n        //Finally, _super.prototype is stored in child.__super__ property.\n        child.__super__ = _super.prototype;\n    \n        return child;\n    }\n\n    /* ------------------------------------------------------------------\n        EXPORTS\n    --------------------------------------------------------------------- */\n    exports.inherit = inherit;\n    exports.copyClone = copyClone;\n\n}(window, document, window));\n```", "tags": ["class", "Inherit", "copy", "clone", "extend"]}