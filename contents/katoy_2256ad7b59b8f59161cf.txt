{"context": " More than 1 year has passed since last update.\n\n\u8ab2\u984c\namazon.co.jp \u3067\u306e\u4eca\u5e74\u306b\u8cfc\u5165\u3057\u305f\u96fb\u5b50\u66f8\u7c4d\u306e\u96fb\u5b50\u9818\u53ce\u66f8\u3092\u4e00\u62ec\u3067\u53d6\u5f97\u3059\u308b\u3002(MacOSX, firefox \u306e\u74b0\u5883\u3067)\n\u96fb\u5b50\u66f8\u7c4d\u3092\u5927\u91cf\u306b\u8cfc\u5165\u3057\u3066\u3044\u3066\u3001\u305d\u306e\u8cfc\u5165\u9818\u53ce\u66f8\u3092\u63d0\u51fa\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u5229\u7528\u3059\u308b\u3002\n\n\u65b9\u6cd5\n\nruby \u3067 selenium-webdriver \u3092\u3064\u304b\u3063\u3066 firefox \u3092\u81ea\u52d5\u64cd\u4f5c\u3057\u3066\u3001\namazon \u306e\u8cfc\u5165\u5c65\u6b74\u30da\u30fc\u30b8 (2014 \u5e74\u5206) \u306e\u5168\u753b\u9762\u306e html \u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3059\u308b\u3002\namazon \u306e\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u60c5\u5831\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u3002\n\u5404\u8cfc\u5165\u54c1\u306e\u9818\u53ce\u66f8\u306e\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n$ ruby amazon.rb \u767b\u9332\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9 \u30d1\u30b9\u30ef\u30fc\u30c9\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u306f\u3053\u306e\u8a18\u4e8b\u306e\u672b\u5c3e\u306b\u793a\u3059\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001firefox \u304c\u81ea\u52d5\u8d77\u52d5\u3059\u308b\u3002\n\u81ea\u52d5\u3067  amazon \u3078\u306e\u30ed\u30b0\u30a4\u30f3\u3001\u8cfc\u5165\u5c65\u6b74\u30da\u30fc\u30b8\u306e\u95b2\u89a7\u3001\u30ed\u30b0\u30a2\u30a2\u30a6\u30c8\u3001firefox \u306e\u7d42\u4e86\u304c\u884c\u308f\u308c\u308b\u3002\n\u5b9f\u884c\u5f8c\u306f\u3001./screeshots \u4ee5\u4e0b\u306b (page-.html\uff1a\u4e00\u89a7\u30da\u30fc\u30b8\u3001 order-.png:\u9818\u53ce\u66f8) \u304c\u4fdd\u5b58\u3055\u308c\u308b\u3002\n./scrennshots \u30d5\u30a9\u30eb\u30c0\u306f\u3042\u3089\u304b\u3058\u3081\u4f5c\u6210\u3057\u3066\u304a\u304f\u3002\n\n\u5f8c\u51e6\u7406\u306e\u4f8b\n\u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u3067\u60c5\u5831\u306f\u53d6\u5f97\u3067\u304d\u308b\u304c\u3001\u3053\u308c\u3092\u52a0\u5de5\u3059\u308b\u4f8b\u3092\uff12\u3064\u793a\u3059\u3002\n\n\u96fb\u5b50\u9818\u53ce\u66f8\u3092\uff11\u3064\u306e PDF \u30d5\u30a1\u30a4\u30eb\u306b\u307e\u3068\u3081\u308b\u3002\n\nconvert -resize 575x823 -gravity north -background white -extent 595x842 *.png 1.pdf\n\n\u751f\u6210\u3057\u305f PDF \u306e\u4f8b\uff1a\n\n\n\u8868\u8a08\u7b97\u30bd\u30d5\u30c8\u3067\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b [\u8cfc\u5165\u65e5\u3001\u4fa1\u683c\u3001\u5024\u5f15\u304d\u984d\u3001\u30bf\u30a4\u30c8\u30eb\u3001\u5546\u54c1\u60c5\u5831 URL] \u3092\ncsv \u5f62\u5f0f\u3067\u5f97\u308b\u3002\n\n$ ruby make-index.rb > 1.csv\n$ cat head.csv 1.csv > 2.csv\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u306f\u3053\u306e\u8a18\u4e8b\u306e\u672b\u5c3e\u306b\u793a\u3059\u3002\n\u751f\u6210\u3057\u305f csv \u3092\u5143\u306b\u5217\u540d\u3001\u4fa1\u683c\u5408\u8a08\u30bb\u30eb\u3092\u8ffd\u52a0\u3057\u305f\u4f8b\uff1a\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nGemfile\nsource \"https://rubygems.org\"\n\ngem 'selenium-webdriver'\ngem 'nokogiri'\n\n\namazon.rb\n# -*- coding: utf-8 -*-\n\n# 1. amazon \u306e\u8cfc\u5165\u5c65\u6b74\u3092\u53d6\u5f97\u3059\u308b\u3002(scrennshots/* \u306b\u4fdd\u5b58\u3055\u308c\u308b)\n#   $ ruby amazon.rb email password\n#\n# 2. \u53d6\u5f97\u3057\u305f\u60c5\u5831\u304b\u3089\u3001\u660e\u7d30\u66f8(*.png) \u3092\uff11\u3064\u306e PDF \u306b\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u4f5c\u6210\u3059\u308b\u3002\n#    (imagemagic \u306e convert \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046)\n#   $ convert -resize 575x823 -gravity north -background white -extent 595x842 screenshots/ord*.png 1.pdf\n#\n# 3. \u53d6\u5f97\u3057\u305f\u60c5\u5831\u304b\u3089\u3001csv \u5f62\u5f0f\u3067\u8cfc\u5165\u7269\u4e00\u89a7\u8868\u3092\u4f5c\u6210\u3059\u308b\u3002\n#   $ ruby make-index.rb > 1.csv\n\nrequire 'rubygems'\nrequire 'selenium-webdriver'\n\nSCREENSHOTS_DIR = './screenshots'\n\nmodule Amazon\n  class Driver\n    # \u65b0\u3057\u3044\u30bf\u30d6\u3067 \u6307\u5b9a\u3055\u308c\u305f URL \u3092\u958b\u304d\u3001\u5236\u5fa1\u3092\u305d\u306e\u30bf\u30d6\u306b\u79fb\u3059\u3002\n    def open_new_window(wd, url)\n      a = wd.execute_script(\"var d=document,a=d.createElement('a');a.target='_blank';a.href=arguments[0];a.innerHTML='.';d.body.appendChild(a);return a\", url)\n      a.click\n      wd.switch_to.window(wd.window_handles.last)\n\n      wd.find_element(:link_text, '\u5229\u7528\u898f\u7d04')\n      yield\n      wd.close\n      wd.switch_to.window(wd.window_handles.last)\n    end\n\n    # \u73fe\u5728\u306e\u753b\u9762\u304b\u3089\u30ea\u30f3\u30af\u304c\u5f35\u3089\u308c\u3066\u3044\u308b\u8cfc\u5165\u660e\u7d30\u3092\u5168\u3066\u4fdd\u5b58\u3059\u308b\u3002\n    def save_order(wd)\n      wd.find_element(:link_text, '\u5229\u7528\u898f\u7d04')\n      orders = wd.find_elements(:link_text, '\u9818\u53ce\u66f8\uff0f\u8cfc\u5165\u660e\u7d30\u66f8')\n      orders.each do |ord|\n\n        open_new_window(wd, ord.attribute('href')) do\n          @order_seq += 1\n          wd.save_screenshot(\"#{SCREENSHOTS_DIR}/order_#{format('%03d', @order_seq)}.png\")\n        end\n      end\n    end\n\n    def save_order_history(wd, auth)\n      @page_seq = 0\n      @order_seq = 0\n\n      # \u8cfc\u5165\u5c65\u6b74\u30da\u30fc\u30b8\u3078\n      wd.get 'https://www.amazon.co.jp/gp/css/order-history'\n\n      # \u30ed\u30b0\u30a4\u30f3\u51e6\u7406\n      wd.find_element(:id, 'ap_email').click\n      wd.find_element(:id, 'ap_email').clear\n      wd.find_element(:id, 'ap_email').send_keys auth[:email]\n\n      wd.find_element(:id, 'ap_password').click\n      wd.find_element(:id, 'ap_password').clear\n      wd.find_element(:id, 'ap_password').send_keys auth[:password]\n\n      wd.find_element(:id, 'signInSubmit-input').click\n\n      unless wd.find_element(:xpath, \"//form[@id='order-dropdown-form']/select//option[4]\").selected?\n        wd.find_element(:xpath, \"//form[@id='order-dropdown-form']/select//option[4]\").click  # \u4eca\u5e74\u306e\u6ce8\u6587\n      end\n      wd.find_element(:css, \"#order-dropdown-form > span.in-amzn-btn.btn-prim-med > span > input[type=\\\"submit\\\"]\").click\n\n      # [\u6b21] \u30da\u30fc\u30b8\u3092\u3081\u304f\u3063\u3066\u3044\u304f\n      loop do\n        wd.find_element(:link_text, '\u5229\u7528\u898f\u7d04')\n        @page_seq += 1\n        wd.save_screenshot(\"#{SCREENSHOTS_DIR}/page_#{format('%03d', @page_seq)}.png\")\n        open(\"#{SCREENSHOTS_DIR}/page_#{format('%03d', @page_seq)}.html\", 'w') {|f|\n          f.write wd.page_source\n        }\n\n        # \u30da\u30fc\u30b8\u4e2d\u306e\u500b\u3005\u306e\u6ce8\u6587\u3092\u95b2\u89a7\u3059\u308b\u3002\n        save_order(wd)\n\n        elems = wd.find_elements(:link_text, '\u6b21\u3078 \u00bb')\n        break if elems.size == 0\n        elems[0].click\n      end\n\n      # \u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\n      wd.get 'http://www.amazon.co.jp/gp/flex/sign-out.html/ref=gno_signout'\n    end\n  end\nend\n\ninclude Amazon\n\nif ARGV.size != 2\n  puts \"usage: ruby #{$PROGRAM_NAME} account password\"\n  exit 1\nend\n\nwd = nil\nbegin\n  ad = Amazon::Driver.new\n  wd = Selenium::WebDriver.for :firefox\n  wd.manage.timeouts.implicit_wait = 20 # \u79d2\n  ad.save_order_history(wd, email: ARGV[0], password: ARGV[1])\nensure\n  wd.quit if wd\nend\n\n\n\u30dd\u30a4\u30f3\u30c8\n\u4e00\u89a7\u30da\u30fc\u30b8\u306e\u9818\u53ce\u66f8\u306e\u30ea\u30f3\u30af\u3092  click \u3059\u308b\u3068\u3001\u30da\u30fc\u30b8\u9077\u79fb\u3057\u3066\u9818\u53ce\u66f8\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n\uff11\u3064\u306e\u4e00\u89a7\u30da\u30fc\u30b8\u306f\u300010 \u500b\u306e\u9818\u53ce\u66f8\u306e\u30ea\u30f3\u30af\u304c\u3042\u308b\u3002\n\"\u9818\u53ce\u66f8\u30ea\u30f3\u30af\u306e click\", \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u53d6\u5f97\"\u3001\"\u524d\u30da\u30fc\u30b8\u306b\u623b\u308b\" \u306e\u7e70\u308a\u8fd4\u3057\u64cd\u4f5c\u3067\u306f\u4e00\u89a7\u30da\u30fc\u30b8\u3092\u4f55\u5ea6\u30e2\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\u305d\u3053\u3067\u3001\u9818\u53ce\u66f8\u753b\u9762\u306f\u5225\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u958b\u304f\u3088\u3046\u306b\u3057\u3001\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092psy\u89e3\u304f\u3057\u305f\u3089\u3001\u305d\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b \u3068\u3044\u3046\u64cd\u4f5c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u884c\u308f\u305b\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u4e00\u89a7\u30da\u30fc\u30b8\u3092\u4f55\u5ea6\u306e\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u3092\u907f\u3051\u3066\u3044\u308b\u3002\nwebdriver \u3067\u306f\u3001 j\n  1. avascript  \u3092\u3064\u304b\u3063\u3066\u5225 window \u3092\u958b\u304f\n  2. \u958b\u3044\u305f window \u306b\u5236\u5fa1\u3092\u79fb\u3059\u3002\u305d\u3057\u3066 \u62db\u96c6\u66f8\u753b\u9762\u3092 load \u3059\u308b\u3002\n  3. \u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u3089\u3001window \u3092 cloase \u3059\u308b\u3002\n  4. \u4e00\u89a7\u30da\u30fc\u30b8\u306e window \u306b\u5236\u5fa1\u3092\u623b\u3059\u3002\n\u3068\u3044\u3046\u64cd\u4f5c\u3092\u884c\u308f\u305b\u3066\u3044\u308b\u3002\n\nmake-index.rb\n# -*- coding: utf-8 -*-\n\nrequire 'open-uri'\nrequire 'nokogiri'\nrequire 'csv'\n\n# \u5024\u5f15\u304d\u984d\u3092\u5f97\u308b\n# @param url \u66f8\u7c4d\u60c5\u5831\u30da\u30fc\u30b8\u306e IRL\n# @return \u5024\u5f15\u304d\u984d\ndef saving(url)\n  off = 0\n  begin\n    charset = nil\n    html = open(url) do |f|\n      charset = f.charset\n      f.read # html\u3092\u8aad\u307f\u8fbc\u3093\u3067\u5909\u6570 html\u306b\u6e21\u3059\n    end\n    doc = Nokogiri::HTML.parse(html, nil, charset)\n    # \u5024\u5f15\u304d\u30c7\u30fc\u30bf\u3092\u629c\u304d\u51fa\u3059\u3002\n    price = doc.css('.savingsRow .price')\n    if price && price.size > 0\n      off = price.text.scan(/.+/)[0].scan(/\\d+/).join('')\n    end\n  rescue => ex\n    STDERR.puts url\n    STDERR.puts ex\n  end\n  off.to_i\nend\n\n# \u8cfc\u5165\u7269\u306e\u4e00\u89a7\u3092 csv \u5f62\u5f0f\u3067\u5f97\u308b\u3002\uff08\u8cfc\u5165\u65e5\u3001\u4fa1\u683c\u3001\u5024\u5f15\u984d\u3001\u30bf\u30a4\u30c8\u30eb\uff09\n# @return csv \u5f62\u5f0f\u306e\u6587\u5b57\u5217\ndef generate_csv\n  csv_string = CSV.generate do |csv|\n    Dir::glob(\"screenshots/**/*.html\").each do |path|\n      f = File.open path\n\n      page = Nokogiri::XML f\n      orders = page.css('.action-box')\n      orders.each do |order|\n        date = order.css('.order-level > h2').text\n        price = order.css('.price').text.scan(/\\d+/).join('')\n        title =  order.css('.item-title').text.strip\n        url = order.css('.shipment a').attribute('href').value\n        off = saving(url)\n        csv <<  [date, \"#{format('%8d', price)}\", off, title, url]\n        end\n      f.close\n    end\n  end\n  csv_string\nend\n\nputs generate_csv\n\n\nhead.csv\n\u65e5\u4ed8,\u4fa1\u683c,OFF,\u66f8\u540d,URL\n,=SUM(B3:B300),=SUM(C3:C300),\n\n\n\u30dd\u30a4\u30f3\u30c8\n\u5024\u5f15\u304d\u984d\u306f\u3001\u8cfc\u5165\u4e00\u89a7\u30da\u30fc\u30b8\u3001\u9818\u53ce\u66f8\u30da\u30fc\u30b8\u306b\u306f\u8a18\u8f09\u3055\u308c\u3066\u3044\u306a\u3044\u3002\n\u5546\u54c1\u30da\u30fc\u30b8\u3092\u8a2a\u308c\u3001\u305d\u306e\u4e2d\u306e\u5024\u5f15\u304d\u984d\u60c5\u5831\u3092\u691c\u7d22\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\u8cfc\u5165\u4e00\u89a7\u5148\u306b\u3042\u308b\u5546\u54c1\u30da\u30fc\u30b8\u306f\u5b58\u5728\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u3042\u308b\u3002\uff08\u4fa1\u683c\u3084\u60c5\u5831\u304c\u66f4\u65b0\u3055\u308c\u305f\uff1f\uff09\n\u305d\u306e\u5834\u5408\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4e2d\u65ad\u305b\u305a\u306b\u3001STDERR \u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u3057\u3066\u3001\u6700\u5f8c\u306e\u5546\u54c1\u307e\u3067\u51e6\u7406\u3092\u884c\u3046\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n\u66f4\u65b0\u5c65\u6b74\n\n2014-01-04\namazon.co.jp \u304b\u3089\u306e\u8cfc\u5165\u5c65\u6b74 (\u9818\u53ce\u66f8\u30da\u30fc\u30b8) \u3092\u5f97\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f4\u65b0\u3057\u305f\u3002\n(amazon \u306e\u8cfc\u5165\u5c65\u6b74\u30da\u30fc\u30b8\u3082\u69cb\u9020\u304c\u534a\u5e74\u524d\u304b\u3089\u5909\u5316\u3057\u305f\u305f\u3081)\nhttps://github.com/katoy/amazon-orders/blob/master/amazon.rb\n\n\n# \u8ab2\u984c\n\namazon.co.jp \u3067\u306e\u4eca\u5e74\u306b\u8cfc\u5165\u3057\u305f\u96fb\u5b50\u66f8\u7c4d\u306e\u96fb\u5b50\u9818\u53ce\u66f8\u3092\u4e00\u62ec\u3067\u53d6\u5f97\u3059\u308b\u3002(MacOSX, firefox \u306e\u74b0\u5883\u3067)\n\n\u96fb\u5b50\u66f8\u7c4d\u3092\u5927\u91cf\u306b\u8cfc\u5165\u3057\u3066\u3044\u3066\u3001\u305d\u306e\u8cfc\u5165\u9818\u53ce\u66f8\u3092\u63d0\u51fa\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u5229\u7528\u3059\u308b\u3002\n\n\n# \u65b9\u6cd5\n\n1. ruby \u3067 selenium-webdriver \u3092\u3064\u304b\u3063\u3066 firefox \u3092\u81ea\u52d5\u64cd\u4f5c\u3057\u3066\u3001\namazon \u306e\u8cfc\u5165\u5c65\u6b74\u30da\u30fc\u30b8 (2014 \u5e74\u5206) \u306e\u5168\u753b\u9762\u306e html \u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3059\u308b\u3002\namazon \u306e\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u60c5\u5831\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u5f15\u6570\u3068\u3057\u3066\u6e21\u3059\u3002\n2. \u5404\u8cfc\u5165\u54c1\u306e\u9818\u53ce\u66f8\u306e\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n~~~\n$ ruby amazon.rb \u767b\u9332\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9 \u30d1\u30b9\u30ef\u30fc\u30c9\n~~~\n\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u306f\u3053\u306e\u8a18\u4e8b\u306e\u672b\u5c3e\u306b\u793a\u3059\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001firefox \u304c\u81ea\u52d5\u8d77\u52d5\u3059\u308b\u3002\n\u81ea\u52d5\u3067  amazon \u3078\u306e\u30ed\u30b0\u30a4\u30f3\u3001\u8cfc\u5165\u5c65\u6b74\u30da\u30fc\u30b8\u306e\u95b2\u89a7\u3001\u30ed\u30b0\u30a2\u30a2\u30a6\u30c8\u3001firefox \u306e\u7d42\u4e86\u304c\u884c\u308f\u308c\u308b\u3002\n\u5b9f\u884c\u5f8c\u306f\u3001./screeshots \u4ee5\u4e0b\u306b (page-*.html\uff1a\u4e00\u89a7\u30da\u30fc\u30b8\u3001 order-*.png:\u9818\u53ce\u66f8) \u304c\u4fdd\u5b58\u3055\u308c\u308b\u3002\n./scrennshots \u30d5\u30a9\u30eb\u30c0\u306f\u3042\u3089\u304b\u3058\u3081\u4f5c\u6210\u3057\u3066\u304a\u304f\u3002\n\n# \u5f8c\u51e6\u7406\u306e\u4f8b\n\n\u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u3067\u60c5\u5831\u306f\u53d6\u5f97\u3067\u304d\u308b\u304c\u3001\u3053\u308c\u3092\u52a0\u5de5\u3059\u308b\u4f8b\u3092\uff12\u3064\u793a\u3059\u3002\n\n1. \u96fb\u5b50\u9818\u53ce\u66f8\u3092\uff11\u3064\u306e PDF \u30d5\u30a1\u30a4\u30eb\u306b\u307e\u3068\u3081\u308b\u3002\n\n~~~\nconvert -resize 575x823 -gravity north -background white -extent 595x842 *.png 1.pdf\n~~~\n\n\u751f\u6210\u3057\u305f PDF \u306e\u4f8b\uff1a\n![amazon-orders.png](https://qiita-image-store.s3.amazonaws.com/0/14958/e97ab7e8-85ba-8eaa-8d40-4c31e6ba4006.png)\n\n\n2. \u8868\u8a08\u7b97\u30bd\u30d5\u30c8\u3067\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b [\u8cfc\u5165\u65e5\u3001\u4fa1\u683c\u3001\u5024\u5f15\u304d\u984d\u3001\u30bf\u30a4\u30c8\u30eb\u3001\u5546\u54c1\u60c5\u5831 URL] \u3092\ncsv \u5f62\u5f0f\u3067\u5f97\u308b\u3002\n\n~~~\n$ ruby make-index.rb > 1.csv\n$ cat head.csv 1.csv > 2.csv\n~~~\n\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u306f\u3053\u306e\u8a18\u4e8b\u306e\u672b\u5c3e\u306b\u793a\u3059\u3002\n\n\u751f\u6210\u3057\u305f csv \u3092\u5143\u306b\u5217\u540d\u3001\u4fa1\u683c\u5408\u8a08\u30bb\u30eb\u3092\u8ffd\u52a0\u3057\u305f\u4f8b\uff1a\n\n![amazon-order-index.png](https://qiita-image-store.s3.amazonaws.com/0/14958/14873400-7b61-77bd-ccda-d3adfd63e2b2.png)\n\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n## Gemfile\n\n~~~\nsource \"https://rubygems.org\"\n\ngem 'selenium-webdriver'\ngem 'nokogiri'\n~~~\n\n## amazon.rb\n\n~~~\n# -*- coding: utf-8 -*-\n\n# 1. amazon \u306e\u8cfc\u5165\u5c65\u6b74\u3092\u53d6\u5f97\u3059\u308b\u3002(scrennshots/* \u306b\u4fdd\u5b58\u3055\u308c\u308b)\n#   $ ruby amazon.rb email password\n#\n# 2. \u53d6\u5f97\u3057\u305f\u60c5\u5831\u304b\u3089\u3001\u660e\u7d30\u66f8(*.png) \u3092\uff11\u3064\u306e PDF \u306b\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u4f5c\u6210\u3059\u308b\u3002\n#    (imagemagic \u306e convert \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046)\n#   $ convert -resize 575x823 -gravity north -background white -extent 595x842 screenshots/ord*.png 1.pdf\n#\n# 3. \u53d6\u5f97\u3057\u305f\u60c5\u5831\u304b\u3089\u3001csv \u5f62\u5f0f\u3067\u8cfc\u5165\u7269\u4e00\u89a7\u8868\u3092\u4f5c\u6210\u3059\u308b\u3002\n#   $ ruby make-index.rb > 1.csv\n\nrequire 'rubygems'\nrequire 'selenium-webdriver'\n\nSCREENSHOTS_DIR = './screenshots'\n\nmodule Amazon\n  class Driver\n    # \u65b0\u3057\u3044\u30bf\u30d6\u3067 \u6307\u5b9a\u3055\u308c\u305f URL \u3092\u958b\u304d\u3001\u5236\u5fa1\u3092\u305d\u306e\u30bf\u30d6\u306b\u79fb\u3059\u3002\n    def open_new_window(wd, url)\n      a = wd.execute_script(\"var d=document,a=d.createElement('a');a.target='_blank';a.href=arguments[0];a.innerHTML='.';d.body.appendChild(a);return a\", url)\n      a.click\n      wd.switch_to.window(wd.window_handles.last)\n\n      wd.find_element(:link_text, '\u5229\u7528\u898f\u7d04')\n      yield\n      wd.close\n      wd.switch_to.window(wd.window_handles.last)\n    end\n\n    # \u73fe\u5728\u306e\u753b\u9762\u304b\u3089\u30ea\u30f3\u30af\u304c\u5f35\u3089\u308c\u3066\u3044\u308b\u8cfc\u5165\u660e\u7d30\u3092\u5168\u3066\u4fdd\u5b58\u3059\u308b\u3002\n    def save_order(wd)\n      wd.find_element(:link_text, '\u5229\u7528\u898f\u7d04')\n      orders = wd.find_elements(:link_text, '\u9818\u53ce\u66f8\uff0f\u8cfc\u5165\u660e\u7d30\u66f8')\n      orders.each do |ord|\n\n        open_new_window(wd, ord.attribute('href')) do\n          @order_seq += 1\n          wd.save_screenshot(\"#{SCREENSHOTS_DIR}/order_#{format('%03d', @order_seq)}.png\")\n        end\n      end\n    end\n\n    def save_order_history(wd, auth)\n      @page_seq = 0\n      @order_seq = 0\n\n      # \u8cfc\u5165\u5c65\u6b74\u30da\u30fc\u30b8\u3078\n      wd.get 'https://www.amazon.co.jp/gp/css/order-history'\n\n      # \u30ed\u30b0\u30a4\u30f3\u51e6\u7406\n      wd.find_element(:id, 'ap_email').click\n      wd.find_element(:id, 'ap_email').clear\n      wd.find_element(:id, 'ap_email').send_keys auth[:email]\n\n      wd.find_element(:id, 'ap_password').click\n      wd.find_element(:id, 'ap_password').clear\n      wd.find_element(:id, 'ap_password').send_keys auth[:password]\n\n      wd.find_element(:id, 'signInSubmit-input').click\n\n      unless wd.find_element(:xpath, \"//form[@id='order-dropdown-form']/select//option[4]\").selected?\n        wd.find_element(:xpath, \"//form[@id='order-dropdown-form']/select//option[4]\").click  # \u4eca\u5e74\u306e\u6ce8\u6587\n      end\n      wd.find_element(:css, \"#order-dropdown-form > span.in-amzn-btn.btn-prim-med > span > input[type=\\\"submit\\\"]\").click\n\n      # [\u6b21] \u30da\u30fc\u30b8\u3092\u3081\u304f\u3063\u3066\u3044\u304f\n      loop do\n        wd.find_element(:link_text, '\u5229\u7528\u898f\u7d04')\n        @page_seq += 1\n        wd.save_screenshot(\"#{SCREENSHOTS_DIR}/page_#{format('%03d', @page_seq)}.png\")\n        open(\"#{SCREENSHOTS_DIR}/page_#{format('%03d', @page_seq)}.html\", 'w') {|f|\n          f.write wd.page_source\n        }\n\n        # \u30da\u30fc\u30b8\u4e2d\u306e\u500b\u3005\u306e\u6ce8\u6587\u3092\u95b2\u89a7\u3059\u308b\u3002\n        save_order(wd)\n\n        elems = wd.find_elements(:link_text, '\u6b21\u3078 \u00bb')\n        break if elems.size == 0\n        elems[0].click\n      end\n\n      # \u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\n      wd.get 'http://www.amazon.co.jp/gp/flex/sign-out.html/ref=gno_signout'\n    end\n  end\nend\n\ninclude Amazon\n\nif ARGV.size != 2\n  puts \"usage: ruby #{$PROGRAM_NAME} account password\"\n  exit 1\nend\n\nwd = nil\nbegin\n  ad = Amazon::Driver.new\n  wd = Selenium::WebDriver.for :firefox\n  wd.manage.timeouts.implicit_wait = 20 # \u79d2\n  ad.save_order_history(wd, email: ARGV[0], password: ARGV[1])\nensure\n  wd.quit if wd\nend\n~~~\n\n### \u30dd\u30a4\u30f3\u30c8\n\n\u4e00\u89a7\u30da\u30fc\u30b8\u306e\u9818\u53ce\u66f8\u306e\u30ea\u30f3\u30af\u3092  click \u3059\u308b\u3068\u3001\u30da\u30fc\u30b8\u9077\u79fb\u3057\u3066\u9818\u53ce\u66f8\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n\uff11\u3064\u306e\u4e00\u89a7\u30da\u30fc\u30b8\u306f\u300010 \u500b\u306e\u9818\u53ce\u66f8\u306e\u30ea\u30f3\u30af\u304c\u3042\u308b\u3002\n\"\u9818\u53ce\u66f8\u30ea\u30f3\u30af\u306e click\", \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u53d6\u5f97\"\u3001\"\u524d\u30da\u30fc\u30b8\u306b\u623b\u308b\" \u306e\u7e70\u308a\u8fd4\u3057\u64cd\u4f5c\u3067\u306f\u4e00\u89a7\u30da\u30fc\u30b8\u3092\u4f55\u5ea6\u30e2\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\u305d\u3053\u3067\u3001\u9818\u53ce\u66f8\u753b\u9762\u306f\u5225\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u958b\u304f\u3088\u3046\u306b\u3057\u3001\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3092psy\u89e3\u304f\u3057\u305f\u3089\u3001\u305d\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u308b \u3068\u3044\u3046\u64cd\u4f5c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u884c\u308f\u305b\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u4e00\u89a7\u30da\u30fc\u30b8\u3092\u4f55\u5ea6\u306e\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u3092\u907f\u3051\u3066\u3044\u308b\u3002\n\nwebdriver \u3067\u306f\u3001 j\n  1. avascript  \u3092\u3064\u304b\u3063\u3066\u5225 window \u3092\u958b\u304f\n  2. \u958b\u3044\u305f window \u306b\u5236\u5fa1\u3092\u79fb\u3059\u3002\u305d\u3057\u3066 \u62db\u96c6\u66f8\u753b\u9762\u3092 load \u3059\u308b\u3002\n  3. \u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u3089\u3001window \u3092 cloase \u3059\u308b\u3002\n  4. \u4e00\u89a7\u30da\u30fc\u30b8\u306e window \u306b\u5236\u5fa1\u3092\u623b\u3059\u3002\n\u3068\u3044\u3046\u64cd\u4f5c\u3092\u884c\u308f\u305b\u3066\u3044\u308b\u3002\n\n## make-index.rb\n\n~~~\n# -*- coding: utf-8 -*-\n\nrequire 'open-uri'\nrequire 'nokogiri'\nrequire 'csv'\n\n# \u5024\u5f15\u304d\u984d\u3092\u5f97\u308b\n# @param url \u66f8\u7c4d\u60c5\u5831\u30da\u30fc\u30b8\u306e IRL\n# @return \u5024\u5f15\u304d\u984d\ndef saving(url)\n  off = 0\n  begin\n    charset = nil\n    html = open(url) do |f|\n      charset = f.charset\n      f.read # html\u3092\u8aad\u307f\u8fbc\u3093\u3067\u5909\u6570 html\u306b\u6e21\u3059\n    end\n    doc = Nokogiri::HTML.parse(html, nil, charset)\n    # \u5024\u5f15\u304d\u30c7\u30fc\u30bf\u3092\u629c\u304d\u51fa\u3059\u3002\n    price = doc.css('.savingsRow .price')\n    if price && price.size > 0\n      off = price.text.scan(/.+/)[0].scan(/\\d+/).join('')\n    end\n  rescue => ex\n    STDERR.puts url\n    STDERR.puts ex\n  end\n  off.to_i\nend\n\n# \u8cfc\u5165\u7269\u306e\u4e00\u89a7\u3092 csv \u5f62\u5f0f\u3067\u5f97\u308b\u3002\uff08\u8cfc\u5165\u65e5\u3001\u4fa1\u683c\u3001\u5024\u5f15\u984d\u3001\u30bf\u30a4\u30c8\u30eb\uff09\n# @return csv \u5f62\u5f0f\u306e\u6587\u5b57\u5217\ndef generate_csv\n  csv_string = CSV.generate do |csv|\n    Dir::glob(\"screenshots/**/*.html\").each do |path|\n      f = File.open path\n\n      page = Nokogiri::XML f\n      orders = page.css('.action-box')\n      orders.each do |order|\n        date = order.css('.order-level > h2').text\n        price = order.css('.price').text.scan(/\\d+/).join('')\n        title =  order.css('.item-title').text.strip\n        url = order.css('.shipment a').attribute('href').value\n        off = saving(url)\n        csv <<  [date, \"#{format('%8d', price)}\", off, title, url]\n        end\n      f.close\n    end\n  end\n  csv_string\nend\n\nputs generate_csv\n~~~\n\n## head.csv\n\n~~~\n\u65e5\u4ed8,\u4fa1\u683c,OFF,\u66f8\u540d,URL\n,=SUM(B3:B300),=SUM(C3:C300),\n~~~\n\n### \u30dd\u30a4\u30f3\u30c8\n\n\u5024\u5f15\u304d\u984d\u306f\u3001\u8cfc\u5165\u4e00\u89a7\u30da\u30fc\u30b8\u3001\u9818\u53ce\u66f8\u30da\u30fc\u30b8\u306b\u306f\u8a18\u8f09\u3055\u308c\u3066\u3044\u306a\u3044\u3002\n\u5546\u54c1\u30da\u30fc\u30b8\u3092\u8a2a\u308c\u3001\u305d\u306e\u4e2d\u306e\u5024\u5f15\u304d\u984d\u60c5\u5831\u3092\u691c\u7d22\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\u8cfc\u5165\u4e00\u89a7\u5148\u306b\u3042\u308b\u5546\u54c1\u30da\u30fc\u30b8\u306f\u5b58\u5728\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u3042\u308b\u3002\uff08\u4fa1\u683c\u3084\u60c5\u5831\u304c\u66f4\u65b0\u3055\u308c\u305f\uff1f\uff09\n\u305d\u306e\u5834\u5408\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4e2d\u65ad\u305b\u305a\u306b\u3001STDERR \u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u3057\u3066\u3001\u6700\u5f8c\u306e\u5546\u54c1\u307e\u3067\u51e6\u7406\u3092\u884c\u3046\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n# \u66f4\u65b0\u5c65\u6b74\n- 2014-01-04\namazon.co.jp \u304b\u3089\u306e\u8cfc\u5165\u5c65\u6b74 (\u9818\u53ce\u66f8\u30da\u30fc\u30b8) \u3092\u5f97\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f4\u65b0\u3057\u305f\u3002  \n(amazon \u306e\u8cfc\u5165\u5c65\u6b74\u30da\u30fc\u30b8\u3082\u69cb\u9020\u304c\u534a\u5e74\u524d\u304b\u3089\u5909\u5316\u3057\u305f\u305f\u3081)  \n[https://github.com/katoy/amazon-orders/blob/master/amazon.rb](https://github.com/katoy/amazon-orders/blob/master/amazon.rb)\n", "tags": ["Ruby2.1.2", "WebDriver2.24.0", "Nokogiri1.6.3.1", "ImageMagick6.8.9-5", "MacOSX10.9.4"]}