{"context": "\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n\u5404\u8981\u7d20\u304cString\u3067\u4e0e\u3048\u3089\u308c\u305fArray\u3092\u9069\u5207\u306a\u578b\u306b\u5909\u63db\u3057\u305f\u3044\n['1', '2', '3'] -> [1, 2 ,3] # \u6574\u6570\n['1', '2', '3'] -> [1.0, 2.0 ,3.0] # \u5b9f\u6570\n...\n\n\n\u89e3\u6c7a\u7b56\n\nstep 1\n['1', '2', '3'].map(&:to_i)\u306a\u3069\u304c\u601d\u3044\u3064\u304f\u3002\n\u3067\u306f\u3001\u3053\u308c\u3092'float', 'integer'\u306a\u3069\u306e\u5f15\u6570\u3067\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3067\u304d\u306a\u3044\u304b\u3068\u8003\u3048\u305f\u3002\ndef convert(data_type)\n  case data_type\n  when 'integer'\n    :to_i\n  when 'float'\n    :to_f\n  else\n    :itself\n  end\nend\n\n\u3053\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u3051\u3070\u3001\n['1', '2', '3'].map(&convert('integer'))\n>> [1, 2, 3]\n['1', '2', '3'].map(&convert('float'))\n>> [1.0, 2.0, 3.0]\n\n\u3067\u304d\u305f\uff01\n\nstep 2\n\u3057\u304b\u3057\u3001\u4e0a\u306e\u51e6\u7406\u306e\u5834\u5408\u3001nil\u306e\u5165\u3063\u305fArray\u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306bnil\u304c0\u306b\u5909\u63db\u3055\u308c\u3066\u3057\u307e\u3046\u3002\n['1', '2', nil].map(&convert('integer'))\n>> [1, 2, 0]\n['1', '2', nil].map(&convert('float'))\n>> [1.0, 2.0, 0]\n\n\n\u6b21\u306e\u76ee\u7684\uff1anil\u4ee5\u5916\u306e\u3068\u304d\u306b\u3001\u5909\u63db\u3092\u3057\u305f\u3044\uff01\uff01\n\u305d\u3053\u3067\u8efd\u304fProc\u306b\u3064\u3044\u3066\u8abf\u3079\u308b\u3068\u3001:to_i\u306fto_proc\u3067Proc\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u4e0a\u306e\u95a2\u6570\u306b\u4ee5\u4e0b\u3092\u52a0\u3048\u308b\u3053\u3068\u3067\u3001nil\u306e\u3068\u304d\u306f\u3001\u4f55\u3082\u305b\u305a\u3001nil\u4ee5\u5916\u306e\u3068\u304d\u306b\u3001proc.call(x)\u3092\u547c\u3076\uff1d\u5909\u63db\u3059\u308b\u95a2\u6570\u306b\u306a\u308b\nproc = convert('integer').to_proc\n-> (x) { proc.call(x) unless x.nil? }\n\n\u5168\u3066\n  def convert(data_type)\n    symbol = case data_type\n             when 'integer'\n               :to_i\n             when 'float'\n               :to_f\n             when 'date'\n               :to_date\n             when 'datetime'\n               :to_datetime\n             else\n               :itself\n             end\n    proc = symbol.to_proc\n    -> (x) { proc.call(x) unless x.nil? }\n  end\n\n\u3053\u308c\u3067\u3001['1', '2' , nil].map(&convert('float'))\u304c[1.0, 2.0, nil]\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u305f\uff01\n#\u3084\u308a\u305f\u3044\u3053\u3068\n\n\u5404\u8981\u7d20\u304cString\u3067\u4e0e\u3048\u3089\u308c\u305fArray\u3092\u9069\u5207\u306a\u578b\u306b\u5909\u63db\u3057\u305f\u3044\n\n```\n['1', '2', '3'] -> [1, 2 ,3] # \u6574\u6570\n['1', '2', '3'] -> [1.0, 2.0 ,3.0] # \u5b9f\u6570\n...\n```\n\n\n# \u89e3\u6c7a\u7b56\n## step 1\n\n`['1', '2', '3'].map(&:to_i)`\u306a\u3069\u304c\u601d\u3044\u3064\u304f\u3002\n\n\u3067\u306f\u3001\u3053\u308c\u3092'float', 'integer'\u306a\u3069\u306e\u5f15\u6570\u3067\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3067\u304d\u306a\u3044\u304b\u3068\u8003\u3048\u305f\u3002\n\n```rb\ndef convert(data_type)\n  case data_type\n  when 'integer'\n    :to_i\n  when 'float'\n    :to_f\n  else\n    :itself\n  end\nend\n```\n\n\u3053\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u3051\u3070\u3001\n\n```rb\n['1', '2', '3'].map(&convert('integer'))\n>> [1, 2, 3]\n['1', '2', '3'].map(&convert('float'))\n>> [1.0, 2.0, 3.0]\n```\n\u3067\u304d\u305f\uff01\n\n\n## step 2 \n\n\u3057\u304b\u3057\u3001\u4e0a\u306e\u51e6\u7406\u306e\u5834\u5408\u3001nil\u306e\u5165\u3063\u305fArray\u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b`nil`\u304c0\u306b\u5909\u63db\u3055\u308c\u3066\u3057\u307e\u3046\u3002\n\n```rb\n['1', '2', nil].map(&convert('integer'))\n>> [1, 2, 0]\n['1', '2', nil].map(&convert('float'))\n>> [1.0, 2.0, 0]\n\n```\n\n\u6b21\u306e\u76ee\u7684\uff1anil\u4ee5\u5916\u306e\u3068\u304d\u306b\u3001\u5909\u63db\u3092\u3057\u305f\u3044\uff01\uff01\n\n\n\u305d\u3053\u3067\u8efd\u304fProc\u306b\u3064\u3044\u3066\u8abf\u3079\u308b\u3068\u3001`:to_i`\u306f`to_proc`\u3067`Proc`\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u4e0a\u306e\u95a2\u6570\u306b\u4ee5\u4e0b\u3092\u52a0\u3048\u308b\u3053\u3068\u3067\u3001nil\u306e\u3068\u304d\u306f\u3001\u4f55\u3082\u305b\u305a\u3001nil\u4ee5\u5916\u306e\u3068\u304d\u306b\u3001`proc.call(x)`\u3092\u547c\u3076\uff1d\u5909\u63db\u3059\u308b\u95a2\u6570\u306b\u306a\u308b\n\n```rb\nproc = convert('integer').to_proc\n-> (x) { proc.call(x) unless x.nil? }\n```\n\n\n\u5168\u3066\n\n```rb\n  def convert(data_type)\n    symbol = case data_type\n             when 'integer'\n               :to_i\n             when 'float'\n               :to_f\n             when 'date'\n               :to_date\n             when 'datetime'\n               :to_datetime\n             else\n               :itself\n             end\n    proc = symbol.to_proc\n    -> (x) { proc.call(x) unless x.nil? }\n  end\n```\n\n\u3053\u308c\u3067\u3001`['1', '2' , nil].map(&convert('float'))`\u304c`[1.0, 2.0, nil]`\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u305f\uff01\n", "tags": ["Ruby", "\u578b", "type", "\u5909\u63db"]}