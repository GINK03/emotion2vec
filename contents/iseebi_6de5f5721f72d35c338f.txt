{"context": " More than 1 year has passed since last update.Android 3.0 \u3067\u306f\u3001\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u308b\u9805\u76ee\u3068\u3057\u3066\u3001Activity \u306e\u4e0b\u306b Fragment \u3068\u3044\u3046\u8981\u7d20\u3092\u4f7f\u3046\u3088\u3046\u306b\u306a\u308a\u3001\u30bf\u30d6\u30ec\u30c3\u30c8\u5bfe\u5fdc\u3084\u30bf\u30d6\u306e\u4f7f\u7528\u306a\u3069\u3067\u306f\u5fc5\u9808\u30ec\u30d9\u30eb\u3067\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nMvvmCross \u306b\u306f\u3001\u3053\u306e\u6a5f\u80fd\u306b\u5bfe\u3057\u3066 Fragging \u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3001FullFragging \u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3044\u3046 2 \u7a2e\u985e\u306e Fragment \u30b5\u30dd\u30fc\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\nFragging \u30e2\u30b8\u30e5\u30fc\u30eb\u306f Android 2.x \u3067\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u30d0\u30c3\u30af\u30dd\u30fc\u30c8\u3055\u308c\u305f Support Library \u306e Fragment \u3092\u4f7f\u7528\u3059\u308b\u3082\u306e\u3001FullFragging \u30e2\u30b8\u30e5\u30fc\u30eb\u306f Android 3.0 \u4ee5\u964d\u306b\u642d\u8f09\u3055\u308c\u308b\u6a19\u6e96\u306e Fragment \u3092\u4f7f\u7528\u3059\u308b\u3082\u306e\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nFragging/FullFragging \u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u306f MvxFragment \u3068\u3044\u3046 View \u30af\u30e9\u30b9\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\u304c\u3001\u3053\u306e\u30af\u30e9\u30b9\u306b\u95a2\u3059\u308b\u4f7f\u7528\u65b9\u6cd5\u304c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4e0a\u306b\u3042\u308a\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u30a2\u30d7\u30ea\u304c\u505c\u6b62\u72b6\u614b\u306b\u306a\u308b\u969b\u306e\u51e6\u7406\u7b49\u304c\u73fe\u72b6\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u305d\u306e\u307e\u307e\u306e\u72b6\u614b\u3067\u4f7f\u7528\u3059\u308b\u3068\u30e1\u30e2\u30ea\u304c\u5c11\u306a\u3044\u6a5f\u7a2e\u7b49\u3067\u554f\u984c\u306b\u306a\u3063\u3066\u304d\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001MvxFragment \u30af\u30e9\u30b9\u306e\u4f7f\u3044\u65b9\u3068\u3001MvxFragment \u30af\u30e9\u30b9\u4e0a\u3067\u505c\u6b62\u6a5f\u80fd\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u62e1\u5f35\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nMvxFragment \u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\nNuGet \u3067\u4ee5\u4e0b\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\u4eca\u56de\u306f FullFragging \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30d9\u30fc\u30b9\u306b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nMvvmCross.HotTuna.Droid.FullFragging (\u958b\u767a\u4e2d\u306e\u30a2\u30d7\u30ea\u304c Android 3.0 \u4ee5\u964d\u306e\u307f\u3092\u5bfe\u8c61\u306b\u3059\u308b\u5834\u5408)\nMvvmCross.HotTuna.Droid.Fragging (\u958b\u767a\u4e2d\u306e\u30a2\u30d7\u30ea\u304c Android 2.x \u3082\u5bfe\u8c61\u306b\u3059\u308b\u5834\u5408)\n\n\nFragment \u3092\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u30fb\u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3059\u308b\nViewModel \u3092\u8868\u793a\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089 Fragment \u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306b\u306f\u3001Activity \u3092\u8868\u793a\u3057\u3088\u3046\u3068\u3059\u308b\u901a\u5e38\u306e\u52d5\u4f5c\u3092\u30d5\u30c3\u30af\u3057\u3066\u3001Fragment \u3092\u8868\u793a\u3059\u308b\u51e6\u7406\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\u8868\u793a\u4e2d\u306e Activity \u304c\u3001ViewModel \u306b\u5bfe\u5fdc\u3059\u308b Fragment \u3092\u542b\u3080\u5834\u5408\u306f\u305d\u308c\u3092\u51e6\u7406\u3057\u3066\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u7528\u610f\u3057\u307e\u3059\u3002IFragmentHost \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u3001.Droid \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\n\nIFragmentHost.cs\nusing Cirrious.MvvmCross.ViewModels;\n\nnamespace RestoreTest.Droid\n{\n    /// <summary>\n    /// Fragment \u3092\u8868\u793a\u3059\u308b Activity \u304c\u6301\u3064\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\n    /// </summary>\n    public interface IFragmentHost\n    {\n        /// <summary>\n        /// Fragment \u3092\u8868\u793a\u3059\u308b\n        /// </summary>\n        /// <param name=\"request\">\u8868\u793a\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8</param>\n        /// <returns>\u6e21\u3055\u308c\u305fViewModelRequest \u304c\u51e6\u7406\u3055\u308c\u3066 Fragment \u306e\u8868\u793a\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u305f\u3089 true\u3001\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f false \u3002</returns>\n        bool Show(MvxViewModelRequest request);\n    }\n}\n\n\n\u6b21\u306b\u3001\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u6301\u3064 Activity \u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001Show \u30e1\u30bd\u30c3\u30c9\u3092\u901a\u3058\u3066\u305d\u306e Activity \u306b ViewModelRequest \u3092\u6e21\u305b\u308b\u3088\u3046\u3001\u30ab\u30b9\u30bf\u30e0\u306e ViewPresenter \u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\nViewPresenter.cs\nusing Cirrious.MvvmCross.Droid.Views;\nusing Cirrious.MvvmCross.ViewModels;\n\nnamespace RestoreTest.Droid\n{\n    /// <summary>\n    /// \u30ab\u30b9\u30bf\u30e0\u306e ViewPresenter\n    /// </summary>\n    public class ViewPresenter : MvxAndroidViewPresenter\n    {\n        /// <summary>\n        /// ViewModelRequest \u306e\u51e6\u7406\n        /// </summary>\n        /// <param name=\"request\">Request.</param>\n        public override void Show(MvxViewModelRequest request)\n        {\n            // \u73fe\u5728\u306e Activity \u304c IFragmentHost \u3092\u5b9f\u88c5\u3057\u3066\u3044\u305f\u3089\n            var host = Activity as IFragmentHost;\n            if (host != null)\n            {\n                // IFragmentHost.Show \u7d4c\u7531\u3067 Fragment \u3092\u8868\u793a\n                if (host.Show(request))\n                {\n                    // \u547c\u3073\u51fa\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u5185\u3067 Fragment \u304c\u8868\u793a\u3055\u308c\u308c\u3070\u3053\u3053\u3067\u7d42\u4e86\n                    return;\n                }\n            }\n\n            // \u5f53\u3066\u306f\u307e\u3089\u306a\u3051\u308c\u3070\u901a\u5e38\u306e MvxActivity \u3092\u8868\u793a\u3059\u308b\u51e6\u7406\n            base.Show(request);\n        }\n    }\n}\n\n\nFragment \u306f Views \u4ee5\u4e0b\u306b Fragments \u306e\u968e\u5c64\u3092\u4f5c\u3063\u3066\u305d\u306e\u4e2d\u306b\u5165\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3088\u3046\u3067\u3059\u3002Fragments \u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u3063\u3066\u3001\u305d\u306e\u4e2d\u306b\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u57fa\u5e95\u30af\u30e9\u30b9 BaseFragment \u3092\u4f5c\u6210\u3057\u3001\u3053\u306e\u30af\u30e9\u30b9\u3092\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u3068\u3057\u3066 Fragment \u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002(\u5f8c\u307b\u3069\u3001\u5fa9\u5e30\u6a5f\u80fd\u3092\u3064\u3051\u308b\u3068\u304d\u306b\u5fc5\u8981\u306b\u306a\u3063\u3066\u304d\u307e\u3059)\n\nFragmentBase.cs\nusing Android.Views;\nusing Cirrious.MvvmCross.Droid.FullFragging.Fragments;\n\nnamespace RestoreTest.Droid.Views.Fragments\n{\n    public class FragmentBase : MvxFragment\n    {\n    }\n}\n\n\nFragment \u306f\u3001Activity \u3068\u540c\u69d8\u306b\u30ec\u30a4\u30a2\u30a6\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u3001\u5bfe\u5fdc\u3059\u308b\u30af\u30e9\u30b9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3059(OnCreateView \u3067 View \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u8a73\u3057\u304f\u306f Fragment \u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u3066\u304f\u3060\u3055\u3044)\u3002\n\nThirdView.cs\nusing Android.OS;\nusing Android.Views;\nusing Cirrious.MvvmCross.Binding.Droid.BindingContext;\nusing Cirrious.CrossCore;\n\nnamespace RestoreTest.Droid.Views.Fragments\n{\n    public class ThirdView : FragmentBase \n    {\n        public override View OnCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)\n        {\n            // MvxFragment \u306e\u4ed5\u69d8\u4e0a\u3001\u5fc5\u305a base \u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308b\u3002\n            // \u623b\u308a\u5024\u306f\u6368\u3066\u308b\n            base.OnCreateView(inflater, container, savedInstanceState);\n\n            // \u8868\u793a\u3059\u308b View \u3092\u30ec\u30a4\u30a2\u30a6\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u3092 BindingInflate \u3067\u751f\u6210\u3059\u308b\u3002\n            // BindingInflate \u3067\u306a\u3044\u3068 local:MvxBind \u3092\u66f8\u3044\u3066\u3042\u308b\u7b87\u6240\u3067\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u306e\u3067\u6ce8\u610f\u3002\n            return this.BindingInflate(Resource.Layout.ThirdView, null);\n        }\n    }\n}\n\n\n\u3042\u3068\u306f\u3001\u3053\u306e Fragment \u3092\u8868\u793a\u3059\u308b Activity \u306b Fragment \u3092\u51e6\u7406\u3059\u308b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nSecondView.cs\nusing Cirrious.MvvmCross.Droid.Views;\nusing Android.App;\nusing Android.OS;\nusing Cirrious.CrossCore;\nusing Cirrious.MvvmCross.ViewModels;\nusing RestoreTest.Core.ViewModels;\nusing RestoreTest.Droid.Views.Fragments;\n\nnamespace RestoreTest.Droid.Views\n{\n    [Activity(Label = \"View for SecondViewModel\")]\n    public class SecondView : MvxActivity, IFragmentHost\n    {\n        ThirdView _thirdViewFragment;\n\n        protected override void OnCreate(Bundle bundle)\n        {\n            SetContentView(Resource.Layout.SecondView);\n        }\n\n        #region IFragmentHost implementation\n\n        public bool Show(MvxViewModelRequest request)\n        {\n            // \u3053\u306e\u753b\u9762\u3067\u8868\u793a\u3067\u304d\u308b\u578b\u306e ViewModel \u306a\u3089\n            if (request.ViewModelType == typeof(ThirdViewModel))\n            {\n                // View \u3092\u4f5c\u3063\u3066\n                _thirdViewFragment = new ThirdView();\n\n                // ViewModel \u3092\u4f5c\u3063\u3066\n                var loaderService = Mvx.Resolve<IMvxViewModelLoader>();\n                _thirdViewFragment.ViewModel = loaderService.LoadViewModel(viewModelRequest, savedState);\n\n                // Fragment \u306e\u8868\u793a\u9818\u57df\u306b\u8ffd\u52a0\u3059\u308b\n                var trans = FragmentManager.BeginTransaction();\n                trans.Add(Resource.Id.fragmentFrame, _thirdViewFragment);\n                trans.Commit();\n\n                return true;\n            }\n            return false;\n        }\n\n        #endregion\n    }\n}\n\n\n\u3053\u3053\u307e\u3067\u306e\u5185\u5bb9\u306f\u516c\u5f0f\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u901a\u308a\u3067\u3059\u3002\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u3053\u306e\u65b9\u6cd5\u3067\u4f5c\u3063\u305f\u30a2\u30d7\u30ea\u306f\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u306b\u9001\u3089\u308c\u305f\u5f8c\u3001\u3042\u308b\u7a0b\u5ea6\u30e1\u30e2\u30ea\u8ca0\u8377\u3092\u304b\u3051\u305f\u72b6\u614b\u3067\u5fa9\u5e30\u3057\u3088\u3046\u3068\u3057\u305f\u5834\u5408\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u304b\u3001\u305f\u307e\u305f\u307e\u8868\u793a\u3067\u304d\u305f\u3068\u3057\u3066\u3082\u671f\u5f85\u3059\u308b\u52d5\u4f5c\u3092\u3057\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u3042\u308b\u7a0b\u5ea6\u30ea\u30bd\u30fc\u30b9\u304c\u5727\u8feb\u3055\u308c\u308b\u3068\u3001Android \u306e OS \u5074\u306e\u5236\u5fa1\u3067\u30a2\u30d7\u30ea\u304c\u5f37\u5236\u7684\u306b\u505c\u6b62\u3055\u308c\u308b\u305f\u3081\u3067\u3059\u3002\u5f37\u5236\u7684\u306b\u505c\u6b62\u3055\u308c\u305f\u30a2\u30d7\u30ea\u306f\u3001\u5143\u3005\u8868\u793a\u3055\u308c\u3066\u3044\u305f\u753b\u9762\u3067\u5fa9\u5e30\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u304c\u3001\u65b0\u898f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3068\u306a\u308b\u305f\u3081\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u3084\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3059\u3079\u3066\u30af\u30ea\u30a2\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\nActivity \u3084 Fragment \u306b\u306f OnSaveInstanceState \u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3055\u308c\u308b Bundle \u306b\u5404\u7a2e\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3057\u3066\u304a\u3051\u3070 OnCreate \u3084 OnCreateView \u306a\u3069\u306b\u6e21\u3055\u308c\u308b Bundle \u3067\u518d\u53d6\u5f97\u3067\u304d\u3001\u5fa9\u5143\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002MvvmCross \u3067\u3082\u3053\u306e\u6a5f\u80fd\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001Fragment \u306b\u95a2\u3057\u3066\u306f\u51e6\u7406\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001Show \u30e1\u30bd\u30c3\u30c9\u3067 ViewModel \u3092\u76f4\u63a5\u30bb\u30c3\u30c8\u3057\u307e\u3057\u305f\u304c\u3001\u3053\u308c\u3082\u521d\u671f\u5316\u3055\u308c\u3066 ViewModel \u304c\u6d88\u3048\u3066\u3044\u308b\u3068\u3044\u3046\u72b6\u614b\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002Fragment \u306e\u521d\u671f\u5316\u306b\u95a2\u3059\u308b\u60c5\u5831\u306f Argument \u3068\u3044\u3046\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5165\u308c\u3066\u304a\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u4f7f\u3044\u3001Fragment \u81ea\u8eab\u306b ViewModel \u3092\u4f5c\u3089\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nFragment \u306b\u72b6\u614b\u4fdd\u5b58\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\n\u672c\u6765\u3067\u3042\u308c\u3070 MvvmCross \u5074\u3092\u4fee\u6b63\u3059\u3079\u304d\u6240\u3067\u3059\u304c\u3001\u304b\u306a\u308a\u8907\u96d1\u304b\u3064\u3001\u5165\u308c\u66ff\u3048\u3082\u624b\u9593\u306a\u306e\u3067\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u306e\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u3092\u7528\u610f\u3059\u308b\u5f62\u3067\u5bfe\u5fdc\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u307e\u305a\u3001FragmentExtension \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3053\u3053\u306b\u306f\u72b6\u614b\u4fdd\u5b58\u3084 ViewModel \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5f15\u304d\u6e21\u3057\u306a\u3069\u306e\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\nFragmentExtension.cs\nusing System;\nusing Cirrious.MvvmCross.Droid.FullFragging.Fragments;\nusing Android.OS;\nusing Android.Views;\nusing Cirrious.MvvmCross.ViewModels;\nusing Cirrious.MvvmCross.Views;\nusing Cirrious.CrossCore;\nusing Cirrious.MvvmCross.Droid.Platform;\nusing Cirrious.MvvmCross.Droid.Views;\n\nnamespace RestoreTest.Droid.Views.Fragments\n{\n    /// <summary>\n    /// Fragment \u95a2\u9023\u306e\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\n    /// </summary>\n    public static class FragmentExtensions\n    {\n        /// <summary>\n        /// Arguments \u306b\u767b\u9332\u3059\u308b\u8d77\u52d5\u30d1\u30e9\u30e1\u30fc\u30bf\n        /// </summary>\n        public const string ExtrasKey = \"MvxLaunchData\";\n\n        /// <summary>\n        /// ViewModel \u306b Request \u3092\u767b\u9332\u3059\u308b\n        /// </summary>\n        public static void ProvideViewModelRequest(this MvxFragment fragment, MvxViewModelRequest request)\n        {\n            var bundle = fragment.Arguments ??\n                (fragment.Arguments = new Bundle());\n\n            var converter = Mvx.Resolve<IMvxNavigationSerializer>();\n            var requestText = converter.Serializer.SerializeObject(request);\n            bundle.PutString(ExtrasKey, requestText);\n        }\n\n        /// <summary>\n        /// Fragment \u306e OnCreateView \u3067\u547c\u3073\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\n        /// ViewModel \u3092\u751f\u6210\u30fb\u72b6\u614b\u5fa9\u5143\u3059\u308b\u3002\n        /// </summary>\n        public static void CreateViewCalled(this MvxFragment fragment, LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)\n        {\n            fragment.ViewModel = fragment.LoadViewModel(savedInstanceState);\n        }\n\n        /// <summary>\n        /// Fragment \u306e OnSaveInstanceStateCalled \u3067\u547c\u3073\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\n        /// ViewModel \u306e\u72b6\u614b\u4fdd\u5b58\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\n        /// </summary>\n        public static void SaveInstanceStateCalled(this MvxFragment fragment, Bundle outState)\n        {\n            var mvxBundle = fragment.CreateSaveStateBundle();\n            if (mvxBundle != null)\n            {\n                IMvxSavedStateConverter converter;\n                if (!Mvx.TryResolve<IMvxSavedStateConverter>(out converter))\n                {\n                    Mvx.Warning(\"Saved state converter not available - saving state will be hard\");\n                }\n                else\n                {\n                    converter.Write(outState, mvxBundle);\n                }\n            }\n            var cache = Mvx.Resolve<IMvxSingleViewModelCache>();\n            cache.Cache(fragment.ViewModel, outState);\n        }\n\n        /// <summary>\n        /// ViewModel \u3092\u8aad\u307f\u8fbc\u3080\n        /// </summary>\n        /// <remarks>MvxActivityViewExtensions \u306e\u540c\u540d\u30e1\u30bd\u30c3\u30c9\u306e\u30b3\u30d4\u30da\u306a\u306e\u3067\u4f55\u3068\u304b\u3057\u305f\u3044</remarks>\n        static IMvxViewModel LoadViewModel(this MvxFragment fragment, Bundle savedInstanceState)\n        {\n            var viewModelType = fragment.FindAssociatedViewModelTypeOrNull();\n            if (viewModelType == typeof(MvxNullViewModel))\n                return new MvxNullViewModel();\n\n            if (viewModelType == null\n                || viewModelType == typeof (IMvxViewModel))\n            {\n                Mvx.Trace(\"No ViewModel class specified for {0} in LoadViewModel\",\n                               fragment.GetType().Name);\n            }\n\n            var extraData = fragment.Arguments.GetString(ExtrasKey);\n            if (extraData == null)\n                return null;\n\n            var savedState = GetSavedStateFromBundle(savedInstanceState);\n\n            var converter = Mvx.Resolve<IMvxNavigationSerializer>();\n            var viewModelRequest = converter.Serializer.DeserializeObject<MvxViewModelRequest>(extraData);\n\n            var loaderService = Mvx.Resolve<IMvxViewModelLoader>();\n            var viewModel = loaderService.LoadViewModel(viewModelRequest, savedState);\n            return viewModel;\n        }\n\n        /// <summary>\n        /// SavedInstanceState \u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u308a\u51fa\u3059\n        /// </summary>\n        /// <remarks>MvxActivityViewExtensions \u306e\u540c\u540d\u30e1\u30bd\u30c3\u30c9\u306e\u30b3\u30d4\u30da\u306a\u306e\u3067\u4f55\u3068\u304b\u3057\u305f\u3044</remarks>\n        static IMvxBundle GetSavedStateFromBundle(Bundle bundle)\n        {\n            if (bundle == null)\n                return null;\n\n            IMvxSavedStateConverter converter; \n            if (!Mvx.TryResolve<IMvxSavedStateConverter>(out converter))\n            {\n                Mvx.Trace(\"No saved state converter available - this is OK if seen during start\");\n                return null;\n            }\n            var savedState = converter.Read(bundle);\n            return savedState;\n        }\n    }\n}\n\n\n\u6b21\u306b\u3001FragmentExtension \u306b\u5b9a\u7fa9\u3057\u305f\u51e6\u7406\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u3001FragmentBase \u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\nFragmentBase.cs\nusing Android.Views;\nusing Cirrious.MvvmCross.Droid.FullFragging.Fragments;\n\nnamespace RestoreTest.Droid.Views.Fragments\n{\n    public class FragmentBase : MvxFragment\n    {\n        public override View OnCreateView(LayoutInflater inflater, ViewGroup container, Android.OS.Bundle savedInstanceState)\n        {\n            this.CreateViewCalled(inflater, container, savedInstanceState);\n            return base.OnCreateView(inflater, container, savedInstanceState);\n        }\n\n        public override void OnSaveInstanceState(Android.OS.Bundle outState)\n        {\n            this.SaveInstanceStateCalled(outState);\n        }\n    }\n}\n\n\n\u6700\u5f8c\u306b\u3001Fragment \u3092\u751f\u6210\u3059\u308b\u90e8\u5206\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002ViewModel \u3092\u76f4\u63a5\u4f5c\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u3067\u5b9a\u7fa9\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u5f15\u304d\u6e21\u3057\u306e\u51e6\u7406\u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nSecondView.cs\npublic bool Show(MvxViewModelRequest request)\n{\n    if (request.ViewModelType == typeof(ThirdViewModel))\n    {\n        _thirdViewFragment = new ThirdView();\n        _thirdViewFragment.ProvideViewModelRequest(request);\n\n        var trans = FragmentManager.BeginTransaction();\n        trans.Add(Resource.Id.fragmentFrame, _thirdViewFragment);\n        trans.Commit();\n\n        return true;\n    }\n    return false;\n}\n\n\n\nViewModel \u5074\u306e\u72b6\u614b\u4fdd\u5b58\n\u306a\u304a\u3001\u3053\u3053\u307e\u3067\u306e\u5b9f\u88c5\u3067\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306f\u3064\u306a\u304c\u308a\u307e\u3057\u305f\u304c\u3001ViewModel \u3067\u5b9f\u969b\u306b\u5024\u3092\u8aad\u307f\u66f8\u304d\u3057\u306a\u3044\u3068\u72b6\u614b\u5fa9\u5e30\u3055\u305b\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u72b6\u614b\u4fdd\u5b58\u304c\u5fc5\u8981\u306a\u3068\u3053\u308d\u306b\u306a\u308b\u3068\u3001ViewModel \u306e SaveStateToBundle \u304c\u3001\u72b6\u614b\u5fa9\u5143\u304c\u5fc5\u8981\u306b\u306a\u308b\u3068 LoadStateFromBundle \u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u3053\u3053\u3067\u5024\u3092\u8aad\u307f\u66f8\u304d\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nThirdViewModel.cs\nusing Cirrious.MvvmCross.ViewModels;\n\nnamespace RestoreTest.Core.ViewModels\n{\n    public class ThirdViewModel : MvxViewModel\n    {\n        const string HelloKey = \"Hello\";\n\n        string _hello = \"Hello MvvmCross\";\n        public string Hello\n        { \n            get { return _hello; }\n            set { _hello = value; RaisePropertyChanged(() => Hello); }\n        }\n\n        /// <summary>\n        /// \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n        /// 1\u756a\u76ee\u306b\u547c\u3070\u308c\u308b\n        /// </summary>\n        public ThirdViewModel()\n        {\n        }\n\n        /// <summary>\n        /// ViewModel \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308b\n        /// 2\u756a\u76ee\u306b\u547c\u3070\u308c\u308b\n        /// </summary>\n        /// <param name=\"parameters\">Parameters.</param>\n        protected override void InitFromBundle(IMvxBundle parameters)\n        {\n            base.InitFromBundle(parameters);\n        }\n\n        /// <summary>\n        /// \u72b6\u614b\u4fdd\u5b58\u3055\u308c\u305f\u5024\u3092\u8aad\u307f\u8fbc\u3080\n        /// \u4fdd\u5b58\u3055\u308c\u305f\u30c7\u30fc\u30bf\u304c\u3042\u308c\u3070 InitFromBundle \u306e\u5f8c\u306b\u547c\u3070\u308c\u308b\n        /// </summary>\n        /// <param name=\"state\">State.</param>\n        protected override void ReloadFromBundle(IMvxBundle state)\n        {\n            base.ReloadFromBundle(state);\n\n            if (state != null)\n            {\n                if (state.Data.ContainsKey(HelloKey))\n                {\n                    Hello = state.Data[HelloKey];\n                }\n            }\n        }\n\n        /// <summary>\n        /// \u4e00\u756a\u6700\u521d\u306b\u8868\u793a\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u547c\u3070\u308c\u308b\n        /// </summary>\n        public override void Start()\n        {\n            base.Start();\n        }\n\n        /// <summary>\n        /// \u72b6\u614b\u4fdd\u5b58\u304c\u5fc5\u8981\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u547c\u3070\u308c\u308b\n        /// </summary>\n        /// <param name=\"bundle\">Bundle.</param>\n        protected override void SaveStateToBundle(IMvxBundle bundle)\n        {\n            base.SaveStateToBundle(bundle);\n            bundle.Data.Add(HelloKey, Hello);\n        }\n    }\n}\n\n\n\n\u72b6\u614b\u5fa9\u5e30\u306e\u30c6\u30b9\u30c8\u65b9\u6cd5\n\u306a\u304a\u3001\u72b6\u614b\u5fa9\u5e30\u306f\u7aef\u672b\u306e\u8a2d\u5b9a\u300c\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u300d\u3092\u5909\u3048\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u3092\u4fdd\u6301\u3057\u306a\u3044\n\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30d7\u30ed\u30bb\u30b9\u306e\u4e0a\u9650: 1\n\n\u3053\u306e\u72b6\u614b\u3067\u5225\u306e\u30a2\u30d7\u30ea\u306b\u5207\u308a\u66ff\u3048\u3066\u623b\u3063\u3066\u304f\u308c\u3070\u3001\u72b6\u614b\u5fa9\u5143\u304c\u8d77\u3053\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\n\u3053\u306e\u8a18\u4e8b\u3067\u53d6\u308a\u4e0a\u3052\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306e\u5168\u4f53\u306f\u4ee5\u4e0b\u306e\u5834\u6240\u306b\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u4f75\u305b\u3066\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nMvvmCrossPlayground/RestoreTest at master \u00b7 iseebi/MvvmCrossPlayground\n\n\u306a\u304a\u3001\u72b6\u614b\u304c\u5fa9\u5143\u3055\u308c\u306a\u3044\u70b9\u306b\u3064\u3044\u3066\u306f\u3001\u3059\u3067\u306b MvvmCross \u306e Issue \u306b\u3042\u304c\u3063\u3066\u3044\u307e\u3059\u3002\n\nViewModel associated MvxFragment never calls ReloadState/SaveState \u00b7 Issue #745 \u00b7 MvvmCross/MvvmCross\n\n\nAndroid 3.0 \u3067\u306f\u3001\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u308b\u9805\u76ee\u3068\u3057\u3066\u3001Activity \u306e\u4e0b\u306b Fragment \u3068\u3044\u3046\u8981\u7d20\u3092\u4f7f\u3046\u3088\u3046\u306b\u306a\u308a\u3001\u30bf\u30d6\u30ec\u30c3\u30c8\u5bfe\u5fdc\u3084\u30bf\u30d6\u306e\u4f7f\u7528\u306a\u3069\u3067\u306f\u5fc5\u9808\u30ec\u30d9\u30eb\u3067\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nMvvmCross \u306b\u306f\u3001\u3053\u306e\u6a5f\u80fd\u306b\u5bfe\u3057\u3066 Fragging \u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3001FullFragging \u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3044\u3046 2 \u7a2e\u985e\u306e Fragment \u30b5\u30dd\u30fc\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\nFragging \u30e2\u30b8\u30e5\u30fc\u30eb\u306f Android 2.x \u3067\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u30d0\u30c3\u30af\u30dd\u30fc\u30c8\u3055\u308c\u305f Support Library \u306e Fragment \u3092\u4f7f\u7528\u3059\u308b\u3082\u306e\u3001FullFragging \u30e2\u30b8\u30e5\u30fc\u30eb\u306f Android 3.0 \u4ee5\u964d\u306b\u642d\u8f09\u3055\u308c\u308b\u6a19\u6e96\u306e Fragment \u3092\u4f7f\u7528\u3059\u308b\u3082\u306e\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nFragging/FullFragging \u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u306f MvxFragment \u3068\u3044\u3046 View \u30af\u30e9\u30b9\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\u304c\u3001\u3053\u306e\u30af\u30e9\u30b9\u306b\u95a2\u3059\u308b\u4f7f\u7528\u65b9\u6cd5\u304c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4e0a\u306b\u3042\u308a\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u30a2\u30d7\u30ea\u304c\u505c\u6b62\u72b6\u614b\u306b\u306a\u308b\u969b\u306e\u51e6\u7406\u7b49\u304c\u73fe\u72b6\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u305d\u306e\u307e\u307e\u306e\u72b6\u614b\u3067\u4f7f\u7528\u3059\u308b\u3068\u30e1\u30e2\u30ea\u304c\u5c11\u306a\u3044\u6a5f\u7a2e\u7b49\u3067\u554f\u984c\u306b\u306a\u3063\u3066\u304d\u307e\u3059\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001MvxFragment \u30af\u30e9\u30b9\u306e\u4f7f\u3044\u65b9\u3068\u3001MvxFragment \u30af\u30e9\u30b9\u4e0a\u3067\u505c\u6b62\u6a5f\u80fd\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u62e1\u5f35\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n## MvxFragment \u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\nNuGet \u3067\u4ee5\u4e0b\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\u4eca\u56de\u306f FullFragging \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30d9\u30fc\u30b9\u306b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n* MvvmCross.HotTuna.Droid.FullFragging (\u958b\u767a\u4e2d\u306e\u30a2\u30d7\u30ea\u304c Android 3.0 \u4ee5\u964d\u306e\u307f\u3092\u5bfe\u8c61\u306b\u3059\u308b\u5834\u5408)\n* MvvmCross.HotTuna.Droid.Fragging (\u958b\u767a\u4e2d\u306e\u30a2\u30d7\u30ea\u304c Android 2.x \u3082\u5bfe\u8c61\u306b\u3059\u308b\u5834\u5408)\n\n## Fragment \u3092\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u30fb\u30af\u30e9\u30b9\u3092\u8ffd\u52a0\u3059\u308b\n\nViewModel \u3092\u8868\u793a\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089 Fragment \u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306b\u306f\u3001Activity \u3092\u8868\u793a\u3057\u3088\u3046\u3068\u3059\u308b\u901a\u5e38\u306e\u52d5\u4f5c\u3092\u30d5\u30c3\u30af\u3057\u3066\u3001Fragment \u3092\u8868\u793a\u3059\u308b\u51e6\u7406\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n\u8868\u793a\u4e2d\u306e Activity \u304c\u3001ViewModel \u306b\u5bfe\u5fdc\u3059\u308b Fragment \u3092\u542b\u3080\u5834\u5408\u306f\u305d\u308c\u3092\u51e6\u7406\u3057\u3066\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u7528\u610f\u3057\u307e\u3059\u3002IFragmentHost \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u3001.Droid \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u307e\u3059\n\n```IFragmentHost.cs\nusing Cirrious.MvvmCross.ViewModels;\n\nnamespace RestoreTest.Droid\n{\n    /// <summary>\n    /// Fragment \u3092\u8868\u793a\u3059\u308b Activity \u304c\u6301\u3064\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\n    /// </summary>\n    public interface IFragmentHost\n    {\n        /// <summary>\n        /// Fragment \u3092\u8868\u793a\u3059\u308b\n        /// </summary>\n        /// <param name=\"request\">\u8868\u793a\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8</param>\n        /// <returns>\u6e21\u3055\u308c\u305fViewModelRequest \u304c\u51e6\u7406\u3055\u308c\u3066 Fragment \u306e\u8868\u793a\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u305f\u3089 true\u3001\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f false \u3002</returns>\n        bool Show(MvxViewModelRequest request);\n    }\n}\n```\n\n\u6b21\u306b\u3001\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u6301\u3064 Activity \u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001Show \u30e1\u30bd\u30c3\u30c9\u3092\u901a\u3058\u3066\u305d\u306e Activity \u306b ViewModelRequest \u3092\u6e21\u305b\u308b\u3088\u3046\u3001\u30ab\u30b9\u30bf\u30e0\u306e ViewPresenter \u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```ViewPresenter.cs\nusing Cirrious.MvvmCross.Droid.Views;\nusing Cirrious.MvvmCross.ViewModels;\n\nnamespace RestoreTest.Droid\n{\n    /// <summary>\n    /// \u30ab\u30b9\u30bf\u30e0\u306e ViewPresenter\n    /// </summary>\n    public class ViewPresenter : MvxAndroidViewPresenter\n    {\n        /// <summary>\n        /// ViewModelRequest \u306e\u51e6\u7406\n        /// </summary>\n        /// <param name=\"request\">Request.</param>\n        public override void Show(MvxViewModelRequest request)\n        {\n            // \u73fe\u5728\u306e Activity \u304c IFragmentHost \u3092\u5b9f\u88c5\u3057\u3066\u3044\u305f\u3089\n            var host = Activity as IFragmentHost;\n            if (host != null)\n            {\n                // IFragmentHost.Show \u7d4c\u7531\u3067 Fragment \u3092\u8868\u793a\n                if (host.Show(request))\n                {\n                    // \u547c\u3073\u51fa\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u5185\u3067 Fragment \u304c\u8868\u793a\u3055\u308c\u308c\u3070\u3053\u3053\u3067\u7d42\u4e86\n                    return;\n                }\n            }\n\n            // \u5f53\u3066\u306f\u307e\u3089\u306a\u3051\u308c\u3070\u901a\u5e38\u306e MvxActivity \u3092\u8868\u793a\u3059\u308b\u51e6\u7406\n            base.Show(request);\n        }\n    }\n}\n```\n\nFragment \u306f Views \u4ee5\u4e0b\u306b Fragments \u306e\u968e\u5c64\u3092\u4f5c\u3063\u3066\u305d\u306e\u4e2d\u306b\u5165\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3088\u3046\u3067\u3059\u3002Fragments \u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u3063\u3066\u3001\u305d\u306e\u4e2d\u306b\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u57fa\u5e95\u30af\u30e9\u30b9 BaseFragment \u3092\u4f5c\u6210\u3057\u3001\u3053\u306e\u30af\u30e9\u30b9\u3092\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u3068\u3057\u3066 Fragment \u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002(\u5f8c\u307b\u3069\u3001\u5fa9\u5e30\u6a5f\u80fd\u3092\u3064\u3051\u308b\u3068\u304d\u306b\u5fc5\u8981\u306b\u306a\u3063\u3066\u304d\u307e\u3059)\n\n```FragmentBase.cs\nusing Android.Views;\nusing Cirrious.MvvmCross.Droid.FullFragging.Fragments;\n\nnamespace RestoreTest.Droid.Views.Fragments\n{\n    public class FragmentBase : MvxFragment\n    {\n    }\n}\n```\n\nFragment \u306f\u3001Activity \u3068\u540c\u69d8\u306b\u30ec\u30a4\u30a2\u30a6\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u3001\u5bfe\u5fdc\u3059\u308b\u30af\u30e9\u30b9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3059(OnCreateView \u3067 View \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u8a73\u3057\u304f\u306f Fragment \u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u3066\u304f\u3060\u3055\u3044)\u3002\n\n```ThirdView.cs\nusing Android.OS;\nusing Android.Views;\nusing Cirrious.MvvmCross.Binding.Droid.BindingContext;\nusing Cirrious.CrossCore;\n\nnamespace RestoreTest.Droid.Views.Fragments\n{\n    public class ThirdView : FragmentBase \n    {\n        public override View OnCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)\n        {\n            // MvxFragment \u306e\u4ed5\u69d8\u4e0a\u3001\u5fc5\u305a base \u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308b\u3002\n            // \u623b\u308a\u5024\u306f\u6368\u3066\u308b\n            base.OnCreateView(inflater, container, savedInstanceState);\n\n            // \u8868\u793a\u3059\u308b View \u3092\u30ec\u30a4\u30a2\u30a6\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u3092 BindingInflate \u3067\u751f\u6210\u3059\u308b\u3002\n            // BindingInflate \u3067\u306a\u3044\u3068 local:MvxBind \u3092\u66f8\u3044\u3066\u3042\u308b\u7b87\u6240\u3067\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u306e\u3067\u6ce8\u610f\u3002\n            return this.BindingInflate(Resource.Layout.ThirdView, null);\n        }\n    }\n}\n```\n\n\u3042\u3068\u306f\u3001\u3053\u306e Fragment \u3092\u8868\u793a\u3059\u308b Activity \u306b Fragment \u3092\u51e6\u7406\u3059\u308b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```SecondView.cs\nusing Cirrious.MvvmCross.Droid.Views;\nusing Android.App;\nusing Android.OS;\nusing Cirrious.CrossCore;\nusing Cirrious.MvvmCross.ViewModels;\nusing RestoreTest.Core.ViewModels;\nusing RestoreTest.Droid.Views.Fragments;\n\nnamespace RestoreTest.Droid.Views\n{\n    [Activity(Label = \"View for SecondViewModel\")]\n    public class SecondView : MvxActivity, IFragmentHost\n    {\n        ThirdView _thirdViewFragment;\n\n        protected override void OnCreate(Bundle bundle)\n        {\n            SetContentView(Resource.Layout.SecondView);\n        }\n\n        #region IFragmentHost implementation\n\n        public bool Show(MvxViewModelRequest request)\n        {\n            // \u3053\u306e\u753b\u9762\u3067\u8868\u793a\u3067\u304d\u308b\u578b\u306e ViewModel \u306a\u3089\n            if (request.ViewModelType == typeof(ThirdViewModel))\n            {\n                // View \u3092\u4f5c\u3063\u3066\n                _thirdViewFragment = new ThirdView();\n\n                // ViewModel \u3092\u4f5c\u3063\u3066\n                var loaderService = Mvx.Resolve<IMvxViewModelLoader>();\n                _thirdViewFragment.ViewModel = loaderService.LoadViewModel(viewModelRequest, savedState);\n\n                // Fragment \u306e\u8868\u793a\u9818\u57df\u306b\u8ffd\u52a0\u3059\u308b\n                var trans = FragmentManager.BeginTransaction();\n                trans.Add(Resource.Id.fragmentFrame, _thirdViewFragment);\n                trans.Commit();\n\n                return true;\n            }\n            return false;\n        }\n\n        #endregion\n    }\n}\n```\n\n\u3053\u3053\u307e\u3067\u306e\u5185\u5bb9\u306f[\u516c\u5f0f\u306e\u30b5\u30f3\u30d7\u30eb](https://github.com/MvvmCross/MvvmCross-Tutorials/tree/master/Fragments)\u306e\u901a\u308a\u3067\u3059\u3002\n\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u3053\u306e\u65b9\u6cd5\u3067\u4f5c\u3063\u305f\u30a2\u30d7\u30ea\u306f\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u306b\u9001\u3089\u308c\u305f\u5f8c\u3001\u3042\u308b\u7a0b\u5ea6\u30e1\u30e2\u30ea\u8ca0\u8377\u3092\u304b\u3051\u305f\u72b6\u614b\u3067\u5fa9\u5e30\u3057\u3088\u3046\u3068\u3057\u305f\u5834\u5408\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u304b\u3001\u305f\u307e\u305f\u307e\u8868\u793a\u3067\u304d\u305f\u3068\u3057\u3066\u3082\u671f\u5f85\u3059\u308b\u52d5\u4f5c\u3092\u3057\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u306f\u3001\u3042\u308b\u7a0b\u5ea6\u30ea\u30bd\u30fc\u30b9\u304c\u5727\u8feb\u3055\u308c\u308b\u3068\u3001Android \u306e OS \u5074\u306e\u5236\u5fa1\u3067\u30a2\u30d7\u30ea\u304c\u5f37\u5236\u7684\u306b\u505c\u6b62\u3055\u308c\u308b\u305f\u3081\u3067\u3059\u3002\u5f37\u5236\u7684\u306b\u505c\u6b62\u3055\u308c\u305f\u30a2\u30d7\u30ea\u306f\u3001\u5143\u3005\u8868\u793a\u3055\u308c\u3066\u3044\u305f\u753b\u9762\u3067\u5fa9\u5e30\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u304c\u3001\u65b0\u898f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3068\u306a\u308b\u305f\u3081\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u3084\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3059\u3079\u3066\u30af\u30ea\u30a2\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\nActivity \u3084 Fragment \u306b\u306f OnSaveInstanceState \u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3055\u308c\u308b Bundle \u306b\u5404\u7a2e\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3057\u3066\u304a\u3051\u3070 OnCreate \u3084 OnCreateView \u306a\u3069\u306b\u6e21\u3055\u308c\u308b Bundle \u3067\u518d\u53d6\u5f97\u3067\u304d\u3001\u5fa9\u5143\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002MvvmCross \u3067\u3082\u3053\u306e\u6a5f\u80fd\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001Fragment \u306b\u95a2\u3057\u3066\u306f\u51e6\u7406\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u307e\u305f\u3001Show \u30e1\u30bd\u30c3\u30c9\u3067 ViewModel \u3092\u76f4\u63a5\u30bb\u30c3\u30c8\u3057\u307e\u3057\u305f\u304c\u3001\u3053\u308c\u3082\u521d\u671f\u5316\u3055\u308c\u3066 ViewModel \u304c\u6d88\u3048\u3066\u3044\u308b\u3068\u3044\u3046\u72b6\u614b\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002Fragment \u306e\u521d\u671f\u5316\u306b\u95a2\u3059\u308b\u60c5\u5831\u306f Argument \u3068\u3044\u3046\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5165\u308c\u3066\u304a\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u4f7f\u3044\u3001Fragment \u81ea\u8eab\u306b ViewModel \u3092\u4f5c\u3089\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n## Fragment \u306b\u72b6\u614b\u4fdd\u5b58\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\n\n\u672c\u6765\u3067\u3042\u308c\u3070 MvvmCross \u5074\u3092\u4fee\u6b63\u3059\u3079\u304d\u6240\u3067\u3059\u304c\u3001\u304b\u306a\u308a\u8907\u96d1\u304b\u3064\u3001\u5165\u308c\u66ff\u3048\u3082\u624b\u9593\u306a\u306e\u3067\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u306e\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u3092\u7528\u610f\u3059\u308b\u5f62\u3067\u5bfe\u5fdc\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u307e\u305a\u3001FragmentExtension \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3053\u3053\u306b\u306f\u72b6\u614b\u4fdd\u5b58\u3084 ViewModel \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5f15\u304d\u6e21\u3057\u306a\u3069\u306e\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n \n```FragmentExtension.cs\nusing System;\nusing Cirrious.MvvmCross.Droid.FullFragging.Fragments;\nusing Android.OS;\nusing Android.Views;\nusing Cirrious.MvvmCross.ViewModels;\nusing Cirrious.MvvmCross.Views;\nusing Cirrious.CrossCore;\nusing Cirrious.MvvmCross.Droid.Platform;\nusing Cirrious.MvvmCross.Droid.Views;\n\nnamespace RestoreTest.Droid.Views.Fragments\n{\n    /// <summary>\n    /// Fragment \u95a2\u9023\u306e\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\n    /// </summary>\n    public static class FragmentExtensions\n    {\n        /// <summary>\n        /// Arguments \u306b\u767b\u9332\u3059\u308b\u8d77\u52d5\u30d1\u30e9\u30e1\u30fc\u30bf\n        /// </summary>\n        public const string ExtrasKey = \"MvxLaunchData\";\n\n        /// <summary>\n        /// ViewModel \u306b Request \u3092\u767b\u9332\u3059\u308b\n        /// </summary>\n        public static void ProvideViewModelRequest(this MvxFragment fragment, MvxViewModelRequest request)\n        {\n            var bundle = fragment.Arguments ??\n                (fragment.Arguments = new Bundle());\n\n            var converter = Mvx.Resolve<IMvxNavigationSerializer>();\n            var requestText = converter.Serializer.SerializeObject(request);\n            bundle.PutString(ExtrasKey, requestText);\n        }\n\n        /// <summary>\n        /// Fragment \u306e OnCreateView \u3067\u547c\u3073\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\n        /// ViewModel \u3092\u751f\u6210\u30fb\u72b6\u614b\u5fa9\u5143\u3059\u308b\u3002\n        /// </summary>\n        public static void CreateViewCalled(this MvxFragment fragment, LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)\n        {\n            fragment.ViewModel = fragment.LoadViewModel(savedInstanceState);\n        }\n\n        /// <summary>\n        /// Fragment \u306e OnSaveInstanceStateCalled \u3067\u547c\u3073\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\n        /// ViewModel \u306e\u72b6\u614b\u4fdd\u5b58\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\n        /// </summary>\n        public static void SaveInstanceStateCalled(this MvxFragment fragment, Bundle outState)\n        {\n            var mvxBundle = fragment.CreateSaveStateBundle();\n            if (mvxBundle != null)\n            {\n                IMvxSavedStateConverter converter;\n                if (!Mvx.TryResolve<IMvxSavedStateConverter>(out converter))\n                {\n                    Mvx.Warning(\"Saved state converter not available - saving state will be hard\");\n                }\n                else\n                {\n                    converter.Write(outState, mvxBundle);\n                }\n            }\n            var cache = Mvx.Resolve<IMvxSingleViewModelCache>();\n            cache.Cache(fragment.ViewModel, outState);\n        }\n\n        /// <summary>\n        /// ViewModel \u3092\u8aad\u307f\u8fbc\u3080\n        /// </summary>\n        /// <remarks>MvxActivityViewExtensions \u306e\u540c\u540d\u30e1\u30bd\u30c3\u30c9\u306e\u30b3\u30d4\u30da\u306a\u306e\u3067\u4f55\u3068\u304b\u3057\u305f\u3044</remarks>\n        static IMvxViewModel LoadViewModel(this MvxFragment fragment, Bundle savedInstanceState)\n        {\n            var viewModelType = fragment.FindAssociatedViewModelTypeOrNull();\n            if (viewModelType == typeof(MvxNullViewModel))\n                return new MvxNullViewModel();\n\n            if (viewModelType == null\n                || viewModelType == typeof (IMvxViewModel))\n            {\n                Mvx.Trace(\"No ViewModel class specified for {0} in LoadViewModel\",\n                               fragment.GetType().Name);\n            }\n\n            var extraData = fragment.Arguments.GetString(ExtrasKey);\n            if (extraData == null)\n                return null;\n\n            var savedState = GetSavedStateFromBundle(savedInstanceState);\n\n            var converter = Mvx.Resolve<IMvxNavigationSerializer>();\n            var viewModelRequest = converter.Serializer.DeserializeObject<MvxViewModelRequest>(extraData);\n\n            var loaderService = Mvx.Resolve<IMvxViewModelLoader>();\n            var viewModel = loaderService.LoadViewModel(viewModelRequest, savedState);\n            return viewModel;\n        }\n\n        /// <summary>\n        /// SavedInstanceState \u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u308a\u51fa\u3059\n        /// </summary>\n        /// <remarks>MvxActivityViewExtensions \u306e\u540c\u540d\u30e1\u30bd\u30c3\u30c9\u306e\u30b3\u30d4\u30da\u306a\u306e\u3067\u4f55\u3068\u304b\u3057\u305f\u3044</remarks>\n        static IMvxBundle GetSavedStateFromBundle(Bundle bundle)\n        {\n            if (bundle == null)\n                return null;\n\n            IMvxSavedStateConverter converter; \n            if (!Mvx.TryResolve<IMvxSavedStateConverter>(out converter))\n            {\n                Mvx.Trace(\"No saved state converter available - this is OK if seen during start\");\n                return null;\n            }\n            var savedState = converter.Read(bundle);\n            return savedState;\n        }\n    }\n}\n```\n\n\u6b21\u306b\u3001FragmentExtension \u306b\u5b9a\u7fa9\u3057\u305f\u51e6\u7406\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u3001FragmentBase \u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n```FragmentBase.cs\nusing Android.Views;\nusing Cirrious.MvvmCross.Droid.FullFragging.Fragments;\n\nnamespace RestoreTest.Droid.Views.Fragments\n{\n    public class FragmentBase : MvxFragment\n    {\n        public override View OnCreateView(LayoutInflater inflater, ViewGroup container, Android.OS.Bundle savedInstanceState)\n        {\n            this.CreateViewCalled(inflater, container, savedInstanceState);\n            return base.OnCreateView(inflater, container, savedInstanceState);\n        }\n\n        public override void OnSaveInstanceState(Android.OS.Bundle outState)\n        {\n            this.SaveInstanceStateCalled(outState);\n        }\n    }\n}\n```\n\n\u6700\u5f8c\u306b\u3001Fragment \u3092\u751f\u6210\u3059\u308b\u90e8\u5206\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002ViewModel \u3092\u76f4\u63a5\u4f5c\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u3067\u5b9a\u7fa9\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u5f15\u304d\u6e21\u3057\u306e\u51e6\u7406\u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```SecondView.cs\npublic bool Show(MvxViewModelRequest request)\n{\n    if (request.ViewModelType == typeof(ThirdViewModel))\n    {\n        _thirdViewFragment = new ThirdView();\n        _thirdViewFragment.ProvideViewModelRequest(request);\n\n        var trans = FragmentManager.BeginTransaction();\n        trans.Add(Resource.Id.fragmentFrame, _thirdViewFragment);\n        trans.Commit();\n\n        return true;\n    }\n    return false;\n}\n```\n\n## ViewModel \u5074\u306e\u72b6\u614b\u4fdd\u5b58\n\n\u306a\u304a\u3001\u3053\u3053\u307e\u3067\u306e\u5b9f\u88c5\u3067\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306f\u3064\u306a\u304c\u308a\u307e\u3057\u305f\u304c\u3001ViewModel \u3067\u5b9f\u969b\u306b\u5024\u3092\u8aad\u307f\u66f8\u304d\u3057\u306a\u3044\u3068\u72b6\u614b\u5fa9\u5e30\u3055\u305b\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u72b6\u614b\u4fdd\u5b58\u304c\u5fc5\u8981\u306a\u3068\u3053\u308d\u306b\u306a\u308b\u3068\u3001ViewModel \u306e SaveStateToBundle \u304c\u3001\u72b6\u614b\u5fa9\u5143\u304c\u5fc5\u8981\u306b\u306a\u308b\u3068 LoadStateFromBundle \u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u3053\u3053\u3067\u5024\u3092\u8aad\u307f\u66f8\u304d\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```ThirdViewModel.cs\nusing Cirrious.MvvmCross.ViewModels;\n\nnamespace RestoreTest.Core.ViewModels\n{\n    public class ThirdViewModel : MvxViewModel\n    {\n        const string HelloKey = \"Hello\";\n\n        string _hello = \"Hello MvvmCross\";\n        public string Hello\n        { \n            get { return _hello; }\n            set { _hello = value; RaisePropertyChanged(() => Hello); }\n        }\n\n        /// <summary>\n        /// \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n        /// 1\u756a\u76ee\u306b\u547c\u3070\u308c\u308b\n        /// </summary>\n        public ThirdViewModel()\n        {\n        }\n\n        /// <summary>\n        /// ViewModel \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308b\n        /// 2\u756a\u76ee\u306b\u547c\u3070\u308c\u308b\n        /// </summary>\n        /// <param name=\"parameters\">Parameters.</param>\n        protected override void InitFromBundle(IMvxBundle parameters)\n        {\n            base.InitFromBundle(parameters);\n        }\n\n        /// <summary>\n        /// \u72b6\u614b\u4fdd\u5b58\u3055\u308c\u305f\u5024\u3092\u8aad\u307f\u8fbc\u3080\n        /// \u4fdd\u5b58\u3055\u308c\u305f\u30c7\u30fc\u30bf\u304c\u3042\u308c\u3070 InitFromBundle \u306e\u5f8c\u306b\u547c\u3070\u308c\u308b\n        /// </summary>\n        /// <param name=\"state\">State.</param>\n        protected override void ReloadFromBundle(IMvxBundle state)\n        {\n            base.ReloadFromBundle(state);\n\n            if (state != null)\n            {\n                if (state.Data.ContainsKey(HelloKey))\n                {\n                    Hello = state.Data[HelloKey];\n                }\n            }\n        }\n\n        /// <summary>\n        /// \u4e00\u756a\u6700\u521d\u306b\u8868\u793a\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u547c\u3070\u308c\u308b\n        /// </summary>\n        public override void Start()\n        {\n            base.Start();\n        }\n\n        /// <summary>\n        /// \u72b6\u614b\u4fdd\u5b58\u304c\u5fc5\u8981\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u547c\u3070\u308c\u308b\n        /// </summary>\n        /// <param name=\"bundle\">Bundle.</param>\n        protected override void SaveStateToBundle(IMvxBundle bundle)\n        {\n            base.SaveStateToBundle(bundle);\n            bundle.Data.Add(HelloKey, Hello);\n        }\n    }\n}\n```\n\n## \u72b6\u614b\u5fa9\u5e30\u306e\u30c6\u30b9\u30c8\u65b9\u6cd5\n\n\u306a\u304a\u3001\u72b6\u614b\u5fa9\u5e30\u306f\u7aef\u672b\u306e\u8a2d\u5b9a\u300c\u958b\u767a\u8005\u5411\u3051\u30aa\u30d7\u30b7\u30e7\u30f3\u300d\u3092\u5909\u3048\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n![device-2014-07-20-012236.png](https://qiita-image-store.s3.amazonaws.com/0/3058/73ad3ac6-d139-e3ba-b71d-3680e0ad8edc.png \"device-2014-07-20-012236.png\")\n\n* \u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u3092\u4fdd\u6301\u3057\u306a\u3044\n* \u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30d7\u30ed\u30bb\u30b9\u306e\u4e0a\u9650: 1\n\n\u3053\u306e\u72b6\u614b\u3067\u5225\u306e\u30a2\u30d7\u30ea\u306b\u5207\u308a\u66ff\u3048\u3066\u623b\u3063\u3066\u304f\u308c\u3070\u3001\u72b6\u614b\u5fa9\u5143\u304c\u8d77\u3053\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n## \u6700\u5f8c\u306b\n\n\u3053\u306e\u8a18\u4e8b\u3067\u53d6\u308a\u4e0a\u3052\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306e\u5168\u4f53\u306f\u4ee5\u4e0b\u306e\u5834\u6240\u306b\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u4f75\u305b\u3066\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n* [MvvmCrossPlayground/RestoreTest at master \u00b7 iseebi/MvvmCrossPlayground](https://github.com/iseebi/MvvmCrossPlayground/tree/master/RestoreTest)\n\n\u306a\u304a\u3001\u72b6\u614b\u304c\u5fa9\u5143\u3055\u308c\u306a\u3044\u70b9\u306b\u3064\u3044\u3066\u306f\u3001\u3059\u3067\u306b MvvmCross \u306e Issue \u306b\u3042\u304c\u3063\u3066\u3044\u307e\u3059\u3002\n\n* [ViewModel associated MvxFragment never calls ReloadState/SaveState \u00b7 Issue #745 \u00b7 MvvmCross/MvvmCross](https://github.com/MvvmCross/MvvmCross/issues/745)\n\n\n", "tags": ["MvvmCross", "Xamarin"]}