{"context": " More than 1 year has passed since last update.C++11\u3067thread\u3084mutex\u306a\u3069\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u3068\u77e5\u3063\u305f\u306e\u3067\n(\u8abf\u3079\u308b\u306e\u3082\u3081\u3093\u3069\u304f\u3055\u3044\u3057)\u30b7\u30b9\u30c6\u30e0\u4f9d\u5b58\u306eAPI\u3092\u4f7f\u3044\u305f\u304f\u306a\u3044\u30de\u30f3\n\u3068\u3057\u3066\u306f\u3072\u3068\u307e\u305a\u4f7f\u3063\u3066\u307f\u305f\u3082\u306e\u306e\u3001\u3061\u3083\u3093\u3068\u7406\u89e3\u3057\u3066\u306a\u304b\u3063\u305f\u305f\u3081\u3068\u3042\u308b\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u3072\u3063\u304b\u304b\u3063\u305f\u8a71\u3002\n\u4ee5\u4e0b\u3001\u3068\u308a\u3042\u3048\u305astd::thread\u3092\u4f7f\u3063\u3066\u7d44\u3093\u3067\u307f\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\n\nsample\n#include <thread>\nusing namespace std;\n\nclass ThreadClass\n{\npublic:\n    ThreadClass();\n    ~ThreadClass();\n\n    void ThreadStart();\n    void MainThread( int param );\n};\n\nThreadClass::ThreadClass()\n{\n    //constractor\n}\n\nThreadClass::~ThreadClass()\n{\n    //destractor\n}\n\nvoid ThreadClass::ThreadClass()\n{\n    // thread create\n    std::thread th( &ThreadClass::MainThread, 5 ); // \u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u9069\u5f53\n\n    // thread start\n    th.detach();\n}\n\nvoid ThreadClass::MainThread( int param )\n{\n    bool bLoop = true; // thread control flag\n    while( bLoop )\n    {\n       param--;\n       if( param == 0 )\n       {\n          bLoop = false;\n       }\n    }\n}\n\nint main()\n{\n    ThreadClass* pcThread = new ThreadClass();\n    pcThread->ThreadStart();\n\n    return 0;\n}\n\n\n\u3053\u308c\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u3068\n\nerror C2064: 1 \u5f15\u6570\u3092\u53d6\u308a\u8fbc\u3080\u95a2\u6570\u306b\u306f\u8a55\u4fa1\u3055\u308c\u307e\u305b\u3093\u3002\n\u3068\u3044\u3046\u30a8\u30e9\u30fc\u304c\u30fb\u30fb\u30fb\n\n\u4f55\u304c\u304a\u304b\u3057\u3044\u306e\u304b\u9014\u65b9\u306b\u304f\u308c\u306a\u304c\u3089\u8272\u3005\u30b0\u30b0\u3063\u3066\u308b\u3068\n\u3069\u3046\u3084\u3089\u30b9\u30ec\u30c3\u30c9\u306b\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u7b2c2\u5f15\u6570\u306bthis\u3092\u6e21\u3059\n\u3053\u3068\u304c\u5fc5\u8981\u3089\u3057\u3044\u3002\n\u306a\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u3066\u307f\u308b\u3002\nstd::thread th( &ThreadClass::MainThread, 5 );\n\u3053\u308c\u3092\nstd::thread th( &ThreadClass::MainThread, this, 5 );\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3082\u901a\u308a\u3061\u3083\u3093\u3068\u52d5\u4f5c\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u3061\u3083\u3093\u3068\u7406\u89e3\u3057\u306a\u3044\u307e\u307e\u9069\u5f53\u306b\u3084\u308b\u304b\u3089\u3053\u3046\u306a\u308b\u3044\u3044\u6559\u8a13\nC++11\u3067thread\u3084mutex\u306a\u3069\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u3068\u77e5\u3063\u305f\u306e\u3067\n~~(\u8abf\u3079\u308b\u306e\u3082\u3081\u3093\u3069\u304f\u3055\u3044\u3057)~~\u30b7\u30b9\u30c6\u30e0\u4f9d\u5b58\u306eAPI\u3092\u4f7f\u3044\u305f\u304f\u306a\u3044\u30de\u30f3\n\u3068\u3057\u3066\u306f\u3072\u3068\u307e\u305a\u4f7f\u3063\u3066\u307f\u305f\u3082\u306e\u306e\u3001\u3061\u3083\u3093\u3068\u7406\u89e3\u3057\u3066\u306a\u304b\u3063\u305f\u305f\u3081\u3068\u3042\u308b\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u3072\u3063\u304b\u304b\u3063\u305f\u8a71\u3002\n\n\u4ee5\u4e0b\u3001\u3068\u308a\u3042\u3048\u305astd::thread\u3092\u4f7f\u3063\u3066\u7d44\u3093\u3067\u307f\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\n\n```C++:sample\n#include <thread>\nusing namespace std;\n\nclass ThreadClass\n{\npublic:\n    ThreadClass();\n    ~ThreadClass();\n\n    void ThreadStart();\n    void MainThread( int param );\n};\n\nThreadClass::ThreadClass()\n{\n    //constractor\n}\n\nThreadClass::~ThreadClass()\n{\n    //destractor\n}\n\nvoid ThreadClass::ThreadClass()\n{\n    // thread create\n    std::thread th( &ThreadClass::MainThread, 5 ); // \u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u9069\u5f53\n\n    // thread start\n    th.detach();\n}\n\nvoid ThreadClass::MainThread( int param )\n{\n    bool bLoop = true; // thread control flag\n    while( bLoop )\n    {\n       param--;\n       if( param == 0 )\n       {\n          bLoop = false;\n       }\n    }\n}\n\nint main()\n{\n    ThreadClass* pcThread = new ThreadClass();\n    pcThread->ThreadStart();\n\n    return 0;\n}\n```\n \n\n\u3053\u308c\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u3068\n>error C2064: 1 \u5f15\u6570\u3092\u53d6\u308a\u8fbc\u3080\u95a2\u6570\u306b\u306f\u8a55\u4fa1\u3055\u308c\u307e\u305b\u3093\u3002\n\u3068\u3044\u3046\u30a8\u30e9\u30fc\u304c\u30fb\u30fb\u30fb\n\n\u4f55\u304c\u304a\u304b\u3057\u3044\u306e\u304b\u9014\u65b9\u306b\u304f\u308c\u306a\u304c\u3089\u8272\u3005\u30b0\u30b0\u3063\u3066\u308b\u3068\n\u3069\u3046\u3084\u3089**\u30b9\u30ec\u30c3\u30c9\u306b\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u7b2c2\u5f15\u6570\u306bthis\u3092\u6e21\u3059**\n\u3053\u3068\u304c\u5fc5\u8981\u3089\u3057\u3044\u3002\n\n\n\n\u306a\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u3066\u307f\u308b\u3002\n\n``std::thread th( &ThreadClass::MainThread, 5 );``\n\u3053\u308c\u3092\n``std::thread th( &ThreadClass::MainThread, this, 5 );``\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3082\u901a\u308a\u3061\u3083\u3093\u3068\u52d5\u4f5c\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n\u3061\u3083\u3093\u3068\u7406\u89e3\u3057\u306a\u3044\u307e\u307e\u9069\u5f53\u306b\u3084\u308b\u304b\u3089\u3053\u3046\u306a\u308b\u3044\u3044\u6559\u8a13\n\n", "tags": ["C++11"]}