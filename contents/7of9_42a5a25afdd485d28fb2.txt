{"context": "\u53c2\u8003 http://www1.cts.ne.jp/~clab/hsample/Time/Time5.html\n\n(\u8ffd\u8a18 2016/03/28)\nworkdt.tm_mon = mm;\u306f\u9593\u9055\u3044\u306e\u3088\u3046\u3067\u3059\u3002\nworkdt.tm_mon = mm - 1; // \u6708\uff08 1\u6708\uff1d0 \uff09\n\n\ncode v0.1\nhttp://ideone.com/urqGYm\n#include <stdio.h>\n#include <time.h> // \u8a66\u9a13\u7528\u306e\u79d2\u3092\u5f97\u308b\u305f\u3081\u306b\u4f7f\u7528. \u958b\u767a\u74b0\u5883\u306b\u306f\u5b58\u5728\u3057\u306a\u3044\n\ntime_t getElapsedSecond(int yyyy, int mm, int dd, int hh, int nn){\n    struct tm workdt;\n    workdt.tm_isdst = -1; // summer time flag\n    workdt.tm_year = yyyy - 1900;\n    workdt.tm_mon = mm;\n    workdt.tm_mday = dd;\n    workdt.tm_hour = hh;\n    workdt.tm_min = nn;\n    workdt.tm_sec = 0;\n    return mktime(&workdt);\n}\n\nvoid getDateTimeString(time_t srcdt, char *dstPtr)\n{\n    if (dstPtr == NULL) {\n        return; // error\n    }\n    struct tm *workdt;\n    workdt = localtime(&srcdt); \n        workdt->tm_year = workdt->tm_year + 1900;\n    sprintf(dstPtr, \"%04d/%02d/%02d %02d:%02d\", workdt->tm_year, workdt->tm_mon, workdt->tm_mday, \n        workdt->tm_hour, workdt->tm_min);\n}\n\nint main(void) {\n    time_t sec;\n    char szBuf[100];\n\n    sec = getElapsedSecond(2016, 3, 27, 18, 36);\n    printf(\"%u\\n\", sec);\n\n    getDateTimeString(sec, szBuf);\n    printf(\"%s\\n\", szBuf);\n\n    return 0;\n}\n\n\n\u7d50\u679c\nSuccess time: 0 memory: 2288 signal:0\n1461782160\n2016/03/27 18:36\n\n\n\ncode v0.2 > strftime()\u4f7f\u7528\nstrftime()\u3092\u4f7f\u3063\u3066\u307f\u305f\u3002\nhttp://ideone.com/OvVLEs\n\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3002\nvoid getDateTimeStringUsingStrftime(time_t srcdt, char *dstPtr)\n{\n    if (dstPtr == NULL) {\n        return; // error\n    }\n    struct tm *workdt;\n\n    workdt = localtime(&srcdt);\n    strftime(dstPtr, 100, \"%Y/%m/%d %H:%M\", workdt);\n}\n\n\u30b3\u30fc\u30c9\u5168\u90e8\u306f\u4ee5\u4e0b\u3002\n#include <stdio.h>\n#include <time.h> // \u8a66\u9a13\u7528\u306e\u79d2\u3092\u5f97\u308b\u305f\u3081\u306b\u4f7f\u7528. \u958b\u767a\u74b0\u5883\u306b\u306f\u5b58\u5728\u3057\u306a\u3044\n\ntime_t getElapsedSecond(int yyyy, int mm, int dd, int hh, int nn){\n    struct tm workdt;\n    workdt.tm_isdst = -1; // summer time flag\n    workdt.tm_year = yyyy - 1900;\n    workdt.tm_mon = mm;\n    workdt.tm_mday = dd;\n    workdt.tm_hour = hh;\n    workdt.tm_min = nn;\n    workdt.tm_sec = 0;\n    return mktime(&workdt);\n}\n\nvoid getDateTimeString(time_t srcdt, char *dstPtr)\n{\n    if (dstPtr == NULL) {\n        return; // error\n    }\n    struct tm *workdt;\n    workdt = localtime(&srcdt); \n        workdt->tm_year = workdt->tm_year + 1900;\n    sprintf(dstPtr, \"%04d/%02d/%02d %02d:%02d\", workdt->tm_year, workdt->tm_mon, workdt->tm_mday, \n        workdt->tm_hour, workdt->tm_min);\n}\n\nvoid getDateTimeStringUsingStrftime(time_t srcdt, char *dstPtr)\n{\n    if (dstPtr == NULL) {\n        return; // error\n    }\n    struct tm *workdt;\n\n    workdt = localtime(&srcdt);\n    strftime(dstPtr, 100, \"%Y/%m/%d %H:%M\", workdt);\n}\n\nint main(void) {\n    time_t sec;\n    char szBuf[100];\n    struct tm *timeptr;\n\n    sec = getElapsedSecond(2016, 3, 27, 18, 36);\n    printf(\"%u\\n\", sec);\n\n    getDateTimeString(sec, szBuf);\n    printf(\"%s\\n\", szBuf);\n\n    getDateTimeStringUsingStrftime(sec, szBuf);\n    printf(\"%s\\n\", szBuf);\n\n    return 0;\n}\n\n\n\u7d50\u679c\nSuccess time: 0 memory: 2292 signal:0\n1461782160\n2016/03/27 18:36\n2016/04/27 18:36\n\n\n\u306a\u305c\u304b\u6708\u304c\uff11\u3064\u305a\u308c\u3066\u3044\u308b\u3002\nhttp://www.c-tipsref.com/reference/time/strftime.html\n\u306b\u3088\u308b\u3068\n\n%m    \u6708(01 \uff5e 12)\n\nstruct tm\u306b\u5024\u3092\u5165\u308c\u308b\u90e8\u5206\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6c17\u3065\u3044\u305f\u3002\nhttp://www1.cts.ne.jp/~clab/hsample/Time/Time5.html\n\nint tm_mon;        // \u6708\uff08 1\u6708\uff1d0 \uff09\n\n\u53c2\u8003 http://www1.cts.ne.jp/~clab/hsample/Time/Time5.html\n\n<font color=red>\n(\u8ffd\u8a18 2016/03/28)\nworkdt.tm_mon = mm;\u306f\u9593\u9055\u3044\u306e\u3088\u3046\u3067\u3059\u3002\nworkdt.tm_mon = mm - 1; // \u6708\uff08 1\u6708\uff1d0 \uff09\n</font>\n\n## code v0.1\n\nhttp://ideone.com/urqGYm\n\n```\n#include <stdio.h>\n#include <time.h> // \u8a66\u9a13\u7528\u306e\u79d2\u3092\u5f97\u308b\u305f\u3081\u306b\u4f7f\u7528. \u958b\u767a\u74b0\u5883\u306b\u306f\u5b58\u5728\u3057\u306a\u3044\n\ntime_t getElapsedSecond(int yyyy, int mm, int dd, int hh, int nn){\n\tstruct tm workdt;\n\tworkdt.tm_isdst = -1; // summer time flag\n\tworkdt.tm_year = yyyy - 1900;\n\tworkdt.tm_mon = mm;\n\tworkdt.tm_mday = dd;\n\tworkdt.tm_hour = hh;\n\tworkdt.tm_min = nn;\n\tworkdt.tm_sec = 0;\n\treturn mktime(&workdt);\n}\n\nvoid getDateTimeString(time_t srcdt, char *dstPtr)\n{\n\tif (dstPtr == NULL) {\n\t\treturn; // error\n\t}\n\tstruct tm *workdt;\n\tworkdt = localtime(&srcdt);\t\n\t\tworkdt->tm_year = workdt->tm_year + 1900;\n\tsprintf(dstPtr, \"%04d/%02d/%02d %02d:%02d\", workdt->tm_year, workdt->tm_mon, workdt->tm_mday, \n\t\tworkdt->tm_hour, workdt->tm_min);\n}\n\nint main(void) {\n\ttime_t sec;\n\tchar szBuf[100];\n\t\n\tsec = getElapsedSecond(2016, 3, 27, 18, 36);\n\tprintf(\"%u\\n\", sec);\n\t\n\tgetDateTimeString(sec, szBuf);\n\tprintf(\"%s\\n\", szBuf);\n\n\treturn 0;\n}\n```\n\n```txt:\u7d50\u679c\nSuccess\ttime: 0 memory: 2288 signal:0\n1461782160\n2016/03/27 18:36\n```\n\n## code v0.2 > strftime()\u4f7f\u7528\n\nstrftime()\u3092\u4f7f\u3063\u3066\u307f\u305f\u3002\n\nhttp://ideone.com/OvVLEs\n\n\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3002\n\n```\nvoid getDateTimeStringUsingStrftime(time_t srcdt, char *dstPtr)\n{\n\tif (dstPtr == NULL) {\n\t\treturn; // error\n\t}\n\tstruct tm *workdt;\n\t\n\tworkdt = localtime(&srcdt);\n\tstrftime(dstPtr, 100, \"%Y/%m/%d %H:%M\", workdt);\n}\n```\n\n\u30b3\u30fc\u30c9\u5168\u90e8\u306f\u4ee5\u4e0b\u3002\n\n```\n#include <stdio.h>\n#include <time.h> // \u8a66\u9a13\u7528\u306e\u79d2\u3092\u5f97\u308b\u305f\u3081\u306b\u4f7f\u7528. \u958b\u767a\u74b0\u5883\u306b\u306f\u5b58\u5728\u3057\u306a\u3044\n\ntime_t getElapsedSecond(int yyyy, int mm, int dd, int hh, int nn){\n\tstruct tm workdt;\n\tworkdt.tm_isdst = -1; // summer time flag\n\tworkdt.tm_year = yyyy - 1900;\n\tworkdt.tm_mon = mm;\n\tworkdt.tm_mday = dd;\n\tworkdt.tm_hour = hh;\n\tworkdt.tm_min = nn;\n\tworkdt.tm_sec = 0;\n\treturn mktime(&workdt);\n}\n\nvoid getDateTimeString(time_t srcdt, char *dstPtr)\n{\n\tif (dstPtr == NULL) {\n\t\treturn; // error\n\t}\n\tstruct tm *workdt;\n\tworkdt = localtime(&srcdt);\t\n\t\tworkdt->tm_year = workdt->tm_year + 1900;\n\tsprintf(dstPtr, \"%04d/%02d/%02d %02d:%02d\", workdt->tm_year, workdt->tm_mon, workdt->tm_mday, \n\t\tworkdt->tm_hour, workdt->tm_min);\n}\n\nvoid getDateTimeStringUsingStrftime(time_t srcdt, char *dstPtr)\n{\n\tif (dstPtr == NULL) {\n\t\treturn; // error\n\t}\n\tstruct tm *workdt;\n\t\n\tworkdt = localtime(&srcdt);\n\tstrftime(dstPtr, 100, \"%Y/%m/%d %H:%M\", workdt);\n}\n\nint main(void) {\n\ttime_t sec;\n\tchar szBuf[100];\n\tstruct tm *timeptr;\n\t\n\tsec = getElapsedSecond(2016, 3, 27, 18, 36);\n\tprintf(\"%u\\n\", sec);\n\t\n\tgetDateTimeString(sec, szBuf);\n\tprintf(\"%s\\n\", szBuf);\n\t\n\tgetDateTimeStringUsingStrftime(sec, szBuf);\n\tprintf(\"%s\\n\", szBuf);\n\n\treturn 0;\n}\n```\n\n```txt:\u7d50\u679c\nSuccess\ttime: 0 memory: 2292 signal:0\n1461782160\n2016/03/27 18:36\n2016/04/27 18:36\n```\n\n\u306a\u305c\u304b\u6708\u304c\uff11\u3064\u305a\u308c\u3066\u3044\u308b\u3002\nhttp://www.c-tipsref.com/reference/time/strftime.html\n\u306b\u3088\u308b\u3068\n\n> %m\t\u6708(01 \uff5e 12)\n\n struct tm\u306b\u5024\u3092\u5165\u308c\u308b\u90e8\u5206\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6c17\u3065\u3044\u305f\u3002\nhttp://www1.cts.ne.jp/~clab/hsample/Time/Time5.html\n> int tm_mon;        // \u6708\uff08 1\u6708\uff1d0 \uff09\n\n\n", "tags": ["C", "time.h", "datetime"]}