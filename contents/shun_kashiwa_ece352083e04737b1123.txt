{"context": "\n\nSafari\u3067Angular\u306eDatePipe\u4f7f\u3048\u306a\u3044\u554f\u984c\nAngular\u306b\u304a\u3044\u3066\u3001ISO8601\u306e\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\u5834\u5408\u3092\u8003\u3048\u307e\u3059\u3002\n@Component({\n  template:`<p>{{post.created_at | Date:'short'}}`\n})\nexport class DemoComponent{\n  public post = {\n    title: '\u30bf\u30a4\u30c8\u30eb',\n    created_at: '2017-01-03 23:15:27'\n  }\n}\n\nhttps://angular.io/docs/ts/latest/api/common/index/DatePipe-pipe.html\nDatePipe\u306f\u6587\u5b57\u5217\u3082\u30d1\u30fc\u30b9\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u52d5\u304f\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\u5b9f\u969b\u3001Chrome\u3084Firefox\u3067\u306f\u306a\u3093\u306e\u554f\u984c\u3082\u306a\u304f\u52d5\u304d\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001Safari\u3067\u5b9f\u884c\u3059\u308b\u3068\n[Error] EXCEPTION: Error in ./TestComponent class TestComponent - inline template:30:38 caused by: Invalid argument '2017-01-25 21:00:10' for pipe 'DatePipe'\n    handleError (main.bundle.js:61490)\n    next (main.bundle.js:43128:94)\n    (anonymous function) (main.bundle.js:45175)\n    __tryOrUnsub (main.bundle.js:4737)\n    next (main.bundle.js:4686)\n    _next (main.bundle.js:4639)\n    next (main.bundle.js:4603)\n    next (main.bundle.js:10467)\n    emit (main.bundle.js:45161)\n    triggerError (main.bundle.js:32869)\n    onHandleError (main.bundle.js:32830)\n    runTask (main.bundle.js:128472)\n    drainMicroTaskQueue (main.bundle.js:128723)\n    invoke (main.bundle.js:128654)\n[Error] ORIGINAL EXCEPTION: Invalid argument '2017-01-25 21:00:10' for pipe 'DatePipe'\n    handleError (main.bundle.js:61492)\n    next (main.bundle.js:43128:94)\n    (anonymous function) (main.bundle.js:45175)\n    __tryOrUnsub (main.bundle.js:4737)\n    next (main.bundle.js:4686)\n    _next (main.bundle.js:4639)\n    next (main.bundle.js:4603)\n    next (main.bundle.js:10467)\n    emit (main.bundle.js:45161)\n    triggerError (main.bundle.js:32869)\n    onHandleError (main.bundle.js:32830)\n    runTask (main.bundle.js:128472)\n    drainMicroTaskQueue (main.bundle.js:128723)\n    invoke (main.bundle.js:128654)\n\n\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\nhttps://github.com/angular/angular/blob/4.0.0-beta.2/modules/%40angular/common/src/pipes/date_pipe.ts#L14-L138\nDatePipe\u306f\u6e21\u3055\u308c\u305f\u5f62\u5f0f\u306b\u5fdc\u3058\u3066Date\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u306e\u3067\u3059\u304c\u3001Safari\u3060\u3068\u30d1\u30fc\u30b9\u306b\u5931\u6557\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001exception\u304c\u6295\u3052\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\ndateParse\u30d1\u30a4\u30d7\u3092\u4f5c\u3063\u3066\u89e3\u6c7a\u3059\u308b\nmacOS\u306eSafari\u3060\u3051\u306a\u3089\u30b7\u30ab\u30c8\u3057\u3066\u3082\u826f\u3044\uff08\uff1f\uff09\u306e\u3067\u3059\u304c\u3001iOS\u3067\u3082\u540c\u3058\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u305f\u3081\u3001\u653e\u7f6e\u3059\u308b\u3053\u3068\u306f\u306a\u304b\u306a\u304b\u96e3\u3057\u3044\u3067\u3059\u3002\u305d\u3053\u3067\u3001Date\u306b\u6e21\u3059\u524d\u306bdateParse\u3068\u3044\u3046\u72ec\u81ea\u306e\u30d1\u30a4\u30d7\u3092\u565b\u307e\u3059\u3053\u3068\u3067\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n\u3053\u3093\u306a\u30d1\u30a4\u30d7\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nimport { Pipe, PipeTransform } from '@angular/core';\n\nexport function parseIsoDatetime(dtstr: string): Date {\n  const dt = dtstr.split(/[: T-]/).map(parseFloat);\n  return new Date(dt[0], dt[1] - 1, dt[2], dt[3] || 0, dt[4] || 0, dt[5] || 0, 0);\n}\n\n@Pipe({\n  name: 'dateParse'\n})\nexport class DateParsePipe implements PipeTransform {\n  transform(value: any | Date): Date {\n    if (value instanceof Date) {\n      // Date\u306f\u305d\u306e\u307e\u307e\u8fd4\u3059\n      return value;\n    }\n    if (typeof value === 'number') {\n      return new Date(value);\n    }\n    if (typeof value === 'string') {\n      const parsed = Date.parse(value);\n      if (Number.isNaN(parsed)) {\n        const challenge = parseIsoDatetime(value);\n        if (Number.isNaN(challenge.getTime())) {\n          return null;\n        } else {\n          return challenge;\n        }\n      }\n      return new Date(value);\n    }\n    return null;\n  }\n}\n\nhttp://stackoverflow.com/questions/4829569/help-parsing-iso-8601-date-in-javascript\n\u5192\u982d\u306eparseIsoDatetime\u3067\u6587\u5b57\u5217\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3044\u307e\u3059\u3002\u81ea\u5206\u306e\u74b0\u5883\u3067\u306f\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u6271\u3046\u3053\u3068\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u4e00\u756a\u30b7\u30f3\u30d7\u30eb\u306a\u3053\u306e\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u308c\u304c\u5fc5\u8981\u306a\u5834\u5408\u3067\u3082\u3053\u306e\u90e8\u5206\u3092\u7f6e\u304d\u63db\u3048\u308c\u3070\u52d5\u304f\u306f\u305a\u3067\u3059\u3002Moment.js\u3092\u5165\u308c\u3066\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u5f8c\u306f\u3001ngModules\u304b\u3089\u8aad\u307f\u8fbc\u307f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\n<p>{{post.created_at | dateParse | Date:'short'}}</html>\n\n\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u3066\u3042\u3052\u308c\u3070\u3001Safari\u3067\u3082\u4ed6\u306e\u30d6\u30e9\u30a6\u30b6\u3092\u540c\u3058\u3088\u3046\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3055\u3044\u3054\u306b\n\u4eca\u56de\u306fISO8601\u4ee5\u5916\u306e\u6587\u5b57\u5217\u304c\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u307b\u3068\u3093\u3069\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u72b6\u6cc1\u306b\u3088\u3063\u3066\u306f\u3001dateParse\u3067\u30a8\u30e9\u30fc\u3092\u767a\u751f\u3055\u305b\u308b\u306a\u3069\u3082\u5fc5\u8981\u304b\u306a\u3068\u8003\u3048\u307e\u3059\u3002\n\u30d6\u30e9\u30a6\u30b6\u306b\u3088\u308b\u5dee\u7570\u3001\u6700\u60aa\u3067\u3059\u306d...\n## Safari\u3067Angular\u306eDatePipe\u4f7f\u3048\u306a\u3044\u554f\u984c\n\nAngular\u306b\u304a\u3044\u3066\u3001ISO8601\u306e\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\u5834\u5408\u3092\u8003\u3048\u307e\u3059\u3002\n\n```javascript\n@Component({\n  template:`<p>{{post.created_at | Date:'short'}}`\n})\nexport class DemoComponent{\n  public post = {\n    title: '\u30bf\u30a4\u30c8\u30eb',\n    created_at: '2017-01-03 23:15:27'\n  }\n}\n```\n\nhttps://angular.io/docs/ts/latest/api/common/index/DatePipe-pipe.html\n\nDatePipe\u306f\u6587\u5b57\u5217\u3082\u30d1\u30fc\u30b9\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u52d5\u304f\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\u5b9f\u969b\u3001Chrome\u3084Firefox\u3067\u306f\u306a\u3093\u306e\u554f\u984c\u3082\u306a\u304f\u52d5\u304d\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3001Safari\u3067\u5b9f\u884c\u3059\u308b\u3068\n\n```\n[Error] EXCEPTION: Error in ./TestComponent class TestComponent - inline template:30:38 caused by: Invalid argument '2017-01-25 21:00:10' for pipe 'DatePipe'\n\thandleError (main.bundle.js:61490)\n\tnext (main.bundle.js:43128:94)\n\t(anonymous function) (main.bundle.js:45175)\n\t__tryOrUnsub (main.bundle.js:4737)\n\tnext (main.bundle.js:4686)\n\t_next (main.bundle.js:4639)\n\tnext (main.bundle.js:4603)\n\tnext (main.bundle.js:10467)\n\temit (main.bundle.js:45161)\n\ttriggerError (main.bundle.js:32869)\n\tonHandleError (main.bundle.js:32830)\n\trunTask (main.bundle.js:128472)\n\tdrainMicroTaskQueue (main.bundle.js:128723)\n\tinvoke (main.bundle.js:128654)\n[Error] ORIGINAL EXCEPTION: Invalid argument '2017-01-25 21:00:10' for pipe 'DatePipe'\n\thandleError (main.bundle.js:61492)\n\tnext (main.bundle.js:43128:94)\n\t(anonymous function) (main.bundle.js:45175)\n\t__tryOrUnsub (main.bundle.js:4737)\n\tnext (main.bundle.js:4686)\n\t_next (main.bundle.js:4639)\n\tnext (main.bundle.js:4603)\n\tnext (main.bundle.js:10467)\n\temit (main.bundle.js:45161)\n\ttriggerError (main.bundle.js:32869)\n\tonHandleError (main.bundle.js:32830)\n\trunTask (main.bundle.js:128472)\n\tdrainMicroTaskQueue (main.bundle.js:128723)\n\tinvoke (main.bundle.js:128654)\n```\n\n\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n<img width=\"1208\" alt=\"Screen_Shot_2017-01-29_at_11_37_46.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/15238/a065533f-82b1-4826-fe9c-75aca94b3b57.png\">\n\n\nhttps://github.com/angular/angular/blob/4.0.0-beta.2/modules/%40angular/common/src/pipes/date_pipe.ts#L14-L138\n\nDatePipe\u306f\u6e21\u3055\u308c\u305f\u5f62\u5f0f\u306b\u5fdc\u3058\u3066Date\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u306e\u3067\u3059\u304c\u3001Safari\u3060\u3068\u30d1\u30fc\u30b9\u306b\u5931\u6557\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001exception\u304c\u6295\u3052\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n## dateParse\u30d1\u30a4\u30d7\u3092\u4f5c\u3063\u3066\u89e3\u6c7a\u3059\u308b\n\nmacOS\u306eSafari\u3060\u3051\u306a\u3089\u30b7\u30ab\u30c8\u3057\u3066\u3082\u826f\u3044\uff08\uff1f\uff09\u306e\u3067\u3059\u304c\u3001iOS\u3067\u3082\u540c\u3058\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u305f\u3081\u3001\u653e\u7f6e\u3059\u308b\u3053\u3068\u306f\u306a\u304b\u306a\u304b\u96e3\u3057\u3044\u3067\u3059\u3002\u305d\u3053\u3067\u3001`Date`\u306b\u6e21\u3059\u524d\u306b`dateParse`\u3068\u3044\u3046\u72ec\u81ea\u306e\u30d1\u30a4\u30d7\u3092\u565b\u307e\u3059\u3053\u3068\u3067\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n\n\u3053\u3093\u306a\u30d1\u30a4\u30d7\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```javascript\nimport { Pipe, PipeTransform } from '@angular/core';\n\nexport function parseIsoDatetime(dtstr: string): Date {\n  const dt = dtstr.split(/[: T-]/).map(parseFloat);\n  return new Date(dt[0], dt[1] - 1, dt[2], dt[3] || 0, dt[4] || 0, dt[5] || 0, 0);\n}\n\n@Pipe({\n  name: 'dateParse'\n})\nexport class DateParsePipe implements PipeTransform {\n  transform(value: any | Date): Date {\n    if (value instanceof Date) {\n      // Date\u306f\u305d\u306e\u307e\u307e\u8fd4\u3059\n      return value;\n    }\n    if (typeof value === 'number') {\n      return new Date(value);\n    }\n    if (typeof value === 'string') {\n      const parsed = Date.parse(value);\n      if (Number.isNaN(parsed)) {\n        const challenge = parseIsoDatetime(value);\n        if (Number.isNaN(challenge.getTime())) {\n          return null;\n        } else {\n          return challenge;\n        }\n      }\n      return new Date(value);\n    }\n    return null;\n  }\n}\n```\n\nhttp://stackoverflow.com/questions/4829569/help-parsing-iso-8601-date-in-javascript\n\n\u5192\u982d\u306e`parseIsoDatetime`\u3067\u6587\u5b57\u5217\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3044\u307e\u3059\u3002\u81ea\u5206\u306e\u74b0\u5883\u3067\u306f\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u6271\u3046\u3053\u3068\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u4e00\u756a\u30b7\u30f3\u30d7\u30eb\u306a\u3053\u306e\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u308c\u304c\u5fc5\u8981\u306a\u5834\u5408\u3067\u3082\u3053\u306e\u90e8\u5206\u3092\u7f6e\u304d\u63db\u3048\u308c\u3070\u52d5\u304f\u306f\u305a\u3067\u3059\u3002Moment.js\u3092\u5165\u308c\u3066\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5f8c\u306f\u3001ngModules\u304b\u3089\u8aad\u307f\u8fbc\u307f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\n\n```html\n<p>{{post.created_at | dateParse | Date:'short'}}</html>\n```\n\n\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u3066\u3042\u3052\u308c\u3070\u3001Safari\u3067\u3082\u4ed6\u306e\u30d6\u30e9\u30a6\u30b6\u3092\u540c\u3058\u3088\u3046\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u3055\u3044\u3054\u306b\n\n\u4eca\u56de\u306fISO8601\u4ee5\u5916\u306e\u6587\u5b57\u5217\u304c\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u307b\u3068\u3093\u3069\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u72b6\u6cc1\u306b\u3088\u3063\u3066\u306f\u3001dateParse\u3067\u30a8\u30e9\u30fc\u3092\u767a\u751f\u3055\u305b\u308b\u306a\u3069\u3082\u5fc5\u8981\u304b\u306a\u3068\u8003\u3048\u307e\u3059\u3002\n\n\u30d6\u30e9\u30a6\u30b6\u306b\u3088\u308b\u5dee\u7570\u3001\u6700\u60aa\u3067\u3059\u306d...\n", "tags": ["ISO8601", "angular", "Angular2"]}