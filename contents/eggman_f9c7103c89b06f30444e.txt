{"tags": ["ESP32", "bluetooth"], "context": "ESP32\u306eBluetooth\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n(\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u306f\u8abf\u3079\u3066\u3044\u307e\u305b\u3093\u3002\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u3064\u3044\u3066\u77e5\u308a\u305f\u304b\u3063\u305f\u306e\u3067\u8abf\u3079\u307e\u3057\u305f\u3002)\n\u30d7\u30ed\u30c8\u30b3\u30eb\u30b9\u30bf\u30c3\u30af\u306bBluedroid\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\nBluedroid\u306f\u3001Android 4.2 \u304b\u3089 Android 5.1\u3067\u5229\u7528\u3055\u308c\u3066\u3044\u305fBluetooth\u30d7\u30ed\u30c8\u30b3\u30eb\u30b9\u30bf\u30c3\u30af\u3067\u3059\u3002\n\nBluetooth hardware\n\nESP32 supports BR/BLE dual mode.\nRivieraWaves Bluetooth dual mode technology in its new ESP32 chip.\nhttp://ceva-dsp.mediaroom.com/2016-10-26-Espressif-Licenses-and-Deploys-CEVA-Bluetooth-in-ESP32-IoT-Chip\nRivieraWaves's names are  \"RW-BTDM-BB\" and \"RW-BTDM-RF\".\n\n\nBluetooth software\n\nVHCI\n\nsend HCI coomand and recieve HCI response.\nhttps://github.com/espressif/esp-idf/blob/master/components/bt/include/bt.h\nAPI\n\n/** @brief esp_vhci_host_send_packet\n * host send packet to controller\n * @param data the packet point\n *,@param len the packet length\n */\nvoid esp_vhci_host_send_packet(uint8_t *data, uint16_t len);\n\nint (*notify_host_recv)(uint8_t *data, uint16_t len);   /*!< callback used to notify that the controller has a packet to send to the host*/\n\nstatic uint8_t hci_cmd_buf[128];\n\nstatic uint16_t make_cmd_reset(uint8_t *buf) \n{\n    UINT8_TO_STREAM (buf, H4_TYPE_COMMAND);\n    UINT16_TO_STREAM (buf, HCI_RESET);\n    UINT8_TO_STREAM (buf, 0);\n    return HCI_H4_CMD_PREAMBLE_SIZE;\n}\n\nstatic void hci_cmd_send_reset(void)\n{\n    uint16_t sz = make_cmd_reset (hci_cmd_buf);\n    esp_vhci_host_send_packet(hci_cmd_buf, sz);\n}\n\n\nBluedroid\n\nESP32 use Bluedroid.\nBLE only, not support BR/EDR. \ncomponent/bt: add bluedroid 1st version\n\n1. add bluedroid 1st version\n2. alarm adapter\n3. task semaphore lock\n4. other bugs resolved\n\n\nAPI\u306f\u3001Bluedroid\u306eAPI\u3092\u30e9\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3069\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306eBluedroid\u304b\u3089\u6d3e\u751f\u3057\u3066\u3044\u308b\u304b\u8abf\u3079\u308b\u3002\u305f\u3076\u3093\u3001Android 5.1\u306e\u3069\u3053\u304b\u3002\nTasks\n\n\n\n\nTask name\nPriority\nStack size\nDescription\nCode\n\n\n\n\nBtc_task\n20\n2048\nUpper layer interface\nbtc_task.c\n\n\nbtuT\n21\n1500\nBLE protocol\nbtu_task.c\n\n\nhciHostT\n23\n1500\nHCI generate/analyze\nhci_layer.c\n\n\nhciH4T\n22\n1500\nHCI Tx/Rx\nhci_hal_h4.c\n\n\n\n\nMemory allocation\n\nOriginal \u306e Bluedroid\u3067\u306f\u3001\u30e1\u30e2\u30ea\u30d7\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u3044\u305f\u304c\u3001esp32\u3067\u306f\u3001osi_malloc()\u3092\u4f7f\u3063\u3066HEAP\u304b\u3089dynamic\u306b\u78ba\u4fdd\u3057\u3066\u3044\u308b\u3002\nOriginal \u306e Bluedroid\u3067\u306f\u3001\u5404\u30e1\u30e2\u30ea\u30d7\u30fc\u30eb\u306e\u30b5\u30a4\u30ba\u3068\u500b\u6570\u3092\u7ba1\u7406\u3057\u3066\u3044\u305f\u304c\u3001esp32\u3067\u306f\u7ba1\u7406\u3057\u3066\u3044\u306a\u3044\u3002\n\u306a\u306e\u3067\u3001\u3042\u308b\u7a0b\u5ea6\u306e\u6642\u9593\u304c\u7d4c\u904e\u3059\u308b\u3068\u300cHEAP\u306e\u30d5\u30e9\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u767a\u751f\u3057\u3066\u3001\u30e1\u30e2\u30ea\u304c\u78ba\u4fdd\u3067\u304d\u306a\u304f\u308b\u300d\u3068\u3044\u3046\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n\nBluetooth protocol stack uses GKI_getbuf() and GKI_getpoolbuf().\n\nGKI_getbuf() -> osi_malloc() -> calloc()\nGKI_getpoolbuf() -> GKI_betbuf() -> osi_malloc() -> calloc()\n\n\nBluetooth qualification\n\nChip\u306fdual mode\u3067\u8a8d\u8a3c\u3001Host Stack\u306fBLE\u306e\u307f\u3067\u8a8d\u8a3c\u3002\n\n\nD032523 ESP32 Bluetooth Chip\n\n\nD032523 \nICS\nSeptember/14/2016\n4.2\n\nBaseband     \nRadio    \nLink Manager     \nHost Controller Interface    \nRF PHY   \nLink Layer   \n4.0 Host Controller Interface\n\n\nD033986 ESP32 BLE Host Stack\n\n\nD033986 \nICS\nJanuary/13/2017\n4.2\n\nLogical Link Control and Adaptation Protocol     \nGeneric Access Profile   \nAttribute Protocol\nSecurity Manager Protocol    \nDevice Information Service   \nFind Me Profile\nImmediate Alert\nLink Loss Service\nProximity Profile   \nTx Power Service\nBattery Service\nHID Service\nHID over GATT\n\n\nRadio certification\n\nhttps://fccid.io/2AC7Z-ESPWROOM32\nhttp://akizukidenshi.com/download/ds/espressifsystems/Espressif_211-161007_MIC_Radio_Certificate.pdf\n\nESP32\u306eBluetooth\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n(\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u306f\u8abf\u3079\u3066\u3044\u307e\u305b\u3093\u3002\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u3064\u3044\u3066\u77e5\u308a\u305f\u304b\u3063\u305f\u306e\u3067\u8abf\u3079\u307e\u3057\u305f\u3002)\n\n\u30d7\u30ed\u30c8\u30b3\u30eb\u30b9\u30bf\u30c3\u30af\u306bBluedroid\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\nBluedroid\u306f\u3001Android 4.2 \u304b\u3089 Android 5.1\u3067\u5229\u7528\u3055\u308c\u3066\u3044\u305fBluetooth\u30d7\u30ed\u30c8\u30b3\u30eb\u30b9\u30bf\u30c3\u30af\u3067\u3059\u3002\n\n# Bluetooth hardware\n\n* ESP32 supports BR/BLE dual mode.\n* ```RivieraWaves Bluetooth dual mode technology in its new ESP32 chip.```\n* http://ceva-dsp.mediaroom.com/2016-10-26-Espressif-Licenses-and-Deploys-CEVA-Bluetooth-in-ESP32-IoT-Chip\n* RivieraWaves's names are  \"RW-BTDM-BB\" and \"RW-BTDM-RF\".\n\n# Bluetooth software\n\n## VHCI\n* send HCI coomand and recieve HCI response.\n* https://github.com/espressif/esp-idf/blob/master/components/bt/include/bt.h\n\n* API\n\n```\n/** @brief esp_vhci_host_send_packet\n * host send packet to controller\n * @param data the packet point\n *,@param len the packet length\n */\nvoid esp_vhci_host_send_packet(uint8_t *data, uint16_t len);\n\nint (*notify_host_recv)(uint8_t *data, uint16_t len);   /*!< callback used to notify that the controller has a packet to send to the host*/\n```\n\n```\nstatic uint8_t hci_cmd_buf[128];\n\nstatic uint16_t make_cmd_reset(uint8_t *buf) \n{\n    UINT8_TO_STREAM (buf, H4_TYPE_COMMAND);\n    UINT16_TO_STREAM (buf, HCI_RESET);\n    UINT8_TO_STREAM (buf, 0);\n    return HCI_H4_CMD_PREAMBLE_SIZE;\n}\n\nstatic void hci_cmd_send_reset(void)\n{\n    uint16_t sz = make_cmd_reset (hci_cmd_buf);\n    esp_vhci_host_send_packet(hci_cmd_buf, sz);\n}\n```\n\n\n## Bluedroid\n* ESP32 use Bluedroid.\n* BLE only, not support BR/EDR. \n* [component/bt: add bluedroid 1st version](https://github.com/espressif/esp-idf/commit/b80325604d578a1ea99ef34c0f64321a0f9b97ff)\n\n```\n1. add bluedroid 1st version\n2. alarm adapter\n3. task semaphore lock\n4. other bugs resolved\n```\n* API\u306f\u3001Bluedroid\u306eAPI\u3092\u30e9\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\n* \u3069\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306eBluedroid\u304b\u3089\u6d3e\u751f\u3057\u3066\u3044\u308b\u304b\u8abf\u3079\u308b\u3002\u305f\u3076\u3093\u3001Android 5.1\u306e\u3069\u3053\u304b\u3002\n\n* Tasks\n\n\n| Task name | Priority | Stack size | Description | Code |\n|:-:|:-:|:-:|:-:|:-:|\n| Btc_task  | 20 | 2048 | Upper layer interface  |[btc_task.c](https://github.com/espressif/esp-idf/blob/master/components/bt/bluedroid/btc/core/btc_task.c)|\n| btuT      | 21 | 1500 | BLE protocol  |[btu_task.c](https://github.com/espressif/esp-idf/blob/master/components/bt/bluedroid/stack/btu/btu_task.c)|\n| hciHostT  | 23 | 1500 | HCI generate/analyze     |[hci_layer.c](https://github.com/espressif/esp-idf/blob/master/components/bt/bluedroid/hci/hci_layer.c)|\n| hciH4T    | 22 | 1500 | HCI Tx/Rx         |[hci_hal_h4.c](https://github.com/espressif/esp-idf/blob/master/components/bt/bluedroid/hci/hci_hal_h4.c)|\n\n* Memory allocation  \n * Original \u306e Bluedroid\u3067\u306f\u3001\u30e1\u30e2\u30ea\u30d7\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u3044\u305f\u304c\u3001esp32\u3067\u306f\u3001osi_malloc()\u3092\u4f7f\u3063\u3066HEAP\u304b\u3089dynamic\u306b\u78ba\u4fdd\u3057\u3066\u3044\u308b\u3002\n * Original \u306e Bluedroid\u3067\u306f\u3001\u5404\u30e1\u30e2\u30ea\u30d7\u30fc\u30eb\u306e\u30b5\u30a4\u30ba\u3068\u500b\u6570\u3092\u7ba1\u7406\u3057\u3066\u3044\u305f\u304c\u3001esp32\u3067\u306f\u7ba1\u7406\u3057\u3066\u3044\u306a\u3044\u3002\n * \u306a\u306e\u3067\u3001\u3042\u308b\u7a0b\u5ea6\u306e\u6642\u9593\u304c\u7d4c\u904e\u3059\u308b\u3068\u300cHEAP\u306e\u30d5\u30e9\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u767a\u751f\u3057\u3066\u3001\u30e1\u30e2\u30ea\u304c\u78ba\u4fdd\u3067\u304d\u306a\u304f\u308b\u300d\u3068\u3044\u3046\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\nBluetooth protocol stack uses GKI_getbuf() and GKI_getpoolbuf().\n\nGKI_getbuf() -> osi_malloc() -> calloc()\nGKI_getpoolbuf() -> GKI_betbuf() -> osi_malloc() -> calloc()\n```\n\n\n# Bluetooth qualification\n\n* Chip\u306fdual mode\u3067\u8a8d\u8a3c\u3001Host Stack\u306fBLE\u306e\u307f\u3067\u8a8d\u8a3c\u3002\n\n## D032523 ESP32 Bluetooth Chip\n* [D032523](https://www.bluetooth.org/tpg/QLI_viewQDL.cfm?qid=32523) \n* [ICS](https://www.bluetooth.org/tpg/showCorePICS.cfm?3A000A5A005C5246545C5714403B0C0D0E2405022413010E57503F202A5A7A5B574C58)\n* September/14/2016\n* 4.2\n\n```\nBaseband\t \nRadio\t \nLink Manager\t \nHost Controller Interface\t \nRF PHY\t \nLink Layer\t \n4.0 Host Controller Interface\n```\n\n## D033986 ESP32 BLE Host Stack\n* [D033986](https://www.bluetooth.org/tpg/QLI_viewQDL.cfm?qid=33986) \n* [ICS](https://www.bluetooth.org/tpg/showCorePICS.cfm?3A000A5A005C524758565214403B0C0D0E2405022413010E57503F202A5A7B5D584D58)\n* January/13/2017\n* 4.2\n\n```\nLogical Link Control and Adaptation Protocol\t \nGeneric Access Profile\t \nAttribute Protocol\nSecurity Manager Protocol\t \nDevice Information Service\t \nFind Me Profile\nImmediate Alert\nLink Loss Service\nProximity Profile\t\nTx Power Service\nBattery Service\nHID Service\nHID over GATT\n```\n\n# Radio certification\n\n* https://fccid.io/2AC7Z-ESPWROOM32\n* http://akizukidenshi.com/download/ds/espressifsystems/Espressif_211-161007_MIC_Radio_Certificate.pdf\n\n\n\n\n"}