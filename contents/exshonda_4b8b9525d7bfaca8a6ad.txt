{"context": "\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0cTOPPERS/R2CA\u306b\u3088\u308b NCES IoT Base Shield \u306eGrove\u6a5f\u80fd\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\uff0e\nNCES IoT Base Shiled\u306b\u3064\u3044\u3066\u306f\u3053\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\nGrove Sytem\u306b\u3064\u3044\u3066\nGrove Sytem \u306fAruduino\u306e\u30b7\u30fc\u30eb\u30c9\u306b\u5bfe\u3057\u3066\uff0c\u5404\u7a2e\u30bb\u30f3\u30b5\u3084\u30a2\u30af\u30c1\u30e5\u30a8\u30fc\u30bf\u3092\u7c21\u5358\u306b\u7740\u8131\u53ef\u80fd\u306a\u74b0\u5883\u3067\u3059\uff0e100\u7a2e\u985e\u4ee5\u4e0a\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u5404 Grove \u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306fWiki\u30da\u30fc\u30b8\u3068Arduino\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u7528\u610f\u3055\u308c\u3066\u304a\u308a\uff0c\u5bb9\u6613\u306b\u4f7f\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff0e\n\n\u5fc5\u8981\u306a\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\n\n\nArduino M0 Pro \nNCES IoT Base Shield\nGrove Servo\nGrove - Ultrasonic Ranger\n\nGrove - OLED Display 1.12\n\n\u7121\u304f\u5834\u5408\u306f\u51fa\u529b\u3092Serial\u306b\u51fa\u305b\u3070\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u52d5\u4f5c\u3057\u307e\u3059\uff0e\n\n\nWindows PC\n\n\nWindows7\u3068Windows10\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\uff0e\n\n\nUSB(microB)\u30b1\u30fc\u30d6\u30eb\n\n\n\u30dc\u30fc\u30c9\u306b\u306f\u4ed8\u5c5e\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u7528\u610f\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\n\n\n\nGrove Servo\n\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3059\u3067\u306bR2CA\u306b\u5165\u3063\u3066\u3044\u308b\u4f8b\u3068\u3057\u3066\uff0cGrove Servo \u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\uff0e\n\n\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nM0\u306bNCES IoT Base Shield \u3092\u53d6\u308a\u4ed8\u3051\u3066\uff0c\u3055\u3089\u306bGrove Servo\u3092\u63a5\u7d9a\u3057\u307e\u3059\uff0e\u63a5\u7d9a\u5148\u306fD2\u304b\u3089D8\u306e\u3044\u305a\u308c\u304b\u3067\u3088\u3044\u3067\u3059\u304c\uff0c\u4eca\u56de\u306fD2\u306b\u63a5\u7d9a\u3057\u307e\u3059\uff0e\n\n\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\u6b21\u306bGrove Servo\u306eWiki\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\uff0eWiki\u306b\u3088\u308b\u3068Arduino\u306eServo\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u52d5\u4f5c\u3059\u308b\u3068\u3042\u308a\u307e\u3059\uff0e\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306fR2CA\u306e\u4ee5\u4e0b\u306e\u5834\u6240\u306b\u3042\u308a\u307e\u3059\uff0e\n\narduino_lib\\libraries\\Servo\\\n\n\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u52d5\u304b\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\narduino_lib\\libraries\\Servo\\examples\\Sweep\\Sweep.ino\n\n\u307e\u305aexamples\\Basic\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u540c\u3058\u968e\u5c64\u306b\u30b3\u30d4\u30fc\u3057\u3066\u9069\u5f53\u306a\u540d\u524d\u306b\u5909\u66f4\u3057\u307e\u3059(\u5b8c\u6210\u3057\u305f\u3082\u306e\u304cNCESIoT\u3068\u3057\u3066\u3042\u308a\u307e\u3059)\uff0e\u6b21\u306br2ca_app.cpp \u306e1\u884c\u76ee\u4ee5\u5916\u3092\u30af\u30ea\u30a2\u3057\u3066\uff0cSweep.ino\u306e\u5185\u5bb9\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\uff0e\n\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\u30b5\u30fc\u30dc\u309215m\u5468\u671f\u3067\u4e00\u5ea6\u305a\u3064\u79fb\u52d5\u3055\u305b\u3066\u3044\u307e\u3059\uff0e\u30b5\u30fc\u30dc\u306e\u63a5\u7d9a\u5148\u304cD2\u306a\u306e\u3067\uff0cmyservo.attac(2)\u3068\u3057\u3066\u6307\u5b9a\u3057\u307e\u3059\uff0e\n\nexamples\\NCESIoT\\r2ca_app.cpp\n#include \"r2ca.h\"\n/* Sweep\n by BARRAGAN <http://barraganstudio.com> \n This example code is in the public domain.\n\n modified 8 Nov 2013\n by Scott Fitzgerald\n http://arduino.cc/en/Tutorial/Sweep\n*/ \n\n#include <Servo.h> \n\nServo myservo;  // create servo object to control a servo \n                // twelve servo objects can be created on most boards\n\nint pos = 0;    // variable to store the servo position \n\nvoid setup() \n{ \n  myservo.attach(2);  // attaches the servo on pin 9 to the servo object \n} \n\nvoid loop() \n{ \n  for(pos = 0; pos <= 180; pos += 1) // goes from 0 degrees to 180 degrees \n  {                                  // in steps of 1 degree \n    myservo.write(pos);              // tell servo to go to position in variable 'pos' \n    delay(15);                       // waits 15ms for the servo to reach the position \n  } \n  for(pos = 180; pos>=0; pos-=1)     // goes from 180 degrees to 0 degrees \n  {                                \n    myservo.write(pos);              // tell servo to go to position in variable 'pos' \n    delay(15);                       // waits 15ms for the servo to reach the position \n  } \n} \n\n\n\n\u6b21\u306b\u30b5\u30fc\u30dc\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d3\u30eb\u30c9\u5bfe\u8c61\u3068\u3057\u307e\u3059\uff0earduino_lib\\libraries\\Servo\\\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\uff0c\u30bd\u30fc\u30b9\u304c\u7f6e\u304b\u308c\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u3068.c/.cpp\u3092 examples\\NCESIoT\\Makefile\u306b\u767b\u9332\u3057\u307e\u3059\uff0e\nServo\u306e\u5834\u5408\uff0c\u30d5\u30a1\u30a4\u30eb\u304c\u7f6e\u304b\u308c\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u304c2\u500b\u3042\u308b\u305f\u3081\uff0cAPPL_DIR\u306b\u305d\u308c\u305e\u308c\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u767b\u9332\u3057\u307e\u3059\uff0e\u30b3\u30f3\u30d1\u30a4\u30eb\u5bfe\u8c61\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u306fServo.cpp\u304c\u3042\u308b\u305f\u3081\uff0c\u3053\u308c\u3092APPL_CXXOBJS\u306b\u767b\u9332\u3057\u307e\u3059\uff0e\n\n- examples\\NCESIoT\\Makefile\nAPPL_DIR     += $(R2CA_DIR)/arduino_lib/libraries/Servo/src/ $(R2CA_DIR)/arduino_lib/libraries/Servo/src/samd\nAPPL_CXXOBJS += Servo.o\nAPPL_COBJS   += \n\n\u6700\u5f8c\u306bdo_make.bat\u3092\u5b9f\u884c\u3059\u308b\u3068\u30d3\u30eb\u30c9\u3055\u308c\uff0cdo_run.bat\u3092\u5b9f\u884c\u3059\u308b\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e\u30b5\u30fc\u30dc\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u901a\u308a\u306b\u52d5\u4f5c\u3059\u308b\u306f\u305a\u3067\u3059\uff0e\n\nUltrasonic Ranger\n\u6b21\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u306e\u3042\u308bUltrasonic Ranger\u3092\u4f7f\u3044\u307e\u3059\uff0e\n\n\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nM0\u306bNCES IoT Base Shield \u3092\u53d6\u308a\u4ed8\u3051\u3066\uff0c\u3055\u3089\u306bUltrasonic Ranger\u3092\u63a5\u7d9a\u3057\u307e\u3059\uff0e\u63a5\u7d9a\u5148\u306fD2\u304b\u3089D8\u306e\u3044\u305a\u308c\u304b\u3067\u3088\u3044\u3067\u3059\u304c\uff0c\u4eca\u56de\u306fD3\u306b\u63a5\u7d9a\u3057\u307e\u3059\uff0e\n\n\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\u6b21\u306bUltrasonic Ranger\u306eWiki\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\uff0eWiki\u306b\u3088\u308b\u3068\u30e9\u30a4\u30d6\u30e9\u30ea\u3092Git\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u306e\u3053\u3068\u3067\u3059\uff0e\nGit\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\uff0eGit\u306e\u30da\u30fc\u30b8\u306e\u53f3\u5074\u306b\u3042\u308bDownload ZIP\u306e\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066zip\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\uff0e\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5f8c\u306b\u5c55\u958b\u3057\u307e\u3059\uff0e\u30d5\u30a9\u30eb\u30c0\u540d\u306b\"-master\"\u304c\u5165\u3063\u3066\u3044\u308b\u305f\u3081\u3053\u308c\u3092\u53d6\u308a\u307e\u3059\uff0e\u6700\u5f8c\u306b\u30d5\u30a9\u30eb\u30c0Grove_Ultrasonic_Ranger\u3092NCESIoT\u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\uff0e\n\u3053\u3061\u3089\u3082\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u30d9\u30fc\u30b9\u306b\u52d5\u304b\u3057\u307e\u3059\uff0e\n\nexample\\NCESIot\\Grove_Ultrasonic_Ranger\\UltrasonicDisplayOnTerm\\UltrasonicDisplayOnTerm.ino\n\nGrove Servo\u3067\u4f7f\u7528\u3057\u305fr2ca_app.cpp\u306e1\u884c\u76ee\u306e\u307f\u6b8b\u3057\u3066UltrasonicDisplayOnTerm.ino \u306e\u5185\u5bb9\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\uff0e\u30a4\u30f3\u30c1\u51fa\u529b\u306f\u524a\u9664\u3057\u3066\uff0cD3\u306b\u63a5\u7d9a\u3057\u3066\u3044\u308b\u306e\u3067\uff0cUltrasonic ultrasonic(3); \u3068\u3057\u3066\u6307\u5b9a\u3057\u307e\u3059\uff0e\n\nexamples\\NCESIoT\\r2ca_app.cpp\n#include \"r2ca.h\"\n\n\nUltrasonic ultrasonic(3);\nvoid setup()\n{\n    Serial.begin(115200);\n}\nvoid loop()\n{\n    long RangeInCentimeters;\n    RangeInCentimeters = ultrasonic.MeasureInCentimeters(); // two measurements should keep an interval\n    Serial.print(RangeInCentimeters);//0~400cm\n    Serial.println(\" cm\");\n    delay(250);\n}\n\n\n\u6b21\u306bUltora Sonic\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d3\u30eb\u30c9\u5bfe\u8c61\u3068\u3057\u307e\u3059\uff0e./Grove_Ultrasonic_Ranger\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\uff0c\u30bd\u30fc\u30b9\u304c\u7f6e\u304b\u308c\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u3068.c/.cpp\u3092 examples\\NCESIoT\\Makefile\u306b\u767b\u9332\u3057\u307e\u3059\uff0e\nUltora Sonic\u306e\u5834\u5408\uff0c./Grove_Ultrasonic_Ranger\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u7f6e\u304b\u308c\u3066\u3044\u308b\n\u305f\u3081\uff0cAPPL_DIR\u306b\u767b\u9332\u3057\u307e\u3059\uff0e\u30b3\u30f3\u30d1\u30a4\u30eb\u5bfe\u8c61\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u306fUltrasonic.cpp\n\u304c\u3042\u308b\u305f\u3081\uff0c\u3053\u308c\u3092APPL_CXXOBJS\u306b\u767b\u9332\u3057\u307e\u3059\uff0e\nAPPL_DIR     += ./Grove_Ultrasonic_Ranger\nAPPL_CXXOBJS += Ultrasonic.o\nAPPL_COBJS   += \n\n\u6700\u5f8c\u306bdo_make.bat\u3092\u5b9f\u884c\u3059\u308b\u3068\u30d3\u30eb\u30c9\u3055\u308c\uff0cdo_run.bat\u3092\u5b9f\u884c\u3059\u308b\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e\u30b5\u30fc\u30dc\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u901a\u308a\u306b\u52d5\u4f5c\u3059\u308b\u306f\u305a\u3067\u3059\uff0e\n\nGrove - OLED Display 1.12\nUltora Sonic\u3067\u53d6\u5f97\u3057\u305f\u5024\u3092OLED\u306b\u8868\u793a\u3057\u307e\u3059\uff0e\n\n\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nM0\u306bNCES IoT Base Shield \u3092\u53d6\u308a\u4ed8\u3051\u3066\uff0c\u3055\u3089\u306bUltrasonic Ranger\u3092D3\u306b\u63a5\u7d9a\u3057\u307e\u3059\uff0eOLED\u306fI2C\u63a5\u7d9a\u306a\u306e\u3067\uff0cI2C\u3068\u66f8\u3044\u3066\u3042\u308b\u30b3\u30cd\u30af\u30bf\u306e\u3044\u305a\u308c\u304b\u306b\u63a5\u7d9a\u3057\u307e\u3059\uff0e\n\n\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\u4e0a\u8a18\u3068\u540c\u69d8\u306bOLED\u306eWiki\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e\n\u6b21\u306b\u30b5\u30f3\u30d7\u30eb\u3092\u53c2\u8003\u306bUltora Sonic\u306e\u5024\u3092OLED\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u307e\u3059\uff0e\n\nexamples\\NCESIoT\\r2ca_app.cpp\n#include <Wire.h>\n#include <SeeedGrayOLED.h>\n#include <avr/pgmspace.h>\n#include \"Ultrasonic.h\"\n\nUltrasonic ultrasonic(3);\n\nvoid setup()\n{\n    Wire.begin();\n    SeeedGrayOled.init();             //initialize SEEED OLED display\n    SeeedGrayOled.clearDisplay();     //Clear Display.\n    SeeedGrayOled.setNormalDisplay(); //Set Normal Display Mode\n    SeeedGrayOled.setVerticalMode();  // Set to vertical mode for displaying text\n}\n\nvoid loop()\n{\n    long RangeInCentimeters;\n\n    SeeedGrayOled.setTextXY(0,0);  //set Cursor to ith line, 0th column\n    SeeedGrayOled.setGrayLevel(15); //Set Grayscale level. Any number between 0 - 15.    \n    RangeInCentimeters = ultrasonic.MeasureInCentimeters(); // two measurements should keep an interval\n    SeeedGrayOled.putNumber(RangeInCentimeters);//0~400cm\n    SeeedGrayOled.putString(\" cm      \");\n    delay(250);    \n}\n\n\nMakefile\u306b\u30d5\u30a9\u30eb\u30c0\u3084\u30d3\u30eb\u30c9\u5bfe\u8c61\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0eOLED\u306fI2C\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067USE_WIRE\u3092true\u306b\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\n\n- examples\\NCESIoT\\Makefile\nUSE_WIRE = true\n#\nAPPL_DIR     += ./LCD_Display9696\nAPPL_CXXOBJS += SeeedGrayOLED.o\nAPPL_COBJS   += \n\n\n\u30de\u30eb\u30c1\u30bf\u30b9\u30af\n\u30b5\u30fc\u30dc\u3068UltoraSonic\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u305d\u308c\u305e\u308c\u5225\u30bf\u30b9\u30af\u3067\u5b9f\u884c\u3057\u307e\u3059\uff0e\u5909\u66f4\u306f\u7c21\u5358\u3067\uff0c\u30bf\u30b9\u30af\u6570\u3092\uff12\u3068\u3057\u3066\uff0c\u7247\u65b9\u306esetup\u306e\u5185\u5bb9\u3092setup\u306b\uff0cloop\u3092loop1\u306b\u3059\u308btask1_\u3092\u4ed8\u3051\u308b\u3060\u3051\u3067\u3059\uff0e\n\n\nexamples\\NCESIoT\\r2ca_app.h\n#ifndef _R2CA_APP_H_\n#define _R2CA_APP_H_\n\n#define R2CA_NUM_TASK 1\n\n#endif /* _R2CA_APP_H_ */\n\n\n\nexamples\\NCESIoT\\r2ca_app.cpp\n#include <Wire.h>\n#include <SeeedGrayOLED.h>\n#include <avr/pgmspace.h>\n#include \"Ultrasonic.h\"\n\nUltrasonic ultrasonic(3);\nextern void task1_setup();\n\nvoid setup()\n{\n    Wire.begin();\n    SeeedGrayOled.init();             //initialize SEEED OLED display\n    SeeedGrayOled.clearDisplay();     //Clear Display.\n    SeeedGrayOled.setNormalDisplay(); //Set Normal Display Mode\n    SeeedGrayOled.setVerticalMode();  // Set to vertical mode for displaying text\n\n    task1_setup();\n}\n\nvoid loop()\n{\n    long RangeInCentimeters;\n\n    SeeedGrayOled.setTextXY(0,0);  //set Cursor to ith line, 0th column\n    SeeedGrayOled.setGrayLevel(15); //Set Grayscale level. Any number between 0 - 15.    \n    RangeInCentimeters = ultrasonic.MeasureInCentimeters(); // two measurements should keep an interval\n    SeeedGrayOled.putNumber(RangeInCentimeters);//0~400cm\n    SeeedGrayOled.putString(\" cm      \");\n    delay(250);    \n}\n\n/* Sweep\n by BARRAGAN <http://barraganstudio.com> \n This example code is in the public domain.\n\n modified 8 Nov 2013\n by Scott Fitzgerald\n http://arduino.cc/en/Tutorial/Sweep\n*/ \n\n#include <Servo.h> \n\nServo myservo;  // create servo object to control a servo \n                // twelve servo objects can be created on most boards\n\nint pos = 0;    // variable to store the servo position \n\nvoid task1_setup() \n{ \n  myservo.attach(2);  // attaches the servo on pin 9 to the servo object \n} \n\nvoid task1_loop() \n{ \n  for(pos = 0; pos <= 180; pos += 1) // goes from 0 degrees to 180 degrees \n  {                                  // in steps of 1 degree \n    myservo.write(pos);              // tell servo to go to position in variable 'pos' \n    delay(15);                       // waits 15ms for the servo to reach the position \n  } \n  for(pos = 180; pos>=0; pos-=1)     // goes from 180 degrees to 0 degrees \n  {                                \n    myservo.write(pos);              // tell servo to go to position in variable 'pos' \n    delay(15);                       // waits 15ms for the servo to reach the position \n  } \n} \n\n\n\n\u304a\u308f\u308a\u306b\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0cTOPPERS/R2CA\u306b\u3088\u308b NCES IoT Base Shield \u306eGrove\u6a5f\u80fd\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3057\u305f\uff0e\u4ed6\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3082\u540c\u69d8\u306bWiki\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n#\u306f\u3058\u3081\u306b\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0cTOPPERS/R2CA\u306b\u3088\u308b NCES IoT Base Shield \u306eGrove\u6a5f\u80fd\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\uff0e\n\nNCES IoT Base Shiled\u306b\u3064\u3044\u3066\u306f[\u3053\u306e\u8a18\u4e8b](http://qiita.com/exshonda/items/48b30a165e4c6845e900)\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\n#Grove Sytem\u306b\u3064\u3044\u3066\n\n[Grove Sytem](http://www.seeedstudio.com/wiki/Grove_System) \u306f[Aruduino\u306e\u30b7\u30fc\u30eb\u30c9](https://www.switch-science.com/catalog/1293/)\u306b\u5bfe\u3057\u3066\uff0c\u5404\u7a2e\u30bb\u30f3\u30b5\u3084\u30a2\u30af\u30c1\u30e5\u30a8\u30fc\u30bf\u3092\u7c21\u5358\u306b\u7740\u8131\u53ef\u80fd\u306a\u74b0\u5883\u3067\u3059\uff0e100\u7a2e\u985e\u4ee5\u4e0a\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\n\u5404 Grove \u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306fWiki\u30da\u30fc\u30b8\u3068Arduino\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u7528\u610f\u3055\u308c\u3066\u304a\u308a\uff0c\u5bb9\u6613\u306b\u4f7f\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff0e\n\n\n# \u5fc5\u8981\u306a\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\n\n- [Arduino M0 Pro](http://www.arduino.org/products/boards/4-arduino-boards/arduino-m0-pro) \n- NCES IoT Base Shield\n- [Grove Servo](http://www.seeedstudio.com/wiki/Grove_-_Servo)\n- [Grove - Ultrasonic Ranger](http://www.seeedstudio.com/wiki/Grove_-_Ultrasonic_Ranger)\n- [Grove - OLED Display 1.12](http://www.seeedstudio.com/wiki/Grove_-_OLED_Display_1.12%22)\n - \u7121\u304f\u5834\u5408\u306f\u51fa\u529b\u3092Serial\u306b\u51fa\u305b\u3070\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u52d5\u4f5c\u3057\u307e\u3059\uff0e\n- Windows PC\n - Windows7\u3068Windows10\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\uff0e\n- USB(microB)\u30b1\u30fc\u30d6\u30eb\n - \u30dc\u30fc\u30c9\u306b\u306f\u4ed8\u5c5e\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u7528\u610f\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\n\n#Grove Servo\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3059\u3067\u306bR2CA\u306b\u5165\u3063\u3066\u3044\u308b\u4f8b\u3068\u3057\u3066\uff0cGrove Servo \u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\uff0e\n\n##\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nM0\u306bNCES IoT Base Shield \u3092\u53d6\u308a\u4ed8\u3051\u3066\uff0c\u3055\u3089\u306bGrove Servo\u3092\u63a5\u7d9a\u3057\u307e\u3059\uff0e\u63a5\u7d9a\u5148\u306fD2\u304b\u3089D8\u306e\u3044\u305a\u308c\u304b\u3067\u3088\u3044\u3067\u3059\u304c\uff0c\u4eca\u56de\u306fD2\u306b\u63a5\u7d9a\u3057\u307e\u3059\uff0e\n\n<img width=\"400\" alt=\"aFullSizeRender.jpg.jpg\" src=https://qiita-image-store.s3.amazonaws.com/0/106870/cfb4aaba-84f0-36e1-a250-c578a781f3bc.jpeg>\n\n##\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n\u6b21\u306b[Grove Servo\u306eWiki](http://www.seeedstudio.com/wiki/Grove_-_Servo)\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\uff0eWiki\u306b\u3088\u308b\u3068Arduino\u306eServo\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u52d5\u4f5c\u3059\u308b\u3068\u3042\u308a\u307e\u3059\uff0e\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306fR2CA\u306e\u4ee5\u4e0b\u306e\u5834\u6240\u306b\u3042\u308a\u307e\u3059\uff0e\n\n- arduino_lib\\libraries\\Servo\\\n\n\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u52d5\u304b\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\n- arduino_lib\\libraries\\Servo\\examples\\Sweep\\Sweep.ino\n\n\u307e\u305aexamples\\Basic\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u540c\u3058\u968e\u5c64\u306b\u30b3\u30d4\u30fc\u3057\u3066\u9069\u5f53\u306a\u540d\u524d\u306b\u5909\u66f4\u3057\u307e\u3059(\u5b8c\u6210\u3057\u305f\u3082\u306e\u304cNCESIoT\u3068\u3057\u3066\u3042\u308a\u307e\u3059)\uff0e\u6b21\u306br2ca_app.cpp \u306e1\u884c\u76ee\u4ee5\u5916\u3092\u30af\u30ea\u30a2\u3057\u3066\uff0cSweep.ino\u306e\u5185\u5bb9\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\uff0e\n\n\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\u30b5\u30fc\u30dc\u309215m\u5468\u671f\u3067\u4e00\u5ea6\u305a\u3064\u79fb\u52d5\u3055\u305b\u3066\u3044\u307e\u3059\uff0e\u30b5\u30fc\u30dc\u306e\u63a5\u7d9a\u5148\u304cD2\u306a\u306e\u3067\uff0cmyservo.attac(2)\u3068\u3057\u3066\u6307\u5b9a\u3057\u307e\u3059\uff0e\n\n```examples\\NCESIoT\\r2ca_app.cpp\n#include \"r2ca.h\"\n/* Sweep\n by BARRAGAN <http://barraganstudio.com> \n This example code is in the public domain.\n\n modified 8 Nov 2013\n by Scott Fitzgerald\n http://arduino.cc/en/Tutorial/Sweep\n*/ \n\n#include <Servo.h> \n \nServo myservo;  // create servo object to control a servo \n                // twelve servo objects can be created on most boards\n \nint pos = 0;    // variable to store the servo position \n \nvoid setup() \n{ \n  myservo.attach(2);  // attaches the servo on pin 9 to the servo object \n} \n \nvoid loop() \n{ \n  for(pos = 0; pos <= 180; pos += 1) // goes from 0 degrees to 180 degrees \n  {                                  // in steps of 1 degree \n    myservo.write(pos);              // tell servo to go to position in variable 'pos' \n    delay(15);                       // waits 15ms for the servo to reach the position \n  } \n  for(pos = 180; pos>=0; pos-=1)     // goes from 180 degrees to 0 degrees \n  {                                \n    myservo.write(pos);              // tell servo to go to position in variable 'pos' \n    delay(15);                       // waits 15ms for the servo to reach the position \n  } \n} \n\n```\n\n\u6b21\u306b\u30b5\u30fc\u30dc\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d3\u30eb\u30c9\u5bfe\u8c61\u3068\u3057\u307e\u3059\uff0earduino_lib\\libraries\\Servo\\\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\uff0c\u30bd\u30fc\u30b9\u304c\u7f6e\u304b\u308c\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u3068.c/.cpp\u3092 examples\\NCESIoT\\Makefile\u306b\u767b\u9332\u3057\u307e\u3059\uff0e\n\nServo\u306e\u5834\u5408\uff0c\u30d5\u30a1\u30a4\u30eb\u304c\u7f6e\u304b\u308c\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u304c2\u500b\u3042\u308b\u305f\u3081\uff0cAPPL_DIR\u306b\u305d\u308c\u305e\u308c\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u767b\u9332\u3057\u307e\u3059\uff0e\u30b3\u30f3\u30d1\u30a4\u30eb\u5bfe\u8c61\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u306fServo.cpp\u304c\u3042\u308b\u305f\u3081\uff0c\u3053\u308c\u3092APPL_CXXOBJS\u306b\u767b\u9332\u3057\u307e\u3059\uff0e\n\n- examples\\NCESIoT\\Makefile\n- \n``` examples\\NCESIoT\\Makefile\nAPPL_DIR     += $(R2CA_DIR)/arduino_lib/libraries/Servo/src/ $(R2CA_DIR)/arduino_lib/libraries/Servo/src/samd\nAPPL_CXXOBJS += Servo.o\nAPPL_COBJS   += \n```\n\n\u6700\u5f8c\u306bdo_make.bat\u3092\u5b9f\u884c\u3059\u308b\u3068\u30d3\u30eb\u30c9\u3055\u308c\uff0cdo_run.bat\u3092\u5b9f\u884c\u3059\u308b\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e\u30b5\u30fc\u30dc\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u901a\u308a\u306b\u52d5\u4f5c\u3059\u308b\u306f\u305a\u3067\u3059\uff0e\n\n\n#Ultrasonic Ranger\n\n\u6b21\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u306e\u3042\u308bUltrasonic Ranger\u3092\u4f7f\u3044\u307e\u3059\uff0e\n\n##\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nM0\u306bNCES IoT Base Shield \u3092\u53d6\u308a\u4ed8\u3051\u3066\uff0c\u3055\u3089\u306bUltrasonic Ranger\u3092\u63a5\u7d9a\u3057\u307e\u3059\uff0e\u63a5\u7d9a\u5148\u306fD2\u304b\u3089D8\u306e\u3044\u305a\u308c\u304b\u3067\u3088\u3044\u3067\u3059\u304c\uff0c\u4eca\u56de\u306fD3\u306b\u63a5\u7d9a\u3057\u307e\u3059\uff0e\n\n<img width=\"400\" alt=\"aFullSizeRender.jpg.jpg\" src=https://qiita-image-store.s3.amazonaws.com/0/106870/09c7c956-1dcd-514e-e151-68065dbc3ef9.jpeg>\n\n\n##\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n\u6b21\u306b[Ultrasonic Ranger\u306eWiki](http://www.seeedstudio.com/wiki/Grove_-_Ultrasonic_Ranger)\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\uff0eWiki\u306b\u3088\u308b\u3068\u30e9\u30a4\u30d6\u30e9\u30ea\u3092[Git](https://github.com/Seeed-Studio/Grove_Ultrasonic_Ranger)\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u306e\u3053\u3068\u3067\u3059\uff0e\n\n[Git](https://github.com/Seeed-Studio/Grove_Ultrasonic_Ranger)\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\uff0eGit\u306e\u30da\u30fc\u30b8\u306e\u53f3\u5074\u306b\u3042\u308bDownload ZIP\u306e\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066zip\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\uff0e\n\n![WS000020.JPG](https://qiita-image-store.s3.amazonaws.com/0/106870/cf90d84e-b1eb-0cf6-8070-677ba6a1e17d.jpeg)\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5f8c\u306b\u5c55\u958b\u3057\u307e\u3059\uff0e\u30d5\u30a9\u30eb\u30c0\u540d\u306b\"-master\"\u304c\u5165\u3063\u3066\u3044\u308b\u305f\u3081\u3053\u308c\u3092\u53d6\u308a\u307e\u3059\uff0e\u6700\u5f8c\u306b\u30d5\u30a9\u30eb\u30c0Grove_Ultrasonic_Ranger\u3092NCESIoT\u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\uff0e\n\n\u3053\u3061\u3089\u3082\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u30d9\u30fc\u30b9\u306b\u52d5\u304b\u3057\u307e\u3059\uff0e\n\n- example\\NCESIot\\Grove_Ultrasonic_Ranger\\UltrasonicDisplayOnTerm\\UltrasonicDisplayOnTerm.ino\n\nGrove Servo\u3067\u4f7f\u7528\u3057\u305fr2ca_app.cpp\u306e1\u884c\u76ee\u306e\u307f\u6b8b\u3057\u3066UltrasonicDisplayOnTerm.ino \u306e\u5185\u5bb9\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\uff0e\u30a4\u30f3\u30c1\u51fa\u529b\u306f\u524a\u9664\u3057\u3066\uff0cD3\u306b\u63a5\u7d9a\u3057\u3066\u3044\u308b\u306e\u3067\uff0cUltrasonic ultrasonic(3); \u3068\u3057\u3066\u6307\u5b9a\u3057\u307e\u3059\uff0e\n\n```examples\\NCESIoT\\r2ca_app.cpp\n#include \"r2ca.h\"\n\n\nUltrasonic ultrasonic(3);\nvoid setup()\n{\n\tSerial.begin(115200);\n}\nvoid loop()\n{\n\tlong RangeInCentimeters;\n\tRangeInCentimeters = ultrasonic.MeasureInCentimeters(); // two measurements should keep an interval\n\tSerial.print(RangeInCentimeters);//0~400cm\n\tSerial.println(\" cm\");\n\tdelay(250);\n}\n```\n\n\n\u6b21\u306bUltora Sonic\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d3\u30eb\u30c9\u5bfe\u8c61\u3068\u3057\u307e\u3059\uff0e./Grove_Ultrasonic_Ranger\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\uff0c\u30bd\u30fc\u30b9\u304c\u7f6e\u304b\u308c\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u3068.c/.cpp\u3092 examples\\NCESIoT\\Makefile\u306b\u767b\u9332\u3057\u307e\u3059\uff0e\n\nUltora Sonic\u306e\u5834\u5408\uff0c./Grove_Ultrasonic_Ranger\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u7f6e\u304b\u308c\u3066\u3044\u308b\n\u305f\u3081\uff0cAPPL_DIR\u306b\u767b\u9332\u3057\u307e\u3059\uff0e\u30b3\u30f3\u30d1\u30a4\u30eb\u5bfe\u8c61\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u306fUltrasonic.cpp\n\u304c\u3042\u308b\u305f\u3081\uff0c\u3053\u308c\u3092APPL_CXXOBJS\u306b\u767b\u9332\u3057\u307e\u3059\uff0e\n\n```examples\\NCESIoT\\Makefile\nAPPL_DIR     += ./Grove_Ultrasonic_Ranger\nAPPL_CXXOBJS += Ultrasonic.o\nAPPL_COBJS   += \n```\n\n\u6700\u5f8c\u306bdo_make.bat\u3092\u5b9f\u884c\u3059\u308b\u3068\u30d3\u30eb\u30c9\u3055\u308c\uff0cdo_run.bat\u3092\u5b9f\u884c\u3059\u308b\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e\u30b5\u30fc\u30dc\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u901a\u308a\u306b\u52d5\u4f5c\u3059\u308b\u306f\u305a\u3067\u3059\uff0e\n\n# Grove - OLED Display 1.12\n\nUltora Sonic\u3067\u53d6\u5f97\u3057\u305f\u5024\u3092OLED\u306b\u8868\u793a\u3057\u307e\u3059\uff0e\n\n##\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nM0\u306bNCES IoT Base Shield \u3092\u53d6\u308a\u4ed8\u3051\u3066\uff0c\u3055\u3089\u306bUltrasonic Ranger\u3092D3\u306b\u63a5\u7d9a\u3057\u307e\u3059\uff0eOLED\u306fI2C\u63a5\u7d9a\u306a\u306e\u3067\uff0cI2C\u3068\u66f8\u3044\u3066\u3042\u308b\u30b3\u30cd\u30af\u30bf\u306e\u3044\u305a\u308c\u304b\u306b\u63a5\u7d9a\u3057\u307e\u3059\uff0e\n\n<img width=\"400\" alt=\"aFullSizeRender.jpg.jpg\" src=https://qiita-image-store.s3.amazonaws.com/0/106870/f87799db-13ae-38ca-3248-356a6b61a248.jpeg>\n\n##\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n\n\u4e0a\u8a18\u3068\u540c\u69d8\u306b[OLED\u306eWiki](http://www.seeedstudio.com/wiki/Grove_-_OLED_Display_1.12%22)\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e\n\n\u6b21\u306b\u30b5\u30f3\u30d7\u30eb\u3092\u53c2\u8003\u306bUltora Sonic\u306e\u5024\u3092OLED\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u307e\u3059\uff0e\n\n```examples\\NCESIoT\\r2ca_app.cpp\n#include <Wire.h>\n#include <SeeedGrayOLED.h>\n#include <avr/pgmspace.h>\n#include \"Ultrasonic.h\"\n\nUltrasonic ultrasonic(3);\n\nvoid setup()\n{\n    Wire.begin();\n    SeeedGrayOled.init();             //initialize SEEED OLED display\n    SeeedGrayOled.clearDisplay();     //Clear Display.\n    SeeedGrayOled.setNormalDisplay(); //Set Normal Display Mode\n    SeeedGrayOled.setVerticalMode();  // Set to vertical mode for displaying text\n}\n \nvoid loop()\n{\n    long RangeInCentimeters;\n\n    SeeedGrayOled.setTextXY(0,0);  //set Cursor to ith line, 0th column\n    SeeedGrayOled.setGrayLevel(15); //Set Grayscale level. Any number between 0 - 15.    \n    RangeInCentimeters = ultrasonic.MeasureInCentimeters(); // two measurements should keep an interval\n    SeeedGrayOled.putNumber(RangeInCentimeters);//0~400cm\n    SeeedGrayOled.putString(\" cm      \");\n    delay(250);    \n}\n```\n\nMakefile\u306b\u30d5\u30a9\u30eb\u30c0\u3084\u30d3\u30eb\u30c9\u5bfe\u8c61\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0eOLED\u306fI2C\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067USE_WIRE\u3092true\u306b\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\n\n\n- examples\\NCESIoT\\Makefile\n- \n```examples\\NCESIoT\\Makefile\nUSE_WIRE = true\n#\nAPPL_DIR     += ./LCD_Display9696\nAPPL_CXXOBJS += SeeedGrayOLED.o\nAPPL_COBJS   += \n```\n\n#\u30de\u30eb\u30c1\u30bf\u30b9\u30af\n\n\u30b5\u30fc\u30dc\u3068UltoraSonic\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u305d\u308c\u305e\u308c\u5225\u30bf\u30b9\u30af\u3067\u5b9f\u884c\u3057\u307e\u3059\uff0e\u5909\u66f4\u306f\u7c21\u5358\u3067\uff0c\u30bf\u30b9\u30af\u6570\u3092\uff12\u3068\u3057\u3066\uff0c\u7247\u65b9\u306esetup\u306e\u5185\u5bb9\u3092setup\u306b\uff0cloop\u3092loop1\u306b\u3059\u308btask1_\u3092\u4ed8\u3051\u308b\u3060\u3051\u3067\u3059\uff0e\n\n<img width=\"400\" alt=\"aFullSizeRender.jpg.jpg\" src=https://qiita-image-store.s3.amazonaws.com/0/106870/bb1f1ffa-977e-0415-a961-86df881929d9.jpeg>\n\n```examples\\NCESIoT\\r2ca_app.h\n#ifndef _R2CA_APP_H_\n#define _R2CA_APP_H_\n\n#define R2CA_NUM_TASK 1\n\n#endif /* _R2CA_APP_H_ */\n```\n\n```examples\\NCESIoT\\r2ca_app.cpp\n#include <Wire.h>\n#include <SeeedGrayOLED.h>\n#include <avr/pgmspace.h>\n#include \"Ultrasonic.h\"\n\nUltrasonic ultrasonic(3);\nextern void task1_setup();\n\nvoid setup()\n{\n    Wire.begin();\n    SeeedGrayOled.init();             //initialize SEEED OLED display\n    SeeedGrayOled.clearDisplay();     //Clear Display.\n    SeeedGrayOled.setNormalDisplay(); //Set Normal Display Mode\n    SeeedGrayOled.setVerticalMode();  // Set to vertical mode for displaying text\n\n    task1_setup();\n}\n \nvoid loop()\n{\n    long RangeInCentimeters;\n\n    SeeedGrayOled.setTextXY(0,0);  //set Cursor to ith line, 0th column\n    SeeedGrayOled.setGrayLevel(15); //Set Grayscale level. Any number between 0 - 15.    \n    RangeInCentimeters = ultrasonic.MeasureInCentimeters(); // two measurements should keep an interval\n    SeeedGrayOled.putNumber(RangeInCentimeters);//0~400cm\n    SeeedGrayOled.putString(\" cm      \");\n    delay(250);    \n}\n\n/* Sweep\n by BARRAGAN <http://barraganstudio.com> \n This example code is in the public domain.\n\n modified 8 Nov 2013\n by Scott Fitzgerald\n http://arduino.cc/en/Tutorial/Sweep\n*/ \n\n#include <Servo.h> \n \nServo myservo;  // create servo object to control a servo \n                // twelve servo objects can be created on most boards\n \nint pos = 0;    // variable to store the servo position \n \nvoid task1_setup() \n{ \n  myservo.attach(2);  // attaches the servo on pin 9 to the servo object \n} \n \nvoid task1_loop() \n{ \n  for(pos = 0; pos <= 180; pos += 1) // goes from 0 degrees to 180 degrees \n  {                                  // in steps of 1 degree \n    myservo.write(pos);              // tell servo to go to position in variable 'pos' \n    delay(15);                       // waits 15ms for the servo to reach the position \n  } \n  for(pos = 180; pos>=0; pos-=1)     // goes from 180 degrees to 0 degrees \n  {                                \n    myservo.write(pos);              // tell servo to go to position in variable 'pos' \n    delay(15);                       // waits 15ms for the servo to reach the position \n  } \n} \n```\n\n#\u304a\u308f\u308a\u306b\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0cTOPPERS/R2CA\u306b\u3088\u308b NCES IoT Base Shield \u306eGrove\u6a5f\u80fd\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3057\u305f\uff0e\u4ed6\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3082\u540c\u69d8\u306bWiki\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n", "tags": ["Arduino", "TOPPERS", "R2CA", "IoT", "RTOS"]}