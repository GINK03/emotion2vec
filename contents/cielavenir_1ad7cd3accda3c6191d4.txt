{"tags": ["Ruby", "\u3069\u3046\u66f8\u304f", "yhpg"], "context": " More than 1 year has passed since last update.\u7279\u5225\u306a\u63a1\u70b9\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5fc5\u8981\u3068\u306a\u308b\u305f\u3081\u3001\u63a1\u70b9\u6a5f\u306e\u66f4\u65b0\u7248\u304c\u5fc5\u8981\u3067\u3059:\nhttps://github.com/cielavenir/procon/commit/a9721b435488a0a5e4d844a47782981713391a2e\n\nhena5.rb\n#!/usr/bin/env ruby\n#http://qiita.com/Nabetani/items/5c10c132e1f78131563f\n#http://nabetani.sakura.ne.jp/hena/ord5dahimi/\n\n# Since this requires special validator, grader version 1 is not applicable.\nSTDOUT.sync=true\nT={'3'=>3,'4'=>4,'5'=>5,'6'=>6,'7'=>7,'8'=>8,'9'=>9,'T'=>10,'J'=>11,'Q'=>12,'K'=>13,'A'=>14,'2'=>15}\n#S={'S'=>1,'D'=>2,'H'=>3,'C'=>4}\ndef pokersort(_a)\n    _a.sort{|a,b|\n        if a=='Jo'\n            1\n        elsif b=='Jo'\n            -1\n        else\n            x=T[a[1,1]]<=>T[b[1,1]]\n            #x!=0 ? x : S[a[0,1]]<=>S[b[0,1]]\n        end\n    }\nend\ndef cards(s)\n    pokersort(s.scan(/../))\nend\nwhile gets\n    a=$_.split(',')\n    if !a[1]|a[1]==''\n        puts '-'\n        next\n    end\n    field=cards(a[0])\n    if field.size==1&&field[0]=='Jo'\n        puts '-'\n        next\n    end\n    fieldsize=field.size;fieldnum=T[field[0][1,1]]\n    hand=cards(a[1])\n    joker=false\n    if hand.last=='Jo'\n        joker=true\n        hand.pop\n    end\n    result=[]\n    group=hand.group_by{|e|T[e[1,1]]}\n    (fieldnum+1).step(15){|i|\n        if group[i]\n            result+=group[i].combination(fieldsize).to_a+(joker&&fieldsize>1 ?group[i].combination(fieldsize-1).map{|e|e+['Jo']}:[])\n        end\n    }\n    result<<['Jo'] if fieldsize==1&&joker\n    puts result.empty? ? '-' : result.map(&:join)*','\nend\n\n\n\u7279\u5225\u306a\u63a1\u70b9\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5fc5\u8981\u3068\u306a\u308b\u305f\u3081\u3001\u63a1\u70b9\u6a5f\u306e\u66f4\u65b0\u7248\u304c\u5fc5\u8981\u3067\u3059:\nhttps://github.com/cielavenir/procon/commit/a9721b435488a0a5e4d844a47782981713391a2e\n\n```rb:hena5.rb\n#!/usr/bin/env ruby\n#http://qiita.com/Nabetani/items/5c10c132e1f78131563f\n#http://nabetani.sakura.ne.jp/hena/ord5dahimi/\n\n# Since this requires special validator, grader version 1 is not applicable.\nSTDOUT.sync=true\nT={'3'=>3,'4'=>4,'5'=>5,'6'=>6,'7'=>7,'8'=>8,'9'=>9,'T'=>10,'J'=>11,'Q'=>12,'K'=>13,'A'=>14,'2'=>15}\n#S={'S'=>1,'D'=>2,'H'=>3,'C'=>4}\ndef pokersort(_a)\n\t_a.sort{|a,b|\n\t\tif a=='Jo'\n\t\t\t1\n\t\telsif b=='Jo'\n\t\t\t-1\n\t\telse\n\t\t\tx=T[a[1,1]]<=>T[b[1,1]]\n\t\t\t#x!=0 ? x : S[a[0,1]]<=>S[b[0,1]]\n\t\tend\n\t}\nend\ndef cards(s)\n\tpokersort(s.scan(/../))\nend\nwhile gets\n\ta=$_.split(',')\n\tif !a[1]|a[1]==''\n\t\tputs '-'\n\t\tnext\n\tend\n\tfield=cards(a[0])\n\tif field.size==1&&field[0]=='Jo'\n\t\tputs '-'\n\t\tnext\n\tend\n\tfieldsize=field.size;fieldnum=T[field[0][1,1]]\n\thand=cards(a[1])\n\tjoker=false\n\tif hand.last=='Jo'\n\t\tjoker=true\n\t\thand.pop\n\tend\n\tresult=[]\n\tgroup=hand.group_by{|e|T[e[1,1]]}\n\t(fieldnum+1).step(15){|i|\n\t\tif group[i]\n\t\t\tresult+=group[i].combination(fieldsize).to_a+(joker&&fieldsize>1 ?group[i].combination(fieldsize-1).map{|e|e+['Jo']}:[])\n\t\tend\n\t}\n\tresult<<['Jo'] if fieldsize==1&&joker\n\tputs result.empty? ? '-' : result.map(&:join)*','\nend\n```\n"}