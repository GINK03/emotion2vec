{"context": " More than 1 year has passed since last update.\u30dd\u30b1\u30c3\u30c8\u30fb\u30df\u30af\u306fMIDI\u30c7\u30d0\u30a4\u30b9\u3060\u3068\u3044\u3046\u3053\u3068\u3067\u3001Java\u304b\u3089\u306a\u3089javax.sound.midi\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3048\u3070\u308f\u308a\u3068\u7c21\u5358\u306b\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\nJava\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\nPokeMikuSample.java\npackage pokemiku;\n\nimport javax.sound.midi.MidiDevice;\nimport javax.sound.midi.MidiSystem;\nimport javax.sound.midi.Receiver;\nimport javax.sound.midi.ShortMessage;\nimport javax.sound.midi.SysexMessage;\nimport javax.xml.bind.DatatypeConverter;\n\npublic class PokeMikuSample {\n    public static void main(String... args) throws Exception{\n        try(MidiDevice d = getDevice()){\n            d.open();\n            Receiver r = d.getReceiver();\n\n            byte[] data = DatatypeConverter.parseHexBinary(\"F0437909110A00\"+ 21 +\"F7\");\n            r.send(new SysexMessage(data, data.length), -1);\n            r.send(new ShortMessage(ShortMessage.NOTE_ON, 80, 127), -1);\n            Thread.sleep(2000);\n        }\n    }\n    static MidiDevice getDevice() throws Exception{\n        for(MidiDevice.Info i : MidiSystem.getMidiDeviceInfo()){\n            if(i.getName().startsWith(\"NSX-39\") && i.getDescription().startsWith(\"External\")){\n                return MidiSystem.getMidiDevice(i);\n            }\n        }\n        throw new RuntimeException();\n    }\n}\n\n\n\"NSX-39 \"\uff08\u6700\u5f8c\u306b\u30b9\u30da\u30fc\u30b9\u304c\u3042\u308b\uff09\u540d\u524d\u306e\u30c7\u30d0\u30a4\u30b9\u304c\u79c1\u306e\u74b0\u5883\u3060\u30682\u3064\u3042\u308a\u307e\u3057\u305f\u3002\u305d\u306e\u3046\u3061\u3001description\u306bExternal MIDI Port\u3068\u3042\u308b\u65b9\u304c\u4f7f\u3048\u307e\u3059\u3002\nSysexMessage\u3067\u767a\u97f3\u3059\u308b\u6587\u5b57\u3092\uff08\u30de\u30cb\u30e5\u30a2\u30eb\u88cf\u306b\u66f8\u3044\u3066\u3042\u308b\u3082\u306e\u306b\uff09\u5909\u3048\u3089\u308c\u307e\u3059\u3002\nShortMessage\u3067\u97f3\u7a0b\u3068\u97f3\u91cf\uff080\uff5e127\uff09\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\nClojure\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002Java\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3059\u306d\u3002\n\npokemiku_core.clj\n(ns pokemiku.core\n  (:import [javax.sound.midi MidiSystem ShortMessage SysexMessage MidiDevice]\n           [javax.xml.bind DatatypeConverter]))\n\n(def dev \n  (->> (seq (MidiSystem/getMidiDeviceInfo))\n       (filter #(re-find #\"NSX-39\" (:name (bean %))))\n       (filter #(re-find #\"External\" (:description (bean %))))\n       first\n       (MidiSystem/getMidiDevice)))\n\n(with-open [dev dev]\n  (.open dev)\n  (let [r (.getReceiver dev)\n        data (DatatypeConverter/parseHexBinary (str \"F0437909110A00\" 37 \"F7\"))]\n    (.send r (SysexMessage. data (count data)) -1)\n    (.send r (ShortMessage. ShortMessage/NOTE_ON 72 127) -1)\n    (Thread/sleep 2000)))\n\n\n\u308f\u308a\u3068\u7c21\u5358\u306b\u3067\u304d\u307e\u3057\u305f\u3002\nMIDI\u306e\u3053\u3068\u304c\u307e\u3060\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u3044\u3067\u3059\u304c\u3001\u4ed6\u306b\u3082\u3044\u308d\u3044\u308d\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\u30dd\u30b1\u30c3\u30c8\u30fb\u30df\u30af\u306fMIDI\u30c7\u30d0\u30a4\u30b9\u3060\u3068\u3044\u3046\u3053\u3068\u3067\u3001Java\u304b\u3089\u306a\u3089javax.sound.midi\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3048\u3070\u308f\u308a\u3068\u7c21\u5358\u306b\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\nJava\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n```PokeMikuSample.java\npackage pokemiku;\n\nimport javax.sound.midi.MidiDevice;\nimport javax.sound.midi.MidiSystem;\nimport javax.sound.midi.Receiver;\nimport javax.sound.midi.ShortMessage;\nimport javax.sound.midi.SysexMessage;\nimport javax.xml.bind.DatatypeConverter;\n\npublic class PokeMikuSample {\n    public static void main(String... args) throws Exception{\n        try(MidiDevice d = getDevice()){\n            d.open();\n            Receiver r = d.getReceiver();\n            \n            byte[] data = DatatypeConverter.parseHexBinary(\"F0437909110A00\"+ 21 +\"F7\");\n            r.send(new SysexMessage(data, data.length), -1);\n            r.send(new ShortMessage(ShortMessage.NOTE_ON, 80, 127), -1);\n            Thread.sleep(2000);\n        }\n    }\n    static MidiDevice getDevice() throws Exception{\n        for(MidiDevice.Info i : MidiSystem.getMidiDeviceInfo()){\n            if(i.getName().startsWith(\"NSX-39\") && i.getDescription().startsWith(\"External\")){\n                return MidiSystem.getMidiDevice(i);\n            }\n        }\n        throw new RuntimeException();\n    }\n}\n```\n\n\"NSX-39 \"\uff08\u6700\u5f8c\u306b\u30b9\u30da\u30fc\u30b9\u304c\u3042\u308b\uff09\u540d\u524d\u306e\u30c7\u30d0\u30a4\u30b9\u304c\u79c1\u306e\u74b0\u5883\u3060\u30682\u3064\u3042\u308a\u307e\u3057\u305f\u3002\u305d\u306e\u3046\u3061\u3001description\u306b`External MIDI Port`\u3068\u3042\u308b\u65b9\u304c\u4f7f\u3048\u307e\u3059\u3002\n\nSysexMessage\u3067\u767a\u97f3\u3059\u308b\u6587\u5b57\u3092\uff08\u30de\u30cb\u30e5\u30a2\u30eb\u88cf\u306b\u66f8\u3044\u3066\u3042\u308b\u3082\u306e\u306b\uff09\u5909\u3048\u3089\u308c\u307e\u3059\u3002\nShortMessage\u3067\u97f3\u7a0b\u3068\u97f3\u91cf\uff080\uff5e127\uff09\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\nClojure\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002Java\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3059\u306d\u3002\n\n```pokemiku_core.clj\n(ns pokemiku.core\n  (:import [javax.sound.midi MidiSystem ShortMessage SysexMessage MidiDevice]\n           [javax.xml.bind DatatypeConverter]))\n\n(def dev \n  (->> (seq (MidiSystem/getMidiDeviceInfo))\n       (filter #(re-find #\"NSX-39\" (:name (bean %))))\n       (filter #(re-find #\"External\" (:description (bean %))))\n       first\n       (MidiSystem/getMidiDevice)))\n\n(with-open [dev dev]\n  (.open dev)\n  (let [r (.getReceiver dev)\n        data (DatatypeConverter/parseHexBinary (str \"F0437909110A00\" 37 \"F7\"))]\n    (.send r (SysexMessage. data (count data)) -1)\n    (.send r (ShortMessage. ShortMessage/NOTE_ON 72 127) -1)\n    (Thread/sleep 2000)))\n```\n\n\u308f\u308a\u3068\u7c21\u5358\u306b\u3067\u304d\u307e\u3057\u305f\u3002\nMIDI\u306e\u3053\u3068\u304c\u307e\u3060\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u3044\u3067\u3059\u304c\u3001\u4ed6\u306b\u3082\u3044\u308d\u3044\u308d\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n", "tags": ["Java1.8.0", "Clojure1.6.0"]}