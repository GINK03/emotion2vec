{"context": " More than 1 year has passed since last update.C++ \u3067\u30b3\u30eb\u30fc\u30c1\u30f3\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\u50d5\u306e\u5fc3\u306f\u751f\u7c8b\u306e\uff08\uff1f\uff09Windows\u30d7\u30ed\u30b0\u30e9\u30de\u3067\u3042\u308a\u4e00\u6614\u524d\u306f CreateFiber \u3067\u30b3\u30eb\u30fc\u30c1\u30f3\u7684\u306a\u3082\u306e\u3092\u81ea\u4f5c\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u73fe\u5728\u306f Boost C++ Libraries \u306b\u30b3\u30eb\u30fc\u30c1\u30f3\u6a5f\u80fd\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u7528\u3044\u3066\u30b3\u30eb\u30fc\u30c1\u30f3\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n\u74b0\u5883\n\nWindows 7 Home Premium 64bit\nVisual Studio 2013\n\n\nBoost \u306e\u5165\u624b\u3068\u8a2d\u7f6e\nBoost C++ Libraries \u306e\u30b5\u30a4\u30c8\u304b\u3089 Boost \u306e\u30a2\u30fc\u30ab\u30a4\u30d6\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\uff08\u305f\u307e\u305f\u307e\u624b\u5143\u306b\u3042\u3063\u305f\u306e\u3067\uff09boost_1_55_0.zip \u3067\u3002\n\u3053\u308c\u3092\u89e3\u51cd\u3057\u3066 C:\\boost_1_55_0 \u3068\u3057\u3066\u8a2d\u7f6e\u3002\n\nCoroutine \u95a2\u9023\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d3\u30eb\u30c9\nBoost \u306f\u30d8\u30c3\u30c0\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3060\u3051\u3067\u5229\u7528\u3067\u304d\u308b\u6a5f\u80fd\u3082\u591a\u3044\u3067\u3059\u304c\u3001\u4e00\u90e8\u6a5f\u80fd\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d3\u30eb\u30c9\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u4eca\u56de\u5229\u7528\u3059\u308b boost::coroutines \u3082\u30d3\u30eb\u30c9\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001\u307e\u305a\u30d3\u30eb\u30c9\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\nbjam \u751f\u6210\nVS2013 \u306e\u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u958b\u304d\u3001 C:\\boost_1_55_0 \u5185\u3067 bootstrap.bat \u3092\u5b9f\u884c\u3002bjam.exe \u3068\u3044\u3046\u30d3\u30eb\u30c9\u7528\u306e\u30c4\u30fc\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\nPATH\u8a2d\u5b9a\nC:\\boost_1_55_0 \u306b PATH \u3092\u901a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\uff08bjam.exe \u3092\u5229\u7528\u3059\u308b\u305f\u3081\uff09\n\n\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30d3\u30eb\u30c9\ncoroutine \u306e\u30d3\u30eb\u30c9\u3092\u884c\u3044\u307e\u3059\u3002\u4f75\u305b\u3066\u3001\u305d\u308c\u306b\u4f9d\u5b58\u3059\u308b context, system \u306e\u30d3\u30eb\u30c9\u3082\u884c\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n> cd C:\\boost_1_55_0\\libs\\coroutine\\build\n> bjam --toolset=msvc-12.0 link=static,shared threading=multi release debug stage\n> cd C:\\boost_1_55_0\\libs\\context\\build\n> bjam --toolset=msvc-12.0 link=static,shared threading=multi release debug stage\n> cd C:\\boost_1_55_0\\libs\\system\\build\n> bjam --toolset=msvc-12.0 link=static,shared threading=multi release debug stage\n\n\u4ee5\u4e0a\u3002\u3053\u308c\u3067\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30d3\u30eb\u30c9\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u306e\u5229\u7528\u6e96\u5099\nVisual Studio 2013 \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e Properties \u306b\u3066\u3002\nC/C++ - General - Additional Include Directories \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u8a2d\u5b9a\u3002\nC:\\boost_1_55_0\n\nLinker - General - Additional Library Directories \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u8a2d\u5b9a\u3002\nC:\\boost_1_55_0\\libs\\coroutine\\build\\stage;C:\\boost_1_55_0\\libs\\context\\build\\stage;C:\\boost_1_55_0\\libs\\system\\build\\stage\n\n\n\u30b5\u30f3\u30d7\u30eb\uff11\uff1a\u7c21\u5358\u306a\u5229\u7528\u4f8b\nyield \u5024\u3068\u3057\u3066 int \u5024\u3092\u7528\u3044\u305f\u7c21\u5358\u306a\u30eb\u30fc\u30d7\u3002\n\u95a2\u6570 loop() \u306b\u7a81\u5165\u3057\u305f\u5f8c\u3001\uff08\u305d\u3053\u306e\u30b9\u30bf\u30c3\u30af\u60c5\u5831\u3092\u4fdd\u6301\u3057\u305f\u307e\u307e\uff09\u30d6\u30ed\u30c3\u30af\u3092\u629c\u3051\u3001sample1() \u306e\u30d6\u30ed\u30c3\u30af\u306b\u79fb\u52d5\u3057\u3001int \u5024\u306e printf \u3092\u884c\u3044\u3001\u307e\u305f loop() \u306b\u7a81\u5165\u3057\u76f4\u3057\u3001\u524d\u56de\u306e\u9014\u4e2d\u304b\u3089\u306e\u51e6\u7406\u3092\u518d\u958b\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u304a\u5206\u304b\u308a\u3044\u305f\u3060\u3051\u308b\u3060\u308d\u3046\u304b\u3002\n\nsample1.cpp\n#include <stdio.h>\n#include <boost/coroutine/coroutine.hpp>\n\nvoid loop(boost::coroutines::coroutine<int()>::caller_type& yield)\n{\n    printf(\"loop start.\\n\");\n    for (int i = 0; i < 5; ++i) {\n        yield(i);\n    }\n    printf(\"loop end.\\n\");\n}\n\nvoid sample1()\n{\n    printf(\"sample1 start.\\n\");\n    boost::coroutines::coroutine<int()> routine(loop);\n    while (routine) {\n        int n = routine.get();\n        printf(\"n = %d\\n\", n);\n        routine();\n    }\n    printf(\"sample1 end.\\n\");\n}\n\n\n\n\u51fa\u529b\u7d50\u679c\nsample1 start.\nloop start.\nn = 0\nn = 1\nn = 2\nn = 3\nn = 4\nloop end.\nsample1 end.\n\n\n\n\u30b5\u30f3\u30d7\u30eb\uff12\uff1a\u5fdc\u7528\u4f8b\n\u500b\u4eba\u7684\u306a\u597d\u307f\u3068\u3057\u3066\u3001\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u3060\u3051\u3067\u30b9\u30ec\u30c3\u30c9\u3084\u30b3\u30eb\u30fc\u30c1\u30f3\u304c\u81ea\u52d5\u7a3c\u50cd\u3057\u3060\u3059\u30e2\u30c7\u30eb\u304c\u597d\u304d\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u305d\u3093\u306a\u30af\u30e9\u30b9 Coroutine \u3092\u4f5c\u3063\u3066\u307f\u305f\u3002Coroutine \u30af\u30e9\u30b9\u5b9f\u88c5\u306f GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u53c2\u7167\u3002\n\u203b\u3053\u3053\u304b\u3089\u3084\u3084\u81ea\u5206\u4e16\u754c\u306b\u5165\u3063\u3066\u3044\u3066\u89e3\u8aac\u304c\u7279\u6b8a\u306a\u306e\u3067\u6ce8\u610f\u3002\u5206\u304b\u308a\u3084\u3059\u304f\u66f8\u3051\u306a\u304f\u3066\u3059\u307f\u307e\u305b\u3093\u3002\u6298\u3092\u898b\u3066\u5225\u8a18\u4e8b\u306b\u3066\u89e3\u8aac\u3057\u76f4\u3057\u305f\u3044\u3002\n\u30b2\u30fc\u30e0\u5b9f\u88c5\u3067\u4f7f\u3046\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u3002\uff08\u30b2\u30fc\u30e0\u5b9f\u88c5\u306e\u6587\u5316\u306e\u80cc\u666f\u306b\u3064\u3044\u3066\u306f\u3059\u307f\u307e\u305b\u3093\u9069\u5f53\u306b\u304a\u5bdf\u3057\u304a\u9858\u3044\u3057\u307e\u3059\u3002\u6587\u5b57\u6570\u304c\u8db3\u308a\u307e\u305b\u3093\u3002\uff09\nCoroutine \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3001run() \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u306e\u30af\u30e9\u30b9\u304c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u305f\u5f8c\u306b\u81ea\u52d5\u7684\u306b run() \u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u4ed5\u7d44\u307f\u3002run() \u306e\u4e2d\u8eab\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7d44\u307e\u308c\u308b\u60f3\u5b9a\u3002\nclass MyCoroutine : public Coroutine{\n    void run()\n    {\n        hoge(); // 1\u30d5\u30ec\u30fc\u30e0\u76ee\u306e\u51e6\u7406\n        yield(); // wait\n        hoge(); // 2\u30d5\u30ec\u30fc\u30e0\u76ee\u306e\u51e6\u7406\n        yield(); // wait\n        hoge(); // 3\u30d5\u30ec\u30fc\u30e0\u76ee\u306e\u51e6\u7406\n        yield(); // wait\n        // \u3053\u3053\u307e\u3067\u6765\u308b\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u81ea\u6bba.\n    }\n};\n\n\u30b3\u30eb\u30fc\u30c1\u30f3\u306f CoroutineManager \u306b\u3088\u308a\u99c6\u52d5\u3059\u308b\u3002\n\n\nCoroutineManager::instance()->go(); \u30671\u30d5\u30ec\u30fc\u30e0\u5206\u99c6\u52d5\u3002\n\nwhile (CoroutineManager::instance()->go()){ sleep(); } \u3067\u5168\u30b3\u30eb\u30fc\u30c1\u30f3\u304c\u3059\u3079\u3066\u7d42\u308f\u308b\u307e\u3067\u7121\u9650\u306b\u99c6\u52d5\u3002\n\n\u5229\u7528\u30b3\u30fc\u30c9\u306e\u5b8c\u5168\u306a\u30b3\u30fc\u30c9\u4f8b\u306f\u4ee5\u4e0b\u3002\n\nsample2.cpp\nclass MyCoroutine : public Coroutine{\npublic:\n    MyCoroutine(std::string name, int cnt){\n        m_name = name;\n        m_cnt = cnt;\n        printf(\"%s start.\\n\", m_name.c_str());\n    }\n    ~MyCoroutine(){\n        printf(\"%s end.\\n\", m_name.c_str());\n    }\n    void run(){\n        for (int i = 0; i < m_cnt; i++){\n            yield();\n            printf(\"%s %d\\n\", m_name.c_str(), i);\n        }\n    }\nprivate:\n    std::string m_name;\n    int m_cnt;\n};\n\nvoid sample2()\n{\n    new MyCoroutine(\"hello\", 4);\n    new MyCoroutine(\"world\", 2);\n\n    printf(\"manager start.\\n\");\n    while (CoroutineManager::instance()->go()){\n        printf(\"manager sleep\\n\");\n    }\n    printf(\"manager end.\\n\");\n}\n\n\n\n\u51fa\u529b\u7d50\u679c\nhello start.\nworld start.\nmanager start.\nmanager sleep\nhello 0\nworld 0\nmanager sleep\nhello 1\nworld 1\nmanager sleep\nhello 2\nworld end.\nmanager sleep\nhello 3\nmanager sleep\nhello end.\nmanager end.\n\n\n\u3053\u306e\u2191\u89e3\u8aac\u3067\u3057\u3063\u304f\u308a\u6765\u3066\u304f\u308c\u305f\u5947\u7279\u306a\u65b9\u306b\u3068\u3063\u3066\u3001\u4ee5\u4e0b\u306b\u7d9a\u304f\u89e3\u8aac\u306f\u3068\u3066\u3082Easy\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\uff13\uff1a\u30e9\u30e0\u30c0\u5f0f\u306b\u3088\u308a\u30b3\u30eb\u30fc\u30c1\u30f3\u51e6\u7406\u3092\u5b9a\u7fa9\u3059\u308b\n\u3061\u3087\u3063\u3068\u3057\u305f\u5c0f\u3055\u3044\u51e6\u7406\u3092\u30b3\u30eb\u30fc\u30c1\u30f3\u3067\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306b\u3001\u305d\u306e\u305f\u3081\u3060\u3051\u306b\u3072\u3068\u3064\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u306e\u306f\u3061\u3087\u3063\u3068\u8ca0\u8377\u304c\u5927\u304d\u3044\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u624b\u8efd\u306b\u30b3\u30eb\u30fc\u30c1\u30f3\u3092\u99c6\u52d5\u3055\u305b\u308b\u624b\u6bb5\u3092\u63d0\u4f9b\u3057\u305f\u3044\u3002\nTinyCoroutine \u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u305f\u3002\u3053\u306e\u30af\u30e9\u30b9\u306f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u3059\u3060\u3051\u3067\u305d\u306e\u51e6\u7406\u304c\u30b3\u30eb\u30fc\u30c1\u30f3\u4e0a\u3067\u5b9f\u884c\u3055\u308c\u308b\u4ed5\u7d44\u307f\u3092\u63d0\u4f9b\u3059\u308b\u3002\n\nsample3.cpp\nvoid sample3()\n{\n    new TinyCoroutine([](Coroutine* coroutine){\n        for (int i = 0; i < 3; i++){\n            printf(\"aa %d\\n\", i);\n            coroutine->yield();\n        }\n    });\n    new TinyCoroutine([](Coroutine* coroutine){\n        for (int i = 0; i < 2; i++){\n            printf(\"bb %d\\n\", i);\n            coroutine->yield();\n        }\n    });\n\n    printf(\"manager start.\\n\");\n    while (CoroutineManager::instance()->go()){\n        printf(\"manager sleep\\n\");\n    }\n    printf(\"manager end.\\n\");\n}\n\n\n\n\u51fa\u529b\u7d50\u679c\nmanager start.\naa 0\nbb 0\nmanager sleep\naa 1\nbb 1\nmanager sleep\naa 2\nmanager sleep\nmanager sleep\nmanager end.\n\n\n\u4ee5\u4e0a\u3001\u4ffa\u4ffa\u30af\u30e9\u30b9\u306e\u7d39\u4ecb\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\u53cd\u7701\u306f\u5c11\u3057\u3057\u3066\u3044\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\u4ee5\u4e0b\u306b\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4e0a\u3052\u307e\u3057\u305f\u3002\nhttps://github.com/kobake/BoostCoroutineSample\nC++ \u3067\u30b3\u30eb\u30fc\u30c1\u30f3\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u50d5\u306e\u5fc3\u306f\u751f\u7c8b\u306e\uff08\uff1f\uff09Windows\u30d7\u30ed\u30b0\u30e9\u30de\u3067\u3042\u308a\u4e00\u6614\u524d\u306f CreateFiber \u3067\u30b3\u30eb\u30fc\u30c1\u30f3\u7684\u306a\u3082\u306e\u3092\u81ea\u4f5c\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u73fe\u5728\u306f [Boost C++ Libraries](http://www.boost.org/) \u306b\u30b3\u30eb\u30fc\u30c1\u30f3\u6a5f\u80fd\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u7528\u3044\u3066\u30b3\u30eb\u30fc\u30c1\u30f3\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n## \u74b0\u5883\n- Windows 7 Home Premium 64bit\n- Visual Studio 2013\n\n## Boost \u306e\u5165\u624b\u3068\u8a2d\u7f6e\n[Boost C++ Libraries](http://www.boost.org/) \u306e\u30b5\u30a4\u30c8\u304b\u3089 Boost \u306e\u30a2\u30fc\u30ab\u30a4\u30d6\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\uff08\u305f\u307e\u305f\u307e\u624b\u5143\u306b\u3042\u3063\u305f\u306e\u3067\uff09boost_1_55_0.zip \u3067\u3002\n\n\u3053\u308c\u3092\u89e3\u51cd\u3057\u3066 ```C:\\boost_1_55_0``` \u3068\u3057\u3066\u8a2d\u7f6e\u3002\n\n## Coroutine \u95a2\u9023\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30d3\u30eb\u30c9\nBoost \u306f\u30d8\u30c3\u30c0\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3060\u3051\u3067\u5229\u7528\u3067\u304d\u308b\u6a5f\u80fd\u3082\u591a\u3044\u3067\u3059\u304c\u3001\u4e00\u90e8\u6a5f\u80fd\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d3\u30eb\u30c9\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u4eca\u56de\u5229\u7528\u3059\u308b boost::coroutines \u3082\u30d3\u30eb\u30c9\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001\u307e\u305a\u30d3\u30eb\u30c9\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n### bjam \u751f\u6210\nVS2013 \u306e\u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u958b\u304d\u3001 ```C:\\boost_1_55_0``` \u5185\u3067 bootstrap.bat \u3092\u5b9f\u884c\u3002```bjam.exe``` \u3068\u3044\u3046\u30d3\u30eb\u30c9\u7528\u306e\u30c4\u30fc\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n### PATH\u8a2d\u5b9a\n```C:\\boost_1_55_0``` \u306b PATH \u3092\u901a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\uff08bjam.exe \u3092\u5229\u7528\u3059\u308b\u305f\u3081\uff09\n\n### \u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30d3\u30eb\u30c9\ncoroutine \u306e\u30d3\u30eb\u30c9\u3092\u884c\u3044\u307e\u3059\u3002\u4f75\u305b\u3066\u3001\u305d\u308c\u306b\u4f9d\u5b58\u3059\u308b context, system \u306e\u30d3\u30eb\u30c9\u3082\u884c\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n```\n> cd C:\\boost_1_55_0\\libs\\coroutine\\build\n> bjam --toolset=msvc-12.0 link=static,shared threading=multi release debug stage\n> cd C:\\boost_1_55_0\\libs\\context\\build\n> bjam --toolset=msvc-12.0 link=static,shared threading=multi release debug stage\n> cd C:\\boost_1_55_0\\libs\\system\\build\n> bjam --toolset=msvc-12.0 link=static,shared threading=multi release debug stage\n```\n\n\u4ee5\u4e0a\u3002\u3053\u308c\u3067\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30d3\u30eb\u30c9\u3067\u304d\u307e\u3057\u305f\u3002\n\n## \u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u306e\u5229\u7528\u6e96\u5099\nVisual Studio 2013 \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e Properties \u306b\u3066\u3002\n\nC/C++ - General - Additional Include Directories \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u8a2d\u5b9a\u3002\n\n```\nC:\\boost_1_55_0\n```\n\n\nLinker - General - Additional Library Directories \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u8a2d\u5b9a\u3002\n\n```\nC:\\boost_1_55_0\\libs\\coroutine\\build\\stage;C:\\boost_1_55_0\\libs\\context\\build\\stage;C:\\boost_1_55_0\\libs\\system\\build\\stage\n```\n\n## \u30b5\u30f3\u30d7\u30eb\uff11\uff1a\u7c21\u5358\u306a\u5229\u7528\u4f8b\nyield \u5024\u3068\u3057\u3066 int \u5024\u3092\u7528\u3044\u305f\u7c21\u5358\u306a\u30eb\u30fc\u30d7\u3002\n\n\u95a2\u6570 ```loop()``` \u306b\u7a81\u5165\u3057\u305f\u5f8c\u3001\uff08\u305d\u3053\u306e\u30b9\u30bf\u30c3\u30af\u60c5\u5831\u3092\u4fdd\u6301\u3057\u305f\u307e\u307e\uff09\u30d6\u30ed\u30c3\u30af\u3092\u629c\u3051\u3001```sample1()``` \u306e\u30d6\u30ed\u30c3\u30af\u306b\u79fb\u52d5\u3057\u3001int \u5024\u306e printf \u3092\u884c\u3044\u3001\u307e\u305f ```loop()``` \u306b\u7a81\u5165\u3057\u76f4\u3057\u3001\u524d\u56de\u306e\u9014\u4e2d\u304b\u3089\u306e\u51e6\u7406\u3092\u518d\u958b\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u304a\u5206\u304b\u308a\u3044\u305f\u3060\u3051\u308b\u3060\u308d\u3046\u304b\u3002\n\n```cpp:sample1.cpp\n#include <stdio.h>\n#include <boost/coroutine/coroutine.hpp>\n\nvoid loop(boost::coroutines::coroutine<int()>::caller_type& yield)\n{\n\tprintf(\"loop start.\\n\");\n\tfor (int i = 0; i < 5; ++i) {\n\t\tyield(i);\n\t}\n\tprintf(\"loop end.\\n\");\n}\n\nvoid sample1()\n{\n\tprintf(\"sample1 start.\\n\");\n\tboost::coroutines::coroutine<int()> routine(loop);\n\twhile (routine) {\n\t\tint n = routine.get();\n\t\tprintf(\"n = %d\\n\", n);\n\t\troutine();\n\t}\n\tprintf(\"sample1 end.\\n\");\n}\n```\n\n```text:\u51fa\u529b\u7d50\u679c\nsample1 start.\nloop start.\nn = 0\nn = 1\nn = 2\nn = 3\nn = 4\nloop end.\nsample1 end.\n```\n\n## \u30b5\u30f3\u30d7\u30eb\uff12\uff1a\u5fdc\u7528\u4f8b\n\u500b\u4eba\u7684\u306a\u597d\u307f\u3068\u3057\u3066\u3001\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u3060\u3051\u3067\u30b9\u30ec\u30c3\u30c9\u3084\u30b3\u30eb\u30fc\u30c1\u30f3\u304c\u81ea\u52d5\u7a3c\u50cd\u3057\u3060\u3059\u30e2\u30c7\u30eb\u304c\u597d\u304d\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u305d\u3093\u306a\u30af\u30e9\u30b9 Coroutine \u3092\u4f5c\u3063\u3066\u307f\u305f\u3002[Coroutine \u30af\u30e9\u30b9\u5b9f\u88c5\u306f GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u53c2\u7167](https://github.com/kobake/BoostCoroutineSample)\u3002\n\n\u203b\u3053\u3053\u304b\u3089\u3084\u3084\u81ea\u5206\u4e16\u754c\u306b\u5165\u3063\u3066\u3044\u3066\u89e3\u8aac\u304c\u7279\u6b8a\u306a\u306e\u3067\u6ce8\u610f\u3002\u5206\u304b\u308a\u3084\u3059\u304f\u66f8\u3051\u306a\u304f\u3066\u3059\u307f\u307e\u305b\u3093\u3002\u6298\u3092\u898b\u3066\u5225\u8a18\u4e8b\u306b\u3066\u89e3\u8aac\u3057\u76f4\u3057\u305f\u3044\u3002\n\n\u30b2\u30fc\u30e0\u5b9f\u88c5\u3067\u4f7f\u3046\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u3002\uff08\u30b2\u30fc\u30e0\u5b9f\u88c5\u306e\u6587\u5316\u306e\u80cc\u666f\u306b\u3064\u3044\u3066\u306f\u3059\u307f\u307e\u305b\u3093\u9069\u5f53\u306b\u304a\u5bdf\u3057\u304a\u9858\u3044\u3057\u307e\u3059\u3002\u6587\u5b57\u6570\u304c\u8db3\u308a\u307e\u305b\u3093\u3002\uff09\nCoroutine \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3001```run()``` \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u306e\u30af\u30e9\u30b9\u304c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u305f\u5f8c\u306b\u81ea\u52d5\u7684\u306b ```run()``` \u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u4ed5\u7d44\u307f\u3002```run()``` \u306e\u4e2d\u8eab\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7d44\u307e\u308c\u308b\u60f3\u5b9a\u3002\n\n```cpp\nclass MyCoroutine : public Coroutine{\n    void run()\n    {\n        hoge(); // 1\u30d5\u30ec\u30fc\u30e0\u76ee\u306e\u51e6\u7406\n        yield(); // wait\n        hoge(); // 2\u30d5\u30ec\u30fc\u30e0\u76ee\u306e\u51e6\u7406\n        yield(); // wait\n        hoge(); // 3\u30d5\u30ec\u30fc\u30e0\u76ee\u306e\u51e6\u7406\n        yield(); // wait\n        // \u3053\u3053\u307e\u3067\u6765\u308b\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u81ea\u6bba.\n    }\n};\n```\n\n\u30b3\u30eb\u30fc\u30c1\u30f3\u306f ```CoroutineManager``` \u306b\u3088\u308a\u99c6\u52d5\u3059\u308b\u3002\n\n- ```CoroutineManager::instance()->go();``` \u30671\u30d5\u30ec\u30fc\u30e0\u5206\u99c6\u52d5\u3002\n- ```while (CoroutineManager::instance()->go()){ sleep(); }``` \u3067\u5168\u30b3\u30eb\u30fc\u30c1\u30f3\u304c\u3059\u3079\u3066\u7d42\u308f\u308b\u307e\u3067\u7121\u9650\u306b\u99c6\u52d5\u3002\n\n\u5229\u7528\u30b3\u30fc\u30c9\u306e\u5b8c\u5168\u306a\u30b3\u30fc\u30c9\u4f8b\u306f\u4ee5\u4e0b\u3002\n\n```cpp:sample2.cpp\nclass MyCoroutine : public Coroutine{\npublic:\n\tMyCoroutine(std::string name, int cnt){\n\t\tm_name = name;\n\t\tm_cnt = cnt;\n\t\tprintf(\"%s start.\\n\", m_name.c_str());\n\t}\n\t~MyCoroutine(){\n\t\tprintf(\"%s end.\\n\", m_name.c_str());\n\t}\n\tvoid run(){\n\t\tfor (int i = 0; i < m_cnt; i++){\n\t\t\tyield();\n\t\t\tprintf(\"%s %d\\n\", m_name.c_str(), i);\n\t\t}\n\t}\nprivate:\n\tstd::string m_name;\n\tint m_cnt;\n};\n\nvoid sample2()\n{\n\tnew MyCoroutine(\"hello\", 4);\n\tnew MyCoroutine(\"world\", 2);\n\t\n\tprintf(\"manager start.\\n\");\n\twhile (CoroutineManager::instance()->go()){\n\t\tprintf(\"manager sleep\\n\");\n\t}\n\tprintf(\"manager end.\\n\");\n}\n```\n\n```text:\u51fa\u529b\u7d50\u679c\nhello start.\nworld start.\nmanager start.\nmanager sleep\nhello 0\nworld 0\nmanager sleep\nhello 1\nworld 1\nmanager sleep\nhello 2\nworld end.\nmanager sleep\nhello 3\nmanager sleep\nhello end.\nmanager end.\n```\n\n\u3053\u306e\u2191\u89e3\u8aac\u3067\u3057\u3063\u304f\u308a\u6765\u3066\u304f\u308c\u305f\u5947\u7279\u306a\u65b9\u306b\u3068\u3063\u3066\u3001\u4ee5\u4e0b\u306b\u7d9a\u304f\u89e3\u8aac\u306f\u3068\u3066\u3082Easy\u3067\u3059\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\uff13\uff1a\u30e9\u30e0\u30c0\u5f0f\u306b\u3088\u308a\u30b3\u30eb\u30fc\u30c1\u30f3\u51e6\u7406\u3092\u5b9a\u7fa9\u3059\u308b\n\n\u3061\u3087\u3063\u3068\u3057\u305f\u5c0f\u3055\u3044\u51e6\u7406\u3092\u30b3\u30eb\u30fc\u30c1\u30f3\u3067\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306b\u3001\u305d\u306e\u305f\u3081\u3060\u3051\u306b\u3072\u3068\u3064\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u306e\u306f\u3061\u3087\u3063\u3068\u8ca0\u8377\u304c\u5927\u304d\u3044\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u624b\u8efd\u306b\u30b3\u30eb\u30fc\u30c1\u30f3\u3092\u99c6\u52d5\u3055\u305b\u308b\u624b\u6bb5\u3092\u63d0\u4f9b\u3057\u305f\u3044\u3002\n\n[TinyCoroutine \u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u305f](https://github.com/kobake/BoostCoroutineSample)\u3002\u3053\u306e\u30af\u30e9\u30b9\u306f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u3059\u3060\u3051\u3067\u305d\u306e\u51e6\u7406\u304c\u30b3\u30eb\u30fc\u30c1\u30f3\u4e0a\u3067\u5b9f\u884c\u3055\u308c\u308b\u4ed5\u7d44\u307f\u3092\u63d0\u4f9b\u3059\u308b\u3002\n\n```cpp:sample3.cpp\nvoid sample3()\n{\n\tnew TinyCoroutine([](Coroutine* coroutine){\n\t\tfor (int i = 0; i < 3; i++){\n\t\t\tprintf(\"aa %d\\n\", i);\n\t\t\tcoroutine->yield();\n\t\t}\n\t});\n\tnew TinyCoroutine([](Coroutine* coroutine){\n\t\tfor (int i = 0; i < 2; i++){\n\t\t\tprintf(\"bb %d\\n\", i);\n\t\t\tcoroutine->yield();\n\t\t}\n\t});\n\n\tprintf(\"manager start.\\n\");\n\twhile (CoroutineManager::instance()->go()){\n\t\tprintf(\"manager sleep\\n\");\n\t}\n\tprintf(\"manager end.\\n\");\n}\n```\n\n```text:\u51fa\u529b\u7d50\u679c\nmanager start.\naa 0\nbb 0\nmanager sleep\naa 1\nbb 1\nmanager sleep\naa 2\nmanager sleep\nmanager sleep\nmanager end.\n```\n\n\u4ee5\u4e0a\u3001\u4ffa\u4ffa\u30af\u30e9\u30b9\u306e\u7d39\u4ecb\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\u53cd\u7701\u306f\u5c11\u3057\u3057\u3066\u3044\u308b\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\u4ee5\u4e0b\u306b\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4e0a\u3052\u307e\u3057\u305f\u3002\nhttps://github.com/kobake/BoostCoroutineSample\n", "tags": ["C++", "boost"]}