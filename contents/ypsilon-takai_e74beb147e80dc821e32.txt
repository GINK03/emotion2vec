{"context": " More than 1 year has passed since last update.\n\n\u30de\u30af\u30ed\u3092\u3064\u304b\u3046\u3079\u304d\u304b\u3069\u3046\u306a\u306e\u304b\n\u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u7d4c\u7531\u3067zlog\u3068\u3044\u3046\u30c7\u30d0\u30a4\u30b9\u3068\u306e\u901a\u4fe1\u3092\u3059\u308b\u30c4\u30fc\u30eb\u3092\u4f5c\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u9014\u4e2d\u3067\u3001\u51e6\u7406\u3092\u30de\u30af\u30ed\u306b\u3059\u3079\u304d\u304b\u3069\u3046\u304b\u3044\u308d\u3044\u308d\u8003\u3048\u305f\u306e\u3067\u3001\u305d\u306e\u3068\u304d\u306e\u3053\u3068\u3092\u3002\n\u672c\u5f53\u306f\u3001\u3053\u306e\u30c4\u30fc\u30eb\u305d\u306e\u3082\u306e\u3092\u984c\u6750\u306b\u4f7f\u7528\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u6848\u306e\u5b9a\u3001\u632b\u6298\u3057\u307e\u3057\u305f\u3002\n\nzlog\u3068\u306e\u901a\u4fe1\u306b\u3064\u3044\u3066\nzlog\u306f\u30e9\u30b8\u30b3\u30f3\u306b\u7a4d\u3080\u3088\u3046\u306b\u4f5c\u3089\u308c\u305f\u5c0f\u578b\u306e\u9ad8\u5ea6\u8a08\u3067\u3001\u8d77\u52d5\u3059\u308b\u3068\u4e00\u5b9a\u6642\u9593\u3054\u3068\u306b\u9ad8\u5ea6(=\u6c17\u5727)\u3092\u6e2c\u5b9a\u3057\u3066\u3001\u305d\u308c\u3092\u8a18\u61b6\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u53d6\u3063\u305f\u30c7\u30fc\u30bf\u306f\u3001\u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u7d4c\u7531\u3067\u3084\u308a\u3068\u308a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30d7\u30ed\u30c8\u30b3\u30eb\u306fsniffer\u3067\u89e3\u6790\u3057\u306a\u304c\u3089\u306a\u306e\u3067\u3059\u304c\u3001\u308f\u304b\u308b\u7bc4\u56f2\u3067\u306f\u7c21\u5358\u3067\u30011\u30d0\u30a4\u30c8\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3001\u5fc5\u8981\u3067\u3042\u308c\u3070\u5f15\u6570\u3092\u4ed8\u3051\u3066\u9001\u308a\u307e\u3059\u3002\u7d50\u679c\u304c\u3042\u308b\u5834\u5408\u306f\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\u4f8b)  \n  \u9001\u4fe1 : v\n  \u5fdc\u7b54 : ZLOG\\rMOD3\\rv3-4\\rFeb 07 2006\\r\n\n\nclojure\u3067\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\nJAVA\u3067\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3068\u8a00\u3048\u3070\u3001\u4ee5\u524d\u4ed5\u4e8b\u3067\u30e2\u30c7\u30e0\u306e\u5236\u5fa1\u306b\u4f7f\u3063\u305fRXTX\u304c\u601d\u3044\u3064\u304d\u307e\u3059\u3002\n\u4eca\u56de\u3082\u3053\u308c\u3092\u4f7f\u304a\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u8abf\u3079\u3066\u307f\u308b\u3068\u3001\u3059\u3067\u306b\u3053\u306eRXTX\u306e\u30e9\u30c3\u30d1\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u305d\u306e\u540d\u3082\nserial-port\u3068\u305a\u3070\u308a\u306e\u540d\u524d\u3067\u3059\u3002\u4eca\u56de\u306f\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u57fa\u672c\u7684\u306b\u306f\u304a\u6c7a\u308a\u901a\u308aopen\u3057\u3066\u901a\u4fe1\u3057\u3066\u7d42\u3063\u305f\u3089close\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u3066\u3001\u5fdc\u7b54\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u3051\u53d6\u308a\u306f\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u767b\u9332\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 (\u3084\u308d\u3046\u3068\u601d\u3048\u3070\u3001\u4f4e\u30ec\u30d9\u30eb\u306eI/F\u3082\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059)\n\u4eca\u56de\u306e\u30c4\u30fc\u30eb\u3067\u306f\u3001\u30b3\u30de\u30f3\u30c9\u3054\u3068\u306bopen/close\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002 \u3053\u308c\u306f\u3001\u57fa\u672c\u7684\u306bzlog\u306e\u30b3\u30de\u30f3\u30c9\u304c\u72ec\u7acb\u3057\u3066\u3044\u3066\u3044\u3064\u3067\u3082\u9001\u4fe1\u3067\u304d\u308b\u3053\u3068\u3068\u3001\u4f7f\u3044\u304b\u305f\u304b\u3089\u3057\u3066\u30c7\u30d0\u30a4\u30b9\u305d\u306e\u3082\u306e\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u306f\u305d\u308c\u307b\u3069\u5927\u304f\u306a\u3044\u306e\u3067\u3001\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u7ba1\u7406\u3092\u3057\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\u3057\u305f\u304b\u3063\u305f\u305f\u3081\u3067\u3059\u3002\n\u3064\u307e\u308a\u3001zlog\u3068\u901a\u4fe1\u3059\u308b\u5834\u5408\u3001\n- open\u3059\u308b\n- \u30d0\u30c3\u30d5\u30a1\u3092\u7528\u610f\u3059\u308b\n- \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u767b\u9332\u3059\u308b\n- \u30b3\u30de\u30f3\u30c9\u3092\u9001\u4fe1\u3059\u308b\n- \u30d0\u30c3\u30d5\u30a1\u306e\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b\n- close\u3059\u308b\n\u3068\u3044\u3046\u51e6\u7406\u3092\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5b9f\u88c5\u7de8\n\n\u305d\u306e1 \u95a2\u6570\u7de8\n\u307e\u305a\u306f\u666e\u901a\u306b\u95a2\u6570\u5316\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n(defn z-open [port-name] ...)\n(defn z-close [conn] ...)\n(defn z-register-callback [conn] ...)\n(defn z-send-command [conn command & args] ...)\n\n\u3053\u3093\u306a\u95a2\u6570\u305f\u3061\u3092\u4f5c\u3063\u3066\u3001\u3084\u308a\u305f\u3044\u3053\u3068\u304c\u3042\u308c\u3070\u3001\n(defn get-version-info [port-name]\n  (let [connection (z-open port-name)\n        buff (atom [])]\n    (do (z-register-callback #(swap! buff conj %))\n        (z-send-command connection :version)  ;\u2605\n        (wait-for-data-end)\n        (z-close connection))\n    (into [] @buff)))\n\n\u3053\u306e\u3088\u3046\u306b\u95a2\u6570\u3092\u3064\u304f\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3067\u3082\u3001\u3053\u306e\u65b9\u6cd5\u3060\u3068\u3001\u2605\u306e\u3068\u3053\u308d\u304c\u9055\u3046\u3060\u3051\u306e\u95a2\u6570\u304c\u305f\u304f\u3055\u3093\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u305d\u3093\u306a\u3068\u304d\u306f\u30de\u30af\u30ed\u3067\u3059\u3088\u3002\n\n\u305d\u306e2 \u30de\u30af\u30ed\u7de8\n\u540c\u3058\u3088\u3046\u306a\u95a2\u6570\u304c\u305f\u304f\u3055\u3093\u3067\u304d\u3066\u3057\u307e\u3046\u3088\u3046\u306a\u3068\u304d\u306f\u30de\u30af\u30ed\u306b\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\n\n\u4f5c\u3063\u3066\u307f\u308b\n\u3055\u304d\u307b\u3069\u306e\u95a2\u6570\u3092\u3059\u306a\u304a\u306b\u30de\u30af\u30ed\u306b\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n(defmacro send-and-get-01 [port-name & commands]\n  '(let [connection# (z-open ~port-name)\n        buff# (atom [])]\n    (dorun (z-register-callback #(swap! buff# conj %))\n           ~@commands\n           (wait-for-data-end)\n           (z-close connection#))\n    (into [] @buff#)))\n\n\u2605\u306e\u4ed8\u3044\u3066\u3044\u305f\u3068\u3053\u308d\u3092\u3001\u30de\u30af\u30ed\u306e\u5f15\u6570\u306b\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n\u3053\u308c\u3067\u3055\u3063\u304d\u306e\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3068\u3001\n(defn get-version-info [port-name]\n   (send-and-get-01 port-name\n                    (z-send-command ??? :version))  ;!!!\n\n\u5f85\u3066\u5f85\u3066\u3002\n\u3053\u306e\u95a2\u6570\u306e???\u306e\u3068\u3053\u308d\u306b\u306f\u3001\u5f15\u6570\u3068\u3057\u3066open\u306e\u8fd4\u308a\u5024\u306econnection\u304c\u5fc5\u8981\u306a\u306e\u3067\u3059\u3002\n\u3068\u3053\u308d\u304c\u3001\u3053\u306e\u5024\u306f\u3001\u30de\u30af\u30ed\u306e\u4e2d\u306b\u5165\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3068\u304b\u3089\u306f\u898b\u3048\u306a\u3044\u306e\u3067\u6307\u5b9a\u3067\u304d\u307e\u305b\u3093\u3002\n\u3046\u30fc\u3093\u3002\n\u30a2\u30ca\u30d5\u30a9\u30ea\u30c3\u30af\u30de\u30af\u30ed\u306e\u51fa\u756a\u3067\u3059\u306d\u3002\n\u305d\u306e\u524d\u306b\n\n\u30a2\u30ca\u30d5\u30a9\u30ea\u30c3\u30af\u30de\u30af\u30ed = \u5909\u6570\u306e\u6355\u6349\nlisp\u306b\u306f\u30de\u30af\u30ed\u306e\u5f15\u6570\u306e\u88dc\u8db3\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u3063\u3066\u3001\u3084\u3063\u304b\u3044\u306a\u554f\u984c\u306a\u306e\u3067\u3059\u304c\u3001clojure\u3067\u306f\u30de\u30af\u30ed\u5185\u306e\u81ea\u7531\u306a\u30b7\u30f3\u30dc\u30eb\u3092\u66f8\u3051\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u305d\u308c\u3092\u9632\u6b62\u3057\u3066\u3044\u307e\u3059\u3002\n(defmacro ouch [a b]\n  `(let [x (range ~a)]\n     (map ~b x)))\n\nuser> (ouch 10 double)\nCompilerException java.lang.RuntimeException: Can't let qualified name: user/x, compiling:(NO_SOURCE_PATH:1:1) \n\nuser> (macroexpand-1 '(ouch 10 int))\n(clojure.core/let [user/x (clojure.core/range 10)]\n  (clojure.core/map int user/x))\n\n\u30de\u30af\u30ed\u306e\u306a\u304b\u306flet\u3067\u675f\u7e1b\u3055\u308c\u308b\u30b7\u30f3\u30dc\u30eb\u3068\u3057\u3066 x \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30de\u30af\u30ed\u306f\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u304c\u3001\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3059\u3002\u3053\u306e\u4f8b\u5916\u306f\u3001qualified\u306e\u30b7\u30f3\u30dc\u30eb\u306flet\u306b\u4f7f\u3048\u306a\u3044\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u304c\u3001 \u30de\u30af\u30ed\u3092\u5c55\u958b\u3057\u3066\u307f\u308b\u3068\u3001user/x \u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u30de\u30af\u30ed\u306e\u4e2d\u3067#\u3092\u4ed8\u3051\u308b\u3053\u3068\u3067\u3001\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n(defmacro yaa [a b]\n  `(let [x# (range ~a)]\n     (map ~b x#)))\n\nuser> (yaa 10 double)\n(0.0 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0)\n\nuser>(macroexpand-1 '(yaa 10 double))\n(clojure.core/let [x__18343__auto__ (clojure.core/range 10)]\n  (clojure.core/map double x__18343__auto__))\n\n\n\u3053\u306e\u3088\u3046\u306b\u3001x \u3060\u3063\u305f\u3068\u3053\u308d\u306b\u3001 x_18343auto_ \u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30de\u30af\u30ed\u3092\u5c55\u958b\u3059\u308b\u3068\u304d\u306b\u3001\u4ed6\u3068\u885d\u7a81\u3057\u306a\u3044 = \u5909\u6570\u3092\u6355\u6349\u3057\u306a\u3044\u5909\u6570\u3068\u3057\u3066\u81ea\u52d5\u7684\u306b\u751f\u6210\u3055\u308c\u308b\u30b7\u30f3\u30dc\u30eb\u3067\u3059\u3002\n\u3067\u3001\u3053\u306e\u6a5f\u80fd\u3092\u7121\u52b9\u306b\u3057\u3066\u3001\u3080\u308a\u3084\u308a\u6355\u6349\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u308f\u3051\u3067\u3059\u304c\u3001\u3001\u3053\u3046\u66f8\u304d\u307e\u3059\u3002\n(defmacro wao [a b]\n  `(let [~'x (range ~a)]\n     (map ~b ~'x)))\n\nuser> (wao 10 double)\n(0.0 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0)\n\nuser> (macroexpand-1 '(wao 10 double))\n(clojure.core/let [x (clojure.core/range 10)]\n  (clojure.core/map double x))\n\n\u5c55\u958b\u3057\u305f\u3082\u306e\u3092\u898b\u308b\u3068\u308f\u304b\u308b\u3068\u304a\u308a\u3001x\u304c\u305d\u306e\u307e\u307e\u51fa\u3066\u304d\u307e\u3059\u3002\u3053\u308c\u3067\u3001\u3053\u306e\u30de\u30af\u30ed\u306b\u4e0e\u3048\u305f\u3082\u306e\u3068\u5185\u90e8\u306ex\u3092\u540c\u3058\u3082\u306e\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u3053\u308c\u304c\u554f\u984c\u306b\u306a\u308b\u306e\u306f\u305f\u3068\u3048\u3070\u3053\u3093\u306a\u3053\u3068\u306b\u306a\u308b\u304b\u3089\u3067\u3059\u3002\n(def x 10)\n\nuser> (yaa 10 #(+ % x))\n(10 11 12 13 14 15 16 17 18 19)\n\nuser> (wao 10 #(+ % x))\nClassCastException clojure.lang.LazySeq cannot be cast to java.lang.Number  clojure.lang.Numbers.add (Numbers.java:126)\n\nyaa\u306f\u601d\u3063\u305f\u3068\u304a\u308a\u306e\u52d5\u4f5c\u3092\u3057\u3066\u3044\u307e\u3059\u304c\u3001wao\u306f\u4f8b\u5916\u3092\u5410\u3044\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u5916\u3067\u8a2d\u5b9a\u3057\u305fx\u3068\u30de\u30af\u30ed\u306e\u4e2d\u306ex\u304c\u885d\u7a81\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u3002\n\u3053\u306e\u4f8b\u306e\u3088\u3046\u306b\u4e88\u671f\u305b\u305a\u306b\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u3068\u3084\u3063\u304b\u3044\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u8a08\u753b\u7684\u306b\u4f7f\u3048\u3070\u3001\u4fbf\u5229\u306b\u4f7f\u3048\u307e\u3059\u3002\n\n\u30a2\u30ca\u30d5\u30a9\u30ea\u30c3\u30af\u3059\u308b\n\u30de\u30af\u30ed\u306e\u4e2d\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u5024\u3092\u30de\u30af\u30ed\u306e\u5916\u304b\u3089\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3082\u306e\u304c\u3001\u30a2\u30ca\u30d5\u30a9\u30ea\u30c3\u30af\u30de\u30af\u30ed\u3067\u3059\u3002 (\u30c1\u30e7\u30c3\u30c8\u9055\u3046\u304b\u306a?)\n\u8a73\u3057\u3044\u3053\u3068\u306f On Lisp \u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u3055\u304d\u307b\u3069\u306e\u30de\u30af\u30ed\u3068\u95a2\u6570\u3092\u3082\u3046\u4e00\u5ea6\u898b\u3066\u307f\u307e\u3059\u3002\n(defmacro send-and-get-01 [port-name & commands]\n  '(let [connection# (z-open ~port-name)\n         buff# (atom [])]\n    (do (z-register-callback #(swap! buff# conj %))\n        ~@commands\n        (wait-for-data-end)\n        (z-close connection#))\n    (into [] @buff#)))\n\n(defn get-version-info [port-name]\n   (send-and-get-01 port-name\n                    (z-send-command ??? :version))  ;!!!\n\nget-version-info\u95a2\u6570\u306e???\u306e\u3068\u3053\u308d\u306b\u3001\u30de\u30af\u30ed\u306e\u4e2d\u8eab\u306e connection \u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u308f\u3051\u3067\u3059\u3002\n\u304a\u308f\u304b\u308a\u3067\u3059\u306d\u3002\n\u3053\u3046\u3057\u307e\u3059\u3002\n(defmacro send-and-get-02 [port-name & commands]\n  '(let [~'a-con (z-open ~port-name)\n         buff# (atom [])]\n    (do (z-register-callback #(swap! buff# conj %))\n        ~@commands\n        (wait-for-data-end)\n        (z-close ~'a-con))\n    (into [] @buff#)))\n\n(defn get-version-info [port-name]\n   (send-and-get-02 port-name\n                    (z-send-command a-con :version))  ;!!!\n\n\u3053\u308c\u3067OK\u3002 connection \u3068\u3044\u3046\u306e\u306f\u4e00\u822c\u7684\u3059\u304e\u308b\u540d\u524d\u306a\u306e\u3067\u3001\u30a2\u30ca\u30d5\u30a9\u30e9\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3088\u3046\u306a a-con \u306b\u3057\u3066\u307f\u305f\u3002\n\u3053\u308c\u3067\u3088\u3057...\n\u3067\u306f\u306a\u304f\u3066\u3001\u3084\u3063\u3071\u308a\u3001\u300c\u53ef\u80fd\u3067\u3042\u308c\u3070\u30de\u30af\u30ed\u306f\u4f7f\u3046\u306a\u300d\u3067\u3042\u308b\u3057\u3001\u307e\u3057\u3066\u3001\u30a2\u30ca\u30d5\u30a9\u30ea\u30c3\u30af\u306a\u3082\u306e\u306a\u3069\u306f... \u3068\u3044\u3046\u3053\u3068\u3067\u3001\u5225\u89e3\u3092\u8003\u3048\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u305d\u306e3 \u30a2\u30ca\u30d5\u30a9\u30ea\u30c3\u30af\u3067\u306a\u3044\u30de\u30af\u30ed\n\u3055\u3066\u3001\u3082\u3068\u3082\u3068\u306e\u30de\u30af\u30ed\u306e\u554f\u984c\u306f\u3001\u30de\u30af\u30ed\u5185\u90e8\u306b\u306e\u307f\u3042\u308b connection \u3092\u3001\u5f15\u6570\u306e\u95a2\u6570\u306b\u6e21\u305b\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3067\u3082\u3001\u76f8\u624b\u306f\u30de\u30af\u30ed\u3067\u3059\u3002 \u6e21\u3057\u305f\u3082\u306e\u306f\u3001\u90e8\u54c1\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u306e\u3067\u3084\u308d\u3046\u3068\u601d\u3048\u3070\u305d\u306e\u69cb\u9020\u3082\u5909\u3048\u3089\u308c\u307e\u3059\u3002\n\u3060\u3063\u305f\u3089\u3001\u3042\u3068\u304b\u3089 connection \u3092\u95a2\u6570\u306b\u633f\u5165\u3057\u3066\u3057\u307e\u3048\u3070\u3044\u3044\u3058\u3083\u306a\u3044\u304b!\n(defmacro send-and-get [port-name & commands]\n  '(let [connection# (z-open ~port-name)\n         buff# (atom [])]\n    (do (z-register-callback #(swap! buff# conj %))\n        (-> connection#      ;\u2605\n            ~@commands)\n        (wait-for-data-end)\n        (z-close connection#))\n    (into [] @buff#)))\n\n(defn get-version-info [port-name]\n   (send-and-get port-name\n                 (z-send-command ,,, :version))  ;!!!\n\n\u306f\u3044\u3002\u3053\u306e\u3088\u3046\u306b\u3001\u2605\u306e\u3068\u3053\u308d\u3067 -> \u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u3001\u6e21\u3055\u308c\u305f\u95a2\u6570\u305f\u3061\u306e1\u756a\u76ee\u306e\u5f15\u6570\u306bconnection\u3092\u5165\u308c\u3066\u8a55\u4fa1\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u306e\u65b9\u5f0f\u3060\u3068\u3001\u30a2\u30ca\u30d5\u30a9\u30ea\u30c3\u30af\u3067\u306f\u306a\u304f\u306a\u308b\u306e\u3067\u3059\u3063\u304d\u308a\u3057\u307e\u3059\u3002\n\u3067\u3082\u3001\u6e21\u305b\u308b\u95a2\u6570\u304c\u304b\u306a\u3089\u305a1\u756a\u76ee\u306bconnection\u3092\u53d7\u3051\u53d6\u308b\u3088\u3046\u306a\u3082\u306e\u3067\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\u3068\u3044\u3046\u5236\u7d04\u304c\u4ed8\u3044\u3066\u3001\u305d\u306e\u95a2\u6570\u306e1\u756a\u76ee\u306e\u5f15\u6570\u3092\u6307\u5b9a\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n\u3068\u306f\u3044\u3048\u3001\u3053\u308c\u3063\u3066\u3001 -> \u30de\u30af\u30ed\u3068\u304b\u306e\u5236\u7d04\u3068\u540c\u3058\u306a\u306e\u3067\u3001\u305f\u3044\u3057\u305f\u3053\u3068\u3067\u306f\u306a\u3044\u306e\u304b\u3082\u3002\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306f\u30de\u30af\u30ed\u3092\u4f5c\u3063\u305f\u3042\u3068\u306b\u3042\u308c\u3053\u308c\u3044\u3058\u308b\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u8a18\u4e8b\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u5b9f\u969b\u306e\u30c4\u30fc\u30eb\u306f\u3053\u3053\u3067\u3061\u307e\u3061\u307e\u958b\u767a\u4e2d\u3067\u3001\u4eca\u56de\u306e\u51e6\u7406\u306f\u3044\u307e\u306e\u3068\u3053\u308d\u3001\u4f8b\u5916\u306e\u6271\u3044\u306a\u3069\u5165\u308c\u305f\u308a\u3057\u3066\u3001\u3053\u3093\u306a\u7269\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n(ns zlog-view.zlog\n  (require [serial-port :as sp]))\n\n(def *data-timeout* 3000)\n\n(defmacro command-and-read [port-id & commands]\n  `(let [conn# (sp/open ~port-id)\n         buff# (atom [])]\n     (try\n       (sp/on-byte conn# #(swap! buff# conj %))\n       (-> conn#\n           ~@commands)\n       (loop [last-count# (count @buff#)]\n         (Thread/sleep 3000)\n         (when (> (count @buff#) last-count#)\n           (recur (count @buff#))))\n       (into [] @buff#)\n       (finally\n         (sp/remove-listener conn#)\n         (sp/close conn#)))))\n\n(defn get-device-info [port-name]\n  (->> (command-and-read port-name\n                         (send-command :version))\n       (map char ,,)\n       (apply str ,,)\n       (#(clojure.string/split % #\"\\r\\n*\") ,,)))\n\n\u4f55\u304b\u306e\u304a\u5f79\u306b\u305f\u3066\u3070\u3002\n# \u30de\u30af\u30ed\u3092\u3064\u304b\u3046\u3079\u304d\u304b\u3069\u3046\u306a\u306e\u304b\n\n\u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u7d4c\u7531\u3067[zlog]()\u3068\u3044\u3046\u30c7\u30d0\u30a4\u30b9\u3068\u306e\u901a\u4fe1\u3092\u3059\u308b\u30c4\u30fc\u30eb\u3092\u4f5c\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u9014\u4e2d\u3067\u3001\u51e6\u7406\u3092\u30de\u30af\u30ed\u306b\u3059\u3079\u304d\u304b\u3069\u3046\u304b\u3044\u308d\u3044\u308d\u8003\u3048\u305f\u306e\u3067\u3001\u305d\u306e\u3068\u304d\u306e\u3053\u3068\u3092\u3002\n\n\u672c\u5f53\u306f\u3001\u3053\u306e\u30c4\u30fc\u30eb\u305d\u306e\u3082\u306e\u3092\u984c\u6750\u306b\u4f7f\u7528\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u6848\u306e\u5b9a\u3001\u632b\u6298\u3057\u307e\u3057\u305f\u3002\n\n## zlog\u3068\u306e\u901a\u4fe1\u306b\u3064\u3044\u3066\n\nzlog\u306f\u30e9\u30b8\u30b3\u30f3\u306b\u7a4d\u3080\u3088\u3046\u306b\u4f5c\u3089\u308c\u305f\u5c0f\u578b\u306e\u9ad8\u5ea6\u8a08\u3067\u3001\u8d77\u52d5\u3059\u308b\u3068\u4e00\u5b9a\u6642\u9593\u3054\u3068\u306b\u9ad8\u5ea6(=\u6c17\u5727)\u3092\u6e2c\u5b9a\u3057\u3066\u3001\u305d\u308c\u3092\u8a18\u61b6\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u53d6\u3063\u305f\u30c7\u30fc\u30bf\u306f\u3001\u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u7d4c\u7531\u3067\u3084\u308a\u3068\u308a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30d7\u30ed\u30c8\u30b3\u30eb\u306fsniffer\u3067\u89e3\u6790\u3057\u306a\u304c\u3089\u306a\u306e\u3067\u3059\u304c\u3001\u308f\u304b\u308b\u7bc4\u56f2\u3067\u306f\u7c21\u5358\u3067\u30011\u30d0\u30a4\u30c8\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3001\u5fc5\u8981\u3067\u3042\u308c\u3070\u5f15\u6570\u3092\u4ed8\u3051\u3066\u9001\u308a\u307e\u3059\u3002\u7d50\u679c\u304c\u3042\u308b\u5834\u5408\u306f\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\n```\n\u4f8b)  \n  \u9001\u4fe1 : v\n  \u5fdc\u7b54 : ZLOG\\rMOD3\\rv3-4\\rFeb 07 2006\\r\n```\n\n## clojure\u3067\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\n\nJAVA\u3067\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3068\u8a00\u3048\u3070\u3001\u4ee5\u524d\u4ed5\u4e8b\u3067\u30e2\u30c7\u30e0\u306e\u5236\u5fa1\u306b\u4f7f\u3063\u305f[RXTX](http://rxtx.qbang.org/wiki/index.php/Main_Page)\u304c\u601d\u3044\u3064\u304d\u307e\u3059\u3002\n\u4eca\u56de\u3082\u3053\u308c\u3092\u4f7f\u304a\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u8abf\u3079\u3066\u307f\u308b\u3068\u3001\u3059\u3067\u306b\u3053\u306eRXTX\u306e\u30e9\u30c3\u30d1\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u305d\u306e\u540d\u3082\n[serial-port](https://github.com/samaaron/serial-port)\u3068\u305a\u3070\u308a\u306e\u540d\u524d\u3067\u3059\u3002\u4eca\u56de\u306f\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u57fa\u672c\u7684\u306b\u306f\u304a\u6c7a\u308a\u901a\u308aopen\u3057\u3066\u901a\u4fe1\u3057\u3066\u7d42\u3063\u305f\u3089close\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u3066\u3001\u5fdc\u7b54\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u3051\u53d6\u308a\u306f\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u767b\u9332\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002 (\u3084\u308d\u3046\u3068\u601d\u3048\u3070\u3001\u4f4e\u30ec\u30d9\u30eb\u306eI/F\u3082\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059)\n\n\u4eca\u56de\u306e\u30c4\u30fc\u30eb\u3067\u306f\u3001\u30b3\u30de\u30f3\u30c9\u3054\u3068\u306bopen/close\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002 \u3053\u308c\u306f\u3001\u57fa\u672c\u7684\u306bzlog\u306e\u30b3\u30de\u30f3\u30c9\u304c\u72ec\u7acb\u3057\u3066\u3044\u3066\u3044\u3064\u3067\u3082\u9001\u4fe1\u3067\u304d\u308b\u3053\u3068\u3068\u3001\u4f7f\u3044\u304b\u305f\u304b\u3089\u3057\u3066\u30c7\u30d0\u30a4\u30b9\u305d\u306e\u3082\u306e\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u306f\u305d\u308c\u307b\u3069\u5927\u304f\u306a\u3044\u306e\u3067\u3001\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u7ba1\u7406\u3092\u3057\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\u3057\u305f\u304b\u3063\u305f\u305f\u3081\u3067\u3059\u3002\n\n\u3064\u307e\u308a\u3001zlog\u3068\u901a\u4fe1\u3059\u308b\u5834\u5408\u3001\n- open\u3059\u308b\n- \u30d0\u30c3\u30d5\u30a1\u3092\u7528\u610f\u3059\u308b\n- \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u767b\u9332\u3059\u308b\n- \u30b3\u30de\u30f3\u30c9\u3092\u9001\u4fe1\u3059\u308b\n- \u30d0\u30c3\u30d5\u30a1\u306e\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b\n- close\u3059\u308b\n\u3068\u3044\u3046\u51e6\u7406\u3092\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u5b9f\u88c5\u7de8\n\n### \u305d\u306e1 \u95a2\u6570\u7de8\n\u307e\u305a\u306f\u666e\u901a\u306b\u95a2\u6570\u5316\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```clojure\n(defn z-open [port-name] ...)\n(defn z-close [conn] ...)\n(defn z-register-callback [conn] ...)\n(defn z-send-command [conn command & args] ...)\n```\n\n\u3053\u3093\u306a\u95a2\u6570\u305f\u3061\u3092\u4f5c\u3063\u3066\u3001\u3084\u308a\u305f\u3044\u3053\u3068\u304c\u3042\u308c\u3070\u3001\n\n```clojure\n(defn get-version-info [port-name]\n  (let [connection (z-open port-name)\n        buff (atom [])]\n    (do (z-register-callback #(swap! buff conj %))\n        (z-send-command connection :version)  ;\u2605\n        (wait-for-data-end)\n        (z-close connection))\n    (into [] @buff)))\n```\n\n\u3053\u306e\u3088\u3046\u306b\u95a2\u6570\u3092\u3064\u304f\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002  \n\u3067\u3082\u3001\u3053\u306e\u65b9\u6cd5\u3060\u3068\u3001\u2605\u306e\u3068\u3053\u308d\u304c\u9055\u3046\u3060\u3051\u306e\u95a2\u6570\u304c\u305f\u304f\u3055\u3093\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u305d\u3093\u306a\u3068\u304d\u306f\u30de\u30af\u30ed\u3067\u3059\u3088\u3002\n\n### \u305d\u306e2 \u30de\u30af\u30ed\u7de8\n\n\u540c\u3058\u3088\u3046\u306a\u95a2\u6570\u304c\u305f\u304f\u3055\u3093\u3067\u304d\u3066\u3057\u307e\u3046\u3088\u3046\u306a\u3068\u304d\u306f\u30de\u30af\u30ed\u306b\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\n\n#### \u4f5c\u3063\u3066\u307f\u308b\n\n\u3055\u304d\u307b\u3069\u306e\u95a2\u6570\u3092\u3059\u306a\u304a\u306b\u30de\u30af\u30ed\u306b\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n\n```clj\n(defmacro send-and-get-01 [port-name & commands]\n  '(let [connection# (z-open ~port-name)\n        buff# (atom [])]\n    (dorun (z-register-callback #(swap! buff# conj %))\n           ~@commands\n           (wait-for-data-end)\n           (z-close connection#))\n    (into [] @buff#)))\n```\n\n\u2605\u306e\u4ed8\u3044\u3066\u3044\u305f\u3068\u3053\u308d\u3092\u3001\u30de\u30af\u30ed\u306e\u5f15\u6570\u306b\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n\u3053\u308c\u3067\u3055\u3063\u304d\u306e\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3068\u3001\n\n```clojure\n(defn get-version-info [port-name]\n   (send-and-get-01 port-name\n                    (z-send-command ??? :version))  ;!!!\n```\n\n\u5f85\u3066\u5f85\u3066\u3002  \n\u3053\u306e\u95a2\u6570\u306e???\u306e\u3068\u3053\u308d\u306b\u306f\u3001\u5f15\u6570\u3068\u3057\u3066open\u306e\u8fd4\u308a\u5024\u306econnection\u304c\u5fc5\u8981\u306a\u306e\u3067\u3059\u3002\n\u3068\u3053\u308d\u304c\u3001\u3053\u306e\u5024\u306f\u3001\u30de\u30af\u30ed\u306e\u4e2d\u306b\u5165\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3068\u304b\u3089\u306f\u898b\u3048\u306a\u3044\u306e\u3067\u6307\u5b9a\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u3046\u30fc\u3093\u3002  \n\u30a2\u30ca\u30d5\u30a9\u30ea\u30c3\u30af\u30de\u30af\u30ed\u306e\u51fa\u756a\u3067\u3059\u306d\u3002\n\n\u305d\u306e\u524d\u306b\n\n#### \u30a2\u30ca\u30d5\u30a9\u30ea\u30c3\u30af\u30de\u30af\u30ed = \u5909\u6570\u306e\u6355\u6349\n\nlisp\u306b\u306f\u30de\u30af\u30ed\u306e\u5f15\u6570\u306e\u88dc\u8db3\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u3063\u3066\u3001\u3084\u3063\u304b\u3044\u306a\u554f\u984c\u306a\u306e\u3067\u3059\u304c\u3001clojure\u3067\u306f\u30de\u30af\u30ed\u5185\u306e\u81ea\u7531\u306a\u30b7\u30f3\u30dc\u30eb\u3092\u66f8\u3051\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u305d\u308c\u3092\u9632\u6b62\u3057\u3066\u3044\u307e\u3059\u3002\n\n```clj\n(defmacro ouch [a b]\n  `(let [x (range ~a)]\n     (map ~b x)))\n\nuser> (ouch 10 double)\nCompilerException java.lang.RuntimeException: Can't let qualified name: user/x, compiling:(NO_SOURCE_PATH:1:1) \n\nuser> (macroexpand-1 '(ouch 10 int))\n(clojure.core/let [user/x (clojure.core/range 10)]\n  (clojure.core/map int user/x))\n```\n\n\u30de\u30af\u30ed\u306e\u306a\u304b\u306flet\u3067\u675f\u7e1b\u3055\u308c\u308b\u30b7\u30f3\u30dc\u30eb\u3068\u3057\u3066 x \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30de\u30af\u30ed\u306f\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u304c\u3001\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3059\u3002\u3053\u306e\u4f8b\u5916\u306f\u3001qualified\u306e\u30b7\u30f3\u30dc\u30eb\u306flet\u306b\u4f7f\u3048\u306a\u3044\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u304c\u3001 \u30de\u30af\u30ed\u3092\u5c55\u958b\u3057\u3066\u307f\u308b\u3068\u3001user/x \u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u30de\u30af\u30ed\u306e\u4e2d\u3067#\u3092\u4ed8\u3051\u308b\u3053\u3068\u3067\u3001\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```clj\n(defmacro yaa [a b]\n  `(let [x# (range ~a)]\n     (map ~b x#)))\n\nuser> (yaa 10 double)\n(0.0 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0)\n\nuser>(macroexpand-1 '(yaa 10 double))\n(clojure.core/let [x__18343__auto__ (clojure.core/range 10)]\n  (clojure.core/map double x__18343__auto__))\n\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3001x \u3060\u3063\u305f\u3068\u3053\u308d\u306b\u3001 x__18343__auto__ \u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30de\u30af\u30ed\u3092\u5c55\u958b\u3059\u308b\u3068\u304d\u306b\u3001\u4ed6\u3068\u885d\u7a81\u3057\u306a\u3044 = \u5909\u6570\u3092\u6355\u6349\u3057\u306a\u3044\u5909\u6570\u3068\u3057\u3066\u81ea\u52d5\u7684\u306b\u751f\u6210\u3055\u308c\u308b\u30b7\u30f3\u30dc\u30eb\u3067\u3059\u3002\n\n\u3067\u3001\u3053\u306e\u6a5f\u80fd\u3092\u7121\u52b9\u306b\u3057\u3066\u3001\u3080\u308a\u3084\u308a\u6355\u6349\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u308f\u3051\u3067\u3059\u304c\u3001\u3001\u3053\u3046\u66f8\u304d\u307e\u3059\u3002\n\n```clojure\n(defmacro wao [a b]\n  `(let [~'x (range ~a)]\n     (map ~b ~'x)))\n\nuser> (wao 10 double)\n(0.0 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0)\n\nuser> (macroexpand-1 '(wao 10 double))\n(clojure.core/let [x (clojure.core/range 10)]\n  (clojure.core/map double x))\n```\n\n\u5c55\u958b\u3057\u305f\u3082\u306e\u3092\u898b\u308b\u3068\u308f\u304b\u308b\u3068\u304a\u308a\u3001x\u304c\u305d\u306e\u307e\u307e\u51fa\u3066\u304d\u307e\u3059\u3002\u3053\u308c\u3067\u3001\u3053\u306e\u30de\u30af\u30ed\u306b\u4e0e\u3048\u305f\u3082\u306e\u3068\u5185\u90e8\u306ex\u3092\u540c\u3058\u3082\u306e\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u3053\u308c\u304c\u554f\u984c\u306b\u306a\u308b\u306e\u306f\u305f\u3068\u3048\u3070\u3053\u3093\u306a\u3053\u3068\u306b\u306a\u308b\u304b\u3089\u3067\u3059\u3002\n\n```clojure\n(def x 10)\n\nuser> (yaa 10 #(+ % x))\n(10 11 12 13 14 15 16 17 18 19)\n\nuser> (wao 10 #(+ % x))\nClassCastException clojure.lang.LazySeq cannot be cast to java.lang.Number  clojure.lang.Numbers.add (Numbers.java:126)\n```\n\nyaa\u306f\u601d\u3063\u305f\u3068\u304a\u308a\u306e\u52d5\u4f5c\u3092\u3057\u3066\u3044\u307e\u3059\u304c\u3001wao\u306f\u4f8b\u5916\u3092\u5410\u3044\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u5916\u3067\u8a2d\u5b9a\u3057\u305fx\u3068\u30de\u30af\u30ed\u306e\u4e2d\u306ex\u304c\u885d\u7a81\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u3002\n\n\u3053\u306e\u4f8b\u306e\u3088\u3046\u306b\u4e88\u671f\u305b\u305a\u306b\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u3068\u3084\u3063\u304b\u3044\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u8a08\u753b\u7684\u306b\u4f7f\u3048\u3070\u3001\u4fbf\u5229\u306b\u4f7f\u3048\u307e\u3059\u3002\n\n#### \u30a2\u30ca\u30d5\u30a9\u30ea\u30c3\u30af\u3059\u308b\n\n\u30de\u30af\u30ed\u306e\u4e2d\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u5024\u3092\u30de\u30af\u30ed\u306e\u5916\u304b\u3089\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3082\u306e\u304c\u3001\u30a2\u30ca\u30d5\u30a9\u30ea\u30c3\u30af\u30de\u30af\u30ed\u3067\u3059\u3002 (\u30c1\u30e7\u30c3\u30c8\u9055\u3046\u304b\u306a?)\n\n\u8a73\u3057\u3044\u3053\u3068\u306f On Lisp \u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\n\u3055\u304d\u307b\u3069\u306e\u30de\u30af\u30ed\u3068\u95a2\u6570\u3092\u3082\u3046\u4e00\u5ea6\u898b\u3066\u307f\u307e\u3059\u3002\n\n```clojure\n(defmacro send-and-get-01 [port-name & commands]\n  '(let [connection# (z-open ~port-name)\n         buff# (atom [])]\n    (do (z-register-callback #(swap! buff# conj %))\n        ~@commands\n        (wait-for-data-end)\n        (z-close connection#))\n    (into [] @buff#)))\n\n(defn get-version-info [port-name]\n   (send-and-get-01 port-name\n                    (z-send-command ??? :version))  ;!!!\n```\n\nget-version-info\u95a2\u6570\u306e???\u306e\u3068\u3053\u308d\u306b\u3001\u30de\u30af\u30ed\u306e\u4e2d\u8eab\u306e connection \u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u308f\u3051\u3067\u3059\u3002  \n\u304a\u308f\u304b\u308a\u3067\u3059\u306d\u3002  \n\u3053\u3046\u3057\u307e\u3059\u3002\n\n\n```clojure\n(defmacro send-and-get-02 [port-name & commands]\n  '(let [~'a-con (z-open ~port-name)\n         buff# (atom [])]\n    (do (z-register-callback #(swap! buff# conj %))\n        ~@commands\n        (wait-for-data-end)\n        (z-close ~'a-con))\n    (into [] @buff#)))\n\n(defn get-version-info [port-name]\n   (send-and-get-02 port-name\n                    (z-send-command a-con :version))  ;!!!\n```\n\n\u3053\u308c\u3067OK\u3002 connection \u3068\u3044\u3046\u306e\u306f\u4e00\u822c\u7684\u3059\u304e\u308b\u540d\u524d\u306a\u306e\u3067\u3001\u30a2\u30ca\u30d5\u30a9\u30e9\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3088\u3046\u306a a-con \u306b\u3057\u3066\u307f\u305f\u3002\n\n\u3053\u308c\u3067\u3088\u3057...\n\n\u3067\u306f\u306a\u304f\u3066\u3001\u3084\u3063\u3071\u308a\u3001\u300c\u53ef\u80fd\u3067\u3042\u308c\u3070\u30de\u30af\u30ed\u306f\u4f7f\u3046\u306a\u300d\u3067\u3042\u308b\u3057\u3001\u307e\u3057\u3066\u3001\u30a2\u30ca\u30d5\u30a9\u30ea\u30c3\u30af\u306a\u3082\u306e\u306a\u3069\u306f... \u3068\u3044\u3046\u3053\u3068\u3067\u3001\u5225\u89e3\u3092\u8003\u3048\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n### \u305d\u306e3 \u30a2\u30ca\u30d5\u30a9\u30ea\u30c3\u30af\u3067\u306a\u3044\u30de\u30af\u30ed\n\n\u3055\u3066\u3001\u3082\u3068\u3082\u3068\u306e\u30de\u30af\u30ed\u306e\u554f\u984c\u306f\u3001\u30de\u30af\u30ed\u5185\u90e8\u306b\u306e\u307f\u3042\u308b connection \u3092\u3001\u5f15\u6570\u306e\u95a2\u6570\u306b\u6e21\u305b\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3067\u3082\u3001\u76f8\u624b\u306f\u30de\u30af\u30ed\u3067\u3059\u3002 \u6e21\u3057\u305f\u3082\u306e\u306f\u3001\u90e8\u54c1\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u306e\u3067\u3084\u308d\u3046\u3068\u601d\u3048\u3070\u305d\u306e\u69cb\u9020\u3082\u5909\u3048\u3089\u308c\u307e\u3059\u3002  \n\u3060\u3063\u305f\u3089\u3001\u3042\u3068\u304b\u3089 connection \u3092\u95a2\u6570\u306b\u633f\u5165\u3057\u3066\u3057\u307e\u3048\u3070\u3044\u3044\u3058\u3083\u306a\u3044\u304b!\n\n```clojure\n(defmacro send-and-get [port-name & commands]\n  '(let [connection# (z-open ~port-name)\n         buff# (atom [])]\n    (do (z-register-callback #(swap! buff# conj %))\n        (-> connection#      ;\u2605\n            ~@commands)\n        (wait-for-data-end)\n        (z-close connection#))\n    (into [] @buff#)))\n\n(defn get-version-info [port-name]\n   (send-and-get port-name\n                 (z-send-command ,,, :version))  ;!!!\n```\n\n\u306f\u3044\u3002\u3053\u306e\u3088\u3046\u306b\u3001\u2605\u306e\u3068\u3053\u308d\u3067 -> \u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u3001\u6e21\u3055\u308c\u305f\u95a2\u6570\u305f\u3061\u306e1\u756a\u76ee\u306e\u5f15\u6570\u306bconnection\u3092\u5165\u308c\u3066\u8a55\u4fa1\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u3053\u306e\u65b9\u5f0f\u3060\u3068\u3001\u30a2\u30ca\u30d5\u30a9\u30ea\u30c3\u30af\u3067\u306f\u306a\u304f\u306a\u308b\u306e\u3067\u3059\u3063\u304d\u308a\u3057\u307e\u3059\u3002\n\n\u3067\u3082\u3001\u6e21\u305b\u308b\u95a2\u6570\u304c\u304b\u306a\u3089\u305a1\u756a\u76ee\u306bconnection\u3092\u53d7\u3051\u53d6\u308b\u3088\u3046\u306a\u3082\u306e\u3067\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\u3068\u3044\u3046\u5236\u7d04\u304c\u4ed8\u3044\u3066\u3001\u305d\u306e\u95a2\u6570\u306e1\u756a\u76ee\u306e\u5f15\u6570\u3092\u6307\u5b9a\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n\u3068\u306f\u3044\u3048\u3001\u3053\u308c\u3063\u3066\u3001 -> \u30de\u30af\u30ed\u3068\u304b\u306e\u5236\u7d04\u3068\u540c\u3058\u306a\u306e\u3067\u3001\u305f\u3044\u3057\u305f\u3053\u3068\u3067\u306f\u306a\u3044\u306e\u304b\u3082\u3002\n\n## \u307e\u3068\u3081\n\n\u4eca\u56de\u306f\u30de\u30af\u30ed\u3092\u4f5c\u3063\u305f\u3042\u3068\u306b\u3042\u308c\u3053\u308c\u3044\u3058\u308b\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u8a18\u4e8b\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u5b9f\u969b\u306e\u30c4\u30fc\u30eb\u306f[\u3053\u3053\u3067\u3061\u307e\u3061\u307e\u958b\u767a\u4e2d](https://github.com/ypsilon-takai/zlog_view)\u3067\u3001\u4eca\u56de\u306e\u51e6\u7406\u306f\u3044\u307e\u306e\u3068\u3053\u308d\u3001\u4f8b\u5916\u306e\u6271\u3044\u306a\u3069\u5165\u308c\u305f\u308a\u3057\u3066\u3001\u3053\u3093\u306a\u7269\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```clojure\n(ns zlog-view.zlog\n  (require [serial-port :as sp]))\n\n(def *data-timeout* 3000)\n\n(defmacro command-and-read [port-id & commands]\n  `(let [conn# (sp/open ~port-id)\n         buff# (atom [])]\n     (try\n       (sp/on-byte conn# #(swap! buff# conj %))\n       (-> conn#\n           ~@commands)\n       (loop [last-count# (count @buff#)]\n         (Thread/sleep 3000)\n         (when (> (count @buff#) last-count#)\n           (recur (count @buff#))))\n       (into [] @buff#)\n       (finally\n         (sp/remove-listener conn#)\n         (sp/close conn#)))))\n\n(defn get-device-info [port-name]\n  (->> (command-and-read port-name\n                         (send-command :version))\n       (map char ,,)\n       (apply str ,,)\n       (#(clojure.string/split % #\"\\r\\n*\") ,,)))\n```\n\n\n\u4f55\u304b\u306e\u304a\u5f79\u306b\u305f\u3066\u3070\u3002", "tags": ["Clojure"]}