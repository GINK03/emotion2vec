{"tags": ["java8", "Java", "Stream"], "context": "\u3069\u3046\u3082\u3001\u4ed5\u4e8b\u3067Java\u3092\u66f8\u3044\u3066\u3044\u308b\u8005\u3067\u3059\u3002\nStream\u4f7f\u3063\u3066\u307e\u3059\u304b\uff1f\u4fbf\u5229\u3067\u3059\u3088\u306d\u3001\u7279\u306b\u6bce\u5ea6\u6bce\u5ea6.collect(Collectors.toList())\u3068\u304b\u3084\u308b\u3068\u3053\u308d\u304c\u30a4\u30ab\u3057\u3066\u307e\u3059\u3088\u306d\u3002\n\u6bce\u5ea6\u305d\u3093\u306a\u9762\u5012\u306a\u8a18\u8ff0\u3092\u8981\u6c42\u3059\u308b\u306a\u3089\u3001\u3082\u3063\u3068\u67d4\u8edf\u306b\u8272\u3093\u306a\u3053\u3068\u3057\u305f\u30a1\u30a1\u30a1\u30a1\u301c\u301c\u30a3\u30a3\u30a3\u3063\u3066\u30a4\u30e9\u30c3\u3068\u6765\u305f\u306e\u3067\n.collect()\u306e\u90e8\u5206\u3067\u4efb\u610f\u306e\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4e88\u5099\u77e5\u8b58\nJava8\u306e\u95a2\u6570\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u77e5\u3089\u306a\u3044\u3068\u8f9b\u3044\u304b\u3082\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u4ee5\u4e0b\u3068\u3001Bi\u304c\u4ed8\u304f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u51fa\u3066\u304d\u307e\u3059\uff08Bi\u304c\u4ed8\u3044\u305f\u3089\u5f15\u6570\u304c2\u3064\u306b\u306a\u308b\u611f\u3058\uff09\n\n\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\n\u5f15\u6570\n\u623b\u308a\n\n\n\n\nFunction<T, R>\nT\nR\n\n\nSupplier<T>\n\u306a\u3057\nT\n\n\nConsumer<T>\nT\n\u306a\u3057\n\n\n\njava.util.function\u4ee5\u4e0b\u306e\u95a2\u6570\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u4f7f\u3044\u65b9\u30e1\u30e2 \u304c\u3068\u3066\u3082\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\u3042\u3068\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\nsuper\u3068\u304bextends\u3068\u304b\u306f\u51fa\u3066\u3053\u306a\u3044\u306e\u3067\u3001Function<T, T>\u306a\u3089\u5f15\u6570\u3082\u623b\u308a\u3082\u540c\u3058\u578b\u306a\u3093\u3060\u306a\u30fc\u3001\u304f\u3089\u3044\u304c\u308f\u304b\u308c\u3070\u5341\u5206\n\n\u60f3\u5b9a\u3059\u308b\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\n\n\u30af\u30e9\u30b9\u69cb\u6210\nBook\u3068\u3044\u3046\u30af\u30e9\u30b9\u304c\u3042\u308a\u3001\u305d\u308c\u3092\u8907\u6570\u6271\u3046\u969b\u306b\u306fList<Book>\u3067\u306f\u306a\u304fBooks\u30af\u30e9\u30b9\u3092\u7528\u3044\u308b\u3002\n\u96c6\u5408\u306b\u5bfe\u3059\u308b\u30ed\u30b8\u30c3\u30af\u3092Books\u30af\u30e9\u30b9\u306b\u96c6\u7d04\u3059\u308b\u3068\u3044\u3046\u3001\u307e\u3041OOP\u7684\u306a\u8003\u3048\u65b9\u3002\npublic class Books {\n    private final List<Book> values;\n}\n\npublic class Book {\n    private final Id id;\n    private final Name name;\n}\n\npublic class Id {\n    private final Integer value;\n}\n\npublic class Name {\n    private final String value;\n}\n\n\uff08\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3084\u30b2\u30c3\u30bf\u30fc\u306f\u7701\u7565\u3057\u3066\u307e\u3059\u3001lombok\u3067\u3082\u4f7f\u3063\u3066\u3061\u3087\uff09\n\u5225\u306b\u9055\u3046\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\u3067\u3082\u5fdc\u7528\u306f\u5229\u304f\u3051\u3069\u3001\u3053\u308c\u304c\u8077\u5834\u3067\u4e00\u756a\u591a\u3044\u306e\u3067\u3053\u308c\u306b\u3057\u305f\u3002\n\n\u51e6\u7406\u30a4\u30e1\u30fc\u30b8\n\u51e6\u7406\u306e\u4e2d\u3067List<Name>\u304c\u8907\u6570\u624b\u306b\u5165\u308a\u3001\u305d\u306eName\u3092\u57fa\u306bBook\u3092\u751f\u6210\u3059\u308b\u3002\n\u5f53\u7136Book\u306f\u8907\u6570\u51fa\u6765\u308b\u306e\u3067List<Book>\u304c\u51fa\u6765\u308b\u306e\u3060\u304c\u3001\u305d\u308c\u3092\u66f4\u306bBooks\u306b\u5909\u63db\u3059\u308b\u3002\nList<Name> names = Arrays.asList(new Name(\"foo\"), new Name(\"bar\"));\n\nList<Book> bookList = names.stream()\n        .map(name -> new Book(Id.allocate(), name))\n        .collect(Collectors.toList());\n\nBooks books = new Books(bookList);\n\n\u4e00\u6642\u5909\u6570\u304c\u7121\u3044\u306a\u3089\u3053\u3046\u3067\u3082\u826f\u3044\nBooks books = new Books(\n    names.stream()\n            .map(name -> new Book(Id.allocate(), name))\n            .collect(Collectors.toList())\n);\n\n\u8981\u306fList<Book>\u3092\u7d4c\u7531\u3059\u308b\u306e\u304c\u30c0\u30eb\u3044\u306e\u3067\u3001Stream\u306e\u7d42\u7aef\u64cd\u4f5c\uff08.collect()\uff09\u3067Books\u3092\u4f5c\u3063\u3066\u3057\u307e\u304a\u3046\u3001\u3068\u3044\u3046\u767a\u60f3\u3002\n\njava.util.stream.Collectors.toList() \u306e\u5b9f\u88c5\u306e\u5199\u7d4c\n\u524d\u7f6e\u304d\u304c\u9577\u304b\u3063\u305f\u3051\u3069\u3001\u3068\u308a\u3042\u3048\u305aCollectors.toList()\u306e\u5b9f\u88c5\u3092\u5199\u7d4c\u3057\u3066\u307f\u305f\n\uff08\u3053\u3061\u3089\u3082\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u30b2\u30c3\u30bf\u30fc\u306f\u7701\u7565\u3057\u3066\u307e\u3059\uff09\n\u306a\u3093\u304bCollector<T, A, R>\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3092\u8fd4\u305b\u3070\u826f\u3044\u3089\u3057\u3044\u3002\npublic class MyCollector<T, A, R> implements Collector<T, A, R> {\n    private final Supplier<A> supplier;\n    private final BiConsumer<A, T> accumulator;\n    private final BinaryOperator<A> combiner;\n    private final Function<A, R> finisher;\n    private final Set<Characteristics> characteristics;\n\n    public static <T> MyCollector<T, ?, List<T>> toList() {\n        return new MyCollector<>(\n                (Supplier<List<T>>) ArrayList::new,\n                List::add,\n                (left, right) -> { left.addAll(right); return left; },\n                Function.identity(),\n                Collections.unmodifiableSet(EnumSet.of(Characteristics.IDENTITY_FINISH))\n        );\n    }\n}\n\n\u30ab\u30f3\u3068\u96f0\u56f2\u6c17\u3060\u3051\u3067\u30c6\u30ad\u30c8\u30fc\u30fc\u306b\u8aad\u3080\n\u307e\u305a<T, A, R>\u306e\u6574\u7406\u304b\u3089\u3002\nR\u306f\u5f53\u7136List<Book>\u3067\u78ba\u5b9a\u3059\u308b\u3002\n\u6b21\u306bT\u3060\u3051\u3069\u3001T, R\u304ctoList()\u306b\u9650\u3063\u3066\u306fT, List<T>\u306e\u95a2\u4fc2\u3060\u304b\u3089\u3001T\u306fBook\u3060\u3088\u306d\u3002\nA\u306f\u4f55\u3060\u308d\uff1f\nA\u306fFunction<A, R>\u306e\u90e8\u5206\u304cFunction.identity()\u3060\u304b\u3089A\u3068R\u306f\u540c\u3058\u3001\u3064\u307e\u308aA\u3082List<T>\u3063\u3066\u3053\u3068\u3060\u3088\u306d\u3002\n\uff08identity()\u306f\u4f55\u3082\u3057\u306a\u3044\u3002\u5b9f\u88c5\u3092\u898b\u308c\u3070\u3059\u3050\u308f\u304b\u308b\u3002return t -> t;\u3060\u3051\u3060\u304b\u3089\u3002\uff09\n\u3060\u304b\u3089Book\u306b\u5bfe\u3057\u3066\u306etoList()\u306b\u5177\u4f53\u5316\u3057\u3066\u8a00\u3048\u3070\u3001<T, A, R>\u306f<Book, List<Book>, List<Book>>\u306e\u306f\u305a\uff01\n\u305d\u3046\u8003\u3048\u308b\u3068\u30015\u3064\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u3046\u3061\u3001A\u3068R\u3092\u4f7f\u3046Function<A, R> finisher\u306b\u3060\u3051\u6ce8\u76ee\u3059\u308c\u3070\u826f\u3044\u3093\u3058\u3083\u3042\u306a\u3044\u304b\u306a\uff1f\n\u6c42\u3081\u308b\u6539\u9020\u7d50\u679c\u306f<Book, List<Book>, Books>\u3060\u304b\u3089\u3001T, A\u306f\u305d\u306e\u307e\u307e\u4f7f\u308f\u305b\u3066\u3082\u3089\u3046\uff01\n\uff08\u3061\u306a\u307f\u306b\u3001A\u306e\u90e8\u5206\u306f\u306a\u3093\u304b\u51e6\u7406\u7528\u306e\u4e2d\u9593\u751f\u6210\u7269\u307f\u305f\u3044\u306a\u30a4\u30e1\u30fc\u30b8\u3063\u307d\u3044\uff09\n\u4e00\u5fdc\u306a\u3093\u3068\u306a\u304f\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u610f\u5473\u3092\uff08\u578b\u3060\u3051\u3067\uff09\u5bdf\u3057\u3066\u307f\u308b\n\u5b9a: Supplier<A> supplier;\n\n\u5024: (Supplier<List<T>>) ArrayList::new\n\nBook\u306e\u8db3\u3057\u8fbc\u307f\u5148List<Book>\u3092\u7528\u610f\u3059\u308b\u65b9\u6cd5\u304b\u306a\uff1f\n\u5b9a: BiConsumer<A, T> accumulator;\n\n\u5024: List::add\n\nBook\u3072\u3068\u3064\u3092List<Book>\u306b\u7a81\u3063\u8fbc\u3080\u65b9\u6cd5\u304b\u306a\uff1f\n\u5b9a: BinaryOperator<A> combiner;\n\n\u5024: (left, right) -> { left.addAll(right); return left; }\n\n\u4e26\u884c\u51e6\u7406\u306e\u305f\u3081\uff1fA\u30922\u3064\u4f5c\u3063\u3066\u304c\u3063\u3061\u3083\u3093\u3059\u308b\u3001\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u3066\u3044\u308b\u3089\u3057\u3044\uff1f\n\uff08BinaryOperator<A>\u306fBiFunction<A, A, A>\u3068\u540c\u3058\u611f\u3058\u306a\u306e\u3067\u3001left\u3082right\u3082List<Book>\uff09\n\u5b9a: Function<A, R> finisher;\n\n\u5024: Function.identity()\n\n\u591a\u5206\u540d\u524d\u306e\u901a\u308a\u3001\u51fa\u6765\u4e0a\u304c\u3063\u305fA\u3092\u6700\u5f8c\u306bR\u306b\u3059\u308b\u65b9\u6cd5\u3060\u3088\u306d\uff1f\n\u5b9a: Set<Characteristics> characteristics;\n\n\u5024: Collections.unmodifiableSet(EnumSet.of(Characteristics.IDENTITY_FINISH))\n\n\u3053\u308c\u306f\u6319\u52d5\u3092\u8a2d\u5b9a\u3059\u308b\u306e\u304b\u306a\uff1f\u5185\u90e8\u5b9f\u88c5\u304c\u7d50\u69cb\u3053\u308c\u6b21\u7b2c\u3067\u6761\u4ef6\u5206\u5c90\u3057\u3066\u3044\u308b\u6c17\u304c\u3057\u305f\nCONCURRENT, UNORDERED, IDENTITY_FINISH\u306e\u4e09\u7a2e\u304c\u3042\u308a\u3001\u8907\u6570\u306e\u6301\u3061\u65b9\u304c\u3042\u308b\u307f\u305f\u3044\n\u7e70\u308a\u8fd4\u3059\u3051\u3069\u30019\u5272\u306f\u30ab\u30f3\u3067\u3059\u3002\n\u305f\u3060\u307e\u3041\u3084\u3063\u3071\u308a\u3001Function<A, R> finisher\u3092\u3061\u3087\u3063\u3068\u5909\u3048\u3066\u3001\nSet<Characteristics> characteristics\u3082\u5225\u306e\u3092\u6307\u5b9a\u3059\u308b\u3060\u3051\u3067\u6e08\u307f\u305d\u3046\u304b\u306a\uff1f\n\nMyCollector.create() \u306e\u5b9f\u88c5\npublic class MyCollector<T, A, R> implements Collector<T, A, R> {\n    private final Supplier<A> supplier;\n    private final BiConsumer<A, T> accumulator;\n    private final BinaryOperator<A> combiner;\n    private final Function<A, R> finisher;\n    private final Set<Characteristics> characteristics;\n\n    public static <T, R> MyCollector<T, ?, R> create(Function<List<T>, R> constructor) {\n        return new MyCollector<>(\n                (Supplier<List<T>>) ArrayList::new,\n                List::add,\n                (left, right) -> { left.addAll(right); return left; },\n                constructor,\n                Collections.emptySet()\n        );\n    }\n\n\u307e\u3001\u6563\u3005\u524d\u7f6e\u304d\u3057\u3066\u304a\u3044\u3066\u3053\u308c\u3060\u3051\u3060\u3063\u305f\ntoList()\u3067\u306fR\u306fList<T>\u3060\u3063\u305f\u3051\u3069\u3001\u5f53\u7136\u3053\u3061\u3089\u3067\u306fT\u3067\u3082A\u3067\u3082\u306a\u3044\u306e\u3067R\u306e\u307e\u307e\n\u305d\u3057\u3066finisher\u306e\u90e8\u5206\u306f\u5916\u304b\u3089\u6e21\u305b\u308b\u69d8\u306b\u3057\u305f\u3002\u5f53\u7136\u578b\u306fFunction<List<T>, R>\u3060\uff01\ncharacteristics\u306fA\u3068R\u304c\u7570\u306a\u308b\u5225\u306e\u5b9f\u88c5\u306f\u7a7aSet\u3060\u3063\u305f\u306e\u3067\u3001\u306a\u3093\u3068\u306a\u304f\u771f\u4f3c\u3066\u307f\u305f\u3002\n\uff08\u4f8b\u3048\u3070A -> String\u306ejoining()\u3068\u304b\uff09\n\n\u5229\u7528\u4f8b\nBooks books = names.stream()\n        .map(name -> new Book(Id.allocate(), name))\n        .collect(MyCollector.create(Books::new));\n\n\u3061\u3087\u3063\u3068\u30b9\u30c3\u30ad\u30ea\u3057\u305f\u3067\u3057\u3087\uff01\u6e80\u8db3\uff01\n\n\u304a\u307e\u3051\n\u5b9f\u306fCollectors\u3092\u8aad\u3093\u3067\u3044\u308b\u3068\u304d\u306b\u3001\u3053\u3093\u306a\u306e\u3092\u767a\u898b\u3057\u305f\npublic static<T,A,R,RR> Collector<T,A,RR> collectingAndThen(\n        Collector<T,A,R> downstream,\n        Function<R,RR> finisher\n) {\n\n\u3053\u308c\u3001\u307e\u3055\u306b\u3058\u3083\u306d\uff57\n\u4e2d\u8aad\u3093\u3060\u3089\u7b2c\u4e00\u5f15\u6570\u306efinisher\u306b\u66f4\u306b\u6e21\u3057\u305ffinisher\u3092\u95a2\u6570\u5408\u6210\u3057\u3066\u304f\u308c\u3066\u308b\uff01\n\uff08\u3053\u3093\u306a\u611f\u3058  downstream.finisher().andThen(finisher)\uff09\n\u307e\u3055\u306b\u305d\u308c\u3060\u3063\u305f\uff57\u3000\u9577\u304f\u306a\u308a\u305d\u3046\u3060\u3051\u3069\uff57\nBooks books = names.stream()\n        .map(name -> new Book(Id.allocate(), name))\n        .collect(Collectors.collectingAndThen(Collectors.toList(), Books::new));\n\n\u3044\u3084\u30fc\u3001\u7d42\u7aef\u64cd\u4f5c\u3063\u3066\u6700\u5f8c\u306b\u95a2\u6570\u5b9f\u884c\u3057\u3066\u304f\u308c\u308b\u3093\u3060\u306d\u30fc\uff08\u68d2\uff09\n\u4f7f\u3044\u65b9\u65e5\u672c\u8a9e\u3067\u8abf\u3079\u308b\u524d\u306b\u4e2d\u3092\u3056\u30fc\u3063\u3068\u3067\u3082\u8aad\u3082\u3046\u306d\u30fc\u3063\u3066\u3053\u3068\u3060\u3088\u306d\u30fc\uff08\u68d2\uff09\n\u3067\u3082\u3053\u308c\u4f7f\u3048\u3070\u8272\u3005\u51fa\u6765\u308b\u306d\u3001\u77e5\u308c\u305f\u3060\u3051\u3067\u3082\u53ce\u7a6b\u3002\n\u304a\u3057\u307e\u3044 \uff89\uff7c\n\n\u3069\u3046\u3082\u3001\u4ed5\u4e8b\u3067Java\u3092\u66f8\u3044\u3066\u3044\u308b\u8005\u3067\u3059\u3002\n\n`Stream`\u4f7f\u3063\u3066\u307e\u3059\u304b\uff1f\u4fbf\u5229\u3067\u3059\u3088\u306d\u3001\u7279\u306b\u6bce\u5ea6\u6bce\u5ea6`.collect(Collectors.toList())`\u3068\u304b\u3084\u308b\u3068\u3053\u308d\u304c\u30a4\u30ab\u3057\u3066\u307e\u3059\u3088\u306d\u3002\n\n\u6bce\u5ea6\u305d\u3093\u306a\u9762\u5012\u306a\u8a18\u8ff0\u3092\u8981\u6c42\u3059\u308b\u306a\u3089\u3001\u3082\u3063\u3068\u67d4\u8edf\u306b\u8272\u3093\u306a\u3053\u3068\u3057\u305f\u30a1\u30a1\u30a1\u30a1\u301c\u301c\u30a3\u30a3\u30a3\u3063\u3066\u30a4\u30e9\u30c3\u3068\u6765\u305f\u306e\u3067\n`.collect()`\u306e\u90e8\u5206\u3067\u4efb\u610f\u306e\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u4e88\u5099\u77e5\u8b58\nJava8\u306e\u95a2\u6570\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u77e5\u3089\u306a\u3044\u3068\u8f9b\u3044\u304b\u3082\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u4ee5\u4e0b\u3068\u3001`Bi`\u304c\u4ed8\u304f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u51fa\u3066\u304d\u307e\u3059\uff08`Bi`\u304c\u4ed8\u3044\u305f\u3089\u5f15\u6570\u304c2\u3064\u306b\u306a\u308b\u611f\u3058\uff09\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9 | \u5f15\u6570 | \u623b\u308a\n:--              | :--  | :-- \nFunction\\<T, R\\> | T    | R   \nSupplier\\<T\\>    | \u306a\u3057 | T   \nConsumer\\<T\\>    | T    | \u306a\u3057\n\n[java.util.function\u4ee5\u4e0b\u306e\u95a2\u6570\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u4f7f\u3044\u65b9\u30e1\u30e2](http://qiita.com/opengl-8080/items/22c4405a38127ed86a31) \u304c\u3068\u3066\u3082\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3042\u3068\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\n`super`\u3068\u304b`extends`\u3068\u304b\u306f\u51fa\u3066\u3053\u306a\u3044\u306e\u3067\u3001`Function<T, T>`\u306a\u3089\u5f15\u6570\u3082\u623b\u308a\u3082\u540c\u3058\u578b\u306a\u3093\u3060\u306a\u30fc\u3001\u304f\u3089\u3044\u304c\u308f\u304b\u308c\u3070\u5341\u5206\n\n## \u60f3\u5b9a\u3059\u308b\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\n### \u30af\u30e9\u30b9\u69cb\u6210\n`Book`\u3068\u3044\u3046\u30af\u30e9\u30b9\u304c\u3042\u308a\u3001\u305d\u308c\u3092\u8907\u6570\u6271\u3046\u969b\u306b\u306f`List<Book>`\u3067\u306f\u306a\u304f`Books`\u30af\u30e9\u30b9\u3092\u7528\u3044\u308b\u3002\n\u96c6\u5408\u306b\u5bfe\u3059\u308b\u30ed\u30b8\u30c3\u30af\u3092`Books`\u30af\u30e9\u30b9\u306b\u96c6\u7d04\u3059\u308b\u3068\u3044\u3046\u3001\u307e\u3041OOP\u7684\u306a\u8003\u3048\u65b9\u3002\n\n```Java\npublic class Books {\n    private final List<Book> values;\n}\n```\n\n```Java\npublic class Book {\n    private final Id id;\n    private final Name name;\n}\n```\n\n```Java\npublic class Id {\n    private final Integer value;\n}\n```\n\n```Java\npublic class Name {\n    private final String value;\n}\n```\n\n\uff08\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3084\u30b2\u30c3\u30bf\u30fc\u306f\u7701\u7565\u3057\u3066\u307e\u3059\u3001`lombok`\u3067\u3082\u4f7f\u3063\u3066\u3061\u3087\uff09\n\n\u5225\u306b\u9055\u3046\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\u3067\u3082\u5fdc\u7528\u306f\u5229\u304f\u3051\u3069\u3001\u3053\u308c\u304c\u8077\u5834\u3067\u4e00\u756a\u591a\u3044\u306e\u3067\u3053\u308c\u306b\u3057\u305f\u3002\n\n### \u51e6\u7406\u30a4\u30e1\u30fc\u30b8\n\u51e6\u7406\u306e\u4e2d\u3067`List<Name>`\u304c\u8907\u6570\u624b\u306b\u5165\u308a\u3001\u305d\u306e`Name`\u3092\u57fa\u306b`Book`\u3092\u751f\u6210\u3059\u308b\u3002\n\u5f53\u7136`Book`\u306f\u8907\u6570\u51fa\u6765\u308b\u306e\u3067`List<Book>`\u304c\u51fa\u6765\u308b\u306e\u3060\u304c\u3001\u305d\u308c\u3092\u66f4\u306b`Books`\u306b\u5909\u63db\u3059\u308b\u3002\n\n```Java\nList<Name> names = Arrays.asList(new Name(\"foo\"), new Name(\"bar\"));\n\nList<Book> bookList = names.stream()\n        .map(name -> new Book(Id.allocate(), name))\n        .collect(Collectors.toList());\n\nBooks books = new Books(bookList);\n```\n\n\u4e00\u6642\u5909\u6570\u304c\u7121\u3044\u306a\u3089\u3053\u3046\u3067\u3082\u826f\u3044\n\n```Java\nBooks books = new Books(\n    names.stream()\n            .map(name -> new Book(Id.allocate(), name))\n            .collect(Collectors.toList())\n);\n```\n\n\u8981\u306f`List<Book>`\u3092\u7d4c\u7531\u3059\u308b\u306e\u304c\u30c0\u30eb\u3044\u306e\u3067\u3001`Stream`\u306e\u7d42\u7aef\u64cd\u4f5c\uff08`.collect()`\uff09\u3067`Books`\u3092\u4f5c\u3063\u3066\u3057\u307e\u304a\u3046\u3001\u3068\u3044\u3046\u767a\u60f3\u3002\n\n## java.util.stream.Collectors.toList() \u306e\u5b9f\u88c5\u306e\u5199\u7d4c\n\u524d\u7f6e\u304d\u304c\u9577\u304b\u3063\u305f\u3051\u3069\u3001\u3068\u308a\u3042\u3048\u305a`Collectors.toList()`\u306e\u5b9f\u88c5\u3092\u5199\u7d4c\u3057\u3066\u307f\u305f\n\uff08\u3053\u3061\u3089\u3082\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u30b2\u30c3\u30bf\u30fc\u306f\u7701\u7565\u3057\u3066\u307e\u3059\uff09\n\n\u306a\u3093\u304b`Collector<T, A, R>`\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3092\u8fd4\u305b\u3070\u826f\u3044\u3089\u3057\u3044\u3002\n\n```Java\npublic class MyCollector<T, A, R> implements Collector<T, A, R> {\n    private final Supplier<A> supplier;\n    private final BiConsumer<A, T> accumulator;\n    private final BinaryOperator<A> combiner;\n    private final Function<A, R> finisher;\n    private final Set<Characteristics> characteristics;\n\n    public static <T> MyCollector<T, ?, List<T>> toList() {\n        return new MyCollector<>(\n                (Supplier<List<T>>) ArrayList::new,\n                List::add,\n                (left, right) -> { left.addAll(right); return left; },\n                Function.identity(),\n                Collections.unmodifiableSet(EnumSet.of(Characteristics.IDENTITY_FINISH))\n        );\n    }\n}\n```\n\n\u30ab\u30f3\u3068\u96f0\u56f2\u6c17\u3060\u3051\u3067\u30c6\u30ad\u30c8\u30fc\u30fc\u306b\u8aad\u3080\n\n\u307e\u305a`<T, A, R>`\u306e\u6574\u7406\u304b\u3089\u3002\n\n`R`\u306f\u5f53\u7136`List<Book>`\u3067\u78ba\u5b9a\u3059\u308b\u3002\n\n\u6b21\u306b`T`\u3060\u3051\u3069\u3001`T, R`\u304c`toList()`\u306b\u9650\u3063\u3066\u306f`T, List<T>`\u306e\u95a2\u4fc2\u3060\u304b\u3089\u3001`T`\u306f`Book`\u3060\u3088\u306d\u3002\n\n`A`\u306f\u4f55\u3060\u308d\uff1f\n`A`\u306f`Function<A, R>`\u306e\u90e8\u5206\u304c`Function.identity()`\u3060\u304b\u3089`A`\u3068`R`\u306f\u540c\u3058\u3001\u3064\u307e\u308a`A`\u3082`List<T>`\u3063\u3066\u3053\u3068\u3060\u3088\u306d\u3002\n\uff08`identity()`\u306f`\u4f55\u3082\u3057\u306a\u3044`\u3002\u5b9f\u88c5\u3092\u898b\u308c\u3070\u3059\u3050\u308f\u304b\u308b\u3002`return t -> t;`\u3060\u3051\u3060\u304b\u3089\u3002\uff09\n\n\u3060\u304b\u3089`Book`\u306b\u5bfe\u3057\u3066\u306e`toList()`\u306b\u5177\u4f53\u5316\u3057\u3066\u8a00\u3048\u3070\u3001`<T, A, R>`\u306f`<Book, List<Book>, List<Book>>`\u306e\u306f\u305a\uff01\n\n\u305d\u3046\u8003\u3048\u308b\u3068\u30015\u3064\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u3046\u3061\u3001`A`\u3068`R`\u3092\u4f7f\u3046`Function<A, R> finisher`\u306b\u3060\u3051\u6ce8\u76ee\u3059\u308c\u3070\u826f\u3044\u3093\u3058\u3083\u3042\u306a\u3044\u304b\u306a\uff1f\n\u6c42\u3081\u308b\u6539\u9020\u7d50\u679c\u306f`<Book, List<Book>, Books>`\u3060\u304b\u3089\u3001`T`, `A`\u306f\u305d\u306e\u307e\u307e\u4f7f\u308f\u305b\u3066\u3082\u3089\u3046\uff01\n\n\uff08\u3061\u306a\u307f\u306b\u3001`A`\u306e\u90e8\u5206\u306f\u306a\u3093\u304b\u51e6\u7406\u7528\u306e\u4e2d\u9593\u751f\u6210\u7269\u307f\u305f\u3044\u306a\u30a4\u30e1\u30fc\u30b8\u3063\u307d\u3044\uff09\n\n\u4e00\u5fdc\u306a\u3093\u3068\u306a\u304f\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u610f\u5473\u3092\uff08\u578b\u3060\u3051\u3067\uff09\u5bdf\u3057\u3066\u307f\u308b\n\n```Java\n\u5b9a: Supplier<A> supplier;\n\n\u5024: (Supplier<List<T>>) ArrayList::new\n```\n`Book`\u306e\u8db3\u3057\u8fbc\u307f\u5148`List<Book>`\u3092\u7528\u610f\u3059\u308b\u65b9\u6cd5\u304b\u306a\uff1f\n\n```Java\n\u5b9a: BiConsumer<A, T> accumulator;\n\n\u5024: List::add\n```\n`Book`\u3072\u3068\u3064\u3092`List<Book>`\u306b\u7a81\u3063\u8fbc\u3080\u65b9\u6cd5\u304b\u306a\uff1f\n\n```Java\n\u5b9a: BinaryOperator<A> combiner;\n\n\u5024: (left, right) -> { left.addAll(right); return left; }\n```\n\u4e26\u884c\u51e6\u7406\u306e\u305f\u3081\uff1f`A`\u30922\u3064\u4f5c\u3063\u3066\u304c\u3063\u3061\u3083\u3093\u3059\u308b\u3001\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u3066\u3044\u308b\u3089\u3057\u3044\uff1f\n\uff08`BinaryOperator<A>`\u306f`BiFunction<A, A, A>`\u3068\u540c\u3058\u611f\u3058\u306a\u306e\u3067\u3001`left`\u3082`right`\u3082`List<Book>`\uff09\n\n```Java\n\u5b9a: Function<A, R> finisher;\n\n\u5024: Function.identity()\n```\n\u591a\u5206\u540d\u524d\u306e\u901a\u308a\u3001\u51fa\u6765\u4e0a\u304c\u3063\u305f`A`\u3092\u6700\u5f8c\u306b`R`\u306b\u3059\u308b\u65b9\u6cd5\u3060\u3088\u306d\uff1f\n\n```Java\n\u5b9a: Set<Characteristics> characteristics;\n\n\u5024: Collections.unmodifiableSet(EnumSet.of(Characteristics.IDENTITY_FINISH))\n```\n\u3053\u308c\u306f\u6319\u52d5\u3092\u8a2d\u5b9a\u3059\u308b\u306e\u304b\u306a\uff1f\u5185\u90e8\u5b9f\u88c5\u304c\u7d50\u69cb\u3053\u308c\u6b21\u7b2c\u3067\u6761\u4ef6\u5206\u5c90\u3057\u3066\u3044\u308b\u6c17\u304c\u3057\u305f\n`CONCURRENT`, `UNORDERED`, `IDENTITY_FINISH`\u306e\u4e09\u7a2e\u304c\u3042\u308a\u3001\u8907\u6570\u306e\u6301\u3061\u65b9\u304c\u3042\u308b\u307f\u305f\u3044\n\n\u7e70\u308a\u8fd4\u3059\u3051\u3069\u30019\u5272\u306f\u30ab\u30f3\u3067\u3059\u3002\n\u305f\u3060\u307e\u3041\u3084\u3063\u3071\u308a\u3001`Function<A, R> finisher`\u3092\u3061\u3087\u3063\u3068\u5909\u3048\u3066\u3001\n`Set<Characteristics> characteristics`\u3082\u5225\u306e\u3092\u6307\u5b9a\u3059\u308b\u3060\u3051\u3067\u6e08\u307f\u305d\u3046\u304b\u306a\uff1f\n\n## MyCollector.create() \u306e\u5b9f\u88c5\n```Java\npublic class MyCollector<T, A, R> implements Collector<T, A, R> {\n    private final Supplier<A> supplier;\n    private final BiConsumer<A, T> accumulator;\n    private final BinaryOperator<A> combiner;\n    private final Function<A, R> finisher;\n    private final Set<Characteristics> characteristics;\n\n    public static <T, R> MyCollector<T, ?, R> create(Function<List<T>, R> constructor) {\n        return new MyCollector<>(\n                (Supplier<List<T>>) ArrayList::new,\n                List::add,\n                (left, right) -> { left.addAll(right); return left; },\n                constructor,\n                Collections.emptySet()\n        );\n    }\n```\n\n\u307e\u3001\u6563\u3005\u524d\u7f6e\u304d\u3057\u3066\u304a\u3044\u3066\u3053\u308c\u3060\u3051\u3060\u3063\u305f\n\n`toList()`\u3067\u306f`R`\u306f`List<T>`\u3060\u3063\u305f\u3051\u3069\u3001\u5f53\u7136\u3053\u3061\u3089\u3067\u306f`T`\u3067\u3082`A`\u3067\u3082\u306a\u3044\u306e\u3067`R`\u306e\u307e\u307e\n\n\u305d\u3057\u3066`finisher`\u306e\u90e8\u5206\u306f\u5916\u304b\u3089\u6e21\u305b\u308b\u69d8\u306b\u3057\u305f\u3002\u5f53\u7136\u578b\u306f`Function<List<T>, R>`\u3060\uff01\n\n`characteristics`\u306f`A`\u3068`R`\u304c\u7570\u306a\u308b\u5225\u306e\u5b9f\u88c5\u306f`\u7a7aSet`\u3060\u3063\u305f\u306e\u3067\u3001\u306a\u3093\u3068\u306a\u304f\u771f\u4f3c\u3066\u307f\u305f\u3002\n\uff08\u4f8b\u3048\u3070`A` -> `String`\u306e`joining()`\u3068\u304b\uff09\n\n## \u5229\u7528\u4f8b\n```Java\nBooks books = names.stream()\n        .map(name -> new Book(Id.allocate(), name))\n        .collect(MyCollector.create(Books::new));\n```\n\n\u3061\u3087\u3063\u3068\u30b9\u30c3\u30ad\u30ea\u3057\u305f\u3067\u3057\u3087\uff01\u6e80\u8db3\uff01\n\n## \u304a\u307e\u3051\n\u5b9f\u306f`Collectors`\u3092\u8aad\u3093\u3067\u3044\u308b\u3068\u304d\u306b\u3001\u3053\u3093\u306a\u306e\u3092\u767a\u898b\u3057\u305f\n\n```Java\npublic static<T,A,R,RR> Collector<T,A,RR> collectingAndThen(\n        Collector<T,A,R> downstream,\n        Function<R,RR> finisher\n) {\n```\n\n\u3053\u308c\u3001\u307e\u3055\u306b\u3058\u3083\u306d\uff57\n\n\u4e2d\u8aad\u3093\u3060\u3089\u7b2c\u4e00\u5f15\u6570\u306e`finisher`\u306b\u66f4\u306b\u6e21\u3057\u305f`finisher`\u3092\u95a2\u6570\u5408\u6210\u3057\u3066\u304f\u308c\u3066\u308b\uff01\n\uff08\u3053\u3093\u306a\u611f\u3058  `downstream.finisher().andThen(finisher)`\uff09\n\n\u307e\u3055\u306b\u305d\u308c\u3060\u3063\u305f\uff57\u3000\u9577\u304f\u306a\u308a\u305d\u3046\u3060\u3051\u3069\uff57\n\n```Java\nBooks books = names.stream()\n        .map(name -> new Book(Id.allocate(), name))\n        .collect(Collectors.collectingAndThen(Collectors.toList(), Books::new));\n```\n\n\u3044\u3084\u30fc\u3001\u7d42\u7aef\u64cd\u4f5c\u3063\u3066\u6700\u5f8c\u306b\u95a2\u6570\u5b9f\u884c\u3057\u3066\u304f\u308c\u308b\u3093\u3060\u306d\u30fc\uff08\u68d2\uff09\n\u4f7f\u3044\u65b9\u65e5\u672c\u8a9e\u3067\u8abf\u3079\u308b\u524d\u306b\u4e2d\u3092\u3056\u30fc\u3063\u3068\u3067\u3082\u8aad\u3082\u3046\u306d\u30fc\u3063\u3066\u3053\u3068\u3060\u3088\u306d\u30fc\uff08\u68d2\uff09\n\n\u3067\u3082\u3053\u308c\u4f7f\u3048\u3070\u8272\u3005\u51fa\u6765\u308b\u306d\u3001\u77e5\u308c\u305f\u3060\u3051\u3067\u3082\u53ce\u7a6b\u3002\n\n\u304a\u3057\u307e\u3044 \uff89\uff7c\n"}