{"context": " More than 1 year has passed since last update.\u554f\u984c\u306f\u3053\u3061\u3089\nhttp://nabetani.sakura.ne.jp/hena/ord19nebasec/\n\u4ed6\u306e\u89e3\u7b54\u4f8b\u306f\u3053\u3061\u3089\nhttp://qiita.com/Nabetani/items/9810b301648099028bf0\nfrom math import floor\n\ndef solve(data):\n    bad = map(int, data.split(','))\n    hdd = [[0]*n for n in (0, 8, 16, 24, 32)]\n    def mark(t,s): hdd[t%len(hdd)][s%len(hdd[t])] += 1\n    def side(t,s): return int(floor((s - 0.5) / track * t + 0.5))\n    for track, sector in ((b/100, b%100) for b in bad):\n        mark(track, sector-1)\n        mark(track, sector+1)\n        if track > 1:\n            for s in range(side(track-1, sector), side(track-1, sector+1)+1):\n                mark(track-1, s)\n        if track < 4:\n            for s in range(side(track+1, sector), side(track+1, sector+1)+1):\n                mark(track+1, s)\n    return ','.join(map(str, (t*100+s for t in (1,2,3,4) for s in range(8*t)\n                              if hdd[t][s]>1 and t*100+s not in bad))) or \"none\"\n\ndef test(data, correct):\n    answer = solve(data)\n    print 'xo'[answer == correct], data, correct, answer\n\n0, test( \"400,401,302\", \"300,301,402\" );\n1, test( \"105,100,306,414\", \"none\" );\n2, test( \"100\", \"none\" );\n3, test( \"211\", \"none\" );\n4, test( \"317\", \"none\" );\n5, test( \"414\", \"none\" );\n6, test( \"100,106\", \"107\" );\n7, test( \"205,203\", \"102,204\" );\n8, test( \"303,305\", \"304\" );\n9, test( \"407,409\", \"306,408\" );\n10, test( \"104,103\", \"207\" );\n11, test( \"204,203\", \"102,305\" );\n12, test( \"313,314\", \"209,418\" );\n13, test( \"419,418\", \"314\" );\n14, test( \"100,102,101\", \"201,203\" );\n15, test( \"103,206,309\", \"205,207,308,310\" );\n16, test( \"414,310,309\", \"206,311,413\" );\n17, test( \"104,102,206,307,102,202\", \"101,103,203,204,205,207,308\" );\n18, test( \"104,206,308,409,407\", \"103,205,207,306,307,309,408,410\" );\n19, test( \"313,406,213,301,409,422,412,102,428\", \"none\" );\n20, test( \"101,300,210,308,423,321,403,408,415\", \"none\" );\n21, test( \"304,316,307,207,427,402,107,431,412,418,424\", \"none\" );\n22, test( \"205,408,210,215,425,302,311,400,428,412\", \"none\" );\n23, test( \"200,311,306,412,403,318,427,105,420\", \"none\" );\n24, test( \"105,305,407,408,309,208,427\", \"104,209,306,406\" );\n25, test( \"311,304,322,404,429,305,316\", \"203,303,321,405,406,430\" );\n26, test( \"210,401,316,425,101\", \"211,315\" );\n27, test( \"414,403,404,416,428,421\", \"303,415\" );\n28, test( \"207,300,103,211,428\", \"104,206\" );\n29, test( \"322,314,310\", \"none\" );\n30, test( \"427,200,215\", \"100,323\" );\n31, test( \"311,402,424,307,318,430,323,305,201\", \"200,204,301,302,306,322,423,425,431\" );\n32, test( \"425,430,408\", \"none\" );\n33, test( \"202,320,209,426\", \"319,427\" );\n34, test( \"430,209,302,310,304,431,320\", \"202,303,323\" );\n35, test( \"208,206,406,424,213,312\", \"207,311,313\" );\n36, test( \"420,302,313,413,317,402\", \"301,403\" );\n37, test( \"319,306,309,418,204,411\", \"305,307,308,412\" );\n38, test( \"400,308,105,430,203,428,209\", \"104,210,429,431\" );\n39, test( \"200,305,214\", \"215\" );\n40, test( \"214,408,410,407,317,422\", \"306,316,409,423\" );\n\n\u554f\u984c\u306f\u3053\u3061\u3089\nhttp://nabetani.sakura.ne.jp/hena/ord19nebasec/\n\n\u4ed6\u306e\u89e3\u7b54\u4f8b\u306f\u3053\u3061\u3089\nhttp://qiita.com/Nabetani/items/9810b301648099028bf0\n\n```py\nfrom math import floor\n\ndef solve(data):\n    bad = map(int, data.split(','))\n    hdd = [[0]*n for n in (0, 8, 16, 24, 32)]\n    def mark(t,s): hdd[t%len(hdd)][s%len(hdd[t])] += 1\n    def side(t,s): return int(floor((s - 0.5) / track * t + 0.5))\n    for track, sector in ((b/100, b%100) for b in bad):\n        mark(track, sector-1)\n        mark(track, sector+1)\n        if track > 1:\n            for s in range(side(track-1, sector), side(track-1, sector+1)+1):\n                mark(track-1, s)\n        if track < 4:\n            for s in range(side(track+1, sector), side(track+1, sector+1)+1):\n                mark(track+1, s)\n    return ','.join(map(str, (t*100+s for t in (1,2,3,4) for s in range(8*t)\n                              if hdd[t][s]>1 and t*100+s not in bad))) or \"none\"\n\ndef test(data, correct):\n    answer = solve(data)\n    print 'xo'[answer == correct], data, correct, answer\n\n0, test( \"400,401,302\", \"300,301,402\" );\n1, test( \"105,100,306,414\", \"none\" );\n2, test( \"100\", \"none\" );\n3, test( \"211\", \"none\" );\n4, test( \"317\", \"none\" );\n5, test( \"414\", \"none\" );\n6, test( \"100,106\", \"107\" );\n7, test( \"205,203\", \"102,204\" );\n8, test( \"303,305\", \"304\" );\n9, test( \"407,409\", \"306,408\" );\n10, test( \"104,103\", \"207\" );\n11, test( \"204,203\", \"102,305\" );\n12, test( \"313,314\", \"209,418\" );\n13, test( \"419,418\", \"314\" );\n14, test( \"100,102,101\", \"201,203\" );\n15, test( \"103,206,309\", \"205,207,308,310\" );\n16, test( \"414,310,309\", \"206,311,413\" );\n17, test( \"104,102,206,307,102,202\", \"101,103,203,204,205,207,308\" );\n18, test( \"104,206,308,409,407\", \"103,205,207,306,307,309,408,410\" );\n19, test( \"313,406,213,301,409,422,412,102,428\", \"none\" );\n20, test( \"101,300,210,308,423,321,403,408,415\", \"none\" );\n21, test( \"304,316,307,207,427,402,107,431,412,418,424\", \"none\" );\n22, test( \"205,408,210,215,425,302,311,400,428,412\", \"none\" );\n23, test( \"200,311,306,412,403,318,427,105,420\", \"none\" );\n24, test( \"105,305,407,408,309,208,427\", \"104,209,306,406\" );\n25, test( \"311,304,322,404,429,305,316\", \"203,303,321,405,406,430\" );\n26, test( \"210,401,316,425,101\", \"211,315\" );\n27, test( \"414,403,404,416,428,421\", \"303,415\" );\n28, test( \"207,300,103,211,428\", \"104,206\" );\n29, test( \"322,314,310\", \"none\" );\n30, test( \"427,200,215\", \"100,323\" );\n31, test( \"311,402,424,307,318,430,323,305,201\", \"200,204,301,302,306,322,423,425,431\" );\n32, test( \"425,430,408\", \"none\" );\n33, test( \"202,320,209,426\", \"319,427\" );\n34, test( \"430,209,302,310,304,431,320\", \"202,303,323\" );\n35, test( \"208,206,406,424,213,312\", \"207,311,313\" );\n36, test( \"420,302,313,413,317,402\", \"301,403\" );\n37, test( \"319,306,309,418,204,411\", \"305,307,308,412\" );\n38, test( \"400,308,105,430,203,428,209\", \"104,210,429,431\" );\n39, test( \"200,305,214\", \"215\" );\n40, test( \"214,408,410,407,317,422\", \"306,316,409,423\" );\n```\n", "tags": ["Python", "\u3069\u3046\u66f8\u304f", "yhpg"]}