{"context": " More than 1 year has passed since last update.\u3057\u308c\u3063\u3068Amazon Kinesis Client Library for Ruby(\u4ee5\u4e0b\u3001kclrb)\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066\u3044\u305f\u306e\u3060\u304c\u3001\u3061\u3087\u3046\u3069\u4ed5\u4e8b\u3067Kinesis\u3092\u4f7f\u3046\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067\u4f7f\u3063\u3066\u307f\u305f\u3002\n\nSample\u304c\u512a\u79c0\u3002Python\u7248\u3088\u308a\u4f7f\u3044\u59cb\u3081\u304c\u7c21\u5358\uff01\ngithub\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u540c\u68b1\u3055\u308c\u3066\u3044\u308bsamples\u304c\u7d50\u69cb\u512a\u79c0\u3060\u3063\u305f\u3002\u3068\u308a\u3042\u3048\u305arake run \u3059\u308c\u3070\u52d5\u304f\u3002\u3067\u3001\u305d\u306e\u307e\u307e\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u6539\u9020\u3057\u3066\u3044\u304f\u611f\u3058\u3067\u81ea\u524d\u306e\u30a2\u30d7\u30ea\u304c\u66f8\u304d\u59cb\u3081\u3089\u308c\u308b\u3002\u3053\u306e\u3042\u305f\u308a\u306fPython\u7248\u3088\u308a\u3082\u3060\u3044\u3076\u4f7f\u3044\u59cb\u3081\u304c\u7c21\u5358\u3002\n\u30b5\u30f3\u30d7\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\nRakefile\nrake run\u3067sample_kcl.rb\u3092\u8d77\u52d5\u3057\u3066\u304f\u308c\u308b\nsamples.properties\nrake_run\u3067\u5229\u7528\u3055\u308c\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3002\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u3084\u540d\u524d\u3001KCL\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u3001\u4e26\u5217\u5ea6\u306a\u3069\u3092\u8a2d\u5b9a\u3059\u308b\u3002\nsample_kcl.rb\n\u5b9f\u969b\u306eKCL\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3002\u4e2d\u8eab\u7684\u306b\u306f\u305f\u3060MultiLangDaemon(KCL\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b9\u30fc\u30d1\u30fc\u30d0\u30a4\u30d0\u30fc\u7684\u306a\u30d7\u30ed\u30bb\u30b9\u3002\u3053\u308c\u306fJava\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u3066\u3001Kinesis\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3057\u3066Ruby\u3067\u5b9f\u88c5\u3055\u308c\u305f\u30a2\u30d7\u30ea\u306b\u5024\u3092\u6e21\u3059\u3068\u3044\u3046\u4ed5\u4e8b\u3092\u3057\u3066\u304f\u308c\u308b\u3002)\u306e\u6a19\u6e96\u51fa\u529b\u306b\u30ec\u30b3\u30fc\u30c9\u3092\u51fa\u529b\u3059\u308b\u3060\u3051\u3002\nsample_kcl_producer.rb\n\u30b5\u30f3\u30d7\u30eb\u306e\u30ec\u30b3\u30fc\u30c9\u3092Kinesis\u306b\u6295\u5165\u3057\u3066\u304f\u308c\u308b\u3002rake run_producer\u3067\u8d77\u52d5\u3059\u308b\u3002\n\n\u52d5\u304b\u3057\u3066\u307f\u308b\u3002\n\n\nrake run_producer\u3067Producer\u3092\u8d77\u52d5\n\nrake run\u3067KCL\u3092\u8d77\u52d5\n\n\u4ee5\u4e0a\u3002\n\n\u5c11\u3057\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3084\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8997\u3044\u3066\u307f\u308b\u3002\nsample.propertites\n\u8d77\u52d5\u3055\u308c\u308bKCL\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u30a2\u30d7\u30ea\u540d\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u540d\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u306a\u3069\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3002\u4ed6\u306b\u3082\u591a\u6570\u306e\u8a2d\u5b9a\u9805\u76ee\u304c\u3042\u308b\u304c\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u3081\u3070\u3060\u3044\u305f\u3044\u5185\u5bb9\u306e\u60f3\u50cf\u306f\u3064\u304f\u3082\u306e\u3070\u304b\u308a\u3002\nexecutableName = sample_kcl.rb\nstreamName = kclrbsample\napplicationName = RubyKCLSample\nAWSCredentialsProvider = DefaultAWSCredentialsProviderChain\nprocessingLanguage = ruby\ninitialPositionInStream = TRIM_HORIZON\nregionName = ap-northeast-1\n\nsample_kcr.rb\n\n\u8d77\u52d5\u90e8\u5206\nif __FILE__ == $0\n  # Start the main processing loop\n  record_processor = SampleRecordProcessor.new(ARGV[1] || File.join(Dir.tmpdir, 'kclrbsample'))\n  driver = Aws::KCLrb::KCLProcess.new(record_processor)\n  driver.run\nend\n\n\nKCL\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3092\u5f15\u6570\u306b Aws::KCLrb::KCLProcess\u3068\u3044\u3046\u30c9\u30e9\u30a4\u30d0\u30af\u30e9\u30b9\u3092\u521d\u671f\u5316\u3057\u3066\u3084\u3063\u3066run\u3059\u308c\u3070OK\u3002\n\nKCL\u30af\u30e9\u30b9\nrequire 'aws/kclrb'\n\nclass SampleRecordProcessor < Aws::KCLrb::RecordProcessorBase\n\n\n\n\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306eKCL\u30af\u30e9\u30b9\u306f\u4e0a\u8a18\u306e\u3088\u3046\u306bAws::KCLrb::RecordProcessorBase\u3092\u7d99\u627f\u3057\u3066\u4ee5\u4e0b\u306e3\u3064\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u3084\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n\u5b9f\u88c5\u5fc5\u9808\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u305d\u306e1--initialize\n  def initialize(output=$stderr)\n    @close = false\n    if output.is_a?(String)\n      @output_directory = output\n      # Make sure the directory exists and that we can\n      # write to it. If not, this will fail and processing\n      # can't start.\n      FileUtils.mkdir_p @output_directory\n      probe_file = File.join(@output_directory, '.kclrb_probe')\n      FileUtils.touch(probe_file)\n      FileUtils.rm(probe_file)\n    elsif output\n      # assume it's an IO\n      @output = output\n    else\n      fail \"Output destination cannot be nil\"\n    end\n  end\n\n\n\u30af\u30e9\u30b9\u306e\u521d\u671f\u5316\u3002\u307e\u3042\u304a\u7d04\u675f\u3002\n  # (see Aws::KCLrb::RecordProcessorBase#init_processor)\n  def init_processor(shard_id)\n    unless @output\n      @filename = File.join(@output_directory, \"#{shard_id}-#{Time.now.to_i}.log\")\n      @output = open(@filename, 'w')\n      @close = true\n    end\n  end\n\nshard_id\u304c\u6e21\u3063\u3066\u304f\u308b\u3002\u3053\u308c\u304c\u5b9f\u969b\u306eProcessor\u30d7\u30ed\u30bb\u30b9\u306e\u30af\u30e9\u30b9\u521d\u671f\u5316\u30fb\u30fb\u30fb\u306b\u306a\u308b\u3093\u3060\u3068\u601d\u3046\u3002\n  # (see Aws::KCLrb::RecordProcessorBase#process_records)\n  def process_records(records, checkpointer)\n    last_seq = nil\n    records.each do |record|\n      begin\n        @output.puts Base64.decode64(record['data'])\n        @output.flush\n        last_seq = record['sequenceNumber']\n      rescue => e\n        # Make sure to handle all exceptions.\n        # Anything you write to STDERR will simply be echoed by parent process\n        STDERR.puts \"#{e}: Failed to process record '#{record}'\"\n      end\n    end\n    checkpoint_helper(checkpointer, last_seq)  if last_seq\n  end\n\n\u5b9f\u969b\u306b\u306f\u3053\u3053\u304c\u51e6\u7406\u306e\u672c\u4f53\u3002KCL\u306e\u30c9\u30e9\u30a4\u30d0\u304cKinesis\u304c\u30ec\u30b3\u30fc\u30c9\u3092\u5b9a\u671f\u7684\u306b\u53d6\u3063\u3066\u304d\u3066\u3001records\u3068\u3044\u3046\u5f15\u6570\u3092\u4ed8\u3051\u3066\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3067\u304f\u308c\u308b\u3002\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u3042\u308b\u3068\u304a\u308a\u3001\u30c7\u30fc\u30bf\u306fBase64 Encoded\u306a\u72b6\u614b\u3067\u98db\u3093\u3067\u304f\u308b\u3002\u3082\u3046\u3072\u3068\u3064\u306echeckpointer\u3068\u3044\u3046\u5f15\u6570\u306f checkpointer.checkpoint(seq_number)\u3068\u3044\u3046\u611f\u3058\u306b\u547c\u3073\u51fa\u3057\u3066\u3084\u308b\u3068DynamoDB\u306b\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u3063\u3066\u304f\u308c\u308b\u3002\n\n\u5b9f\u88c5\u5fc5\u9808\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u305d\u306e4--shutdown\n  # (see Aws::KCLrb::RecordProcessorBase#shutdown)\n  def shutdown(checkpointer, reason)\n    checkpoint_helper(checkpointer)  if 'TERMINATE' == reason\n  ensure\n    # Make sure to cleanup state\n    @output.close  if @close\n  end\n\n\n\u304a\u7247\u3065\u3051\u7528\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3002\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u3059\u308b\u307e\u3067\u547c\u3073\u51fa\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u5b9f\u969b\u306b\u306f\u5b9f\u88c5\u3057\u306a\u304f\u3066\u3082\u52d5\u304f\u3002\u3051\u3069\u307e\u3042\u3053\u3053\u3067\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u3063\u3066\u304a\u304f\u3068\u3044\u3046\u306e\u304c\u305f\u3060\u3057\u3044\u904b\u7528\u65b9\u6cd5\u3060\u3068\u601d\u3046\u3002\n\n\u307e\u3068\u3081\nkclrb\u3092\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3059\u308b\u306a\u3089\n\ngem install aws-kclrb\naws/kclrb\u3092require\u3057\u3064\u3064\u3001Aws::KCLrb::RecordProcessorBase\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u3064\u304f\u308b\n\u4ee5\u4e0b\u306e4\u3064\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5b9f\u88c5\n\n\ninitialize\ninit_processor\nprocess_records\nshutdown\n\n\nproperties\u30d5\u30a1\u30a4\u30eb\u3092\u3064\u304f\u3063\u3066\u3001stream\u540d\u3084region\u306a\u3069\u3092\u8a2d\u5b9a\u3002\n(\u3053\u308c\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3067OK) Rake\u30d5\u30a1\u30a4\u30eb\u306b\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\u3092\u66f8\u3044\u3066\u3042\u3068\u306f\u8d77\u52d5\u3059\u308b\uff01\n\n\n\u5b9f\u969b\u306b\u306f\u3082\u308d\u3082\u308d\u306e\u9577\u3044\u30b3\u30de\u30f3\u30c9\u306b\u306a\u308b\u306e\u3067Rake\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u3044\u305f\u308a\u3001\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3057\u3068\u304f\u306e\u304c\u697d\u3060\u3068\u601d\u3046\u3002\n\n\n\n\n\u514d\u8cac\n\u3053\u308c\u306f\u500b\u4eba\u306e\u30e1\u30e2/\u610f\u898b\u3067\u3042\u308a\u3001\u79c1\u304c\u6240\u5c5e\u3059\u308b\u7d44\u7e54\u3092\u4ee3\u8868\u3059\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u3057\u308c\u3063\u3068[Amazon Kinesis Client Library for Ruby](https://github.com/awslabs/amazon-kinesis-client-ruby)(\u4ee5\u4e0b\u3001kclrb)\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066\u3044\u305f\u306e\u3060\u304c\u3001\u3061\u3087\u3046\u3069\u4ed5\u4e8b\u3067Kinesis\u3092\u4f7f\u3046\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067\u4f7f\u3063\u3066\u307f\u305f\u3002\n\n## Sample\u304c\u512a\u79c0\u3002Python\u7248\u3088\u308a\u4f7f\u3044\u59cb\u3081\u304c\u7c21\u5358\uff01\n\ngithub\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u540c\u68b1\u3055\u308c\u3066\u3044\u308bsamples\u304c\u7d50\u69cb\u512a\u79c0\u3060\u3063\u305f\u3002\u3068\u308a\u3042\u3048\u305a`rake run` \u3059\u308c\u3070\u52d5\u304f\u3002\u3067\u3001\u305d\u306e\u307e\u307e\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u6539\u9020\u3057\u3066\u3044\u304f\u611f\u3058\u3067\u81ea\u524d\u306e\u30a2\u30d7\u30ea\u304c\u66f8\u304d\u59cb\u3081\u3089\u308c\u308b\u3002\u3053\u306e\u3042\u305f\u308a\u306fPython\u7248\u3088\u308a\u3082\u3060\u3044\u3076\u4f7f\u3044\u59cb\u3081\u304c\u7c21\u5358\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\n\n**Rakefile**\n`rake run`\u3067sample_kcl.rb\u3092\u8d77\u52d5\u3057\u3066\u304f\u308c\u308b\n\n**samples.properties**\nrake_run\u3067\u5229\u7528\u3055\u308c\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3002\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u3084\u540d\u524d\u3001KCL\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u3001\u4e26\u5217\u5ea6\u306a\u3069\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n**sample_kcl.rb**\n\u5b9f\u969b\u306eKCL\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3002\u4e2d\u8eab\u7684\u306b\u306f\u305f\u3060MultiLangDaemon(KCL\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b9\u30fc\u30d1\u30fc\u30d0\u30a4\u30d0\u30fc\u7684\u306a\u30d7\u30ed\u30bb\u30b9\u3002\u3053\u308c\u306fJava\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u3066\u3001Kinesis\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3057\u3066Ruby\u3067\u5b9f\u88c5\u3055\u308c\u305f\u30a2\u30d7\u30ea\u306b\u5024\u3092\u6e21\u3059\u3068\u3044\u3046\u4ed5\u4e8b\u3092\u3057\u3066\u304f\u308c\u308b\u3002)\u306e\u6a19\u6e96\u51fa\u529b\u306b\u30ec\u30b3\u30fc\u30c9\u3092\u51fa\u529b\u3059\u308b\u3060\u3051\u3002\n\n**sample_kcl_producer.rb**\n\u30b5\u30f3\u30d7\u30eb\u306e\u30ec\u30b3\u30fc\u30c9\u3092Kinesis\u306b\u6295\u5165\u3057\u3066\u304f\u308c\u308b\u3002`rake run_producer`\u3067\u8d77\u52d5\u3059\u308b\u3002\n\n## \u52d5\u304b\u3057\u3066\u307f\u308b\u3002\n\n1. `rake run_producer`\u3067Producer\u3092\u8d77\u52d5\n2. `rake run`\u3067KCL\u3092\u8d77\u52d5\n\n\u4ee5\u4e0a\u3002\n\n## \u5c11\u3057\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3084\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8997\u3044\u3066\u307f\u308b\u3002\n\n**sample.propertites**\n\n\u8d77\u52d5\u3055\u308c\u308bKCL\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u30a2\u30d7\u30ea\u540d\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u540d\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u306a\u3069\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3002\u4ed6\u306b\u3082\u591a\u6570\u306e\u8a2d\u5b9a\u9805\u76ee\u304c\u3042\u308b\u304c\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u3081\u3070\u3060\u3044\u305f\u3044\u5185\u5bb9\u306e\u60f3\u50cf\u306f\u3064\u304f\u3082\u306e\u3070\u304b\u308a\u3002\n\n```\nexecutableName = sample_kcl.rb\nstreamName = kclrbsample\napplicationName = RubyKCLSample\nAWSCredentialsProvider = DefaultAWSCredentialsProviderChain\nprocessingLanguage = ruby\ninitialPositionInStream = TRIM_HORIZON\nregionName = ap-northeast-1\n```\n\n**sample_kcr.rb**\n\n\n```ruby:\u8d77\u52d5\u90e8\u5206\nif __FILE__ == $0\n  # Start the main processing loop\n  record_processor = SampleRecordProcessor.new(ARGV[1] || File.join(Dir.tmpdir, 'kclrbsample'))\n  driver = Aws::KCLrb::KCLProcess.new(record_processor)\n  driver.run\nend\n```\nKCL\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3092\u5f15\u6570\u306b **Aws::KCLrb::KCLProcess**\u3068\u3044\u3046\u30c9\u30e9\u30a4\u30d0\u30af\u30e9\u30b9\u3092\u521d\u671f\u5316\u3057\u3066\u3084\u3063\u3066run\u3059\u308c\u3070OK\u3002\n\n\n```ruby:KCL\u30af\u30e9\u30b9\nrequire 'aws/kclrb'\n\nclass SampleRecordProcessor < Aws::KCLrb::RecordProcessorBase\n\n```\n\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306eKCL\u30af\u30e9\u30b9\u306f\u4e0a\u8a18\u306e\u3088\u3046\u306bAws::KCLrb::RecordProcessorBase\u3092\u7d99\u627f\u3057\u3066\u4ee5\u4e0b\u306e3\u3064\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u3084\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n```ruby:\u5b9f\u88c5\u5fc5\u9808\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u305d\u306e1--initialize\n  def initialize(output=$stderr)\n    @close = false\n    if output.is_a?(String)\n      @output_directory = output\n      # Make sure the directory exists and that we can\n      # write to it. If not, this will fail and processing\n      # can't start.\n      FileUtils.mkdir_p @output_directory\n      probe_file = File.join(@output_directory, '.kclrb_probe')\n      FileUtils.touch(probe_file)\n      FileUtils.rm(probe_file)\n    elsif output\n      # assume it's an IO\n      @output = output\n    else\n      fail \"Output destination cannot be nil\"\n    end\n  end\n```\n\u30af\u30e9\u30b9\u306e\u521d\u671f\u5316\u3002\u307e\u3042\u304a\u7d04\u675f\u3002\n\n\n```\u5b9f\u88c5\u5fc5\u9808\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u305d\u306e2--init_processor\n  # (see Aws::KCLrb::RecordProcessorBase#init_processor)\n  def init_processor(shard_id)\n    unless @output\n      @filename = File.join(@output_directory, \"#{shard_id}-#{Time.now.to_i}.log\")\n      @output = open(@filename, 'w')\n      @close = true\n    end\n  end\n```\nshard_id\u304c\u6e21\u3063\u3066\u304f\u308b\u3002\u3053\u308c\u304c\u5b9f\u969b\u306eProcessor\u30d7\u30ed\u30bb\u30b9\u306e\u30af\u30e9\u30b9\u521d\u671f\u5316\u30fb\u30fb\u30fb\u306b\u306a\u308b\u3093\u3060\u3068\u601d\u3046\u3002\n\n```\u5b9f\u88c5\u5fc5\u9808\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u305d\u306e3--process_records\n  # (see Aws::KCLrb::RecordProcessorBase#process_records)\n  def process_records(records, checkpointer)\n    last_seq = nil\n    records.each do |record|\n      begin\n        @output.puts Base64.decode64(record['data'])\n        @output.flush\n        last_seq = record['sequenceNumber']\n      rescue => e\n        # Make sure to handle all exceptions.\n        # Anything you write to STDERR will simply be echoed by parent process\n        STDERR.puts \"#{e}: Failed to process record '#{record}'\"\n      end\n    end\n    checkpoint_helper(checkpointer, last_seq)  if last_seq\n  end\n```\n\u5b9f\u969b\u306b\u306f\u3053\u3053\u304c\u51e6\u7406\u306e\u672c\u4f53\u3002KCL\u306e\u30c9\u30e9\u30a4\u30d0\u304cKinesis\u304c\u30ec\u30b3\u30fc\u30c9\u3092\u5b9a\u671f\u7684\u306b\u53d6\u3063\u3066\u304d\u3066\u3001records\u3068\u3044\u3046\u5f15\u6570\u3092\u4ed8\u3051\u3066\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3067\u304f\u308c\u308b\u3002\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u3042\u308b\u3068\u304a\u308a\u3001\u30c7\u30fc\u30bf\u306fBase64 Encoded\u306a\u72b6\u614b\u3067\u98db\u3093\u3067\u304f\u308b\u3002\u3082\u3046\u3072\u3068\u3064\u306echeckpointer\u3068\u3044\u3046\u5f15\u6570\u306f ```checkpointer.checkpoint(seq_number)```\u3068\u3044\u3046\u611f\u3058\u306b\u547c\u3073\u51fa\u3057\u3066\u3084\u308b\u3068DynamoDB\u306b\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u3063\u3066\u304f\u308c\u308b\u3002\n\n```ruby:\u5b9f\u88c5\u5fc5\u9808\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u305d\u306e4--shutdown\n  # (see Aws::KCLrb::RecordProcessorBase#shutdown)\n  def shutdown(checkpointer, reason)\n    checkpoint_helper(checkpointer)  if 'TERMINATE' == reason\n  ensure\n    # Make sure to cleanup state\n    @output.close  if @close\n  end\n```\n\u304a\u7247\u3065\u3051\u7528\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3002\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u3059\u308b\u307e\u3067\u547c\u3073\u51fa\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u5b9f\u969b\u306b\u306f\u5b9f\u88c5\u3057\u306a\u304f\u3066\u3082\u52d5\u304f\u3002\u3051\u3069\u307e\u3042\u3053\u3053\u3067\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u3063\u3066\u304a\u304f\u3068\u3044\u3046\u306e\u304c\u305f\u3060\u3057\u3044\u904b\u7528\u65b9\u6cd5\u3060\u3068\u601d\u3046\u3002\n\n## \u307e\u3068\u3081\n\nkclrb\u3092\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3059\u308b\u306a\u3089\n\n1. ```gem install aws-kclrb```\n2. aws/kclrb\u3092require\u3057\u3064\u3064\u3001Aws::KCLrb::RecordProcessorBase\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u3064\u304f\u308b\n3. \u4ee5\u4e0b\u306e4\u3064\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5b9f\u88c5\n - initialize\n - init_processor\n - process_records\n - shutdown\n4. properties\u30d5\u30a1\u30a4\u30eb\u3092\u3064\u304f\u3063\u3066\u3001stream\u540d\u3084region\u306a\u3069\u3092\u8a2d\u5b9a\u3002\n5. (\u3053\u308c\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3067OK) Rake\u30d5\u30a1\u30a4\u30eb\u306b\u8d77\u52d5\u30b3\u30de\u30f3\u30c9\u3092\u66f8\u3044\u3066\u3042\u3068\u306f\u8d77\u52d5\u3059\u308b\uff01\n - \u5b9f\u969b\u306b\u306f\u3082\u308d\u3082\u308d\u306e\u9577\u3044\u30b3\u30de\u30f3\u30c9\u306b\u306a\u308b\u306e\u3067Rake\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u3044\u305f\u308a\u3001\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3057\u3068\u304f\u306e\u304c\u697d\u3060\u3068\u601d\u3046\u3002\n\n\n\n## \u514d\u8cac\n\n\u3053\u308c\u306f\u500b\u4eba\u306e\u30e1\u30e2/\u610f\u898b\u3067\u3042\u308a\u3001\u79c1\u304c\u6240\u5c5e\u3059\u308b\u7d44\u7e54\u3092\u4ee3\u8868\u3059\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n", "tags": ["Kinesis", "Kcl", "Ruby", "AWS"]}