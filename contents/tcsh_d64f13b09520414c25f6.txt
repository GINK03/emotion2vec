{"context": "\n\n\u524d\u63d0\u6761\u4ef6\n\nLambda\u3078\u306e\u6a29\u9650\nLambda\u306b\u5bfe\u3057\u3066\u30d5\u30eb\u6a29\u9650\u304c\u3042\u308b\u3053\u3068\u3002\n\nAWS CLI\n\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\n\nAWS CLI 1.10.58\n\n\n\u30b3\u30de\u30f3\u30c9\naws --version\n\n\n\n\u7d50\u679c(\u4f8b)\n      aws-cli/1.10.58 Python/2.7.11 Darwin/15.6.0 botocore/1.4.48\n\n\n\nIAM Role\n'lambdaBasicExecution'\u30ed\u30fc\u30eb\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nIAM_ROLE_NAME='lambdaBasicExecution'\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws iam get-role \\\n         --role-name ${IAM_ROLE_NAME}\n\n\n\n\u7d50\u679c(\u4f8b)\n\n      {\n          \"Role\": {\n            \"AssumeRolePolicyDocument\": {\n                \"Version\": \"2012-10-17\",\n                \"Statement\": [\n                    {\n                        \"Action\": \"sts:AssumeRole\",\n                        \"Principal\": {\n                            \"Service\": \"lambda.amazonaws.com\"\n                        },\n                        \"Effect\": \"Allow\",\n                        \"Sid\": \"\"\n                    }\n                ]\n            },\n            \"RoleId\": \"AROAXXXXXXXXXXXXXXXXX\",\n            \"CreateDate\": \"2015-10-26T01:55:54Z\",\n            \"RoleName\": \"lambdaBasicExecution\",\n            \"Path\": \"/\",\n            \"Arn\": \"arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\"\n          }\n      }\n\n\nIAM\u30ed\u30fc\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001http://qiita.com/tcsh/items/6353876a5c4fef63b4d8 \u306e\u624b\u9806\u306b\u5f93\u3063\u3066\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nSlack\nSlack\u306e\u30c1\u30fc\u30e0\u7ba1\u7406\u6a29\u9650\u304c\u3042\u308b\u3053\u3068\n\n0. \u6e96\u5099\n\n0.1. \u30ea\u30fc\u30b8\u30e7\u30f3\u306e\u6c7a\u5b9a\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nexport AWS_DEFAULT_REGION='ap-northeast-1'\n\n\n\n0.2. \u5909\u6570\u306e\u78ba\u8a8d\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u304c\u60f3\u5b9a\u306e\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u78ba\u8a8d\naws configure list\n\n\n\n\u7d50\u679c(\u4f8b)\n\n            Name                    Value             Type    Location\n            ----                    -----             ----    --------\n         profile       lambdaFull-prjz-mbp13        env    AWS_DEFAULT_PROFILE\n      access_key     ****************XXXX shared-credentials-file\n      secret_key     ****************XXXX shared-credentials-file\n          region        ap-northeast-1        env    AWS_DEFAULT_REGION\n\n\n\n0.3. IAM Role\u306eARN\u53d6\u5f97\n\n\u30b3\u30de\u30f3\u30c9\nIAM_ROLE_ARN=$( \\\n        aws iam get-role \\\n          --role-name ${IAM_ROLE_NAME} \\\n          --query 'Role.Arn' \\\n          --output text \\\n) \\\n        && echo ${IAM_ROLE_ARN}\n\n\n\n\u7d50\u679c(\u4f8b)\n\n      arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\n\n\n\n0.4. Slack\u306e\u8a2d\u5b9a\n\u307e\u305a\u3001Slash Command\u306e\u8ffd\u52a0\u3092\u884c\u3044\u307e\u3059\u3002\n\n\nhttps://${SLACK_TEAM_NAME}.slack.com/apps \u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002(App Directory \u753b\u9762)\n\n\u691c\u7d22\u7a93\u306b 'Slash Commands' \u3068\u5165\u529b\u3057\u307e\u3059\u3002\n'Slash Commands'\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n\n\nBrowse Apps > Slash Commands (\u753b\u9762)\n\n\nAdd Configuration\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n\n\nNew configuration (\u753b\u9762)\n\nChoose a Command(\u5165\u529b\u6b04)\u306b\u4e0b\u8a18\u306e\u6587\u5b57\u5217\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\n\n/sayhello\n\n\n\nAdd Slash Command Integration\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n\n\nEdit configuration (\u753b\u9762)\n\n'Integration Settings'\u6b04\u306e'Token'\u306e\u5024\u3092\u30e1\u30e2\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n\n\u4f8b: DxAoIy9PdXXEXe08mvH9VsQL\n\n\n\n\n\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nSLACK_TOKEN='<Slack\u306eToken\u306e\u5024>'\n\n\n\n1. \u4e8b\u524d\u4f5c\u696d\n\n1.1. Lambda\u95a2\u6570\u540d\u306e\u6c7a\u5b9a\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nLAMBDA_FUNC_NAME=\"slack-echo-command-$( date '+%Y%m%d' )\" \\\n        && echo ${LAMBDA_FUNC_NAME}\n\n\n\u540c\u540d\u306eLambda\u95a2\u6570\u306e\u4e0d\u5b58\u5728\u78ba\u8a8d\n\n\u30b3\u30de\u30f3\u30c9\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n\n\n\n\u7d50\u679c(\u4f8b)\n\n      A client error (ResourceNotFoundException) occurred when calling the GetFunction operation: Function not found: arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:slack-echo-command-20160829\n\n\n\n1.2. Lambda\u95a2\u6570\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_LAMBDA_FUNC=\"${LAMBDA_FUNC_NAME}.py\"\nPY_FUNC_NAME='lambda_handler'\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n          FILE_LAMBDA_FUNC: ${FILE_LAMBDA_FUNC}\n          PY_FUNC_NAME:     ${PY_FUNC_NAME}\n          SLACK_TOKEN:      ${SLACK_TOKEN}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\ncat << EOF > ${FILE_LAMBDA_FUNC}\nimport boto3\nfrom base64 import b64decode\nfrom urlparse import parse_qs\nimport logging\n\n#ENCRYPTED_EXPECTED_TOKEN = \"<kmsEncryptedToken>\" # Enter the base-64 encoded, encrypted Slack command token (CiphertextBlob)\n\n#kms = boto3.client('kms')\n#expected_token = kms.decrypt(CiphertextBlob = b64decode(ENCRYPTED_EXPECTED_TOKEN))['Plaintext']\nexpected_token = '${SLACK_TOKEN}'\n\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\ndef lambda_handler(event, context):\n    req_body = event['body']\n    params = parse_qs(req_body)\n    token = params['token'][0]\n    if token != expected_token:\n        logger.error(\"Request token (%s) does not match exptected\", token)\n        raise Exception(\"Invalid request token\")\n\n    user = params['user_name'][0]\n    command = params['command'][0]\n    channel = params['channel_name'][0]\n    command_text = params['text'][0]\n\n    return \"%s invoked %s in %s with the following text: %s\" % (user, command, channel, command_text)\nEOF\n\ncat ${FILE_LAMBDA_FUNC}\n\n\n\n\u30b3\u30de\u30f3\u30c9\nzip ${LAMBDA_FUNC_NAME}.zip ${FILE_LAMBDA_FUNC}\n\n\n\n\u7d50\u679c(\u4f8b)\n      adding: slack-echo-command-20160829.py (deflated 43%)\n\n\n\n2. Lambda\u95a2\u6570\u306e\u4f5c\u6210\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nLAMBDA_FUNC_DESC='A function that handles a Slack slash command and echoes the details back to the user.'\nLAMBDA_RUNTIME='python2.7'\nLAMBDA_HANDLER=\"${LAMBDA_FUNC_NAME}.${PY_FUNC_NAME}\"\nFILE_LAMBDA_ZIP=\"${LAMBDA_FUNC_NAME}.zip\"\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        LAMBDA_FUNC_NAME:  ${LAMBDA_FUNC_NAME}\n        LAMBDA_FUNC_DESC: \"${LAMBDA_FUNC_DESC}\"\n        LAMBDA_RUNTIME:    ${LAMBDA_RUNTIME}\n        FILE_LAMBDA_ZIP    ${FILE_LAMBDA_ZIP}\n        IAM_ROLE_ARN:      ${IAM_ROLE_ARN}\n        LAMBDA_HANDLER:    ${LAMBDA_HANDLER}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda create-function \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --description \"${LAMBDA_FUNC_DESC}\" \\\n        --zip-file fileb://${FILE_LAMBDA_ZIP} \\\n        --runtime ${LAMBDA_RUNTIME} \\\n        --role ${IAM_ROLE_ARN} \\\n        --handler ${LAMBDA_HANDLER}\n\n\n\n\u7d50\u679c(\u4f8b)\n\n      {\n        \"CodeSha256\": \"WnGd6iPBS0rGCJor4zyuOaGBtzQ3I/OgHerXWqZzbL8=\",\n        \"FunctionName\": \"slack-echo-command-20160829\",\n        \"CodeSize\": 350,\n        \"MemorySize\": 128,\n        \"FunctionArn\": \"arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:slack-echo-command-20160829\",\n        \"Version\": \"$LATEST\",\n        \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\",\n        \"Timeout\": 3,\n        \"LastModified\": \"2016-08-28T01:23:45.678+0000\",\n        \"Handler\": \"slack-echo-command-20160829.lambda_handler\",\n        \"Runtime\": \"python2.7\",\n        \"Description\": \"A function that handles a Slack slash command and echoes the details back to the user.\"\n      }\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n\n\n\n\u7d50\u679c(\u4f8b)\n\n      {\n        \"Code\": {\n          \"RepositoryType\": \"S3\",\n          \"Location\": \"https://awslambda-ap-ne-1-tasks.s3-ap-northeast-1.amazonaws.com/snapshots/XXXXXXXXXXXX/HelloWorld-2979ba79-b08f-495d-9ee6-46397c95ba13?x-amz-security-token=AQoDYXdzEDoa8AMR6t8h66eOXhN3%2Fx7XpuRxvf7pVn7IuWV4cEmwx0CtZT6yxCJ1%2BWmigYXqGoyQHuBYOWnxbhmwEcTg839qMuhSu1fk0fXpXf0oJOLkhKMudNqhdElyFQpzyT6Q8GDfhAsfbX9wvwCDTty4imxz7MczF%2FQl6tgvTYdip08ap5fAyrknZGV1%2B1Ggnp5w6JOjydYxuUsWwhoxoEWzi7SoVTmpRQQA91c4VW9lNotOAHACFxo6klzDPM8mxR9RJl66WxFugL0wQJyLUpmtjS9XoArD86sEWWiIccMpV2BQipTPQlzL%2F1Hoy%2BDF6QUxyPUihlDjPBoJTISTP8W1wxmzW%2BLbilAfFQRPY7CFjzR0k%2FA%2FIX5x9iyz52Pu1Q0ASTw1l%2Fq%2Fo3pRbvzWR79QS%2BpxXrwbYzoQHKiK62DSTsQo5tqKPsiDCYzrPxbq8lm7pNBPG%2FsxjePRWBVJeRl08WxEjSjoRRwBOPX5mz1BCUoUBPGG5tEENp87A%2FCdDgibFWM5DdYhwtaYPY7FTmi8DvqjQHL9jOmP8YuVteBTBcv8nFW6UbErPjwwn79FKG1u5M9HoTWUqUMBByz6D4tTRSEw6iJU7XdCujFnhnHe5V8imZ1KGI7fDWpciJhrhml0wnKPCK%2Fe9lK1P2kO7ldSWc7zn5hcIOD2tbEF&AWSAccessKeyId=ASIAJFVALOKV5SJVYPPA&Expires=1445825978&Signature=bvwu1Ny34LgTmZeOO3q4sn7x3Fg%3D\"\n        },\n        \"Configuration\": {\n          \"Version\": \"$LATEST\",\n          \"CodeSha256\": \"WnGd6iPBS0rGCJor4zyuOaGBtzQ3I/OgHerXWqZzbL8=\",\n          \"FunctionName\": \"slack-echo-command-20160829\",\n          \"MemorySize\": 128,\n          \"CodeSize\": 350,\n          \"FunctionArn\": \"arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:slack-echo-command-20160829\",\n          \"Handler\": \"slack-echo-command-20160829.lambda_handler\",\n          \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\",\n          \"Timeout\": 3,\n          \"LastModified\": \"2016-08-28T01:23:45.678+0000\",\n          \"Runtime\": \"python2.7\",\n          \"Description\": \"A function that handles a Slack slash command and echoes the details back to the user.\"\n        }\n      }\n\n\n\n3. Lambda\u95a2\u6570\u306e\u52d5\u4f5c\u78ba\u8a8d\n\n3.1. \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\n\u30b3\u30de\u30f3\u30c9\u95a2\u9023\u306e\u5909\u6570\u306e\u6307\u5b9a\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nSTR_COMMAND='sayhello'\nSTR_CHANNEL_NAME='general'\n\n\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nSTR_TEXT='ec2'\nSTR_USER_NAME='Steve'\n\n\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_INPUT=\"${LAMBDA_FUNC_NAME}-data.json\" \\\n          && echo ${FILE_INPUT}\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        SLACK_TOKEN:      ${SLACK_TOKEN}\n        STR_COMMAND:      ${STR_COMMAND}\n        STR_TEXT:         ${STR_TEXT}\n        STR_USER_NAME:    ${STR_USER_NAME}\n        STR_CHANNEL_NAME: ${STR_CHANNEL_NAME}\n        FILE_INPUT:       ${FILE_INPUT}\n\nETX\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\ncat << EOF > ${FILE_INPUT}\n{\n        \"body\": \"token=${SLACK_TOKEN}&command=/sayhello&text=ec2&user_name=Steve&channel_name=general\"\n}\nEOF\n\ncat ${FILE_INPUT}\n\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u58ca\u308c\u3066\u306a\u3044\u304b\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\njsonlint -q ${FILE_INPUT}\n\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u306a\u3051\u308c\u3070OK\u3067\u3059\u3002\n\n3.2. lambda\u95a2\u6570\u306e\u624b\u52d5\u5b9f\u884c\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_OUTPUT_LAMBDA=\"${LAMBDA_FUNC_NAME}-out.txt\"\nFILE_LOG_LAMBDA=\"${LAMBDA_FUNC_NAME}-$(date +%Y%m%d%H%M%S).log\"\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        LAMBDA_FUNC_NAME:   ${LAMBDA_FUNC_NAME}\n        FILE_INPUT:         ${FILE_INPUT}\n        FILE_OUTPUT_LAMBDA: ${FILE_OUTPUT_LAMBDA}\n        FILE_LOG_LAMBDA:    ${FILE_LOG_LAMBDA}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws lambda invoke \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --log-type Tail \\\n        --payload file://${FILE_INPUT} \\\n        ${FILE_OUTPUT_LAMBDA} \\\n        > ${FILE_LOG_LAMBDA}\n\n\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'StatusCode'\n\n\n\n\u7d50\u679c(\u4f8b)\n\n      200\n\n\n\n3.3. lambda\u95a2\u6570\u306e\u5b9f\u884c\u7d50\u679c\u306e\u78ba\u8a8d\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_OUTPUT_LAMBDA}\n\n\n\n\u7d50\u679c(\u4f8b)\n\n      \"Steve invoked /sayhello in general with the following text: ec2\"\n\n\n\n3.4. lambda\u95a2\u6570\u306e\u30ed\u30b0\u306e\u78ba\u8a8d\n\n\u30b3\u30de\u30f3\u30c9\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'LogResult' \\\n        | sed 's/\"//' \\\n        | base64 --decode\n\n\n\n\u7d50\u679c(\u4f8b)\n\n      START RequestId: 6a466adf-6cec-11e6-9e83-f3993fe0dc41 Version: $LATEST\n      END RequestId: 6a466adf-6cec-11e6-9e83-f3993fe0dc41\n      REPORT RequestId: 6a466adf-6cec-11e6-9e83-f3993fe0dc41      Duration: 0.34 ms       Billed Duration: 100 ms         Memory Size: 128 MB     Max Memory Used: 45 MB\n\n\n\n\u5b8c\u4e86\nLambda\u306e\u5b9f\u884c\u8a31\u53ef\u306f\u3001RestAPI\u4f5c\u6210\u5f8c\u306b\u884c\u3044\u307e\u3059\u3002\n\n# \u524d\u63d0\u6761\u4ef6\n\n\n## Lambda\u3078\u306e\u6a29\u9650\n\nLambda\u306b\u5bfe\u3057\u3066\u30d5\u30eb\u6a29\u9650\u304c\u3042\u308b\u3053\u3068\u3002\n\n\n## AWS CLI\n\n\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\n\n* AWS CLI 1.10.58\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws --version\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      aws-cli/1.10.58 Python/2.7.11 Darwin/15.6.0 botocore/1.4.48\n```\n\n\n## IAM Role\n\n'lambdaBasicExecution'\u30ed\u30fc\u30eb\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nIAM_ROLE_NAME='lambdaBasicExecution'\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws iam get-role \\\n         --role-name ${IAM_ROLE_NAME}\n```\n\n```json:\u7d50\u679c(\u4f8b):\n\n      {\n          \"Role\": {\n            \"AssumeRolePolicyDocument\": {\n                \"Version\": \"2012-10-17\",\n                \"Statement\": [\n                    {\n                        \"Action\": \"sts:AssumeRole\",\n                        \"Principal\": {\n                            \"Service\": \"lambda.amazonaws.com\"\n                        },\n                        \"Effect\": \"Allow\",\n                        \"Sid\": \"\"\n                    }\n                ]\n            },\n            \"RoleId\": \"AROAXXXXXXXXXXXXXXXXX\",\n            \"CreateDate\": \"2015-10-26T01:55:54Z\",\n            \"RoleName\": \"lambdaBasicExecution\",\n            \"Path\": \"/\",\n            \"Arn\": \"arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\"\n          }\n      }\n```\n\nIAM\u30ed\u30fc\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001http://qiita.com/tcsh/items/6353876a5c4fef63b4d8 \u306e\u624b\u9806\u306b\u5f93\u3063\u3066\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n## Slack\n\nSlack\u306e\u30c1\u30fc\u30e0\u7ba1\u7406\u6a29\u9650\u304c\u3042\u308b\u3053\u3068\n\n\n# 0. \u6e96\u5099\n\n\n## 0.1. \u30ea\u30fc\u30b8\u30e7\u30f3\u306e\u6c7a\u5b9a\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nexport AWS_DEFAULT_REGION='ap-northeast-1'\n```\n\n\n## 0.2. \u5909\u6570\u306e\u78ba\u8a8d\n\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u304c\u60f3\u5b9a\u306e\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\naws configure list\n```\n\n```text:\u7d50\u679c(\u4f8b):\n\n            Name                    Value             Type    Location\n            ----                    -----             ----    --------\n         profile       lambdaFull-prjz-mbp13        env    AWS_DEFAULT_PROFILE\n      access_key     ****************XXXX shared-credentials-file\n      secret_key     ****************XXXX shared-credentials-file\n          region        ap-northeast-1        env    AWS_DEFAULT_REGION\n```\n\n\n## 0.3. IAM Role\u306eARN\u53d6\u5f97\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nIAM_ROLE_ARN=$( \\\n        aws iam get-role \\\n          --role-name ${IAM_ROLE_NAME} \\\n          --query 'Role.Arn' \\\n          --output text \\\n) \\\n        && echo ${IAM_ROLE_ARN}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n\n      arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\n```\n\n\n## 0.4. Slack\u306e\u8a2d\u5b9a\n\n\u307e\u305a\u3001Slash Command\u306e\u8ffd\u52a0\u3092\u884c\u3044\u307e\u3059\u3002\n\n1. https://${SLACK_TEAM_NAME}.slack.com/apps \u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002(App Directory \u753b\u9762)\n   - \u691c\u7d22\u7a93\u306b 'Slash Commands' \u3068\u5165\u529b\u3057\u307e\u3059\u3002\n   - 'Slash Commands'\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n2. Browse Apps > Slash Commands (\u753b\u9762)\n   - [Add Configuration](\u30dc\u30bf\u30f3)\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n3. New configuration (\u753b\u9762)\n   - Choose a Command(\u5165\u529b\u6b04)\u306b\u4e0b\u8a18\u306e\u6587\u5b57\u5217\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n     - /sayhello\n   - [Add Slash Command Integration](\u30dc\u30bf\u30f3)\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n4. Edit configuration (\u753b\u9762)\n   - 'Integration Settings'\u6b04\u306e'Token'\u306e\u5024\u3092\u30e1\u30e2\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n     - \u4f8b: DxAoIy9PdXXEXe08mvH9VsQL\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nSLACK_TOKEN='<Slack\u306eToken\u306e\u5024>'\n```\n\n\n# 1. \u4e8b\u524d\u4f5c\u696d\n\n\n## 1.1. Lambda\u95a2\u6570\u540d\u306e\u6c7a\u5b9a\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nLAMBDA_FUNC_NAME=\"slack-echo-command-$( date '+%Y%m%d' )\" \\\n        && echo ${LAMBDA_FUNC_NAME}\n```\n\n\u540c\u540d\u306eLambda\u95a2\u6570\u306e\u4e0d\u5b58\u5728\u78ba\u8a8d\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n\n      A client error (ResourceNotFoundException) occurred when calling the GetFunction operation: Function not found: arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:slack-echo-command-20160829\n```\n\n\n## 1.2. Lambda\u95a2\u6570\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_LAMBDA_FUNC=\"${LAMBDA_FUNC_NAME}.py\"\nPY_FUNC_NAME='lambda_handler'\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n          FILE_LAMBDA_FUNC: ${FILE_LAMBDA_FUNC}\n          PY_FUNC_NAME:     ${PY_FUNC_NAME}\n          SLACK_TOKEN:      ${SLACK_TOKEN}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat << EOF > ${FILE_LAMBDA_FUNC}\nimport boto3\nfrom base64 import b64decode\nfrom urlparse import parse_qs\nimport logging\n\n#ENCRYPTED_EXPECTED_TOKEN = \"<kmsEncryptedToken>\" # Enter the base-64 encoded, encrypted Slack command token (CiphertextBlob)\n\n#kms = boto3.client('kms')\n#expected_token = kms.decrypt(CiphertextBlob = b64decode(ENCRYPTED_EXPECTED_TOKEN))['Plaintext']\nexpected_token = '${SLACK_TOKEN}'\n\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\n\ndef lambda_handler(event, context):\n    req_body = event['body']\n    params = parse_qs(req_body)\n    token = params['token'][0]\n    if token != expected_token:\n        logger.error(\"Request token (%s) does not match exptected\", token)\n        raise Exception(\"Invalid request token\")\n\n    user = params['user_name'][0]\n    command = params['command'][0]\n    channel = params['channel_name'][0]\n    command_text = params['text'][0]\n\n    return \"%s invoked %s in %s with the following text: %s\" % (user, command, channel, command_text)\nEOF\n\ncat ${FILE_LAMBDA_FUNC}\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nzip ${LAMBDA_FUNC_NAME}.zip ${FILE_LAMBDA_FUNC}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      adding: slack-echo-command-20160829.py (deflated 43%)\n```\n\n\n# 2. Lambda\u95a2\u6570\u306e\u4f5c\u6210\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nLAMBDA_FUNC_DESC='A function that handles a Slack slash command and echoes the details back to the user.'\nLAMBDA_RUNTIME='python2.7'\nLAMBDA_HANDLER=\"${LAMBDA_FUNC_NAME}.${PY_FUNC_NAME}\"\nFILE_LAMBDA_ZIP=\"${LAMBDA_FUNC_NAME}.zip\"\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n        LAMBDA_FUNC_NAME:  ${LAMBDA_FUNC_NAME}\n        LAMBDA_FUNC_DESC: \"${LAMBDA_FUNC_DESC}\"\n        LAMBDA_RUNTIME:    ${LAMBDA_RUNTIME}\n        FILE_LAMBDA_ZIP    ${FILE_LAMBDA_ZIP}\n        IAM_ROLE_ARN:      ${IAM_ROLE_ARN}\n        LAMBDA_HANDLER:    ${LAMBDA_HANDLER}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda create-function \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --description \"${LAMBDA_FUNC_DESC}\" \\\n        --zip-file fileb://${FILE_LAMBDA_ZIP} \\\n        --runtime ${LAMBDA_RUNTIME} \\\n        --role ${IAM_ROLE_ARN} \\\n        --handler ${LAMBDA_HANDLER}\n```\n\n```json:\u7d50\u679c(\u4f8b):\n\n      {\n        \"CodeSha256\": \"WnGd6iPBS0rGCJor4zyuOaGBtzQ3I/OgHerXWqZzbL8=\",\n        \"FunctionName\": \"slack-echo-command-20160829\",\n        \"CodeSize\": 350,\n        \"MemorySize\": 128,\n        \"FunctionArn\": \"arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:slack-echo-command-20160829\",\n        \"Version\": \"$LATEST\",\n        \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\",\n        \"Timeout\": 3,\n        \"LastModified\": \"2016-08-28T01:23:45.678+0000\",\n        \"Handler\": \"slack-echo-command-20160829.lambda_handler\",\n        \"Runtime\": \"python2.7\",\n        \"Description\": \"A function that handles a Slack slash command and echoes the details back to the user.\"\n      }\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda get-function \\\n        --function-name ${LAMBDA_FUNC_NAME}\n```\n\n```json:\u7d50\u679c(\u4f8b):\n\n      {\n        \"Code\": {\n          \"RepositoryType\": \"S3\",\n          \"Location\": \"https://awslambda-ap-ne-1-tasks.s3-ap-northeast-1.amazonaws.com/snapshots/XXXXXXXXXXXX/HelloWorld-2979ba79-b08f-495d-9ee6-46397c95ba13?x-amz-security-token=AQoDYXdzEDoa8AMR6t8h66eOXhN3%2Fx7XpuRxvf7pVn7IuWV4cEmwx0CtZT6yxCJ1%2BWmigYXqGoyQHuBYOWnxbhmwEcTg839qMuhSu1fk0fXpXf0oJOLkhKMudNqhdElyFQpzyT6Q8GDfhAsfbX9wvwCDTty4imxz7MczF%2FQl6tgvTYdip08ap5fAyrknZGV1%2B1Ggnp5w6JOjydYxuUsWwhoxoEWzi7SoVTmpRQQA91c4VW9lNotOAHACFxo6klzDPM8mxR9RJl66WxFugL0wQJyLUpmtjS9XoArD86sEWWiIccMpV2BQipTPQlzL%2F1Hoy%2BDF6QUxyPUihlDjPBoJTISTP8W1wxmzW%2BLbilAfFQRPY7CFjzR0k%2FA%2FIX5x9iyz52Pu1Q0ASTw1l%2Fq%2Fo3pRbvzWR79QS%2BpxXrwbYzoQHKiK62DSTsQo5tqKPsiDCYzrPxbq8lm7pNBPG%2FsxjePRWBVJeRl08WxEjSjoRRwBOPX5mz1BCUoUBPGG5tEENp87A%2FCdDgibFWM5DdYhwtaYPY7FTmi8DvqjQHL9jOmP8YuVteBTBcv8nFW6UbErPjwwn79FKG1u5M9HoTWUqUMBByz6D4tTRSEw6iJU7XdCujFnhnHe5V8imZ1KGI7fDWpciJhrhml0wnKPCK%2Fe9lK1P2kO7ldSWc7zn5hcIOD2tbEF&AWSAccessKeyId=ASIAJFVALOKV5SJVYPPA&Expires=1445825978&Signature=bvwu1Ny34LgTmZeOO3q4sn7x3Fg%3D\"\n        },\n        \"Configuration\": {\n          \"Version\": \"$LATEST\",\n          \"CodeSha256\": \"WnGd6iPBS0rGCJor4zyuOaGBtzQ3I/OgHerXWqZzbL8=\",\n          \"FunctionName\": \"slack-echo-command-20160829\",\n          \"MemorySize\": 128,\n          \"CodeSize\": 350,\n          \"FunctionArn\": \"arn:aws:lambda:ap-northeast-1:XXXXXXXXXXXX:function:slack-echo-command-20160829\",\n          \"Handler\": \"slack-echo-command-20160829.lambda_handler\",\n          \"Role\": \"arn:aws:iam::XXXXXXXXXXXX:role/lambdaBasicExecution\",\n          \"Timeout\": 3,\n          \"LastModified\": \"2016-08-28T01:23:45.678+0000\",\n          \"Runtime\": \"python2.7\",\n          \"Description\": \"A function that handles a Slack slash command and echoes the details back to the user.\"\n        }\n      }\n```\n\n\n# 3. Lambda\u95a2\u6570\u306e\u52d5\u4f5c\u78ba\u8a8d\n\n\n## 3.1. \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\n\n\u30b3\u30de\u30f3\u30c9\u95a2\u9023\u306e\u5909\u6570\u306e\u6307\u5b9a\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nSTR_COMMAND='sayhello'\nSTR_CHANNEL_NAME='general'\n```\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nSTR_TEXT='ec2'\nSTR_USER_NAME='Steve'\n```\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_INPUT=\"${LAMBDA_FUNC_NAME}-data.json\" \\\n          && echo ${FILE_INPUT}\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n        SLACK_TOKEN:      ${SLACK_TOKEN}\n        STR_COMMAND:      ${STR_COMMAND}\n        STR_TEXT:         ${STR_TEXT}\n        STR_USER_NAME:    ${STR_USER_NAME}\n        STR_CHANNEL_NAME: ${STR_CHANNEL_NAME}\n        FILE_INPUT:       ${FILE_INPUT}\n\nETX\n```\n\n```bash:\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf:\ncat << EOF > ${FILE_INPUT}\n{\n        \"body\": \"token=${SLACK_TOKEN}&command=/sayhello&text=ec2&user_name=Steve&channel_name=general\"\n}\nEOF\n\ncat ${FILE_INPUT}\n```\n\nJSON\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u58ca\u308c\u3066\u306a\u3044\u304b\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\njsonlint -q ${FILE_INPUT}\n```\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u306a\u3051\u308c\u3070OK\u3067\u3059\u3002\n\n\n\n## 3.2. lambda\u95a2\u6570\u306e\u624b\u52d5\u5b9f\u884c\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nFILE_OUTPUT_LAMBDA=\"${LAMBDA_FUNC_NAME}-out.txt\"\nFILE_LOG_LAMBDA=\"${LAMBDA_FUNC_NAME}-$(date +%Y%m%d%H%M%S).log\"\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d:\ncat << ETX\n\n        LAMBDA_FUNC_NAME:   ${LAMBDA_FUNC_NAME}\n        FILE_INPUT:         ${FILE_INPUT}\n        FILE_OUTPUT_LAMBDA: ${FILE_OUTPUT_LAMBDA}\n        FILE_LOG_LAMBDA:    ${FILE_LOG_LAMBDA}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws lambda invoke \\\n        --function-name ${LAMBDA_FUNC_NAME} \\\n        --log-type Tail \\\n        --payload file://${FILE_INPUT} \\\n        ${FILE_OUTPUT_LAMBDA} \\\n        > ${FILE_LOG_LAMBDA}\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'StatusCode'\n```\n\n```text:\u7d50\u679c(\u4f8b):\n\n      200\n```\n\n\n## 3.3. lambda\u95a2\u6570\u306e\u5b9f\u884c\u7d50\u679c\u306e\u78ba\u8a8d\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_OUTPUT_LAMBDA}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n\n      \"Steve invoked /sayhello in general with the following text: ec2\"\n```\n\n\n## 3.4. lambda\u95a2\u6570\u306e\u30ed\u30b0\u306e\u78ba\u8a8d\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat ${FILE_LOG_LAMBDA} \\\n        | jp.py 'LogResult' \\\n        | sed 's/\"//' \\\n        | base64 --decode\n```\n\n```text:\u7d50\u679c(\u4f8b):\n\n      START RequestId: 6a466adf-6cec-11e6-9e83-f3993fe0dc41 Version: $LATEST\n      END RequestId: 6a466adf-6cec-11e6-9e83-f3993fe0dc41\n      REPORT RequestId: 6a466adf-6cec-11e6-9e83-f3993fe0dc41      Duration: 0.34 ms       Billed Duration: 100 ms         Memory Size: 128 MB     Max Memory Used: 45 MB\n```\n\n\n# \u5b8c\u4e86\n\nLambda\u306e\u5b9f\u884c\u8a31\u53ef\u306f\u3001RestAPI\u4f5c\u6210\u5f8c\u306b\u884c\u3044\u307e\u3059\u3002\n", "tags": ["AWS", "aws-cli", "lambda"]}