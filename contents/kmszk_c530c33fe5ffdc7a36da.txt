{"context": "\n\n\u306f\u3058\u3081\u306b\n\u4e00\u6628\u65e5\u306b\u66f8\u3044\u305fRedux\u306ePresentational Components\u3068Container Components\u306e\u5f79\u5272\u306e\uff08\u500b\u4eba\u7684\u306a\uff09\u6574\u7406\u30e1\u30e2\u306e\u7d9a\u304d\u7684\u306a\u7acb\u3061\u4f4d\u7f6e\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u5f15\u304d\u7d9a\u304d\u540c\u3058\u3088\u3046\u306b\u3001\u4eca\u5ea6\u306f http://redux.js.org/docs/advanced/AsyncActions.html \u306e\u5185\u5bb9\u3068\u306a\u308a\u307e\u3059\u3002\n\nRedux Thunk middleware\nRedux\u3067\u975e\u540c\u671f\u901a\u4fe1\u3092\u3059\u308b\u5834\u5408\u306b\u306f\u3001Action\u3068Reducer\u306e\u9593\u306bmiddleware\u3068\u3044\u3046\u5f62\u3067ajax\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u305b\u307e\u3059\u3002 \nredux-thunk\u3092\uff08redux\u672c\u5bb6\u30b5\u30a4\u30c8\u306b\u3088\u308b\u3068\u3053\u3061\u3089\u3092\u6a19\u6e96\u7684\u306b\uff09\u5229\u7528\u3057\u307e\u3059\u3002\n\uff08Thunk\u3068\u8a00\u3046\u8a00\u8449\u81ea\u4f53\u304c\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u6982\u5ff5\u307f\u305f\u3044\u3067\u3059\u3002\n\u82f1Wikipedia\u3067\u306f \"In computer programming, a thunk is a subroutine that is created, often automatically, to assist a call to another subroutine.\" \u2192 \u300eThunk\u306f\uff08\u3057\u3070\u3057\u3070\u81ea\u52d5\u3067\uff09\u751f\u6210\u3055\u308c\u308b\u3001\u4ed6\u306e\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u3092\u547c\u3076\u305f\u3081\u306e\u652f\u63f4\u7684\u306a\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u300f\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\uff09\n\nmiddleware\u306e\u8a18\u8ff0\u7b87\u6240\u306b\u3064\u3044\u3066\nmiddleware\u306e\u30e1\u30a4\u30f3\u306e\u8a18\u8ff0\u7b87\u6240\u306fAction\u306b\u306a\u308a\u307e\u3059\u3002\n\u5f79\u5272\u7684\u306a\u3053\u3068\u3092\u6c17\u306b\u3059\u308b\u3068\u3001Action\u306e\u9818\u57df\u3067\u306f\u300e\u4f55\u304b\u300f\u304c\u8d77\u3053\u3063\u305f\u6642\u3001Store\u306b\u300e\u3069\u3093\u306a\u30c7\u30fc\u30bf\u300f\u3092\u5229\u7528\u3059\u308b\u304b\u3068\u3044\u3046\u3053\u3068\u3092\u5b9a\u7fa9\u3059\u308b\u306e\u3067\u3001Action\u306bAjax\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u3053\u3068\u3092\u8a18\u8ff0\u3057\u3061\u3083\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u6c17\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u5b9f\u969b\u306b\u5b9f\u884c\u3055\u308c\u308b\u306e\u306fAction\u3068Reducer\u306e\u9593\u306emiddleware\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308b\u3088\u3046\u3067\u3001\u6d41\u308c\u306e\u5143\u306e\u65b9\u3067\u3042\u308bAction\u5074\u3067\u8a18\u8ff0\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\nredux-thunk\u3092\u4f7f\u3046\napplyMiddleware()\u95a2\u6570\u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u3063\u3066\u81ea\u5206\u306eRedux\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u9069\u5fdc\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\nindex.js\nimport thunkMiddleware from 'redux-thunk'\nimport createLogger from 'redux-logger'\nimport { createStore, applyMiddleware } from 'redux'\nimport { selectSubreddit, fetchPosts } from './actions'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(\n    thunkMiddleware, // lets us dispatch() functions\n    loggerMiddleware // neat middleware that logs actions\n  )\n)\n\nstore.dispatch(selectSubreddit('reactjs'))\nstore.dispatch(fetchPosts('reactjs')).then(() =>\n  console.log(store.getState())\n)\n\n\n\u306e\u3088\u3046\u306b\u9069\u5fdc\u3067\u304d\u307e\u3059\u3002\n\u203b store.dispatch()\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\nRedux\u306eAction\u3001Reducer\u3001Store\u306e\uff08\u500b\u4eba\u7684\u306a\uff09\u6574\u7406\u30e1\u30e2 - Action Creators\n\nAsync Actions\n\u524d\u8ff0\u306e\u3088\u3046\u306bAction\u5074\u3067Middleware\u5229\u7528\u90e8\u5206\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\nRedux\u3067Async\u3092\u4f7f\u3046\u5834\u5408\u306b\u306f\u4e0b\u8a18\u306e3\u3064\u306eAction\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\u8981\u6c42\u304c\u958b\u59cb\u3055\u308c\u305f\u3053\u3068\u3092Reducer\u306b\u77e5\u3089\u305b\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3002\n\u8981\u6c42\u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u305f\u3053\u3068\u3092Reducer\u306b\u901a\u77e5\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3002\n\u8981\u6c42\u304c\u5931\u6557\u3057\u305f\u3053\u3068\u3092Reducer\u306b\u901a\u77e5\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3002\n\n\u30a4\u30e1\u30fc\u30b8\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\n{ type: 'FETCH_POSTS' }\n{ type: 'FETCH_POSTS', status: 'error', error: 'Oops' }\n{ type: 'FETCH_POSTS', status: 'success', response: { ... } }\n\n\u307e\u305f\u306f\n{ type: 'FETCH_POSTS_REQUEST' }\n{ type: 'FETCH_POSTS_FAILURE', error: 'Oops' }\n{ type: 'FETCH_POSTS_SUCCESS', response: { ... } }\n\n\u66f8\u304d\u65b9\u306f\u304a\u597d\u304d\u306a\u65b9\u3067\u3069\u3046\u305e\u3002\n\nAction (fetch\u95a2\u6570)\n\u672c\u5bb6\u30b5\u30a4\u30c8\u306e\u65b9\u3067\u306f\u5229\u7528\u4f8b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306bfetch()\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001Ajax\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\nactions.js\u306e\u4e00\u90e8\u629c\u7c8b\nimport fetch from 'isomorphic-fetch'\n\nexport const REQUEST_POSTS = 'REQUEST_POSTS'\nfunction requestPosts(subreddit) {\n  return {\n    type: REQUEST_POSTS,\n    subreddit\n  }\n}\n\n// \u4e2d\u7565\n\n// \u4ee5\u4e0b\u3001\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u524a\u9664\u3057\u305f\u4f8b\u306b\u306a\u308a\u307e\u3059\nexport function fetchPosts(subreddit) {\n  return function (dispatch) {\n    dispatch(requestPosts(subreddit))\n\n    return fetch(`http://www.reddit.com/r/${subreddit}.json`)\n      .then(response => response.json())\n      .then(json =>\n        dispatch(receivePosts(subreddit, json))\n      )\n  }\n}\n\n\n\u203b \u3053\u3053\u3067\u51fa\u3066\u304f\u308bfetch()\u95a2\u6570\u306fjavascript\u3067\u5b9f\u88c5\u304c\u9032\u3093\u3067\u3044\u308b\u6a19\u6e96\u306e\u95a2\u6570\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\u305f\u3060\u3001\u307e\u3060\u672a\u5b9f\u88c5\u306a\u30d6\u30e9\u30a6\u30b6\u304c\u591a\u3044\u306e\u3067\u3001isomorphic-fetch\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3068\u306e\u3053\u3068\u3002\n\u3042\u3068\u306e\u66f8\u304d\u65b9(Reducers\u3001Components)\u306f\u3001Synchronous(\u975e\u540c\u671f)\u306a\u3068\u304d\u306eAction Creator\u3068\u4e00\u7dd2\u306b\u306a\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\nReducer\n\u540c\u671f\u306e\u3068\u304d\u3068\u4e00\u7dd2\u3067\u3059\u304c\u3001\u53c2\u8003\u306b\u306a\u308b\u306e\u3067\u672c\u5bb6\u30b5\u30a4\u30c8\u304b\u3089\u5f15\u7528\u3055\u305b\u3066\u6700\u5f8c\u306b\u4f75\u305b\u3066\u8f09\u305b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\nReducer\u3067\u6210\u529f\u3057\u305f\u6642\u3001\u5931\u6557\u3057\u305f\u3068\u304d\u306eprops\u306e\u5185\u5bb9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u3060\u3068postsBySubreddit()\u3067\u5168\u90e8\u53d7\u3051\u3066\u3001\u6295\u7a3f\u95a2\u9023\u3060\u3051\u62bd\u51fa\u3057\u3066post()\u306b\u6e21\u3057\u3066\u5404\u6319\u52d5\u3092\u632f\u308a\u5206\u3051\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\nreducers.js\nimport { combineReducers } from 'redux'\nimport {\n  SELECT_SUBREDDIT, INVALIDATE_SUBREDDIT,\n  REQUEST_POSTS, RECEIVE_POSTS\n} from './actions'\n\nfunction selectedSubreddit(state = 'reactjs', action) {\n  // \u7565\n}\n\nfunction posts(state = {\n  isFetching: false,\n  didInvalidate: false,\n  items: []\n}, action) {\n  switch (action.type) {\n    case INVALIDATE_SUBREDDIT:\n      return Object.assign({}, state, {\n        didInvalidate: true\n      })\n    case REQUEST_POSTS:\n      return Object.assign({}, state, {\n        isFetching: true,\n        didInvalidate: false\n      })\n    case RECEIVE_POSTS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        didInvalidate: false,\n        items: action.posts,\n        lastUpdated: action.receivedAt\n      })\n    default:\n      return state\n  }\n}\n\nfunction postsBySubreddit(state = { }, action) {\n  switch (action.type) {\n    case INVALIDATE_SUBREDDIT:\n    case RECEIVE_POSTS:\n    case REQUEST_POSTS:\n      return Object.assign({}, state, {\n        [action.subreddit]: posts(state[action.subreddit], action)\n      })\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  postsBySubreddit,\n  selectedSubreddit\n})\n\nexport default rootReducer\n\n\n# \u306f\u3058\u3081\u306b\n\u4e00\u6628\u65e5\u306b\u66f8\u3044\u305f[Redux\u306ePresentational Components\u3068Container Components\u306e\u5f79\u5272\u306e\uff08\u500b\u4eba\u7684\u306a\uff09\u6574\u7406\u30e1\u30e2](http://qiita.com/kmszk/items/a38b879952d06916dac3)\u306e\u7d9a\u304d\u7684\u306a\u7acb\u3061\u4f4d\u7f6e\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u5f15\u304d\u7d9a\u304d\u540c\u3058\u3088\u3046\u306b\u3001\u4eca\u5ea6\u306f http://redux.js.org/docs/advanced/AsyncActions.html \u306e\u5185\u5bb9\u3068\u306a\u308a\u307e\u3059\u3002\n\n# Redux Thunk middleware\nRedux\u3067\u975e\u540c\u671f\u901a\u4fe1\u3092\u3059\u308b\u5834\u5408\u306b\u306f\u3001Action\u3068Reducer\u306e\u9593\u306bmiddleware\u3068\u3044\u3046\u5f62\u3067ajax\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u305b\u307e\u3059\u3002 \n[redux-thunk](https://github.com/gaearon/redux-thunk)\u3092\uff08redux\u672c\u5bb6\u30b5\u30a4\u30c8\u306b\u3088\u308b\u3068\u3053\u3061\u3089\u3092\u6a19\u6e96\u7684\u306b\uff09\u5229\u7528\u3057\u307e\u3059\u3002\n\n\uff08Thunk\u3068\u8a00\u3046\u8a00\u8449\u81ea\u4f53\u304c\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u6982\u5ff5\u307f\u305f\u3044\u3067\u3059\u3002\n\u82f1Wikipedia\u3067\u306f \"In computer programming, a thunk is a subroutine that is created, often automatically, to assist a call to another subroutine.\" \u2192 \u300eThunk\u306f\uff08\u3057\u3070\u3057\u3070\u81ea\u52d5\u3067\uff09\u751f\u6210\u3055\u308c\u308b\u3001\u4ed6\u306e\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u3092\u547c\u3076\u305f\u3081\u306e\u652f\u63f4\u7684\u306a\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u300f\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\uff09\n\n\n## middleware\u306e\u8a18\u8ff0\u7b87\u6240\u306b\u3064\u3044\u3066\nmiddleware\u306e\u30e1\u30a4\u30f3\u306e\u8a18\u8ff0\u7b87\u6240\u306fAction\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5f79\u5272\u7684\u306a\u3053\u3068\u3092\u6c17\u306b\u3059\u308b\u3068\u3001Action\u306e\u9818\u57df\u3067\u306f[\u300e\u4f55\u304b\u300f\u304c\u8d77\u3053\u3063\u305f\u6642\u3001Store\u306b\u300e\u3069\u3093\u306a\u30c7\u30fc\u30bf\u300f\u3092\u5229\u7528\u3059\u308b\u304b](http://qiita.com/kmszk/items/4481e9dec0249cb34fc9#action)\u3068\u3044\u3046\u3053\u3068\u3092\u5b9a\u7fa9\u3059\u308b\u306e\u3067\u3001Action\u306bAjax\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u3053\u3068\u3092\u8a18\u8ff0\u3057\u3061\u3083\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u6c17\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u5b9f\u969b\u306b\u5b9f\u884c\u3055\u308c\u308b\u306e\u306fAction\u3068Reducer\u306e\u9593\u306emiddleware\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308b\u3088\u3046\u3067\u3001\u6d41\u308c\u306e\u5143\u306e\u65b9\u3067\u3042\u308bAction\u5074\u3067\u8a18\u8ff0\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\n\n## redux-thunk\u3092\u4f7f\u3046\napplyMiddleware()\u95a2\u6570\u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u3063\u3066\u81ea\u5206\u306eRedux\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u9069\u5fdc\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n\n```js:index.js\nimport thunkMiddleware from 'redux-thunk'\nimport createLogger from 'redux-logger'\nimport { createStore, applyMiddleware } from 'redux'\nimport { selectSubreddit, fetchPosts } from './actions'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(\n    thunkMiddleware, // lets us dispatch() functions\n    loggerMiddleware // neat middleware that logs actions\n  )\n)\n\nstore.dispatch(selectSubreddit('reactjs'))\nstore.dispatch(fetchPosts('reactjs')).then(() =>\n  console.log(store.getState())\n)\n```\n\n\u306e\u3088\u3046\u306b\u9069\u5fdc\u3067\u304d\u307e\u3059\u3002\n\n\u203b store.dispatch()\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\n[Redux\u306eAction\u3001Reducer\u3001Store\u306e\uff08\u500b\u4eba\u7684\u306a\uff09\u6574\u7406\u30e1\u30e2 - Action Creators](http://qiita.com/kmszk/items/4481e9dec0249cb34fc9#action-creators)\n\n\n# Async Actions\n\u524d\u8ff0\u306e\u3088\u3046\u306bAction\u5074\u3067Middleware\u5229\u7528\u90e8\u5206\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\nRedux\u3067Async\u3092\u4f7f\u3046\u5834\u5408\u306b\u306f\u4e0b\u8a18\u306e3\u3064\u306eAction\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n- \u8981\u6c42\u304c\u958b\u59cb\u3055\u308c\u305f\u3053\u3068\u3092Reducer\u306b\u77e5\u3089\u305b\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3002\n- \u8981\u6c42\u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u305f\u3053\u3068\u3092Reducer\u306b\u901a\u77e5\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3002\n- \u8981\u6c42\u304c\u5931\u6557\u3057\u305f\u3053\u3068\u3092Reducer\u306b\u901a\u77e5\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3002\n\n\u30a4\u30e1\u30fc\u30b8\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\n\n```js\n{ type: 'FETCH_POSTS' }\n{ type: 'FETCH_POSTS', status: 'error', error: 'Oops' }\n{ type: 'FETCH_POSTS', status: 'success', response: { ... } }\n```\n\u307e\u305f\u306f\n\n```js\n{ type: 'FETCH_POSTS_REQUEST' }\n{ type: 'FETCH_POSTS_FAILURE', error: 'Oops' }\n{ type: 'FETCH_POSTS_SUCCESS', response: { ... } }\n```\n\u66f8\u304d\u65b9\u306f\u304a\u597d\u304d\u306a\u65b9\u3067\u3069\u3046\u305e\u3002\n\n## Action (fetch\u95a2\u6570)\n\u672c\u5bb6\u30b5\u30a4\u30c8\u306e\u65b9\u3067\u306f\u5229\u7528\u4f8b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306bfetch()\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001Ajax\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\n```js:actions.js\u306e\u4e00\u90e8\u629c\u7c8b\nimport fetch from 'isomorphic-fetch'\n\nexport const REQUEST_POSTS = 'REQUEST_POSTS'\nfunction requestPosts(subreddit) {\n  return {\n    type: REQUEST_POSTS,\n    subreddit\n  }\n}\n\n// \u4e2d\u7565\n\n// \u4ee5\u4e0b\u3001\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u524a\u9664\u3057\u305f\u4f8b\u306b\u306a\u308a\u307e\u3059\nexport function fetchPosts(subreddit) {\n  return function (dispatch) {\n    dispatch(requestPosts(subreddit))\n\n    return fetch(`http://www.reddit.com/r/${subreddit}.json`)\n      .then(response => response.json())\n      .then(json =>\n        dispatch(receivePosts(subreddit, json))\n      )\n  }\n}\n```\n\n\u203b \u3053\u3053\u3067\u51fa\u3066\u304f\u308bfetch()\u95a2\u6570\u306fjavascript\u3067\u5b9f\u88c5\u304c\u9032\u3093\u3067\u3044\u308b\u6a19\u6e96\u306e\u95a2\u6570\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\u305f\u3060\u3001\u307e\u3060\u672a\u5b9f\u88c5\u306a\u30d6\u30e9\u30a6\u30b6\u304c\u591a\u3044\u306e\u3067\u3001[isomorphic-fetch](https://github.com/matthew-andrews/isomorphic-fetch)\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3068\u306e\u3053\u3068\u3002\n\n\u3042\u3068\u306e\u66f8\u304d\u65b9(Reducers\u3001Components)\u306f\u3001Synchronous(\u975e\u540c\u671f)\u306a\u3068\u304d\u306e[Action Creator](http://qiita.com/kmszk/items/4481e9dec0249cb34fc9#action-creators)\u3068\u4e00\u7dd2\u306b\u306a\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n## Reducer\n\u540c\u671f\u306e\u3068\u304d\u3068\u4e00\u7dd2\u3067\u3059\u304c\u3001\u53c2\u8003\u306b\u306a\u308b\u306e\u3067\u672c\u5bb6\u30b5\u30a4\u30c8\u304b\u3089\u5f15\u7528\u3055\u305b\u3066\u6700\u5f8c\u306b\u4f75\u305b\u3066\u8f09\u305b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\nReducer\u3067\u6210\u529f\u3057\u305f\u6642\u3001\u5931\u6557\u3057\u305f\u3068\u304d\u306eprops\u306e\u5185\u5bb9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u3060\u3068postsBySubreddit()\u3067\u5168\u90e8\u53d7\u3051\u3066\u3001\u6295\u7a3f\u95a2\u9023\u3060\u3051\u62bd\u51fa\u3057\u3066post()\u306b\u6e21\u3057\u3066\u5404\u6319\u52d5\u3092\u632f\u308a\u5206\u3051\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\n```js:reducers.js\nimport { combineReducers } from 'redux'\nimport {\n  SELECT_SUBREDDIT, INVALIDATE_SUBREDDIT,\n  REQUEST_POSTS, RECEIVE_POSTS\n} from './actions'\n\nfunction selectedSubreddit(state = 'reactjs', action) {\n  // \u7565\n}\n\nfunction posts(state = {\n  isFetching: false,\n  didInvalidate: false,\n  items: []\n}, action) {\n  switch (action.type) {\n    case INVALIDATE_SUBREDDIT:\n      return Object.assign({}, state, {\n        didInvalidate: true\n      })\n    case REQUEST_POSTS:\n      return Object.assign({}, state, {\n        isFetching: true,\n        didInvalidate: false\n      })\n    case RECEIVE_POSTS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        didInvalidate: false,\n        items: action.posts,\n        lastUpdated: action.receivedAt\n      })\n    default:\n      return state\n  }\n}\n\nfunction postsBySubreddit(state = { }, action) {\n  switch (action.type) {\n    case INVALIDATE_SUBREDDIT:\n    case RECEIVE_POSTS:\n    case REQUEST_POSTS:\n      return Object.assign({}, state, {\n        [action.subreddit]: posts(state[action.subreddit], action)\n      })\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  postsBySubreddit,\n  selectedSubreddit\n})\n\nexport default rootReducer\n```\n\n\n", "tags": ["JavaScript", "redux"]}