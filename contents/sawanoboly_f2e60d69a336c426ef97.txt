{"context": " More than 1 year has passed since last update.\n\n\u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u304b\u30891\u5e74\u4ee5\u4e0a\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002 \u6c17\u3092\u3064\u3051\u3066\u306d\u3002\n\n\u30b5\u30fc\u30d0\u306e\u69cb\u7bc9\u72b6\u6cc1\u3092\u3001\u624b\u52d5\u78ba\u8a8d\u306e\u6bb5\u53d6\u308a\u3067\u30c1\u30a7\u30c3\u30af\u3059\u308bserverspec\u3001\u4f7f\u3044\u3084\u3059\u304f\u3066\u8a55\u5224\u3067\u3059\u306d\u3002\n\n\u6ce8: \u3053\u306e\u30a8\u30f3\u30c8\u30ea\u306f\u307b\u307c\u30cd\u30bf\u306a\u306e\u3067\u3042\u307e\u308a\u53c2\u8003\u306b\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\n\n\u3055\u3066\u3001\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u3068\u3044\u3046\u624b\u6cd5\u306f\u7686\u3055\u3093\u65e2\u306b\u3054\u5b58\u77e5\u3067\u3057\u3087\u3046\u3002\u4eca\u65e5\u306f\u6298\u89d2\u30c6\u30b9\u30c8\u30c4\u30fc\u30eb\u304c\u3042\u308b\u306e\u3067\u3059\u304b\u3089\u30b5\u30fc\u30d0\u69cb\u7bc9\u3092\u30c6\u30b9\u30c8\u99c6\u52d5\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u305aFail\u3059\u308bSpec\u30b5\u30f3\u30d7\u30eb\n\u3053\u3061\u3089\u306f\u30d1\u30c3\u30b1\u30fc\u30b8nginx\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u30c6\u30b9\u30c8\u3059\u308bserverspec\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\nnginx_spec.rb\nrequire 'spec_helper'\n\ndescribe package('nginx') do\n  it { should be_installed }\nend\n\n\n\nFail\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\nFail\u304b\u3089\u306f\u3058\u307e\u308b\u30c6\u30b9\u30c8\u99c6\u52d5\u3001serverspec\u306f\u30c6\u30b9\u30c8\u306b\u4f7f\u3063\u305f\u30b3\u30de\u30f3\u30c9\u3082\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\nrun_rspec_fails\nFailures:\n\n  1) Package \"nginx\" \n     Failure/Error: it { should be_installed }\n       dpkg -s nginx && ! dpkg -s nginx | grep -E '^Status: .+ not-installed$'\n       Package `nginx' is not installed and no info is available.\nUse dpkg --info (= dpkg-deb --info) to examine archive files,\nand dpkg --contents (= dpkg-deb --contents) to list their contents.\n       expected Package \"nginx\" to be installed\n     # ./spec/xxx.xxx.xxx.xxx/nginx_spec.rb:4:in `block (2 levels) in <top (required)>'\n\nFinished in 1.01 seconds\n1 examples, 1 failures\n\n\n\u76ee\u51fa\u5ea6\u304fFail\u3057\u307e\u3057\u305f\u3001\u3067\u306f\u3053\u308c\u3092\u6e80\u305f\u3059\u3088\u3046\u306b\u30b5\u30fc\u30d0\u69cb\u7bc9\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u3087\u3046\uff01\n\nRescue\u305b\u3088\n(\u91cd\u306d\u3066\u8a00\u3044\u307e\u3059\u304c\u3042\u307e\u308a\u771f\u9762\u76ee\u306b\u53d7\u3051\u53d6\u3089\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002)\n\u69cb\u7bc9\u306b\u306f\u4f55\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3001chef?puppet? \u3044\u3048\u4eca\u65e5\u306f\u8da3\u5411\u3092\u3053\u3089\u3057\u3066\u3001Fail\u3092\u691c\u77e5\u3067\u304d\u308bRspec(serverspec)\u81ea\u8eab\u306b\u76f4\u3055\u305b\u307e\u3057\u3087\u3046\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067nginx_spec.rb\u3092\u3053\u306e\u69d8\u306b\u5909\u66f4\u3067\u3059\u3002\n\nnginx_converge_spec.rb\nrequire 'spec_helper'\n\ndescribe package('nginx') do\n  it {\n    begin\n      should be_installed\n    rescue => e\n      puts e.message\n      puts \"======= Installing Nginx...\"\n      cmd = Serverspec::Type::Command.new('apt-get update && apt-get install -y nginx')\n      expect(cmd.return_exit_status?(0)).to be_true\n    end\n  }\nend\n\n\nnginx\u306eshould be_installed\u304c\u4f8b\u5916\u3092\u5410\u3044\u305f\u3089rescue\u3057\u3066\u30b5\u30fc\u30d0\u72b6\u614b\u306e\u3064\u3058\u3064\u307e\u3092\u5408\u308f\u305b\u306b\u3044\u304d\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u306b\u3082serverspec\u306e\u30de\u30c3\u30c1\u30e3\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u697d\u306b\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u304c\u3067\u304d\u307e\u3059\u306d\uff01\n\nserverspec\u3067\u5b8c\u7d50\u3001\u30c6\u30b9\u30c8\u99c6\u52d5\n\u3067\u306f\u521d\u3081\u306bFail\u3057\u305f\u306e\u3068\u540c\u3058\u72b6\u614b\u306e\u30b5\u30fc\u30d0\u306bserverspec\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\nrun_rspec_converge\n$ rspec -fd\n\nPackage \"nginx\"\nexpected Package \"nginx\" to be installed\n======= Installing Nginx...\n  should be true\n\nFinished in 13.42 seconds\n1 example, 0 failures\n\n\nexpected Package \"nginx\" to be installed \u3068\u3001rescue\u5074\u306b\u5165\u3063\u3066\u3064\u3058\u3064\u307e\u5408\u308f\u305b\u304c\u8d70\u308a\u307e\u3057\u305f\u3002\n\u3059\u3093\u3060\u3089\u3082\u3046\u4e00\u5ea6serverspec\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\nrun_rspec_up_to_date\n$ rspec -fd\n\nPackage \"nginx\"\n  should be installed\n\nFinished in 1.03 seconds\n1 example, 0 failures\n\n\nshould be installed #=> true\u3001\u3067\u304d\u307e\u3057\u305f\u3002\u307e\u3055\u306b\u51aa\u7b49\u306a\u53ce\u675f\u3002\n\n\u7d42\u308f\u308a\u306b\n\u30c6\u30b9\u30c8\u99c6\u52d5\u306f\u30bd\u30d5\u30c8\u958b\u767a\u3067\u3082\u3057\u3070\u3057\u3070\u96e3\u984c\u3068\u8a00\u308f\u308c\u307e\u3059\u304c\u3001\u30a4\u30f3\u30d5\u30e9\u306f\u3053\u306e\u304f\u3089\u3044\u7de9\u3081\u306a\u624b\u6cd5\u3067\u3082\u30a2\u30ea\u304b\u306a\u3002\n\n\n\u8ffd\u8a18\nchef-solo\u3092\u5c0e\u5165\u3057\u3066community cookbook\u304b\u3089 rabbitmq \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u72b6\u614b\u3092\u78ba\u8a8d\u3057\u3001\u5165\u3063\u3066\u306a\u3051\u308c\u3070\u52dd\u624b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308bserverspec\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\u30c6\u30b9\u30c8\u304c\u901a\u308c\u3070\u305f\u3060\u306eserverspec\u306a\u3068\u3053\u308d\u304c\u809d\u5fc3\u3067\u3059\u306d\u3002\n\nchef_and_rabbitmq_spec.rb\nrequire 'spec_helper'\n\ndescribe command('which chef-solo') do\n  it {\n    begin\n      should return_exit_status(0)\n    rescue => e\n      puts e.message\n      puts \"======= Installing Omnibus Chef...\"\n      cmd = Serverspec::Type::Command.new('curl -L https://www.opscode.com/chef/install.sh | sudo bash')\n      expect(cmd.return_exit_status?(0)).to be_true\n    end\n  }\nend\n\ndescribe package('git') do\n  it {\n    begin\n      should be_installed\n    rescue => e\n      puts e.message\n      puts \"======= installing git...\"\n      cmd = serverspec::type::command.new('apt-get update && apt-get install -y git')\n      expect(cmd.return_exit_status?(0)).to be_true\n    end\n  }\nend\n\ndescribe file('/var/chef/cookbooks/.git') do\n  it {\n    begin\n      should be_directory\n    rescue => e\n      puts e.message\n      puts \"======= initializing cookbooks directory...\"\n      cmd = Serverspec::Type::Command.new('mkdir -p /var/chef/cookbooks')\n      expect(cmd.return_exit_status?(0)).to be_true\n      cmd = Serverspec::Type::Command.new('git init /var/chef/cookbooks')\n      expect(cmd.return_exit_status?(0)).to be_true\n      cmd = Serverspec::Type::Command.new('touch /var/chef/cookbooks/.gitkeep')\n      expect(cmd.return_exit_status?(0)).to be_true\n      cmd = Serverspec::Type::Command.new('cd /var/chef/cookbooks && git add . && git commit .gitkeep -m \"empty init\"')\n      expect(cmd.return_exit_status?(0)).to be_true\n    end\n  }\nend\n\ndescribe package('rabbitmq-server') do\n  it {\n    begin\n      should be_installed\n    rescue => e\n      puts e.message\n      puts \"======= installing rabbitmq by chef...\"\n      cmd = Serverspec::Type::Command.new('knife cookbook site install rabbitmq')\n      expect(cmd.return_exit_status?(0)).to be_true\n      cmd = Serverspec::Type::Command.new('chef-solo -o \"rabbitmq\"')\n      expect(cmd.return_exit_status?(0)).to be_true\n    end\n  }\nend\n\n\n\u304f\u308c\u3050\u308c\u3082serverspec\u5c0e\u5165\u306e\u53c2\u8003\u306b\u3057\u306a\u3044\u3067\u4e0b\u3055\u3044\u3002\n<!-- too_old -->\n> **\u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u304b\u30891\u5e74\u4ee5\u4e0a\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002** \u6c17\u3092\u3064\u3051\u3066\u306d\u3002\n\n\u30b5\u30fc\u30d0\u306e\u69cb\u7bc9\u72b6\u6cc1\u3092\u3001\u624b\u52d5\u78ba\u8a8d\u306e\u6bb5\u53d6\u308a\u3067\u30c1\u30a7\u30c3\u30af\u3059\u308b[serverspec](http://serverspec.org/)\u3001\u4f7f\u3044\u3084\u3059\u304f\u3066\u8a55\u5224\u3067\u3059\u306d\u3002\n\n> \u6ce8: \u3053\u306e\u30a8\u30f3\u30c8\u30ea\u306f\u307b\u307c\u30cd\u30bf\u306a\u306e\u3067\u3042\u307e\u308a\u53c2\u8003\u306b\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\n\n\u3055\u3066\u3001\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u3068\u3044\u3046\u624b\u6cd5\u306f\u7686\u3055\u3093\u65e2\u306b\u3054\u5b58\u77e5\u3067\u3057\u3087\u3046\u3002\u4eca\u65e5\u306f\u6298\u89d2\u30c6\u30b9\u30c8\u30c4\u30fc\u30eb\u304c\u3042\u308b\u306e\u3067\u3059\u304b\u3089\u30b5\u30fc\u30d0\u69cb\u7bc9\u3092\u30c6\u30b9\u30c8\u99c6\u52d5\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## \u307e\u305aFail\u3059\u308bSpec\u30b5\u30f3\u30d7\u30eb\n\n\u3053\u3061\u3089\u306f\u30d1\u30c3\u30b1\u30fc\u30b8`nginx`\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u30c6\u30b9\u30c8\u3059\u308bserverspec\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n```ruby:nginx_spec.rb\nrequire 'spec_helper'\n\ndescribe package('nginx') do\n  it { should be_installed }\nend\n```\n\n### Fail\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\n\nFail\u304b\u3089\u306f\u3058\u307e\u308b\u30c6\u30b9\u30c8\u99c6\u52d5\u3001`serverspec`\u306f\u30c6\u30b9\u30c8\u306b\u4f7f\u3063\u305f\u30b3\u30de\u30f3\u30c9\u3082\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```shell:run_rspec_fails\nFailures:\n\n  1) Package \"nginx\" \n     Failure/Error: it { should be_installed }\n       dpkg -s nginx && ! dpkg -s nginx | grep -E '^Status: .+ not-installed$'\n       Package `nginx' is not installed and no info is available.\nUse dpkg --info (= dpkg-deb --info) to examine archive files,\nand dpkg --contents (= dpkg-deb --contents) to list their contents.\n       expected Package \"nginx\" to be installed\n     # ./spec/xxx.xxx.xxx.xxx/nginx_spec.rb:4:in `block (2 levels) in <top (required)>'\n\nFinished in 1.01 seconds\n1 examples, 1 failures\n```\n\n\u76ee\u51fa\u5ea6\u304fFail\u3057\u307e\u3057\u305f\u3001\u3067\u306f\u3053\u308c\u3092\u6e80\u305f\u3059\u3088\u3046\u306b\u30b5\u30fc\u30d0\u69cb\u7bc9\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u3087\u3046\uff01\n\n## Rescue\u305b\u3088\n\n(\u91cd\u306d\u3066\u8a00\u3044\u307e\u3059\u304c\u3042\u307e\u308a\u771f\u9762\u76ee\u306b\u53d7\u3051\u53d6\u3089\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002)\n\n\u69cb\u7bc9\u306b\u306f\u4f55\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3001`chef`?`puppet`? \u3044\u3048\u4eca\u65e5\u306f\u8da3\u5411\u3092\u3053\u3089\u3057\u3066\u3001Fail\u3092\u691c\u77e5\u3067\u304d\u308bRspec(serverspec)\u81ea\u8eab\u306b\u76f4\u3055\u305b\u307e\u3057\u3087\u3046\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067`nginx_spec.rb`\u3092\u3053\u306e\u69d8\u306b\u5909\u66f4\u3067\u3059\u3002\n\n```ruby:nginx_converge_spec.rb\nrequire 'spec_helper'\n\ndescribe package('nginx') do\n  it {\n    begin\n      should be_installed\n    rescue => e\n      puts e.message\n      puts \"======= Installing Nginx...\"\n      cmd = Serverspec::Type::Command.new('apt-get update && apt-get install -y nginx')\n      expect(cmd.return_exit_status?(0)).to be_true\n    end\n  }\nend\n```\n\nnginx\u306e`should be_installed`\u304c\u4f8b\u5916\u3092\u5410\u3044\u305f\u3089`rescue`\u3057\u3066\u30b5\u30fc\u30d0\u72b6\u614b\u306e\u3064\u3058\u3064\u307e\u3092\u5408\u308f\u305b\u306b\u3044\u304d\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u306b\u3082`serverspec`\u306e\u30de\u30c3\u30c1\u30e3\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u697d\u306b\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u304c\u3067\u304d\u307e\u3059\u306d\uff01\n\n\n### serverspec\u3067\u5b8c\u7d50\u3001\u30c6\u30b9\u30c8\u99c6\u52d5\n\n\u3067\u306f\u521d\u3081\u306bFail\u3057\u305f\u306e\u3068\u540c\u3058\u72b6\u614b\u306e\u30b5\u30fc\u30d0\u306b`serverspec`\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```shell:run_rspec_converge\n$ rspec -fd\n\nPackage \"nginx\"\nexpected Package \"nginx\" to be installed\n======= Installing Nginx...\n  should be true\n\nFinished in 13.42 seconds\n1 example, 0 failures\n```\n\n`expected Package \"nginx\" to be installed` \u3068\u3001rescue\u5074\u306b\u5165\u3063\u3066\u3064\u3058\u3064\u307e\u5408\u308f\u305b\u304c\u8d70\u308a\u307e\u3057\u305f\u3002\n\u3059\u3093\u3060\u3089\u3082\u3046\u4e00\u5ea6`serverspec`\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```shell:run_rspec_up_to_date\n$ rspec -fd\n\nPackage \"nginx\"\n  should be installed\n\nFinished in 1.03 seconds\n1 example, 0 failures\n```\n\n`should be installed #=> true`\u3001\u3067\u304d\u307e\u3057\u305f\u3002\u307e\u3055\u306b\u51aa\u7b49\u306a\u53ce\u675f\u3002\n\n## \u7d42\u308f\u308a\u306b\n\n\u30c6\u30b9\u30c8\u99c6\u52d5\u306f\u30bd\u30d5\u30c8\u958b\u767a\u3067\u3082\u3057\u3070\u3057\u3070\u96e3\u984c\u3068\u8a00\u308f\u308c\u307e\u3059\u304c\u3001\u30a4\u30f3\u30d5\u30e9\u306f\u3053\u306e\u304f\u3089\u3044\u7de9\u3081\u306a\u624b\u6cd5\u3067\u3082\u30a2\u30ea\u304b\u306a\u3002\n\n----\n\n##  \u8ffd\u8a18\n\nchef-solo\u3092\u5c0e\u5165\u3057\u3066community cookbook\u304b\u3089 `rabbitmq` \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u72b6\u614b\u3092\u78ba\u8a8d\u3057\u3001\u5165\u3063\u3066\u306a\u3051\u308c\u3070\u52dd\u624b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308bserverspec\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\u30c6\u30b9\u30c8\u304c\u901a\u308c\u3070\u305f\u3060\u306eserverspec\u306a\u3068\u3053\u308d\u304c\u809d\u5fc3\u3067\u3059\u306d\u3002\n\n```ruby:chef_and_rabbitmq_spec.rb\nrequire 'spec_helper'\n\ndescribe command('which chef-solo') do\n  it {\n    begin\n      should return_exit_status(0)\n    rescue => e\n      puts e.message\n      puts \"======= Installing Omnibus Chef...\"\n      cmd = Serverspec::Type::Command.new('curl -L https://www.opscode.com/chef/install.sh | sudo bash')\n      expect(cmd.return_exit_status?(0)).to be_true\n    end\n  }\nend\n\ndescribe package('git') do\n  it {\n    begin\n      should be_installed\n    rescue => e\n      puts e.message\n      puts \"======= installing git...\"\n      cmd = serverspec::type::command.new('apt-get update && apt-get install -y git')\n      expect(cmd.return_exit_status?(0)).to be_true\n    end\n  }\nend\n\ndescribe file('/var/chef/cookbooks/.git') do\n  it {\n    begin\n      should be_directory\n    rescue => e\n      puts e.message\n      puts \"======= initializing cookbooks directory...\"\n      cmd = Serverspec::Type::Command.new('mkdir -p /var/chef/cookbooks')\n      expect(cmd.return_exit_status?(0)).to be_true\n      cmd = Serverspec::Type::Command.new('git init /var/chef/cookbooks')\n      expect(cmd.return_exit_status?(0)).to be_true\n      cmd = Serverspec::Type::Command.new('touch /var/chef/cookbooks/.gitkeep')\n      expect(cmd.return_exit_status?(0)).to be_true\n      cmd = Serverspec::Type::Command.new('cd /var/chef/cookbooks && git add . && git commit .gitkeep -m \"empty init\"')\n      expect(cmd.return_exit_status?(0)).to be_true\n    end\n  }\nend\n\ndescribe package('rabbitmq-server') do\n  it {\n    begin\n      should be_installed\n    rescue => e\n      puts e.message\n      puts \"======= installing rabbitmq by chef...\"\n      cmd = Serverspec::Type::Command.new('knife cookbook site install rabbitmq')\n      expect(cmd.return_exit_status?(0)).to be_true\n      cmd = Serverspec::Type::Command.new('chef-solo -o \"rabbitmq\"')\n      expect(cmd.return_exit_status?(0)).to be_true\n    end\n  }\nend\n```\n\n\u304f\u308c\u3050\u308c\u3082serverspec\u5c0e\u5165\u306e\u53c2\u8003\u306b\u3057\u306a\u3044\u3067\u4e0b\u3055\u3044\u3002\n", "tags": ["test-driven-infrastructure", "serverspec", "TDD", "Ruby", "chef"]}