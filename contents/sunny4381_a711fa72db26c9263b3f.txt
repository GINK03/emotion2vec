{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\n\u6982\u8981\nPlay Framework \u306e Iteratee/Enumerator/Enumeratee \u3063\u3066\u5206\u304b\u308a\u306b\u304f\u3044\u3067\u3059\u306d\u3002\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u3082\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3057\u3001\u30b0\u30b0\u3063\u3066\u3082\u6570\u5b66\u7684\u306a\u8aac\u660e\u304c\u66f8\u3044\u3066\u3042\u3063\u305f\u308a\u3057\u3066\u3001\u4f59\u8a08\u306b\u5206\u304b\u308a\u306b\u304f\u3044\u3002\n\u672c\u8a18\u4e8b\u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u4f8b\u3092\u793a\u3057\u306a\u304c\u3089\u7406\u89e3\u3092\u6df1\u3081\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001\u53c2\u8003\u8a18\u4e8b\u306f\u3001Understanding Play2 Iteratees for Normal Humans\u3067\u3001Play Framework 2.1.0\u3001Scala 2.10 \u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\nIteratee/Enumerator/Enumeratee \u3068\u306f\uff1f\nIteratee/Enumerator/Enumeratee \u3092\u7c21\u5358\u306b\u3044\u3046\u3068:\n\n\n\n\u540d\u79f0\n\u8aac\u660e\n\n\n\n\nIteratee[E, A]\n\u30eb\u30fc\u30d7\u306e\u4e2d\u8eab\u3002\u578b E \u304b\u3089\u578b A \u3092\u751f\u6210\u3059\u308b\u3002\n\n\nEnumerator[E]\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u6c4e\u5316\u3057\u305f\u3082\u306e\u3067 \u578b E \u3092\u5217\u6319\u3059\u308b\u3002\u7121\u9650\u306b\u5217\u6319(Streaming)\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n\nEnumeratee[E, A]\n\u6ec5\u591a\u306b\u4f7f\u308f\u306a\u3044\u306e\u3067\u4eca\u306f\u8003\u3048\u306a\u304f\u3066\u3044\u3044\u3002\n\n\n\n\nIterator \u3068 Iteratee \u306e\u9055\u3044\nScala \u306b\u306f\u3001Iterator[E] \u3068\u3044\u3046\u304a\u306a\u3058\u307f\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\nIterator[E] \u3068 Iteratee[E, A] \u306e\u9055\u3044\u306f\u3001Iterator[E] \u306f\u3001\u4f55\u3089\u304b\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304b\u3089\u751f\u6210\u3055\u308c\u308b\u306e\u306b\u5bfe\u3057\u3066\u3001Iteratee[E, A] \u306f\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306f\u72ec\u7acb\u3057\u3066\u3044\u3066\u3001\u4e0d\u5909(immutable)\u3067\u3001\u975e\u30d6\u30ed\u30c3\u30af\u975e\u540c\u671f\u51e6\u7406\u3067\u3001\u5165\u529b\u306e\u578b E \u3068\u51fa\u529b\u306e\u578b A \u304c\u9759\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3068\u3044\u3046\u7279\u9577\u306b\u52a0\u3048\u3001\u7d50\u679c\u304c\u5fc5\u8981\u306b\u306a\u308b\u307e\u3067\u4f55\u3089\u5b9f\u884c\u3055\u308c\u306a\u3044\u3068\u3044\u3046\u7279\u9577\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3068\u306f\u3044\u3046\u3082\u306e\u306e\u3001Iteratee \u3067\u5b9f\u73fe\u3067\u304d\u308b\u3053\u3068\u306e\u307b\u3068\u3093\u3069\u306f\u3001Iterator \u3092\u4f7f\u7528\u3057\u3066\u3082\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\u3069\u3061\u3089\u3092\u4f7f\u3046\u304b\u306f\u3001\u597d\u307f\u306e\u554f\u984c\u3067\u3059\u3002\n\n\n\u4f8b1: Int\u578b\u306e\u8981\u7d20\u3092\u3082\u3064 Enumerator[Int] \u3068\u305d\u308c\u306e\u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b Iteratee[Int, Int]\n// \u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b Iteratee (\u521d\u671f\u5024\u306f 0)\nval initialValue: Int = 0\nval sumIteratee: Iteratee[Int, Int] = Iteratee.fold(initialValue) { (total, e) => total + e }\n// 1, 234, 455, 987 \u3092\u8981\u7d20\u306b\u3082\u3064 Enumerator\nval intEnumerator1: Enumerator[Int] = Enumerator(1, 234, 455, 987)\n\n// intEnumerator1 \u306e\u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b\nval futureTotal1: Future[Int] = intEnumerator1.run(sumIteratee)\nval total1: Int = Await.result(futureTotal1, Duration.Inf)\nprintln(\"total=\" + total1.toString)\n\n// 431, 57, 668 \u3092\u8981\u7d20\u306b\u3082\u3064 Enumerator\nval intEnumerator2: Enumerator[Int] = Enumerator(431, 57, 668)\n\n// intEnumerator2 \u306e\u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b\nval futureTotal2: Future[Int] = intEnumerator2.run(sumIteratee)\nval total2: Int = Await.result(futureTotal2, Duration.Inf)\nprintln(\"total=\" + total2.toString)\n\n\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\ntotal=1677\ntotal=1156\n\nIteratee[E,A] \u306f\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u72ec\u7acb\u3057\u3066\u3044\u308b\u305f\u3081\u3001intEnumerator1 \u3068 intEnumerator2 \u3068\u3044\u3046\u305d\u308c\u305e\u308c\u7570\u306a\u308b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u5b9f\u884c\u3067\u304d\u3001Iteratee[E,A] \u306f\u3001\u975e\u30d6\u30ed\u30c3\u30af\u975e\u540c\u671f\u3067\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u3001Future[Int] \u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\nFuture[Int] \u304b\u3089\u7d50\u679c\u3092\u53d6\u308a\u51fa\u3059\u305f\u3081\u3001\u308f\u3056\u308f\u3056 Await.result() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u305f\u3081\u3001\u5c11\u3057\u3081\u3093\u3069\u304f\u3055\u3044\u3068\u611f\u3058\u308b\u3067\u3057\u3087\u3046\u3002\n\u79c1\u3082\u305d\u3046\u601d\u3044\u307e\u3059\u3002\n\n\n\u4f8b2: \u7121\u9650 \u306e Enumerator (Streaming Enumerator)\nEnumerator \u306f\u7121\u9650\u306b\u5217\u6319\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n// 500 \u30df\u30ea\u79d2\u3054\u3068\u306b\u6587\u5b57\u5217 \"current time %s\" \u3092\u751f\u6210\u3057\u7d9a\u3051\u308b Enumerator\nval stringGenerator: Enumerator[String] = Enumerator.generateM(\n  play.api.libs.concurrent.Promise.timeout(\n    Some(\"current time %s\".format((new java.util.Date()))),\n    500\n  )\n)\n\n// \u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3059\u308b Iteratee\nval printIteratee: Iteratee[String, Unit] = Iteratee.foreach { println _ }\n\n// 5 \u79d2\u9593\u3060\u3051\u3001stringGenerator \u304c\u751f\u6210\u3059\u308b\u8981\u7d20\u305d\u308c\u305e\u308c\u306b\u5bfe\u3057\u3066 printIteratee \u3092\u5b9f\u884c\u3059\u308b\nval future: Future[Unit] = stringGenerator.run(printIteratee)\nAwait.result(future, Duration(5, \"seconds\")\n\n\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\ncurrent time Tue Feb 26 11:55:58 JST 2013\ncurrent time Tue Feb 26 11:55:58 JST 2013\ncurrent time Tue Feb 26 11:55:59 JST 2013\ncurrent time Tue Feb 26 11:55:59 JST 2013\ncurrent time Tue Feb 26 11:56:00 JST 2013\ncurrent time Tue Feb 26 11:56:00 JST 2013\ncurrent time Tue Feb 26 11:56:01 JST 2013\ncurrent time Tue Feb 26 11:56:01 JST 2013\ncurrent time Tue Feb 26 11:56:02 JST 2013\ncurrent time Tue Feb 26 11:56:02 JST 2013\n\n\n\u4f8b3: Iteratee[E,A] \u3068 Future[Iteratee[E,A]]\nIteratee[E,A] \u304b\u3089 Future[Iteratee[E,A]] \u3078\u5909\u63db\u3057\u3001\u9006\u306b Future[Iteratee[E,A]] \u304b\u3089 Iteratee[E,A] \u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4e21\u8005\u306f\u53ef\u63db\u3067\u3059\u3002\nval initialValue: Int = 0\nval sumIterator: Iteratee[Int, Int] = Iteratee.fold(initialValue) { (total, e) => total + e }\nval futureSumIterator: Future[Iteratee[Int, Int]] = sumIterator.unflatten.map(_.it)\nval sumIteratorAgain: Iteratee[Int, Int] = Iteratee.flatten(futureSumIterator)\n\n\n\u4f8b4: Iteratee[E, A].feed \u3068 Input\nIteratee[E, A].feed() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001Enumerator[E] \u3092\u4f7f\u308f\u305a\u306b\u3001\u8981\u7d20\u3092 1 \u3064\u305a\u3064 Iteratee[E, A] \u306b\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nIteratee[E, A].feed() \u30e1\u30bd\u30c3\u30c9\u306b\u306f\u3001\u8981\u7d20\u3092\u6c4e\u5316\u3057\u305f Input \u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u3042\u308b El, Empty, EOF \u306e\u3044\u305a\u308c\u304b\u3092\u4e0e\u3048\u307e\u3059\u3002\n\u6b21\u306b\u3001Input \u306e 3 \u3064\u306e\u30b5\u30d6\u30af\u30e9\u30b9 El, Empty, EOF \u306e\u6982\u8981\u3092\u793a\u3057\u307e\u3059\u3002\n\n\n\n\u540d\u79f0\n\u8aac\u660e\n\n\n\n\nInput.El[E]\n\u578b E \u306e\u8981\u7d20\u3092\u8868\u3057\u307e\u3059\u3002\n\n\nInput.Empty\n\u7a7a\u306e\u8981\u7d20\u3092\u8868\u3057\u307e\u3059\u3002\n\n\nInput.EOF\n\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3057\u307e\u3059\u3002\n\n\n\n\u6b21\u306e\u4f8b\u306f\u3001Enumerator \u3092\u4f7f\u308f\u305a\u306b\u3001Iteratee[E, A].feed() \u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u3066\u3001\u8981\u7d20\u5217 1, 234, 455, 987 \u3092\u5148\u982d\u304b\u3089\u9806\u756a\u306b 1 \u3064\u305a\u3064\u4e0e\u3048\u307e\u3059\u3002\nval initialValue: Int = 0\nvar sumIteratee: Iteratee[Int, Int] = Iteratee.fold(initialValue) { (total, e) => total + e }\nvar futureSumIterator: Future[Iteratee[Int, Int]] = null\n\n// 1 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIterator = sumIteratee.feed(Input.El(1))\nsumIteratee = Iteratee.flatten(futureSumIterator)\n\n// 234 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIterator = sumIteratee.feed(Input.El(234))\nsumIteratee = Iteratee.flatten(futureSumIterator)\n\n// 455 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIterator = sumIteratee.feed(Input.El(455))\nsumIteratee = Iteratee.flatten(futureSumIterator)\n\n// 987 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIterator = sumIteratee.feed(Input.El(987))\nsumIteratee = Iteratee.flatten(futureSumIterator)\n\n// \u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b\nval futureTotal: Future[Int] = sumIteratee.run\nval total: Int = Await.result(futureTotal, Duration.Inf)\nprintln(\"0+1+234+455+987=\" + total.toString)\n\n\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n0+1+234+455+987=1677\n\n\n\u3082\u3057\u3001\u3042\u306a\u305f\u304c Future \u597d\u304d\u306a\u3089\nFuture[Iteratee[E, A]] \u3092 Iteratee[E, A] \u306b\u308f\u3056\u308f\u3056\u5909\u63db\u3057\u306a\u304f\u3066\u3082\u3001Future[Iteratee[E, A]] \u306e\u307e\u307e\u540c\u7b49\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nval initialValue: Int = 0\nvar sumIteratee: Iteratee[Int, Int] = Iteratee.fold(initialValue) { (total, e) => total + e }\nvar futureSumIteratee: Future[Iteratee[Int, Int]] = null\n\n// 1 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIteratee = sumIteratee.feed(Input.El(1))\n\n// 234 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIteratee = futureSumIteratee.flatMap(_.feed(Input.El(234)))\n\n// 455 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIteratee = futureSumIteratee.flatMap(_.feed(Input.El(455)))\n\n// 987 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIteratee = futureSumIteratee.flatMap(_.feed(Input.El(987)))\n\n// \u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b\nval totalFuture: Future[Int] = futureSumIteratee.flatMap(_.run)\nval total = Await.result(totalFuture, Duration.Inf)\nprintln(\"0+1+234+455+987=\" + total.toString)\n\n\n\u4f8b5: Iteratee[E, A] \u306e\u4e0d\u5909\u6027 (Immutability)\nIteratee[E, A] \u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u305f\u5f8c\u3001\u4e0d\u5909\u3067\u5185\u90e8\u72b6\u614b\u3092\u5909\u5316\u3055\u305b\u307e\u305b\u3093\u3002\u305d\u308c\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\nval initialValue: Int = 0\nval sumIteratee0: Iteratee[Int, Int] = Iteratee.fold(initialValue) { (total, e) => total + e }\n\n// sumIteratee0 \u306b 1 \u3092\u4e0e\u3048\u308b\nval sumIteratee1: Iteratee[Int, Int] = Iteratee.flatten(sumIteratee0.feed(Input.El(1)))\n// sumIteratee1 \u306b 234 \u3092\u4e0e\u3048\u308b\nval sumIteratee2: Iteratee[Int, Int] = Iteratee.flatten(sumIteratee1.feed(Input.El(234)))\n// sumIteratee2 \u306b 583 \u3092\u4e0e\u3048\u308b\nval sumIteratee2_1: Iteratee[Int, Int] = Iteratee.flatten(sumIteratee2.feed(Input.El(583)))\n// sumIteratee2 \u306b 162 \u3092\u4e0e\u3048\u308b\nval sumIteratee2_2: Iteratee[Int, Int] = Iteratee.flatten(sumIteratee2.feed(Input.El(162)))\n\nprintln(\"0=\" + Await.result(sumIteratee0.run, Duration.Inf))\nprintln(\"0+1=\" + Await.result(sumIteratee1.run, Duration.Inf))\nprintln(\"0+1+234=\" + Await.result(sumIteratee2.run, Duration.Inf))\nprintln(\"0+1+234+583=\" + Await.result(sumIteratee2_1.run, Duration.Inf))\nprintln(\"0+1+234+162=\" + Await.result(sumIteratee2_2.run, Duration.Inf))\n\n\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n0=0\n0+1=1\n0+1+234=235\n0+1+234+583=818\n0+1+234+162=397\n\n\n\u4f8b6: Iteratee[E, A] \u306f\u7d50\u679c\u304c\u5fc5\u8981\u306b\u306a\u308b\u307e\u3067\u4f55\u3089\u5b9f\u884c\u3055\u308c\u306a\u3044\nIteratee[E, A] \u306f\u3001\u672c\u5f53\u306b\u7d50\u679c\u304c\u5fc5\u8981\u306b\u306a\u308b\u307e\u3067\u4f55\u3082\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002\nval initialValue: Int = 0\nval sumIteratee0: Iteratee[Int, Int] = Iteratee.fold(initialValue) { (total, e) => {\n    println(\"e=\" + e.toString)\n    total + e\n  }\n}\n// feed \u3057\u305f\u3060\u3051\u3067\u306f\u8a08\u7b97\u3055\u308c\u306a\u3044\nval sumIteratee1 = Iteratee.flatten(sumIteratee0.feed(Input.El(1)))\nval sumIteratee2 = Iteratee.flatten(sumIteratee1.feed(Input.El(234)))\nval sumIteratee3 = Iteratee.flatten(sumIteratee2.feed(Input.El(455)))\nval sumIteratee4 = Iteratee.flatten(sumIteratee3.feed(Input.El(987)))\n// \u307e\u3060\u8a08\u7b97\u3055\u308c\u306a\u3044\nval futureTotal: Future[Int] = sumIteratee4.run\n\nprintln(\"caclulate result\")\nval total = Await.result(futureTotal, Duration.Inf)\nprintln(\"0+1+234+455+987=\" + total.toString)\n\n\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\ncaclulate result\ne=1\ne=234\ne=455\ne=987\n0+1+234+455+987=1677\n\n\n\u4f8b7: Input.Empty \u3068 Input.EOF\nInput.Empty \u3092 Iteratee[E, A] \u306b\u4e0e\u3048\u308b\u3068\u3001\u5358\u306b\u7121\u8996\u3055\u308c\u307e\u3059\u3002\nInput.EOF \u3092 Iteratee[E, A] \u306b\u4e0e\u3048\u308b\u3068\u3001\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u505c\u6b62\u3057\u3001\u4f55\u3092\u4e0e\u3048\u3066\u3082\u7d50\u679c\u306f\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002\nval initialValue: Int = 0\nval sumIteratee0: Iteratee[Int, Int] = Iteratee.fold(initialValue) { (total, e) => total + e }\n\nval sumIteratee1 = Iteratee.flatten(sumIteratee0.feed(Input.El(1)))\nval sumIteratee2 = Iteratee.flatten(sumIteratee1.feed(Input.Empty))\nval sumIteratee3 = Iteratee.flatten(sumIteratee2.feed(Input.El(234)))\nval sumIteratee4 = Iteratee.flatten(sumIteratee3.feed(Input.EOF))\nval sumIteratee5 = Iteratee.flatten(sumIteratee4.feed(Input.El(455)))\nval sumIteratee6 = Iteratee.flatten(sumIteratee5.feed(Input.El(987)))\n// Input.Empty \u3092 feed \u3057\u305f\u5f8c\u306b feed \u3057\u305f\u5024\u306f\u8a08\u7b97\u3055\u308c\u308b\nprintln(\"0+1+234=\" + Await.result(sumIteratee3.run, Duration.Inf))\n// Input.EOF \u3092 feed \u3057\u3066\u4ee5\u964d\u306b feed \u3057\u305f\u5024\u306f\u8a08\u7b97\u3055\u308c\u306a\u3044\nprintln(\"0+1+234+455=\" + Await.result(sumIteratee5.run, Duration.Inf))\nprintln(\"0+1+234+455+987=\" + Await.result(sumIteratee6.run, Duration.Inf))\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n0+1+234=235\n0+1+234+455=235\n0+1+234+455+987=235\n\n\u7d50\u679c\u304b\u3089\u5206\u304b\u308b\u3088\u3046\u306b\u3001Input.EOF \u3092 Iteratee[E, A] \u306b\u4e0e\u3048\u308b\u3068\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u505c\u6b62\u3059\u308b\u305f\u3081\u3001Input.EOF \u3092\u4e0e\u3048\u305f\u5f8c\u306b Input.El(455) \u3084 Input.El(987) \u306f\u4e0e\u3048\u3066\u3082\u5408\u8a08\u306f\u5909\u5316\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u307e\u305f\u3001Input.EOF \u3092\u30d5\u30a3\u30fc\u30c9\u3059\u308b\u3068\u3001\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u505c\u6b62\u3059\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n# \u306f\u3058\u3081\u306b\n\n## \u6982\u8981\n\nPlay Framework \u306e Iteratee/Enumerator/Enumeratee \u3063\u3066\u5206\u304b\u308a\u306b\u304f\u3044\u3067\u3059\u306d\u3002\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u3082\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3057\u3001\u30b0\u30b0\u3063\u3066\u3082\u6570\u5b66\u7684\u306a\u8aac\u660e\u304c\u66f8\u3044\u3066\u3042\u3063\u305f\u308a\u3057\u3066\u3001\u4f59\u8a08\u306b\u5206\u304b\u308a\u306b\u304f\u3044\u3002\n\n\u672c\u8a18\u4e8b\u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u4f8b\u3092\u793a\u3057\u306a\u304c\u3089\u7406\u89e3\u3092\u6df1\u3081\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001\u53c2\u8003\u8a18\u4e8b\u306f\u3001[Understanding Play2 Iteratees for Normal Humans](http://mandubian.com/2012/08/27/understanding-play2-iteratees-for-normal-humans/)\u3067\u3001Play Framework 2.1.0\u3001Scala 2.10 \u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n## Iteratee/Enumerator/Enumeratee \u3068\u306f\uff1f\n\nIteratee/Enumerator/Enumeratee \u3092\u7c21\u5358\u306b\u3044\u3046\u3068:\n\n| \u540d\u79f0 |\u8aac\u660e |\n|--------------|------|\n| Iteratee[E, A] | \u30eb\u30fc\u30d7\u306e\u4e2d\u8eab\u3002\u578b E \u304b\u3089\u578b A \u3092\u751f\u6210\u3059\u308b\u3002 |\n| Enumerator[E] | \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u6c4e\u5316\u3057\u305f\u3082\u306e\u3067 \u578b E \u3092\u5217\u6319\u3059\u308b\u3002\u7121\u9650\u306b\u5217\u6319(Streaming)\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002 |\n| Enumeratee[E, A] | \u6ec5\u591a\u306b\u4f7f\u308f\u306a\u3044\u306e\u3067\u4eca\u306f\u8003\u3048\u306a\u304f\u3066\u3044\u3044\u3002 |\n\n## Iterator \u3068 Iteratee \u306e\u9055\u3044\n\nScala \u306b\u306f\u3001Iterator[E] \u3068\u3044\u3046\u304a\u306a\u3058\u307f\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\nIterator[E] \u3068 Iteratee[E, A] \u306e\u9055\u3044\u306f\u3001Iterator[E] \u306f\u3001\u4f55\u3089\u304b\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304b\u3089\u751f\u6210\u3055\u308c\u308b\u306e\u306b\u5bfe\u3057\u3066\u3001Iteratee[E, A] \u306f\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306f\u72ec\u7acb\u3057\u3066\u3044\u3066\u3001\u4e0d\u5909(immutable)\u3067\u3001\u975e\u30d6\u30ed\u30c3\u30af\u975e\u540c\u671f\u51e6\u7406\u3067\u3001\u5165\u529b\u306e\u578b E \u3068\u51fa\u529b\u306e\u578b A \u304c\u9759\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3068\u3044\u3046\u7279\u9577\u306b\u52a0\u3048\u3001\u7d50\u679c\u304c\u5fc5\u8981\u306b\u306a\u308b\u307e\u3067\u4f55\u3089\u5b9f\u884c\u3055\u308c\u306a\u3044\u3068\u3044\u3046\u7279\u9577\u304c\u3042\u308a\u307e\u3059\u3002\n\n> \u3068\u306f\u3044\u3046\u3082\u306e\u306e\u3001Iteratee \u3067\u5b9f\u73fe\u3067\u304d\u308b\u3053\u3068\u306e\u307b\u3068\u3093\u3069\u306f\u3001Iterator \u3092\u4f7f\u7528\u3057\u3066\u3082\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n> \u3069\u3061\u3089\u3092\u4f7f\u3046\u304b\u306f\u3001\u597d\u307f\u306e\u554f\u984c\u3067\u3059\u3002\n\n# \u4f8b1: Int\u578b\u306e\u8981\u7d20\u3092\u3082\u3064 Enumerator[Int] \u3068\u305d\u308c\u306e\u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b Iteratee[Int, Int]\n \n```scala\n// \u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b Iteratee (\u521d\u671f\u5024\u306f 0)\nval initialValue: Int = 0\nval sumIteratee: Iteratee[Int, Int] = Iteratee.fold(initialValue) { (total, e) => total + e }\n// 1, 234, 455, 987 \u3092\u8981\u7d20\u306b\u3082\u3064 Enumerator\nval intEnumerator1: Enumerator[Int] = Enumerator(1, 234, 455, 987)\n\n// intEnumerator1 \u306e\u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b\nval futureTotal1: Future[Int] = intEnumerator1.run(sumIteratee)\nval total1: Int = Await.result(futureTotal1, Duration.Inf)\nprintln(\"total=\" + total1.toString)\n\n// 431, 57, 668 \u3092\u8981\u7d20\u306b\u3082\u3064 Enumerator\nval intEnumerator2: Enumerator[Int] = Enumerator(431, 57, 668)\n\n// intEnumerator2 \u306e\u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b\nval futureTotal2: Future[Int] = intEnumerator2.run(sumIteratee)\nval total2: Int = Await.result(futureTotal2, Duration.Inf)\nprintln(\"total=\" + total2.toString)\n```\n\n\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```\ntotal=1677\ntotal=1156\n```\n\nIteratee[E,A] \u306f\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u72ec\u7acb\u3057\u3066\u3044\u308b\u305f\u3081\u3001intEnumerator1 \u3068 intEnumerator2 \u3068\u3044\u3046\u305d\u308c\u305e\u308c\u7570\u306a\u308b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u5b9f\u884c\u3067\u304d\u3001Iteratee[E,A] \u306f\u3001\u975e\u30d6\u30ed\u30c3\u30af\u975e\u540c\u671f\u3067\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u3001Future[Int] \u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\n> Future[Int] \u304b\u3089\u7d50\u679c\u3092\u53d6\u308a\u51fa\u3059\u305f\u3081\u3001\u308f\u3056\u308f\u3056 Await.result() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u305f\u3081\u3001\u5c11\u3057\u3081\u3093\u3069\u304f\u3055\u3044\u3068\u611f\u3058\u308b\u3067\u3057\u3087\u3046\u3002\n> \u79c1\u3082\u305d\u3046\u601d\u3044\u307e\u3059\u3002\n\n# \u4f8b2: \u7121\u9650 \u306e Enumerator (Streaming Enumerator)\nEnumerator \u306f\u7121\u9650\u306b\u5217\u6319\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```scala\n// 500 \u30df\u30ea\u79d2\u3054\u3068\u306b\u6587\u5b57\u5217 \"current time %s\" \u3092\u751f\u6210\u3057\u7d9a\u3051\u308b Enumerator\nval stringGenerator: Enumerator[String] = Enumerator.generateM(\n  play.api.libs.concurrent.Promise.timeout(\n    Some(\"current time %s\".format((new java.util.Date()))),\n    500\n  )\n)\n\n// \u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3059\u308b Iteratee\nval printIteratee: Iteratee[String, Unit] = Iteratee.foreach { println _ }\n\n// 5 \u79d2\u9593\u3060\u3051\u3001stringGenerator \u304c\u751f\u6210\u3059\u308b\u8981\u7d20\u305d\u308c\u305e\u308c\u306b\u5bfe\u3057\u3066 printIteratee \u3092\u5b9f\u884c\u3059\u308b\nval future: Future[Unit] = stringGenerator.run(printIteratee)\nAwait.result(future, Duration(5, \"seconds\")\n```\n\n\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```\ncurrent time Tue Feb 26 11:55:58 JST 2013\ncurrent time Tue Feb 26 11:55:58 JST 2013\ncurrent time Tue Feb 26 11:55:59 JST 2013\ncurrent time Tue Feb 26 11:55:59 JST 2013\ncurrent time Tue Feb 26 11:56:00 JST 2013\ncurrent time Tue Feb 26 11:56:00 JST 2013\ncurrent time Tue Feb 26 11:56:01 JST 2013\ncurrent time Tue Feb 26 11:56:01 JST 2013\ncurrent time Tue Feb 26 11:56:02 JST 2013\ncurrent time Tue Feb 26 11:56:02 JST 2013\n```\n\n# \u4f8b3: Iteratee[E,A] \u3068 Future[Iteratee[E,A]]\n Iteratee[E,A] \u304b\u3089 Future[Iteratee[E,A]] \u3078\u5909\u63db\u3057\u3001\u9006\u306b Future[Iteratee[E,A]] \u304b\u3089 Iteratee[E,A] \u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4e21\u8005\u306f\u53ef\u63db\u3067\u3059\u3002\n\n```scala\nval initialValue: Int = 0\nval sumIterator: Iteratee[Int, Int] = Iteratee.fold(initialValue) { (total, e) => total + e }\nval futureSumIterator: Future[Iteratee[Int, Int]] = sumIterator.unflatten.map(_.it)\nval sumIteratorAgain: Iteratee[Int, Int] = Iteratee.flatten(futureSumIterator)\n```\n\n# \u4f8b4: Iteratee[E, A].feed \u3068 Input\n`Iteratee[E, A].feed`() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3068\u3001Enumerator[E] \u3092\u4f7f\u308f\u305a\u306b\u3001\u8981\u7d20\u3092 1 \u3064\u305a\u3064 Iteratee[E, A] \u306b\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n`Iteratee[E, A].feed`() \u30e1\u30bd\u30c3\u30c9\u306b\u306f\u3001\u8981\u7d20\u3092\u6c4e\u5316\u3057\u305f Input \u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u3042\u308b El, Empty, EOF \u306e\u3044\u305a\u308c\u304b\u3092\u4e0e\u3048\u307e\u3059\u3002\n\u6b21\u306b\u3001Input \u306e 3 \u3064\u306e\u30b5\u30d6\u30af\u30e9\u30b9 El, Empty, EOF \u306e\u6982\u8981\u3092\u793a\u3057\u307e\u3059\u3002\n\n| \u540d\u79f0 |\u8aac\u660e |\n|--------------|------|\n| Input.El[E] | \u578b E \u306e\u8981\u7d20\u3092\u8868\u3057\u307e\u3059\u3002 |\n| Input.Empty | \u7a7a\u306e\u8981\u7d20\u3092\u8868\u3057\u307e\u3059\u3002 |\n| Input.EOF | \u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u7d42\u4e86\u3057\u307e\u3059\u3002 |\n\n\u6b21\u306e\u4f8b\u306f\u3001Enumerator \u3092\u4f7f\u308f\u305a\u306b\u3001`Iteratee[E, A].feed`() \u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u3066\u3001\u8981\u7d20\u5217 1, 234, 455, 987 \u3092\u5148\u982d\u304b\u3089\u9806\u756a\u306b 1 \u3064\u305a\u3064\u4e0e\u3048\u307e\u3059\u3002\n\n```scala\nval initialValue: Int = 0\nvar sumIteratee: Iteratee[Int, Int] = Iteratee.fold(initialValue) { (total, e) => total + e }\nvar futureSumIterator: Future[Iteratee[Int, Int]] = null\n\n// 1 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIterator = sumIteratee.feed(Input.El(1))\nsumIteratee = Iteratee.flatten(futureSumIterator)\n\n// 234 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIterator = sumIteratee.feed(Input.El(234))\nsumIteratee = Iteratee.flatten(futureSumIterator)\n\n// 455 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIterator = sumIteratee.feed(Input.El(455))\nsumIteratee = Iteratee.flatten(futureSumIterator)\n\n// 987 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIterator = sumIteratee.feed(Input.El(987))\nsumIteratee = Iteratee.flatten(futureSumIterator)\n\n// \u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b\nval futureTotal: Future[Int] = sumIteratee.run\nval total: Int = Await.result(futureTotal, Duration.Inf)\nprintln(\"0+1+234+455+987=\" + total.toString)\n```\n\n\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```\n0+1+234+455+987=1677\n```\n\n## \u3082\u3057\u3001\u3042\u306a\u305f\u304c Future \u597d\u304d\u306a\u3089\n\nFuture[Iteratee[E, A]] \u3092 Iteratee[E, A] \u306b\u308f\u3056\u308f\u3056\u5909\u63db\u3057\u306a\u304f\u3066\u3082\u3001Future[Iteratee[E, A]] \u306e\u307e\u307e\u540c\u7b49\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```scala\nval initialValue: Int = 0\nvar sumIteratee: Iteratee[Int, Int] = Iteratee.fold(initialValue) { (total, e) => total + e }\nvar futureSumIteratee: Future[Iteratee[Int, Int]] = null\n\n// 1 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIteratee = sumIteratee.feed(Input.El(1))\n\n// 234 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIteratee = futureSumIteratee.flatMap(_.feed(Input.El(234)))\n\n// 455 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIteratee = futureSumIteratee.flatMap(_.feed(Input.El(455)))\n\n// 987 \u3092 Iteratee \u306b\u4e0e\u3048\u308b\nfutureSumIteratee = futureSumIteratee.flatMap(_.feed(Input.El(987)))\n\n// \u5408\u8a08\u3092\u8a08\u7b97\u3059\u308b\nval totalFuture: Future[Int] = futureSumIteratee.flatMap(_.run)\nval total = Await.result(totalFuture, Duration.Inf)\nprintln(\"0+1+234+455+987=\" + total.toString)\n```\n\n# \u4f8b5: Iteratee[E, A] \u306e\u4e0d\u5909\u6027 (Immutability)\nIteratee[E, A] \u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u305f\u5f8c\u3001\u4e0d\u5909\u3067\u5185\u90e8\u72b6\u614b\u3092\u5909\u5316\u3055\u305b\u307e\u305b\u3093\u3002\u305d\u308c\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n```scala\nval initialValue: Int = 0\nval sumIteratee0: Iteratee[Int, Int] = Iteratee.fold(initialValue) { (total, e) => total + e }\n\n// sumIteratee0 \u306b 1 \u3092\u4e0e\u3048\u308b\nval sumIteratee1: Iteratee[Int, Int] = Iteratee.flatten(sumIteratee0.feed(Input.El(1)))\n// sumIteratee1 \u306b 234 \u3092\u4e0e\u3048\u308b\nval sumIteratee2: Iteratee[Int, Int] = Iteratee.flatten(sumIteratee1.feed(Input.El(234)))\n// sumIteratee2 \u306b 583 \u3092\u4e0e\u3048\u308b\nval sumIteratee2_1: Iteratee[Int, Int] = Iteratee.flatten(sumIteratee2.feed(Input.El(583)))\n// sumIteratee2 \u306b 162 \u3092\u4e0e\u3048\u308b\nval sumIteratee2_2: Iteratee[Int, Int] = Iteratee.flatten(sumIteratee2.feed(Input.El(162)))\n\nprintln(\"0=\" + Await.result(sumIteratee0.run, Duration.Inf))\nprintln(\"0+1=\" + Await.result(sumIteratee1.run, Duration.Inf))\nprintln(\"0+1+234=\" + Await.result(sumIteratee2.run, Duration.Inf))\nprintln(\"0+1+234+583=\" + Await.result(sumIteratee2_1.run, Duration.Inf))\nprintln(\"0+1+234+162=\" + Await.result(sumIteratee2_2.run, Duration.Inf))\n```\n\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```\n0=0\n0+1=1\n0+1+234=235\n0+1+234+583=818\n0+1+234+162=397\n```\n\n# \u4f8b6: Iteratee[E, A] \u306f\u7d50\u679c\u304c\u5fc5\u8981\u306b\u306a\u308b\u307e\u3067\u4f55\u3089\u5b9f\u884c\u3055\u308c\u306a\u3044\nIteratee[E, A] \u306f\u3001\u672c\u5f53\u306b\u7d50\u679c\u304c\u5fc5\u8981\u306b\u306a\u308b\u307e\u3067\u4f55\u3082\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002\n\n```scala\nval initialValue: Int = 0\nval sumIteratee0: Iteratee[Int, Int] = Iteratee.fold(initialValue) { (total, e) => {\n    println(\"e=\" + e.toString)\n    total + e\n  }\n}\n// feed \u3057\u305f\u3060\u3051\u3067\u306f\u8a08\u7b97\u3055\u308c\u306a\u3044\nval sumIteratee1 = Iteratee.flatten(sumIteratee0.feed(Input.El(1)))\nval sumIteratee2 = Iteratee.flatten(sumIteratee1.feed(Input.El(234)))\nval sumIteratee3 = Iteratee.flatten(sumIteratee2.feed(Input.El(455)))\nval sumIteratee4 = Iteratee.flatten(sumIteratee3.feed(Input.El(987)))\n// \u307e\u3060\u8a08\u7b97\u3055\u308c\u306a\u3044\nval futureTotal: Future[Int] = sumIteratee4.run\n\nprintln(\"caclulate result\")\nval total = Await.result(futureTotal, Duration.Inf)\nprintln(\"0+1+234+455+987=\" + total.toString)\n```\n\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```\ncaclulate result\ne=1\ne=234\ne=455\ne=987\n0+1+234+455+987=1677\n```\n\n# \u4f8b7: Input.Empty \u3068 Input.EOF\nInput.Empty \u3092 Iteratee[E, A] \u306b\u4e0e\u3048\u308b\u3068\u3001\u5358\u306b\u7121\u8996\u3055\u308c\u307e\u3059\u3002\nInput.EOF \u3092 Iteratee[E, A] \u306b\u4e0e\u3048\u308b\u3068\u3001\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u505c\u6b62\u3057\u3001\u4f55\u3092\u4e0e\u3048\u3066\u3082\u7d50\u679c\u306f\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n```scala\nval initialValue: Int = 0\nval sumIteratee0: Iteratee[Int, Int] = Iteratee.fold(initialValue) { (total, e) => total + e }\n\nval sumIteratee1 = Iteratee.flatten(sumIteratee0.feed(Input.El(1)))\nval sumIteratee2 = Iteratee.flatten(sumIteratee1.feed(Input.Empty))\nval sumIteratee3 = Iteratee.flatten(sumIteratee2.feed(Input.El(234)))\nval sumIteratee4 = Iteratee.flatten(sumIteratee3.feed(Input.EOF))\nval sumIteratee5 = Iteratee.flatten(sumIteratee4.feed(Input.El(455)))\nval sumIteratee6 = Iteratee.flatten(sumIteratee5.feed(Input.El(987)))\n// Input.Empty \u3092 feed \u3057\u305f\u5f8c\u306b feed \u3057\u305f\u5024\u306f\u8a08\u7b97\u3055\u308c\u308b\nprintln(\"0+1+234=\" + Await.result(sumIteratee3.run, Duration.Inf))\n// Input.EOF \u3092 feed \u3057\u3066\u4ee5\u964d\u306b feed \u3057\u305f\u5024\u306f\u8a08\u7b97\u3055\u308c\u306a\u3044\nprintln(\"0+1+234+455=\" + Await.result(sumIteratee5.run, Duration.Inf))\nprintln(\"0+1+234+455+987=\" + Await.result(sumIteratee6.run, Duration.Inf))\n```\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```\n0+1+234=235\n0+1+234+455=235\n0+1+234+455+987=235\n```\n\n\u7d50\u679c\u304b\u3089\u5206\u304b\u308b\u3088\u3046\u306b\u3001Input.EOF \u3092 Iteratee[E, A] \u306b\u4e0e\u3048\u308b\u3068\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u505c\u6b62\u3059\u308b\u305f\u3081\u3001Input.EOF \u3092\u4e0e\u3048\u305f\u5f8c\u306b Input.El(455) \u3084 Input.El(987) \u306f\u4e0e\u3048\u3066\u3082\u5408\u8a08\u306f\u5909\u5316\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u307e\u305f\u3001Input.EOF \u3092\u30d5\u30a3\u30fc\u30c9\u3059\u308b\u3068\u3001\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u505c\u6b62\u3059\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n", "tags": ["Play22.1.0", "Scala2.10", "Play2.1.0", "PlayFramework2.1.0"]}