{"context": " More than 1 year has passed since last update.\n\nBradley-Terry's Model\n\u3053\u308c\u306f\u3001\u300c\u5f37\u3055\u300d\u3092\u56f3\u308b\u30e2\u30c7\u30eb\u3067\u3059\u3002\n\u7c21\u5358\u306b\u3044\u3046\u3068\u3001\u8a66\u5408\u306e\u7d50\u679c\u304b\u3089\u5404\u3005\u306e\u300c\u5f37\u3055\u300d\u3092\u6570\u5024\u5316\u3067\u304d\u308b\u3088\u3063\u3066\u3044\u3046\u6982\u5ff5\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u8ad6\u6587\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\u300c\u5f37\u3055\u300d\u306b\u5bfe\u3059\u308b\u5b9a\u91cf\u7684\u8a55\u4fa1\u6cd5\u3068\u305d\u306e\u5fdc\u7528\n\nn\u500b\u306e\u8981\u7d20 (\u30c1\u30fc\u30e0\u3084\u500b\u4eba) \u304c\u3042\u308a\u3001\u4f55\u3089\u304b\u306e\u5bfe\u6226\u3092\u884c\u3046\u3082\u306e\u3068\u3059\u308b\u3002\n\u5bfe\u6226\u306f 1\u8981\u7d20 \u5bfe 1\u8981\u7d20 \u306e\u30de\u30c3\u30c1\u3067\u884c\u308f\u308c\u3001\u305d\u306e\u7d50\u679c\u306f\u7247\u65b9\u306e\u8981\u7d20\u306e\u5bfe\u3057\u3066\u52dd\u5229\u3001\u307e\u305f\u306f\u6557\u5317\u3057\u304b\u751f\u3058\u306a\u3044\u3068\u3059\u308b\u3002\n\u4f55\u56de\u304b\u5bfe\u6226\u3057\u305f\u7d50\u679c\u304b\u3089\u5404\u8981\u7d20\u306e\u300c\u5f37\u3055\u300d\u3092\u306f\u304b\u308b\u3068\u3059\u308b\u3002\n\u3053\u3053\u3067\u8981\u7d20 i \u304c\u8981\u7d20 j \u306b\u52dd\u5229\u3059\u308b\u78ba\u7387\u3092 Pij \u3068\u3057\u305f\u3068\u304d\u3001\u3059\u3079\u3066\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u5bfe\u3057\u3066\u3001\nPij =\u3000\u03c0i / \u03c0i + \u03c0j (1)\n\u3068\u306a\u308b\u03c0i \u3092\u5c0e\u5165\u3059\u308b\u3002\n\u5f0f (1) \u306e\u95a2\u4fc2\u5f0f\u3092 Bradley-Terry\uff08BT\uff09\u30e2\u30c7\u30eb\u3068\u3044\u3046\u3002\nBT \u30e2\u30c7\u30eb\u306b\u304a\u3044\u3066 \u03c0i \u306f\uff0c\u8981\u7d20 i \u306e\u5f37\u3055\u3092\u8868\u3059\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u53c2\u8003\u306b\u3057\u305f\u3082\u306e\n\u5148\u65e5\u53c2\u52a0\u3057\u305f\u3001\u7d71\u8a08\u51e6\u7406\u53ca\u3073\u6a5f\u68b0\u5b66\u7fd2\u306b\u57fa\u3065\u304f\u30c7\u30fc\u30bf\u30de\u30a4\u30cb\u30f3\u30b0\u52c9\u5f37\u4f1a #03\u3067\u306e\u8b1b\u7fa9\u5185\u5bb9\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067Bradley-Terry's Model\u3092Python\u3067\u5b9f\u88c5\u3057\u305f\u3082\u306e\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\uff08ws\u306b\u4ee3\u5165\u3055\u308c\u3066\u3044\u308b\u6570\u5b57\u306f\u3001\u4ea4\u6d41\u6226\u306e\u6210\u7e3e\u3092\u9664\u3044\u305f2014\u5e74\u5ea6\u306e\u30bb\u30fb\u30ea\u30fc\u30b06\u7403\u56e3\u306e\u7dcf\u52dd\u6570\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\u4fbf\u5b9c\u4e0a\u3001\u5f15\u304d\u5206\u3051\u30920.5\u3067\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u3044\u307e\u3059\u3002)\n\u3053\u3053\u3067\u5f97\u3089\u308c\u305ftheta\u304c\u5404\u30c1\u30fc\u30e0\u306e\u300c\u5f37\u3055\u300d\u306e\u6570\u5024\u3067\u3059\u3002\nimport numpy as np\ntheta = np.ones(6)/6.0 # \\theta \u521d\u671f\u5024\nt = np.zeros(6)\nr = 24.0 # \u5bfe\u6226\u6570\nws = np.array([66.5, 66.5, 66, 56.5, 55, 50.5])  # \u7dcf\u52dd\u6570\nfor iloop in range(0, 100):\n    for i in range(0,6):\n        acc = 0 # \u7dcf\u548c\u7528\u306e\u30a2\u30ad\u30e5\u30e0\u30ec\u30fc\u30bf\n        for j in range(0,6):\n            if (j == i):\n                pass\n            else:\n                acc += r / (theta[i]+theta[j])\n        t[i] = ws[i]/acc\n    s = sum(t)\n    for i in range(0, 6):\n        theta[i] = t[i] / s\n\n\n\u904e\u53bb\uff15\u5e74\u9593\u306e\u6226\u529b\u5024\u9077\u79fb\n\u4e0a\u8a18\u306eBradley-Terry's Model\u3092\u53c2\u8003\u306b\u3001\u30bb\u30fb\u30ea\u30fc\u30b0\u306e\uff15\u5e74\u9593\u306e\u79fb\u308a\u5909\u308f\u308a\u3092matplotlib\u3067\u30b0\u30e9\u30d5\u5316\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os\n\ntheta = np.ones(6) / 6.0\nt = np.zeros(6)\nr = 24.0\n\nteams = [u\"\u5de8\u4eba\", u\"\u962a\u795e\", u\"\u5e83\u5cf6\", u\"\u4e2d\u65e5\", u\"\u6a2a\u6d5c\", u\"\u30e4\u30af\u30eb\u30c8\"]\ncolors = [\"#f27b00\", \"#ffff00\", \"#ff0000\", \"#002468\", \"#044a90\", \"#111c3c\"]\nscores = [[67.5, 68, 48, 68.5, 42.5, 65.5], [66, 61, 57, 66, 43.5, 66.5], [76.5, 51.5, 55.5, 69, 43, 64.5], [74, 62.5, 58.5, 57.5, 55, 51.5], [66.5, 66.5, 66, 56.5, 55, 50.5]]\nyears = [\"2010\", \"2011\", \"2012\", \"2013\", \"2014\"]\npoints = [[], [], [], [], [], []]\n\n\ndef reset():\n    global theta\n    theta = np.ones(6) / 6.0\n\ndef bradley_terry(ws):\n    for iloop in range(0, 100):\n        for i in range(0, 6):\n            acc = 0\n            for j in range(0, 6):\n                if i == j:\n                    pass\n                else:\n                    acc += r / (theta[i] + theta[j])\n            t[i] = ws[i] / acc\n        s = sum(t)\n        for i in range(0, 6):\n            theta[i] = t[i] / s\n\nif __name__ == '__main__':\n    for score in scores:\n        reset()\n        bradley_terry(score)\n        for i in range(0, 6):\n            points[i].append(theta[i])\n\n    for i in range(0, 6):\n        data = np.loadtxt(points[i])\n        plt.plot(\n            data,\n            linestyle=\"-\",\n            color=colors[i],\n            label=teams[i],\n            linewidth=2\n        )\n\n    plt.ylim(0, 0.5)\n    X = np.arange(len(years))\n    plt.xticks(X, years)\n    plt.tick_params(labelleft=\"off\")\n    plt.xlabel(\"Year\")\n    plt.ylabel(\"BradleyTerry Rate\")\n    plt.title(\"Central League\")\n    plt.grid(True)\n    plt.legend(loc=\"best\")\n    plt.rcParams.update({\"font.size\": 20})\n    os.chdir(\"graph/\")\n    plt.savefig(\"central.eps\")\n\n    plt.show()\n\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u30fb\u5de8\u4eba\u306e\u5b89\u5b9a\u7684\u306a\u5f37\u3055\n\u30fb\u4e2d\u65e5\u3001\u30e4\u30af\u30eb\u30c8\u306e\u53f3\u80a9\u4e0b\u304c\u308a\n\u30fb\u5e83\u5cf6\u3001\u6a2a\u6d5c\u306e\u53f3\u80a9\u4e0a\u304c\u308a\n\u306a\u3069\u304c\u8aad\u307f\u53d6\u308c\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u2026\n\u30d1\u30fb\u30ea\u30fc\u30b0\u3067\u3082\u540c\u69d8\u306b\u3084\u3063\u3066\u307f\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b0\u30e9\u30d5\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u30bb\u30fb\u30ea\u30fc\u30b0\u306e\u30b0\u30e9\u30d5\u3068\u6bd4\u8f03\u3059\u308b\u30686\u672c\u306e\u6298\u308c\u7dda\u304c\u3054\u3061\u3083\u3054\u3061\u3083\u3057\u3066\u308b\u306e\u304c\u7279\u5fb4\u7684\u3067\u3059\u3002\n2013\u5e74\u30682014\u5e74\u3067AB\u30af\u30e9\u30b9\u304c\u307e\u308b\u3063\u3068\u5165\u308c\u66ff\u308f\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u8d77\u304d\u3061\u3083\u3046\u300c\u6df7\u30d1\u300d\u3092\u3088\u304f\u8868\u73fe\u3067\u304d\u3066\u307e\u3059\u306d\uff01\n\n##Bradley-Terry's Model\n\u3053\u308c\u306f\u3001\u300c\u5f37\u3055\u300d\u3092\u56f3\u308b\u30e2\u30c7\u30eb\u3067\u3059\u3002\n\u7c21\u5358\u306b\u3044\u3046\u3068\u3001\u8a66\u5408\u306e\u7d50\u679c\u304b\u3089\u5404\u3005\u306e\u300c\u5f37\u3055\u300d\u3092\u6570\u5024\u5316\u3067\u304d\u308b\u3088\u3063\u3066\u3044\u3046\u6982\u5ff5\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u8ad6\u6587\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n[\u300c\u5f37\u3055\u300d\u306b\u5bfe\u3059\u308b\u5b9a\u91cf\u7684\u8a55\u4fa1\u6cd5\u3068\u305d\u306e\u5fdc\u7528](http://www-mcs.c.oka-pu.ac.jp/pdf/abstract/2006_SatoshiNishimoto_MasterAbstract.pdf)\n\n>n\u500b\u306e\u8981\u7d20 (\u30c1\u30fc\u30e0\u3084\u500b\u4eba) \u304c\u3042\u308a\u3001\u4f55\u3089\u304b\u306e\u5bfe\u6226\u3092\u884c\u3046\u3082\u306e\u3068\u3059\u308b\u3002\n\u5bfe\u6226\u306f 1\u8981\u7d20 \u5bfe 1\u8981\u7d20 \u306e\u30de\u30c3\u30c1\u3067\u884c\u308f\u308c\u3001\u305d\u306e\u7d50\u679c\u306f\u7247\u65b9\u306e\u8981\u7d20\u306e\u5bfe\u3057\u3066\u52dd\u5229\u3001\u307e\u305f\u306f\u6557\u5317\u3057\u304b\u751f\u3058\u306a\u3044\u3068\u3059\u308b\u3002\n\u4f55\u56de\u304b\u5bfe\u6226\u3057\u305f\u7d50\u679c\u304b\u3089\u5404\u8981\u7d20\u306e\u300c\u5f37\u3055\u300d\u3092\u306f\u304b\u308b\u3068\u3059\u308b\u3002\n\u3053\u3053\u3067\u8981\u7d20 i \u304c\u8981\u7d20 j \u306b\u52dd\u5229\u3059\u308b\u78ba\u7387\u3092 Pij \u3068\u3057\u305f\u3068\u304d\u3001\u3059\u3079\u3066\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u5bfe\u3057\u3066\u3001\nPij =\u3000\u03c0i / \u03c0i + \u03c0j (1)\n\u3068\u306a\u308b\u03c0i \u3092\u5c0e\u5165\u3059\u308b\u3002\n\u5f0f (1) \u306e\u95a2\u4fc2\u5f0f\u3092 Bradley-Terry\uff08BT\uff09\u30e2\u30c7\u30eb\u3068\u3044\u3046\u3002\nBT \u30e2\u30c7\u30eb\u306b\u304a\u3044\u3066 \u03c0i \u306f\uff0c\u8981\u7d20 i \u306e\u5f37\u3055\u3092\u8868\u3059\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n##\u53c2\u8003\u306b\u3057\u305f\u3082\u306e\n\u5148\u65e5\u53c2\u52a0\u3057\u305f\u3001[\u7d71\u8a08\u51e6\u7406\u53ca\u3073\u6a5f\u68b0\u5b66\u7fd2\u306b\u57fa\u3065\u304f\u30c7\u30fc\u30bf\u30de\u30a4\u30cb\u30f3\u30b0\u52c9\u5f37\u4f1a #03](http://spml4dm.connpass.com/event/13133/)\u3067\u306e\u8b1b\u7fa9\u5185\u5bb9\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067Bradley-Terry's Model\u3092Python\u3067\u5b9f\u88c5\u3057\u305f\u3082\u306e\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\uff08ws\u306b\u4ee3\u5165\u3055\u308c\u3066\u3044\u308b\u6570\u5b57\u306f\u3001\u4ea4\u6d41\u6226\u306e\u6210\u7e3e\u3092\u9664\u3044\u305f2014\u5e74\u5ea6\u306e\u30bb\u30fb\u30ea\u30fc\u30b06\u7403\u56e3\u306e\u7dcf\u52dd\u6570\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\u4fbf\u5b9c\u4e0a\u3001\u5f15\u304d\u5206\u3051\u30920.5\u3067\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u3044\u307e\u3059\u3002)\n\u3053\u3053\u3067\u5f97\u3089\u308c\u305ftheta\u304c\u5404\u30c1\u30fc\u30e0\u306e\u300c\u5f37\u3055\u300d\u306e\u6570\u5024\u3067\u3059\u3002\n\n```\nimport numpy as np\ntheta = np.ones(6)/6.0 # \\theta \u521d\u671f\u5024\nt = np.zeros(6)\nr = 24.0 # \u5bfe\u6226\u6570\nws = np.array([66.5, 66.5, 66, 56.5, 55, 50.5])  # \u7dcf\u52dd\u6570\nfor iloop in range(0, 100):\n    for i in range(0,6):\n        acc = 0 # \u7dcf\u548c\u7528\u306e\u30a2\u30ad\u30e5\u30e0\u30ec\u30fc\u30bf\n        for j in range(0,6):\n            if (j == i):\n                pass\n            else:\n                acc += r / (theta[i]+theta[j])\n        t[i] = ws[i]/acc\n    s = sum(t)\n    for i in range(0, 6):\n        theta[i] = t[i] / s\n```\n\n##\u904e\u53bb\uff15\u5e74\u9593\u306e\u6226\u529b\u5024\u9077\u79fb\n\u4e0a\u8a18\u306eBradley-Terry's Model\u3092\u53c2\u8003\u306b\u3001\u30bb\u30fb\u30ea\u30fc\u30b0\u306e\uff15\u5e74\u9593\u306e\u79fb\u308a\u5909\u308f\u308a\u3092matplotlib\u3067\u30b0\u30e9\u30d5\u5316\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os\n\ntheta = np.ones(6) / 6.0\nt = np.zeros(6)\nr = 24.0\n\nteams = [u\"\u5de8\u4eba\", u\"\u962a\u795e\", u\"\u5e83\u5cf6\", u\"\u4e2d\u65e5\", u\"\u6a2a\u6d5c\", u\"\u30e4\u30af\u30eb\u30c8\"]\ncolors = [\"#f27b00\", \"#ffff00\", \"#ff0000\", \"#002468\", \"#044a90\", \"#111c3c\"]\nscores = [[67.5, 68, 48, 68.5, 42.5, 65.5], [66, 61, 57, 66, 43.5, 66.5], [76.5, 51.5, 55.5, 69, 43, 64.5], [74, 62.5, 58.5, 57.5, 55, 51.5], [66.5, 66.5, 66, 56.5, 55, 50.5]]\nyears = [\"2010\", \"2011\", \"2012\", \"2013\", \"2014\"]\npoints = [[], [], [], [], [], []]\n\n\ndef reset():\n    global theta\n    theta = np.ones(6) / 6.0\n\ndef bradley_terry(ws):\n    for iloop in range(0, 100):\n        for i in range(0, 6):\n            acc = 0\n            for j in range(0, 6):\n                if i == j:\n                    pass\n                else:\n                    acc += r / (theta[i] + theta[j])\n            t[i] = ws[i] / acc\n        s = sum(t)\n        for i in range(0, 6):\n            theta[i] = t[i] / s\n\nif __name__ == '__main__':\n    for score in scores:\n        reset()\n        bradley_terry(score)\n        for i in range(0, 6):\n            points[i].append(theta[i])\n\n    for i in range(0, 6):\n        data = np.loadtxt(points[i])\n        plt.plot(\n            data,\n            linestyle=\"-\",\n            color=colors[i],\n            label=teams[i],\n            linewidth=2\n        )\n\n    plt.ylim(0, 0.5)\n    X = np.arange(len(years))\n    plt.xticks(X, years)\n    plt.tick_params(labelleft=\"off\")\n    plt.xlabel(\"Year\")\n    plt.ylabel(\"BradleyTerry Rate\")\n    plt.title(\"Central League\")\n    plt.grid(True)\n    plt.legend(loc=\"best\")\n    plt.rcParams.update({\"font.size\": 20})\n    os.chdir(\"graph/\")\n    plt.savefig(\"central.eps\")\n\n    plt.show()\n```\n![central.png](https://qiita-image-store.s3.amazonaws.com/0/19111/7493182c-768b-f0f3-3b61-82fb59d04246.png \"central.png\")\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u30fb\u5de8\u4eba\u306e\u5b89\u5b9a\u7684\u306a\u5f37\u3055\n\u30fb\u4e2d\u65e5\u3001\u30e4\u30af\u30eb\u30c8\u306e\u53f3\u80a9\u4e0b\u304c\u308a\n\u30fb\u5e83\u5cf6\u3001\u6a2a\u6d5c\u306e\u53f3\u80a9\u4e0a\u304c\u308a\n\u306a\u3069\u304c\u8aad\u307f\u53d6\u308c\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u2026\n\n\u30d1\u30fb\u30ea\u30fc\u30b0\u3067\u3082\u540c\u69d8\u306b\u3084\u3063\u3066\u307f\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b0\u30e9\u30d5\u3068\u306a\u308a\u307e\u3059\u3002\n\n![pacific.png](https://qiita-image-store.s3.amazonaws.com/0/19111/fd9ada2c-c7df-716b-e8ea-42e7151eb478.png \"pacific.png\")\n\n\u30bb\u30fb\u30ea\u30fc\u30b0\u306e\u30b0\u30e9\u30d5\u3068\u6bd4\u8f03\u3059\u308b\u30686\u672c\u306e\u6298\u308c\u7dda\u304c\u3054\u3061\u3083\u3054\u3061\u3083\u3057\u3066\u308b\u306e\u304c\u7279\u5fb4\u7684\u3067\u3059\u3002\n2013\u5e74\u30682014\u5e74\u3067AB\u30af\u30e9\u30b9\u304c\u307e\u308b\u3063\u3068\u5165\u308c\u66ff\u308f\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u8d77\u304d\u3061\u3083\u3046\u300c\u6df7\u30d1\u300d\u3092\u3088\u304f\u8868\u73fe\u3067\u304d\u3066\u307e\u3059\u306d\uff01\n", "tags": ["statistics", "matplotlib", "Python", "numpy", "baseball"]}