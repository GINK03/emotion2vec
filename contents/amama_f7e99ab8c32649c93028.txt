{"tags": ["\u30a4\u30f3\u30d7\u30ea\u30e1\u30f3\u30c6\u30a3\u30f3\u30b0\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30ca\u30eb\u30e9\u30f3\u30b2\u30fc\u30b8\u30ba"], "context": " More than 1 year has passed since last update.\n\n2\u65e5\u76ee\n1\u65e5\u76ee\n3\u65e5\u76ee\n\n19\u30da\u30fc\u30b8\ntype CoreExpr = Expr Name\u3068\u3042\u308b.Expr\u306f\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3060\u3063\u305f\u3089\u3057\u3044.\u50d5\u306fC\u3057\u304b\u77e5\u3089\u306a\u3044\u306e\u3067,\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u3044\u3046\u5358\u8a9e\u3092\u6b63\u3057\u304f\u4f7f\u3063\u3066\u308b\u304b\u306f\u3057\u3089\u306a\u3044.\n\u306a\u3093\u3068\u304b\u306a\u308b\u3068\u601d\u3046\u306e\u3067\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u5168\u90e8\u7121\u8996\u3057\u3066\u578b\u306e\u3053\u3068\u3060\u3068\u601d\u3046.\ntype Name = String\u3068\u3042\u308b.C\u306bString\u306a\u3093\u3066\u306a\u3044\u306e\u3067,char*\u3067\u4ee3\u7528\u3059\u308b.\ntypedef char * Name;\n\nIsRec\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u306e\u3067\u5b9f\u88c5\u3059\u308b.let\u306f\u4e0b\u4f4d\u30d3\u30c3\u30c8\u30920b0100,letrec\u306f0b0101\u3068\u3057\u3066\u3042\u308b\u306e\u3067\u4e0d\u8981\u3060\u3068\u601d\u3046\u304cC\u3067\u5b9f\u88c5\u3059\u308b.(bool,true,false\u3092\u4f7f\u3046\u306b\u306fstdbool\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u304c\u5fc5\u8981.static\u306f\u6c17\u5206)\ntypedef bool IsRec;\nstatic IsRec recursive = true, nonRecursive = false;\n\nbinderOf\u95a2\u6570\u3092\u5b9f\u88c5\u3059\u308b.[(\u8b58\u5225\u5b50,\u675f\u7e1b\u3055\u308c\u3066\u3044\u308b\u5f0f)]\u306e\u30ea\u30b9\u30c8\u304b\u3089[\u8b58\u5225\u5b50]\u306e\u30ea\u30b9\u30c8\u3092\u5f97\u308b.C\u306b\u30ea\u30b9\u30c8\u3084\u30bf\u30d7\u30eb\u306a\u3093\u3066\u9ad8\u7d1a\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306f\u306a\u3044\u306e\u3067,\u3068\u308a\u3042\u3048\u305a\u30ea\u30b9\u30c8\u578b\u304c\u3042\u308b\u3082\u306e\u3068\u3057\u3066\u6271\u3046.\n\u3082\u3061\u308d\u3093\u30a8\u30e9\u30fc\u51e6\u7406\u306a\u3093\u3066\u3057\u306a\u3044.\u5168\u90e8\u9069\u5207\u306a\u30c7\u30fc\u30bf\u304c\u6765\u308b\u3082\u306e\u3068\u3057\u3066\u6271\u3046.\nMiranda\u306e\u30ea\u30b9\u30c8\u578b\u3092mi_list,\u30bf\u30d7\u30eb\u578b\u3082\u30ea\u30b9\u30c8\u578b\u3068\u3059\u308b.\u50d5\u306f\u81ea\u5206\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3068\u304d\u306fsnake_case\u304c\u597d\u304d\u3060\u304b\u3089.\nC\u3067\u66f8\u304f\u3068\u304d\u306b\u578b\u60c5\u5831\u304c\u5931\u308f\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u3059\u308b.\nrhssOf\u3082\u540c\u69d8\u306b\u66f8\u304f.\nmi_list bindersOf(mi_list defns) {\n    mi_list ret = init_mi_list();\n    for(mi_list defn = ml_car(defns); !isnil(ml_cdr(defns)); defns = ml_cdr(defns)) {\n        ml_add(ret, ml_car(defn));\n    }\n    return ret;\n}\n\nmi_list rhssOf(mi_list defns) {\n    mi_list ret = init_mi_list();\n    for(mi_list defn = ml_car(defns); !isnil(ml_cdr(defns)); defns = ml_cdr(defns)) {\n        ml_add(ret, ml_cdr(defn));\n    }\n    return ret;\n}\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u305f\u3081\u306b\u9069\u5f53\u306b\u30d8\u30c3\u30c0\u3092\u66f8\u304f.\u672c\u5f53\u306b\u9069\u5f53\u306a\u306e\u3067\u5f8c\u3067\u66f8\u304d\u76f4\u3059.\n#ifndef MI_TYPES_H\n#define MI_TYPES_H\n\n#include <stdbool.h>\n\ntypedef struct mi_list * mi_list;\n\nmi_list init_mi_list(void);\nmi_list ml_car(mi_list);\nmi_list ml_cdr(mi_list);\nmi_list ml_add(mi_list, mi_list);\nbool isnil(mi_list);\n#endif\n\ntype Alter a = (Int, [a], Expr a)\u306a\u3093\u3066\u3044\u3046\u30af\u30bd\u9762\u5012\u305d\u3046\u306a\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u51fa\u3066\u304d\u305f\u3051\u3069\u9762\u5012\u306a\u306e\u3067\u30ea\u30b9\u30c8\u306b\u3059\u308b.\n\u672c\u5f53\u306b\u30ea\u30b9\u30c8\u306f\u6c4e\u7528\u6027\u9ad8\u3044.\u30bf\u30d7\u30eb\u3068\u30ea\u30b9\u30c8\u4e21\u65b9\u4f5c\u3063\u305f\u7406\u7531\u304c\u308f\u304b\u3089\u3093.\u578b\u60c5\u5831\u304c\u5931\u308f\u308c\u308b\u304b\u3089\u304b\u306a.\ntype CoreAlt = Alter Name\u3068\u3042\u308b\u306e\u3067,\u3053\u308c\u3092\u671f\u5f85\u3057\u3066\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u306b\u3059\u308b.\nisAtomicExpr\u3082\u3088\u304f\u308f\u304b\u3093\u306a\u3044\u306e\u3067\u305d\u308c\u3063\u307d\u304f\u5b9f\u88c5\u3059\u308b.\nbool isEVar(Expr e) {\n    return ((uintptr_t)e.car & 8) == 8;\n}\n\nbool isENum(Expr e) {\n    return ((uintptr_t)e.car & 1) == 1;\n}\n\nbool isAtomicExpr(Expr a) { //\u3053\u306ea\u306f\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u3067\u306f\u306a\u3044\n        return isEVar(a) || isENum(a);\n}\n\n\n\u591a\u5206\u5f8c\u3067Expr\u3068\u304blist\u3068\u304btuple\u306e\u3061\u3083\u3093\u3068\u3057\u305f\u5b9f\u88c5\u3092\u3059\u308b.\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u307f\u305f\u3044\u306a\u306e\u306b\u5bfe\u5fdc\u3055\u305b\u308b.\nunion\u3067\u3044\u3044\u306e\u304b\u306a\u3042.\u30bf\u30d7\u30eb\u306f\u69cb\u9020\u4f53\u3067\u3088\u3055\u305d\u3046.\ntype Program a = [ScDefn a],type ScDefn a = (Name, [a], Expr a)\u3082\u30ea\u30b9\u30c8\u3067\u5b9f\u88c5\u3059\u308b.\ntypedef mi_list Program;\ntypedef mi_list ScDefn;\n\n\u4eca\u5f8c\u306e\u8ab2\u984c\u306f\nmain = double 21 ;\ndouble x = x+x\n\n\u3092\n[(\"main\", [], (EAp (EVar \"double\") (ENum 21))),\n(\"double\", [\"x\"], (EAp (EAp (EVar \"+\") (EVar \"x\")) (EVar \"x\")))\n]\n\n\u306b\u5909\u63db\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3053\u3068.\n1.3\u3092\u8aad\u307f\u7d42\u308f\u3063\u305f\n# 2\u65e5\u76ee\n[1\u65e5\u76ee](http://qiita.com/amama/items/d7fb5feeb288ff7b6b35)\n[3\u65e5\u76ee](http://qiita.com/amama/items/0cd53283c3b839bc8ae2)\n\n## 19\u30da\u30fc\u30b8\n`type CoreExpr = Expr Name`\u3068\u3042\u308b.Expr\u306f\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3060\u3063\u305f\u3089\u3057\u3044.\u50d5\u306fC\u3057\u304b\u77e5\u3089\u306a\u3044\u306e\u3067,\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u3044\u3046\u5358\u8a9e\u3092\u6b63\u3057\u304f\u4f7f\u3063\u3066\u308b\u304b\u306f\u3057\u3089\u306a\u3044.\n\u306a\u3093\u3068\u304b\u306a\u308b\u3068\u601d\u3046\u306e\u3067\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u5168\u90e8\u7121\u8996\u3057\u3066\u578b\u306e\u3053\u3068\u3060\u3068\u601d\u3046.\n`type Name = String`\u3068\u3042\u308b.C\u306bString\u306a\u3093\u3066\u306a\u3044\u306e\u3067,char*\u3067\u4ee3\u7528\u3059\u308b.\n\n```c\ntypedef char * Name;\n```\n\nIsRec\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u306e\u3067\u5b9f\u88c5\u3059\u308b.let\u306f\u4e0b\u4f4d\u30d3\u30c3\u30c8\u30920b0100,letrec\u306f0b0101\u3068\u3057\u3066\u3042\u308b\u306e\u3067\u4e0d\u8981\u3060\u3068\u601d\u3046\u304cC\u3067\u5b9f\u88c5\u3059\u308b.(bool,true,false\u3092\u4f7f\u3046\u306b\u306fstdbool\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u304c\u5fc5\u8981.static\u306f\u6c17\u5206)\n\n```c\ntypedef bool IsRec;\nstatic IsRec recursive = true, nonRecursive = false;\n```\n\nbinderOf\u95a2\u6570\u3092\u5b9f\u88c5\u3059\u308b.[(\u8b58\u5225\u5b50,\u675f\u7e1b\u3055\u308c\u3066\u3044\u308b\u5f0f)]\u306e\u30ea\u30b9\u30c8\u304b\u3089[\u8b58\u5225\u5b50]\u306e\u30ea\u30b9\u30c8\u3092\u5f97\u308b.C\u306b\u30ea\u30b9\u30c8\u3084\u30bf\u30d7\u30eb\u306a\u3093\u3066\u9ad8\u7d1a\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306f\u306a\u3044\u306e\u3067,\u3068\u308a\u3042\u3048\u305a\u30ea\u30b9\u30c8\u578b\u304c\u3042\u308b\u3082\u306e\u3068\u3057\u3066\u6271\u3046.\n\u3082\u3061\u308d\u3093\u30a8\u30e9\u30fc\u51e6\u7406\u306a\u3093\u3066\u3057\u306a\u3044.\u5168\u90e8\u9069\u5207\u306a\u30c7\u30fc\u30bf\u304c\u6765\u308b\u3082\u306e\u3068\u3057\u3066\u6271\u3046.\nMiranda\u306e\u30ea\u30b9\u30c8\u578b\u3092mi_list,\u30bf\u30d7\u30eb\u578b\u3082\u30ea\u30b9\u30c8\u578b\u3068\u3059\u308b.\u50d5\u306f\u81ea\u5206\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3068\u304d\u306fsnake_case\u304c\u597d\u304d\u3060\u304b\u3089.\nC\u3067\u66f8\u304f\u3068\u304d\u306b\u578b\u60c5\u5831\u304c\u5931\u308f\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u3059\u308b.\nrhssOf\u3082\u540c\u69d8\u306b\u66f8\u304f.\n\n```c\nmi_list bindersOf(mi_list defns) {\n\tmi_list ret = init_mi_list();\n\tfor(mi_list defn = ml_car(defns); !isnil(ml_cdr(defns)); defns = ml_cdr(defns)) {\n\t\tml_add(ret, ml_car(defn));\n\t}\n\treturn ret;\n}\n\nmi_list rhssOf(mi_list defns) {\n\tmi_list ret = init_mi_list();\n\tfor(mi_list defn = ml_car(defns); !isnil(ml_cdr(defns)); defns = ml_cdr(defns)) {\n\t\tml_add(ret, ml_cdr(defn));\n\t}\n\treturn ret;\n}\n```\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u305f\u3081\u306b\u9069\u5f53\u306b\u30d8\u30c3\u30c0\u3092\u66f8\u304f.\u672c\u5f53\u306b\u9069\u5f53\u306a\u306e\u3067\u5f8c\u3067\u66f8\u304d\u76f4\u3059.\n\n```c\n#ifndef MI_TYPES_H\n#define MI_TYPES_H\n\n#include <stdbool.h>\n\ntypedef struct mi_list * mi_list;\n\nmi_list init_mi_list(void);\nmi_list ml_car(mi_list);\nmi_list ml_cdr(mi_list);\nmi_list ml_add(mi_list, mi_list);\nbool isnil(mi_list);\n#endif\n```\n\n`type Alter a = (Int, [a], Expr a)`\u306a\u3093\u3066\u3044\u3046\u30af\u30bd\u9762\u5012\u305d\u3046\u306a\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u51fa\u3066\u304d\u305f\u3051\u3069\u9762\u5012\u306a\u306e\u3067\u30ea\u30b9\u30c8\u306b\u3059\u308b.\n\u672c\u5f53\u306b\u30ea\u30b9\u30c8\u306f\u6c4e\u7528\u6027\u9ad8\u3044.\u30bf\u30d7\u30eb\u3068\u30ea\u30b9\u30c8\u4e21\u65b9\u4f5c\u3063\u305f\u7406\u7531\u304c\u308f\u304b\u3089\u3093.\u578b\u60c5\u5831\u304c\u5931\u308f\u308c\u308b\u304b\u3089\u304b\u306a.\n`type CoreAlt = Alter Name`\u3068\u3042\u308b\u306e\u3067,\u3053\u308c\u3092\u671f\u5f85\u3057\u3066\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u306b\u3059\u308b.\n\n`isAtomicExpr`\u3082\u3088\u304f\u308f\u304b\u3093\u306a\u3044\u306e\u3067\u305d\u308c\u3063\u307d\u304f\u5b9f\u88c5\u3059\u308b.\n\n```c\nbool isEVar(Expr e) {\n\treturn ((uintptr_t)e.car & 8) == 8;\n}\n\nbool isENum(Expr e) {\n\treturn ((uintptr_t)e.car & 1) == 1;\n}\n\nbool isAtomicExpr(Expr a) { //\u3053\u306ea\u306f\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u3067\u306f\u306a\u3044\n\t\treturn isEVar(a) || isENum(a);\n}\n\n```\n\n\u591a\u5206\u5f8c\u3067Expr\u3068\u304blist\u3068\u304btuple\u306e\u3061\u3083\u3093\u3068\u3057\u305f\u5b9f\u88c5\u3092\u3059\u308b.\u578b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u307f\u305f\u3044\u306a\u306e\u306b\u5bfe\u5fdc\u3055\u305b\u308b.\nunion\u3067\u3044\u3044\u306e\u304b\u306a\u3042.\u30bf\u30d7\u30eb\u306f\u69cb\u9020\u4f53\u3067\u3088\u3055\u305d\u3046.\n\n`type Program a = [ScDefn a]`,` type ScDefn a = (Name, [a], Expr a)`\u3082\u30ea\u30b9\u30c8\u3067\u5b9f\u88c5\u3059\u308b.\n\n```c\ntypedef mi_list Program;\ntypedef mi_list ScDefn;\n```\n\n\u4eca\u5f8c\u306e\u8ab2\u984c\u306f\n\n```\nmain = double 21 ;\ndouble x = x+x\n```\n\u3092\n\n```\n[(\"main\", [], (EAp (EVar \"double\") (ENum 21))),\n(\"double\", [\"x\"], (EAp (EAp (EVar \"+\") (EVar \"x\")) (EVar \"x\")))\n]\n```\n\n\u306b\u5909\u63db\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3053\u3068.\n\n**1.3\u3092\u8aad\u307f\u7d42\u308f\u3063\u305f**\n"}