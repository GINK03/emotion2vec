{"context": " More than 1 year has passed since last update.Mac OSX\u3067\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u4e0a\u304b\u3089\u30b7\u30b9\u30c6\u30e0\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30d7\u30ed\u30ad\u30b7\u30fc\u306e\u8a2d\u5b9a\u3092\u898b\u308b\u3053\u3068\u304c\u96e3\u3057\u3044\uff0e\u305d\u3053\u3067\uff0c\u30b7\u30b9\u30c6\u30e0\u306e\u30d7\u30ed\u30ad\u30b7\u30fc\u8a2d\u5b9a\u3092\u53d6\u5f97\u3057\u3066export\u3092\u51fa\u529b\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u305f\uff0e\n\n#!/usr/bin/env php\n<?php\n\nfunction MacNetworkGetServiceName($interface = NULL) {\n    if (!is_string($interface)) $interface = MacNetworkGetInterface();\n    exec('networksetup -listnetworkserviceorder', $output);\n    $network = FALSE;\n    foreach ($output as $line) {\n        if (preg_match('%^\\(\\d+\\) (.+)$%m', $line, $match)) {\n            $network = $match[1];\n            continue;\n        }\n        if (preg_match('%Device: ([^, \\)]+)%', $line, $match)) {\n            $device = $match[1];\n            if ($interface === $device) return $network;\n        }\n    }\n    return NULL;\n}\n\nfunction MacNetworkGetInterface($ip_address = '0.0.0.0') {\n    if (ip2long($ip_address) === FALSE) return NULL;\n    exec(\"route -n get $ip_address\", $output);\n    foreach ($output as $line) {\n        $line = array_map('trim', explode(':', trim($line), 2));\n        if (count($line) != 2) continue;\n        if (strtolower($line[0]) == 'interface') return $line[1];\n    }\n    return NULL;\n}\n\nfunction MacNetworkGetProxy($type = 'web', $service_name = NULL) {\n    if (!is_string($service_name)) $service_name = MacNetworkGetServiceName();\n    $type = strtolower($type);\n    if (!in_array($type, array(\n        'ftp', 'web', 'secureweb', 'streaming', 'gopher', 'socksfirewall'))) {\n        return NULL;\n    }\n    exec(\"networksetup -get{$type}proxy $service_name\", $output);\n    $server = ''; $port = 0;\n    foreach ($output as $line) {\n        $line = array_map('trim', explode(':', trim($line), 2));\n        if (count($line) != 2) continue;\n        $key = strtolower($line[0]);\n        if ($key == 'enabled') {\n            if (in_array(strtolower($line[1]), array('no', 'false')) || !$line[1]) {\n                return FALSE;\n            }\n        }\n        if ($key == 'server') $server = $line[1];\n        if ($key == 'port') $port = $line[1];\n    }\n    if ($server && $port) return \"$server:$port\";\n    return FALSE;\n}\n\n$http_proxy = MacNetworkGetProxy('web');\n$https_proxy = MacNetworkGetProxy('secureweb');\n$socks_proxy = MacNetworkGetProxy('socksfirewall');\n\n\nif ($http_proxy) {\n    echo \"export http_proxy='$http_proxy';\";\n    echo \"export HTTP_PROXY='$http_proxy';\";\n    echo \"export FTP_PROXY='http://$http_proxy/';\";\n    echo \"export RSYNC_PROXY='$http_proxy';\";\n} else {\n    echo \"unset FTP_PROXY;unset RSYNC_PROXY;\";\n    echo \"unset http_proxy;unset HTTP_PROXY;\";\n}\nif ($https_proxy) {\n    echo \"export https_proxy='$https_proxy';\";\n    echo \"export HTTPS_PROXY='$https_proxy';\";\n} else {\n    echo \"unset https_proxy;unset HTTPS_PROXY;\";\n}\nif ($socks_proxy) {\n    echo \"export SOCKS_PROXY='$socks_proxy';\";\n} else {\n    echo \"unset SOCKS_PROXY;\";\n}\necho \"\\n\";\n\n\u4e0a\u8a18\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 proxy_export \u3068\u3044\u3046\u540d\u524d\u3067\u30d1\u30b9\u3092\u901a\u3057\uff0c\neval `proxy_export`\n\n\u3068\u3044\u3046\u611f\u3058\u3067\u5b9f\u884c\u3059\u308b\u3068\u7c21\u5358\u306b\u8a2d\u5b9a\u3067\u304d\u308b(\u304b\u3082)\uff0e\nMac OSX\u3067\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u4e0a\u304b\u3089\u30b7\u30b9\u30c6\u30e0\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30d7\u30ed\u30ad\u30b7\u30fc\u306e\u8a2d\u5b9a\u3092\u898b\u308b\u3053\u3068\u304c\u96e3\u3057\u3044\uff0e\u305d\u3053\u3067\uff0c\u30b7\u30b9\u30c6\u30e0\u306e\u30d7\u30ed\u30ad\u30b7\u30fc\u8a2d\u5b9a\u3092\u53d6\u5f97\u3057\u3066export\u3092\u51fa\u529b\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u305f\uff0e\n\n```php\n\n#!/usr/bin/env php\n<?php\n\nfunction MacNetworkGetServiceName($interface = NULL) {\n\tif (!is_string($interface)) $interface = MacNetworkGetInterface();\n\texec('networksetup -listnetworkserviceorder', $output);\n\t$network = FALSE;\n\tforeach ($output as $line) {\n\t\tif (preg_match('%^\\(\\d+\\) (.+)$%m', $line, $match)) {\n\t\t\t$network = $match[1];\n\t\t\tcontinue;\n\t\t}\n\t\tif (preg_match('%Device: ([^, \\)]+)%', $line, $match)) {\n\t\t\t$device = $match[1];\n\t\t\tif ($interface === $device) return $network;\n\t\t}\n\t}\n\treturn NULL;\n}\n\nfunction MacNetworkGetInterface($ip_address = '0.0.0.0') {\n\tif (ip2long($ip_address) === FALSE) return NULL;\n\texec(\"route -n get $ip_address\", $output);\n\tforeach ($output as $line) {\n\t\t$line = array_map('trim', explode(':', trim($line), 2));\n\t\tif (count($line) != 2) continue;\n\t\tif (strtolower($line[0]) == 'interface') return $line[1];\n\t}\n\treturn NULL;\n}\n\nfunction MacNetworkGetProxy($type = 'web', $service_name = NULL) {\n\tif (!is_string($service_name)) $service_name = MacNetworkGetServiceName();\n\t$type = strtolower($type);\n\tif (!in_array($type, array(\n\t    'ftp', 'web', 'secureweb', 'streaming', 'gopher', 'socksfirewall'))) {\n\t\treturn NULL;\n\t}\n\texec(\"networksetup -get{$type}proxy $service_name\", $output);\n\t$server = ''; $port = 0;\n\tforeach ($output as $line) {\n\t\t$line = array_map('trim', explode(':', trim($line), 2));\n\t\tif (count($line) != 2) continue;\n\t\t$key = strtolower($line[0]);\n\t\tif ($key == 'enabled') {\n\t\t\tif (in_array(strtolower($line[1]), array('no', 'false')) || !$line[1]) {\n\t\t\t\treturn FALSE;\n\t\t\t}\n\t\t}\n\t\tif ($key == 'server') $server = $line[1];\n\t\tif ($key == 'port') $port = $line[1];\n\t}\n\tif ($server && $port) return \"$server:$port\";\n\treturn FALSE;\n}\n\n$http_proxy = MacNetworkGetProxy('web');\n$https_proxy = MacNetworkGetProxy('secureweb');\n$socks_proxy = MacNetworkGetProxy('socksfirewall');\n\n\nif ($http_proxy) {\n\techo \"export http_proxy='$http_proxy';\";\n\techo \"export HTTP_PROXY='$http_proxy';\";\n\techo \"export FTP_PROXY='http://$http_proxy/';\";\n\techo \"export RSYNC_PROXY='$http_proxy';\";\n} else {\n\techo \"unset FTP_PROXY;unset RSYNC_PROXY;\";\n\techo \"unset http_proxy;unset HTTP_PROXY;\";\n}\nif ($https_proxy) {\n\techo \"export https_proxy='$https_proxy';\";\n\techo \"export HTTPS_PROXY='$https_proxy';\";\n} else {\n\techo \"unset https_proxy;unset HTTPS_PROXY;\";\n}\nif ($socks_proxy) {\n\techo \"export SOCKS_PROXY='$socks_proxy';\";\n} else {\n\techo \"unset SOCKS_PROXY;\";\n}\necho \"\\n\";\n```\n\n\u4e0a\u8a18\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 proxy_export \u3068\u3044\u3046\u540d\u524d\u3067\u30d1\u30b9\u3092\u901a\u3057\uff0c\n\n```sh\neval `proxy_export`\n```\n\n\u3068\u3044\u3046\u611f\u3058\u3067\u5b9f\u884c\u3059\u308b\u3068\u7c21\u5358\u306b\u8a2d\u5b9a\u3067\u304d\u308b(\u304b\u3082)\uff0e", "tags": ["ShellScript", "Mac", "curl"]}