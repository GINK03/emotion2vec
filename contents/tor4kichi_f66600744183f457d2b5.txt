{"context": "WPF\u3067\u306f\u6dfb\u4ed8\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066Effect\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u7c21\u5358\u306b\u5f71\u4ed8\u304d\u306e\u8868\u793a\u304c\u3067\u304d\u307e\u3057\u305f\u304c\u3001UWP\u3060\u3068\u305d\u3046\u306f\u3044\u304b\u306a\u3044\u3088\u3046\u3067\u3059\u3002\uff08\u8981\u51fa\u5178\uff09\n\u4ed5\u65b9\u304c\u306a\u3044\u306e\u3067UIElement\u3092\u5730\u9053\u306b\u753b\u50cf\u51e6\u7406\u3092\u3057\u3066\u3001\u5f71\u3092\u4f5c\u308a\u51fa\u3059\u65b9\u6cd5\u3067\u3084\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\nUWP\u3067TextBlock\u7b49\u306eUIElement\u3092\u753b\u50cf\u51e6\u7406\u3059\u308b\u306e\u306b\u3001\u3053\u3053\u3067\u306fWin2D\u3092\u4f7f\u3063\u3066\u3044\u304d\u307e\u3059\u3002\nMicrosoft\u306e\u5185\u90e8\u30c1\u30fc\u30e0\u304c\u958b\u767a\u3057\u3066\u3044\u308bXAML\u3068\u89aa\u548c\u6027\u306e\u3042\u308bDirext2D\u30d9\u30fc\u30b9\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u306e\u3067\u5b89\u5fc3\u3057\u3066\u5229\u7528\u3067\u304d\u305d\u3046\u3067\u3059\u3002\nVisualStudio\u3067\u3042\u308c\u3070nuget\u304b\u3089Win2D\u3067\u691c\u7d22\u3059\u308c\u3070\u3059\u3050\u306b\u898b\u3064\u304b\u308b\u3068\u601d\u3044\u307e\u3059\uff08Win2D.UWP - NuGet\uff09\nWin2D\u306e\u6e96\u5099\u304c\u3067\u304d\u305f\u3089\u3001\u6b21\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6982\u8981\u3092\u8003\u3048\u307e\u3059\u3002\n\u5f71\u4ed8\u304d\u30c6\u30ad\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u307e\u3067\u306e\u6982\u5ff5\u7684\u306a\u6d41\u308c\u306f\n\nTextBlock(UIElement) \u306e\u8868\u793a\u5185\u5bb9\u3092Win2D\u3067\u6271\u3048\u308bCanvasBitmap\u3068\u3057\u3066\u66f8\u304d\u51fa\u3059\nCanvasBitmap\u3092\u30bd\u30fc\u30b9\u306b\u3057\u3066\u9ed2\u3067\u307c\u304b\u3057\u305f\u753b\u50cf\u3092\u4f5c\u6210\u3059\u308b\n\u9ed2\u3067\u307c\u304b\u3057\u305f\u753b\u50cf\u3092TextBlock\u306e\u80cc\u666f\u3068\u3057\u3066\u914d\u7f6e\u3059\u308b\n\n\u3067\u3059\u3002\n\nUIElement\u304b\u3089CanvasBitmap\u3092\u4f5c\u308b\n\nWin2DBitmapExtention.cs\nusing System;\nusing System.Linq;\nusing System.Runtime.InteropServices.WindowsRuntime;\nusing System.Threading.Tasks;\nusing Windows.Graphics.Imaging;\nusing Windows.Storage.Streams;\nusing Windows.UI.Xaml;\nusing Windows.UI.Xaml.Media.Imaging;\nusing Microsoft.Graphics.Canvas;\n\nnamespace MyApp.Views.UIEffects\n{\n    public static class Win2DBitmapExtention\n    {\n        public static async Task<CanvasBitmap> CreateBitmapFromUIElement(this ICanvasResourceCreator sender, UIElement ui)\n        {\n            using (var stream = new InMemoryRandomAccessStream())\n            {\n                // get the stream from the background image\n                var target = new RenderTargetBitmap();\n                await target.RenderAsync(ui);\n\n                var pixelBuffer = await target.GetPixelsAsync();\n                var pixels = pixelBuffer.ToArray();\n\n                var encoder = await BitmapEncoder.CreateAsync(BitmapEncoder.PngEncoderId, stream);\n                encoder.SetPixelData(BitmapPixelFormat.Bgra8, BitmapAlphaMode.Premultiplied, (uint)target.PixelWidth, (uint)target.PixelHeight, 96, 96, pixels);\n\n                await encoder.FlushAsync();\n                stream.Seek(0);\n\n                // load the stream into our bitmap\n                return await CanvasBitmap.LoadAsync(sender, stream);\n            }\n        }\n    }\n}\n\n\n\n\n\u53c2\u8003\u5143\uff1ahttp://stackoverflow.com/questions/32582698/how-to-save-contents-of-canvascontrol-as-an-image-file\n\n\u767a\u5149\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8868\u73fe\u3059\u308bUserControl\u3092\u4f5c\u308b\n\nGlowEffectHostControl.xaml\n<ContentControl\n    x:Class=\"MyApp.Views.UIEffects.GlowEffectHostControl\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n    xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n    >\n\n    <ContentControl.Template>\n        <ControlTemplate>\n            <Grid x:Name=\"RootPanel\">\n\n                <!-- CanvasControl add to here from code behind -->\n\n                <ContentPresenter x:Name=\"ShadowTargetContentPresenter\" />\n\n            </Grid>\n        </ControlTemplate>\n    </ContentControl.Template>\n\n</ContentControl>\n\n\n\nGlowEffectHostControl.xaml.cs\nusing System;\nusing Windows.Foundation;\nusing Windows.UI;\nusing Windows.UI.Xaml;\nusing Windows.UI.Xaml.Controls;\nusing Windows.UI.Xaml.Media;\nusing Microsoft.Graphics.Canvas;\nusing Microsoft.Graphics.Canvas.Effects;\nusing Microsoft.Graphics.Canvas.UI;\nusing Microsoft.Graphics.Canvas.UI.Xaml;\n\nnamespace NicoPlayerHohoema.Views.UIEffects\n{\n    public sealed partial class GlowEffectHostControl : ContentControl\n    {\n        public GlowEffectHostControl()\n        {\n            this.InitializeComponent();\n\n            this.Loaded += OnLoaded;\n            this.Unloaded += OnUnloaded;\n        }\n\n        private void OnLoaded(object sender, RoutedEventArgs e)\n        {\n            if (TargetUI != null)\n            {\n                var canvasControl = new CanvasControl();\n\n                canvasControl.CreateResources += BGCanvas_CreateResources;\n                canvasControl.Draw += BGCanvas_Draw;\n\n                Canvas.SetZIndex(canvasControl, -1);\n\n                var rootPanel = GetTemplateChild(\"RootPanel\") as Panel;\n                rootPanel.Children.Add(canvasControl);\n            }\n        }\n\n        private void OnUnloaded(object sender, RoutedEventArgs e)\n        {\n            _shadowEffect?.Dispose();\n            _bitmap?.Dispose();\n        }\n\n        /// <summary>\n        /// \u5f71Bitmap\u306e\u4f5c\u6210\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"args\"></param>\n        void BGCanvas_CreateResources(CanvasControl sender, CanvasCreateResourcesEventArgs args)\n        {\n            args.TrackAsyncAction(sender.CreateBitmapFromUIElement(TargetUI)\n                .ContinueWith(x =>\n                {\n                    _bitmap = x.Result;\n\n                    _shadowEffect = new ShadowEffect\n                    {\n                        Source = _bitmap\n                    };\n                }).AsAsyncAction());\n        }\n\n\n        /// <summary>\n        /// ContentPresenter\u8aad\u307f\u8fbc\u307f\u5f8c\u306b\u52d5\u7684\u306b\u8ffd\u52a0\u3057\u305fCanvasControl\u3078\u306e\u63cf\u753b\n        /// </summary>\n        /// <param name=\"sender\"></param>\n        /// <param name=\"args\"></param>\n        void BGCanvas_Draw(CanvasControl sender, CanvasDrawEventArgs args)\n        {\n            _shadowEffect.BlurAmount = (float)GlowEffectBlurAmount;\n            _shadowEffect.ShadowColor = GlowEffectColor;\n\n            using (var session = args.DrawingSession)\n            {\n                session.DrawImage(_shadowEffect\n                    // Canvas\u4e0a\u306b\u63cf\u753b\u3059\u308b\u7bc4\u56f2\n                    , new Rect(GlowEffectTranslate.X, GlowEffectTranslate.Y, sender.ActualWidth, sender.ActualHeight)\n\n                    // Bitmap\u306e\u53c2\u7167\u7bc4\u56f2\n                    , new Rect(0, 0, _bitmap.SizeInPixels.Width, _bitmap.SizeInPixels.Height)\n\n                    , (float)GlowEffectOpacity\n                    );\n            }\n        }\n\n\n        #region field value\n\n        CanvasBitmap _bitmap;\n\n        ShadowEffect _shadowEffect;\n\n        #endregion\n\n\n        #region GlowEffectTargetName Property\n\n        public static readonly DependencyProperty GlowEffectTargetNameProperty =\n            DependencyProperty.Register(\"GlowEffectTargetName\"\n                , typeof(string)\n                , typeof(GlowEffectHostControl)\n                , new PropertyMetadata(\"\")\n                );\n\n\n        public string GlowEffectTargetName\n        {\n            get { return (string)GetValue(GlowEffectTargetNameProperty); }\n            set { SetValue(GlowEffectTargetNameProperty, value); }\n        }\n\n        #endregion\n\n        #region GlowEffectColor Property\n\n        public static readonly DependencyProperty GlowEffectColorProperty =\n            DependencyProperty.Register(\"GlowEffectColor\"\n                , typeof(Color)\n                , typeof(GlowEffectHostControl)\n                , new PropertyMetadata(Windows.UI.Colors.Black)\n                );\n\n\n        public Color GlowEffectColor\n        {\n            get { return (Color)GetValue(GlowEffectColorProperty); }\n            set { SetValue(GlowEffectColorProperty, value); }\n        }\n\n        #endregion\n\n        #region GlowEffectOpacity Property\n\n        public static readonly DependencyProperty GlowEffectOpacityProperty =\n            DependencyProperty.Register(\"GlowEffectOpacity\"\n                , typeof(double)\n                , typeof(GlowEffectHostControl)\n                , new PropertyMetadata(1.0)\n                );\n\n\n        public double GlowEffectOpacity\n        {\n            get { return (double)GetValue(GlowEffectOpacityProperty); }\n            set { SetValue(GlowEffectOpacityProperty, value); }\n        }\n\n        #endregion\n\n        #region GlowEffectBlurAmount Property\n\n        public static readonly DependencyProperty GlowEffectBlurAmountProperty =\n            DependencyProperty.Register(\"GlowEffectBlurAmount\"\n                , typeof(double)\n                , typeof(GlowEffectHostControl)\n                , new PropertyMetadata(1.0)\n                );\n\n\n        public double GlowEffectBlurAmount\n        {\n            get { return (double)GetValue(GlowEffectBlurAmountProperty); }\n            set { SetValue(GlowEffectBlurAmountProperty, value); }\n        }\n\n        #endregion\n\n        #region GlowEffectTranslate Property\n\n        public static readonly DependencyProperty GlowEffectTranslateProperty =\n            DependencyProperty.Register(\"GlowEffectTranslate\"\n                , typeof(TranslateTransform)\n                , typeof(GlowEffectHostControl)\n                , new PropertyMetadata(new TranslateTransform())\n                );\n\n\n        public TranslateTransform GlowEffectTranslate\n        {\n            get { return (TranslateTransform)GetValue(GlowEffectTranslateProperty); }\n            set { SetValue(GlowEffectTranslateProperty, value); }\n        }\n\n        #endregion\n\n\n\n        private UIElement TargetUI\n        {\n            get\n            {\n                return GetTemplateChild(\"ShadowTargetContentPresenter\") as UIElement;\n            }\n        }\n    }\n}\n\n\n\n\u767a\u5149\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u767a\u5149\u8272\u3092\u9ed2\u306b\u3057\u3066\u30c6\u30ad\u30b9\u30c8\u306e\u80cc\u666f\u306b\u914d\u7f6e\u3059\u308b\n\nTextWithShadow.xaml\n<UserControl\n    x:Class=\"MyApp.Views.TextWithShadow\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n    xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n    xmlns:myeffect=\"using:MyApp.Views.UIEffects\"\n>\n    <Grid>\n        <myeffect:GlowEffectHostControl\n            GlowEffectTargetName=\"TextUI\"\n            GlowEffectBlurAmount=\"2.0\"\n            GlowEffectColor=\"Black\"\n            >\n            <TextBlock \n                x:Name=\"TextUI\"\n                Text=\"\u5f71\u4ed8\u304d\u30c6\u30ad\u30b9\u30c8\"\n                Foreground=\"White\"\n                />\n        </myeffect:GlowEffectHostControl>\n    </Grid>\n</UserControl>\n\n\n\n\u88dc\u8db3\nGlowEffectBlurAmount\u306b\u5927\u304d\u3081\u306e\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u8868\u793a\u304c\u5d29\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u30c6\u30ad\u30b9\u30c8\u306e\u63cf\u753b\u30b5\u30a4\u30ba\u4ee5\u4e0a\u306b\u8868\u793a\u9818\u57df\u3092\u62e1\u5f35\u3059\u308b\u3088\u3046\u8a08\u7b97\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3067\u3059\u3002\uff082.0\u306fOK\u30015.0\u3067\u5d29\u308c\u307e\u3057\u305f\uff09\uff08Translate\u306e\u8a2d\u5b9a\u3067\u3082\u540c\u69d8\u306b\u5d29\u308c\u305d\u3046\uff08\u672a\u691c\u8a3c\uff09\uff09\n\u3053\u308c\u3092\u6539\u5584\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/Microsoft/Win2D-Samples/blob/master/ExampleGallery/Shared/GlowTextCustomControl.cs\n\uff08\u30ea\u30f3\u30af\u5148\u3067\"Expand\"\u3067\u30da\u30fc\u30b8\u5185\u691c\u7d22\uff09\n\n\u86c7\u8db3\n\u5b9f\u5229\u7528\u3092\u8003\u3048\u308b\u3068GlowEffectHostControl\u306bUIElement\u3092\u5165\u308c\u5b50\u3055\u305b\u308b\uff08\u4e0b\u306e\u30b3\u30fc\u30c9\uff09\u3060\u3051\u3067\u30a8\u30d5\u30a7\u30af\u30c8\u304c\u639b\u3051\u3089\u308c\u308b\u3068\u4fbf\u5229\u306a\u3093\u3067\u3059\u304c\u3001TemplateControl\u306eControlPresenter\u306e\u8aad\u307f\u8fbc\u307f\u6a5f\u5e8f\u3068CanvasControl\u306eCreateResource/Draw\u306e\u6a5f\u5e8f\u3078\u306e\u7406\u89e3\u304c\u8db3\u308a\u305a\u65ad\u5ff5\u3057\u307e\u3057\u305f\u3002\u3050\u306c\u306c\u2026\u3002 \n\n\u8ffd\u8a18\uff11\nContentControl+ContentPresenter\u3067\u306e\u5b9f\u88c5\u304c\u3067\u304d\u305f\u306e\u3067\u3044\u308d\u3044\u308d\u4fee\u6b63\u3002\n\u8a18\u4e8b\u306f\u4e00\u6669\u5bdd\u304b\u305b\u3088\u3046\uff08\u53cd\u7701\uff09\n\n\u8ffd\u8a18\uff12\n\u307e\u3060\u958b\u767a\u6bb5\u968e\u306e\u3088\u3046\u3067\u3059\u304c\u3001Microsoft.UI.Composition.Toolkit\u3092\u4f7f\u3046\u3068\u3001\u3053\u306e\u8a18\u4e8b\u306e\u30a8\u30d5\u30a7\u30af\u30c8\u3088\u308a\u3082\u67d4\u8edf\u306a\u3053\u3068\u304c\u3084\u308c\u305d\u3046\u3067\u3059\u3002\nhttps://github.com/Microsoft/WindowsUIDevLabs/tree/master/Demos/Reference%20Demos/Microsoft.UI.Composition.Toolkit\n\u53c2\u8003\u8a18\u4e8b\uff08\u82f1\u8a9e\uff09\nhttps://mareinsula.wordpress.com/2015/12/09/xaml-attached-properties-composition-effects/\n\u305f\u3060\u3001ShadowEffect\u306a\u3069\u306e\u91cd\u3044\u753b\u50cf\u51e6\u7406\u306f[NoComposition]\u3068\u30de\u30fc\u30af\u3055\u308c\u3066\u3044\u3066\u30b3\u30f3\u30dd\u30b8\u30b7\u30e7\u30f3\u3068\u3057\u3066\u6271\u3048\u306a\u3044\u3088\u3046\u3067\u3059\u3002\nhttp://microsoft.github.io/Win2D/html/T_Microsoft_Graphics_Canvas_Effects_ShadowEffect.htm\n\u753b\u50cf\u306b\u5bfe\u3059\u308b\u30ea\u30c3\u30c1\u306a\u30a8\u30d5\u30a7\u30af\u30c8\u3068\u3057\u3066\u4f7f\u3048\u305d\u3046\u3067\u3059\u306d\u3002\u5c0f\u56de\u308a\u306e\u3042\u308bXAML\u306eUI\u3068\u306e\u89aa\u548c\u6027\u306e\u3042\u308b\u30a8\u30d5\u30a7\u30af\u30c8\u3068\u306f\u3044\u304b\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u3053\u306e\u8a18\u4e8b\u3068\u306f\u8da3\u304c\u5c11\u3057\u9055\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001\u3088\u304b\u3063\u305f\u3089\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nWPF\u3067\u306f\u6dfb\u4ed8\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066Effect\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u7c21\u5358\u306b\u5f71\u4ed8\u304d\u306e\u8868\u793a\u304c\u3067\u304d\u307e\u3057\u305f\u304c\u3001UWP\u3060\u3068\u305d\u3046\u306f\u3044\u304b\u306a\u3044\u3088\u3046\u3067\u3059\u3002\uff08\u8981\u51fa\u5178\uff09\n\n\u4ed5\u65b9\u304c\u306a\u3044\u306e\u3067UIElement\u3092\u5730\u9053\u306b\u753b\u50cf\u51e6\u7406\u3092\u3057\u3066\u3001\u5f71\u3092\u4f5c\u308a\u51fa\u3059\u65b9\u6cd5\u3067\u3084\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\nUWP\u3067TextBlock\u7b49\u306eUIElement\u3092\u753b\u50cf\u51e6\u7406\u3059\u308b\u306e\u306b\u3001\u3053\u3053\u3067\u306f[Win2D](https://github.com/Microsoft/Win2D)\u3092\u4f7f\u3063\u3066\u3044\u304d\u307e\u3059\u3002\nMicrosoft\u306e\u5185\u90e8\u30c1\u30fc\u30e0\u304c\u958b\u767a\u3057\u3066\u3044\u308bXAML\u3068\u89aa\u548c\u6027\u306e\u3042\u308bDirext2D\u30d9\u30fc\u30b9\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u306e\u3067\u5b89\u5fc3\u3057\u3066\u5229\u7528\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\nVisualStudio\u3067\u3042\u308c\u3070nuget\u304b\u3089Win2D\u3067\u691c\u7d22\u3059\u308c\u3070\u3059\u3050\u306b\u898b\u3064\u304b\u308b\u3068\u601d\u3044\u307e\u3059\uff08[Win2D.UWP - NuGet](https://www.nuget.org/packages/Win2D.uwp)\uff09\n\n\n\nWin2D\u306e\u6e96\u5099\u304c\u3067\u304d\u305f\u3089\u3001\u6b21\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6982\u8981\u3092\u8003\u3048\u307e\u3059\u3002\n\u5f71\u4ed8\u304d\u30c6\u30ad\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u307e\u3067\u306e\u6982\u5ff5\u7684\u306a\u6d41\u308c\u306f\n\n1. TextBlock(UIElement) \u306e\u8868\u793a\u5185\u5bb9\u3092Win2D\u3067\u6271\u3048\u308bCanvasBitmap\u3068\u3057\u3066\u66f8\u304d\u51fa\u3059\n2. CanvasBitmap\u3092\u30bd\u30fc\u30b9\u306b\u3057\u3066\u9ed2\u3067\u307c\u304b\u3057\u305f\u753b\u50cf\u3092\u4f5c\u6210\u3059\u308b\n3. \u9ed2\u3067\u307c\u304b\u3057\u305f\u753b\u50cf\u3092TextBlock\u306e\u80cc\u666f\u3068\u3057\u3066\u914d\u7f6e\u3059\u308b\n\n\u3067\u3059\u3002\n\n## UIElement\u304b\u3089CanvasBitmap\u3092\u4f5c\u308b\n\n```csharp:Win2DBitmapExtention.cs\nusing System;\nusing System.Linq;\nusing System.Runtime.InteropServices.WindowsRuntime;\nusing System.Threading.Tasks;\nusing Windows.Graphics.Imaging;\nusing Windows.Storage.Streams;\nusing Windows.UI.Xaml;\nusing Windows.UI.Xaml.Media.Imaging;\nusing Microsoft.Graphics.Canvas;\n\nnamespace MyApp.Views.UIEffects\n{\n\tpublic static class Win2DBitmapExtention\n\t{\n\t\tpublic static async Task<CanvasBitmap> CreateBitmapFromUIElement(this ICanvasResourceCreator sender, UIElement ui)\n\t\t{\n\t\t\tusing (var stream = new InMemoryRandomAccessStream())\n\t\t\t{\n\t\t\t\t// get the stream from the background image\n\t\t\t\tvar target = new RenderTargetBitmap();\n\t\t\t\tawait target.RenderAsync(ui);\n\n\t\t\t\tvar pixelBuffer = await target.GetPixelsAsync();\n\t\t\t\tvar pixels = pixelBuffer.ToArray();\n\n\t\t\t\tvar encoder = await BitmapEncoder.CreateAsync(BitmapEncoder.PngEncoderId, stream);\n\t\t\t\tencoder.SetPixelData(BitmapPixelFormat.Bgra8, BitmapAlphaMode.Premultiplied, (uint)target.PixelWidth, (uint)target.PixelHeight, 96, 96, pixels);\n\n\t\t\t\tawait encoder.FlushAsync();\n\t\t\t\tstream.Seek(0);\n\n\t\t\t\t// load the stream into our bitmap\n\t\t\t\treturn await CanvasBitmap.LoadAsync(sender, stream);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n```\n\n\u53c2\u8003\u5143\uff1ahttp://stackoverflow.com/questions/32582698/how-to-save-contents-of-canvascontrol-as-an-image-file\n\n## \u767a\u5149\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u8868\u73fe\u3059\u308bUserControl\u3092\u4f5c\u308b\n\n\n```xml:GlowEffectHostControl.xaml\n<ContentControl\n    x:Class=\"MyApp.Views.UIEffects.GlowEffectHostControl\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n    xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n    >\n\n    <ContentControl.Template>\n        <ControlTemplate>\n            <Grid x:Name=\"RootPanel\">\n\n                <!-- CanvasControl add to here from code behind -->\n\n                <ContentPresenter x:Name=\"ShadowTargetContentPresenter\" />\n                \n            </Grid>\n        </ControlTemplate>\n    </ContentControl.Template>\n    \n</ContentControl>\n```\n\n```csharp:GlowEffectHostControl.xaml.cs\nusing System;\nusing Windows.Foundation;\nusing Windows.UI;\nusing Windows.UI.Xaml;\nusing Windows.UI.Xaml.Controls;\nusing Windows.UI.Xaml.Media;\nusing Microsoft.Graphics.Canvas;\nusing Microsoft.Graphics.Canvas.Effects;\nusing Microsoft.Graphics.Canvas.UI;\nusing Microsoft.Graphics.Canvas.UI.Xaml;\n\nnamespace NicoPlayerHohoema.Views.UIEffects\n{\n\tpublic sealed partial class GlowEffectHostControl : ContentControl\n\t{\n\t\tpublic GlowEffectHostControl()\n\t\t{\n\t\t\tthis.InitializeComponent();\n\n\t\t\tthis.Loaded += OnLoaded;\n\t\t\tthis.Unloaded += OnUnloaded;\n\t\t}\n\n\t\tprivate void OnLoaded(object sender, RoutedEventArgs e)\n\t\t{\n\t\t\tif (TargetUI != null)\n\t\t\t{\n\t\t\t\tvar canvasControl = new CanvasControl();\n\n\t\t\t\tcanvasControl.CreateResources += BGCanvas_CreateResources;\n\t\t\t\tcanvasControl.Draw += BGCanvas_Draw;\n\n\t\t\t\tCanvas.SetZIndex(canvasControl, -1);\n\n\t\t\t\tvar rootPanel = GetTemplateChild(\"RootPanel\") as Panel;\n\t\t\t\trootPanel.Children.Add(canvasControl);\n\t\t\t}\n\t\t}\n\n\t\tprivate void OnUnloaded(object sender, RoutedEventArgs e)\n\t\t{\n\t\t\t_shadowEffect?.Dispose();\n\t\t\t_bitmap?.Dispose();\n\t\t}\n\n\t\t/// <summary>\n\t\t/// \u5f71Bitmap\u306e\u4f5c\u6210\n\t\t/// </summary>\n\t\t/// <param name=\"sender\"></param>\n\t\t/// <param name=\"args\"></param>\n\t\tvoid BGCanvas_CreateResources(CanvasControl sender, CanvasCreateResourcesEventArgs args)\n\t\t{\n\t\t\targs.TrackAsyncAction(sender.CreateBitmapFromUIElement(TargetUI)\n\t\t\t\t.ContinueWith(x =>\n\t\t\t\t{\n\t\t\t\t\t_bitmap = x.Result;\n\n\t\t\t\t\t_shadowEffect = new ShadowEffect\n\t\t\t\t\t{\n\t\t\t\t\t\tSource = _bitmap\n\t\t\t\t\t};\n\t\t\t\t}).AsAsyncAction());\n\t\t}\n\n\n\t\t/// <summary>\n\t\t/// ContentPresenter\u8aad\u307f\u8fbc\u307f\u5f8c\u306b\u52d5\u7684\u306b\u8ffd\u52a0\u3057\u305fCanvasControl\u3078\u306e\u63cf\u753b\n\t\t/// </summary>\n\t\t/// <param name=\"sender\"></param>\n\t\t/// <param name=\"args\"></param>\n\t\tvoid BGCanvas_Draw(CanvasControl sender, CanvasDrawEventArgs args)\n\t\t{\n\t\t\t_shadowEffect.BlurAmount = (float)GlowEffectBlurAmount;\n\t\t\t_shadowEffect.ShadowColor = GlowEffectColor;\n\n\t\t\tusing (var session = args.DrawingSession)\n\t\t\t{\n\t\t\t\tsession.DrawImage(_shadowEffect\n\t\t\t\t\t// Canvas\u4e0a\u306b\u63cf\u753b\u3059\u308b\u7bc4\u56f2\n\t\t\t\t\t, new Rect(GlowEffectTranslate.X, GlowEffectTranslate.Y, sender.ActualWidth, sender.ActualHeight)\n\n\t\t\t\t\t// Bitmap\u306e\u53c2\u7167\u7bc4\u56f2\n\t\t\t\t\t, new Rect(0, 0, _bitmap.SizeInPixels.Width, _bitmap.SizeInPixels.Height)\n\n\t\t\t\t\t, (float)GlowEffectOpacity\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\n\t\t#region field value\n\n\t\tCanvasBitmap _bitmap;\n\n\t\tShadowEffect _shadowEffect;\n\n\t\t#endregion\n\n\n\t\t#region GlowEffectTargetName Property\n\n\t\tpublic static readonly DependencyProperty GlowEffectTargetNameProperty =\n\t\t\tDependencyProperty.Register(\"GlowEffectTargetName\"\n\t\t\t\t, typeof(string)\n\t\t\t\t, typeof(GlowEffectHostControl)\n\t\t\t\t, new PropertyMetadata(\"\")\n\t\t\t\t);\n\n\n\t\tpublic string GlowEffectTargetName\n\t\t{\n\t\t\tget { return (string)GetValue(GlowEffectTargetNameProperty); }\n\t\t\tset { SetValue(GlowEffectTargetNameProperty, value); }\n\t\t}\n\n\t\t#endregion\n\n\t\t#region GlowEffectColor Property\n\n\t\tpublic static readonly DependencyProperty GlowEffectColorProperty =\n\t\t\tDependencyProperty.Register(\"GlowEffectColor\"\n\t\t\t\t, typeof(Color)\n\t\t\t\t, typeof(GlowEffectHostControl)\n\t\t\t\t, new PropertyMetadata(Windows.UI.Colors.Black)\n\t\t\t\t);\n\n\n\t\tpublic Color GlowEffectColor\n\t\t{\n\t\t\tget { return (Color)GetValue(GlowEffectColorProperty); }\n\t\t\tset { SetValue(GlowEffectColorProperty, value); }\n\t\t}\n\n\t\t#endregion\n\n\t\t#region GlowEffectOpacity Property\n\n\t\tpublic static readonly DependencyProperty GlowEffectOpacityProperty =\n\t\t\tDependencyProperty.Register(\"GlowEffectOpacity\"\n\t\t\t\t, typeof(double)\n\t\t\t\t, typeof(GlowEffectHostControl)\n\t\t\t\t, new PropertyMetadata(1.0)\n\t\t\t\t);\n\n\n\t\tpublic double GlowEffectOpacity\n\t\t{\n\t\t\tget { return (double)GetValue(GlowEffectOpacityProperty); }\n\t\t\tset { SetValue(GlowEffectOpacityProperty, value); }\n\t\t}\n\n\t\t#endregion\n\n\t\t#region GlowEffectBlurAmount Property\n\n\t\tpublic static readonly DependencyProperty GlowEffectBlurAmountProperty =\n\t\t\tDependencyProperty.Register(\"GlowEffectBlurAmount\"\n\t\t\t\t, typeof(double)\n\t\t\t\t, typeof(GlowEffectHostControl)\n\t\t\t\t, new PropertyMetadata(1.0)\n\t\t\t\t);\n\n\n\t\tpublic double GlowEffectBlurAmount\n\t\t{\n\t\t\tget { return (double)GetValue(GlowEffectBlurAmountProperty); }\n\t\t\tset { SetValue(GlowEffectBlurAmountProperty, value); }\n\t\t}\n\n\t\t#endregion\n\n\t\t#region GlowEffectTranslate Property\n\n\t\tpublic static readonly DependencyProperty GlowEffectTranslateProperty =\n\t\t\tDependencyProperty.Register(\"GlowEffectTranslate\"\n\t\t\t\t, typeof(TranslateTransform)\n\t\t\t\t, typeof(GlowEffectHostControl)\n\t\t\t\t, new PropertyMetadata(new TranslateTransform())\n\t\t\t\t);\n\n\n\t\tpublic TranslateTransform GlowEffectTranslate\n\t\t{\n\t\t\tget { return (TranslateTransform)GetValue(GlowEffectTranslateProperty); }\n\t\t\tset { SetValue(GlowEffectTranslateProperty, value); }\n\t\t}\n\n\t\t#endregion\n\n\n\n\t\tprivate UIElement TargetUI\n\t\t{\n\t\t\tget\n\t\t\t{\n\t\t\t\treturn GetTemplateChild(\"ShadowTargetContentPresenter\") as UIElement;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\n\n## \u767a\u5149\u30a8\u30d5\u30a7\u30af\u30c8\u306e\u767a\u5149\u8272\u3092\u9ed2\u306b\u3057\u3066\u30c6\u30ad\u30b9\u30c8\u306e\u80cc\u666f\u306b\u914d\u7f6e\u3059\u308b\n```xml:TextWithShadow.xaml\n<UserControl\n    x:Class=\"MyApp.Views.TextWithShadow\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n    xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n    xmlns:myeffect=\"using:MyApp.Views.UIEffects\"\n>\n    <Grid>\n        <myeffect:GlowEffectHostControl\n            GlowEffectTargetName=\"TextUI\"\n            GlowEffectBlurAmount=\"2.0\"\n            GlowEffectColor=\"Black\"\n            >\n            <TextBlock \n                x:Name=\"TextUI\"\n                Text=\"\u5f71\u4ed8\u304d\u30c6\u30ad\u30b9\u30c8\"\n                Foreground=\"White\"\n                />\n        </myeffect:GlowEffectHostControl>\n    </Grid>\n</UserControl>\n```\n\n\n\n## \u88dc\u8db3\n\nGlowEffectBlurAmount\u306b\u5927\u304d\u3081\u306e\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u8868\u793a\u304c\u5d29\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u30c6\u30ad\u30b9\u30c8\u306e\u63cf\u753b\u30b5\u30a4\u30ba\u4ee5\u4e0a\u306b\u8868\u793a\u9818\u57df\u3092\u62e1\u5f35\u3059\u308b\u3088\u3046\u8a08\u7b97\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3067\u3059\u3002\uff082.0\u306fOK\u30015.0\u3067\u5d29\u308c\u307e\u3057\u305f\uff09\uff08Translate\u306e\u8a2d\u5b9a\u3067\u3082\u540c\u69d8\u306b\u5d29\u308c\u305d\u3046\uff08\u672a\u691c\u8a3c\uff09\uff09\n\u3053\u308c\u3092\u6539\u5584\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\nhttps://github.com/Microsoft/Win2D-Samples/blob/master/ExampleGallery/Shared/GlowTextCustomControl.cs\n\uff08\u30ea\u30f3\u30af\u5148\u3067\"Expand\"\u3067\u30da\u30fc\u30b8\u5185\u691c\u7d22\uff09\n\n\n#### \u86c7\u8db3\n~~\u5b9f\u5229\u7528\u3092\u8003\u3048\u308b\u3068GlowEffectHostControl\u306bUIElement\u3092\u5165\u308c\u5b50\u3055\u305b\u308b\uff08\u4e0b\u306e\u30b3\u30fc\u30c9\uff09\u3060\u3051\u3067\u30a8\u30d5\u30a7\u30af\u30c8\u304c\u639b\u3051\u3089\u308c\u308b\u3068\u4fbf\u5229\u306a\u3093\u3067\u3059\u304c\u3001TemplateControl\u306eControlPresenter\u306e\u8aad\u307f\u8fbc\u307f\u6a5f\u5e8f\u3068CanvasControl\u306eCreateResource/Draw\u306e\u6a5f\u5e8f\u3078\u306e\u7406\u89e3\u304c\u8db3\u308a\u305a\u65ad\u5ff5\u3057\u307e\u3057\u305f\u3002\u3050\u306c\u306c\u2026\u3002~~ \n\n\n## \u8ffd\u8a18\uff11\nContentControl+ContentPresenter\u3067\u306e\u5b9f\u88c5\u304c\u3067\u304d\u305f\u306e\u3067\u3044\u308d\u3044\u308d\u4fee\u6b63\u3002\n\u8a18\u4e8b\u306f\u4e00\u6669\u5bdd\u304b\u305b\u3088\u3046\uff08\u53cd\u7701\uff09\n\n\n## \u8ffd\u8a18\uff12\n\u307e\u3060\u958b\u767a\u6bb5\u968e\u306e\u3088\u3046\u3067\u3059\u304c\u3001Microsoft.UI.Composition.Toolkit\u3092\u4f7f\u3046\u3068\u3001\u3053\u306e\u8a18\u4e8b\u306e\u30a8\u30d5\u30a7\u30af\u30c8\u3088\u308a\u3082\u67d4\u8edf\u306a\u3053\u3068\u304c\u3084\u308c\u305d\u3046\u3067\u3059\u3002\nhttps://github.com/Microsoft/WindowsUIDevLabs/tree/master/Demos/Reference%20Demos/Microsoft.UI.Composition.Toolkit\n\n\u53c2\u8003\u8a18\u4e8b\uff08\u82f1\u8a9e\uff09\nhttps://mareinsula.wordpress.com/2015/12/09/xaml-attached-properties-composition-effects/\n\n\u305f\u3060\u3001ShadowEffect\u306a\u3069\u306e\u91cd\u3044\u753b\u50cf\u51e6\u7406\u306f[NoComposition]\u3068\u30de\u30fc\u30af\u3055\u308c\u3066\u3044\u3066\u30b3\u30f3\u30dd\u30b8\u30b7\u30e7\u30f3\u3068\u3057\u3066\u6271\u3048\u306a\u3044\u3088\u3046\u3067\u3059\u3002\nhttp://microsoft.github.io/Win2D/html/T_Microsoft_Graphics_Canvas_Effects_ShadowEffect.htm\n\n\u753b\u50cf\u306b\u5bfe\u3059\u308b\u30ea\u30c3\u30c1\u306a\u30a8\u30d5\u30a7\u30af\u30c8\u3068\u3057\u3066\u4f7f\u3048\u305d\u3046\u3067\u3059\u306d\u3002\u5c0f\u56de\u308a\u306e\u3042\u308bXAML\u306eUI\u3068\u306e\u89aa\u548c\u6027\u306e\u3042\u308b\u30a8\u30d5\u30a7\u30af\u30c8\u3068\u306f\u3044\u304b\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u3053\u306e\u8a18\u4e8b\u3068\u306f\u8da3\u304c\u5c11\u3057\u9055\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001\u3088\u304b\u3063\u305f\u3089\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n", "tags": ["C#", "UWP", "Win2D"]}