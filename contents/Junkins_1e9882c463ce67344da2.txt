{"tags": ["cakephp3"], "context": "\u524d. CakePHP3\u52c9\u5f37\u4f1a in Fusic \u30cf\u30f3\u30ba\u30aa\u30f3\u8cc7\u6599 part.1\nhttp://qiita.com/Junkins/items/f1f830b33e52dc1cbc38\n\n3. Auth\n\n\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306e\u4f5c\u6210\n\n\u53c2\u8003URL\nhttp://book.cakephp.org/3.0/en/tutorials-and-examples/blog-auth-example/auth.html\n\nsrc/Controller/AppController.php \u306e\u4fee\u6b63\n\ncommand\n    vim src/Controller/AppController.php\n\nvim\n    public function initialize()\n    {\n        parent::initialize();\n\n        $this->loadComponent('RequestHandler');\n        $this->loadComponent('Flash');\n        $this->loadComponent('Auth', [\n            'authenticate' => [\n                'Form' => [\n                    'userModel' => 'Accounts',\n                    'fields' => [\n                        'username' => 'username',\n                        'password' => 'password'\n                    ]\n                ]\n            ],\n            'loginRedirect' => [\n                'controller' => 'Accounts',\n                'action' => 'index'\n            ],\n            'loginAction' => [\n                'controller' => 'Accounts',\n                'action' => 'login',\n            ],\n        ]);\n    }\n\n\nsrc/Controller/AccountsController.php \u306e\u4fee\u6b63\n\ncommand\n    vim src/Controller/AccountsController.php\n\nvim\n    public function login()\n    {\n        if ($this->request->is('post')) {\n            $user = $this->Auth->identify();\n            if ($user) {\n                $this->Auth->setUser($user);\n                return $this->redirect($this->Auth->redirectUrl());\n            }\n            $this->Flash->error(__('Invalid username or password, try again'));\n        }\n    }\n\n    public function logout()\n    {\n        return $this->redirect($this->Auth->logout());\n    }\n\n\nsrc/Template/Accounts/login.ctp \u306e\u4f5c\u6210\n\ncommand\n    vim src/Template/Accounts/login.ctp\n\nvim\n    <!-- File: src/Template/Users/login.ctp -->\n    <div class=\"users form\">\n        <?= $this->Flash->render('auth') ?>\n        <?= $this->Form->create() ?>\n            <fieldset>\n                <legend><?= __('Please enter your username and password') ?></legend>\n                <?= $this->Form->input('username') ?>\n                <?= $this->Form->input('password') ?>\n            </fieldset>\n        <?= $this->Form->button(__('Login')); ?>\n        <?= $this->Form->end() ?>\n    </div>\n\n\nsrc/Model/Entity/Account.php \u306e\u4fee\u6b63\n\ncommand\n    vim src/Model/Entity/Account.php \n\nvim\n    use Cake\\Auth\\DefaultPasswordHasher;\n\nvim\n    protected function _setPassword($password)\n    {\n        return (new DefaultPasswordHasher)->hash($password);\n    }\n\n\n4. Query Builder\n\nQuery Builder\u3067\u904a\u307c\u3046\n\n\u53c2\u8003URL\nhttp://book.cakephp.org/3.0/ja/orm/query-builder.html\n\nQuery Builder \u30c7\u30d0\u30c3\u30af\n\ncomannd\n    vim src/Controller/AccountsController.php\n\nvim\n    public function debug()\n    {\n        $this->autoRender = false;\n        $query = $this->Accounts->find();\n        debug($query);\n    }\n\n\n\u30b5\u30f3\u30d7\u30eb\n\nvim\n    $this->autoRender = false;\n    $query = $this->Accounts->find();\n    $query->where([$this->Accounts->alias() . '.name' => 'AccountA']);\n    debug($query);\n    // SQL\u306e\u5b9f\u884c\n    debug($query->firstOrFail());\n\nvim\n    public function sql1()\n    {\n        $this->autoRender = false;\n        $query = $this->Accounts->find();\n        $query->where([$this->Accounts->alias() . '.name' => 'AccountA']);\n        debug($query);\n        // SQL\u306e\u5b9f\u884c\n        debug($query->firstOrFail());\n    }\n\nvim\n    public function sql2()\n    {\n        $this->autoRender = false;\n        $query = $this->Accounts->find();\n        $query->matching('Projects', function ($q) {\n            return $q->where(['Projects.name' => 'ProjectB']);\n        });\n\n        debug($query);\n        // SQL\u306e\u5b9f\u884c\n        debug($query->all());\n    }\n\nvim\n    public function sql3()\n    {\n        $this->autoRender = false;\n        $query = $this->Accounts->find();\n        $query->matching(\n            'Projects.Tasks', function ($q) {\n                return $q->where(['Tasks.name' => 'TaskE']);\n            }\n        );\n\n        debug($query);\n        // SQL\u306e\u5b9f\u884c\n        debug($query->all());\n    }\n\n\u524d. CakePHP3\u52c9\u5f37\u4f1a in Fusic \u30cf\u30f3\u30ba\u30aa\u30f3\u8cc7\u6599 part.1\nhttp://qiita.com/Junkins/items/f1f830b33e52dc1cbc38\n\u524d. CakePHP3\u52c9\u5f37\u4f1a in Fusic \u30cf\u30f3\u30ba\u30aa\u30f3\u8cc7\u6599 part.1\nhttp://qiita.com/Junkins/items/f1f830b33e52dc1cbc38\n\n## 3. Auth\n### \u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306e\u4f5c\u6210\n\n#### \u53c2\u8003URL\nhttp://book.cakephp.org/3.0/en/tutorials-and-examples/blog-auth-example/auth.html\n\n- src/Controller/AppController.php \u306e\u4fee\u6b63\n\n```bash\ncommand\n    vim src/Controller/AppController.php\n```\n\n```php\nvim\n    public function initialize()\n    {\n        parent::initialize();\n\n        $this->loadComponent('RequestHandler');\n        $this->loadComponent('Flash');\n        $this->loadComponent('Auth', [\n            'authenticate' => [\n                'Form' => [\n                    'userModel' => 'Accounts',\n                    'fields' => [\n                        'username' => 'username',\n                        'password' => 'password'\n                    ]\n                ]\n            ],\n            'loginRedirect' => [\n                'controller' => 'Accounts',\n                'action' => 'index'\n            ],\n            'loginAction' => [\n                'controller' => 'Accounts',\n                'action' => 'login',\n            ],\n        ]);\n    }\n```\n\n- src/Controller/AccountsController.php \u306e\u4fee\u6b63\n\n```bash\ncommand\n    vim src/Controller/AccountsController.php\n```\n```php\nvim\n    public function login()\n    {\n        if ($this->request->is('post')) {\n            $user = $this->Auth->identify();\n            if ($user) {\n                $this->Auth->setUser($user);\n                return $this->redirect($this->Auth->redirectUrl());\n            }\n            $this->Flash->error(__('Invalid username or password, try again'));\n        }\n    }\n\n    public function logout()\n    {\n        return $this->redirect($this->Auth->logout());\n    }\n```\n\n- src/Template/Accounts/login.ctp \u306e\u4f5c\u6210\n\n```bash\ncommand\n    vim src/Template/Accounts/login.ctp\n```\n```html\nvim\n    <!-- File: src/Template/Users/login.ctp -->\n    <div class=\"users form\">\n        <?= $this->Flash->render('auth') ?>\n        <?= $this->Form->create() ?>\n            <fieldset>\n                <legend><?= __('Please enter your username and password') ?></legend>\n                <?= $this->Form->input('username') ?>\n                <?= $this->Form->input('password') ?>\n            </fieldset>\n        <?= $this->Form->button(__('Login')); ?>\n        <?= $this->Form->end() ?>\n    </div>\n```\n\n- src/Model/Entity/Account.php \u306e\u4fee\u6b63\n\n```bash\ncommand\n    vim src/Model/Entity/Account.php \n```\n\n```bash\nvim\n    use Cake\\Auth\\DefaultPasswordHasher;\n```\n```php\nvim\n    protected function _setPassword($password)\n    {\n        return (new DefaultPasswordHasher)->hash($password);\n    }\n```\n\n## 4.\u0010 Query Builder\n### Query Builder\u3067\u904a\u307c\u3046\n\n#### \u53c2\u8003URL\nhttp://book.cakephp.org/3.0/ja/orm/query-builder.html\n\n- Query Builder \u30c7\u30d0\u30c3\u30af\n\n```bash\ncomannd\n    vim src/Controller/AccountsController.php\n```\n\n```php\nvim\n    public function debug()\n    {\n        $this->autoRender = false;\n        $query = $this->Accounts->find();\n        debug($query);\n    }\n```\n- \u30b5\u30f3\u30d7\u30eb\n\n```php\nvim\n    $this->autoRender = false;\n    $query = $this->Accounts->find();\n    $query->where([$this->Accounts->alias() . '.name' => 'AccountA']);\n    debug($query);\n    // SQL\u306e\u5b9f\u884c\n    debug($query->firstOrFail());\n```\n\n```php\nvim\n    public function sql1()\n    {\n        $this->autoRender = false;\n        $query = $this->Accounts->find();\n        $query->where([$this->Accounts->alias() . '.name' => 'AccountA']);\n        debug($query);\n        // SQL\u306e\u5b9f\u884c\n        debug($query->firstOrFail());\n    }\n```\n\n```php\nvim\n    public function sql2()\n    {\n        $this->autoRender = false;\n        $query = $this->Accounts->find();\n        $query->matching('Projects', function ($q) {\n            return $q->where(['Projects.name' => 'ProjectB']);\n        });\n\n        debug($query);\n        // SQL\u306e\u5b9f\u884c\n        debug($query->all());\n    }\n```\n```php\nvim\n    public function sql3()\n    {\n        $this->autoRender = false;\n        $query = $this->Accounts->find();\n        $query->matching(\n            'Projects.Tasks', function ($q) {\n                return $q->where(['Tasks.name' => 'TaskE']);\n            }\n        );\n\n        debug($query);\n        // SQL\u306e\u5b9f\u884c\n        debug($query->all());\n    }\n```\n\n\u524d. CakePHP3\u52c9\u5f37\u4f1a in Fusic \u30cf\u30f3\u30ba\u30aa\u30f3\u8cc7\u6599 part.1\nhttp://qiita.com/Junkins/items/f1f830b33e52dc1cbc38\n\n\n\n\n"}