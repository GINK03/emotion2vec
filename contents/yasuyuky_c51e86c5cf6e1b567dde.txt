{"context": " More than 1 year has passed since last update.\u307e\u305f\u306f\u6570\u5024trait\u307f\u305f\u3044\u306a\u7269\u304c\u6b32\u3057\u3044\u5834\u5408\u306b\u3064\u3044\u3066\u3002\n\u4ee5\u524dstruct\u3068trait\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u4ee5\u4e0b\u306ePoint\u3068\u3044\u3046\u69cb\u9020\u4f53\u3092\u4f5c\u3063\u3066\u7d39\u4ecb\u3057\u305f\n\u304c\u3001\u305d\u306e\u7d9a\u304d\u3002\npub struct Point<T> {\n    pub x: T,\n    pub y: T\n}\n\n\u57fa\u672c\u7684\u306b\u306f\u524d\u56de\u5b9a\u7fa9\u3057\u305f\u3088\u3046\u306b\u62bd\u8c61\u7684\u306atrait\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\n\u6c4e\u7528\u7684\u306a\u69cb\u9020\u4f53\u3092\u69cb\u7bc9\u3059\u308b\u306e\u304c\u6b63\u9053\u3060\u3068\u601d\u3046\u304c\u3001\n\u305d\u3046\u306f\u8a00\u3063\u3066\u3082\u7279\u5b9a\u306e\u578b\u3078\u306e\u30ad\u30e3\u30b9\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u3068\u304d\u306b\u56f0\u308b\u4e8b\u304c\u3042\u308b\u3002\n\n\u73fe\u72b6\u306etrait\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u65b9\u6cd5\u306e\u9650\u754c\n\u5177\u4f53\u7684\u306b\u306f\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u3092\u8fd4\u3059norm\u30e1\u30bd\u30c3\u30c9\u3092\u60f3\u5b9a\u3059\u308b\u3002\n\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u306b\u95a2\u3057\u3066\u306f\u5e73\u65b9\u6839\u3092\u3068\u308b\u4e8b\u306b\u306a\u308b\u306e\u3067\u306e\u3067\nfloat\u7cfb\u306e\u4f55\u304b\u306e\u578b\u3078\u306e\u30ad\u30e3\u30b9\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\nimpl<T> Point<T> where T:Mul+Copy,<T as Mul>::Output:Add {\n    pub fn norm(self) -> f64 {\n        ((self.x*self.x+self.y*self.y) as f64).sqrt()\n    }\n}\n\n\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u524d\u56de\u306e\u77e5\u8b58\u3067\u7d20\u6734\u306b\u5b9f\u88c5\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\nerror: non-scalar cast\u3068\u3044\u3063\u3066\u6012\u3089\u308c\u3066\u3057\u307e\u3046\u4e8b\u306b\u306a\u308b\u3002\nsrc/foo.rs:33:10: 33:46 error: non-scalar cast: `<<T as core::ops::Mul>::Output as core::ops::Add>::Output` as `f64`\nsrc/foo.rs:33         ((self.x*self.x+self.y*self.y) as f64).sqrt()\n\n\u3053\u308c\u306f<<T as core::ops::Mul>::Output as core::ops::Add>::Output\u306f\nscalar\u306a\u5024\u3060\u3068\u306f\u9650\u3089\u306a\u3044\u306e\u3067\u5f53\u7136\u3068\u3044\u3048\u3070\u5f53\u7136\u3060\u304c\u3001\u6b8b\u5ff5\u3002\nscalar\u306a\u30ad\u30e3\u30b9\u30c8\u304c\u4fdd\u8a3c\u53ef\u80fd\u3092\u8868\u73fe\u3059\u308b\u6570\u5024trait\u307f\u305f\u3044\u306a\u3082\u306e\u304c\u3042\u308c\u3070\u3044\u3044\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u304c\n\u305d\u3093\u306a\u3082\u306e\u306f\u306a\u304b\u3063\u305f\u3002\n\nmacro_rules!\n\u305d\u3053\u3067macro_rules!\u306e\u51fa\u756a\u3068\u306a\u308b\u3002\n\u8981\u306ff64\u306b\u30ad\u30e3\u30b9\u30c8\u3067\u304d\u305d\u3046\u306a\u6570\u5024\u578b\u306f\u30de\u30af\u30ed\u3092\u3064\u304b\u3063\u3066\u5168\u90e8\u5b9a\u7fa9\u3057\u3061\u3083\u304a\u3046\u3068\u3044\u3046\u767a\u60f3\nmacro_rules! norm_impl {\n    ($($t:ty)*) => ($(\n        impl Point<$t>  {\n            pub fn norm(self) -> f64 {\n                ((self.x*self.x+self.y*self.y) as f64).sqrt()\n            }\n        }\n    )*)\n}\nnorm_impl! { usize u8 u16 u32 u64 isize i8 i16 i32 i64 f32 f64 }\n\nmacro_rules!\u306e\u8a73\u3057\u3044\u8a18\u6cd5\u306b\u3064\u3044\u3066\u306f\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u4e00\u756a\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u8aad\u3093\u3067\u3082\u3089\u3046\u3068\u3057\u3066\u3001\n\u7c21\u5358\u306b\u89e3\u8aac\u3059\u308b\u3068=>\u306e\u5de6\u90e8\u5206\u306f\u30de\u30af\u30ed\u304c\u53d7\u3051\u53d6\u308b\u5f15\u6570\u306e\u90e8\u5206\u3067\u3001\n$()*\u3067\u56f2\u3080\u90e8\u5206\u304c\u5f15\u6570\u306e\u7e70\u308a\u8fd4\u3057\u90e8\u5206\u306b\u306a\u308a\u3001\n=>\u306e\u53f3\u5074\u3067$()*\u3067\u56f2\u3063\u305f\u90e8\u5206\u304c\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u305f\u5f15\u6570\u5206\u5c55\u958b\u3055\u308c\u7e70\u308a\u8fd4\u3055\u308c\u308b\u3002\n\u3053\u306e\u5834\u5408impl Point<$t> {\u306e\u3042\u305f\u308a\u304b\u30895\u884c\u304c\u5c55\u958b\u3055\u308c\u308b\u3002\nrust\u306e\u30de\u30af\u30ed\u306f\u5c55\u958b\u5f8c\u306e\u5f62\u304c\u60f3\u50cf\u3057\u3084\u3059\u3044\u3057\n\u30ad\u30e3\u30d7\u30c1\u30e3\u3059\u308b\u90e8\u5206\u306e\u578b\u3082\u5b58\u5728\u3059\u308b\u306e\u3067\u304b\u306a\u308a\u4eba\u985e\u306b\u3082\u6271\u3044\u3084\u3059\u3044\u3068\u3044\u3046\u5370\u8c61\u3002\n\u3082\u3061\u308d\u3093\u3001\u30de\u30af\u30ed\u306a\u306e\u3067\u591a\u7528\u3059\u308b\u3068\u4eba\u667a\u3092\u8d85\u3048\u305f\u8907\u96d1\u3055\u3092\u5b55\u3093\u3067\u884c\u304f\u4e8b\u306b\u306a\u308b\u3057\u3001\n\u3053\u308c\u304c\u3044\u3044\u3084\u308a\u65b9\u306a\u306e\u304b\u306f\u8b70\u8ad6\u306e\u4f59\u5730\u304c\u3042\u308b\u3068\u601d\u3046\u304c\u3001\n\u6570\u5024\u306e\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3092\u30de\u30af\u30ed\u3067\u4e00\u6c17\u306b\u5b9f\u88c5\u3057\u3061\u3083\u3046\u624b\u6cd5\u306f\nstd\u30e9\u30a4\u30d6\u30e9\u30ea\u306eAdd\u3068\u304bMul\u3068\u304b\u306e\u5b9f\u88c5\u306b\u3082\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\nhttps://doc.rust-lang.org/src/core/ops.rs.html\n\u3053\u306e\u8fba\u7d50\u69cb\u30d7\u30e9\u30b0\u30de\u30c6\u30a3\u30c3\u30af\u306a\u611f\u3058\u3002\n\n\u307e\u3068\u3081\nrust\u306b\u306f\u6570\u5024trait\u3084\u6574\u6570trait\u3084\u6d6e\u52d5\u5c0f\u6570trait\u307f\u305f\u3044\u306a\u306e\u304c\u73fe\u72b6\u306a\u3044\u306e\u3067\nmacro_rules!\u3067\u89e3\u6c7a\u3057\u307e\u3057\u3087\u3046\u3068\u3044\u3046\u8a71\u3067\u3057\u305f\u3002\n\n\u307e\u305f\u306f\u6570\u5024trait\u307f\u305f\u3044\u306a\u7269\u304c\u6b32\u3057\u3044\u5834\u5408\u306b\u3064\u3044\u3066\u3002\n[\u4ee5\u524dstruct\u3068trait\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u4ee5\u4e0b\u306ePoint\u3068\u3044\u3046\u69cb\u9020\u4f53\u3092\u4f5c\u3063\u3066\u7d39\u4ecb\u3057\u305f](http://qiita.com/yasuyuky/items/8894f731da9a4e8cac4c)\n\u304c\u3001\u305d\u306e\u7d9a\u304d\u3002\n\n\n```\npub struct Point<T> {\n    pub x: T,\n    pub y: T\n}\n```\n\n\n\u57fa\u672c\u7684\u306b\u306f\u524d\u56de\u5b9a\u7fa9\u3057\u305f\u3088\u3046\u306b\u62bd\u8c61\u7684\u306atrait\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\n\u6c4e\u7528\u7684\u306a\b\u69cb\u9020\u4f53\u3092\u69cb\u7bc9\u3059\u308b\u306e\u304c\u6b63\u9053\u3060\u3068\u601d\u3046\u304c\u3001\n\u305d\u3046\u306f\u8a00\u3063\u3066\u3082\u7279\u5b9a\u306e\u578b\u3078\u306e\u30ad\u30e3\u30b9\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u3068\u304d\u306b\u56f0\u308b\u4e8b\u304c\u3042\u308b\u3002\n\n## \u73fe\u72b6\u306etrait\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u65b9\u6cd5\u306e\u9650\u754c\n\n\u5177\u4f53\u7684\u306b\u306f\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u3092\u8fd4\u3059norm\u30e1\u30bd\u30c3\u30c9\u3092\u60f3\u5b9a\u3059\u308b\u3002\n\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u306b\u95a2\u3057\u3066\u306f\u5e73\u65b9\u6839\u3092\u3068\u308b\u4e8b\u306b\u306a\u308b\u306e\u3067\u306e\u3067\nfloat\u7cfb\u306e\u4f55\u304b\u306e\u578b\u3078\u306e\u30ad\u30e3\u30b9\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n\n```\nimpl<T> Point<T> where T:Mul+Copy,<T as Mul>::Output:Add {\n    pub fn norm(self) -> f64 {\n        ((self.x*self.x+self.y*self.y) as f64).sqrt()\n    }\n}\n```\n\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u524d\u56de\u306e\u77e5\u8b58\u3067\u7d20\u6734\u306b\u5b9f\u88c5\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\n`error: non-scalar cast`\u3068\u3044\u3063\u3066\u6012\u3089\u308c\u3066\u3057\u307e\u3046\u4e8b\u306b\u306a\u308b\u3002\n\n```bash\nsrc/foo.rs:33:10: 33:46 error: non-scalar cast: `<<T as core::ops::Mul>::Output as core::ops::Add>::Output` as `f64`\nsrc/foo.rs:33         ((self.x*self.x+self.y*self.y) as f64).sqrt()\n```\n\n\u3053\u308c\u306f`<<T as core::ops::Mul>::Output as core::ops::Add>::Output`\u306f\nscalar\u306a\u5024\u3060\u3068\u306f\u9650\u3089\u306a\u3044\u306e\u3067\u5f53\u7136\u3068\u3044\u3048\u3070\u5f53\u7136\u3060\u304c\u3001\u6b8b\u5ff5\u3002\nscalar\u306a\u30ad\u30e3\u30b9\u30c8\u304c\u4fdd\u8a3c\u53ef\u80fd\u3092\u8868\u73fe\u3059\u308b\u6570\u5024trait\u307f\u305f\u3044\u306a\u3082\u306e\u304c\u3042\u308c\u3070\u3044\u3044\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u304c\n\u305d\u3093\u306a\u3082\u306e\u306f\u306a\u304b\u3063\u305f\u3002\n\n## macro_rules!\n\n\u305d\u3053\u3067`macro_rules!`\u306e\u51fa\u756a\u3068\u306a\u308b\u3002\n\u8981\u306f`f64`\u306b\u30ad\u30e3\u30b9\u30c8\u3067\u304d\u305d\u3046\u306a\u6570\u5024\u578b\u306f\u30de\u30af\u30ed\u3092\u3064\u304b\u3063\u3066\u5168\u90e8\u5b9a\u7fa9\u3057\u3061\u3083\u304a\u3046\u3068\u3044\u3046\u767a\u60f3\n\n```\nmacro_rules! norm_impl {\n    ($($t:ty)*) => ($(\n        impl Point<$t>  {\n            pub fn norm(self) -> f64 {\n                ((self.x*self.x+self.y*self.y) as f64).sqrt()\n            }\n        }\n    )*)\n}\nnorm_impl! { usize u8 u16 u32 u64 isize i8 i16 i32 i64 f32 f64 }\n```\n\n`macro_rules!`\u306e\u8a73\u3057\u3044\u8a18\u6cd5\u306b\u3064\u3044\u3066\u306f\n[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://doc.rust-lang.org/book/macros.html)\u304c\u4e00\u756a\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u8aad\u3093\u3067\u3082\u3089\u3046\u3068\u3057\u3066\u3001\n\u7c21\u5358\u306b\u89e3\u8aac\u3059\u308b\u3068`=>`\u306e\u5de6\u90e8\u5206\u306f\u30de\u30af\u30ed\u304c\u53d7\u3051\u53d6\u308b\u5f15\u6570\u306e\u90e8\u5206\u3067\u3001\n`$()*`\u3067\u56f2\u3080\u90e8\u5206\u304c\u5f15\u6570\u306e\u7e70\u308a\u8fd4\u3057\u90e8\u5206\u306b\u306a\u308a\u3001\n`=>`\u306e\u53f3\u5074\u3067`$()*`\u3067\u56f2\u3063\u305f\u90e8\u5206\u304c\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u305f\u5f15\u6570\u5206\u5c55\u958b\u3055\u308c\u7e70\u308a\u8fd4\u3055\u308c\u308b\u3002\n\u3053\u306e\u5834\u5408`impl Point<$t> {`\u306e\u3042\u305f\u308a\u304b\u30895\u884c\u304c\u5c55\u958b\u3055\u308c\u308b\u3002\nrust\u306e\u30de\u30af\u30ed\u306f\u5c55\u958b\u5f8c\u306e\u5f62\u304c\u60f3\u50cf\u3057\u3084\u3059\u3044\u3057\n\u30ad\u30e3\u30d7\u30c1\u30e3\u3059\u308b\u90e8\u5206\u306e\u578b\u3082\u5b58\u5728\u3059\u308b\u306e\u3067\u304b\u306a\u308a\u4eba\u985e\u306b\u3082\u6271\u3044\u3084\u3059\u3044\u3068\u3044\u3046\u5370\u8c61\u3002\n\n\u3082\u3061\u308d\u3093\u3001\u30de\u30af\u30ed\u306a\u306e\u3067\u591a\u7528\u3059\u308b\u3068\u4eba\u667a\u3092\u8d85\u3048\u305f\u8907\u96d1\u3055\u3092\u5b55\u3093\u3067\u884c\u304f\u4e8b\u306b\u306a\u308b\u3057\u3001\n\u3053\u308c\u304c\u3044\u3044\u3084\u308a\u65b9\u306a\u306e\u304b\u306f\u8b70\u8ad6\u306e\u4f59\u5730\u304c\u3042\u308b\u3068\u601d\u3046\u304c\u3001\n\u6570\u5024\u306e\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3092\u30de\u30af\u30ed\u3067\u4e00\u6c17\u306b\u5b9f\u88c5\u3057\u3061\u3083\u3046\u624b\u6cd5\u306f\nstd\u30e9\u30a4\u30d6\u30e9\u30ea\u306e`Add`\u3068\u304b`Mul`\u3068\u304b\u306e\u5b9f\u88c5\u306b\u3082\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\nhttps://doc.rust-lang.org/src/core/ops.rs.html\n\n\u3053\u306e\u8fba\u7d50\u69cb\u30d7\u30e9\u30b0\u30de\u30c6\u30a3\u30c3\u30af\u306a\u611f\u3058\u3002\n\n\n## \u307e\u3068\u3081\n\nrust\u306b\u306f\u6570\u5024trait\u3084\u6574\u6570trait\u3084\u6d6e\u52d5\u5c0f\u6570trait\u307f\u305f\u3044\u306a\u306e\u304c\u73fe\u72b6\u306a\u3044\u306e\u3067\nmacro_rules!\u3067\u89e3\u6c7a\u3057\u307e\u3057\u3087\u3046\u3068\u3044\u3046\u8a71\u3067\u3057\u305f\u3002\n\n\n", "tags": ["rust"]}