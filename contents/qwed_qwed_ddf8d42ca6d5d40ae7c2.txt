{"context": " More than 1 year has passed since last update.\u3042\u304f\u307e\u3067\u3082\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\u3053\u306e\u307e\u307e\u306f\u4f7f\u3048\u306a\u3044\u304b\u3068\n\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u3001\u306a\u3093\u3068\u304b\u306a\u308a\u305d\u3046\u306a\u30d1\u30bf\u30fc\u30f3\u3092\u6574\u7406\n\u30b5\u30fc\u30d0\u30fc\u4e0a\u3067coginito\u3092\u4f7f\u3063\u3066\u307e\u3059\u304c\u3001\n\u30bb\u30c3\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u57fa\u672c\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n\n\u672a\u8a8d\u8a3c\u306eRequest\u306f\u3001coginto.identityId\u3092\u8fd4\u5374\n\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u8a8d\u8a3c\u306eID\u3067coginto.identityId\u3092\u53c2\u7167\nAuth\u30ed\u30fc\u30eb\u306bcredential\u3092\u66f4\u65b0\n\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u8a8d\u8a3c\u6642\u306b\u8a8d\u8a3c\u60c5\u5831\u3092Dataset\u306b\u4fdd\u5b58\ncoginto.identityId\u304b\u3089Dataset\u3092\u53c2\u7167\n\n\u4eca\u56de\u306f\u5f8c\u306b\u5171\u901a\u51e6\u7406\u3068\u3057\u3066\u307e\u3068\u3081\u308c\u308b\u7528\u306b\u3001\u3072\u3068\u3064\u306eexports.handler\u3067\u307e\u3068\u3081\u3066\u3042\u308b(\u624b\u629c\u304d)\nappId\u306f\u672c\u6765\u3001\u8a8d\u8a3c\u3092\u3059\u308b\u305f\u3081\u306e\u30d1\u30e9\u30e1\u30fc\u30bf(id,pass)\u3068\u304b\n\n\u5b9f\u884c\u74b0\u5883\n\nAmazon API Gateway\nLambda (Node.js runtime)\nCognito\n\n\nnpm\nvar _ = require('lodash');\nvar Q = require(\"q\");\nvar AWS = require('aws-sdk');\n\nAWS\u306flambda\u3067\u5b9f\u884c\u3059\u308b\u306e\u306b\u5fc5\u8981\u3067\u306f\u306a\u3044\u3051\u3069\u3082\u3001\u30ed\u30fc\u30ab\u30eb\u958b\u767a\u7528\nQ\u306flambda\u306enodejs\u304c0.10.36\u306a\u306e\u3067\nlambda current-supported-versions\n\n\u672a\u8a8d\u8a3c\u306eRequest\u306f\u3001coginto.identityId\u3092\u8fd4\u5374\n\u3068\u308a\u3042\u3048\u305aGET\u3067identityId\u3092\u9001\u308b\u524d\u63d0\nvar identityId = null;\n\nvar createUser = function(data){\n  var d = Q.defer();\n  AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityId: identityId,\n    IdentityPoolId: IDENTITY_POOLID\n  });\n  AWS.config.credentials.get(function(err) {\n    if (err) {\n      d.resolve({success: false});\n      return;\n    }\n    identityId = AWS.config.credentials.identityId;\n    d.resolve({\n      identityId: identityId\n    });\n  });\n  return d.promise;\n}\n\n\n\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u8a8d\u8a3c\u306eID\u3067coginto.identityId\u3092\u53c2\u7167\nmy.app\u306fcognito\u3067\u8a2d\u5b9a\u3057\u305f\u3082\u306e\n\u672c\u6765\u306f\u3053\u3053\u3067\u72ec\u81ea\u8a8d\u8a3c\u306e\u51e6\u7406\u3092\u884c\u3044\u3001userID\u3084token\u3092Login\u306b\u767b\u9332\nsetTimeout\u306f\u8a8d\u8a3c\u306e\u4ee3\u308f\u308a\nToken\u306fAuthenticated Role\u3067\u306eAWS\u306e\u63a5\u7d9a\u306b\u5229\u7528(\u4eca\u56de\u306f\u3064\u304b\u3063\u3066\u3044\u306a\u3044)\nvar authUser = function(data){\n  var d = Q.defer();\n\n  //\u3053\u3053\u3067\u5916\u90e8\u8a8d\u8a3c\u51e6\u7406...\n  setTimeout(function(){\n\n    //\u7d50\u679c\u3092\u4fdd\u6301\u3059\u308b\n    var params = {\n      IdentityPoolId: IDENTITY_POOLID,\n      IdentityId: identityId,\n      Logins: {\n        'my.app': data.user\n      }\n    };\n    cognitoidentity.getOpenIdTokenForDeveloperIdentity(params, function(err, res){\n      if(err){\n        d.resolve({success: false});\n        return;\n      }\n      identityId = res.IdentityId;\n      d.resolve(res);\n    });\n\n  }, 500);\n  return d.promise;\n};\n\n\nAuth\u30ed\u30fc\u30eb\u306bcredential\u3092\u66f4\u65b0\ngetOpenIdTokenForDeveloperIdentity\u3067\u53d6\u5f97\u3057\u305fToken\u3067credential\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u3067\u3001\u30ed\u30fc\u30eb\u3092\u5207\u308a\u5909\u3048\u308b\ncognitoidentity.getOpenIdTokenForDeveloperIdentity(params, function(err, res){\n  if(err){\n    return;\n  }\n\n  //credential\u3092\u66f4\u65b0\n  AWS.config.credentials = new AWS.WebIdentityCredentials({\n    RoleArn: \"arn:aws:iam:xxxxxxx:role/Cognito_myAppAuth_Role\",\n    WebIdentityToken: res.Token\n  });\n\n  var dynamodb = new AWS.DynamoDB();\n  dynamodb.scan({\n    TableName: 'xxxxxx'\n  },function(err,data){\n    //table\u3092\u53d6\u5f97\n  });\n});\n\n\ncoginto.identityId\u304b\u3089Dataset\u3092\u53c2\u7167\n\u3053\u3053\u306f\u305d\u306e\u307e\u307e\nvar cognitosync = new AWS.CognitoSync();\n\nvar listData = function(data){\n  var d = Q.defer();\n  if(!identityId){\n    d.resolve({\n      success: false\n    });\n    return d.promise;\n  }\n\n  cognitosync.listRecords({\n    DatasetName: COGNITO_DATASET_NAME,\n    IdentityId: identityId,\n    IdentityPoolId: IDENTITY_POOLID\n  }, function(err, res){\n    if (err) {\n      d.resolve({success: false});\n      return;\n    }\n    console.log(parseData(res.Records));\n    d.resolve(res); \n  });\n  return d.promise;\n};\n\n\n\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u8a8d\u8a3c\u6642\u306b\u8a8d\u8a3c\u60c5\u5831\u3092Dataset\u306b\u4fdd\u5b58\nRecord\u306b\u5916\u90e8\u63a5\u7d9a\u60c5\u5831\u7b49\u3092\u4fdd\u6301\nvar addData = function(data) {\n  var d = Q.defer();\n\n  if(!identityId){\n    d.resolve({\n      success: false\n    });\n    return d.promise;\n  }\n\n  var params = {\n    DatasetName: COGNITO_DATASET_NAME,\n    IdentityId: identityId,\n    IdentityPoolId: IDENTITY_POOLID,\n    SyncSessionToken: data.SyncSessionToken,\n    RecordPatches: [{\n        Key: 'USER_ID',\n        Op: 'replace',\n        SyncCount: data.DatasetSyncCount,\n        Value: 'aaaaaaaaaaaaa'\n    }]\n  };\n  cognitosync.updateRecords(params, function(err, data) {\n    if(err){\n      d.resolve({success: false});\n      return;\n    }\n    d.resolve(parseData(data.Records)); \n  });\n  return d.promise;\n}\n\n\n\u5b9f\u884c\u7d50\u679c\n\nidentityId\u306a\u3057\nhttps://xxxxxxx.execute-api.ap-northeast-1.amazonaws.com/production/cognito\n{\n    identityId: \"ap-northeast-1:2b967234-8a98-4dbf-945f-ba9581981a06\"\n}\n\n\nidentityId\u3042\u308a\nhttps://xxxxxxx.execute-api.ap-northeast-1.amazonaws.com/production/cognito?identityId=ap-northeast-1:2b967234-8a98-4dbf-945f-ba9581981a06\n{\n    identityId: \"ap-northeast-1:2b967234-8a98-4dbf-945f-ba9581981a06\",\n    userdata: {\n        USER_ID: \"aaaaaaaaaaaaa\"\n    }\n}\n\n\n\u5916\u90e8\u306e\u8a8d\u8a3c\u60c5\u5831(appId)\u3092\u6e21\u3059\nhttps://xxxxxxx.execute-api.ap-northeast-1.amazonaws.com/production/cognito?appId=user1\n{\n    identityId: \"ap-northeast-1:dc94f109-993a-457e-b40e-86042a1fbe67\",\n    userdata: {\n        USER_ID: \"aaaaaaaaaaaaa\"\n    }\n}\n\n\nidentityId, appId \u306e\u512a\u5148\u5ea6\nappId\u304c\u512a\u5148\u3055\u308c\u308b\u3002\nIdentity pool\u306b\u65e2\u306b\u3042\u308b\u5834\u5408\u306fLinked logins\uff1aDISABLED\u3068\u306a\u308b\n\n\u5168\u6587\n\u30a2\u30ab\u30a6\u30f3\u30c8\u306f\u30c0\u30df\u30fc\n\nindex.js\n/**\n * cognito test\n *\n */\n\"use strict\";\n\nvar _ = require('lodash');\nvar Q = require(\"q\");\nvar AWS = require('aws-sdk');\nAWS.config.region = 'ap-northeast-1';\nvar IDENTITY_POOLID = 'ap-northeast-1:XXXXXXXXX';\nvar COGNITO_DATASET_NAME = 'userData';\n\nvar cognitoidentity = new AWS.CognitoIdentity();\nvar cognitosync = new AWS.CognitoSync();\nvar identityId = null; \n\n\n/**\n * \u8a8d\u8a3c\u60c5\u5831\u304c\u306a\u3044\u5834\u5408\u306fUnauthenticated User\u3092\u4f5c\u6210\n */\nvar createUser = function(data){\n  var d = Q.defer();\n  AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityId: identityId,\n    IdentityPoolId: IDENTITY_POOLID\n  });\n  AWS.config.credentials.get(function(err) {\n    if (err) {\n      d.resolve({success: false});\n      return;\n    }\n    identityId = AWS.config.credentials.identityId;\n    d.resolve({\n      identityId: identityId\n    });\n  });\n  return d.promise;\n}\n\n\n/**\n * Developer Authenticated \u8a8d\u8a3c\n */\nvar authUser = function(data){\n  var d = Q.defer();\n\n  //\u3053\u3053\u3067\u5916\u90e8\u8a8d\u8a3c\u51e6\u7406...\n  setTimeout(function(){\n\n    //\u7d50\u679c\u3092\u4fdd\u6301\u3059\u308b\n    var params = {\n      IdentityPoolId: IDENTITY_POOLID,\n      IdentityId: identityId,\n      Logins: {\n        'my.app': data.user\n      }\n    };\n    cognitoidentity.getOpenIdTokenForDeveloperIdentity(params, function(err, res){\n      if(err){\n        d.resolve({success: false});\n        return;\n      }\n      identityId = res.IdentityId;\n      d.resolve(res);\n    });\n\n  }, 500);\n  return d.promise;\n};\n\n\n/**\n * List store Data\n */\nvar listData = function(data){\n\n  var d = Q.defer();\n  if(!identityId){\n    d.resolve({\n      success: false\n    });\n    return d.promise;\n  }\n\n  cognitosync.listRecords({\n    DatasetName: COGNITO_DATASET_NAME,\n    IdentityId: identityId,\n    IdentityPoolId: IDENTITY_POOLID\n  }, function(err, res){\n    if (err) {\n      d.resolve({success: false});\n      return;\n    }\n    console.log(parseData(res.Records));\n    d.resolve(res); \n  });\n  return d.promise;\n};\n\n\n/**\n * add store Data\n */\nvar addData = function(data) {\n  var d = Q.defer();\n\n  if(!identityId){\n    d.resolve({\n      success: false\n    });\n    return d.promise;\n  }\n\n  var params = {\n    DatasetName: COGNITO_DATASET_NAME,\n    IdentityId: identityId,\n    IdentityPoolId: IDENTITY_POOLID,\n    SyncSessionToken: data.SyncSessionToken,\n    RecordPatches: [{\n        Key: 'USER_ID',\n        Op: 'replace',\n        SyncCount: data.DatasetSyncCount,\n        Value: 'aaaaaaaaaaaaa'\n    }]\n  };\n  cognitosync.updateRecords(params, function(err, data) {\n    if(err){\n      d.resolve({success: false});\n      return;\n    }\n    d.resolve(parseData(data.Records)); \n  });\n  return d.promise;\n}\n\n/**\n * Records \u3092 Object \u306b\u5909\u63db\n */\nvar parseData= function(rec){\n  var obj = {};\n  _.each(rec, function(r){\n    obj[r.Key] = r.Value;\n  });\n  return obj;\n};\n\nexports.handler = function (e, context) {\n  var query = e.queryParameters || {};\n\n  //\u8a8d\u8a3c\u60c5\u5831\u306a\u3044\n  if(!query.identityId && !query.appId){\n    createUser().done(function(res){\n      context.succeed(res);\n    });\n    return;\n  }\n\n  //appId\u304c\u306a\u3044\n  if(!query.appId){\n    identityId = query.identityId;\n    Q.when()\n    .then(createUser)\n    .then(listData)\n    .then(addData)\n    .done(function(res){\n      context.succeed({\n        identityId:identityId,\n        userdata:res\n      });\n    });\n    return;\n  }\n\n  if(query.identityId) {\n    identityId = query.identityId;\n  }\n\n  Q.when({\n    user: query.appId\n  })\n  .then(authUser)\n  .then(listData)\n  .then(addData)\n  .done(function(res){\n    context.succeed({\n      identityId:identityId,\n      userdata:res\n    });\n  });\n};\n\n\n\n\u53c2\u8003\u30ea\u30f3\u30af\n\nhttp://mobile.awsblog.com/post/Tx2323YHCM0I7OO/Understanding-Amazon-Cognito-Authentication-Part-4-Enhanced-Flow\nhttp://qiita.com/imaifactory/items/b66cdf91118e3be6fe17\n\n\u3042\u304f\u307e\u3067\u3082\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\u3053\u306e\u307e\u307e\u306f\u4f7f\u3048\u306a\u3044\u304b\u3068\n\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u3001\u306a\u3093\u3068\u304b\u306a\u308a\u305d\u3046\u306a\u30d1\u30bf\u30fc\u30f3\u3092\u6574\u7406\n\n\u30b5\u30fc\u30d0\u30fc\u4e0a\u3067coginito\u3092\u4f7f\u3063\u3066\u307e\u3059\u304c\u3001\n\u30bb\u30c3\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u57fa\u672c\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n#\u3084\u308a\u305f\u3044\u3053\u3068\n\n* \u672a\u8a8d\u8a3c\u306eRequest\u306f\u3001coginto.identityId\u3092\u8fd4\u5374\n* \u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u8a8d\u8a3c\u306eID\u3067coginto.identityId\u3092\u53c2\u7167\n* Auth\u30ed\u30fc\u30eb\u306bcredential\u3092\u66f4\u65b0\n* \u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u8a8d\u8a3c\u6642\u306b\u8a8d\u8a3c\u60c5\u5831\u3092Dataset\u306b\u4fdd\u5b58\n* coginto.identityId\u304b\u3089Dataset\u3092\u53c2\u7167\n\n\n\u4eca\u56de\u306f\u5f8c\u306b\u5171\u901a\u51e6\u7406\u3068\u3057\u3066\u307e\u3068\u3081\u308c\u308b\u7528\u306b\u3001\u3072\u3068\u3064\u306e`exports.handler`\u3067\u307e\u3068\u3081\u3066\u3042\u308b(\u624b\u629c\u304d)\nappId\u306f\u672c\u6765\u3001\u8a8d\u8a3c\u3092\u3059\u308b\u305f\u3081\u306e\u30d1\u30e9\u30e1\u30fc\u30bf(id,pass)\u3068\u304b\n\n####\u5b9f\u884c\u74b0\u5883\n\n* Amazon API Gateway\n* Lambda (Node.js runtime)\n* Cognito\n\n####npm\n```\nvar _ = require('lodash');\nvar Q = require(\"q\");\nvar AWS = require('aws-sdk');\n```\n\nAWS\u306flambda\u3067\u5b9f\u884c\u3059\u308b\u306e\u306b\u5fc5\u8981\u3067\u306f\u306a\u3044\u3051\u3069\u3082\u3001\u30ed\u30fc\u30ab\u30eb\u958b\u767a\u7528\nQ\u306flambda\u306enodejs\u304c`0.10.36`\u306a\u306e\u3067\n[lambda current-supported-versions](http://docs.aws.amazon.com/lambda/latest/dg/current-supported-versions.html)\n\n\n# \u672a\u8a8d\u8a3c\u306eRequest\u306f\u3001coginto.identityId\u3092\u8fd4\u5374\n\u3068\u308a\u3042\u3048\u305aGET\u3067identityId\u3092\u9001\u308b\u524d\u63d0\n\n```\nvar identityId = null;\n\nvar createUser = function(data){\n  var d = Q.defer();\n  AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityId: identityId,\n    IdentityPoolId: IDENTITY_POOLID\n  });\n  AWS.config.credentials.get(function(err) {\n    if (err) {\n      d.resolve({success: false});\n      return;\n    }\n    identityId = AWS.config.credentials.identityId;\n    d.resolve({\n      identityId: identityId\n    });\n  });\n  return d.promise;\n}\n```\n\n# \u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u8a8d\u8a3c\u306eID\u3067coginto.identityId\u3092\u53c2\u7167\n\n`my.app`\u306fcognito\u3067\u8a2d\u5b9a\u3057\u305f\u3082\u306e\n\u672c\u6765\u306f\u3053\u3053\u3067\u72ec\u81ea\u8a8d\u8a3c\u306e\u51e6\u7406\u3092\u884c\u3044\u3001userID\u3084token\u3092Login\u306b\u767b\u9332\nsetTimeout\u306f\u8a8d\u8a3c\u306e\u4ee3\u308f\u308a\n\nToken\u306fAuthenticated Role\u3067\u306eAWS\u306e\u63a5\u7d9a\u306b\u5229\u7528(\u4eca\u56de\u306f\u3064\u304b\u3063\u3066\u3044\u306a\u3044)\n\n```\nvar authUser = function(data){\n  var d = Q.defer();\n\n  //\u3053\u3053\u3067\u5916\u90e8\u8a8d\u8a3c\u51e6\u7406...\n  setTimeout(function(){\n\n    //\u7d50\u679c\u3092\u4fdd\u6301\u3059\u308b\n    var params = {\n      IdentityPoolId: IDENTITY_POOLID,\n      IdentityId: identityId,\n      Logins: {\n        'my.app': data.user\n      }\n    };\n    cognitoidentity.getOpenIdTokenForDeveloperIdentity(params, function(err, res){\n      if(err){\n        d.resolve({success: false});\n        return;\n      }\n      identityId = res.IdentityId;\n      d.resolve(res);\n    });\n\n  }, 500);\n  return d.promise;\n};\n```\n\n# Auth\u30ed\u30fc\u30eb\u306bcredential\u3092\u66f4\u65b0\ngetOpenIdTokenForDeveloperIdentity\u3067\u53d6\u5f97\u3057\u305fToken\u3067credential\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u3067\u3001\u30ed\u30fc\u30eb\u3092\u5207\u308a\u5909\u3048\u308b\n\n```\ncognitoidentity.getOpenIdTokenForDeveloperIdentity(params, function(err, res){\n  if(err){\n    return;\n  }\n      \n  //credential\u3092\u66f4\u65b0\n  AWS.config.credentials = new AWS.WebIdentityCredentials({\n  \tRoleArn: \"arn:aws:iam:xxxxxxx:role/Cognito_myAppAuth_Role\",\n   \tWebIdentityToken: res.Token\n  });\n\n  var dynamodb = new AWS.DynamoDB();\n  dynamodb.scan({\n  \tTableName: 'xxxxxx'\n  },function(err,data){\n    //table\u3092\u53d6\u5f97\n  });\n});\n```\n\n# coginto.identityId\u304b\u3089Dataset\u3092\u53c2\u7167\n\u3053\u3053\u306f\u305d\u306e\u307e\u307e\n\n```\nvar cognitosync = new AWS.CognitoSync();\n\nvar listData = function(data){\n  var d = Q.defer();\n  if(!identityId){\n    d.resolve({\n      success: false\n    });\n    return d.promise;\n  }\n\n  cognitosync.listRecords({\n    DatasetName: COGNITO_DATASET_NAME,\n    IdentityId: identityId,\n    IdentityPoolId: IDENTITY_POOLID\n  }, function(err, res){\n    if (err) {\n      d.resolve({success: false});\n      return;\n    }\n    console.log(parseData(res.Records));\n    d.resolve(res); \n  });\n  return d.promise;\n};\n```\n\n# \u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u8a8d\u8a3c\u6642\u306b\u8a8d\u8a3c\u60c5\u5831\u3092Dataset\u306b\u4fdd\u5b58\n\nRecord\u306b\u5916\u90e8\u63a5\u7d9a\u60c5\u5831\u7b49\u3092\u4fdd\u6301\n\n```\nvar addData = function(data) {\n  var d = Q.defer();\n  \n  if(!identityId){\n    d.resolve({\n      success: false\n    });\n    return d.promise;\n  }\n  \n  var params = {\n    DatasetName: COGNITO_DATASET_NAME,\n    IdentityId: identityId,\n    IdentityPoolId: IDENTITY_POOLID,\n    SyncSessionToken: data.SyncSessionToken,\n    RecordPatches: [{\n        Key: 'USER_ID',\n        Op: 'replace',\n        SyncCount: data.DatasetSyncCount,\n        Value: 'aaaaaaaaaaaaa'\n    }]\n  };\n  cognitosync.updateRecords(params, function(err, data) {\n    if(err){\n      d.resolve({success: false});\n      return;\n    }\n    d.resolve(parseData(data.Records)); \n  });\n  return d.promise;\n}\n```\n\n#\u5b9f\u884c\u7d50\u679c\n\n###identityId\u306a\u3057\nhttps://xxxxxxx.execute-api.ap-northeast-1.amazonaws.com/production/cognito\n\n``` response\n{\n \tidentityId: \"ap-northeast-1:2b967234-8a98-4dbf-945f-ba9581981a06\"\n}\n```\n\n###identityId\u3042\u308a\nhttps://xxxxxxx.execute-api.ap-northeast-1.amazonaws.com/production/cognito?identityId=ap-northeast-1:2b967234-8a98-4dbf-945f-ba9581981a06\n\n``` response\n{\n\tidentityId: \"ap-northeast-1:2b967234-8a98-4dbf-945f-ba9581981a06\",\n\tuserdata: {\n\t\tUSER_ID: \"aaaaaaaaaaaaa\"\n\t}\n}\n```\n\n###\u5916\u90e8\u306e\u8a8d\u8a3c\u60c5\u5831(appId)\u3092\u6e21\u3059\nhttps://xxxxxxx.execute-api.ap-northeast-1.amazonaws.com/production/cognito?appId=user1\n\n```\n{\n\tidentityId: \"ap-northeast-1:dc94f109-993a-457e-b40e-86042a1fbe67\",\n\tuserdata: {\n\t\tUSER_ID: \"aaaaaaaaaaaaa\"\n\t}\n}\n```\n\n### identityId, appId \u306e\u512a\u5148\u5ea6\nappId\u304c\u512a\u5148\u3055\u308c\u308b\u3002\nIdentity pool\u306b\u65e2\u306b\u3042\u308b\u5834\u5408\u306f`Linked logins\uff1aDISABLED`\u3068\u306a\u308b\n\n# \u5168\u6587\n\u30a2\u30ab\u30a6\u30f3\u30c8\u306f\u30c0\u30df\u30fc\n\n``` index.js\n/**\n * cognito test\n *\n */\n\"use strict\";\n\nvar _ = require('lodash');\nvar Q = require(\"q\");\nvar AWS = require('aws-sdk');\nAWS.config.region = 'ap-northeast-1';\nvar IDENTITY_POOLID = 'ap-northeast-1:XXXXXXXXX';\nvar COGNITO_DATASET_NAME = 'userData';\n\nvar cognitoidentity = new AWS.CognitoIdentity();\nvar cognitosync = new AWS.CognitoSync();\nvar identityId = null; \n\n\n/**\n * \u8a8d\u8a3c\u60c5\u5831\u304c\u306a\u3044\u5834\u5408\u306fUnauthenticated User\u3092\u4f5c\u6210\n */\nvar createUser = function(data){\n  var d = Q.defer();\n  AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityId: identityId,\n    IdentityPoolId: IDENTITY_POOLID\n  });\n  AWS.config.credentials.get(function(err) {\n    if (err) {\n      d.resolve({success: false});\n      return;\n    }\n    identityId = AWS.config.credentials.identityId;\n    d.resolve({\n      identityId: identityId\n    });\n  });\n  return d.promise;\n}\n\n\n/**\n * Developer Authenticated \u8a8d\u8a3c\n */\nvar authUser = function(data){\n  var d = Q.defer();\n\n  //\u3053\u3053\u3067\u5916\u90e8\u8a8d\u8a3c\u51e6\u7406...\n  setTimeout(function(){\n\n    //\u7d50\u679c\u3092\u4fdd\u6301\u3059\u308b\n    var params = {\n      IdentityPoolId: IDENTITY_POOLID,\n      IdentityId: identityId,\n      Logins: {\n        'my.app': data.user\n      }\n    };\n    cognitoidentity.getOpenIdTokenForDeveloperIdentity(params, function(err, res){\n      if(err){\n        d.resolve({success: false});\n        return;\n      }\n      identityId = res.IdentityId;\n      d.resolve(res);\n    });\n\n  }, 500);\n  return d.promise;\n};\n\n\n/**\n * List store Data\n */\nvar listData = function(data){\n\n  var d = Q.defer();\n  if(!identityId){\n    d.resolve({\n      success: false\n    });\n    return d.promise;\n  }\n\n  cognitosync.listRecords({\n    DatasetName: COGNITO_DATASET_NAME,\n    IdentityId: identityId,\n    IdentityPoolId: IDENTITY_POOLID\n  }, function(err, res){\n    if (err) {\n      d.resolve({success: false});\n      return;\n    }\n    console.log(parseData(res.Records));\n    d.resolve(res); \n  });\n  return d.promise;\n};\n\n\n/**\n * add store Data\n */\nvar addData = function(data) {\n  var d = Q.defer();\n  \n  if(!identityId){\n    d.resolve({\n      success: false\n    });\n    return d.promise;\n  }\n  \n  var params = {\n    DatasetName: COGNITO_DATASET_NAME,\n    IdentityId: identityId,\n    IdentityPoolId: IDENTITY_POOLID,\n    SyncSessionToken: data.SyncSessionToken,\n    RecordPatches: [{\n        Key: 'USER_ID',\n        Op: 'replace',\n        SyncCount: data.DatasetSyncCount,\n        Value: 'aaaaaaaaaaaaa'\n    }]\n  };\n  cognitosync.updateRecords(params, function(err, data) {\n    if(err){\n      d.resolve({success: false});\n      return;\n    }\n    d.resolve(parseData(data.Records)); \n  });\n  return d.promise;\n}\n\n/**\n * Records \u3092 Object \u306b\u5909\u63db\n */\nvar parseData= function(rec){\n  var obj = {};\n  _.each(rec, function(r){\n    obj[r.Key] = r.Value;\n  });\n  return obj;\n};\n\nexports.handler = function (e, context) {\n  var query = e.queryParameters || {};\n  \n  //\u8a8d\u8a3c\u60c5\u5831\u306a\u3044\n  if(!query.identityId && !query.appId){\n    createUser().done(function(res){\n      context.succeed(res);\n    });\n    return;\n  }\n\n  //appId\u304c\u306a\u3044\n  if(!query.appId){\n    identityId = query.identityId;\n    Q.when()\n    .then(createUser)\n    .then(listData)\n    .then(addData)\n    .done(function(res){\n      context.succeed({\n        identityId:identityId,\n        userdata:res\n      });\n    });\n    return;\n  }\n\n  if(query.identityId) {\n    identityId = query.identityId;\n  }\n\n  Q.when({\n    user: query.appId\n  })\n  .then(authUser)\n  .then(listData)\n  .then(addData)\n  .done(function(res){\n    context.succeed({\n      identityId:identityId,\n      userdata:res\n    });\n  });\n};\n```\n\n#\u53c2\u8003\u30ea\u30f3\u30af\n* http://mobile.awsblog.com/post/Tx2323YHCM0I7OO/Understanding-Amazon-Cognito-Authentication-Part-4-Enhanced-Flow\n* http://qiita.com/imaifactory/items/b66cdf91118e3be6fe17\n", "tags": ["lambda", "AWS", "cognito", "APIGateway", "JavaScript"]}