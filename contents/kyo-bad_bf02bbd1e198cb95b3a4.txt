{"context": "\n\n\u6982\u8981\n\nline-bot-sdk-python\u3092\u5229\u7528\u3057\u305f\u30aa\u30a6\u30e0\u8fd4\u3057\u3092Docker + Heroku\u3067\u69cb\u7bc9\u3057\u305f\u306e\u3067\u305d\u306e\u5099\u5fd8\u9332\n\n\u4e3b\u306b\u53c2\u8003\u306b\u3057\u305f\u30da\u30fc\u30b8\n\nhttps://devcenter.heroku.com/articles/container-registry-and-runtime\nhttps://github.com/line/line-bot-sdk-python\n\n\u203b \u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u53d6\u5f97\u3084\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u306e\u53d6\u5f97\u306f\u7d42\u308f\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\uff08\u305f\u304f\u3055\u3093\u306e\u30da\u30fc\u30b8\u304c\u898b\u3064\u304b\u308b\u306e\u3067\u3053\u3053\u3067\u306f\u5272\u611b\uff09\n\nDocker\u306blinebot\u7528\u306e\u30b5\u30fc\u30d0\u74b0\u5883\u3092\u69cb\u7bc9\n\u901a\u5e38\u306eHeroku\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u3060\u3068\u3001requirement.txt\u3068\u304bprocfile\u3068\u304b\u3082\u308d\u3082\u308d\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u306e\u3060\u3068\u601d\u3046\u304c\u3001\u81ea\u5206\u304cDocker\u3067\u74b0\u5883\u3092\u4f5c\u308c\u308c\u3070\u305d\u308c\u3092\u5229\u7528\u3059\u308b\u307b\u3046\u304c\u697d\u3060\u308d\u3046\u3068\u3044\u3046\u8003\u3048\u3067Docker\u3092\u4f7f\u3063\u305f\u74b0\u5883\u69cb\u7bc9\u3092\u884c\u3046\u3002\n\n\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\nlinebot\n    \u2502  .dockerignore\n    \u2502  Dockerfile.heroku\n    \u2502\n    \u2514\u2500app\n        \u2502  bot.py\n\nDockerfile.heroku\nFROM kyobad/miniconda3-alpine:latest\n\nMAINTAINER K.Kato\n\nRUN pip install --upgrade pip \\\n    && conda install -y flask \\\n    && pip install flask gunicorn line-bot-sdk \\\n    && adduser -D botter \\\n    && mkdir /home/botter/app\n\nUSER botter\n\nCOPY ./app /home/botter/app\n\nWORKDIR /home/botter/app\n\nCMD gunicorn -b 0.0.0.0:$PORT bot:app --log-file=-\n\n\n\nbot.py\n###\u516c\u5f0fSDK\u306e\u30b3\u30d4\u30da\u3067\u3059###\nfrom flask import Flask, request, abort\n\nfrom linebot import (\n    LineBotApi, WebhookHandler\n)\nfrom linebot.exceptions import (\n    InvalidSignatureError\n)\nfrom linebot.models import (\n    MessageEvent, TextMessage, TextSendMessage,\n)\n\napp = Flask(__name__)\n\nline_bot_api = LineBotApi('YOUR_CHANNEL_ACCESS_TOKEN')\nhandler = WebhookHandler('YOUR_CHANNEL_SECRET')\n\n\n@app.route(\"/callback\", methods=['POST'])\ndef callback():\n    # get X-Line-Signature header value\n    signature = request.headers['X-Line-Signature']\n\n    # get request body as text\n    body = request.get_data(as_text=True)\n    app.logger.info(\"Request body: \" + body)\n\n    # handle webhook body\n    try:\n        handler.handle(body, signature)\n    except InvalidSignatureError:\n        abort(400)\n\n    return 'OK'\n\n\n@handler.add(MessageEvent, message=TextMessage)\ndef handle_message(event):\n    line_bot_api.reply_message(\n        event.reply_token,\n        TextSendMessage(text=event.message.text))\n\n\nif __name__ == \"__main__\":\n    app.run()\n\n\n\nDockerfile\u3067\u306f\u3001\u81ea\u5206\u304c\u4f7f\u7528\u3059\u308b\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u3066\u3044\u307e\u3059\u3002\u81ea\u7531\u306b\u5909\u3048\u3089\u308c\u308b\u304c\u3001\u30dd\u30fc\u30c8\u3060\u3051\u306f$PORT\u3068\u3057\u306a\u3044\u3068Heroku\u5074\u3067\u8a8d\u8b58\u3055\u308c\u306a\u3044\u306e\u3067\u6ce8\u610f\n\n\u30c7\u30d7\u30ed\u30a4\u65b9\u6cd5\n\nHeroku\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\nhttps://www.heroku.com/home\n\u81ea\u5206\u306e\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u306f\u899a\u3048\u3066\u304a\u304f\uff08cli\u3092\u4f7f\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u751f\u6210\u3067\u3082OK\uff09\n\nDocker\u30a4\u30e1\u30fc\u30b8\u3092Build\u3059\u308b\n\u3053\u3053\u304b\u3089\u306fcli\u3067\u4f5c\u696d\u3092\u3057\u3066\u3044\u304f\n\u307e\u305a\u306f\u3001heroku container:login\u3067\u30ec\u30b8\u30b9\u30c8\u30ea\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\n\u6b21\u306b\u3001docker -f Dockerfile.heroku build\u3067\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3059\u308b\u3002\u30a4\u30e1\u30fc\u30b8\u540d\u306f\u5f8c\u3067\u5909\u3048\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u81ea\u7531\u306b\u3064\u3051\u3066\u3088\u3057\n\nHeroku\u306bPush\u3057\u3066\u30c7\u30d7\u30ed\u30a4\n\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u305f\u5f8c\u306b\u3001Heroku\u306bPush\u3059\u308b\u305f\u3081\u306b\u30a4\u30e1\u30fc\u30b8\u540d\u3092\u66f8\u304d\u63db\u3048\u308b\ndocker tag <image> registry.heroku.com/<app>/<process-type>\n\u3053\u3053\u3067\u306e<app>\u306fheroku\u3067\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u3001<process-type>\u306fweb\u3068\u3057\u3066\u304a\u3051\u3070OK\n\u305d\u3057\u3066\u3001docker push registry.heroku.com/<app>/<process-type>\n\u3053\u308c\u3067\u3001\u6307\u5b9a\u306eURL\u3067\u30b3\u30f3\u30c6\u30ca\u304c\u7acb\u3061\u4e0a\u304c\u308b\uff01\u4fbf\u5229\uff01\u3060\u3051\u3069\u3053\u308c\u3067\u306f\u307e\u3060\u52d5\u304b\u306a\u3044\n\n\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\n\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3084\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\u3092\u30b3\u30fc\u30c9\u306b\u30d9\u30bf\u6253\u3061\u306f\u3055\u3059\u304c\u306b\u3057\u306a\u3044\u306e\u3067\u3001heroku\u306ecli\u3092\u4f7f\u3063\u3066\u8a2d\u5b9a\u3059\u308b\nheroku config:set ACCESS_TOKEN=hogehoge --app appname\n\u3068\u3044\u3063\u305f\u5177\u5408\u306b\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3057\u3066\u3042\u3052\u308b\u3002\n\u3053\u3053\u307e\u3067\u7d42\u308f\u308b\u3068\u30aa\u30a6\u30e0\u8fd4\u3057\u304c\u5b8c\u6210\u3057\u3066\u3044\u308b\u306f\u305a\n## \u6982\u8981\n* line-bot-sdk-python\u3092\u5229\u7528\u3057\u305f\u30aa\u30a6\u30e0\u8fd4\u3057\u3092Docker + Heroku\u3067\u69cb\u7bc9\u3057\u305f\u306e\u3067\u305d\u306e\u5099\u5fd8\u9332\n\n\u4e3b\u306b\u53c2\u8003\u306b\u3057\u305f\u30da\u30fc\u30b8\n> https://devcenter.heroku.com/articles/container-registry-and-runtime\n\n> https://github.com/line/line-bot-sdk-python\n\n\u203b \u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u53d6\u5f97\u3084\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u306e\u53d6\u5f97\u306f\u7d42\u308f\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\uff08\u305f\u304f\u3055\u3093\u306e\u30da\u30fc\u30b8\u304c\u898b\u3064\u304b\u308b\u306e\u3067\u3053\u3053\u3067\u306f\u5272\u611b\uff09\n\n## Docker\u306blinebot\u7528\u306e\u30b5\u30fc\u30d0\u74b0\u5883\u3092\u69cb\u7bc9\n\u901a\u5e38\u306eHeroku\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u3060\u3068\u3001requirement.txt\u3068\u304bprocfile\u3068\u304b\u3082\u308d\u3082\u308d\u30d7\u30c3\u30b7\u30e5\u3059\u308b\u306e\u3060\u3068\u601d\u3046\u304c\u3001\u81ea\u5206\u304cDocker\u3067\u74b0\u5883\u3092\u4f5c\u308c\u308c\u3070\u305d\u308c\u3092\u5229\u7528\u3059\u308b\u307b\u3046\u304c\u697d\u3060\u308d\u3046\u3068\u3044\u3046\u8003\u3048\u3067Docker\u3092\u4f7f\u3063\u305f\u74b0\u5883\u69cb\u7bc9\u3092\u884c\u3046\u3002\n\n### \u30d5\u30a9\u30eb\u30c0\u69cb\u6210\nlinebot\n    \u2502  .dockerignore\n    \u2502  Dockerfile.heroku\n    \u2502\n    \u2514\u2500app\n        \u2502  bot.py\n\n\n```Dockerfile.heroku\nFROM kyobad/miniconda3-alpine:latest\n\nMAINTAINER K.Kato\n\nRUN pip install --upgrade pip \\\n    && conda install -y flask \\\n    && pip install flask gunicorn line-bot-sdk \\\n    && adduser -D botter \\\n    && mkdir /home/botter/app\n\nUSER botter\n\nCOPY ./app /home/botter/app\n\nWORKDIR /home/botter/app\n\nCMD gunicorn -b 0.0.0.0:$PORT bot:app --log-file=-\n```\n\n```bot.py\n###\u516c\u5f0fSDK\u306e\u30b3\u30d4\u30da\u3067\u3059###\nfrom flask import Flask, request, abort\n\nfrom linebot import (\n    LineBotApi, WebhookHandler\n)\nfrom linebot.exceptions import (\n    InvalidSignatureError\n)\nfrom linebot.models import (\n    MessageEvent, TextMessage, TextSendMessage,\n)\n\napp = Flask(__name__)\n\nline_bot_api = LineBotApi('YOUR_CHANNEL_ACCESS_TOKEN')\nhandler = WebhookHandler('YOUR_CHANNEL_SECRET')\n\n\n@app.route(\"/callback\", methods=['POST'])\ndef callback():\n    # get X-Line-Signature header value\n    signature = request.headers['X-Line-Signature']\n\n    # get request body as text\n    body = request.get_data(as_text=True)\n    app.logger.info(\"Request body: \" + body)\n\n    # handle webhook body\n    try:\n        handler.handle(body, signature)\n    except InvalidSignatureError:\n        abort(400)\n\n    return 'OK'\n\n\n@handler.add(MessageEvent, message=TextMessage)\ndef handle_message(event):\n    line_bot_api.reply_message(\n        event.reply_token,\n        TextSendMessage(text=event.message.text))\n\n\nif __name__ == \"__main__\":\n    app.run()\n\n```\n\nDockerfile\u3067\u306f\u3001\u81ea\u5206\u304c\u4f7f\u7528\u3059\u308b\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u3066\u3044\u307e\u3059\u3002\u81ea\u7531\u306b\u5909\u3048\u3089\u308c\u308b\u304c\u3001\u30dd\u30fc\u30c8\u3060\u3051\u306f``$PORT``\u3068\u3057\u306a\u3044\u3068Heroku\u5074\u3067\u8a8d\u8b58\u3055\u308c\u306a\u3044\u306e\u3067\u6ce8\u610f\n\n## \u30c7\u30d7\u30ed\u30a4\u65b9\u6cd5\n### Heroku\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\nhttps://www.heroku.com/home\n\u81ea\u5206\u306e\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u306f\u899a\u3048\u3066\u304a\u304f\uff08cli\u3092\u4f7f\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u751f\u6210\u3067\u3082OK\uff09\n\n### Docker\u30a4\u30e1\u30fc\u30b8\u3092Build\u3059\u308b\n\u3053\u3053\u304b\u3089\u306fcli\u3067\u4f5c\u696d\u3092\u3057\u3066\u3044\u304f\n\u307e\u305a\u306f\u3001``heroku container:login``\u3067\u30ec\u30b8\u30b9\u30c8\u30ea\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\n\u6b21\u306b\u3001``docker -f Dockerfile.heroku build``\u3067\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3059\u308b\u3002\u30a4\u30e1\u30fc\u30b8\u540d\u306f\u5f8c\u3067\u5909\u3048\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u81ea\u7531\u306b\u3064\u3051\u3066\u3088\u3057\n\n### Heroku\u306bPush\u3057\u3066\u30c7\u30d7\u30ed\u30a4\n\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u305f\u5f8c\u306b\u3001Heroku\u306bPush\u3059\u308b\u305f\u3081\u306b\u30a4\u30e1\u30fc\u30b8\u540d\u3092\u66f8\u304d\u63db\u3048\u308b\n``docker tag <image> registry.heroku.com/<app>/<process-type>``\n\u3053\u3053\u3067\u306e``<app>``\u306fheroku\u3067\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u3001``<process-type>``\u306fweb\u3068\u3057\u3066\u304a\u3051\u3070OK\n\u305d\u3057\u3066\u3001``docker push registry.heroku.com/<app>/<process-type>``\n\n\u3053\u308c\u3067\u3001\u6307\u5b9a\u306eURL\u3067\u30b3\u30f3\u30c6\u30ca\u304c\u7acb\u3061\u4e0a\u304c\u308b\uff01\u4fbf\u5229\uff01\u3060\u3051\u3069\u3053\u308c\u3067\u306f\u307e\u3060\u52d5\u304b\u306a\u3044\n\n### \u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\n\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3084\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\u3092\u30b3\u30fc\u30c9\u306b\u30d9\u30bf\u6253\u3061\u306f\u3055\u3059\u304c\u306b\u3057\u306a\u3044\u306e\u3067\u3001heroku\u306ecli\u3092\u4f7f\u3063\u3066\u8a2d\u5b9a\u3059\u308b\n``heroku config:set ACCESS_TOKEN=hogehoge --app appname``\n\u3068\u3044\u3063\u305f\u5177\u5408\u306b\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3057\u3066\u3042\u3052\u308b\u3002\n\n\u3053\u3053\u307e\u3067\u7d42\u308f\u308b\u3068\u30aa\u30a6\u30e0\u8fd4\u3057\u304c\u5b8c\u6210\u3057\u3066\u3044\u308b\u306f\u305a\n", "tags": ["Python", "Heroku", "docker", "linebot"]}