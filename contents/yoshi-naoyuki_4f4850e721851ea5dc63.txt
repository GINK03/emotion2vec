{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u524d\u56de\u306e\u300c\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u3067Hello, World!\u300d\u3092C\u8a00\u8a9e\u306b\u7f6e\u304d\u63db\u3048\u307e\u3057\u305f\u3002\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\u958b\u767a\u74b0\u5883\u306f\u524d\u56de\u3068\u540c\u3058\u74b0\u5883\u3067\u3059\u3002\n\n\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u30ed\u30fc\u30c0\u9818\u57df\nPC\u306e\u96fb\u6e90\u3092\u6295\u5165\u3059\u308b\u3068BIOS\u3068\u547c\u3070\u308c\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u8d77\u52d5\u3057\u307e\u3059\u3002\u3053\u306eBIOS\u306f\u30c7\u30d0\u30a4\u30b9\u306e\u521d\u671f\u5316\u306a\u3069\u304c\u7d42\u308f\u308b\u3068\u3001\u30d6\u30fc\u30c8\u30c7\u30d0\u30a4\u30b9\uff08FDD\u3084HDD\u306a\u3069\uff09\u306eMBR\uff08Master Boot Record\uff09\u3092\u30e1\u30e2\u30ea\u4e0a\u306b\u30ed\u30fc\u30c9\u3057\u3001MBR\u9818\u57df\u306b\u3042\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5236\u5fa1\u3092\u79fb\u3057\u307e\u3059\u3002\u3053\u306eMBR\u9818\u57df\u306b\u3042\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u30ed\u30fc\u30c0\u3068\u547c\u3073\u307e\u3059\u3002\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f5c\u6210\ncode16gcc.h \u306fGCC\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c16BIT\u30e2\u30fc\u30c9\u3067\u3042\u308b\u3053\u3068\u3092\u4f1d\u3048\u307e\u3059\u3002\n\ncode16gcc.h\n#ifndef _CODE16GCC_H_\n#define _CODE16GCC_H_\n__asm__(\".code16gcc\\n\");\n#endif\n\n\n\u30a4\u30f3\u30e9\u30a4\u30f3\u30a2\u30bb\u30f3\u30d6\u30e9\u3092\u4f7f\u7528\u3057\u3066\u3001\u524d\u56de\u3068\u540c\u3058\u3088\u3046\u306b\u300cHello, World!\u300d\u3092\u51fa\u529b\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nhello.c\n#include\"code16gcc.h\"\n\n__asm__(\"jmp main\");\n\n#define TEXT_COLOR_WHITE 0x07\n\nvoid print(const char *s)\n{\n  while(*s) {\n    // BIOS\u306e\u6a5f\u80fd\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u753b\u9762\u306b\u4e00\u6587\u5b57\u51fa\u529b\u3059\u308b\n    __asm__ __volatile__ (\"int 0x10\" : : \"a\"(0x0E00 | *s), \"b\"(TEXT_COLOR_WHITE));\n    s++;\n  }\n}\n\nvoid main(void) {\n  print(\"Hello, World!\");\n\n  while(1) {\n    // CPU\u306e\u52d5\u4f5c\u3092\u505c\u6b62\u3059\u308b\n    __asm__ __volatile__(\"hlt\");\n  }\n}\n\n\nBIOS\u306f\u30e1\u30e2\u30ea\u4e0a\u306e0x7C00\u756a\u5730\u306bMBR\u3092\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\u3088\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u958b\u59cb\u4f4d\u7f6e\u306f0x7C00\u756a\u5730\u3068\u306a\u308a\u307e\u3059\u3002\u30d6\u30fc\u30c8\u30b7\u30b0\u30cb\u30c1\u30e3\uff080xAA55\uff09\u306fMBR\u304c\u6709\u52b9\u3067\u3042\u308b\u3068\u3044\u3046\u7f72\u540d\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3001\u30d6\u30fc\u30c8\u30b7\u30b0\u30cb\u30c1\u30e3\u304c\u306a\u3044\u3068MBR\u304c\u7121\u52b9\u306a\u3082\u306e\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002\u30d6\u30fc\u30c8\u30b7\u30b0\u30cb\u30c1\u30e3\u306fMBR\u306e510\u301c511\u30d0\u30a4\u30c8\u306b\u3042\u308a\u307e\u3059\u3002\u30d6\u30fc\u30c8\u30b7\u30b0\u30cb\u30c1\u30e3\u306e\u30e1\u30e2\u30ea\u4e0a\u306e\u30a2\u30c9\u30ec\u30b9\u306f0x7DFE\u756a\u5730\uff080x7C00 + 510\u30d0\u30a4\u30c8 = 0x7DFE\uff09\u3067\u3059\u3002\n\nlinker.ld\nENTRY(main);\nSECTIONS\n{\n  /* \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u958b\u59cb\u4f4d\u7f6e */\n  . = 0x7C00;\n  .data : { hello.o; }\n  /* \u30d6\u30fc\u30c8\u30b7\u30b0\u30cb\u30c1\u30e3 */\n  . = 0x7DFE;\n  .sig : { SHORT(0xaa55); }\n}\n\n\n\n\u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30ea\u30f3\u30af\u60c5\u5831\uff08\u30c7\u30d0\u30c3\u30af\u60c5\u5831\u306a\u3069\uff09\u3092\u53d6\u308a\u9664\u3044\u305f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb(hello.o)\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n# \u30b3\u30f3\u30d1\u30a4\u30eb\ngcc -m32 -ffreestanding -fno-common -fno-builtin -fomit-frame-pointer -O2 -c -o hello.o hello.c\n\n\u30ea\u30f3\u30ab\u30fc\u3092\u4f7f\u7528\u3057\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb(hello.o)\u304b\u3089\u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb(hello.bin)\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n# \u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\nld -m elf_i386 -s -static -Tlinker.ld -nostdlib -nmagic --oformat binary -o hello.bin hello.o\n\n\u524d\u56de\u3068\u540c\u3058\u3088\u3046\u306b\u30d5\u30ed\u30c3\u30d4\u30fc\u30c7\u30a3\u30b9\u30af\u30a4\u30e1\u30fc\u30b8\u306b\u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002QEMU\u3092\u5b9f\u884c\u3057\u3066\u300cHello, World!\u300d\u3068\u51fa\u529b\u3055\u308c\u305f\u3089\u6210\u529f\u3067\u3059\u3002\n\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\n# Vagrant\u306e\u8d77\u52d5\u3068\u63a5\u7d9a\nhost$ vagrant up\nhost$ vagrant ssh\n\n# \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\nvagrant$ cd /vagrant/hello-c\nvagrant$ rake\n\n\nRakefile\nOBJECT_FILE = 'hello.o'\nBINARY_FILE = 'hello.bin'\nIMAGE_FILE  = 'floppy.img'\nLINKER_FILE = 'linker.ld'\n\ntask :default => :run\n\ntask :run => [ BINARY_FILE, IMAGE_FILE ] do\n  sh \"dd status=noxfer conv=notrunc if=#{BINARY_FILE} of=#{IMAGE_FILE}\"\n  sh \"qemu -boot a -fda #{IMAGE_FILE} -curses -monitor stdio\"\nend\n\nfile BINARY_FILE => [ LINKER_FILE,  OBJECT_FILE ] do\n  sh \"ld -m elf_i386 -s -static -T#{LINKER_FILE} -nostdlib -nmagic --oformat binary -o #{BINARY_FILE} #{OBJECT_FILE}\"\nend\n\nfile IMAGE_FILE do\n  sh \"qemu-img create -f raw #{IMAGE_FILE} 1440K\"\nend\n\nrule '.o' => '.c' do |t|\n  sh \"gcc -masm=intel -m32 -ffreestanding -fno-common -fno-builtin -fomit-frame-pointer -O2 -c -o #{t.name} #{t.source}\"\nend\n\nrule '.s' => '.c' do |t|\n  sh \"gcc -S -masm=intel -m32 -ffreestanding -fno-common -fno-builtin -fomit-frame-pointer -O2 -c -o #{t.name} #{t.source}\"\nend\n\nrequire 'rake/clean'\nCLEAN.include([ '*.bin', '*.img', '*.o' ])\n\n\n\n\u304a\u307e\u3051\nC\u8a00\u8a9e\u3092\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u306b\u5909\u63db\u3057\u3066\u3001\u524d\u56de\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068 hello.c \u304b\u3089 hello.s \u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\ncd /vagrant/hello-c-optimization\nrake hello.s\n\n\u6b21\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u8aad\u307f\u6613\u304f\u3059\u308b\u305f\u3081\u306b\u3001\u4e0d\u8981\u306a\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6(.xxxx)\u3092\u53d6\u308a\u9664\u3044\u3066\u3044\u307e\u3059\u3002\nNASM\u3068GCC\u306e\u51fa\u529b\u3059\u308b\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u3067\u306f\u82e5\u5e72\u69cb\u6587\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\n/vagrant/hello-c-optimization/hello.s\n    .file   \"hello.c\"\n    .intel_syntax noprefix\n    .code16gcc\n\n    jmp main\nprint:\n    push    ebx\n    mov edx, eax                 // EDX \u30ec\u30b8\u30b9\u30bf\u306b\u6587\u5b57\u5217\u306e\u5148\u982d\u30a2\u30c9\u30ec\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\n    movzx   eax, BYTE PTR [eax]  // \u6587\u5b57\u5217\u304b\u3089\u4e00\u6587\u5b57\u3092\u53d6\u5f97\u3057 EAX \u30ec\u30b8\u30b9\u30bf\u306b\u8a2d\u5b9a\u3059\u308b\n    test    al, al\n    je  .L1\n    mov ebx, 7                   // \u6587\u5b57\u8272\uff08\u767d\uff09(0x07)\n.L4:\n    movsx   eax, al\n    or  ah, 14                   // BIOS\u306b\u4e00\u6587\u5b57\u8868\u793a\u3092\u4f1d\u3048\u308b(0x0E)\n    int 0x10                     // BIOS\u306e\u6a5f\u80fd\u3092\u547c\u3073\u51fa\u3059\u3002Call video interrupt.\n    add edx, 1                   // EDX \u30ec\u30b8\u30b9\u30bf\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\n    movzx   eax, BYTE PTR [edx]  // \u6587\u5b57\u5217\u304b\u3089\u4e00\u6587\u5b57\u3092\u53d6\u5f97\u3057 EAX \u30ec\u30b8\u30b9\u30bf\u306b\u8a2d\u5b9a\u3059\u308b\n    test    al, al\n    jne .L4\n.L1:\n    pop ebx\n    ret\n.LC0:\n    .string \"Hello, World!\"\nmain:\n    mov eax, OFFSET FLAT:.LC0    // EAX \u30ec\u30b8\u30b9\u30bf\u306b\u6587\u5b57\u5217\u306e\u5148\u982d\u30a2\u30c9\u30ec\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\n    call    print\n.L8:\n    hlt\n    jmp .L8\n\n\n\n## \u306f\u3058\u3081\u306b\n\n[\u524d\u56de][1]\u306e\u300c\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u3067Hello, World!\u300d\u3092C\u8a00\u8a9e\u306b\u7f6e\u304d\u63db\u3048\u307e\u3057\u305f\u3002\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f[\u3053\u3061\u3089](https://github.com/yoshi-naoyuki/bootloader)\u3067\u3059\u3002\n\n\u958b\u767a\u74b0\u5883\u306f[\u524d\u56de](http://qiita.com/yoshi-naoyuki/items/fb958e3c914c56baef40#2-2)\u3068\u540c\u3058\u74b0\u5883\u3067\u3059\u3002\n\n## \u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u30ed\u30fc\u30c0\u9818\u57df\n\nPC\u306e\u96fb\u6e90\u3092\u6295\u5165\u3059\u308b\u3068BIOS\u3068\u547c\u3070\u308c\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u8d77\u52d5\u3057\u307e\u3059\u3002\u3053\u306eBIOS\u306f\u30c7\u30d0\u30a4\u30b9\u306e\u521d\u671f\u5316\u306a\u3069\u304c\u7d42\u308f\u308b\u3068\u3001\u30d6\u30fc\u30c8\u30c7\u30d0\u30a4\u30b9\uff08FDD\u3084HDD\u306a\u3069\uff09\u306eMBR\uff08Master Boot Record\uff09\u3092\u30e1\u30e2\u30ea\u4e0a\u306b\u30ed\u30fc\u30c9\u3057\u3001MBR\u9818\u57df\u306b\u3042\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5236\u5fa1\u3092\u79fb\u3057\u307e\u3059\u3002\u3053\u306eMBR\u9818\u57df\u306b\u3042\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u30ed\u30fc\u30c0\u3068\u547c\u3073\u307e\u3059\u3002\n\n![\u30d5\u3099\u30fc\u30c8\u30ed\u30fc\u30bf\u3099\u30fc.png](https://qiita-image-store.s3.amazonaws.com/0/33079/9afe755a-7c20-1c1d-8e6d-86494308380d.png \"\u30d5\u3099\u30fc\u30c8\u30ed\u30fc\u30bf\u3099\u30fc.png\")\n\n\n## \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f5c\u6210\n\n`code16gcc.h` \u306fGCC\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c16BIT\u30e2\u30fc\u30c9\u3067\u3042\u308b\u3053\u3068\u3092\u4f1d\u3048\u307e\u3059\u3002\n\n```c:code16gcc.h\n#ifndef _CODE16GCC_H_\n#define _CODE16GCC_H_\n__asm__(\".code16gcc\\n\");\n#endif\n```\n\n\u30a4\u30f3\u30e9\u30a4\u30f3\u30a2\u30bb\u30f3\u30d6\u30e9\u3092\u4f7f\u7528\u3057\u3066\u3001[\u524d\u56de](http://qiita.com/yoshi-naoyuki/items/fb958e3c914c56baef40#2-6)\u3068\u540c\u3058\u3088\u3046\u306b\u300cHello, World!\u300d\u3092\u51fa\u529b\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```c:hello.c\n#include\"code16gcc.h\"\n\n__asm__(\"jmp main\");\n\n#define TEXT_COLOR_WHITE 0x07\n\nvoid print(const char *s)\n{\n  while(*s) {\n    // BIOS\u306e\u6a5f\u80fd\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u753b\u9762\u306b\u4e00\u6587\u5b57\u51fa\u529b\u3059\u308b\n    __asm__ __volatile__ (\"int 0x10\" : : \"a\"(0x0E00 | *s), \"b\"(TEXT_COLOR_WHITE));\n    s++;\n  }\n}\n\nvoid main(void) {\n  print(\"Hello, World!\");\n\n  while(1) {\n    // CPU\u306e\u52d5\u4f5c\u3092\u505c\u6b62\u3059\u308b\n    __asm__ __volatile__(\"hlt\");\n  }\n}\n```\n\nBIOS\u306f\u30e1\u30e2\u30ea\u4e0a\u306e0x7C00\u756a\u5730\u306bMBR\u3092\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\u3088\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u958b\u59cb\u4f4d\u7f6e\u306f0x7C00\u756a\u5730\u3068\u306a\u308a\u307e\u3059\u3002\u30d6\u30fc\u30c8\u30b7\u30b0\u30cb\u30c1\u30e3\uff080xAA55\uff09\u306fMBR\u304c\u6709\u52b9\u3067\u3042\u308b\u3068\u3044\u3046\u7f72\u540d\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3001\u30d6\u30fc\u30c8\u30b7\u30b0\u30cb\u30c1\u30e3\u304c\u306a\u3044\u3068MBR\u304c\u7121\u52b9\u306a\u3082\u306e\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002\u30d6\u30fc\u30c8\u30b7\u30b0\u30cb\u30c1\u30e3\u306fMBR\u306e510\u301c511\u30d0\u30a4\u30c8\u306b\u3042\u308a\u307e\u3059\u3002\u30d6\u30fc\u30c8\u30b7\u30b0\u30cb\u30c1\u30e3\u306e\u30e1\u30e2\u30ea\u4e0a\u306e\u30a2\u30c9\u30ec\u30b9\u306f0x7DFE\u756a\u5730\uff080x7C00 + 510\u30d0\u30a4\u30c8 = 0x7DFE\uff09\u3067\u3059\u3002\n\n```ld:linker.ld\nENTRY(main);\nSECTIONS\n{\n  /* \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u958b\u59cb\u4f4d\u7f6e */\n  . = 0x7C00;\n  .data : { hello.o; }\n  /* \u30d6\u30fc\u30c8\u30b7\u30b0\u30cb\u30c1\u30e3 */\n  . = 0x7DFE;\n  .sig : { SHORT(0xaa55); }\n}\n```\n\n## \u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n\n\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30ea\u30f3\u30af\u60c5\u5831\uff08\u30c7\u30d0\u30c3\u30af\u60c5\u5831\u306a\u3069\uff09\u3092\u53d6\u308a\u9664\u3044\u305f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb(hello.o)\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n# \u30b3\u30f3\u30d1\u30a4\u30eb\ngcc -m32 -ffreestanding -fno-common -fno-builtin -fomit-frame-pointer -O2 -c -o hello.o hello.c\n```\n\n\u30ea\u30f3\u30ab\u30fc\u3092\u4f7f\u7528\u3057\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb(hello.o)\u304b\u3089\u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb(hello.bin)\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n# \u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\nld -m elf_i386 -s -static -Tlinker.ld -nostdlib -nmagic --oformat binary -o hello.bin hello.o\n```\n\n[\u524d\u56de](http://qiita.com/yoshi-naoyuki/items/fb958e3c914c56baef40#2-8)\u3068\u540c\u3058\u3088\u3046\u306b\u30d5\u30ed\u30c3\u30d4\u30fc\u30c7\u30a3\u30b9\u30af\u30a4\u30e1\u30fc\u30b8\u306b\u30d0\u30a4\u30ca\u30ea\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002QEMU\u3092\u5b9f\u884c\u3057\u3066\u300cHello, World!\u300d\u3068\u51fa\u529b\u3055\u308c\u305f\u3089\u6210\u529f\u3067\u3059\u3002\n\n![kobito.1402210360.448893.png](https://qiita-image-store.s3.amazonaws.com/0/33079/fe27c307-11e7-1e64-24ab-be4916bad9a0.png \"kobito.1402210360.448893.png\")\n\n\n## \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\n\n```bash\n# Vagrant\u306e\u8d77\u52d5\u3068\u63a5\u7d9a\nhost$ vagrant up\nhost$ vagrant ssh\n\n# \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\nvagrant$ cd /vagrant/hello-c\nvagrant$ rake\n```\n\n```ruby:Rakefile\nOBJECT_FILE = 'hello.o'\nBINARY_FILE = 'hello.bin'\nIMAGE_FILE  = 'floppy.img'\nLINKER_FILE = 'linker.ld'\n\ntask :default => :run\n\ntask :run => [ BINARY_FILE, IMAGE_FILE ] do\n  sh \"dd status=noxfer conv=notrunc if=#{BINARY_FILE} of=#{IMAGE_FILE}\"\n  sh \"qemu -boot a -fda #{IMAGE_FILE} -curses -monitor stdio\"\nend\n\nfile BINARY_FILE => [ LINKER_FILE,  OBJECT_FILE ] do\n  sh \"ld -m elf_i386 -s -static -T#{LINKER_FILE} -nostdlib -nmagic --oformat binary -o #{BINARY_FILE} #{OBJECT_FILE}\"\nend\n\nfile IMAGE_FILE do\n  sh \"qemu-img create -f raw #{IMAGE_FILE} 1440K\"\nend\n\nrule '.o' => '.c' do |t|\n  sh \"gcc -masm=intel -m32 -ffreestanding -fno-common -fno-builtin -fomit-frame-pointer -O2 -c -o #{t.name} #{t.source}\"\nend\n\nrule '.s' => '.c' do |t|\n  sh \"gcc -S -masm=intel -m32 -ffreestanding -fno-common -fno-builtin -fomit-frame-pointer -O2 -c -o #{t.name} #{t.source}\"\nend\n\nrequire 'rake/clean'\nCLEAN.include([ '*.bin', '*.img', '*.o' ])\n```\n\n## \u304a\u307e\u3051\n\nC\u8a00\u8a9e\u3092\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u306b\u5909\u63db\u3057\u3066\u3001[\u524d\u56de](http://qiita.com/yoshi-naoyuki/items/fb958e3c914c56baef40#2-6)\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068 `hello.c` \u304b\u3089 `hello.s` \u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n```bash\ncd /vagrant/hello-c-optimization\nrake hello.s\n```\n\n\u6b21\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u8aad\u307f\u6613\u304f\u3059\u308b\u305f\u3081\u306b\u3001\u4e0d\u8981\u306a\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6(.xxxx)\u3092\u53d6\u308a\u9664\u3044\u3066\u3044\u307e\u3059\u3002\nNASM\u3068GCC\u306e\u51fa\u529b\u3059\u308b\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u3067\u306f\u82e5\u5e72\u69cb\u6587\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\n\n```nasm:/vagrant/hello-c-optimization/hello.s\n    .file   \"hello.c\"\n    .intel_syntax noprefix\n    .code16gcc\n\n    jmp main\nprint:\n    push    ebx\n    mov edx, eax                 // EDX \u30ec\u30b8\u30b9\u30bf\u306b\u6587\u5b57\u5217\u306e\u5148\u982d\u30a2\u30c9\u30ec\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\n    movzx   eax, BYTE PTR [eax]  // \u6587\u5b57\u5217\u304b\u3089\u4e00\u6587\u5b57\u3092\u53d6\u5f97\u3057 EAX \u30ec\u30b8\u30b9\u30bf\u306b\u8a2d\u5b9a\u3059\u308b\n    test    al, al\n    je  .L1\n    mov ebx, 7                   // \u6587\u5b57\u8272\uff08\u767d\uff09(0x07)\n.L4:\n    movsx   eax, al\n    or  ah, 14                   // BIOS\u306b\u4e00\u6587\u5b57\u8868\u793a\u3092\u4f1d\u3048\u308b(0x0E)\n    int 0x10                     // BIOS\u306e\u6a5f\u80fd\u3092\u547c\u3073\u51fa\u3059\u3002Call video interrupt.\n    add edx, 1                   // EDX \u30ec\u30b8\u30b9\u30bf\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\n    movzx   eax, BYTE PTR [edx]  // \u6587\u5b57\u5217\u304b\u3089\u4e00\u6587\u5b57\u3092\u53d6\u5f97\u3057 EAX \u30ec\u30b8\u30b9\u30bf\u306b\u8a2d\u5b9a\u3059\u308b\n    test    al, al\n    jne .L4\n.L1:\n    pop ebx\n    ret\n.LC0:\n    .string \"Hello, World!\"\nmain:\n    mov eax, OFFSET FLAT:.LC0    // EAX \u30ec\u30b8\u30b9\u30bf\u306b\u6587\u5b57\u5217\u306e\u5148\u982d\u30a2\u30c9\u30ec\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\n    call    print\n.L8:\n    hlt\n    jmp .L8\n```\n\n[1]: http://qiita.com/yoshi-naoyuki/items/fb958e3c914c56baef40\n", "tags": ["C", "assembly", "Ruby", "vagrant"]}