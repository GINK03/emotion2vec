{"tags": ["\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc", "Emacs"], "context": "Emacs\u3092\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3068\u3057\u3066\u4f7f\u3046\n\u3053\u306e\u8a18\u4e8b\u306fEmacs\u306eAdventCalandar2016\u306e20\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u524d\u65e5\u306e\u8a18\u4e8b\u306fkaz-yos\u3055\u3093\u306emu4e\u3067\u30e1\u30fc\u30eb\u3067\u3057\u305f\u3002\n\u3053\u306e\u8a18\u4e8b\u306b\u89e6\u767a\u3055\u308c\u3066\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u304f\u306b\u81f3\u308a\u307e\u3057\u305f\u3002\nvim\u3092\u30d1\u30a4\u30d7\u306b\u3059\u308b - \u4f59\u767d\u306e\u66f8\u304d\u306a\u3050\u308a\n\u300cEmacs\u3060\u3063\u3066\u540c\u3058\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u306f\uff1f\u300d\u3068\u8003\u3048\u307e\u3057\u305f  \n\n\u307e\u305a\u3001Vim\u3067\u306f\u30d1\u30a4\u30d7\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u6e21\u3057\u3066\u3044\u307e\u3057\u305f\u30021\nEmacs\u3067\u3082\u30d1\u30a4\u30d7\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u6e21\u305b\u306a\u3051\u308c\u3070\u8a71\u306b\u306a\u308a\u307e\u305b\u3093\u3002\n\u305d\u3053\u3067\u5358\u7d14\u306b\u30d1\u30a4\u30d7\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u6e21\u3057\u305f\u307f\u305f\u7d50\u679c......\n$ echo \"Hello! \\nOneLinerEmacs\" > oneliner.txt # \u30b5\u30f3\u30d7\u30eb\u30c6\u30ad\u30b9\u30c8\u306e\u4f5c\u6210\n$ cat oneliner.txt | emacs\nemacs: standard input is not a tty\n\n...\n......\n\u3069\u3046\u3084\u3089\u6a19\u6e96\u5165\u51fa\u529b\u304c\u6e21\u305b\u306a\u3044\u3088\u3046\u3067\u3059......\n\u3057\u304b\u3057\u3001\u3053\u308c\u3067\u7d42\u308f\u308a\u306b\u3059\u308b\u308f\u3051\u306b\u306f\u3044\u304b\u306a\u3044\u3067\u3059\u3002  \n\u300c\u305d\u308c\u306a\u3089\u3001Emacs\u306b\u6a19\u6e96\u5165\u51fa\u529b\u3092\u6e21\u3059\u305f\u3081\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u308b\u306e\u3067\u306f\u300d\u3068\u8003\u3048\u3001GNU\u306eEmacs\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u6f01\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002  \nGNU Emacs Manual: Initial Options\n\n\u2018-batch\u2019\n\u2018--batch\u2019\nRun Emacs in batch mode. Batch mode is used for running programs written in Emacs Lisp from shell scripts, makefiles, and so on. To invoke a Lisp program, use the \u2018-batch\u2019 option in conjunction with one or more of \u2018-l\u2019, \u2018-f\u2019 or \u2018--eval\u2019 (see Action Arguments). See Command Example, for an example.\n\n-batch\u3068\u3044\u3046\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\u3068\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306a\u3069\u304b\u3089EmacsLisp\u3092\u5b9f\u884c\u3067\u304d\u308b\u3068\u306e\u3053\u3068\u3002\n\u307e\u305f\u3001Action Arguments\u3068\u3044\u3046\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3044\u308d\u3044\u308d\u3067\u304d\u308b\u3068\u3042\u308b\u3002\nGNU Emacs Manual: Action Arguments\n\u305d\u3057\u3066\u3001\u3054\u4e01\u5be7\u306b\u30b5\u30f3\u30d7\u30eb\u307e\u3067\u7528\u610f\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3057\u305f  \nGNU Emacs Manual: Command Argument Example\n\n$ emacs --batch foo.c -l hack-c -f save-buffer >& log\n\n\nEmacs\u3067foo.c\u3092\u8aad\u307f\u8fbc\u307f\u3001hack-c.el\u3092\u8aad\u307f\u8fbc\u307fsave-buffer\u3068\u3044\u3046\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u3002\u305d\u3057\u3066log\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3092\u884c\u3044\u307e\u3059\u3002\n-l\u3068-f\u306f\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u3084\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n\n\n\u5f15\u6570\n\u6982\u8981\n\n\n\n\n-l\n\u6307\u5b9a\u3055\u308c\u305fElisp\u3092\u30ed\u30fc\u30c9\u3059\u308b\u3002\n\n\n-f\n\u6307\u5b9a\u3055\u308c\u305fEmacsLisp\u306e\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n\n\n\u4ed6\u306b\u3082\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u4f7f\u3048\u305d\u3046\u3067\u3059\u3002\n\n\n\n\u5f15\u6570\n\u6982\u8981\n\n\n\n\n--eval\n\u5f15\u6570\u306b\u6307\u5b9a\u3057\u305fElisp\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n\n\n\u3053\u3053\u307e\u3067\u3092\u8e0f\u307e\u3048\u3066oneliner.txt\u306e\u4e2d\u8eab\u3092log\u306b\u51fa\u529b\u3059\u308b\u3068\u3044\u3046\u5358\u7d14\u306a\u3082\u306e\u3092\u307e\u305a\u66f8\u3044\u3066\u307f\u307e\u3059\u2026\u2026\n$ emacs --batch oneliner.txt --eval=\"(princ (buffer-string))\" >& log\n$ cat log\nHello \nOneLinerEmacs\n\n\u3053\u308c\u3067\u3088\u3046\u3084\u304fEmacs\u3067\u30c6\u30ad\u30b9\u30c8\u51e6\u7406\u3092\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3067\u304a\u3053\u306a\u3046\u6e96\u5099\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u3051\u308c\u3069\u3082\u3001\u3053\u306e\u5f62\u3067\u306fcat\u3084echo\u306a\u3069\u3092\u30d1\u30a4\u30d7\u3067\u6e21\u3057\u305f\u6a19\u6e96\u5165\u51fa\u529b\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u306fbuffer-string\u304c\u73fe\u5728\u306e\u30d0\u30c3\u30d5\u30a1\u306e\u5185\u5bb9\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u8fd4\u3059\u3059\u308b\u3068\u3044\u3046\u95a2\u6570\u3060\u304b\u3089\u3067\u3059\u3002\n\u305d\u3053\u3067Elisp\u3067\u6a19\u6e96\u5165\u51fa\u529b\u3092\u53d7\u3051\u53d6\u3063\u3066\u30d0\u30c3\u30d5\u30a1\u306b\u5165\u529b\u3057\u3001\u6700\u5f8c\u306b\u305d\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u51fa\u529b\u3059\u308b\u3068\u3044\u3046\u95a2\u6570\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\nelisp.el\n(defun get-stdin ()\n(let ((buf (generate-new-buffer \"buf\")))\n    (set-buffer buf)\n    (condition-case nil\n        (let ((line))\n          (while (setq line (read-string \"\"))\n            (insert line \"\\n\")))\n      (error nil))\n     (buffer-string)))\n\n\n\u3053\u3046\u306a\u308b\u3060\u308d\u3046\u3067\u3057\u3087\u3046\u304b\u3002\n1\u884c\u3060\u3051\u3060\u3063\u305f\u3089(read-string \"\")\u3067\u3082\u53d7\u3051\u53d6\u308c\u308b\u306e\u3060\u3051\u308c\u3069\u3082\u3001\u8907\u6570\u884c\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306bwhile\u3067\u56de\u3057\u3066\u3044\u308b\u3002\n\u307e\u305f\u3001condition-case\u306fEOF\u306b\u3088\u308b\u30a8\u30e9\u30fc\u306e\u5bfe\u7b56\u3067\u3059\u3002\n\u3053\u308c\u3092\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u300c\u6587\u5b57\u5217\u306e\u7f6e\u304d\u63db\u3048\u3092Elisp\u3067\u304a\u3053\u306a\u3044\u3001\u6700\u5f8c\u306b\u7f6e\u304d\u63db\u3048\u305f\u884c\u3092grep\u3067\u62bd\u51fa\u3059\u308b\u300d\u3068\u3044\u3046\u306e\u3092\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n\u307e\u305a\u306f\u9069\u5f53\u306b\u5358\u8a9e\u3092\u4e26\u3079\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n\nhello.txt\nGo\nHello\nYeah\nNewYear\nOneLiner\n\n\n\n$ cat hello.txt | emacs --batch -l ~/.emacs.d/elisp/get-input.el --eval='(princ (replace-regexp-in-string \"Hello\" \"Go\" (get-stdin)))' | grep Go\nGo\nGo\n\n\u3053\u308c\u3067Emacs\u3067\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u304c\u66f8\u3051\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3088\u306d\u2026\u2026\uff1f\n\u666e\u6bb5\u5229\u7528\u3059\u308b\u95a2\u6570\u3092\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u95a2\u6570\u3068\u3057\u3066Elisp\u3068\u3057\u3066\u66f8\u3044\u3066\u304a\u3051\u3070\u3001Emacs\u4e0a\u3067\u3082Bash\u4e0a\u3067\u3082\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3059\uff01\n\u3044\u3084\u3042\u3001Emacs\u306f\u307e\u308b\u3067\u30b9\u30a4\u30b9\u30a2\u30fc\u30df\u30fc\u30ca\u30a4\u30d5\u3067\u3059\u306d\uff01\n\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\n\u3053\u3053\u307e\u3067\u66f8\u3044\u3066\u304a\u3044\u3066\u3001\u6700\u5f8c\u306b\u30a2\u30ec\u3067\u3059\u304c\u2026\u2026\n\u3053\u3053\u307e\u3067\u3057\u3066Elisp\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u4f7f\u3044\u305f\u3044\u306a\u3089eshell\u3092\u4f7f\u3044\u307e\u3059\u3088\u306d\u2026\u2026\u3002\n\u3053\u3053\u307e\u3067\u3067\u300c\u9762\u767d\u305d\u3046\uff01\u300d\u3068\u601d\u3063\u3066\u304f\u308c\u305f\u65b9\u306fElisp\u3092\u5b9f\u884c\u3067\u304d\u308b\u30b7\u30a7\u30eb\u74b0\u5883\u3067\u3042\u308beshell\u3092\u4f7f\u3046\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\u2026\u2026\u3002\n\n\u4fee\u6b63\uff1a\u76f4\u3057\u305f\u306f\u305a\u306e\u7b87\u6240\u304c\u4fee\u6b63\u3067\u304d\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u4fee\u6b63\u3092\u52a0\u3048\u307e\u3057\u305f\u3002\u7de8\u96c6\u5c65\u6b74\u304c\u7121\u99c4\u306b\u5897\u3048\u3066\u3057\u307e\u3063\u3066\u3059\u3044\u307e\u305b\u3093\u2026\u2026\u3002\n\n\n\n\n-e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u306a\u3044\u3068\u30c0\u30e1\u306a\u3088\u3046\u3067\u3059\u3002\u00a0\u21a9\n\n\n\nEmacs\u3092\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3068\u3057\u3066\u4f7f\u3046\n\n\u3053\u306e\u8a18\u4e8b\u306f[Emacs\u306eAdventCalandar2016](http://qiita.com/advent-calendar/2016/emacs)\u306e20\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u524d\u65e5\u306e\u8a18\u4e8b\u306fkaz-yos\u3055\u3093\u306e[mu4e\u3067\u30e1\u30fc\u30eb](http://qiita.com/kaz-yos/items/164f03c7bba401646783)\u3067\u3057\u305f\u3002\n\n\u3053\u306e\u8a18\u4e8b\u306b\u89e6\u767a\u3055\u308c\u3066\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u304f\u306b\u81f3\u308a\u307e\u3057\u305f\u3002\n[vim\u3092\u30d1\u30a4\u30d7\u306b\u3059\u308b - \u4f59\u767d\u306e\u66f8\u304d\u306a\u3050\u308a](http://auewe.hatenablog.com/entry/2016/12/03/001000)\n\n\u300cEmacs\u3060\u3063\u3066\u540c\u3058\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u306f\uff1f\u300d\u3068\u8003\u3048\u307e\u3057\u305f :laughing:   \n\n---\n\n\u307e\u305a\u3001Vim\u3067\u306f\u30d1\u30a4\u30d7\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u6e21\u3057\u3066\u3044\u307e\u3057\u305f\u3002[^1]\n\nEmacs\u3067\u3082\u30d1\u30a4\u30d7\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u6e21\u305b\u306a\u3051\u308c\u3070\u8a71\u306b\u306a\u308a\u307e\u305b\u3093\u3002\n\n\u305d\u3053\u3067\u5358\u7d14\u306b\u30d1\u30a4\u30d7\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u6e21\u3057\u305f\u307f\u305f\u7d50\u679c......\n\n```bash\n$ echo \"Hello! \\nOneLinerEmacs\" > oneliner.txt # \u30b5\u30f3\u30d7\u30eb\u30c6\u30ad\u30b9\u30c8\u306e\u4f5c\u6210\n$ cat oneliner.txt | emacs\nemacs: standard input is not a tty\n```\n\n...\n\n......\n\n\u3069\u3046\u3084\u3089\u6a19\u6e96\u5165\u51fa\u529b\u304c\u6e21\u305b\u306a\u3044\u3088\u3046\u3067\u3059......\n\n\u3057\u304b\u3057\u3001\u3053\u308c\u3067\u7d42\u308f\u308a\u306b\u3059\u308b\u308f\u3051\u306b\u306f\u3044\u304b\u306a\u3044\u3067\u3059\u3002  \n\n\u300c\u305d\u308c\u306a\u3089\u3001Emacs\u306b\u6a19\u6e96\u5165\u51fa\u529b\u3092\u6e21\u3059\u305f\u3081\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u308b\u306e\u3067\u306f:thinking:\u300d\u3068\u8003\u3048\u3001GNU\u306eEmacs\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u6f01\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002  \n\n[GNU Emacs Manual: Initial Options](https://www.gnu.org/software/emacs/manual/html_node/emacs/Initial-Options.html)\n\n>\n\u2018-batch\u2019\n\u2018--batch\u2019\nRun Emacs in batch mode. Batch mode is used for running programs written in Emacs Lisp from shell scripts, makefiles, and so on. To invoke a Lisp program, use the \u2018-batch\u2019 option in conjunction with one or more of \u2018-l\u2019, \u2018-f\u2019 or \u2018--eval\u2019 (see Action Arguments). See Command Example, for an example.\n>\n\n`-batch`\u3068\u3044\u3046\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\u3068\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306a\u3069\u304b\u3089EmacsLisp\u3092\u5b9f\u884c\u3067\u304d\u308b\u3068\u306e\u3053\u3068\u3002\n\u307e\u305f\u3001Action Arguments\u3068\u3044\u3046\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3044\u308d\u3044\u308d\u3067\u304d\u308b\u3068\u3042\u308b\u3002\n\n[GNU Emacs Manual: Action Arguments]\n(https://www.gnu.org/software/emacs/manual/html_node/emacs/Action-Arguments.html#Action-Arguments)\n\n\u305d\u3057\u3066\u3001\u3054\u4e01\u5be7\u306b\u30b5\u30f3\u30d7\u30eb\u307e\u3067\u7528\u610f\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3057\u305f :clap: \n\n[GNU Emacs Manual: Command Argument Example](https://www.gnu.org/software/emacs/manual/html_node/emacs/Command-Example.html#Command-Example)\n>\n```bash\n$ emacs --batch foo.c -l hack-c -f save-buffer >& log\n```\n>\n\n**Emacs\u3067`foo.c`\u3092\u8aad\u307f\u8fbc\u307f\u3001`hack-c.el`\u3092\u8aad\u307f\u8fbc\u307f`save-buffer`\u3068\u3044\u3046\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u3002\u305d\u3057\u3066`log`\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3092\u884c\u3044\u307e\u3059\u3002**\n\n`-l`\u3068`-f`\u306f\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u3084\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n| \u5f15\u6570| \u6982\u8981 |\n|:-:|:-:|\n| -l | \u6307\u5b9a\u3055\u308c\u305fElisp\u3092\u30ed\u30fc\u30c9\u3059\u308b\u3002 |\n| -f | \u6307\u5b9a\u3055\u308c\u305fEmacsLisp\u306e\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u3002 |\n\n\n\u4ed6\u306b\u3082\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u4f7f\u3048\u305d\u3046\u3067\u3059\u3002\n\n| \u5f15\u6570| \u6982\u8981 |\n|:-:|:-:|\n| --eval | \u5f15\u6570\u306b\u6307\u5b9a\u3057\u305fElisp\u3092\u5b9f\u884c\u3059\u308b\u3002 |\n\n\n\u3053\u3053\u307e\u3067\u3092\u8e0f\u307e\u3048\u3066oneliner.txt\u306e\u4e2d\u8eab\u3092log\u306b\u51fa\u529b\u3059\u308b\u3068\u3044\u3046\u5358\u7d14\u306a\u3082\u306e\u3092\u307e\u305a\u66f8\u3044\u3066\u307f\u307e\u3059\u2026\u2026\n\n```bash\n$ emacs --batch oneliner.txt --eval=\"(princ (buffer-string))\" >& log\n$ cat log\nHello \nOneLinerEmacs\n```\n\n\u3053\u308c\u3067\u3088\u3046\u3084\u304fEmacs\u3067\u30c6\u30ad\u30b9\u30c8\u51e6\u7406\u3092\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3067\u304a\u3053\u306a\u3046\u6e96\u5099\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u3051\u308c\u3069\u3082\u3001\u3053\u306e\u5f62\u3067\u306f`cat`\u3084`echo`\u306a\u3069\u3092\u30d1\u30a4\u30d7\u3067\u6e21\u3057\u305f\u6a19\u6e96\u5165\u51fa\u529b\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u305d\u308c\u306f`buffer-string`\u304c\u73fe\u5728\u306e\u30d0\u30c3\u30d5\u30a1\u306e\u5185\u5bb9\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u8fd4\u3059\u3059\u308b\u3068\u3044\u3046\u95a2\u6570\u3060\u304b\u3089\u3067\u3059\u3002\n\n\u305d\u3053\u3067Elisp\u3067\u6a19\u6e96\u5165\u51fa\u529b\u3092\u53d7\u3051\u53d6\u3063\u3066\u30d0\u30c3\u30d5\u30a1\u306b\u5165\u529b\u3057\u3001\u6700\u5f8c\u306b\u305d\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u51fa\u529b\u3059\u308b\u3068\u3044\u3046\u95a2\u6570\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\n```el:elisp.el\n(defun get-stdin ()\n(let ((buf (generate-new-buffer \"buf\")))\n    (set-buffer buf)\n    (condition-case nil\n        (let ((line))\n          (while (setq line (read-string \"\"))\n            (insert line \"\\n\")))\n      (error nil))\n     (buffer-string)))\n```\n\n\u3053\u3046\u306a\u308b\u3060\u308d\u3046\u3067\u3057\u3087\u3046\u304b\u3002\n\n1\u884c\u3060\u3051\u3060\u3063\u305f\u3089`(read-string \"\")`\u3067\u3082\u53d7\u3051\u53d6\u308c\u308b\u306e\u3060\u3051\u308c\u3069\u3082\u3001\u8907\u6570\u884c\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b`while`\u3067\u56de\u3057\u3066\u3044\u308b\u3002\n\u307e\u305f\u3001`condition-case`\u306fEOF\u306b\u3088\u308b\u30a8\u30e9\u30fc\u306e\u5bfe\u7b56\u3067\u3059\u3002\n\n\u3053\u308c\u3092\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u300c\u6587\u5b57\u5217\u306e\u7f6e\u304d\u63db\u3048\u3092Elisp\u3067\u304a\u3053\u306a\u3044\u3001\u6700\u5f8c\u306b\u7f6e\u304d\u63db\u3048\u305f\u884c\u3092grep\u3067\u62bd\u51fa\u3059\u308b\u300d\u3068\u3044\u3046\u306e\u3092\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u9069\u5f53\u306b\u5358\u8a9e\u3092\u4e26\u3079\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```text:hello.txt\nGo\nHello\nYeah\nNewYear\nOneLiner\n\n```\n\n```bash\n$ cat hello.txt | emacs --batch -l ~/.emacs.d/elisp/get-input.el --eval='(princ (replace-regexp-in-string \"Hello\" \"Go\" (get-stdin)))' | grep Go\nGo\nGo\n```\n\n\u3053\u308c\u3067Emacs\u3067\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u304c\u66f8\u3051\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3088\u306d\u2026\u2026\uff1f\n\n\u666e\u6bb5\u5229\u7528\u3059\u308b\u95a2\u6570\u3092\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u95a2\u6570\u3068\u3057\u3066Elisp\u3068\u3057\u3066\u66f8\u3044\u3066\u304a\u3051\u3070\u3001Emacs\u4e0a\u3067\u3082Bash\u4e0a\u3067\u3082\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3059\uff01\n\n\u3044\u3084\u3042\u3001Emacs\u306f\u307e\u308b\u3067\u30b9\u30a4\u30b9\u30a2\u30fc\u30df\u30fc\u30ca\u30a4\u30d5\u3067\u3059\u306d\uff01\n\n\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\n\n\u3053\u3053\u307e\u3067\u66f8\u3044\u3066\u304a\u3044\u3066\u3001\u6700\u5f8c\u306b\u30a2\u30ec\u3067\u3059\u304c\u2026\u2026\n\n**\u3053\u3053\u307e\u3067\u3057\u3066Elisp\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u4f7f\u3044\u305f\u3044\u306a\u3089eshell\u3092\u4f7f\u3044\u307e\u3059\u3088\u306d\u2026\u2026\u3002**\n\n\u3053\u3053\u307e\u3067\u3067\u300c\u9762\u767d\u305d\u3046\uff01\u300d\u3068\u601d\u3063\u3066\u304f\u308c\u305f\u65b9\u306fElisp\u3092\u5b9f\u884c\u3067\u304d\u308b\u30b7\u30a7\u30eb\u74b0\u5883\u3067\u3042\u308beshell\u3092\u4f7f\u3046\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\u2026\u2026\u3002\n\n\n---\n[^1]: -e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u306a\u3044\u3068\u30c0\u30e1\u306a\u3088\u3046\u3067\u3059\u3002\n\n\u4fee\u6b63\uff1a\u76f4\u3057\u305f\u306f\u305a\u306e\u7b87\u6240\u304c\u4fee\u6b63\u3067\u304d\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u4fee\u6b63\u3092\u52a0\u3048\u307e\u3057\u305f\u3002\u7de8\u96c6\u5c65\u6b74\u304c\u7121\u99c4\u306b\u5897\u3048\u3066\u3057\u307e\u3063\u3066\u3059\u3044\u307e\u305b\u3093\u2026\u2026\u3002\n"}