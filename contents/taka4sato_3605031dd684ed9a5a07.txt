{"tags": ["lambda", "elb"], "context": " More than 1 year has passed since last update.\n\n\u524d\u66f8\u304d\nAmazon Loadbalancer(ELB)\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001\u300eELB\u306eAccess log\u3092\u89e3\u6790\u3057\u3066\u7279\u5b9a\u306e\u6761\u4ef6(\u4f8b\u3048\u3070Status code != 200)\u304c\u5b58\u5728\u3059\u308c\u3070Alarm\u3092\u98db\u3070\u3059\u300f\u3068\u8a00\u3046\u4e8b\u3092\u3084\u308a\u305f\u3044\u4e8b\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002  \nStatus Code\u3067\u3042\u308c\u3070CloudWatch\u306eHTTPCode_Backend_5XX\u7b49\u306eMetrics\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u51fa\u6765\u307e\u3059(ELB\u306eCloud Watch Metric\u306f\u3053\u3053\u53c2\u7167)\u3002\u3053\u306eMetrics\u306e\u6761\u4ef6\u306b\u5f53\u3066\u306f\u307e\u3063\u305f\u6642\u306b\u3001email\u7b49\u306eAlarm\u3092\u98db\u3070\u3059\u69d8\u306bAWS SNS\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u826f\u3044\u3067\u3059\u3002\u304c\u3001\u3053\u308c\u3067Alarm\u901a\u77e5\u306f\u53d7\u3051\u53d6\u308c\u308b\u3093\u3067\u3059\u304c\u3001Request\u306e\u8a73\u7d30(URL\u3068\u304bRequest\u5143\u306eIP\u3068\u304b)\u3092\u78ba\u8a8d\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u3068\u304d\u306b\u3001S3\u306b\u66f8\u304d\u51fa\u3055\u308c\u3066\u3044\u308bELB\u306e\u751fAccess log\u3092\u307f\u308b\u3057\u304b\u6709\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u3001\u624b\u4f5c\u696d\u3067\u3084\u308d\u3046\u3068\u3059\u308b\u3068\u7d50\u69cb\u82e6\u75db\u3067\u3059\u3002\u4f55\u6545\u304bLog file\u304c\u30bf\u30d6\u533a\u5207\u308a\u3067\u3082\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u3082\u7121\u304f\u3001\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u3059\u3057\u3001\u3001\u3001\u3002  \nELB\u304cS3\u306bLog\u3092\u66f8\u304d\u51fa\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3001AWS Lambda\u3092\u8d77\u52d5\u3055\u305b\u3066\u3001Lambda\u306enode.js\u5185\u3067Access log\u3092\u89e3\u6790\u3057\u3066\u3001\u5fc5\u8981\u306a\u60c5\u5831\u3092\u5207\u308a\u51fa\u3057\u3066Email\u306e\u672c\u6587\u306b\u542b\u3081\u308c\u3070\u697d\u30b8\u30e3\u30f3\u3001\u3068\u601d\u3044\u3001\u305d\u306e\u8a2d\u5b9a\u624b\u9806\u3084Lambda\u306escript\u3092\u30c1\u30e9\u88cf\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u8a2d\u5b9a\u3067\u306e\u30cf\u30de\u308a\u7b87\u6240\n\nELB\u306eLog\u304cS3\u306b\u5410\u304d\u3060\u3055\u308c\u308bAWS Region\u3068\u540c\u3058Region\u306b\u3001Lambda, SNS Topic\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\nLambda\u306eFunction\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001Lambda function\u3092\u52d5\u304b\u3059\u70ba\u306eIAM Role\u3092\u65b0\u898f\u3067\u4f5c\u308b\u69d8\u306b\u9032\u3081\u3089\u308c\u307e\u3059(\u65e2\u5b58\u306e\u7269\u3092\u4f7f\u3044\u5efb\u3059\u4e8b\u3082\u53ef\u80fd)\u3002\u3053\u306eIAM role\u306b\u5bfe\u3057\u3066\u3001AmazonSNSFullAccess\u3092Attach Policy\u3059\u308b\u306e\u3092\u5fd8\u308c\u305a\u306b\u3002\u3053\u308c\u306b\u3088\u308aLambda Function\u304b\u3089SNS\u901a\u77e5\u304c\u3055\u3089\u306b\u767a\u706b\u51fa\u6765\u308b\u69d8\u306b\u306a\u308a\u307e\u3059\nLambda function\u3092\u4f5c\u6210\u5f8c\u3001Add event source\u3067\u3001\u76e3\u8996\u3059\u308bS3 bucket\u3092\u8a2d\u5b9a\u3057\u3066\u4e0b\u3055\u3044\nSNS\u306eTopic\u3068Subscriptions\u3092Lambda\u3068\u540c\u3058AWS region\u306b\u4f5c\u6210\u3057\u3001Topic\u3092\u767a\u706b\u3055\u305b\u308b\u3068email\u901a\u77e5\u304c\u884c\u304f\u3088\u3046\u306b\u4e8b\u524d\u8a2d\u5b9a\u3057\u3066\u304a\u3044\u3066\u4e0b\u3055\u3044\u3002\u307e\u305f Topic\u306eARN\u3092\u30e1\u30e2\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\n\n\nDebug\u3067\u306e\u30cf\u30de\u308a\u7b87\u6240\n\n\u307e\u305a\u3001Lambda\u306e\u7de8\u96c6\u753b\u9762\u3067\u3001\u5de6\u30da\u30a4\u30f3\u306eSample Event\u306bS3 Put\u3092\u6307\u5b9a\u3057\u3066\u3001Invoke\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001Error getting object HappyFace.jpg from bucket sourcebucket...\u3068\u3044\u3046\u30a8\u30e9\u30fc\u304c\u3067\u307e\u3059\u3002\"key\": \"HappyFace.jpg\"\u3068\"name\": \"sourcebucket\"\u3092\u5148\u307b\u3069Add event source\u3067\u8a2d\u5b9a\u3057\u305fS3 bucket\u540d\u3068\u305d\u306ebucket\u306b\u5b9f\u969b\u306b\u3042\u308blog file\u306b\u66f8\u304d\u63db\u3048\u3066\u3001\u518d\u5ea6Invoke\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u3053\u306elog file\u304cS3 bucket\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3068\u3044\u3046\u60f3\u5b9a\u3067Script\u304c\u52d5\u4f5c\u3057\u3066\u304f\u308c\u307e\u3059\nLambda\u306e\u7de8\u96c6\u753b\u9762\u3067Invoke\u3055\u305b\u3066\u52d5\u304b\u306a\u3044\u5834\u5408\u306f\u3001CloudWatch -> Logs\u306bFull\u306eDebug log\u304c\u5410\u304d\u51fa\u3055\u308c\u307e\u3059\n\n\nLambda\u306ecode\n\nTopicArn\u306f\u81ea\u5206\u306e\u7269\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\u51e6\u7406\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\n\n\nS3 Bucket\u306b\u5909\u66f4\u304c\u3042\u3063\u305f\u3089\u30011\u884c\u3065\u3064\u53d6\u308a\u51fa\u3057\u3066\u3001checkString\u306b\u639b\u3051\u308b\n\ncheckString\u306fELB Access Log\u306e\u4ed5\u69d8\u3092\u5143\u306b\u3001\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u30679\u756a\u76ee\u306e\u5024\u304cbackend_status_code\u3001\u533a\u5207\u308a\u306e2\u756a\u76ee\u304cURL\u3001\u3001\u3001\u3068\u5fc5\u8981\u306a\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3059\nStatus Code\u304c200\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001\u305d\u306e\u884c\u3092snsParams.Message\u306b\u8ffd\u8a18\u3057\u3066\u3044\u304d\u3001\u6700\u5f8c\u306bsns.publish\u3067\u7d50\u679c\u3092SNS\u767a\u706b\u3055\u305b\u308b\n\n\n\nvar aws = require('aws-sdk');\nvar s3 = new aws.S3({apiVersion: '2006-03-01'});\nvar sns = new aws.SNS({apiVersion: '2010-03-31'});\nvar snsParams = {\n  Message: '',\n  Subject: 'ELB log check alarm',\n  TopicArn: 'arn:aws:sns:us-east-1:xxxxxxxx:yyyyyyyyyy'\n};\n\nexports.handler = function(event, context) {\n  var bucket = event.Records[0].s3.bucket.name;\n  var key = event.Records[0].s3.object.key;\n  s3.getObject({Bucket: bucket, Key: key}, function(err, data) {\n    if (err) {\n      console.log(\"Error getting object \" + key + \" from bucket \" + bucket +\n        \". Make sure they exist and your bucket is in the same region as this function.\");\n      context.fail('Error', \"Error getting file: \" + err);\n    }\n\n    var contentBody = data.Body.toString(data.ContentEncoding);\n    snsParams.Message += 'Upload filename:' + key.substr(key.lastIndexOf('/') + 1) + '\\n';\n    snsParams.Message += 'Data\\tStatusCode\\tSource IP\\tURL\\tUserAgent\\n';\n\n    contentBody.split('\\n').forEach(function (line) {\n      checkString(line);\n    });\n\n    sns.publish(snsParams, function() {\n      context.succeed(\"success\");\n    });\n  });\n};\n\nfunction checkString(line) {\n  if (line !== '') {\n    var status_code = line.split(' ')[8];\n    var source_ip = line.split(' ')[2].split(':')[0];\n    if (Number(status_code) != 200) {\n      snsParams.Message += line.split(' ')[0].split('.')[0] + '\\t' + status_code + '\\t' + source_ip+ '\\t' \n       + line.split('\"')[1] + '\\t' + line.split('\"')[3] + '\\n' ;\n    }\n  }\n}\n\n\n### \u524d\u66f8\u304d\nAmazon Loadbalancer(ELB)\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001\u300eELB\u306eAccess log\u3092\u89e3\u6790\u3057\u3066\u7279\u5b9a\u306e\u6761\u4ef6(\u4f8b\u3048\u3070Status code != 200)\u304c\u5b58\u5728\u3059\u308c\u3070Alarm\u3092\u98db\u3070\u3059\u300f\u3068\u8a00\u3046\u4e8b\u3092\u3084\u308a\u305f\u3044\u4e8b\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002  \n\nStatus Code\u3067\u3042\u308c\u3070CloudWatch\u306e`HTTPCode_Backend_5XX`\u7b49\u306eMetrics\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u51fa\u6765\u307e\u3059([ELB\u306eCloud Watch Metric\u306f\u3053\u3053\u53c2\u7167](http://docs.aws.amazon.com/ja_jp/ElasticLoadBalancing/latest/DeveloperGuide/elb-cloudwatch-metrics.html))\u3002\u3053\u306eMetrics\u306e\u6761\u4ef6\u306b\u5f53\u3066\u306f\u307e\u3063\u305f\u6642\u306b\u3001email\u7b49\u306eAlarm\u3092\u98db\u3070\u3059\u69d8\u306bAWS SNS\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u826f\u3044\u3067\u3059\u3002\u304c\u3001\u3053\u308c\u3067Alarm\u901a\u77e5\u306f\u53d7\u3051\u53d6\u308c\u308b\u3093\u3067\u3059\u304c\u3001Request\u306e\u8a73\u7d30(URL\u3068\u304bRequest\u5143\u306eIP\u3068\u304b)\u3092\u78ba\u8a8d\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u3068\u304d\u306b\u3001S3\u306b\u66f8\u304d\u51fa\u3055\u308c\u3066\u3044\u308bELB\u306e\u751fAccess log\u3092\u307f\u308b\u3057\u304b\u6709\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u3001\u624b\u4f5c\u696d\u3067\u3084\u308d\u3046\u3068\u3059\u308b\u3068\u7d50\u69cb\u82e6\u75db\u3067\u3059\u3002\u4f55\u6545\u304bLog file\u304c\u30bf\u30d6\u533a\u5207\u308a\u3067\u3082\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u3082\u7121\u304f\u3001\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u3059\u3057\u3001\u3001\u3001\u3002  \n\nELB\u304cS3\u306bLog\u3092\u66f8\u304d\u51fa\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3001AWS Lambda\u3092\u8d77\u52d5\u3055\u305b\u3066\u3001Lambda\u306enode.js\u5185\u3067Access log\u3092\u89e3\u6790\u3057\u3066\u3001\u5fc5\u8981\u306a\u60c5\u5831\u3092\u5207\u308a\u51fa\u3057\u3066Email\u306e\u672c\u6587\u306b\u542b\u3081\u308c\u3070\u697d\u30b8\u30e3\u30f3\u3001\u3068\u601d\u3044\u3001\u305d\u306e\u8a2d\u5b9a\u624b\u9806\u3084Lambda\u306escript\u3092\u30c1\u30e9\u88cf\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n### \u8a2d\u5b9a\u3067\u306e\u30cf\u30de\u308a\u7b87\u6240\n* ELB\u306eLog\u304cS3\u306b\u5410\u304d\u3060\u3055\u308c\u308bAWS Region\u3068\u540c\u3058Region\u306b\u3001Lambda, SNS Topic\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\n* Lambda\u306eFunction\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001Lambda function\u3092\u52d5\u304b\u3059\u70ba\u306eIAM Role\u3092\u65b0\u898f\u3067\u4f5c\u308b\u69d8\u306b\u9032\u3081\u3089\u308c\u307e\u3059(\u65e2\u5b58\u306e\u7269\u3092\u4f7f\u3044\u5efb\u3059\u4e8b\u3082\u53ef\u80fd)\u3002\u3053\u306eIAM role\u306b\u5bfe\u3057\u3066\u3001`AmazonSNSFullAccess`\u3092Attach Policy\u3059\u308b\u306e\u3092\u5fd8\u308c\u305a\u306b\u3002\u3053\u308c\u306b\u3088\u308aLambda Function\u304b\u3089SNS\u901a\u77e5\u304c\u3055\u3089\u306b\u767a\u706b\u51fa\u6765\u308b\u69d8\u306b\u306a\u308a\u307e\u3059\n* Lambda function\u3092\u4f5c\u6210\u5f8c\u3001`Add event source`\u3067\u3001\u76e3\u8996\u3059\u308bS3 bucket\u3092\u8a2d\u5b9a\u3057\u3066\u4e0b\u3055\u3044\n* SNS\u306e`Topic`\u3068`Subscriptions`\u3092**Lambda\u3068\u540c\u3058AWS region**\u306b\u4f5c\u6210\u3057\u3001Topic\u3092\u767a\u706b\u3055\u305b\u308b\u3068email\u901a\u77e5\u304c\u884c\u304f\u3088\u3046\u306b\u4e8b\u524d\u8a2d\u5b9a\u3057\u3066\u304a\u3044\u3066\u4e0b\u3055\u3044\u3002\u307e\u305f Topic\u306eARN\u3092\u30e1\u30e2\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\n\n### Debug\u3067\u306e\u30cf\u30de\u308a\u7b87\u6240\n* \u307e\u305a\u3001Lambda\u306e\u7de8\u96c6\u753b\u9762\u3067\u3001\u5de6\u30da\u30a4\u30f3\u306e`Sample Event`\u306b`S3 Put`\u3092\u6307\u5b9a\u3057\u3066\u3001`Invoke`\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001`Error getting object HappyFace.jpg from bucket sourcebucket...`\u3068\u3044\u3046\u30a8\u30e9\u30fc\u304c\u3067\u307e\u3059\u3002`\"key\": \"HappyFace.jpg\"`\u3068`\"name\": \"sourcebucket\"`\u3092\u5148\u307b\u3069`Add event source`\u3067\u8a2d\u5b9a\u3057\u305fS3 bucket\u540d\u3068\u305d\u306ebucket\u306b\u5b9f\u969b\u306b\u3042\u308blog file\u306b\u66f8\u304d\u63db\u3048\u3066\u3001\u518d\u5ea6`Invoke`\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u3053\u306elog file\u304cS3 bucket\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3068\u3044\u3046\u60f3\u5b9a\u3067Script\u304c\u52d5\u4f5c\u3057\u3066\u304f\u308c\u307e\u3059\n* Lambda\u306e\u7de8\u96c6\u753b\u9762\u3067`Invoke`\u3055\u305b\u3066\u52d5\u304b\u306a\u3044\u5834\u5408\u306f\u3001CloudWatch -> Logs\u306bFull\u306eDebug log\u304c\u5410\u304d\u51fa\u3055\u308c\u307e\u3059\n\n### Lambda\u306ecode\n* TopicArn\u306f\u81ea\u5206\u306e\u7269\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n* \u51e6\u7406\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\n * S3 Bucket\u306b\u5909\u66f4\u304c\u3042\u3063\u305f\u3089\u30011\u884c\u3065\u3064\u53d6\u308a\u51fa\u3057\u3066\u3001`checkString`\u306b\u639b\u3051\u308b\n * `checkString`\u306f[ELB Access Log\u306e\u4ed5\u69d8](http://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/access-log-collection.html)\u3092\u5143\u306b\u3001\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u30679\u756a\u76ee\u306e\u5024\u304c`backend_status_code`\u3001\u533a\u5207\u308a\u306e2\u756a\u76ee\u304c`URL`\u3001\u3001\u3001\u3068\u5fc5\u8981\u306a\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3059\n * Status Code\u304c200\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001\u305d\u306e\u884c\u3092`snsParams.Message`\u306b\u8ffd\u8a18\u3057\u3066\u3044\u304d\u3001\u6700\u5f8c\u306b`sns.publish`\u3067\u7d50\u679c\u3092SNS\u767a\u706b\u3055\u305b\u308b\n\n\n```js\nvar aws = require('aws-sdk');\nvar s3 = new aws.S3({apiVersion: '2006-03-01'});\nvar sns = new aws.SNS({apiVersion: '2010-03-31'});\nvar snsParams = {\n  Message: '',\n  Subject: 'ELB log check alarm',\n  TopicArn: 'arn:aws:sns:us-east-1:xxxxxxxx:yyyyyyyyyy'\n};\n\nexports.handler = function(event, context) {\n  var bucket = event.Records[0].s3.bucket.name;\n  var key = event.Records[0].s3.object.key;\n  s3.getObject({Bucket: bucket, Key: key}, function(err, data) {\n    if (err) {\n      console.log(\"Error getting object \" + key + \" from bucket \" + bucket +\n        \". Make sure they exist and your bucket is in the same region as this function.\");\n      context.fail('Error', \"Error getting file: \" + err);\n    }\n\n    var contentBody = data.Body.toString(data.ContentEncoding);\n    snsParams.Message += 'Upload filename:' + key.substr(key.lastIndexOf('/') + 1) + '\\n';\n    snsParams.Message += 'Data\\tStatusCode\\tSource IP\\tURL\\tUserAgent\\n';\n\n    contentBody.split('\\n').forEach(function (line) {\n      checkString(line);\n    });\n\n    sns.publish(snsParams, function() {\n      context.succeed(\"success\");\n    });\n  });\n};\n\nfunction checkString(line) {\n  if (line !== '') {\n    var status_code = line.split(' ')[8];\n    var source_ip = line.split(' ')[2].split(':')[0];\n    if (Number(status_code) != 200) {\n      snsParams.Message += line.split(' ')[0].split('.')[0] + '\\t' + status_code + '\\t' + source_ip+ '\\t' \n       + line.split('\"')[1] + '\\t' + line.split('\"')[3] + '\\n' ;\n    }\n  }\n}\n\n```\n\n"}