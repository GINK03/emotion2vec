{"context": "\n\n \u306f\u3058\u3081\u306b\nCodeIQ\u3088\u308a@riverplus Kawazoe\u3055\u3093\u304b\u3089\n\u300c\u30d0\u30a4\u30ca\u30ea\u30fb\u30ab\u30a6\u30f3\u30c8\u300d\u554f\u984c\uff08 https://codeiq.jp/q/1539 )\n\u30b3\u30fc\u30c9\u30b4\u30eb\u30d5\u7528\u306e\u554f\u984c\u3058\u3083\u306a\u3044\u3051\u3069\u3001Ruby\u3067\u30b4\u30eb\u30d5\u3057\u3066\u307f\u305f\u3002\n\n \u6700\u521d\u306e\u30b3\u30fc\u30c9\n\u8a3c\u660e\u306f\u7701\u7565\u3057\u307e\u3059\u304c\u3001\u6b21\u5f0f\u304c\u6210\u308a\u7acb\u3064\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nW(n) = \\begin{cases}\n 0 & (n=0) \\\\\n 1 & (n=1) \\\\\n W(m) + W(m - 1) + m& (n=2m,\\ m \\in \\mathbb{N}) \\\\\n 2W(m) + m + 1& (n=2m+1,\\ m \\in \\mathbb{N}) \n\\\\ \n\\end{cases}\nW(n)={0(n=0)1(n=1)W(m)+W(m\u22121)+m(n=2m,\u00a0m\u2208N)2W(m)+m+1(n=2m+1,\u00a0m\u2208N){W(n) = \\begin{cases}\n 0 & (n=0) \\\\\n 1 & (n=1) \\\\\n W(m) + W(m - 1) + m& (n=2m,\\ m \\in \\mathbb{N}) \\\\\n 2W(m) + m + 1& (n=2m+1,\\ m \\in \\mathbb{N}) \n\\\\ \n\\end{cases}\n}\n\u305f\u3060\u3057, \u00a0W(n)\\ W(n)\u306f, 11\u304b\u3089nn\u307e\u3067\u306e\u81ea\u7136\u6570\u306e2\u9032\u531610\u9032\u6570(BCD:Binary\u2010Coded Decimal)\u306e\u30cf\u30df\u30f3\u30b0\u91cd\u307f(Hamming Weight)\u306e\u5408\u8a08\u3068\u3059\u308b. 1\n\nanswer_01.rb\n$memo = {}\ninputs = [10**3, 10**10]\n\ndef hws(n)\n  return 0 if n == 0\n  return $memo[n] unless $memo[n].nil?\n  $memo[n] = n.even? ?\n             hws(n/2) + hws(n/2-1) + (n/2)\n           : hws(n/2)*2 + (n/2) + 1\nend\n\ninputs.each do |input|\n  puts \"%11d -> %d\" % [input, hws(input)]\nend\n\n\n\n \u30b4\u30eb\u30d5\u3057\u305f\u30b3\u30fc\u30c9\n\n \u95a2\u6570def\u3092\u4f7f\u3063\u305f\u5834\u5408\n73\u6587\u5b57\u3067\u3057\u305f\u3002\n\nanswer_02.rb\ndef w(n)m=n/2;n<1?0:m+(n%2<1?w(~-m)+w(m):1+w(m)*2)end;p w(1000),w(100**5)\n\n\n\n \u03bb\u5f0f\u3092\u4f7f\u3063\u305f\u5834\u5408\n\u81ea\u5df1\u6700\u77ed\u306e\u30b3\u30fc\u30c9\u3067\u300171\u6587\u5b57\u3067\u3057\u305f\u3002\n\nanswer_03.rb\nw=->(n){m=n/2;n<1?0:m+(n%2<1?w[~-m]+w[m]:1+w[m]*2)};p w[1000],w[100**5]\n\n\n\n\n\n\n\u30cf\u30df\u30f3\u30b0\u91cd\u307f: http://en.wikipedia.org/wiki/Hamming_weight\u3053\u306e\u554f\u984c\u306e\u5834\u5408\u306e\u30cf\u30df\u30f3\u30b0\u91cd\u307f\u306f\u3001Population Count\u3068\u3082\u547c\u3076\u3089\u3057\u3044\u3002\u306a\u304a\u3001\u6700\u521d\u306e\u30b3\u30fc\u30c9\u306b\u51fa\u3066\u304f\u308b\u5f0f\u306e\u8a3c\u660e\u306f\u3001\u4e0a\u8a18\u306ePopulation Count\u306e\u30ea\u30f3\u30af\u5148\u3092\u898b\u308c\u3070\u308f\u304b\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u00a0\u21a9\n\n\n\n# <i class=\"fa fa-spinner\" style=\"font-size:1em;\"></i> \u306f\u3058\u3081\u306b\nCodeIQ\u3088\u308a[@riverplus](https://twitter.com/riverplus) Kawazoe\u3055\u3093\u304b\u3089\n\u300c\u30d0\u30a4\u30ca\u30ea\u30fb\u30ab\u30a6\u30f3\u30c8\u300d\u554f\u984c\uff08 https://codeiq.jp/q/1539 )\n\n\u30b3\u30fc\u30c9\u30b4\u30eb\u30d5\u7528\u306e\u554f\u984c\u3058\u3083\u306a\u3044\u3051\u3069\u3001Ruby\u3067\u30b4\u30eb\u30d5\u3057\u3066\u307f\u305f\u3002\n\n# <i class=\"fa fa-fire\" style=\"font-size:1em;\"></i> \u6700\u521d\u306e\u30b3\u30fc\u30c9\n\u8a3c\u660e\u306f\u7701\u7565\u3057\u307e\u3059\u304c\u3001\u6b21\u5f0f\u304c\u6210\u308a\u7acb\u3064\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n```math\nW(n) = \\begin{cases}\n 0 & (n=0) \\\\\n 1 & (n=1) \\\\\n W(m) + W(m - 1) + m& (n=2m,\\ m \\in \\mathbb{N}) \\\\\n 2W(m) + m + 1& (n=2m+1,\\ m \\in \\mathbb{N}) \n\\\\ \n\\end{cases}\n```\n\u305f\u3060\u3057, $\\ W(n)$\u306f, $1$\u304b\u3089$n$\u307e\u3067\u306e\u81ea\u7136\u6570\u306e2\u9032\u531610\u9032\u6570(BCD:Binary\u2010Coded Decimal)\u306e\u30cf\u30df\u30f3\u30b0\u91cd\u307f(Hamming Weight)\u306e\u5408\u8a08\u3068\u3059\u308b. [^1]\n\n```rb:answer_01.rb\n$memo = {}\ninputs = [10**3, 10**10]\n\ndef hws(n)\n  return 0 if n == 0\n  return $memo[n] unless $memo[n].nil?\n  $memo[n] = n.even? ?\n             hws(n/2) + hws(n/2-1) + (n/2)\n           : hws(n/2)*2 + (n/2) + 1\nend\n\ninputs.each do |input|\n  puts \"%11d -> %d\" % [input, hws(input)]\nend\n```\n\n# <i class=\"fa fa-flag-checkered\" style=\"font-size:1em;\"></i> \u30b4\u30eb\u30d5\u3057\u305f\u30b3\u30fc\u30c9\n## <i class=\"fa fa-plane\" style=\"font-size:1em;\"></i> \u95a2\u6570def\u3092\u4f7f\u3063\u305f\u5834\u5408\n73\u6587\u5b57\u3067\u3057\u305f\u3002\n\n```ruby:answer_02.rb\ndef w(n)m=n/2;n<1?0:m+(n%2<1?w(~-m)+w(m):1+w(m)*2)end;p w(1000),w(100**5)\n```\n\n## <i class=\"fa fa-rocket\" style=\"font-size:1em;\"></i> \u03bb\u5f0f\u3092\u4f7f\u3063\u305f\u5834\u5408\n\u81ea\u5df1\u6700\u77ed\u306e\u30b3\u30fc\u30c9\u3067\u300171\u6587\u5b57\u3067\u3057\u305f\u3002\n\n```ruby:answer_03.rb\nw=->(n){m=n/2;n<1?0:m+(n%2<1?w[~-m]+w[m]:1+w[m]*2)};p w[1000],w[100**5]\n```\n\n[^1]: \u30cf\u30df\u30f3\u30b0\u91cd\u307f: http://en.wikipedia.org/wiki/Hamming_weight<br>\u3053\u306e\u554f\u984c\u306e\u5834\u5408\u306e\u30cf\u30df\u30f3\u30b0\u91cd\u307f\u306f\u3001[Population Count] (https://chessprogramming.wikispaces.com/Population+Count)\u3068\u3082\u547c\u3076\u3089\u3057\u3044\u3002<br>\u306a\u304a\u3001**\u6700\u521d\u306e\u30b3\u30fc\u30c9**\u306b\u51fa\u3066\u304f\u308b\u5f0f\u306e\u8a3c\u660e\u306f\u3001<br>\u4e0a\u8a18\u306ePopulation Count\u306e\u30ea\u30f3\u30af\u5148\u3092\u898b\u308c\u3070\u308f\u304b\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n", "tags": ["Ruby", "\u6570\u5b66", "codeiq", "golf"]}