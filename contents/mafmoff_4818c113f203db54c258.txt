{"context": " 2016/04/02\u66f4\u65b0\uff1aRxSwift\u3067UI\u306e\u66f4\u65b0\u306b\u306fDriver\u3092\u4f7f\u3063\u3066\u307f\u305f\u8a18\u4e8b\u3082\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\uff01\n\nRxSwift\nReactive Programming\u3092Swift\u3067\u5b9f\u73fe\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\nQiita\u306e\u8a18\u4e8b\u3082\u5897\u3048\u3066\u304d\u307e\u3057\u305f\uff01\n\u4fbf\u5229\u305d\u3046\u3060\u3051\u3069\u4f7f\u3044\u3069\u3053\u308d\u306f\u30fb\u30fb\u30fb\uff1f\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001Swift\u30d3\u30ae\u30ca\u30fc\u306a\u81ea\u5206\u304cRxSwift\u3067MVVM\u30e2\u30c7\u30eb\u306aRSSFeed\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u305f\u307e\u3068\u3081\n\n\u3069\u3093\u306a\u30a2\u30d7\u30ea\uff1f\n\n\u74b0\u5883\n\nXcode 7.2\nSwift 2.1\nRxSwift 2.0.0\niOS8\u4ee5\u4e0a\n\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\nmafmoff/RxRSSFeed\n\n\u6982\u8981\n\n* Sketch App Sources\u3067\u914d\u4fe1\u3057\u3066\u3044\u308bRSS Feed\u3092TableView\u3067\u30ea\u30b9\u30c8\u8868\u793a\n* \u30ea\u30b9\u30c8\u3092\u9078\u629e\u3059\u308b\u3068\u8a73\u7d30\u3092WebView\u3067\u8868\u793a\n* \u53d6\u5f97\u3059\u308bRSS\u306fXML\u306a\u306e\u3067\u3001Google AJAX Feed API\u3092\u4f7f\u3063\u3066JSON\u3067\u53d6\u5f97\n TIPS: \u4eca\u56de\u306f\u7df4\u7fd2\u7528\u30a2\u30d7\u30ea\u306a\u306e\u3067ATS\u306f\u7121\u52b9\u5316\u3057\u3066\u3042\u308a\u307e\u3059\n\n\u4f7f\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\n\nLibrary\nUse\n\n\n\n\nAlamofire\nSwift\u7528\u901a\u4fe1\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\nObjectMapper\nJSON\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092Feed\u30af\u30e9\u30b9\u306b\u30de\u30c3\u30d4\u30f3\u30b0\n\n\nHTMLReader\nJSON\u306b\u6df7\u5728\u3057\u3066\u3044\u308b HTML\u30bf\u30b0\u3092\u30d1\u30fc\u30b9\n\n\nRxSwift\n\u4eca\u56de\u306e\u4e3b\u5f79\u3001ReactiveProgramming\u3092\u30b5\u30dd\u30fc\u30c8\n\n\nSDWebImage\n\uff08Obj-C\u88fd\uff09\u30ea\u30b9\u30c8\u306e\u753b\u50cf\u30ed\u30fc\u30c9\u306b\u4f7f\u7528\n\n\nSVProgressHUD\n\uff08Obj-C\u88fd\uff09\u8a73\u7d30\u753b\u9762\u306e\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u8868\u793a\n\n\n\n\u5f53\u521d\u3001\u3081\u3061\u3083\u3044\u3051\u3066\u308bPullRefresh\u30e9\u30a4\u30d6\u30e9\u30eaDGElasticPullToRefresh\u3092\u4f7f\u3046\u4e88\u5b9a\u3067\u3057\u305f\u304c\u3001AutoLayout\u306e\u30d0\u30b0\u3067\u4f7f\u7528\u3092\u65ad\u5ff5\n\nRxSwift\u3067\u306eMVVM\u30e2\u30c7\u30eb\u306e\u5b9f\u73fe\n\n\u3053\u3093\u306a\u30a4\u30e1\u30fc\u30b8\n\n\nRxSwift\u306e\u4f7f\u3044\u6240 \n\n1. Model : \u30ea\u30af\u30a8\u30b9\u30c8\u3067Observable\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210\n\u3053\u3053\u3067\u306f\u3001API\u30ea\u30af\u30a8\u30b9\u30c8\u3067Observable\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306eJSON\u306f\u3001ObjectMapper\u3092\u5229\u7528\u3057\u3066\u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u30af\u30e9\u30b9FeedResponse\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u304a\u304f\u3068\u697d\u3067\u3057\u305f\n\nFeedRequest.swift\n    func connect() -> Observable<FeedResponse> {\n        let observable: Observable<FeedResponse> = Observable.create { (observer: AnyObserver<FeedResponse>) in\n            self.request?.responseJSON(completionHandler: { response in\n                print(\"\\(response)\")\n                switch response.result {\n                case .Success(let value):\n                    guard let object = Mapper<FeedResponse>().map(value) else {\n                        return observer.onCompleted()\n                    }\n                    observer.onNext(object)\n                    observer.onCompleted()\n                case .Failure(let error):\n                    observer.onError(error)\n                }\n            })\n            return AnonymousDisposable {\n\n            }\n        }\n        return observable\n    }\n\n\n TIPS: func connect() -> Observable<FeedResponse>\u306e\u90e8\u5206\u3092\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306b\u3059\u308b\u3068\u3001\u4ed6\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3067\u3082\u6c4e\u7528\u7684\u306b\u4f7f\u3048\u307e\u3059\n\n\u3061\u306a\u307f\u306b\u3001\u3053\u306e\u5b9f\u88c5\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304ctaktem/TAKSwiftSupport\u3067\u3059\n\u3053\u3061\u3089\u306eRequestBase\u3092\u89aa\u3068\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\ntaktem\u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\n\n TIPS: Observable.create\u306fRxSwift 2.0.0-beta\u4ee5\u524d\u3067\u306fcreate\u306e\u307f\u306e\u8a18\u8ff0\u3067\u3057\u305f\n\n2. ViewModel : \u30ea\u30af\u30a8\u30b9\u30c8\u547c\u3073\u51fa\u3057\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092Variable\u5909\u6570\u306b\u683c\u7d0d\n\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u306fVariable\u578b\u306e\u5909\u6570\u3092\u5ba3\u8a00\u3057\u3066\u304a\u304f\n\u3053\u306e\u3068\u304d\u3001Variable\u5909\u6570\u306f\u521d\u671f\u5316\u306e\u969b\u306b\u3082\u5024\u306e\u66f4\u65b0\u3068\u307f\u306a\u3055\u308csendNext\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u610f\u56f3\u3057\u306a\u3044Subscribe\u3092\u907f\u3051\u308b\u305f\u3081filtering\u3067\u304d\u308b\u3088\u3046\u306b\u7a7a\u3082\u3057\u304f\u306fnil\u306b\u3057\u3066\u304a\u304d\u307e\u3059\n\nListViewModel.swift\n    /// Request class\n    private var request = FeedRequest()\n\n    /// Feed\n    private(set) var feed: Variable<Feed?> = Variable(nil)\n\n    /// Entry\n    private(set) var entries: Variable<[Entry]> = Variable([])\n\n    /// Error\n    private(set) var error: Variable<NSError?> = Variable(nil)\n\n// \u7701\u7565\n\nfunc reloadData() {\n        request.connect().subscribe(onNext: { [weak self] x in\n            // Variable\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u683c\u7d0d\n            self?.entries.value = x.feed.entries\n            }, onError: { error in\n\n            }, onCompleted: { () in\n\n            }) { () in\n\n        }.addDisposableTo(request.disposeBag)\n    }\n\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089\u53d7\u3051\u53d6\u3063\u305fFeedResponse\u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8x\u304b\u3089\u3001TableView\u306b\u8868\u793a\u3059\u308b\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u7528\u306e\u914d\u5217entries\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u308a\u51fa\u3057\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u4ee3\u5165\u3057\u76f4\u3059\n\u3053\u306e\u4ee3\u5165\u3092\u30c8\u30ea\u30ac\u30fc\u306b\u3057\u3066\u3001TableView\u306e\u30ea\u30ed\u30fc\u30c9\u3092\u884c\u3044\u307e\u3059\n TIPS: Variable\u306e\u5909\u6570\u306f\u5916\u90e8\u30af\u30e9\u30b9\u304b\u3089\u66f8\u304d\u63db\u3048\u3092\u7981\u6b62\u3059\u308b\u305f\u3081\u30a2\u30af\u30bb\u30b9\u30ec\u30d9\u30eb\u3092private(set) \u306b\u3057\u3066\u304a\u304f\u3068\u5b89\u5168\u3067\u3059\n\n3. ViewController : ViewModel\u306eVariable\u5909\u6570\u3092Subscribe\u3000\nViewModel\u3067\u5ba3\u8a00\u3057\u305fVariable\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f.asObservable()\u3067Observable\u306b\u5909\u63db\u3067\u304d\u308b\u306e\u3067\u3001ViewController\u4e0a\u3067Subscribe\u3092\u884c\u3044\u307e\u3059\n2.\u3067\u4ee3\u5165\u3057\u305f\u969b\u306e\u5024\u306e\u66f4\u65b0\u3092\u30c8\u30ea\u30ac\u30fc\u306b\u3001TableView\u306e\u30ea\u30ed\u30fc\u30c9\u3092\u5b9f\u65bd\n\nListController.swift\n\n   func bind() {\n        // Connection\n        viewModel.entries.asObservable().filter { x in\n            // \u521d\u671f\u5316\u306e\u969b\u306bsubscribe\u3092\u3055\u3051\u308b\u305f\u3081filter\n            // \u914d\u5217\u306e\u8981\u7d20\u6570\u304c0\u4ef6\u3088\u308a\u591a\u304f\u306a\u3063\u305f\u3068\u304d\u306bsubscribe\u3092\u5b9f\u65bd\n            return !x.isEmpty\n            }.subscribe(onNext: { [unowned self] x in\n                // \u66f4\u65b0\n                self.refresh.endRefreshing()\n                self.tableView.reloadData()\n                }, onError: { error in\n                    // \u30a8\u30e9\u30fc\n                    // FIXME: \u3044\u3064\u304b\u3084\u308b\u304b\u3082\n                }, onCompleted: { () in\n                    // \u5b8c\u4e86\n                }) { () in\n\n            }.addDisposableTo(disposeBag)\n\n\n        // Pull Refresh\n        refresh.rx_controlEvent(.ValueChanged).subscribeNext { [unowned self] x -> Void in\n            // \u30d7\u30eb\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3092\u8cfc\u8aad\u3057\u3001ValueChanged\u304c\u3042\u3063\u305f\u5834\u5408API\u30ea\u30ed\u30fc\u30c9\u3092\u5b9f\u884c\n            self.viewModel.reloadData()\n        }.addDisposableTo(disposeBag)\n    }\n\n\n\n TIPS: .filter\u306fViewModel\u3067\u306eentries\u5909\u6570\u306e\u521d\u671f\u5316\uff08\u7a7a\u914d\u5217\u306e\u751f\u6210\uff09\u306eSubscribe\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u5b9f\u65bd\u3057\u3066\u3044\u307e\u3059\n TIPS: .asObservable()\u306fRxSwift 2.0.0-beta\u4ee5\u524d\u3067\u306f\u4e0d\u8981\u3067\u3057\u305f\uff08\u3061\u3087\u3063\u3068\u9762\u5012\u306b\u306a\u3063\u305f\u2026\uff1f\uff09\n\n\u307e\u3068\u3081\n\n\u5024\u304c\u66f4\u65b0\u3055\u308c\u308b\u5ea6\u306bbind\u90e8\u5206\u306e\u51e6\u7406\u3092\u901a\u308b\u306e\u3067\u3001\u30d7\u30eb\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3001\u30a4\u30f3\u30d5\u30a3\u30cb\u30c3\u30c8\u30ed\u30fc\u30c9\u3067\u518d\u5ea6API\u901a\u4fe1\u3092\u884c\u3063\u305f\u3068\u304d\u306a\u3069\u3082\u30ec\u30b9\u30dd\u30f3\u30b9\u5f8c\u306e\u51e6\u7406\u304c\u5206\u6563\u3057\u306a\u3044\nMVVM\u30e2\u30c7\u30eb\u3067ViewController\u304c\u80a5\u5927\u5316\u305b\u305a\u53ef\u8aad\u6027\u3082\u4e0a\u304c\u308b\u306f\u305a\n\u3000\n\n\u4ee5\u4e0a\u3067\u3059  \nSwift\u6b74\u306f\u307e\u3060\u307e\u3060\u6d45\u3044\u306e\u3067\u3001\u3055\u3089\u306b\u3088\u3044\u5b9f\u88c5\u65b9\u6cd5\u3092\u52c9\u5f37\u3055\u305b\u3066\u9802\u304d\u307e\u3059\uff01\n\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\n:tada: 2016/04/02\u66f4\u65b0\uff1a[RxSwift\u3067UI\u306e\u66f4\u65b0\u306b\u306fDriver\u3092\u4f7f\u3063\u3066\u307f\u305f\u8a18\u4e8b](http://qiita.com/mafmoff/items/e8786cd75c292cdc3ec0#%E3%81%A7%E3%81%8D%E3%81%9F%E3%82%82%E3%81%AE)\u3082\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\uff01\n\n# RxSwift\nReactive Programming\u3092Swift\u3067\u5b9f\u73fe\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\n[Qiita\u306e\u8a18\u4e8b](https://qiita.com/tags/rxswift)\u3082\u5897\u3048\u3066\u304d\u307e\u3057\u305f\uff01\n\n\u4fbf\u5229\u305d\u3046\u3060\u3051\u3069\u4f7f\u3044\u3069\u3053\u308d\u306f\u30fb\u30fb\u30fb\uff1f\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001Swift\u30d3\u30ae\u30ca\u30fc\u306a\u81ea\u5206\u304c**RxSwift\u3067MVVM\u30e2\u30c7\u30eb\u306aRSSFeed\u30a2\u30d7\u30ea**\u3092\u4f5c\u3063\u3066\u307f\u305f\u307e\u3068\u3081\n\n# \u3069\u3093\u306a\u30a2\u30d7\u30ea\uff1f\n\n## \u74b0\u5883\n* Xcode 7.2\n* Swift 2.1\n* RxSwift 2.0.0\n* iOS8\u4ee5\u4e0a\n\n## \u30ea\u30dd\u30b8\u30c8\u30ea\n[mafmoff/RxRSSFeed](https://github.com/mafmoff/RxRSSFeed)\n\n##\u6982\u8981\n<br><img width=\"320\" alt=\"IMG_6373.PNG\" src=\"https://qiita-image-store.s3.amazonaws.com/0/98613/6a3865bf-238c-e569-e4c6-af23faf78d94.png\"><br>\n* [Sketch App Sources](http://www.sketchappsources.com/)\u3067\u914d\u4fe1\u3057\u3066\u3044\u308bRSS Feed\u3092TableView\u3067\u30ea\u30b9\u30c8\u8868\u793a\n* \u30ea\u30b9\u30c8\u3092\u9078\u629e\u3059\u308b\u3068\u8a73\u7d30\u3092WebView\u3067\u8868\u793a\n* \u53d6\u5f97\u3059\u308bRSS\u306fXML\u306a\u306e\u3067\u3001[Google AJAX Feed API](http://www.ajaxtower.jp/googleajaxfeed/)\u3092\u4f7f\u3063\u3066JSON\u3067\u53d6\u5f97\n\n:tada: TIPS: \u4eca\u56de\u306f\u7df4\u7fd2\u7528\u30a2\u30d7\u30ea\u306a\u306e\u3067[ATS\u306f\u7121\u52b9\u5316](http://qiita.com/yanayanalte/items/e6d83c12af77fa238a58)\u3057\u3066\u3042\u308a\u307e\u3059\n\n\n##\u4f7f\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\n|Library|Use|\n|---|---|\n|[Alamofire](https://github.com/Alamofire/Alamofire)|Swift\b\u7528\u901a\u4fe1\u30e9\u30a4\u30d6\u30e9\u30ea|\n|[ObjectMapper](https://github.com/Hearst-DD/ObjectMapper)|JSON\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092Feed\u30af\u30e9\u30b9\u306b\u30de\u30c3\u30d4\u30f3\u30b0|\n| [HTMLReader](https://github.com/nolanw/HTMLReader)|JSON\u306b\u6df7\u5728\u3057\u3066\u3044\u308b HTML\u30bf\u30b0\u3092\u30d1\u30fc\u30b9|\n|[RxSwift](https://github.com/ReactiveX/RxSwift)|\u4eca\u56de\u306e\u4e3b\u5f79\u3001ReactiveProgramming\u3092\u30b5\u30dd\u30fc\u30c8|\n[SDWebImage](https://github.com/rs/SDWebImage)|\uff08Obj-C\u88fd\uff09\u30ea\u30b9\u30c8\u306e\u753b\u50cf\u30ed\u30fc\u30c9\u306b\u4f7f\u7528|\n|[SVProgressHUD](https://github.com/TransitApp/SVProgressHUD)|\uff08Obj-C\u88fd\uff09\u8a73\u7d30\u753b\u9762\u306e\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u8868\u793a|\n\n\u5f53\u521d\u3001\u3081\u3061\u3083\u3044\u3051\u3066\u308bPullRefresh\u30e9\u30a4\u30d6\u30e9\u30ea[DGElasticPullToRefresh](https://github.com/gontovnik/DGElasticPullToRefresh)\u3092\u4f7f\u3046\u4e88\u5b9a\u3067\u3057\u305f\u304c\u3001AutoLayout\u306e\u30d0\u30b0\u3067\u4f7f\u7528\u3092\u65ad\u5ff5\n\n# RxSwift\u3067\u306eMVVM\u30e2\u30c7\u30eb\u306e\u5b9f\u73fe\n## \u3053\u3093\u306a\u30a4\u30e1\u30fc\u30b8\n<img width=\"752\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-01-08 0.01.38.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/98613/20dd2417-8407-9293-6d65-33725e17a0bc.png\">\n\n\n## RxSwift\u306e\u4f7f\u3044\u6240 \b\n### 1. **Model** : \u30ea\u30af\u30a8\u30b9\u30c8\u3067`Observable`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210\n\u3053\u3053\u3067\u306f\u3001API\u30ea\u30af\u30a8\u30b9\u30c8\u3067`Observable`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306eJSON\u306f\u3001**ObjectMapper**\u3092\u5229\u7528\u3057\u3066\u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u30af\u30e9\u30b9`FeedResponse`\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u304a\u304f\u3068\u697d\u3067\u3057\u305f\n\n\n```swift:FeedRequest.swift\n    func connect() -> Observable<FeedResponse> {\n        let observable: Observable<FeedResponse> = Observable.create { (observer: AnyObserver<FeedResponse>) in\n            self.request?.responseJSON(completionHandler: { response in\n                print(\"\\(response)\")\n                switch response.result {\n                case .Success(let value):\n                    guard let object = Mapper<FeedResponse>().map(value) else {\n                        return observer.onCompleted()\n                    }\n                    observer.onNext(object)\n                    observer.onCompleted()\n                case .Failure(let error):\n                    observer.onError(error)\n                }\n            })\n            return AnonymousDisposable {\n                \n            }\n        }\n        return observable\n    }\n```\n\n:tada: TIPS: `func connect() -> Observable<FeedResponse>`\u306e\u90e8\u5206\u3092\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306b\u3059\u308b\u3068\u3001\u4ed6\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3067\u3082\u6c4e\u7528\u7684\u306b\u4f7f\u3048\u307e\u3059\n\n>\u3061\u306a\u307f\u306b\u3001\u3053\u306e\u5b9f\u88c5\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c[taktem/TAKSwiftSupport](https://github.com/taktem/TAKSwiftSupport/blob/master/TAKSwiftSupport/Core/Model/HttpRequest/RequestBase.swift)\u3067\u3059\n\u3053\u3061\u3089\u306e`RequestBase`\u3092\u89aa\u3068\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\ntaktem\u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\n\n:tada: TIPS: `Observable.create`\u306f**RxSwift 2.0.0-beta**\u4ee5\u524d\u3067\u306f`create`\u306e\u307f\u306e\u8a18\u8ff0\u3067\u3057\u305f\n\n\n### 2. **ViewModel** : \u30ea\u30af\u30a8\u30b9\u30c8\u547c\u3073\u51fa\u3057\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092`Variable`\u5909\u6570\u306b\u683c\u7d0d\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u306f`Variable`\u578b\u306e\u5909\u6570\u3092\u5ba3\u8a00\u3057\u3066\u304a\u304f\n\u3053\u306e\u3068\u304d\u3001`Variable`\u5909\u6570\u306f\u521d\u671f\u5316\u306e\u969b\u306b\u3082\u5024\u306e\u66f4\u65b0\u3068\u307f\u306a\u3055\u308c`sendNext`\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u610f\u56f3\u3057\u306a\u3044`Subscribe`\u3092\u907f\u3051\u308b\u305f\u3081filtering\u3067\u304d\u308b\u3088\u3046\u306b**\u7a7a\u3082\u3057\u304f\u306fnil**\u306b\u3057\u3066\u304a\u304d\u307e\u3059\n\n```swift:ListViewModel.swift\n    /// Request class\n    private var request = FeedRequest()\n\n    /// Feed\n    private(set) var feed: Variable<Feed?> = Variable(nil)\n\n    /// Entry\n    private(set) var entries: Variable<[Entry]> = Variable([])\n\n    /// Error\n    private(set) var error: Variable<NSError?> = Variable(nil)\n\n// \u7701\u7565\n\nfunc reloadData() {\n        request.connect().subscribe(onNext: { [weak self] x in\n            // Variable\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u683c\u7d0d\n            self?.entries.value = x.feed.entries\n            }, onError: { error in\n                \n            }, onCompleted: { () in\n                \n            }) { () in\n                \n        }.addDisposableTo(request.disposeBag)\n    }\n```\n\u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089\u53d7\u3051\u53d6\u3063\u305f`FeedResponse`\u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8`x`\u304b\u3089\u3001TableView\u306b\u8868\u793a\u3059\u308b\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u7528\u306e\u914d\u5217`entries`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u308a\u51fa\u3057\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u4ee3\u5165\u3057\u76f4\u3059\n**\u3053\u306e\u4ee3\u5165\u3092\u30c8\u30ea\u30ac\u30fc\u306b\u3057\u3066\u3001TableView\u306e\u30ea\u30ed\u30fc\u30c9\u3092\u884c\u3044\u307e\u3059**\n\n:tada: TIPS: `Variable`\u306e\u5909\u6570\u306f\u5916\u90e8\u30af\u30e9\u30b9\u304b\u3089\u66f8\u304d\u63db\u3048\u3092\u7981\u6b62\u3059\u308b\u305f\u3081\u30a2\u30af\u30bb\u30b9\u30ec\u30d9\u30eb\u3092`private(set) ` \u306b\u3057\u3066\u304a\u304f\u3068\u5b89\u5168\u3067\u3059\n\n### 3. **ViewController** : ViewModel\u306e`Variable`\u5909\u6570\u3092`Subscribe`\u3000\nViewModel\u3067\u5ba3\u8a00\u3057\u305f`Variable`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f`.asObservable()`\u3067`Observable`\u306b\u5909\u63db\u3067\u304d\u308b\u306e\u3067\u3001ViewController\u4e0a\u3067`Subscribe`\u3092\u884c\u3044\u307e\u3059\n2.\u3067\u4ee3\u5165\u3057\u305f\u969b\u306e\u5024\u306e\u66f4\u65b0\u3092\u30c8\u30ea\u30ac\u30fc\u306b\u3001TableView\u306e\u30ea\u30ed\u30fc\u30c9\u3092\u5b9f\u65bd\n\n\n```swift:ListController.swift\n\n   func bind() {\n        // Connection\n        viewModel.entries.asObservable().filter { x in\n            // \u521d\u671f\u5316\u306e\u969b\u306bsubscribe\u3092\u3055\u3051\u308b\u305f\u3081filter\n            // \u914d\u5217\u306e\u8981\u7d20\u6570\u304c0\u4ef6\u3088\u308a\u591a\u304f\u306a\u3063\u305f\u3068\u304d\u306bsubscribe\u3092\u5b9f\u65bd\n            return !x.isEmpty\n            }.subscribe(onNext: { [unowned self] x in\n                // \u66f4\u65b0\n                self.refresh.endRefreshing()\n                self.tableView.reloadData()\n                }, onError: { error in\n                    // \u30a8\u30e9\u30fc\n                    // FIXME: \u3044\u3064\u304b\u3084\u308b\u304b\u3082\n                }, onCompleted: { () in\n                    // \u5b8c\u4e86\n                }) { () in\n                    \n            }.addDisposableTo(disposeBag)\n        \n\n        // Pull Refresh\n        refresh.rx_controlEvent(.ValueChanged).subscribeNext { [unowned self] x -> Void in\n            // \u30d7\u30eb\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3092\u8cfc\u8aad\u3057\u3001ValueChanged\u304c\u3042\u3063\u305f\u5834\u5408API\u30ea\u30ed\u30fc\u30c9\u3092\u5b9f\u884c\n            self.viewModel.reloadData()\n        }.addDisposableTo(disposeBag)\n    }\n           \n```\n:tada: TIPS: `.filter`\u306fViewModel\u3067\u306e`entries`\u5909\u6570\u306e\u521d\u671f\u5316\uff08\u7a7a\u914d\u5217\u306e\u751f\u6210\uff09\u306e`Subscribe`\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u5b9f\u65bd\u3057\u3066\u3044\u307e\u3059\n\n:tada: TIPS: `.asObservable()`\u306f**RxSwift 2.0.0-beta**\u4ee5\u524d\u3067\u306f\u4e0d\u8981\u3067\u3057\u305f\uff08\u3061\u3087\u3063\u3068\u9762\u5012\u306b\u306a\u3063\u305f\u2026\uff1f\uff09\n\n\n# \u307e\u3068\u3081\n* \u5024\u304c\u66f4\u65b0\u3055\u308c\u308b\u5ea6\u306b`bind`\u90e8\u5206\u306e\u51e6\u7406\u3092\u901a\u308b\u306e\u3067\u3001\u30d7\u30eb\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3001\u30a4\u30f3\u30d5\u30a3\u30cb\u30c3\u30c8\u30ed\u30fc\u30c9\u3067\u518d\u5ea6API\u901a\u4fe1\u3092\u884c\u3063\u305f\u3068\u304d\u306a\u3069\u3082\u30ec\u30b9\u30dd\u30f3\u30b9\u5f8c\u306e\u51e6\u7406\u304c\u5206\u6563\u3057\u306a\u3044\n* MVVM\u30e2\u30c7\u30eb\u3067ViewController\u304c\u80a5\u5927\u5316\u305b\u305a\u53ef\u8aad\u6027\u3082\u4e0a\u304c\u308b\u306f\u305a\n\u3000\n\n\u4ee5\u4e0a\u3067\u3059 :tada: \nSwift\u6b74\u306f\u307e\u3060\u307e\u3060\u6d45\u3044\u306e\u3067\u3001\u3055\u3089\u306b\u3088\u3044\u5b9f\u88c5\u65b9\u6cd5\u3092\u52c9\u5f37\u3055\u305b\u3066\u9802\u304d\u307e\u3059\uff01\n\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\n", "tags": ["Swift", "RxSwift", "MVVM"]}