{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u9023\u8f09\u3067\u306fCommon Lisp\u306eLOOP\u30de\u30af\u30ed\u3092\u30b5\u30f3\u30d7\u30eb\u3092\u4f7f\u3063\u3066\u7d39\u4ecb\u3059\u308b\u3002\nLOOP\u30de\u30af\u30ed\u306f (cl\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u3067) Emacs Lisp\u3067\u3082\u5229\u7528\u53ef\u80fd\u3067\u3042\u308b\u3002\n\u3010Common Lisp: loop\u30de\u30af\u30ed\u7528\u6cd5\u6284\u3088\u308a\u5f15\u7528\u3011\n\nGraham\u306e ANSI Common Lisp \u3067\u306f\u5acc\u308f\u308c\u3066\u3044\u3066\u788c\u306b\u8aac\u660e\u306e\u306a\u3044loop\u30de\u30af\u30ed\u3002\u4e00\u65b9\u3001 \u5b9f\u8df5Common Lisp \u3067\u306f\u5bfe\u7167\u7684\u306b\u597d\u3093\u3067\u7528\u3044\u3089\u308c\u3066\u3044\u3066\u3001\u5168\u7de8\u306b\u6e21\u3063\u3066\u983b\u7e41\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\u3057\u304b\u3057loop\u30de\u30af\u30ed\u306f\u96e3\u3057\u3044\u3068\u3044\u3046\u610f\u8b58\u304c\u3042\u308b\u306e\u304b\u305d\u306e\u8aac\u660e\u306f\u7b2c22\u7ae0\u3068\u304b\u306a\u308a\u5f8c\u56de\u3057\u306b\u3055\u308c\u3066\u304a\u308a\u3001\u3061\u3050\u306f\u3050\u306a\u611f\u3092\u53d7\u3051\u308b\u3002\u3053\u3053\u3067\u306f\u3001 \u9ed2\u5e2f\u306e\u305f\u3081\u306eLOOP \u3068\u3044\u3046\u984c\u306e\u3064\u3051\u3089\u308c\u305f\u305d\u306e\u7ae0\u3067\u89e3\u8aac\u3055\u308c\u3066\u3044\u308bloop\u30de\u30af\u30ed\u306e\u7528\u6cd5\u3092\u6574\u7406\u3057\u3066\u307f\u305f\u3002\nANSI Common Lisp \u3067\u306e\u9ed2\u9b54\u8853\u6271\u3044\u306b\u656c\u9060\u3057\u3066\u3044\u305floop\u30de\u30af\u30ed\u3060\u3063\u305f\u304c\u3001\u3053\u3046\u3057\u3066\u6574\u7406\u3057\u3066\u307f\u308b\u3068\u305d\u308c\u307b\u3069\u96e3\u3057\u304f\u8003\u3048\u305a\u3068\u3082\u4fbf\u5229\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u305d\u3046\u3060\u3002\n\u5b9f\u8df5Common Lisp\n\u4f5c\u8005: Peter Seibel,\u4f50\u91ce\u5321\u4fca,\u6c34\u4e38\u6df3,\u5712\u57ce\u96c5\u4e4b,\u91d1\u5b50\u7950\u4ecb\n\u51fa\u7248\u793e/\u30e1\u30fc\u30ab\u30fc: \u30aa\u30fc\u30e0\u793e\n\u767a\u58f2\u65e5: 2008/07/26\n\u30e1\u30c7\u30a3\u30a2: \u5358\u884c\u672c\uff08\u30bd\u30d5\u30c8\u30ab\u30d0\u30fc\uff09\n\n\n\u4eca\u56de\u306f\u2026\n\u4eca\u56de\u306f\u3001LOOP \u30de\u30af\u30ed\u306b\u95a2\u3059\u308b Emacs Lisp \u3068 Common Lisp \u306e\u975e\u4e92\u63db\u6027\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u30d9\u30af\u30bf\u30fc\u306e\u30ea\u30fc\u30c9\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u306e\u9055\u3044\n\n\u53b3\u5bc6\u306b\u306f\u3001LOOP\u30de\u30af\u30ed\u81ea\u4f53\u306e\u9055\u3044\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u2026\n\n\nCLISP\u306e\u5834\u5408\nCLISP> (loop for i across #(1 2 3) do (print i))\n\n1\n2\n3\n\u21d2NIL\n\n\n\nELISP\u306e\u5834\u5408\nELISP> (require 'cl)\nELISP> (loop for i across [1 2 3] do (print i))\n1\n2\n3\n\u21d2nil\n\n\n\n\u5024\u306e\u7d2f\u7a4d(accumulation)\u306b\u95a2\u3059\u308b\u9055\u3044\n\nEmacs Lisp \u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b concat (\u6587\u5b57\u5217\u306e\u7d50\u5408) accumulation \u304c\u4f7f\u3048\u307e\u3059\u3002\n\n\nELISP\u306e\u307f\nELISP> (require 'cl)\nELISP> (loop for str in '(\"A\" \"B\" \"C\")\n             for sep = \"\" then \",\"\n             concat sep\n             concat str)\n\u21d2\"A,B,C\"\n\n\n\n\u6700\u5f8c\u306b\n\u4ed6\u306b\u3082\u975e\u4e92\u63db\u7b49\u3042\u308a\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u304b https://twitter.com/akmiyoshi \u307e\u3067\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\u306f\u3058\u3081\u306b\n========\n\n\u3053\u306e\u9023\u8f09\u3067\u306fCommon Lisp\u306eLOOP\u30de\u30af\u30ed\u3092\u30b5\u30f3\u30d7\u30eb\u3092\u4f7f\u3063\u3066\u7d39\u4ecb\u3059\u308b\u3002\nLOOP\u30de\u30af\u30ed\u306f (cl\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u3067) Emacs Lisp\u3067\u3082\u5229\u7528\u53ef\u80fd\u3067\u3042\u308b\u3002\n\n\u3010[Common Lisp: loop\u30de\u30af\u30ed\u7528\u6cd5\u6284](http://smpl.seesaa.net/article/29800843.html)\u3088\u308a\u5f15\u7528\u3011\n> Graham\u306e _ANSI Common Lisp_ \u3067\u306f\u5acc\u308f\u308c\u3066\u3044\u3066\u788c\u306b\u8aac\u660e\u306e\u306a\u3044loop\u30de\u30af\u30ed\u3002\u4e00\u65b9\u3001 _\u5b9f\u8df5Common Lisp_ \u3067\u306f\u5bfe\u7167\u7684\u306b\u597d\u3093\u3067\u7528\u3044\u3089\u308c\u3066\u3044\u3066\u3001\u5168\u7de8\u306b\u6e21\u3063\u3066\u983b\u7e41\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\u3057\u304b\u3057loop\u30de\u30af\u30ed\u306f\u96e3\u3057\u3044\u3068\u3044\u3046\u610f\u8b58\u304c\u3042\u308b\u306e\u304b\u305d\u306e\u8aac\u660e\u306f\u7b2c22\u7ae0\u3068\u304b\u306a\u308a\u5f8c\u56de\u3057\u306b\u3055\u308c\u3066\u304a\u308a\u3001\u3061\u3050\u306f\u3050\u306a\u611f\u3092\u53d7\u3051\u308b\u3002\u3053\u3053\u3067\u306f\u3001 **\u9ed2\u5e2f\u306e\u305f\u3081\u306eLOOP** \u3068\u3044\u3046\u984c\u306e\u3064\u3051\u3089\u308c\u305f\u305d\u306e\u7ae0\u3067\u89e3\u8aac\u3055\u308c\u3066\u3044\u308bloop\u30de\u30af\u30ed\u306e\u7528\u6cd5\u3092\u6574\u7406\u3057\u3066\u307f\u305f\u3002\n> \n> _ANSI Common Lisp_ \u3067\u306e\u9ed2\u9b54\u8853\u6271\u3044\u306b\u656c\u9060\u3057\u3066\u3044\u305floop\u30de\u30af\u30ed\u3060\u3063\u305f\u304c\u3001\u3053\u3046\u3057\u3066\u6574\u7406\u3057\u3066\u307f\u308b\u3068\u305d\u308c\u307b\u3069\u96e3\u3057\u304f\u8003\u3048\u305a\u3068\u3082\u4fbf\u5229\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u305d\u3046\u3060\u3002\n> \n> [\u5b9f\u8df5Common Lisp](http://www.amazon.co.jp/exec/obidos/ASIN/4274067211/)\n> \u4f5c\u8005: Peter Seibel,\u4f50\u91ce\u5321\u4fca,\u6c34\u4e38\u6df3,\u5712\u57ce\u96c5\u4e4b,\u91d1\u5b50\u7950\u4ecb\n> \u51fa\u7248\u793e/\u30e1\u30fc\u30ab\u30fc: \u30aa\u30fc\u30e0\u793e\n> \u767a\u58f2\u65e5: 2008/07/26\n> \u30e1\u30c7\u30a3\u30a2: \u5358\u884c\u672c\uff08\u30bd\u30d5\u30c8\u30ab\u30d0\u30fc\uff09\n\n\u4eca\u56de\u306f\u2026\n========\n\n\u4eca\u56de\u306f\u3001LOOP \u30de\u30af\u30ed\u306b\u95a2\u3059\u308b Emacs Lisp \u3068 Common Lisp \u306e\u975e\u4e92\u63db\u6027\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n## \u30d9\u30af\u30bf\u30fc\u306e\u30ea\u30fc\u30c9\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u306e\u9055\u3044\n\n* \u53b3\u5bc6\u306b\u306f\u3001LOOP\u30de\u30af\u30ed\u81ea\u4f53\u306e\u9055\u3044\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u2026\n\n```cl:CLISP\u306e\u5834\u5408\nCLISP> (loop for i across #(1 2 3) do (print i))\n\n1\n2\n3\n\u21d2NIL\n```\n\n```el:ELISP\u306e\u5834\u5408\nELISP> (require 'cl)\nELISP> (loop for i across [1 2 3] do (print i))\n1\n2\n3\n\u21d2nil\n```\n\n## \u5024\u306e\u7d2f\u7a4d(accumulation)\u306b\u95a2\u3059\u308b\u9055\u3044\n\n* Emacs Lisp \u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b concat (\u6587\u5b57\u5217\u306e\u7d50\u5408) accumulation \u304c\u4f7f\u3048\u307e\u3059\u3002\n\n```el:ELISP\u306e\u307f\nELISP> (require 'cl)\nELISP> (loop for str in '(\"A\" \"B\" \"C\")\n             for sep = \"\" then \",\"\n             concat sep\n             concat str)\n\u21d2\"A,B,C\"\n```\n\n\u6700\u5f8c\u306b\n======\n\n\u4ed6\u306b\u3082\u975e\u4e92\u63db\u7b49\u3042\u308a\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u304b https://twitter.com/akmiyoshi \u307e\u3067\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n", "tags": ["Emacs", "common-lisp", "Windows", "Linux", "Mac"]}