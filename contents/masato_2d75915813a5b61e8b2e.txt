{"context": " More than 1 year has passed since last update.Hubot\u3068Slack\u306eDocker\u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u3063\u3066MQTT\u306ePublish\u3068Subscribe\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002Hubot\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306fnpm\u30d1\u30c3\u30b1\u30fc\u30b8\u3092require\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u518d\u5229\u7528\u6027\u3092\u8003\u3048\u308b\u3068\u30b3\u30de\u30f3\u30c9\u306f\u5916\u90e8\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3057\u305f\u65b9\u304c\u3088\u3044\u3067\u3059\u304c\u3001\u30ab\u30b8\u30e5\u30a2\u30eb\u306bscripts\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306b\u74b0\u5883\u30c7\u30fc\u30bf\u3092publish\u3059\u308bRaspberry Pi 2\u3084\u3001MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092subscribe\u3057\u3066LED\u30e9\u30a4\u30c8\u306e\u96fb\u6e90\u3092\u5236\u5fa1\u3059\u308bBeagleBone Black\u306b\u3064\u3044\u3066\u306f\u6b21\u56de\u307e\u3068\u3081\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\n\n\u4eca\u306e\u6c17\u6e29\u304c\u77e5\u308a\u305f\u3044 (Subscribe)\nSlack\u304b\u3089bot\u306b\u300c\u4eca\u306e\u6c17\u6e29\u306f?\u300d\u3084\u300c\u4eca\u306e\u6c17\u6e29\u306f\uff1f\u300d\u306b\u8cea\u554f\u3059\u308b\u3068\u3001MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u304b\u3089subscribe\u3057\u3066\u3044\u308b\u74b0\u5883\u30c7\u30fc\u30bf\u306e\u6700\u65b0\u306e\u5024\u3092\u6559\u3048\u3066\u304f\u308c\u307e\u3059\u3002\n\nLED\u30e9\u30a4\u30c8\u3092on/off\u3057\u305f\u3044 (Publish)\nSlack\u304b\u3089bot\u306b\u300c\u30e9\u30a4\u30c8\u4ed8\u3051\u3066\u300d\u3084\u300c\u30e9\u30a4\u30c8\u6d88\u3057\u3066\u300d\u3068\u6307\u793a\u3059\u308b\u3068\u3001MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306bpublish\u3057\u3066\u690d\u7269\u80b2\u6210LED\u30e9\u30a4\u30c8\u3092\u4ed8\u3051\u305f\u308a\u6d88\u3057\u305f\u308a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\u524d\u56de\u4f5c\u3063\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3044\u304f\u3064\u304b\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n$ cd ~/node_apps/docker-hubot-slack\n$ tree\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 docker-compose.yml.default\n\u251c\u2500\u2500 redis\n\u2514\u2500\u2500 scripts\n    \u251c\u2500\u2500 hello.coffee\n    \u2514\u2500\u2500 mqtt_meshblu.coffee\n\n\nDockerfile\nDockerfile\u3067\u306fDocker\u30a4\u30e1\u30fc\u30b8\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u306bhubot\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3042\u308a\u307e\u3059\u3002Yeoman\u3092\u4f7f\u3063\u3066/app\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bHubot\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002Docker\u30db\u30b9\u30c8\u306e\u4f5c\u696d\u30e6\u30fc\u30b6\u30fc\u3068\u540c\u3058uid\u306edocker\u30e6\u30fc\u30b6\u30fc\u306b\u30b9\u30a4\u30c3\u30c1\u3057\u307e\u3059\u3002Yeoman\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u304c\u4f5c\u6210\u3057\u305f/app/package.json\u306b\u3001\u4eca\u56de\u4f7f\u7528\u3059\u308bhubot-slack\u3068mqtt\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8ffd\u52a0\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n~/node_apps/docker-hubot-slack/Dockerfile\nFROM iojs:2.3\nMAINTAINER Masato Shimizu <ma6ato@gmail.com>\n\nRUN mkdir -p /app\nWORKDIR /app\n\nRUN adduser --disabled-password --gecos '' --uid 1000 docker && \\\n    chown -R docker:docker /app\n\nRUN npm install -g hubot coffee-script yo generator-hubot\n\nUSER docker\nRUN yes | yo hubot --defaults && \\\n    npm install --save hubot-slack mqtt\n\n\n\nscripts/mqtt_meshblu.coffee\nMQTT\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306fMQTT.js\u3092\u4f7f\u3044\u307e\u3059\u3002\u4eca\u56de\u66f8\u3044\u305frobot.respond\u306e\u6b63\u898f\u8868\u73fe\u3067\u306f\u3001bot\u306f\u6700\u4f4e\u9650\u306e\u30b3\u30de\u30f3\u30c9\u3057\u304b\u7406\u89e3\u3067\u304d\u307e\u305b\u3093\u3002Rakuten MA\u306e\u5f62\u614b\u7d20\u89e3\u6790\u3092\u4f7f\u3063\u3066\u3082\u3046\u3061\u3087\u3063\u3068\u8ce2\u304f\u5fdc\u7b54\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3067\u3059\u3002\n\n~/node_apps/docker-hubot-slack/scripts/mqtt_meshblu.coffee\n# -*- coding: utf-8 -*-\n\nmqtt = require 'mqtt'\n\nopts =\n    host: process.env.MQTT_HOST\n    username: process.env.ACTION_1_UUID\n    password: process.env.ACTION_1_TOKEN\n    protocolId: 'MQIsdp'\n    protocolVersion: 3\n\nclient = mqtt.connect opts\nclient.subscribe process.env.ACTION_1_UUID\n\nsensor_data = ''\n\nclient.on 'message', (topic, message) ->\n    payload = JSON.parse message\n    sensor_data = payload.data\n\ncommands =\n    '\u6c17\u6e29': 'temperature'\n    '\u6e7f\u5ea6': 'humidity'\n    '\u6c17\u5727': 'pressure'\n\nunits =\n    '\u6c17\u6e29': '\u2103'\n    '\u6e7f\u5ea6': '%'\n    '\u6c17\u5727': 'hPa'\n\nmodule.exports = (robot) ->\n    robot.respond  /(\u6c17\u6e29|\u6e7f\u5ea6|\u6c17\u5727)\u3092(\u304a\u3057\u3048\u3066|\u6559\u3048\u3066)$/i, (res) ->\n        sensor = res.match[1]\n        answer = if sensor_data\n            retval = sensor_data[commands[sensor]] + ' ' + units[sensor]\n            sensor + '\u306f ' + retval + ' \u3067\u3059\u3002'\n        else\n            '\u30c7\u30fc\u30bf\u304c\u53d6\u308c\u307e\u305b\u3093\u3002:imp:'\n        res.send answer\n\n    robot.respond /\u30e9\u30a4\u30c8\u3092(\u3064\u3051\u3066|\u4ed8\u3051\u3066|\u3051\u3057\u3066|\u6d88\u3057\u3066)$/i, (res) ->\n        on_off = switch res.match[1]\n            when '\u3064\u3051\u3066', '\u4ed8\u3051\u3066' then 'led-on'\n            when '\u3051\u3057\u3066', '\u6d88\u3057\u3066' then 'led-off'\n            else 'led-on'\n        answer = if on_off == 'led-on' then '\u30d4\u30ab\u30c3\u3002' else '\u30ab\u30c1\u30c3\u3002'\n\n        message =\n            devices: process.env.ACTION_3_UUID\n            payload: on_off\n        client.publish 'message', JSON.stringify(message)\n\n        res.send answer + ':flashlight:'\n\n\n\nSubscribe\u3057\u305f\u74b0\u5883\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\nrobot.respond /\u30e9\u30a4\u30c8\u3092(\u3064\u3051\u3066|\u4ed8\u3051\u3066|\u3051\u3057\u3066|\u6d88\u3057\u3066)$/i, (res) ->\n\nRaspberry Pi\u306fBME280\u304b\u3089\u8a08\u6e2c\u3057\u305f\u74b0\u5883\u30c7\u30fc\u30bf\u3092JSON\u5f62\u5f0f\u3067MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306bpublish\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306ebot\u3067subscribe\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3059\u308b\u5ea6\u306b\u30b0\u30ed\u30fc\u30d0\u30eb\u306esensor_data\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002bot\u304c\u6c17\u6e29\u3084\u6e7f\u5ea6\u306e\u8cea\u554f\u3092\u53d7\u3051\u305f\u3068\u304d\u306b\u3001\u53d7\u4fe1\u3057\u3066\u3044\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\nPublish\u3057\u3066LED\u30e9\u30a4\u30c8\u306e\u30aa\u30f3\u30aa\u30d5\u306e\u6307\u793a\u3092\u51fa\u3059\nrobot.respond /\u30e9\u30a4\u30c8(\u3064\u3051\u3066|\u4ed8\u3051\u3066|\u3051\u3057\u3066|\u6d88\u3057\u3066)$/i, (res) ->\n\n\u300c\u3064\u3051\u3066\u300d\u306e\u5834\u5408\u306f\u300con\u300d\u3001\u300c\u3051\u3057\u3066\u300d\u306e\u5834\u5408\u306f\u300coff\u300d\u306e\u5024\u3092payload\u306b\u5165\u308c\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306bpublish\u3057\u307e\u3059\u3002\u3053\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306fBeagleBone Black\u304csubscribe\u3057\u3066\u3044\u307e\u3059\u3002on/off\u306b\u5fdc\u3058\u3066USB\u96fb\u6e90\u9023\u52d5\u30bf\u30c3\u30d7\u3092\u63a5\u7d9a\u3057\u3066\u3044\u308bUSB\u30cf\u30d6\u306e\u30dd\u30fc\u30c8\u306e\u96fb\u6e90\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002\u3053\u308c\u3060\u3068\u30ea\u30e2\u30fc\u30c8\u304b\u3089\u672c\u5f53\u306b\u690d\u7269\u80b2\u6210LED\u30e9\u30a4\u30c8\u304c\u70b9\u706f\u3057\u305f\u304b\u308f\u304b\u3089\u306a\u3044\u306e\u304c\u8ab2\u984c\u3067\u3059\u3002Web\u30ab\u30e1\u30e9\u3068\u304b\u4ed8\u3051\u305f\u3089\u3044\u3044\u304b\u3082\u3002\n\n[Hubot\u3068Slack\u306eDocker\u30a4\u30e1\u30fc\u30b8](http://qiita.com/masato/items/7a25ce0615ddf0acb621)\u3092\u4f7f\u3063\u3066MQTT\u306ePublish\u3068Subscribe\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002Hubot\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306fnpm\u30d1\u30c3\u30b1\u30fc\u30b8\u3092require\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u518d\u5229\u7528\u6027\u3092\u8003\u3048\u308b\u3068\u30b3\u30de\u30f3\u30c9\u306f\u5916\u90e8\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3057\u305f\u65b9\u304c\u3088\u3044\u3067\u3059\u304c\u3001\u30ab\u30b8\u30e5\u30a2\u30eb\u306bscripts\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306b\u74b0\u5883\u30c7\u30fc\u30bf\u3092publish\u3059\u308bRaspberry Pi 2\u3084\u3001MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092subscribe\u3057\u3066LED\u30e9\u30a4\u30c8\u306e\u96fb\u6e90\u3092\u5236\u5fa1\u3059\u308bBeagleBone Black\u306b\u3064\u3044\u3066\u306f\u6b21\u56de\u307e\u3068\u3081\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n## \u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\n\n### \u4eca\u306e\u6c17\u6e29\u304c\u77e5\u308a\u305f\u3044 (Subscribe)\n\nSlack\u304b\u3089bot\u306b\u300c\u4eca\u306e\u6c17\u6e29\u306f?\u300d\u3084\u300c\u4eca\u306e\u6c17\u6e29\u306f\uff1f\u300d\u306b\u8cea\u554f\u3059\u308b\u3068\u3001MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u304b\u3089subscribe\u3057\u3066\u3044\u308b\u74b0\u5883\u30c7\u30fc\u30bf\u306e\u6700\u65b0\u306e\u5024\u3092\u6559\u3048\u3066\u304f\u308c\u307e\u3059\u3002\n\n### LED\u30e9\u30a4\u30c8\u3092on/off\u3057\u305f\u3044 (Publish)\n\nSlack\u304b\u3089bot\u306b\u300c\u30e9\u30a4\u30c8\u4ed8\u3051\u3066\u300d\u3084\u300c\u30e9\u30a4\u30c8\u6d88\u3057\u3066\u300d\u3068\u6307\u793a\u3059\u308b\u3068\u3001MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306bpublish\u3057\u3066\u690d\u7269\u80b2\u6210LED\u30e9\u30a4\u30c8\u3092\u4ed8\u3051\u305f\u308a\u6d88\u3057\u305f\u308a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\n\u524d\u56de\u4f5c\u3063\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3044\u304f\u3064\u304b\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\u30ea\u30dd\u30b8\u30c8\u30ea\u306f[\u3053\u3061\u3089](https://github.com/IDCFChannel/docker-hubot-slack)\u3067\u3059\u3002\n\n```bash\n$ cd ~/node_apps/docker-hubot-slack\n$ tree\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 docker-compose.yml.default\n\u251c\u2500\u2500 redis\n\u2514\u2500\u2500 scripts\n    \u251c\u2500\u2500 hello.coffee\n    \u2514\u2500\u2500 mqtt_meshblu.coffee\n```\n\n### Dockerfile\n\nDockerfile\u3067\u306fDocker\u30a4\u30e1\u30fc\u30b8\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u306bhubot\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3042\u308a\u307e\u3059\u3002[Yeoman](http://yeoman.io/)\u3092\u4f7f\u3063\u3066`/app`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bHubot\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002Docker\u30db\u30b9\u30c8\u306e\u4f5c\u696d\u30e6\u30fc\u30b6\u30fc\u3068\u540c\u3058uid\u306e`docker`\u30e6\u30fc\u30b6\u30fc\u306b\u30b9\u30a4\u30c3\u30c1\u3057\u307e\u3059\u3002Yeoman\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u304c\u4f5c\u6210\u3057\u305f`/app/package.json`\u306b\u3001\u4eca\u56de\u4f7f\u7528\u3059\u308b[hubot-slack](https://github.com/slackhq/hubot-slack)\u3068[mqtt](https://github.com/mqttjs/MQTT.js)\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8ffd\u52a0\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```bash:~/node_apps/docker-hubot-slack/Dockerfile\nFROM iojs:2.3\nMAINTAINER Masato Shimizu <ma6ato@gmail.com>\n\nRUN mkdir -p /app\nWORKDIR /app\n\nRUN adduser --disabled-password --gecos '' --uid 1000 docker && \\\n    chown -R docker:docker /app\n\nRUN npm install -g hubot coffee-script yo generator-hubot\n\nUSER docker\nRUN yes | yo hubot --defaults && \\\n    npm install --save hubot-slack mqtt\n```\n\n## scripts/mqtt_meshblu.coffee\n\nMQTT\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f[MQTT.js](https://github.com/mqttjs/MQTT.js)\u3092\u4f7f\u3044\u307e\u3059\u3002\u4eca\u56de\u66f8\u3044\u305f`robot.respond`\u306e\u6b63\u898f\u8868\u73fe\u3067\u306f\u3001bot\u306f\u6700\u4f4e\u9650\u306e\u30b3\u30de\u30f3\u30c9\u3057\u304b\u7406\u89e3\u3067\u304d\u307e\u305b\u3093\u3002[Rakuten MA](https://github.com/rakuten-nlp/rakutenma)\u306e\u5f62\u614b\u7d20\u89e3\u6790\u3092\u4f7f\u3063\u3066\u3082\u3046\u3061\u3087\u3063\u3068\u8ce2\u304f\u5fdc\u7b54\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3067\u3059\u3002\n\n```coffeescript:~/node_apps/docker-hubot-slack/scripts/mqtt_meshblu.coffee\n# -*- coding: utf-8 -*-\n\nmqtt = require 'mqtt'\n\nopts =\n    host: process.env.MQTT_HOST\n    username: process.env.ACTION_1_UUID\n    password: process.env.ACTION_1_TOKEN\n    protocolId: 'MQIsdp'\n    protocolVersion: 3\n\nclient = mqtt.connect opts\nclient.subscribe process.env.ACTION_1_UUID\n\nsensor_data = ''\n\nclient.on 'message', (topic, message) ->\n    payload = JSON.parse message\n    sensor_data = payload.data\n\ncommands =\n    '\u6c17\u6e29': 'temperature'\n    '\u6e7f\u5ea6': 'humidity'\n    '\u6c17\u5727': 'pressure'\n\nunits =\n    '\u6c17\u6e29': '\u2103'\n    '\u6e7f\u5ea6': '%'\n    '\u6c17\u5727': 'hPa'\n\nmodule.exports = (robot) ->\n    robot.respond  /(\u6c17\u6e29|\u6e7f\u5ea6|\u6c17\u5727)\u3092(\u304a\u3057\u3048\u3066|\u6559\u3048\u3066)$/i, (res) ->\n        sensor = res.match[1]\n        answer = if sensor_data\n            retval = sensor_data[commands[sensor]] + ' ' + units[sensor]\n            sensor + '\u306f ' + retval + ' \u3067\u3059\u3002'\n        else\n            '\u30c7\u30fc\u30bf\u304c\u53d6\u308c\u307e\u305b\u3093\u3002:imp:'\n        res.send answer\n\n    robot.respond /\u30e9\u30a4\u30c8\u3092(\u3064\u3051\u3066|\u4ed8\u3051\u3066|\u3051\u3057\u3066|\u6d88\u3057\u3066)$/i, (res) ->\n        on_off = switch res.match[1]\n            when '\u3064\u3051\u3066', '\u4ed8\u3051\u3066' then 'led-on'\n            when '\u3051\u3057\u3066', '\u6d88\u3057\u3066' then 'led-off'\n            else 'led-on'\n        answer = if on_off == 'led-on' then '\u30d4\u30ab\u30c3\u3002' else '\u30ab\u30c1\u30c3\u3002'\n\n        message =\n            devices: process.env.ACTION_3_UUID\n            payload: on_off\n        client.publish 'message', JSON.stringify(message)\n\n        res.send answer + ':flashlight:'\n```\n\n### Subscribe\u3057\u305f\u74b0\u5883\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\n\n```coffeescript\nrobot.respond /\u30e9\u30a4\u30c8\u3092(\u3064\u3051\u3066|\u4ed8\u3051\u3066|\u3051\u3057\u3066|\u6d88\u3057\u3066)$/i, (res) ->\n```\n\nRaspberry Pi\u306fBME280\u304b\u3089\u8a08\u6e2c\u3057\u305f\u74b0\u5883\u30c7\u30fc\u30bf\u3092JSON\u5f62\u5f0f\u3067MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306bpublish\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306ebot\u3067subscribe\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3059\u308b\u5ea6\u306b\u30b0\u30ed\u30fc\u30d0\u30eb\u306e`sensor_data`\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002bot\u304c\u6c17\u6e29\u3084\u6e7f\u5ea6\u306e\u8cea\u554f\u3092\u53d7\u3051\u305f\u3068\u304d\u306b\u3001\u53d7\u4fe1\u3057\u3066\u3044\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n![avocado-temperature.png](https://qiita-image-store.s3.amazonaws.com/0/43745/edaed7d5-d33a-9cf4-622d-f974e66a1d77.png)\n\n\n\n### Publish\u3057\u3066LED\u30e9\u30a4\u30c8\u306e\u30aa\u30f3\u30aa\u30d5\u306e\u6307\u793a\u3092\u51fa\u3059\n\n\n```coffeescript\nrobot.respond /\u30e9\u30a4\u30c8(\u3064\u3051\u3066|\u4ed8\u3051\u3066|\u3051\u3057\u3066|\u6d88\u3057\u3066)$/i, (res) ->\n```\n\n\u300c\u3064\u3051\u3066\u300d\u306e\u5834\u5408\u306f\u300con\u300d\u3001\u300c\u3051\u3057\u3066\u300d\u306e\u5834\u5408\u306f\u300coff\u300d\u306e\u5024\u3092payload\u306b\u5165\u308c\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306bpublish\u3057\u307e\u3059\u3002\u3053\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306fBeagleBone Black\u304csubscribe\u3057\u3066\u3044\u307e\u3059\u3002on/off\u306b\u5fdc\u3058\u3066USB\u96fb\u6e90\u9023\u52d5\u30bf\u30c3\u30d7\u3092\u63a5\u7d9a\u3057\u3066\u3044\u308bUSB\u30cf\u30d6\u306e\u30dd\u30fc\u30c8\u306e\u96fb\u6e90\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002\u3053\u308c\u3060\u3068\u30ea\u30e2\u30fc\u30c8\u304b\u3089\u672c\u5f53\u306b\u690d\u7269\u80b2\u6210LED\u30e9\u30a4\u30c8\u304c\u70b9\u706f\u3057\u305f\u304b\u308f\u304b\u3089\u306a\u3044\u306e\u304c\u8ab2\u984c\u3067\u3059\u3002Web\u30ab\u30e1\u30e9\u3068\u304b\u4ed8\u3051\u305f\u3089\u3044\u3044\u304b\u3082\u3002\n\n![avocado-led.png](https://qiita-image-store.s3.amazonaws.com/0/43745/0a402414-d684-a94d-3dc6-f7938c5d9aa0.png)\n", "tags": ["IoT", "Meshblu1.3", "mqtt", "Hubot2.13.2", "IDCF\u30af\u30e9\u30a6\u30c9"]}