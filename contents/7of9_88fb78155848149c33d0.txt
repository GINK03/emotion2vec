{"context": "\n\u52d5\u4f5c\u74b0\u5883\nGeForce GTX 1070 (8GB)\nASRock Z170M Pro4S [Intel Z170chipset]\nUbuntu 14.04 LTS desktop amd64\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v8.0\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\n\n\n\u4fee\u7406\u304b\u3089\u3088\u3046\u3084\u304f\u5e30\u3063\u3066\u304d\u305fTensorFlow(+GTX 1070)\u5b9f\u884c\u74b0\u5883\u3002\n\u96fb\u6e90\u57fa\u677f\u306e\u6545\u969c\u3068\u306e\u3053\u3068\u3060\u3063\u305f\u3002\nsine curve\u306e\u5b66\u7fd2\u7d50\u679c\u306eweight, bias\u3092\u51fa\u529b\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u3002\nhttps://github.com/tensorflow/models/blob/master/inception/inception/slim/README.md\n\nVariables\n...\nIn addition to the functionality provided by tf.Variable, slim.variables keeps track of the variables created by slim.ops to define a model, which allows one to distinguish variables that belong to the model versus other variables.\n\n# Get all the variables defined by the model.\nmodel_variables = slim.variables.get_variables()\n\n\u4e0a\u8a18\u306eget_variables()\u306e\u884c\u3092\u8ffd\u52a0\u3057\u3066\u3001\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u3068\u306a\u3063\u305f\u3002\nTraceback (most recent call last):\n  File \"linreg2_reprod.py\", line 40, in <module>\n    model_variables = slim.variables.get_variables()\nAttributeError: 'module' object has no attribute 'get_variables'\n\nget_variables\u3068\u3044\u3046\u30a2\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u304c\u306a\u3044\u3068\u306e\u3053\u3068\u3002\n\u4ee3\u308f\u308a\u306b\u4ee5\u4e0b\u3068\u3059\u308b\u3068\u4e00\u5fdcmodel_variables\u3092\u53d6\u5f97\u3067\u304d\u305f\u3002\n\u8cc7\u6599\u304c\u53e4\u3044\u306e\u304b\u3001\u8cc7\u6599\u306e\u53c2\u7167\u5148\u3092\u3053\u3061\u3089\u304c\u9593\u9055\u3048\u3066\u3044\u308b\u306e\u304b\u306f\u4e0d\u660e\u3002\nmodel_variables = slim.get_variables()\nprint model_variables\n\n[<tensorflow.python.ops.variables.Variable object at 0x7fe57c5ffdd0>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c5ffb50>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c5905d0>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c5ff650>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c5ff810>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c590890>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c5ff710>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c590050>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c5d3cd0>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c526d10>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c462550>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c5d3c50>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c453d10>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c316790>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c316650>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c316490>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c325a50>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c2d0f50>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c334550>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c334c90>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c316f10>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c325e50>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c325650>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c2dfbd0>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c2fb690>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c28ae10>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c244590>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c2edd10>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c298450>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c2a8a50>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c2fb390>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c334750>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c26f0d0>]\n\nvariables\u306e\u683c\u7d0d\u5834\u6240\uff08\u30a2\u30c9\u30ec\u30b9\uff1f\uff09\u304c\u5f97\u3089\u308c\u305f\u304c\u3001\u6b32\u3057\u3044\u60c5\u5831\u306f\u305d\u306e\u5148\u306b\u3042\u308b\u500b\u3005\u306e\u4fc2\u6570\u3002\n\ncode\n\nlinreg2_reprod.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\nimport tensorflow as tf\nimport tensorflow.contrib.slim as slim\n\n# \u30d5\u30a1\u30a4\u30eb\u540d\u306e Queue \u3092\u4f5c\u6210\nfilename_queue = tf.train.string_input_producer([\"input.csv\"])\n\n# CSV \u3092 parse\nreader = tf.TextLineReader()\nkey, value = reader.read(filename_queue)\ninput1, output = tf.decode_csv(value, record_defaults=[[0.], [0.]])\ninputs = tf.pack([input1])\noutput = tf.pack([output])\n\nbatch_size=4 # [4]\ninputs_batch, output_batch = tf.train.shuffle_batch([inputs, output], batch_size, capacity=40, min_after_dequeue=batch_size)\n\ninput_ph = tf.placeholder(\"float\", [None,1])\noutput_ph = tf.placeholder(\"float\",[None,1])\n\n## NN \u306e\u30b0\u30e9\u30d5\u751f\u6210\nhiddens = slim.stack(input_ph, slim.fully_connected, [1,7,7,7], \n  activation_fn=tf.nn.sigmoid, scope=\"hidden\")\nprediction = slim.fully_connected(hiddens, 1, activation_fn=tf.nn.sigmoid, scope=\"output\")\nloss = tf.contrib.losses.mean_squared_error(prediction, output_ph)\n\n#train_op = slim.learning.create_train_op(loss, tf.train.AdamOptimizer(0.01))\ntrain_op = slim.learning.create_train_op(loss, tf.train.AdamOptimizer(0.001))\n\n#def feed_dict(inputs, output):\n#    return {input_ph: inputs.eval(), output_ph: output.eval()}\n\n\ninit_op = tf.initialize_all_variables()\n\n#if 1 // show variables\n#model_variables = slim.variables.get_variables()\nmodel_variables = slim.get_variables()\nprint model_variables\n#print \"VARIABLES\", tf.get_collection(tf.GraphKeys.VARIABLES,scope='output')\n#print \"TRAINABLE_VARIABLES\", tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES,scope='output')\n#print \"TABLE_INITIALIZERS\", tf.get_collection(tf.GraphKeys.TABLE_INITIALIZERS)\n#print \"SUMMARIES\", tf.get_collection(tf.GraphKeys.SUMMARIES)\n#print \"QUEUE_RUNNERS\", tf.get_collection(tf.GraphKeys.QUEUE_RUNNERS)\nprint \"\"\nsys.exit()\n#endif\n\nwith tf.Session() as sess:\n  coord = tf.train.Coordinator()\n  threads = tf.train.start_queue_runners(sess=sess, coord=coord)\n\n  try:\n    sess.run(init_op)\n    for i in range(30000): #[10000]\n      inpbt, outbt = sess.run([inputs_batch, output_batch])\n      _, t_loss = sess.run([train_op, loss], feed_dict={input_ph:inpbt, output_ph: outbt})\n      if (i+1) % 100 == 0:\n        print(\"%d,%f\" % (i+1, t_loss))\n#        print(\"%d,%f,#step, loss\" % (i+1, t_loss))\n  finally:\n    coord.request_stop()\n\n  coord.join(threads)\n\n\n\nlink\n\u3053\u3061\u3089\u306e\u65b9\u304c\u672c\u6765\u53c2\u7167\u3059\u3079\u304d\u65b9\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\nhttps://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/slim\n# Model Variables\nweights = slim.model_variable('weights',\n                              shape=[10, 10, 3 , 3],\n                              initializer=tf.truncated_normal_initializer(stddev=0.1),\n                              regularizer=slim.l2_regularizer(0.05),\n                              device='/CPU:0')\nmodel_variables = slim.get_model_variables()\n\n# Regular variables\nmy_var = slim.variable('my_var',\n                       shape=[20, 1],\n                       initializer=tf.zeros_initializer)\nregular_variables_and_model_variables = slim.get_variables()\n\n.../inception/slim\u306e\u65b9\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304c8\u670830\u65e5\u3002\n.../contrib/slim\u306e\u65b9\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304c12\u67082\u65e5\u3002\n```txt:\u52d5\u4f5c\u74b0\u5883\nGeForce GTX 1070 (8GB)\nASRock Z170M Pro4S [Intel Z170chipset]\nUbuntu 14.04 LTS desktop amd64\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v8.0\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\n```\n\n\u4fee\u7406\u304b\u3089\u3088\u3046\u3084\u304f\u5e30\u3063\u3066\u304d\u305fTensorFlow(+GTX 1070)\u5b9f\u884c\u74b0\u5883\u3002\n\u96fb\u6e90\u57fa\u677f\u306e\u6545\u969c\u3068\u306e\u3053\u3068\u3060\u3063\u305f\u3002\n\nsine curve\u306e\u5b66\u7fd2\u7d50\u679c\u306eweight, bias\u3092\u51fa\u529b\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u3002\n\nhttps://github.com/tensorflow/models/blob/master/inception/inception/slim/README.md\n\n> Variables\n...\n\n>In addition to the functionality provided by tf.Variable, slim.variables keeps track of the variables created by slim.ops to define a model, which allows one to distinguish variables that belong to the model versus other variables.\n\n```\n# Get all the variables defined by the model.\nmodel_variables = slim.variables.get_variables()\n```\n\n\u4e0a\u8a18\u306eget_variables()\u306e\u884c\u3092\u8ffd\u52a0\u3057\u3066\u3001\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u3068\u306a\u3063\u305f\u3002\n\n```\nTraceback (most recent call last):\n  File \"linreg2_reprod.py\", line 40, in <module>\n    model_variables = slim.variables.get_variables()\nAttributeError: 'module' object has no attribute 'get_variables'\n```\n\nget_variables\u3068\u3044\u3046\u30a2\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u304c\u306a\u3044\u3068\u306e\u3053\u3068\u3002\n\n\u4ee3\u308f\u308a\u306b\u4ee5\u4e0b\u3068\u3059\u308b\u3068\u4e00\u5fdcmodel_variables\u3092\u53d6\u5f97\u3067\u304d\u305f\u3002\n\u8cc7\u6599\u304c\u53e4\u3044\u306e\u304b\u3001\u8cc7\u6599\u306e\u53c2\u7167\u5148\u3092\u3053\u3061\u3089\u304c\u9593\u9055\u3048\u3066\u3044\u308b\u306e\u304b\u306f\u4e0d\u660e\u3002\n\n```\nmodel_variables = slim.get_variables()\nprint model_variables\n```\n\n`[<tensorflow.python.ops.variables.Variable object at 0x7fe57c5ffdd0>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c5ffb50>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c5905d0>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c5ff650>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c5ff810>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c590890>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c5ff710>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c590050>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c5d3cd0>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c526d10>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c462550>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c5d3c50>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c453d10>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c316790>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c316650>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c316490>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c325a50>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c2d0f50>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c334550>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c334c90>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c316f10>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c325e50>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c325650>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c2dfbd0>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c2fb690>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c28ae10>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c244590>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c2edd10>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c298450>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c2a8a50>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c2fb390>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c334750>, <tensorflow.python.ops.variables.Variable object at 0x7fe57c26f0d0>]\n`\n\nvariables\u306e\u683c\u7d0d\u5834\u6240\uff08\u30a2\u30c9\u30ec\u30b9\uff1f\uff09\u304c\u5f97\u3089\u308c\u305f\u304c\u3001\u6b32\u3057\u3044\u60c5\u5831\u306f\u305d\u306e\u5148\u306b\u3042\u308b\u500b\u3005\u306e\u4fc2\u6570\u3002\n\n### code\n\n```linreg2_reprod.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\nimport tensorflow as tf\nimport tensorflow.contrib.slim as slim\n\n# \u30d5\u30a1\u30a4\u30eb\u540d\u306e Queue \u3092\u4f5c\u6210\nfilename_queue = tf.train.string_input_producer([\"input.csv\"])\n\n# CSV \u3092 parse\nreader = tf.TextLineReader()\nkey, value = reader.read(filename_queue)\ninput1, output = tf.decode_csv(value, record_defaults=[[0.], [0.]])\ninputs = tf.pack([input1])\noutput = tf.pack([output])\n\nbatch_size=4 # [4]\ninputs_batch, output_batch = tf.train.shuffle_batch([inputs, output], batch_size, capacity=40, min_after_dequeue=batch_size)\n\ninput_ph = tf.placeholder(\"float\", [None,1])\noutput_ph = tf.placeholder(\"float\",[None,1])\n\n## NN \u306e\u30b0\u30e9\u30d5\u751f\u6210\nhiddens = slim.stack(input_ph, slim.fully_connected, [1,7,7,7], \n  activation_fn=tf.nn.sigmoid, scope=\"hidden\")\nprediction = slim.fully_connected(hiddens, 1, activation_fn=tf.nn.sigmoid, scope=\"output\")\nloss = tf.contrib.losses.mean_squared_error(prediction, output_ph)\n\n#train_op = slim.learning.create_train_op(loss, tf.train.AdamOptimizer(0.01))\ntrain_op = slim.learning.create_train_op(loss, tf.train.AdamOptimizer(0.001))\n\n#def feed_dict(inputs, output):\n#    return {input_ph: inputs.eval(), output_ph: output.eval()}\n\n\ninit_op = tf.initialize_all_variables()\n\n#if 1 // show variables\n#model_variables = slim.variables.get_variables()\nmodel_variables = slim.get_variables()\nprint model_variables\n#print \"VARIABLES\", tf.get_collection(tf.GraphKeys.VARIABLES,scope='output')\n#print \"TRAINABLE_VARIABLES\", tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES,scope='output')\n#print \"TABLE_INITIALIZERS\", tf.get_collection(tf.GraphKeys.TABLE_INITIALIZERS)\n#print \"SUMMARIES\", tf.get_collection(tf.GraphKeys.SUMMARIES)\n#print \"QUEUE_RUNNERS\", tf.get_collection(tf.GraphKeys.QUEUE_RUNNERS)\nprint \"\"\nsys.exit()\n#endif\n\nwith tf.Session() as sess:\n  coord = tf.train.Coordinator()\n  threads = tf.train.start_queue_runners(sess=sess, coord=coord)\n\n  try:\n    sess.run(init_op)\n    for i in range(30000): #[10000]\n      inpbt, outbt = sess.run([inputs_batch, output_batch])\n      _, t_loss = sess.run([train_op, loss], feed_dict={input_ph:inpbt, output_ph: outbt})\n      if (i+1) % 100 == 0:\n        print(\"%d,%f\" % (i+1, t_loss))\n#        print(\"%d,%f,#step, loss\" % (i+1, t_loss))\n  finally:\n    coord.request_stop()\n\n  coord.join(threads)\n```\n\n## link\n\n\u3053\u3061\u3089\u306e\u65b9\u304c\u672c\u6765\u53c2\u7167\u3059\u3079\u304d\u65b9\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\nhttps://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/slim\n\n\n```\n# Model Variables\nweights = slim.model_variable('weights',\n                              shape=[10, 10, 3 , 3],\n                              initializer=tf.truncated_normal_initializer(stddev=0.1),\n                              regularizer=slim.l2_regularizer(0.05),\n                              device='/CPU:0')\nmodel_variables = slim.get_model_variables()\n\n# Regular variables\nmy_var = slim.variable('my_var',\n                       shape=[20, 1],\n                       initializer=tf.zeros_initializer)\nregular_variables_and_model_variables = slim.get_variables()\n```\n\n.../inception/slim\u306e\u65b9\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304c8\u670830\u65e5\u3002\n.../contrib/slim\u306e\u65b9\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304c12\u67082\u65e5\u3002\n\n", "tags": ["TensorFlow", "borgWarp", "TF-Slim"]}