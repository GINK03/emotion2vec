{"context": "\n\n\u307e\u3068\u3081\nCxx.instance(__current_compiler__).shadow (clang::Module*\u578b) \u306b IR \u304c\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3001shadow->dump() \u3068\u3057\u3066\u63a2\u3059\u304b\u3001 shadow->getFunction(\"mangle\u3055\u308c\u305f\u95a2\u6570\u540d\")->dump() \u3068\u3059\u308b\u3002cxx\"...\" \u3092\u4f7f\u3046\u5834\u5408\u306f\u3068\u3082\u304b\u304f\u3001icxx\"...\" \u3092\u4f7f\u3046\u5834\u5408\u306fmangle\u3055\u308c\u305f\u95a2\u6570\u540d\u3092\u63a2\u3059\u306e\u304c\u3084\u3063\u304b\u3044\u3060\u3063\u305f\u306e\u3067\u3001\u4ee5\u4e0b\u306b\u624b\u9806\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\n\nJulia\njulia> versioninfo()\nJulia Version 0.6.0-dev.446\nCommit cd94c99* (2016-09-01 13:15 UTC)\nPlatform Info:\n  System: Darwin (x86_64-apple-darwin15.5.0)\n  CPU: Intel(R) Core(TM) i5-4258U CPU @ 2.40GHz\n  WORD_SIZE: 64\n  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Haswell)\n  LAPACK: libopenblas64_\n  LIBM: libopenlibm\n  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)\n\n\nCxx.jl\nr9y9/Cxx.jl@0f924cd1\n\n\u4e0b\u6e96\u5099\n\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8aad\u307f\u8fbc\u3080\njulia> @time using Cxx\n  9.823152 seconds (1.68 M allocations: 74.998 MB, 2.13% gc time)\n\nllvm\u306e\u5404\u7a2e\u30d8\u30c3\u30c0\u30fc\u3092include\u3059\u308b\njulia> @time include(Pkg.dir(\"Cxx\",\"test\",\"llvmincludes.jl\"))\n  1.911098 seconds (32.05 k allocations: 1.390 MB)\n\n\u6253\u3064\u306e\u304c\u9762\u5012\u306a\u306e\u3067\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u3064\u304f\u308b\njulia> C = Cxx.instance(Cxx.__current_compiler__);\n\n\u6e96\u5099\u306f\u4ee5\u4e0a\u3067\u3059\n\n1. cxx\"...\" \u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u306eIR\u3092\u30c0\u30f3\u30d7\u3059\u308b\n\u4f8b1. \njulia> cxx\"\"\"\n\n       extern \"C\" {\n\n       int f() { return 1; }\n\n       }\n\n       \"\"\"\n\n\u4f8b2. \njulia> cxx\"\"\"\n\n       double ff(int x) { return static_cast<double>(x); }\n\n       \"\"\"\n\n\nextern \"C\"\u3067name mangling\u3092\u907f\u3051\u305f\u5834\u5408\n\u7c21\u5358\u3067\u3059\u3002\njulia> llvmf = icxx\"\"\"$(C.shadow)->getFunction($(pointer(\"f\")));\"\"\"; llvmf != C_NULL && icxx\"$(llvmf)->dump();\"\n\n; Function Attrs: nounwind\ndefine i32 @f() #0 {\nentry:\n  ret i32 1\n}\n\n\u3067OK\u3067\u3059\n\nextern \"C\" \u3057\u306a\u3044\u5834\u5408\nmangling\u3055\u308c\u305f\u540d\u524d\u3092\u8abf\u3079\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u7c21\u5358\u306a\u95a2\u6570\u540d\u306e\u5834\u5408\u306f\u3001\u4f55\u3068\u306a\u304f\u63a8\u6e2c\u3067\u304d\u308b\u306e\u3067\u3001\u81ea\u5206\u306e\u982d\u3067mangling\u3057\u307e\u3059\njulia> llvmf = icxx\"\"\"$(C.shadow)->getFunction($(pointer(\"_Z2ffi\")));\"\"\"; llvmf != C_NULL && icxx\"$(llvmf)->dump();\"\n\n; Function Attrs: nounwind\ndefine double @_Z2ffi(i32 %x) #0 {\nentry:\n  %x.addr = alloca i32, align 4\n  store i32 %x, i32* %x.addr, align 4\n  %0 = load i32, i32* %x.addr, align 4\n  %conv = sitofp i32 %0 to double\n  ret double %conv\n}\n\n\u3082\u3057\u982d\u306e\u306a\u304b\u3067mangling\u3067\u304d\u306a\u3044\u5834\u5408\u306f\uff08\u591a\u304f\u306e\u5834\u5408\u306f\u305d\u3046\u3060\u3068\u601d\u3044\u307e\u3059\u304c\uff09\u3001\njulia> icxx\"$(C.shadow)->dump();\"\n\n\u3068\u3057\u3066\u3001\u5927\u91cf\u306b\u5410\u304b\u308c\u308bIR\u306e\u4e2d\u304b\u3089\u3001\u76ee\u5f53\u3066\u306e\u7269\u3092\u63a2\u3057\u307e\u3059\u3002\u304d\u3063\u3068\u5f8c\u308d\u306e\u65b9\u306b\u3042\u308b\u306e\u3067\u3001\u63a2\u3059\u306e\u306f\u96e3\u3057\u304f\u306a\u3044\u306f\u305a\u3067\u3059\u3002\n\u3082\u3046\u4e00\u3064\u3001mangle\u3055\u308c\u305f\u540d\u524d\u3092\u898b\u3064\u3051\u308b\u65b9\u6cd5\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u306f\u6b21\u3067\u8ff0\u3079\u307e\u3059\u3002\n\n2. icxx\"...\" \u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u306eIR\u3092\u30c0\u30f3\u30d7\u3059\u308b\n\u3053\u306e\u5834\u5408\u3001cxx\"...\" \u306e\u5834\u5408\u3068\u6bd4\u3079\u308b\u3068\u9762\u5012\u3067\u3059\u3002\u306a\u305c\u306a\u3089\u3001icxx\"...\" \u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u304d\u306b\u3001\u52d5\u7684\u306bCxx.jl\u304c\u9069\u5f53\u306a\u95a2\u6570\u540d\u3067\u95a2\u6570\u3092\u751f\u6210\u3059\u308b\u304b\u3089\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u69d8\u306aJulia\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u305f\u3068\u3057\u307e\u3059\u3002\njulia> f() = icxx\"f();\" + 1\nf (generic function with 1 method)\n\n\u5148\u307b\u3069\u306eC++\u95a2\u6570 f \u306e\u5b9a\u7fa9\u3088\u308a\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\njulia> @assert f() == 2\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30c0\u30f3\u30d7\u3057\u3066\u63a2\u3059\u306e\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f Gallium\uff08\u6b63\u78ba\u306b\u306fASTInterpreter\uff09\u3092\u4f7f\u3063\u305f\u65b9\u6cd5\u3092\u4e00\u3064\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nGallium \u3067cxxstr_impl\u306b\u30b9\u30c6\u30c3\u30d7\u30a4\u30f3\uff08generated function\u306a\u306e\u3067\u3001sg \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3044\u307e\u3059\uff09\u3057\u3066 FunctionDecl \u3092\u63a2\u3057\u3066\u3001mangle\u3055\u308c\u305f\u540d\u524d\u3092\u6c42\u3081\u308b\nulia> @enter f()\nIn REPL[16]:1\n1 f() = icxx\"f();\" + 1\n\nAbout to run: (Core.apply_type)(Cxx.SourceBuf{id},33)\n1|debug > sg\nIn /Users/ryuyamamoto/.julia/v0.6/Cxx/src/cxxstr.jl:203\n202\n203   immutable SourceBuf{id}; end\n204   sourceid{id}(::Type{SourceBuf{id}}) = id\n205\n\nAbout to run: (Core.apply_type)(Cxx.SourceBuf{id},33)\n1|debug >\nIn /Users/ryuyamamoto/.julia/v0.6/Cxx/src/cxxstr.jl:203\n202\n203   immutable SourceBuf{id}; end\n204   sourceid{id}(::Type{SourceBuf{id}}) = id\n205\n\nAbout to run: return Cxx.SourceBuf{33}()\n1|debug >\nIn REPL[16]:1\n1 f() = icxx\"f();\" + 1\n\nAbout to run: (Cxx.cxxstr_impl)(Cxx.CxxInstance{1}(),Cxx.SourceBuf{33}())\n1|debug >\nIn /Users/ryuyamamoto/.julia/v0.6/Cxx/src/cxxstr.jl:343\n342   @generated function cxxstr_impl(CT, sourcebuf, args...)\n343       C = instance(CT)\n344       id = sourceid(sourcebuf)\n345       buf, filename, line, col = sourcebuffers[id]\n\nAbout to run: (Cxx.instance)(Cxx.CxxInstance{1})\n1|debug > n\nIn /Users/ryuyamamoto/.julia/v0.6/Cxx/src/cxxstr.jl:343\n343       C = instance(CT)\n344       id = sourceid(sourcebuf)\n345       buf, filename, line, col = sourcebuffers[id]\n346\n\nAbout to run: (Cxx.sourceid)(Cxx.SourceBuf{33})\n1|debug >\nIn /Users/ryuyamamoto/.julia/v0.6/Cxx/src/cxxstr.jl:343\n344       id = sourceid(sourcebuf)\n345       buf, filename, line, col = sourcebuffers[id]\n346\n347       FD, llvmargs, argidxs, symargs = CreateFunctionWithBody(C,buf, args...; filename = filename, line = line, col = col)\n\nAbout to run: (getindex)(<suppressed 74 bytes of output>,33)\n1|debug >\nIn /Users/ryuyamamoto/.julia/v0.6/Cxx/src/cxxstr.jl:343\n346\n347       FD, llvmargs, argidxs, symargs = CreateFunctionWithBody(C,buf, args...; filename = filename, line = line, col = col)\n348       EmitTopLevelDecl(C,FD)\n349\n\nAbout to run: (Core.kwfunc)(Cxx.CreateFunctionWithBody)\n1|debug >\nIn /Users/ryuyamamoto/.julia/v0.6/Cxx/src/cxxstr.jl:343\n347       FD, llvmargs, argidxs, symargs = CreateFunctionWithBody(C,buf, args...; filename = filename, line = line, col = col)\n348       EmitTopLevelDecl(C,FD)\n349\n350       for T in args\n\nAbout to run: (Cxx.EmitTopLevelDecl)(<suppressed 550 bytes of output>,(class clang::Decl *) @0x00000003214dfe38\n)\n1|julia > FD |> dump\nFunctionDecl 0x3214dfe38 <line:1:1, line:3:1> line:1:1 icxx106 'int (void)'\n`-CompoundStmt 0x3214dffa0 <col:1, line:3:1>\n  `-ReturnStmt 0x3214e0018 <line:1:1, line:2:3>\n    `-CallExpr 0x3214dff78 <col:1, col:3> 'int'\nnothing\n\n\u3053\u306e FD \u3068\u3044\u3046\u306e\u304c FunctionDecl \u3067\u3059\u3002\u3053\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u899a\u3048\u3066\u304a\u3044\u3066\u3001\nclang::FunctionDecl* \u578b\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u3001\njulia> FD = pcpp\"clang::FunctionDecl\"(Ptr{Void}(0x00000003214dfe38))\n(class clang::FunctionDecl *) @0x00000003214dfe38\n\nmangle\u3055\u308c\u305f\u540d\u524d\u3092\u6c42\u3081\u308c\u3070\u3001\njulia> fname = Cxx.getMangledFunctionName(C, FD)\n\"_ZN6__icxx7icxx106Ev\"\n\n\u3042\u3068\u306f cxx\"...\" \u306e\u5834\u5408\u3068\u540c\u69d8\u3067\u3059\njulia> llvmf = icxx\"\"\"$(C.shadow)->getFunction($(pointer(fname)));\"\"\"; llvmf != C_NULL && icxx\"$(llvmf)->dump();\"\n\n; Function Attrs: nounwind\ndefine i32 @_ZN6__icxx7icxx106Ev() #0 {\nentry:\n  %call = call i32 @f()\n  ret i32 %call\n}\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n\u9577\u304b\u3063\u305f\u3002llvm, clang \u306b\u3064\u3044\u3066\u307e\u3060\u307e\u3060\u7121\u77e5\u306a\u306e\u3067\u3001\u3053\u308c\u304c\u3044\u3044\u65b9\u6cd5\u306a\u306e\u304b\u306f\u6b63\u76f4\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u8a66\u884c\u932f\u8aa4\u3057\u305f\u7d50\u679c\u3053\u3046\u306a\u308a\u307e\u3057\u305f\u3002\n\u304a\u3057\u307e\u3044\n\n\n\n\n\u3053\u306e\u8a18\u4e8b\u306e\u7bc4\u56f2\u3067\u306f\u3001v0.5\u306a\u3089 https://github.com/Keno/Cxx.jl \u3067\u3082\u3044\u3044\u306f\u305a\u3067\u3059\u304c\u3001RTTI\u3092\u6709\u52b9\u306b\u3057\u3066\u4f7f\u3044\u305f\u304b\u3063\u305f\u306e\u3068\u3001v0.6 \u3067\u306f llvm\u306e\u30d8\u30c3\u30c0\u30fc\u306einclude\u3067\u3053\u3051\u3066\u3057\u307e\u3046\u90e8\u5206\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u30d5\u30a9\u30fc\u30af\u3057\u3066\u3044\u307e\u3059\u00a0\u21a9\n\n\n\n## \u307e\u3068\u3081\n\n`Cxx.instance(__current_compiler__).shadow` (`clang::Module*`\u578b) \u306b IR \u304c\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3001`shadow->dump()` \u3068\u3057\u3066\u63a2\u3059\u304b\u3001 `shadow->getFunction(\"mangle\u3055\u308c\u305f\u95a2\u6570\u540d\")->dump()` \u3068\u3059\u308b\u3002`cxx\"...\"` \u3092\u4f7f\u3046\u5834\u5408\u306f\u3068\u3082\u304b\u304f\u3001`icxx\"...\"` \u3092\u4f7f\u3046\u5834\u5408\u306fmangle\u3055\u308c\u305f\u95a2\u6570\u540d\u3092\u63a2\u3059\u306e\u304c\u3084\u3063\u304b\u3044\u3060\u3063\u305f\u306e\u3067\u3001\u4ee5\u4e0b\u306b\u624b\u9806\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\n\n## \u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\n\n### Julia\n\n```jlcon\njulia> versioninfo()\nJulia Version 0.6.0-dev.446\nCommit cd94c99* (2016-09-01 13:15 UTC)\nPlatform Info:\n  System: Darwin (x86_64-apple-darwin15.5.0)\n  CPU: Intel(R) Core(TM) i5-4258U CPU @ 2.40GHz\n  WORD_SIZE: 64\n  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Haswell)\n  LAPACK: libopenblas64_\n  LIBM: libopenlibm\n  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)\n```\n\n### Cxx.jl\n\n[r9y9/Cxx.jl@0f924cd](https://github.com/r9y9/Cxx.jl/commit/0f924cdf5792d9174957c075cdf4a3a82226f9b7)[^1]\n\n[^1]: \u3053\u306e\u8a18\u4e8b\u306e\u7bc4\u56f2\u3067\u306f\u3001v0.5\u306a\u3089 https://github.com/Keno/Cxx.jl \u3067\u3082\u3044\u3044\u306f\u305a\u3067\u3059\u304c\u3001RTTI\u3092\u6709\u52b9\u306b\u3057\u3066\u4f7f\u3044\u305f\u304b\u3063\u305f\u306e\u3068\u3001v0.6 \u3067\u306f llvm\u306e\u30d8\u30c3\u30c0\u30fc\u306einclude\u3067\u3053\u3051\u3066\u3057\u307e\u3046\u90e8\u5206\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u30d5\u30a9\u30fc\u30af\u3057\u3066\u3044\u307e\u3059\n\n\n## \u4e0b\u6e96\u5099\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8aad\u307f\u8fbc\u3080\n\n```jlcon\njulia> @time using Cxx\n  9.823152 seconds (1.68 M allocations: 74.998 MB, 2.13% gc time)\n```\n\nllvm\u306e\u5404\u7a2e\u30d8\u30c3\u30c0\u30fc\u3092include\u3059\u308b\n\n```jlcon\njulia> @time include(Pkg.dir(\"Cxx\",\"test\",\"llvmincludes.jl\"))\n  1.911098 seconds (32.05 k allocations: 1.390 MB)\n```\n\n\u6253\u3064\u306e\u304c\u9762\u5012\u306a\u306e\u3067\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u3064\u304f\u308b\n\n```jlcon\njulia> C = Cxx.instance(Cxx.__current_compiler__);\n```\n\n\u6e96\u5099\u306f\u4ee5\u4e0a\u3067\u3059\n\n## 1. `cxx\"...\"` \u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u306eIR\u3092\u30c0\u30f3\u30d7\u3059\u308b\n\n\u4f8b1. \n\n```jlcon\njulia> cxx\"\"\"\n       extern \"C\" {\n       int f() { return 1; }\n       }\n       \"\"\"\n```\n\n\u4f8b2. \n\n```jlcon\njulia> cxx\"\"\"\n       double ff(int x) { return static_cast<double>(x); }\n       \"\"\"\n```\n\n### `extern \"C\"`\u3067name mangling\u3092\u907f\u3051\u305f\u5834\u5408\n\n\u7c21\u5358\u3067\u3059\u3002\n\n```jlcon\njulia> llvmf = icxx\"\"\"$(C.shadow)->getFunction($(pointer(\"f\")));\"\"\"; llvmf != C_NULL && icxx\"$(llvmf)->dump();\"\n\n; Function Attrs: nounwind\ndefine i32 @f() #0 {\nentry:\n  ret i32 1\n}\n```\n\n\u3067OK\u3067\u3059\n\n### `extern \"C\"` \u3057\u306a\u3044\u5834\u5408\n\nmangling\u3055\u308c\u305f\u540d\u524d\u3092\u8abf\u3079\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u7c21\u5358\u306a\u95a2\u6570\u540d\u306e\u5834\u5408\u306f\u3001\u4f55\u3068\u306a\u304f\u63a8\u6e2c\u3067\u304d\u308b\u306e\u3067\u3001\u81ea\u5206\u306e\u982d\u3067mangling\u3057\u307e\u3059\n\n```jlcon\njulia> llvmf = icxx\"\"\"$(C.shadow)->getFunction($(pointer(\"_Z2ffi\")));\"\"\"; llvmf != C_NULL && icxx\"$(llvmf)->dump();\"\n\n; Function Attrs: nounwind\ndefine double @_Z2ffi(i32 %x) #0 {\nentry:\n  %x.addr = alloca i32, align 4\n  store i32 %x, i32* %x.addr, align 4\n  %0 = load i32, i32* %x.addr, align 4\n  %conv = sitofp i32 %0 to double\n  ret double %conv\n}\n```\n\n\u3082\u3057\u982d\u306e\u306a\u304b\u3067mangling\u3067\u304d\u306a\u3044\u5834\u5408\u306f\uff08\u591a\u304f\u306e\u5834\u5408\u306f\u305d\u3046\u3060\u3068\u601d\u3044\u307e\u3059\u304c\uff09\u3001\n\n```jlcon\njulia> icxx\"$(C.shadow)->dump();\"\n```\n\n\u3068\u3057\u3066\u3001\u5927\u91cf\u306b\u5410\u304b\u308c\u308bIR\u306e\u4e2d\u304b\u3089\u3001\u76ee\u5f53\u3066\u306e\u7269\u3092\u63a2\u3057\u307e\u3059\u3002\u304d\u3063\u3068\u5f8c\u308d\u306e\u65b9\u306b\u3042\u308b\u306e\u3067\u3001\u63a2\u3059\u306e\u306f\u96e3\u3057\u304f\u306a\u3044\u306f\u305a\u3067\u3059\u3002\n\n\u3082\u3046\u4e00\u3064\u3001mangle\u3055\u308c\u305f\u540d\u524d\u3092\u898b\u3064\u3051\u308b\u65b9\u6cd5\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u306f\u6b21\u3067\u8ff0\u3079\u307e\u3059\u3002\n\n\n## 2. `icxx\"...\"` \u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u306eIR\u3092\u30c0\u30f3\u30d7\u3059\u308b\n\n\u3053\u306e\u5834\u5408\u3001`cxx\"...\"` \u306e\u5834\u5408\u3068\u6bd4\u3079\u308b\u3068\u9762\u5012\u3067\u3059\u3002\u306a\u305c\u306a\u3089\u3001`icxx\"...\"` \u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u304d\u306b\u3001\u52d5\u7684\u306bCxx.jl\u304c\u9069\u5f53\u306a\u95a2\u6570\u540d\u3067\u95a2\u6570\u3092\u751f\u6210\u3059\u308b\u304b\u3089\u3067\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u69d8\u306aJulia\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u305f\u3068\u3057\u307e\u3059\u3002\n\n```jlcon\njulia> f() = icxx\"f();\" + 1\nf (generic function with 1 method)\n```\n\n\u5148\u307b\u3069\u306eC++\u95a2\u6570 `f` \u306e\u5b9a\u7fa9\u3088\u308a\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n\n```jlcon\njulia> @assert f() == 2\n```\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30c0\u30f3\u30d7\u3057\u3066\u63a2\u3059\u306e\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f [Gallium](https://github.com/Keno/Gallium.jl)\uff08\u6b63\u78ba\u306b\u306f[ASTInterpreter](https://github.com/Keno/ASTInterpreter.jl)\uff09\u3092\u4f7f\u3063\u305f\u65b9\u6cd5\u3092\u4e00\u3064\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n### Gallium \u3067`cxxstr_impl`\u306b\u30b9\u30c6\u30c3\u30d7\u30a4\u30f3\uff08generated function\u306a\u306e\u3067\u3001`sg` \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3044\u307e\u3059\uff09\u3057\u3066 `FunctionDecl` \u3092\u63a2\u3057\u3066\u3001mangle\u3055\u308c\u305f\u540d\u524d\u3092\u6c42\u3081\u308b\n\n```jlcon\nulia> @enter f()\nIn REPL[16]:1\n1 f() = icxx\"f();\" + 1\n\nAbout to run: (Core.apply_type)(Cxx.SourceBuf{id},33)\n1|debug > sg\nIn /Users/ryuyamamoto/.julia/v0.6/Cxx/src/cxxstr.jl:203\n202\n203   immutable SourceBuf{id}; end\n204   sourceid{id}(::Type{SourceBuf{id}}) = id\n205\n\nAbout to run: (Core.apply_type)(Cxx.SourceBuf{id},33)\n1|debug >\nIn /Users/ryuyamamoto/.julia/v0.6/Cxx/src/cxxstr.jl:203\n202\n203   immutable SourceBuf{id}; end\n204   sourceid{id}(::Type{SourceBuf{id}}) = id\n205\n\nAbout to run: return Cxx.SourceBuf{33}()\n1|debug >\nIn REPL[16]:1\n1 f() = icxx\"f();\" + 1\n\nAbout to run: (Cxx.cxxstr_impl)(Cxx.CxxInstance{1}(),Cxx.SourceBuf{33}())\n1|debug >\nIn /Users/ryuyamamoto/.julia/v0.6/Cxx/src/cxxstr.jl:343\n342   @generated function cxxstr_impl(CT, sourcebuf, args...)\n343       C = instance(CT)\n344       id = sourceid(sourcebuf)\n345       buf, filename, line, col = sourcebuffers[id]\n\nAbout to run: (Cxx.instance)(Cxx.CxxInstance{1})\n1|debug > n\nIn /Users/ryuyamamoto/.julia/v0.6/Cxx/src/cxxstr.jl:343\n343       C = instance(CT)\n344       id = sourceid(sourcebuf)\n345       buf, filename, line, col = sourcebuffers[id]\n346\n\nAbout to run: (Cxx.sourceid)(Cxx.SourceBuf{33})\n1|debug >\nIn /Users/ryuyamamoto/.julia/v0.6/Cxx/src/cxxstr.jl:343\n344       id = sourceid(sourcebuf)\n345       buf, filename, line, col = sourcebuffers[id]\n346\n347       FD, llvmargs, argidxs, symargs = CreateFunctionWithBody(C,buf, args...; filename = filename, line = line, col = col)\n\nAbout to run: (getindex)(<suppressed 74 bytes of output>,33)\n1|debug >\nIn /Users/ryuyamamoto/.julia/v0.6/Cxx/src/cxxstr.jl:343\n346\n347       FD, llvmargs, argidxs, symargs = CreateFunctionWithBody(C,buf, args...; filename = filename, line = line, col = col)\n348       EmitTopLevelDecl(C,FD)\n349\n\nAbout to run: (Core.kwfunc)(Cxx.CreateFunctionWithBody)\n1|debug >\nIn /Users/ryuyamamoto/.julia/v0.6/Cxx/src/cxxstr.jl:343\n347       FD, llvmargs, argidxs, symargs = CreateFunctionWithBody(C,buf, args...; filename = filename, line = line, col = col)\n348       EmitTopLevelDecl(C,FD)\n349\n350       for T in args\n\nAbout to run: (Cxx.EmitTopLevelDecl)(<suppressed 550 bytes of output>,(class clang::Decl *) @0x00000003214dfe38\n)\n1|julia > FD |> dump\nFunctionDecl 0x3214dfe38 <line:1:1, line:3:1> line:1:1 icxx106 'int (void)'\n`-CompoundStmt 0x3214dffa0 <col:1, line:3:1>\n  `-ReturnStmt 0x3214e0018 <line:1:1, line:2:3>\n    `-CallExpr 0x3214dff78 <col:1, col:3> 'int'\n      `-ImplicitCastExpr 0x3214dff60 <col:1> 'int (*)(void)' <FunctionToPointerDecay>\n        `-DeclRefExpr 0x3214dff38 <col:1> 'int (void)' lvalue Function 0x31d0de120 'f' 'int (void)'\nnothing\n```\n\n\u3053\u306e `FD` \u3068\u3044\u3046\u306e\u304c `FunctionDecl` \u3067\u3059\u3002\u3053\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u899a\u3048\u3066\u304a\u3044\u3066\u3001\n`clang::FunctionDecl*` \u578b\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u3001\n\n```jlcon\njulia> FD = pcpp\"clang::FunctionDecl\"(Ptr{Void}(0x00000003214dfe38))\n(class clang::FunctionDecl *) @0x00000003214dfe38\n```\n\nmangle\u3055\u308c\u305f\u540d\u524d\u3092\u6c42\u3081\u308c\u3070\u3001\n\n```\njulia> fname = Cxx.getMangledFunctionName(C, FD)\n\"_ZN6__icxx7icxx106Ev\"\n```\n\n\u3042\u3068\u306f `cxx\"...\"` \u306e\u5834\u5408\u3068\u540c\u69d8\u3067\u3059\n\n```jlcon\njulia> llvmf = icxx\"\"\"$(C.shadow)->getFunction($(pointer(fname)));\"\"\"; llvmf != C_NULL && icxx\"$(llvmf)->dump();\"\n\n; Function Attrs: nounwind\ndefine i32 @_ZN6__icxx7icxx106Ev() #0 {\nentry:\n  %call = call i32 @f()\n  ret i32 %call\n}\n```\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n\n\u9577\u304b\u3063\u305f\u3002llvm, clang \u306b\u3064\u3044\u3066\u307e\u3060\u307e\u3060\u7121\u77e5\u306a\u306e\u3067\u3001\u3053\u308c\u304c\u3044\u3044\u65b9\u6cd5\u306a\u306e\u304b\u306f\u6b63\u76f4\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u8a66\u884c\u932f\u8aa4\u3057\u305f\u7d50\u679c\u3053\u3046\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u304a\u3057\u307e\u3044\n", "tags": ["Julia", "julialang", "Cxx", "C++", "clang"]}