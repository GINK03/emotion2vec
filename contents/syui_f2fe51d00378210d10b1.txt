{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u3053\u3053\u3067\u8a00\u3046\u9078\u629e\u7684\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3068\u3044\u3046\u306e\u306f\u3001Emacs\u3067\u306eAnything\u7684\u306a\u30c4\u30fc\u30eb\u306e\u3053\u3068\u3092\u8a00\u3044\u307e\u3059\u3002\u3053\u306e\u70b9\u306b\u3064\u3044\u3066\u306f\u3001\u30a4\u30e1\u30fc\u30b8\u753b\u50cf\u3092\u898b\u305f\u307b\u3046\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3057\u3087\u3046\u3002\n\u3053\u306e\u3088\u3046\u306a\u30c4\u30fc\u30eb\u306f\u3001\u69d8\u3005\u306a\u5fdc\u7528\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\u9078\u629e\u7684\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3067\u306f\u3001\u30d1\u30a4\u30d7\u3067\u7e4b\u3050\u3053\u3068\u306b\u3088\u308a\u3001\u51fa\u529b\u7d50\u679c\u3092\u9078\u629e\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u9078\u629e\u3055\u308c\u305f\u3082\u306e\u304c\u6700\u7d42\u7684\u306b\u51fa\u529b\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u51fa\u529b\u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u69d8\u3005\u306a\u30c4\u30fc\u30eb\u306e\u4ef2\u4ecb\u3092\u4efb\u305b\u305f\u308a\u3001\u5024\u3092\u53d6\u5f97\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\npercol\npython\u3067\u66f8\u304b\u308c\u305f\u9078\u629e\u7684\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u30c4\u30fc\u30eb\u3067\u3059\u3002\nhttps://github.com/mooz/percol\n\npercol\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ sudo pip install percol\n\n\u307e\u305f\u306f\u3001\n$ git clone https://github.com/mooz/percol\n\n$ cd !$:t\n\n$ sudo python setup.py install\n\n\npercol\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\n$ ls | percol\n\n\u6700\u521d\u304b\u3089\u7279\u5b9a\u306e\u6587\u5b57\u5217\u306b\u30de\u30c3\u30c1\u3055\u305b\u307e\u3059\u3002\n$ ls ~ | percol --query=\"s\"\n\n\u30d7\u30ed\u30f3\u30d7\u30c8\u306e\u5de6\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3002\n$ ls | percol --right-prompt=prompt1\n\n\npercol\u306e\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\npercol\u3067\u306f\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\u3053\u3068\u3067\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n$ mkdir ~/.percol.d\n\n$ vim ~/.percol.d/rc.py\n\n\n~/.percol.d/rc.py\n# https://gist.github.com/mitukiii/4234173\nimport sys, commands\nfrom percol.command import SelectorCommand\nfrom percol.key import SPECIAL_KEYS\nfrom percol.finder import FinderMultiQueryMigemo, FinderMultiQueryRegex\n\n## prompt\n# Case Insensitive / Match Method \u306b\u5fdc\u3058\u3066\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u8868\u793a\ndef dynamic_prompt():\n    prompt = ur\"\"\n    if percol.model.finder.__class__ == FinderMultiQueryMigemo:\n        prompt += \"[Migemo]\"\n    elif percol.model.finder.__class__ == FinderMultiQueryRegex:\n        prompt += \"[Regexp]\"\n    else:\n        prompt += \"[String]\"\n    if percol.model.finder.case_insensitive:\n        prompt += \"[a]\"\n    else:\n        prompt += \"[A]\"\n    prompt += \"> %q\"\n    return prompt\n\npercol.view.__class__.PROMPT = property(lambda self: dynamic_prompt())\n\n## migemo\n# Mac \u3068 Ubuntu \u3067\u8f9e\u66f8\u306e\u30d1\u30b9\u3092\u5909\u3048\u308b\nif sys.platform == \"darwin\":\n    FinderMultiQueryMigemo.dictionary_path = \"/usr/local/Cellar/cmigemo/20110227/share/migemo/utf-8/migemo-dict\"\nelse:\n    FinderMultiQueryMigemo.dictionary_path = \"/usr/local/share/migemo/utf-8/migemo-dict\"\n\n## kill\n# Mac \u306e\u5834\u5408\u306f kill\uff08yank\uff09\u3092\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u3068\u5171\u6709\u3059\u308b\nif sys.platform == \"darwin\":\n    def copy_end_of_line_as_kill(self):\n        commands.getoutput(\"echo \" + self.model.query[self.model.caret:] + \" | pbcopy\")\n        self.model.query  = self.model.query[:self.model.caret]\n\n    def paste_as_yank(self):\n        self.model.insert_string(commands.getoutput(\"pbpaste\"))\n\n    SelectorCommand.kill_end_of_line = copy_end_of_line_as_kill\n    SelectorCommand.yank = paste_as_yank\n\n## keymap\n# Mac \u3067 delete\uff08backspace\uff09\u304c\u52b9\u304f\u3088\u3046\u306b\u3059\u308b\nSPECIAL_KEYS.update({\n    127: '<backspace>'\n})\npercol.import_keymap({\n    \"C-a\" : lambda percol: percol.command.beginning_of_line(),\n    \"C-e\" : lambda percol: percol.command.end_of_line(),\n    \"C-b\" : lambda percol: percol.command.backward_char(),\n    \"C-f\" : lambda percol: percol.command.forward_char(),\n    \"C-d\" : lambda percol: percol.command.delete_forward_char(),\n    \"C-h\" : lambda percol: percol.command.delete_backward_char(),\n    \"C-k\" : lambda percol: percol.command.kill_end_of_line(),\n    \"C-y\" : lambda percol: percol.command.yank(),\n    \"C-n\" : lambda percol: percol.command.select_next(),\n    \"C-p\" : lambda percol: percol.command.select_previous(),\n    \"C-v\" : lambda percol: percol.command.select_next_page(),\n    \"M-v\" : lambda percol: percol.command.select_previous_page(),\n    \"M-<\" : lambda percol: percol.command.select_top(),\n    \"M->\" : lambda percol: percol.command.select_bottom(),\n    \"C-m\" : lambda percol: percol.finish(),\n    \"C-j\" : lambda percol: percol.finish(),\n    \"C-g\" : lambda percol: percol.cancel(),\n    \"M-c\" : lambda percol: percol.command.toggle_case_sensitive(),\n    \"M-m\" : lambda percol: percol.command.toggle_finder(FinderMultiQueryMigemo),\n    \"M-r\" : lambda percol: percol.command.toggle_finder(FinderMultiQueryRegex)\n})\n\n\n\u53c2\u8003:\npercol \u5165\u308c\u3066 zsh \u3068\u7d44\u307f\u5408\u308f\u305b\u305f\u3089\u8d85\u4fbf\u5229\n\u30bf\u30fc\u30df\u30ca\u30eb\u7248anything\u7684\u306apercol\u3092zaw\u306e\u4ee3\u308f\u308a\u306b\u8a66\u3057\u3066\u307f\u305f\n\npercol\u306e\u5fdc\u7528\u7684\u306a\u4f7f\u3044\u65b9\n\npercol\u3067\u8907\u6570\u884c\u9078\u629e\u3059\u308b\n\u8907\u6570\u884c\u3092\u9078\u629e\u3059\u308b\u5834\u5408\u306f\u3001percol.command.toggle_mark_and_next()\u3092\u4f7f\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001C-S\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n$ ps ax | percol | awk '{ print $1 }' | xargs kill\n\n\u79c1\u306e\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\u8907\u6570\u884c\u30de\u30fc\u30af\u3068\u30de\u30fc\u30af\u306e\u89e3\u9664\u3067\u3059\u3002\n\n~/.percol.d/rc.py\n    \"C-n\" : lambda percol: percol.command.toggle_mark_and_next(),\n    \"C-p\" : lambda percol: percol.command.unmark_all(),\n\n\n\u307e\u305f\u3001\u533a\u5207\u308a\u6587\u5b57\u3092\u8a2d\u5b9a\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u884c\u3051\u307e\u3059\u3002\n$ ls | percol | tr '\\n' ';'\n\n\npercol\u306ezsh\u88dc\u5b8c\nGitHub\u304b\u3089clone\u3059\u308b\u5834\u5408\u306f\u3001\u6700\u521d\u304b\u3089\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\u3002\nhttps://github.com/mooz/percol/blob/master/tools/zsh/_percol\n$ curl -o ~/.zsh/functions/_percol https://raw.githubusercontent.com/mooz/percol/master/tools/zsh/_percol\n\n$ exec $SHELL\n\n\npercol\u3067cd\u3059\u308b\ncdr\u304c\u3067\u304d\u308c\u3070\u3001\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u79fb\u52d5\u3092\u7c21\u5358\u306b\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n~/.zshrc\n# http://piyopiyoducky.net/blog/2013/08/17/cdr-with-percol/\n### search a destination from cdr list\nfunction percol-get-destination-from-cdr() {\n    cdr -l | \\\n        sed -e 's/^[[:digit:]]*[[:blank:]]*//' | \\\n        percol --match-method migemo --query \"$LBUFFER\"\n}\n\n### search a destination from cdr list and cd the destination\nfunction percol-cdr() {\n    local destination=\"$(percol-get-destination-from-cdr)\"\n    if [ -n \"$destination\" ]; then\n        BUFFER=\"cd $destination\"\n        zle accept-line\n    else\n        zle reset-prompt\n    fi\n}\nzle -N percol-cdr\nbindkey '^xb' percol-cdr\n\n\n\u305d\u308c\u4ee5\u5916\u306f\u3053\u3061\u3089\u3002\n\n~/.zshrc\n# https://github.com/shibayu36/config-file/blob/master/.zsh/percol-sources/cdr.zsh\nfunction percol-cdr () {\n    local selected_dir=$(cdr -l | awk '{ print $2 }' | percol)\n    if [ -n \"$selected_dir\" ]; then\n        BUFFER=\"cd ${selected_dir}\"\n        zle accept-line\n    fi\n    zle clear-screen\n}\nzle -N percol-cdr\nbindkey '^@' percol-cdr\n\n\n\u53c2\u8003:\npercol\u3067\u6700\u8fd1\u884c\u3063\u305fdirectory\u306bcd\u3059\u308b\u3084\u3064\u3092\u66f8\u304d\u307e\u3057\u305f\nZsh\u306ecdr\u3068percol\u3067\u6700\u8fd1\u79fb\u52d5\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bAnything\u30e9\u30a4\u30af\u306b\u79fb\u52d5\u3059\u308b - PiyoPiyoDucky\nautojump\u304b\u3089percol\u30d9\u30fc\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30b8\u30e3\u30f3\u30d7\u306b\u79fb\u884c\u3059\u308b | Web scratch\n\npercol\u3068ghq\n\u81ea\u8eab\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u3092\u4f7f\u3044\u3084\u3059\u304f\u3057\u307e\u3059\u3002\n$ go get github.com/motemen/ghq\n\n\u8a73\u3057\u304f\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nghq + percol + docc | SOTA\nghq\u3092\u4f7f\u3063\u305f\u30ed\u30fc\u30ab\u30eb\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u7d71\u4e00\u7684\u30fb\u52b9\u7387\u7684\u306a\u7ba1\u7406\u306b\u3064\u3044\u3066 - delirious thoughts\nghq \u30b3\u30de\u30f3\u30c9\u306e zsh \u88dc\u5b8c\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\u3057\u305f\u306e\u3067\u3001\u305d\u306e\u904e\u7a0b\u3092\u89e3\u8aac\u3059\u308b - Qiita\n\npercol\u3068git\ngit\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3044\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3082percol\u306f\u5927\u6d3b\u8e8d\u3067\u3059\u3002\n\u8a73\u3057\u304f\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\ngit-issue + git-flow + percol\npercol\u3068git-issue\u3092\u4f7f\u3063\u3066\u3001redmine\u306e\u30c1\u30b1\u30c3\u30c8\u3092\u30d6\u30e9\u30f3\u30c1\u306b\u5207\u3063\u3066\u4f5c\u696d\u3059\u308b\u306e\u304c\u6357\u308b\u8a2d\u5b9a | Technology-Gym\npercol\u3092\u4f7f\u3063\u3066\u3001git\u306e\u30b3\u30df\u30c3\u30c8\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u306b\u30b3\u30d4\u30fc\u3059\u308b - Qiita\nGit - \u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u81ea\u52d5\u88dc\u5b8c\u3057\u3066checkout\u3059\u308b - Qiita\n\npeco\npercol\u3092\u5143\u306bgolang\u3067\u66f8\u304b\u308c\u305f\u9078\u629e\u7684\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u30c4\u30fc\u30eb\u3067\u3059\u3002\nhttps://github.com/lestrrat/peco\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u611f\u3058\u306b\u7de8\u96c6\u3067\u304d\u307e\u3059\u3002\n\n~/.peco/config.json\n{\n    \"Keymap\": {\n        \"C-p\": \"peco.SelectPrevious\",\n        \"C-n\": \"peco.SelectNext\",\n        \"C-c\": \"peco.Cancel\"\n    }\n}\n\n\n\u8a73\u3057\u304f\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nWindows \u306e\u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u309210\u500d\u4fbf\u5229\u306b\u3059\u308b\u30b3\u30de\u30f3\u30c9\u300cpeco\u300d\npeco\u3092\u5c0e\u5165\u3057\u3066zsh\u306ehistory\u306b\u4f7f\u3046\u3088\u3046\u306b\u3057\u305f - \u3055\u3088\u306a\u3089\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\n##\u306f\u3058\u3081\u306b\n\n\u3053\u3053\u3067\u8a00\u3046\u9078\u629e\u7684\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3068\u3044\u3046\u306e\u306f\u3001Emacs\u3067\u306eAnything\u7684\u306a\u30c4\u30fc\u30eb\u306e\u3053\u3068\u3092\u8a00\u3044\u307e\u3059\u3002\u3053\u306e\u70b9\u306b\u3064\u3044\u3066\u306f\u3001\u30a4\u30e1\u30fc\u30b8\u753b\u50cf\u3092\u898b\u305f\u307b\u3046\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u3053\u306e\u3088\u3046\u306a\u30c4\u30fc\u30eb\u306f\u3001\u69d8\u3005\u306a\u5fdc\u7528\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u9078\u629e\u7684\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3067\u306f\u3001\u30d1\u30a4\u30d7\u3067\u7e4b\u3050\u3053\u3068\u306b\u3088\u308a\u3001\u51fa\u529b\u7d50\u679c\u3092\u9078\u629e\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u9078\u629e\u3055\u308c\u305f\u3082\u306e\u304c\u6700\u7d42\u7684\u306b\u51fa\u529b\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u51fa\u529b\u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u69d8\u3005\u306a\u30c4\u30fc\u30eb\u306e\u4ef2\u4ecb\u3092\u4efb\u305b\u305f\u308a\u3001\u5024\u3092\u53d6\u5f97\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n##percol\n\n`python`\u3067\u66f8\u304b\u308c\u305f\u9078\u629e\u7684\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u30c4\u30fc\u30eb\u3067\u3059\u3002\n\n[https://github.com/mooz/percol](https://github.com/mooz/percol)\n\n###percol\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```bash:\n$ sudo pip install percol\n```\n\n\u307e\u305f\u306f\u3001\n\n```bash:\n$ git clone https://github.com/mooz/percol\n\n$ cd !$:t\n\n$ sudo python setup.py install\n```\n\n###percol\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\n\n```bash:\n$ ls | percol\n```\n\n\u6700\u521d\u304b\u3089\u7279\u5b9a\u306e\u6587\u5b57\u5217\u306b\u30de\u30c3\u30c1\u3055\u305b\u307e\u3059\u3002\n\n```bash:\n$ ls ~ | percol --query=\"s\"\n```\n\n\u30d7\u30ed\u30f3\u30d7\u30c8\u306e\u5de6\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3002\n\n```bash:\n$ ls | percol --right-prompt=prompt1\n```\n\n\n###percol\u306e\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\n\npercol\u3067\u306f\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\u3053\u3068\u3067\u30ad\u30fc\u30d0\u30a4\u30f3\u30c9\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```bash:\n$ mkdir ~/.percol.d\n\n$ vim ~/.percol.d/rc.py\n```\n\n\n```python:~/.percol.d/rc.py\n# https://gist.github.com/mitukiii/4234173\nimport sys, commands\nfrom percol.command import SelectorCommand\nfrom percol.key import SPECIAL_KEYS\nfrom percol.finder import FinderMultiQueryMigemo, FinderMultiQueryRegex\n\n## prompt\n# Case Insensitive / Match Method \u306b\u5fdc\u3058\u3066\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u8868\u793a\ndef dynamic_prompt():\n    prompt = ur\"\"\n    if percol.model.finder.__class__ == FinderMultiQueryMigemo:\n        prompt += \"[Migemo]\"\n    elif percol.model.finder.__class__ == FinderMultiQueryRegex:\n        prompt += \"[Regexp]\"\n    else:\n        prompt += \"[String]\"\n    if percol.model.finder.case_insensitive:\n        prompt += \"[a]\"\n    else:\n        prompt += \"[A]\"\n    prompt += \"> %q\"\n    return prompt\n\npercol.view.__class__.PROMPT = property(lambda self: dynamic_prompt())\n\n## migemo\n# Mac \u3068 Ubuntu \u3067\u8f9e\u66f8\u306e\u30d1\u30b9\u3092\u5909\u3048\u308b\nif sys.platform == \"darwin\":\n    FinderMultiQueryMigemo.dictionary_path = \"/usr/local/Cellar/cmigemo/20110227/share/migemo/utf-8/migemo-dict\"\nelse:\n    FinderMultiQueryMigemo.dictionary_path = \"/usr/local/share/migemo/utf-8/migemo-dict\"\n\n## kill\n# Mac \u306e\u5834\u5408\u306f kill\uff08yank\uff09\u3092\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u3068\u5171\u6709\u3059\u308b\nif sys.platform == \"darwin\":\n    def copy_end_of_line_as_kill(self):\n        commands.getoutput(\"echo \" + self.model.query[self.model.caret:] + \" | pbcopy\")\n        self.model.query  = self.model.query[:self.model.caret]\n\n    def paste_as_yank(self):\n        self.model.insert_string(commands.getoutput(\"pbpaste\"))\n\n    SelectorCommand.kill_end_of_line = copy_end_of_line_as_kill\n    SelectorCommand.yank = paste_as_yank\n\n## keymap\n# Mac \u3067 delete\uff08backspace\uff09\u304c\u52b9\u304f\u3088\u3046\u306b\u3059\u308b\nSPECIAL_KEYS.update({\n    127: '<backspace>'\n})\npercol.import_keymap({\n    \"C-a\" : lambda percol: percol.command.beginning_of_line(),\n    \"C-e\" : lambda percol: percol.command.end_of_line(),\n    \"C-b\" : lambda percol: percol.command.backward_char(),\n    \"C-f\" : lambda percol: percol.command.forward_char(),\n    \"C-d\" : lambda percol: percol.command.delete_forward_char(),\n    \"C-h\" : lambda percol: percol.command.delete_backward_char(),\n    \"C-k\" : lambda percol: percol.command.kill_end_of_line(),\n    \"C-y\" : lambda percol: percol.command.yank(),\n    \"C-n\" : lambda percol: percol.command.select_next(),\n    \"C-p\" : lambda percol: percol.command.select_previous(),\n    \"C-v\" : lambda percol: percol.command.select_next_page(),\n    \"M-v\" : lambda percol: percol.command.select_previous_page(),\n    \"M-<\" : lambda percol: percol.command.select_top(),\n    \"M->\" : lambda percol: percol.command.select_bottom(),\n    \"C-m\" : lambda percol: percol.finish(),\n    \"C-j\" : lambda percol: percol.finish(),\n    \"C-g\" : lambda percol: percol.cancel(),\n    \"M-c\" : lambda percol: percol.command.toggle_case_sensitive(),\n    \"M-m\" : lambda percol: percol.command.toggle_finder(FinderMultiQueryMigemo),\n    \"M-r\" : lambda percol: percol.command.toggle_finder(FinderMultiQueryRegex)\n})\n```\n\n\n\u53c2\u8003:\n[percol \u5165\u308c\u3066 zsh \u3068\u7d44\u307f\u5408\u308f\u305b\u305f\u3089\u8d85\u4fbf\u5229](https://gist.github.com/mitukiii/4234173)\n\n[\u30bf\u30fc\u30df\u30ca\u30eb\u7248anything\u7684\u306apercol\u3092zaw\u306e\u4ee3\u308f\u308a\u306b\u8a66\u3057\u3066\u307f\u305f](http://shibayu36.hatenablog.com/entry/2013/10/06/184146)\n\n\n###percol\u306e\u5fdc\u7528\u7684\u306a\u4f7f\u3044\u65b9\n\n####percol\u3067\u8907\u6570\u884c\u9078\u629e\u3059\u308b\n\n\u8907\u6570\u884c\u3092\u9078\u629e\u3059\u308b\u5834\u5408\u306f\u3001`percol.command.toggle_mark_and_next()`\u3092\u4f7f\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001`C-S`\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n```bash:\n$ ps ax | percol | awk '{ print $1 }' | xargs kill\n```\n\n\u79c1\u306e\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\u8907\u6570\u884c\u30de\u30fc\u30af\u3068\u30de\u30fc\u30af\u306e\u89e3\u9664\u3067\u3059\u3002\n\n```python:~/.percol.d/rc.py\n    \"C-n\" : lambda percol: percol.command.toggle_mark_and_next(),\n    \"C-p\" : lambda percol: percol.command.unmark_all(),\n```\n\n\u307e\u305f\u3001\u533a\u5207\u308a\u6587\u5b57\u3092\u8a2d\u5b9a\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u884c\u3051\u307e\u3059\u3002\n\n```bash:\n$ ls | percol | tr '\\n' ';'\n```\n\n####percol\u306ezsh\u88dc\u5b8c\n\nGitHub\u304b\u3089clone\u3059\u308b\u5834\u5408\u306f\u3001\u6700\u521d\u304b\u3089\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\n[https://github.com/mooz/percol/blob/master/tools/zsh/_percol](https://github.com/mooz/percol/blob/master/tools/zsh/_percol)\n\n\n```bash:\n$ curl -o ~/.zsh/functions/_percol https://raw.githubusercontent.com/mooz/percol/master/tools/zsh/_percol\n\n$ exec $SHELL\n```\n\n\n####percol\u3067cd\u3059\u308b\n\n[cdr](http://blog.n-z.jp/blog/2013-11-12-zsh-cdr.html)\u304c\u3067\u304d\u308c\u3070\u3001\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u79fb\u52d5\u3092\u7c21\u5358\u306b\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n```bash:~/.zshrc\n# http://piyopiyoducky.net/blog/2013/08/17/cdr-with-percol/\n### search a destination from cdr list\nfunction percol-get-destination-from-cdr() {\n    cdr -l | \\\n        sed -e 's/^[[:digit:]]*[[:blank:]]*//' | \\\n        percol --match-method migemo --query \"$LBUFFER\"\n}\n\n### search a destination from cdr list and cd the destination\nfunction percol-cdr() {\n    local destination=\"$(percol-get-destination-from-cdr)\"\n    if [ -n \"$destination\" ]; then\n        BUFFER=\"cd $destination\"\n        zle accept-line\n    else\n        zle reset-prompt\n    fi\n}\nzle -N percol-cdr\nbindkey '^xb' percol-cdr\n```\n\n\u305d\u308c\u4ee5\u5916\u306f\u3053\u3061\u3089\u3002\n\n```bash:~/.zshrc\n# https://github.com/shibayu36/config-file/blob/master/.zsh/percol-sources/cdr.zsh\nfunction percol-cdr () {\n    local selected_dir=$(cdr -l | awk '{ print $2 }' | percol)\n    if [ -n \"$selected_dir\" ]; then\n        BUFFER=\"cd ${selected_dir}\"\n        zle accept-line\n    fi\n    zle clear-screen\n}\nzle -N percol-cdr\nbindkey '^@' percol-cdr\n```\n\n\u53c2\u8003:\n\n[percol\u3067\u6700\u8fd1\u884c\u3063\u305fdirectory\u306bcd\u3059\u308b\u3084\u3064\u3092\u66f8\u304d\u307e\u3057\u305f](http://shibayu36.hatenablog.com/entry/2013/10/07/185048)\n\n[Zsh\u306ecdr\u3068percol\u3067\u6700\u8fd1\u79fb\u52d5\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bAnything\u30e9\u30a4\u30af\u306b\u79fb\u52d5\u3059\u308b - PiyoPiyoDucky](http://piyopiyoducky.net/blog/2013/08/17/cdr-with-percol/)\n\n[autojump\u304b\u3089percol\u30d9\u30fc\u30b9\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30b8\u30e3\u30f3\u30d7\u306b\u79fb\u884c\u3059\u308b | Web scratch](http://efcl.info/2013/1230/res3580/)\n\n\n####percol\u3068ghq\n\n\u81ea\u8eab\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u3092\u4f7f\u3044\u3084\u3059\u304f\u3057\u307e\u3059\u3002\n\n```bash:\n$ go get github.com/motemen/ghq\n```\n\n\u8a73\u3057\u304f\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n[ghq + percol + docc | SOTA](http://deeeet.com/writing/2014/06/09/docc/)\n\n[ghq\u3092\u4f7f\u3063\u305f\u30ed\u30fc\u30ab\u30eb\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u7d71\u4e00\u7684\u30fb\u52b9\u7387\u7684\u306a\u7ba1\u7406\u306b\u3064\u3044\u3066 - delirious thoughts](http://blog.kentarok.org/entry/2014/06/03/135300)\n\n[ghq \u30b3\u30de\u30f3\u30c9\u306e zsh \u88dc\u5b8c\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\u3057\u305f\u306e\u3067\u3001\u305d\u306e\u904e\u7a0b\u3092\u89e3\u8aac\u3059\u308b - Qiita](http://qiita.com/mollifier/items/8cca799b384c0a69db99)\n\n\n####percol\u3068git\n\ngit\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3044\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3082percol\u306f\u5927\u6d3b\u8e8d\u3067\u3059\u3002\n\n\u8a73\u3057\u304f\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n[git-issue + git-flow + percol](https://gist.github.com/azu/d3fb5f970e4ff945ead4)\n\n[percol\u3068git-issue\u3092\u4f7f\u3063\u3066\u3001redmine\u306e\u30c1\u30b1\u30c3\u30c8\u3092\u30d6\u30e9\u30f3\u30c1\u306b\u5207\u3063\u3066\u4f5c\u696d\u3059\u308b\u306e\u304c\u6357\u308b\u8a2d\u5b9a | Technology-Gym](http://tech-gym.com/2012/07/shell/825.html)\n\n[percol\u3092\u4f7f\u3063\u3066\u3001git\u306e\u30b3\u30df\u30c3\u30c8\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u306b\u30b3\u30d4\u30fc\u3059\u308b - Qiita](http://qiita.com/hfm/items/ad1641225991d56373d2)\n\n[Git - \u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u81ea\u52d5\u88dc\u5b8c\u3057\u3066checkout\u3059\u308b - Qiita](http://qiita.com/yuku_t/items/f53a9d3ea92614b0927d)\n\n\n##peco\n\n`percol`\u3092\u5143\u306b`golang`\u3067\u66f8\u304b\u308c\u305f\u9078\u629e\u7684\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u30c4\u30fc\u30eb\u3067\u3059\u3002\n\n[https://github.com/lestrrat/peco](https://github.com/lestrrat/peco)\n\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u611f\u3058\u306b\u7de8\u96c6\u3067\u304d\u307e\u3059\u3002\n\n```golang:~/.peco/config.json\n{\n    \"Keymap\": {\n        \"C-p\": \"peco.SelectPrevious\",\n        \"C-n\": \"peco.SelectNext\",\n        \"C-c\": \"peco.Cancel\"\n    }\n}\n```\n\n\u8a73\u3057\u304f\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n[Windows \u306e\u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u309210\u500d\u4fbf\u5229\u306b\u3059\u308b\u30b3\u30de\u30f3\u30c9\u300cpeco\u300d](http://mattn.kaoriya.net/software/peco.htm)\n\n[peco\u3092\u5c0e\u5165\u3057\u3066zsh\u306ehistory\u306b\u4f7f\u3046\u3088\u3046\u306b\u3057\u305f - \u3055\u3088\u306a\u3089\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8](http://blog.kenjiskywalker.org/blog/2014/06/12/peco/)\n", "tags": ["percol", "Mac", "Zsh", "Python", "Go"]}