{"context": " More than 1 year has passed since last update.\n\n\u6982\u7565\n\u4f8b\u306e\u3001H2O \u306b\u624b\u3092\u52a0\u3048\u305f OpenStreetMap \u306e\u30bf\u30a4\u30eb\u30b5\u30fc\u30d0\u306b\u3001caching proxy \u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n\u80cc\u666f\nOpenStreetmap (\u4ee5\u4e0b OSM) \u306e\u5730\u56f3\u3092\u4f7f\u3063\u305f\u30b5\u30fc\u30d3\u30b9\u3067\u4f7f\u3046\u5834\u5408\u3001OSM \u306f\u898f\u7d04\u4e0a\u3001\n\n\u5546\u7528\u30a2\u30d7\u30ea\u3068\u304b\u3067\u306f http://openstreetmap.org \u3067\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b\u5730\u56f3\u306b\u76f4\u63a5\u30a2\u30af\u30bb\u30b9\u3057\u306a\u3044\u3067\u306d\u3002\n\n\u3068\u3044\u3046\u30bf\u30c6\u30de\u30a8\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u771f\u9762\u76ee\u306b\u3084\u308b\u306a\u3089\u3001\u81ea\u524d\u3067\u30bf\u30a4\u30eb\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044 (\u5fa9\u7fd2)\u3002\n\u3068\u3053\u308d\u304c\u3001\u81ea\u524d\u3067\u751f\u30c7\u30fc\u30bf\u304b\u3089\u30bf\u30a4\u30eb\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u30b5\u30fc\u30d0\u3092\u771f\u9762\u76ee\u306b\u7acb\u3066\u3088\u3046\u3068\u3059\u308b\u3068\u3001\n\n30GB \u3050\u3089\u3044\u306e OSM \u306e\u751f\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\n\u305d\u308c\u3092 600GB \u3050\u3089\u3044\u306e PostGIS \u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u843d\u3068\u3059\n\nPostGIS \u3068 HTTPD \u306e\u9593\u3092\u3088\u308d\u3057\u304f\u53d6\u308a\u6301\u3063\u3066\u304f\u308c\u308b\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u306a\u308a\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306a\u308a\u306a\u3093\u306a\u308a\u3092\u5165\u308c\u308b\n\n\u8868\u793a\u304b\u304f\u306b\u3093\u7528\u306e HTML \u3092\u7528\u610f\u3057\u3066\u3001\u3061\u3083\u3093\u3068\u5730\u56f3\u304c\u8868\u793a\u3055\u308c\u308b\u304b\u304b\u304f\u306b\u3093 (\u5927\u62b5\u3001\u5730\u7403\u5168\u90e8\u6c88\u6ca1\u3057\u305f\u771f\u3063\u9752\u306a\u4e16\u754c\u5730\u56f3\u304c\u304b\u304f\u306b\u3093\u3055\u308c\u308b\u3002\u3088\u304b\u3063\u305f\uff01)\n\n\u3068\u3044\u3063\u305f\u975e\u5e38\u306b\u9762\u5012\u304f\u3055\u3044\u624b\u7d9a\u304d\u3092\u8e0f\u307e\u306d\u3070\u306a\u3089\u305a\u3001\u5404\u30b9\u30c6\u30c3\u30d7\u3067\u305d\u308c\u305e\u308c1\u3064\u3001\u547d\u3001\u843d\u3068\u3059\u3002\n\n\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\n\u5730\u56f3\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u306a\u3089\u3001\u8981\u306f\u5730\u56f3\u304c\u51fa\u305b\u308c\u3070\u305d\u308c\u3067\u3044\u3044\u3093\u3067\u30591\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001OSM\u672c\u5bb6\u306a\u3069\u306e\u30bf\u30a4\u30eb\u30b5\u30fc\u30d0\u304b\u3089\u53d6\u3063\u3066\u304f\u308b caching proxy \u30bf\u30a4\u30d7\u306e\u3082\u306e\u3092\u4f5c\u3063\u3066\u307f\u305f2\u3002\n\n\u76ee\u6a19\nOSM\u306e\u751f\u30c7\u30fc\u30bf\u3084 PostGIS \u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092 \u4e00\u5207 \u4f7f\u308f\u305a\u306b\u5730\u56f3\u3092\u51fa\u305b\u308b\u3053\u3068\u3002\n\n\u65b9\u91dd\nH2O \u306e proxy handler \u306b\u30b3\u30fc\u30c9\u3092\u3064\u304e\u305f\u3057\u3066\u3001\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u306eURL\u304c\u30bf\u30a4\u30eb\u306e\u540d\u524d\u306e\u3088\u3046\u306b\u898b\u3048\u3001\u304b\u3064\u30ed\u30fc\u30ab\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u307e\u3060\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u306a\u3044\u6642\u3001\u3060\u3051\n\u4e0a\u6d41 (OSM \u672c\u5bb6\u3068\u304b) \u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u3066\n\u8fd4\u4e8b\u304c\u6765\u305f\u3089\u3001\u51fa\u529b\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u30d5\u30a3\u30eb\u30bf (\u305d\u3046\u3044\u3046\u4ed5\u7d44\u307f\u304c H2O \u306b\u306f\u3042\u308b) \u3067\u30ed\u30fc\u30ab\u30eb\u306b\u4fdd\u5b58\n\n\u3068\u3044\u3046\u65b9\u91dd\u3067\u5b9f\u88c5\u3057\u305f\u3002\n\u9069\u5f53\u306b\u629c\u7c8b\u3059\u308b\u3002\u521d\u671f\u5316\u3068\u304b\u30a8\u30e9\u30fc\u51e6\u7406\u3068\u304b\u3088\u3051\u3048\u306a\u3068\u3053\u308d\u306f\u7701\u304f:\n/* \u4e0a\u6d41\u304b\u3089\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u304d\u305f\u3089\u3053\u3053\u3092\u901a\u3059 */\nstatic void store_data(h2o_ostream_t *_self, h2o_req_t *req, h2o_iovec_t *inbufs, size_t inbufcnt, int is_final)\n{\n    struct st_store_tile_t *self = (void *)_self;\n    int i;\n    /* \u30d5\u30a1\u30a4\u30eb\u3092\u958b\u3044\u3066\u3001\u3084\u3063\u3066\u304d\u305f\u30d0\u30c3\u30d5\u30a1\u3092\u66f8\u3044\u3066\u3044\u304f */\n    if (self->fd < 0) {\n        /* Race \u5bfe\u7b56\u3068\u3057\u3066\u3001\u9069\u5f53\u306a\u540d\u524d\u306e tmp \u30d5\u30a1\u30a4\u30eb\u306b\u307e\u305a\u4fdd\u5b58\u3057\u3066\u3001\u5168\u90e8\u7d42\u308f\u3063\u305f\u3089\u300c\u672c\u5f53\u306e\u300d\u540d\u524d\u306b rename() */\n        self->fd = open(self->tmp_tile_path.base, O_WRONLY | O_TRUNC | O_CREAT, 0666);\n    }\n    if (self->fd < 0) {\n        /* \u30a8\u30e9\u30fc\u3002\u3082\u3046\u3042\u304d\u3089\u3081\u308d */\n        ...\n        goto Cont; /* \u5931\u6557\u3057\u305f\u3089\u3001\u4fdd\u5b58\u306f\u3042\u304d\u3089\u3081\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u4e8b\u3092\u6295\u3052\u308b\u4eba\u306b\u4ed5\u4e8b\u3092\u4e38\u6295\u3052\u3060\u3051\u306f\u3057\u3066\u304a\u304f\u3002\u4ee5\u4e0b\u540c\u69d8 */\n    }\n\n    for (i=0; i != inbufcnt; ++i) {\n        int v = write(self->fd, inbufs[i].base, inbufs[i].len);\n        if (v != inbufs[i].len) {\n            /* \u30a8\u30e9\u30fc\u3002\u3082\u3046\u3042\u304d\u3089\u3081\u308d */\n            ...\n            goto Cont;\n        }\n    }\n\n    if (is_final) {\n        close(self->fd);\n        if (rename(self->tmp_tile_path.base, self->local_tile_path.base) != 0) {\n            h2o_req_log_error(req, \"lib/handler/tile-proxy.c\", \"Failed to rename the tmp file %s to %s: %s\\n\", self->tmp_tile_path.base, self->local_tile_path.base, strerror(errno));\n            /* tmp \u30d5\u30a1\u30a4\u30eb\u306e rename \u306b\u5931\u6557\u3057\u305f\u3089\u4f55\u56de\u304b\u30ea\u30c8\u30e9\u30a4\u3055\u305b\u3066\u3044\u308b\u304c\u3001\u3053\u3053\u306f\u3053\u3093\u306a\u3053\u3068\u3057\u3066\u3044\u3044\u306e\u304b\uff1f */\n            for (i=0; i<32; ++i) {\n                usleep(10);\n                if (rename(self->tmp_tile_path.base, self->local_tile_path.base) == 0) {\n                }\n                h2o_req_log_error(req, \"lib/handler/tile-proxy.c\", \"Failed to rename the tmp file %s to %s: %s\\n\", self->tmp_tile_path.base, self->local_tile_path.base, strerror(errno));\n            }\n        }\n    }\nCont:\n    h2o_ostream_send_next(&self->super, req, inbufs, inbufcnt, is_final);\n}\n\n/* transfer-encoding: chunked \u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u304d\u305f\u3089\u3053\u3053\u3092\u901a\u3059 */\nstatic void store_chunked_data(h2o_ostream_t *_self, h2o_req_t *req, h2o_iovec_t *inbufs, size_t inbufcnt, int is_final)\n{\n    ...\n    /* \u3068\u308a\u3042\u3048\u305a\u30e1\u30e2\u30ea\u306b\u5168\u90e8\u305f\u3081\u3066\u304a\u3044\u3066\u3001\u6700\u5f8c\u306b phr_chunked_decoder \u3067\u30b4\u30df\u3068\u308a\u3001\u3068\u3044\u3046\u96d1\u306a\u65b9\u91dd */\n    /* \u30bf\u30a4\u30eb\u306e PNG \u753b\u50cf\u3067\u4f55MB\u3082\u3044\u304b\u306a\u3044\u3057\u3053\u308c\u3067\u3048\u3048\u3084\u308d */\n    /* calc chunk size */\n    for (i = 0; i != inbufcnt; ++i) {\n        self->chunked_content_buf = h2o_concat(&req->pool, self->chunked_content_buf, inbufs[i]);\n    }\n    if (is_final) {\n        struct phr_chunked_decoder chunked_decoder = {};\n        char* buf = self->chunked_content_buf.base;\n        size_t newsz = self->chunked_content_buf.len;\n        switch (phr_decode_chunked(&chunked_decoder, buf, &newsz)) {\n        case -1: /* error */\n            /* \u30a8\u30e9\u30fc\u3002\u3082\u3046\u3042\u304d\u3089\u3081\u308d */\n            ...\n            goto Cont;\n        case -2: /* incomplete */\n            /* \u30a8\u30e9\u30fc\u3002\u3082\u3046\u3042\u304d\u3089\u3081\u308d */\n            ...\n            goto Cont;\n        default: /* complete */\n            break;\n        }\n\n        write(self->fd, buf, newsz);\n        close(self->fd);\n        if (rename(self->tmp_tile_path.base, self->local_tile_path.base) != 0) {\n            /* \u3053\u3053\u3082 rename \u3092\u4f55\u56de\u304b\u30ea\u30c8\u30e9\u30a4\u3055\u305b\u3066\u3044\u308b\u304c\u3001\u3053\u3093\u306a\u5b9f\u88c5\u3067\u5927\u4e08\u592b\u304b\uff1f */\n            ...\n        }\n    }\n\nCont:\n    h2o_ostream_send_next(&self->super, req, inbufs, inbufcnt, is_final);\n}\n\n\nstatic void on_setup_ostream(h2o_filter_t *_self, h2o_req_t *req, h2o_ostream_t **slot)\n{\n    ...\n    /*\n    req->path_normalized.base is of the form \"/z/x/y.png\"\n    */\n    if ( likely(\n            req->res.status == 200 && \n            tile_rewrite_path(req->path_normalized.base, \"/\", 1, physical_tile_path, 28, &z, &x, &y)) ) {\n        /* \u4e0a\u6d41\u304b\u3089\u306e\u304a\u8fd4\u4e8b\u3067\u3001\u30bf\u30a4\u30eb\u306e\u3088\u3046\u306b\u898b\u3048\u308bURL z/xxx/yyy.png \u306a\u3089\u3001\u30ed\u30fc\u30ab\u30eb\u306b\u4fdd\u5b58\u3059\u308b */\n        ...\n        /*\n        Now, physical_path is of the form /z/nnn/nnn/nnn/nnn/nnn.png\n        */\n        ...\n        store_tile = (void *)h2o_add_ostream(req, sizeof(struct st_store_tile_t), slot);\n        ...\n        store_tile->super.do_send = store_data; /* \u4e0a\u6d41\u304b\u3089\u306e\u304a\u8fd4\u4e8b\u306f store_data() \u3092\u901a\u3059 */\n        if ((txfer_enc_idx = h2o_find_header(&(req->res.headers), H2O_TOKEN_TRANSFER_ENCODING, SIZE_MAX)) != -1) {\n            h2o_iovec_t *txfer_enc = &req->res.headers.entries[txfer_enc_idx].value;\n            if (h2o_memis(txfer_enc->base, txfer_enc->len, H2O_STRLIT(\"chunked\"))) {\n                /* \u305f\u3060\u3057\u3001transfer-encoding: chunked \u306e\u5834\u5408\u306f\u3001store_chunked_data() \u3092\u901a\u3059 */\n                store_tile->super.do_send = store_chunked_data;\n                ...\n            }\n        }\n        ...\n    } \n\n    h2o_setup_next_ostream(&self->super, req, slot);\n}\n\nstatic int on_req_tile(struct st_h2o_handler_t *_self, h2o_req_t *req) {\n    ...\n    char* tile_path = req->path_normalized.base + req->pathconf->path.len; /* is of the form z/x/y.png */\n    /* \u30bf\u30a4\u30eb\u306e\u3088\u3046\u306b\u898b\u3048\u308bURL z/xxx/yyy.png \u3067 */\n    if (likely(tile_rewrite_path(tile_path, \"\", 0, physical_tile_path, 28, &z, &x, &y))) {\n        h2o_iovec_t full_path = h2o_concat(&req->pool, self->local_base_path, h2o_iovec_init(physical_tile_path, strlen(physical_tile_path)));\n        /* \u3060\u304c\u3059\u3067\u306b\u30ed\u30fc\u30ab\u30eb\u306b\u3042\u308b\u30d5\u30a1\u30a4\u30eb\u306f\u305d\u308c\u3092\u8fd4\u3059 */\n        if (likely(access(full_path.base, F_OK) == 0)) {\n            return h2o_file_send(req, 200, \"OK\", full_path.base, h2o_iovec_init(H2O_STRLIT(\"image/png\")), 0);\n        }\n    }\n    /* proxy.c \u672c\u6765\u306e\u5b9f\u88c5\u306b\u4e38\u6295\u3052 \u3067 */\n    return self->on_req_delegate(_self, req);\n}\n\nh2o_tile_proxy_handler_t *h2o_tile_proxy_register(h2o_pathconf_t *pathconf, const char *local_base_path, const char *proxy) {\n    h2o_iovec_t local_base_path_v = h2o_strdup_slashed(NULL, local_base_path, SIZE_MAX);\n    h2o_tile_proxy_handler_t *self;\n\n    do { /* scoping */\n        /* Initialize the handler */\n        h2o_proxy_config_vars_t proxy_config = { 10*1000, 0, 2000 };\n\n        self = (void*)h2o_create_handler(pathconf, sizeof(*self));\n        h2o_url_parse(proxy, strlen(proxy), &self->super.upstream);\n\n        self->super = *(h2o_proxy_register_reverse_proxy(pathconf, &self->super.upstream, &proxy_config));\n        self->local_base_path = local_base_path_v;\n        self->on_req_delegate = self->super.super.on_req;\n        self->super.super.on_req = on_req_tile;\n    } while (0);\n\n    do { /* scoping */\n        struct st_h2o_tile_store_filter_t *self = (void *)h2o_create_filter(pathconf, sizeof(*self));\n        self->local_base_path = local_base_path_v;\n        self->super.on_setup_ostream = on_setup_ostream;\n    } while (0);\n\n    return self;\n}\n\n\n\u73fe\u72b6 (\u3052\u3093\u3058\u3064)\n\u4e0a\u6d41\u3092\u8907\u6570\u8a2d\u5b9a\u3057\u3066\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3\u3055\u305b\u305f\u308a\u3001\u4e0a\u6d41\u304c\u843d\u3061\u3066\u305f\u3089\u81ea\u524d\u306e\u30ec\u30f3\u30c0\u30e9\u30fc\u306b\u6295\u3052\u305f\u308a (\u307e\u305f\u306f\u305d\u306e\u9006) \u3057\u305f\u304b\u3063\u305f\u306e\u3060\u304c\u3001H2O \u306e\u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u306e\u8a2d\u8a08\u3067\u3001\u3069\u3046\u3084\u308c\u3070\u5b9f\u73fe\u3067\u304d\u308b\u306e\u304b\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3002\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u7b49\u306f\u3001\u4eca\u5f8c\u3086\u3063\u304f\u308a\u3068\u6574\u5099\u3057\u3066\u3044\u304f\u3002\u660e\u65e5\u304b\u3089\u7d76\u5bfe\u304c\u3093\u3070\u308b\u3002\u672c\u5f53\u3060\u3088\u3002\n\n\u30c7\u30e2\n\u4ee5\u524d AWS \u306b\u7acb\u3066\u305f\u30c7\u30e2\u30b5\u30fc\u30d0\u3092\u5165\u308c\u66ff\u3048\u305f: http://h2o-tile-demo.ddns.net:8080/\n\u4eca\u307e\u3067\u306f\u3001\u6771\u4eac\u5468\u8fba\u306e\u4e00\u90e8\u4ee5\u5916\u306f\u771f\u3063\u767d\u306a\u54c0\u3057\u3044\u72b6\u614b\u3060\u3063\u305f\u306e\u304c\u3001\u3069\u3053\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3082\u305d\u306e\u5834\u6240\u306e\u5730\u56f3\u304c\u51fa\u3066\u304f\u308b...\u30cf\u30ba\u3060\u3002\n\u305f\u3060\u3057\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u304c 20G \u3057\u304b\u306a\u3044\u306e\u3067\u3042\u3093\u307e\u308a\u3044\u3058\u3081\u306a\u3044\u3067\u306d\u3002\n\n\u8b1d\u8f9e\n@kazuho \u3055\u3093\u3092\u306f\u3058\u3081\u3001\u672c\u5bb6 H2O \u958b\u767a\u8005\u306e\u7686\u69d8\u3001\u30bf\u30a4\u30eb\u30b5\u30fc\u30d0\u306e\u5229\u7528\u898f\u7d04\u306b\u3064\u3044\u3066\u30a2\u30c9\u30d0\u30a4\u30b9\u3092\u9802\u3044\u305f\u3001@nyampire\u3055\u3093\u3092\u306f\u3058\u3081\u3068\u3059\u308bOSMFJ\u306e\u7686\u69d8\u3001\u304a\u3088\u3073 OpenStreetMap \u306e\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30bf\u306e\u7686\u69d8\u306b\u611f\u8b1d\u3044\u305f\u3057\u307e\u3059\u3002\n\n\n\n\n\u305f\u3060\u3057\u3001\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306e\u30b9\u30bf\u30a4\u30eb\u3084\u30bf\u30a4\u30eb\u306e\u66f4\u65b0\u30dd\u30ea\u30b7\u30fc\u306a\u3069\u3092\u5b8c\u5168\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u306e\u9650\u308a\u3067\u306f\u306a\u3044\u3002\u00a0\u21a9\n\n\n\u5c11\u306a\u304f\u3068\u3082\u3001OSM Japan \u306e tile.openstreetmap.jp \u306b\u95a2\u3057\u3066\u306f\u3001\u9069\u5207\u306a\u30a2\u30af\u30bb\u30b9\u30ec\u30fc\u30c8\u306e\u5236\u9650\u306a\u3069\u306e\u5bfe\u7b56\u3092\u3059\u308c\u3070\u4e0a\u6d41\u3068\u3057\u3066\u4f7f\u3063\u3066\u3082\u69cb\u308f\u306a\u3044\u3068\u306e\u3053\u3068\u3002\uff1cDEL\uff1e\u305f\u3060\u3057\u3001\u3053\u306e\u3088\u3046\u306a\u30ad\u30e3\u30c3\u30b7\u30e5\u30b5\u30fc\u30d0\u3092\u30b5\u30fc\u30d3\u30b9\u88fd\u54c1\u306b\u4f7f\u3063\u3066\u3082\u3044\u3044\u306e\u304b\u306f\u3001\u307e\u3060\u3061\u3083\u3093\u3068\u78ba\u8a8d\u3057\u3066\u3044\u306a\u3044\u3002\uff1c/DEL\uff1e\u00a0\u21a9\n\n\n\n#\u6982\u7565\n\n[\u4f8b\u306e](http://qiita.com/ntabee/items/5f5394523b4760b7a4d6)\u3001[H2O](https://github.com/h2o/h2o) \u306b\u624b\u3092\u52a0\u3048\u305f OpenStreetMap \u306e\u30bf\u30a4\u30eb\u30b5\u30fc\u30d0\u306b\u3001caching proxy \u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n#\u80cc\u666f\n\n[OpenStreetmap](http://openstreetmap.org) (\u4ee5\u4e0b OSM) \u306e\u5730\u56f3\u3092\u4f7f\u3063\u305f\u30b5\u30fc\u30d3\u30b9\u3067\u4f7f\u3046\u5834\u5408\u3001OSM \u306f\u898f\u7d04\u4e0a\u3001\n\n- \u5546\u7528\u30a2\u30d7\u30ea\u3068\u304b\u3067\u306f http://openstreetmap.org \u3067\u30db\u30b9\u30c8\u3055\u308c\u3066\u3044\u308b\u5730\u56f3\u306b\u76f4\u63a5\u30a2\u30af\u30bb\u30b9\u3057\u306a\u3044\u3067\u306d\u3002\n\n\u3068\u3044\u3046\u30bf\u30c6\u30de\u30a8\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u771f\u9762\u76ee\u306b\u3084\u308b\u306a\u3089\u3001**\u81ea\u524d\u3067\u30bf\u30a4\u30eb\u30b5\u30fc\u30d0**\u3092\u7acb\u3066\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044 (\u5fa9\u7fd2)\u3002\n\n\u3068\u3053\u308d\u304c\u3001\u81ea\u524d\u3067\u751f\u30c7\u30fc\u30bf\u304b\u3089\u30bf\u30a4\u30eb\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u30b5\u30fc\u30d0\u3092\u771f\u9762\u76ee\u306b\u7acb\u3066\u3088\u3046\u3068\u3059\u308b\u3068\u3001\n\n- 30GB \u3050\u3089\u3044\u306e OSM \u306e**\u751f\u30c7\u30fc\u30bf**\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\n- \u305d\u308c\u3092 600GB \u3050\u3089\u3044\u306e **PostGIS** \u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u843d\u3068\u3059\n- **PostGIS \u3068 HTTPD \u306e\u9593**\u3092\u3088\u308d\u3057\u304f\u53d6\u308a\u6301\u3063\u3066\u304f\u308c\u308b\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u306a\u308a\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306a\u308a\u306a\u3093\u306a\u308a\u3092\u5165\u308c\u308b\n- **\u8868\u793a\u304b\u304f\u306b\u3093**\u7528\u306e HTML \u3092\u7528\u610f\u3057\u3066\u3001\u3061\u3083\u3093\u3068\u5730\u56f3\u304c\u8868\u793a\u3055\u308c\u308b\u304b\u304b\u304f\u306b\u3093 (\u5927\u62b5\u3001\u5730\u7403\u5168\u90e8\u6c88\u6ca1\u3057\u305f\u771f\u3063\u9752\u306a\u4e16\u754c\u5730\u56f3\u304c\u304b\u304f\u306b\u3093\u3055\u308c\u308b\u3002\u3088\u304b\u3063\u305f\uff01)\n\n\u3068\u3044\u3063\u305f\u975e\u5e38\u306b\u9762\u5012\u304f\u3055\u3044\u624b\u7d9a\u304d\u3092\u8e0f\u307e\u306d\u3070\u306a\u3089\u305a\u3001\u5404\u30b9\u30c6\u30c3\u30d7\u3067\u305d\u308c\u305e\u308c1\u3064\u3001\u547d\u3001\u843d\u3068\u3059\u3002\n\n## \u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\n\n\u5730\u56f3\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u306a\u3089\u3001\u8981\u306f**\u5730\u56f3\u304c\u51fa\u305b\u308c\u3070\u305d\u308c\u3067\u3044\u3044\u3093\u3067\u3059**[^1]\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001OSM\u672c\u5bb6\u306a\u3069\u306e\u30bf\u30a4\u30eb\u30b5\u30fc\u30d0\u304b\u3089\u53d6\u3063\u3066\u304f\u308b caching proxy \u30bf\u30a4\u30d7\u306e\u3082\u306e\u3092\u4f5c\u3063\u3066\u307f\u305f[^2]\u3002\n\n[^1]: \u305f\u3060\u3057\u3001\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306e\u30b9\u30bf\u30a4\u30eb\u3084\u30bf\u30a4\u30eb\u306e\u66f4\u65b0\u30dd\u30ea\u30b7\u30fc\u306a\u3069\u3092\u5b8c\u5168\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u306e\u9650\u308a\u3067\u306f\u306a\u3044\u3002\n[^2]: \u5c11\u306a\u304f\u3068\u3082\u3001**OSM Japan \u306e tile.openstreetmap.jp** \u306b\u95a2\u3057\u3066\u306f\u3001**\u9069\u5207\u306a\u30a2\u30af\u30bb\u30b9\u30ec\u30fc\u30c8\u306e\u5236\u9650\u306a\u3069\u306e\u5bfe\u7b56**\u3092\u3059\u308c\u3070\u4e0a\u6d41\u3068\u3057\u3066\u4f7f\u3063\u3066\u3082\u69cb\u308f\u306a\u3044\u3068\u306e\u3053\u3068\u3002~~\uff1cDEL\uff1e\u305f\u3060\u3057\u3001\u3053\u306e\u3088\u3046\u306a\u30ad\u30e3\u30c3\u30b7\u30e5\u30b5\u30fc\u30d0\u3092\u30b5\u30fc\u30d3\u30b9\u88fd\u54c1\u306b\u4f7f\u3063\u3066\u3082\u3044\u3044\u306e\u304b\u306f\u3001**\u307e\u3060\u3061\u3083\u3093\u3068\u78ba\u8a8d\u3057\u3066\u3044\u306a\u3044**\u3002\uff1c/DEL\uff1e~~\n\n#\u76ee\u6a19\n\nOSM\u306e\u751f\u30c7\u30fc\u30bf\u3084 PostGIS \u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092 **\u4e00\u5207** \u4f7f\u308f\u305a\u306b\u5730\u56f3\u3092\u51fa\u305b\u308b\u3053\u3068\u3002\n\n#\u65b9\u91dd\n\nH2O \u306e [proxy handler](https://github.com/h2o/h2o/blob/master/lib/handler/proxy.c) \u306b\u30b3\u30fc\u30c9\u3092\u3064\u304e\u305f\u3057\u3066\u3001\n\n1. \u30ea\u30af\u30a8\u30b9\u30c8\u306eURL\u304c\u30bf\u30a4\u30eb\u306e\u540d\u524d\u306e\u3088\u3046\u306b\u898b\u3048\u3001\u304b\u3064\u30ed\u30fc\u30ab\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u307e\u3060\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u306a\u3044\u6642\u3001\u3060\u3051\n2. \u4e0a\u6d41 (OSM \u672c\u5bb6\u3068\u304b) \u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u3066\n3. \u8fd4\u4e8b\u304c\u6765\u305f\u3089\u3001\u51fa\u529b\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u30d5\u30a3\u30eb\u30bf (\u305d\u3046\u3044\u3046\u4ed5\u7d44\u307f\u304c H2O \u306b\u306f\u3042\u308b) \u3067\u30ed\u30fc\u30ab\u30eb\u306b\u4fdd\u5b58\n\n[\u3068\u3044\u3046\u65b9\u91dd\u3067\u5b9f\u88c5](https://github.com/ntabee/h2o-tile/blob/tile/lib/handler/tile-proxy.c)\u3057\u305f\u3002\n\u9069\u5f53\u306b\u629c\u7c8b\u3059\u308b\u3002\u521d\u671f\u5316\u3068\u304b\u30a8\u30e9\u30fc\u51e6\u7406\u3068\u304b\u3088\u3051\u3048\u306a\u3068\u3053\u308d\u306f\u7701\u304f:\n\n```c\n/* \u4e0a\u6d41\u304b\u3089\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u304d\u305f\u3089\u3053\u3053\u3092\u901a\u3059 */\nstatic void store_data(h2o_ostream_t *_self, h2o_req_t *req, h2o_iovec_t *inbufs, size_t inbufcnt, int is_final)\n{\n    struct st_store_tile_t *self = (void *)_self;\n    int i;\n    /* \u30d5\u30a1\u30a4\u30eb\u3092\u958b\u3044\u3066\u3001\u3084\u3063\u3066\u304d\u305f\u30d0\u30c3\u30d5\u30a1\u3092\u66f8\u3044\u3066\u3044\u304f */\n    if (self->fd < 0) {\n        /* Race \u5bfe\u7b56\u3068\u3057\u3066\u3001\u9069\u5f53\u306a\u540d\u524d\u306e tmp \u30d5\u30a1\u30a4\u30eb\u306b\u307e\u305a\u4fdd\u5b58\u3057\u3066\u3001\u5168\u90e8\u7d42\u308f\u3063\u305f\u3089\u300c\u672c\u5f53\u306e\u300d\u540d\u524d\u306b rename() */\n        self->fd = open(self->tmp_tile_path.base, O_WRONLY | O_TRUNC | O_CREAT, 0666);\n    }\n    if (self->fd < 0) {\n        /* \u30a8\u30e9\u30fc\u3002\u3082\u3046\u3042\u304d\u3089\u3081\u308d */\n        ...\n        goto Cont; /* \u5931\u6557\u3057\u305f\u3089\u3001\u4fdd\u5b58\u306f\u3042\u304d\u3089\u3081\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u4e8b\u3092\u6295\u3052\u308b\u4eba\u306b\u4ed5\u4e8b\u3092\u4e38\u6295\u3052\u3060\u3051\u306f\u3057\u3066\u304a\u304f\u3002\u4ee5\u4e0b\u540c\u69d8 */\n    }\n\n    for (i=0; i != inbufcnt; ++i) {\n        int v = write(self->fd, inbufs[i].base, inbufs[i].len);\n        if (v != inbufs[i].len) {\n            /* \u30a8\u30e9\u30fc\u3002\u3082\u3046\u3042\u304d\u3089\u3081\u308d */\n            ...\n            goto Cont;\n        }\n    }\n\n    if (is_final) {\n        close(self->fd);\n        if (rename(self->tmp_tile_path.base, self->local_tile_path.base) != 0) {\n            h2o_req_log_error(req, \"lib/handler/tile-proxy.c\", \"Failed to rename the tmp file %s to %s: %s\\n\", self->tmp_tile_path.base, self->local_tile_path.base, strerror(errno));\n            /* tmp \u30d5\u30a1\u30a4\u30eb\u306e rename \u306b\u5931\u6557\u3057\u305f\u3089\u4f55\u56de\u304b\u30ea\u30c8\u30e9\u30a4\u3055\u305b\u3066\u3044\u308b\u304c\u3001\u3053\u3053\u306f\u3053\u3093\u306a\u3053\u3068\u3057\u3066\u3044\u3044\u306e\u304b\uff1f */\n            for (i=0; i<32; ++i) {\n                usleep(10);\n                if (rename(self->tmp_tile_path.base, self->local_tile_path.base) == 0) {\n                }\n                h2o_req_log_error(req, \"lib/handler/tile-proxy.c\", \"Failed to rename the tmp file %s to %s: %s\\n\", self->tmp_tile_path.base, self->local_tile_path.base, strerror(errno));\n            }\n        }\n    }\nCont:\n    h2o_ostream_send_next(&self->super, req, inbufs, inbufcnt, is_final);\n}\n\n/* transfer-encoding: chunked \u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u304d\u305f\u3089\u3053\u3053\u3092\u901a\u3059 */\nstatic void store_chunked_data(h2o_ostream_t *_self, h2o_req_t *req, h2o_iovec_t *inbufs, size_t inbufcnt, int is_final)\n{\n    ...\n    /* \u3068\u308a\u3042\u3048\u305a\u30e1\u30e2\u30ea\u306b\u5168\u90e8\u305f\u3081\u3066\u304a\u3044\u3066\u3001\u6700\u5f8c\u306b phr_chunked_decoder \u3067\u30b4\u30df\u3068\u308a\u3001\u3068\u3044\u3046\u96d1\u306a\u65b9\u91dd */\n    /* \u30bf\u30a4\u30eb\u306e PNG \u753b\u50cf\u3067\u4f55MB\u3082\u3044\u304b\u306a\u3044\u3057\u3053\u308c\u3067\u3048\u3048\u3084\u308d */\n    /* calc chunk size */\n    for (i = 0; i != inbufcnt; ++i) {\n        self->chunked_content_buf = h2o_concat(&req->pool, self->chunked_content_buf, inbufs[i]);\n    }\n    if (is_final) {\n        struct phr_chunked_decoder chunked_decoder = {};\n        char* buf = self->chunked_content_buf.base;\n        size_t newsz = self->chunked_content_buf.len;\n        switch (phr_decode_chunked(&chunked_decoder, buf, &newsz)) {\n        case -1: /* error */\n            /* \u30a8\u30e9\u30fc\u3002\u3082\u3046\u3042\u304d\u3089\u3081\u308d */\n            ...\n            goto Cont;\n        case -2: /* incomplete */\n            /* \u30a8\u30e9\u30fc\u3002\u3082\u3046\u3042\u304d\u3089\u3081\u308d */\n            ...\n            goto Cont;\n        default: /* complete */\n            break;\n        }\n\n        write(self->fd, buf, newsz);\n        close(self->fd);\n        if (rename(self->tmp_tile_path.base, self->local_tile_path.base) != 0) {\n            /* \u3053\u3053\u3082 rename \u3092\u4f55\u56de\u304b\u30ea\u30c8\u30e9\u30a4\u3055\u305b\u3066\u3044\u308b\u304c\u3001\u3053\u3093\u306a\u5b9f\u88c5\u3067\u5927\u4e08\u592b\u304b\uff1f */\n            ...\n        }\n    }\n\nCont:\n    h2o_ostream_send_next(&self->super, req, inbufs, inbufcnt, is_final);\n}\n\n\nstatic void on_setup_ostream(h2o_filter_t *_self, h2o_req_t *req, h2o_ostream_t **slot)\n{\n    ...\n    /*\n    req->path_normalized.base is of the form \"/z/x/y.png\"\n    */\n    if ( likely(\n            req->res.status == 200 && \n            tile_rewrite_path(req->path_normalized.base, \"/\", 1, physical_tile_path, 28, &z, &x, &y)) ) {\n        /* \u4e0a\u6d41\u304b\u3089\u306e\u304a\u8fd4\u4e8b\u3067\u3001\u30bf\u30a4\u30eb\u306e\u3088\u3046\u306b\u898b\u3048\u308bURL z/xxx/yyy.png \u306a\u3089\u3001\u30ed\u30fc\u30ab\u30eb\u306b\u4fdd\u5b58\u3059\u308b */\n        ...\n        /*\n        Now, physical_path is of the form /z/nnn/nnn/nnn/nnn/nnn.png\n        */\n        ...\n        store_tile = (void *)h2o_add_ostream(req, sizeof(struct st_store_tile_t), slot);\n        ...\n        store_tile->super.do_send = store_data; /* \u4e0a\u6d41\u304b\u3089\u306e\u304a\u8fd4\u4e8b\u306f store_data() \u3092\u901a\u3059 */\n        if ((txfer_enc_idx = h2o_find_header(&(req->res.headers), H2O_TOKEN_TRANSFER_ENCODING, SIZE_MAX)) != -1) {\n            h2o_iovec_t *txfer_enc = &req->res.headers.entries[txfer_enc_idx].value;\n            if (h2o_memis(txfer_enc->base, txfer_enc->len, H2O_STRLIT(\"chunked\"))) {\n                /* \u305f\u3060\u3057\u3001transfer-encoding: chunked \u306e\u5834\u5408\u306f\u3001store_chunked_data() \u3092\u901a\u3059 */\n                store_tile->super.do_send = store_chunked_data;\n                ...\n            }\n        }\n        ...\n    } \n\n    h2o_setup_next_ostream(&self->super, req, slot);\n}\n\nstatic int on_req_tile(struct st_h2o_handler_t *_self, h2o_req_t *req) {\n    ...\n    char* tile_path = req->path_normalized.base + req->pathconf->path.len; /* is of the form z/x/y.png */\n    /* \u30bf\u30a4\u30eb\u306e\u3088\u3046\u306b\u898b\u3048\u308bURL z/xxx/yyy.png \u3067 */\n    if (likely(tile_rewrite_path(tile_path, \"\", 0, physical_tile_path, 28, &z, &x, &y))) {\n        h2o_iovec_t full_path = h2o_concat(&req->pool, self->local_base_path, h2o_iovec_init(physical_tile_path, strlen(physical_tile_path)));\n        /* \u3060\u304c\u3059\u3067\u306b\u30ed\u30fc\u30ab\u30eb\u306b\u3042\u308b\u30d5\u30a1\u30a4\u30eb\u306f\u305d\u308c\u3092\u8fd4\u3059 */\n        if (likely(access(full_path.base, F_OK) == 0)) {\n            return h2o_file_send(req, 200, \"OK\", full_path.base, h2o_iovec_init(H2O_STRLIT(\"image/png\")), 0);\n        }\n    }\n    /* proxy.c \u672c\u6765\u306e\u5b9f\u88c5\u306b\u4e38\u6295\u3052 \u3067 */\n    return self->on_req_delegate(_self, req);\n}\n\nh2o_tile_proxy_handler_t *h2o_tile_proxy_register(h2o_pathconf_t *pathconf, const char *local_base_path, const char *proxy) {\n    h2o_iovec_t local_base_path_v = h2o_strdup_slashed(NULL, local_base_path, SIZE_MAX);\n    h2o_tile_proxy_handler_t *self;\n\n    do { /* scoping */\n        /* Initialize the handler */\n        h2o_proxy_config_vars_t proxy_config = { 10*1000, 0, 2000 };\n\n        self = (void*)h2o_create_handler(pathconf, sizeof(*self));\n        h2o_url_parse(proxy, strlen(proxy), &self->super.upstream);\n\n        self->super = *(h2o_proxy_register_reverse_proxy(pathconf, &self->super.upstream, &proxy_config));\n        self->local_base_path = local_base_path_v;\n        self->on_req_delegate = self->super.super.on_req;\n        self->super.super.on_req = on_req_tile;\n    } while (0);\n\n    do { /* scoping */\n        struct st_h2o_tile_store_filter_t *self = (void *)h2o_create_filter(pathconf, sizeof(*self));\n        self->local_base_path = local_base_path_v;\n        self->super.on_setup_ostream = on_setup_ostream;\n    } while (0);\n\n    return self;\n}\n```\n\n#\u73fe\u72b6 (\u3052\u3093\u3058\u3064)\n\n\u4e0a\u6d41\u3092\u8907\u6570\u8a2d\u5b9a\u3057\u3066\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3\u3055\u305b\u305f\u308a\u3001\u4e0a\u6d41\u304c\u843d\u3061\u3066\u305f\u3089\u81ea\u524d\u306e\u30ec\u30f3\u30c0\u30e9\u30fc\u306b\u6295\u3052\u305f\u308a (\u307e\u305f\u306f\u305d\u306e\u9006) \u3057\u305f\u304b\u3063\u305f\u306e\u3060\u304c\u3001H2O \u306e\u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u306e\u8a2d\u8a08\u3067\u3001\u3069\u3046\u3084\u308c\u3070\u5b9f\u73fe\u3067\u304d\u308b\u306e\u304b\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3002\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u7b49\u306f\u3001\u4eca\u5f8c\u3086\u3063\u304f\u308a\u3068\u6574\u5099\u3057\u3066\u3044\u304f\u3002\u660e\u65e5\u304b\u3089\u7d76\u5bfe\u304c\u3093\u3070\u308b\u3002\u672c\u5f53\u3060\u3088\u3002\n\n#\u30c7\u30e2\n\n\u4ee5\u524d AWS \u306b\u7acb\u3066\u305f\u30c7\u30e2\u30b5\u30fc\u30d0\u3092\u5165\u308c\u66ff\u3048\u305f: http://h2o-tile-demo.ddns.net:8080/\n\u4eca\u307e\u3067\u306f\u3001\u6771\u4eac\u5468\u8fba\u306e\u4e00\u90e8\u4ee5\u5916\u306f\u771f\u3063\u767d\u306a\u54c0\u3057\u3044\u72b6\u614b\u3060\u3063\u305f\u306e\u304c\u3001\u3069\u3053\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3082\u305d\u306e\u5834\u6240\u306e\u5730\u56f3\u304c\u51fa\u3066\u304f\u308b...\u30cf\u30ba\u3060\u3002\n\u305f\u3060\u3057\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u304c 20G \u3057\u304b\u306a\u3044\u306e\u3067\u3042\u3093\u307e\u308a\u3044\u3058\u3081\u306a\u3044\u3067\u306d\u3002\n\n#\u8b1d\u8f9e\n@kazuho \u3055\u3093\u3092\u306f\u3058\u3081\u3001\u672c\u5bb6 H2O \u958b\u767a\u8005\u306e\u7686\u69d8\u3001\u30bf\u30a4\u30eb\u30b5\u30fc\u30d0\u306e\u5229\u7528\u898f\u7d04\u306b\u3064\u3044\u3066\u30a2\u30c9\u30d0\u30a4\u30b9\u3092\u9802\u3044\u305f\u3001@nyampire\u3055\u3093\u3092\u306f\u3058\u3081\u3068\u3059\u308bOSMFJ\u306e\u7686\u69d8\u3001\u304a\u3088\u3073 OpenStreetMap \u306e\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30bf\u306e\u7686\u69d8\u306b\u611f\u8b1d\u3044\u305f\u3057\u307e\u3059\u3002\n", "tags": ["h2o", "GIS", "OpenStreetMap"]}