{"tags": ["Java", "\u753b\u50cf\u51e6\u7406", "tips", "FFT", "\u79fb\u690d"], "context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u3000\u3075\u3068\u3001\u753b\u50cf\u3092\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3059\u308b\u30bd\u30d5\u30c8\u3092Java\u3067\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3000\u305f\u3060\u3001\u3053\u308c\u304c\u306a\u304b\u306a\u304b\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u3001\u8a66\u884c\u932f\u8aa4\u306e\u8a18\u9332\u3092\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nFFT\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3064\u3044\u3066\n\u3000\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5229\u7528\u3059\u308b\u969b\u306f\u901a\u5e38\u3001\u65e2\u5b58\u306eFFT\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u983c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u30ab\u30ea\u30ab\u30ea\u306b\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u3066\u6709\u540d\u306a\u306e\u306f\u3001FFTW\u3084\u5927\u6d66\u7248FFT\u3084OTFFT\u306a\u3069\u3067\u3059\u306d\u3002\u4eca\u56de\u306fJava\u3067\u7d44\u3080\u3068\u6c7a\u3081\u3066\u3044\u305f\u306e\u3067\u3001\u3053\u306e\u3046\u3061Java\u79fb\u690d\u7248\u304c\u3042\u3063\u305f\u5927\u6d66\u7248FFT\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u3000\u3068\u3053\u308d\u3067\u3053\u306e\u79fb\u690d\u7248\u3001\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u304crdft\u3057\u304b\u7121\u3044\u3093\u3067\u3059\u306d\u3002rdft\u3068\u306f\u3001\u300c\u5b9f\u96e2\u6563\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u3001\u5165\u529b\u304c(2^n\u500b\u306e)\u5b9f\u6570\u3060\u3051\u53d7\u3051\u4ed8\u3051\u307e\u3059\u3088\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3069\u3046\u305b\u5165\u529b\u30c7\u30fc\u30bf\u306f\u753b\u50cf(\u5b9f\u6570\u30c7\u30fc\u30bf)\u306a\u306e\u3067\u305d\u306e\u70b9\u306f\u5225\u306b\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u554f\u984c\u306f\u3053\u306e\u95a2\u6570\u306e\u6319\u52d5\u304c\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3053\u3068\u3067\u3059\u3002\n\u3000\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u9069\u5f53\u306b\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u5177\u4f53\u7684\u306b\u306f\u6b21\u306e\u30b3\u30fc\u30c9\u3092\u8d70\u3089\u305b\u3066\u7d50\u679c\u3092\u898b\u307e\u3059\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u306f(package\u6587\u3092\u524a\u3063\u3066)\u5225\u9014\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nsample1.java\npublic class fft_test{\n    public static void main(String args[]){\n        double[] data = {1, 2, 3, 4, 5, 6, 7, 8};\n        int n = data.length;\n        FFT4g fft = new FFT4g(n);\n        fft.rdft(1, data);\n        for(int k = 0; k < n; k++){\n            System.out.println(\"\" + k + \",\" + data[k]);\n        }\n    }\n}\n\n\n\u3000\u3053\u306e\u7d50\u679c\u3001\u6b21\u306e\u3088\u3046\u306a\u51fa\u529b\u3092\u5f97\u307e\u3057\u305f\u3002\n\nresult1.txt\n0,54.0\n1,-12.0\n2,3.7781745930520234\n3,-28.67766952966369\n4,-9.0\n5,-15.0\n6,-11.778174593052023\n7,-6.6776695296636905\n\n\n\u3000\u3053\u308c\u304c\u3069\u3046\u3044\u3063\u305f\u610f\u5473\u3092\u6301\u3064\u304b\u3067\u3059\u304c\u3001\u540c\u3058\u30c7\u30fc\u30bf\u3092Mathematica\u306b\u639b\u3051\u3066\u307f\u308b\u3068\u3001\u5168\u304f\u9055\u3046\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\nresult2.txt\n# Fourier[{1, 1, 2, 3, 5, 8, 13, 21}]\n{19.0919+0. i, 1.33579-10.1391 i, -3.18198-5.3033 i, -4.16421-2.36091 i, -4.24264+0. i, -4.16421+2.36091 i, -3.18198+5.3033 i, 1.33579+10.1391 i}\n\n\n\u3000\u305f\u3060\u3053\u308c\u306f\u3001\u5927\u6d66\u7248FFT\u3068Mathematica\u306e\u7d50\u679c\u3067\u306f\u221aN\u3060\u3051\u30b9\u30b1\u30fc\u30eb\u304c\u9055\u3046\u3053\u3068\u3068\u3001\u305d\u3082\u305d\u3082\u30c7\u30fc\u30bf\u306e\u4e26\u3076\u9806\u756a\u304c\u9055\u3046\u3053\u3068\u304b\u3089\u4ed5\u65b9\u306a\u3044\u3068\u8a00\u3048\u307e\u3059\u306d\u3002\u5f8c\u8005\u306e\u8cc7\u6599\u306b\u3088\u308b\u3068\u3001\u5927\u6d66\u7248FFT\u3067\u306f\u3001rdft\u3057\u305f\u5f8c\u306e\u30c7\u30fc\u30bf\u304c\u6b21\u306e\u3088\u3046\u306b\u4e26\u3093\u3067\u3044\u308b\u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u51fa\u529b\u30c7\u30fc\u30bf\u304cd[i]\u3067\u3001M=N/2\u3068\u3059\u308b\na[0]\uff5ea[M-1]\u306fd[0],d[2],...,d[N-1]\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\nb[1]\uff5eb[M-1]\u306fd[1],d[3],...,d[N]\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\na[M]\u306fd[1]\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\n\n\u3000\u4e00\u65b9\u3001Mathematica\u306f\u7d20\u76f4\u306ba[0],a[1]+b[1]i,a[2]+b[2]i,...,a[N-1]+b[N-1]i\u3068\u3044\u3063\u305f\u5f62\u5f0f\u3067\u66f8\u304b\u308c\u3066\u3044\u307e\u3059(a[0]\u3068a[M]\u3067\u306f\u865a\u6570\u6210\u5206\u304c\u7121\u3044\u3053\u3068\u306b\u6ce8\u610f)\u3002\u3069\u3046\u305b\u6a19\u672c\u5316\u5b9a\u7406\u306e\u305b\u3044\u3067N\u500b\u70b9\u304c\u3042\u3063\u3066\u3082\u534a\u5206\u3057\u304b\u7d50\u679c\u3068\u3057\u3066\u4f7f\u3048\u306a\u3044\u306e\u3067\u5408\u7406\u7684\u3068\u3082\u8a00\u3048\u307e\u3059\u3002\n\n\n\nindex\ninput\noutput\nkind\n\n\n\n\n0\n1\n54.0\na_0\n\n\n1\n2\n-12.0\na_4\n\n\n2\n3\n3.78\na_1\n\n\n3\n4\n-28.7\nb_1\n\n\n4\n5\n-9.0\na_2\n\n\n5\n6\n-15.0\nb_2\n\n\n6\n7\n-11.8\na_3\n\n\n7\n8\n-6.68\nb_3\n\n\n\n\u3000\u305f\u3060\u3001\u3053\u308c\u3060\u3068\u5f8c\u8ff0\u3059\u308b\u51e6\u7406\u3092\u884c\u3046\u969b\u306b\u591a\u5c11\u90fd\u5408\u304c\u60aa\u3044\u306e\u3067\u3001\u300c\u5165\u529b\u304cN\u500b\u306e\u5b9f\u6570\u3067\u3042\u308b\u969b\u306b\u51fa\u529b\u3092N\u500b\u306e\u8907\u7d20\u6570\u306b\u3059\u308b\u300d\u3053\u3068\u306b\u3057\u307e\u3059\u3002\u307e\u3042\u8981\u3059\u308b\u306b\u865a\u6570\u90e8\u30920\u3068\u3057\u3066\u6c34\u5897\u3057\u3059\u308c\u3070\u3044\u3044\u3093\u3067\u3059\u306d\u3002\n\nresult3.txt\n# \u30b3\u30fc\u30c9\u5909\u66f4\ndouble[] data = {1, 0, 1, 0, 2, 0, 3, 0, 5, 0, 8, 0, 13, 0, 21, 0};\n# \u7d50\u679c\n0,54.0\n1,54.0    // \u3053\u3053\u3060\u3051\u7121\u8996\u3059\u308c\u3070(0\u306b\u3059\u308c\u3070)Mathematica\u306e\u7d50\u679c\u3068\u4e00\u81f4\n2,3.7781745930520234\n3,-28.67766952966369\n4,-9.0\n5,-15.0\n6,-11.778174593052023\n7,-6.677669529663689\n8,-12.0\n9,0.0\n10,-11.778174593052023\n11,6.677669529663689\n12,-9.0\n13,15.0\n14,3.7781745930520234\n15,28.67766952966369\n# \u53c2\u8003(Fourier[{1, 1, 2, 3, 5, 8, 13, 21}]*sqrt(8))\n{54.+0. i, 3.77817-28.6777 i, -9.-15. i, -11.7782-6.67767 i, -12.+0. i, -11.7782+6.67767 i, -9.+15. i, 3.77817+28.6777 i}\n\n\n\n2\u6b21\u5143FFT\u306b\u3064\u3044\u3066\n\u3000\u7aef\u7684\u306b\u8a00\u3048\u3070\u30011\u6b21\u5143FFT\u3092\u884c\u65b9\u5411\u304a\u3088\u3073\u5217\u65b9\u5411\u306b\u639b\u3051\u308c\u30702\u6b21\u5143FFT\u306b\u306a\u308a\u307e\u3059\u3002\u30ab\u30ea\u30ab\u30ea\u306b\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3057\u305f2\u6b21\u5143FFT\u3060\u3068\u66f4\u306b\u8a08\u7b97\u91cf\u3092\u6e1b\u3089\u305b\u308b(\u4f8b1\u30fb\u4f8b2)\u305d\u3046\u3067\u3059\u304c\u3001\u305d\u3053\u307e\u3067\u5909\u614b\u7684\u306a\u30b3\u30fc\u30c9\u3092\u7d44\u3080\u6c17\u306f\u3042\u308a\u307e\u305b\u3093\u306e\u3067\u7d20\u76f4\u306b1\u6b21\u5143FFT\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u30021\u6b21\u5143FFT\u3092\u884c\u304a\u3088\u3073\u5217\u306b\u639b\u3051\u305f\u969b\u306f\u3001\u305d\u306e\u90fd\u5ea6\u6b63\u898f\u5316\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3000\u3082\u3063\u3068\u3082\u3001\u914d\u5217\u304c\u884c\u30aa\u30fc\u30c0\u30fc\u3067\u3082\u5217\u30aa\u30fc\u30c0\u30fc\u3067\u3082\u9006\u306e\u30aa\u30fc\u30c0\u30fc\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5834\u5408\u306b\u304a\u3044\u3066\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u304c\u5927\u5909\u306a\u306e\u3067\u3001\u9014\u4e2d\u3067\u8ee2\u7f6e\u3092\u631f\u3080\u65b9\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u3000\u307e\u305f\u3001\u753b\u50cf\u5316\u3059\u308b\u306b\u306f\u7d50\u679c(\u8907\u7d20\u6570)\u304b\u3089\u30d1\u30ef\u30fc\u30b9\u30da\u30af\u30c8\u30eb(\u7d76\u5bfe\u5024)\u3092\u53d6\u308a\u51fa\u3057\u3066\u5bfe\u6570\u30b9\u30b1\u30fc\u30eb\u306b\u3059\u308b\u306e\u304c\u5e38\u9053\u306a\u306e\u3067\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\nsample2.java\n// \u914d\u5217\u306f\u884c\u30aa\u30fc\u30c0\u30fc\u3060\u304c\u3001\u5927\u6d66\u7248FFT\u306e\u4ed5\u69d8\u3067\u5b9f\u90e8\u3068\u865a\u90e8\u3092\u6a2a\u306b\u4e26\u3079\u3056\u308b\u3092\u5f97\u306a\u3044\ndouble re = a[(x + y * w) * 2];\ndouble im = a[(x + y * w) * 2 + 1];\ndouble norm = re * re + im * im;\nif(norm != 0.0) norm = Math.log(norm) / 2;\n\n\n\n\u3053\u3053\u306bcfft\u304c\u3042\u308b\u3058\u3083\u308d\uff1f\n\u3000\u2026\u2026\u3055\u3066\u3002\u3053\u306e\u8003\u3048\u3067\u3054\u304f\u666e\u901a\u306brfft\u3092\u4e8c\u65b9\u5411\u306b\u4f7f\u3063\u30662\u6b21\u5143FFT\u3059\u308b\u3068\u3001\u7d75\u304c\u304a\u304b\u3057\u304f\u306a\u308a\u307e\u3059\u3002\n\u3000\u3053\u308c\u306f\u3001\u300c\u4e00\u5ea6rfft\u3059\u308b\u3068\u7d50\u679c\u304c\u8907\u7d20\u6570\u3067\u51fa\u3066\u304f\u308b\u306e\u306b\u3001\u305d\u306e\u8907\u7d20\u6570\u6df7\u3058\u308a\u306e\u914d\u5217\u76f8\u624b\u306brfft\u3057\u305f\u304b\u3089\u300d\u306a\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u8a00\u3044\u51fa\u3059\u3068\u3058\u3083\u3042\u4f55\u6545rfft\u3057\u305f\u306e\u304b\u3063\u3066\u8a71\u306b\u306a\u308a\u307e\u3059\u3088\u306d\u2026\u2026\u3002\n\u3000\u307f\u3093\u306a\u5927\u597d\u304dlena\u3055\u3093\u3092\u4f8b\u306b\u3059\u308b\u3068\u3001\u5143\u753b\u50cf\n\n\u306b\u5bfe\u3057\u3066\u3001\u672c\u6765\u306a\u3089\u3053\u3093\u306a\u611f\u3058\u306e\u753b\u50cf\n\n\u3092\u51fa\u3057\u305f\u3044\u306e\u306b\u3001\u3053\u3093\u306a\u611f\u3058\u306e\u753b\u50cf\n\n\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3093\u3067\u3059\u306d\u3002\u660e\u308b\u3055(\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0)\u3092\u7121\u8996\u3057\u3066\u3082\u3001\u5bfe\u89d2\u7dda\u65b9\u5411\u306e\u5177\u5408\u304c\u5fae\u5999\u306b\u9055\u3046\u3063\u3066\u306e\u304c\u81f4\u547d\u7684\u3067\u3059\u3002\u3058\u3083\u3042\u3069\u3046\u3057\u305f\u304b\u3063\u3066\uff1f\n\u3000\u305d\u308a\u3083\u3082\u3046\u2026\u2026cfft\u3092\u79fb\u690d\u3059\u308b\u3057\u304b\u7121\u3044\u3088\u306d\uff1f\n\u3000\u5177\u4f53\u7684\u306b\u306f\u3001\u5143\u3005\u306e\u79fb\u690d\u7248\u306b\u6b21\u306e\u95a2\u6570\u3092\u4ed8\u3051\u8db3\u3059\u3060\u3051\u3067\u3059\u3002\n\nFFT4g+.java\n    public void cdft(int isgn, double[] a)\n    {\n        if (n > (ip[0] << 2)) {\n            makewt(n >> 2);\n        }\n        if (n > 4) {\n            if (isgn >= 0) {\n                bitrv2(n, a);\n                cftfsub(a);\n            } else {\n                bitrv2conj(n, a);\n                cftbsub(a);\n            }\n        }else if (n == 4) {\n            cftfsub(a);\n        }\n    }\n    private void bitrv2conj(int n, double[] a)\n    {\n        int j, j1, k, k1, l, m, m2;\n        double xr, xi, yr, yi;\n\n        ip[2 + 0] = 0;\n        l = n;\n        m = 1;\n        while ((m << 3) < l) {\n            l >>= 1;\n            for (j = 0; j < m; j++) {\n                ip[2 + m + j] = ip[2 + j] + l;\n            }\n            m <<= 1;\n        }\n        m2 = 2 * m;\n        if ((m << 3) == l) {\n            for (k = 0; k < m; k++) {\n                for (j = 0; j < k; j++) {\n                    j1 = 2 * j + ip[2 + k];\n                    k1 = 2 * k + ip[2 + j];\n                    xr = a[j1];\n                    xi = -a[j1 + 1];\n                    yr = a[k1];\n                    yi = -a[k1 + 1];\n                    a[j1] = yr;\n                    a[j1 + 1] = yi;\n                    a[k1] = xr;\n                    a[k1 + 1] = xi;\n                    j1 += m2;\n                    k1 += 2 * m2;\n                    xr = a[j1];\n                    xi = -a[j1 + 1];\n                    yr = a[k1];\n                    yi = -a[k1 + 1];\n                    a[j1] = yr;\n                    a[j1 + 1] = yi;\n                    a[k1] = xr;\n                    a[k1 + 1] = xi;\n                    j1 += m2;\n                    k1 -= m2;\n                    xr = a[j1];\n                    xi = -a[j1 + 1];\n                    yr = a[k1];\n                    yi = -a[k1 + 1];\n                    a[j1] = yr;\n                    a[j1 + 1] = yi;\n                    a[k1] = xr;\n                    a[k1 + 1] = xi;\n                    j1 += m2;\n                    k1 += 2 * m2;\n                    xr = a[j1];\n                    xi = -a[j1 + 1];\n                    yr = a[k1];\n                    yi = -a[k1 + 1];\n                    a[j1] = yr;\n                    a[j1 + 1] = yi;\n                    a[k1] = xr;\n                    a[k1 + 1] = xi;\n                }\n                k1 = 2 * k + ip[k];\n                a[k1 + 1] = -a[k1 + 1];\n                j1 = k1 + m2;\n                k1 = j1 + m2;\n                xr = a[j1];\n                xi = -a[j1 + 1];\n                yr = a[k1];\n                yi = -a[k1 + 1];\n                a[j1] = yr;\n                a[j1 + 1] = yi;\n                a[k1] = xr;\n                a[k1 + 1] = xi;\n                k1 += m2;\n                a[k1 + 1] = -a[k1 + 1];\n            }\n    } else {\n        a[1] = -a[1];\n        a[m2 + 1] = -a[m2 + 1];\n        for (k = 1; k < m; k++) {\n            for (j = 0; j < k; j++) {\n                j1 = 2 * j + ip[k];\n                k1 = 2 * k + ip[j];\n                xr = a[j1];\n                xi = -a[j1 + 1];\n                yr = a[k1];\n                yi = -a[k1 + 1];\n                a[j1] = yr;\n                a[j1 + 1] = yi;\n                a[k1] = xr;\n                a[k1 + 1] = xi;\n                j1 += m2;\n                k1 += m2;\n                xr = a[j1];\n                xi = -a[j1 + 1];\n                yr = a[k1];\n                yi = -a[k1 + 1];\n                a[j1] = yr;\n                a[j1 + 1] = yi;\n                a[k1] = xr;\n                a[k1 + 1] = xi;\n            }\n            k1 = 2 * k + ip[k];\n            a[k1 + 1] = -a[k1 + 1];\n            a[k1 + m2 + 1] = -a[k1 + m2 + 1];\n        }\n    }\n}\n\n\n\u3000\u3067\u3001\u4e8c\u6b21\u5143FFT\u306b\u3053\u306ecfft\u3092\u4f7f\u3048\u3070\u3053\u306e\u901a\u308a\u3002\u30de\u30c8\u30e2\u306a\u753b\u50cf\u304c\u51fa\u529b\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n\u5b8c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\n\n2d_fft.java\n/* \u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3067\u898b\u308b\u753b\u50cf\u89e3\u50cf\u5ea6\n * \u53c2\u8003\uff1a\n * \u300cFFT (\u9ad8\u901f\u30d5\u30fc\u30ea\u30a8\u30fb\u30b3\u30b5\u30a4\u30f3\u30fb\u30b5\u30a4\u30f3\u5909\u63db) \u306e\u6982\u7565\u3068\u8a2d\u8a08\u6cd5\u300d\n * http://www.kurims.kyoto-u.ac.jp/~ooura/fftman/index.html\n * \u300c\u5927\u6d66\u7248FFT\u306eJava\u79fb\u690d\u300d\n * http://hp.vector.co.jp/authors/VA046927/fft4gjava.html\n * \u300c\u7b2c11\u7ae0 \u5468\u6ce2\u6570\u3067\u51e6\u7406\u3059\u308b\u300d\n * http://pokosho.com/t/image/11/\n * \u300c\u5099\u5fd8\u9332: \u753b\u50cf\u51e6\u7406\u3067\u306e\u4e8c\u6b21\u5143\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u300d\n * http://bebolog.blogspot.jp/2014/12/blog-post_15.html\n */\n\nimport java.awt.image.BufferedImage;\nimport java.io.File;\nimport javax.imageio.ImageIO;\n\npublic class show_resolution{\n    public static void main(String args[]){\n        if(args.length < 1) return;\n        try{\n            BufferedImage image = ImageIO.read(new File(args[0]));\n            int w = image.getWidth(), h = image.getHeight();\n            double[] image_data = new double[w * h * 2];\n            // \u30c7\u30fc\u30bf\u3092\u914d\u5217\u306b\u4ee3\u5165\u3059\u308b\n            for(int y = 0; y < h; ++y){\n                for(int x = 0; x < w; ++x){\n                    int color = image.getRGB(x, y);\n                    int r = (color & 0xff0000) >> 16;\n                    int g = (color & 0xff00) >> 8;\n                    int b = color & 0xff;\n                    image_data[(x + y * w) * 2] = 0.299 * r + 0.587 * g + 0.114 * b;\n                    image_data[(x + y * w) * 2 + 1] = 0.0;\n                }\n            }\n            // \u4e8c\u6b21\u5143FFT\n            fft2d(image_data, w, h);\n            // \u30d1\u30ef\u30fc\u30b9\u30da\u30af\u30c8\u30eb\u306b\u5909\u63db\n            power_spectral(image_data, w, h);\n            // \u8c61\u9650\u5165\u308c\u66ff\u3048\n            swap_quadrants(image_data, w, h);\n            // \u6b63\u898f\u5316\n            normalization(image_data, w, h);\n            // \u51fa\u529b\n            for(int y = 0; y < h; ++y){\n                for(int x = 0; x < w; ++x){\n                    int Y = (int)(image_data[(x + y * w)] * 255);\n                    if(Y > 255) Y = 255;\n                    if(Y < 0) Y = 0;\n                    image.setRGB(x, y, 0x010101 * Y + 0xff000000);\n                }\n            }\n            String file_name = args[0].substring(0, args[0].lastIndexOf(\".\")) + \"_FFT1.png\";\n            ImageIO.write(image, \"png\", new File(file_name));\n        }catch(Exception error){\n            error.printStackTrace();\n        }\n    }\n    // \u6b63\u898f\u5316\n    static void normalization(double[] a, int w, int h){\n        double min = a[0], max = a[0];\n        for(int k = 1; k < w * h; ++k){\n            min = Math.min(min, a[k]);\n            max = Math.max(max, a[k]);\n        }\n        double diff = max - min;\n        for(int k = 0; k < w * h; ++k){\n            a[k] = (a[k] - min) / diff;\n        }\n    }\n    // \u8c61\u9650\u5165\u308c\u66ff\u3048\n    static void swap_quadrants(double[] a, int w, int h){\n        int hw = w / 2, hh = h / 2;\n        double[] b = new double[w * h];\n        for(int y = 0; y < hh; ++y){\n            for(int x = 0; x < hw; ++x){\n                b[(y + hh) * w + x] = a[y * w + (x + hw)];  //\u7b2c1\u8c61\u9650\n                b[(y + hh) * w + (x + hw)] = a[y * w + x];  //\u7b2c2\u8c61\u9650\n                b[y * w + (x + hw)] = a[(y + hh) * w + x];  //\u7b2c3\u8c61\u9650\n                b[y * w + x] = a[(y + hh) * w + (x + hw)];  //\u7b2c4\u8c61\u9650\n            }\n        }\n        for(int k = 0; k < w * h; ++k){\n            a[k] = b[k];\n        }\n    }\n    // \u30d1\u30ef\u30fc\u30b9\u30da\u30af\u30c8\u30eb\u306b\u5909\u63db\n    static void power_spectral(double[] a, int w, int h){\n        for(int y = 0; y < h; ++y){\n            for(int x = 0; x < w; ++x){\n                double re = a[(x + y * w) * 2];\n                double im = a[(x + y * w) * 2 + 1];\n                double norm = re * re + im * im;\n                if(norm != 0.0) norm = Math.log(norm) / 2;\n                a[x + y * w] = norm;\n            }\n        }\n    }\n    // 2\u6b21\u5143FFT\n    static void fft2d(double[] a, int w, int h){\n        double[] b = new double[w * h * 2];\n        // \u6c34\u5e73\u65b9\u5411\u306eFFT\n        for(int y = 0; y < h; ++y){\n            fft1d(a, w * 2, y * w * 2);\n        }\n        // \u8ee2\u7f6e\u64cd\u4f5c\n        transpose(a, b, w, h);\n        // \u5782\u76f4\u65b9\u5411\u306eFFT\n        for(int x = 0; x < w; ++x){\n            fft1d(b, h * 2, x * h * 2);\n        }\n        // \u8ee2\u7f6e\u64cd\u4f5c\n        transpose(b, a, h, w);\n    }\n    // 1\u6b21\u5143FFT\n    static void fft1d(double[] a, int n, int p){\n        double[] temp = new double[n];\n        for(int k = 0; k < n; ++k){\n            temp[k] = a[p + k];\n        }\n        FFT4g fft = new FFT4g(n);\n        fft.cdft(1, temp);\n        for(int k = 0; k < n; ++k){\n            a[p + k] = temp[k] / n * 2;\n        }\n    }\n    // \u884c\u5217\u306e\u8ee2\u7f6e\n    static void transpose(double[] src, double[] dst, int w, int h){\n        for(int y = 0; y < h; ++y){\n            for(int x = 0; x < w; ++x){\n                int p = x + y * w;\n                int q = y + x * h;\n                dst[q * 2    ] = src[p * 2];\n                dst[q * 2 + 1] = src[p * 2 + 1];\n            }\n        }\n    }\n}\n\n\n#\u6982\u8981\n\u3000\u3075\u3068\u3001**\u753b\u50cf\u3092\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3059\u308b\u30bd\u30d5\u30c8\u3092Java\u3067\u4f5c\u6210**\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3000\u305f\u3060\u3001\u3053\u308c\u304c\u306a\u304b\u306a\u304b\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u3001\u8a66\u884c\u932f\u8aa4\u306e\u8a18\u9332\u3092\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n#FFT\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3064\u3044\u3066\n\u3000\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5229\u7528\u3059\u308b\u969b\u306f\u901a\u5e38\u3001**\u65e2\u5b58\u306eFFT\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u983c\u308b**\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u30ab\u30ea\u30ab\u30ea\u306b\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u3066\u6709\u540d\u306a\u306e\u306f\u3001[FFTW](http://www.fftw.org/)\u3084[\u5927\u6d66\u7248FFT](http://www.kurims.kyoto-u.ac.jp/~ooura/fft-j.html)\u3084[OTFFT](http://www.moon.sannet.ne.jp/okahisa/stockham/node4.html)\u306a\u3069\u3067\u3059\u306d\u3002\u4eca\u56de\u306f**Java\u3067\u7d44\u3080**\u3068\u6c7a\u3081\u3066\u3044\u305f\u306e\u3067\u3001\u3053\u306e\u3046\u3061[Java\u79fb\u690d\u7248\u304c\u3042\u3063\u305f](http://hp.vector.co.jp/authors/VA046927/fft4gjava.html)\u5927\u6d66\u7248FFT\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u3000\u3068\u3053\u308d\u3067\u3053\u306e\u79fb\u690d\u7248\u3001**\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u304crdft\u3057\u304b\u7121\u3044**\u3093\u3067\u3059\u306d\u3002rdft\u3068\u306f\u3001\u300c\u5b9f\u96e2\u6563\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u3001**\u5165\u529b\u304c(2^n\u500b\u306e)\u5b9f\u6570\u3060\u3051\u53d7\u3051\u4ed8\u3051\u307e\u3059\u3088**\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3069\u3046\u305b\u5165\u529b\u30c7\u30fc\u30bf\u306f\u753b\u50cf(\u5b9f\u6570\u30c7\u30fc\u30bf)\u306a\u306e\u3067\u305d\u306e\u70b9\u306f\u5225\u306b\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u554f\u984c\u306f\u3053\u306e\u95a2\u6570\u306e\u6319\u52d5\u304c\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3053\u3068\u3067\u3059\u3002\n\u3000\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u9069\u5f53\u306b\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u5177\u4f53\u7684\u306b\u306f\u6b21\u306e\u30b3\u30fc\u30c9\u3092\u8d70\u3089\u305b\u3066\u7d50\u679c\u3092\u898b\u307e\u3059\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u306f(package\u6587\u3092\u524a\u3063\u3066)\u5225\u9014\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```sample1.java\npublic class fft_test{\n\tpublic static void main(String args[]){\n\t\tdouble[] data = {1, 2, 3, 4, 5, 6, 7, 8};\n\t\tint n = data.length;\n\t\tFFT4g fft = new FFT4g(n);\n\t\tfft.rdft(1, data);\n\t\tfor(int k = 0; k < n; k++){\n\t\t\tSystem.out.println(\"\" + k + \",\" + data[k]);\n\t\t}\n\t}\n}\n```\n\u3000\u3053\u306e\u7d50\u679c\u3001\u6b21\u306e\u3088\u3046\u306a\u51fa\u529b\u3092\u5f97\u307e\u3057\u305f\u3002\n\n```result1.txt\n0,54.0\n1,-12.0\n2,3.7781745930520234\n3,-28.67766952966369\n4,-9.0\n5,-15.0\n6,-11.778174593052023\n7,-6.6776695296636905\n```\n\n\u3000\u3053\u308c\u304c\u3069\u3046\u3044\u3063\u305f\u610f\u5473\u3092\u6301\u3064\u304b\u3067\u3059\u304c\u3001\u540c\u3058\u30c7\u30fc\u30bf\u3092[Mathematica\u306b\u639b\u3051\u3066\u307f\u308b](http://www.wolframalpha.com/input/?i=Fourier[{1%2C+1%2C+2%2C+3%2C+5%2C+8%2C+13%2C+21}])\u3068\u3001\u5168\u304f\u9055\u3046\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n```result2.txt\n# Fourier[{1, 1, 2, 3, 5, 8, 13, 21}]\n{19.0919+0. i, 1.33579-10.1391 i, -3.18198-5.3033 i, -4.16421-2.36091 i, -4.24264+0. i, -4.16421+2.36091 i, -3.18198+5.3033 i, 1.33579+10.1391 i}\n```\n\n\u3000\u305f\u3060\u3053\u308c\u306f\u3001[\u5927\u6d66\u7248FFT\u3068Mathematica\u306e\u7d50\u679c\u3067\u306f\u221aN\u3060\u3051\u30b9\u30b1\u30fc\u30eb\u304c\u9055\u3046](http://akita-nct.jp/yamamoto/comp/mathematica/material/fft/fourier_html/node2.html)\u3053\u3068\u3068\u3001[\u305d\u3082\u305d\u3082\u30c7\u30fc\u30bf\u306e\u4e26\u3076\u9806\u756a\u304c\u9055\u3046](http://www.math.ryukoku.ac.jp/~tsutomu/csc/csc10/csc107.pdf)\u3053\u3068\u304b\u3089**\u4ed5\u65b9\u306a\u3044**\u3068\u8a00\u3048\u307e\u3059\u306d\u3002\u5f8c\u8005\u306e\u8cc7\u6599\u306b\u3088\u308b\u3068\u3001\u5927\u6d66\u7248FFT\u3067\u306f\u3001rdft\u3057\u305f\u5f8c\u306e\u30c7\u30fc\u30bf\u304c\u6b21\u306e\u3088\u3046\u306b\u4e26\u3093\u3067\u3044\u308b\u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n* \u51fa\u529b\u30c7\u30fc\u30bf\u304cd[i]\u3067\u3001M=N/2\u3068\u3059\u308b\n* a[0]\uff5ea[M-1]\u306fd[0],d[2],...,d[N-1]\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\n* b[1]\uff5eb[M-1]\u306fd[1],d[3],...,d[N]\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\n* a[M]\u306fd[1]\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\n\n\u3000\u4e00\u65b9\u3001Mathematica\u306f\u7d20\u76f4\u306ba[0],a[1]+b[1]i,a[2]+b[2]i,...,a[N-1]+b[N-1]i\u3068\u3044\u3063\u305f\u5f62\u5f0f\u3067\u66f8\u304b\u308c\u3066\u3044\u307e\u3059(a[0]\u3068a[M]\u3067\u306f\u865a\u6570\u6210\u5206\u304c\u7121\u3044\u3053\u3068\u306b\u6ce8\u610f)\u3002**\u3069\u3046\u305b[\u6a19\u672c\u5316\u5b9a\u7406](\u6a19\u672c\u5316\u5b9a\u7406)\u306e\u305b\u3044\u3067N\u500b\u70b9\u304c\u3042\u3063\u3066\u3082\u534a\u5206\u3057\u304b\u7d50\u679c\u3068\u3057\u3066\u4f7f\u3048\u306a\u3044**\u306e\u3067\u5408\u7406\u7684\u3068\u3082\u8a00\u3048\u307e\u3059\u3002\n\n|index|input|output|kind|\n|-----|-----|------|----|\n|0|1|54.0|a_0|\n|1|2|-12.0|a_4|\n|2|3|3.78|a_1|\n|3|4|-28.7|b_1|\n|4|5|-9.0|a_2|\n|5|6|-15.0|b_2|\n|6|7|-11.8|a_3|\n|7|8|-6.68|b_3|\n\n\u3000\u305f\u3060\u3001\u3053\u308c\u3060\u3068\u5f8c\u8ff0\u3059\u308b\u51e6\u7406\u3092\u884c\u3046\u969b\u306b\u591a\u5c11\u90fd\u5408\u304c\u60aa\u3044\u306e\u3067\u3001\u300c\u5165\u529b\u304cN\u500b\u306e\u5b9f\u6570\u3067\u3042\u308b\u969b\u306b\u51fa\u529b\u3092N\u500b\u306e\u8907\u7d20\u6570\u306b\u3059\u308b\u300d\u3053\u3068\u306b\u3057\u307e\u3059\u3002\u307e\u3042\u8981\u3059\u308b\u306b\u865a\u6570\u90e8\u30920\u3068\u3057\u3066\u6c34\u5897\u3057\u3059\u308c\u3070\u3044\u3044\u3093\u3067\u3059\u306d\u3002\n\n```result3.txt\n# \u30b3\u30fc\u30c9\u5909\u66f4\ndouble[] data = {1, 0, 1, 0, 2, 0, 3, 0, 5, 0, 8, 0, 13, 0, 21, 0};\n# \u7d50\u679c\n0,54.0\n1,54.0    // \u3053\u3053\u3060\u3051\u7121\u8996\u3059\u308c\u3070(0\u306b\u3059\u308c\u3070)Mathematica\u306e\u7d50\u679c\u3068\u4e00\u81f4\n2,3.7781745930520234\n3,-28.67766952966369\n4,-9.0\n5,-15.0\n6,-11.778174593052023\n7,-6.677669529663689\n8,-12.0\n9,0.0\n10,-11.778174593052023\n11,6.677669529663689\n12,-9.0\n13,15.0\n14,3.7781745930520234\n15,28.67766952966369\n# \u53c2\u8003(Fourier[{1, 1, 2, 3, 5, 8, 13, 21}]*sqrt(8))\n{54.+0. i, 3.77817-28.6777 i, -9.-15. i, -11.7782-6.67767 i, -12.+0. i, -11.7782+6.67767 i, -9.+15. i, 3.77817+28.6777 i}\n```\n\n# 2\u6b21\u5143FFT\u306b\u3064\u3044\u3066\n\u3000\u7aef\u7684\u306b\u8a00\u3048\u3070\u3001**[1\u6b21\u5143FFT\u3092\u884c\u65b9\u5411\u304a\u3088\u3073\u5217\u65b9\u5411\u306b\u639b\u3051\u308c\u30702\u6b21\u5143FFT\u306b\u306a\u308a\u307e\u3059](http://hooktail.org/computer/index.php?2%BC%A1%B8%B5%A5%D5%A1%BC%A5%EA%A5%A8%CA%D1%B4%B9)**\u3002\u30ab\u30ea\u30ab\u30ea\u306b\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3057\u305f2\u6b21\u5143FFT\u3060\u3068\u66f4\u306b\u8a08\u7b97\u91cf\u3092\u6e1b\u3089\u305b\u308b([\u4f8b1](http://www.kurims.kyoto-u.ac.jp/~ooura/fftman/ftmn3_2.html#sec3_2)\u30fb[\u4f8b2](http://www.kurims.kyoto-u.ac.jp/~ooura/fftman/ftmn3_3.html#sec3_3))\u305d\u3046\u3067\u3059\u304c\u3001\u305d\u3053\u307e\u3067\u5909\u614b\u7684\u306a\u30b3\u30fc\u30c9\u3092\u7d44\u3080\u6c17\u306f\u3042\u308a\u307e\u305b\u3093\u306e\u3067\u7d20\u76f4\u306b1\u6b21\u5143FFT\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002[1\u6b21\u5143FFT\u3092\u884c\u304a\u3088\u3073\u5217\u306b\u639b\u3051\u305f\u969b\u306f\u3001\u305d\u306e\u90fd\u5ea6\u6b63\u898f\u5316\u3059\u308b](http://mf-atelier.sakura.ne.jp/mf-atelier/modules/tips/program/algorithm/a35.html)\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3000\u3082\u3063\u3068\u3082\u3001\u914d\u5217\u304c\u884c\u30aa\u30fc\u30c0\u30fc\u3067\u3082\u5217\u30aa\u30fc\u30c0\u30fc\u3067\u3082**\u9006\u306e\u30aa\u30fc\u30c0\u30fc\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5834\u5408\u306b\u304a\u3044\u3066\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u304c\u5927\u5909**\u306a\u306e\u3067\u3001[\u9014\u4e2d\u3067\u8ee2\u7f6e\u3092\u631f\u3080\u65b9\u304c\u826f\u3044](http://pokosho.com/t/image/11/)\u3067\u3057\u3087\u3046\u3002\n\u3000\u307e\u305f\u3001\u753b\u50cf\u5316\u3059\u308b\u306b\u306f\u7d50\u679c(\u8907\u7d20\u6570)\u304b\u3089\u30d1\u30ef\u30fc\u30b9\u30da\u30af\u30c8\u30eb(\u7d76\u5bfe\u5024)\u3092\u53d6\u308a\u51fa\u3057\u3066\u5bfe\u6570\u30b9\u30b1\u30fc\u30eb\u306b\u3059\u308b\u306e\u304c\u5e38\u9053\u306a\u306e\u3067\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n```sample2.java\n// \u914d\u5217\u306f\u884c\u30aa\u30fc\u30c0\u30fc\u3060\u304c\u3001\u5927\u6d66\u7248FFT\u306e\u4ed5\u69d8\u3067\u5b9f\u90e8\u3068\u865a\u90e8\u3092\u6a2a\u306b\u4e26\u3079\u3056\u308b\u3092\u5f97\u306a\u3044\ndouble re = a[(x + y * w) * 2];\ndouble im = a[(x + y * w) * 2 + 1];\ndouble norm = re * re + im * im;\nif(norm != 0.0) norm = Math.log(norm) / 2;\n```\n\n#\u3053\u3053\u306bcfft\u304c\u3042\u308b\u3058\u3083\u308d\uff1f\n\u3000\u2026\u2026\u3055\u3066\u3002\u3053\u306e\u8003\u3048\u3067\u3054\u304f\u666e\u901a\u306brfft\u3092\u4e8c\u65b9\u5411\u306b\u4f7f\u3063\u30662\u6b21\u5143FFT\u3059\u308b\u3068\u3001**\u7d75\u304c\u304a\u304b\u3057\u304f\u306a\u308a\u307e\u3059\u3002**\n\u3000\u3053\u308c\u306f\u3001\u300c\u4e00\u5ea6rfft\u3059\u308b\u3068\u7d50\u679c\u304c\u8907\u7d20\u6570\u3067\u51fa\u3066\u304f\u308b\u306e\u306b\u3001\u305d\u306e\u8907\u7d20\u6570\u6df7\u3058\u308a\u306e\u914d\u5217\u76f8\u624b\u306brfft\u3057\u305f\u304b\u3089\u300d\u306a\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u8a00\u3044\u51fa\u3059\u3068**\u3058\u3083\u3042\u4f55\u6545rfft\u3057\u305f\u306e\u304b**\u3063\u3066\u8a71\u306b\u306a\u308a\u307e\u3059\u3088\u306d\u2026\u2026\u3002\n\u3000\u307f\u3093\u306a\u5927\u597d\u304dlena\u3055\u3093\u3092\u4f8b\u306b\u3059\u308b\u3068\u3001\u5143\u753b\u50cf\n![lena.png](https://qiita-image-store.s3.amazonaws.com/0/29802/eb026b99-da26-2de5-c76c-65147c4dd32a.png)\n\u306b\u5bfe\u3057\u3066\u3001\u672c\u6765\u306a\u3089\u3053\u3093\u306a\u611f\u3058\u306e\u753b\u50cf\n![lena_FFT2.png](https://qiita-image-store.s3.amazonaws.com/0/29802/549ee58e-d6a0-d655-6ae5-556fef2ae3af.png)\n\u3092\u51fa\u3057\u305f\u3044\u306e\u306b\u3001\u3053\u3093\u306a\u611f\u3058\u306e\u753b\u50cf\n![lena_FFT0.png](https://qiita-image-store.s3.amazonaws.com/0/29802/13db5d60-0ebd-279d-db2c-fc3688c62166.png)\n\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3093\u3067\u3059\u306d\u3002\u660e\u308b\u3055(\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0)\u3092\u7121\u8996\u3057\u3066\u3082\u3001**\u5bfe\u89d2\u7dda\u65b9\u5411\u306e\u5177\u5408\u304c\u5fae\u5999\u306b\u9055\u3046**\u3063\u3066\u306e\u304c\u81f4\u547d\u7684\u3067\u3059\u3002\u3058\u3083\u3042\u3069\u3046\u3057\u305f\u304b\u3063\u3066\uff1f\n\u3000\u305d\u308a\u3083\u3082\u3046\u2026\u2026**cfft\u3092\u79fb\u690d\u3059\u308b\u3057\u304b\u7121\u3044\u3088\u306d\uff1f**\n\u3000\u5177\u4f53\u7684\u306b\u306f\u3001[\u5143\u3005\u306e\u79fb\u690d\u7248](http://hp.vector.co.jp/authors/VA046927/fft4gjava.html)\u306b\u6b21\u306e\u95a2\u6570\u3092\u4ed8\u3051\u8db3\u3059\u3060\u3051\u3067\u3059\u3002\n\n```FFT4g+.java\n\tpublic void cdft(int isgn, double[] a)\n\t{\n\t    if (n > (ip[0] << 2)) {\n\t        makewt(n >> 2);\n\t    }\n\t    if (n > 4) {\n\t\t\tif (isgn >= 0) {\n\t            bitrv2(n, a);\n\t            cftfsub(a);\n\t    \t} else {\n\t            bitrv2conj(n, a);\n\t            cftbsub(a);\n\t        }\n\t    }else if (n == 4) {\n\t        cftfsub(a);\n\t    }\n\t}\n\tprivate void bitrv2conj(int n, double[] a)\n\t{\n\t    int j, j1, k, k1, l, m, m2;\n\t    double xr, xi, yr, yi;\n\t    \n\t    ip[2 + 0] = 0;\n\t    l = n;\n\t    m = 1;\n\t    while ((m << 3) < l) {\n\t        l >>= 1;\n\t        for (j = 0; j < m; j++) {\n\t            ip[2 + m + j] = ip[2 + j] + l;\n\t        }\n\t        m <<= 1;\n\t    }\n\t    m2 = 2 * m;\n\t    if ((m << 3) == l) {\n\t        for (k = 0; k < m; k++) {\n\t            for (j = 0; j < k; j++) {\n\t                j1 = 2 * j + ip[2 + k];\n\t                k1 = 2 * k + ip[2 + j];\n\t                xr = a[j1];\n\t                xi = -a[j1 + 1];\n\t                yr = a[k1];\n\t                yi = -a[k1 + 1];\n\t                a[j1] = yr;\n\t                a[j1 + 1] = yi;\n\t                a[k1] = xr;\n\t                a[k1 + 1] = xi;\n\t                j1 += m2;\n\t                k1 += 2 * m2;\n\t                xr = a[j1];\n\t                xi = -a[j1 + 1];\n\t                yr = a[k1];\n\t                yi = -a[k1 + 1];\n\t                a[j1] = yr;\n\t                a[j1 + 1] = yi;\n\t                a[k1] = xr;\n\t                a[k1 + 1] = xi;\n\t                j1 += m2;\n\t                k1 -= m2;\n\t                xr = a[j1];\n\t                xi = -a[j1 + 1];\n\t                yr = a[k1];\n\t                yi = -a[k1 + 1];\n\t                a[j1] = yr;\n\t                a[j1 + 1] = yi;\n\t                a[k1] = xr;\n\t                a[k1 + 1] = xi;\n\t                j1 += m2;\n\t                k1 += 2 * m2;\n\t                xr = a[j1];\n\t                xi = -a[j1 + 1];\n\t                yr = a[k1];\n\t                yi = -a[k1 + 1];\n\t                a[j1] = yr;\n\t                a[j1 + 1] = yi;\n\t                a[k1] = xr;\n\t                a[k1 + 1] = xi;\n\t            }\n\t            k1 = 2 * k + ip[k];\n\t            a[k1 + 1] = -a[k1 + 1];\n\t            j1 = k1 + m2;\n\t            k1 = j1 + m2;\n\t            xr = a[j1];\n\t            xi = -a[j1 + 1];\n\t            yr = a[k1];\n\t            yi = -a[k1 + 1];\n\t            a[j1] = yr;\n\t            a[j1 + 1] = yi;\n\t            a[k1] = xr;\n\t            a[k1 + 1] = xi;\n\t            k1 += m2;\n\t            a[k1 + 1] = -a[k1 + 1];\n\t        }\n    } else {\n        a[1] = -a[1];\n        a[m2 + 1] = -a[m2 + 1];\n        for (k = 1; k < m; k++) {\n            for (j = 0; j < k; j++) {\n                j1 = 2 * j + ip[k];\n                k1 = 2 * k + ip[j];\n                xr = a[j1];\n                xi = -a[j1 + 1];\n                yr = a[k1];\n                yi = -a[k1 + 1];\n                a[j1] = yr;\n                a[j1 + 1] = yi;\n                a[k1] = xr;\n                a[k1 + 1] = xi;\n                j1 += m2;\n                k1 += m2;\n                xr = a[j1];\n                xi = -a[j1 + 1];\n                yr = a[k1];\n                yi = -a[k1 + 1];\n                a[j1] = yr;\n                a[j1 + 1] = yi;\n                a[k1] = xr;\n                a[k1 + 1] = xi;\n            }\n            k1 = 2 * k + ip[k];\n            a[k1 + 1] = -a[k1 + 1];\n            a[k1 + m2 + 1] = -a[k1 + m2 + 1];\n        }\n    }\n}\n```\n\u3000\u3067\u3001\u4e8c\u6b21\u5143FFT\u306b\u3053\u306ecfft\u3092\u4f7f\u3048\u3070\u3053\u306e\u901a\u308a\u3002\u30de\u30c8\u30e2\u306a\u753b\u50cf\u304c\u51fa\u529b\u3067\u304d\u307e\u3057\u305f\u3002\n![lena_FFT1.png](https://qiita-image-store.s3.amazonaws.com/0/29802/ed66ce5a-aca7-e618-2464-2ca03bddc9a3.png)\n\n\n#\u5b8c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\n```2d_fft.java\n/* \u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3067\u898b\u308b\u753b\u50cf\u89e3\u50cf\u5ea6\n * \u53c2\u8003\uff1a\n * \u300cFFT (\u9ad8\u901f\u30d5\u30fc\u30ea\u30a8\u30fb\u30b3\u30b5\u30a4\u30f3\u30fb\u30b5\u30a4\u30f3\u5909\u63db) \u306e\u6982\u7565\u3068\u8a2d\u8a08\u6cd5\u300d\n * http://www.kurims.kyoto-u.ac.jp/~ooura/fftman/index.html\n * \u300c\u5927\u6d66\u7248FFT\u306eJava\u79fb\u690d\u300d\n * http://hp.vector.co.jp/authors/VA046927/fft4gjava.html\n * \u300c\u7b2c11\u7ae0 \u5468\u6ce2\u6570\u3067\u51e6\u7406\u3059\u308b\u300d\n * http://pokosho.com/t/image/11/\n * \u300c\u5099\u5fd8\u9332: \u753b\u50cf\u51e6\u7406\u3067\u306e\u4e8c\u6b21\u5143\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u300d\n * http://bebolog.blogspot.jp/2014/12/blog-post_15.html\n */\n\nimport java.awt.image.BufferedImage;\nimport java.io.File;\nimport javax.imageio.ImageIO;\n\npublic class show_resolution{\n\tpublic static void main(String args[]){\n\t\tif(args.length < 1) return;\n\t\ttry{\n\t\t\tBufferedImage image = ImageIO.read(new File(args[0]));\n\t\t\tint w = image.getWidth(), h = image.getHeight();\n\t\t\tdouble[] image_data = new double[w * h * 2];\n\t\t\t// \u30c7\u30fc\u30bf\u3092\u914d\u5217\u306b\u4ee3\u5165\u3059\u308b\n\t\t\tfor(int y = 0; y < h; ++y){\n\t\t\t\tfor(int x = 0; x < w; ++x){\n\t\t\t\t\tint color = image.getRGB(x, y);\n\t\t\t\t\tint r = (color & 0xff0000) >> 16;\n\t\t\t\t\tint g = (color & 0xff00) >> 8;\n\t\t\t\t\tint b = color & 0xff;\n\t\t\t\t\timage_data[(x + y * w) * 2] = 0.299 * r + 0.587 * g + 0.114 * b;\n\t\t\t\t\timage_data[(x + y * w) * 2 + 1] = 0.0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// \u4e8c\u6b21\u5143FFT\n\t\t\tfft2d(image_data, w, h);\n\t\t\t// \u30d1\u30ef\u30fc\u30b9\u30da\u30af\u30c8\u30eb\u306b\u5909\u63db\n\t\t\tpower_spectral(image_data, w, h);\n\t\t\t// \u8c61\u9650\u5165\u308c\u66ff\u3048\n\t\t\tswap_quadrants(image_data, w, h);\n\t\t\t// \u6b63\u898f\u5316\n\t\t\tnormalization(image_data, w, h);\n\t\t\t// \u51fa\u529b\n\t\t\tfor(int y = 0; y < h; ++y){\n\t\t\t\tfor(int x = 0; x < w; ++x){\n\t\t\t\t\tint Y = (int)(image_data[(x + y * w)] * 255);\n\t\t\t\t\tif(Y > 255) Y = 255;\n\t\t\t\t\tif(Y < 0) Y = 0;\n\t\t\t\t\timage.setRGB(x, y, 0x010101 * Y + 0xff000000);\n\t\t\t\t}\n\t\t\t}\n\t\t\tString file_name = args[0].substring(0, args[0].lastIndexOf(\".\")) + \"_FFT1.png\";\n\t\t\tImageIO.write(image, \"png\", new File(file_name));\n\t\t}catch(Exception error){\n\t\t\terror.printStackTrace();\n\t\t}\n\t}\n\t// \u6b63\u898f\u5316\n\tstatic void normalization(double[] a, int w, int h){\n\t\tdouble min = a[0], max = a[0];\n\t\tfor(int k = 1; k < w * h; ++k){\n\t\t\tmin = Math.min(min, a[k]);\n\t\t\tmax = Math.max(max, a[k]);\n\t\t}\n\t\tdouble diff = max - min;\n\t\tfor(int k = 0; k < w * h; ++k){\n\t\t\ta[k] = (a[k] - min) / diff;\n\t\t}\n\t}\n\t// \u8c61\u9650\u5165\u308c\u66ff\u3048\n\tstatic void swap_quadrants(double[] a, int w, int h){\n\t\tint hw = w / 2, hh = h / 2;\n\t\tdouble[] b = new double[w * h];\n\t\tfor(int y = 0; y < hh; ++y){\n\t\t\tfor(int x = 0; x < hw; ++x){\n\t\t\t\tb[(y + hh) * w + x] = a[y * w + (x + hw)];\t//\u7b2c1\u8c61\u9650\n\t\t\t\tb[(y + hh) * w + (x + hw)] = a[y * w + x];\t//\u7b2c2\u8c61\u9650\n\t\t\t\tb[y * w + (x + hw)] = a[(y + hh) * w + x];\t//\u7b2c3\u8c61\u9650\n\t\t\t\tb[y * w + x] = a[(y + hh) * w + (x + hw)];\t//\u7b2c4\u8c61\u9650\n\t\t\t}\n\t\t}\n\t\tfor(int k = 0; k < w * h; ++k){\n\t\t\ta[k] = b[k];\n\t\t}\n\t}\n\t// \u30d1\u30ef\u30fc\u30b9\u30da\u30af\u30c8\u30eb\u306b\u5909\u63db\n\tstatic void power_spectral(double[] a, int w, int h){\n\t\tfor(int y = 0; y < h; ++y){\n\t\t\tfor(int x = 0; x < w; ++x){\n\t\t\t\tdouble re = a[(x + y * w) * 2];\n\t\t\t\tdouble im = a[(x + y * w) * 2 + 1];\n\t\t\t\tdouble norm = re * re + im * im;\n\t\t\t\tif(norm != 0.0) norm = Math.log(norm) / 2;\n\t\t\t\ta[x + y * w] = norm;\n\t\t\t}\n\t\t}\n\t}\n\t// 2\u6b21\u5143FFT\n\tstatic void fft2d(double[] a, int w, int h){\n\t\tdouble[] b = new double[w * h * 2];\n\t\t// \u6c34\u5e73\u65b9\u5411\u306eFFT\n\t\tfor(int y = 0; y < h; ++y){\n\t\t\tfft1d(a, w * 2, y * w * 2);\n\t\t}\n\t\t// \u8ee2\u7f6e\u64cd\u4f5c\n\t\ttranspose(a, b, w, h);\n\t\t// \u5782\u76f4\u65b9\u5411\u306eFFT\n\t\tfor(int x = 0; x < w; ++x){\n\t\t\tfft1d(b, h * 2, x * h * 2);\n\t\t}\n\t\t// \u8ee2\u7f6e\u64cd\u4f5c\n\t\ttranspose(b, a, h, w);\n\t}\n\t// 1\u6b21\u5143FFT\n\tstatic void fft1d(double[] a, int n, int p){\n\t\tdouble[] temp = new double[n];\n\t\tfor(int k = 0; k < n; ++k){\n\t\t\ttemp[k] = a[p + k];\n\t\t}\n\t\tFFT4g fft = new FFT4g(n);\n\t\tfft.cdft(1, temp);\n\t\tfor(int k = 0; k < n; ++k){\n\t\t\ta[p + k] = temp[k] / n * 2;\n\t\t}\n\t}\n\t// \u884c\u5217\u306e\u8ee2\u7f6e\n\tstatic void transpose(double[] src, double[] dst, int w, int h){\n\t\tfor(int y = 0; y < h; ++y){\n\t\t\tfor(int x = 0; x < w; ++x){\n\t\t\t\tint p = x + y * w;\n\t\t\t\tint q = y + x * h;\n\t\t\t\tdst[q * 2    ] = src[p * 2];\n\t\t\t\tdst[q * 2 + 1] = src[p * 2 + 1];\n\t\t\t}\n\t\t}\n\t}\n}\n```\n"}