{"context": " More than 1 year has passed since last update.\n\n\u3044\u304b\u306b\u3057\u3066\u304a\u91e3\u3092\u6700\u5c0f\u306b\u6291\u3048\u308b\u304b\n\u8ca1\u5e03\u306e\u4e2d\u304c\u3053\u3093\u306a\u72b6\u6cc1\u3060\u3063\u305f\u3068\u3059\u308b\u3002\n1,000\u3000\u5186\u672d:1\u679a\n100\u3000\u3000\u5186\u7389:3\u679a\n10\u3000\u3000 \u5186\u7389:1\u679a\n1\u3000\u3000\u3000\u5186\u7389:1\u679a\n\n\u3053\u306e\u8ca1\u5e03\u3092\u6301\u3063\u3066\u30b3\u30f3\u30d3\u30cb\u3067\n\u4fa1\u683c:756\u5186\n\n\u306e\u5546\u54c1\u3092\u8cb7\u3046\u3068\u304d\u3001\u3069\u306e\u3088\u3046\u306a\u652f\u6255\u3044\u65b9\u3092\u3059\u308c\u3070\n\u3082\u3063\u3068\u3082\u304a\u91e3\u306e\u679a\u6570\u304c\u5c11\u306a\u304f\u3066\u6e08\u3080\u3060\u308d\u3046\u304b\u3002\n\u9762\u5012\u304f\u3055\u3044\u6642\u306f\u305f\u3076\u3093\u3053\u3093\u306a\u6255\u3044\u65b9\u3092\u3059\u308b\u3002\n1000\u5186\u672d1\u679a\u3092\u652f\u6255\u3046\n\u2193\n1000-756=244\u5186\u306e\u304a\u91e3\n\u2193\n2*100\n4*10\n4*1\n\u2193\n\u5408\u8a0810\u679a\u306e\u304a\u91e3\u3092\u8cb0\u3046\u3002\n\n\u3053\u308c\u3067\u306f\u304a\u8ca1\u5e03\u304c\u30d1\u30f3\u30d1\u30f3\u3060\u3002\n\u3082\u3046\u5c11\u3057\u697d\u306b\u3057\u3066\u3084\u308d\u3046\u3002\n1000\u5186\u672d1\u679a\u3092\u652f\u6255\u3046\n10\u5186\u73891\u679a\u3092\u652f\u6255\u3046\n\u2193\n1010-756= 254\u5186\u306e\u304a\u91e3\n\u2193\n1*200\n1*50\n4*1\n\u2193\n\u5408\u8a086\u679a\u306e\u304a\u91e3\u3092\u8cb0\u3046\u3002\n\n\u3061\u3087\u3063\u3068\u3060\u3051\u6e1b\u3063\u305f\u305e\u3002\n\u3082\u3063\u3068\u3044\u3051\u306a\u3044\u304b\uff1f\n1000\u5186\u672d1\u679a\u3092\u652f\u6255\u3046\n100\u5186\u73893\u679a\u3092\u652f\u6255\u3046\n10\u5186\u73891\u679a\u3092\u652f\u6255\u3046\n1\u5186\u73891\u679a\u3092\u652f\u6255\u3046\n\u2193\n1311\u5186-756=555\u5186\u306e\u304a\u91e3\n\u2193\n1*500\n1*50\n1*5\n\u2193\n\u5408\u8a083\u679a\u306e\u304a\u91e3\u3092\u8cb0\u3046\u3002\n\nCool!\n1311\u5186\u3068\u3044\u3046\u4e0d\u53ef\u89e3\u306a\u652f\u6255\u3044\u65b9\u3092\u3055\u308c\u3066\u5e97\u54e1\u306f\u56f0\u60d1\u3059\u308b\u3053\u3068\u3060\u308d\u3046\u3002\n\u300c\u3067\u3082\u7a81\u304d\u8fd4\u3059\u8a33\u306b\u306f\u3044\u304b\u306a\u3044\u3057\u2026\u300d\u3068\u534a\u4fe1\u534a\u7591\u3067\u30ec\u30b8\u306b\u6253\u3061\u8fbc\u3093\u3067\u3001\n\u8868\u793a\u3055\u308c\u308b555\u5186\u306e\u6587\u5b57\u3002\n\u3053\u308c\u306f\u30c9\u30e4\u9854\u3067\u304d\u308b\u3002\u52dd\u3061\u8a87\u3063\u305f\u9854\u3067\u304a\u91e3\u308a\u3092\u53d7\u3051\u53d6\u308c\u308b\u3002\n\u304a\u305d\u3089\u304f\u6b21\u304b\u3089\u30de\u30c3\u30cfGO\u3068\u3044\u3046\u30a2\u30c0\u540d\u3067\u547c\u3070\u308c\u308b\u306b\u9055\u3044\u306a\u3044\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u843d\u3068\u3057\u3053\u3093\u3067\u307f\u3088\u3046\n\u4eca\u56de\u306f\u3046\u307e\u304f\u3044\u3063\u305f\u3082\u306e\u306e\u3001\u3061\u3087\u3063\u3068\u3067\u3082\u8a08\u7b97\u3092\u9593\u9055\u3048\u308c\u3070\u305f\u3060\u306e\u5909\u306a\u4eba\u3060\u3002\n\u982d\u3092\u4f7f\u308f\u305a\u5e97\u54e1\u306b\u30c9\u30e4\u9854\u3059\u308b\u305f\u3081\u306b\u3001\u3053\u308c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u843d\u3068\u3057\u3053\u3080\u3053\u3068\u3092\n\u691c\u8a0e\u3057\u3066\u307f\u305f\u3044\u3002\u3069\u3046\u3084\u3063\u305f\u3089\u5b9f\u73fe\u3067\u304d\u308b\u3060\u308d\u3046\u304b\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u624b\u9806\u3067\u7dcf\u5f53\u308a\u3092\u3057\u3066\u307f\u308b\u306e\u306f\u3069\u3046\u3060\u308d\u3046\u3002\n\n\u8ca1\u5e03\u306e\u4e2d\u306e\u304a\u91d1\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u5168\u90e8\u5217\u6319\u3059\u308b\u3002\n\u305d\u306e\u4e2d\u3067\u652f\u6255\u984d\u304c\u8acb\u6c42\u984d\u3092\u8d85\u3048\u3066\u3044\u308b\u3082\u306e\u3060\u3051\u3092\u53d6\u308a\u51fa\u3059\u3002\n\u6b8b\u3063\u305f\u5168\u90e8\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u5bfe\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u304a\u91e3\u306e\u6570\u3092\u8a08\u7b97\u3059\u308b\u3002\n\u3082\u3063\u3068\u3082\u304a\u91e3\u304c\u5c11\u306a\u304b\u3063\u305f\u3082\u306e\u3092\u9078\u3076\u3002\n\n\u7dcf\u5f53\u308a\u30fb\u30fb\u30fb\u7f8e\u3057\u304f\u306a\u3044\u3002\u3067\u3082\u3068\u308a\u3042\u3048\u305a\u5b9f\u73fe\u3059\u308b\u3053\u3068\u3092\u512a\u5148\u3060\u3002\n\u305d\u308c\u304c\u3053\u3061\u3089\u3002\n\nsmart_pay.py\n# -*- coding: utf-8 -*-\nimport itertools\nmoney_type = (10000, 5000, 2000, 1000, 500, 100, 50, 10, 5, 1)\n\ndef smart_pay(saifu,kakaku):\n    bestPttern=None\n    patterns=[]\n    for mtype in money_type:\n        pattern=[]\n        for c in range(saifu[mtype]+1):\n            pattern.append([mtype,c])\n        if len(pattern)>1:\n            patterns.append(pattern)\n    for p in itertools.product(*patterns):\n        ptn={x[0]:x[1] for x in p}\n        if coins2price(ptn)>=kakaku:\n            if  bestPttern is None:\n                bestPttern=ptn\n            else:\n                if count_coins(price2coins(coins2price(bestPttern)-kakaku)) > count_coins(price2coins(coins2price(ptn)-kakaku)):\n                    bestPttern=ptn\n    return bestPttern\n\ndef price2coins(price):\n    coins = {}\n    for mt in money_type:\n        coins[mt], price = divmod(price, mt)\n    return coins\n\ndef coins2price(coins):\n    return sum(key * val for key,val in coins.items())\n\ndef count_coins(coins):\n    return sum(val for key,val in coins.items())\n\nif __name__ == \"__main__\":\n    saifu={}\n    print(\"\u307e\u305a\u304a\u8ca1\u5e03\u306e\u4e2d\u8eab\u3092\u304a\u805e\u304d\u3057\u307e\u3059...\")\n    for mtype in money_type:\n        saifu[mtype]= int(raw_input(str(mtype)+ \"\u5186\u306f\u4f55\u679a\uff1f\\n>\"))\n    kakaku=int(raw_input(\"\u3044\u304f\u3089\u306e\u5546\u54c1\u3092\u8cb7\u3044\u307e\u3059\u304b\uff1f\\n>\"))\n    print(\"\u6700\u9069\u306a\u652f\u6255\u3044\u65b9\u6cd5\u306f.\\n.\\n.\\n\")\n    bestPttern=smart_pay(saifu,kakaku)\n    if bestPttern is None:\n        print(\"\u304a\u304b\u306d\u305f\u308a\u306a\u3044\u3067\u3059\u3002\u3002\u3002\")\n    else:\n        for key,val in bestPttern.items():\n            print(str(key)+\"\u5186\u3092\"+str(val)+\"\u679a\")\n        print(\"\u3067\u3059\uff01\")\n\n\n\u30e1\u30bd\u30c3\u30c9\u306e\u6a5f\u80fd\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\nprice2coins:\u91d1\u984d\u3092\u5165\u308c\u308b\u3068\u8ca8\u5e63\u306e(\u7406\u60f3\u7684\u306a)\u679a\u6570\u3092\u6559\u3048\u3066\u304f\u308c\u308b\u3002\ncoins2price:\u8ca8\u5e63\u3092\u5165\u308c\u308b\u3068\u91d1\u984d\u3092\u6559\u3048\u3066\u304f\u308c\u308b\u3002\ncount_coins:\u8ca8\u5e63\u306e\u6570\u3092\u6570\u3048\u3066\u304f\u308c\u308b\u3002\nsmart_pay:\u8ca1\u5e03\u306e\u4e2d\u8eab\u3068\u8cfc\u5165\u984d\u3092\u5165\u308c\u308b\u3068\u6700\u826f\u306a\u652f\u6255\u3044\u65b9\u6cd5\u3092\u6559\u3048\u3066\u304f\u308c\u308b\u3002\n\n\u65e9\u901f\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\n\u307e\u305a\u304a\u8ca1\u5e03\u306e\u4e2d\u8eab\u3092\u304a\u805e\u304d\u3057\u307e\u3059...\n10000\u5186\u306f\u4f55\u679a\uff1f\n>0\n5000\u5186\u306f\u4f55\u679a\uff1f\n>0\n2000\u5186\u306f\u4f55\u679a\uff1f\n>0\n1000\u5186\u306f\u4f55\u679a\uff1f\n>1\n500\u5186\u306f\u4f55\u679a\uff1f\n>0\n100\u5186\u306f\u4f55\u679a\uff1f\n>3\n50\u5186\u306f\u4f55\u679a\uff1f\n>0\n10\u5186\u306f\u4f55\u679a\uff1f\n>1\n5\u5186\u306f\u4f55\u679a\uff1f\n>0\n1\u5186\u306f\u4f55\u679a\uff1f\n>1\n\u3044\u304f\u3089\u306e\u5546\u54c1\u3092\u8cb7\u3044\u307e\u3059\u304b\uff1f\n>756\n\u6700\u9069\u306a\u652f\u6255\u3044\u65b9\u6cd5\u306f.\n.\n.\n\n1000\u5186\u30921\u679a\n1\u5186\u30921\u679a\n10\u5186\u30921\u679a\n100\u5186\u30923\u679a\n\u3067\u3059\uff01\n\n\n\u7d20\u6674\u3089\u3057\u3044\u3002\n\u3053\u308c\u3067\u601d\u3046\u5b58\u5206\u30b3\u30f3\u30d3\u30cb\u3067\u30c9\u30e4\u9854\u3067\u304d\u308b\u3002\n\n\u3061\u3087\u3063\u3068\u3057\u305f\u89e3\u8aac\n\ncoins[mt], price = divmod(price, mt)\nprice\u3092mt(\u8ca8\u5e63\u306e\u984d\u9762)\u3067\u5272\u3063\u305f\u91d1\u984d\u3068\u3042\u307e\u308a\u3092\u540c\u6642\u306b\u53d6\u5f97\u3057\u3066\u308b\u3002\nPython\u3059\u3054\u3044\u3002\n\nreturn sum(key * val for key,val in coins.items())\ncoins\u3068\u3044\u3046Dictionary(key:\u8ca8\u5e63\u306e\u984d\u9762,value:\u8ca8\u5e63\u306e\u679a\u6570)\u304b\u3089\nfor\u30eb\u30fc\u30d7\u3067KeyValue\u3092\u53d6\u308a\u51fa\u3057\u639b\u3051\u7b97\u3057\u3066\u914d\u5217\u306b\u3057\u305f\u306e\u3092SUM\u3063\u3066\u308b\u3002\nPython\u3059\u3054\u3044\u3002\n\nfor p in itertools.product(*patterns):\n[500,2]\u3084[100:3]\u3068\u3044\u3063\u305f\u8ca8\u5e63\u306e\u679a\u6570\u3092\u4fdd\u5b58\u3057\u305f\u914d\u5217\u3092\u4fdd\u5b58\u3057\u305f\u914d\u5217\u3092\nitertools.product\u306b\u6e21\u3057\u3066\u3001\u7dcf\u5f53\u308a\u306e\u7d44\u307f\u5408\u308f\u305b\u3092for\u30eb\u30fc\u30d7\u3067\u53d7\u3051\u53d6\u3063\u3066\u308b\u3002\nPython\u3059\u3054\u3044\u3002\n\n\u307e\u3068\u3081\nPython\u3059\u3054\u3044\u3002\n\n###\u3044\u304b\u306b\u3057\u3066\u304a\u91e3\u3092\u6700\u5c0f\u306b\u6291\u3048\u308b\u304b\n\n\u8ca1\u5e03\u306e\u4e2d\u304c\u3053\u3093\u306a\u72b6\u6cc1\u3060\u3063\u305f\u3068\u3059\u308b\u3002\n\n```\n1,000\u3000\u5186\u672d:1\u679a\n100\u3000\u3000\u5186\u7389:3\u679a\n10\u3000\u3000 \u5186\u7389:1\u679a\n1\u3000\u3000\u3000\u5186\u7389:1\u679a\n```\n\n\u3053\u306e\u8ca1\u5e03\u3092\u6301\u3063\u3066\u30b3\u30f3\u30d3\u30cb\u3067\n\n```\n\u4fa1\u683c:756\u5186\n```\n\n\u306e\u5546\u54c1\u3092\u8cb7\u3046\u3068\u304d\u3001\u3069\u306e\u3088\u3046\u306a\u652f\u6255\u3044\u65b9\u3092\u3059\u308c\u3070\n\u3082\u3063\u3068\u3082\u304a\u91e3\u306e\u679a\u6570\u304c\u5c11\u306a\u304f\u3066\u6e08\u3080\u3060\u308d\u3046\u304b\u3002\n\n\u9762\u5012\u304f\u3055\u3044\u6642\u306f\u305f\u3076\u3093\u3053\u3093\u306a\u6255\u3044\u65b9\u3092\u3059\u308b\u3002\n\n```\n1000\u5186\u672d1\u679a\u3092\u652f\u6255\u3046\n\u2193\n1000-756=244\u5186\u306e\u304a\u91e3\n\u2193\n2*100\n4*10\n4*1\n\u2193\n\u5408\u8a0810\u679a\u306e\u304a\u91e3\u3092\u8cb0\u3046\u3002\n```\n\n\u3053\u308c\u3067\u306f\u304a\u8ca1\u5e03\u304c\u30d1\u30f3\u30d1\u30f3\u3060\u3002\n\u3082\u3046\u5c11\u3057\u697d\u306b\u3057\u3066\u3084\u308d\u3046\u3002\n\n```\n1000\u5186\u672d1\u679a\u3092\u652f\u6255\u3046\n10\u5186\u73891\u679a\u3092\u652f\u6255\u3046\n\u2193\n1010-756= 254\u5186\u306e\u304a\u91e3\n\u2193\n1*200\n1*50\n4*1\n\u2193\n\u5408\u8a086\u679a\u306e\u304a\u91e3\u3092\u8cb0\u3046\u3002\n```\n\n\u3061\u3087\u3063\u3068\u3060\u3051\u6e1b\u3063\u305f\u305e\u3002\n\u3082\u3063\u3068\u3044\u3051\u306a\u3044\u304b\uff1f\n\n```\n1000\u5186\u672d1\u679a\u3092\u652f\u6255\u3046\n100\u5186\u73893\u679a\u3092\u652f\u6255\u3046\n10\u5186\u73891\u679a\u3092\u652f\u6255\u3046\n1\u5186\u73891\u679a\u3092\u652f\u6255\u3046\n\u2193\n1311\u5186-756=555\u5186\u306e\u304a\u91e3\n\u2193\n1*500\n1*50\n1*5\n\u2193\n\u5408\u8a083\u679a\u306e\u304a\u91e3\u3092\u8cb0\u3046\u3002\n```\n\nCool!\n1311\u5186\u3068\u3044\u3046\u4e0d\u53ef\u89e3\u306a\u652f\u6255\u3044\u65b9\u3092\u3055\u308c\u3066\u5e97\u54e1\u306f\u56f0\u60d1\u3059\u308b\u3053\u3068\u3060\u308d\u3046\u3002\n\u300c\u3067\u3082\u7a81\u304d\u8fd4\u3059\u8a33\u306b\u306f\u3044\u304b\u306a\u3044\u3057\u2026\u300d\u3068\u534a\u4fe1\u534a\u7591\u3067\u30ec\u30b8\u306b\u6253\u3061\u8fbc\u3093\u3067\u3001\n\u8868\u793a\u3055\u308c\u308b555\u5186\u306e\u6587\u5b57\u3002\n\u3053\u308c\u306f\u30c9\u30e4\u9854\u3067\u304d\u308b\u3002\u52dd\u3061\u8a87\u3063\u305f\u9854\u3067\u304a\u91e3\u308a\u3092\u53d7\u3051\u53d6\u308c\u308b\u3002\n\u304a\u305d\u3089\u304f\u6b21\u304b\u3089\u30de\u30c3\u30cfGO\u3068\u3044\u3046\u30a2\u30c0\u540d\u3067\u547c\u3070\u308c\u308b\u306b\u9055\u3044\u306a\u3044\u3002\n\n###\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u843d\u3068\u3057\u3053\u3093\u3067\u307f\u3088\u3046\n\u4eca\u56de\u306f\u3046\u307e\u304f\u3044\u3063\u305f\u3082\u306e\u306e\u3001\u3061\u3087\u3063\u3068\u3067\u3082\u8a08\u7b97\u3092\u9593\u9055\u3048\u308c\u3070\u305f\u3060\u306e\u5909\u306a\u4eba\u3060\u3002\n\u982d\u3092\u4f7f\u308f\u305a\u5e97\u54e1\u306b\u30c9\u30e4\u9854\u3059\u308b\u305f\u3081\u306b\u3001\u3053\u308c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u843d\u3068\u3057\u3053\u3080\u3053\u3068\u3092\n\u691c\u8a0e\u3057\u3066\u307f\u305f\u3044\u3002\u3069\u3046\u3084\u3063\u305f\u3089\u5b9f\u73fe\u3067\u304d\u308b\u3060\u308d\u3046\u304b\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u624b\u9806\u3067\u7dcf\u5f53\u308a\u3092\u3057\u3066\u307f\u308b\u306e\u306f\u3069\u3046\u3060\u308d\u3046\u3002\n\n1. \u8ca1\u5e03\u306e\u4e2d\u306e\u304a\u91d1\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u5168\u90e8\u5217\u6319\u3059\u308b\u3002\n2. \u305d\u306e\u4e2d\u3067\u652f\u6255\u984d\u304c\u8acb\u6c42\u984d\u3092\u8d85\u3048\u3066\u3044\u308b\u3082\u306e\u3060\u3051\u3092\u53d6\u308a\u51fa\u3059\u3002\n3. \u6b8b\u3063\u305f\u5168\u90e8\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u5bfe\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u304a\u91e3\u306e\u6570\u3092\u8a08\u7b97\u3059\u308b\u3002\n4. \u3082\u3063\u3068\u3082\u304a\u91e3\u304c\u5c11\u306a\u304b\u3063\u305f\u3082\u306e\u3092\u9078\u3076\u3002\n\n\n\u7dcf\u5f53\u308a\u30fb\u30fb\u30fb\u7f8e\u3057\u304f\u306a\u3044\u3002\u3067\u3082\u3068\u308a\u3042\u3048\u305a\u5b9f\u73fe\u3059\u308b\u3053\u3068\u3092\u512a\u5148\u3060\u3002\n\u305d\u308c\u304c\u3053\u3061\u3089\u3002\n\n```py:smart_pay.py\n# -*- coding: utf-8 -*-\nimport itertools\nmoney_type = (10000, 5000, 2000, 1000, 500, 100, 50, 10, 5, 1)\n\ndef smart_pay(saifu,kakaku):\n    bestPttern=None\n    patterns=[]\n    for mtype in money_type:\n        pattern=[]\n        for c in range(saifu[mtype]+1):\n            pattern.append([mtype,c])\n        if len(pattern)>1:\n            patterns.append(pattern)\n    for p in itertools.product(*patterns):\n        ptn={x[0]:x[1] for x in p}\n        if coins2price(ptn)>=kakaku:\n            if  bestPttern is None:\n                bestPttern=ptn\n            else:\n                if count_coins(price2coins(coins2price(bestPttern)-kakaku)) > count_coins(price2coins(coins2price(ptn)-kakaku)):\n                    bestPttern=ptn\n    return bestPttern\n\ndef price2coins(price):\n    coins = {}\n    for mt in money_type:\n        coins[mt], price = divmod(price, mt)\n    return coins\n\ndef coins2price(coins):\n    return sum(key * val for key,val in coins.items())\n\ndef count_coins(coins):\n    return sum(val for key,val in coins.items())\n\nif __name__ == \"__main__\":\n    saifu={}\n    print(\"\u307e\u305a\u304a\u8ca1\u5e03\u306e\u4e2d\u8eab\u3092\u304a\u805e\u304d\u3057\u307e\u3059...\")\n    for mtype in money_type:\n        saifu[mtype]= int(raw_input(str(mtype)+ \"\u5186\u306f\u4f55\u679a\uff1f\\n>\"))\n    kakaku=int(raw_input(\"\u3044\u304f\u3089\u306e\u5546\u54c1\u3092\u8cb7\u3044\u307e\u3059\u304b\uff1f\\n>\"))\n    print(\"\u6700\u9069\u306a\u652f\u6255\u3044\u65b9\u6cd5\u306f.\\n.\\n.\\n\")\n    bestPttern=smart_pay(saifu,kakaku)\n    if bestPttern is None:\n        print(\"\u304a\u304b\u306d\u305f\u308a\u306a\u3044\u3067\u3059\u3002\u3002\u3002\")\n    else:\n        for key,val in bestPttern.items():\n            print(str(key)+\"\u5186\u3092\"+str(val)+\"\u679a\")\n        print(\"\u3067\u3059\uff01\")\n```\n\n\u30e1\u30bd\u30c3\u30c9\u306e\u6a5f\u80fd\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\n* price2coins:\u91d1\u984d\u3092\u5165\u308c\u308b\u3068\u8ca8\u5e63\u306e(\u7406\u60f3\u7684\u306a)\u679a\u6570\u3092\u6559\u3048\u3066\u304f\u308c\u308b\u3002\n* coins2price:\u8ca8\u5e63\u3092\u5165\u308c\u308b\u3068\u91d1\u984d\u3092\u6559\u3048\u3066\u304f\u308c\u308b\u3002\n* count_coins:\u8ca8\u5e63\u306e\u6570\u3092\u6570\u3048\u3066\u304f\u308c\u308b\u3002\n* smart_pay:\u8ca1\u5e03\u306e\u4e2d\u8eab\u3068\u8cfc\u5165\u984d\u3092\u5165\u308c\u308b\u3068\u6700\u826f\u306a\u652f\u6255\u3044\u65b9\u6cd5\u3092\u6559\u3048\u3066\u304f\u308c\u308b\u3002\n\n\u65e9\u901f\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\n\n```\u5b9f\u884c\u7d50\u679c\n\u307e\u305a\u304a\u8ca1\u5e03\u306e\u4e2d\u8eab\u3092\u304a\u805e\u304d\u3057\u307e\u3059...\n10000\u5186\u306f\u4f55\u679a\uff1f\n>0\n5000\u5186\u306f\u4f55\u679a\uff1f\n>0\n2000\u5186\u306f\u4f55\u679a\uff1f\n>0\n1000\u5186\u306f\u4f55\u679a\uff1f\n>1\n500\u5186\u306f\u4f55\u679a\uff1f\n>0\n100\u5186\u306f\u4f55\u679a\uff1f\n>3\n50\u5186\u306f\u4f55\u679a\uff1f\n>0\n10\u5186\u306f\u4f55\u679a\uff1f\n>1\n5\u5186\u306f\u4f55\u679a\uff1f\n>0\n1\u5186\u306f\u4f55\u679a\uff1f\n>1\n\u3044\u304f\u3089\u306e\u5546\u54c1\u3092\u8cb7\u3044\u307e\u3059\u304b\uff1f\n>756\n\u6700\u9069\u306a\u652f\u6255\u3044\u65b9\u6cd5\u306f.\n.\n.\n\n1000\u5186\u30921\u679a\n1\u5186\u30921\u679a\n10\u5186\u30921\u679a\n100\u5186\u30923\u679a\n\u3067\u3059\uff01\n\n```\n\n\u7d20\u6674\u3089\u3057\u3044\u3002\n\u3053\u308c\u3067\u601d\u3046\u5b58\u5206\u30b3\u30f3\u30d3\u30cb\u3067\u30c9\u30e4\u9854\u3067\u304d\u308b\u3002\n\n###\u3061\u3087\u3063\u3068\u3057\u305f\u89e3\u8aac\n\n###### coins[mt], price = divmod(price, mt)\nprice\u3092mt(\u8ca8\u5e63\u306e\u984d\u9762)\u3067\u5272\u3063\u305f\u91d1\u984d\u3068\u3042\u307e\u308a\u3092\u540c\u6642\u306b\u53d6\u5f97\u3057\u3066\u308b\u3002\nPython\u3059\u3054\u3044\u3002\n\n######return sum(key * val for key,val in coins.items())\ncoins\u3068\u3044\u3046Dictionary(key:\u8ca8\u5e63\u306e\u984d\u9762,value:\u8ca8\u5e63\u306e\u679a\u6570)\u304b\u3089\nfor\u30eb\u30fc\u30d7\u3067KeyValue\u3092\u53d6\u308a\u51fa\u3057\u639b\u3051\u7b97\u3057\u3066\u914d\u5217\u306b\u3057\u305f\u306e\u3092SUM\u3063\u3066\u308b\u3002\nPython\u3059\u3054\u3044\u3002\n\n######for p in itertools.product(*patterns):\n[500,2]\u3084[100:3]\u3068\u3044\u3063\u305f\u8ca8\u5e63\u306e\u679a\u6570\u3092\u4fdd\u5b58\u3057\u305f\u914d\u5217\u3092\u4fdd\u5b58\u3057\u305f\u914d\u5217\u3092\nitertools.product\u306b\u6e21\u3057\u3066\u3001\u7dcf\u5f53\u308a\u306e\u7d44\u307f\u5408\u308f\u305b\u3092for\u30eb\u30fc\u30d7\u3067\u53d7\u3051\u53d6\u3063\u3066\u308b\u3002\nPython\u3059\u3054\u3044\u3002\n\n###\u307e\u3068\u3081\nPython\u3059\u3054\u3044\u3002\n\n", "tags": ["Python", "\u6700\u9069\u5316"]}