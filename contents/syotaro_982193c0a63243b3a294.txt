{"tags": ["api", "Markdown", "Ruby", "JavaScript", "Swift"], "context": " More than 1 year has passed since last update.\n\u6210\u679c\u7269\uff1aapiary.io\u306b\u3088\u308b\u3001API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\u3068\u308a\u3042\u3048\u305a\u898b\u3066\u8cb0\u3048\u308b\u3068\u30a4\u30e1\u30fc\u30b8\u3064\u304b\u307f\u3084\u3059\u3044\u3067\u3059\u2191\n\n\u3042\u3089\u3059\u3058\n\n\n100\u4e07\u5186\u6b32\u3057\u3044\u306e\u3067API\u3092\u5229\u7528\u3057\u305f\u30a2\u30d7\u30ea\u958b\u767a\u3092\u5b66\u3076\u7d76\u597d\u306e\u6a5f\u4f1a\u306a\u306e\u3067\u3001\u6771\u4eac\u30e1\u30c8\u30ed\u30aa\u30fc\u30d7\u30f3\u30c7\u30fc\u30bf\u6d3b\u7528\u30b3\u30f3\u30c6\u30b9\u30c8\u306b\u6311\u6226\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u3002\n\n\u524d\u56de\u3001\u3068\u308a\u3042\u3048\u305a\u3056\u3063\u3068\u89e6\u3063\u3066\u307f\u3066API\u306e\u30a4\u30e1\u30fc\u30b8\u306f\u63b4\u3093\u3060\n\u4eca\u56de\u306f\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068\u5b9f\u969b\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5480\u56bc\u3057\u3066\u3001\u4ed5\u69d8\u8a2d\u8a08\u3092\u6c4e\u7528\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316\u3057\u3064\u3064\u7406\u89e3\u3057\u3066\u3044\u304f\u3053\u3068\u3092\u76ee\u7684\u3068\u3059\u308b\n\n\n\u305b\u3063\u304b\u304f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316\u3059\u308b\u304b\u3089\u306b\u306f\u3001\u6c4e\u7528\u6027\u3068\u5b9f\u7528\u6027\u304c\u9ad8\u3044\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068\u3057\u305f\u3044\uff08\u30aa\u30ec\u30aa\u30ec\u306b\u306f\u3057\u305f\u304f\u306a\u3044\uff09\n\n\n\n\n\u6210\u679c\u7269\nAPI Blueprint\u3067\u8a18\u8ff0\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u3092Apiary.io\u3067\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u3057\u3001\u4ee5\u4e0b\u3092\u4f5c\u3063\u305f\n\n\nTokyoMetroOpendataAPI \u00b7 Apiary\n\n\ngithub\u4e0a\u306e\u30bd\u30fc\u30b9\uff08markdown\u30d7\u30ec\u30d3\u30e5\u30fc\u7248\uff09\n\n\n\n\u3084\u3063\u3066\u307f\u3066\u308f\u304b\u3063\u305f\u3001Apiary\u306b\u3088\u308bAPI\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u3044\u3044\u3068\u3053\u308d\n\n\n\n\u3044\u3044\u3068\u3053\u308d\n\u7406\u7531\n\n\n\n\n\u30e1\u30f3\u30c6\u304c\u5bb9\u6613\n\nAPI Blueprint\u3068\u3044\u3046API Documentation\u5c02\u7528\u306emarkdown\u98a8\u8a00\u8a9e\u3067\u8a18\u8ff0\u3057\u3001\u305d\u308c\u3092\u5143\u306b\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3002\u5358\u4e00\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306a\u306e\u3067\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3082\u3057\u3084\u3059\u3044\n\n\n\u305d\u3053\u305d\u3053\u306e\u898b\u6804\u3048\nAPI\u3092\u8aac\u660e\u3059\u308b\u306e\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u3002\n\n\n\u30c7\u30d0\u30c3\u30b0\u306b\u4fbf\u5229\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089\u7c21\u6613\u30e2\u30c3\u30af\u30b5\u30fc\u30d0\u3092\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u66f8\u3044\u305f\u3089\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u958b\u767a\u304c\u9032\u3081\u3089\u308c\u308b\n\n\n\u30d5\u30ea\u30fc\u30df\u30a2\u30e0\n\u500b\u4eba\u30ec\u30d9\u30eb\u306e\u5229\u7528\u306a\u3089\u30bf\u30c0\n\n\n\u30b9\u30cb\u30da\u30c3\u30c8\u751f\u6210\n11\u306e\u5f62\u5f0f\u30fb\u8a00\u8a9e\u306b\u3088\u308b\u30b3\u30fc\u30c9\u30b9\u30cb\u30da\u30c3\u30c8\u3092\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u81ea\u52d5\u751f\u6210\u3057\u3066\u304f\u308c\u308b\n\n\n\n\u30aa\u30ec\u30aa\u30ecAPI\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068\u6bd4\u3079\u308b\u3068\u3001\u5727\u5012\u7684\u306a\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308b\u3088\u3046\u306b\u611f\u3058\u308b\n\nAPI Blueprint\u3068\u306f\u4f55\u306a\u306e\u304b\n\n\n\u5f15\u7528: API Blueprint - API Documentation with powerful tooling\n\nWebAPI\u5c02\u7528\u306emarkdown\u98a8\u8a00\u8a9e\u3002\u6a5f\u68b0\u304c\u8aad\u3081\u308b\u69cb\u9020\u3092\u7dad\u6301\u3057\u3064\u3064\u3001\u4eba\u306b\u3082\u6613\u3057\u3044\u8a2d\u8a08\u3002\n\n\u7af6\u5408\u3068\u3057\u3066\u306f\u3001RAML\u3084Swagger\u304c\u3042\u308b\n\n\n\u6bd4\u8f03\u8a18\u4e8b\nRAML vs. Swagger vs. API Blueprint | MIKESTOWE.COM\nAnother API-Blueprint, RAML and Swagger Comparison\nRAML\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308bAPI\u3068\u3057\u3066\u306f\u3001\u30c1\u30e3\u30c3\u30c8\u30ef\u30fc\u30afAPI\u306a\u3069\u304c\u3042\u308b\n\n\nAPI Blueprint\u306e\u8a73\u7d30\u306a\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30eb\u30fc\u30eb\u306f\u3001\u30b3\u30b3\u3092\u53c2\u7167\nApiary.io(\u5f8c\u8ff0)\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u771f\u4fa1\u3092\u767a\u63ee\u3059\u308b\n\nATOM plugin\u3042\u308a\u307e\u3059\n\nsublime-plugin\u3042\u308a\u307e\u3059\n\u3082\u3061\u308d\u3093\u3001vim plugin\u3082\u3042\u308a\u307e\u3059\n\u30d9\u30fc\u30b9\u306fmarkdown\u306a\u306e\u3067\u3001\u3068\u306b\u304b\u304f\u66f8\u304d\u3084\u3059\u3044\n\n\napiary.io\u3068\u306f\u4f55\u306a\u306e\u304b\n\n\n\u5f15\u7528: Apiary \u2014 Home\n\nAPI Blueprint\u3067\u8a18\u8ff0\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u3001\u4ee5\u4e0b\u3092\u751f\u6210\u3067\u304d\u308bREST API Platform\u3002\n\napiblueprint\u3067\u8a18\u8ff0\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u3001API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u751f\u6210\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u5143\u306b\u3057\u305f\u3001\u7c21\u6613API mock\u30b5\u30fc\u30d0\u751f\u6210\n12\u306e\u5f62\u5f0f\u3001\u8a00\u8a9e\u306b\u3088\u308bcode samples\u306e\u751f\u6210\n\u30c7\u30d0\u30c3\u30b0\u6a5f\u80fd\u3068\u81ea\u52d5\u30c6\u30b9\u30c8\uff08syntax validation\uff09\ngithub\u3068\u306e\u9023\u643a\n\u30d5\u30ea\u30fc\u30df\u30a2\u30e0\u30e2\u30c7\u30eb\n\n\napiary\u306b\u3088\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4f8b\n\nOneNote API\nGoodData API\n\n\napiary doc\u306e\u4f7f\u3044\u65b9\n\n\n\u78ba\u8a8d\u3057\u305f\u3044\u3001API\u306e\u30bf\u30a4\u30c8\u30eb\uff08\u4e0a\u306e\u56f3\u3067\u8a00\u3046\u3001\u300c\u904b\u8cc3\u300d\uff09\u3092\u9078\u629e\n\nResponse\u3092\u30af\u30ea\u30c3\u30af\n\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u30b9\u30cb\u30da\u30c3\u30c8\u306e\u8a00\u8a9e\u3092\u9078\u629e\n\u74b0\u5883\u3092\u9078\u629e\u3002\u300cProduction\u300d\u3092\u9078\u3076\u3068\u672c\u756aURL\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u98db\u3070\u3059\u3002\u300cMockServer\u300d\u3092\u9078\u629e\u3059\u308c\u3070\u3001example response\u3092\u8fd4\u3059\n\nExample\u3092\u62bc\u3059\u3068\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5165\u529b\u753b\u9762\u306b\u306a\u308b\u3002\u6771\u4eac\u30e1\u30c8\u30edAPI\u306e\u5834\u5408\u3001ConsumerKey\u306e\u5165\u529b\u304cmust\u306a\u306e\u3067\u3001\u5c11\u306a\u304f\u3068\u3082\u3053\u3053\u306f\u66f8\u304d\u63db\u3048\u308b\n\nCall Resource\u3092\u62bc\u3059\u3068\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u5e30\u3063\u3066\u304f\u308b\n\nCodeSnippet\u3092\u62bc\u3059\u3068\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8868\u793a\u3059\u308b\n\n\nTraffic Inspector\n\n\n\u5f15\u7528: Apiary \u2014 Home\n\n\u7c21\u6613\u7684\u306a\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u30e2\u30cb\u30bf\u30fc\u3082\u3042\u308b\u306e\u3067\u3001\u30e2\u30c3\u30af\u30b5\u30fc\u30d0\u5411\u3051\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u306e\u306b\u5f79\u7acb\u3064\n\n\u304a\u307e\u3051(\u30e1\u30c8\u30ed\u306e\u904b\u884c\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9)\n\u4ee5\u4e0b\u3001\u73fe\u5728\u306e\u904b\u884c\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u309211\u306e\u5f62\u5f0f\u3001\u8a00\u8a9e\u3067\u8868\u73fe\u3059\u308b\u3002\nxxxxxxxxx\u3068\u306a\u3063\u3066\u3044\u308b\u7b87\u6240\u306f\u3001\u81ea\u8eab\u3067\u53d6\u5f97\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3068\u5dee\u3057\u66ff\u3048\u308b\n\ncURL\n\ncURL_Request\ncurl --include \\\nhttps://private-1e992-tokyometroopendataapi.apiary-mock.com/api/v2/datapoints?rdf:type=odpt:TrainInformation&acl:consumerKey=xxxxxxxxxxxxxxxx\n\n\n\nJavaScript\n\nJavaScript_Request\nvar Request = new XMLHttpRequest();\n\nRequest.open('GET', 'https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx');\n\nRequest.onreadystatechange = function () {\n  if (this.readyState === 4) {\n    console.log('Status:', this.status);\n    console.log('Headers:', this.getAllResponseHeaders());\n    console.log('Body:', this.responseText);\n  }\n};\n\nRequest.send(JSON.stringify(body));\n\n\n\nNode.js\n\nNode.js_Request\nvar request = require('request');\n\nrequest('https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&#38;acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx', function (error, response, body) {\n  console.log('Status:', response.statusCode);\n  console.log('Headers:', JSON.stringify(response.headers));\n  console.log('Response:', body);\n});\n\n\n\nPython\n\nPython_Request\nfrom urllib2 import Request, urlopen\n\nrequest = Request('https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx')\n\nresponse_body = urlopen(request).read()\nprint response_body\n\n\n\nPHP\n\nPHP_Request\n<?php\n$ch = curl_init();\n\ncurl_setopt($ch, CURLOPT_URL, \"https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&#38;acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx\");\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);\ncurl_setopt($ch, CURLOPT_HEADER, FALSE);\n\n$response = curl_exec($ch);\ncurl_close($ch);\n\nvar_dump($response);\n\n\n\nRuby\n\nRuby_Request\nrequire 'rubygems' if RUBY_VERSION < '1.9'\nrequire 'rest_client'\n\nresponse = RestClient.get 'https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx'\nputs response\n\n\n\nC\uff03\n\nC#_Request\n//Common testing requirement. If you are consuming an API in a sandbox/test region, uncomment this line of code ONLY for non production uses.\n//System.Net.ServicePointManager.ServerCertificateValidationCallback = delegate { return true; };\n\nvar request = System.Net.WebRequest.Create(\"https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&#38;acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx\") as System.Net.HttpWebRequest;\nrequest.KeepAlive = true;\n\nrequest.Method = \"GET\";\nrequest.ContentLength = 0;\nstring responseContent=null;\nusing (var response = request.GetResponse() as System.Net.HttpWebResponse) {\n  using (var reader = new System.IO.StreamReader(response.GetResponseStream())) {\n    responseContent = reader.ReadToEnd();\n  }\n}\n\n\n\nVasual Basic\n\nVasualBasic_Request\nDim request = TryCast(System.Net.WebRequest.Create(\"https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&#38;acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx\"), System.Net.HttpWebRequest)\n\nrequest.Method = \"GET\"\n\nrequest.ContentLength = 0\nDim responseContent As String\nUsing response = TryCast(request.GetResponse(), System.Net.HttpWebResponse)\n  Using reader = New System.IO.StreamReader(response.GetResponseStream())\n    responseContent = reader.ReadToEnd()\n  End Using\nEnd Using\n\n\n\nGroovy\n\nGroovy_Request\nimport groovyx.net.http.RESTClient\nimport static groovyx.net.http.ContentType.JSON\nimport groovy.json.JsonSlurper\nimport groovy.json.JsonOutput\n\n@Grab (group = 'org.codehaus.groovy.modules.http-builder', module = 'http-builder', version = '0.5.0')\ndef client = new RESTClient(\"https://api.tokyometroapp.jp/api/v2\")\n\nresponse = client.get( path : \"/datapoints?rdf:type=odpt:TrainInformation&#38;acl%3AconsumerKey={acl%3AconsumerKey}\")\n\nprintln(\"Status:\" + response.status)\nif (response.data) {\n  println(\"Content Type: \" + response.contentType)\n  println(\"Body:\\n\" + JsonOutput.prettyPrint(JsonOutput.toJson(response.data)))\n}\n\n\n\nObjective-C\n\nObjective-C_Request\nNSURL *URL = [NSURL URLWithString:@\"https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&#38;acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx\"];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:URL];\n[request setHTTPMethod:@\"GET\"];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *task = [session dataTaskWithRequest:request\n                                        completionHandler:\n                              ^(NSData *data, NSURLResponse *response, NSError *error) {\n\n                                  if (error) {\n                                      // Handle error...\n                                      return;\n                                  }\n\n                                  if ([response isKindOfClass:[NSHTTPURLResponse class]]) {\n                                      NSLog(@\"Response HTTP Status code: %ld\\n\", (long)[(NSHTTPURLResponse *)response statusCode]);\n                                      NSLog(@\"Response HTTP Headers:\\n%@\\n\", [(NSHTTPURLResponse *)response allHeaderFields]);\n                                  }\n\n                                  NSString* body = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];\n                                  NSLog(@\"Response Body:\\n%@\\n\", body);\n                              }];\n[task resume];\n\n\n\nSwift\n\nSwift_Request\n// NOTE: Uncommment following two lines for use in a Playground\n// import XCPlayground\n// XCPSetExecutionShouldContinueIndefinitely()\n\nvar url = NSURL(string: \"https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&#38;acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx\")\nvar request = NSMutableURLRequest(URL: url)\n\nrequest.HTTPMethod = \"GET\"\n\nvar session = NSURLSession.sharedSession()\nvar task = session.dataTaskWithRequest(request) { (data: NSData!, response: NSURLResponse!, error: NSError!) in\n\n    if (error) {\n        // Handle error...\n        return\n    }\n\n    println(error)\n    println(response)\n    println(NSString(data: data, encoding: NSUTF8StringEncoding))\n}\n\ntask.resume()\n\n\n\nResponse(JSON)\n\u5e30\u3063\u3066\u304f\u308b\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u3001\u4ee5\u4e0b\u3068\u306a\u308b\n\nJSON_Response\n[\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE9\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Tozai\",\n    \"odpt:timeOfOrigin\": \"2014-09-16T12:36:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE7\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Marunouchi\",\n    \"odpt:timeOfOrigin\": \"2014-09-19T20:30:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE8\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Namboku\",\n    \"odpt:timeOfOrigin\": \"2014-09-18T17:30:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE6\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Hibiya\",\n    \"odpt:timeOfOrigin\": \"2014-08-30T23:30:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE3\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Fukutoshin\",\n    \"odpt:timeOfOrigin\": \"2014-09-21T17:30:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE5\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Hanzomon\",\n    \"odpt:timeOfOrigin\": \"2014-09-17T22:56:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE4\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Ginza\",\n    \"odpt:timeOfOrigin\": \"2014-09-16T09:15:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BEA\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Yurakucho\",\n    \"odpt:timeOfOrigin\": \"2014-09-16T23:00:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE2\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Chiyoda\",\n    \"odpt:timeOfOrigin\": \"2014-09-21T13:00:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  }\n]    \n\n\n\n\u307e\u3068\u3081\n\n\u3084\u306f\u308a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3042\u308b\u3068\u3001\u4ed6\u306e\u30e1\u30f3\u30d0\u30fc\u3068\u306e\u60c5\u5831\u5171\u6709\u304c\u3057\u3084\u3059\u3044\n\u306a\u306b\u3088\u308a\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u4f5c\u3063\u3066\u3044\u308b\u672c\u4eba\u304c\u4e00\u756a\u7406\u89e3\u304c\u3059\u3059\u3080\napiary\u4e0a\u3067\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067API blueprint\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5165\u308b\u306e\u3067\u3001\u69cb\u6587\u30a8\u30e9\u30fc\u3092\u3059\u3050\u306b\u767a\u898b\u3067\u304d\u308b\u3002\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30bd\u30fc\u30b9\u306fgithub\u306b\u3042\u308b\u306e\u3067\u3001\u6c17\u8efd\u306b\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u3082\u3089\u3048\u305d\u3046\u3067\u3088\u3044\n\u66f8\u304d\u6163\u308c\u305fmarkdown\u3067\u304b\u3051\u308b\u306e\u3067\u3001\u4f5c\u6210\u5de5\u6570\u306f\u9ad8\u304f\u306a\u3044\u3002\u30e2\u30c3\u30af\u30b5\u30fc\u30d0\u3082\u4f5c\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u3001\u7cbe\u795e\u885b\u751f\u4e0a\u3082\u3088\u3044(\u7121\u99c4\u306a\u4f5c\u696d\u3092\u3057\u3066\u3044\u308b\u611f\u306b\u306f\u8972\u308f\u308c\u306a\u3044)\n\nAPI\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001\u8eab\u306e\u56de\u308a\u3067\u306f\u5272\u3068\u8efd\u8996\u3055\u308c\u3066\u3044\u308b\u611f\u3042\u308b\u3051\u3069\u3001\u5186\u6ed1\u306a\u958b\u767a\u306e\u70ba\u306b\u3059\u3054\u304f\u91cd\u8981\u3060\u3068\u601d\u3046\u3002apiblueprint\u3067\u306a\u304f\u3066\u3082\u3044\u3044\u306e\u3067\u3001\u3053\u308c\u3060\uff01\u3068\u3044\u3046\u6a19\u6e96\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u3001\u306f\u3084\u304f\u6c7a\u307e\u3063\u3066\u6b32\u3057\u3044\n\u30e1\u30c8\u30edAPI\u306e\u5168\u4f53\u50cf\u304c\u308f\u304b\u3063\u305f\u3068\u3053\u308d\u3067\u3001\u6b21\u306f\u5404API\u306e\u8a73\u7d30\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u691c\u8a3c\u3057\u3066\u3044\u304d\u305f\u3044\n[![][image]][link]\n[image]: http://s3img.jp/20140921232815.png\n[link]: http://docs.tokyometroopendataapi.apiary.io/reference/%E3%83%87%E3%83%BC%E3%82%BF%E5%8F%96%E5%BE%97%E3%83%BB%E6%A4%9C%E7%B4%A2api/%E9%A7%85%E6%99%82%E5%88%BB%E8%A1%A8/response\n\n\u6210\u679c\u7269\uff1a[apiary.io\u306b\u3088\u308b\u3001API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://docs.tokyometroopendataapi.apiary.io/reference/%E3%83%87%E3%83%BC%E3%82%BF%E5%8F%96%E5%BE%97%E3%83%BB%E6%A4%9C%E7%B4%A2api/%E9%A7%85%E6%99%82%E5%88%BB%E8%A1%A8/response)\n\u3068\u308a\u3042\u3048\u305a\u898b\u3066\u8cb0\u3048\u308b\u3068\u30a4\u30e1\u30fc\u30b8\u3064\u304b\u307f\u3084\u3059\u3044\u3067\u3059\u2191\n\n## \u3042\u3089\u3059\u3058\n\n- <del>100\u4e07\u5186\u6b32\u3057\u3044\u306e\u3067</del>API\u3092\u5229\u7528\u3057\u305f\u30a2\u30d7\u30ea\u958b\u767a\u3092\u5b66\u3076\u7d76\u597d\u306e\u6a5f\u4f1a\u306a\u306e\u3067\u3001[\u6771\u4eac\u30e1\u30c8\u30ed\u30aa\u30fc\u30d7\u30f3\u30c7\u30fc\u30bf\u6d3b\u7528\u30b3\u30f3\u30c6\u30b9\u30c8](http://tokyometro10th.jp/future/opendata/)\u306b\u6311\u6226\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u3002\n- [\u524d\u56de](http://qiita.com/syotaro/items/44faf534c7870169a685)\u3001\u3068\u308a\u3042\u3048\u305a\u3056\u3063\u3068\u89e6\u3063\u3066\u307f\u3066API\u306e\u30a4\u30e1\u30fc\u30b8\u306f\u63b4\u3093\u3060\n- \u4eca\u56de\u306f\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068\u5b9f\u969b\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5480\u56bc\u3057\u3066\u3001\u4ed5\u69d8\u8a2d\u8a08\u3092\u6c4e\u7528\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316\u3057\u3064\u3064\u7406\u89e3\u3057\u3066\u3044\u304f\u3053\u3068\u3092\u76ee\u7684\u3068\u3059\u308b\n  - \u305b\u3063\u304b\u304f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5316\u3059\u308b\u304b\u3089\u306b\u306f\u3001\u6c4e\u7528\u6027\u3068\u5b9f\u7528\u6027\u304c\u9ad8\u3044\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068\u3057\u305f\u3044\uff08\u30aa\u30ec\u30aa\u30ec\u306b\u306f\u3057\u305f\u304f\u306a\u3044\uff09\n\n## \u6210\u679c\u7269\n\n[API Blueprint](http://apiblueprint.org/)\u3067\u8a18\u8ff0\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u3092[Apiary.io](http://apiary.io/)\u3067\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u3057\u3001\u4ee5\u4e0b\u3092\u4f5c\u3063\u305f\n\n- **[TokyoMetroOpendataAPI \u00b7 Apiary](http://docs.tokyometroopendataapi.apiary.io/reference)**\n  - [github\u4e0a\u306e\u30bd\u30fc\u30b9](https://github.com/syotaro/TokyoMetroOpendataAPI/blob/master/apiary.apib)\uff08[markdown\u30d7\u30ec\u30d3\u30e5\u30fc\u7248](https://github.com/syotaro/TokyoMetroOpendataAPI/blob/master/apiary.md)\uff09\n\n\n\u3084\u3063\u3066\u307f\u3066\u308f\u304b\u3063\u305f\u3001Apiary\u306b\u3088\u308bAPI\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u3044\u3044\u3068\u3053\u308d\n\n\u3044\u3044\u3068\u3053\u308d | \u7406\u7531\n-------------|----\n\u30e1\u30f3\u30c6\u304c\u5bb9\u6613 |  [API Blueprint](http://apiblueprint.org/)\u3068\u3044\u3046API Documentation\u5c02\u7528\u306emarkdown\u98a8\u8a00\u8a9e\u3067\u8a18\u8ff0\u3057\u3001\u305d\u308c\u3092\u5143\u306b\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3002\u5358\u4e00\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306a\u306e\u3067\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3082\u3057\u3084\u3059\u3044\n\u305d\u3053\u305d\u3053\u306e\u898b\u6804\u3048 | API\u3092\u8aac\u660e\u3059\u308b\u306e\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u3002\n\u30c7\u30d0\u30c3\u30b0\u306b\u4fbf\u5229 | \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089\u7c21\u6613\u30e2\u30c3\u30af\u30b5\u30fc\u30d0\u3092\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u66f8\u3044\u305f\u3089\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u958b\u767a\u304c\u9032\u3081\u3089\u308c\u308b\n\u30d5\u30ea\u30fc\u30df\u30a2\u30e0 | \u500b\u4eba\u30ec\u30d9\u30eb\u306e\u5229\u7528\u306a\u3089\u30bf\u30c0\n\u30b9\u30cb\u30da\u30c3\u30c8\u751f\u6210 | 11\u306e\u5f62\u5f0f\u30fb\u8a00\u8a9e\u306b\u3088\u308b\u30b3\u30fc\u30c9\u30b9\u30cb\u30da\u30c3\u30c8\u3092\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u81ea\u52d5\u751f\u6210\u3057\u3066\u304f\u308c\u308b\n\n\u30aa\u30ec\u30aa\u30ecAPI\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068\u6bd4\u3079\u308b\u3068\u3001\u5727\u5012\u7684\u306a\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308b\u3088\u3046\u306b\u611f\u3058\u308b\n\n## API Blueprint\u3068\u306f\u4f55\u306a\u306e\u304b\n\n> ![](http://s3img.jp/20140922000611.png)\n> \u5f15\u7528: [API Blueprint - API Documentation with powerful tooling](http://apiblueprint.org/)\n\nWebAPI\u5c02\u7528\u306emarkdown\u98a8\u8a00\u8a9e\u3002\u6a5f\u68b0\u304c\u8aad\u3081\u308b\u69cb\u9020\u3092\u7dad\u6301\u3057\u3064\u3064\u3001\u4eba\u306b\u3082\u6613\u3057\u3044\u8a2d\u8a08\u3002\n\n- \u7af6\u5408\u3068\u3057\u3066\u306f\u3001[RAML](http://raml.org/)\u3084[Swagger](https://helloreverb.com/developers/swagger)\u304c\u3042\u308b\n  - \u6bd4\u8f03\u8a18\u4e8b\n    - [RAML vs. Swagger vs. API Blueprint | MIKESTOWE.COM](http://www.mikestowe.com/2014/07/raml-vs-swagger-vs-api-blueprint.php)\n    - [Another API-Blueprint, RAML and Swagger Comparison](http://www.slideshare.net/SmartBear_Software/api-strat-2014metadataformatsshort)\n  - RAML\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308bAPI\u3068\u3057\u3066\u306f\u3001[\u30c1\u30e3\u30c3\u30c8\u30ef\u30fc\u30afAPI](http://developer.chatwork.com/ja/raml.html)\u306a\u3069\u304c\u3042\u308b\n- API Blueprint\u306e\u8a73\u7d30\u306a\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30eb\u30fc\u30eb\u306f\u3001[\u30b3\u30b3](https://github.com/apiaryio/api-blueprint/blob/master/API%20Blueprint%20Specification.md)\u3092\u53c2\u7167\n- Apiary.io(\u5f8c\u8ff0)\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u771f\u4fa1\u3092\u767a\u63ee\u3059\u308b\n- [ATOM plugin](https://atom.io/packages/api-blueprint-preview)\u3042\u308a\u307e\u3059\n- [sublime-plugin](https://github.com/apiaryio/api-blueprint-sublime-plugin)\u3042\u308a\u307e\u3059\n- \u3082\u3061\u308d\u3093\u3001[vim plugin](https://github.com/kylef/apiblueprint.vim)\u3082\u3042\u308a\u307e\u3059\n- \u30d9\u30fc\u30b9\u306fmarkdown\u306a\u306e\u3067\u3001\u3068\u306b\u304b\u304f\u66f8\u304d\u3084\u3059\u3044\n\n## apiary.io\u3068\u306f\u4f55\u306a\u306e\u304b\n\n> ![](http://s3img.jp/20140922001637.png)\n> \u5f15\u7528: [Apiary \u2014 Home](http://apiary.io/)\n\nAPI Blueprint\u3067\u8a18\u8ff0\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u3001\u4ee5\u4e0b\u3092\u751f\u6210\u3067\u304d\u308bREST API Platform\u3002\n\n- apiblueprint\u3067\u8a18\u8ff0\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u3001API\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u751f\u6210\n- \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u5143\u306b\u3057\u305f\u3001\u7c21\u6613API mock\u30b5\u30fc\u30d0\u751f\u6210\n- 12\u306e\u5f62\u5f0f\u3001\u8a00\u8a9e\u306b\u3088\u308bcode samples\u306e\u751f\u6210\n- \u30c7\u30d0\u30c3\u30b0\u6a5f\u80fd\u3068\u81ea\u52d5\u30c6\u30b9\u30c8\uff08syntax validation\uff09\n- github\u3068\u306e\u9023\u643a\n- \u30d5\u30ea\u30fc\u30df\u30a2\u30e0\u30e2\u30c7\u30eb\n\n### apiary\u306b\u3088\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4f8b\n\n- [OneNote API](http://dev.onenote.com/dev/docs)\n- [GoodData API](http://docs.gooddata.apiary.io/)\n\n### apiary doc\u306e\u4f7f\u3044\u65b9\n\n![](http://s3img.jp/20140921144027.png)\n\n1. \u78ba\u8a8d\u3057\u305f\u3044\u3001API\u306e\u30bf\u30a4\u30c8\u30eb\uff08\u4e0a\u306e\u56f3\u3067\u8a00\u3046\u3001\u300c\u904b\u8cc3\u300d\uff09\u3092\u9078\u629e\n1. `Response`\u3092\u30af\u30ea\u30c3\u30af\n1. \u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u30b9\u30cb\u30da\u30c3\u30c8\u306e\u8a00\u8a9e\u3092\u9078\u629e\n1. \u74b0\u5883\u3092\u9078\u629e\u3002\u300cProduction\u300d\u3092\u9078\u3076\u3068\u672c\u756aURL\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u98db\u3070\u3059\u3002\u300cMockServer\u300d\u3092\u9078\u629e\u3059\u308c\u3070\u3001example response\u3092\u8fd4\u3059\n1. `Example`\u3092\u62bc\u3059\u3068\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5165\u529b\u753b\u9762\u306b\u306a\u308b\u3002\u6771\u4eac\u30e1\u30c8\u30edAPI\u306e\u5834\u5408\u3001ConsumerKey\u306e\u5165\u529b\u304cmust\u306a\u306e\u3067\u3001\u5c11\u306a\u304f\u3068\u3082\u3053\u3053\u306f\u66f8\u304d\u63db\u3048\u308b\n1. `Call Resource`\u3092\u62bc\u3059\u3068\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u5e30\u3063\u3066\u304f\u308b\n1. `CodeSnippet`\u3092\u62bc\u3059\u3068\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8868\u793a\u3059\u308b\n\n### Traffic Inspector\n\n> ![](http://s3img.jp/20140922005058.png)\n> \u5f15\u7528: [Apiary \u2014 Home](http://apiary.io/)\n\n\u7c21\u6613\u7684\u306a\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u30e2\u30cb\u30bf\u30fc\u3082\u3042\u308b\u306e\u3067\u3001\u30e2\u30c3\u30af\u30b5\u30fc\u30d0\u5411\u3051\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u306e\u306b\u5f79\u7acb\u3064\n\n## \u304a\u307e\u3051(\u30e1\u30c8\u30ed\u306e\u904b\u884c\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9)\n\n\u4ee5\u4e0b\u3001\u73fe\u5728\u306e\u904b\u884c\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u309211\u306e\u5f62\u5f0f\u3001\u8a00\u8a9e\u3067\u8868\u73fe\u3059\u308b\u3002\n`xxxxxxxxx`\u3068\u306a\u3063\u3066\u3044\u308b\u7b87\u6240\u306f\u3001\u81ea\u8eab\u3067\u53d6\u5f97\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3068\u5dee\u3057\u66ff\u3048\u308b\n\n### cURL\n\n```sh:cURL_Request\ncurl --include \\\nhttps://private-1e992-tokyometroopendataapi.apiary-mock.com/api/v2/datapoints?rdf:type=odpt:TrainInformation&acl:consumerKey=xxxxxxxxxxxxxxxx\n```\n### JavaScript\n```javascript:JavaScript_Request\nvar Request = new XMLHttpRequest();\n\nRequest.open('GET', 'https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx');\n\nRequest.onreadystatechange = function () {\n  if (this.readyState === 4) {\n    console.log('Status:', this.status);\n    console.log('Headers:', this.getAllResponseHeaders());\n    console.log('Body:', this.responseText);\n  }\n};\n\nRequest.send(JSON.stringify(body));\n```\n\n### Node.js\n\n```node:Node.js_Request\nvar request = require('request');\n\nrequest('https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&#38;acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx', function (error, response, body) {\n  console.log('Status:', response.statusCode);\n  console.log('Headers:', JSON.stringify(response.headers));\n  console.log('Response:', body);\n});\n```\n\n### Python\n```pyhon:Python_Request\nfrom urllib2 import Request, urlopen\n\nrequest = Request('https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx')\n\nresponse_body = urlopen(request).read()\nprint response_body\n```\n### PHP\n```php:PHP_Request\n<?php\n$ch = curl_init();\n\ncurl_setopt($ch, CURLOPT_URL, \"https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&#38;acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx\");\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);\ncurl_setopt($ch, CURLOPT_HEADER, FALSE);\n\n$response = curl_exec($ch);\ncurl_close($ch);\n\nvar_dump($response);\n```\n\n### Ruby\n```ruby:Ruby_Request\nrequire 'rubygems' if RUBY_VERSION < '1.9'\nrequire 'rest_client'\n\nresponse = RestClient.get 'https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx'\nputs response\n```\n\n### C\uff03\n```c:C#_Request\n//Common testing requirement. If you are consuming an API in a sandbox/test region, uncomment this line of code ONLY for non production uses.\n//System.Net.ServicePointManager.ServerCertificateValidationCallback = delegate { return true; };\n\nvar request = System.Net.WebRequest.Create(\"https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&#38;acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx\") as System.Net.HttpWebRequest;\nrequest.KeepAlive = true;\n\nrequest.Method = \"GET\";\nrequest.ContentLength = 0;\nstring responseContent=null;\nusing (var response = request.GetResponse() as System.Net.HttpWebResponse) {\n  using (var reader = new System.IO.StreamReader(response.GetResponseStream())) {\n    responseContent = reader.ReadToEnd();\n  }\n}\n```\n### Vasual Basic\n```visualbasic:VasualBasic_Request\nDim request = TryCast(System.Net.WebRequest.Create(\"https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&#38;acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx\"), System.Net.HttpWebRequest)\n\nrequest.Method = \"GET\"\n\nrequest.ContentLength = 0\nDim responseContent As String\nUsing response = TryCast(request.GetResponse(), System.Net.HttpWebResponse)\n  Using reader = New System.IO.StreamReader(response.GetResponseStream())\n    responseContent = reader.ReadToEnd()\n  End Using\nEnd Using\n```\n\n\n### Groovy\n```groovy:Groovy_Request\nimport groovyx.net.http.RESTClient\nimport static groovyx.net.http.ContentType.JSON\nimport groovy.json.JsonSlurper\nimport groovy.json.JsonOutput\n\n@Grab (group = 'org.codehaus.groovy.modules.http-builder', module = 'http-builder', version = '0.5.0')\ndef client = new RESTClient(\"https://api.tokyometroapp.jp/api/v2\")\n\nresponse = client.get( path : \"/datapoints?rdf:type=odpt:TrainInformation&#38;acl%3AconsumerKey={acl%3AconsumerKey}\")\n\nprintln(\"Status:\" + response.status)\nif (response.data) {\n  println(\"Content Type: \" + response.contentType)\n  println(\"Body:\\n\" + JsonOutput.prettyPrint(JsonOutput.toJson(response.data)))\n}\n```\n\n\n### Objective-C\n\n```c:Objective-C_Request\nNSURL *URL = [NSURL URLWithString:@\"https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&#38;acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx\"];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:URL];\n[request setHTTPMethod:@\"GET\"];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *task = [session dataTaskWithRequest:request\n                                        completionHandler:\n                              ^(NSData *data, NSURLResponse *response, NSError *error) {\n\n                                  if (error) {\n                                      // Handle error...\n                                      return;\n                                  }\n\n                                  if ([response isKindOfClass:[NSHTTPURLResponse class]]) {\n                                      NSLog(@\"Response HTTP Status code: %ld\\n\", (long)[(NSHTTPURLResponse *)response statusCode]);\n                                      NSLog(@\"Response HTTP Headers:\\n%@\\n\", [(NSHTTPURLResponse *)response allHeaderFields]);\n                                  }\n\n                                  NSString* body = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];\n                                  NSLog(@\"Response Body:\\n%@\\n\", body);\n                              }];\n[task resume];\n```\n\n### Swift\n```swift:Swift_Request\n// NOTE: Uncommment following two lines for use in a Playground\n// import XCPlayground\n// XCPSetExecutionShouldContinueIndefinitely()\n\nvar url = NSURL(string: \"https://api.tokyometroapp.jp/api/v2/datapoints?rdf:type=odpt:TrainInformation&#38;acl:consumerKey=xxxxxxxxxxxxxxxxxxxxxxxxxx\")\nvar request = NSMutableURLRequest(URL: url)\n\nrequest.HTTPMethod = \"GET\"\n\nvar session = NSURLSession.sharedSession()\nvar task = session.dataTaskWithRequest(request) { (data: NSData!, response: NSURLResponse!, error: NSError!) in\n\n    if (error) {\n        // Handle error...\n        return\n    }\n\n    println(error)\n    println(response)\n    println(NSString(data: data, encoding: NSUTF8StringEncoding))\n}\n\ntask.resume()\n```\n\n### Response(JSON)\n\n\u5e30\u3063\u3066\u304f\u308b\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u3001\u4ee5\u4e0b\u3068\u306a\u308b\n\n```json:JSON_Response\n[\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE9\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Tozai\",\n    \"odpt:timeOfOrigin\": \"2014-09-16T12:36:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE7\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Marunouchi\",\n    \"odpt:timeOfOrigin\": \"2014-09-19T20:30:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE8\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Namboku\",\n    \"odpt:timeOfOrigin\": \"2014-09-18T17:30:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE6\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Hibiya\",\n    \"odpt:timeOfOrigin\": \"2014-08-30T23:30:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE3\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Fukutoshin\",\n    \"odpt:timeOfOrigin\": \"2014-09-21T17:30:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE5\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Hanzomon\",\n    \"odpt:timeOfOrigin\": \"2014-09-17T22:56:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE4\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Ginza\",\n    \"odpt:timeOfOrigin\": \"2014-09-16T09:15:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BEA\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Yurakucho\",\n    \"odpt:timeOfOrigin\": \"2014-09-16T23:00:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  },\n  {\n    \"@context\": \"http://vocab.tokyometroapp.jp/context_odpt_TrainInformation.json\",\n    \"@id\": \"urn:ucode:_00001C000000000000010000030C3BE2\",\n    \"dc:date\": \"2014-09-22T00:35:03+09:00\",\n    \"dct:valid\": \"2014-09-22T00:40:03+09:00\",\n    \"odpt:operator\": \"odpt.Operator:TokyoMetro\",\n    \"odpt:railway\": \"odpt.Railway:TokyoMetro.Chiyoda\",\n    \"odpt:timeOfOrigin\": \"2014-09-21T13:00:00+09:00\",\n    \"odpt:trainInformationText\": \"\u73fe\u5728\u3001\u5e73\u5e38\u3069\u304a\u308a\u904b\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\",\n    \"@type\": \"odpt:TrainInformation\"\n  }\n]    \n```\n\n## \u307e\u3068\u3081\n\n- \u3084\u306f\u308a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3042\u308b\u3068\u3001\u4ed6\u306e\u30e1\u30f3\u30d0\u30fc\u3068\u306e\u60c5\u5831\u5171\u6709\u304c\u3057\u3084\u3059\u3044\n- \u306a\u306b\u3088\u308a\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u4f5c\u3063\u3066\u3044\u308b\u672c\u4eba\u304c\u4e00\u756a\u7406\u89e3\u304c\u3059\u3059\u3080\n- apiary\u4e0a\u3067\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067API blueprint\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30c1\u30a7\u30c3\u30af\u304c\u5165\u308b\u306e\u3067\u3001\u69cb\u6587\u30a8\u30e9\u30fc\u3092\u3059\u3050\u306b\u767a\u898b\u3067\u304d\u308b\u3002\n- \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30bd\u30fc\u30b9\u306fgithub\u306b\u3042\u308b\u306e\u3067\u3001\u6c17\u8efd\u306b\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u3082\u3089\u3048\u305d\u3046\u3067\u3088\u3044\n- \u66f8\u304d\u6163\u308c\u305fmarkdown\u3067\u304b\u3051\u308b\u306e\u3067\u3001\u4f5c\u6210\u5de5\u6570\u306f\u9ad8\u304f\u306a\u3044\u3002\u30e2\u30c3\u30af\u30b5\u30fc\u30d0\u3082\u4f5c\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u3001\u7cbe\u795e\u885b\u751f\u4e0a\u3082\u3088\u3044(\u7121\u99c4\u306a\u4f5c\u696d\u3092\u3057\u3066\u3044\u308b\u611f\u306b\u306f\u8972\u308f\u308c\u306a\u3044)\n\nAPI\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001\u8eab\u306e\u56de\u308a\u3067\u306f\u5272\u3068\u8efd\u8996\u3055\u308c\u3066\u3044\u308b\u611f\u3042\u308b\u3051\u3069\u3001\u5186\u6ed1\u306a\u958b\u767a\u306e\u70ba\u306b\u3059\u3054\u304f\u91cd\u8981\u3060\u3068\u601d\u3046\u3002apiblueprint\u3067\u306a\u304f\u3066\u3082\u3044\u3044\u306e\u3067\u3001\u3053\u308c\u3060\uff01\u3068\u3044\u3046\u6a19\u6e96\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u3001\u306f\u3084\u304f\u6c7a\u307e\u3063\u3066\u6b32\u3057\u3044\n\n\u30e1\u30c8\u30edAPI\u306e\u5168\u4f53\u50cf\u304c\u308f\u304b\u3063\u305f\u3068\u3053\u308d\u3067\u3001\u6b21\u306f\u5404API\u306e\u8a73\u7d30\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u691c\u8a3c\u3057\u3066\u3044\u304d\u305f\u3044\n"}