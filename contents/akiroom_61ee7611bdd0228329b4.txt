{"context": "\u7d44\u307f\u5408\u308f\u305b\u3092\u5c55\u958b\u3059\u308bcombination-extractor\u3068\u3044\u3046Rubygem\u3092\u4f5c\u308a\u307e\u3057\u305f\n\nhttps://github.com/akiroom/combination-extractor\nhttps://rubygems.org/gems/combination-extractor\n\n\n\u5b9f\u884c\u65b9\u6cd5\n# \u3053\u3093\u306a\u611f\u3058\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u6e21\u3059\u3068\u3001\n# {\n#   fruit: ['apple', 'orange'],\n#   city: ['NewYork', 'London', 'Tokyo']\n# }\n\nCombinationExtractor.extract({fruit: ['apple', 'orange'], city: ['NewYork', 'London', 'Tokyo']})\n=> [{:fruit=>\"apple\", :city=>\"NewYork\"}, {:fruit=>\"apple\", :city=>\"London\"}, {:fruit=>\"apple\", :city=>\"Tokyo\"},\n    {:fruit=>\"orange\", :city=>\"NewYork\"}, {:fruit=>\"orange\", :city=>\"London\"}, {:fruit=>\"orange\", :city=>\"Tokyo\"}]\n\n# \u3053\u3093\u306a\u611f\u3058\u306b\u5c55\u958b\u3057\u3066\u304f\u308c\u307e\u3059\n# [\n#   {:fruit=>\"apple\", :city=>\"NewYork\"},\n#   {:fruit=>\"apple\", :city=>\"London\"},\n#   {:fruit=>\"apple\", :city=>\"Tokyo\"},\n#   {:fruit=>\"orange\", :city=>\"NewYork\"},\n#   {:fruit=>\"orange\", :city=>\"London\"},\n#   {:fruit=>\"orange\", :city=>\"Tokyo\"}\n# ]\n\n\n\n\u4f55\u304c\u5b09\u3057\u3044\u306e\u304b\nRspec\u3067\u540c\u3058\u30d1\u30bf\u30fc\u30f3\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u4e00\u90e8\u3060\u3051\u5909\u308f\u308b\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u6642\u306b\u3001context\u306e\u5165\u308c\u5b50\u304c\u7d9a\u3044\u3066\u3064\u3089\u304b\u3063\u305f\u306e\u3067\u3001context-extractor\u3092\u3064\u304f\u308a\u307e\u3057\u305f\u3002\ndef example_similar_to(user_hash)\n  user_hash[:birthday] == Time.new(1988, 12, 30) &&\n    user_hash[:gender] == :male\nend\n\ndescribe 'About example example_similar_to method' do\n  let(:nickname) { nil }\n  let(:gender) { nil }\n  let(:birthday) { nil }\n  let(:user) { { nickname: nickname, gender: gender, birthday: birthday } }\n\n  user_condition = {\n    nickname: ['John', 'Ken', 'Jessie'],\n    gender: [:female, :male],\n    birthday: [Time.new(1988, 12, 30), Time.now]\n  }\n  # Get 2*2*3 = 12 patterns\n  pattern_list = CombinationExtractor.extract(user_condition)\n\n  pattern_list.each do |pattern|\n    describe \"user who is #{pattern.to_s}\" do\n      # NOTE: Set pattern to lazy evaluated variable\n      pattern.each { |key, value| let(key) { value } }\n\n      should_value = pattern[:gender] == :male && pattern[:birthday] == Time.new(1988, 12, 30)\n      it \"should return #{should_value}\" do\n        expect(example_similar_to(user)).to eq(should_value)\n      end\n    end\n  end\nend\n\n\nRspec\u306b\u95a2\u3057\u3066\u306f\u3082\u3063\u3068\u826f\u3044\u3084\u308a\u65b9\u304c\u4ed6\u306b\u3042\u308a\u305d\u3046\u306a\u6c17\u3082\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u30d1\u30c3\u3068\u63a2\u3057\u3066\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a\u306f\u305f\u307e\u306b\u3053\u306e\u3088\u3046\u306b\u5c55\u958b\u3059\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u7d44\u307f\u5408\u308f\u305b\u3092\u5c55\u958b\u3059\u308bcombination-extractor\u3068\u3044\u3046Rubygem\u3092\u4f5c\u308a\u307e\u3057\u305f\n\n- https://github.com/akiroom/combination-extractor\n- https://rubygems.org/gems/combination-extractor\n\n```rb:\u5b9f\u884c\u65b9\u6cd5\n# \u3053\u3093\u306a\u611f\u3058\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u6e21\u3059\u3068\u3001\n# {\n#   fruit: ['apple', 'orange'],\n#   city: ['NewYork', 'London', 'Tokyo']\n# }\n\nCombinationExtractor.extract({fruit: ['apple', 'orange'], city: ['NewYork', 'London', 'Tokyo']})\n=> [{:fruit=>\"apple\", :city=>\"NewYork\"}, {:fruit=>\"apple\", :city=>\"London\"}, {:fruit=>\"apple\", :city=>\"Tokyo\"},\n    {:fruit=>\"orange\", :city=>\"NewYork\"}, {:fruit=>\"orange\", :city=>\"London\"}, {:fruit=>\"orange\", :city=>\"Tokyo\"}]\n\n# \u3053\u3093\u306a\u611f\u3058\u306b\u5c55\u958b\u3057\u3066\u304f\u308c\u307e\u3059\n# [\n#   {:fruit=>\"apple\", :city=>\"NewYork\"},\n#   {:fruit=>\"apple\", :city=>\"London\"},\n#   {:fruit=>\"apple\", :city=>\"Tokyo\"},\n#   {:fruit=>\"orange\", :city=>\"NewYork\"},\n#   {:fruit=>\"orange\", :city=>\"London\"},\n#   {:fruit=>\"orange\", :city=>\"Tokyo\"}\n# ]\n```\n\n# \u4f55\u304c\u5b09\u3057\u3044\u306e\u304b\n\nRspec\u3067\u540c\u3058\u30d1\u30bf\u30fc\u30f3\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u4e00\u90e8\u3060\u3051\u5909\u308f\u308b\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u6642\u306b\u3001context\u306e\u5165\u308c\u5b50\u304c\u7d9a\u3044\u3066\u3064\u3089\u304b\u3063\u305f\u306e\u3067\u3001context-extractor\u3092\u3064\u304f\u308a\u307e\u3057\u305f\u3002\n\n```rb\ndef example_similar_to(user_hash)\n  user_hash[:birthday] == Time.new(1988, 12, 30) &&\n    user_hash[:gender] == :male\nend\n\ndescribe 'About example example_similar_to method' do\n  let(:nickname) { nil }\n  let(:gender) { nil }\n  let(:birthday) { nil }\n  let(:user) { { nickname: nickname, gender: gender, birthday: birthday } }\n\n  user_condition = {\n    nickname: ['John', 'Ken', 'Jessie'],\n    gender: [:female, :male],\n    birthday: [Time.new(1988, 12, 30), Time.now]\n  }\n  # Get 2*2*3 = 12 patterns\n  pattern_list = CombinationExtractor.extract(user_condition)\n\n  pattern_list.each do |pattern|\n    describe \"user who is #{pattern.to_s}\" do\n      # NOTE: Set pattern to lazy evaluated variable\n      pattern.each { |key, value| let(key) { value } }\n\n      should_value = pattern[:gender] == :male && pattern[:birthday] == Time.new(1988, 12, 30)\n      it \"should return #{should_value}\" do\n        expect(example_similar_to(user)).to eq(should_value)\n      end\n    end\n  end\nend\n```\n\n![](https://camo.githubusercontent.com/d782f75db9dfa46a801b5e5624d9dd0f6046f373/68747470733a2f2f692e6779617a6f2e636f6d2f34653866656564626138373262383465643430313634356632383230633836372e706e67)\n\nRspec\u306b\u95a2\u3057\u3066\u306f\u3082\u3063\u3068\u826f\u3044\u3084\u308a\u65b9\u304c\u4ed6\u306b\u3042\u308a\u305d\u3046\u306a\u6c17\u3082\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u30d1\u30c3\u3068\u63a2\u3057\u3066\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a\u306f\u305f\u307e\u306b\u3053\u306e\u3088\u3046\u306b\u5c55\u958b\u3059\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n", "tags": ["Ruby", "Gem", "RSpec"]}