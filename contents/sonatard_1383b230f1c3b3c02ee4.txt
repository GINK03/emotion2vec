{"context": "\n\n\u4f7f\u3044\u65b9\n\n1. \u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u53d6\u5f97\n\ngo get -v github.com/ChimeraCoder/anaconda\n\n\n2. \u30e6\u30fc\u30b6\u306e\u4e00\u89a7\u3092\u8a18\u8f09\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n\ncat USERS_FILE.txt\nuserA\nuserB\nuserC\n\n\n3. \u5b9f\u884c\n\n\u7b2c1\u5f15\u6570\u306f\u4f5c\u6210\u3059\u308b\u30ea\u30b9\u30c8\u306e\u540d\u524d\u3001\u7b2c2\u5f15\u6570\u306f\u4f5c\u6210\u3059\u308b\u30ea\u30b9\u30c8\u304c\u516c\u958b\u304b\u975e\u516c\u958b\u304b\u3001\u7b2c3\u5f15\u6570\u306f\u30e6\u30fc\u30b6\u306e\u4e00\u89a7\u3092\u8a18\u8f09\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\ngo run main.go NEWLIST_NAME NEWLIST_MODE(puclic or private) USERS_FILE.txt\n\nTwitter\u306eAPI Key\u306f\u5404\u81ea\u53d6\u5f97\u3057\u3066\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\npackage main\n\nimport (\n    \"bufio\"\n    \"fmt\"\n    \"net/url\"\n    \"os\"\n    \"time\"\n\n    \"github.com/ChimeraCoder/anaconda\"\n)\n\n// Usage\n// go get -v github.com/ChimeraCoder/anaconda\n//\n// cat USERS_FILE.txt\n// userA\n// userB\n// ...\n//\n// go run main.go NEWLIST_NAME NEWLIST_MODE(puclic or private) USERS_FILE.txt\n\nvar (\n    consumerKey       = \"\"\n    consumerSecret    = \"\"\n    accessToken       = \"\"\n    accessTokenSecret = \"\"\n)\n\nfunc main() {\n    anaconda.SetConsumerKey(consumerKey)\n    anaconda.SetConsumerSecret(consumerSecret)\n    api := anaconda.NewTwitterApi(accessToken, accessTokenSecret)\n\n    if len(os.Args) != 4 {\n        fmt.Println(\"usage: go run main.go NEWLIST_NAME NEWLIST_MODE(puclic or private) USERS_FILE.txt\")\n        os.Exit(1)\n    }\n\n    listName := os.Args[1]\n    fp, err := os.Open(os.Args[3])\n    if err != nil {\n        panic(err)\n    }\n    defer fp.Close()\n\n    v := url.Values{}\n    v.Set(\"mode\", os.Args[2])\n    list, err := api.CreateList(listName, \"\", v)\n    if err != nil {\n        panic(err)\n    }\n    fmt.Printf(\"Create success %v\\n\", list.Name)\n\n    scanner := bufio.NewScanner(fp)\n    if err := scanner.Err(); err != nil {\n        panic(err)\n    }\n\n    fmt.Println(\"Wait 5 sec...\")\n    time.Sleep(time.Second * 5)\n\n    for scanner.Scan() {\n        user := scanner.Text()\n        fmt.Printf(\"add %v to %v\\n\", user, listName)\n\n        _, err = api.AddUserToList(user, list.Id, nil)\n        if err != nil {\n            panic(err)\n        }\n    }\n}\n\n## \u4f7f\u3044\u65b9\n\n- 1. \u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u53d6\u5f97\n\n```\ngo get -v github.com/ChimeraCoder/anaconda\n```\n\n- 2. \u30e6\u30fc\u30b6\u306e\u4e00\u89a7\u3092\u8a18\u8f09\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n\n```\ncat USERS_FILE.txt\nuserA\nuserB\nuserC\n```\n\n- 3. \u5b9f\u884c\n\n\u7b2c1\u5f15\u6570\u306f\u4f5c\u6210\u3059\u308b\u30ea\u30b9\u30c8\u306e\u540d\u524d\u3001\u7b2c2\u5f15\u6570\u306f\u4f5c\u6210\u3059\u308b\u30ea\u30b9\u30c8\u304c\u516c\u958b\u304b\u975e\u516c\u958b\u304b\u3001\u7b2c3\u5f15\u6570\u306f\u30e6\u30fc\u30b6\u306e\u4e00\u89a7\u3092\u8a18\u8f09\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\n\n```\ngo run main.go NEWLIST_NAME NEWLIST_MODE(puclic or private) USERS_FILE.txt\n```\n\n\nTwitter\u306eAPI Key\u306f\u5404\u81ea\u53d6\u5f97\u3057\u3066\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \n\n```go\npackage main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"net/url\"\n\t\"os\"\n\t\"time\"\n\n\t\"github.com/ChimeraCoder/anaconda\"\n)\n\n// Usage\n// go get -v github.com/ChimeraCoder/anaconda\n//\n// cat USERS_FILE.txt\n// userA\n// userB\n// ...\n//\n// go run main.go NEWLIST_NAME NEWLIST_MODE(puclic or private) USERS_FILE.txt\n\nvar (\n\tconsumerKey       = \"\"\n\tconsumerSecret    = \"\"\n\taccessToken       = \"\"\n\taccessTokenSecret = \"\"\n)\n\nfunc main() {\n\tanaconda.SetConsumerKey(consumerKey)\n\tanaconda.SetConsumerSecret(consumerSecret)\n\tapi := anaconda.NewTwitterApi(accessToken, accessTokenSecret)\n\n\tif len(os.Args) != 4 {\n\t\tfmt.Println(\"usage: go run main.go NEWLIST_NAME NEWLIST_MODE(puclic or private) USERS_FILE.txt\")\n\t\tos.Exit(1)\n\t}\n\n\tlistName := os.Args[1]\n\tfp, err := os.Open(os.Args[3])\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer fp.Close()\n\n\tv := url.Values{}\n\tv.Set(\"mode\", os.Args[2])\n\tlist, err := api.CreateList(listName, \"\", v)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tfmt.Printf(\"Create success %v\\n\", list.Name)\n\n\tscanner := bufio.NewScanner(fp)\n\tif err := scanner.Err(); err != nil {\n\t\tpanic(err)\n\t}\n\n\tfmt.Println(\"Wait 5 sec...\")\n\ttime.Sleep(time.Second * 5)\n\n\tfor scanner.Scan() {\n\t\tuser := scanner.Text()\n\t\tfmt.Printf(\"add %v to %v\\n\", user, listName)\n\n\t\t_, err = api.AddUserToList(user, list.Id, nil)\n\t\tif err != nil {\n\t\t\tpanic(err)\n\t\t}\n\t}\n}\n```\n", "tags": ["Go", "Twitter", "TwitterAPI"]}