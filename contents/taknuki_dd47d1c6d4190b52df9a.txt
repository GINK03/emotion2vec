{"context": " More than 1 year has passed since last update.Amazon API Gateway\u3068AWS Lambda\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u5b9f\u73fe\u3059\u308b\u4ef6\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002Python\u3067\u3002\n\nAPI Gateway\n\nAPI Gateway\u3068\u306f\nAPI Gateway\u306fRestful WebAPI\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306b\u3001\u30e9\u30c3\u30d1\u30fc\u306b\u306a\u3063\u3066\u304f\u308c\u308b\u30b5\u30fc\u30d3\u30b9\u3002\n\u81ea\u8eab\u3082CloudFront\u3068\u7d50\u5408\u3055\u308c\u3066\u3044\u308b\u3068\u3044\u3046\u304b\u3001\u305d\u306e\u30e9\u30c3\u30d1\u30fc\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002CloudFront\u3068\u3044\u3048\u3070CDN\u3068\u3044\u3046\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u304c\u3001AWS WAF\u3082CloudFront\u3068\u7d50\u5408\u3055\u308c\u3066\u3044\u308b\u3042\u305f\u308a\u3001CDN\u306b\u9650\u3089\u305aLayer7\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b5\u30fc\u30d3\u30b9\u3068\u3044\u3046\u4f4d\u7f6e\u3065\u3051\u306b\u306a\u3063\u305f\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002CDN\u3060\u3051\u3060\u3068\u7af6\u5408\u3082\u591a\u304f\u3001\u3042\u308b\u610f\u5473\u30b3\u30e2\u30c7\u30a3\u30c6\u30a3\u5316\u3057\u3066\u3044\u304d\u305d\u3046\u3067\u3059\u3057\u306d\u3002\n\nAPI Gateway\u306e\u69cb\u6210\u8981\u7d20\n\nAPI\n\n\u4f5c\u6210\u3059\u308bAPI(\u306e\u5668)\u3002\n\n\nResource\n\n\nAPI\u306e\u30d1\u30b9\u3002\u3044\u308f\u3086\u308b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u5b9a\u7fa9\u3067\u3059\u3002\nexample.com/hoge/fuga\u306ehoge\u3068\u304bfuga\u306e\u90e8\u5206\u3002\n(\u5f53\u305f\u308a\u524d\u3060\u304c)example.com/hoge/fuga\u306efuga\u3068example.com/fuga\u306efuga\u306f\u5225\u7269\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\"var\"\u3067\u306f\u306a\u304f\"{var}\"\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u3068\u3001\u30d1\u30b9\u5909\u6570\u306b\u306a\u308a\u307e\u3059\u3002\n\n\nMethod\n\n\nHTTP Method(GET/POST/PUT, etc.)\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u4e00\u3064\u306eResource\u306b\u5bfe\u3057\u3066\u8907\u6570\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\n\n\nIntegration\n\n\nAPI Gateway\u304b\u3089\u898b\u305fBackend\u306e\u5b9a\u7fa9\u3002CloudFront\u306eOrigin\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u304b\u3068\u3002\nMethod\u30681\u5bfe1\nHTTP\u3067\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u307b\u304b\u3001\u672c\u984c\u306eLambda\u3082\u8d77\u52d5\u53ef\u80fd\u3067\u3059\u3002\nMethod\u304b\u3089\u6e21\u3055\u308c\u308bRequest Body\u3092\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3002\n\n\ncontent-type\u6bce\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5909\u63db\u306f\u307e\u3055\u304b\u306eVTL(Velocity Template Language)\u3067\u66f8\u304d\u307e\u3059\u3002\n\n\n\n\nIntegration Response\n\n\nIntegration\u304b\u3089\u306eResponse(Status Code\u3001Response Body)\u3068\u4f5c\u6210\u3059\u308bAPI\u306eResponse\u3092\u5bfe\u5fdc\u3065\u3051\u307e\u3059\u3002\n\u4e00\u3064\u306bMethod\u306b\u5bfe\u3057\u3066\u8907\u6570\u6307\u5b9a\u53ef\u80fd(\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3057\u305f\u3044\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306e\u6570\u3060\u3051)\u3002\nStatus Code\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3068\u3001Response Body\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5909\u63db\u304c\u53ef\u80fd\u3002\n\n\nMethod Response\n\n\nIntegration Response\u306eStatus Code\u3068Response Model(Json Schema)\u3092\u7d10\u3065\u3051\u308b\n\u521d\u671f\u72b6\u614b\u3067\u4e8c\u3064\u306eModel\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\nEmpty(\u30d1\u30b9\u30b9\u30eb\u30fc\u7528)\nError(\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u7528)\n\n\n\n\n\n\n\u30b5\u30f3\u30d7\u30eb\n\nAPI Gateway\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067Python\u304b\u3089API\u3092\u4f5c\u6210\u3002\u5192\u982d\u306eregion, function, role\u3092\u9069\u5b9c\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\ncreateapi.py\n# -*- coding: utf-8 -*-\n\nimport boto3\nclient = boto3.client('apigateway')\nregion = 'ap-northeast-1'\nfunction = 'arn:aws:lambda:ap-northeast-1:AWS_ACCOUNT_ID:function:YOUR_LAMBDA_FUNCTION'\nrole = 'arn:aws:iam::AWS_ACCOUNT_ID:role/YOUR_IAM_ROLE_FOR_INVOCATION'\n\n\ndef create_api():\n    rest_api = client.create_rest_api(\n        name='sample01',\n        description='sample api',\n    )\n    return rest_api['id']\n\n\ndef create_resource(rest_api_id):\n    for resource in client.get_resources(\n        restApiId=rest_api_id\n    )['items']:\n        if resource['path'] == '/':\n            path_root_id = resource['id']\n    new_resource = client.create_resource(\n        restApiId=rest_api_id,\n        parentId=path_root_id,\n        pathPart='{hoge}',\n    )\n    return new_resource['id']\n\n\ndef setup_method(rest_api_id, resource_id):\n    client.put_method(\n        restApiId=rest_api_id,\n        resourceId=resource_id,\n        httpMethod='GET',\n        authorizationType='NONE',\n    )\n    uri = 'arn:aws:apigateway:' + region + ':lambda:path/2015-03-31/functions/' + function + '/invocations'\n    client.put_integration(\n        restApiId=rest_api_id,\n        resourceId=resource_id,\n        httpMethod='GET',\n        type='AWS',\n        integrationHttpMethod='POST',\n        uri=uri,\n        credentials=role,\n        requestTemplates={\n            'application/json': get_request_template()\n        },\n    )\n    client.put_integration_response(\n        restApiId=rest_api_id,\n        resourceId=resource_id,\n        httpMethod='GET',\n        statusCode='200',\n        responseTemplates={\n            'application/json': '',\n        },\n    )\n    client.put_method_response(\n        restApiId=rest_api_id,\n        resourceId=resource_id,\n        httpMethod='GET',\n        statusCode='200',\n        responseModels={\n            'application/json': 'Empty',\n        },\n    )\n    client.put_integration_response(\n        restApiId=rest_api_id,\n        resourceId=resource_id,\n        httpMethod='GET',\n        statusCode='400',\n        selectionPattern='^\\[400:.*',\n        responseTemplates={\n            'application/json': get_response_template(),\n        },\n    )\n    client.put_method_response(\n        restApiId=rest_api_id,\n        resourceId=resource_id,\n        httpMethod='GET',\n        statusCode='400',\n        responseModels={\n            'application/json': 'Error',\n        },\n    )\n\n\ndef get_request_template():\n    \"\"\"\n    ref. http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html\n    \"\"\"\n    return \"\"\"\n{\n  \"pathParams\": {\n#foreach ($key in $input.params().path.keySet())\n    \"$key\": \"$util.escapeJavaScript($input.params().path.get($key))\"#if ($foreach.hasNext),#end\n#end\n  }\n}\n\"\"\"\n\n\ndef get_response_template():\n    \"\"\"\n    ref. http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html\n    \"\"\"\n    return \"\"\"\n#set($data = $input.path('$'))\n{\n  \"message\" : \"${data.errorMessage}\"\n}\n\"\"\"\n\n\ndef deploy(rest_api_id):\n    client.create_deployment(\n        restApiId=rest_api_id,\n        stageName='snapshot',\n        stageDescription='snapshot stage',\n    )\n    client.update_stage(\n        restApiId=rest_api_id,\n        stageName='snapshot',\n        patchOperations=[\n            {\n                'op': 'replace',\n                'path': '/*/*/logging/loglevel',\n                'value': 'INFO',\n            },\n        ],\n    )\n\nif __name__ == '__main__':\n    rest_api_id = create_api()\n    resource_id = create_resource(rest_api_id)\n    setup_method(rest_api_id, resource_id)\n    deploy(rest_api_id)\n    api_url = 'https://' + rest_api_id + '.execute-api.' + region + '.amazonaws.com/snapshot/'\n    print 'OK : {0}'.format(api_url + 'hoge')\n    print 'NG : {0}'.format(api_url + 'fuga')\n\n\n\nLambda\nLambda\u306e\u30c7\u30d7\u30ed\u30a4\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u672c\u984c\u304b\u3089\u5916\u308c\u308b\u306e\u3067\u3001\u30b3\u30fc\u30c9\u3060\u3051\u3002\n\nlambdemo.py\n# -*- coding: utf-8 -*-\n\n\ndef lambda_handler(event, context):\n    hoge = event['pathParams']['hoge']\n    if hoge == 'hoge':\n        return {'message': 'hogehoge'}\n    else:\n        raise NotHogeError(hoge)\n\n\nclass NotHogeError(Exception):\n    def __init__(self, hoge):\n        self.hoge = hoge\n\n    def __str__(self):\n        return '[400:BadRequest] {0} is not hoge'.format(self.hoge)\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\u4e0a\u306ecreateapi.py\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001(\u30d0\u30b0\u3063\u3066\u306a\u3051\u308c\u3070)\u3053\u3093\u306a\u611f\u3058\u3067\u4e8c\u3064URL\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\ncreateapi.py\u306e\u5b9f\u884c\u7d50\u679c\nOK : https://xxxxx.execute-api.somewhere.amazonaws.com/snapshot/hoge\nNG : https://xxxxx.execute-api.somewhere.amazonaws.com/snapshot/fuga\n\n\nOK\u306e\u65b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\n\nOK\n$ curl https://xxxxx.execute-api.ap-northeast-1.amazonaws.com/snapshot/hoge\n{\"message\": \"hogehoge\"}\n\n\nNG\u306e\u65b9\u3060\u3068\u3001\u6012\u3089\u308c\u307e\u3059\u3002\n\nNG\n$ curl https://xxxxx.execute-api.ap-northeast-1.amazonaws.com/snapshot/fuga  -w '%{http_code}\\n'\n{\n  \"message\" : \"[400:BadRequest] fuga is not hoge\"\n}\n400\n\n\n\n\u8aac\u660e\n\nIntegration\n\nLambda\u306eURI\n\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3068\u306a\u308bLambda\u306eURI\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u8907\u96d1\u3067\u3059\u304c\u4ed5\u69d8\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u3068Lambda Function ARN\u304b\u3089\u6c7a\u307e\u308a\u307e\u3059\u3002\n\u6700\u5f8c\u306e\u300cinvocations\u300d\u3092\u629c\u304b\u3057\u3066\u3044\u308b\u3068\u300c500 internal server error\u300d\u3092\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u5730\u5473\u306a\u306f\u307e\u308a\u30dd\u30a4\u30f3\u30c8\u3002\n\nURI\u306e\u4f5c\u308a\u65b9\nuri = 'arn:aws:apigateway:' + region + ':lambda:path/2015-03-31/functions/' + function + '/invocations'\n\n\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5909\u63db\nVelocity\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3063\u3066Lambda\u7528\u306e\u30ea\u30af\u30a8\u30b9\u30c8(json)\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u4f7f\u7528\u53ef\u80fd\u306a\u5909\u6570\u306f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3057\u3066\u307e\u3059\u304c\u3001\u5b9f\u904b\u7528\u3067\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u5916\u51fa\u3057\u3059\u308b\u306e\u304c\u826f\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nrequest_template.vm\n{\n  \"pathParams\": {\n#foreach ($key in $input.params().path.keySet())\n    \"$key\": \"$util.escapeJavaScript($input.params().path.get($key))\"#if ($foreach.hasNext),#end\n#end\n  }\n}\n\n\n\nLambda\u306e\u4f5c\u308a\u65b9\n\n\u30ea\u30af\u30a8\u30b9\u30c8\n\u4e0a\u8a18\u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5909\u63db\u3057\u305f\u30c7\u30fc\u30bf\u306fPython\u306e\u5834\u5408\u3001event\u306bdict\u3068\u3057\u3066\u5165\u3063\u3066\u307e\u3059\u3002\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u53d6\u5f97\nhoge = event['pathParams']['hoge']\n\n\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\nLambda\u304b\u3089\u306fAPI Gateway\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u969b\u306f\u3001return\u304braise\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\u6b63\u5e38\u7d42\u4e86\nreturn {'message': 'hogehoge'}\n\n\n\n\u7570\u5e38\u7d42\u4e86\nraise NotHogeError(hoge)\n\n\n\u6b21\u306b\u8aac\u660e\u3057\u307e\u3059\u304creturn\u3067\u8fd4\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306f\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9200\u3067\u8fd4\u308a\u307e\u3059\u3002\n(\u6b63\u78ba\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u304c\u3002\u3002\u3002)\n\nIntegration Response\nLambda\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n\u6b63\u898f\u8868\u73fe(\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u3059\u308b\u5834\u5408\u306f\u306a\u3057)\n\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\ncontent-type\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8(VTL)\n\u306e\u7d44\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u6307\u5b9a\u3057\u306a\u3044(''\u306b\u3059\u308b)\u5834\u5408\u3001lambda\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u305d\u306e\u307e\u307e\u5e30\u308a\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u306fMethod Response\u3067response model\u3092Empty\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092200\u3067\u8fd4\u3059\u3060\u3051\u306a\u3089\u7c21\u5358\u306a\u306e\u3067\u3059\u304c\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a8\u30e9\u30fc(400\u756a\u53f0)\u3084\u30b5\u30fc\u30d0\u30fc\u30a8\u30e9\u30fc(500\u756a\u53f0)\u3001\u3042\u308b\u3044\u306f\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u305f\u3044(300\u756a\u53f0)\u7b49\u3067\u8fd4\u3059\u3053\u3068\u3082\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u306f\u3001\u3069\u306e\u3088\u3046\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u6642\u306b\u3069\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306b\u3059\u308b\u306e\u304b\u3001\u6b63\u898f\u8868\u73fe\u3067\u5bfe\u5fdc\u3065\u3051\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u6b63\u898f\u8868\u73fe\u306f\u3069\u3053\u3092\u898b\u3066\u3044\u308b\u306e\u304b\n\u3053\u3053\u3067\u30b5\u30f3\u30d7\u30eb\u306eLambda\u3092\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3059\u3002\n\nreturn\u3057\u3066\u307f\u308b\u3068\nelse:\n        #raise NotHogeError(hoge)\n        return '[400:BadRequest] {0} is not hoge'.format(hoge)\n\n\n\n200\u3067\u8fd4\u3063\u3061\u3083\u3046\n$ curl https://xxxxx.execute-api.ap-northeast-1.amazonaws.com/snapshot/fuga -w '%{http_code}\\n'\n\"[400:BadRequest] fuga is not hoge\"200\n\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u304c200\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3002\u3002\n\u5b9f\u306fLambda handler\u306e\u8fd4\u308a\u5024\u3092\u898b\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3093\u3067\u3059\u306d\u3002\n\n\u3053\u308c\u3082\nreturn {'message' : '[400:BadRequest] {0} is not hoge'.format(hoge)}\n\n\n\n\u3053\u308c\u3082\u3060\u3081\nreturn {'errorMessage' : '[400:BadRequest] {0} is not hoge'.format(hoge)}\n\n\n\u8272\u3005\u3084\u3063\u3066\u305f\u3069\u308a\u7740\u3044\u305f\u306e\u304c\u3053\u308c\u3067\u3059\u3002\n\nexception.py\nclass NotHogeError(Exception):\n    def __init__(self, hoge):\n        self.hoge = hoge\n\n    def __str__(self):\n        \"\"\"\u3053\u3053\uff01\"\"\"\n        return '[400:BadRequest] {0} is not hoge'.format(self.hoge)\n\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u5909\u3048\u305f\u3044\u3068\u304d\u306f\u4f8b\u5916\u3092\u6295\u3052\u3088\u3046\u3068\u3044\u3046\u3053\u3068\u3089\u3057\u3044\u3067\u3059\u3002\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5909\u63db\n\u6b63\u5e38\u7cfb\u306e\u5834\u5408\u306fLambda\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30d1\u30b9\u30b9\u30eb\u30fc\u3067\u8fd4\u305b\u3070\u3088\u3044\u306e\u3067\u3059\u304c\u3001json\u3067\u306f\u306a\u304fXML\u3084HTML\u3067\u8fd4\u3059\u5834\u5408\u306f\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u7570\u5e38\u7cfb\u306e\u5834\u5408\u3001\u30d1\u30b9\u30b9\u30eb\u30fc\u3060\u3068StackTrace\u3082\u8fd4\u3063\u3066\u3057\u307e\u3044\u60c5\u3051\u306a\u3044\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3060\u3051\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u5143\u3005Error\u3068\u3044\u3046Response Model\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u306b\u5408\u308f\u305b\u3066\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\n\nresponse_template.vm\n#set($data = $input.path('$'))\n{\n  \"message\" : \"${data.errorMessage}\"\n}\n\n\n\n\u307e\u3068\u3081\nAPI Gateway\u3063\u3066\u305d\u3093\u306a\u306b\u7c21\u5358\u3058\u3083\u306a\u304f\u306d\u3063\u3066\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u305d\u3082\u305d\u3082\u3061\u3083\u3093\u3068API\u8a2d\u8a08\u3059\u308b\u306a\u3089\u3053\u308c\u304f\u3089\u3044\u8003\u3048\u308d\u3063\u3066\u3053\u3068\u306a\u6c17\u3082\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n[Amazon API Gateway](https://aws.amazon.com/jp/api-gateway/)\u3068[AWS Lambda](https://aws.amazon.com/jp/lambda/)\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u5b9f\u73fe\u3059\u308b\u4ef6\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002Python\u3067\u3002\n\n# API Gateway\n## API Gateway\u3068\u306f\nAPI Gateway\u306fRestful WebAPI\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306b\u3001\u30e9\u30c3\u30d1\u30fc\u306b\u306a\u3063\u3066\u304f\u308c\u308b\u30b5\u30fc\u30d3\u30b9\u3002\n\u81ea\u8eab\u3082[CloudFront](https://aws.amazon.com/jp/cloudfront/)\u3068\u7d50\u5408\u3055\u308c\u3066\u3044\u308b\u3068\u3044\u3046\u304b\u3001\u305d\u306e\u30e9\u30c3\u30d1\u30fc\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002CloudFront\u3068\u3044\u3048\u3070CDN\u3068\u3044\u3046\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u304c\u3001[AWS WAF](https://aws.amazon.com/jp/waf/)\u3082CloudFront\u3068\u7d50\u5408\u3055\u308c\u3066\u3044\u308b\u3042\u305f\u308a\u3001CDN\u306b\u9650\u3089\u305aLayer7\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b5\u30fc\u30d3\u30b9\u3068\u3044\u3046\u4f4d\u7f6e\u3065\u3051\u306b\u306a\u3063\u305f\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002CDN\u3060\u3051\u3060\u3068\u7af6\u5408\u3082\u591a\u304f\u3001\u3042\u308b\u610f\u5473\u30b3\u30e2\u30c7\u30a3\u30c6\u30a3\u5316\u3057\u3066\u3044\u304d\u305d\u3046\u3067\u3059\u3057\u306d\u3002\n\n## API Gateway\u306e\u69cb\u6210\u8981\u7d20\n* API  \n    * \u4f5c\u6210\u3059\u308bAPI(\u306e\u5668)\u3002\n* Resource\n    * API\u306e\u30d1\u30b9\u3002\u3044\u308f\u3086\u308b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u5b9a\u7fa9\u3067\u3059\u3002\n    * example.com/hoge/fuga\u306ehoge\u3068\u304bfuga\u306e\u90e8\u5206\u3002\n    * (\u5f53\u305f\u308a\u524d\u3060\u304c)example.com/hoge/fuga\u306efuga\u3068example.com/fuga\u306efuga\u306f\u5225\u7269\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n    * \"var\"\u3067\u306f\u306a\u304f\"{var}\"\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u3068\u3001\u30d1\u30b9\u5909\u6570\u306b\u306a\u308a\u307e\u3059\u3002\n* Method\n    * HTTP Method(GET/POST/PUT, etc.)\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n    * \u4e00\u3064\u306eResource\u306b\u5bfe\u3057\u3066\u8907\u6570\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\n* Integration\n    * API Gateway\u304b\u3089\u898b\u305fBackend\u306e\u5b9a\u7fa9\u3002CloudFront\u306eOrigin\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u304b\u3068\u3002\n    * Method\u30681\u5bfe1\n    * HTTP\u3067\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u307b\u304b\u3001\u672c\u984c\u306eLambda\u3082\u8d77\u52d5\u53ef\u80fd\u3067\u3059\u3002\n    * Method\u304b\u3089\u6e21\u3055\u308c\u308bRequest Body\u3092\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3002\n        * content-type\u6bce\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n        * \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5909\u63db\u306f\u307e\u3055\u304b\u306eVTL([Velocity Template Language](https://velocity.apache.org/engine/releases/velocity-1.5/user-guide.html#velocity_template_language_vtl:_an_introduction))\u3067\u66f8\u304d\u307e\u3059\u3002\n* Integration Response\n    * Integration\u304b\u3089\u306eResponse(Status Code\u3001Response Body)\u3068\u4f5c\u6210\u3059\u308bAPI\u306eResponse\u3092\u5bfe\u5fdc\u3065\u3051\u307e\u3059\u3002\n    * \u4e00\u3064\u306bMethod\u306b\u5bfe\u3057\u3066\u8907\u6570\u6307\u5b9a\u53ef\u80fd(\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3057\u305f\u3044\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306e\u6570\u3060\u3051)\u3002\n    * Status Code\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3068\u3001Response Body\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5909\u63db\u304c\u53ef\u80fd\u3002\n* Method Response\n    * Integration Response\u306eStatus Code\u3068Response Model([Json Schema](http://json-schema.org/))\u3092\u7d10\u3065\u3051\u308b\n    * \u521d\u671f\u72b6\u614b\u3067\u4e8c\u3064\u306eModel\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n        * Empty(\u30d1\u30b9\u30b9\u30eb\u30fc\u7528)\n        * Error(\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u7528)\n\n# \u30b5\u30f3\u30d7\u30eb\n## API Gateway\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067Python\u304b\u3089API\u3092\u4f5c\u6210\u3002\u5192\u982d\u306eregion, function, role\u3092\u9069\u5b9c\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```createapi.py\n# -*- coding: utf-8 -*-\n\nimport boto3\nclient = boto3.client('apigateway')\nregion = 'ap-northeast-1'\nfunction = 'arn:aws:lambda:ap-northeast-1:AWS_ACCOUNT_ID:function:YOUR_LAMBDA_FUNCTION'\nrole = 'arn:aws:iam::AWS_ACCOUNT_ID:role/YOUR_IAM_ROLE_FOR_INVOCATION'\n\n\ndef create_api():\n    rest_api = client.create_rest_api(\n        name='sample01',\n        description='sample api',\n    )\n    return rest_api['id']\n\n\ndef create_resource(rest_api_id):\n    for resource in client.get_resources(\n        restApiId=rest_api_id\n    )['items']:\n        if resource['path'] == '/':\n            path_root_id = resource['id']\n    new_resource = client.create_resource(\n        restApiId=rest_api_id,\n        parentId=path_root_id,\n        pathPart='{hoge}',\n    )\n    return new_resource['id']\n\n\ndef setup_method(rest_api_id, resource_id):\n    client.put_method(\n        restApiId=rest_api_id,\n        resourceId=resource_id,\n        httpMethod='GET',\n        authorizationType='NONE',\n    )\n    uri = 'arn:aws:apigateway:' + region + ':lambda:path/2015-03-31/functions/' + function + '/invocations'\n    client.put_integration(\n        restApiId=rest_api_id,\n        resourceId=resource_id,\n        httpMethod='GET',\n        type='AWS',\n        integrationHttpMethod='POST',\n        uri=uri,\n        credentials=role,\n        requestTemplates={\n            'application/json': get_request_template()\n        },\n    )\n    client.put_integration_response(\n        restApiId=rest_api_id,\n        resourceId=resource_id,\n        httpMethod='GET',\n        statusCode='200',\n        responseTemplates={\n            'application/json': '',\n        },\n    )\n    client.put_method_response(\n        restApiId=rest_api_id,\n        resourceId=resource_id,\n        httpMethod='GET',\n        statusCode='200',\n        responseModels={\n            'application/json': 'Empty',\n        },\n    )\n    client.put_integration_response(\n        restApiId=rest_api_id,\n        resourceId=resource_id,\n        httpMethod='GET',\n        statusCode='400',\n        selectionPattern='^\\[400:.*',\n        responseTemplates={\n            'application/json': get_response_template(),\n        },\n    )\n    client.put_method_response(\n        restApiId=rest_api_id,\n        resourceId=resource_id,\n        httpMethod='GET',\n        statusCode='400',\n        responseModels={\n            'application/json': 'Error',\n        },\n    )\n\n\ndef get_request_template():\n    \"\"\"\n    ref. http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html\n    \"\"\"\n    return \"\"\"\n{\n  \"pathParams\": {\n#foreach ($key in $input.params().path.keySet())\n    \"$key\": \"$util.escapeJavaScript($input.params().path.get($key))\"#if ($foreach.hasNext),#end\n#end\n  }\n}\n\"\"\"\n\n\ndef get_response_template():\n    \"\"\"\n    ref. http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html\n    \"\"\"\n    return \"\"\"\n#set($data = $input.path('$'))\n{\n  \"message\" : \"${data.errorMessage}\"\n}\n\"\"\"\n\n\ndef deploy(rest_api_id):\n    client.create_deployment(\n        restApiId=rest_api_id,\n        stageName='snapshot',\n        stageDescription='snapshot stage',\n    )\n    client.update_stage(\n        restApiId=rest_api_id,\n        stageName='snapshot',\n        patchOperations=[\n            {\n                'op': 'replace',\n                'path': '/*/*/logging/loglevel',\n                'value': 'INFO',\n            },\n        ],\n    )\n\nif __name__ == '__main__':\n    rest_api_id = create_api()\n    resource_id = create_resource(rest_api_id)\n    setup_method(rest_api_id, resource_id)\n    deploy(rest_api_id)\n    api_url = 'https://' + rest_api_id + '.execute-api.' + region + '.amazonaws.com/snapshot/'\n    print 'OK : {0}'.format(api_url + 'hoge')\n    print 'NG : {0}'.format(api_url + 'fuga')\n```\n\n## Lambda\nLambda\u306e\u30c7\u30d7\u30ed\u30a4\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u672c\u984c\u304b\u3089\u5916\u308c\u308b\u306e\u3067\u3001\u30b3\u30fc\u30c9\u3060\u3051\u3002\n\n```lambdemo.py\n# -*- coding: utf-8 -*-\n\n\ndef lambda_handler(event, context):\n    hoge = event['pathParams']['hoge']\n    if hoge == 'hoge':\n        return {'message': 'hogehoge'}\n    else:\n        raise NotHogeError(hoge)\n\n\nclass NotHogeError(Exception):\n    def __init__(self, hoge):\n        self.hoge = hoge\n\n    def __str__(self):\n        return '[400:BadRequest] {0} is not hoge'.format(self.hoge)\n```\n## \u52d5\u4f5c\u78ba\u8a8d\n\u4e0a\u306ecreateapi.py\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001(\u30d0\u30b0\u3063\u3066\u306a\u3051\u308c\u3070)\u3053\u3093\u306a\u611f\u3058\u3067\u4e8c\u3064URL\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```Bash:createapi.py\u306e\u5b9f\u884c\u7d50\u679c\nOK : https://xxxxx.execute-api.somewhere.amazonaws.com/snapshot/hoge\nNG : https://xxxxx.execute-api.somewhere.amazonaws.com/snapshot/fuga\n```\n\nOK\u306e\u65b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\n\n```Bash:OK\n$ curl https://xxxxx.execute-api.ap-northeast-1.amazonaws.com/snapshot/hoge\n{\"message\": \"hogehoge\"}\n```\n\nNG\u306e\u65b9\u3060\u3068\u3001\u6012\u3089\u308c\u307e\u3059\u3002\n\n```Bash:NG\n$ curl https://xxxxx.execute-api.ap-northeast-1.amazonaws.com/snapshot/fuga  -w '%{http_code}\\n'\n{\n  \"message\" : \"[400:BadRequest] fuga is not hoge\"\n}\n400\n```\n\n# \u8aac\u660e\n## Integration\n### Lambda\u306eURI\n\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3068\u306a\u308bLambda\u306eURI\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u8907\u96d1\u3067\u3059\u304c\u4ed5\u69d8\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u3068Lambda Function ARN\u304b\u3089\u6c7a\u307e\u308a\u307e\u3059\u3002\n\u6700\u5f8c\u306e\u300cinvocations\u300d\u3092\u629c\u304b\u3057\u3066\u3044\u308b\u3068\u300c500 internal server error\u300d\u3092\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u5730\u5473\u306a\u306f\u307e\u308a\u30dd\u30a4\u30f3\u30c8\u3002\n\n``` Python:URI\u306e\u4f5c\u308a\u65b9\nuri = 'arn:aws:apigateway:' + region + ':lambda:path/2015-03-31/functions/' + function + '/invocations'\n```\n### \u30ea\u30af\u30a8\u30b9\u30c8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5909\u63db\nVelocity\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3063\u3066Lambda\u7528\u306e\u30ea\u30af\u30a8\u30b9\u30c8(json)\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u4f7f\u7528\u53ef\u80fd\u306a\u5909\u6570\u306f[\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3057\u3066\u307e\u3059\u304c\u3001\u5b9f\u904b\u7528\u3067\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u5916\u51fa\u3057\u3059\u308b\u306e\u304c\u826f\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```request_template.vm\n{\n  \"pathParams\": {\n#foreach ($key in $input.params().path.keySet())\n    \"$key\": \"$util.escapeJavaScript($input.params().path.get($key))\"#if ($foreach.hasNext),#end\n#end\n  }\n}\n```\n\n## Lambda\u306e\u4f5c\u308a\u65b9\n### \u30ea\u30af\u30a8\u30b9\u30c8\n\u4e0a\u8a18\u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5909\u63db\u3057\u305f\u30c7\u30fc\u30bf\u306fPython\u306e\u5834\u5408\u3001event\u306bdict\u3068\u3057\u3066\u5165\u3063\u3066\u307e\u3059\u3002\n\n```Python:\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u53d6\u5f97\nhoge = event['pathParams']['hoge']\n```\n\n### \u30ec\u30b9\u30dd\u30f3\u30b9\nLambda\u304b\u3089\u306fAPI Gateway\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u969b\u306f\u3001return\u304braise\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```Python:\u6b63\u5e38\u7d42\u4e86\nreturn {'message': 'hogehoge'}\n```\n\n```Python:\u7570\u5e38\u7d42\u4e86\nraise NotHogeError(hoge)\n```\n\n\u6b21\u306b\u8aac\u660e\u3057\u307e\u3059\u304creturn\u3067\u8fd4\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306f\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9200\u3067\u8fd4\u308a\u307e\u3059\u3002\n(\u6b63\u78ba\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u304c\u3002\u3002\u3002)\n\n## Integration Response\nLambda\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n* \u6b63\u898f\u8868\u73fe(\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u3059\u308b\u5834\u5408\u306f\u306a\u3057)\n* \u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\n* content-type\n* \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8(VTL)\n\u306e\u7d44\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u6307\u5b9a\u3057\u306a\u3044(''\u306b\u3059\u308b)\u5834\u5408\u3001lambda\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u305d\u306e\u307e\u307e\u5e30\u308a\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u306fMethod Response\u3067response model\u3092Empty\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092200\u3067\u8fd4\u3059\u3060\u3051\u306a\u3089\u7c21\u5358\u306a\u306e\u3067\u3059\u304c\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a8\u30e9\u30fc(400\u756a\u53f0)\u3084\u30b5\u30fc\u30d0\u30fc\u30a8\u30e9\u30fc(500\u756a\u53f0)\u3001\u3042\u308b\u3044\u306f\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u305f\u3044(300\u756a\u53f0)\u7b49\u3067\u8fd4\u3059\u3053\u3068\u3082\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u306f\u3001\u3069\u306e\u3088\u3046\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u6642\u306b\u3069\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306b\u3059\u308b\u306e\u304b\u3001\u6b63\u898f\u8868\u73fe\u3067\u5bfe\u5fdc\u3065\u3051\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n### \u6b63\u898f\u8868\u73fe\u306f\u3069\u3053\u3092\u898b\u3066\u3044\u308b\u306e\u304b\n\u3053\u3053\u3067\u30b5\u30f3\u30d7\u30eb\u306eLambda\u3092\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3059\u3002\n\n```Python:return\u3057\u3066\u307f\u308b\u3068\nelse:\n        #raise NotHogeError(hoge)\n        return '[400:BadRequest] {0} is not hoge'.format(hoge)\n```\n\n```Bash:200\u3067\u8fd4\u3063\u3061\u3083\u3046\n$ curl https://xxxxx.execute-api.ap-northeast-1.amazonaws.com/snapshot/fuga -w '%{http_code}\\n'\n\"[400:BadRequest] fuga is not hoge\"200\n```\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u304c200\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3002\u3002\n\u5b9f\u306fLambda handler\u306e\u8fd4\u308a\u5024\u3092\u898b\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3093\u3067\u3059\u306d\u3002\n\n```Python:\u3053\u308c\u3082\nreturn {'message' : '[400:BadRequest] {0} is not hoge'.format(hoge)}\n```\n```Python:\u3053\u308c\u3082\u3060\u3081\nreturn {'errorMessage' : '[400:BadRequest] {0} is not hoge'.format(hoge)}\n```\n\n\u8272\u3005\u3084\u3063\u3066\u305f\u3069\u308a\u7740\u3044\u305f\u306e\u304c\u3053\u308c\u3067\u3059\u3002\n\n```exception.py\nclass NotHogeError(Exception):\n    def __init__(self, hoge):\n        self.hoge = hoge\n\n    def __str__(self):\n        \"\"\"\u3053\u3053\uff01\"\"\"\n        return '[400:BadRequest] {0} is not hoge'.format(self.hoge)\n```\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u5909\u3048\u305f\u3044\u3068\u304d\u306f\u4f8b\u5916\u3092\u6295\u3052\u3088\u3046\u3068\u3044\u3046\u3053\u3068\u3089\u3057\u3044\u3067\u3059\u3002\n\n### \u30ec\u30b9\u30dd\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5909\u63db\n\u6b63\u5e38\u7cfb\u306e\u5834\u5408\u306fLambda\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30d1\u30b9\u30b9\u30eb\u30fc\u3067\u8fd4\u305b\u3070\u3088\u3044\u306e\u3067\u3059\u304c\u3001json\u3067\u306f\u306a\u304fXML\u3084HTML\u3067\u8fd4\u3059\u5834\u5408\u306f\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u7570\u5e38\u7cfb\u306e\u5834\u5408\u3001\u30d1\u30b9\u30b9\u30eb\u30fc\u3060\u3068StackTrace\u3082\u8fd4\u3063\u3066\u3057\u307e\u3044\u60c5\u3051\u306a\u3044\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3060\u3051\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u5143\u3005Error\u3068\u3044\u3046Response Model\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u306b\u5408\u308f\u305b\u3066\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```response_template.vm\n#set($data = $input.path('$'))\n{\n  \"message\" : \"${data.errorMessage}\"\n}\n```\n\n# \u307e\u3068\u3081\nAPI Gateway\u3063\u3066\u305d\u3093\u306a\u306b\u7c21\u5358\u3058\u3083\u306a\u304f\u306d\u3063\u3066\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u305d\u3082\u305d\u3082\u3061\u3083\u3093\u3068API\u8a2d\u8a08\u3059\u308b\u306a\u3089\u3053\u308c\u304f\u3089\u3044\u8003\u3048\u308d\u3063\u3066\u3053\u3068\u306a\u6c17\u3082\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n", "tags": ["AWS", "lambda", "AWSLambda", "APIGateway", "Python"]}