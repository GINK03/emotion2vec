{"context": "\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30bf\u30d6\u533a\u5207\u308a\u306e\u6570\u5024\u30c7\u30fc\u30bf\u7cfb\u5217\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u5206\u6563\u5171\u5206\u6563\u884c\u5217\u3001\u56fa\u6709\u5024\u3001\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u3092\u6c42\u3081\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\n\nMultipleRegressionAnalysis_Data2.txt\n23.3    19.8    14.7    19.7    16.9    14.4\n5.24    -5.23   -7.95   11.70   -2.44   -2.14\n\n\n\nMultipleRegressionAnalysis_3.py\nimport numpy as np\nimport math\n\ndef load_data(filename):\n    with open(filename) as lines:\n        return [[float(data) for data in line.strip().split('\\t')]\n                for line in lines]\n\ndef calc_sum_of_square(data_list1, data_list2):\n    return (len(data_list1) * sum([data1 * data2 for data1, data2 in zip(data_list1, data_list2)]) - sum(data_list1) * sum(data_list2))/(len(data_list1)*(len(data_list1)-1))\n\ndef calc_variance_covariance_matrix(data_list):\n    return [[calc_sum_of_square(data_list1, data_list2)/(len(data_list1)-1) for data_list1 in data_list]\n            for data_list2 in data_list]\n\ndef calc_engenvalue_2d(mat):\n    lambda1 = ((mat[0][0] + mat[1][1]) + math.sqrt((mat[0][0] - mat[1][1])**2 + 4*(mat[0][1]**2))) / 2\n    lambda2 = ((mat[0][0] + mat[1][1]) - math.sqrt((mat[0][0] - mat[1][1])**2 + 4*(mat[0][1]**2))) / 2\n    return [lambda1,lambda2]\n\ndef calc_engenvector_2d(mat, engenvalue):\n    a11 = math.fabs(mat[0][1]) / math.sqrt((engenvalue[0] - mat[0][0])**2 + mat[0][1]**2)\n    a12 = (engenvalue[0] - mat[0][0])*a11 / mat[0][1]\n    a21 = math.fabs(mat[1][0]) / math.sqrt((engenvalue[1] - mat[0][0])**2 + mat[0][1]**2)\n    a22 = (engenvalue[1] - mat[0][0])*a21 / mat[0][1]\n    return [[a11, a12],[a21, a22]]\n\nif __name__ == \"__main__\":\n    data = load_data('MultipleRegressionAnalysis_Data2.txt')\n    variance_coveriance_matrix = calc_variance_covariance_matrix(data)\n    print(\"- \u5206\u6563\u5171\u5206\u6563\u884c\u5217 -\")\n    print(np.array(variance_coveriance_matrix))\n    eigenvalue = calc_engenvalue_2d(variance_coveriance_matrix)\n    print(\"- \u56fa\u6709\u5024 -\")\n    print(eigenvalue)\n    engen_vector = calc_engenvector_2d(variance_coveriance_matrix, eigenvalue)\n    print(\"- \u56fa\u6709\u30d9\u30af\u30c8\u30eb -\")\n    print(\"z1 = \" + str(engen_vector[0][0]) + \" x1 \" + (\"+\" if engen_vector[0][1] > 0 else \"\") + str(engen_vector[0][1]) + \" x2\")\n    print(\"z2 = \" + str(engen_vector[1][0]) + \" x1 \" + (\"+\" if engen_vector[1][1] > 0 else \"\") + str(engen_vector[1][1]) + \" x2\")\n\n\n\n\u7d50\u679c\n> python MultipleRegressionAnalysis_3.py\n- \u5206\u6563\u5171\u5206\u6563\u884c\u5217 -\n[[  2.36693333   2.99921333]\n [  2.99921333  10.61296533]]\n- \u56fa\u6709\u5024 -\n[11.58843357427205, 1.3914650923945988]\n- \u56fa\u6709\u30d9\u30af\u30c8\u30eb -\nz1 = 0.30929366776230544 x1 +0.9509665751655736 x2\nz2 = 0.9509665751655736 x1 -0.3092936677623057 x2\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30bf\u30d6\u533a\u5207\u308a\u306e\u6570\u5024\u30c7\u30fc\u30bf\u7cfb\u5217\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u5206\u6563\u5171\u5206\u6563\u884c\u5217\u3001\u56fa\u6709\u5024\u3001\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u3092\u6c42\u3081\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\n\n```text:MultipleRegressionAnalysis_Data2.txt\n23.3\t19.8\t14.7\t19.7\t16.9\t14.4\n5.24\t-5.23\t-7.95\t11.70\t-2.44\t-2.14\n```\n\n```py:MultipleRegressionAnalysis_3.py\nimport numpy as np\nimport math\n\ndef load_data(filename):\n    with open(filename) as lines:\n        return [[float(data) for data in line.strip().split('\\t')]\n                for line in lines]\n    \ndef calc_sum_of_square(data_list1, data_list2):\n    return (len(data_list1) * sum([data1 * data2 for data1, data2 in zip(data_list1, data_list2)]) - sum(data_list1) * sum(data_list2))/(len(data_list1)*(len(data_list1)-1))\n\ndef calc_variance_covariance_matrix(data_list):\n    return [[calc_sum_of_square(data_list1, data_list2)/(len(data_list1)-1) for data_list1 in data_list]\n            for data_list2 in data_list]\n            \ndef calc_engenvalue_2d(mat):\n    lambda1 = ((mat[0][0] + mat[1][1]) + math.sqrt((mat[0][0] - mat[1][1])**2 + 4*(mat[0][1]**2))) / 2\n    lambda2 = ((mat[0][0] + mat[1][1]) - math.sqrt((mat[0][0] - mat[1][1])**2 + 4*(mat[0][1]**2))) / 2\n    return [lambda1,lambda2]\n    \ndef calc_engenvector_2d(mat, engenvalue):\n    a11 = math.fabs(mat[0][1]) / math.sqrt((engenvalue[0] - mat[0][0])**2 + mat[0][1]**2)\n    a12 = (engenvalue[0] - mat[0][0])*a11 / mat[0][1]\n    a21 = math.fabs(mat[1][0]) / math.sqrt((engenvalue[1] - mat[0][0])**2 + mat[0][1]**2)\n    a22 = (engenvalue[1] - mat[0][0])*a21 / mat[0][1]\n    return [[a11, a12],[a21, a22]]\n            \nif __name__ == \"__main__\":\n    data = load_data('MultipleRegressionAnalysis_Data2.txt')\n    variance_coveriance_matrix = calc_variance_covariance_matrix(data)\n    print(\"- \u5206\u6563\u5171\u5206\u6563\u884c\u5217 -\")\n    print(np.array(variance_coveriance_matrix))\n    eigenvalue = calc_engenvalue_2d(variance_coveriance_matrix)\n    print(\"- \u56fa\u6709\u5024 -\")\n    print(eigenvalue)\n    engen_vector = calc_engenvector_2d(variance_coveriance_matrix, eigenvalue)\n    print(\"- \u56fa\u6709\u30d9\u30af\u30c8\u30eb -\")\n    print(\"z1 = \" + str(engen_vector[0][0]) + \" x1 \" + (\"+\" if engen_vector[0][1] > 0 else \"\") + str(engen_vector[0][1]) + \" x2\")\n    print(\"z2 = \" + str(engen_vector[1][0]) + \" x1 \" + (\"+\" if engen_vector[1][1] > 0 else \"\") + str(engen_vector[1][1]) + \" x2\")\n```\n\n```text:\u7d50\u679c\n> python MultipleRegressionAnalysis_3.py\n- \u5206\u6563\u5171\u5206\u6563\u884c\u5217 -\n[[  2.36693333   2.99921333]\n [  2.99921333  10.61296533]]\n- \u56fa\u6709\u5024 -\n[11.58843357427205, 1.3914650923945988]\n- \u56fa\u6709\u30d9\u30af\u30c8\u30eb -\nz1 = 0.30929366776230544 x1 +0.9509665751655736 x2\nz2 = 0.9509665751655736 x1 -0.3092936677623057 x2\n```\n", "tags": ["Python", "\u591a\u5909\u91cf\u89e3\u6790", "\u7d71\u8a08", "\u4e3b\u6210\u5206\u5206\u6790"]}