{"context": "API Gateway\u3068Lambda\u3092\u4f7f\u3046\u969b\u306b\u3001Facebook\u3084Twitter\u306a\u3069\u306eOAuth Acesss Token\u3092\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001API Gateway\u306eAuthorizer\u6a5f\u80fd\u3092\u7528\u3044\u3066Access Token\u3092\u691c\u8a3c\u3059\u308b\u6d41\u308c\u3092\u7c21\u7565\u5316\u3057\u3066\u307e\u3068\u3081\u3066\u307f\u307e\u3059\u3002\n\n\u524d\u63d0\n\nAWS\u306e\u30d6\u30e9\u30a6\u30b6\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u5229\u7528\nLambda\u3067\u306fNode.js\u3092\u5229\u7528\n\u5404OAuth\u30d7\u30ed\u30d0\u30a4\u30c0\u56fa\u6709\u51e6\u7406\u3084\u30a8\u30e9\u30fc\u51e6\u7406\u306f\u5272\u611b\n\n\n\u51e6\u7406\u306e\u6d41\u308c\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8, SNS, API Gateway\u3092\u542b\u3081\u305f\u5168\u4f53\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a2\u30d7\u30ea(iOS/Android/SPA\u306a\u3069)\n--[\u8a8d\u8a3c\u8a8d\u53ef\u60c5\u5831]--> SNS\u306eAccess Token\u767a\u884cAPI\n--[Access Token]--> \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a2\u30d7\u30ea\n--[Access Token]--> API Gateway\u306eMethod Request\n--[Access Token]--> Authorizer (=Lambda\u306e\u95a2\u6570) \n--[Access Token]--> SNS\u306eAccess Token\u691c\u8a3cAPI \n--[\u691c\u8a3c\u7d50\u679c]--> Authorizer \n----> API Gateway\u306eIntegration Request \n----> \u30d0\u30c3\u30af\u30a8\u30f3\u30c9(Lambda\u3084HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u306a\u3069)\n----> API Gateway\u306eIntegration Response\n----> API Gateway\u306eMethod Response\n----> \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a2\u30d7\u30ea\n\n\n1. [API Gateway] API\u306e\u4f5c\u6210\n\u8aac\u660e\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u306bMock API\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\n\u65b0\u305f\u306aAPI\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nAPIs > Create API\u3092\u30af\u30ea\u30c3\u30af\n\n\n\n\u4f5c\u6210\u3057\u305fAPI\u306bHTTP Method\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nAPI > Actions > Create Method > GET > Mock\n\n\n\u7c21\u7565\u5316\u306e\u305f\u3081\u3053\u3053\u3067\u306f\u3068\u308a\u3042\u3048\u305a\u30eb\u30fc\u30c8\u30d1\u30b9\u306e/\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n\n\n\n\nMock\u7528\u306e\u30ec\u30b9\u30dd\u30f3\u30b9JSON\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nIntegration Response > 200 > Body Mapping Templates > application/json > \u30ec\u30b9\u30dd\u30f3\u30b9\u7528\u306eJSON\u3092\u5165\u529b\n\n\n\nAPI\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\n\nAPI > Actions > Deploy API > Stage\u4f5c\u6210(\"prod\"\u3068\u3059\u308b) \n\n\n\nAPI\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n\u8868\u793a\u3055\u308c\u305fURL\u3092curl\u306a\u3069\u304b\u3089\u53e9\u3044\u3066\u5165\u529b\u3057\u305fJSON\u304c\u5e30\u3063\u3066\u304f\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\n\n\n\n\n2. [Lambda] Custom Authorizer\u7528\u306eFunction\u4f5c\u6210\nAPI Gateway\u306eAuthorizer\u6a5f\u80fd\u3067\u5229\u7528\u3059\u308bAccess Token\u691c\u8a3c\u7528\u95a2\u6570\u3092Lambda\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\nCreate Lambda Function > Configure function (\u4ed6\u306e\u30bf\u30d6\u306f\u7121\u8996)\n\nName : authFunction (\u4efb\u610f)\nRuntime : Node.js 4.3 (\u4f8b\u306fNode.js\u306b\u3057\u307e\u3059\u304c\u4f55\u3067\u3082OK)\n\nLambda function code: \nexports.handler = function(event, context) {\n\n //API Gateway\u304b\u3089\u6e21\u3055\u308c\u305fAccess Token\n  var token = event.authorizationToken;\n\n  // ToDo : Access Token\u306e\u691c\u8a3c\u51e6\u7406\n  //   SNS\u306a\u3069\u306eAccess Token\u691c\u8a3cAPI\u3092\u53e9\u3044\u3066\u7d50\u679c\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n  //   \u203b\u691c\u8a3c\u7d50\u679c\u306f authorized \u304b unauthorized \u3068\u7c21\u7565\u5316\u3057\u307e\u3059\u3002\n  //   \u203b\u901a\u5e38\u975e\u540c\u671f\u51e6\u7406\u306e\u306f\u305a\u3067\u3059\u304c\u7c21\u7565\u5316\u3057\u307e\u3059\u3002\n  // var authResult = \u691c\u8a3c\u7d50\u679c 'authorized' or 'unauthorized'\n\n  switch (authResult) {\n    case 'authorized':\n      context.succeed(generatePolicy('user', 'Allow', event.methodArn));\n      break;\n    case 'unauthorized':\n      context.succeed(generatePolicy('user', 'Deny', event.methodArn));\n      break;\n    default:\n      context.fail(\"Error\");\n  }\n};\n\nvar generatePolicy = function(principalId, effect, resource) {\n  return {\n    principalId: principalId,\n    policyDocument: {\n      Version: '2012-10-17',\n      Statement: [{\n        Action: 'execute-api:Invoke',\n        Effect: effect,\n        Resource: resource\n      }]\n    }\n  };\n}\n\n\nHandler : index.handler\nRole : Create new role\nRole name : \"simple_microservice\" (\u4efb\u610f)\nPolicy templates : Simple Microservice Template (\u9069\u5f53\u306a\u7269\u3092\u8a2d\u5b9a)\n\n\n\n(\u4efb\u610f)\u30c6\u30b9\u30c8\u7528\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nActions > Configure Test Event > \u4ee5\u4e0b\u3092\u8cbc\u4ed8\n\n{\n    \"authorizationToken\": \"authorized\"\n}\n\n\n\n(\u4efb\u610f)\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\nTest\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u4ee5\u4e0b\u304c\u5e30\u3063\u3066\u304f\u308b\u3053\u3068\u3092\u78ba\u8a8d\n\n{\n  \"principalId\": \"user\",\n  \"policyDocument\": {\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n      {\n        \"Action\": \"execute-api:Invoke\",\n        \"Effect\": \"Allow\"\n      }\n    ]\n  }\n}\n\n\n\n\n3. [API Gateway] Custom Authorizer\u306e\u5272\u5f53\nAPI Gateway\u306eAuthorizer\u306bLambda\u3067\u4f5c\u6210\u3057\u305fAccess Token\u691c\u8a3c\u7528\u95a2\u6570\u3092\u5272\u5f53\u3066\u307e\u3059\u3002\n\n\u5148\u307b\u3069\u4f5c\u6210\u3057\u305fAPI\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\nCustom Authorizer\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nAuthorizers > New Custom Authorizer\n\n\nLambda region : authFunction\u3092\u4f5c\u6210\u3057\u305f\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\nLambda function : authFunction\n\nAuthorizer name : myAuth (\u4efb\u610f)\nIdentity token source : method.request.header.Authorization\n\nHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d8\u30c3\u30c0\u306eAuthorization\u30ad\u30fc\u306e\u5024\u3092Lambda\u306eauthFunction\u306eauthorizationToken\u306b\u6e21\u3057\u307e\u3059\u3002\n\n\n\n\n\n\n\n\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067OK\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\nAPI Gateway\u306erole\u306bauthFunction\u3092\u5b9f\u884c\u3059\u308b\u6a29\u9650\u304c\u81ea\u52d5\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n\n(\u4efb\u610f)\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\u753b\u9762\u53f3\u4e0b\u306eTest your authorizer\u3092\u30af\u30ea\u30c3\u30af\n\nIdentity token\u306bauthorized\u306a\u3069\u3092\u5165\u529b\u3057\u3066Test\u3092\u30af\u30ea\u30c3\u30af\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"execute-api:Invoke\",\n      \"Effect\": \"Allow\",\n      \"Resource\": \"arn:aws:execute-api:ap-northeast-1:xxxxx:yyyyyy/null/GET/\"\n    }\n  ]\n}       \n\n\n\n\n\nLambda\u5074\u3067\u4f5c\u6210\u3057\u305fAccess Token\u691c\u8a3c\u7528\u306e\u95a2\u6570\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\n\nAPI > Resources > Method > Method Request > Authorization\n\n\n2\u3067\u8a2d\u5b9a\u3057\u305fmyAuth\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n\n\n\nAPI\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\n\nAPI\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\nHTTP Header\u306bAuthorization\u30ad\u30fc\u3068\u5024\u3092\u30bb\u30c3\u30c8\u3057\u3066API\u3092\u53e9\u304d\u307e\u3059\u3002\n\n\n\n\u4ee5\u4e0a\nAPI Gateway\u3068Lambda\u3092\u4f7f\u3046\u969b\u306b\u3001Facebook\u3084Twitter\u306a\u3069\u306eOAuth Acesss Token\u3092\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001API Gateway\u306eAuthorizer\u6a5f\u80fd\u3092\u7528\u3044\u3066Access Token\u3092\u691c\u8a3c\u3059\u308b\u6d41\u308c\u3092\u7c21\u7565\u5316\u3057\u3066\u307e\u3068\u3081\u3066\u307f\u307e\u3059\u3002\n\n## \u524d\u63d0\n\n- AWS\u306e\u30d6\u30e9\u30a6\u30b6\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u5229\u7528\n- Lambda\u3067\u306fNode.js\u3092\u5229\u7528\n- \u5404OAuth\u30d7\u30ed\u30d0\u30a4\u30c0\u56fa\u6709\u51e6\u7406\u3084\u30a8\u30e9\u30fc\u51e6\u7406\u306f\u5272\u611b\n\n## \u51e6\u7406\u306e\u6d41\u308c\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8, SNS, API Gateway\u3092\u542b\u3081\u305f\u5168\u4f53\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\n```\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a2\u30d7\u30ea(iOS/Android/SPA\u306a\u3069)\n--[\u8a8d\u8a3c\u8a8d\u53ef\u60c5\u5831]--> SNS\u306eAccess Token\u767a\u884cAPI\n--[Access Token]--> \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a2\u30d7\u30ea\n--[Access Token]--> API Gateway\u306eMethod Request\n--[Access Token]--> Authorizer (=Lambda\u306e\u95a2\u6570) \n--[Access Token]--> SNS\u306eAccess Token\u691c\u8a3cAPI \n--[\u691c\u8a3c\u7d50\u679c]--> Authorizer \n----> API Gateway\u306eIntegration Request \n----> \u30d0\u30c3\u30af\u30a8\u30f3\u30c9(Lambda\u3084HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u306a\u3069)\n----> API Gateway\u306eIntegration Response\n----> API Gateway\u306eMethod Response\n----> \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a2\u30d7\u30ea\n```\n\n## 1. [API Gateway] API\u306e\u4f5c\u6210 \n\n\u8aac\u660e\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u306bMock API\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n1. \u65b0\u305f\u306aAPI\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n \t- APIs > Create API\u3092\u30af\u30ea\u30c3\u30af\n \n2. \u4f5c\u6210\u3057\u305fAPI\u306bHTTP Method\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\t- API > Actions > Create Method > GET > Mock\n\t\t- \u7c21\u7565\u5316\u306e\u305f\u3081\u3053\u3053\u3067\u306f\u3068\u308a\u3042\u3048\u305a\u30eb\u30fc\u30c8\u30d1\u30b9\u306e/\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n3. Mock\u7528\u306e\u30ec\u30b9\u30dd\u30f3\u30b9JSON\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\t- Integration Response > 200 > Body Mapping Templates > application/json > \u30ec\u30b9\u30dd\u30f3\u30b9\u7528\u306eJSON\u3092\u5165\u529b\n\n4. API\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\n\t- API > Actions > Deploy API > Stage\u4f5c\u6210(\"prod\"\u3068\u3059\u308b) \n\n5. API\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\t- \u8868\u793a\u3055\u308c\u305fURL\u3092curl\u306a\u3069\u304b\u3089\u53e9\u3044\u3066\u5165\u529b\u3057\u305fJSON\u304c\u5e30\u3063\u3066\u304f\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\n\n## 2. [Lambda] Custom Authorizer\u7528\u306eFunction\u4f5c\u6210\n\nAPI Gateway\u306eAuthorizer\u6a5f\u80fd\u3067\u5229\u7528\u3059\u308bAccess Token\u691c\u8a3c\u7528\u95a2\u6570\u3092Lambda\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n2. Create Lambda Function > Configure function (\u4ed6\u306e\u30bf\u30d6\u306f\u7121\u8996)\n\t- Name : authFunction (\u4efb\u610f)\n\t- Runtime : Node.js 4.3 (\u4f8b\u306fNode.js\u306b\u3057\u307e\u3059\u304c\u4f55\u3067\u3082OK)\n\t- Lambda function code: \n\n\t\t```js\n\t\texports.handler = function(event, context) {\n\t\t\n         //API Gateway\u304b\u3089\u6e21\u3055\u308c\u305fAccess Token\n\t\t  var token = event.authorizationToken;\n \n\t\t  // ToDo : Access Token\u306e\u691c\u8a3c\u51e6\u7406\n\t\t  //   SNS\u306a\u3069\u306eAccess Token\u691c\u8a3cAPI\u3092\u53e9\u3044\u3066\u7d50\u679c\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\t\t  //   \u203b\u691c\u8a3c\u7d50\u679c\u306f authorized \u304b unauthorized \u3068\u7c21\u7565\u5316\u3057\u307e\u3059\u3002\n\t\t  //   \u203b\u901a\u5e38\u975e\u540c\u671f\u51e6\u7406\u306e\u306f\u305a\u3067\u3059\u304c\u7c21\u7565\u5316\u3057\u307e\u3059\u3002\n\t\t  // var authResult = \u691c\u8a3c\u7d50\u679c 'authorized' or 'unauthorized'\n\t\t  \n\t\t  switch (authResult) {\n\t\t    case 'authorized':\n\t\t      context.succeed(generatePolicy('user', 'Allow', event.methodArn));\n\t\t      break;\n\t\t    case 'unauthorized':\n\t\t      context.succeed(generatePolicy('user', 'Deny', event.methodArn));\n\t\t      break;\n\t\t    default:\n\t\t      context.fail(\"Error\");\n\t\t  }\n\t\t};\n\n\t\tvar generatePolicy = function(principalId, effect, resource) {\n\t\t  return {\n\t\t    principalId: principalId,\n\t\t    policyDocument: {\n\t\t      Version: '2012-10-17',\n\t\t      Statement: [{\n\t\t        Action: 'execute-api:Invoke',\n\t\t        Effect: effect,\n\t\t        Resource: resource\n\t\t      }]\n\t\t    }\n\t\t  };\n\t\t}\n\t\t```\n\t- Handler : index.handler\n\t- Role : Create new role\n\t- Role name : \"simple_microservice\" (\u4efb\u610f)\n\t- Policy templates : Simple Microservice Template (\u9069\u5f53\u306a\u7269\u3092\u8a2d\u5b9a)\n\n\n3. (\u4efb\u610f)\u30c6\u30b9\u30c8\u7528\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\t- Actions > Configure Test Event > \u4ee5\u4e0b\u3092\u8cbc\u4ed8\n\t\n\t```js\n\t{\n  \t\t\"authorizationToken\": \"authorized\"\n\t}\n\t```\t\n\n4. (\u4efb\u610f)\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\t- Test\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u4ee5\u4e0b\u304c\u5e30\u3063\u3066\u304f\u308b\u3053\u3068\u3092\u78ba\u8a8d\n\n\t```js\n\t{\n\t  \"principalId\": \"user\",\n\t  \"policyDocument\": {\n\t    \"Version\": \"2012-10-17\",\n\t    \"Statement\": [\n\t      {\n\t        \"Action\": \"execute-api:Invoke\",\n\t        \"Effect\": \"Allow\"\n\t      }\n\t    ]\n\t  }\n\t}\n\t```\t\n\n## 3. [API Gateway] Custom Authorizer\u306e\u5272\u5f53\n\nAPI Gateway\u306eAuthorizer\u306bLambda\u3067\u4f5c\u6210\u3057\u305fAccess Token\u691c\u8a3c\u7528\u95a2\u6570\u3092\u5272\u5f53\u3066\u307e\u3059\u3002\n\n1. \u5148\u307b\u3069\u4f5c\u6210\u3057\u305fAPI\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n2. Custom Authorizer\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\t- Authorizers > New Custom Authorizer\n\t\t- Lambda region : authFunction\u3092\u4f5c\u6210\u3057\u305f\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\n\t\t- Lambda function : `authFunction`\n\t\t- Authorizer name : `myAuth` (\u4efb\u610f)\n\t\t- Identity token source : `method.request.header.Authorization`\n\t\t\t- HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d8\u30c3\u30c0\u306eAuthorization\u30ad\u30fc\u306e\u5024\u3092Lambda\u306e`authFunction`\u306eauthorizationToken\u306b\u6e21\u3057\u307e\u3059\u3002\n\n3. \u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067OK\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\t- API Gateway\u306erole\u306bauthFunction\u3092\u5b9f\u884c\u3059\u308b\u6a29\u9650\u304c\u81ea\u52d5\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n4. (\u4efb\u610f)\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\t- \u753b\u9762\u53f3\u4e0b\u306e`Test your authorizer`\u3092\u30af\u30ea\u30c3\u30af\n\t- Identity token\u306b`authorized`\u306a\u3069\u3092\u5165\u529b\u3057\u3066Test\u3092\u30af\u30ea\u30c3\u30af\n\n\t\t```\n\t\t{\n\t\t  \"Version\": \"2012-10-17\",\n\t\t  \"Statement\": [\n\t\t    {\n\t\t      \"Action\": \"execute-api:Invoke\",\n\t\t      \"Effect\": \"Allow\",\n\t\t      \"Resource\": \"arn:aws:execute-api:ap-northeast-1:xxxxx:yyyyyy/null/GET/\"\n\t\t    }\n\t\t  ]\n\t\t}\t\t\n\t\t```\n\n5. Lambda\u5074\u3067\u4f5c\u6210\u3057\u305fAccess Token\u691c\u8a3c\u7528\u306e\u95a2\u6570\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\n\t- API > Resources > Method > Method Request > Authorization\n\t\t- 2\u3067\u8a2d\u5b9a\u3057\u305f`myAuth`\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n6. API\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\n\n7. API\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\t- HTTP Header\u306b`Authorization`\u30ad\u30fc\u3068\u5024\u3092\u30bb\u30c3\u30c8\u3057\u3066API\u3092\u53e9\u304d\u307e\u3059\u3002\n\n\n\u4ee5\u4e0a\n\n\n", "tags": ["lambda", "iOS", "OAuth", "AWS", "APIGateway"]}