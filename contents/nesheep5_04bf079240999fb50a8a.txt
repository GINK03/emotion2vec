{"context": "\u672c\u8a18\u4e8b\u306f\u3001\u30bc\u30ed\u304b\u3089\u4f5c\u308bDeep Learning\u306e\u5b66\u7fd2\u30e1\u30e2\u3067\u3059\u3002\u3000\u3000\n\n\n\u8981\u70b9\n\n\u6d3b\u6027\u5316\u95a2\u6570\uff1a\n\u5165\u529b\u4fe1\u53f7\u306e\u7dcf\u548c\u304c\u3069\u306e\u3088\u3046\u306b\u6d3b\u6027\u5316\u3059\u308b\u304b\uff08\u767a\u706b\u3059\u308b\u304b\uff09\u3092\u6c7a\u5b9a\u3059\u308b\u5f79\u5272\u3092\u6301\u3064\u3002\n\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u3067\u306f\u95be\u5024\u3092\u5883\u306b\u51fa\u529b\u304c\u5207\u308a\u66ff\u308f\u308b\u300c\u30b9\u30c6\u30c3\u30d7\u95a2\u6570\u300d\u304c\u4f7f\u7528\u3055\u308c\u308b\u304c\u3001\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u306f\u6ed1\u3089\u304b\u306a\u66f2\u7dda\u3092\u63cf\u304f\u300c\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u300d\u3084\u300cReLU\u95a2\u6570\u300d\u306a\u3069\u304c\u7528\u3044\u3089\u308c\u308b\u3002\n\u96a0\u308c\u5c64\u306e\u6d3b\u6027\u5316\u95a2\u6570\u306fh()\u3067\u8868\u3057\u3001\u51fa\u529b\u5c64\u306e\u6d3b\u6027\u5316\u95a2\u6570\u306f\u03c3()\u3067\u8868\u3059\u3002\n\u884c\u5217\u306e\u5185\u7a4d\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u5404\u30cb\u30e5\u30fc\u30ed\u30f3\u3067\u306e\u8a08\u7b97\u3092\uff11\u968e\u5c64\u5206\u3072\u3068\u307e\u3068\u3081\u306b\u884c\u3046\u4e8b\u304c\u3067\u304d\u308b\u3002\n\n\n\uff13\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u56f3\n\n\n\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\n  h(x) = \\frac{1}{1+ \\mathrm{e}^{-x}}\n\n\n\u5404\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u5909\u63db\u5f0f\n  a = w_1x_1+w_2x_2+b  \n\n  z = h(a) \n\n\u203bx:\u5165\u529b\u3000w:\u91cd\u307f\u3000b:\u30d0\u30a4\u30a2\u30b9\u3000a:\u5165\u529b\u4fe1\u53f7\u306e\u7dcf\u548c\u3000h():\u6d3b\u6027\u5316\u95a2\u6570\n\n\uff13\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u5b9f\u88c5\u3059\u308b\n\n3layered_neuralnetwork.py.py\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# \u91cd\u307f\u3068\u30d0\u30a4\u30a2\u30b9\u306e\u521d\u671f\u5316\ndef init_network():\n    network = {}\n    # 1\u5c64\u76ee\n    network['W1'] = np.array([[0.1, 0.3, 0.5], [0.2, 0.4, 0.6]])\n    network['b1'] = np.array([0.1, 0.2, 0.3])\n    # 2\u5c64\u76ee\n    network['W2'] = np.array([[0.1, 0.4], [0.2, 0.5], [0.3, 0.6]])\n    network['b2'] = np.array([0.1, 0.2])\n    # 3\u5c64\u76ee\n    network['W3'] = np.array([[0.1, 0.3], [0.2, 0.4]])\n    network['b3'] = np.array([0.1, 0.2])\n\n    return network\n\n# \u5165\u529b\u2192\u51fa\u529b\ndef forword(network, x):\n    W1, W2, W3 = network['W1'], network['W2'], network['W3']\n    b1, b2, b3 = network['b1'], network['b2'], network['b3']\n\n    # 1\u5c64\u76ee\n    a1 = np.dot(x, W1) +b1  # A = XW +B\n    z1 = sigmoid(a1)        # Z = h(A)\n    # 2\u5c64\u76ee\n    a2 = np.dot(z1, W2) +b2\n    z2 = sigmoid(a2)\n    # 3\u5c64\u76ee\n    a3 = np.dot(z2, W3) +b3\n    y = identity_function(a3)   # \u6700\u5f8c\u306e\u5c64\u306e\u307f\u6d3b\u6027\u5316\u95a2\u6570\u304c\u7570\u306a\u308b\n\n    return y\n\n# \u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570(\u6d3b\u6027\u5316\u95a2\u6570)\ndef sigmoid(x):\n    return 1 / (1 + np.exp(-x))\n\n# \u6052\u7b49\u95a2\u6570(\u6d3b\u6027\u5316\u95a2\u6570)\ndef identity_function(x):\n    return x\n\n# \u4ee5\u4e0b\u52d5\u4f5c\u78ba\u8a8d\nnetwork = init_network()\nx = np.array([1.0, 0.5])\ny = forword(network, x)\nprint(y) # [0.31682708  0.69627909]\n\n\n\u672c\u8a18\u4e8b\u306f\u3001[\u30bc\u30ed\u304b\u3089\u4f5c\u308bDeep Learning](http://amzn.to/2iLPFZW)\u306e\u5b66\u7fd2\u30e1\u30e2\u3067\u3059\u3002\u3000\u3000\n<a href=\"https://www.amazon.co.jp/%E3%82%BC%E3%83%AD%E3%81%8B%E3%82%89%E4%BD%9C%E3%82%8BDeep-Learning-Python%E3%81%A7%E5%AD%A6%E3%81%B6%E3%83%87%E3%82%A3%E3%83%BC%E3%83%97%E3%83%A9%E3%83%BC%E3%83%8B%E3%83%B3%E3%82%B0%E3%81%AE%E7%90%86%E8%AB%96%E3%81%A8%E5%AE%9F%E8%A3%85-%E6%96%8E%E8%97%A4-%E5%BA%B7%E6%AF%85/dp/4873117585/ref=as_li_ss_il?s=books&ie=UTF8&qid=1483626311&sr=1-1&keywords=%E3%82%BC%E3%83%AD%E3%81%8B%E3%82%89%E4%BD%9C%E3%82%8Bdeep+learning&linkCode=li2&tag=nesheep5-22&linkId=db4083b79083eb2446ff31dd16bc0409\" target=\"_blank\"><img border=\"0\" src=\"//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=4873117585&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=nesheep5-22\" ></a><img src=\"https://ir-jp.amazon-adsystem.com/e/ir?t=nesheep5-22&l=li2&o=9&a=4873117585\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" />\n\n## \u8981\u70b9\n\n- \u6d3b\u6027\u5316\u95a2\u6570\uff1a  \n\u5165\u529b\u4fe1\u53f7\u306e\u7dcf\u548c\u304c\u3069\u306e\u3088\u3046\u306b\u6d3b\u6027\u5316\u3059\u308b\u304b\uff08\u767a\u706b\u3059\u308b\u304b\uff09\u3092\u6c7a\u5b9a\u3059\u308b\u5f79\u5272\u3092\u6301\u3064\u3002  \n\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u3067\u306f\u95be\u5024\u3092\u5883\u306b\u51fa\u529b\u304c\u5207\u308a\u66ff\u308f\u308b\u300c\u30b9\u30c6\u30c3\u30d7\u95a2\u6570\u300d\u304c\u4f7f\u7528\u3055\u308c\u308b\u304c\u3001\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u306f\u6ed1\u3089\u304b\u306a\u66f2\u7dda\u3092\u63cf\u304f\u300c\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u300d\u3084\u300cReLU\u95a2\u6570\u300d\u306a\u3069\u304c\u7528\u3044\u3089\u308c\u308b\u3002  \n\u96a0\u308c\u5c64\u306e\u6d3b\u6027\u5316\u95a2\u6570\u306fh()\u3067\u8868\u3057\u3001\u51fa\u529b\u5c64\u306e\u6d3b\u6027\u5316\u95a2\u6570\u306f\u03c3()\u3067\u8868\u3059\u3002\n- \u884c\u5217\u306e\u5185\u7a4d\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u5404\u30cb\u30e5\u30fc\u30ed\u30f3\u3067\u306e\u8a08\u7b97\u3092\uff11\u968e\u5c64\u5206\u3072\u3068\u307e\u3068\u3081\u306b\u884c\u3046\u4e8b\u304c\u3067\u304d\u308b\u3002\n\n\n## \uff13\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u56f3\n![Untitled_\u30cb\u30e5\u30fc\u30ed\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af_-_Cacoo.png](https://qiita-image-store.s3.amazonaws.com/0/41569/45c2bf93-0e75-34ec-f471-c7d074ba1c86.png)\n\n## \u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\n```math\n  h(x) = \\frac{1}{1+ \\mathrm{e}^{-x}}\n```\n\n## \u5404\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u5909\u63db\u5f0f\n```math\n  a = w_1x_1+w_2x_2+b  \n```\n```math\n  z = h(a) \n```\n\u203bx:\u5165\u529b\u3000w:\u91cd\u307f\u3000b:\u30d0\u30a4\u30a2\u30b9\u3000a:\u5165\u529b\u4fe1\u53f7\u306e\u7dcf\u548c\u3000h():\u6d3b\u6027\u5316\u95a2\u6570\n\n## \uff13\u5c64\u30cb\u30e5\u30fc\u30ed\u30f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u5b9f\u88c5\u3059\u308b\n```py3:3layered_neuralnetwork.py.py\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# \u91cd\u307f\u3068\u30d0\u30a4\u30a2\u30b9\u306e\u521d\u671f\u5316\ndef init_network():\n    network = {}\n    # 1\u5c64\u76ee\n    network['W1'] = np.array([[0.1, 0.3, 0.5], [0.2, 0.4, 0.6]])\n    network['b1'] = np.array([0.1, 0.2, 0.3])\n    # 2\u5c64\u76ee\n    network['W2'] = np.array([[0.1, 0.4], [0.2, 0.5], [0.3, 0.6]])\n    network['b2'] = np.array([0.1, 0.2])\n    # 3\u5c64\u76ee\n    network['W3'] = np.array([[0.1, 0.3], [0.2, 0.4]])\n    network['b3'] = np.array([0.1, 0.2])\n\n    return network\n\n# \u5165\u529b\u2192\u51fa\u529b\ndef forword(network, x):\n    W1, W2, W3 = network['W1'], network['W2'], network['W3']\n    b1, b2, b3 = network['b1'], network['b2'], network['b3']\n\n    # 1\u5c64\u76ee\n    a1 = np.dot(x, W1) +b1  # A = XW +B\n    z1 = sigmoid(a1)        # Z = h(A)\n    # 2\u5c64\u76ee\n    a2 = np.dot(z1, W2) +b2\n    z2 = sigmoid(a2)\n    # 3\u5c64\u76ee\n    a3 = np.dot(z2, W3) +b3\n    y = identity_function(a3)   # \u6700\u5f8c\u306e\u5c64\u306e\u307f\u6d3b\u6027\u5316\u95a2\u6570\u304c\u7570\u306a\u308b\n\n    return y\n\n# \u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570(\u6d3b\u6027\u5316\u95a2\u6570)\ndef sigmoid(x):\n    return 1 / (1 + np.exp(-x))\n\n# \u6052\u7b49\u95a2\u6570(\u6d3b\u6027\u5316\u95a2\u6570)\ndef identity_function(x):\n    return x\n\n# \u4ee5\u4e0b\u52d5\u4f5c\u78ba\u8a8d\nnetwork = init_network()\nx = np.array([1.0, 0.5])\ny = forword(network, x)\nprint(y) # [0.31682708  0.69627909]\n```\n", "tags": ["Python", "\u6a5f\u68b0\u5b66\u7fd2", "\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0", "MachineLearning", "DeepLearning"]}