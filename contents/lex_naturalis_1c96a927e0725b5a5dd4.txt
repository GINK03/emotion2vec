{"context": " More than 1 year has passed since last update.( \u5143\u30cd\u30bf\u306f http://nabetani.sakura.ne.jp/hena/ord18mafovafo/ )\n( \u4ed6\u306e\u89e3\u7b54\u4f8b\u306f http://qiita.com/Nabetani/items/373105e7fafd12f5e9fd )\n\u6700\u521d\u306bMFVF.hs\u3092\u66f8\u304d\u59cb\u3081\u3066\u51fa\u529b\u304c\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\u306e\u78ba\u8a8d\u304c\u7d42\u308f\u308b\u307e\u3067\u3067\u3061\u3087\u3046\u306920\u5206\u3002\n\u3046\u30fc\u3093\u3002\u3053\u308c\u306f\u3061\u3087\u3063\u3068\u7c21\u5358\u3059\u304e\u306a\u3044\u304b\u306a\u2026\u2026\n\u524d\u56de\u306e\u300c\u6298\u3063\u3066\u5207\u308b\u300d\u3092\u66f4\u306b\u7c21\u5358\u306b\u3057\u305f\u3082\u306e\u306b\u306a\u3063\u3066\u308b\u3088\u3046\u306a\u2026\u2026\n\u578b\u30b7\u30b0\u30cb\u30c1\u30e3\u3092\u66f8\u304d\u306a\u304c\u3089\u305d\u308c\u3092\u624b\u304c\u304b\u308a\u306b\u8003\u3048\u3064\u3064\u672c\u4f53\u3092\u66f8\u3044\u3066\u3044\u304f\u306e\u304c\u597d\u304d\u306a\u306e\u3067\u3001\u300c\u6298\u308a\u76ee\u300d\u306e\u30c7\u30fc\u30bf\u578b\u3092\u304d\u3061\u3093\u3068\u5b9a\u7fa9\u305b\u305a\u306bChar\u3084\u3089\u3067\u6697\u9ed9\u306b\u4ee3\u7528\u3059\u308b\u306e\u306f\u597d\u304d\u3067\u306f\u306a\u3044\u306e\u3060\u304c\u3001\u7c21\u5358\u306b\u66f8\u304d\u305f\u3051\u308c\u3070\u3053\u3093\u306a\u611f\u3058\u304b\uff08\u7d19\u306e\u72b6\u614b\u3092String\u3067\u8868\u73fe\u3059\u308b\u306e\u3067\u51fa\u529b\u6574\u5f62\u3068\u304b\u6c17\u306b\u3057\u306a\u3044\u3067\u3044\u3044\u306e\u304c\u5229\u70b9\u306a\u306e\u304b\u306a\u3042\uff09\uff1a\n\nMFVFbis.hs\nmodule Main where\n\nturn = map inv . reverse\n  where inv 'm' = 'V'; inv 'V' = 'm'\n\nunFold f p = let q = turn p in case f of \n  'L' -> q ++ \"V\" ++ p\n  'J' -> p ++ \"V\" ++ q\n  'Z' -> p ++ \"m\" ++ q ++ \"V\" ++ p\n  'S' -> p ++ \"V\" ++ q ++ \"m\" ++ p\n  'U' -> q ++ \"V\" ++ p ++ \"V\" ++ q\n\ndevelop = foldr unFold \"\"\n\nmain = do\n  s <- getContents\n  mapM_ (putStrLn . develop) (lines s)\n\n\n\n\u307f\u305f\u307e\u3093\u307e\u3001\u6a19\u6e96\u5165\u529b\u304b\u3089\u98df\u308f\u305b\u308c\u3070\u6a19\u6e96\u51fa\u529b\u306b\u5410\u304d\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u982d\u304b\u3089\u8003\u3048\u306a\u304c\u308920\u5206\u7a0b\u5ea6\u3067\u305d\u306e\u307e\u307e\u66f8\u304d\u4e0b\u308d\u3057\u305f\u5f53\u521d\u306e\u30f4\u30a1\u30fc\u30b8\u30e7\u30f3\u3002\u60c5\u5f31\u3089\u3057\u304f\u30a2\u30e9\u3060\u3089\u3051\u3060\u304c\u3001\u307e\u3042\u60c5\u5f31\u306a\u306e\u3067\u3053\u3093\u306a\u3082\u306e\u3060\u308d\u3046\u3002\n\nMFVF.hs\nmodule Main where\nimport Data.List\nimport System.Environment (getArgs)\n\ndata Folding = MF | VF \ninstance Show Folding where\n  show f = case f of\n    MF -> \"m\"\n    VF -> \"V\"\n\ntype Paper = [Folding]\n\nturn :: Paper -> Paper\nturn p = map inv $ reverse p\n  where inv MF = VF\n        inv VF = MF\n\nunfolding :: Paper -> Char -> Paper \nunfolding p ch = case ch of \n  'L' -> turn p ++ [VF] ++ p\n  'J' -> p ++ [VF] ++ turn p\n  'Z' -> p ++ [MF] ++ turn p ++ [VF] ++ p\n  'U' -> turn p ++ [VF] ++ p ++ [VF] ++ turn p\n  'S' -> p ++ [VF] ++ turn p ++ [MF] ++ p\n\ndevelop :: String -> Paper\ndevelop s = foldl' (unfolding) [] (reverse s)\n\npprint :: Paper -> String\npprint = concat . map show\n\nmain = do\n  input <- getArgs\n  let s = input !! 0\n  putStrLn $ pprint $ develop s\n\n\n\n\u304a\u307e\u3051 \uff08Data.Sequence\u7248\uff09\n\nMFVFTer.hs\nmodule Main where\n\nimport Prelude hiding (reverse)\nimport Data.Foldable (toList)\nimport Data.Sequence\n\nturn = fmap inv . reverse\n  where inv 'm' = 'V'\n        inv 'V' = 'm'\n\n\nunFold f p = let q = turn p in case f of\n  'L' -> q >< singleton 'V' >< p\n  'J' -> p >< singleton 'V' >< q\n  'Z' -> p >< singleton 'm' >< q >< singleton 'V' >< p\n  'S' -> p >< singleton 'V' >< q >< singleton 'm' >< p\n  'U' -> q >< singleton 'V' >< p >< singleton 'V' >< q\n\ndevelop = foldr unFold empty\n\nmain = do\n  s <- getContents\n  mapM_ (putStrLn . toList . develop) (lines s)\n\n\n\n( \u5143\u30cd\u30bf\u306f http://nabetani.sakura.ne.jp/hena/ord18mafovafo/ )\n( \u4ed6\u306e\u89e3\u7b54\u4f8b\u306f http://qiita.com/Nabetani/items/373105e7fafd12f5e9fd )\n\n\u6700\u521d\u306bMFVF.hs\u3092\u66f8\u304d\u59cb\u3081\u3066\u51fa\u529b\u304c\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\u306e\u78ba\u8a8d\u304c\u7d42\u308f\u308b\u307e\u3067\u3067\u3061\u3087\u3046\u306920\u5206\u3002\n\u3046\u30fc\u3093\u3002\u3053\u308c\u306f\u3061\u3087\u3063\u3068\u7c21\u5358\u3059\u304e\u306a\u3044\u304b\u306a\u2026\u2026\n\u524d\u56de\u306e\u300c\u6298\u3063\u3066\u5207\u308b\u300d\u3092\u66f4\u306b\u7c21\u5358\u306b\u3057\u305f\u3082\u306e\u306b\u306a\u3063\u3066\u308b\u3088\u3046\u306a\u2026\u2026\n\n\u578b\u30b7\u30b0\u30cb\u30c1\u30e3\u3092\u66f8\u304d\u306a\u304c\u3089\u305d\u308c\u3092\u624b\u304c\u304b\u308a\u306b\u8003\u3048\u3064\u3064\u672c\u4f53\u3092\u66f8\u3044\u3066\u3044\u304f\u306e\u304c\u597d\u304d\u306a\u306e\u3067\u3001\u300c\u6298\u308a\u76ee\u300d\u306e\u30c7\u30fc\u30bf\u578b\u3092\u304d\u3061\u3093\u3068\u5b9a\u7fa9\u305b\u305a\u306b`Char`\u3084\u3089\u3067\u6697\u9ed9\u306b\u4ee3\u7528\u3059\u308b\u306e\u306f\u597d\u304d\u3067\u306f\u306a\u3044\u306e\u3060\u304c\u3001\u7c21\u5358\u306b\u66f8\u304d\u305f\u3051\u308c\u3070\u3053\u3093\u306a\u611f\u3058\u304b\uff08\u7d19\u306e\u72b6\u614b\u3092`String`\u3067\u8868\u73fe\u3059\u308b\u306e\u3067\u51fa\u529b\u6574\u5f62\u3068\u304b\u6c17\u306b\u3057\u306a\u3044\u3067\u3044\u3044\u306e\u304c\u5229\u70b9\u306a\u306e\u304b\u306a\u3042\uff09\uff1a\n\n```hs:MFVFbis.hs\nmodule Main where\n\nturn = map inv . reverse\n  where inv 'm' = 'V'; inv 'V' = 'm'\n\nunFold f p = let q = turn p in case f of \n  'L' -> q ++ \"V\" ++ p\n  'J' -> p ++ \"V\" ++ q\n  'Z' -> p ++ \"m\" ++ q ++ \"V\" ++ p\n  'S' -> p ++ \"V\" ++ q ++ \"m\" ++ p\n  'U' -> q ++ \"V\" ++ p ++ \"V\" ++ q\n\ndevelop = foldr unFold \"\"\n\nmain = do\n  s <- getContents\n  mapM_ (putStrLn . develop) (lines s)\n\n```\n\n\u307f\u305f\u307e\u3093\u307e\u3001\u6a19\u6e96\u5165\u529b\u304b\u3089\u98df\u308f\u305b\u308c\u3070\u6a19\u6e96\u51fa\u529b\u306b\u5410\u304d\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u982d\u304b\u3089\u8003\u3048\u306a\u304c\u308920\u5206\u7a0b\u5ea6\u3067\u305d\u306e\u307e\u307e\u66f8\u304d\u4e0b\u308d\u3057\u305f\u5f53\u521d\u306e\u30f4\u30a1\u30fc\u30b8\u30e7\u30f3\u3002\u60c5\u5f31\u3089\u3057\u304f\u30a2\u30e9\u3060\u3089\u3051\u3060\u304c\u3001\u307e\u3042\u60c5\u5f31\u306a\u306e\u3067\u3053\u3093\u306a\u3082\u306e\u3060\u308d\u3046\u3002\n\n```hs:MFVF.hs\nmodule Main where\nimport Data.List\nimport System.Environment (getArgs)\n\ndata Folding = MF | VF \ninstance Show Folding where\n  show f = case f of\n    MF -> \"m\"\n    VF -> \"V\"\n\ntype Paper = [Folding]\n\nturn :: Paper -> Paper\nturn p = map inv $ reverse p\n  where inv MF = VF\n        inv VF = MF\n\nunfolding :: Paper -> Char -> Paper \nunfolding p ch = case ch of \n  'L' -> turn p ++ [VF] ++ p\n  'J' -> p ++ [VF] ++ turn p\n  'Z' -> p ++ [MF] ++ turn p ++ [VF] ++ p\n  'U' -> turn p ++ [VF] ++ p ++ [VF] ++ turn p\n  'S' -> p ++ [VF] ++ turn p ++ [MF] ++ p\n\ndevelop :: String -> Paper\ndevelop s = foldl' (unfolding) [] (reverse s)\n\npprint :: Paper -> String\npprint = concat . map show\n\nmain = do\n  input <- getArgs\n  let s = input !! 0\n  putStrLn $ pprint $ develop s\n\n```\n\n\u304a\u307e\u3051 \uff08Data.Sequence\u7248\uff09\n\n```hs:MFVFTer.hs\nmodule Main where\n\nimport Prelude hiding (reverse)\nimport Data.Foldable (toList)\nimport Data.Sequence\n\nturn = fmap inv . reverse\n  where inv 'm' = 'V'\n        inv 'V' = 'm'\n\n\nunFold f p = let q = turn p in case f of\n  'L' -> q >< singleton 'V' >< p\n  'J' -> p >< singleton 'V' >< q\n  'Z' -> p >< singleton 'm' >< q >< singleton 'V' >< p\n  'S' -> p >< singleton 'V' >< q >< singleton 'm' >< p\n  'U' -> q >< singleton 'V' >< p >< singleton 'V' >< q\n\ndevelop = foldr unFold empty\n\nmain = do\n  s <- getContents\n  mapM_ (putStrLn . toList . develop) (lines s)\n\n```\n", "tags": ["Haskell", "\u60c5\u5f31"]}