{"context": "\n\n\u306f\u3058\u3081\u306b\niOS 9 \u3088\u308a NSURLConnection \u304c DEPRECATED \u3068\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001\u65e2\u5b58\u30b3\u30fc\u30c9\u3092 NSURLSession \u306b\u79fb\u884c\u3059\u308b\u5834\u5408\u306b\u3064\u3044\u3066\u8003\u5bdf\u3002\n\nDelegate\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\n\n\u975e\u540c\u671f\u51e6\u7406\n\u975e\u540c\u671f\u51e6\u7406\uff08+ sendAsynchronousRequest:queue:completionHandler:\uff09\u306e\u5834\u5408\u306f\u3001\u7279\u306b\u4f55\u3082\u8003\u3048\u305a\u306bBlocks\u306e\u4e2d\u8eab\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nNetworkManager.m\n    [NSURLConnection sendAsynchronousRequest:request queue:[NSOperationQueue mainQueue] completionHandler:^(NSURLResponse * _Nullable response, NSData * _Nullable data, NSError * _Nullable connectionError) {\n        if (connectionError) {\n            [[NSNotificationCenter defaultCenter] postNotificationName:@\"LoadDataFailed\" object:nil];\n            return;\n        }\n        NSInteger statusCode = [(NSHTTPURLResponse *)respnse statusCode];\n        if (statusCode != 200) {\n            [[NSNotificationCenter defaultCenter] postNotificationName:@\"LoadDataFailed\" object:nil];\n            return;\n        }\n\n        [[NSNotificationCenter defaultCenter] postNotificationName:@\"LoadDataSuccess\" object:data];\n    }];\n\n    NSData *data = [NSURLConnection sendSynchronousRequest:request returningResponse:&respnse error:&error];\n\n\n\u4e0a\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306e\u5834\u5408\u3060\u3068\u3001\u4e0b\u306e\u3088\u3046\u306b completionHandler: \u3092\u307b\u307c\u305d\u306e\u307e\u307e\u6d41\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nNetworkManager.m\n    NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration ephemeralSessionConfiguration];\n    NSURLSession *session = [NSURLSession sessionWithConfiguration:configuration];\n    NSURLSessionDataTask *task = [session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {\n        // connectionError -> error\n        if (error) {\n            [[NSNotificationCenter defaultCenter] postNotificationName:@\"LoadDataFailed\" object:nil];\n            return;\n        }\n        NSInteger statusCode = [(NSHTTPURLResponse *)respnse statusCode];\n        if (statusCode != 200) {\n            [[NSNotificationCenter defaultCenter] postNotificationName:@\"LoadDataFailed\" object:nil];\n            return;\n        }\n\n        [[NSNotificationCenter defaultCenter] postNotificationName:@\"LoadDataSuccess\" object:data];\n    }];\n    [task resume];\n\n\n\u305f\u3060\u3001\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u51e6\u7406\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001View\u306e\u64cd\u4f5c\u3092\u3059\u308b\u5834\u5408\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u540c\u671f\u51e6\u7406\n\u540c\u671f\u51e6\u7406\uff08+ sendSynchronousRequest:returningResponse:error:\uff09\u306e\u5834\u5408\u306f\u3001 NSURLSessionTask \u304c\u975e\u540c\u671f\u51e6\u7406\u3067\u3042\u308b\u305f\u3081\u3001\u3053\u306e\u307e\u307e\u3067\u306f\u90fd\u5408\u304c\u60aa\u3044\u3067\u3059\u3002\nGCD \u306e\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u30bb\u30de\u30d5\u30a9\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3057\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u540c\u671f\u51e6\u7406\u306b\u3059\u308b\u3053\u3068\u3067\u5bfe\u5fdc\u3057\u307e\u3059\u3002\n\nNetworkManager.m\n- (NSString *)connectionSyncRequest:(NSString *)targetUrl\n{\n    NSURL *url = [NSURL URLWithString:targetUrl];\n    NSURLRequest *urlRequest = [NSURLRequest requestWithURL:url];\n\n    NSURLResponse *response = nil;\n    NSError *error = nil;\n    NSData *data = [NSURLConnection sendSynchronousRequest:urlRequest returningResponse:&response error:&error];\n\n    if (error) {\n        NSLog(@\"%@\", error);\n        return nil;\n    }\n\n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *)response;\n    if (httpResponse.statusCode != 200) {\n        return nil;\n    }\n\n    NSString *receivedMessage = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];\n\n    return receivedMessage;\n}\n\n\n\u4e0a\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306e\u5834\u5408\u3067\u306f\u3001\u4e0b\u306e\u3088\u3046\u306b\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u30bb\u30de\u30d5\u30a9\u3092\u5229\u7528\u3057\u3066\u3001\u540c\u671f\u51e6\u7406\u306b\u3057\u307e\u3059\u3002\n\nNetworkManager.m\n- (NSString *)sessionSyncRequest:(NSString *)targetUrl\n{\n    dispatch_semaphore_t semaphore = dispatch_semaphore_create(0);\n\n    NSURL *url = [NSURL URLWithString:targetUrl];\n    NSURLRequest *urlRequest = [NSURLRequest requestWithURL:url];\n\n    __block NSString *receivedMessage = nil;\n    NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration ephemeralSessionConfiguration];\n    NSURLSession *session = [NSURLSession sessionWithConfiguration:configuration];\n    NSURLSessionDataTask *task = [session dataTaskWithRequest:urlRequest completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {\n        NSLog(@\"did finish download.\\n%@\", response.URL);\n        if (error) {\n            NSLog(@\"%@\", error);\n            dispatch_semaphore_signal(semaphore);\n            return;\n        }\n\n        NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *)response;\n        if (httpResponse.statusCode != 200) {\n            dispatch_semaphore_signal(semaphore);\n            return;\n        }\n        receivedMessage = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];\n        dispatch_semaphore_signal(semaphore);\n\n    }];\n    [task resume];\n\n    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);\n\n    return receivedMessage;\n}\n\n\n\nDelegate\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\nDelegate \u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u3082\u3001\u308f\u308a\u3068\u3059\u3093\u306a\u308a\u79fb\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nNetworkManager.m\n- (void)sessionAsyncRequest:(NSString *)targetUrl\n{\n    NSURL *url = [NSURL URLWithString:targetUrl];\n    NSURLRequest *urlRequest = [NSURLRequest requestWithURL:url];\n\n    NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration ephemeralSessionConfiguration];\n    NSURLSession *session = [NSURLSession sessionWithConfiguration:configuration];\n    NSURLSessionDataTask *task = [session dataTaskWithRequest:urlRequest completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {\n        NSLog(@\"did finish download.\\n%@\", response.URL);\n        if (error) {\n            NSLog(@\"%@\", error);\n            [self connection:nil didFailWithError:error];\n            return;\n        }\n\n        NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *)response;\n        if (httpResponse.statusCode != 200) {\n            [self connection:nil didFailWithError:nil];\n            return;\n        }\n\n        self.receivedData = [NSMutableData dataWithData:data];\n        [self connectionDidFinishLoading:nil];\n    }];\n    [task resume];\n}\n\n- (void)connectionDidFinishLoading:(NSURLConnection *)connection\n{\n    // \u6b63\u5e38\u7d42\u4e86\u6642\u306e\u51e6\u7406\n}\n\n- (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error\n{\n    // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n}\n\n\n# \u306f\u3058\u3081\u306b\niOS 9 \u3088\u308a NSURLConnection \u304c DEPRECATED \u3068\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001\u65e2\u5b58\u30b3\u30fc\u30c9\u3092 NSURLSession \u306b\u79fb\u884c\u3059\u308b\u5834\u5408\u306b\u3064\u3044\u3066\u8003\u5bdf\u3002\n\n# Delegate\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\n## \u975e\u540c\u671f\u51e6\u7406\n\u975e\u540c\u671f\u51e6\u7406\uff08+ sendAsynchronousRequest:queue:completionHandler:\uff09\u306e\u5834\u5408\u306f\u3001\u7279\u306b\u4f55\u3082\u8003\u3048\u305a\u306bBlocks\u306e\u4e2d\u8eab\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```objc:NetworkManager.m\n    [NSURLConnection sendAsynchronousRequest:request queue:[NSOperationQueue mainQueue] completionHandler:^(NSURLResponse * _Nullable response, NSData * _Nullable data, NSError * _Nullable connectionError) {\n        if (connectionError) {\n            [[NSNotificationCenter defaultCenter] postNotificationName:@\"LoadDataFailed\" object:nil];\n            return;\n        }\n        NSInteger statusCode = [(NSHTTPURLResponse *)respnse statusCode];\n        if (statusCode != 200) {\n            [[NSNotificationCenter defaultCenter] postNotificationName:@\"LoadDataFailed\" object:nil];\n            return;\n        }\n        \n        [[NSNotificationCenter defaultCenter] postNotificationName:@\"LoadDataSuccess\" object:data];\n    }];\n\n    NSData *data = [NSURLConnection sendSynchronousRequest:request returningResponse:&respnse error:&error];\n```\n\n\u4e0a\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306e\u5834\u5408\u3060\u3068\u3001\u4e0b\u306e\u3088\u3046\u306b completionHandler: \u3092\u307b\u307c\u305d\u306e\u307e\u307e\u6d41\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```objc:NetworkManager.m\n    NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration ephemeralSessionConfiguration];\n    NSURLSession *session = [NSURLSession sessionWithConfiguration:configuration];\n    NSURLSessionDataTask *task = [session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {\n        // connectionError -> error\n        if (error) {\n            [[NSNotificationCenter defaultCenter] postNotificationName:@\"LoadDataFailed\" object:nil];\n            return;\n        }\n        NSInteger statusCode = [(NSHTTPURLResponse *)respnse statusCode];\n        if (statusCode != 200) {\n            [[NSNotificationCenter defaultCenter] postNotificationName:@\"LoadDataFailed\" object:nil];\n            return;\n        }\n        \n        [[NSNotificationCenter defaultCenter] postNotificationName:@\"LoadDataSuccess\" object:data];\n    }];\n    [task resume];\n```\n\n\u305f\u3060\u3001\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u51e6\u7406\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001View\u306e\u64cd\u4f5c\u3092\u3059\u308b\u5834\u5408\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n## \u540c\u671f\u51e6\u7406\n\u540c\u671f\u51e6\u7406\uff08+ sendSynchronousRequest:returningResponse:error:\uff09\u306e\u5834\u5408\u306f\u3001 NSURLSessionTask \u304c\u975e\u540c\u671f\u51e6\u7406\u3067\u3042\u308b\u305f\u3081\u3001\u3053\u306e\u307e\u307e\u3067\u306f\u90fd\u5408\u304c\u60aa\u3044\u3067\u3059\u3002\nGCD \u306e\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u30bb\u30de\u30d5\u30a9\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3057\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u540c\u671f\u51e6\u7406\u306b\u3059\u308b\u3053\u3068\u3067\u5bfe\u5fdc\u3057\u307e\u3059\u3002\n\n```objc:NetworkManager.m\n- (NSString *)connectionSyncRequest:(NSString *)targetUrl\n{\n    NSURL *url = [NSURL URLWithString:targetUrl];\n    NSURLRequest *urlRequest = [NSURLRequest requestWithURL:url];\n\n    NSURLResponse *response = nil;\n    NSError *error = nil;\n    NSData *data = [NSURLConnection sendSynchronousRequest:urlRequest returningResponse:&response error:&error];\n    \n    if (error) {\n        NSLog(@\"%@\", error);\n        return nil;\n    }\n    \n    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *)response;\n    if (httpResponse.statusCode != 200) {\n        return nil;\n    }\n\n    NSString *receivedMessage = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];\n\n    return receivedMessage;\n}\n```\n\n\u4e0a\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306e\u5834\u5408\u3067\u306f\u3001\u4e0b\u306e\u3088\u3046\u306b\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u30bb\u30de\u30d5\u30a9\u3092\u5229\u7528\u3057\u3066\u3001\u540c\u671f\u51e6\u7406\u306b\u3057\u307e\u3059\u3002\n\n```objc:NetworkManager.m\n- (NSString *)sessionSyncRequest:(NSString *)targetUrl\n{\n    dispatch_semaphore_t semaphore = dispatch_semaphore_create(0);\n\n    NSURL *url = [NSURL URLWithString:targetUrl];\n    NSURLRequest *urlRequest = [NSURLRequest requestWithURL:url];\n\n    __block NSString *receivedMessage = nil;\n    NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration ephemeralSessionConfiguration];\n    NSURLSession *session = [NSURLSession sessionWithConfiguration:configuration];\n    NSURLSessionDataTask *task = [session dataTaskWithRequest:urlRequest completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {\n        NSLog(@\"did finish download.\\n%@\", response.URL);\n        if (error) {\n            NSLog(@\"%@\", error);\n            dispatch_semaphore_signal(semaphore);\n            return;\n        }\n        \n        NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *)response;\n        if (httpResponse.statusCode != 200) {\n            dispatch_semaphore_signal(semaphore);\n            return;\n        }\n        receivedMessage = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];\n        dispatch_semaphore_signal(semaphore);\n\n    }];\n    [task resume];\n\n    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);\n\n    return receivedMessage;\n}\n```\n\n# Delegate\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\nDelegate \u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u3082\u3001\u308f\u308a\u3068\u3059\u3093\u306a\u308a\u79fb\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```objc:NetworkManager.m\n- (void)sessionAsyncRequest:(NSString *)targetUrl\n{\n    NSURL *url = [NSURL URLWithString:targetUrl];\n    NSURLRequest *urlRequest = [NSURLRequest requestWithURL:url];\n\n    NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration ephemeralSessionConfiguration];\n    NSURLSession *session = [NSURLSession sessionWithConfiguration:configuration];\n    NSURLSessionDataTask *task = [session dataTaskWithRequest:urlRequest completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {\n        NSLog(@\"did finish download.\\n%@\", response.URL);\n        if (error) {\n            NSLog(@\"%@\", error);\n            [self connection:nil didFailWithError:error];\n            return;\n        }\n        \n        NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *)response;\n        if (httpResponse.statusCode != 200) {\n            [self connection:nil didFailWithError:nil];\n            return;\n        }\n\n        self.receivedData = [NSMutableData dataWithData:data];\n        [self connectionDidFinishLoading:nil];\n    }];\n    [task resume];\n}\n\n- (void)connectionDidFinishLoading:(NSURLConnection *)connection\n{\n    // \u6b63\u5e38\u7d42\u4e86\u6642\u306e\u51e6\u7406\n}\n\n- (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error\n{\n    // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n}\n```\n", "tags": ["iOS", "Network"]}