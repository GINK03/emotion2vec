{"context": " More than 1 year has passed since last update.Wisp currently does not have much of a standard library, but why bother reinventing the wheel?\nWith Mori, you basically have the power of Clojure's data structures in your hands, effectively turning wisp into ClojureScript without the overhead of the entire JVM, plus it loads fast.\n(ns com.hello-world \n  (:require [mori :as m]))\n(def a (m.vector [1 2 3]))\n(console.log (last (m.cons a 4)))\n;=4\n\nOr maybe you're just looking for some functional programming library to help you out as you do your work, like Rambda or lodash-fp.\n(ns com.hello-world \n  (:require [ramda :as r]))\n(def a [1 2 3])\n(console.log (r.apply (Math.max a))) ;Showcasing interop from different libraries\n;=3\n\nSo basically you can just mix and match any of the libraries available on the web on your own by doing npm install {library-name} --save and then use them directly from wisp, while enjoying the power of homoiconicity. \nWisp currently does not have much of a standard library, but why bother reinventing the wheel?\n\nWith [Mori](http://swannodette.github.io/mori/), you basically have the power of Clojure's data structures in your hands, effectively turning wisp into ClojureScript without the overhead of the entire JVM, plus it loads fast.\n\n```clj\n(ns com.hello-world \n  (:require [mori :as m]))\n(def a (m.vector [1 2 3]))\n(console.log (last (m.cons a 4)))\n;=4\n```\n\nOr maybe you're just looking for some functional programming library to help you out as you do your work, like [Rambda](http://ramdajs.com/) or [lodash-fp](https://github.com/lodash/lodash-fp/).\n\n```clj\n(ns com.hello-world \n  (:require [ramda :as r]))\n(def a [1 2 3])\n(console.log (r.apply (Math.max a))) ;Showcasing interop from different libraries\n;=3\n```\n\nSo basically you can just mix and match any of the libraries available on the web on your own by doing `npm install {library-name} --save` and then use them directly from wisp, while enjoying the power of homoiconicity. \n", "tags": ["wisp", "lisp", "JavaScript"]}